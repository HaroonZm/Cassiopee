================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:01:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from typing import List, Optional, Tuple, Iterator
import sys

class CardSet:
    def __init__(self, scores: List[int]) -> None:
        self.scores = scores

    @property
    def total_score(self) -> int:
        return sum(self.scores)

    def __iter__(self):
        return iter(self.scores)

class ExchangeCriterion:
    def __init__(self, taro: CardSet, hanako: CardSet) -> None:
        self.taro = taro
        self.hanako = hanako
        self.difference = self.taro.total_score - self.hanako.total_score

    def feasible_pairs(self) -> Iterator[Tuple[int, int]]:
        # Find pairs (t, h) such that total after exchange is equal
        # total_t - t + h == total_h - h + t
        # rearranged: 2*(t - h) == difference
        # So, difference must be even and (t - h) == diff//2
        if self.difference % 2 != 0:
            return
        target_diff = self.difference // 2
        # Use set for Hanako's cards for fast lookup of candidates
        hanako_scores_set = set(self.hanako.scores)
        for t in self.taro.scores:
            h = t - target_diff
            if h in hanako_scores_set:
                yield (t, h)

class ExchangeDecision:
    def __init__(self, pairs: Iterator[Tuple[int,int]]) -> None:
        self.pairs = pairs

    def best_exchange(self) -> Optional[Tuple[int,int]]:
        # Select pair with minimal sum according to problem statement
        best_pair = None
        best_sum = None
        for t,h in self.pairs:
            s = t + h
            if best_sum is None or s < best_sum:
                best_sum = s
                best_pair = (t,h)
        return best_pair

class InputParser:
    def __init__(self, input_lines: List[str]) -> None:
        self.lines = input_lines
        self.index = 0

    def __iter__(self) -> Iterator[Tuple[CardSet, CardSet]]:
        while True:
            if self.index >= len(self.lines):
                break
            n_m_line = self.lines[self.index].strip()
            self.index +=1
            if n_m_line == '0 0':
                break
            n_str,m_str = n_m_line.split()
            n,m = int(n_str), int(m_str)
            taro_scores = []
            hanako_scores = []
            for _ in range(n):
                taro_scores.append(int(self.lines[self.index].strip()))
                self.index +=1
            for _ in range(m):
                hanako_scores.append(int(self.lines[self.index].strip()))
                self.index +=1
            yield CardSet(taro_scores), CardSet(hanako_scores)

class EqualTotalScoreSolver:
    def __init__(self, datasets: Iterator[Tuple[CardSet, CardSet]]) -> None:
        self.datasets = datasets

    def solve(self) -> List[str]:
        results = []
        for taro, hanako in self.datasets:
            criterion = ExchangeCriterion(taro, hanako)
            pairs = criterion.feasible_pairs()
            decision = ExchangeDecision(pairs)
            answer = decision.best_exchange()
            if answer is None:
                results.append("-1")
            else:
                results.append(f"{answer[0]} {answer[1]}")
        return results

def main() -> None:
    input_lines = sys.stdin.read().strip().split('\n')
    parser = InputParser(input_lines)
    solver = EqualTotalScoreSolver(iter(parser))
    results = solver.solve()
    print("\n".join(results))

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' typing' (ID: 34152)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.3780607581138611
    2. 'List' → logprob: -1.7530608177185059
    3. 'Any' → logprob: -2.378060817718506
    4. ' Any' → logprob: -3.128060817718506
    5. ' Optional' → logprob: -6.003060817718506
    6. 'Optional' → logprob: -6.253060817718506
    7. ' Union' → logprob: -8.378060340881348
    8. ' Generator' → logprob: -9.378060340881348
    9. 'Iterable' → logprob: -9.378060340881348
    10. 'Union' → logprob: -9.503060340881348

Token 4: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5938340425491333
    2. '```' → logprob: -1.3438340425491333
    3. ',' → logprob: -2.7188339233398438
    4. '[' → logprob: -2.9688339233398438
    5. '\' → logprob: -3.5938339233398438
    6. '\n' → logprob: -3.9688339233398438
    7. '\[' → logprob: -5.343833923339844
    8. 'import' → logprob: -5.343833923339844
    9. ':' → logprob: -5.968833923339844
    10. 'a' → logprob: -6.343833923339844

Token 5: ' Optional' (ID: 19351)
  Prédit: ' Optional'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.4498969316482544
    2. 'Optional' → logprob: -1.0748969316482544
    3. ' Dict' → logprob: -4.699896812438965
    4. 'Dict' → logprob: -4.949896812438965
    5. 'Tuple' → logprob: -5.824896812438965
    6. ' Tuple' → logprob: -6.949896812438965
    7. ' Union' → logprob: -7.449896812438965
    8. 'Union' → logprob: -9.324896812438965
    9. 'Iterable' → logprob: -10.074896812438965
    10. 'Any' → logprob: -10.449896812438965

Token 6: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8157945871353149
    2. '```' → logprob: -0.9407945871353149
    3. ',' → logprob: -2.6907944679260254
    4. '[' → logprob: -3.5657944679260254
    5. 'class' → logprob: -3.8157944679260254
    6. 'import' → logprob: -4.065794467926025
    7. '\' → logprob: -4.815794467926025
    8. '\n' → logprob: -4.815794467926025
    9. '`' → logprob: -5.815794467926025
    10. ':' → logprob: -6.065794467926025

Token 7: ' Tuple' (ID: 50841)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.8059410452842712
    2. ' Union' → logprob: -1.305941104888916
    3. 'Union' → logprob: -1.805941104888916
    4. ' Dict' → logprob: -2.555941104888916
    5. 'Tuple' → logprob: -3.680941104888916
    6. 'Any' → logprob: -5.430941104888916
    7. ' Tuple' → logprob: -5.555941104888916
    8. 'Literal' → logprob: -6.930941104888916
    9. 'Iterable' → logprob: -7.305941104888916
    10. ' Any' → logprob: -7.430941104888916

Token 8: ',' (ID: 11)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08899159729480743
    2. '[' → logprob: -2.963991641998291
    3. '```' → logprob: -4.213991641998291
    4. ',' → logprob: -5.463991641998291
    5. 'd' → logprob: -5.588991641998291
    6. ':' → logprob: -6.213991641998291
    7. '(' → logprob: -6.338991641998291
    8. 'import' → logprob: -6.713991641998291
    9. '`' → logprob: -6.713991641998291
    10. 'D' → logprob: -7.088991641998291

Token 9: ' Iterator' (ID: 41994)
  Prédit: 'Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Dict' → logprob: -0.413129061460495
    2. ' Dict' → logprob: -1.2881290912628174
    3. ' Union' → logprob: -3.9131290912628174
    4. 'Union' → logprob: -4.163128852844238
    5. 'Set' → logprob: -4.538128852844238
    6. 'dict' → logprob: -5.538128852844238
    7. 'Any' → logprob: -5.663128852844238
    8. 'Iterable' → logprob: -5.788128852844238
    9. 'Callable' → logprob: -6.663128852844238
    10. ' Callable' → logprob: -7.038128852844238

Token 10: '
' (ID: 198)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -1.006601095199585
    2. 'def' → logprob: -1.631601095199585
    3. ',' → logprob: -2.256601095199585
    4. ':' → logprob: -2.506601095199585
    5. '\' → logprob: -2.631601095199585
    6. '[' → logprob: -3.006601095199585
    7. '(' → logprob: -3.131601095199585
    8. '\n' → logprob: -3.631601095199585
    9. '`' → logprob: -4.131601333618164
    10. 'a' → logprob: -4.881601333618164

Token 11: 'import' (ID: 561)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.8885342478752136
    2. '```' → logprob: -1.3885343074798584
    3. ',' → logprob: -1.7635343074798584
    4. ':' → logprob: -3.0135343074798584
    5. '\n' → logprob: -3.0135343074798584
    6. 'import' → logprob: -3.8885343074798584
    7. '\' → logprob: -4.013534069061279
    8. '[' → logprob: -4.763534069061279
    9. '`' → logprob: -5.263534069061279
    10. '

' → logprob: -5.888534069061279

Token 12: ' sys' (ID: 12228)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.1712520271539688
    2. ' typing' → logprob: -2.2962520122528076
    3. ' sys' → logprob: -3.4212520122528076
    4. ' re' → logprob: -4.421252250671387
    5. ' itertools' → logprob: -4.671252250671387
    6. ' collections' → logprob: -7.046252250671387
    7. ' requests' → logprob: -7.296252250671387
    8. ' math' → logprob: -8.171252250671387
    9. ' ' → logprob: -8.421252250671387
    10. ' numpy' → logprob: -8.546252250671387

Token 13: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4619729220867157
    2. '```' → logprob: -1.586972951889038
    3. '\n' → logprob: -3.086972951889038
    4. '\' → logprob: -3.461972951889038
    5. '
' → logprob: -3.461972951889038
    6. ',' → logprob: -3.836972951889038
    7. 'import' → logprob: -4.586972713470459
    8. '<|end|>' → logprob: -5.086972713470459
    9. '.
' → logprob: -5.586972713470459
    10. '

' → logprob: -5.711972713470459

Token 14: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13989068567752838
    2. '```' → logprob: -2.764890670776367
    3. '\n' → logprob: -3.764890670776367
    4. '\' → logprob: -4.264890670776367
    5. '`' → logprob: -4.889890670776367
    6. '
' → logprob: -5.264890670776367
    7. 'import' → logprob: -5.514890670776367
    8. '.' → logprob: -6.014890670776367
    9. 'de' → logprob: -6.264890670776367
    10. '

' → logprob: -6.639890670776367

Token 15: ' Card' (ID: 9958)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06815242767333984
    2. ' My' → logprob: -3.44315242767334
    3. ' Space' → logprob: -4.44315242767334
    4. ' Parser' → logprob: -5.19315242767334
    5. ' Data' → logprob: -5.44315242767334
    6. ' User' → logprob: -5.81815242767334
    7. ' Basic' → logprob: -6.56815242767334
    8. ' System' → logprob: -7.44315242767334
    9. ' Processor' → logprob: -7.44315242767334
    10. ' A' → logprob: -7.94315242767334

Token 16: 'Set' (ID: 1984)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001600347168277949
    2. '(' → logprob: -9.250160217285156
    3. ' :' → logprob: -9.875160217285156
    4. ':**' → logprob: -12.125160217285156
    5. '():' → logprob: -13.125160217285156
    6. ':
' → logprob: -13.625160217285156
    7. '):' → logprob: -14.250160217285156
    8. '(Card' → logprob: -15.125160217285156
    9. '```' → logprob: -15.125160217285156
    10. '#:' → logprob: -15.250160217285156

Token 17: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006843361537903547
    2. '(' → logprob: -5.006843566894531
    3. ' :' → logprob: -9.756843566894531
    4. '():' → logprob: -10.881843566894531
    5. '(object' → logprob: -11.756843566894531
    6. '):' → logprob: -12.131843566894531
    7. '<|end|>' → logprob: -12.131843566894531
    8. '```' → logprob: -12.256843566894531
    9. '[' → logprob: -12.756843566894531
    10. ':
' → logprob: -12.881843566894531

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1900017112493515
    2. ':' → logprob: -1.9400017261505127
    3. '    ' → logprob: -4.815001487731934
    4. ' ' → logprob: -5.065001487731934
    5. ' :' → logprob: -5.315001487731934
    6. '(' → logprob: -5.440001487731934
    7. ' def' → logprob: -6.440001487731934
    8. '```' → logprob: -7.190001487731934
    9. '<|end|>' → logprob: -7.565001487731934
    10. 'def' → logprob: -7.690001487731934

Token 19: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.22676873207092285
    2. '   ' → logprob: -2.601768732070923
    3. 'def' (adapté à ' def') → logprob: -2.726768732070923
    4. '    ' → logprob: -3.351768732070923
    5. ' ' → logprob: -4.101768493652344
    6. ' pass' → logprob: -5.601768493652344
    7. 'class' → logprob: -5.726768493652344
    8. '    
' → logprob: -6.101768493652344
    9. '     
' → logprob: -7.726768493652344
    10. ' 
' → logprob: -7.851768493652344

Token 20: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0115047013387084
    2. 'itialize' → logprob: -4.636504650115967
    3. ' _' → logprob: -7.386504650115967
    4. ' ' → logprob: -7.636504650115967
    5. '__' → logprob: -8.136505126953125
    6. ' init' → logprob: -9.261505126953125
    7. ' def' → logprob: -10.261505126953125
    8. 'itial' → logprob: -10.261505126953125
    9. 'ialize' → logprob: -10.386505126953125
    10. 'icate' → logprob: -10.886505126953125

Token 21: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'ini' → logprob: -15.75
    3. 'in' → logprob: -20.0
    4. ' init' → logprob: -20.0
    5. 'int' → logprob: -20.25
    6. 'inite' → logprob: -20.375
    7. '_init' → logprob: -20.75
    8. 'i' → logprob: -21.75
    9. 'innit' → logprob: -21.75
    10. 'inti' → logprob: -21.875

Token 22: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.04101601615548134
    2. '(' → logprob: -3.541016101837158
    3. '__' → logprob: -5.416016101837158
    4. '(self' → logprob: -5.916016101837158
    5. ' (' → logprob: -6.041016101837158
    6. '__(
' → logprob: -6.666016101837158
    7. '__((' → logprob: -8.791015625
    8. '_(' → logprob: -9.791015625
    9. '__(*' → logprob: -10.416015625
    10. '<|end|>' → logprob: -10.416015625

Token 23: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010349531657993793
    2. ' self' → logprob: -6.876034736633301
    3. ')' → logprob: -13.5010347366333
    4. '(self' → logprob: -15.3760347366333
    5. ' ' → logprob: -15.6260347366333
    6. '   ' → logprob: -16.001035690307617
    7. '	self' → logprob: -16.251035690307617
    8. '_self' → logprob: -17.126035690307617
    9. ',self' → logprob: -17.126035690307617
    10. 's' → logprob: -17.376035690307617

Token 24: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07688242942094803
    2. ' ,' → logprob: -2.9518823623657227
    3. 'self' → logprob: -4.326882362365723
    4. ' self' → logprob: -5.701882362365723
    5. ')' → logprob: -5.826882362365723
    6. ' )' → logprob: -7.076882362365723
    7. ' ' → logprob: -7.326882362365723
    8. ',self' → logprob: -8.076882362365723
    9. '(self' → logprob: -8.701882362365723
    10. '_self' → logprob: -9.326882362365723

Token 25: ' scores' (ID: 18923)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7932109236717224
    2. 'self' → logprob: -0.9182109236717224
    3. ' cards' → logprob: -2.543210983276367
    4. 'cards' → logprob: -2.668210983276367
    5. ')' → logprob: -9.418210983276367
    6. ' card' → logprob: -10.043210983276367
    7. 'card' → logprob: -10.168210983276367
    8. 'deck' → logprob: -10.168210983276367
    9. ' deck' → logprob: -10.418210983276367
    10. '   ' → logprob: -10.418210983276367

Token 26: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.264322317088954e-05
    2. '=' → logprob: -10.750052452087402
    3. '):' → logprob: -11.250052452087402
    4. ')' → logprob: -11.375052452087402
    5. ' :' → logprob: -12.750052452087402
    6. '=None' → logprob: -13.625052452087402
    7. ':list' → logprob: -14.000052452087402
    8. ',' → logprob: -14.375052452087402
    9. '_:' → logprob: -15.250052452087402
    10. ' =' → logprob: -15.500052452087402

Token 27: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.010664930567145348
    2. ' Optional' → logprob: -4.760664939880371
    3. 'List' → logprob: -6.260664939880371
    4. ' dict' → logprob: -10.135664939880371
    5. 'Optional' → logprob: -10.385664939880371
    6. ' Dict' → logprob: -10.760664939880371
    7. ' ' → logprob: -11.010664939880371
    8. ')' → logprob: -11.510664939880371
    9. ' )' → logprob: -11.635664939880371
    10. 'Dict' → logprob: -13.385664939880371

Token 28: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.1517960956552997e-05
    2. '[' → logprob: -11.500011444091797
    3. '[str' → logprob: -14.625011444091797
    4. '<int' → logprob: -15.000011444091797
    5. 'int' → logprob: -15.250011444091797
    6. '[List' → logprob: -16.125011444091797
    7. '[Int' → logprob: -16.250011444091797
    8. ')' → logprob: -18.125011444091797
    9. ']int' → logprob: -18.500011444091797
    10. '```' → logprob: -18.875011444091797

Token 29: '])' (ID: 4636)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.7023859024047852
    2. '])' → logprob: -1.3273859024047852
    3. '],' → logprob: -1.9523859024047852
    4. ']' → logprob: -2.452385902404785
    5. ']:' → logprob: -4.577385902404785
    6. '):' → logprob: -7.577385902404785
    7. ')' → logprob: -8.952385902404785
    8. '[int' → logprob: -9.327385902404785
    9. ']):
' → logprob: -9.577385902404785
    10. ']=' → logprob: -9.577385902404785

Token 30: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00894804298877716
    2. '):' → logprob: -4.758947849273682
    3. ')' → logprob: -9.13394832611084
    4. '->' → logprob: -9.63394832611084
    5. '       ' → logprob: -10.13394832611084
    6. ' ->' → logprob: -10.50894832611084
    7. '():' → logprob: -10.88394832611084
    8. '[' → logprob: -11.13394832611084
    9. '   ' → logprob: -11.13394832611084
    10. ',' → logprob: -11.25894832611084

Token 31: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.011052774265408516
    2. 'None' → logprob: -4.51105260848999
    3. ' ' → logprob: -12.386053085327148
    4. ' int' → logprob: -15.011053085327148
    5. '   ' → logprob: -15.386053085327148
    6. ' none' → logprob: -16.76105308532715
    7. ' ' → logprob: -17.13605308532715
    8. 'int' → logprob: -18.01105308532715
    9. '_None' → logprob: -18.01105308532715
    10. '  ' → logprob: -18.38605308532715

Token 32: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010144683765247464
    2. '):' → logprob: -7.001014232635498
    3. '       ' → logprob: -9.751014709472656
    4. ',' → logprob: -11.376014709472656
    5. '():' → logprob: -11.376014709472656
    6. ' :' → logprob: -11.876014709472656
    7. ':
' → logprob: -12.251014709472656
    8. '<|end|>' → logprob: -12.751014709472656
    9. ':**' → logprob: -13.376014709472656
    10. ')' → logprob: -13.376014709472656

Token 33: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00035143180866725743
    2. 'self' → logprob: -8.500351905822754
    3. '        ' → logprob: -10.250351905822754
    4. '   ' → logprob: -10.500351905822754
    5. ' self' → logprob: -10.500351905822754
    6. '      ' → logprob: -11.250351905822754
    7. '    ' → logprob: -11.750351905822754
    8. '<|end|>' → logprob: -11.875351905822754
    9. ' ' → logprob: -12.125351905822754
    10. ',' → logprob: -13.000351905822754

Token 34: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.5653097629547119
    2. ' self' → logprob: -1.065309762954712
    3. '       ' → logprob: -2.440309762954712
    4. '   ' → logprob: -10.940309524536133
    5. ' ' → logprob: -11.065309524536133
    6. '        ' → logprob: -11.065309524536133
    7. ' ' → logprob: -12.690309524536133
    8. '	self' → logprob: -12.815309524536133
    9. '      ' → logprob: -13.690309524536133
    10. 'super' → logprob: -14.190309524536133

Token 35: '.s' (ID: 640)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.2521269917488098
    2. '.s' → logprob: -1.502126932144165
    3. '.score' → logprob: -9.377126693725586
    4. ' .' → logprob: -10.252126693725586
    5. '.cards' → logprob: -10.377126693725586
    6. '.sc' → logprob: -11.627126693725586
    7. '._' → logprob: -11.627126693725586
    8. '.values' → logprob: -12.377126693725586
    9. '.tokens' → logprob: -12.377126693725586
    10. '.points' → logprob: -13.002126693725586

Token 36: 'cores' (ID: 12071)
  Prédit: 'cores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cores' → logprob: -0.00027099132421426475
    2. 'elf' → logprob: -8.25027084350586
    3. 'scores' → logprob: -12.37527084350586
    4. 'core' → logprob: -13.25027084350586
    5. '_scores' → logprob: -13.37527084350586
    6. '```' → logprob: -14.12527084350586
    7. 'co' → logprob: -15.37527084350586
    8. '   ' → logprob: -15.37527084350586
    9. 'tores' → logprob: -15.75027084350586
    10. '_' → logprob: -15.87527084350586

Token 37: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08058228343725204
    2. '=' → logprob: -2.5805823802948
    3. ':' → logprob: -6.580582141876221
    4. '   ' → logprob: -9.330582618713379
    5. '[:]' → logprob: -9.705582618713379
    6. '[' → logprob: -10.205582618713379
    7. '.append' → logprob: -10.330582618713379
    8. '    ' → logprob: -10.955582618713379
    9. '       ' → logprob: -11.205582618713379
    10. '=[]' → logprob: -11.580582618713379

Token 38: ' scores' (ID: 18923)
  Prédit: ' scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' scores' → logprob: -0.0788973867893219
    2. 'scores' → logprob: -2.578897476196289
    3. ' []' → logprob: -13.453897476196289
    4. ' ' → logprob: -13.578897476196289
    5. '(scores' → logprob: -13.703897476196289
    6. '[]' → logprob: -13.828897476196289
    7. ' [' → logprob: -13.828897476196289
    8. 'score' → logprob: -14.453897476196289
    9. '_scores' → logprob: -14.703897476196289
    10. 'Scores' → logprob: -15.828897476196289

Token 39: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 40: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2228337526321411
    2. '<|end|>' → logprob: -2.0978336334228516
    3. '   ' → logprob: -3.0978336334228516
    4. 'def' → logprob: -4.222833633422852
    5. '    
' → logprob: -4.972833633422852
    6. '<|end|>' → logprob: -5.722833633422852
    7. '.' → logprob: -6.722833633422852
    8. '[' → logprob: -7.097833633422852
    9. ',' → logprob: -7.097833633422852
    10. ' 
' → logprob: -7.222833633422852

Token 41: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00809558853507042
    2. ' def' → logprob: -4.883095741271973
    3. '   ' → logprob: -7.633095741271973
    4. ' ' → logprob: -13.258095741271973
    5. '@property' → logprob: -13.633095741271973
    6. 'de' → logprob: -14.633095741271973
    7. '	def' → logprob: -14.633095741271973
    8. '       ' → logprob: -14.633095741271973
    9. '@' (adapté à ' @') → logprob: -15.508095741271973
    10. '    ' → logprob: -16.008094787597656

Token 42: 'property' (ID: 8813)
  Prédit: 'property'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'property' → logprob: -0.0020621151197701693
    2. 'staticmethod' → logprob: -6.5020623207092285
    3. 'classmethod' → logprob: -7.5020623207092285
    4. 'dat' → logprob: -12.25206184387207
    5. 'pro' → logprob: -13.75206184387207
    6. ' property' → logprob: -14.50206184387207
    7. 'proper' → logprob: -15.12706184387207
    8. '@property' → logprob: -15.37706184387207
    9. 'iterator' → logprob: -15.50206184387207
    10. 'prop' → logprob: -15.75206184387207

Token 43: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.030019370838999748
    2. '   ' → logprob: -3.6550192832946777
    3. ' def' → logprob: -6.280019283294678
    4. '
' → logprob: -6.780019283294678
    5. '<|end|>' → logprob: -8.530019760131836
    6. '<|end|>' → logprob: -8.905019760131836
    7. '    
' → logprob: -9.530019760131836
    8. '[' → logprob: -9.780019760131836
    9. ' ' → logprob: -10.030019760131836
    10. ':' → logprob: -10.655019760131836

Token 44: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.016921311616897583
    2. '
' → logprob: -4.266921520233154
    3. '   ' → logprob: -6.141921520233154
    4. ' def' → logprob: -7.516921520233154
    5. '<|end|>' → logprob: -10.516921043395996
    6. '    
' → logprob: -11.141921043395996
    7. '<|end|>' → logprob: -11.891921043395996
    8. '
' → logprob: -12.891921043395996
    9. '	def' → logprob: -13.891921043395996
    10. '_def' → logprob: -14.141921043395996

Token 45: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.018911393359303474
    2. ' def' → logprob: -4.018911361694336
    3. '
' → logprob: -7.643911361694336
    4. '   ' → logprob: -8.893911361694336
    5. 'max' → logprob: -10.393911361694336
    6. 'score' → logprob: -10.518911361694336
    7. 'total' → logprob: -11.018911361694336
    8. 's' → logprob: -11.143911361694336
    9. 'deck' → logprob: -11.768911361694336
    10. 'scores' → logprob: -11.768911361694336

Token 46: ' total' (ID: 3609)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.9958774447441101
    2. ' length' → logprob: -1.4958775043487549
    3. ' score' → logprob: -1.8708775043487549
    4. ' total' → logprob: -2.245877504348755
    5. ' size' → logprob: -2.870877504348755
    6. ' scores' → logprob: -2.870877504348755
    7. ' cards' → logprob: -4.745877265930176
    8. ' current' → logprob: -4.870877265930176
    9. ' best' → logprob: -5.870877265930176
    10. ' count' → logprob: -6.245877265930176

Token 47: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.0640532523393631
    2. '_' → logprob: -3.3140532970428467
    3. '_scores' → logprob: -3.8140532970428467
    4. '_points' → logprob: -6.439053058624268
    5. '(self' → logprob: -7.439053058624268
    6. '()' → logprob: -8.439053535461426
    7. '_sum' → logprob: -8.689053535461426
    8. '_s' → logprob: -8.939053535461426
    9. '   ' → logprob: -9.439053535461426
    10. '(' → logprob: -9.439053535461426

Token 48: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01891455240547657
    2. '(' → logprob: -4.018914699554443
    3. '()' → logprob: -7.893914699554443
    4. '(s' → logprob: -8.143914222717285
    5. 'self' → logprob: -10.143914222717285
    6. '   ' → logprob: -11.018914222717285
    7. 's' → logprob: -11.143914222717285
    8. ')' → logprob: -11.143914222717285
    9. '       ' → logprob: -12.643914222717285
    10. '(
' → logprob: -12.893914222717285

Token 49: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.28218066692352295
    2. '):' → logprob: -1.407180666923523
    3. '):
' → logprob: -8.157180786132812
    4. ' ):' → logprob: -8.157180786132812
    5. ' )' → logprob: -8.532180786132812
    6. '()' → logprob: -8.907180786132812
    7. '():' → logprob: -9.657180786132812
    8. ':' → logprob: -11.282180786132812
    9. '   ' → logprob: -11.407180786132812
    10. 'self' → logprob: -11.407180786132812

Token 50: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015935307601466775
    2. '->' → logprob: -7.251593589782715
    3. ' ->' → logprob: -7.876593589782715
    4. '):' → logprob: -8.501593589782715
    5. ')' → logprob: -8.751593589782715
    6. '():' → logprob: -9.501593589782715
    7. ')->' → logprob: -11.126593589782715
    8. ':return' → logprob: -11.126593589782715
    9. ' :' → logprob: -11.751593589782715
    10. '(' → logprob: -11.751593589782715

Token 51: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.181982159614563
    2. ' sum' → logprob: -2.0569820404052734
    3. 'int' → logprob: -3.4319820404052734
    4. 'sum' → logprob: -5.306982040405273
    5. ' ' → logprob: -6.806982040405273
    6. ' self' → logprob: -10.056982040405273
    7. '    ' → logprob: -10.681982040405273
    8. ' max' → logprob: -10.931982040405273
    9. ' ' → logprob: -11.056982040405273
    10. '  ' → logprob: -11.056982040405273

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00025430647656321526
    2. ':
' → logprob: -8.50025463104248
    3. '():' → logprob: -10.37525463104248
    4. '):' → logprob: -11.25025463104248
    5. '       ' → logprob: -12.75025463104248
    6. ':return' → logprob: -13.62525463104248
    7. '   ' → logprob: -14.62525463104248
    8. ':
' → logprob: -14.87525463104248
    9. ':**' → logprob: -15.00025463104248
    10. '():
' → logprob: -15.25025463104248

Token 53: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.8232690460281447e-05
    2. ' return' → logprob: -10.500048637390137
    3. 'return' → logprob: -10.875048637390137
    4. '```' → logprob: -14.250048637390137
    5. '   ' → logprob: -15.000048637390137
    6. '           ' → logprob: -15.375048637390137
    7. '      ' → logprob: -16.00004768371582
    8. '        
' → logprob: -16.37504768371582
    9. '
' → logprob: -17.00004768371582
    10. '     ' → logprob: -17.25004768371582

Token 54: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.13497568666934967
    2. ' return' → logprob: -2.3849756717681885
    3. '       ' → logprob: -3.3849756717681885
    4. 'sum' → logprob: -8.25997543334961
    5. '```' → logprob: -11.00997543334961
    6. ' sum' → logprob: -11.63497543334961
    7. 'self' → logprob: -13.00997543334961
    8. '        ' → logprob: -13.38497543334961
    9. '   ' → logprob: -14.00997543334961
    10. '0' → logprob: -14.38497543334961

Token 55: ' sum' (ID: 4215)
  Prédit: ' sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sum' → logprob: -0.185995414853096
    2. ' self' → logprob: -2.43599534034729
    3. 'sum' → logprob: -2.56099534034729
    4. 'self' → logprob: -5.310995578765869
    5. ' max' → logprob: -10.435995101928711
    6. ' ' → logprob: -11.935995101928711
    7. '   ' → logprob: -12.935995101928711
    8. ' int' → logprob: -13.185995101928711
    9. ' ' → logprob: -13.435995101928711
    10. 'max' → logprob: -13.560995101928711

Token 56: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.07889264822006226
    2. '(' → logprob: -2.578892707824707
    3. '(s' → logprob: -13.328892707824707
    4. 'self' → logprob: -14.328892707824707
    5. '(
' → logprob: -15.328892707824707
    6. ' (' → logprob: -15.578892707824707
    7. '(

' → logprob: -16.57889175415039
    8. '(sel' → logprob: -16.95389175415039
    9. ' self' → logprob: -17.20389175415039
    10. '((' → logprob: -17.20389175415039

Token 57: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.2014453113079071
    2. '.' → logprob: -1.7014453411102295
    3. ' .' → logprob: -10.576445579528809
    4. 'scores' → logprob: -12.576445579528809
    5. ').' → logprob: -13.326445579528809
    6. '.score' → logprob: -14.576445579528809
    7. 's' → logprob: -15.451445579528809
    8. ' ' → logprob: -15.951445579528809
    9. ')' → logprob: -16.076444625854492
    10. '_scores' → logprob: -16.826444625854492

Token 58: 'cores' (ID: 12071)
  Prédit: 'cores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cores' → logprob: -0.05531392991542816
    2. 'elf' → logprob: -2.9303138256073
    3. '.s' → logprob: -8.055314064025879
    4. 'scores' → logprob: -9.930314064025879
    5. 'ores' → logprob: -10.305314064025879
    6. 'self' → logprob: -11.305314064025879
    7. 'core' → logprob: -12.555314064025879
    8. 'el' → logprob: -12.805314064025879
    9. 'tores' → logprob: -12.805314064025879
    10. 'elves' → logprob: -12.805314064025879

Token 59: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.2729995988775045e-06
    2. '       ' → logprob: -13.250006675720215
    3. ' )' → logprob: -13.500006675720215
    4. '   ' → logprob: -13.750006675720215
    5. '[' → logprob: -14.250006675720215
    6. ')
' → logprob: -14.375006675720215
    7. '())' → logprob: -14.625006675720215
    8. '[])' → logprob: -15.875006675720215
    9. '))' → logprob: -16.2500057220459
    10. ' ' → logprob: -17.5000057220459

Token 60: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 61: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.3150947093963623
    2. '   ' → logprob: -1.3150947093963623
    3. ' def' → logprob: -6.440094947814941
    4. '    
' → logprob: -8.940094947814941
    5. ' ' → logprob: -10.440094947814941
    6. '@property' → logprob: -10.815094947814941
    7. '@' → logprob: -11.065094947814941
    8. '  ' → logprob: -11.565094947814941
    9. '    ' → logprob: -11.815094947814941
    10. '	def' → logprob: -12.440094947814941

Token 62: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.9240818023681641
    2. ' draw' → logprob: -1.049081802368164
    3. ' get' → logprob: -2.674081802368164
    4. ' add' → logprob: -3.424081802368164
    5. ' cards' → logprob: -3.424081802368164
    6. ' ' → logprob: -3.549081802368164
    7. ' card' → logprob: -4.674081802368164
    8. ' calculate' → logprob: -5.049081802368164
    9. ' __' → logprob: -5.049081802368164
    10. '_draw' → logprob: -5.174081802368164

Token 63: 'iter' (ID: 2340)
  Prédit: 'iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.13102154433727264
    2. 'len' → logprob: -2.131021499633789
    3. 'repr' → logprob: -6.506021499633789
    4. 'getitem' → logprob: -6.881021499633789
    5. 'init' → logprob: -7.131021499633789
    6. 'eq' → logprob: -8.256021499633789
    7. 'contains' → logprob: -8.756021499633789
    8. 'str' → logprob: -9.006021499633789
    9. 'lt' → logprob: -9.256021499633789
    10. 'next' → logprob: -9.506021499633789

Token 64: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.20191456377506256
    2. '__' → logprob: -1.7019145488739014
    3. '__(
' → logprob: -7.9519147872924805
    4. '__((' → logprob: -9.57691478729248
    5. '__('' → logprob: -9.70191478729248
    6. '___' → logprob: -12.57691478729248
    7. '__("' → logprob: -12.57691478729248
    8. '(' → logprob: -12.82691478729248
    9. '__.__' → logprob: -13.07691478729248
    10. '__(*' → logprob: -13.32691478729248

Token 65: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.0280383548888494e-06
    2. ')' → logprob: -14.250000953674316
    3. ' self' → logprob: -15.875000953674316
    4. '       ' → logprob: -17.000001907348633
    5. '   ' → logprob: -17.250001907348633
    6. '
' → logprob: -17.250001907348633
    7. 's' → logprob: -17.625001907348633
    8. '(self' → logprob: -17.875001907348633
    9. '	self' → logprob: -19.500001907348633
    10. '):
' → logprob: -19.500001907348633

Token 66: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3219197690486908
    2. '):' → logprob: -1.5719197988510132
    3. 'self' → logprob: -2.8219196796417236
    4. '):
' → logprob: -5.321919918060303
    5. ',' → logprob: -6.196919918060303
    6. '(self' → logprob: -7.696919918060303
    7. '   ' → logprob: -7.946919918060303
    8. '       ' → logprob: -8.446919441223145
    9. ' ' → logprob: -10.696919441223145
    10. '
' → logprob: -10.821919441223145

Token 67: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23082049190998077
    2. 'return' → logprob: -1.6058205366134644
    3. ' return' → logprob: -5.355820655822754
    4. 'yield' → logprob: -7.730820655822754
    5. '   ' → logprob: -9.230820655822754
    6. '```' → logprob: -9.730820655822754
    7. ' iter' → logprob: -10.605820655822754
    8. 'iter' → logprob: -10.855820655822754
    9. '
' → logprob: -11.605820655822754
    10. ' ' → logprob: -11.855820655822754

Token 68: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.270394891500473
    2. 'iter' → logprob: -1.5203949213027954
    3. '   ' → logprob: -4.270394802093506
    4. 'yield' → logprob: -6.270394802093506
    5. ' iter' → logprob: -6.520394802093506
    6. '       ' → logprob: -7.020394802093506
    7. ' return' → logprob: -10.520395278930664
    8. '```' → logprob: -11.145395278930664
    9. 'for' → logprob: -12.020395278930664
    10. '	iter' → logprob: -12.645395278930664

Token 69: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.023261668160557747
    2. ' iter' → logprob: -3.773261785507202
    3. '(iter' → logprob: -11.773262023925781
    4. '	iter' → logprob: -12.023262023925781
    5. '   ' → logprob: -13.273262023925781
    6. ' ' → logprob: -15.273262023925781
    7. '_iter' → logprob: -15.648262023925781
    8. '```' → logprob: -16.14826202392578
    9. '  ' → logprob: -16.77326202392578
    10. '
' → logprob: -17.39826202392578

Token 70: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.517272024415433e-05
    2. '(' → logprob: -9.500075340270996
    3. ' (' → logprob: -15.875075340270996
    4. '(
' → logprob: -17.12507438659668
    5. 'self' → logprob: -17.37507438659668
    6. '(this' → logprob: -17.87507438659668
    7. '(Self' → logprob: -18.37507438659668
    8. '	self' → logprob: -19.12507438659668
    9. '(s' → logprob: -19.87507438659668
    10. '<|end|>' → logprob: -20.12507438659668

Token 71: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -5.319370302458992e-06
    2. '.' → logprob: -12.750005722045898
    3. ').' → logprob: -13.375005722045898
    4. ' .' → logprob: -14.250005722045898
    5. '.cards' → logprob: -16.2500057220459
    6. '.score' → logprob: -17.7500057220459
    7. 'scores' → logprob: -17.8750057220459
    8. '.values' → logprob: -18.5000057220459
    9. '.points' → logprob: -18.8750057220459
    10. ')' → logprob: -19.3750057220459

Token 72: 'cores' (ID: 12071)
  Prédit: 'elf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elf' → logprob: -0.05569341406226158
    2. '.s' → logprob: -3.5556933879852295
    3. 'cores' → logprob: -3.6806933879852295
    4. 'self' → logprob: -8.555693626403809
    5. 'el' → logprob: -8.930693626403809
    6. 'elves' → logprob: -10.555693626403809
    7. 'et' → logprob: -10.680693626403809
    8. 'scores' → logprob: -11.930693626403809
    9. 'core' → logprob: -12.555693626403809
    10. 'els' → logprob: -12.680693626403809

Token 73: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.5
    3. ' )' → logprob: -16.375
    4. '   ' → logprob: -17.25
    5. '))' → logprob: -18.125
    6. '}' → logprob: -18.125
    7. '[' → logprob: -18.5
    8. '       ' → logprob: -18.875
    9. ']' → logprob: -18.875
    10. ')return' → logprob: -19.0

Token 74: 'class' (ID: 1444)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1051608324050903
    2. '<|end|>' → logprob: -1.1051608324050903
    3. '   ' → logprob: -1.3551608324050903
    4. 'def' → logprob: -3.230160713195801
    5. '<|end|>' → logprob: -4.480160713195801
    6. '    
' → logprob: -4.855160713195801
    7. ' ' → logprob: -5.355160713195801
    8. ')' → logprob: -5.980160713195801
    9. '\n' → logprob: -6.105160713195801
    10. '

' → logprob: -6.105160713195801

Token 75: ' Exchange' (ID: 24637)
  Prédit: ' Card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Card' → logprob: -0.04722093790769577
    2. ' Player' → logprob: -3.9222209453582764
    3. ' Game' → logprob: -4.547220706939697
    4. ' Deck' → logprob: -4.547220706939697
    5. ' Poker' → logprob: -6.422220706939697
    6. 'Card' → logprob: -6.922220706939697
    7. ' Hand' → logprob: -7.422220706939697
    8. ' Optional' → logprob: -8.172221183776855
    9. ' ' → logprob: -8.297221183776855
    10. ' Dealer' → logprob: -9.172221183776855

Token 76: 'Criterion' (ID: 23833)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06361865252256393
    2. '(' → logprob: -3.0636186599731445
    3. 'Manager' → logprob: -5.4386186599731445
    4. 'Card' → logprob: -5.8136186599731445
    5. 'Handler' → logprob: -6.8136186599731445
    6. '():' → logprob: -6.8136186599731445
    7. '(Card' → logprob: -7.5636186599731445
    8. 'able' → logprob: -7.6886186599731445
    9. 'Cards' → logprob: -8.438618659973145
    10. 'Operator' → logprob: -8.563618659973145

Token 77: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009317061631008983
    2. '(' → logprob: -7.500931739807129
    3. ' :' → logprob: -8.000931739807129
    4. ':
' → logprob: -10.375931739807129
    5. '):' → logprob: -12.625931739807129
    6. '():' → logprob: -13.000931739807129
    7. '<|end|>' → logprob: -13.625931739807129
    8. ':def' → logprob: -14.375931739807129
    9. '(object' → logprob: -14.625931739807129
    10. '(Abstract' → logprob: -14.750931739807129

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014099973486736417
    2. ' def' → logprob: -6.751410007476807
    3. 'def' → logprob: -8.376409530639648
    4. '    
' → logprob: -12.376409530639648
    5. '   ' → logprob: -13.126409530639648
    6. '    ' → logprob: -14.251409530639648
    7. '  ' → logprob: -14.251409530639648
    8. ' ' → logprob: -14.501409530639648
    9. '<|end|>' → logprob: -15.126409530639648
    10. '
' → logprob: -15.376409530639648

Token 79: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.6339519619941711
    2. ' def' → logprob: -0.7589519619941711
    3. '   ' → logprob: -6.6339521408081055
    4. ' ' → logprob: -10.883952140808105
    5. 'class' → logprob: -12.383952140808105
    6. '    ' → logprob: -12.758952140808105
    7. '	def' → logprob: -13.133952140808105
    8. '```' → logprob: -13.258952140808105
    9. '  ' → logprob: -13.508952140808105
    10. 'from' → logprob: -13.758952140808105

Token 80: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.5690770149230957
    2. ' ' → logprob: -1.6940770149230957
    3. ' evaluate' → logprob: -2.1940770149230957
    4. ' def' → logprob: -2.5690770149230957
    5. 'evaluate' → logprob: -4.569077014923096
    6. ' test' → logprob: -4.944077014923096
    7. ' decide' → logprob: -5.444077014923096
    8. ' _' → logprob: -5.444077014923096
    9. ' predict' → logprob: -5.819077014923096
    10. ' check' → logprob: -5.819077014923096

Token 81: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0001431114797014743
    2. 'call' → logprob: -9.375143051147461
    3. 'eq' → logprob: -10.125143051147461
    4. 'sub' → logprob: -12.125143051147461
    5. 'iter' → logprob: -12.500143051147461
    6. 'lt' → logprob: -12.750143051147461
    7. 'new' → logprob: -13.125143051147461
    8. 'get' → logprob: -13.875143051147461
    9. 'contains' → logprob: -14.125143051147461
    10. 'hash' → logprob: -14.750143051147461

Token 82: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.03222798928618431
    2. '(self' → logprob: -4.157227993011475
    3. '__(
' → logprob: -4.782227993011475
    4. '(' → logprob: -5.282227993011475
    5. ' (' → logprob: -6.532227993011475
    6. '__' → logprob: -7.282227993011475
    7. ' ' → logprob: -9.032227516174316
    8. '<|end|>' → logprob: -9.282227516174316
    9. '__((' → logprob: -9.907227516174316
    10. '_(' → logprob: -10.032227516174316

Token 83: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0018562922487035394
    2. ' self' → logprob: -6.376856327056885
    3. '
' → logprob: -9.001855850219727
    4. ')' → logprob: -10.876855850219727
    5. '(self' → logprob: -12.751855850219727
    6. '<|end|>' → logprob: -13.001855850219727
    7. ',' → logprob: -13.626855850219727
    8. '):
' → logprob: -13.751855850219727
    9. ' ' → logprob: -14.751855850219727
    10. 'criteria' → logprob: -14.751855850219727

Token 84: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009897863492369652
    2. ' ,' → logprob: -4.634897708892822
    3. 'self' → logprob: -10.13489818572998
    4. '<|end|>' → logprob: -10.13489818572998
    5. ')' → logprob: -10.50989818572998
    6. ' ' → logprob: -12.25989818572998
    7. ',
' → logprob: -12.38489818572998
    8. ' (' → logprob: -12.50989818572998
    9. '<|end|>' → logprob: -12.63489818572998
    10. ',self' → logprob: -12.63489818572998

Token 85: ' tar' (ID: 7057)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -1.2249085903167725
    2. ' card' → logprob: -1.9749085903167725
    3. ' min' → logprob: -2.2249085903167725
    4. ' threshold' → logprob: -2.2249085903167725
    5. 'self' → logprob: -2.4749085903167725
    6. ' current' → logprob: -3.0999085903167725
    7. ' other' → logprob: -3.5999085903167725
    8. 'threshold' → logprob: -3.8499085903167725
    9. ' minimum' → logprob: -3.9749085903167725
    10. 'min' → logprob: -4.224908828735352

Token 86: 'o' (ID: 78)
  Prédit: 'get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'get' → logprob: -6.897412822581828e-05
    2. 'gets' → logprob: -9.625068664550781
    3. '_get' → logprob: -13.625068664550781
    4. '   ' → logprob: -15.375068664550781
    5. 'Get' → logprob: -15.375068664550781
    6. 'got' → logprob: -15.875068664550781
    7. '``' → logprob: -16.25006866455078
    8. 'GET' → logprob: -16.25006866455078
    9. '```' → logprob: -16.25006866455078
    10. '.get' → logprob: -16.37506866455078

Token 87: ':' (ID: 25)
  Prédit: '_score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.30998027324676514
    2. '_scores' → logprob: -1.9349802732467651
    3. ':' → logprob: -3.5599803924560547
    4. '_cards' → logprob: -3.8099803924560547
    5. '_set' → logprob: -4.059980392456055
    6. ',' → logprob: -4.309980392456055
    7. '_card' → logprob: -4.559980392456055
    8. '_value' → logprob: -5.434980392456055
    9. '_' → logprob: -5.559980392456055
    10. '_s' → logprob: -6.184980392456055

Token 88: ' Card' (ID: 9958)
  Prédit: 'Card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -0.4244163930416107
    2. ' Card' → logprob: -1.174416422843933
    3. ':' → logprob: -3.6744163036346436
    4. ',' → logprob: -6.049416542053223
    5. ' int' → logprob: -6.049416542053223
    6. ' ' → logprob: -6.924416542053223
    7. 'int' → logprob: -6.924416542053223
    8. 'scores' → logprob: -7.424416542053223
    9. '_card' → logprob: -7.549416542053223
    10. ''s' → logprob: -7.674416542053223

Token 89: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.21526359021663666
    2. '_set' → logprob: -2.215263605117798
    3. 'set' → logprob: -2.965263605117798
    4. 's' → logprob: -3.715263605117798
    5. ',' → logprob: -5.590263366699219
    6. '_sets' → logprob: -6.465263366699219
    7. 'Sets' → logprob: -6.590263366699219
    8. ')' → logprob: -7.340263366699219
    9. 'sets' → logprob: -8.340263366699219
    10. '_scores' → logprob: -8.590263366699219

Token 90: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019090480054728687
    2. ' ,' → logprob: -9.000190734863281
    3. ')' → logprob: -9.875190734863281
    4. '):' → logprob: -11.625190734863281
    5. ':' → logprob: -13.000190734863281
    6. '   ' → logprob: -13.125190734863281
    7. ',
' → logprob: -14.375190734863281
    8. '‌,' → logprob: -14.500190734863281
    9. '),' → logprob: -14.875190734863281
    10. ' ' → logprob: -15.500190734863281

Token 91: ' han' (ID: 6648)
  Prédit: ' jiro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jiro' → logprob: -0.46712803840637207
    2. 'han' → logprob: -1.717128038406372
    3. ' han' → logprob: -2.092128038406372
    4. '   ' → logprob: -3.967128038406372
    5. '  ' → logprob: -4.217127799987793
    6. '    ' → logprob: -5.217127799987793
    7. ' ' → logprob: -5.217127799987793
    8. 'h' → logprob: -5.717127799987793
    9. '     ' → logprob: -5.717127799987793
    10. ' hana' → logprob: -5.842127799987793

Token 92: 'ako' (ID: 5938)
  Prédit: 'ako'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ako' → logprob: -0.32425403594970703
    2. 'a' → logprob: -1.324254035949707
    3. 'ak' → logprob: -5.574254035949707
    4. 'ae' → logprob: -6.199254035949707
    5. 'zo' → logprob: -6.699254035949707
    6. 'eko' → logprob: -6.699254035949707
    7. 'ko' → logprob: -6.824254035949707
    8. 'e' → logprob: -7.949254035949707
    9. 'ami' → logprob: -8.324254035949707
    10. 'ayo' → logprob: -9.199254035949707

Token 93: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.073596548754722e-05
    2. ')' → logprob: -10.50005054473877
    3. ' :' → logprob: -11.37505054473877
    4. '):' → logprob: -11.62505054473877
    5. ',' → logprob: -14.12505054473877
    6. 's' → logprob: -14.50005054473877
    7. '<|end|>' → logprob: -14.87505054473877
    8. '<|end|>' → logprob: -15.25005054473877
    9. '_:' → logprob: -16.000051498413086
    10. '=' → logprob: -16.000051498413086

Token 94: ' Card' (ID: 9958)
  Prédit: ' Card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Card' → logprob: -0.5232335925102234
    2. 'Card' → logprob: -0.8982335925102234
    3. 'Optional' → logprob: -10.273233413696289
    4. ' Optional' → logprob: -10.523233413696289
    5. ' ' → logprob: -10.773233413696289
    6. ')' → logprob: -11.523233413696289
    7. ' ' → logprob: -12.148233413696289
    8. ' card' → logprob: -12.648233413696289
    9. '<Card' → logprob: -12.773233413696289
    10. '   ' → logprob: -12.898233413696289

Token 95: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -4.811348480870947e-05
    2. '):' → logprob: -10.75004768371582
    3. ')' → logprob: -11.37504768371582
    4. 'set' → logprob: -12.25004768371582
    5. ':' → logprob: -12.37504768371582
    6. '):
' → logprob: -13.25004768371582
    7. ' Set' → logprob: -13.37504768371582
    8. '	Set' → logprob: -14.12504768371582
    9. '_set' → logprob: -14.25004768371582
    10. ':Set' → logprob: -14.75004768371582

Token 96: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5348137021064758
    2. '):' → logprob: -0.9098137021064758
    3. ',' → logprob: -4.53481388092041
    4. '):
' → logprob: -7.15981388092041
    5. ' )' → logprob: -10.03481388092041
    6. '   ' → logprob: -10.53481388092041
    7. ':' → logprob: -11.15981388092041
    8. ' ):' → logprob: -11.40981388092041
    9. ')->' → logprob: -12.90981388092041
    10. ' ' → logprob: -12.90981388092041

Token 97: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007699632551521063
    2. ',' → logprob: -7.875770092010498
    3. '):' → logprob: -8.37576961517334
    4. ':
' → logprob: -9.62576961517334
    5. '<|end|>' → logprob: -10.00076961517334
    6. ')' → logprob: -10.75076961517334
    7. '       ' → logprob: -12.12576961517334
    8. '():' → logprob: -12.62576961517334
    9. '<|end|>' → logprob: -12.75076961517334
    10. '   ' → logprob: -12.75076961517334

Token 98: ' None' (ID: 4662)
  Prédit: ' None'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' None' → logprob: -0.018161997199058533
    2. 'None' → logprob: -4.018161773681641
    3. ' bool' → logprob: -11.51816177368164
    4. 'bool' → logprob: -13.51816177368164
    5. ' ' → logprob: -15.39316177368164
    6. ' ' → logprob: -15.64316177368164
    7. '_None' → logprob: -15.89316177368164
    8. ' none' → logprob: -16.01816177368164
    9. ' int' → logprob: -16.14316177368164
    10. '   ' → logprob: -16.76816177368164

Token 99: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008077251841314137
    2. '       ' → logprob: -8.000807762145996
    3. ':
' → logprob: -8.000807762145996
    4. '<|end|>' → logprob: -9.625807762145996
    5. '):' → logprob: -10.125807762145996
    6. ',' → logprob: -11.500807762145996
    7. '   ' → logprob: -12.125807762145996
    8. ' :' → logprob: -12.500807762145996
    9. ')' → logprob: -12.625807762145996
    10. '<|end|>' → logprob: -13.125807762145996

Token 100: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3782830137643032e-05
    2. '   ' → logprob: -12.12501335144043
    3. '        
' → logprob: -12.87501335144043
    4. '      ' → logprob: -13.37501335144043
    5. ' pass' → logprob: -14.25001335144043
    6. '
' → logprob: -14.25001335144043
    7. '<|end|>' → logprob: -14.37501335144043
    8. '        ' → logprob: -14.62501335144043
    9. '     ' → logprob: -14.75001335144043
    10. ' ' → logprob: -15.50001335144043

Token 101: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3213779032230377
    2. '       ' → logprob: -1.3213778734207153
    3. ' self' → logprob: -4.821377754211426
    4. '	self' → logprob: -11.946377754211426
    5. '   ' → logprob: -12.196377754211426
    6. '
' → logprob: -12.321377754211426
    7. 'def' → logprob: -12.696377754211426
    8. '      ' → logprob: -13.196377754211426
    9. ' ' → logprob: -13.196377754211426
    10. 'super' → logprob: -14.196377754211426

Token 102: '.t' (ID: 1370)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5382915139198303
    2. '.t' → logprob: -0.9132915139198303
    3. ' .' → logprob: -4.6632914543151855
    4. '.tar' → logprob: -5.6632914543151855
    5. ' ' → logprob: -6.2882914543151855
    6. '   ' → logprob: -9.913291931152344
    7. '.s' → logprob: -9.913291931152344
    8. '       ' → logprob: -10.288291931152344
    9. ' is' → logprob: -11.163291931152344
    10. '
' → logprob: -11.538291931152344

Token 103: 'aro' (ID: 8421)
  Prédit: 'aro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aro' → logprob: -0.04082983359694481
    2. 'a' → logprob: -3.29082989692688
    3. 'ar' → logprob: -6.790829658508301
    4. 't' → logprob: -7.290829658508301
    5. 'аро' → logprob: -8.2908296585083
    6. ' a' → logprob: -8.7908296585083
    7. '   ' → logprob: -9.0408296585083
    8. 'o' → logprob: -9.2908296585083
    9. 'arro' → logprob: -9.6658296585083
    10. ' aro' → logprob: -9.9158296585083

Token 104: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31178340315818787
    2. '.s' → logprob: -2.3117833137512207
    3. ',' → logprob: -2.5617833137512207
    4. '=' → logprob: -3.1867833137512207
    5. '_scores' → logprob: -3.6867833137512207
    6. '.' → logprob: -4.186783313751221
    7. ' ' → logprob: -5.311783313751221
    8. ' ,' → logprob: -6.186783313751221
    9. '_s' → logprob: -7.061783313751221
    10. ' .' → logprob: -7.311783313751221

Token 105: ' tar' (ID: 7057)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.5817509889602661
    2. ' tar' → logprob: -0.8317509889602661
    3. 'tar' → logprob: -5.206750869750977
    4. '	t' → logprob: -9.081750869750977
    5. ' ' → logprob: -10.081750869750977
    6. ' tara' → logprob: -10.581750869750977
    7. ' t' → logprob: -10.956750869750977
    8. 's' → logprob: -11.206750869750977
    9. ' tarot' → logprob: -11.206750869750977
    10. '   ' → logprob: -11.456750869750977

Token 106: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -2.2200749754119897e-06
    2. 'о' → logprob: -14.750001907348633
    3. 'O' → logprob: -15.125001907348633
    4. 'os' → logprob: -15.250001907348633
    5. '	o' → logprob: -15.375001907348633
    6. 'ro' → logprob: -15.750001907348633
    7. '<|end|>' → logprob: -15.875001907348633
    8. '```' → logprob: -16.125001907348633
    9. 'ko' → logprob: -16.125001907348633
    10. 'oak' → logprob: -16.625001907348633

Token 107: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006903939065523446
    2. '
' → logprob: -7.375690460205078
    3. '<|end|>' → logprob: -9.875690460205078
    4. '   ' → logprob: -13.000690460205078
    5. '      ' → logprob: -13.125690460205078
    6. ' ' → logprob: -13.375690460205078
    7. ',' → logprob: -13.625690460205078
    8. 'self' → logprob: -13.750690460205078
    9. '        
' → logprob: -13.750690460205078
    10. '<|end|>' → logprob: -14.000690460205078

Token 108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015360506949946284
    2. 'self' → logprob: -6.501535892486572
    3. ' self' → logprob: -10.75153636932373
    4. '   ' → logprob: -11.75153636932373
    5. '      ' → logprob: -13.37653636932373
    6. '
' → logprob: -14.37653636932373
    7. ',' → logprob: -14.62653636932373
    8. ' ' → logprob: -14.75153636932373
    9. '     ' → logprob: -15.25153636932373
    10. '           ' → logprob: -15.25153636932373

Token 109: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.12949632108211517
    2. '       ' → logprob: -2.1294963359832764
    3. ' self' → logprob: -6.004496097564697
    4. '   ' → logprob: -9.629496574401855
    5. '
' → logprob: -12.004496574401855
    6. '	self' → logprob: -12.004496574401855
    7. '      ' → logprob: -12.004496574401855
    8. '     ' → logprob: -12.754496574401855
    9. ' ' → logprob: -12.754496574401855
    10. '           ' → logprob: -13.379496574401855

Token 110: '.h' (ID: 1508)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.5104280710220337
    2. '.h' → logprob: -1.1354280710220337
    3. '.s' → logprob: -2.635427951812744
    4. ' .' → logprob: -6.260427951812744
    5. '.
' → logprob: -6.510427951812744
    6. 'scores' → logprob: -6.885427951812744
    7. ' ' → logprob: -7.635427951812744
    8. 'han' → logprob: -8.135428428649902
    9. '.has' → logprob: -8.260428428649902
    10. 's' → logprob: -8.385428428649902

Token 111: 'an' (ID: 270)
  Prédit: 'an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.0015810435870662332
    2. 'anak' → logprob: -6.751581192016602
    3. 'anayo' → logprob: -8.251581192016602
    4. 'anato' → logprob: -10.251581192016602
    5. 'ana' → logprob: -10.751581192016602
    6. '   ' → logprob: -10.876581192016602
    7. 'a' → logprob: -11.376581192016602
    8. 'n' → logprob: -11.876581192016602
    9. '```' → logprob: -12.376581192016602
    10. '
' → logprob: -12.501581192016602

Token 112: 'ako' (ID: 5938)
  Prédit: 'ako'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ako' → logprob: -0.0030094345565885305
    2. 'a' → logprob: -6.25300931930542
    3. 'ak' → logprob: -6.87800931930542
    4. '```' → logprob: -11.253009796142578
    5. '   ' → logprob: -11.378009796142578
    6. 'ако' → logprob: -11.503009796142578
    7. '
' → logprob: -12.878009796142578
    8. '

' → logprob: -13.253009796142578
    9. '_' → logprob: -13.628009796142578
    10. 'akom' → logprob: -13.878009796142578

Token 113: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04991258680820465
    2. ' =' → logprob: -3.174912691116333
    3. '<|end|>' → logprob: -5.049912452697754
    4. '.' → logprob: -8.674912452697754
    5. ' ' → logprob: -8.924912452697754
    6. ')' → logprob: -9.549912452697754
    7. '<|end|>' → logprob: -10.299912452697754
    8. '=None' → logprob: -10.924912452697754
    9. 'scores' → logprob: -12.049912452697754
    10. '_scores' → logprob: -12.174912452697754

Token 114: ' han' (ID: 6648)
  Prédit: 'han'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'han' → logprob: -0.4742157757282257
    2. ' han' → logprob: -0.9742157459259033
    3. ' ' → logprob: -9.724215507507324
    4. ' hans' → logprob: -10.849215507507324
    5. 'ham' → logprob: -11.599215507507324
    6. 'hen' → logprob: -12.099215507507324
    7. ' hana' → logprob: -12.224215507507324
    8. 'hana' → logprob: -12.224215507507324
    9. '   ' → logprob: -12.474215507507324
    10. ' hen' → logprob: -12.599215507507324

Token 115: 'ako' (ID: 5938)
  Prédit: 'ako'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ako' → logprob: -0.00048286578385159373
    2. 'ak' → logprob: -8.250482559204102
    3. 'a' → logprob: -8.500482559204102
    4. 'ако' → logprob: -11.875482559204102
    5. 'ko' → logprob: -13.250482559204102
    6. '   ' → logprob: -13.250482559204102
    7. '```' → logprob: -13.625482559204102
    8. '

' → logprob: -14.125482559204102
    9. 'Ako' → logprob: -14.250482559204102
    10. ' ako' → logprob: -14.375482559204102

Token 116: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5810546875
    2. '<|end|>' → logprob: -1.2060546875
    3. '   ' → logprob: -2.0810546875
    4. 'def' → logprob: -4.9560546875
    5. '<|end|>' → logprob: -5.4560546875
    6. '    
' → logprob: -5.9560546875
    7. '

' → logprob: -7.0810546875
    8. ' def' → logprob: -7.4560546875
    9. ' ' → logprob: -7.7060546875
    10. ' 
' → logprob: -8.5810546875

Token 117: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36067429184913635
    2. '
' → logprob: -1.235674262046814
    3. '    
' → logprob: -5.2356743812561035
    4. '<|end|>' → logprob: -5.2356743812561035
    5. 'def' → logprob: -6.8606743812561035
    6. '<|end|>' → logprob: -8.860673904418945
    7. ' def' → logprob: -9.735673904418945
    8. '  
' → logprob: -9.860673904418945
    9. '

' → logprob: -9.860673904418945
    10. '        
' → logprob: -9.985673904418945

Token 118: ' self' (ID: 1051)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.39024093747138977
    2. '   ' → logprob: -1.1402409076690674
    3. ' def' → logprob: -6.1402411460876465
    4. '
' → logprob: -7.3902411460876465
    5. '       ' → logprob: -8.265240669250488
    6. '    
' → logprob: -8.765240669250488
    7. 'self' (adapté à ' self') → logprob: -9.640240669250488
    8. '        
' → logprob: -10.765240669250488
    9. ' ' → logprob: -11.015240669250488
    10. '

' → logprob: -11.140240669250488

Token 119: '.d' (ID: 1380)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.008644593879580498
    2. '.s' → logprob: -5.8836445808410645
    3. '.t' → logprob: -6.5086445808410645
    4. '.best' → logprob: -7.6336445808410645
    5. '.is' → logprob: -7.8836445808410645
    6. '._' → logprob: -8.008645057678223
    7. ' ' → logprob: -8.133645057678223
    8. '.score' → logprob: -8.258645057678223
    9. '.target' → logprob: -8.508645057678223
    10. ' .' → logprob: -8.633645057678223

Token 120: 'ifference' (ID: 30083)
  Prédit: 'elta'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elta' → logprob: -1.3356261253356934
    2. 'ifference' → logprob: -1.3356261253356934
    3. 'ef' → logprob: -1.4606261253356934
    4. 'iff' → logprob: -1.7106261253356934
    5. 'e' → logprob: -3.9606261253356934
    6. 'if' → logprob: -4.460626125335693
    7. ' if' → logprob: -4.960626125335693
    8. 'es' → logprob: -5.210626125335693
    9. '_' → logprob: -6.460626125335693
    10. 'iffer' → logprob: -6.585626125335693

Token 121: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005676464643329382
    2. '=' → logprob: -5.50567626953125
    3. 's' → logprob: -7.00567626953125
    4. '_' → logprob: -7.75567626953125
    5. ' ' → logprob: -9.38067626953125
    6. ':' → logprob: -9.38067626953125
    7. '<|end|>' → logprob: -10.00567626953125
    8. '_score' → logprob: -11.38067626953125
    9. '_s' → logprob: -11.50567626953125
    10. '_scores' → logprob: -12.38067626953125

Token 122: ' self' (ID: 1051)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.5662952065467834
    2. ' abs' → logprob: -0.9412952065467834
    3. 'self' → logprob: -3.9412951469421387
    4. ' self' → logprob: -4.816295146942139
    5. ' tar' → logprob: -5.191295146942139
    6. 'tar' → logprob: -5.566295146942139
    7. 't' → logprob: -5.691295146942139
    8. ' han' → logprob: -7.316295146942139
    9. 'han' → logprob: -7.566295146942139
    10. ' ' → logprob: -8.441295623779297

Token 123: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -0.021108847111463547
    2. '.' → logprob: -4.271108627319336
    3. '.h' → logprob: -6.021108627319336
    4. '.tar' → logprob: -6.146108627319336
    5. '.total' → logprob: -6.521108627319336
    6. ' .' → logprob: -7.771108627319336
    7. '.s' → logprob: -9.021108627319336
    8. '_.' → logprob: -9.396108627319336
    9. 't' → logprob: -9.396108627319336
    10. ' ' → logprob: -10.271108627319336

Token 124: 'aro' (ID: 8421)
  Prédit: 'aro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aro' → logprob: -0.04368923604488373
    2. 't' → logprob: -4.168689250946045
    3. '.' → logprob: -4.293689250946045
    4. '.t' → logprob: -4.793689250946045
    5. 'ar' → logprob: -5.918689250946045
    6. 'a' → logprob: -7.543689250946045
    7. 'аро' → logprob: -7.793689250946045
    8. 'arro' → logprob: -7.918689250946045
    9. 'tar' → logprob: -8.043688774108887
    10. 'ro' → logprob: -8.168688774108887

Token 125: '.total' (ID: 23374)
  Prédit: '.total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -0.003259830642491579
    2. '.' → logprob: -5.753259658813477
    3. 'total' → logprob: -9.753259658813477
    4. ' .' → logprob: -11.628259658813477
    5. '.s' → logprob: -12.628259658813477
    6. '_total' → logprob: -13.253259658813477
    7. ' ' → logprob: -13.253259658813477
    8. '.score' → logprob: -13.628259658813477
    9. '	total' → logprob: -13.753259658813477
    10. '.property' → logprob: -13.753259658813477

Token 126: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.00014978687977418303
    2. '_' → logprob: -8.875149726867676
    3. '_scores' → logprob: -12.375149726867676
    4. 'score' → logprob: -12.750149726867676
    5. '_difference' → logprob: -14.000149726867676
    6. '_s' → logprob: -14.125149726867676
    7. '<|end|>' → logprob: -14.750149726867676
    8. '_SCORE' → logprob: -15.125149726867676
    9. 'Score' → logprob: -16.000150680541992
    10. '_token' → logprob: -16.250150680541992

Token 127: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03044024296104908
    2. '-' → logprob: -3.530440330505371
    3. ' >' → logprob: -8.280440330505371
    4. '<|end|>' → logprob: -8.530440330505371
    5. ' ' → logprob: -9.280440330505371
    6. '>' → logprob: -9.405440330505371
    7. '+' → logprob: -10.655440330505371
    8. ' +' → logprob: -11.280440330505371
    9. ' <' → logprob: -11.780440330505371
    10. '  ' → logprob: -13.280440330505371

Token 128: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16024057567119598
    2. ' self' → logprob: -1.9102405309677124
    3. '(self' → logprob: -12.535240173339844
    4. ' ' → logprob: -12.785240173339844
    5. '<|end|>' → logprob: -13.035240173339844
    6. 'han' → logprob: -13.160240173339844
    7. '	self' → logprob: -13.285240173339844
    8. ' han' → logprob: -13.410240173339844
    9. '
' → logprob: -14.285240173339844
    10. '=self' → logprob: -14.410240173339844

Token 129: '.h' (ID: 1508)
  Prédit: '.h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -0.0011387886479496956
    2. '.' → logprob: -6.876138687133789
    3. ' .' → logprob: -9.376138687133789
    4. 'han' → logprob: -11.001138687133789
    5. '_.' → logprob: -14.001138687133789
    6. '‌.' → logprob: -14.501138687133789
    7. '..' → logprob: -14.751138687133789
    8. ').' → logprob: -14.876138687133789
    9. ' han' → logprob: -15.126138687133789
    10. ' ' → logprob: -15.251138687133789

Token 130: 'an' (ID: 270)
  Prédit: 'an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.0021236150059849024
    2. 'anayo' → logprob: -6.752123832702637
    3. 'anak' → logprob: -7.627123832702637
    4. 'anato' → logprob: -8.502123832702637
    5. '.an' → logprob: -9.752123832702637
    6. 'a' → logprob: -10.752123832702637
    7. 'ana' → logprob: -11.002123832702637
    8. '_an' → logprob: -11.127123832702637
    9. 'anao' → logprob: -11.502123832702637
    10. '   ' → logprob: -11.627123832702637

Token 131: 'ako' (ID: 5938)
  Prédit: 'ako'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ako' → logprob: -0.00020389800192788243
    2. 'ak' → logprob: -8.875204086303711
    3. 'ако' → logprob: -10.875204086303711
    4. 'a' → logprob: -11.250204086303711
    5. '```' → logprob: -11.500204086303711
    6. '   ' → logprob: -12.375204086303711
    7. 'ko' → logprob: -12.750204086303711
    8. 'oko' → logprob: -13.250204086303711
    9. 'akoa' → logprob: -13.500204086303711
    10. ' ako' → logprob: -13.750204086303711

Token 132: '.total' (ID: 23374)
  Prédit: '.total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.total' → logprob: -0.003047224134206772
    2. 'total' → logprob: -6.378046989440918
    3. '.' → logprob: -6.628046989440918
    4. ' .' → logprob: -11.503046989440918
    5. ' total' → logprob: -12.628046989440918
    6. '.score' → logprob: -12.628046989440918
    7. '_total' → logprob: -13.628046989440918
    8. '	total' → logprob: -14.253046989440918
    9. '<|end|>' → logprob: -14.253046989440918
    10. '```' → logprob: -14.878046989440918

Token 133: '_score' (ID: 22555)
  Prédit: '_score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.00011689399980241433
    2. 'score' → logprob: -9.125117301940918
    3. '_' → logprob: -12.625117301940918
    4. '<|end|>' → logprob: -12.625117301940918
    5. '_scores' → logprob: -15.250117301940918
    6. '_code' → logprob: -15.375117301940918
    7. 'Score' → logprob: -15.500117301940918
    8. '_SCORE' → logprob: -15.625117301940918
    9. ' score' → logprob: -15.750117301940918
    10. '_s' → logprob: -16.1251163482666

Token 134: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.47462180256843567
    2. '<|end|>' → logprob: -1.3496217727661133
    3. '   ' → logprob: -2.3496217727661133
    4. 'def' → logprob: -4.474621772766113
    5. '<|end|>' → logprob: -4.974621772766113
    6. '

' → logprob: -5.974621772766113
    7. ' def' → logprob: -6.724621772766113
    8. '    
' → logprob: -7.599621772766113
    9. ' ' → logprob: -8.974621772766113
    10. ')' → logprob: -9.224621772766113

Token 135: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4476470947265625
    2. '
' → logprob: -1.3226470947265625
    3. '<|end|>' → logprob: -2.5726470947265625
    4. 'def' → logprob: -4.1976470947265625
    5. '    
' → logprob: -6.4476470947265625
    6. ' def' → logprob: -7.3226470947265625
    7. '<|end|>' → logprob: -7.8226470947265625
    8. '

' → logprob: -8.822647094726562
    9. ' 
' → logprob: -9.572647094726562
    10. ')' → logprob: -10.072647094726562

Token 136: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0026221470907330513
    2. '   ' → logprob: -6.127622127532959
    3. ' def' → logprob: -7.752622127532959
    4. ' ' → logprob: -12.752622604370117
    5. '@property' → logprob: -13.252622604370117
    6. '@' → logprob: -14.127622604370117
    7. 'from' → logprob: -14.627622604370117
    8. '	def' → logprob: -15.252622604370117
    9. '    
' → logprob: -15.377622604370117
    10. '
' → logprob: -15.502622604370117

Token 137: ' feasible' (ID: 58866)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.402006059885025
    2. ' is' → logprob: -2.027006149291992
    3. ' evaluate' → logprob: -2.777006149291992
    4. ' calculate' → logprob: -3.027006149291992
    5. ' can' → logprob: -4.152006149291992
    6. ' _' → logprob: -4.277006149291992
    7. 'def' → logprob: -4.527006149291992
    8. ' find' → logprob: -4.777006149291992
    9. ' check' → logprob: -5.652006149291992
    10. ' should' → logprob: -5.652006149291992

Token 138: '_pairs' (ID: 90005)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2541487514972687
    2. '(' → logprob: -1.5041487216949463
    3. '_' → logprob: -6.754148960113525
    4. 'self' → logprob: -8.004148483276367
    5. '(
' → logprob: -8.254148483276367
    6. ' (' → logprob: -8.504148483276367
    7. '_(' → logprob: -9.379148483276367
    8. '   ' → logprob: -10.504148483276367
    9. '(

' → logprob: -10.504148483276367
    10. ')' → logprob: -11.129148483276367

Token 139: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0559062622487545
    2. '(' → logprob: -2.930906295776367
    3. ' (' → logprob: -7.555906295776367
    4. '(
' → logprob: -7.680906295776367
    5. 'self' → logprob: -10.680906295776367
    6. '(

' → logprob: -12.555906295776367
    7. ' ' → logprob: -12.680906295776367
    8. '   ' → logprob: -12.680906295776367
    9. ' self' → logprob: -12.930906295776367
    10. '()' → logprob: -14.305906295776367

Token 140: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21972811222076416
    2. 'self' → logprob: -2.2197279930114746
    3. ',' → logprob: -2.5947279930114746
    4. '(self' → logprob: -4.969727993011475
    5. '):' → logprob: -6.094727993011475
    6. ' self' → logprob: -6.469727993011475
    7. '):
' → logprob: -6.594727993011475
    8. '   ' → logprob: -6.969727993011475
    9. '       ' → logprob: -7.844727993011475
    10. '	self' → logprob: -8.969728469848633

Token 141: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0007461408386006951
    2. '(' → logprob: -7.375746250152588
    3. 'self' → logprob: -9.37574577331543
    4. '(
' → logprob: -11.37574577331543
    5. '   ' → logprob: -12.12574577331543
    6. ' ->' → logprob: -12.50074577331543
    7. '       ' → logprob: -12.62574577331543
    8. ' (' → logprob: -12.62574577331543
    9. '->' → logprob: -13.25074577331543
    10. ':' → logprob: -13.50074577331543

Token 142: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.007687196601182222
    2. ' Iterator' → logprob: -5.007687091827393
    3. 'List' → logprob: -7.007687091827393
    4. '	Iterator' → logprob: -10.88268756866455
    5. 'Tuple' → logprob: -11.25768756866455
    6. 'Optional' → logprob: -11.25768756866455
    7. '   ' → logprob: -11.38268756866455
    8. 'Iterable' → logprob: -12.25768756866455
    9. ' ' → logprob: -13.50768756866455
    10. 'Generator' → logprob: -13.75768756866455

Token 143: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.429896944202483e-05
    2. '[
' → logprob: -10.125043869018555
    3. '[int' → logprob: -13.000043869018555
    4. '```' → logprob: -14.500043869018555
    5. '   ' → logprob: -14.750043869018555
    6. '[T' → logprob: -15.625043869018555
    7. '       ' → logprob: -15.875043869018555
    8. ':' → logprob: -15.875043869018555
    9. '<Tuple' → logprob: -15.875043869018555
    10. '[List' → logprob: -16.125043869018555

Token 144: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -0.00043710620957426727
    2. ' Tuple' → logprob: -7.750437259674072
    3. 'int' → logprob: -12.500436782836914
    4. 'Tu' → logprob: -14.125436782836914
    5. ' ' → logprob: -14.250436782836914
    6. '   ' → logprob: -14.500436782836914
    7. 'Optional' → logprob: -15.375436782836914
    8. '
' → logprob: -16.000436782836914
    9. '  ' → logprob: -16.125436782836914
    10. '    ' → logprob: -16.750436782836914

Token 145: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -3.106736039626412e-05
    2. ',int' → logprob: -10.875031471252441
    3. 'int' → logprob: -12.000031471252441
    4. '[' → logprob: -12.375031471252441
    5. ',' → logprob: -13.500031471252441
    6. '[Int' → logprob: -16.250030517578125
    7. '   ' → logprob: -16.625030517578125
    8. '(int' → logprob: -17.375030517578125
    9. ']int' → logprob: -17.625030517578125
    10. '[
' → logprob: -17.750030517578125

Token 146: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0054516978561878204
    2. ',int' → logprob: -5.255451679229736
    3. ' ,' → logprob: -8.630452156066895
    4. 'int' → logprob: -11.255452156066895
    5. '[int' → logprob: -11.380452156066895
    6. ' ' → logprob: -12.630452156066895
    7. '‌,' → logprob: -13.130452156066895
    8. ',
' → logprob: -13.130452156066895
    9. ']int' → logprob: -13.255452156066895
    10. '   ' → logprob: -13.755452156066895

Token 147: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02061440795660019
    2. ' int' → logprob: -3.8956143856048584
    3. ' ' → logprob: -10.520614624023438
    4. '	int' → logprob: -11.395614624023438
    5. '[int' → logprob: -11.645614624023438
    6. '   ' → logprob: -12.020614624023438
    7. ']int' → logprob: -12.270614624023438
    8. '  ' → logprob: -12.645614624023438
    9. '<int' → logprob: -12.645614624023438
    10. '    ' → logprob: -12.895614624023438

Token 148: ']]:
' (ID: 183340)
  Prédit: ']]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]' → logprob: -0.3444272577762604
    2. ']>' → logprob: -2.0944273471832275
    3. ']:' → logprob: -2.4694273471832275
    4. ']' → logprob: -2.9694273471832275
    5. ',' → logprob: -4.219427108764648
    6. ']]:
' → logprob: -4.594427108764648
    7. ']):' → logprob: -5.469427108764648
    8. '>' → logprob: -6.594427108764648
    9. ' ]' → logprob: -7.469427108764648
    10. ')]' → logprob: -7.719427108764648

Token 149: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006458732299506664
    2. ':' → logprob: -5.131458759307861
    3. '   ' → logprob: -9.006458282470703
    4. ' :' → logprob: -9.506458282470703
    5. '        
' → logprob: -9.506458282470703
    6. '    ' → logprob: -9.756458282470703
    7. ' ' → logprob: -10.381458282470703
    8. '#' → logprob: -10.381458282470703
    9. ')' → logprob: -10.756458282470703
    10. ' 
' → logprob: -11.256458282470703

Token 150: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06994020938873291
    2. 'for' → logprob: -3.0699400901794434
    3. ' for' → logprob: -3.9449400901794434
    4. 't' → logprob: -6.944940090179443
    5. 'tar' → logprob: -8.069940567016602
    6. ' tar' → logprob: -8.319940567016602
    7. '
' → logprob: -9.569940567016602
    8. ' t' → logprob: -10.319940567016602
    9. 'diff' → logprob: -10.569940567016602
    10. '   ' → logprob: -10.569940567016602

Token 151: ' Find' (ID: 9764)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25033673644065857
    2. '       ' → logprob: -2.1253366470336914
    3. ' for' → logprob: -2.7503366470336914
    4. 't' → logprob: -3.8753366470336914
    5. '#' → logprob: -5.375336647033691
    6. 'diff' → logprob: -5.750336647033691
    7. 'target' → logprob: -6.250336647033691
    8. 'tar' → logprob: -6.875336647033691
    9. 'max' → logprob: -6.875336647033691
    10. '   ' → logprob: -7.000336647033691

Token 152: ' pairs' (ID: 24702)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2706785798072815
    2. 'for' → logprob: -2.1456785202026367
    3. '       ' → logprob: -2.7706785202026367
    4. ' min' → logprob: -4.020678520202637
    5. ' pairs' → logprob: -4.645678520202637
    6. ' best' → logprob: -5.020678520202637
    7. 'min' → logprob: -5.145678520202637
    8. ' all' → logprob: -5.395678520202637
    9. '   ' → logprob: -5.395678520202637
    10. ' feasible' → logprob: -6.770678520202637

Token 153: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3104150891304016
    2. '       ' → logprob: -2.185415029525757
    3. ' for' → logprob: -3.810415029525757
    4. ':' → logprob: -3.935415029525757
    5. 'for' → logprob: -4.060415267944336
    6. '<|end|>' → logprob: -4.060415267944336
    7. 'from' → logprob: -4.310415267944336
    8. '()' → logprob: -4.560415267944336
    9. ' in' → logprob: -5.060415267944336
    10. ' that' → logprob: -5.310415267944336

Token 154: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.06820175796747208
    2. 'tar' → logprob: -4.068201541900635
    3. ' t' → logprob: -4.318201541900635
    4. 's' → logprob: -4.568201541900635
    5. 'i' → logprob: -4.818201541900635
    6. 'a' → logprob: -4.943201541900635
    7. 'x' → logprob: -5.943201541900635
    8. ' tar' → logprob: -6.318201541900635
    9. 'score' → logprob: -7.193201541900635
    10. ')' → logprob: -7.443201541900635

Token 155: ',' (ID: 11)
  Prédit: 'aro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'aro' → logprob: -0.08460322767496109
    2. 'a' → logprob: -3.0846033096313477
    3. 'ar' → logprob: -4.209603309631348
    4. 't' → logprob: -5.459603309631348
    5. '_t' → logprob: -5.459603309631348
    6. 'o' → logprob: -6.209603309631348
    7. '_card' → logprob: -6.334603309631348
    8. 'ro' → logprob: -6.709603309631348
    9. '1' → logprob: -6.834603309631348
    10. '_score' → logprob: -7.084603309631348

Token 156: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.04863164573907852
    2. ' h' → logprob: -3.0486316680908203
    3. ' ' → logprob: -11.29863166809082
    4. '   ' → logprob: -11.67363166809082
    5. ')' → logprob: -12.29863166809082
    6. '    ' → logprob: -12.79863166809082
    7. '  ' → logprob: -12.92363166809082
    8. '
' → logprob: -13.29863166809082
    9. '	h' → logprob: -13.29863166809082
    10. 't' → logprob: -13.54863166809082

Token 157: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6667441725730896
    2. ',' → logprob: -0.9167441725730896
    3. '_score' → logprob: -3.1667442321777344
    4. ' in' → logprob: -3.7917442321777344
    5. '_scores' → logprob: -4.916744232177734
    6. 'in' → logprob: -5.666744232177734
    7. '   ' → logprob: -6.166744232177734
    8. '_t' → logprob: -6.291744232177734
    9. 'score' → logprob: -6.666744232177734
    10. 't' → logprob: -7.041744232177734

Token 158: ' such' (ID: 2238)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35373568534851074
    2. ' that' → logprob: -2.2287356853485107
    3. ' in' → logprob: -2.8537356853485107
    4. ' for' → logprob: -3.1037356853485107
    5. ':' → logprob: -3.2287356853485107
    6. '        ' → logprob: -4.72873592376709
    7. ' where' → logprob: -4.85373592376709
    8. 'for' → logprob: -5.22873592376709
    9. 'that' → logprob: -5.60373592376709
    10. ' if' → logprob: -5.97873592376709

Token 159: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.31446877121925354
    2. ' that' → logprob: -1.3144687414169312
    3. '       ' → logprob: -6.939468860626221
    4. '_that' → logprob: -8.689468383789062
    5. 'That' → logprob: -11.314468383789062
    6. '	that' → logprob: -11.564468383789062
    7. ',' → logprob: -11.814468383789062
    8. 'for' → logprob: -11.939468383789062
    9. '   ' → logprob: -12.314468383789062
    10. '        ' → logprob: -12.564468383789062

Token 160: ' total' (ID: 3609)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16586260497570038
    2. 't' → logprob: -2.165862560272217
    3. ' self' → logprob: -3.790862560272217
    4. ' t' → logprob: -5.290862560272217
    5. '(self' → logprob: -5.415862560272217
    6. '(t' → logprob: -5.540862560272217
    7. ' (' → logprob: -6.290862560272217
    8. '           ' → logprob: -9.915863037109375
    9. '       ' → logprob: -9.915863037109375
    10. '   ' → logprob: -9.915863037109375

Token 161: ' after' (ID: 1934)
  Prédit: '_score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_score' → logprob: -0.01610417105257511
    2. 'score' → logprob: -4.516104221343994
    3. '       ' → logprob: -5.891104221343994
    4. '_scores' → logprob: -7.266104221343994
    5. '   ' → logprob: -7.891104221343994
    6. ' score' → logprob: -8.391103744506836
    7. '_difference' → logprob: -9.016103744506836
    8. 'difference' → logprob: -9.016103744506836
    9. 'Score' → logprob: -9.141103744506836
    10. '```' → logprob: -9.391103744506836

Token 162: ' exchange' (ID: 13041)
  Prédit: 'exchange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exchange' → logprob: -0.4158751964569092
    2. ' exchange' → logprob: -1.1658751964569092
    3. ' exchanging' → logprob: -3.915875196456909
    4. ' swapping' → logprob: -6.415875434875488
    5. 'ex' → logprob: -6.665875434875488
    6. 'swap' → logprob: -6.915875434875488
    7. '_exchange' → logprob: -6.915875434875488
    8. ' the' → logprob: -7.165875434875488
    9. 'the' → logprob: -7.290875434875488
    10. '交換' → logprob: -7.540875434875488

Token 163: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1274164468050003
    2. ':' → logprob: -3.0024163722991943
    3. '<|end|>' → logprob: -4.252416610717773
    4. ',' → logprob: -5.002416610717773
    5. ' =' → logprob: -5.127416610717773
    6. ' is' → logprob: -5.252416610717773
    7. ' if' → logprob: -5.502416610717773
    8. '        ' → logprob: -5.752416610717773
    9. ' will' → logprob: -6.002416610717773
    10. ' for' → logprob: -6.002416610717773

Token 164: ' equal' (ID: 12629)
  Prédit: 'greater'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'greater' → logprob: -1.4851049184799194
    2. ' greater' → logprob: -1.7351049184799194
    3. ' equal' → logprob: -2.235105037689209
    4. ' less' → logprob: -2.235105037689209
    5. 'less' → logprob: -2.360105037689209
    6. 'equal' → logprob: -3.110105037689209
    7. ' smaller' → logprob: -3.360105037689209
    8. ' strictly' → logprob: -3.485105037689209
    9. '   ' → logprob: -3.485105037689209
    10. ' exactly' → logprob: -3.985105037689209

Token 165: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04235003516077995
    2. ':' → logprob: -4.042349815368652
    3. '<|end|>' → logprob: -4.667349815368652
    4. '
' → logprob: -4.917349815368652
    5. ',' → logprob: -6.417349815368652
    6. '   ' → logprob: -6.917349815368652
    7. '<|end|>' → logprob: -6.917349815368652
    8. '        
' → logprob: -7.042349815368652
    9. '        ' → logprob: -7.917349815368652
    10. ')' → logprob: -8.292349815368652

Token 166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32955387234687805
    2. ':' → logprob: -1.3295538425445557
    3. '   ' → logprob: -5.829554080963135
    4. ' :' → logprob: -6.079554080963135
    5. '        
' → logprob: -6.079554080963135
    6. '=' → logprob: -6.454554080963135
    7. '
' → logprob: -6.579554080963135
    8. ' ' → logprob: -6.704554080963135
    9. '        ' → logprob: -6.829554080963135
    10. '    ' → logprob: -7.829554080963135

Token 167: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08986429870128632
    2. 'diff' → logprob: -3.5898642539978027
    3. 't' → logprob: -4.339864253997803
    4. 'for' → logprob: -4.464864253997803
    5. '
' → logprob: -4.464864253997803
    6. 'delta' → logprob: -4.839864253997803
    7. 'target' → logprob: -5.464864253997803
    8. 'tar' → logprob: -6.089864253997803
    9. 'd' → logprob: -6.214864253997803
    10. 'difference' → logprob: -6.714864253997803

Token 168: ' total' (ID: 3609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10080823302268982
    2. '
' → logprob: -2.9758081436157227
    3. 'for' → logprob: -4.100808143615723
    4. 't' → logprob: -4.725808143615723
    5. 'diff' → logprob: -4.850808143615723
    6. ' for' → logprob: -5.225808143615723
    7. 'delta' → logprob: -6.350808143615723
    8. 'd' → logprob: -6.600808143615723
    9. 'target' → logprob: -7.100808143615723
    10. 'tar' → logprob: -7.600808143615723

Token 169: '_t' (ID: 838)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8787174224853516
    2. 'for' → logprob: -1.7537174224853516
    3. '_t' → logprob: -2.0037174224853516
    4. '_score' → logprob: -2.6287174224853516
    5. 't' → logprob: -2.7537174224853516
    6. '_' → logprob: -3.1287174224853516
    7. ' for' → logprob: -4.003717422485352
    8. 's' → logprob: -4.128717422485352
    9. '_s' → logprob: -4.378717422485352
    10. '_scores' → logprob: -4.753717422485352

Token 170: ' -' (ID: 533)
  Prédit: '_score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_score' → logprob: -1.295727252960205
    2. ' -' → logprob: -1.420727252960205
    3. ' =' → logprob: -1.545727252960205
    4. '_scores' → logprob: -2.045727252960205
    5. '-' → logprob: -4.170727252960205
    6. '=' → logprob: -4.170727252960205
    7. '       ' → logprob: -4.295727252960205
    8. ',' → logprob: -4.420727252960205
    9. 'for' → logprob: -4.545727252960205
    10. 's' → logprob: -4.545727252960205

Token 171: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.08904023468494415
    2. ' t' → logprob: -2.4640402793884277
    3. 'score' → logprob: -10.33903980255127
    4. 'scores' → logprob: -11.71403980255127
    5. '   ' → logprob: -12.08903980255127
    6. '`t' → logprob: -12.08903980255127
    7. ' ' → logprob: -12.08903980255127
    8. 's' → logprob: -12.08903980255127
    9. '	t' → logprob: -12.21403980255127
    10. '```' → logprob: -12.71403980255127

Token 172: ' +' (ID: 659)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.13007551431655884
    2. '-' → logprob: -3.380075454711914
    3. '_score' → logprob: -4.130075454711914
    4. '[' → logprob: -4.130075454711914
    5. ' ' → logprob: -4.255075454711914
    6. 'score' → logprob: -4.880075454711914
    7. 's' → logprob: -4.880075454711914
    8. '_scores' → logprob: -5.380075454711914
    9. ' +' → logprob: -5.505075454711914
    10. ')' → logprob: -6.255075454711914

Token 173: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.08902584761381149
    2. ' h' → logprob: -2.4640257358551025
    3. ' ' → logprob: -10.589025497436523
    4. '<|end|>' → logprob: -11.089025497436523
    5. ''h' → logprob: -11.214025497436523
    6. '"h' → logprob: -12.464025497436523
    7. '`' → logprob: -12.589025497436523
    8. '=h' → logprob: -12.964025497436523
    9. '<|end|>' → logprob: -13.214025497436523
    10. '_h' → logprob: -13.214025497436523

Token 174: ' ==' (ID: 951)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5824874639511108
    2. '       ' → logprob: -1.7074874639511108
    3. ' ==' → logprob: -2.0824875831604004
    4. '=' → logprob: -2.2074875831604004
    5. '==' → logprob: -4.0824875831604
    6. '        ' → logprob: -5.8324875831604
    7. ' ' → logprob: -6.9574875831604
    8. '<|end|>' → logprob: -7.2074875831604
    9. '<|end|>' → logprob: -7.4574875831604
    10. ' <=' → logprob: -7.5824875831604

Token 175: ' total' (ID: 3609)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2640352249145508
    2. 'self' → logprob: -1.5140352249145508
    3. ' total' → logprob: -4.764035224914551
    4. 'total' → logprob: -6.389035224914551
    5. 'h' → logprob: -8.01403522491455
    6. ' h' → logprob: -8.13903522491455
    7. ' ' → logprob: -8.26403522491455
    8. '           ' → logprob: -8.88903522491455
    9. '        ' → logprob: -9.13903522491455
    10. '(self' → logprob: -9.26403522491455

Token 176: '_h' (ID: 3434)
  Prédit: '_t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.30068662762641907
    2. '_h' → logprob: -1.4256865978240967
    3. '_' → logprob: -4.675686836242676
    4. 't' → logprob: -5.175686836242676
    5. '_s' → logprob: -6.050686836242676
    6. 'h' → logprob: -6.925686836242676
    7. 's' → logprob: -8.050686836242676
    8. '_tar' → logprob: -9.550686836242676
    9. '   ' → logprob: -9.675686836242676
    10. 'difference' → logprob: -10.050686836242676

Token 177: ' -' (ID: 533)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09552623331546783
    2. ' and' → logprob: -2.5955262184143066
    3. ' ' → logprob: -5.470526218414307
    4. '<|end|>' → logprob: -5.470526218414307
    5. '
' → logprob: -5.720526218414307
    6. '        ' → logprob: -6.970526218414307
    7. 'and' → logprob: -7.220526218414307
    8. ',' → logprob: -7.720526218414307
    9. '        
' → logprob: -7.720526218414307
    10. '<|end|>' → logprob: -7.970526218414307

Token 178: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.056503430008888245
    2. ' h' → logprob: -3.0565035343170166
    3. 't' → logprob: -5.1815032958984375
    4. ' t' → logprob: -6.8065032958984375
    5. 's' → logprob: -7.1815032958984375
    6. ' ' → logprob: -8.931503295898438
    7. ' s' → logprob: -9.681503295898438
    8. '1' → logprob: -9.681503295898438
    9. '<|end|>' → logprob: -9.681503295898438
    10. '   ' → logprob: -11.431503295898438

Token 179: ' +' (ID: 659)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03462992236018181
    2. '
' → logprob: -4.534629821777344
    3. ' ' → logprob: -5.534629821777344
    4. '        ' → logprob: -6.034629821777344
    5. '        
' → logprob: -6.034629821777344
    6. ' +' → logprob: -6.159629821777344
    7. '<|end|>' → logprob: -6.159629821777344
    8. ')' → logprob: -6.409629821777344
    9. ' and' → logprob: -6.659629821777344
    10. '   ' → logprob: -6.909629821777344

Token 180: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.001507601235061884
    2. ' t' → logprob: -6.501507759094238
    3. '`t' → logprob: -13.626507759094238
    4. '	t' → logprob: -13.876507759094238
    5. ' ' → logprob: -13.876507759094238
    6. '_t' → logprob: -14.001507759094238
    7. '   ' → logprob: -15.001507759094238
    8. 's' → logprob: -15.376507759094238
    9. '<|end|>' → logprob: -15.751507759094238
    10. '```' → logprob: -16.126506805419922

Token 181: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25092747807502747
    2. '        
' → logprob: -3.125927448272705
    3. '
' → logprob: -3.375927448272705
    4. ' ' → logprob: -3.500927448272705
    5. '        ' → logprob: -3.625927448272705
    6. ':' → logprob: -3.625927448272705
    7. ')' → logprob: -4.625927448272705
    8. '=' → logprob: -4.750927448272705
    9. ' :' → logprob: -4.875927448272705
    10. ' =' → logprob: -5.125927448272705

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028781037777662277
    2. ' ' → logprob: -4.278780937194824
    3. ':' → logprob: -5.403780937194824
    4. ' :' → logprob: -6.403780937194824
    5. '        ' → logprob: -6.403780937194824
    6. '        
' → logprob: -6.528780937194824
    7. '#' → logprob: -7.028780937194824
    8. '   ' → logprob: -7.153780937194824
    9. '    ' → logprob: -7.278780937194824
    10. ')' → logprob: -7.278780937194824

Token 183: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02080649510025978
    2. ' ' → logprob: -4.895806312561035
    3. '        
' → logprob: -5.520806312561035
    4. '        ' → logprob: -5.645806312561035
    5. '   ' → logprob: -6.895806312561035
    6. '    ' → logprob: -7.020806312561035
    7. ' =' → logprob: -7.520806312561035
    8. ' 
' → logprob: -8.020806312561035
    9. '  
' → logprob: -8.270806312561035
    10. '=' → logprob: -8.270806312561035

Token 184: ' rearr' (ID: 98785)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1952042281627655
    2. ' for' → logprob: -2.070204257965088
    3. 'for' → logprob: -3.320204257965088
    4. ' t' → logprob: -5.445204257965088
    5. '#' → logprob: -5.820204257965088
    6. 't' → logprob: -6.195204257965088
    7. ' #' → logprob: -7.070204257965088
    8. ' total' → logprob: -7.195204257965088
    9. ' (' → logprob: -7.445204257965088
    10. '   ' → logprob: -7.820204257965088

Token 185: 'anged' (ID: 5717)
  Prédit: 'ange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ange' → logprob: -0.19555583596229553
    2. 'anged' → logprob: -2.0705559253692627
    3. 'anging' → logprob: -3.4455559253692627
    4. '=' → logprob: -4.570555686950684
    5. 'age' → logprob: -5.695555686950684
    6. '       ' → logprob: -6.320555686950684
    7. 'enge' → logprob: -6.945555686950684
    8. '   ' → logprob: -7.945555686950684
    9. '#' → logprob: -8.195555686950684
    10. 'anges' → logprob: -8.320555686950684

Token 186: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5542519092559814
    2. ' to' → logprob: -1.8042519092559814
    3. 'to' → logprob: -2.6792519092559814
    4. '       ' → logprob: -2.9292519092559814
    5. 'self' → logprob: -2.9292519092559814
    6. ' as' → logprob: -3.5542519092559814
    7. '#' → logprob: -4.679251670837402
    8. '=' → logprob: -4.804251670837402
    9. 't' → logprob: -5.054251670837402
    10. ' self' → logprob: -5.054251670837402

Token 187: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.24499018490314484
    2. 'self' → logprob: -1.6199902296066284
    3. 't' → logprob: -4.619990348815918
    4. ' self' → logprob: -4.994990348815918
    5. ' ' → logprob: -6.494990348815918
    6. '       ' → logprob: -7.744990348815918
    7. ' t' → logprob: -7.994990348815918
    8. '           ' → logprob: -8.619990348815918
    9. 'h' → logprob: -8.994990348815918
    10. '   ' → logprob: -9.244990348815918

Token 188: '2' (ID: 17)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3470402956008911
    2. '2' → logprob: -1.3470402956008911
    3. 't' → logprob: -3.4720401763916016
    4. 'h' → logprob: -6.972040176391602
    5. ' self' → logprob: -6.972040176391602
    6. ' ' → logprob: -9.347040176391602
    7. '   ' → logprob: -9.847040176391602
    8. ' t' → logprob: -10.347040176391602
    9. '       ' → logprob: -10.722040176391602
    10. '(self' → logprob: -10.972040176391602

Token 189: '*(' (ID: 14793)
  Prédit: ' *'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.018958888947963715
    2. '*' → logprob: -4.143959045410156
    3. '*(' → logprob: -6.143959045410156
    4. '*t' → logprob: -7.268959045410156
    5. ' ' → logprob: -10.893959045410156
    6. '(t' → logprob: -11.143959045410156
    7. ' *(' → logprob: -11.268959045410156
    8. ' ' → logprob: -11.518959045410156
    9. ')' → logprob: -12.768959045410156
    10. ' (' → logprob: -13.268959045410156

Token 190: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0026893247850239277
    2. 'h' → logprob: -6.377689361572266
    3. ' t' → logprob: -7.377689361572266
    4. ')t' → logprob: -8.877689361572266
    5. ')' → logprob: -9.377689361572266
    6. '(t' → logprob: -9.752689361572266
    7. '_t' → logprob: -10.127689361572266
    8. 'int' → logprob: -12.002689361572266
    9. '(' → logprob: -12.127689361572266
    10. '<|end|>' → logprob: -12.502689361572266

Token 191: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.7140986323356628
    2. ')' → logprob: -0.9640986323356628
    3. '-' → logprob: -2.2140986919403076
    4. '[' → logprob: -5.4640984535217285
    5. ' ' → logprob: -5.7140984535217285
    6. '_scores' → logprob: -6.0890984535217285
    7. 's' → logprob: -6.3390984535217285
    8. ' )' → logprob: -6.7140984535217285
    9. 'scores' → logprob: -6.9640984535217285
    10. '.s' → logprob: -7.3390984535217285

Token 192: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.011326150968670845
    2. ' h' → logprob: -4.511326313018799
    3. '<|end|>' → logprob: -8.88632583618164
    4. ' ' → logprob: -9.76132583618164
    5. ')' → logprob: -10.26132583618164
    6. '<|end|>' → logprob: -10.88632583618164
    7. '_h' → logprob: -12.13632583618164
    8. '
' → logprob: -12.38632583618164
    9. 's' → logprob: -13.13632583618164
    10. '  ' → logprob: -13.26132583618164

Token 193: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00032390307751484215
    2. ' )' → logprob: -8.250324249267578
    3. ')==' → logprob: -10.250324249267578
    4. ')=' → logprob: -10.625324249267578
    5. '')' → logprob: -14.625324249267578
    6. ')
' → logprob: -14.750324249267578
    7. '=' → logprob: -15.000324249267578
    8. ' ==' → logprob: -15.375324249267578
    9. '）' → logprob: -15.375324249267578
    10. '")' → logprob: -15.375324249267578

Token 194: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.25096428394317627
    2. '==' → logprob: -1.8759642839431763
    3. '=' → logprob: -3.3759641647338867
    4. ')' → logprob: -3.7509641647338867
    5. ' =' → logprob: -4.625964164733887
    6. ')==' → logprob: -7.375964164733887
    7. ' ' → logprob: -8.000964164733887
    8. ' )' → logprob: -9.500964164733887
    9. '[' → logprob: -10.250964164733887
    10. '       ' → logprob: -10.375964164733887

Token 195: ' difference' (ID: 9809)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018641138449311256
    2. ' self' → logprob: -4.018640995025635
    3. '<|end|>' → logprob: -8.268641471862793
    4. '(self' → logprob: -9.643641471862793
    5. '2' → logprob: -10.268641471862793
    6. '<|end|>' → logprob: -10.518641471862793
    7. ' ' → logprob: -11.393641471862793
    8. '	self' → logprob: -11.518641471862793
    9. '
' → logprob: -11.518641471862793
    10. '0' → logprob: -11.518641471862793

Token 196: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19128648936748505
    2. '
' → logprob: -1.9412864446640015
    3. '        
' → logprob: -3.941286563873291
    4. ':' → logprob: -4.941286563873291
    5. '
' → logprob: -7.816286563873291
    6. '    
' → logprob: -7.816286563873291
    7. '  
' → logprob: -7.941286563873291
    8. '<|end|>' → logprob: -8.066286087036133
    9. '   ' → logprob: -8.316286087036133
    10. ',' → logprob: -8.441286087036133

Token 197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028500445187091827
    2. '   ' → logprob: -7.12785005569458
    3. '        
' → logprob: -7.50285005569458
    4. ':' → logprob: -7.62785005569458
    5. '    ' → logprob: -8.377849578857422
    6. ' ' → logprob: -9.002849578857422
    7. '        ' → logprob: -9.127849578857422
    8. ')' → logprob: -9.752849578857422
    9. ' :' → logprob: -9.752849578857422
    10. 'def' → logprob: -9.752849578857422

Token 198: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.048322971910238266
    2. 'if' → logprob: -4.048323154449463
    3. ' if' → logprob: -4.423323154449463
    4. 'diff' → logprob: -5.298323154449463
    5. 'target' → logprob: -5.423323154449463
    6. 'd' → logprob: -6.048323154449463
    7. 'delta' → logprob: -7.048323154449463
    8. 'for' → logprob: -7.173323154449463
    9. ' for' → logprob: -7.423323154449463
    10. ' diff' → logprob: -7.673323154449463

Token 199: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6965360045433044
    2. 'target' → logprob: -1.5715360641479492
    3. 'diff' → logprob: -1.9465360641479492
    4. 'if' → logprob: -2.946536064147949
    5. 'required' → logprob: -3.821536064147949
    6. 'delta' → logprob: -4.071536064147949
    7. 'for' → logprob: -4.696536064147949
    8. 'difference' → logprob: -4.696536064147949
    9. 'needed' → logprob: -4.696536064147949
    10. 'def' → logprob: -5.071536064147949

Token 200: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.520706057548523
    2. ' if' → logprob: -1.895706057548523
    3. 'difference' → logprob: -3.2707061767578125
    4. ' for' → logprob: -3.3957061767578125
    5. 'if' → logprob: -3.5207061767578125
    6. 'diff' → logprob: -3.8957061767578125
    7. ' difference' → logprob: -4.0207061767578125
    8. ' diff' → logprob: -4.3957061767578125
    9. ' ' → logprob: -4.6457061767578125
    10. 't' → logprob: -4.6457061767578125

Token 201: ' difference' (ID: 9809)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0287741422653198
    2. ' if' → logprob: -1.1537741422653198
    3. '       ' → logprob: -2.2787742614746094
    4. 'target' → logprob: -2.7787742614746094
    5. 'diff' → logprob: -3.4037742614746094
    6. ' target' → logprob: -3.5287742614746094
    7. ' diff' → logprob: -4.028774261474609
    8. 'd' → logprob: -4.403774261474609
    9. 'for' → logprob: -4.653774261474609
    10. ' for' → logprob: -4.778774261474609

Token 202: ' must' (ID: 2804)
  Prédit: ' %'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.35180342197418213
    2. '%' → logprob: -1.2268034219741821
    3. ' must' → logprob: -6.351803302764893
    4. 'must' → logprob: -7.476803302764893
    5. '=' → logprob: -8.10180377960205
    6. ' %=' → logprob: -8.60180377960205
    7. '       ' → logprob: -9.10180377960205
    8. '   ' → logprob: -9.35180377960205
    9. ' =' → logprob: -9.60180377960205
    10. ' ' → logprob: -9.85180377960205

Token 203: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.4851357638835907
    2. '%' → logprob: -1.610135793685913
    3. 'be' → logprob: -1.735135793685913
    4. ' %' → logprob: -4.860135555267334
    5. '=' → logprob: -8.485136032104492
    6. '_be' → logprob: -9.985136032104492
    7. ')' → logprob: -10.485136032104492
    8. '	be' → logprob: -10.610136032104492
    9. 'mod' → logprob: -11.235136032104492
    10. 'div' → logprob: -11.610136032104492

Token 204: ' even' (ID: 1952)
  Prédit: 'even'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'even' → logprob: -0.10223803669214249
    2. '0' → logprob: -3.1022379398345947
    3. ' even' → logprob: -3.1022379398345947
    4. ' divisible' → logprob: -5.602238178253174
    5. 'div' → logprob: -5.977238178253174
    6. '2' → logprob: -7.227238178253174
    7. ' ' → logprob: -8.727237701416016
    8. 'zero' → logprob: -9.602237701416016
    9. 'an' → logprob: -10.727237701416016
    10. '%' → logprob: -10.852237701416016

Token 205: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027960529550909996
    2. '        
' → logprob: -4.527960300445557
    3. '
' → logprob: -5.277960300445557
    4. ':' → logprob: -5.652960300445557
    5. ' if' → logprob: -5.902960300445557
    6. '        ' → logprob: -6.527960300445557
    7. ',' → logprob: -7.277960300445557
    8. ' and' → logprob: -7.277960300445557
    9. ' 
' → logprob: -8.152960777282715
    10. '.' → logprob: -8.402960777282715

Token 206: ' (' (ID: 350)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.8175051808357239
    2. 'abs' → logprob: -1.567505121231079
    3. ' self' → logprob: -1.567505121231079
    4. ' abs' → logprob: -2.442505121231079
    5. ' (' → logprob: -3.692505121231079
    6. '(self' → logprob: -5.067505359649658
    7. '(abs' → logprob: -5.317505359649658
    8. '       ' → logprob: -5.817505359649658
    9. ' t' → logprob: -6.067505359649658
    10. 't' → logprob: -6.317505359649658

Token 207: 't' (ID: 83)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4038475751876831
    2. 't' → logprob: -1.153847575187683
    3. '(self' → logprob: -4.903847694396973
    4. '(t' → logprob: -5.778847694396973
    5. ' self' → logprob: -6.278847694396973
    6. '2' → logprob: -6.403847694396973
    7. ' t' → logprob: -7.278847694396973
    8. ' (' → logprob: -7.653847694396973
    9. '   ' → logprob: -7.653847694396973
    10. 's' → logprob: -8.778847694396973

Token 208: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4980970621109009
    2. '_' → logprob: -1.3730970621109009
    3. '-' → logprob: -2.6230969429016113
    4. ',' → logprob: -3.4980969429016113
    5. ' _' → logprob: -3.6230969429016113
    6. ')' → logprob: -5.748096942901611
    7. ' ' → logprob: -6.498096942901611
    8. ' ,' → logprob: -6.498096942901611
    9. 's' → logprob: -7.123096942901611
    10. '_difference' → logprob: -8.37309741973877

Token 209: ' h' (ID: 312)
  Prédit: ' h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' h' → logprob: -0.6327664256095886
    2. 'h' → logprob: -0.7577664256095886
    3. ' ' → logprob: -10.257766723632812
    4. '	h' → logprob: -10.382766723632812
    5. '   ' → logprob: -10.632766723632812
    6. ')' → logprob: -10.882766723632812
    7. '    ' → logprob: -11.007766723632812
    8. '(h' → logprob: -12.007766723632812
    9. '  ' → logprob: -12.382766723632812
    10. ' ' → logprob: -12.632766723632812

Token 210: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0029353871941566467
    2. ' )' → logprob: -6.002935409545898
    3. ')==' → logprob: -9.377935409545898
    4. '   ' → logprob: -9.752935409545898
    5. ')%' → logprob: -9.752935409545898
    6. '       ' → logprob: -9.877935409545898
    7. ' ==' → logprob: -10.377935409545898
    8. ')
' → logprob: -10.752935409545898
    9. '```' → logprob: -11.002935409545898
    10. '==' → logprob: -11.127935409545898

Token 211: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.11486782133579254
    2. '==' → logprob: -2.239867925643921
    3. ')' → logprob: -7.114867687225342
    4. '*' → logprob: -7.864867687225342
    5. ')==' → logprob: -8.1148681640625
    6. ' *' → logprob: -8.4898681640625
    7. ' must' → logprob: -9.2398681640625
    8. ' ' → logprob: -9.4898681640625
    9. '=' → logprob: -9.8648681640625
    10. '()==' → logprob: -10.7398681640625

Token 212: ' diff' (ID: 8868)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.020616047084331512
    2. ' self' → logprob: -3.895616054534912
    3. '(self' → logprob: -9.895615577697754
    4. '
' → logprob: -11.395615577697754
    5. 'difference' → logprob: -13.270615577697754
    6. '   ' → logprob: -13.395615577697754
    7. ' ' → logprob: -13.520615577697754
    8. 'd' → logprob: -13.770615577697754
    9. '=self' → logprob: -14.020615577697754
    10. '	self' → logprob: -14.145615577697754

Token 213: '//' (ID: 393)
  Prédit: '//'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//' → logprob: -0.657410740852356
    2. 'er' → logprob: -0.782410740852356
    3. 'ference' → logprob: -4.032410621643066
    4. ' //' → logprob: -5.907410621643066
    5. '/' → logprob: -6.782410621643066
    6. 'rence' → logprob: -7.157410621643066
    7. 'difference' → logprob: -7.907410621643066
    8. '   ' → logprob: -8.157410621643066
    9. 'eren' → logprob: -8.282410621643066
    10. 'ifference' → logprob: -8.407410621643066

Token 214: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00024215869780164212
    2. ' ' → logprob: -8.375242233276367
    3. '   ' → logprob: -11.500242233276367
    4. '```' → logprob: -14.750242233276367
    5. '       ' → logprob: -15.125242233276367
    6. '  ' → logprob: -15.625242233276367
    7. '           ' → logprob: -16.125242233276367
    8. '1' → logprob: -16.250242233276367
    9. '    ' → logprob: -16.500242233276367
    10. '     ' → logprob: -17.312742233276367

Token 215: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028416693210601807
    2. ':' → logprob: -3.903416633605957
    3. '        
' → logprob: -5.403416633605957
    4. '
' → logprob: -6.653416633605957
    5. '        ' → logprob: -7.903416633605957
    6. '   ' → logprob: -7.903416633605957
    7. ' :' → logprob: -8.778416633605957
    8. '    
' → logprob: -8.903416633605957
    9. '           ' → logprob: -9.028416633605957
    10. ' 
' → logprob: -9.528416633605957

Token 216: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0027142842300236225
    2. '        
' → logprob: -6.627714157104492
    3. '   ' → logprob: -8.127714157104492
    4. ':' → logprob: -8.377714157104492
    5. ' ' → logprob: -8.502714157104492
    6. '        ' → logprob: -8.877714157104492
    7. ' 
' → logprob: -9.127714157104492
    8. '
' → logprob: -9.252714157104492
    9. '    ' → logprob: -9.627714157104492
    10. ')' → logprob: -10.127714157104492

Token 217: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014927041716873646
    2. 'diff' → logprob: -4.264926910400391
    3. 'if' (adapté à ' if') → logprob: -7.889926910400391
    4. ' if' → logprob: -9.13992691040039
    5. ' diff' → logprob: -9.26492691040039
    6. 'd' → logprob: -9.76492691040039
    7. 'difference' → logprob: -10.88992691040039
    8. '        
' → logprob: -11.01492691040039
    9. '
' → logprob: -11.01492691040039
    10. '        ' → logprob: -11.38992691040039

Token 218: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2952631115913391
    2. ' self' → logprob: -1.4202630519866943
    3. ' abs' → logprob: -4.920263290405273
    4. 'abs' → logprob: -5.045263290405273
    5. '       ' → logprob: -8.420263290405273
    6. '   ' → logprob: -10.420263290405273
    7. '(self' → logprob: -11.545263290405273
    8. '           ' → logprob: -12.170263290405273
    9. ' ' → logprob: -12.420263290405273
    10. '    ' → logprob: -13.545263290405273

Token 219: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.18032710254192352
    2. '.' → logprob: -1.80532705783844
    3. ' .' → logprob: -7.93032693862915
    4. 'difference' → logprob: -8.555327415466309
    5. '.
' → logprob: -11.430327415466309
    6. ' difference' → logprob: -11.930327415466309
    7. '   ' → logprob: -12.430327415466309
    8. 'd' → logprob: -13.055327415466309
    9. 'Difference' → logprob: -13.805327415466309
    10. ' ' → logprob: -13.805327415466309

Token 220: 'ifference' (ID: 30083)
  Prédit: 'ifference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifference' → logprob: -0.00029065259150229394
    2. 'difference' → logprob: -8.375290870666504
    3. '_difference' → logprob: -10.625290870666504
    4. 'if' → logprob: -10.750290870666504
    5. 'ifferent' → logprob: -12.375290870666504
    6. ' if' → logprob: -12.625290870666504
    7. 'iffe' → logprob: -13.375290870666504
    8. 'iffer' → logprob: -13.750290870666504
    9. 'iff' → logprob: -14.125290870666504
    10. 'ference' → logprob: -14.250290870666504

Token 221: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.008641162887215614
    2. '%' → logprob: -4.758641242980957
    3. ' ' → logprob: -10.633641242980957
    4. ' ==' → logprob: -13.258641242980957
    5. '   ' → logprob: -15.133641242980957
    6. ' %
' → logprob: -15.883641242980957
    7. '==' → logprob: -16.13364028930664
    8. ' ' → logprob: -16.50864028930664
    9. ' is' → logprob: -16.88364028930664
    10. ' &' → logprob: -17.25864028930664

Token 222: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005533903022296727
    2. ' ' → logprob: -7.500553607940674
    3. '```' → logprob: -15.625553131103516
    4. '   ' → logprob: -15.875553131103516
    5. '  ' → logprob: -17.625553131103516
    6. '
' → logprob: -17.875553131103516
    7. '

' → logprob: -18.750553131103516
    8. '!=' → logprob: -19.313053131103516
    9. '۲' → logprob: -19.313053131103516
    10. '(' → logprob: -19.625553131103516

Token 223: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9027791495318525e-05
    2. ' ' → logprob: -10.875019073486328
    3. '```' → logprob: -17.375019073486328
    4. '   ' → logprob: -17.750019073486328
    5. '۲' → logprob: -20.125019073486328
    6. '  ' → logprob: -20.250019073486328
    7. '２' → logprob: -20.375019073486328
    8. '!=' → logprob: -21.375019073486328
    9. '२' → logprob: -21.375019073486328
    10. '0' → logprob: -21.625019073486328

Token 224: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.4741552770137787
    2. '!=' → logprob: -0.9741553068161011
    3. '==' → logprob: -10.34915542602539
    4. ' ==' → logprob: -11.47415542602539
    5. '()!=' → logprob: -11.59915542602539
    6. '   ' → logprob: -11.59915542602539
    7. ')!=' → logprob: -11.84915542602539
    8. ':' → logprob: -12.09915542602539
    9. '!==' → logprob: -13.59915542602539
    10. '```' → logprob: -14.22415542602539

Token 225: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.4740777015686035
    2. ' ' → logprob: -0.9740777015686035
    3. '=' → logprob: -15.224077224731445
    4. ' ' → logprob: -16.224077224731445
    5. '1' → logprob: -16.411577224731445
    6. '  ' → logprob: -16.536577224731445
    7. '   ' → logprob: -17.224077224731445
    8. '<|end|>' → logprob: -17.224077224731445
    9. '```' → logprob: -17.411577224731445
    10. '
' → logprob: -18.099077224731445

Token 226: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.15441757265944e-05
    2. ' ' → logprob: -10.375031471252441
    3. '1' → logprob: -15.500031471252441
    4. '   ' → logprob: -16.500032424926758
    5. '
' → logprob: -17.125032424926758
    6. '```' → logprob: -17.250032424926758
    7. '

' → logprob: -18.000032424926758
    8. '۰' → logprob: -18.625032424926758
    9. ':' → logprob: -18.687532424926758
    10. '  ' → logprob: -19.250032424926758

Token 227: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1274447739124298
    2. ':
' → logprob: -2.1274447441101074
    3. ':return' → logprob: -7.877444744110107
    4. '           ' → logprob: -9.252445220947266
    5. '       ' → logprob: -10.252445220947266
    6. ' or' → logprob: -13.127445220947266
    7. '   ' → logprob: -13.377445220947266
    8. ':
' → logprob: -14.127445220947266
    9. ':

' → logprob: -14.627445220947266
    10. '):
' → logprob: -14.627445220947266

Token 228: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0053123775869607925
    2. 'return' → logprob: -5.255312442779541
    3. ' return' → logprob: -9.630311965942383
    4. '
' → logprob: -12.005311965942383
    5. 'yield' → logprob: -12.255311965942383
    6. '       ' → logprob: -13.630311965942383
    7. ':return' → logprob: -14.880311965942383
    8. '```' → logprob: -15.755311965942383
    9. '   ' → logprob: -16.130311965942383
    10. '          ' → logprob: -17.005311965942383

Token 229: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.011553487740457058
    2. '       ' → logprob: -4.8865532875061035
    3. ' return' → logprob: -5.6365532875061035
    4. '           ' → logprob: -8.261553764343262
    5. '   ' → logprob: -9.261553764343262
    6. '	return' → logprob: -11.011553764343262
    7. '
' → logprob: -13.261553764343262
    8. '```' → logprob: -13.761553764343262
    9. ':return' → logprob: -14.136553764343262
    10. '        
' → logprob: -14.886553764343262

Token 230: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17080052196979523
    2. '       ' → logprob: -2.4208004474639893
    3. '        
' → logprob: -2.9208004474639893
    4. '
' → logprob: -5.670800685882568
    5. 'None' → logprob: -6.295800685882568
    6. '

' → logprob: -6.670800685882568
    7. 'yield' → logprob: -6.670800685882568
    8. ' ' → logprob: -6.920800685882568
    9. 'iter' → logprob: -7.045800685882568
    10. ' None' → logprob: -7.170800685882568

Token 231: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18568557500839233
    2. '
' → logprob: -2.560685634613037
    3. '        
' → logprob: -2.685685634613037
    4. 'yield' → logprob: -4.685685634613037
    5. '\n' → logprob: -6.185685634613037
    6. 'None' → logprob: -6.310685634613037
    7. ' yield' → logprob: -6.310685634613037
    8. ' None' → logprob: -6.310685634613037
    9. ' 
' → logprob: -6.435685634613037
    10. '    
' → logprob: -6.560685634613037

Token 232: ' target' (ID: 3783)
  Prédit: 'diff'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'diff' → logprob: -0.09697034955024719
    2. '       ' → logprob: -3.096970319747925
    3. ' diff' → logprob: -3.721970319747925
    4. 'target' (adapté à ' target') → logprob: -4.471970558166504
    5. 'delta' → logprob: -5.096970558166504
    6. 'half' → logprob: -6.471970558166504
    7. 'd' → logprob: -6.596970558166504
    8. ' target' → logprob: -7.846970558166504
    9. ' delta' → logprob: -7.846970558166504
    10. '        
' → logprob: -8.096970558166504

Token 233: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.5878899693489075
    2. ' =' → logprob: -0.8378899693489075
    3. '_difference' → logprob: -5.462890148162842
    4. '=' → logprob: -5.837890148162842
    5. '_delta' → logprob: -5.837890148162842
    6. 'diff' → logprob: -6.587890148162842
    7. '_gap' → logprob: -8.462889671325684
    8. '_offset' → logprob: -9.462889671325684
    9. 'Diff' → logprob: -10.712889671325684
    10. '	diff' → logprob: -10.962889671325684

Token 234: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02054562419652939
    2. '=' → logprob: -3.895545721054077
    3. ':' → logprob: -12.645545959472656
    4. ' ' → logprob: -15.770545959472656
    5. '=int' → logprob: -15.895545959472656
    6. 's' → logprob: -16.395545959472656
    7. 'd' → logprob: -17.020545959472656
    8. ',' → logprob: -17.395545959472656
    9. '   ' → logprob: -17.645545959472656
    10. '_' → logprob: -17.895545959472656

Token 235: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03804183006286621
    2. ' self' → logprob: -3.288041830062866
    3. '(self' → logprob: -15.663042068481445
    4. '       ' → logprob: -16.788042068481445
    5. '   ' → logprob: -17.163042068481445
    6. '	self' → logprob: -17.663042068481445
    7. '[self' → logprob: -18.038042068481445
    8. ' ' → logprob: -18.538042068481445
    9. '=self' → logprob: -19.163042068481445
    10. '
' → logprob: -19.288042068481445

Token 236: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.00031615851912647486
    2. 'difference' → logprob: -8.125316619873047
    3. '.' → logprob: -11.500316619873047
    4. 'd' → logprob: -11.750316619873047
    5. ' .' → logprob: -14.000316619873047
    6. ' difference' → logprob: -14.875316619873047
    7. '_difference' → logprob: -15.250316619873047
    8. '	d' → logprob: -15.375316619873047
    9. 'ifference' → logprob: -15.875316619873047
    10. 'Difference' → logprob: -16.500316619873047

Token 237: 'ifference' (ID: 30083)
  Prédit: 'ifference'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ifference' → logprob: -4.417976379045285e-05
    2. 'difference' → logprob: -10.125043869018555
    3. 'if' → logprob: -13.875043869018555
    4. 'ifferent' → logprob: -13.875043869018555
    5. '_difference' → logprob: -14.750043869018555
    6. 'ifer' → logprob: -15.125043869018555
    7. '   ' → logprob: -15.250043869018555
    8. 'iffer' → logprob: -15.250043869018555
    9. 'ference' → logprob: -15.500043869018555
    10. 'I' → logprob: -15.625043869018555

Token 238: ' //' (ID: 602)
  Prédit: ' //'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.011105949059128761
    2. '//' → logprob: -4.511106014251709
    3. '       ' → logprob: -10.88610553741455
    4. ' ' → logprob: -11.01110553741455
    5. '   ' → logprob: -11.13610553741455
    6. '
' → logprob: -13.01110553741455
    7. ' ' → logprob: -13.13610553741455
    8. '    ' → logprob: -13.76110553741455
    9. '  ' → logprob: -14.38610553741455
    10. '2' → logprob: -14.51110553741455

Token 239: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.4987974029500037e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -14.500024795532227
    4. '```' → logprob: -17.500024795532227
    5. '  ' → logprob: -17.625024795532227
    6. '1' → logprob: -18.000024795532227
    7. '    ' → logprob: -18.062524795532227
    8. '       ' → logprob: -18.625024795532227
    9. '۲' → logprob: -18.625024795532227
    10. '
' → logprob: -19.000024795532227

Token 240: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.318681188422488e-05
    2. ' ' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.50001335144043
    4. '  ' → logprob: -19.12501335144043
    5. '

' → logprob: -19.62501335144043
    6. '
' → logprob: -19.68751335144043
    7. '```' → logprob: -19.75001335144043
    8. '２' → logprob: -19.87501335144043
    9. '۲' → logprob: -20.18751335144043
    10. '1' → logprob: -20.37501335144043

Token 241: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21072793006896973
    2. '
' → logprob: -1.7107279300689697
    3. '        
' → logprob: -4.835727691650391
    4. '  
' → logprob: -7.585727691650391
    5. '    
' → logprob: -7.835727691650391
    6. ' for' → logprob: -8.71072769165039
    7. 'for' → logprob: -9.33572769165039
    8. '   ' → logprob: -9.83572769165039
    9. ' 
' → logprob: -9.96072769165039
    10. '
' → logprob: -11.21072769165039

Token 242: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01716144196689129
    2. 'for' → logprob: -4.1421613693237305
    3. '   ' → logprob: -7.1421613693237305
    4. ' for' → logprob: -8.89216136932373
    5. '        
' → logprob: -9.26716136932373
    6. '
' → logprob: -9.39216136932373
    7. '    
' → logprob: -11.39216136932373
    8. '           ' → logprob: -12.51716136932373
    9. '```' → logprob: -14.01716136932373
    10. 't' → logprob: -14.26716136932373

Token 243: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1636599898338318
    2. 't' → logprob: -2.1636600494384766
    3. '       ' → logprob: -3.5386600494384766
    4. 'scores' → logprob: -5.788660049438477
    5. 'tar' → logprob: -6.538660049438477
    6. 'seen' → logprob: -6.663660049438477
    7. 'score' → logprob: -7.538660049438477
    8. 'han' → logprob: -9.163660049438477
    9. '   ' → logprob: -9.288660049438477
    10. 'def' → logprob: -9.663660049438477

Token 244: ' Use' (ID: 7649)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.1828305572271347
    2. 'seen' → logprob: -3.057830572128296
    3. 'for' → logprob: -3.182830572128296
    4. 'scores' → logprob: -3.307830572128296
    5. 'han' → logprob: -4.307830333709717
    6. 'score' → logprob: -4.932830333709717
    7. 'tar' → logprob: -5.682830333709717
    8. '   ' → logprob: -5.932830333709717
    9. 'target' → logprob: -5.932830333709717
    10. 'from' → logprob: -6.182830333709717

Token 245: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.058918166905641556
    2. ' set' → logprob: -3.3089182376861572
    3. 'sorted' → logprob: -4.433917999267578
    4. '{' → logprob: -6.183917999267578
    5. 'from' → logprob: -6.433917999267578
    6. 'for' → logprob: -6.683917999267578
    7. 'sets' → logprob: -6.933917999267578
    8. '   ' → logprob: -7.558917999267578
    9. 't' → logprob: -7.558917999267578
    10. 'hash' → logprob: -8.183917999267578

Token 246: ' for' (ID: 395)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.796256422996521
    2. 't' → logprob: -1.671256422996521
    3. '       ' → logprob: -1.921256422996521
    4. '_t' → logprob: -1.921256422996521
    5. '_h' → logprob: -4.1712565422058105
    6. ' of' → logprob: -4.6712565422058105
    7. ' t' → logprob: -5.0462565422058105
    8. '   ' → logprob: -5.0462565422058105
    9. '(t' → logprob: -5.4212565422058105
    10. 'han' → logprob: -5.4212565422058105

Token 247: ' Han' (ID: 21513)
  Prédit: 'han'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'han' → logprob: -0.15921220183372498
    2. ' han' → logprob: -3.284212112426758
    3. ' fast' → logprob: -3.659212112426758
    4. 'fast' → logprob: -3.784212112426758
    5. ' quick' → logprob: -4.409212112426758
    6. ' faster' → logprob: -4.409212112426758
    7. '       ' → logprob: -4.659212112426758
    8. '   ' → logprob: -5.409212112426758
    9. 't' → logprob: -5.659212112426758
    10. 'h' → logprob: -5.784212112426758

Token 248: 'ako' (ID: 5938)
  Prédit: 'ako'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ako' → logprob: -0.6898194551467896
    2. '       ' → logprob: -1.3148194551467896
    3. '   ' → logprob: -2.1898193359375
    4. 'oko' → logprob: -3.8148193359375
    5. '           ' → logprob: -3.9398193359375
    6. 'ko' → logprob: -4.4398193359375
    7. ' ' → logprob: -4.9398193359375
    8. ''s' → logprob: -5.0648193359375
    9. '_set' → logprob: -5.1898193359375
    10. 'o' → logprob: -5.4398193359375

Token 249: ''s' (ID: 885)
  Prédit: '_scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_scores' → logprob: -0.7440366148948669
    2. 'scores' → logprob: -1.7440366744995117
    3. '_cards' → logprob: -1.8690366744995117
    4. '       ' → logprob: -2.3690366744995117
    5. 'cards' → logprob: -3.2440366744995117
    6. 's' → logprob: -3.4940366744995117
    7. '_s' → logprob: -4.494036674499512
    8. ' scores' → logprob: -4.994036674499512
    9. '   ' → logprob: -5.369036674499512
    10. ' cards' → logprob: -5.994036674499512

Token 250: ' cards' (ID: 10541)
  Prédit: 'scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'scores' → logprob: -0.07831995189189911
    2. 'cards' → logprob: -3.078320026397705
    3. ' scores' → logprob: -3.703320026397705
    4. ' cards' → logprob: -6.328320026397705
    5. '_scores' → logprob: -6.453320026397705
    6. 's' → logprob: -7.453320026397705
    7. 'self' → logprob: -8.578319549560547
    8. '_cards' → logprob: -9.203319549560547
    9. 'values' → logprob: -9.578319549560547
    10. 'hand' → logprob: -9.953319549560547

Token 251: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02875092253088951
    2. 'han' → logprob: -4.778750896453857
    3. ' =' → logprob: -5.528750896453857
    4. 's' → logprob: -5.653750896453857
    5. 'h' → logprob: -5.903750896453857
    6. '_h' → logprob: -6.028750896453857
    7. ',' → logprob: -6.653750896453857
    8. '   ' → logprob: -7.153750896453857
    9. 'scores' → logprob: -7.153750896453857
    10. ' han' → logprob: -7.278750896453857

Token 252: ' fast' (ID: 5661)
  Prédit: 'O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'O' → logprob: -0.5068190693855286
    2. ' O' → logprob: -1.0068190097808838
    3. 'fast' → logprob: -3.881819009780884
    4. ' fast' → logprob: -4.881819248199463
    5. ' faster' → logprob: -6.506819248199463
    6. ' quick' → logprob: -7.131819248199463
    7. '   ' → logprob: -7.506819248199463
    8. 'quick' → logprob: -7.756819248199463
    9. 'constant' → logprob: -8.631818771362305
    10. 'efficient' → logprob: -9.006818771362305

Token 253: ' lookup' (ID: 37342)
  Prédit: 'lookup'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lookup' → logprob: -0.2754080295562744
    2. ' lookup' → logprob: -1.5254080295562744
    3. 'membership' → logprob: -4.900407791137695
    4. '_lookup' → logprob: -5.150407791137695
    5. ' membership' → logprob: -5.275407791137695
    6. 'look' → logprob: -5.650407791137695
    7. ' look' → logprob: -6.900407791137695
    8. '   ' → logprob: -8.775407791137695
    9. 'h' → logprob: -9.525407791137695
    10. 'han' → logprob: -10.400407791137695

Token 254: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009947914630174637
    2. 'han' → logprob: -5.509947776794434
    3. 'h' → logprob: -6.384947776794434
    4. '        
' → logprob: -6.884947776794434
    5. '<|end|>' → logprob: -7.009947776794434
    6. 's' → logprob: -7.759947776794434
    7. '
' → logprob: -8.134947776794434
    8. ',' → logprob: -8.259947776794434
    9. ' h' → logprob: -8.884947776794434
    10. '   ' → logprob: -9.009947776794434

Token 255: ' candidates' (ID: 18116)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07394078373908997
    2. ' self' → logprob: -3.6989407539367676
    3. 'h' → logprob: -3.8239407539367676
    4. 'scores' → logprob: -4.073940753936768
    5. 'set' → logprob: -6.698940753936768
    6. 's' → logprob: -6.698940753936768
    7. '   ' → logprob: -6.823940753936768
    8. ' scores' → logprob: -6.948940753936768
    9. 'han' → logprob: -7.073940753936768
    10. ' h' → logprob: -7.448940753936768

Token 256: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004910073708742857
    2. 'han' → logprob: -6.504909992218018
    3. 'h' → logprob: -6.879909992218018
    4. '        
' → logprob: -7.129909992218018
    5. '
' → logprob: -8.129910469055176
    6. ',' → logprob: -8.629910469055176
    7. '   ' → logprob: -8.629910469055176
    8. 's' → logprob: -8.629910469055176
    9. '<|end|>' → logprob: -8.879910469055176
    10. '<|end|>' → logprob: -9.879910469055176

Token 257: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.033692266792058945
    2. 'han' → logprob: -3.5336923599243164
    3. 'h' → logprob: -6.533692359924316
    4. '        
' → logprob: -6.658692359924316
    5. '   ' → logprob: -7.908692359924316
    6. 's' → logprob: -8.783692359924316
    7. '
' → logprob: -9.533692359924316
    8. ' han' → logprob: -9.783692359924316
    9. 'hs' → logprob: -9.783692359924316
    10. '        ' → logprob: -10.033692359924316

Token 258: ' han' (ID: 6648)
  Prédit: 'han'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'han' (adapté à ' han') → logprob: -0.0045479657128453255
    2. '       ' → logprob: -5.754548072814941
    3. 'h' → logprob: -6.879548072814941
    4. ' han' → logprob: -8.629548072814941
    5. '   ' → logprob: -10.129548072814941
    6. 'self' → logprob: -10.379548072814941
    7. 'hand' → logprob: -10.754548072814941
    8. 'hana' → logprob: -11.129548072814941
    9. 'hann' → logprob: -11.629548072814941
    10. 'hs' → logprob: -12.004548072814941

Token 259: 'ako' (ID: 5938)
  Prédit: 'ako'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ako' → logprob: -2.2127087504486553e-05
    2. 'a' → logprob: -11.500021934509277
    3. 'ak' → logprob: -11.625021934509277
    4. '   ' → logprob: -14.000021934509277
    5. 'ако' → logprob: -14.500021934509277
    6. '```' → logprob: -14.625021934509277
    7. '_' → logprob: -14.875021934509277
    8. 'eko' → logprob: -15.500021934509277
    9. 'ko' → logprob: -15.625021934509277
    10. '
' → logprob: -16.500022888183594

Token 260: '_scores' (ID: 63345)
  Prédit: '_cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.4127441346645355
    2. '_set' → logprob: -1.662744164466858
    3. '_scores' → logprob: -1.912744164466858
    4. '_values' → logprob: -7.162744045257568
    5. '_card' → logprob: -10.412744522094727
    6. ' =' → logprob: -10.412744522094727
    7. '_vals' → logprob: -10.787744522094727
    8. '_sets' → logprob: -12.662744522094727
    9. '_numbers' → logprob: -12.662744522094727
    10. 'cards' → logprob: -12.912744522094727

Token 261: '_set' (ID: 5451)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1074342206120491
    2. '=' → logprob: -2.9824342727661133
    3. '_set' → logprob: -2.9824342727661133
    4. '=set' → logprob: -8.107434272766113
    5. 'set' → logprob: -9.107434272766113
    6. 's' → logprob: -10.107434272766113
    7. '_scores' → logprob: -10.482434272766113
    8. 'et' → logprob: -11.482434272766113
    9. 'Set' → logprob: -11.732434272766113
    10. '   ' → logprob: -11.982434272766113

Token 262: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0036086246836930513
    2. '=' → logprob: -5.628608703613281
    3. ':' → logprob: -12.003608703613281
    4. ' ' → logprob: -13.753608703613281
    5. '=set' → logprob: -14.128608703613281
    6. 's' → logprob: -15.503608703613281
    7. '       ' → logprob: -15.753608703613281
    8. ' =
' → logprob: -16.37860870361328
    9. ')' → logprob: -16.87860870361328
    10. '   ' → logprob: -17.00360870361328

Token 263: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.048589982092380524
    2. ' set' → logprob: -3.0485899448394775
    3. '	set' → logprob: -13.923589706420898
    4. '=set' → logprob: -13.923589706420898
    5. '{' → logprob: -15.298589706420898
    6. '(set' → logprob: -15.423589706420898
    7. '   ' → logprob: -15.423589706420898
    8. ')set' → logprob: -16.5485897064209
    9. '_set' → logprob: -17.7985897064209
    10. 's' → logprob: -17.7985897064209

Token 264: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -4.961759259458631e-06
    2. '(' → logprob: -12.625004768371582
    3. 'self' → logprob: -13.625004768371582
    4. '(
' → logprob: -15.375004768371582
    5. '(h' → logprob: -15.875004768371582
    6. ' (' → logprob: -18.1250057220459
    7. '       ' → logprob: -18.3750057220459
    8. '   ' → logprob: -18.7500057220459
    9. '	self' → logprob: -19.0000057220459
    10. '[self' → logprob: -19.3750057220459

Token 265: '.h' (ID: 1508)
  Prédit: '.h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -0.0001329791557509452
    2. '.' → logprob: -10.12513256072998
    3. ').' → logprob: -10.25013256072998
    4. ' .' → logprob: -10.25013256072998
    5. 'han' → logprob: -11.87513256072998
    6. 'h' → logprob: -13.12513256072998
    7. 'self' → logprob: -13.25013256072998
    8. '().' → logprob: -13.37513256072998
    9. '   ' → logprob: -13.62513256072998
    10. '
' → logprob: -14.00013256072998

Token 266: 'an' (ID: 270)
  Prédit: 'an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.0002378673671046272
    2. '.an' → logprob: -9.250237464904785
    3. '.h' → logprob: -9.875237464904785
    4. 'han' → logprob: -10.625237464904785
    5. '.' → logprob: -11.125237464904785
    6. 'anak' → logprob: -12.125237464904785
    7. 'h' → logprob: -12.250237464904785
    8. 'a' → logprob: -12.250237464904785
    9. '_' → logprob: -12.500237464904785
    10. '_an' → logprob: -12.750237464904785

Token 267: 'ako' (ID: 5938)
  Prédit: 'ako'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ako' → logprob: -7.624555291840807e-05
    2. 'ak' → logprob: -10.625076293945312
    3. 'ако' → logprob: -11.250076293945312
    4. '   ' → logprob: -11.375076293945312
    5. '```' → logprob: -11.875076293945312
    6. 'a' → logprob: -12.500076293945312
    7. 'ko' → logprob: -12.625076293945312
    8. '_' → logprob: -13.125076293945312
    9. '
' → logprob: -13.125076293945312
    10. ' ako' → logprob: -14.250076293945312

Token 268: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.0007536433404311538
    2. ')' → logprob: -7.625753879547119
    3. 'scores' → logprob: -8.375753402709961
    4. '.' → logprob: -11.125753402709961
    5. ' .' → logprob: -11.750753402709961
    6. 's' → logprob: -12.625753402709961
    7. ')}' → logprob: -13.000753402709961
    8. ')
' → logprob: -13.125753402709961
    9. ')s' → logprob: -13.625753402709961
    10. '_scores' → logprob: -13.875753402709961

Token 269: 'cores' (ID: 12071)
  Prédit: 'cores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cores' → logprob: -0.00040695868665352464
    2. 'scores' → logprob: -7.875406742095947
    3. 'core' → logprob: -11.250407218933105
    4. 'ores' → logprob: -12.500407218933105
    5. 'c' → logprob: -12.750407218933105
    6. 'co' → logprob: -13.000407218933105
    7. '_scores' → logprob: -14.375407218933105
    8. 'tores' → logprob: -14.375407218933105
    9. '(scores' → logprob: -14.625407218933105
    10. 'cor' → logprob: -14.625407218933105

Token 270: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.033862028270959854
    2. ')
' → logprob: -3.4088621139526367
    3. '       ' → logprob: -8.658862113952637
    4. ' )' → logprob: -11.283862113952637
    5. ')

' → logprob: -11.283862113952637
    6. ')
' → logprob: -11.408862113952637
    7. '   ' → logprob: -12.783862113952637
    8. ' )
' → logprob: -13.408862113952637
    9. ')`
' → logprob: -14.408862113952637
    10. ')`' → logprob: -15.033862113952637

Token 271: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005372845567762852
    2. 'for' → logprob: -5.755373001098633
    3. ' for' → logprob: -7.005373001098633
    4. '        
' → logprob: -7.380373001098633
    5. '
' → logprob: -7.630373001098633
    6. '   ' → logprob: -8.880373001098633
    7. '    
' → logprob: -11.130373001098633
    8. '```' → logprob: -11.755373001098633
    9. '  
' → logprob: -12.755373001098633
    10. '           ' → logprob: -13.005373001098633

Token 272: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07491829246282578
    2. 'for' (adapté à ' for') → logprob: -2.699918270111084
    3. ' for' → logprob: -5.324918270111084
    4. '        
' → logprob: -9.449918746948242
    5. '   ' → logprob: -11.199918746948242
    6. '```' → logprob: -13.199918746948242
    7. '           ' → logprob: -13.824918746948242
    8. '      ' → logprob: -13.824918746948242
    9. '	for' → logprob: -13.949918746948242
    10. '    
' → logprob: -14.699918746948242

Token 273: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2551264464855194
    2. ' t' → logprob: -1.5051264762878418
    3. ' tar' → logprob: -6.505126476287842
    4. 'tar' → logprob: -6.880126476287842
    5. '   ' → logprob: -7.755126476287842
    6. '	t' → logprob: -9.255125999450684
    7. ' ' → logprob: -10.130125999450684
    8. '  ' → logprob: -11.005125999450684
    9. '    ' → logprob: -11.005125999450684
    10. 'score' → logprob: -11.380125999450684

Token 274: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42534512281417847
    2. 'in' → logprob: -1.3003451824188232
    3. '_score' → logprob: -2.9253451824188232
    4. 'score' → logprob: -4.300344944000244
    5. '_' → logprob: -5.425344944000244
    6. '_in' → logprob: -6.675344944000244
    7. '_scores' → logprob: -7.175344944000244
    8. ' score' → logprob: -9.425345420837402
    9. ' ' → logprob: -10.050345420837402
    10. ' _' → logprob: -10.175345420837402

Token 275: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008626513183116913
    2. ' self' → logprob: -4.758626461029053
    3. 'elf' → logprob: -11.633626937866211
    4. '	self' → logprob: -13.508626937866211
    5. '(self' → logprob: -14.008626937866211
    6. '   ' → logprob: -15.883626937866211
    7. '=self' → logprob: -16.00862693786621
    8. '_self' → logprob: -16.38362693786621
    9. '[self' → logprob: -16.38362693786621
    10. ' ' → logprob: -16.50862693786621

Token 276: '.t' (ID: 1370)
  Prédit: '.t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.t' → logprob: -7.338466093642637e-05
    2. '.s' → logprob: -9.750073432922363
    3. '.tar' → logprob: -12.250073432922363
    4. ' .' → logprob: -12.750073432922363
    5. 't' → logprob: -13.000073432922363
    6. '.' → logprob: -13.125073432922363
    7. '	t' → logprob: -13.500073432922363
    8. 's' → logprob: -14.500073432922363
    9. 'scores' → logprob: -14.750073432922363
    10. 'tar' → logprob: -16.125072479248047

Token 277: 'aro' (ID: 8421)
  Prédit: 'aro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aro' → logprob: -0.046788182109594345
    2. 'ar' → logprob: -3.546788215637207
    3. 's' → logprob: -4.921788215637207
    4. 'ro' → logprob: -5.671788215637207
    5. '.s' → logprob: -6.296788215637207
    6. 'o' → logprob: -6.296788215637207
    7. 'scores' → logprob: -6.296788215637207
    8. 'tar' → logprob: -9.296788215637207
    9. '.t' → logprob: -9.546788215637207
    10. 't' → logprob: -9.671788215637207

Token 278: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -5.6457742175552994e-05
    2. '.' → logprob: -9.875056266784668
    3. ' .' → logprob: -13.125056266784668
    4. ':' → logprob: -13.625056266784668
    5. 'scores' → logprob: -14.125056266784668
    6. '_scores' → logprob: -15.250056266784668
    7. ':
' → logprob: -16.000057220458984
    8. ').' → logprob: -16.000057220458984
    9. 's' → logprob: -16.250057220458984
    10. ')' → logprob: -16.375057220458984

Token 279: 'cores' (ID: 12071)
  Prédit: 'cores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cores' → logprob: -9.412610233994201e-05
    2. 'scores' → logprob: -9.375094413757324
    3. 'ores' → logprob: -12.375094413757324
    4. 'co' → logprob: -13.750094413757324
    5. 'core' → logprob: -14.000094413757324
    6. 'c' → logprob: -14.625094413757324
    7. 'coes' → logprob: -14.625094413757324
    8. 'cor' → logprob: -14.625094413757324
    9. 'tores' → logprob: -14.750094413757324
    10. '```' → logprob: -15.125094413757324

Token 280: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003673471510410309
    2. ':
' → logprob: -5.628673553466797
    3. '       ' → logprob: -10.878673553466797
    4. ',' → logprob: -11.003673553466797
    5. '):' → logprob: -11.003673553466797
    6. '           ' → logprob: -12.003673553466797
    7. '):
' → logprob: -12.378673553466797
    8. ' :' → logprob: -12.878673553466797
    9. ':
' → logprob: -13.378673553466797
    10. ':

' → logprob: -13.753673553466797

Token 281: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6618137359619141
    2. '       ' → logprob: -0.7868137359619141
    3. '   ' → logprob: -4.661813735961914
    4. ' if' → logprob: -5.161813735961914
    5. '<|end|>' → logprob: -5.161813735961914
    6. '<|end|>' → logprob: -6.411813735961914
    7. '    ' → logprob: -6.536813735961914
    8. '        ' → logprob: -6.911813735961914
    9. '            
' → logprob: -7.036813735961914
    10. 'if' → logprob: -7.661813735961914

Token 282: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' (adapté à ' h') → logprob: -0.14934536814689636
    2. '           ' → logprob: -2.5243453979492188
    3. ' h' → logprob: -3.6493453979492188
    4. 'needed' → logprob: -4.274345397949219
    5. ' needed' → logprob: -5.274345397949219
    6. 'if' → logprob: -5.899345397949219
    7. 'candidate' → logprob: -6.524345397949219
    8. 'required' → logprob: -6.649345397949219
    9. 'target' → logprob: -6.649345397949219
    10. 'diff' → logprob: -6.774345397949219

Token 283: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2752523124217987
    2. '=' → logprob: -1.525252342224121
    3. '_candidate' → logprob: -4.775252342224121
    4. '_' → logprob: -4.900252342224121
    5. '_candidates' → logprob: -5.775252342224121
    6. '_score' → logprob: -7.275252342224121
    7. '_space' → logprob: -7.400252342224121
    8. 'if' → logprob: -7.400252342224121
    9. ' if' → logprob: -7.775252342224121
    10. ' ' → logprob: -8.400252342224121

Token 284: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.20141489803791046
    2. ' t' → logprob: -1.701414942741394
    3. ' ' → logprob: -14.451415061950684
    4. '	t' → logprob: -14.451415061950684
    5. '`t' → logprob: -15.201415061950684
    6. '(t' → logprob: -15.826415061950684
    7. 's' → logprob: -17.076414108276367
    8. '<t' → logprob: -17.201414108276367
    9. '   ' → logprob: -17.201414108276367
    10. '  ' → logprob: -17.701414108276367

Token 285: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.20144082605838776
    2. ' -' → logprob: -1.7014408111572266
    3. '-target' → logprob: -10.576440811157227
    4. '-score' → logprob: -15.076440811157227
    5. '-ex' → logprob: -15.326440811157227
    6. '-t' → logprob: -15.576440811157227
    7. '<|end|>' → logprob: -15.951440811157227
    8. '-user' → logprob: -15.951440811157227
    9. '-code' → logprob: -16.826440811157227
    10. '-level' → logprob: -16.826440811157227

Token 286: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.00861456897109747
    2. ' target' → logprob: -4.758614540100098
    3. '(target' → logprob: -17.258615493774414
    4. '[target' → logprob: -17.258615493774414
    5. '	target' → logprob: -18.383615493774414
    6. ' ' → logprob: -19.383615493774414
    7. 'arget' → logprob: -20.008615493774414
    8. 'taget' → logprob: -20.133615493774414
    9. 'space' → logprob: -20.258615493774414
    10. ',target' → logprob: -20.383615493774414

Token 287: '_diff' (ID: 41047)
  Prédit: '_diff'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_diff' → logprob: -0.0009134899592027068
    2. 'diff' → logprob: -7.000913619995117
    3. 'difference' → logprob: -14.500913619995117
    4. '	diff' → logprob: -14.750913619995117
    5. 'Diff' → logprob: -14.875913619995117
    6. '_DIFF' → logprob: -15.625913619995117
    7. 'dif' → logprob: -15.750913619995117
    8. 'target' → logprob: -15.750913619995117
    9. '_difference' → logprob: -15.875913619995117
    10. '_target' → logprob: -17.250913619995117

Token 288: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02182677574455738
    2. '       ' → logprob: -4.27182674407959
    3. '<|end|>' → logprob: -5.27182674407959
    4. ' if' → logprob: -6.64682674407959
    5. 'if' → logprob: -8.39682674407959
    6. '   ' → logprob: -8.77182674407959
    7. '        ' → logprob: -8.89682674407959
    8. '          ' → logprob: -9.02182674407959
    9. '<|end|>' → logprob: -9.27182674407959
    10. ' ' → logprob: -9.39682674407959

Token 289: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00041065402911044657
    2. '<|end|>' → logprob: -8.250411033630371
    3. '		' → logprob: -9.750411033630371
    4. '<|end|>' → logprob: -10.875411033630371
    5. '	       ' → logprob: -11.250411033630371
    6. '
' → logprob: -11.375411033630371
    7. '       ' → logprob: -11.375411033630371
    8. '            
' → logprob: -11.500411033630371
    9. ' if' → logprob: -11.625411033630371
    10. '               ' → logprob: -13.000411033630371

Token 290: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5840076208114624
    2. 'if' (adapté à ' if') → logprob: -0.8340076208114624
    3. '           ' → logprob: -4.834007740020752
    4. '
' → logprob: -10.709007263183594
    5. '            
' → logprob: -11.084007263183594
    6. ' ' → logprob: -11.334007263183594
    7. '	if' → logprob: -11.459007263183594
    8. ')' → logprob: -12.584007263183594
    9. ' 
' → logprob: -12.709007263183594
    10. '<|end|>' → logprob: -12.709007263183594

Token 291: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.34844812750816345
    2. ' h' → logprob: -1.2234481573104858
    3. '	h' → logprob: -13.973447799682617
    4. ' ' → logprob: -14.348447799682617
    5. '           ' → logprob: -14.848447799682617
    6. '(h' → logprob: -15.223447799682617
    7. ' ' → logprob: -15.223447799682617
    8. '<h' → logprob: -16.098447799682617
    9. '_h' → logprob: -16.223447799682617
    10. '```' → logprob: -16.473447799682617

Token 292: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009793040342628956
    2. 'in' → logprob: -4.634792804718018
    3. ' ' → logprob: -10.259793281555176
    4. '<|end|>' → logprob: -13.884793281555176
    5. '	in' → logprob: -15.134793281555176
    6. ' not' → logprob: -15.259793281555176
    7. ')' → logprob: -15.884793281555176
    8. '<|end|>' → logprob: -16.25979232788086
    9. 'h' → logprob: -16.38479232788086
    10. ' ' → logprob: -16.38479232788086

Token 293: ' han' (ID: 6648)
  Prédit: 'han'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'han' → logprob: -0.023251304402947426
    2. ' han' → logprob: -3.7732512950897217
    3. ' ' → logprob: -13.3982515335083
    4. 'hen' → logprob: -14.3982515335083
    5. ' hans' → logprob: -14.7732515335083
    6. 'hang' → logprob: -14.8982515335083
    7. 'ha' → logprob: -14.8982515335083
    8. 'h' → logprob: -15.0232515335083
    9. 'ham' → logprob: -15.0232515335083
    10. 'hana' → logprob: -15.0232515335083

Token 294: 'ako' (ID: 5938)
  Prédit: 'ako'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ako' → logprob: -2.4987974029500037e-05
    2. 'ko' → logprob: -10.750024795532227
    3. 'ak' → logprob: -14.000024795532227
    4. 'ако' → logprob: -14.000024795532227
    5. 'oko' → logprob: -14.375024795532227
    6. '```' → logprob: -14.750024795532227
    7. 'aku' → logprob: -15.500024795532227
    8. '_' → logprob: -15.750024795532227
    9. '
' → logprob: -16.125024795532227
    10. '   ' → logprob: -17.000024795532227

Token 295: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -2.45848218582978e-06
    2. 'scores' → logprob: -13.00000286102295
    3. '_score' → logprob: -17.375001907348633
    4. 's' → logprob: -17.500001907348633
    5. '_cards' → logprob: -17.625001907348633
    6. '_' → logprob: -17.750001907348633
    7. ' scores' → logprob: -18.000001907348633
    8. '_s' → logprob: -18.250001907348633
    9. '
' → logprob: -18.625001907348633
    10. 'Scores' → logprob: -18.750001907348633

Token 296: '_set' (ID: 5451)
  Prédit: '_set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_set' → logprob: -7.457669562427327e-05
    2. 'set' → logprob: -9.62507438659668
    3. 'et' → logprob: -12.50007438659668
    4. 'Set' → logprob: -12.87507438659668
    5. '_' → logprob: -14.50007438659668
    6. ')' → logprob: -14.87507438659668
    7. '_SET' → logprob: -15.25007438659668
    8. 's' → logprob: -16.12507438659668
    9. ')set' → logprob: -16.12507438659668
    10. '   ' → logprob: -16.25007438659668

Token 297: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16137950122356415
    2. ':
' → logprob: -1.9113794565200806
    3. '           ' → logprob: -7.161379337310791
    4. '               ' → logprob: -8.16137981414795
    5. ' and' → logprob: -10.28637981414795
    6. '):
' → logprob: -10.53637981414795
    7. ':return' → logprob: -11.53637981414795
    8. ',' → logprob: -11.91137981414795
    9. '():
' → logprob: -11.91137981414795
    10. '):' → logprob: -12.91137981414795

Token 298: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0013333364622667432
    2. ' yield' → logprob: -7.251333236694336
    3. 'yield' → logprob: -7.626333236694336
    4. '           ' → logprob: -9.126333236694336
    5. '
' → logprob: -11.251333236694336
    6. ':' → logprob: -12.126333236694336
    7. '	yield' → logprob: -12.876333236694336
    8. '```' → logprob: -13.376333236694336
    9. ':
' → logprob: -13.501333236694336
    10. 'Yield' → logprob: -13.626333236694336

Token 299: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.3320655822753906
    2. '               ' → logprob: -1.3320655822753906
    3. ' yield' → logprob: -4.082065582275391
    4. '           ' → logprob: -6.457065582275391
    5. '
' → logprob: -9.45706558227539
    6. '	yield' → logprob: -9.58206558227539
    7. '                   ' → logprob: -10.33206558227539
    8. 'Yield' → logprob: -12.33206558227539
    9. '   ' → logprob: -14.20706558227539
    10. '       ' → logprob: -14.58206558227539

Token 300: ' (' (ID: 350)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.01815614476799965
    2. ' (' → logprob: -4.018156051635742
    3. 't' → logprob: -12.893156051635742
    4. '(' → logprob: -13.393156051635742
    5. '               ' → logprob: -13.643156051635742
    6. '           ' → logprob: -15.018156051635742
    7. ' t' → logprob: -15.018156051635742
    8. '   ' → logprob: -15.018156051635742
    9. '(
' → logprob: -17.768156051635742
    10. '                   ' → logprob: -17.768156051635742

Token 301: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -4.842555426876061e-06
    2. ' t' → logprob: -12.250004768371582
    3. '	t' → logprob: -17.8750057220459
    4. '   ' → logprob: -18.0000057220459
    5. '`t' → logprob: -18.5000057220459
    6. ')t' → logprob: -18.6250057220459
    7. '(t' → logprob: -19.5000057220459
    8. '           ' → logprob: -21.8750057220459
    9. ' ' → logprob: -22.0000057220459
    10. ')' → logprob: -22.0000057220459

Token 302: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010103991371579468
    2. ' ,' → logprob: -9.875101089477539
    3. ',h' → logprob: -10.000101089477539
    4. ',
' → logprob: -12.500101089477539
    5. ')' → logprob: -16.00010108947754
    6. '),' → logprob: -16.12510108947754
    7. '‌,' → logprob: -16.62510108947754
    8. ',

' → logprob: -17.25010108947754
    9. ' h' → logprob: -18.00010108947754
    10. 'h' → logprob: -18.00010108947754

Token 303: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.014164102263748646
    2. ' h' → logprob: -4.264163970947266
    3. ')' → logprob: -15.514163970947266
    4. '
' → logprob: -16.514163970947266
    5. '   ' → logprob: -16.514163970947266
    6. ' ' → logprob: -16.764163970947266
    7. '	h' → logprob: -16.764163970947266
    8. ' ' → logprob: -17.139163970947266
    9. '           ' → logprob: -17.389163970947266
    10. '    ' → logprob: -18.264163970947266

Token 304: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020461321400944144
    2. ')
' → logprob: -8.500205039978027
    3. ' )' → logprob: -14.250205039978027
    4. ')

' → logprob: -15.375205039978027
    5. '<|end|>' → logprob: -17.25020408630371
    6. ')
' → logprob: -17.50020408630371
    7. ')}' → logprob: -17.62520408630371
    8. '),' → logprob: -18.12520408630371
    9. '       ' → logprob: -18.37520408630371
    10. ')return' → logprob: -18.50020408630371

Token 305: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 306: ' Exchange' (ID: 24637)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.4178345501422882
    2. 'Card' → logprob: -2.542834520339966
    3. 'Solution' → logprob: -2.542834520339966
    4. ' Game' → logprob: -3.042834520339966
    5. 'Exchange' → logprob: -3.042834520339966
    6. 'Main' → logprob: -3.792834520339966
    7. 'Score' → logprob: -4.917834758758545
    8. ' Card' → logprob: -5.042834758758545
    9. 'Hand' → logprob: -5.292834758758545
    10. 'Fair' → logprob: -5.417834758758545

Token 307: 'Decision' (ID: 77031)
  Prédit: 'Manager'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Manager' → logprob: -1.6685816049575806
    2. 'Planner' → logprob: -1.7935816049575806
    3. 'Processor' → logprob: -2.043581485748291
    4. 'Criterion' → logprob: -2.043581485748291
    5. 'Simulator' → logprob: -2.418581485748291
    6. 'Optimizer' → logprob: -3.418581485748291
    7. 'Handler' → logprob: -3.418581485748291
    8. 'Agent' → logprob: -3.668581485748291
    9. 'Analyzer' → logprob: -3.793581485748291
    10. 'Solver' → logprob: -3.918581485748291

Token 308: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018175341188907623
    2. ':
' → logprob: -4.01817512512207
    3. '(' → logprob: -11.26817512512207
    4. '):' → logprob: -12.76817512512207
    5. ':

' → logprob: -12.89317512512207
    6. ' :' → logprob: -13.01817512512207
    7. ':def' → logprob: -14.01817512512207
    8. '```' → logprob: -15.01817512512207
    9. '<|end|>' → logprob: -15.01817512512207
    10. ':
' → logprob: -15.26817512512207

Token 309: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02340073138475418
    2. ':' → logprob: -4.523400783538818
    3. 'def' → logprob: -4.648400783538818
    4. ' def' → logprob: -6.148400783538818
    5. 'class' → logprob: -8.14840030670166
    6. ':
' → logprob: -8.77340030670166
    7. '):' → logprob: -10.39840030670166
    8. ':def' → logprob: -10.52340030670166
    9. '):
' → logprob: -10.89840030670166
    10. '```' → logprob: -11.02340030670166

Token 310: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.006215066649019718
    2. ' def' → logprob: -5.3812150955200195
    3. '   ' → logprob: -6.7562150955200195
    4. 'class' → logprob: -8.75621509552002
    5. '__' → logprob: -9.50621509552002
    6. ':' → logprob: -9.88121509552002
    7. ':
' → logprob: -10.13121509552002
    8. 'from' → logprob: -10.75621509552002
    9. '
' → logprob: -10.88121509552002
    10. '  ' → logprob: -11.25621509552002

Token 311: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.48679783940315247
    2. ' __' → logprob: -1.48679780960083
    3. 'init' → logprob: -2.61179780960083
    4. 'def' → logprob: -2.61179780960083
    5. ' def' → logprob: -4.98679780960083
    6. '_init' → logprob: -6.48679780960083
    7. '```' → logprob: -6.48679780960083
    8. 'classmethod' → logprob: -7.48679780960083
    9. '___' → logprob: -7.73679780960083
    10. '   ' → logprob: -8.111798286437988

Token 312: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.512236498361744e-07
    2. 'call' → logprob: -15.500000953674316
    3. ' init' → logprob: -16.0
    4. 'def' → logprob: -17.125
    5. '(init' → logprob: -17.125
    6. 'new' → logprob: -17.375
    7. '_init' → logprob: -17.75
    8. '```' → logprob: -17.875
    9. 'in' → logprob: -18.0
    10. 'name' → logprob: -18.375

Token 313: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.012192677706480026
    2. '__(
' → logprob: -4.762192726135254
    3. '(self' → logprob: -6.012192726135254
    4. '__' → logprob: -7.137192726135254
    5. '(' → logprob: -8.262192726135254
    6. ' (' → logprob: -10.887192726135254
    7. '__((' → logprob: -11.012192726135254
    8. 'self' → logprob: -11.137192726135254
    9. '(
' → logprob: -11.637192726135254
    10. '_(' → logprob: -12.137192726135254

Token 314: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00011534435179783031
    2. '       ' → logprob: -10.000115394592285
    3. '
' → logprob: -10.375115394592285
    4. ' self' → logprob: -11.000115394592285
    5. '   ' → logprob: -11.250115394592285
    6. ',' → logprob: -12.250115394592285
    7. '(self' → logprob: -12.625115394592285
    8. '...' → logprob: -15.250115394592285
    9. ')' → logprob: -15.875115394592285
    10. '    
' → logprob: -16.00011444091797

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005510026589035988
    2. 'self' → logprob: -5.755509853363037
    3. ' ,' → logprob: -7.005509853363037
    4. '(self' → logprob: -7.380509853363037
    5. ' (' → logprob: -7.755509853363037
    6. '(' → logprob: -8.880510330200195
    7. ' self' → logprob: -9.130510330200195
    8. '   ' → logprob: -9.880510330200195
    9. ',self' → logprob: -10.505510330200195
    10. ',
' → logprob: -10.880510330200195

Token 316: ' pairs' (ID: 24702)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.7260758876800537
    2. 'criterion' → logprob: -1.3510758876800537
    3. 'tar' → logprob: -2.4760758876800537
    4. ' criterion' → logprob: -2.8510758876800537
    5. ' tar' → logprob: -2.8510758876800537
    6. 'card' → logprob: -4.226076126098633
    7. ' feasible' → logprob: -4.226076126098633
    8. ' card' → logprob: -4.351076126098633
    9. 'criteria' → logprob: -5.726076126098633
    10. 'exchange' → logprob: -6.351076126098633

Token 317: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006812188657931983
    2. '):' → logprob: -7.625681400299072
    3. ')' → logprob: -9.125680923461914
    4. '   ' → logprob: -10.500680923461914
    5. '):
' → logprob: -10.625680923461914
    6. ' :' → logprob: -10.875680923461914
    7. '_:' → logprob: -12.750680923461914
    8. '```' → logprob: -13.250680923461914
    9. '       ' → logprob: -13.625680923461914
    10. ':)' → logprob: -13.750680923461914

Token 318: ' Iterator' (ID: 41994)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.10106611996889114
    2. 'Iterator' → logprob: -2.4760661125183105
    3. 'Optional' → logprob: -4.4760661125183105
    4. 'Iterable' → logprob: -8.601066589355469
    5. ' List' → logprob: -8.726066589355469
    6. '   ' → logprob: -9.101066589355469
    7. 'list' → logprob: -9.351066589355469
    8. ')' → logprob: -9.851066589355469
    9. ' Iterator' → logprob: -9.976066589355469
    10. ' Optional' → logprob: -11.101066589355469

Token 319: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.60414821645827e-06
    2. ')' → logprob: -13.125004768371582
    3. '[
' → logprob: -13.625004768371582
    4. '[(' → logprob: -14.250004768371582
    5. '<Tuple' → logprob: -14.375004768371582
    6. '```' → logprob: -16.125003814697266
    7. 'Tuple' → logprob: -17.250003814697266
    8. '):
' → logprob: -17.375003814697266
    9. ']' → logprob: -17.375003814697266
    10. '[List' → logprob: -17.500003814697266

Token 320: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -8.895480277715251e-06
    2. ' Tuple' → logprob: -11.875008583068848
    3. '   ' → logprob: -13.750008583068848
    4. '<Tuple' → logprob: -15.125008583068848
    5. ' ' → logprob: -15.250008583068848
    6. '[' → logprob: -16.000009536743164
    7. '.Tuple' → logprob: -16.500009536743164
    8. 'Tu' → logprob: -17.375009536743164
    9. ')' → logprob: -18.000009536743164
    10. '_tuple' → logprob: -18.125009536743164

Token 321: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -8.180258191714529e-06
    2. 'int' → logprob: -11.750008583068848
    3. '   ' → logprob: -16.00000762939453
    4. ',int' → logprob: -16.37500762939453
    5. '<int' → logprob: -16.50000762939453
    6. '[Int' → logprob: -19.62500762939453
    7. '(int' → logprob: -19.75000762939453
    8. '=int' → logprob: -19.87500762939453
    9. ']int' → logprob: -19.87500762939453
    10. '[' → logprob: -20.12500762939453

Token 322: ',int' (ID: 20909)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.5131872296333313
    2. ',' → logprob: -1.0131871700286865
    3. ',int' → logprob: -3.2631871700286865
    4. 'int' → logprob: -9.513187408447266
    5. ' ,' → logprob: -12.013187408447266
    6. ']],' → logprob: -12.888187408447266
    7. '[' → logprob: -13.138187408447266
    8. '   ' → logprob: -13.388187408447266
    9. '[Int' → logprob: -14.138187408447266
    10. ']int' → logprob: -14.638187408447266

Token 323: ']])' (ID: 64959)
  Prédit: ']])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']])' → logprob: -0.07681332528591156
    2. ']]' → logprob: -2.826813220977783
    3. ']],' → logprob: -4.326813220977783
    4. ']' → logprob: -6.576813220977783
    5. '])' → logprob: -10.451813697814941
    6. ')])' → logprob: -10.826813697814941
    7. '],' → logprob: -10.951813697814941
    8. ']):' → logprob: -11.576813697814941
    9. ']],
' → logprob: -11.576813697814941
    10. ']]:
' → logprob: -11.576813697814941

Token 324: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004324018023908138
    2. ':
' → logprob: -5.504323959350586
    3. '   ' → logprob: -9.254323959350586
    4. '       ' → logprob: -9.879323959350586
    5. ',' → logprob: -10.129323959350586
    6. ')' → logprob: -10.504323959350586
    7. '):' → logprob: -11.504323959350586
    8. ' :' → logprob: -12.379323959350586
    9. '):
' → logprob: -12.504323959350586
    10. '<|end|>' → logprob: -12.879323959350586

Token 325: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.004282111767679453
    2. ' None' → logprob: -5.504281997680664
    3. 'Optional' → logprob: -9.004281997680664
    4. 'list' → logprob: -9.504281997680664
    5. 'List' → logprob: -12.129281997680664
    6. 'object' → logprob: -15.129281997680664
    7. ' list' → logprob: -15.254281997680664
    8. ' Optional' → logprob: -15.754281997680664
    9. ' ' → logprob: -16.504281997680664
    10. '   ' → logprob: -17.129281997680664

Token 326: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020140530541539192
    2. ':
' → logprob: -4.020140647888184
    3. '       ' → logprob: -6.270140647888184
    4. '   ' → logprob: -10.270140647888184
    5. ',' → logprob: -11.020140647888184
    6. '<|end|>' → logprob: -11.520140647888184
    7. '):' → logprob: -11.645140647888184
    8. '):
' → logprob: -11.895140647888184
    9. '():' → logprob: -12.395140647888184
    10. ':def' → logprob: -12.770140647888184

Token 327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006047414499334991
    2. '   ' → logprob: -8.125604629516602
    3. 'self' → logprob: -8.125604629516602
    4. ' self' → logprob: -12.125604629516602
    5. '        
' → logprob: -13.000604629516602
    6. '
' → logprob: -13.500604629516602
    7. '```' → logprob: -13.875604629516602
    8. '	' → logprob: -14.125604629516602
    9. '[' → logprob: -15.125604629516602
    10. '    
' → logprob: -15.625604629516602

Token 328: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0007517361082136631
    2. '       ' → logprob: -7.250751972198486
    3. ' self' → logprob: -10.250751495361328
    4. 'try' → logprob: -12.750751495361328
    5. 'from' → logprob: -13.125751495361328
    6. 'for' → logprob: -14.250751495361328
    7. 'import' → logprob: -15.625751495361328
    8. '(self' → logprob: -15.875751495361328
    9. 'next' → logprob: -16.375751495361328
    10. 'list' → logprob: -16.875751495361328

Token 329: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.1553635597229004
    2. '.s' → logprob: -2.9053635597229004
    3. '.' → logprob: -3.1553635597229004
    4. '       ' → logprob: -3.9053635597229004
    5. '   ' → logprob: -5.4053635597229
    6. '.items' → logprob: -5.5303635597229
    7. 'self' → logprob: -5.7803635597229
    8. 'pairs' → logprob: -6.0303635597229
    9. '.best' → logprob: -6.4053635597229
    10. ' .' → logprob: -6.5303635597229

Token 330: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -3.297462171758525e-05
    2. 'pairs' → logprob: -10.625033378601074
    3. '_pairs' → logprob: -12.000033378601074
    4. 'air' → logprob: -13.375033378601074
    5. 'aires' → logprob: -15.250033378601074
    6. 'a' → logprob: -15.375033378601074
    7. 'ars' → logprob: -15.625033378601074
    8. ' pairs' → logprob: -16.500032424926758
    9. '   ' → logprob: -16.750032424926758
    10. '_' → logprob: -16.750032424926758

Token 331: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25197941064834595
    2. '=' → logprob: -1.5019793510437012
    3. '_iter' → logprob: -10.87697982788086
    4. '       ' → logprob: -11.75197982788086
    5. '_iterator' → logprob: -11.87697982788086
    6. '   ' → logprob: -12.12697982788086
    7. '_list' → logprob: -12.37697982788086
    8. ':' → logprob: -13.25197982788086
    9. ' ' → logprob: -14.00197982788086
    10. '        ' → logprob: -14.00197982788086

Token 332: ' pairs' (ID: 24702)
  Prédit: 'pairs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pairs' → logprob: -0.07897505164146423
    2. 'list' → logprob: -2.578974962234497
    3. 'p' → logprob: -10.328974723815918
    4. ' pairs' → logprob: -10.578974723815918
    5. 'pair' → logprob: -11.078974723815918
    6. ' list' → logprob: -12.328974723815918
    7. '[p' → logprob: -13.078974723815918
    8. 'tuple' → logprob: -13.328974723815918
    9. 'iter' → logprob: -13.828974723815918
    10. '_pairs' → logprob: -14.953974723815918

Token 333: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3196619153022766
    2. '   ' → logprob: -1.3196618556976318
    3. '    
' → logprob: -6.069662094116211
    4. '

' → logprob: -6.444662094116211
    5. '       ' → logprob: -6.819662094116211
    6. '<|end|>' → logprob: -6.944662094116211
    7. 'def' → logprob: -8.194662094116211
    8. '        
' → logprob: -9.569662094116211
    9. '<|end|>' → logprob: -10.944662094116211
    10. '
    
' → logprob: -11.069662094116211

Token 334: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5249024629592896
    2. '   ' → logprob: -0.8999024629592896
    3. ' def' → logprob: -6.64990234375
    4. '    
' → logprob: -8.52490234375
    5. '
' → logprob: -8.77490234375
    6. '	def' → logprob: -10.27490234375
    7. '       ' → logprob: -10.64990234375
    8. ' ' → logprob: -11.52490234375
    9. 'from' → logprob: -11.89990234375
    10. '@property' → logprob: -12.02490234375

Token 335: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.0683535037969705e-05
    2. ' def' → logprob: -12.37501049041748
    3. 'from' → logprob: -12.37501049041748
    4. '   ' → logprob: -14.00001049041748
    5. 'next' → logprob: -14.62501049041748
    6. 'best' → logprob: -15.62501049041748
    7. '
' → logprob: -16.125011444091797
    8. '__' → logprob: -16.875011444091797
    9. 'selected' → logprob: -16.875011444091797
    10. 'result' → logprob: -16.875011444091797

Token 336: ' best' (ID: 1636)
  Prédit: 'choose'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'choose' → logprob: -0.6900074481964111
    2. 'dec' → logprob: -1.5650074481964111
    3. 'best' → logprob: -2.815007448196411
    4. ' decide' → logprob: -2.815007448196411
    5. '__' → logprob: -2.940007448196411
    6. 'next' → logprob: -3.190007448196411
    7. ' choose' → logprob: -3.690007448196411
    8. 'select' → logprob: -4.190007209777832
    9. ' best' → logprob: -4.815007209777832
    10. ' __' → logprob: -4.940007209777832

Token 337: '_exchange' (ID: 152363)
  Prédit: '_pair'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -0.11928993463516235
    2. '_exchange' → logprob: -2.2442898750305176
    3. '_pairs' → logprob: -6.494289875030518
    4. '_option' → logprob: -6.619289875030518
    5. '_choice' → logprob: -6.994289875030518
    6. '_' → logprob: -6.994289875030518
    7. '_score' → logprob: -7.869289875030518
    8. '_swap' → logprob: -7.869289875030518
    9. '_match' → logprob: -8.494290351867676
    10. '_token' → logprob: -8.869290351867676

Token 338: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00020270596724003553
    2. '(' → logprob: -8.625203132629395
    3. 'self' → logprob: -11.625203132629395
    4. '   ' → logprob: -11.625203132629395
    5. ')' → logprob: -13.250203132629395
    6. '(
' → logprob: -14.125203132629395
    7. '       ' → logprob: -14.375203132629395
    8. '()' → logprob: -14.500203132629395
    9. '_score' → logprob: -14.875203132629395
    10. 's' → logprob: -15.125203132629395

Token 339: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01661054790019989
    2. 'self' → logprob: -5.016610622406006
    3. '(self' → logprob: -5.391610622406006
    4. '):' → logprob: -6.266610622406006
    5. '   ' → logprob: -6.766610622406006
    6. '):
' → logprob: -7.016610622406006
    7. ',' → logprob: -7.391610622406006
    8. ')->' → logprob: -7.891610622406006
    9. '       ' → logprob: -8.516610145568848
    10. ' self' → logprob: -10.641610145568848

Token 340: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03721671178936958
    2. '->' → logprob: -4.037216663360596
    3. ' ->' → logprob: -4.787216663360596
    4. '(' → logprob: -4.912216663360596
    5. 'self' → logprob: -6.412216663360596
    6. '   ' → logprob: -7.537216663360596
    7. ')' → logprob: -7.787216663360596
    8. ')->' → logprob: -8.287217140197754
    9. '       ' → logprob: -9.287217140197754
    10. ':' → logprob: -9.787217140197754

Token 341: ' Optional' (ID: 19351)
  Prédit: 'Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Optional' → logprob: -0.0002619318547658622
    2. ' Optional' → logprob: -8.250262260437012
    3. '	Optional' → logprob: -15.750262260437012
    4. '   ' → logprob: -16.000261306762695
    5. 'optional' → logprob: -16.250261306762695
    6. ' ' → logprob: -16.375261306762695
    7. 'Iterator' → logprob: -16.625261306762695
    8. 'Tuple' → logprob: -17.125261306762695
    9. 'List' → logprob: -17.375261306762695
    10. '(Optional' → logprob: -17.375261306762695

Token 342: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.703443770878948e-06
    2. '[
' → logprob: -12.125007629394531
    3. '[int' → logprob: -13.500007629394531
    4. '[List' → logprob: -14.625007629394531
    5. '[(' → logprob: -15.125007629394531
    6. 'Tuple' → logprob: -16.87500762939453
    7. '<Tuple' → logprob: -17.25000762939453
    8. '```' → logprob: -17.37500762939453
    9. '[T' → logprob: -18.12500762939453
    10. ' [' → logprob: -18.75000762939453

Token 343: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -2.939851037808694e-05
    2. ' Tuple' → logprob: -10.500029563903809
    3. '   ' → logprob: -13.500029563903809
    4. ' ' → logprob: -15.125029563903809
    5. 'int' → logprob: -17.000028610229492
    6. '  ' → logprob: -17.625028610229492
    7. '    
' → logprob: -18.000028610229492
    8. 'List' → logprob: -18.000028610229492
    9. '[' → logprob: -18.250028610229492
    10. '```' → logprob: -18.375028610229492

Token 344: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -3.7697225252486533e-06
    2. 'int' → logprob: -12.750003814697266
    3. '   ' → logprob: -14.625003814697266
    4. '[' → logprob: -16.125003814697266
    5. '<int' → logprob: -16.500003814697266
    6. '(int' → logprob: -17.000003814697266
    7. '[Int' → logprob: -17.125003814697266
    8. '[in' → logprob: -17.625003814697266
    9. '[
' → logprob: -18.125003814697266
    10. ',int' → logprob: -18.250003814697266

Token 345: ',int' (ID: 20909)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10030435770750046
    2. ',int' → logprob: -2.350304365158081
    3. 'int' → logprob: -9.47530460357666
    4. ' ,' → logprob: -11.47530460357666
    5. '[int' → logprob: -11.97530460357666
    6. ',float' → logprob: -14.10030460357666
    7. '   ' → logprob: -14.22530460357666
    8. ',bool' → logprob: -14.35030460357666
    9. ']int' → logprob: -14.47530460357666
    10. ',uint' → logprob: -14.47530460357666

Token 346: ']]:
' (ID: 183340)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.6486064195632935
    2. ']' → logprob: -1.2736064195632935
    3. ')]' → logprob: -2.773606300354004
    4. ']):' → logprob: -2.773606300354004
    5. ']]:
' → logprob: -3.773606300354004
    6. ']]' → logprob: -3.773606300354004
    7. ')' → logprob: -3.898606300354004
    8. ']>' → logprob: -6.148606300354004
    9. '):' → logprob: -6.398606300354004
    10. '       ' → logprob: -7.273606300354004

Token 347: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -6.515961285913363e-05
    2. ':' → logprob: -11.000064849853516
    3. ' for' → logprob: -11.125064849853516
    4. '   ' → logprob: -12.000064849853516
    5. ',' → logprob: -12.375064849853516
    6. ' next' → logprob: -12.375064849853516
    7. '<|end|>' → logprob: -12.375064849853516
    8. 'next' → logprob: -13.250064849853516
    9. 'for' → logprob: -13.375064849853516
    10. '```' → logprob: -13.625064849853516

Token 348: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06215982511639595
    2. 'best' → logprob: -3.687159776687622
    3. 'max' → logprob: -3.687159776687622
    4. 'try' → logprob: -5.937160015106201
    5. 'return' → logprob: -6.312160015106201
    6. ' best' → logprob: -6.562160015106201
    7. 'min' → logprob: -6.687160015106201
    8. ' max' → logprob: -6.937160015106201
    9. '   ' → logprob: -7.062160015106201
    10. '
' → logprob: -7.937160015106201

Token 349: ' Select' (ID: 13482)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.28744059801101685
    2. 'max' → logprob: -2.537440538406372
    3. 'try' → logprob: -2.662440538406372
    4. 'min' → logprob: -2.787440538406372
    5. 'return' → logprob: -3.787440538406372
    6. '       ' → logprob: -5.037440776824951
    7. 'result' → logprob: -5.537440776824951
    8. 'c' → logprob: -5.912440776824951
    9. ' best' → logprob: -6.787440776824951
    10. 'pairs' → logprob: -7.162440776824951

Token 350: ' pair' (ID: 10610)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.033539194613695145
    2. 'min' → logprob: -4.533539295196533
    3. 'next' → logprob: -4.533539295196533
    4. ' max' → logprob: -4.658539295196533
    5. ' next' → logprob: -7.408539295196533
    6. 'best' → logprob: -7.783539295196533
    7. '   ' → logprob: -7.908539295196533
    8. ' min' → logprob: -9.158538818359375
    9. 'pair' → logprob: -9.158538818359375
    10. 'the' → logprob: -9.158538818359375

Token 351: ' with' (ID: 483)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.332974910736084
    2. ' with' → logprob: -1.707974910736084
    3. 'with' → logprob: -1.832974910736084
    4. '=' → logprob: -2.332974910736084
    5. ':' → logprob: -2.457974910736084
    6. 'max' → logprob: -3.082974910736084
    7. '       ' → logprob: -3.332974910736084
    8. '(
' → logprob: -3.832974910736084
    9. ' in' → logprob: -4.332974910736084
    10. '   ' → logprob: -4.582974910736084

Token 352: ' minimal' (ID: 19957)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.026808295398950577
    2. ' max' → logprob: -4.401808261871338
    3. 'min' → logprob: -4.776808261871338
    4. 'maximum' → logprob: -6.026808261871338
    5. 'the' → logprob: -6.776808261871338
    6. 'minimal' → logprob: -6.901808261871338
    7. 'minimum' → logprob: -7.901808261871338
    8. ' maximum' → logprob: -8.026808738708496
    9. ' the' → logprob: -8.151808738708496
    10. ' minimal' → logprob: -9.151808738708496

Token 353: ' sum' (ID: 4215)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.02366119809448719
    2. 't' → logprob: -4.648661136627197
    3. ' abs' → logprob: -4.648661136627197
    4. 'sum' → logprob: -6.023661136627197
    5. '(abs' → logprob: -7.273661136627197
    6. ' t' → logprob: -7.398661136627197
    7. ' sum' → logprob: -8.273661613464355
    8. 'self' → logprob: -9.023661613464355
    9. 'difference' → logprob: -10.023661613464355
    10. '   ' → logprob: -11.023661613464355

Token 354: ' according' (ID: 7065)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.515646755695343
    2. '()' → logprob: -1.5156466960906982
    3. '(' → logprob: -2.2656466960906982
    4. '(
' → logprob: -2.8906466960906982
    5. '()
' → logprob: -4.890646934509277
    6. '   ' → logprob: -5.765646934509277
    7. ',' → logprob: -6.140646934509277
    8. ' =' → logprob: -6.390646934509277
    9. ' (' → logprob: -6.390646934509277
    10. '           ' → logprob: -6.890646934509277

Token 355: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.49886977672576904
    2. ' to' → logprob: -0.998869776725769
    3. '_to' → logprob: -4.123869895935059
    4. '<|end|>' → logprob: -4.873869895935059
    5. '<|end|>' → logprob: -8.873869895935059
    6. '_' → logprob: -9.373869895935059
    7. ' ' → logprob: -9.373869895935059
    8. '[' → logprob: -10.248869895935059
    9. 'To' → logprob: -10.623869895935059
    10. '=' → logprob: -10.873869895935059

Token 356: ' problem' (ID: 4792)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.3658997714519501
    2. ' lambda' → logprob: -1.2408998012542725
    3. 'sum' → logprob: -4.365899562835693
    4. ' sum' → logprob: -6.615899562835693
    5. '           ' → logprob: -6.990899562835693
    6. '       ' → logprob: -7.365899562835693
    7. '=lambda' → logprob: -7.365899562835693
    8. '   ' → logprob: -8.240900039672852
    9. '(lambda' → logprob: -8.240900039672852
    10. 'min' → logprob: -8.740900039672852

Token 357: ' statement' (ID: 9710)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05859994888305664
    2. '()' → logprob: -4.308599948883057
    3. '(' → logprob: -4.558599948883057
    4. ':' → logprob: -4.683599948883057
    5. ' =' → logprob: -5.058599948883057
    6. '=' → logprob: -5.183599948883057
    7. ',' → logprob: -5.808599948883057
    8. '():' → logprob: -5.933599948883057
    9. '   ' → logprob: -6.933599948883057
    10. ' (' → logprob: -7.308599948883057

Token 358: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007426657248288393
    2. ':' → logprob: -5.882426738739014
    3. '
' → logprob: -6.632426738739014
    4. '        
' → logprob: -6.757426738739014
    5. ' =' → logprob: -7.257426738739014
    6. ',' → logprob: -7.757426738739014
    7. '=' → logprob: -8.757426261901855
    8. ' for' → logprob: -9.007426261901855
    9. 'for' → logprob: -9.132426261901855
    10. '   ' → logprob: -9.507426261901855

Token 359: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002444125711917877
    2. ' =' → logprob: -9.500244140625
    3. ',' → logprob: -10.500244140625
    4. ':' → logprob: -10.625244140625
    5. '        
' → logprob: -10.875244140625
    6. '   ' → logprob: -11.000244140625
    7. ' for' → logprob: -11.125244140625
    8. '           ' → logprob: -11.500244140625
    9. '        ' → logprob: -11.875244140625
    10. 'for' → logprob: -11.875244140625

Token 360: ' best' (ID: 1636)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38779208064079285
    2. 'min' → logprob: -2.0127921104431152
    3. 'return' → logprob: -2.2627921104431152
    4. '
' → logprob: -3.2627921104431152
    5. ' min' → logprob: -4.012792110443115
    6. ' return' → logprob: -4.387792110443115
    7. 'try' → logprob: -5.137792110443115
    8. 'best' (adapté à ' best') → logprob: -5.262792110443115
    9. '```' → logprob: -6.887792110443115
    10. ' try' → logprob: -7.262792110443115

Token 361: '_pair' (ID: 34819)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3360908031463623
    2. '_pair' → logprob: -1.8360908031463623
    3. '=' → logprob: -2.0860908031463623
    4. '=None' → logprob: -6.711091041564941
    5. '_score' → logprob: -9.086091041564941
    6. '_pairs' → logprob: -9.086091041564941
    7. '_' → logprob: -9.586091041564941
    8. 'pair' → logprob: -9.961091041564941
    9. '   ' → logprob: -10.461091041564941
    10. '_token' → logprob: -10.711091041564941

Token 362: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029813556000590324
    2. '=' → logprob: -3.529813528060913
    3. '=None' → logprob: -10.279813766479492
    4. ':' → logprob: -11.154813766479492
    5. ',' → logprob: -11.529813766479492
    6. ' None' → logprob: -13.279813766479492
    7. ' ' → logprob: -14.029813766479492
    8. '   ' → logprob: -14.279813766479492
    9. '        ' → logprob: -15.029813766479492
    10. '       ' → logprob: -15.154813766479492

Token 363: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.001170460251159966
    2. ' None' → logprob: -6.751170635223389
    3. '(None' → logprob: -15.75117015838623
    4. 'next' → logprob: -16.626171112060547
    5. '   ' → logprob: -17.876171112060547
    6. 'none' → logprob: -19.001171112060547
    7. 'min' → logprob: -20.126171112060547
    8. '_None' → logprob: -20.876171112060547
    9. '=None' → logprob: -21.251171112060547
    10. '```' → logprob: -22.751171112060547

Token 364: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26697924733161926
    2. '
' → logprob: -1.7669792175292969
    3. '<|end|>' → logprob: -3.891979217529297
    4. '        
' → logprob: -4.141979217529297
    5. ' for' → logprob: -4.391979217529297
    6. ',' → logprob: -5.516979217529297
    7. 'for' → logprob: -5.516979217529297
    8. ' 
' → logprob: -6.391979217529297
    9. '  
' → logprob: -6.766979217529297
    10. '    
' → logprob: -6.891979217529297

Token 365: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017749154940247536
    2. ' for' → logprob: -4.267749309539795
    3. 'for' → logprob: -6.517749309539795
    4. '        
' → logprob: -6.892749309539795
    5. '
' → logprob: -7.892749309539795
    6. ',' → logprob: -7.892749309539795
    7. '   ' → logprob: -9.642748832702637
    8. '<|end|>' → logprob: -9.767748832702637
    9. '    
' → logprob: -10.017748832702637
    10. ' with' → logprob: -10.642748832702637

Token 366: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.3005205988883972
    2. 'min' → logprob: -1.425520658493042
    3. ' best' → logprob: -4.550520420074463
    4. ' min' → logprob: -5.675520420074463
    5. '       ' → logprob: -5.925520420074463
    6. 'try' → logprob: -6.550520420074463
    7. 'for' → logprob: -6.925520420074463
    8. ' for' → logprob: -10.800520896911621
    9. 'minimum' → logprob: -10.925520896911621
    10. '   ' → logprob: -11.175520896911621

Token 367: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.0003728774609044194
    2. '_pair' → logprob: -8.250372886657715
    3. '_' → logprob: -9.625372886657715
    4. '_score' → logprob: -10.375372886657715
    5. 'sum' → logprob: -12.125372886657715
    6. '_value' → logprob: -12.750372886657715
    7. '_s' → logprob: -12.750372886657715
    8. '_pairs' → logprob: -14.000372886657715
    9. '_val' → logprob: -14.375372886657715
    10. '_total' → logprob: -15.000372886657715

Token 368: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0788913294672966
    2. ' =' → logprob: -2.5788912773132324
    3. '=None' → logprob: -13.57889175415039
    4. '=float' → logprob: -15.95389175415039
    5. '   ' → logprob: -16.45389175415039
    6. ':' → logprob: -16.45389175415039
    7. '=-' → logprob: -16.95389175415039
    8. ' ' → logprob: -17.45389175415039
    9. ',' → logprob: -17.82889175415039
    10. '=int' → logprob: -18.32889175415039

Token 369: ' None' (ID: 4662)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.06207389757037163
    2. 'sys' → logprob: -2.8120739459991455
    3. 'None' → logprob: -9.312073707580566
    4. ' float' → logprob: -11.687073707580566
    5. '10' → logprob: -12.437073707580566
    6. ' sys' → logprob: -12.937073707580566
    7. '1' → logprob: -14.812073707580566
    8. '   ' → logprob: -15.062073707580566
    9. '2' → logprob: -15.562073707580566
    10. ' None' → logprob: -16.062074661254883

Token 370: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23192715644836426
    2. '
' → logprob: -1.6069271564483643
    3. '        
' → logprob: -5.481926918029785
    4. ' for' → logprob: -6.606926918029785
    5. 'for' → logprob: -8.231926918029785
    6. '<|end|>' → logprob: -8.356926918029785
    7. '  
' → logprob: -8.606926918029785
    8. ' 
' → logprob: -9.106926918029785
    9. '    
' → logprob: -10.356926918029785
    10. '
' → logprob: -10.356926918029785

Token 371: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0056615290232002735
    2. ' for' → logprob: -5.630661487579346
    3. '
' → logprob: -6.380661487579346
    4. 'for' → logprob: -8.505661964416504
    5. '        
' → logprob: -9.130661964416504
    6. '   ' → logprob: -10.380661964416504
    7. '    
' → logprob: -12.130661964416504
    8. '  
' → logprob: -12.130661964416504
    9. ' 
' → logprob: -12.505661964416504
    10. '<|end|>' → logprob: -13.505661964416504

Token 372: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4544887840747833
    2. '       ' → logprob: -1.329488754272461
    3. 'for' (adapté à ' for') → logprob: -2.329488754272461
    4. '
' → logprob: -5.829488754272461
    5. '   ' → logprob: -8.829488754272461
    6. '        
' → logprob: -9.329488754272461
    7. '        ' → logprob: -10.454488754272461
    8. ' 
' → logprob: -10.704488754272461
    9. '
' → logprob: -11.579488754272461
    10. '           ' → logprob: -11.704488754272461

Token 373: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.030411802232265472
    2. 'pair' → logprob: -4.155411720275879
    3. ' t' → logprob: -4.405411720275879
    4. ' pair' → logprob: -6.905411720275879
    5. '(t' → logprob: -7.155411720275879
    6. 'p' → logprob: -8.655411720275879
    7. '   ' → logprob: -10.405411720275879
    8. '(pair' → logprob: -10.530411720275879
    9. ' (' → logprob: -10.655411720275879
    10. '	t' → logprob: -12.030411720275879

Token 374: ',h' (ID: 42751)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007660227827727795
    2. ',h' → logprob: -4.882660388946533
    3. ' ,' → logprob: -10.007659912109375
    4. 'h' → logprob: -12.382659912109375
    5. '_,' → logprob: -13.507659912109375
    6. ',
' → logprob: -13.757659912109375
    7. ',_' → logprob: -14.507659912109375
    8. ' in' → logprob: -15.132659912109375
    9. ',p' → logprob: -15.382659912109375
    10. 's' → logprob: -15.507659912109375

Token 375: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016036245971918106
    2. 'in' → logprob: -4.141036033630371
    3. ' ' → logprob: -13.891036033630371
    4. ',' → logprob: -15.141036033630371
    5. ')' → logprob: -15.266036033630371
    6. '_in' → logprob: -16.016036987304688
    7. 's' → logprob: -16.016036987304688
    8. '	in' → logprob: -16.641036987304688
    9. '```' → logprob: -16.891036987304688
    10. 'import' → logprob: -16.891036987304688

Token 376: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.463036435074173e-05
    2. ' self' → logprob: -10.625024795532227
    3. '(self' → logprob: -15.125024795532227
    4. '=self' → logprob: -17.875024795532227
    5. '   ' → logprob: -18.500024795532227
    6. '[self' → logprob: -18.625024795532227
    7. '	self' → logprob: -19.250024795532227
    8. 'elf' → logprob: -19.750024795532227
    9. 's' → logprob: -19.875024795532227
    10. '_self' → logprob: -20.125024795532227

Token 377: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -9.014684110297821e-06
    2. '.' → logprob: -12.375008583068848
    3. 'pairs' → logprob: -12.375008583068848
    4. '_pairs' → logprob: -15.875008583068848
    5. ' .' → logprob: -16.375009536743164
    6. '	p' → logprob: -16.625009536743164
    7. '   ' → logprob: -17.500009536743164
    8. ' pairs' → logprob: -17.500009536743164
    9. 'Pairs' → logprob: -17.875009536743164
    10. 'p' → logprob: -17.875009536743164

Token 378: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.0003975416184403002
    2. 'air' → logprob: -8.125397682189941
    3. 'self' → logprob: -10.500397682189941
    4. 'pairs' → logprob: -11.250397682189941
    5. '   ' → logprob: -11.375397682189941
    6. '
' → logprob: -11.750397682189941
    7. 'a' → logprob: -12.125397682189941
    8. '(self' → logprob: -12.250397682189941
    9. 'r' → logprob: -12.750397682189941
    10. 'ars' → logprob: -12.875397682189941

Token 379: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02641257271170616
    2. ':
' → logprob: -3.6514124870300293
    3. '           ' → logprob: -10.026412963867188
    4. '):
' → logprob: -10.651412963867188
    5. ',' → logprob: -10.901412963867188
    6. ':

' → logprob: -11.776412963867188
    7. '       ' → logprob: -12.151412963867188
    8. '):' → logprob: -12.401412963867188
    9. ':
' → logprob: -12.651412963867188
    10. '<|end|>' → logprob: -13.026412963867188

Token 380: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002707529056351632
    2. '            
' → logprob: -8.75027084350586
    3. '<|end|>' → logprob: -10.37527084350586
    4. ':' → logprob: -10.62527084350586
    5. '            ' → logprob: -11.00027084350586
    6. '               ' → logprob: -12.00027084350586
    7. '          ' → logprob: -12.12527084350586
    8. ',' → logprob: -12.12527084350586
    9. '<|end|>' → logprob: -12.37527084350586
    10. '
' → logprob: -12.50027084350586

Token 381: ' s' (ID: 265)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0029148347675800323
    2. 'sum' → logprob: -6.377914905548096
    3. ' sum' → logprob: -7.502914905548096
    4. ' s' → logprob: -8.002914428710938
    5. 's' (adapté à ' s') → logprob: -8.627914428710938
    6. 'total' → logprob: -10.627914428710938
    7. '               ' → logprob: -10.752914428710938
    8. 'current' → logprob: -10.877914428710938
    9. ' current' → logprob: -11.002914428710938
    10. '            
' → logprob: -11.502914428710938

Token 382: ' =' (ID: 314)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.5457114577293396
    2. ' =' → logprob: -1.2957115173339844
    3. '=' → logprob: -1.9207115173339844
    4. 'u' → logprob: -8.670711517333984
    5. ' ' → logprob: -10.045711517333984
    6. 'core' → logprob: -10.045711517333984
    7. '=t' → logprob: -10.795711517333984
    8. '       ' → logprob: -11.170711517333984
    9. '=u' → logprob: -11.170711517333984
    10. '   ' → logprob: -11.420711517333984

Token 383: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.03804263845086098
    2. ' t' → logprob: -3.2880425453186035
    3. '	t' → logprob: -14.663043022155762
    4. '`t' → logprob: -14.913043022155762
    5. '   ' → logprob: -15.538043022155762
    6. ' ' → logprob: -16.163042068481445
    7. '(t' → logprob: -16.788042068481445
    8. '           ' → logprob: -18.288042068481445
    9. 's' → logprob: -18.538042068481445
    10. '
' → logprob: -18.663042068481445

Token 384: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.029001543298363686
    2. ' +' → logprob: -4.029001712799072
    3. '+h' → logprob: -4.529001712799072
    4. '+t' → logprob: -13.904001235961914
    5. '+
' → logprob: -15.404001235961914
    6. '+s' → logprob: -16.154001235961914
    7. '
' → logprob: -17.529001235961914
    8. '＋' → logprob: -17.654001235961914
    9. '+i' → logprob: -17.904001235961914
    10. '+r' → logprob: -17.904001235961914

Token 385: ' h' (ID: 312)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -5.860340752406046e-05
    2. ' h' → logprob: -9.7500581741333
    3. ' ' → logprob: -16.625059127807617
    4. '   ' → logprob: -16.875059127807617
    5. '
' → logprob: -17.500059127807617
    6. '	h' → logprob: -17.875059127807617
    7. '       ' → logprob: -18.500059127807617
    8. '           ' → logprob: -18.750059127807617
    9. ',h' → logprob: -19.250059127807617
    10. ',' → logprob: -19.500059127807617

Token 386: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008856110507622361
    2. '
' → logprob: -7.125885486602783
    3. '<|end|>' → logprob: -10.125885963439941
    4. '       ' → logprob: -11.500885963439941
    5. '               ' → logprob: -12.250885963439941
    6. ' if' → logprob: -12.375885963439941
    7. '```' → logprob: -12.375885963439941
    8. '            
' → logprob: -12.625885963439941
    9. '
' → logprob: -12.875885963439941
    10. '<|end|>' → logprob: -12.875885963439941

Token 387: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.531315314830863e-06
    2. ',' → logprob: -13.750003814697266
    3. '       ' → logprob: -14.125003814697266
    4. '               ' → logprob: -14.375003814697266
    5. '
' → logprob: -14.750003814697266
    6. '<|end|>' → logprob: -15.750003814697266
    7. ' if' → logprob: -15.875003814697266
    8. '          ' → logprob: -16.000003814697266
    9. '		' → logprob: -16.375003814697266
    10. '   ' → logprob: -16.375003814697266

Token 388: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.036278702318668365
    2. ' if' → logprob: -3.91127872467041
    3. 'if' (adapté à ' if') → logprob: -4.16127872467041
    4. '   ' → logprob: -11.53627872467041
    5. '       ' → logprob: -11.66127872467041
    6. '```' → logprob: -12.53627872467041
    7. ' ' → logprob: -13.66127872467041
    8. '               ' → logprob: -14.28627872467041
    9. '          ' → logprob: -14.53627872467041
    10. '  ' → logprob: -14.66127872467041

Token 389: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.4740924537181854
    2. ' best' → logprob: -0.9740924835205078
    3. '(best' → logprob: -11.349092483520508
    4. '	best' → logprob: -13.099092483520508
    5. ' (' → logprob: -13.724092483520508
    6. '   ' → logprob: -15.224092483520508
    7. ' ' → logprob: -15.974092483520508
    8. '  ' → logprob: -17.599092483520508
    9. '_best' → logprob: -17.724092483520508
    10. '(' → logprob: -17.724092483520508

Token 390: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -8.697387966094539e-05
    2. '_pair' → logprob: -9.875086784362793
    3. 'sum' → logprob: -10.250086784362793
    4. '_' → logprob: -17.25008773803711
    5. 'Sum' → logprob: -17.37508773803711
    6. '_s' → logprob: -18.00008773803711
    7. '   ' → logprob: -18.37508773803711
    8. ' sum' → logprob: -18.50008773803711
    9. 'pair' → logprob: -18.62508773803711
    10. '_best' → logprob: -18.62508773803711

Token 391: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5759428143501282
    2. 'is' → logprob: -0.8259428143501282
    3. '           ' → logprob: -13.200942993164062
    4. '                   ' → logprob: -14.700942993164062
    5. '       ' → logprob: -15.075942993164062
    6. '               ' → logprob: -15.575942993164062
    7. '        ' → logprob: -16.075942993164062
    8. '   ' → logprob: -16.200942993164062
    9. '          ' → logprob: -16.200942993164062
    10. '	is' → logprob: -16.325942993164062

Token 392: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.023245595395565033
    2. ' None' → logprob: -3.7732455730438232
    3. '   ' → logprob: -15.648245811462402
    4. '  ' → logprob: -17.148244857788086
    5. ' ' → logprob: -18.148244857788086
    6. '=None' → logprob: -18.398244857788086
    7. '    ' → logprob: -19.273244857788086
    8. '(None' → logprob: -19.523244857788086
    9. 'none' → logprob: -19.523244857788086
    10. '_None' → logprob: -19.648244857788086

Token 393: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.001044243574142456
    2. 'or' → logprob: -6.876044273376465
    3. '           ' → logprob: -12.126044273376465
    4. '               ' → logprob: -12.626044273376465
    5. '            ' → logprob: -13.501044273376465
    6. ' ' → logprob: -14.876044273376465
    7. '              ' → logprob: -15.376044273376465
    8. '	or' → logprob: -15.376044273376465
    9. '          ' → logprob: -15.501044273376465
    10. '                ' → logprob: -16.00104331970215

Token 394: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03807971253991127
    2. ' s' → logprob: -3.2880797386169434
    3. '           ' → logprob: -10.413079261779785
    4. '               ' → logprob: -11.913079261779785
    5. '                   ' → logprob: -14.913079261779785
    6. '   ' → logprob: -15.163079261779785
    7. '            ' → logprob: -15.663079261779785
    8. '          ' → logprob: -16.0380802154541
    9. '<s' → logprob: -16.1630802154541
    10. '	s' → logprob: -16.2880802154541

Token 395: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.6931748390197754
    2. ' <' → logprob: -0.6931748390197754
    3. '<s' → logprob: -10.943174362182617
    4. 's' → logprob: -13.193174362182617
    5. '<int' → logprob: -13.443174362182617
    6. ' ' → logprob: -13.818174362182617
    7. '<size' → logprob: -14.318174362182617
    8. '<t' → logprob: -14.568174362182617
    9. '[' → logprob: -14.693174362182617
    10. '           ' → logprob: -14.943174362182617

Token 396: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.005234121344983578
    2. ' best' → logprob: -5.255234241485596
    3. '	best' → logprob: -15.380233764648438
    4. '   ' → logprob: -17.005233764648438
    5. '(best' → logprob: -18.130233764648438
    6. '_best' → logprob: -18.130233764648438
    7. '           ' → logprob: -18.505233764648438
    8. '.best' → logprob: -18.505233764648438
    9. '       ' → logprob: -18.755233764648438
    10. '=' → logprob: -19.880233764648438

Token 397: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -3.8889261304575484e-06
    2. '_s' → logprob: -12.875003814697266
    3. 'sum' → logprob: -14.000003814697266
    4. '_pair' → logprob: -15.875003814697266
    5. 's' → logprob: -16.625003814697266
    6. '_score' → logprob: -17.250003814697266
    7. '_' → logprob: -17.750003814697266
    8. '_pairs' → logprob: -17.875003814697266
    9. '_split' → logprob: -18.125003814697266
    10. '<|end|>' → logprob: -18.125003814697266

Token 398: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7283278107643127
    2. ':
' → logprob: -0.7283278107643127
    3. '               ' → logprob: -3.728327751159668
    4. '           ' → logprob: -4.603327751159668
    5. '<|end|>' → logprob: -8.603327751159668
    6. '):
' → logprob: -9.978327751159668
    7. ',' → logprob: -10.103327751159668
    8. ' :
' → logprob: -10.228327751159668
    9. '       ' → logprob: -10.353327751159668
    10. ' or' → logprob: -10.478327751159668

Token 399: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00028016636497341096
    2. '           ' → logprob: -8.500280380249023
    3. ':
' → logprob: -10.625280380249023
    4. ':' → logprob: -10.750280380249023
    5. '                   ' → logprob: -11.750280380249023
    6. ',' → logprob: -12.500280380249023
    7. '                       ' → logprob: -12.625280380249023
    8. ' best' → logprob: -12.750280380249023
    9. '              ' → logprob: -13.000280380249023
    10. '```' → logprob: -13.125280380249023

Token 400: ' best' (ID: 1636)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22101052105426788
    2. ' best' → logprob: -1.8460105657577515
    3. 'best' (adapté à ' best') → logprob: -3.221010446548462
    4. '                   ' → logprob: -7.846010684967041
    5. '           ' → logprob: -9.971010208129883
    6. '                ' → logprob: -10.846010208129883
    7. '   ' → logprob: -11.221010208129883
    8. '	best' → logprob: -11.221010208129883
    9. 'Best' → logprob: -11.846010208129883
    10. '(best' → logprob: -11.971010208129883

Token 401: '_sum' (ID: 29859)
  Prédit: '_sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.011076359078288078
    2. '_pair' → logprob: -4.5110764503479
    3. '_s' → logprob: -11.011075973510742
    4. '_pairs' → logprob: -12.136075973510742
    5. '_' → logprob: -12.261075973510742
    6. 'sum' → logprob: -14.136075973510742
    7. '   ' → logprob: -16.136075973510742
    8. '_split' → logprob: -16.261075973510742
    9. '=' → logprob: -16.386075973510742
    10. '    ' → logprob: -16.511075973510742

Token 402: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6326842904090881
    2. '=' → logprob: -0.7576842904090881
    3. '               ' → logprob: -10.507684707641602
    4. ',' → logprob: -10.882684707641602
    5. '           ' → logprob: -12.007684707641602
    6. '=s' → logprob: -12.132684707641602
    7. '                   ' → logprob: -12.382684707641602
    8. '                ' → logprob: -12.507684707641602
    9. '   ' → logprob: -12.757684707641602
    10. '
' → logprob: -12.757684707641602

Token 403: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011047814972698689
    2. ' s' → logprob: -4.511047840118408
    3. '               ' → logprob: -20.76104736328125
    4. ' ' → logprob: -21.13604736328125
    5. '                   ' → logprob: -21.13604736328125
    6. '           ' → logprob: -21.26104736328125
    7. '	s' → logprob: -21.51104736328125
    8. '{s' → logprob: -22.76104736328125
    9. '_s' → logprob: -22.88604736328125
    10. '(s' → logprob: -22.88604736328125

Token 404: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.045823566731997e-05
    2. ',' → logprob: -11.875020027160645
    3. '```' → logprob: -12.250020027160645
    4. '<|end|>' → logprob: -12.750020027160645
    5. '           ' → logprob: -13.625020027160645
    6. 'best' → logprob: -13.750020027160645
    7. '       ' → logprob: -14.000020027160645
    8. '                   ' → logprob: -14.500020027160645
    9. '
' → logprob: -15.000020027160645
    10. '			' → logprob: -15.125020027160645

Token 405: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.650518920039758e-06
    2. '```' → logprob: -13.125003814697266
    3. '              ' → logprob: -14.875003814697266
    4. '           ' → logprob: -14.875003814697266
    5. '       ' → logprob: -15.125003814697266
    6. '                ' → logprob: -15.875003814697266
    7. '			' → logprob: -16.000003814697266
    8. '<|end|>' → logprob: -16.125003814697266
    9. '[' → logprob: -16.750003814697266
    10. 'best' → logprob: -16.875003814697266

Token 406: ' best' (ID: 1636)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' (adapté à ' best') → logprob: -0.0011718906462192535
    2. ' best' → logprob: -6.751172065734863
    3. '               ' → logprob: -13.376172065734863
    4. '(best' → logprob: -16.126171112060547
    5. '	best' → logprob: -17.001171112060547
    6. '           ' → logprob: -17.126171112060547
    7. '_best' → logprob: -18.626171112060547
    8. '.best' → logprob: -19.876171112060547
    9. '   ' → logprob: -21.126171112060547
    10. '```' → logprob: -21.376171112060547

Token 407: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -1.8789383830153383e-05
    2. 'pair' → logprob: -11.000019073486328
    3. '=' → logprob: -13.750019073486328
    4. '_pairs' → logprob: -14.375019073486328
    5. '_tuple' → logprob: -16.375019073486328
    6. '_PAIR' → logprob: -16.500019073486328
    7. '_exchange' → logprob: -16.750019073486328
    8. '_' → logprob: -16.750019073486328
    9. 'Pair' → logprob: -17.000019073486328
    10. ' =' → logprob: -17.125019073486328

Token 408: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.011051470413804054
    2. ' =' → logprob: -4.511051654815674
    3. '=(' → logprob: -12.636051177978516
    4. '=
' → logprob: -15.761051177978516
    5. '=

' → logprob: -16.261051177978516
    6. '               ' → logprob: -16.761051177978516
    7. ' =(' → logprob: -17.386051177978516
    8. '＝' → logprob: -18.136051177978516
    9. '           ' → logprob: -18.136051177978516
    10. '(' → logprob: -18.136051177978516

Token 409: ' (' (ID: 350)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0024764856789261103
    2. ' (' → logprob: -6.002476692199707
    3. '   ' → logprob: -14.752476692199707
    4. '(' → logprob: -15.502476692199707
    5. ' ' → logprob: -16.00247573852539
    6. 't' → logprob: -19.25247573852539
    7. '  ' → logprob: -19.50247573852539
    8. '(T' → logprob: -19.62747573852539
    9. ' ' → logprob: -20.00247573852539
    10. '(
' → logprob: -20.00247573852539

Token 410: 't' (ID: 83)
  Prédit: 't'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -2.339278580620885e-06
    2. ' t' → logprob: -13.000001907348633
    3. '   ' → logprob: -17.125001907348633
    4. '`t' → logprob: -17.750001907348633
    5. '	t' → logprob: -18.625001907348633
    6. ')t' → logprob: -18.875001907348633
    7. '_t' → logprob: -20.375001907348633
    8. '
' → logprob: -21.000001907348633
    9. ')' → logprob: -21.000001907348633
    10. ' ' → logprob: -21.250001907348633

Token 411: ',h' (ID: 42751)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04860609769821167
    2. ',h' → logprob: -3.0486061573028564
    3. ' ,' → logprob: -11.173605918884277
    4. ',
' → logprob: -12.548605918884277
    5. 'h' → logprob: -14.173605918884277
    6. ')' → logprob: -16.423606872558594
    7. ' h' → logprob: -16.923606872558594
    8. ',w' → logprob: -16.923606872558594
    9. ',t' → logprob: -17.173606872558594
    10. '```' → logprob: -17.298606872558594

Token 412: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.999452772201039e-05
    2. ')
' → logprob: -10.500029563903809
    3. '           ' → logprob: -13.625029563903809
    4. '       ' → logprob: -13.875029563903809
    5. ')return' → logprob: -16.000030517578125
    6. '               ' → logprob: -16.125030517578125
    7. ' )' → logprob: -17.000030517578125
    8. '),' → logprob: -18.250030517578125
    9. ')

' → logprob: -18.375030517578125
    10. ')
' → logprob: -18.500030517578125

Token 413: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009271837188862264
    2. 'return' → logprob: -7.000926971435547
    3. '
' → logprob: -11.500926971435547
    4. ' return' → logprob: -12.875926971435547
    5. '   ' → logprob: -13.125926971435547
    6. '        
' → logprob: -15.125926971435547
    7. '	' → logprob: -15.250926971435547
    8. '```' → logprob: -15.750926971435547
    9. '           ' → logprob: -15.875926971435547
    10. '      ' → logprob: -15.875926971435547

Token 414: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006848576944321394
    2. 'return' (adapté à ' return') → logprob: -5.0068488121032715
    3. ' return' → logprob: -9.006848335266113
    4. '   ' → logprob: -11.506848335266113
    5. '
' → logprob: -15.131848335266113
    6. '               ' → logprob: -16.38184928894043
    7. '	return' → logprob: -16.63184928894043
    8. '           ' → logprob: -17.00684928894043
    9. '      ' → logprob: -17.13184928894043
    10. '	' → logprob: -17.50684928894043

Token 415: ' best' (ID: 1636)
  Prédit: ' best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' best' → logprob: -0.10020678490400314
    2. 'best' → logprob: -2.3502068519592285
    3. '	best' → logprob: -16.10020637512207
    4. '(best' → logprob: -17.85020637512207
    5. '   ' → logprob: -19.72520637512207
    6. '_best' → logprob: -19.97520637512207
    7. '.best' → logprob: -20.47520637512207
    8. '       ' → logprob: -21.72520637512207
    9. '    ' → logprob: -21.85020637512207
    10. 'b' → logprob: -22.22520637512207

Token 416: '_pair' (ID: 34819)
  Prédit: '_pair'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pair' → logprob: -1.2664456789934775e-06
    2. '_pairs' → logprob: -14.000000953674316
    3. 'pair' → logprob: -16.000001907348633
    4. '_p' → logprob: -16.125001907348633
    5. '_' → logprob: -16.875001907348633
    6. '_PAIR' → logprob: -17.375001907348633
    7. '_exchange' → logprob: -17.375001907348633
    8. '_point' → logprob: -18.125001907348633
    9. '_partner' → logprob: -18.250001907348633
    10. '_pattern' → logprob: -18.500001907348633

Token 417: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 418: 'class' (ID: 1444)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.645101010799408
    2. 'def' → logprob: -0.770101010799408
    3. '```' → logprob: -4.895101070404053
    4. '<|end|>' → logprob: -5.770101070404053
    5. 'if' → logprob: -6.770101070404053
    6. 'import' → logprob: -8.145100593566895
    7. 'from' → logprob: -8.770100593566895
    8. '<|end|>' → logprob: -9.895100593566895
    9. ')' → logprob: -10.145100593566895
    10. 't' → logprob: -10.520100593566895

Token 419: ' Input' (ID: 10090)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Game' → logprob: -1.7460440397262573
    2. 'Main' → logprob: -1.7460440397262573
    3. 'Solution' → logprob: -1.7460440397262573
    4. ' Game' → logprob: -2.121044158935547
    5. ' Solution' → logprob: -2.746044158935547
    6. ' Main' → logprob: -2.996044158935547
    7. 'Exchange' → logprob: -3.121044158935547
    8. ' Exchange' → logprob: -3.496044158935547
    9. 'Card' → logprob: -3.871044158935547
    10. 'Player' → logprob: -3.871044158935547

Token 420: 'Parser' (ID: 9231)
  Prédit: 'Reader'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Reader' → logprob: -0.49729061126708984
    2. 'Handler' → logprob: -1.4972906112670898
    3. ':' → logprob: -2.24729061126709
    4. 'Processor' → logprob: -3.99729061126709
    5. 'Data' → logprob: -4.12229061126709
    6. 'Parser' → logprob: -4.37229061126709
    7. ':
' → logprob: -4.99729061126709
    8. '():' → logprob: -5.12229061126709
    9. 'Provider' → logprob: -7.62229061126709
    10. '():
' → logprob: -8.12229061126709

Token 421: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0024882610887289047
    2. ':
' → logprob: -6.002488136291504
    3. '):' → logprob: -12.752488136291504
    4. ':def' → logprob: -12.877488136291504
    5. '():' → logprob: -13.377488136291504
    6. '(object' → logprob: -13.627488136291504
    7. '<|end|>' → logprob: -13.877488136291504
    8. ':

' → logprob: -14.002488136291504
    9. '(' → logprob: -14.627488136291504
    10. ' :' → logprob: -15.127488136291504

Token 422: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000156577822053805
    2. ' def' → logprob: -9.00015640258789
    3. 'def' → logprob: -10.37515640258789
    4. 'import' → logprob: -14.62515640258789
    5. 'staticmethod' → logprob: -15.00015640258789
    6. ' @' → logprob: -15.50015640258789
    7. ' ' → logprob: -15.75015640258789
    8. '  ' → logprob: -16.37515640258789
    9. 'class' → logprob: -16.37515640258789
    10. '```' → logprob: -16.37515640258789

Token 423: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.049121953547000885
    2. '@' → logprob: -3.299121856689453
    3. ' def' → logprob: -4.549121856689453
    4. '   ' → logprob: -8.299121856689453
    5. ' @' → logprob: -8.549121856689453
    6. 'staticmethod' → logprob: -15.549121856689453
    7. '@property' → logprob: -17.049121856689453
    8. 'from' → logprob: -17.424121856689453
    9. 'import' → logprob: -17.799121856689453
    10. '	def' → logprob: -17.799121856689453

Token 424: ' __' (ID: 2516)
  Prédit: 'staticmethod'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.016276467591524124
    2. 'def' → logprob: -4.6412763595581055
    3. 'init' → logprob: -5.7662763595581055
    4. ' def' → logprob: -6.2662763595581055
    5. 'static' → logprob: -7.2662763595581055
    6. ' __' → logprob: -8.141276359558105
    7. ' static' → logprob: -8.266276359558105
    8. '__' → logprob: -8.891276359558105
    9. 'classmethod' → logprob: -9.641276359558105
    10. '_static' → logprob: -12.141276359558105

Token 425: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.320199877838604e-07
    2. 'int' → logprob: -15.875
    3. 'iter' → logprob: -16.125
    4. 'staticmethod' → logprob: -17.0
    5. '__' → logprob: -17.375
    6. 'it' → logprob: -17.75
    7. 'new' → logprob: -17.875
    8. 'def' → logprob: -18.25
    9. 'call' → logprob: -18.25
    10. 'ini' → logprob: -19.25

Token 426: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0059568872675299644
    2. '__(' → logprob: -5.255956649780273
    3. '(' → logprob: -8.005956649780273
    4. 'self' → logprob: -8.130956649780273
    5. ' (' → logprob: -10.255956649780273
    6. '   ' → logprob: -10.755956649780273
    7. '__(
' → logprob: -11.005956649780273
    8. '(
' → logprob: -12.130956649780273
    9. '
' → logprob: -12.630956649780273
    10. ' self' → logprob: -12.755956649780273

Token 427: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.5570885807392187e-05
    2. ')' → logprob: -11.875015258789062
    3. '):
' → logprob: -12.125015258789062
    4. ' self' → logprob: -13.375015258789062
    5. '
' → logprob: -14.125015258789062
    6. '       ' → logprob: -14.750015258789062
    7. '   ' → logprob: -14.875015258789062
    8. '(self' → logprob: -17.500015258789062
    9. ')
' → logprob: -18.125015258789062
    10. '):' → logprob: -18.250015258789062

Token 428: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.42034631967544556
    2. ',' → logprob: -1.2953462600708008
    3. '(self' → logprob: -3.670346260070801
    4. '):' → logprob: -3.795346260070801
    5. '):
' → logprob: -4.670346260070801
    6. '   ' → logprob: -5.295346260070801
    7. ' self' → logprob: -6.045346260070801
    8. ',self' → logprob: -6.045346260070801
    9. '
' → logprob: -6.795346260070801
    10. ' (' → logprob: -7.670346260070801

Token 429: ' input' (ID: 3422)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.6593954563140869
    2. 'self' → logprob: -1.284395456314087
    3. ' lines' → logprob: -2.284395456314087
    4. 'input' → logprob: -2.659395456314087
    5. ')' → logprob: -4.159395217895508
    6. 'raw' → logprob: -5.159395217895508
    7. ' self' → logprob: -5.284395217895508
    8. ' input' → logprob: -5.534395217895508
    9. 'data' → logprob: -7.284395217895508
    10. ' raw' → logprob: -7.409395217895508

Token 430: '_lines' (ID: 42980)
  Prédit: '_data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_data' → logprob: -0.6876633167266846
    2. '_lines' → logprob: -1.3126633167266846
    3. '):' → logprob: -2.9376633167266846
    4. '_text' → logprob: -3.1876633167266846
    5. ')' → logprob: -3.4376633167266846
    6. '_source' → logprob: -3.9376633167266846
    7. '_str' → logprob: -3.9376633167266846
    8. ':' → logprob: -4.4376630783081055
    9. 'data' → logprob: -4.5626630783081055
    10. '_string' → logprob: -4.6876630783081055

Token 431: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00017314712749794126
    2. '):' → logprob: -9.000173568725586
    3. '):
' → logprob: -10.500173568725586
    4. '   ' → logprob: -12.000173568725586
    5. 'self' → logprob: -12.125173568725586
    6. '```' → logprob: -12.250173568725586
    7. ')' → logprob: -13.125173568725586
    8. ' :' → logprob: -13.625173568725586
    9. '       ' → logprob: -13.750173568725586
    10. ':self' → logprob: -15.250173568725586

Token 432: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.004346686881035566
    2. 'Iterator' → logprob: -5.50434684753418
    3. 'Optional' → logprob: -9.12934684753418
    4. 'list' → logprob: -9.25434684753418
    5. ' List' → logprob: -10.00434684753418
    6. 'Iterable' → logprob: -11.37934684753418
    7. ' Iterator' → logprob: -13.12934684753418
    8. ')' → logprob: -13.50434684753418
    9. 'iter' → logprob: -13.87934684753418
    10. '   ' → logprob: -14.12934684753418

Token 433: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.306760805164231e-05
    2. 'str' → logprob: -11.25001335144043
    3. '```' → logprob: -18.75001335144043
    4. '=str' → logprob: -18.87501335144043
    5. ')' → logprob: -18.87501335144043
    6. ':str' → logprob: -19.00001335144043
    7. ' str' → logprob: -19.25001335144043
    8. '[' → logprob: -19.37501335144043
    9. '
' → logprob: -19.37501335144043
    10. '	str' → logprob: -20.50001335144043

Token 434: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.3864946961402893
    2. ']):' → logprob: -1.2614946365356445
    3. ')' → logprob: -4.1364946365356445
    4. '):' → logprob: -4.3864946365356445
    5. ']):
' → logprob: -5.0114946365356445
    6. ']' → logprob: -6.2614946365356445
    7. '   ' → logprob: -9.261494636535645
    8. '）' → logprob: -9.386494636535645
    9. ']:' → logprob: -9.511494636535645
    10. '):
' → logprob: -10.636494636535645

Token 435: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1833895891904831
    2. ':
' → logprob: -1.9333895444869995
    3. '       ' → logprob: -4.308389663696289
    4. '   ' → logprob: -4.808389663696289
    5. ',' → logprob: -8.058389663696289
    6. '):
' → logprob: -8.058389663696289
    7. '[' → logprob: -8.933389663696289
    8. '<|end|>' → logprob: -9.183389663696289
    9. ')' → logprob: -9.558389663696289
    10. '<|end|>' → logprob: -9.683389663696289

Token 436: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -1.306760805164231e-05
    2. ' None' → logprob: -11.25001335144043
    3. '   ' → logprob: -18.75001335144043
    4. 'none' → logprob: -20.37501335144043
    5. '_None' → logprob: -21.00001335144043
    6. 'List' → logprob: -21.37501335144043
    7. '(None' → logprob: -21.62501335144043
    8. '=None' → logprob: -22.00001335144043
    9. 'int' → logprob: -22.25001335144043
    10. ',None' → logprob: -23.00001335144043

Token 437: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8837959170341492
    2. ':
' → logprob: -0.8837959170341492
    3. '       ' → logprob: -1.758795976638794
    4. '   ' → logprob: -7.758795738220215
    5. ',' → logprob: -8.508795738220215
    6. '):
' → logprob: -8.508795738220215
    7. '<|end|>' → logprob: -8.508795738220215
    8. 'def' → logprob: -9.133795738220215
    9. '<|end|>' → logprob: -10.133795738220215
    10. ':def' → logprob: -10.758795738220215

Token 438: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00938132219016552
    2. 'self' → logprob: -4.759381294250488
    3. '   ' → logprob: -7.259381294250488
    4. ' self' → logprob: -10.009381294250488
    5. 'def' → logprob: -11.884381294250488
    6. '	' → logprob: -12.134381294250488
    7. '	self' → logprob: -12.759381294250488
    8. '	   ' → logprob: -14.009381294250488
    9. ' ' → logprob: -14.634381294250488
    10. '           ' → logprob: -14.759381294250488

Token 439: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002087688772007823
    2. '       ' → logprob: -6.252087593078613
    3. ' self' → logprob: -8.752087593078613
    4. '   ' → logprob: -14.127087593078613
    5. '	self' → logprob: -15.627087593078613
    6. '[self' → logprob: -17.87708854675293
    7. ' ' → logprob: -18.12708854675293
    8. '(self' → logprob: -18.75208854675293
    9. '
' → logprob: -19.87708854675293
    10. '      ' → logprob: -20.00208854675293

Token 440: '.lines' (ID: 96601)
  Prédit: '.input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.input' → logprob: -0.029830673709511757
    2. '.lines' → logprob: -3.5298306941986084
    3. 'input' → logprob: -9.529830932617188
    4. '.' → logprob: -12.779830932617188
    5. '.raw' → logprob: -13.279830932617188
    6. 'lines' → logprob: -13.779830932617188
    7. '.inputs' → logprob: -14.029830932617188
    8. '.line' → logprob: -15.154830932617188
    9. '.data' → logprob: -15.654830932617188
    10. '	lines' → logprob: -15.654830932617188

Token 441: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0485910028219223
    2. ' =' → logprob: -3.048590898513794
    3. '=self' → logprob: -13.923590660095215
    4. '   ' → logprob: -14.048590660095215
    5. '=input' → logprob: -14.423590660095215
    6. '       ' → logprob: -14.548590660095215
    7. '.extend' → logprob: -15.173590660095215
    8. '=line' → logprob: -15.173590660095215
    9. '.append' → logprob: -16.29859161376953
    10. '    ' → logprob: -16.42359161376953

Token 442: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00012415809032972902
    2. ' input' → logprob: -9.000123977661133
    3. '[input' → logprob: -14.375123977661133
    4. '[' → logprob: -16.500123977661133
    5. 'iter' → logprob: -17.625123977661133
    6. '(input' → logprob: -18.750123977661133
    7. '<input' → logprob: -19.250123977661133
    8. ' [' → logprob: -19.625123977661133
    9. 'list' → logprob: -19.625123977661133
    10. '   ' → logprob: -19.625123977661133

Token 443: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.7432603272027336e-06
    2. 'lines' → logprob: -13.500001907348633
    3. 'Lines' → logprob: -16.625001907348633
    4. '_LINES' → logprob: -17.125001907348633
    5. '_' → logprob: -17.500001907348633
    6. '[' → logprob: -17.625001907348633
    7. '.lines' → logprob: -18.125001907348633
    8. 's' → logprob: -18.375001907348633
    9. '   ' → logprob: -18.625001907348633
    10. '```' → logprob: -18.750001907348633

Token 444: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6405333280563354
    2. '
' → logprob: -1.2655333280563354
    3. 'def' → logprob: -2.515533447265625
    4. '<|end|>' → logprob: -2.765533447265625
    5. '       ' → logprob: -3.140533447265625
    6. ' def' → logprob: -6.640533447265625
    7. '<|end|>' → logprob: -6.765533447265625
    8. '    
' → logprob: -7.390533447265625
    9. '

' → logprob: -9.015533447265625
    10. '	def' → logprob: -9.015533447265625

Token 445: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1968439668416977
    2. 'def' → logprob: -1.9468439817428589
    3. '<|end|>' → logprob: -4.071844100952148
    4. '
' → logprob: -4.321844100952148
    5. ' def' → logprob: -5.571844100952148
    6. '       ' → logprob: -6.946844100952148
    7. '    
' → logprob: -7.696844100952148
    8. '<|end|>' → logprob: -8.821844100952148
    9. '	def' → logprob: -8.946844100952148
    10. '

' → logprob: -9.946844100952148

Token 446: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.001313809072598815
    2. '       ' → logprob: -7.25131368637085
    3. ' self' → logprob: -7.50131368637085
    4. '   ' → logprob: -10.126314163208008
    5. 'def' → logprob: -12.126314163208008
    6. '
' → logprob: -12.876314163208008
    7. '	self' → logprob: -13.126314163208008
    8. '0' → logprob: -14.501314163208008
    9. ' ' → logprob: -15.626314163208008
    10. '  ' → logprob: -16.126314163208008

Token 447: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.01194486953318119
    2. 'index' → logprob: -5.636944770812988
    3. '.current' → logprob: -5.761944770812988
    4. '.idx' → logprob: -6.136944770812988
    5. '.pos' → logprob: -6.261944770812988
    6. '._' → logprob: -7.011944770812988
    7. '_index' → logprob: -9.136944770812988
    8. '.position' → logprob: -10.261944770812988
    9. '.pointer' → logprob: -11.511944770812988
    10. 'pos' → logprob: -11.636944770812988

Token 448: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868728280067444
    2. '=' → logprob: -1.1368727684020996
    3. ' ' → logprob: -13.761873245239258
    4. ' +=' → logprob: -14.636873245239258
    5. '<|end|>' → logprob: -16.136873245239258
    6. '0' → logprob: -16.386873245239258
    7. '+=' → logprob: -16.386873245239258
    8. '  ' → logprob: -17.386873245239258
    9. '   ' → logprob: -17.511873245239258
    10. 'import' → logprob: -17.636873245239258

Token 449: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001234428636962548
    2. ' ' → logprob: -9.000123023986816
    3. '۰' → logprob: -18.250123977661133
    4. '   ' → logprob: -19.000123977661133
    5. '1' → logprob: -20.000123977661133
    6. '=' → logprob: -20.375123977661133
    7. '```' → logprob: -20.750123977661133
    8. '  ' → logprob: -21.125123977661133
    9. '<|end|>' → logprob: -21.125123977661133
    10. '[' → logprob: -21.125123977661133

Token 450: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '۰' → logprob: -20.000001907348633
    4. '<|end|>' → logprob: -20.000001907348633
    5. '   ' → logprob: -21.875001907348633
    6. '```' → logprob: -22.250001907348633
    7. '０' → logprob: -22.375001907348633
    8. '০' → logprob: -22.625001907348633
    9. '[' → logprob: -23.000001907348633
    10. '=' → logprob: -23.500001907348633

Token 451: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.689877986907959
    2. '
' → logprob: -1.564877986907959
    3. '<|end|>' → logprob: -1.689877986907959
    4. 'def' → logprob: -2.689877986907959
    5. ' def' → logprob: -3.689877986907959
    6. '    
' → logprob: -4.939877986907959
    7. '<|end|>' → logprob: -5.814877986907959
    8. '

' → logprob: -7.314877986907959
    9. '	def' → logprob: -8.189878463745117
    10. '  
' → logprob: -8.814878463745117

Token 452: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2620401978492737
    2. 'def' → logprob: -2.262040138244629
    3. '<|end|>' → logprob: -2.262040138244629
    4. ' def' → logprob: -4.137040138244629
    5. '    
' → logprob: -6.387040138244629
    6. '<|end|>' → logprob: -6.512040138244629
    7. '
' → logprob: -6.762040138244629
    8. '	def' → logprob: -7.262040138244629
    9. ' ' → logprob: -8.012040138244629
    10. '  ' → logprob: -8.137040138244629

Token 453: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.008629233576357365
    2. ' def' → logprob: -4.758629322052002
    3. '   ' → logprob: -11.383628845214844
    4. '	def' → logprob: -12.758628845214844
    5. '
' → logprob: -16.258628845214844
    6. '<|end|>' → logprob: -16.758628845214844
    7. ' ' → logprob: -17.008628845214844
    8. '@property' → logprob: -17.633628845214844
    9. ')' → logprob: -17.758628845214844
    10. '    
' → logprob: -17.883628845214844

Token 454: ' __' (ID: 2516)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.20105791091918945
    2. 'next' → logprob: -2.2010579109191895
    3. 'has' → logprob: -2.8260579109191895
    4. ' has' → logprob: -5.4510579109191895
    5. ' readline' → logprob: -5.8260579109191895
    6. ' read' → logprob: -6.5760579109191895
    7. ' next' → logprob: -6.5760579109191895
    8. 'def' → logprob: -6.8260579109191895
    9. 'parse' → logprob: -7.7010579109191895
    10. '__' → logprob: -8.326057434082031

Token 455: 'iter' (ID: 2340)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.038063064217567444
    2. 'iter' → logprob: -3.2880630493164062
    3. 'init' → logprob: -11.288063049316406
    4. 'len' → logprob: -12.038063049316406
    5. 'call' → logprob: -12.913063049316406
    6. 'getitem' → logprob: -14.538063049316406
    7. ' next' → logprob: -15.913063049316406
    8. '_next' → logprob: -16.913063049316406
    9. 'Next' → logprob: -17.538063049316406
    10. 'copy' → logprob: -18.288063049316406

Token 456: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0002901757834479213
    2. '(' → logprob: -8.625289916992188
    3. '__(' → logprob: -9.125289916992188
    4. 'self' → logprob: -14.125289916992188
    5. '(
' → logprob: -14.500289916992188
    6. 'def' → logprob: -16.375289916992188
    7. '
' → logprob: -16.625289916992188
    8. ' (' → logprob: -16.750289916992188
    9. '__' → logprob: -16.750289916992188
    10. '```' → logprob: -16.875289916992188

Token 457: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00043448375072330236
    2. ')' → logprob: -7.750434398651123
    3. ' self' → logprob: -12.750434875488281
    4. '
' → logprob: -15.125434875488281
    5. '(self' → logprob: -15.250434875488281
    6. '   ' → logprob: -16.12543487548828
    7. ')
' → logprob: -16.12543487548828
    8. 's' → logprob: -16.75043487548828
    9. '):
' → logprob: -16.75043487548828
    10. ')(' → logprob: -17.25043487548828

Token 458: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.47780823707580566
    2. '):' → logprob: -0.9778082370758057
    3. 'self' → logprob: -6.102807998657227
    4. ')' → logprob: -6.852807998657227
    5. '   ' → logprob: -8.477807998657227
    6. '(self' → logprob: -8.852807998657227
    7. '       ' → logprob: -10.352807998657227
    8. '):

' → logprob: -10.727807998657227
    9. '):
' → logprob: -11.477807998657227
    10. ')(' → logprob: -12.602807998657227

Token 459: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004451839718967676
    2. 'self' → logprob: -5.754451751708984
    3. '(' → logprob: -7.379451751708984
    4. '   ' → logprob: -7.879451751708984
    5. 'def' → logprob: -9.004451751708984
    6. ':' → logprob: -9.254451751708984
    7. '       ' → logprob: -11.004451751708984
    8. ':
' → logprob: -11.254451751708984
    9. ')' → logprob: -11.754451751708984
    10. '->' → logprob: -12.254451751708984

Token 460: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.18317154049873352
    2. ''' → logprob: -2.183171510696411
    3. '"' → logprob: -3.183171510696411
    4. ' Iterator' → logprob: -5.43317174911499
    5. 'List' → logprob: -6.30817174911499
    6. 'iter' → logprob: -6.43317174911499
    7. ''int' → logprob: -6.68317174911499
    8. 'iterator' → logprob: -7.18317174911499
    9. ''s' → logprob: -7.18317174911499
    10. 'str' → logprob: -7.43317174911499

Token 461: '[' (ID: 58)
  Prédit: '[str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -0.12938635051250458
    2. '[List' → logprob: -2.2543864250183105
    3. '[int' → logprob: -4.1293864250183105
    4. '[' → logprob: -8.629385948181152
    5. ':' → logprob: -9.379385948181152
    6. ':
' → logprob: -10.254385948181152
    7. 'str' → logprob: -10.629385948181152
    8. 'int' → logprob: -12.254385948181152
    9. '[list' → logprob: -12.879385948181152
    10. 'List' → logprob: -13.754385948181152

Token 462: 'Tuple' (ID: 40048)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.051726020872592926
    2. 'List' → logprob: -3.1767261028289795
    3. 'int' → logprob: -4.8017258644104
    4. '[str' → logprob: -8.301726341247559
    5. 'Tuple' → logprob: -9.051726341247559
    6. 'Card' → logprob: -10.051726341247559
    7. 'Optional' → logprob: -11.051726341247559
    8. ' str' → logprob: -11.051726341247559
    9. 'list' → logprob: -11.676726341247559
    10. '[List' → logprob: -12.051726341247559

Token 463: '[' (ID: 58)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0011940367985516787
    2. '[List' → logprob: -6.751194000244141
    3. 'int' → logprob: -11.25119400024414
    4. '[' → logprob: -11.62619400024414
    5. '[str' → logprob: -13.25119400024414
    6. '[Int' → logprob: -16.87619400024414
    7. '[
' → logprob: -17.00119400024414
    8. '   ' → logprob: -17.37619400024414
    9. 'List' → logprob: -18.12619400024414
    10. ',int' → logprob: -18.62619400024414

Token 464: 'Card' (ID: 6376)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.012832051143050194
    2. 'List' → logprob: -4.512832164764404
    3. '[int' → logprob: -7.012832164764404
    4. 'str' → logprob: -7.512832164764404
    5. 'Optional' → logprob: -8.262831687927246
    6. ']' → logprob: -10.512831687927246
    7. '[List' → logprob: -11.512831687927246
    8. ' int' → logprob: -11.637831687927246
    9. '[str' → logprob: -12.012831687927246
    10. '   ' → logprob: -12.387831687927246

Token 465: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -2.7729658540920354e-05
    2. 'List' → logprob: -10.750027656555176
    3. '[int' → logprob: -12.250027656555176
    4. 'int' → logprob: -14.625027656555176
    5. 'set' → logprob: -14.750027656555176
    6. '[' → logprob: -15.125027656555176
    7. ',' → logprob: -15.750027656555176
    8. 'Optional' → logprob: -16.375028610229492
    9. 'Sets' → logprob: -16.625028610229492
    10. ']' → logprob: -17.125028610229492

Token 466: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01609126478433609
    2. ',int' → logprob: -4.266091346740723
    3. ',List' → logprob: -6.266091346740723
    4. '[int' → logprob: -10.766091346740723
    5. ',str' → logprob: -13.516091346740723
    6. ' ,' → logprob: -13.516091346740723
    7. 'int' → logprob: -13.891091346740723
    8. ',[' → logprob: -15.141091346740723
    9. ',bool' → logprob: -15.141091346740723
    10. ']]:
' → logprob: -15.141091346740723

Token 467: ' Card' (ID: 9958)
  Prédit: 'Card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -0.000250491953920573
    2. ' Card' → logprob: -8.500250816345215
    3. 'Optional' → logprob: -10.000250816345215
    4. 'Car' → logprob: -14.125250816345215
    5. 'List' → logprob: -14.625250816345215
    6. '   ' → logprob: -16.5002498626709
    7. ' ' → logprob: -16.7502498626709
    8. '<Card' → logprob: -16.7502498626709
    9. '
' → logprob: -16.8752498626709
    10. 'int' → logprob: -17.5002498626709

Token 468: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -1.5048530030981055e-06
    2. 'Optional' → logprob: -13.500001907348633
    3. 'Sets' → logprob: -17.125001907348633
    4. 'set' → logprob: -17.500001907348633
    5. '_Set' → logprob: -18.375001907348633
    6. ' Set' → logprob: -18.625001907348633
    7. '	Set' → logprob: -19.000001907348633
    8. 'Option' → logprob: -19.000001907348633
    9. 'Tuple' → logprob: -19.250001907348633
    10. '_set' → logprob: -19.375001907348633

Token 469: ']]:
' (ID: 183340)
  Prédit: ']]:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']]:
' → logprob: -0.11313533037900925
    2. ']]' → logprob: -2.23813533782959
    3. ',' → logprob: -8.23813533782959
    4. ']' → logprob: -10.48813533782959
    5. ']:' → logprob: -11.48813533782959
    6. ')]' → logprob: -12.98813533782959
    7. '```' → logprob: -13.36313533782959
    8. ' ]' → logprob: -13.86313533782959
    9. '   ' → logprob: -13.98813533782959
    10. ']>' → logprob: -13.98813533782959

Token 470: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038106455467641354
    2. '
' → logprob: -6.378810882568359
    3. '```' → logprob: -7.128810882568359
    4. '   ' → logprob: -7.753810882568359
    5. '        
' → logprob: -8.00381088256836
    6. '<|end|>' → logprob: -8.12881088256836
    7. '    
' → logprob: -9.12881088256836
    8. ',' → logprob: -10.37881088256836
    9. ' 
' → logprob: -10.87881088256836
    10. '<|end|>' → logprob: -11.00381088256836

Token 471: ' while' (ID: 2049)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -7.088138227118179e-05
    2. '
' → logprob: -10.625070571899414
    3. 'while' (adapté à ' while') → logprob: -10.750070571899414
    4. ' while' → logprob: -11.125070571899414
    5. '   ' → logprob: -12.000070571899414
    6. '        
' → logprob: -13.000070571899414
    7. '```' → logprob: -14.375070571899414
    8. '           ' → logprob: -14.875070571899414
    9. '      ' → logprob: -15.750070571899414
    10. '    
' → logprob: -15.750070571899414

Token 472: ' True' (ID: 6432)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002490522339940071
    2. ' self' → logprob: -6.002490520477295
    3. 'True' → logprob: -11.252490997314453
    4. '   ' → logprob: -14.377490997314453
    5. '(self' → logprob: -14.502490997314453
    6. '	self' → logprob: -14.752490997314453
    7. ' True' → logprob: -15.127490997314453
    8. '       ' → logprob: -15.752490997314453
    9. '[self' → logprob: -17.252490997314453
    10. '           ' → logprob: -17.502490997314453

Token 473: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11491596698760986
    2. '           ' → logprob: -2.8649158477783203
    3. ':
' → logprob: -3.1149158477783203
    4. '       ' → logprob: -5.11491584777832
    5. ',' → logprob: -7.23991584777832
    6. '<|end|>' → logprob: -9.11491584777832
    7. '<|end|>' → logprob: -9.36491584777832
    8. ' and' → logprob: -9.36491584777832
    9. '   ' → logprob: -9.98991584777832
    10. '.' → logprob: -10.61491584777832

Token 474: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006735934875905514
    2. '       ' → logprob: -7.375673770904541
    3. '   ' → logprob: -10.750673294067383
    4. '```' → logprob: -10.875673294067383
    5. ' if' → logprob: -13.750673294067383
    6. '<|end|>' → logprob: -14.000673294067383
    7. '            
' → logprob: -14.250673294067383
    8. ',' → logprob: -14.375673294067383
    9. 'self' → logprob: -14.625673294067383
    10. '<|end|>' → logprob: -14.625673294067383

Token 475: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7784106731414795
    2. 'line' → logprob: -1.0284106731414795
    3. '           ' → logprob: -2.2784106731414795
    4. ' if' → logprob: -2.9034106731414795
    5. ' line' → logprob: -4.153410911560059
    6. '   ' → logprob: -5.028410911560059
    7. 'n' → logprob: -6.278410911560059
    8. 'num' → logprob: -7.153410911560059
    9. ' n' → logprob: -8.028410911560059
    10. 'try' → logprob: -8.278410911560059

Token 476: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00033939589047804475
    2. ' self' → logprob: -8.00033950805664
    3. '           ' → logprob: -12.50033950805664
    4. '(self' → logprob: -16.25033950805664
    5. '   ' → logprob: -16.87533950805664
    6. '
' → logprob: -17.37533950805664
    7. '       ' → logprob: -18.25033950805664
    8. '	self' → logprob: -18.37533950805664
    9. 'len' → logprob: -18.87533950805664
    10. 'not' → logprob: -19.62533950805664

Token 477: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.014165272004902363
    2. 'index' → logprob: -4.26416540145874
    3. '.' → logprob: -13.639164924621582
    4. '	index' → logprob: -15.139164924621582
    5. '=index' → logprob: -16.2641658782959
    6. ' index' → logprob: -16.3891658782959
    7. '[index' → logprob: -16.6391658782959
    8. '@index' → logprob: -16.7641658782959
    9. ':index' → logprob: -17.1391658782959
    10. ' .' → logprob: -17.7641658782959

Token 478: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.4743502140045166
    2. ' >=' → logprob: -0.9743502140045166
    3. '+' → logprob: -8.349349975585938
    4. '==' → logprob: -11.474349975585938
    5. '   ' → logprob: -11.974349975585938
    6. ' ' → logprob: -11.974349975585938
    7. ']>=' → logprob: -12.099349975585938
    8. ')>=' → logprob: -12.724349975585938
    9. ' +' → logprob: -13.599349975585938
    10. '>' → logprob: -13.974349975585938

Token 479: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.306760805164231e-05
    2. ' len' → logprob: -11.25001335144043
    3. '           ' → logprob: -17.75001335144043
    4. '(len' → logprob: -20.62501335144043
    5. '	len' → logprob: -22.00001335144043
    6. '=len' → logprob: -22.00001335144043
    7. ',len' → logprob: -22.50001335144043
    8. 'length' → logprob: -22.75001335144043
    9. '   ' → logprob: -22.87501335144043
    10. '
' → logprob: -23.25001335144043

Token 480: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.0087516784551553e-05
    2. 'self' → logprob: -11.75001049041748
    3. '(' → logprob: -13.12501049041748
    4. '
' → logprob: -16.625009536743164
    5. '=self' → logprob: -16.875009536743164
    6. '[self' → logprob: -17.250009536743164
    7. '(
' → logprob: -17.500009536743164
    8. '```' → logprob: -17.750009536743164
    9. ' self' → logprob: -17.875009536743164
    10. ' (' → logprob: -18.375009536743164

Token 481: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -4.751746746478602e-05
    2. 'lines' → logprob: -10.00004768371582
    3. '.' → logprob: -14.12504768371582
    4. '(lines' → logprob: -14.25004768371582
    5. '	lines' → logprob: -14.62504768371582
    6. ' lines' → logprob: -16.50004768371582
    7. 'Lines' → logprob: -18.25004768371582
    8. ').' → logprob: -18.50004768371582
    9. '.line' → logprob: -18.62504768371582
    10. '.l' → logprob: -18.75004768371582

Token 482: '):
' (ID: 1883)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.27305275201797485
    2. ':
' → logprob: -1.77305269241333
    3. 'or' → logprob: -3.14805269241333
    4. ':' → logprob: -3.89805269241333
    5. '           ' → logprob: -5.89805269241333
    6. '               ' → logprob: -6.27305269241333
    7. ' and' → logprob: -7.52305269241333
    8. 'and' → logprob: -8.273053169250488
    9. '):
' → logprob: -8.398053169250488
    10. ':return' → logprob: -9.398053169250488

Token 483: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00033593899570405483
    2. '           ' → logprob: -8.500335693359375
    3. 'return' → logprob: -9.125335693359375
    4. ' return' → logprob: -11.500335693359375
    5. 'break' → logprob: -12.500335693359375
    6. '
' → logprob: -12.500335693359375
    7. '                
' → logprob: -13.000335693359375
    8. ' break' → logprob: -14.375335693359375
    9. '```' → logprob: -14.375335693359375
    10. '   ' → logprob: -14.750335693359375

Token 484: ' break' (ID: 2338)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2734319865703583
    2. 'break' (adapté à ' break') → logprob: -1.5234320163726807
    3. ' return' → logprob: -4.523431777954102
    4. ' break' → logprob: -5.273431777954102
    5. '               ' → logprob: -5.523431777954102
    6. '           ' → logprob: -7.273431777954102
    7. '                   ' → logprob: -7.523431777954102
    8. '
' → logprob: -9.773431777954102
    9. '```' → logprob: -12.648431777954102
    10. '   ' → logprob: -12.898431777954102

Token 485: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008672756957821548
    2. '
' → logprob: -7.8758673667907715
    3. '            
' → logprob: -8.000866889953613
    4. 'line' → logprob: -10.375866889953613
    5. ' line' → logprob: -10.500866889953613
    6. '    
' → logprob: -10.500866889953613
    7. '       ' → logprob: -11.000866889953613
    8. '  
' → logprob: -11.000866889953613
    9. '   ' → logprob: -12.125866889953613
    10. 'yield' → logprob: -12.875866889953613

Token 486: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003946486860513687
    2. '
' → logprob: -5.753946304321289
    3. '            
' → logprob: -7.878946304321289
    4. 'line' → logprob: -8.503946304321289
    5. ' line' → logprob: -9.628946304321289
    6. '       ' → logprob: -10.003946304321289
    7. '    
' → logprob: -11.128946304321289
    8. 'self' → logprob: -11.378946304321289
    9. '  
' → logprob: -11.753946304321289
    10. '   ' → logprob: -12.003946304321289

Token 487: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.07231690734624863
    2. 'line' → logprob: -3.072316884994507
    3. '           ' → logprob: -4.572317123413086
    4. 'num' → logprob: -5.572317123413086
    5. 'count' → logprob: -5.697317123413086
    6. 'N' → logprob: -6.322317123413086
    7. ' n' → logprob: -6.822317123413086
    8. '   ' → logprob: -6.947317123413086
    9. 'first' → logprob: -8.197317123413086
    10. 's' → logprob: -8.697317123413086

Token 488: '_m' (ID: 1285)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.09171832352876663
    2. ' =' → logprob: -2.7167184352874756
    3. '=' → logprob: -3.9667184352874756
    4. 'line' → logprob: -6.3417181968688965
    5. '=line' → logprob: -7.4667181968688965
    6. '   ' → logprob: -8.966718673706055
    7. ' line' → logprob: -9.966718673706055
    8. '           ' → logprob: -10.716718673706055
    9. ',' → logprob: -10.716718673706055
    10. '_str' → logprob: -10.966718673706055

Token 489: '_line' (ID: 14418)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5692650079727173
    2. ' =' → logprob: -0.9442650079727173
    3. '_line' → logprob: -3.1942648887634277
    4. ',' → logprob: -6.069264888763428
    5. '=line' → logprob: -7.069264888763428
    6. '_str' → logprob: -8.194265365600586
    7. 'line' → logprob: -8.694265365600586
    8. '   ' → logprob: -8.944265365600586
    9. '_' → logprob: -9.319265365600586
    10. ' ' → logprob: -9.694265365600586

Token 490: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016049737110733986
    2. '=' → logprob: -4.141049861907959
    3. '=line' → logprob: -11.7660493850708
    4. '       ' → logprob: -12.3910493850708
    5. '           ' → logprob: -13.5160493850708
    6. '   ' → logprob: -14.0160493850708
    7. '        ' → logprob: -14.7660493850708
    8. ' ' → logprob: -15.2660493850708
    9. '    ' → logprob: -15.3910493850708
    10. ',' → logprob: -16.266050338745117

Token 491: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015023599844425917
    2. ' self' → logprob: -6.501502513885498
    3. '           ' → logprob: -17.126502990722656
    4. '(self' → logprob: -20.376502990722656
    5. '	self' → logprob: -21.376502990722656
    6. '[self' → logprob: -22.251502990722656
    7. '               ' → logprob: -22.501502990722656
    8. '
' → logprob: -22.876502990722656
    9. '   ' → logprob: -22.876502990722656
    10. 'this' → logprob: -23.376502990722656

Token 492: '.lines' (ID: 96601)
  Prédit: '.lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.lines' → logprob: -0.0009131324477493763
    2. 'lines' → logprob: -7.000913143157959
    3. '	lines' → logprob: -13.8759126663208
    4. '.' → logprob: -15.7509126663208
    5. '(lines' → logprob: -15.8759126663208
    6. 'ines' → logprob: -16.250913619995117
    7. ' lines' → logprob: -16.375913619995117
    8. '_lines' → logprob: -16.625913619995117
    9. '.readlines' → logprob: -16.875913619995117
    10. 'LINES' → logprob: -18.750913619995117

Token 493: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -1.723973582556937e-05
    2. 'self' → logprob: -11.000017166137695
    3. ' self' → logprob: -15.250017166137695
    4. '[' → logprob: -15.500017166137695
    5. '[
' → logprob: -18.500017166137695
    6. ' [' → logprob: -18.500017166137695
    7. '   ' → logprob: -19.125017166137695
    8. '(self' → logprob: -19.125017166137695
    9. '           ' → logprob: -19.750017166137695
    10. '=self' → logprob: -19.875017166137695

Token 494: '.index' (ID: 9736)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.31327205896377563
    2. '.index' → logprob: -1.3132719993591309
    3. ' index' → logprob: -12.063272476196289
    4. '[index' → logprob: -13.438272476196289
    5. '	index' → logprob: -14.063272476196289
    6. '_index' → logprob: -14.313272476196289
    7. '.' → logprob: -15.063272476196289
    8. ':index' → logprob: -15.438272476196289
    9. '=index' → logprob: -15.563272476196289
    10. ' ' → logprob: -15.813272476196289

Token 495: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.5353618860244751
    2. '.strip' → logprob: -1.035361886024475
    3. '
' → logprob: -3.1603617668151855
    4. '.split' → logprob: -5.2853617668151855
    5. '.rstrip' → logprob: -5.2853617668151855
    6. ']' → logprob: -5.7853617668151855
    7. ']
' → logprob: -6.4103617668151855
    8. '           ' → logprob: -7.5353617668151855
    9. ').' → logprob: -7.7853617668151855
    10. '.' → logprob: -7.9103617668151855

Token 496: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -3.380904672667384e-05
    2. 'split' → logprob: -10.500033378601074
    3. 'rstrip' → logprob: -12.000033378601074
    4. '.strip' → logprob: -19.12503433227539
    5. ' strip' → logprob: -19.25003433227539
    6. '_strip' → logprob: -22.50003433227539
    7. '-strip' → logprob: -22.75003433227539
    8. 'str' → logprob: -23.37503433227539
    9. 'stripe' → logprob: -23.62503433227539
    10. '(strip' → logprob: -24.12503433227539

Token 497: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.5771638751029968
    2. '()' → logprob: -0.8271638751029968
    3. '()\' → logprob: -7.7021636962890625
    4. '           ' → logprob: -8.077163696289062
    5. '().' → logprob: -8.952163696289062
    6. '()
' → logprob: -9.327163696289062
    7. '();' → logprob: -9.452163696289062
    8. '()

' → logprob: -10.077163696289062
    9. '.split' → logprob: -10.827163696289062
    10. '\' → logprob: -10.952163696289062

Token 498: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008864453993737698
    2. 'if' → logprob: -7.7508864402771
    3. '            
' → logprob: -8.875886917114258
    4. ' if' → logprob: -8.875886917114258
    5. '       ' → logprob: -9.375886917114258
    6. '<|end|>' → logprob: -10.125886917114258
    7. '   ' → logprob: -11.625886917114258
    8. '
' → logprob: -11.625886917114258
    9. '               ' → logprob: -12.125886917114258
    10. '\' → logprob: -12.125886917114258

Token 499: ' self' (ID: 1051)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.4987318813800812
    2. 'self' (adapté à ' self') → logprob: -1.2487318515777588
    3. '           ' → logprob: -2.248731851577759
    4. ' if' → logprob: -8.49873161315918
    5. ' self' → logprob: -9.37373161315918
    6. '            
' → logprob: -12.87373161315918
    7. '       ' → logprob: -13.12373161315918
    8. '
' → logprob: -13.37373161315918
    9. '```' → logprob: -13.74873161315918
    10. '               ' → logprob: -14.24873161315918

Token 500: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.004312380217015743
    2. 'index' → logprob: -5.504312515258789
    3. '.' → logprob: -8.504312515258789
    4. 'if' → logprob: -10.629312515258789
    5. ':index' → logprob: -13.129312515258789
    6. '=index' → logprob: -13.754312515258789
    7. ' .' → logprob: -14.379312515258789
    8. '_index' → logprob: -14.379312515258789
    9. ' index' → logprob: -14.379312515258789
    10. '	index' → logprob: -14.754312515258789

Token 501: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.20141646265983582
    2. ' +=' → logprob: -1.7014164924621582
    3. ']+=' → logprob: -13.576416015625
    4. '+' → logprob: -14.201416015625
    5. '   ' → logprob: -14.326416015625
    6. '==' → logprob: -16.076416015625
    7. '    ' → logprob: -16.326416015625
    8. '```' → logprob: -16.451416015625
    9. '=' → logprob: -16.701416015625
    10. '	' → logprob: -16.826416015625

Token 502: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '
' → logprob: -19.750001907348633
    4. '```' → logprob: -21.375001907348633
    5. '１' → logprob: -21.500001907348633
    6. '   ' → logprob: -21.625001907348633
    7. '

' → logprob: -23.812501907348633
    8. '۱' → logprob: -23.875001907348633
    9. '0' → logprob: -24.250001907348633
    10. '  ' → logprob: -24.625001907348633

Token 503: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.189011350274086
    2. 'if' → logprob: -1.9390113353729248
    3. ' if' → logprob: -3.564011335372925
    4. '
' → logprob: -10.939011573791504
    5. '       ' → logprob: -11.689011573791504
    6. '            
' → logprob: -11.814011573791504
    7. '```' → logprob: -12.314011573791504
    8. 'n' → logprob: -12.814011573791504
    9. '<|end|>' → logprob: -13.314011573791504
    10. 'try' → logprob: -13.564011573791504

Token 504: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21046608686447144
    2. 'if' → logprob: -1.7104661464691162
    3. ' if' → logprob: -4.710465908050537
    4. '
' → logprob: -12.585466384887695
    5. '       ' → logprob: -12.835466384887695
    6. '            
' → logprob: -13.085466384887695
    7. '          ' → logprob: -13.710466384887695
    8. '   ' → logprob: -14.585466384887695
    9. '		' → logprob: -14.710466384887695
    10. '```' → logprob: -15.460466384887695

Token 505: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.006400696467608213
    2. '           ' → logprob: -5.2564005851745605
    3. ' if' → logprob: -6.7564005851745605
    4. 'n' → logprob: -13.256401062011719
    5. 'try' → logprob: -14.381401062011719
    6. '
' → logprob: -15.881401062011719
    7. '            
' → logprob: -16.38140106201172
    8. '	if' → logprob: -17.38140106201172
    9. '```' → logprob: -17.50640106201172
    10. 'i' → logprob: -17.75640106201172

Token 506: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2131633311510086
    2. 'not' → logprob: -1.7131633758544922
    3. ' not' → logprob: -4.463163375854492
    4. ' n' → logprob: -8.838163375854492
    5. 'n't' → logprob: -12.338163375854492
    6. 'len' → logprob: -12.963163375854492
    7. '```' → logprob: -13.838163375854492
    8. '!' → logprob: -14.588163375854492
    9. '	not' → logprob: -14.713163375854492
    10. '	n' → logprob: -14.713163375854492

Token 507: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.0724487379193306
    2. '_' → logprob: -2.69744873046875
    3. '_line' → logprob: -6.69744873046875
    4. '_n' → logprob: -7.07244873046875
    5. '_
' → logprob: -8.32244873046875
    6. '_
' → logprob: -10.07244873046875
    7. '_lines' → logprob: -10.57244873046875
    8. ' _' → logprob: -11.07244873046875
    9. '
' → logprob: -11.07244873046875
    10. '\' → logprob: -11.44744873046875

Token 508: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -2.6895233531831764e-05
    2. 'line' → logprob: -10.75002670288086
    3. '_' → logprob: -13.12502670288086
    4. '==' → logprob: -13.25002670288086
    5. '_LINE' → logprob: -14.37502670288086
    6. '=' → logprob: -14.87502670288086
    7. ' ==' → logprob: -15.62502670288086
    8. 'Line' → logprob: -15.62502670288086
    9. '=line' → logprob: -16.75002670288086
    10. ' line' → logprob: -17.12502670288086

Token 509: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.12694679200649261
    2. ' ==' → logprob: -2.1269466876983643
    3. '=' → logprob: -11.876946449279785
    4. '===' → logprob: -12.501946449279785
    5. '()==' → logprob: -13.001946449279785
    6. '=="' → logprob: -13.126946449279785
    7. '==
' → logprob: -13.251946449279785
    8. '=='' → logprob: -14.626946449279785
    9. ')==' → logprob: -14.876946449279785
    10. ']==' → logprob: -15.001946449279785

Token 510: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5996657609939575
    2. '"' → logprob: -0.8496657609939575
    3. '''' → logprob: -4.224665641784668
    4. '""' → logprob: -5.099665641784668
    5. '"":' → logprob: -5.974665641784668
    6. '0' → logprob: -9.224665641784668
    7. ' '' → logprob: -11.349665641784668
    8. ' "' → logprob: -11.724665641784668
    9. ''A' → logprob: -12.099665641784668
    10. ''O' → logprob: -12.224665641784668

Token 511: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013408389640972018
    2. ''' → logprob: -6.751340866088867
    3. ' ' → logprob: -9.001340866088867
    4. '"' → logprob: -10.126340866088867
    5. '''' → logprob: -13.251340866088867
    6. '```' → logprob: -13.376340866088867
    7. '':' → logprob: -13.501340866088867
    8. '00' → logprob: -14.126340866088867
    9. '""' → logprob: -15.126340866088867
    10. ' '' → logprob: -15.126340866088867

Token 512: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.011353609152138233
    2. '0' → logprob: -4.511353492736816
    3. '':' → logprob: -8.511353492736816
    4. ''' → logprob: -9.886353492736816
    5. '':
' → logprob: -9.886353492736816
    6. '':
' → logprob: -13.761353492736816
    7. ' '' → logprob: -14.261353492736816
    8. ' ' → logprob: -15.636353492736816
    9. '00' → logprob: -15.886353492736816
    10. '  ' → logprob: -16.136354446411133

Token 513: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '00' → logprob: -16.875028610229492
    4. '```' → logprob: -18.250028610229492
    5. '
' → logprob: -19.000028610229492
    6. ',' → logprob: -19.250028610229492
    7. '  ' → logprob: -19.562528610229492
    8. '`' → logprob: -19.562528610229492
    9. ''' → logprob: -19.750028610229492
    10. '000' → logprob: -19.875028610229492

Token 514: '':
' (ID: 7669)
  Prédit: '':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':
' → logprob: -0.07992294430732727
    2. '':' → logprob: -2.579922914505005
    3. ''' → logprob: -7.079923152923584
    4. '':
' → logprob: -8.829922676086426
    5. '\n' → logprob: -10.204922676086426
    6. '':

' → logprob: -12.954922676086426
    7. ''):
' → logprob: -13.204922676086426
    8. '":
' → logprob: -13.704922676086426
    9. ':
' → logprob: -14.454922676086426
    10. ''
' → logprob: -14.579922676086426

Token 515: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007373234839178622
    2. ':' → logprob: -7.375737190246582
    3. '           ' → logprob: -9.875737190246582
    4. ':
' → logprob: -10.000737190246582
    5. '                   ' → logprob: -12.250737190246582
    6. '              ' → logprob: -12.250737190246582
    7. '       ' → logprob: -13.750737190246582
    8. ',' → logprob: -14.375737190246582
    9. '<|end|>' → logprob: -14.375737190246582
    10. '                       ' → logprob: -15.000737190246582

Token 516: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10468701273202896
    2. 'break' (adapté à ' break') → logprob: -2.354686975479126
    3. ' break' → logprob: -5.729687213897705
    4. '                   ' → logprob: -6.854687213897705
    5. 'return' → logprob: -8.854686737060547
    6. '           ' → logprob: -11.479686737060547
    7. '
' → logprob: -11.979686737060547
    8. '	break' → logprob: -12.354686737060547
    9. ' return' → logprob: -13.729686737060547
    10. '                ' → logprob: -14.604686737060547

Token 517: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001238004770129919
    2. '
' → logprob: -9.625123977661133
    3. '            
' → logprob: -9.875123977661133
    4. '       ' → logprob: -13.375123977661133
    5. '          ' → logprob: -13.750123977661133
    6. ',' → logprob: -13.875123977661133
    7. 'n' → logprob: -14.875123977661133
    8. '               ' → logprob: -15.125123977661133
    9. '    
' → logprob: -15.375123977661133
    10. '        
' → logprob: -15.500123977661133

Token 518: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -3.333223139634356e-05
    2. 'n' → logprob: -11.000033378601074
    3. '       ' → logprob: -11.875033378601074
    4. 'try' → logprob: -12.875033378601074
    5. '
' → logprob: -13.250033378601074
    6. '            
' → logprob: -13.500033378601074
    7. '          ' → logprob: -13.500033378601074
    8. '```' → logprob: -14.125033378601074
    9. '		' → logprob: -15.125033378601074
    10. 't' → logprob: -15.500033378601074

Token 519: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.04269619658589363
    2. '           ' → logprob: -3.542696237564087
    3. 'num' → logprob: -5.542695999145508
    4. 'nums' → logprob: -5.667695999145508
    5. 'counts' → logprob: -6.167695999145508
    6. 'nm' → logprob: -6.917695999145508
    7. 'numbers' → logprob: -7.542695999145508
    8. 'parts' → logprob: -7.917695999145508
    9. 'm' → logprob: -8.042695999145508
    10. 'a' → logprob: -8.417695999145508

Token 520: '_str' (ID: 6182)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0240337997674942
    2. ',m' → logprob: -4.274034023284912
    3. ' ,' → logprob: -4.649034023284912
    4. '_,' → logprob: -10.024033546447754
    5. '           ' → logprob: -10.149033546447754
    6. 'm' → logprob: -10.149033546447754
    7. ',n' → logprob: -10.649033546447754
    8. ',int' → logprob: -11.524033546447754
    9. '_m' → logprob: -11.774033546447754
    10. ',
' → logprob: -11.774033546447754

Token 521: ',m' (ID: 26648)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015248565468937159
    2. ',n' → logprob: -7.001524925231934
    3. ',m' → logprob: -7.626524925231934
    4. ' ,' → logprob: -9.251524925231934
    5. ',num' → logprob: -12.126524925231934
    6. '=' → logprob: -12.251524925231934
    7. ',t' → logprob: -12.876524925231934
    8. ',h' → logprob: -13.001524925231934
    9. ',
' → logprob: -13.126524925231934
    10. 'n' → logprob: -13.376524925231934

Token 522: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.4313650131225586
    2. ',' → logprob: -1.4313650131225586
    3. '_line' → logprob: -2.8063650131225586
    4. '_' → logprob: -3.5563650131225586
    5. ' =' → logprob: -4.431365013122559
    6. '=' → logprob: -5.681365013122559
    7. ',_' → logprob: -6.306365013122559
    8. '_n' → logprob: -6.931365013122559
    9. '_s' → logprob: -7.306365013122559
    10. '_,' → logprob: -7.431365013122559

Token 523: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2534973621368408
    2. ' =' → logprob: -1.5034973621368408
    3. ',' → logprob: -6.503497123718262
    4. ',n' → logprob: -9.753497123718262
    5. '=n' → logprob: -11.878497123718262
    6. '           ' → logprob: -13.253497123718262
    7. '            ' → logprob: -14.378497123718262
    8. ' ,' → logprob: -14.878497123718262
    9. '=line' → logprob: -15.628497123718262
    10. '＝' → logprob: -15.753497123718262

Token 524: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014163628220558167
    2. ' n' → logprob: -4.264163494110107
    3. '	n' → logprob: -16.014163970947266
    4. '_n' → logprob: -18.014163970947266
    5. '[n' → logprob: -19.639163970947266
    6. ' н' → logprob: -21.139163970947266
    7. ',n' → logprob: -21.514163970947266
    8. ')n' → logprob: -21.639163970947266
    9. '(n' → logprob: -21.764163970947266
    10. ' ' → logprob: -22.014163970947266

Token 525: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -3.054500666621607e-06
    2. 'm' → logprob: -12.75000286102295
    3. ',m' → logprob: -18.000003814697266
    4. '\' → logprob: -18.625003814697266
    5. '[m' → logprob: -19.000003814697266
    6. '```' → logprob: -19.125003814697266
    7. '_' → logprob: -19.375003814697266
    8. '_str' → logprob: -19.500003814697266
    9. '	m' → logprob: -19.500003814697266
    10. 'м' → logprob: -20.125003814697266

Token 526: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0008067715098150074
    2. 'line' → logprob: -7.12580680847168
    3. '_l' → logprob: -13.87580680847168
    4. '_' → logprob: -14.75080680847168
    5. 'Line' → logprob: -15.12580680847168
    6. '_LINE' → logprob: -15.37580680847168
    7. 'ine' → logprob: -15.75080680847168
    8. '_m' → logprob: -16.62580680847168
    9. '_lin' → logprob: -17.12580680847168
    10. 'l' → logprob: -17.37580680847168

Token 527: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.018227670341730118
    2. '.' → logprob: -4.018227577209473
    3. '.strip' → logprob: -10.018227577209473
    4. ' .' → logprob: -10.518227577209473
    5. 'split' → logprob: -12.143227577209473
    6. ' split' → logprob: -15.143227577209473
    7. '.Split' → logprob: -15.643227577209473
    8. ',' → logprob: -16.14322853088379
    9. '.rstrip' → logprob: -16.39322853088379
    10. '           ' → logprob: -17.39322853088379

Token 528: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008183232857845724
    2. '('' → logprob: -7.375818252563477
    3. '()
' → logprob: -9.125818252563477
    4. ''' → logprob: -9.875818252563477
    5. '(' → logprob: -10.875818252563477
    6. ')' → logprob: -13.250818252563477
    7. '())' → logprob: -13.500818252563477
    8. '[' → logprob: -13.625818252563477
    9. '(),' → logprob: -13.750818252563477
    10. '()[' → logprob: -13.750818252563477

Token 529: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02598012052476406
    2. 'n' → logprob: -3.775980234146118
    3. ' n' → logprob: -6.150979995727539
    4. '            
' → logprob: -7.900979995727539
    5. ',' → logprob: -10.150979995727539
    6. '       ' → logprob: -10.275979995727539
    7. '          ' → logprob: -10.650979995727539
    8. ' ' → logprob: -11.275979995727539
    9. '            ' → logprob: -11.275979995727539
    10. ' 
' → logprob: -11.275979995727539

Token 530: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.03394511714577675
    2. ' n' → logprob: -4.033945083618164
    3. '           ' → logprob: -4.158945083618164
    4. '
' → logprob: -11.158945083618164
    5. 'num' → logprob: -11.658945083618164
    6. '            
' → logprob: -12.533945083618164
    7. '	n' → logprob: -12.533945083618164
    8. '   ' → logprob: -13.158945083618164
    9. '       ' → logprob: -13.158945083618164
    10. '```' → logprob: -13.283945083618164

Token 531: ',m' (ID: 26648)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15806876122951508
    2. '=' → logprob: -2.4080686569213867
    3. ',' → logprob: -2.9080686569213867
    4. '=int' → logprob: -7.658068656921387
    5. ',n' → logprob: -8.033068656921387
    6. ' ,' → logprob: -8.158068656921387
    7. ' ' → logprob: -8.908068656921387
    8. '           ' → logprob: -9.408068656921387
    9. '   ' → logprob: -9.533068656921387
    10. '<|end|>' → logprob: -9.533068656921387

Token 532: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048593729734420776
    2. '=' → logprob: -3.048593759536743
    3. '=int' → logprob: -12.298593521118164
    4. ',' → logprob: -14.423593521118164
    5. ' ' → logprob: -14.423593521118164
    6. '           ' → logprob: -15.548593521118164
    7. ' =
' → logprob: -16.298593521118164
    8. '＝' → logprob: -16.423593521118164
    9. '   ' → logprob: -16.798593521118164
    10. ')' → logprob: -16.923593521118164

Token 533: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0031777136027812958
    2. ' int' → logprob: -5.753177642822266
    3. '[int' → logprob: -18.503177642822266
    4. '   ' → logprob: -19.628177642822266
    5. 'map' → logprob: -20.003177642822266
    6. '(int' → logprob: -20.753177642822266
    7. '	int' → logprob: -21.253177642822266
    8. '           ' → logprob: -21.378177642822266
    9. ' ' → logprob: -21.503177642822266
    10. '  ' → logprob: -22.003177642822266

Token 534: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -8.65707261255011e-06
    2. 'n' → logprob: -11.750008583068848
    3. '(' → logprob: -14.375008583068848
    4. ' (' → logprob: -16.375009536743164
    5. '
' → logprob: -18.375009536743164
    6. ' n' → logprob: -19.125009536743164
    7. '(
' → logprob: -19.125009536743164
    8. '	n' → logprob: -20.250009536743164
    9. '

' → logprob: -21.250009536743164
    10. ')n' → logprob: -21.750009536743164

Token 535: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0526641346514225
    2. '(n' → logprob: -3.177664041519165
    3. '),' → logprob: -5.177664279937744
    4. 'n' → logprob: -6.052664279937744
    5. 'str' → logprob: -7.677664279937744
    6. 'Str' → logprob: -8.177663803100586
    7. ')' → logprob: -8.302663803100586
    8. '(m' → logprob: -8.552663803100586
    9. '_n' → logprob: -8.552663803100586
    10. '[n' → logprob: -9.802663803100586

Token 536: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -9.531813702778891e-05
    2. ',' → logprob: -9.62509536743164
    3. ')' → logprob: -10.87509536743164
    4. ' ),' → logprob: -11.75009536743164
    5. '),(' → logprob: -13.37509536743164
    6. ',),' → logprob: -14.87509536743164
    7. '<|end|>' → logprob: -16.25009536743164
    8. '),
' → logprob: -16.50009536743164
    9. '>,' → logprob: -16.87509536743164
    10. '),

' → logprob: -17.12509536743164

Token 537: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006715370807796717
    2. ' int' → logprob: -5.006715297698975
    3. '   ' → logprob: -19.256715774536133
    4. '(int' → logprob: -19.881715774536133
    5. '[int' → logprob: -19.881715774536133
    6. '<int' → logprob: -20.381715774536133
    7. '	int' → logprob: -20.631715774536133
    8. ' ' → logprob: -20.881715774536133
    9. '=int' → logprob: -21.506715774536133
    10. '  ' → logprob: -21.631715774536133

Token 538: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.02324955351650715
    2. 'm' → logprob: -3.773249626159668
    3. ' m' → logprob: -13.148249626159668
    4. '(' → logprob: -13.898249626159668
    5. ' (' → logprob: -14.523249626159668
    6. 'int' → logprob: -15.023249626159668
    7. '(int' → logprob: -15.023249626159668
    8. '   ' → logprob: -17.77324867248535
    9. '	m' → logprob: -17.89824867248535
    10. '(
' → logprob: -18.89824867248535

Token 539: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0008326167589984834
    2. ')' → logprob: -7.625832557678223
    3. '_m' → logprob: -8.625832557678223
    4. 'str' → logprob: -8.875832557678223
    5. 'm' → logprob: -11.500832557678223
    6. 'Str' → logprob: -11.500832557678223
    7. ')m' → logprob: -13.375832557678223
    8. ')
' → logprob: -14.250832557678223
    9. '_)' → logprob: -14.625832557678223
    10. ')_' → logprob: -14.875832557678223

Token 540: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.9424725148128346e-05
    2. '<|end|>' → logprob: -10.500049591064453
    3. ')
' → logprob: -10.875049591064453
    4. '<|end|>' → logprob: -13.250049591064453
    5. '),' → logprob: -14.625049591064453
    6. ')

' → logprob: -15.750049591064453
    7. '           ' → logprob: -16.000049591064453
    8. ' )' → logprob: -16.500049591064453
    9. ')return' → logprob: -16.875049591064453
    10. ')}' → logprob: -16.875049591064453

Token 541: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00021343429398257285
    2. '```' → logprob: -9.875213623046875
    3. 'scores' → logprob: -10.000213623046875
    4. 't' → logprob: -10.000213623046875
    5. '       ' → logprob: -10.500213623046875
    6. 'self' → logprob: -11.625213623046875
    7. 'if' → logprob: -11.750213623046875
    8. 'next' → logprob: -12.125213623046875
    9. '
' → logprob: -12.500213623046875
    10. 'score' → logprob: -12.500213623046875

Token 542: ' tar' (ID: 7057)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.46387356519699097
    2. '           ' → logprob: -1.0888736248016357
    3. 'if' → logprob: -3.8388736248016357
    4. 'tar' (adapté à ' tar') → logprob: -5.588873386383057
    5. 'cards' → logprob: -5.713873386383057
    6. 'scores' → logprob: -5.713873386383057
    7. 'card' → logprob: -6.463873386383057
    8. 'score' → logprob: -8.463873863220215
    9. '       ' → logprob: -8.463873863220215
    10. '   ' → logprob: -9.213873863220215

Token 543: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.580929347255733e-05
    2. 'os' → logprob: -11.250016212463379
    3. '   ' → logprob: -14.250016212463379
    4. '       ' → logprob: -15.000016212463379
    5. '
' → logprob: -15.500016212463379
    6. 'of' → logprob: -15.625016212463379
    7. 'O' → logprob: -15.875016212463379
    8. '           ' → logprob: -16.000015258789062
    9. 'ow' → logprob: -16.125015258789062
    10. 'ot' → logprob: -16.125015258789062

Token 544: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -0.005054433364421129
    2. '_cards' → logprob: -5.380054473876953
    3. ' =' → logprob: -8.255054473876953
    4. '_line' → logprob: -8.880054473876953
    5. 'scores' → logprob: -11.005054473876953
    6. '=' → logprob: -11.880054473876953
    7. '_lines' → logprob: -12.630054473876953
    8. '_list' → logprob: -13.630054473876953
    9. '_set' → logprob: -13.630054473876953
    10. '   ' → logprob: -13.630054473876953

Token 545: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868749439716339
    2. '=' → logprob: -1.1368749141693115
    3. '           ' → logprob: -13.88687515258789
    4. '   ' → logprob: -14.13687515258789
    5. '=line' → logprob: -14.13687515258789
    6. '=[]' → logprob: -14.76187515258789
    7. ',' → logprob: -15.26187515258789
    8. ' ' → logprob: -15.88687515258789
    9. '=self' → logprob: -16.01187515258789
    10. '       ' → logprob: -16.26187515258789

Token 546: ' []
' (ID: 8911)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0014661770546808839
    2. ' list' → logprob: -7.001466274261475
    3. '[list' → logprob: -7.501466274261475
    4. '[' → logprob: -13.001465797424316
    5. ' [' → logprob: -17.251466751098633
    6. '[List' → logprob: -18.001466751098633
    7. '	list' → logprob: -19.126466751098633
    8. '=list' → logprob: -19.126466751098633
    9. '(list' → logprob: -19.376466751098633
    10. '[]' → logprob: -19.501466751098633

Token 547: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004041002131998539
    2. 'for' → logprob: -5.6290411949157715
    3. ' for' → logprob: -8.254040718078613
    4. 'while' → logprob: -9.254040718078613
    5. '<|end|>' → logprob: -10.504040718078613
    6. '	       ' → logprob: -11.254040718078613
    7. '		   ' → logprob: -11.754040718078613
    8. '	   ' → logprob: -12.004040718078613
    9. '   ' → logprob: -12.129040718078613
    10. '		' → logprob: -12.254040718078613

Token 548: ' han' (ID: 6648)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07077187299728394
    2. '           ' → logprob: -2.6957719326019287
    3. 'while' → logprob: -7.69577169418335
    4. ' for' → logprob: -8.070772171020508
    5. 'm' → logprob: -10.320772171020508
    6. '       ' → logprob: -11.570772171020508
    7. 'han' (adapté à ' han') → logprob: -11.820772171020508
    8. 'if' → logprob: -12.070772171020508
    9. '   ' → logprob: -12.570772171020508
    10. '	for' → logprob: -12.945772171020508

Token 549: 'ako' (ID: 5938)
  Prédit: 'ako'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ako' → logprob: -2.3438327843905427e-05
    2. '   ' → logprob: -11.62502384185791
    3. 'ak' → logprob: -12.12502384185791
    4. 'a' → logprob: -12.75002384185791
    5. '           ' → logprob: -13.37502384185791
    6. 'ko' → logprob: -14.00002384185791
    7. '```' → logprob: -14.12502384185791
    8. 'ако' → logprob: -14.25002384185791
    9. 'aku' → logprob: -14.87502384185791
    10. 'oko' → logprob: -15.12502384185791

Token 550: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -0.000332485738908872
    2. ' =' → logprob: -9.125332832336426
    3. 'scores' → logprob: -9.250332832336426
    4. '_line' → logprob: -10.125332832336426
    5. '           ' → logprob: -10.750332832336426
    6. '=' → logprob: -10.875332832336426
    7. '_lines' → logprob: -11.500332832336426
    8. 'for' → logprob: -12.250332832336426
    9. '   ' → logprob: -12.375332832336426
    10. 'line' → logprob: -12.500332832336426

Token 551: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3133990466594696
    2. ' =' → logprob: -1.313399076461792
    3. '=[]' → logprob: -8.938399314880371
    4. '=[]
' → logprob: -12.563399314880371
    5. '   ' → logprob: -14.438399314880371
    6. ':' → logprob: -14.563399314880371
    7. '.append' → logprob: -14.813399314880371
    8. ' ' → logprob: -15.563399314880371
    9. '.extend' → logprob: -15.688399314880371
    10. 'for' → logprob: -16.313398361206055

Token 552: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.35597193241119385
    2. '[]
' → logprob: -1.3559719324111938
    3. 'list' → logprob: -3.9809718132019043
    4. ' []' → logprob: -4.105971813201904
    5. ' []
' → logprob: -5.605971813201904
    6. '[self' → logprob: -6.855971813201904
    7. 'self' → logprob: -6.980971813201904
    8. ' list' → logprob: -7.480971813201904
    9. '[]

' → logprob: -8.480972290039062
    10. '[' → logprob: -9.105972290039062

Token 553: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006279636640101671
    2. 'for' → logprob: -5.131279468536377
    3. ' for' → logprob: -8.006279945373535
    4. '       ' → logprob: -11.506279945373535
    5. '   ' → logprob: -12.381279945373535
    6. '<|end|>' → logprob: -13.881279945373535
    7. '	       ' → logprob: -14.131279945373535
    8. '
' → logprob: -14.756279945373535
    9. 'while' → logprob: -14.881279945373535
    10. '		' → logprob: -15.756279945373535

Token 554: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.014347773976624012
    2. '           ' → logprob: -4.264347553253174
    3. 'while' → logprob: -8.764348030090332
    4. ' for' → logprob: -10.764348030090332
    5. '#' → logprob: -12.889348030090332
    6. 'if' → logprob: -13.264348030090332
    7. '       ' → logprob: -13.264348030090332
    8. '   ' → logprob: -14.514348030090332
    9. '            
' → logprob: -15.639348030090332
    10. '	for' → logprob: -15.889348030090332

Token 555: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.023485034704208374
    2. '_i' → logprob: -3.773484945297241
    3. ' _' → logprob: -8.89848518371582
    4. 'i' → logprob: -9.39848518371582
    5. '_in' → logprob: -11.52348518371582
    6. '_j' → logprob: -13.02348518371582
    7. '_idx' → logprob: -13.89848518371582
    8. '_line' → logprob: -14.02348518371582
    9. '_index' → logprob: -14.14848518371582
    10. '_n' → logprob: -14.39848518371582

Token 556: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00015836587408557534
    2. 'in' → logprob: -8.875158309936523
    3. 'range' → logprob: -11.375158309936523
    4. 'i' → logprob: -12.750158309936523
    5. 's' → logprob: -13.750158309936523
    6. 't' → logprob: -13.750158309936523
    7. ' ' → logprob: -14.625158309936523
    8. 'import' → logprob: -15.500158309936523
    9. 'n' → logprob: -15.875158309936523
    10. '```' → logprob: -16.000158309936523

Token 557: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00023166877508629113
    2. ' range' → logprob: -8.375231742858887
    3. 'self' → logprob: -13.875231742858887
    4. '
' → logprob: -17.75023078918457
    5. '(range' → logprob: -18.12523078918457
    6. '	range' → logprob: -18.12523078918457
    7. '   ' → logprob: -18.50023078918457
    8. 'r' → logprob: -18.50023078918457
    9. 'rang' → logprob: -18.50023078918457
    10. ' ' → logprob: -19.37523078918457

Token 558: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.12716926634311676
    2. 'n' → logprob: -2.127169370651245
    3. ' n' → logprob: -8.377169609069824
    4. '	n' → logprob: -12.627169609069824
    5. '(' → logprob: -12.752169609069824
    6. ' (' → logprob: -12.877169609069824
    7. '           ' → logprob: -13.502169609069824
    8. '               ' → logprob: -14.627169609069824
    9. '   ' → logprob: -15.127169609069824
    10. '       ' → logprob: -16.377168655395508

Token 559: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07913774251937866
    2. '):' → logprob: -2.5791378021240234
    3. '):
' → logprob: -9.704137802124023
    4. ')' → logprob: -9.829137802124023
    5. ':
' → logprob: -9.954137802124023
    6. '           ' → logprob: -10.079137802124023
    7. ':' → logprob: -11.079137802124023
    8. '):

' → logprob: -11.954137802124023
    9. '       ' → logprob: -12.204137802124023
    10. ',' → logprob: -12.454137802124023

Token 560: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009158630855381489
    2. 't' → logprob: -7.750916004180908
    3. '           ' → logprob: -8.00091552734375
    4. '   ' → logprob: -10.00091552734375
    5. ' t' → logprob: -10.75091552734375
    6. '       ' → logprob: -11.12591552734375
    7. 'scores' → logprob: -11.50091552734375
    8. '<|end|>' → logprob: -11.75091552734375
    9. 'tokens' → logprob: -12.00091552734375
    10. ' scores' → logprob: -12.25091552734375

Token 561: ' tar' (ID: 7057)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.2231494039297104
    2. 'score' → logprob: -1.7231494188308716
    3. 'tar' (adapté à ' tar') → logprob: -4.973149299621582
    4. '                   ' → logprob: -5.348149299621582
    5. '               ' → logprob: -5.973149299621582
    6. ' score' → logprob: -5.973149299621582
    7. ' tar' → logprob: -6.098149299621582
    8. ' t' → logprob: -6.348149299621582
    9. 's' → logprob: -8.348149299621582
    10. '   ' → logprob: -8.848149299621582

Token 562: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.0683535037969705e-05
    2. 'os' → logprob: -12.62501049041748
    3. '_scores' → logprob: -12.87501049041748
    4. '```' → logprob: -14.00001049041748
    5. 'о' → logprob: -14.75001049041748
    6. '_o' → logprob: -14.87501049041748
    7. 'ot' → logprob: -14.87501049041748
    8. 'ο' → logprob: -15.37501049041748
    9. '#' → logprob: -15.56251049041748
    10. '_str' → logprob: -15.87501049041748

Token 563: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -0.030773833394050598
    2. '_score' → logprob: -3.530773878097534
    3. '_line' → logprob: -7.155773639678955
    4. '_' → logprob: -9.780774116516113
    5. 'scores' → logprob: -10.155774116516113
    6. 'score' → logprob: -10.155774116516113
    7. '   ' → logprob: -10.780774116516113
    8. '_str' → logprob: -11.155774116516113
    9. ' =' → logprob: -11.530774116516113
    10. '               ' → logprob: -11.530774116516113

Token 564: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0015222413931041956
    2. '.' → logprob: -6.501522064208984
    3. ' .' → logprob: -10.876522064208984
    4. 'append' → logprob: -14.626522064208984
    5. '.extend' → logprob: -15.251522064208984
    6. '           ' → logprob: -16.126522064208984
    7. '.app' → logprob: -16.626522064208984
    8. '().' → logprob: -17.251522064208984
    9. ' +=' → logprob: -17.751522064208984
    10. ' append' → logprob: -17.876522064208984

Token 565: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0325924449716695e-05
    2. ' int' → logprob: -11.50001049041748
    3. '(int' → logprob: -16.750009536743164
    4. '                   ' → logprob: -18.500009536743164
    5. '[int' → logprob: -19.500009536743164
    6. '               ' → logprob: -20.500009536743164
    7. ':int' → logprob: -20.625009536743164
    8. '<int' → logprob: -21.375009536743164
    9. '
' → logprob: -21.500009536743164
    10. '   ' → logprob: -21.875009536743164

Token 566: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.0100624169572257e-05
    2. 'self' → logprob: -10.875020027160645
    3. '(' → logprob: -13.875020027160645
    4. '(
' → logprob: -16.75002098083496
    5. ' self' → logprob: -17.00002098083496
    6. '=self' → logprob: -17.12502098083496
    7. '[self' → logprob: -17.50002098083496
    8. '
' → logprob: -17.75002098083496
    9. ' (' → logprob: -17.87502098083496
    10. ')' → logprob: -17.87502098083496

Token 567: '.lines' (ID: 96601)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.019645029678940773
    2. 'self' → logprob: -4.0196452140808105
    3. '(lines' → logprob: -7.0196452140808105
    4. 'lines' → logprob: -8.019644737243652
    5. '(' → logprob: -9.269644737243652
    6. ' self' → logprob: -9.644644737243652
    7. '.lines' → logprob: -10.019644737243652
    8. '[self' → logprob: -10.394644737243652
    9. ' lines' → logprob: -11.644644737243652
    10. ')' → logprob: -12.269644737243652

Token 568: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -3.79811754100956e-05
    2. 'self' → logprob: -10.250038146972656
    3. '[' → logprob: -14.125038146972656
    4. '   ' → logprob: -14.375038146972656
    5. '[
' → logprob: -15.250038146972656
    6. '(self' → logprob: -15.375038146972656
    7. '           ' → logprob: -15.750038146972656
    8. ')' → logprob: -15.875038146972656
    9. ' self' → logprob: -16.125038146972656
    10. '               ' → logprob: -16.250038146972656

Token 569: '.index' (ID: 9736)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.2525703012943268
    2. '.index' → logprob: -1.5025702714920044
    3. 'self' → logprob: -7.502570152282715
    4. '_index' → logprob: -9.627570152282715
    5. ' index' → logprob: -11.002570152282715
    6. '
' → logprob: -13.252570152282715
    7. '[self' → logprob: -13.502570152282715
    8. '   ' → logprob: -13.877570152282715
    9. '[index' → logprob: -14.002570152282715
    10. 'Index' → logprob: -14.127570152282715

Token 570: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.007346672937273979
    2. '.strip' → logprob: -5.5073466300964355
    3. ']))' → logprob: -5.7573466300964355
    4. '[self' → logprob: -9.507347106933594
    5. ']' → logprob: -10.882347106933594
    6. '.pop' → logprob: -13.132347106933594
    7. '[' → logprob: -13.632347106933594
    8. '().' → logprob: -13.882347106933594
    9. ').' → logprob: -14.132347106933594
    10. '])' → logprob: -14.257347106933594

Token 571: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.688212614681106e-05
    2. 'rstrip' → logprob: -11.000017166137695
    3. ' strip' → logprob: -16.625017166137695
    4. '.strip' → logprob: -18.000017166137695
    5. '_strip' → logprob: -19.375017166137695
    6. '(strip' → logprob: -20.375017166137695
    7. 'split' → logprob: -20.625017166137695
    8. '
' → logprob: -21.625017166137695
    9. ')' → logprob: -21.875017166137695
    10. 'stripe' → logprob: -22.625017166137695

Token 572: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.004906754475086927
    2. '()))
' → logprob: -5.50490665435791
    3. '())' → logprob: -7.50490665435791
    4. '()' → logprob: -8.62990665435791
    5. '))' → logprob: -9.50490665435791
    6. '(' → logprob: -11.87990665435791
    7. '()))

' → logprob: -12.00490665435791
    8. '()));' → logprob: -12.12990665435791
    9. '()))
' → logprob: -13.12990665435791
    10. '())
' → logprob: -14.00490665435791

Token 573: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04485121741890907
    2. '               ' → logprob: -3.419851303100586
    3. 'self' → logprob: -4.544851303100586
    4. '<|end|>' → logprob: -8.419851303100586
    5. ' self' → logprob: -8.544851303100586
    6. '                   ' → logprob: -10.669851303100586
    7. '<|end|>' → logprob: -10.919851303100586
    8. '   ' → logprob: -11.419851303100586
    9. '       ' → logprob: -11.419851303100586
    10. '		' → logprob: -11.919851303100586

Token 574: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.007340157404541969
    2. ' self' → logprob: -5.507339954376221
    3. '               ' → logprob: -5.757339954376221
    4. '           ' → logprob: -9.257340431213379
    5. '                   ' → logprob: -13.757340431213379
    6. '   ' → logprob: -15.382340431213379
    7. '	self' → logprob: -16.132339477539062
    8. '       ' → logprob: -16.882339477539062
    9. '              ' → logprob: -17.757339477539062
    10. '                       ' → logprob: -17.757339477539062

Token 575: '.index' (ID: 9736)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.0015142656629905105
    2. '.index' → logprob: -6.501514434814453
    3. ' index' → logprob: -11.751514434814453
    4. '_index' → logprob: -12.751514434814453
    5. '	index' → logprob: -14.251514434814453
    6. '=index' → logprob: -15.751514434814453
    7. '@index' → logprob: -16.251514434814453
    8. ':index' → logprob: -16.376514434814453
    9. '
' → logprob: -16.626514434814453
    10. '.' → logprob: -17.001514434814453

Token 576: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.008614808320999146
    2. ' +=' → logprob: -4.758615016937256
    3. ']+=' → logprob: -15.383614540100098
    4. '+' → logprob: -16.508615493774414
    5. '=' → logprob: -18.258615493774414
    6. '   ' → logprob: -18.758615493774414
    7. '+='' → logprob: -18.883615493774414
    8. '+="' → logprob: -19.008615493774414
    9. '```' → logprob: -19.883615493774414
    10. '+=(' → logprob: -19.883615493774414

Token 577: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '１' → logprob: -20.0
    4. '```' → logprob: -20.0
    5. '
' → logprob: -20.625
    6. '   ' → logprob: -20.75
    7. '۱' → logprob: -22.125
    8. '=' → logprob: -22.25
    9. '१' → logprob: -23.1875
    10. '+' → logprob: -23.25

Token 578: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027595835272222757
    2. ' for' → logprob: -6.3777594566345215
    3. 'for' → logprob: -6.8777594566345215
    4. '       ' → logprob: -11.25275993347168
    5. '<|end|>' → logprob: -12.25275993347168
    6. '```' → logprob: -12.87775993347168
    7. '          ' → logprob: -13.50275993347168
    8. '
' → logprob: -13.50275993347168
    9. '		' → logprob: -14.37775993347168
    10. '            
' → logprob: -14.37775993347168

Token 579: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004062132444232702
    2. 'for' → logprob: -5.879062175750732
    3. ' for' → logprob: -6.754062175750732
    4. '       ' → logprob: -9.379061698913574
    5. '          ' → logprob: -12.379061698913574
    6. '   ' → logprob: -14.879061698913574
    7. '<|end|>' → logprob: -15.004061698913574
    8. '```' → logprob: -15.129061698913574
    9. '         ' → logprob: -15.504061698913574
    10. '	       ' → logprob: -15.629061698913574

Token 580: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.29014191031455994
    2. '           ' → logprob: -1.5401419401168823
    3. ' for' → logprob: -3.2901418209075928
    4. '       ' → logprob: -8.415142059326172
    5. '	for' → logprob: -11.415142059326172
    6. '          ' → logprob: -13.040142059326172
    7. '   ' → logprob: -13.040142059326172
    8. '	       ' → logprob: -13.290142059326172
    9. '        ' → logprob: -13.915142059326172
    10. '	   ' → logprob: -14.165142059326172

Token 581: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00014060820103622973
    2. ' _' → logprob: -8.875140190124512
    3. ' in' → logprob: -14.250140190124512
    4. '_range' → logprob: -18.000141143798828
    5. '_in' → logprob: -18.750141143798828
    6. ' range' → logprob: -18.875141143798828
    7. '_
' → logprob: -19.625141143798828
    8. '_i' → logprob: -19.875141143798828
    9. ' ' → logprob: -20.125141143798828
    10. '`' → logprob: -20.125141143798828

Token 582: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1063528060913086
    2. 'in' → logprob: -2.3563528060913086
    3. '_' → logprob: -5.106352806091309
    4. 'range' → logprob: -9.981352806091309
    5. ' _' → logprob: -11.356352806091309
    6. ' range' → logprob: -12.106352806091309
    7. '...' → logprob: -13.731352806091309
    8. ' ' → logprob: -13.856352806091309
    9. '   ' → logprob: -14.231352806091309
    10. 'i' → logprob: -14.606352806091309

Token 583: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019562290981411934
    2. ' range' → logprob: -6.251956462860107
    3. '(range' → logprob: -10.75195598602295
    4. '
' → logprob: -13.00195598602295
    5. 'ange' → logprob: -14.00195598602295
    6. '_' → logprob: -14.50195598602295
    7. 'm' → logprob: -14.87695598602295
    8. ' ' → logprob: -15.12695598602295
    9. 'rang' → logprob: -15.12695598602295
    10. '	range' → logprob: -15.50195598602295

Token 584: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.018197819590568542
    2. 'm' → logprob: -4.018198013305664
    3. ' (' → logprob: -10.143198013305664
    4. ' m' → logprob: -12.518198013305664
    5. '(' → logprob: -13.018198013305664
    6. '   ' → logprob: -13.518198013305664
    7. '           ' → logprob: -14.018198013305664
    8. '               ' → logprob: -15.143198013305664
    9. '       ' → logprob: -15.643198013305664
    10. '	m' → logprob: -16.518198013305664

Token 585: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.012860181741416454
    2. '               ' → logprob: -4.887860298156738
    3. '):' → logprob: -5.512860298156738
    4. ':
' → logprob: -7.262860298156738
    5. '           ' → logprob: -8.387860298156738
    6. ':' → logprob: -8.637860298156738
    7. '):
' → logprob: -10.387860298156738
    8. '   ' → logprob: -11.137860298156738
    9. '():
' → logprob: -11.262860298156738
    10. '       ' → logprob: -11.637860298156738

Token 586: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004313449375331402
    2. '           ' → logprob: -5.6293134689331055
    3. 'han' → logprob: -7.6293134689331055
    4. '   ' → logprob: -9.129313468933105
    5. ' han' → logprob: -9.629313468933105
    6. '       ' → logprob: -10.379313468933105
    7. ' ' → logprob: -11.879313468933105
    8. '                   ' → logprob: -12.129313468933105
    9. '              ' → logprob: -12.504313468933105
    10. '             ' → logprob: -13.629313468933105

Token 587: ' han' (ID: 6648)
  Prédit: 'han'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'han' (adapté à ' han') → logprob: -0.0005798388738185167
    2. ' han' → logprob: -8.125579833984375
    3. '               ' → logprob: -8.250579833984375
    4. '           ' → logprob: -10.750579833984375
    5. '                   ' → logprob: -14.500579833984375
    6. '   ' → logprob: -15.750579833984375
    7. ' ' → logprob: -16.250579833984375
    8. 'hand' → logprob: -16.375579833984375
    9. '                ' → logprob: -16.625579833984375
    10. '              ' → logprob: -16.875579833984375

Token 588: 'ako' (ID: 5938)
  Prédit: '_scores'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -0.5014012455940247
    2. 'ako' → logprob: -1.0014011859893799
    3. 'oko' → logprob: -4.251401424407959
    4. 'o' → logprob: -5.001401424407959
    5. '               ' → logprob: -6.376401424407959
    6. '                   ' → logprob: -7.376401424407959
    7. '           ' → logprob: -7.376401424407959
    8. 'ano' → logprob: -7.501401424407959
    9. 'ak' → logprob: -7.751401424407959
    10. '   ' → logprob: -8.1264009475708

Token 589: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -8.41866585687967e-06
    2. 'scores' → logprob: -12.375008583068848
    3. '.append' → logprob: -13.750008583068848
    4. 'Scores' → logprob: -13.875008583068848
    5. 'self' → logprob: -14.750008583068848
    6. '
' → logprob: -14.750008583068848
    7. '                   ' → logprob: -15.875008583068848
    8. 's' → logprob: -15.875008583068848
    9. '           ' → logprob: -16.00000762939453
    10. '   ' → logprob: -16.00000762939453

Token 590: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.531315314830863e-06
    2. 'append' → logprob: -13.000003814697266
    3. '.' → logprob: -13.750003814697266
    4. '           ' → logprob: -17.250003814697266
    5. '.app' → logprob: -17.750003814697266
    6. 'app' → logprob: -18.125003814697266
    7. '.Append' → logprob: -18.250003814697266
    8. ' .' → logprob: -18.500003814697266
    9. 'appen' → logprob: -18.500003814697266
    10. '.extend' → logprob: -19.125003814697266

Token 591: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.004078758880496025
    2. 'int' → logprob: -5.5040788650512695
    3. '[int' → logprob: -15.87907886505127
    4. '=int' → logprob: -16.004077911376953
    5. '<int' → logprob: -17.254077911376953
    6. ' int' → logprob: -17.504077911376953
    7. ':int' → logprob: -19.379077911376953
    8. '           ' → logprob: -19.379077911376953
    9. '               ' → logprob: -19.754077911376953
    10. ',int' → logprob: -21.004077911376953

Token 592: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.575563020305708e-05
    2. '(int' → logprob: -10.000065803527832
    3. 'int' → logprob: -11.250065803527832
    4. 'self' → logprob: -12.125065803527832
    5. '(' → logprob: -14.250065803527832
    6. '[self' → logprob: -14.875065803527832
    7. ' (' → logprob: -15.000065803527832
    8. '               ' → logprob: -15.750065803527832
    9. '           ' → logprob: -16.625064849853516
    10. '
' → logprob: -16.750064849853516

Token 593: '.lines' (ID: 96601)
  Prédit: '[self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -0.03080446645617485
    2. 'self' → logprob: -3.530804395675659
    3. '(self' → logprob: -6.905804634094238
    4. '.lines' → logprob: -10.405804634094238
    5. ' self' → logprob: -10.905804634094238
    6. 'lines' → logprob: -13.405804634094238
    7. '	self' → logprob: -15.030804634094238
    8. ').' → logprob: -15.280804634094238
    9. '   ' → logprob: -15.905804634094238
    10. '.self' → logprob: -16.030803680419922

Token 594: '[self' (ID: 33734)
  Prédit: '[self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[self' → logprob: -5.598092684522271e-05
    2. 'self' → logprob: -9.875056266784668
    3. '(self' → logprob: -12.625056266784668
    4. ' self' → logprob: -14.625056266784668
    5. '.strip' → logprob: -14.875056266784668
    6. '       ' → logprob: -16.62505531311035
    7. '   ' → logprob: -16.75005531311035
    8. ')' → logprob: -17.00005531311035
    9. '               ' → logprob: -17.12505531311035
    10. '           ' → logprob: -17.50005531311035

Token 595: '.index' (ID: 9736)
  Prédit: '.index'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.index' → logprob: -0.4741174876689911
    2. 'index' → logprob: -0.9741175174713135
    3. 'self' → logprob: -10.849117279052734
    4. '[index' → logprob: -11.724117279052734
    5. ' index' → logprob: -12.474117279052734
    6. '_index' → logprob: -13.224117279052734
    7. '
' → logprob: -13.474117279052734
    8. '   ' → logprob: -13.724117279052734
    9. '	index' → logprob: -13.724117279052734
    10. 's' → logprob: -14.724117279052734

Token 596: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.011569985188543797
    2. '.strip' → logprob: -4.511569976806641
    3. ').' → logprob: -7.761569976806641
    4. '().' → logprob: -9.88656997680664
    5. '.' → logprob: -11.01156997680664
    6. ']' → logprob: -11.26156997680664
    7. ''].' → logprob: -12.13656997680664
    8. ' ].' → logprob: -13.26156997680664
    9. '"].' → logprob: -13.38656997680664
    10. ' .' → logprob: -13.76156997680664

Token 597: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -4.320199877838604e-07
    2. ' strip' → logprob: -15.625
    3. '.strip' → logprob: -15.75
    4. '(strip' → logprob: -17.5
    5. 'trim' → logprob: -17.625
    6. 'rstrip' → logprob: -17.875
    7. 'str' → logprob: -20.0
    8. '_strip' → logprob: -20.25
    9. '-strip' → logprob: -20.75
    10. 'trip' → logprob: -21.375

Token 598: '()))
' (ID: 24521)
  Prédit: '())
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())
' → logprob: -0.6748174428939819
    2. ')
' → logprob: -1.424817442893982
    3. ')' → logprob: -1.674817442893982
    4. '())' → logprob: -2.7998175621032715
    5. '()' → logprob: -6.4248175621032715
    6. '()
' → logprob: -8.424817085266113
    7. '               ' → logprob: -8.674817085266113
    8. ' ())
' → logprob: -12.299817085266113
    9. '())
' → logprob: -12.424817085266113
    10. '           ' → logprob: -12.549817085266113

Token 599: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007868874818086624
    2. '           ' → logprob: -5.132868766784668
    3. 'self' → logprob: -6.257868766784668
    4. '       ' → logprob: -11.882868766784668
    5. '<|end|>' → logprob: -12.257868766784668
    6. ' self' → logprob: -12.382868766784668
    7. '                   ' → logprob: -12.507868766784668
    8. '   ' → logprob: -14.382868766784668
    9. '              ' → logprob: -14.382868766784668
    10. '[self' → logprob: -15.257868766784668

Token 600: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.005500310566276312
    2. '               ' → logprob: -5.255500316619873
    3. ' self' → logprob: -8.755499839782715
    4. '           ' → logprob: -9.130499839782715
    5. '       ' → logprob: -15.630499839782715
    6. '                   ' → logprob: -16.13050079345703
    7. '	self' → logprob: -16.25550079345703
    8. '   ' → logprob: -16.75550079345703
    9. '[self' → logprob: -16.88050079345703
    10. '(self' → logprob: -17.00550079345703

Token 601: '.index' (ID: 9736)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.047665681689977646
    2. '.index' → logprob: -3.297665596008301
    3. ' index' → logprob: -5.672665596008301
    4. '_index' → logprob: -5.797665596008301
    5. '+=' → logprob: -6.047665596008301
    6. ' +=' → logprob: -7.922665596008301
    7. 'self' → logprob: -9.1726655960083
    8. '           ' → logprob: -9.9226655960083
    9. '[index' → logprob: -10.1726655960083
    10. '=index' → logprob: -10.2976655960083

Token 602: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07889694720506668
    2. ' +=' → logprob: -2.578896999359131
    3. '+' → logprob: -12.203896522521973
    4. ']+=' → logprob: -13.578896522521973
    5. '           ' → logprob: -14.578896522521973
    6. '   ' → logprob: -15.828896522521973
    7. '       ' → logprob: -17.07889747619629
    8. '=' → logprob: -17.20389747619629
    9. '+='' → logprob: -17.20389747619629
    10. '+="' → logprob: -17.45389747619629

Token 603: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '=' → logprob: -19.375
    4. 'm' → logprob: -19.5
    5. '１' → logprob: -20.125
    6. '   ' → logprob: -20.25
    7. '```' → logprob: -20.875
    8. '+' → logprob: -21.125
    9. '(' → logprob: -21.9375
    10. '0' → logprob: -22.0

Token 604: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006414268864318728
    2. 'yield' → logprob: -7.500641345977783
    3. ' yield' → logprob: -9.375641822814941
    4. '       ' → logprob: -13.250641822814941
    5. '
' → logprob: -13.500641822814941
    6. '            
' → logprob: -15.500641822814941
    7. '	yield' → logprob: -15.500641822814941
    8. '          ' → logprob: -16.125640869140625
    9. 'Yield' → logprob: -16.250640869140625
    10. ' yields' → logprob: -17.000640869140625

Token 605: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008233346045017242
    2. 'yield' → logprob: -5.008233547210693
    3. ' yield' → logprob: -6.508233547210693
    4. '       ' → logprob: -11.133233070373535
    5. '	yield' → logprob: -11.758233070373535
    6. 'Yield' → logprob: -13.758233070373535
    7. '```' → logprob: -13.758233070373535
    8. '   ' → logprob: -15.258233070373535
    9. '          ' → logprob: -15.258233070373535
    10. '            
' → logprob: -15.508233070373535

Token 606: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.6335223317146301
    2. '           ' → logprob: -0.8835223317146301
    3. ' yield' → logprob: -2.8835222721099854
    4. '	yield' → logprob: -11.383522033691406
    5. '       ' → logprob: -12.133522033691406
    6. '
' → logprob: -14.508522033691406
    7. 'Yield' → logprob: -14.758522033691406
    8. '```' → logprob: -15.008522033691406
    9. '          ' → logprob: -15.258522033691406
    10. '   ' → logprob: -15.383522033691406

Token 607: ' Card' (ID: 9958)
  Prédit: '(Card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Card' → logprob: -0.12828797101974487
    2. 'Card' → logprob: -2.1282880306243896
    3. ' Card' → logprob: -6.8782877922058105
    4. ' (' → logprob: -8.128288269042969
    5. '(C' → logprob: -11.253288269042969
    6. '   ' → logprob: -11.878288269042969
    7. '(Car' → logprob: -12.003288269042969
    8. '<Card' → logprob: -12.628288269042969
    9. '(
' → logprob: -13.378288269042969
    10. '           ' → logprob: -14.378288269042969

Token 608: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -1.9361264946837764e-07
    2. 'set' → logprob: -16.375
    3. 'Sets' → logprob: -18.875
    4. '_set' → logprob: -20.0
    5. 'Card' → logprob: -20.875
    6. ' Set' → logprob: -21.125
    7. 'S' → logprob: -22.625
    8. '	Set' → logprob: -22.875
    9. '_SET' → logprob: -23.0
    10. '_Set' → logprob: -23.125

Token 609: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.001177608733996749
    2. 't' → logprob: -6.751177787780762
    3. '(' → logprob: -11.876177787780762
    4. '([' → logprob: -15.876177787780762
    5. '(
' → logprob: -16.626176834106445
    6. ' (' → logprob: -17.001176834106445
    7. 'T' → logprob: -17.126176834106445
    8. '[t' → logprob: -17.251176834106445
    9. '```' → logprob: -17.251176834106445
    10. '	t' → logprob: -17.751176834106445

Token 610: 'aro' (ID: 8421)
  Prédit: 'aro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aro' → logprob: -0.05218517407774925
    2. 't' → logprob: -3.05218505859375
    3. '(t' → logprob: -6.30218505859375
    4. 'ro' → logprob: -6.80218505859375
    5. 'oro' → logprob: -8.30218505859375
    6. 'o' → logprob: -8.42718505859375
    7. '(' → logprob: -9.55218505859375
    8. 'tar' → logprob: -11.05218505859375
    9. '[' → logprob: -11.17718505859375
    10. 'ar' → logprob: -11.42718505859375

Token 611: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -0.0018255965551361442
    2. '(t' → logprob: -7.12682580947876
    3. 'scores' → logprob: -7.37682580947876
    4. 't' → logprob: -8.251825332641602
    5. 's' → logprob: -9.626825332641602
    6. 'Scores' → logprob: -10.126825332641602
    7. '(scores' → logprob: -11.376825332641602
    8. ')' → logprob: -11.376825332641602
    9. '[t' → logprob: -13.501825332641602
    10. '_t' → logprob: -13.751825332641602

Token 612: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4743962585926056
    2. '),' → logprob: -0.9743962287902832
    3. '           ' → logprob: -8.099396705627441
    4. '               ' → logprob: -11.974396705627441
    5. ' ,' → logprob: -12.849396705627441
    6. '       ' → logprob: -13.474396705627441
    7. ',),' → logprob: -13.474396705627441
    8. ',h' → logprob: -13.974396705627441
    9. ')' → logprob: -14.099396705627441
    10. '],' → logprob: -14.724396705627441

Token 613: ' Card' (ID: 9958)
  Prédit: 'Card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -0.004779811482876539
    2. ' Card' → logprob: -5.504779815673828
    3. 'Han' → logprob: -7.379779815673828
    4. 'han' → logprob: -9.629779815673828
    5. ' Han' → logprob: -11.629779815673828
    6. 'Hand' → logprob: -14.004779815673828
    7. ' han' → logprob: -14.254779815673828
    8. 'Car' → logprob: -14.879779815673828
    9. ' ' → logprob: -15.129779815673828
    10. '           ' → logprob: -15.754779815673828

Token 614: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -7.896309739408025e-07
    2. 'Sets' → logprob: -14.750000953674316
    3. 'han' → logprob: -15.375000953674316
    4. 'set' → logprob: -16.5
    5. '_set' → logprob: -17.875
    6. 'ak' → logprob: -18.0
    7. 'o' → logprob: -18.125
    8. 'et' → logprob: -18.25
    9. 'Han' → logprob: -19.0
    10. ' Set' → logprob: -19.625

Token 615: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.0001589618914294988
    2. 'han' → logprob: -8.75015926361084
    3. '(' → logprob: -15.37515926361084
    4. '(hand' → logprob: -16.125158309936523
    5. ' han' → logprob: -16.750158309936523
    6. 'Han' → logprob: -17.625158309936523
    7. '(H' → logprob: -17.625158309936523
    8. ' (' → logprob: -17.875158309936523
    9. 'h' → logprob: -18.875158309936523
    10. '```' → logprob: -19.500158309936523

Token 616: 'an' (ID: 270)
  Prédit: 'an'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'an' → logprob: -0.00020544764993246645
    2. '(an' → logprob: -10.250205039978027
    3. 'anak' → logprob: -10.625205039978027
    4. '[' → logprob: -10.625205039978027
    5. 'anayo' → logprob: -10.625205039978027
    6. 'ak' → logprob: -11.125205039978027
    7. '(' → logprob: -11.250205039978027
    8. 'ako' → logprob: -11.375205039978027
    9. 'anato' → logprob: -11.625205039978027
    10. '   ' → logprob: -11.625205039978027

Token 617: 'ako' (ID: 5938)
  Prédit: 'ako'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ako' → logprob: -2.2127087504486553e-05
    2. 'ak' → logprob: -10.875021934509277
    3. 'ko' → logprob: -13.375021934509277
    4. 'a' → logprob: -14.625021934509277
    5. 'ако' → logprob: -15.000021934509277
    6. '```' → logprob: -15.125021934509277
    7. 'aku' → logprob: -15.500021934509277
    8. 'oko' → logprob: -16.250022888183594
    9. '[' → logprob: -16.875022888183594
    10. '   ' → logprob: -17.000022888183594

Token 618: '_scores' (ID: 63345)
  Prédit: '_scores'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_scores' → logprob: -4.143808109802194e-05
    2. 'scores' → logprob: -10.500041007995605
    3. 's' → logprob: -12.500041007995605
    4. 'Scores' → logprob: -12.625041007995605
    5. '(h' → logprob: -13.000041007995605
    6. ')' → logprob: -13.375041007995605
    7. 'han' → logprob: -14.000041007995605
    8. '
' → logprob: -15.000041007995605
    9. 'o' → logprob: -15.125041007995605
    10. 'a' → logprob: -15.125041007995605

Token 619: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019565867260098457
    2. '<|end|>' → logprob: -6.251956462860107
    3. ')
' → logprob: -10.626956939697266
    4. '<|end|>' → logprob: -13.376956939697266
    5. ' )' → logprob: -14.501956939697266
    6. ')return' → logprob: -14.876956939697266
    7. ')}' → logprob: -15.376956939697266
    8. '}' → logprob: -15.501956939697266
    9. ')}}' → logprob: -16.001956939697266
    10. ']' → logprob: -16.251956939697266

Token 620: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03808968514204025
    2. 'if' → logprob: -3.2880897521972656
    3. 'from' → logprob: -10.288089752197266
    4. 'import' → logprob: -11.413089752197266
    5. 'for' → logprob: -13.538089752197266
    6. ' if' → logprob: -14.038089752197266
    7. 'class' → logprob: -14.413089752197266
    8. '```' → logprob: -15.413089752197266
    9. 'lines' → logprob: -15.663089752197266
    10. ' def' → logprob: -15.663089752197266

Token 621: ' Equal' (ID: 67921)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6473804116249084
    2. 'Main' → logprob: -1.6473803520202637
    3. 'Solution' → logprob: -2.2723803520202637
    4. 'main' → logprob: -2.6473803520202637
    5. 'Exchange' → logprob: -2.7723803520202637
    6. 'Solver' → logprob: -3.5223803520202637
    7. ' main' → logprob: -5.147380352020264
    8. 'Runner' → logprob: -5.772380352020264
    9. 'Result' → logprob: -5.897380352020264
    10. 'Output' → logprob: -6.147380352020264

Token 622: 'Total' (ID: 8270)
  Prédit: 'Score'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Score' → logprob: -0.9082813262939453
    2. 'Exchange' → logprob: -1.1582813262939453
    3. 'Sum' → logprob: -1.5332813262939453
    4. 'izer' → logprob: -3.0332813262939453
    5. 'Total' → logprob: -4.158281326293945
    6. 'Scores' → logprob: -6.783281326293945
    7. 'Card' → logprob: -7.658281326293945
    8. 'ize' → logprob: -7.783281326293945
    9. 'Difference' → logprob: -8.533281326293945
    10. 'ization' → logprob: -8.783281326293945

Token 623: 'Score' (ID: 12357)
  Prédit: 'Exchange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Exchange' → logprob: -0.26194819808006287
    2. 'Score' → logprob: -1.5119482278823853
    3. 'Ex' → logprob: -5.886948108673096
    4. 'Cards' → logprob: -6.261948108673096
    5. 'Sc' → logprob: -6.886948108673096
    6. 'Scores' → logprob: -7.011948108673096
    7. 'Sum' → logprob: -7.261948108673096
    8. 'Card' → logprob: -7.511948108673096
    9. ':' → logprob: -7.511948108673096
    10. 's' → logprob: -8.261948585510254

Token 624: 'Solver' (ID: 70484)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11317867040634155
    2. ':
' → logprob: -2.2381787300109863
    3. 'Solver' → logprob: -9.113178253173828
    4. 'Exchange' → logprob: -9.238178253173828
    5. '   ' → logprob: -10.238178253173828
    6. '(' → logprob: -10.613178253173828
    7. 'Problem' → logprob: -10.863178253173828
    8. '():' → logprob: -11.238178253173828
    9. '(object' → logprob: -11.863178253173828
    10. 'def' → logprob: -11.863178253173828

Token 625: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005678066518157721
    2. ':
' → logprob: -7.50056791305542
    3. ':def' → logprob: -11.500567436218262
    4. '():' → logprob: -13.875567436218262
    5. 'def' → logprob: -14.000567436218262
    6. '):' → logprob: -14.250567436218262
    7. ':

' → logprob: -14.750567436218262
    8. '(' → logprob: -14.750567436218262
    9. '(object' → logprob: -15.250567436218262
    10. ' :' → logprob: -15.250567436218262

Token 626: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011870424263179302
    2. 'def' → logprob: -4.886870384216309
    3. 'class' → logprob: -5.636870384216309
    4. ' def' → logprob: -7.511870384216309
    5. '```' → logprob: -9.136870384216309
    6. ' class' → logprob: -10.511870384216309
    7. '	def' → logprob: -12.136870384216309
    8. '    ' → logprob: -13.511870384216309
    9. '    
' → logprob: -13.886870384216309
    10. '<|end|>' → logprob: -15.136870384216309

Token 627: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.015063615515828133
    2. ' def' → logprob: -4.265063762664795
    3. '   ' → logprob: -7.015063762664795
    4. '@' → logprob: -14.140063285827637
    5. '	def' → logprob: -15.265063285827637
    6. ':' → logprob: -15.765063285827637
    7. 'class' → logprob: -16.140064239501953
    8. ' ' → logprob: -16.390064239501953
    9. '```' → logprob: -16.390064239501953
    10. 'from' → logprob: -17.140064239501953

Token 628: ' __' (ID: 2516)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6662151217460632
    2. ' def' → logprob: -0.7912151217460632
    3. 'init' → logprob: -3.666215181350708
    4. ' __' → logprob: -5.541214942932129
    5. '__' → logprob: -5.791214942932129
    6. ' init' → logprob: -9.166214942932129
    7. '```' → logprob: -9.166214942932129
    8. 'solve' → logprob: -9.416214942932129
    9. 'staticmethod' → logprob: -9.791214942932129
    10. '_init' → logprob: -10.041214942932129

Token 629: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -6.511406809295295e-06
    2. 'def' → logprob: -12.000006675720215
    3. '```' → logprob: -16.5000057220459
    4. 'call' → logprob: -16.8750057220459
    5. '(init' → logprob: -17.1250057220459
    6. '   ' → logprob: -17.3750057220459
    7. '.init' → logprob: -17.7500057220459
    8. ' init' → logprob: -17.7500057220459
    9. '_init' → logprob: -18.7500057220459
    10. '__' → logprob: -19.2500057220459

Token 630: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.012382615357637405
    2. '(self' → logprob: -4.512382507324219
    3. '__(
' → logprob: -7.012382507324219
    4. '(' → logprob: -8.387382507324219
    5. '__' → logprob: -9.137382507324219
    6. 'self' → logprob: -10.012382507324219
    7. '_(' → logprob: -10.387382507324219
    8. '(
' → logprob: -12.512382507324219
    9. '   ' → logprob: -12.637382507324219
    10. ' (' → logprob: -12.762382507324219

Token 631: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.981667537620524e-06
    2. ' self' → logprob: -13.875001907348633
    3. '       ' → logprob: -14.625001907348633
    4. '
' → logprob: -15.375001907348633
    5. '(self' → logprob: -15.500001907348633
    6. '__(' → logprob: -17.000001907348633
    7. '   ' → logprob: -17.875001907348633
    8. '	self' → logprob: -18.250001907348633
    9. '):
' → logprob: -18.375001907348633
    10. ',' → logprob: -18.375001907348633

Token 632: ',' (ID: 11)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007757577113807201
    2. '(self' → logprob: -5.757757663726807
    3. ',' → logprob: -5.882757663726807
    4. ' self' → logprob: -7.132757663726807
    5. '       ' → logprob: -7.757757663726807
    6. '__(' → logprob: -7.757757663726807
    7. '
' → logprob: -9.632757186889648
    8. ' (' → logprob: -11.257757186889648
    9. '   ' → logprob: -11.382757186889648
    10. ')' → logprob: -11.757757186889648

Token 633: ' datasets' (ID: 57711)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7056679725646973
    2. 'card' → logprob: -1.5806679725646973
    3. 'input' → logprob: -1.7056679725646973
    4. 'inputs' → logprob: -2.9556679725646973
    5. ' card' → logprob: -3.7056679725646973
    6. ' input' → logprob: -4.705667972564697
    7. ' self' → logprob: -4.705667972564697
    8. ' inputs' → logprob: -5.330667972564697
    9. 'cards' → logprob: -5.580667972564697
    10. 'sets' → logprob: -5.705667972564697

Token 634: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23289982974529266
    2. 'self' → logprob: -1.857899785041809
    3. '       ' → logprob: -3.4828999042510986
    4. '):
' → logprob: -5.2328996658325195
    5. '   ' → logprob: -5.7328996658325195
    6. '):' → logprob: -5.7328996658325195
    7. '(self' → logprob: -5.8578996658325195
    8. ',' → logprob: -6.1078996658325195
    9. ' self' → logprob: -6.1078996658325195
    10. ')' → logprob: -7.1078996658325195

Token 635: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.0015661651268601418
    2. 'List' → logprob: -6.626565933227539
    3. ' Iterator' → logprob: -8.876565933227539
    4. 'Iterable' → logprob: -9.376565933227539
    5. 'Input' → logprob: -11.376565933227539
    6. '   ' → logprob: -13.126565933227539
    7. '	Iterator' → logprob: -13.751565933227539
    8. 'Iter' → logprob: -14.251565933227539
    9. 'Tuple' → logprob: -15.626565933227539
    10. ' List' → logprob: -16.00156593322754

Token 636: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.512236498361744e-07
    2. '[
' → logprob: -14.500000953674316
    3. '```' → logprob: -17.875
    4. ')' → logprob: -18.0
    5. '):
' → logprob: -18.125
    6. 'Tuple' → logprob: -18.625
    7. '   ' → logprob: -19.875
    8. '
' → logprob: -20.125
    9. '[[' → logprob: -20.375
    10. ']' → logprob: -20.375

Token 637: 'Tuple' (ID: 40048)
  Prédit: 'Tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tuple' → logprob: -3.054500666621607e-06
    2. ' Tuple' → logprob: -12.75000286102295
    3. '[' → logprob: -16.375003814697266
    4. ' ' → logprob: -16.875003814697266
    5. '   ' → logprob: -17.000003814697266
    6. 'Card' → logprob: -17.125003814697266
    7. '```' → logprob: -20.000003814697266
    8. '       ' → logprob: -20.375003814697266
    9. '
' → logprob: -20.375003814697266
    10. '  ' → logprob: -20.875003814697266

Token 638: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.729906196298543e-06
    2. '[
' → logprob: -12.250009536743164
    3. '[int' → logprob: -12.750009536743164
    4. 'Card' → logprob: -14.625009536743164
    5. ',' → logprob: -14.875009536743164
    6. '   ' → logprob: -15.250009536743164
    7. '[List' → logprob: -15.500009536743164
    8. ']' → logprob: -15.500009536743164
    9. '<Card' → logprob: -16.125009536743164
    10. '(Card' → logprob: -16.750009536743164

Token 639: 'Card' (ID: 6376)
  Prédit: 'Card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -3.128163257315464e-07
    2. ' Card' → logprob: -15.375
    3. '<Card' → logprob: -19.375
    4. '   ' → logprob: -19.875
    5. 'Car' → logprob: -20.25
    6. '[' → logprob: -20.5
    7. '(Card' → logprob: -20.75
    8. 'int' → logprob: -21.75
    9. ' ' → logprob: -21.75
    10. 'List' → logprob: -22.0

Token 640: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -5.512236498361744e-07
    2. 'set' → logprob: -15.000000953674316
    3. 'Sets' → logprob: -16.0
    4. '_set' → logprob: -19.0
    5. 'et' → logprob: -19.375
    6. ' Set' → logprob: -20.75
    7. '	Set' → logprob: -20.875
    8. '   ' → logprob: -21.75
    9. 's' → logprob: -21.875
    10. '_Set' → logprob: -22.125

Token 641: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.511406809295295e-06
    2. ' ,' → logprob: -12.000006675720215
    3. '[' → logprob: -15.750006675720215
    4. '   ' → logprob: -16.5000057220459
    5. ',int' → logprob: -17.0000057220459
    6. ',List' → logprob: -17.0000057220459
    7. ',
' → logprob: -17.1250057220459
    8. '```' → logprob: -18.8750057220459
    9. '‌,' → logprob: -19.2500057220459
    10. ' ' → logprob: -19.3750057220459

Token 642: ' Card' (ID: 9958)
  Prédit: 'Card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Card' → logprob: -0.0005550591740757227
    2. ' Card' → logprob: -7.500555038452148
    3. '   ' → logprob: -13.625555038452148
    4. ' ' → logprob: -14.750555038452148
    5. '<Card' → logprob: -15.375555038452148
    6. 'Car' → logprob: -16.50055503845215
    7. '(Card' → logprob: -16.75055503845215
    8. '.Card' → logprob: -16.87555503845215
    9. '_card' → logprob: -17.50055503845215
    10. '  ' → logprob: -17.62555503845215

Token 643: 'Set' (ID: 1984)
  Prédit: 'Set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -7.896309739408025e-07
    2. 'set' → logprob: -14.375000953674316
    3. 'et' → logprob: -17.125
    4. ',' → logprob: -17.125
    5. 'Sets' → logprob: -17.5
    6. ' Set' → logprob: -17.625
    7. '   ' → logprob: -18.75
    8. 'Card' → logprob: -18.75
    9. '_set' → logprob: -19.0
    10. '	Set' → logprob: -19.125

Token 644: ']])' (ID: 64959)
  Prédit: ']])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']])' → logprob: -0.02344718761742115
    2. ']]' → logprob: -3.773447275161743
    3. '])' → logprob: -8.773447036743164
    4. ']' → logprob: -10.773447036743164
    5. ']):' → logprob: -12.023447036743164
    6. ')])' → logprob: -12.148447036743164
    7. ')' → logprob: -12.398447036743164
    8. ']],' → logprob: -12.773447036743164
    9. ']]:
' → logprob: -13.273447036743164
    10. '[' → logprob: -13.398447036743164

Token 645: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02850903943181038
    2. ':
' → logprob: -3.9035091400146484
    3. ')' → logprob: -5.653509140014648
    4. '   ' → logprob: -5.903509140014648
    5. '       ' → logprob: -7.153509140014648
    6. '):
' → logprob: -7.903509140014648
    7. '):' → logprob: -8.153509140014648
    8. ',' → logprob: -9.528509140014648
    9. '<|end|>' → logprob: -10.028509140014648
    10. '<|end|>' → logprob: -10.278509140014648

Token 646: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.0005543439765460789
    2. ' None' → logprob: -7.50055456161499
    3. '   ' → logprob: -14.250554084777832
    4. '(None' → logprob: -15.625554084777832
    5. '=None' → logprob: -16.25055503845215
    6. 'List' → logprob: -16.25055503845215
    7. '_None' → logprob: -16.37555503845215
    8. 'No' → logprob: -16.62555503845215
    9. 'Iterator' → logprob: -17.00055503845215
    10. 'void' → logprob: -17.00055503845215

Token 647: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6632843017578125
    2. '       ' → logprob: -1.1632843017578125
    3. ':
' → logprob: -1.7882843017578125
    4. '   ' → logprob: -5.7882843017578125
    5. '):
' → logprob: -6.7882843017578125
    6. '<|end|>' → logprob: -8.038284301757812
    7. ',' → logprob: -8.788284301757812
    8. ')' → logprob: -9.288284301757812
    9. '():
' → logprob: -9.913284301757812
    10. '
' → logprob: -9.913284301757812

Token 648: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010024434886872768
    2. '   ' → logprob: -7.001002311706543
    3. 'self' → logprob: -9.876002311706543
    4. 'def' → logprob: -10.251002311706543
    5. ' self' → logprob: -12.626002311706543
    6. 'class' → logprob: -15.501002311706543
    7. '           ' → logprob: -15.501002311706543
    8. '<|end|>' → logprob: -15.876002311706543
    9. '      ' → logprob: -16.12600326538086
    10. ' def' → logprob: -16.62600326538086

Token 649: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.023291246965527534
    2. '       ' → logprob: -3.7732913494110107
    3. ' self' → logprob: -10.14829158782959
    4. '   ' → logprob: -12.39829158782959
    5. '	self' → logprob: -13.89829158782959
    6. '(self' → logprob: -14.39829158782959
    7. 'class' → logprob: -14.64829158782959
    8. 'def' → logprob: -15.77329158782959
    9. '[self' → logprob: -16.148290634155273
    10. '
' → logprob: -16.773290634155273

Token 650: '.datasets' (ID: 136555)
  Prédit: '.datasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.datasets' → logprob: -0.009732948616147041
    2. '.data' → logprob: -5.384732723236084
    3. '.d' → logprob: -5.634732723236084
    4. '.datas' → logprob: -7.509732723236084
    5. '.results' → logprob: -8.259733200073242
    6. '.' → logprob: -8.509733200073242
    7. '.dataset' → logprob: -9.009733200073242
    8. 'datasets' → logprob: -9.134733200073242
    9. '.dat' → logprob: -9.384733200073242
    10. '.cards' → logprob: -9.509733200073242

Token 651: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018162818625569344
    2. ' =' → logprob: -4.018162727355957
    3. '   ' → logprob: -11.893162727355957
    4. '       ' → logprob: -12.143162727355957
    5. '=self' → logprob: -15.143162727355957
    6. ':' → logprob: -16.393163681030273
    7. '=
' → logprob: -16.393163681030273
    8. '        ' → logprob: -16.893163681030273
    9. '    ' → logprob: -17.018163681030273
    10. ' ' → logprob: -17.143163681030273

Token 652: ' datasets' (ID: 57711)
  Prédit: 'datasets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'datasets' → logprob: -7.624555291840807e-05
    2. ' datasets' → logprob: -9.500076293945312
    3. 'dat' → logprob: -14.125076293945312
    4. 'dataset' → logprob: -14.500076293945312
    5. '.datasets' → logprob: -16.625076293945312
    6. 'data' → logprob: -17.375076293945312
    7. 'datas' → logprob: -18.000076293945312
    8. '   ' → logprob: -18.375076293945312
    9. '       ' → logprob: -18.750076293945312
    10. 'list' → logprob: -19.375076293945312

Token 653: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009380022063851357
    2. '
' → logprob: -4.759379863739014
    3. 'def' → logprob: -7.634379863739014
    4. '<|end|>' → logprob: -8.759380340576172
    5. '    
' → logprob: -9.259380340576172
    6. '        
' → logprob: -11.634380340576172
    7. '<|end|>' → logprob: -11.759380340576172
    8. ' def' → logprob: -12.759380340576172
    9. '```' → logprob: -12.884380340576172
    10. '

' → logprob: -13.134380340576172

Token 654: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3274865746498108
    2. 'def' → logprob: -1.327486515045166
    3. '
' → logprob: -4.452486515045166
    4. '<|end|>' → logprob: -6.202486515045166
    5. ' def' → logprob: -8.202486991882324
    6. '    
' → logprob: -9.577486991882324
    7. '<|end|>' → logprob: -10.202486991882324
    8. '```' → logprob: -10.327486991882324
    9. '        
' → logprob: -11.452486991882324
    10. '

' → logprob: -11.827486991882324

Token 655: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.4121114822482923e-06
    2. ' def' → logprob: -12.875003814697266
    3. '   ' → logprob: -14.125003814697266
    4. '	def' → logprob: -19.875003814697266
    5. 'from' → logprob: -20.375003814697266
    6. '
' → logprob: -20.375003814697266
    7. 'de' → logprob: -21.250003814697266
    8. ' ' → logprob: -21.625003814697266
    9. 'async' → logprob: -21.750003814697266
    10. 'import' → logprob: -22.625003814697266

Token 656: ' solve' (ID: 17722)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.273269385099411
    2. 'solve' → logprob: -1.5232694149017334
    3. ' __' → logprob: -4.273269176483154
    4. ' solve' → logprob: -5.148269176483154
    5. 'def' → logprob: -6.773269176483154
    6. 'run' → logprob: -8.648269653320312
    7. 'process' → logprob: -10.898269653320312
    8. ' def' → logprob: -11.023269653320312
    9. ' run' → logprob: -11.398269653320312
    10. 'resolve' → logprob: -14.273269653320312

Token 657: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02337988093495369
    2. '(' → logprob: -3.7733798027038574
    3. ' (' → logprob: -9.023380279541016
    4. 'self' → logprob: -11.648380279541016
    5. '()' → logprob: -13.023380279541016
    6. '   ' → logprob: -13.898380279541016
    7. '(
' → logprob: -14.398380279541016
    8. '
' → logprob: -14.648380279541016
    9. '       ' → logprob: -15.523380279541016
    10. '```' → logprob: -15.523380279541016

Token 658: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35383743047714233
    2. '):' → logprob: -1.478837490081787
    3. 'self' → logprob: -3.228837490081787
    4. ',' → logprob: -3.978837490081787
    5. '):
' → logprob: -4.603837490081787
    6. '(self' → logprob: -6.978837490081787
    7. '       ' → logprob: -8.103837013244629
    8. '   ' → logprob: -8.478837013244629
    9. ')->' → logprob: -8.728837013244629
    10. '):
' → logprob: -9.353837013244629

Token 659: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.02736266329884529
    2. ' ->' → logprob: -3.777362585067749
    3. '->' → logprob: -5.777362823486328
    4. '(' → logprob: -8.152362823486328
    5. '       ' → logprob: -8.152362823486328
    6. '   ' → logprob: -8.652362823486328
    7. 'self' → logprob: -9.152362823486328
    8. ':' → logprob: -9.152362823486328
    9. ')' → logprob: -10.777362823486328
    10. ' (' → logprob: -11.652362823486328

Token 660: ' List' (ID: 2655)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.022726114839315414
    2. 'None' → logprob: -4.022726058959961
    3. ' List' → logprob: -5.522726058959961
    4. 'Iterator' → logprob: -8.147726058959961
    5. ' None' → logprob: -8.272726058959961
    6. 'str' → logprob: -11.272726058959961
    7. 'Optional' → logprob: -12.522726058959961
    8. ' Iterator' → logprob: -12.522726058959961
    9. '   ' → logprob: -13.147726058959961
    10. 'int' → logprob: -13.397726058959961

Token 661: '[str' (ID: 33439)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.029814021661877632
    2. '[str' → logprob: -3.5298140048980713
    3. '[int' → logprob: -9.779813766479492
    4. '[List' → logprob: -12.154813766479492
    5. '[
' → logprob: -14.904813766479492
    6. 'Optional' → logprob: -14.904813766479492
    7. '   ' → logprob: -14.904813766479492
    8. 'str' → logprob: -14.904813766479492
    9. '(Optional' → logprob: -16.154813766479492
    10. '```' → logprob: -16.279813766479492

Token 662: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.01802830398082733
    2. ']:' → logprob: -4.518028259277344
    3. ':
' → logprob: -5.143028259277344
    4. '   ' → logprob: -7.768028259277344
    5. ':' → logprob: -7.893028259277344
    6. '       ' → logprob: -8.893028259277344
    7. ']:
' → logprob: -9.643028259277344
    8. '):
' → logprob: -9.893028259277344
    9. ']:

' → logprob: -10.768028259277344
    10. '():
' → logprob: -10.893028259277344

Token 663: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.292907877039397e-06
    2. 'result' → logprob: -13.75000286102295
    3. '   ' → logprob: -14.25000286102295
    4. '[' → logprob: -14.25000286102295
    5. '```' → logprob: -14.62500286102295
    6. '[]' → logprob: -15.87500286102295
    7. 'results' → logprob: -15.87500286102295
    8. ' result' → logprob: -16.625003814697266
    9. '           ' → logprob: -17.000003814697266
    10. 'output' → logprob: -17.125003814697266

Token 664: ' results' (ID: 4376)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25884267687797546
    2. 'results' (adapté à ' results') → logprob: -1.5088427066802979
    3. 'result' → logprob: -5.258842468261719
    4. ' results' → logprob: -6.508842468261719
    5. 'output' → logprob: -8.883842468261719
    6. 'outputs' → logprob: -10.133842468261719
    7. ' result' → logprob: -11.133842468261719
    8. 'answers' → logprob: -13.133842468261719
    9. '   ' → logprob: -13.508842468261719
    10. '	results' → logprob: -14.508842468261719

Token 665: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6941525340080261
    2. ' =' → logprob: -0.6941525340080261
    3. '=[]' → logprob: -6.944152355194092
    4. '=[]
' → logprob: -11.31915283203125
    5. '   ' → logprob: -11.31915283203125
    6. ':' → logprob: -11.56915283203125
    7. '.append' → logprob: -12.69415283203125
    8. '[]' → logprob: -13.06915283203125
    9. '=[]
' → logprob: -14.81915283203125
    10. '       ' → logprob: -15.19415283203125

Token 666: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0007139815716072917
    2. '[]
' → logprob: -7.25071382522583
    3. ' []' → logprob: -12.500714302062988
    4. '[]

' → logprob: -16.000713348388672
    5. '[' → logprob: -16.375713348388672
    6. '[]"' → logprob: -17.125713348388672
    7. '[]}' → logprob: -17.750713348388672
    8. '[])' → logprob: -18.625713348388672
    9. ' []
' → logprob: -19.500713348388672
    10. '[]>' → logprob: -19.500713348388672

Token 667: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.3213025744771585e-05
    2. 'for' → logprob: -10.625033378601074
    3. ' for' → logprob: -12.125033378601074
    4. '   ' → logprob: -12.750033378601074
    5. '        
' → logprob: -15.500033378601074
    6. '	' → logprob: -16.000032424926758
    7. '
' → logprob: -16.500032424926758
    8. '           ' → logprob: -17.000032424926758
    9. ' ' → logprob: -17.250032424926758
    10. '<|end|>' → logprob: -17.375032424926758

Token 668: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4783106744289398
    2. 'for' (adapté à ' for') → logprob: -0.9783107042312622
    3. ' for' → logprob: -5.478310585021973
    4. '   ' → logprob: -9.978310585021973
    5. '
' → logprob: -14.103310585021973
    6. '	for' → logprob: -14.103310585021973
    7. ' ' → logprob: -15.478310585021973
    8. '```' → logprob: -16.47831153869629
    9. '	' → logprob: -16.72831153869629
    10. '           ' → logprob: -17.10331153869629

Token 669: ' tar' (ID: 7057)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0013784486800432205
    2. 'tar' → logprob: -7.126378536224365
    3. ' tar' → logprob: -7.876378536224365
    4. '(t' → logprob: -9.001378059387207
    5. '   ' → logprob: -10.376378059387207
    6. ' t' → logprob: -10.751378059387207
    7. 'dataset' → logprob: -12.126378059387207
    8. '       ' → logprob: -12.751378059387207
    9. '	t' → logprob: -13.376378059387207
    10. ' (' → logprob: -13.376378059387207

Token 670: 'o' (ID: 78)
  Prédit: 'o'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'o' → logprob: -1.7432603272027336e-06
    2. '   ' → logprob: -14.250001907348633
    3. '       ' → logprob: -14.750001907348633
    4. '
' → logprob: -15.500001907348633
    5. 'о' → logprob: -15.875001907348633
    6. '           ' → logprob: -16.750001907348633
    7. 'os' → logprob: -17.000001907348633
    8. ' o' → logprob: -17.250001907348633
    9. 'oc' → logprob: -17.625001907348633
    10. 'ofile' → logprob: -17.625001907348633

Token 671: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.6776029699249193e-05
    2. ' ,' → logprob: -11.62502670288086
    3. ',h' → logprob: -12.00002670288086
    4. 'set' → logprob: -12.87502670288086
    5. '_,' → logprob: -13.00002670288086
    6. ',set' → logprob: -13.25002670288086
    7. 'han' → logprob: -13.75002670288086
    8. '_set' → logprob: -14.00002670288086
    9. 's' → logprob: -14.12502670288086
    10. ',
' → logprob: -14.62502670288086

Token 672: ' han' (ID: 6648)
  Prédit: 'han'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'han' → logprob: -0.01251376885920763
    2. ' han' → logprob: -4.387513637542725
    3. ' ' → logprob: -13.262514114379883
    4. 'hen' → logprob: -14.137514114379883
    5. 'ham' → logprob: -14.887514114379883
    6. '   ' → logprob: -15.262514114379883
    7. 'hana' → logprob: -15.637514114379883
    8. 'h' → logprob: -15.887514114379883
    9. '```' → logprob: -15.887514114379883
    10. 'hand' → logprob: -16.262514114379883

Token 673: 'ako' (ID: 5938)
  Prédit: 'ako'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ako' → logprob: -0.0004094619944225997
    2. '   ' → logprob: -8.625409126281738
    3. '           ' → logprob: -9.500409126281738
    4. '       ' → logprob: -10.250409126281738
    5. ',' → logprob: -10.500409126281738
    6. '               ' → logprob: -11.250409126281738
    7. 'a' → logprob: -11.250409126281738
    8. 'oko' → logprob: -11.375409126281738
    9. '
' → logprob: -11.875409126281738
    10. '```' → logprob: -12.000409126281738

Token 674: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004952427931129932
    2. 'in' → logprob: -5.879952430725098
    3. ':' → logprob: -6.504952430725098
    4. ':
' → logprob: -7.379952430725098
    5. ',' → logprob: -11.504952430725098
    6. '       ' → logprob: -11.754952430725098
    7. '   ' → logprob: -13.379952430725098
    8. ':

' → logprob: -13.629952430725098
    9. '        ' → logprob: -13.754952430725098
    10. '=' → logprob: -14.004952430725098

Token 675: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003219303209334612
    2. ' self' → logprob: -5.753219127655029
    3. '(self' → logprob: -10.253219604492188
    4. 'Card' → logprob: -13.003219604492188
    5. '
' → logprob: -13.503219604492188
    6. '=self' → logprob: -14.003219604492188
    7. '[self' → logprob: -14.003219604492188
    8. '	self' → logprob: -15.128219604492188
    9. 't' → logprob: -15.253219604492188
    10. ' ' → logprob: -15.628219604492188

Token 676: '.datasets' (ID: 136555)
  Prédit: '.datasets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.datasets' → logprob: -2.618001053633634e-05
    2. 'datasets' → logprob: -10.875025749206543
    3. 'atasets' → logprob: -12.375025749206543
    4. '.set' → logprob: -13.500025749206543
    5. 'sets' → logprob: -14.125025749206543
    6. '.datas' → logprob: -14.750025749206543
    7. 's' → logprob: -15.750025749206543
    8. ' datasets' → logprob: -16.12502670288086
    9. '
' → logprob: -16.37502670288086
    10. 'ets' → logprob: -16.50002670288086

Token 677: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5239594578742981
    2. ':' → logprob: -0.8989594578742981
    3. '           ' → logprob: -7.898959636688232
    4. '       ' → logprob: -8.648959159851074
    5. '):
' → logprob: -8.648959159851074
    6. '():
' → logprob: -9.898959159851074
    7. ',' → logprob: -10.523959159851074
    8. ':

' → logprob: -10.773959159851074
    9. '<|end|>' → logprob: -12.523959159851074
    10. ':
' → logprob: -12.648959159851074

Token 678: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.043033670634031296
    2. '       ' → logprob: -3.1680335998535156
    3. '
' → logprob: -10.543033599853516
    4. '               ' → logprob: -13.168033599853516
    5. '```' → logprob: -13.293033599853516
    6. '   ' → logprob: -14.043033599853516
    7. '          ' → logprob: -14.418033599853516
    8. '         ' → logprob: -14.918033599853516
    9. '            
' → logprob: -14.918033599853516
    10. '        ' → logprob: -15.043033599853516

Token 679: ' criterion' (ID: 71270)
  Prédit: 'criterion'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'criterion' (adapté à ' criterion') → logprob: -0.041903503239154816
    2. '           ' → logprob: -3.291903495788574
    3. 'criteria' → logprob: -6.666903495788574
    4. 'exchange' → logprob: -6.791903495788574
    5. '       ' → logprob: -6.916903495788574
    6. '               ' → logprob: -8.541903495788574
    7. 'ec' → logprob: -9.041903495788574
    8. 'criter' → logprob: -9.541903495788574
    9. ' criterion' → logprob: -10.666903495788574
    10. 'ex' → logprob: -10.791903495788574

Token 680: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06994020938873291
    2. '=' → logprob: -2.6949400901794434
    3. '   ' → logprob: -12.819940567016602
    4. '    ' → logprob: -14.319940567016602
    5. ' ' → logprob: -15.569940567016602
    6. '  ' → logprob: -16.1949405670166
    7. ' =
' → logprob: -16.3199405670166
    8. '        ' → logprob: -16.6949405670166
    9. '=
' → logprob: -16.8199405670166
    10. ')' → logprob: -16.9449405670166

Token 681: ' Exchange' (ID: 24637)
  Prédit: 'Exchange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Exchange' → logprob: -9.615255839889869e-05
    2. ' Exchange' → logprob: -9.250096321105957
    3. '           ' → logprob: -18.00009536743164
    4. '   ' → logprob: -18.25009536743164
    5. '       ' → logprob: -18.87509536743164
    6. 'Exercise' → logprob: -19.12509536743164
    7. '.Exchange' → logprob: -20.75009536743164
    8. 'exchange' → logprob: -21.37509536743164
    9. '	' → logprob: -21.75009536743164
    10. '_exchange' → logprob: -22.00009536743164

Token 682: 'Criterion' (ID: 23833)
  Prédit: 'Criterion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Criterion' → logprob: -3.128163257315464e-07
    2. 'criterion' → logprob: -16.25
    3. 'C' → logprob: -17.125
    4. 'Constraint' → logprob: -17.75
    5. 'Credential' → logprob: -18.375
    6. ' Criterion' → logprob: -18.5
    7. 'Crit' → logprob: -18.625
    8. 'Decision' → logprob: -18.875
    9. 'Criteria' → logprob: -19.0
    10. '```' → logprob: -19.375

Token 683: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -1.9623810658231378e-05
    2. '(' → logprob: -11.375020027160645
    3. '=' → logprob: -12.625020027160645
    4. ' =' → logprob: -12.750020027160645
    5. 't' → logprob: -14.500020027160645
    6. '           ' → logprob: -14.750020027160645
    7. ' (' → logprob: -14.875020027160645
    8. '=t' → logprob: -15.250020027160645
    9. '       ' → logprob: -15.750020027160645
    10. '   ' → logprob: -16.250019073486328

Token 684: 'aro' (ID: 8421)
  Prédit: 'aro'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aro' → logprob: -7.107425062713446e-06
    2. 'ar' → logprob: -12.875006675720215
    3. 't' → logprob: -13.625006675720215
    4. 'аро' → logprob: -14.125006675720215
    5. '   ' → logprob: -14.875006675720215
    6. '=' → logprob: -15.000006675720215
    7. ',' → logprob: -15.125006675720215
    8. 'a' → logprob: -15.375006675720215
    9. 'oro' → logprob: -15.500006675720215
    10. 'tar' → logprob: -15.875006675720215

Token 685: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1398757123970427e-05
    2. ' ,' → logprob: -11.500011444091797
    3. ',
' → logprob: -14.125011444091797
    4. '   ' → logprob: -15.375011444091797
    5. '           ' → logprob: -16.250011444091797
    6. '       ' → logprob: -16.750011444091797
    7. ')' → logprob: -17.125011444091797
    8. ',

' → logprob: -17.625011444091797
    9. '

' → logprob: -18.375011444091797
    10. '
' → logprob: -18.375011444091797

Token 686: ' han' (ID: 6648)
  Prédit: 'han'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'han' → logprob: -0.002813194179907441
    2. ' han' → logprob: -5.877813339233398
    3. ' ' → logprob: -12.752813339233398
    4. 'hen' → logprob: -13.502813339233398
    5. '   ' → logprob: -14.002813339233398
    6. '  ' → logprob: -14.502813339233398
    7. 'hana' → logprob: -14.627813339233398
    8. 'ham' → logprob: -14.752813339233398
    9. '           ' → logprob: -15.002813339233398
    10. '```' → logprob: -15.252813339233398

Token 687: 'ako' (ID: 5938)
  Prédit: 'ako'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ako' → logprob: -7.3458322731312364e-06
    2. 'ak' → logprob: -12.250007629394531
    3. 'ko' → logprob: -14.125007629394531
    4. 'ако' → logprob: -14.500007629394531
    5. '   ' → logprob: -14.875007629394531
    6. '```' → logprob: -15.625007629394531
    7. 'a' → logprob: -15.750007629394531
    8. 'oko' → logprob: -16.50000762939453
    9. ' ako' → logprob: -16.62500762939453
    10. '
' → logprob: -16.75000762939453

Token 688: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.41008809208869934
    2. ')' → logprob: -1.160088062286377
    3. '           ' → logprob: -3.785088062286377
    4. '       ' → logprob: -8.785088539123535
    5. ')
' → logprob: -9.410088539123535
    6. '               ' → logprob: -13.035088539123535
    7. ')

' → logprob: -13.660088539123535
    8. ')p' → logprob: -13.910088539123535
    9. '          ' → logprob: -14.535088539123535
    10. '   ' → logprob: -14.535088539123535

Token 689: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00432876031845808
    2. 'decision' → logprob: -5.504328727722168
    3. '
' → logprob: -8.504328727722168
    4. '       ' → logprob: -10.379328727722168
    5. 'dec' → logprob: -12.379328727722168
    6. ' decision' → logprob: -12.629328727722168
    7. 'pairs' → logprob: -13.504328727722168
    8. 'exchange' → logprob: -13.504328727722168
    9. 'if' → logprob: -13.629328727722168
    10. '```' → logprob: -13.879328727722168

Token 690: ' pairs' (ID: 24702)
  Prédit: 'decision'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decision' → logprob: -0.5964918732643127
    2. 'pairs' (adapté à ' pairs') → logprob: -0.8464918732643127
    3. '           ' → logprob: -4.221491813659668
    4. 'dec' → logprob: -6.096491813659668
    5. 'if' → logprob: -6.221491813659668
    6. 'exchange' → logprob: -7.471491813659668
    7. 'pair' → logprob: -7.846491813659668
    8. '       ' → logprob: -9.596491813659668
    9. '               ' → logprob: -9.971491813659668
    10. ' pairs' → logprob: -9.971491813659668

Token 691: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31326204538345337
    2. ' =' → logprob: -1.3132619857788086
    3. '_iter' → logprob: -16.188262939453125
    4. 's' → logprob: -16.313262939453125
    5. '   ' → logprob: -17.188262939453125
    6. '=p' → logprob: -17.438262939453125
    7. '_iterator' → logprob: -17.938262939453125
    8. ' ' → logprob: -18.188262939453125
    9. '_generator' → logprob: -18.688262939453125
    10. '       ' → logprob: -19.188262939453125

Token 692: ' criterion' (ID: 71270)
  Prédit: 'criterion'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'criterion' → logprob: -0.014422975480556488
    2. 'list' → logprob: -4.88942289352417
    3. 'Exchange' → logprob: -5.38942289352417
    4. ' criterion' → logprob: -6.26442289352417
    5. 'criteria' → logprob: -9.389423370361328
    6. ' list' → logprob: -9.514423370361328
    7. ' Exchange' → logprob: -9.639423370361328
    8. 'criter' → logprob: -10.139423370361328
    9. 'iter' → logprob: -11.139423370361328
    10. ' ' → logprob: -11.764423370361328

Token 693: '.fe' (ID: 27687)
  Prédit: '.fe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.fe' → logprob: -9.372294698550832e-06
    2. '.' → logprob: -12.125009536743164
    3. 'fe' → logprob: -12.875009536743164
    4. '.Fe' → logprob: -14.500009536743164
    5. '.fac' → logprob: -15.250009536743164
    6. ' .' → logprob: -15.375009536743164
    7. '.fre' → logprob: -15.375009536743164
    8. '(fe' → logprob: -17.000009536743164
    9. '.fo' → logprob: -17.500009536743164
    10. '.FE' → logprob: -17.625009536743164

Token 694: 'asible' (ID: 195692)
  Prédit: 'asible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asible' → logprob: -9.253090865968261e-06
    2. 'sible' → logprob: -11.750009536743164
    3. 'as' → logprob: -14.250009536743164
    4. 'asib' → logprob: -15.500009536743164
    5. 'a' → logprob: -15.875009536743164
    6. 'asi' → logprob: -16.000009536743164
    7. 'e' → logprob: -16.250009536743164
    8. 'isible' → logprob: -16.500009536743164
    9. 'es' → logprob: -16.750009536743164
    10. 'able' → logprob: -17.250009536743164

Token 695: '_pairs' (ID: 90005)
  Prédit: '_pairs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pairs' → logprob: 0.0
    2. 'pairs' → logprob: -17.125
    3. 'Pairs' → logprob: -19.375
    4. '_' → logprob: -20.25
    5. 'airs' → logprob: -20.5
    6. '_p' → logprob: -20.75
    7. '```' → logprob: -21.0
    8. '_faces' → logprob: -21.25
    9. '_sets' → logprob: -21.375
    10. '_groups' → logprob: -22.0

Token 696: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03508179634809494
    2. '
' → logprob: -3.4100818634033203
    3. '()
' → logprob: -7.41008186340332
    4. ')' → logprob: -8.41008186340332
    5. ')
' → logprob: -8.66008186340332
    6. '()' → logprob: -8.78508186340332
    7. ' =' → logprob: -9.41008186340332
    8. '            
' → logprob: -9.66008186340332
    9. ',' → logprob: -10.16008186340332
    10. '       ' → logprob: -10.53508186340332

Token 697: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005336216650903225
    2. 'decision' → logprob: -5.380336284637451
    3. '       ' → logprob: -7.380336284637451
    4. ' decision' → logprob: -9.505335807800293
    5. '   ' → logprob: -11.505335807800293
    6. '               ' → logprob: -12.630335807800293
    7. 'dec' → logprob: -13.005335807800293
    8. '
' → logprob: -13.380335807800293
    9. '                   ' → logprob: -15.380335807800293
    10. '            
' → logprob: -16.00533676147461

Token 698: ' decision' (ID: 8660)
  Prédit: 'decision'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decision' (adapté à ' decision') → logprob: -0.0081486776471138
    2. '           ' → logprob: -4.883148670196533
    3. ' decision' → logprob: -7.633148670196533
    4. 'dec' → logprob: -10.633149147033691
    5. '       ' → logprob: -10.883149147033691
    6. 'exchange' → logprob: -12.508149147033691
    7. '               ' → logprob: -12.758149147033691
    8. '   ' → logprob: -13.508149147033691
    9. '
' → logprob: -13.633149147033691
    10. '            
' → logprob: -13.883149147033691

Token 699: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029751762747764587
    2. '=' → logprob: -3.529751777648926
    3. '   ' → logprob: -13.904751777648926
    4. ' ' → logprob: -15.904751777648926
    5. '    ' → logprob: -16.27975082397461
    6. ' =
' → logprob: -16.65475082397461
    7. '  ' → logprob: -17.02975082397461
    8. '.' → logprob: -17.27975082397461
    9. ':' → logprob: -17.65475082397461
    10. '=
' → logprob: -17.77975082397461

Token 700: ' Exchange' (ID: 24637)
  Prédit: 'Exchange'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Exchange' → logprob: -0.00015860427811276168
    2. ' Exchange' → logprob: -8.750158309936523
    3. '           ' → logprob: -17.000158309936523
    4. '   ' → logprob: -18.375158309936523
    5. '       ' → logprob: -18.500158309936523
    6. '.Exchange' → logprob: -18.625158309936523
    7. '_exchange' → logprob: -19.000158309936523
    8. 'exchange' → logprob: -19.375158309936523
    9. 'Exercise' → logprob: -19.500158309936523
    10. ' ' → logprob: -19.875158309936523

Token 701: 'Decision' (ID: 77031)
  Prédit: 'Decision'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Decision' → logprob: -1.9361264946837764e-07
    2. 'Exchange' → logprob: -16.75
    3. 'decision' → logprob: -18.125
    4. '=' → logprob: -18.875
    5. 'Dec' → logprob: -19.125
    6. '_' → logprob: -19.875
    7. 'Criterion' → logprob: -20.0
    8. ' Decision' → logprob: -20.0
    9. 'Choice' → logprob: -20.0
    10. '[' → logprob: -20.625

Token 702: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0001234428636962548
    2. 'pairs' → logprob: -9.125123023986816
    3. '           ' → logprob: -12.000123023986816
    4. 'p' → logprob: -12.500123023986816
    5. '(' → logprob: -12.500123023986816
    6. '       ' → logprob: -15.125123023986816
    7. '(pair' → logprob: -15.625123023986816
    8. '
' → logprob: -15.875123023986816
    9. '```' → logprob: -16.625123977661133
    10. '(
' → logprob: -17.125123977661133

Token 703: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.0015062900492921472
    2. 'pairs' → logprob: -6.501506328582764
    3. 'air' → logprob: -13.126505851745605
    4. ' pairs' → logprob: -13.626505851745605
    5. 'a' → logprob: -15.001505851745605
    6. '_pairs' → logprob: -15.751505851745605
    7. 'Pairs' → logprob: -16.001506805419922
    8. 'aires' → logprob: -16.751506805419922
    9. '(p' → logprob: -17.126506805419922
    10. '[' → logprob: -18.001506805419922

Token 704: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.31451377272605896
    2. ')' → logprob: -1.3145138025283813
    3. ').' → logprob: -6.814513683319092
    4. '           ' → logprob: -9.56451416015625
    5. '       ' → logprob: -9.93951416015625
    6. ')
' → logprob: -10.43951416015625
    7. '   ' → logprob: -12.68951416015625
    8. ')

' → logprob: -14.31451416015625
    9. '               ' → logprob: -14.31451416015625
    10. ' ' → logprob: -14.43951416015625

Token 705: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005760980304330587
    2. 'result' → logprob: -5.25576114654541
    3. 'best' → logprob: -8.00576114654541
    4. '       ' → logprob: -9.75576114654541
    5. 'answer' → logprob: -10.00576114654541
    6. ' result' → logprob: -10.13076114654541
    7. '```' → logprob: -10.88076114654541
    8. 'pair' → logprob: -11.75576114654541
    9. 'solution' → logprob: -11.88076114654541
    10. '   ' → logprob: -12.00576114654541

Token 706: ' answer' (ID: 6052)
  Prédit: 'best'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'best' → logprob: -0.020383397117257118
    2. 'result' → logprob: -4.020383358001709
    3. 'answer' (adapté à ' answer') → logprob: -7.020383358001709
    4. 'res' → logprob: -7.770383358001709
    5. 'exchange' → logprob: -8.270383834838867
    6. 'pair' → logprob: -8.270383834838867
    7. '           ' → logprob: -8.395383834838867
    8. ' best' → logprob: -9.020383834838867
    9. 'ans' → logprob: -10.145383834838867
    10. 'choice' → logprob: -12.270383834838867

Token 707: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00408397801220417
    2. '=' → logprob: -5.50408411026001
    3. '_pair' → logprob: -12.129083633422852
    4. '   ' → logprob: -16.00408363342285
    5. 'pair' → logprob: -17.25408363342285
    6. 's' → logprob: -17.62908363342285
    7. ' ' → logprob: -17.75408363342285
    8. '_' → logprob: -18.12908363342285
    9. '    ' → logprob: -18.25408363342285
    10. '```' → logprob: -19.25408363342285

Token 708: ' decision' (ID: 8660)
  Prédit: 'decision'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'decision' → logprob: -0.011048054322600365
    2. ' decision' → logprob: -4.511047840118408
    3. '   ' → logprob: -15.386048316955566
    4. 'dec' → logprob: -17.51104736328125
    5. ' ' → logprob: -18.01104736328125
    6. '           ' → logprob: -18.63604736328125
    7. '    ' → logprob: -19.13604736328125
    8. 'answer' → logprob: -19.38604736328125
    9. 'Decision' → logprob: -19.51104736328125
    10. '  ' → logprob: -19.76104736328125

Token 709: '.best' (ID: 95548)
  Prédit: '.best'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.best' → logprob: -4.320199877838604e-07
    2. '.' → logprob: -15.75
    3. 'best' → logprob: -16.125
    4. ' .' → logprob: -16.125
    5. '	best' → logprob: -19.375
    6. '.next' → logprob: -19.625
    7. '(best' → logprob: -19.875
    8. '.final' → logprob: -20.375
    9. ' best' → logprob: -20.375
    10. '.b' → logprob: -21.0

Token 710: '_exchange' (ID: 152363)
  Prédit: '_exchange'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_exchange' → logprob: -1.5690089639974758e-05
    2. 'exchange' → logprob: -11.125015258789062
    3. '_pair' → logprob: -14.625015258789062
    4. '_ex' → logprob: -15.500015258789062
    5. 'Exchange' → logprob: -16.000015258789062
    6. '_' → logprob: -16.750015258789062
    7. '(exchange' → logprob: -18.000015258789062
    8. '_exc' → logprob: -18.500015258789062
    9. '_return' → logprob: -18.750015258789062
    10. '_trade' → logprob: -19.000015258789062

Token 711: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.6801495552062988
    2. '()' → logprob: -1.5551495552062988
    3. '           ' → logprob: -1.8051495552062988
    4. '       ' → logprob: -2.805149555206299
    5. 'if' → logprob: -2.930149555206299
    6. '
' → logprob: -6.180149555206299
    7. ' if' → logprob: -6.555149555206299
    8. '()

' → logprob: -9.55514907836914
    9. '(' → logprob: -9.68014907836914
    10. '()
' → logprob: -10.43014907836914

Token 712: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011064562946557999
    2. '       ' → logprob: -4.511064529418945
    3. 'if' → logprob: -11.511064529418945
    4. '   ' → logprob: -12.511064529418945
    5. ' if' → logprob: -13.761064529418945
    6. '
' → logprob: -14.261064529418945
    7. '```' → logprob: -14.386064529418945
    8. '               ' → logprob: -15.136064529418945
    9. '          ' → logprob: -15.761064529418945
    10. '		' → logprob: -16.136064529418945

Token 713: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.31359097361564636
    2. '           ' → logprob: -1.3135910034179688
    3. ' if' → logprob: -8.063591003417969
    4. '       ' → logprob: -11.188591003417969
    5. '   ' → logprob: -14.688591003417969
    6. '               ' → logprob: -16.68859100341797
    7. '```' → logprob: -16.93859100341797
    8. '		' → logprob: -17.18859100341797
    9. 'If' → logprob: -18.56359100341797
    10. '          ' → logprob: -18.68859100341797

Token 714: ' answer' (ID: 6052)
  Prédit: ' answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' answer' → logprob: -0.474077433347702
    2. 'answer' → logprob: -0.9740774631500244
    3. '	answer' → logprob: -14.599077224731445
    4. '(answer' → logprob: -16.974077224731445
    5. '           ' → logprob: -17.724077224731445
    6. '   ' → logprob: -18.474077224731445
    7. '.answer' → logprob: -18.599077224731445
    8. ' not' → logprob: -18.849077224731445
    9. 'Answer' → logprob: -19.224077224731445
    10. '_answer' → logprob: -19.474077224731445

Token 715: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.0015087933279573917
    2. 'is' → logprob: -6.501508712768555
    3. '==' → logprob: -12.251508712768555
    4. ' ==' → logprob: -13.751508712768555
    5. ':' → logprob: -14.751508712768555
    6. '[' → logprob: -16.751508712768555
    7. '	is' → logprob: -17.001508712768555
    8. ' ' → logprob: -17.501508712768555
    9. ')' → logprob: -18.251508712768555
    10. 'in' → logprob: -18.376508712768555

Token 716: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.04965002462267876
    2. ' None' → logprob: -3.049649953842163
    3. 'not' → logprob: -7.424650192260742
    4. ' not' → logprob: -7.674650192260742
    5. 'none' → logprob: -15.049650192260742
    6. '   ' → logprob: -15.174650192260742
    7. '(None' → logprob: -15.424650192260742
    8. 'Not' → logprob: -15.799650192260742
    9. '=None' → logprob: -15.924650192260742
    10. '           ' → logprob: -15.924650192260742

Token 717: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.16480335593223572
    2. ':' → logprob: -1.914803385734558
    3. '           ' → logprob: -5.664803504943848
    4. '               ' → logprob: -7.164803504943848
    5. ' or' → logprob: -9.039803504943848
    6. '):
' → logprob: -9.289803504943848
    7. ',' → logprob: -10.289803504943848
    8. ':
' → logprob: -11.039803504943848
    9. '                   ' → logprob: -11.164803504943848
    10. ':

' → logprob: -11.289803504943848

Token 718: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.059599436819553375
    2. 'results' → logprob: -3.0595993995666504
    3. '           ' → logprob: -4.80959939956665
    4. ' results' → logprob: -5.93459939956665
    5. 'result' → logprob: -9.809599876403809
    6. '   ' → logprob: -10.559599876403809
    7. '	results' → logprob: -10.684599876403809
    8. '(results' → logprob: -10.809599876403809
    9. '                   ' → logprob: -11.309599876403809
    10. '
' → logprob: -12.434599876403809

Token 719: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.04370807111263275
    2. '               ' → logprob: -4.043707847595215
    3. ' results' → logprob: -4.043707847595215
    4. '   ' → logprob: -5.543707847595215
    5. '                   ' → logprob: -6.293707847595215
    6. '"' → logprob: -6.793707847595215
    7. '       ' → logprob: -8.543707847595215
    8. '"-' → logprob: -8.793707847595215
    9. 'result' → logprob: -8.793707847595215
    10. '           ' → logprob: -9.168707847595215

Token 720: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.8802491215174086e-05
    2. '.' → logprob: -10.500028610229492
    3. '.Append' → logprob: -15.125028610229492
    4. '.app' → logprob: -15.375028610229492
    5. '.ap' → logprob: -15.625028610229492
    6. '.extend' → logprob: -15.750028610229492
    7. 'append' → logprob: -16.000028610229492
    8. ').' → logprob: -16.000028610229492
    9. '.setdefault' → logprob: -16.125028610229492
    10. ' .' → logprob: -16.250028610229492

Token 721: '("-' (ID: 27133)
  Prédit: '("'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.07867085933685303
    2. '('' → logprob: -2.7036709785461426
    3. '("-' → logprob: -5.203670978546143
    4. '"' → logprob: -6.203670978546143
    5. '('-' → logprob: -7.578670978546143
    6. ''' → logprob: -8.078670501708984
    7. '   ' → logprob: -8.578670501708984
    8. '(' → logprob: -9.953670501708984
    9. '('"' → logprob: -10.203670501708984
    10. '"No' → logprob: -10.203670501708984

Token 722: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.008615988306701183
    2. '")' → logprob: -4.758615970611572
    3. '"' → logprob: -15.00861644744873
    4. '\' → logprob: -15.13361644744873
    5. '")
' → logprob: -15.25861644744873
    6. '１' → logprob: -15.75861644744873
    7. 'none' → logprob: -16.508615493774414
    8. 'None' → logprob: -16.758615493774414
    9. '\n' → logprob: -16.883615493774414
    10. 'NONE' → logprob: -17.008615493774414

Token 723: '")
' (ID: 1896)
  Prédit: '")
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")
' → logprob: -0.07005691528320312
    2. '")' → logprob: -2.695056915283203
    3. '")
' → logprob: -9.070056915283203
    4. '")

' → logprob: -13.195056915283203
    5. '"' → logprob: -13.820056915283203
    6. ')
' → logprob: -14.195056915283203
    7. '')
' → logprob: -14.570056915283203
    8. '\n' → logprob: -14.570056915283203
    9. '```' → logprob: -14.695056915283203
    10. '"
' → logprob: -15.570056915283203

Token 724: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.034592388459714e-06
    2. '               ' → logprob: -12.250005722045898
    3. 'else' → logprob: -14.500005722045898
    4. '       ' → logprob: -14.750005722045898
    5. '```' → logprob: -16.6250057220459
    6. '		' → logprob: -16.7500057220459
    7. 'continue' → logprob: -17.7500057220459
    8. '                   ' → logprob: -18.3750057220459
    9. '            
' → logprob: -18.6250057220459
    10. ' else' → logprob: -18.6250057220459

Token 725: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006288995034992695
    2. 'else' (adapté à ' else') → logprob: -5.131289005279541
    3. ' else' → logprob: -8.131288528442383
    4. '       ' → logprob: -9.756288528442383
    5. 'elif' → logprob: -12.131288528442383
    6. '          ' → logprob: -14.381288528442383
    7. '               ' → logprob: -14.756288528442383
    8. '		' → logprob: -14.756288528442383
    9. ',' → logprob: -15.131288528442383
    10. '   ' → logprob: -15.131288528442383

Token 726: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.07182541489601135
    2. ':' → logprob: -2.6968255043029785
    3. '               ' → logprob: -6.8218255043029785
    4. '           ' → logprob: -7.1968255043029785
    5. '                   ' → logprob: -11.19682502746582
    6. '[' → logprob: -11.69682502746582
    7. ':

' → logprob: -11.94682502746582
    8. ':
' → logprob: -12.32182502746582
    9. ' :
' → logprob: -12.69682502746582
    10. ',' → logprob: -12.82182502746582

Token 727: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004837126471102238
    2. 'results' → logprob: -5.8798370361328125
    3. 't' → logprob: -6.8798370361328125
    4. ' results' → logprob: -7.7548370361328125
    5. ' t' → logprob: -8.129837036132812
    6. '       ' → logprob: -9.004837036132812
    7. '           ' → logprob: -9.504837036132812
    8. '   ' → logprob: -10.004837036132812
    9. '(t' → logprob: -11.379837036132812
    10. '                
' → logprob: -12.879837036132812

Token 728: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.5233096480369568
    2. 't' → logprob: -0.8983096480369568
    3. '   ' → logprob: -9.523309707641602
    4. ' results' → logprob: -10.273309707641602
    5. ' t' → logprob: -10.898309707641602
    6. 'a' → logprob: -11.023309707641602
    7. '           ' → logprob: -11.148309707641602
    8. '       ' → logprob: -11.273309707641602
    9. '(t' → logprob: -12.898309707641602
    10. 'T' → logprob: -12.898309707641602

Token 729: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00010473522706888616
    2. '.' → logprob: -9.250104904174805
    3. '.extend' → logprob: -12.375104904174805
    4. 'append' → logprob: -12.625104904174805
    5. ' .' → logprob: -13.875104904174805
    6. '.app' → logprob: -17.250104904174805
    7. '_append' → logprob: -17.875104904174805
    8. '_str' → logprob: -18.750104904174805
    9. '.
' → logprob: -18.750104904174805
    10. '   ' → logprob: -18.875104904174805

Token 730: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.00012415809032972902
    2. '("{}' → logprob: -10.000123977661133
    3. 'f' → logprob: -10.375123977661133
    4. '(' → logprob: -10.500123977661133
    5. '("' → logprob: -10.875123977661133
    6. '("{' → logprob: -15.125123977661133
    7. '(str' → logprob: -15.250123977661133
    8. '"' → logprob: -15.500123977661133
    9. '('{}' → logprob: -15.625123977661133
    10. '(
' → logprob: -16.250123977661133

Token 731: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -4.644463479053229e-05
    2. '"' → logprob: -10.250046730041504
    3. ''{' → logprob: -11.625046730041504
    4. '{' → logprob: -13.500046730041504
    5. '("{' → logprob: -14.250046730041504
    6. ' "{' → logprob: -16.250045776367188
    7. '   ' → logprob: -18.625045776367188
    8. '("{}' → logprob: -19.625045776367188
    9. '"%' → logprob: -19.750045776367188
    10. '"${' → logprob: -19.875045776367188

Token 732: 'answer' (ID: 17021)
  Prédit: 'answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -4.723352049040841e-06
    2. ' answer' → logprob: -12.500004768371582
    3. '(answer' → logprob: -15.125004768371582
    4. ''' → logprob: -15.375004768371582
    5. '	answer' → logprob: -15.625004768371582
    6. 'ans' → logprob: -16.125003814697266
    7. '.answer' → logprob: -16.875003814697266
    8. 'min' → logprob: -17.000003814697266
    9. '{' → logprob: -17.500003814697266
    10. 'str' → logprob: -18.625003814697266

Token 733: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.496052371105179e-05
    2. '0' → logprob: -9.62509536743164
    3. '.' → logprob: -11.00009536743164
    4. ' ' → logprob: -11.62509536743164
    5. '   ' → logprob: -13.87509536743164
    6. '}' → logprob: -14.12509536743164
    7. '(' → logprob: -15.25009536743164
    8. ' [' → logprob: -15.50009536743164
    9. '1' → logprob: -15.62509536743164
    10. 't' → logprob: -16.00009536743164

Token 734: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.749814019713085e-06
    2. '[' → logprob: -12.875006675720215
    3. '1' → logprob: -13.250006675720215
    4. ' ' → logprob: -14.375006675720215
    5. '   ' → logprob: -14.500006675720215
    6. '
' → logprob: -15.625006675720215
    7. '-' → logprob: -15.750006675720215
    8. '```' → logprob: -15.812506675720215
    9. '}' → logprob: -16.37500762939453
    10. '00' → logprob: -16.62500762939453

Token 735: ']}' (ID: 28000)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -1.7954958821064793e-05
    2. ' }' → logprob: -11.125018119812012
    3. '[' → logprob: -13.500018119812012
    4. '}{' → logprob: -13.750018119812012
    5. '},{' → logprob: -15.500018119812012
    6. '()}' → logprob: -15.875018119812012
    7. '{' → logprob: -16.250017166137695
    8. '"' → logprob: -16.750017166137695
    9. '}}' → logprob: -16.875017166137695
    10. ')}' → logprob: -17.000017166137695

Token 736: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.017729124054312706
    2. '}' → logprob: -4.64272928237915
    3. '{' → logprob: -5.01772928237915
    4. '"' → logprob: -6.64272928237915
    5. ' ' → logprob: -11.767728805541992
    6. ' }' → logprob: -12.767728805541992
    7. ' "' → logprob: -13.142728805541992
    8. '[' → logprob: -14.017728805541992
    9. ')' → logprob: -14.017728805541992
    10. ' ' → logprob: -14.267728805541992

Token 737: 'answer' (ID: 17021)
  Prédit: 'answer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'answer' → logprob: -3.7697225252486533e-06
    2. ' answer' → logprob: -12.500003814697266
    3. '	answer' → logprob: -17.500003814697266
    4. '(answer' → logprob: -18.250003814697266
    5. '.answer' → logprob: -18.375003814697266
    6. '{' → logprob: -20.375003814697266
    7. 'ans' → logprob: -22.250003814697266
    8. '_answer' → logprob: -22.375003814697266
    9. 'answers' → logprob: -22.500003814697266
    10. '
' → logprob: -22.500003814697266

Token 738: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0280383548888494e-06
    2. '.' → logprob: -15.000000953674316
    3. '1' → logprob: -15.250000953674316
    4. 'answer' → logprob: -15.625000953674316
    5. '```' → logprob: -16.500001907348633
    6. '   ' → logprob: -16.625001907348633
    7. '{' → logprob: -16.875001907348633
    8. '}' → logprob: -17.625001907348633
    9. ']' → logprob: -17.750001907348633
    10. '-' → logprob: -18.000001907348633

Token 739: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. 'answer' → logprob: -16.125
    3. ' ' → logprob: -16.25
    4. '[' → logprob: -17.125
    5. '   ' → logprob: -18.5
    6. '```' → logprob: -19.0
    7. '  ' → logprob: -20.375
    8. '
' → logprob: -20.375
    9. '１' → logprob: -20.875
    10. ')' → logprob: -21.125

Token 740: ']' (ID: 60)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}")' → logprob: -8.244413766078651e-05
    2. '}")
' → logprob: -9.500082015991211
    3. '")' → logprob: -12.750082015991211
    4. '}")

' → logprob: -13.375082015991211
    5. '}"' → logprob: -13.500082015991211
    6. '}' → logprob: -13.875082015991211
    7. '}")
' → logprob: -15.375082015991211
    8. ' }' → logprob: -15.500082015991211
    9. '})' → logprob: -15.625082015991211
    10. ')")' → logprob: -16.12508201599121

Token 741: '}")
' (ID: 23577)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0017233692342415452
    2. '}")' → logprob: -7.001723289489746
    3. '")
' → logprob: -7.126723289489746
    4. '}")
' → logprob: -12.501723289489746
    5. '}' → logprob: -13.001723289489746
    6. '")
' → logprob: -13.626723289489746
    7. ')")' → logprob: -15.001723289489746
    8. ')' → logprob: -15.251723289489746
    9. '")}' → logprob: -15.626723289489746
    10. '"' → logprob: -16.251724243164062

Token 742: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008488174062222242
    2. 'return' → logprob: -7.125848770141602
    3. '
' → logprob: -10.625848770141602
    4. ' return' → logprob: -11.250848770141602
    5. '   ' → logprob: -12.500848770141602
    6. '	return' → logprob: -13.500848770141602
    7. '```' → logprob: -13.875848770141602
    8. '	' → logprob: -14.750848770141602
    9. '           ' → logprob: -15.250848770141602
    10. '<|end|>' → logprob: -16.3758487701416

Token 743: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.38853219151496887
    2. '       ' → logprob: -1.1385321617126465
    3. ' return' → logprob: -6.8885321617126465
    4. '   ' → logprob: -7.5135321617126465
    5. '
' → logprob: -9.388532638549805
    6. '	return' → logprob: -11.513532638549805
    7. '```' → logprob: -15.388532638549805
    8. '	' → logprob: -15.763532638549805
    9. '           ' → logprob: -15.888532638549805
    10. '        
' → logprob: -16.263532638549805

Token 744: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.0015023599844425917
    2. ' results' → logprob: -6.501502513885498
    3. '	results' → logprob: -17.501502990722656
    4. '(results' → logprob: -18.751502990722656
    5. '[' → logprob: -19.626502990722656
    6. '.results' → logprob: -19.751502990722656
    7. '   ' → logprob: -20.376502990722656
    8. 'result' → logprob: -20.626502990722656
    9. '[]' → logprob: -22.251502990722656
    10. '
' → logprob: -22.376502990722656

Token 745: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.25214189291000366
    2. 'def' → logprob: -1.5021419525146484
    3. ' if' → logprob: -9.377141952514648
    4. '```' → logprob: -9.877141952514648
    5. 'import' → logprob: -10.127141952514648
    6. '#' → logprob: -10.752141952514648
    7. '
' → logprob: -11.502141952514648
    8. '<|end|>' → logprob: -12.752141952514648
    9. '#!/' → logprob: -14.252141952514648
    10. 'from' → logprob: -14.627141952514648

Token 746: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5760783553123474
    2. 'if' → logprob: -0.8260783553123474
    3. '```' → logprob: -9.701078414916992
    4. ' if' → logprob: -10.451078414916992
    5. '#' → logprob: -10.576078414916992
    6. 'import' → logprob: -10.701078414916992
    7. 'from' → logprob: -15.201078414916992
    8. ' def' → logprob: -15.701078414916992
    9. '#!/' → logprob: -16.576078414916992
    10. '<|end|>' → logprob: -16.826078414916992

Token 747: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0031777136027812958
    2. 'main' → logprob: -5.753177642822266
    3. ' read' → logprob: -18.128177642822266
    4. '	main' → logprob: -18.253177642822266
    5. ' run' → logprob: -18.378177642822266
    6. ' solve' → logprob: -20.128177642822266
    7. ' parse' → logprob: -20.253177642822266
    8. '_main' → logprob: -20.378177642822266
    9. 'def' → logprob: -21.128177642822266
    10. 'read' → logprob: -21.628177642822266

Token 748: '()' (ID: 416)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.306760805164231e-05
    2. '():
' → logprob: -11.87501335144043
    3. ' ():' → logprob: -12.50001335144043
    4. '()' → logprob: -13.00001335144043
    5. '():
' → logprob: -18.00001335144043
    6. '(' → logprob: -19.12501335144043
    7. '():

' → logprob: -19.12501335144043
    8. '()->' → logprob: -19.50001335144043
    9. '()>' → logprob: -19.87501335144043
    10. '().' → logprob: -20.25001335144043

Token 749: ' ->' (ID: 2747)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.01437985897064209
    2. ':' → logprob: -4.264379978179932
    3. '():
' → logprob: -8.514379501342773
    4. ' ():' → logprob: -12.014379501342773
    5. '):' → logprob: -12.264379501342773
    6. '()' → logprob: -12.889379501342773
    7. ':
' → logprob: -13.514379501342773
    8. ':**' → logprob: -15.639379501342773
    9. '():
' → logprob: -15.764379501342773
    10. '：' → logprob: -15.889379501342773

Token 750: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.00010402000043541193
    2. ' None' → logprob: -9.250103950500488
    3. 'int' → logprob: -11.750103950500488
    4. '   ' → logprob: -18.750104904174805
    5. '_None' → logprob: -21.000104904174805
    6. '(None' → logprob: -21.375104904174805
    7. ' ' → logprob: -21.500104904174805
    8. 'No' → logprob: -21.625104904174805
    9. '  ' → logprob: -21.875104904174805
    10. 'none' → logprob: -22.125104904174805

Token 751: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5340758562088013
    2. '():' → logprob: -0.9090758562088013
    3. '():
' → logprob: -5.159075736999512
    4. ':
' → logprob: -5.284075736999512
    5. '):' → logprob: -10.534075736999512
    6. '()' → logprob: -10.659075736999512
    7. '   ' → logprob: -12.409075736999512
    8. '):
' → logprob: -12.534075736999512
    9. ':def' → logprob: -12.659075736999512
    10. '{' → logprob: -12.784075736999512

Token 752: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3388962745666504
    2. 'import' → logprob: -1.3388962745666504
    3. ' input' → logprob: -1.5888962745666504
    4. ' import' → logprob: -1.8388962745666504
    5. 'input' → logprob: -2.2138962745666504
    6. ' lines' → logprob: -5.83889627456665
    7. 'lines' → logprob: -8.088895797729492
    8. '```' → logprob: -10.213895797729492
    9. '	import' → logprob: -11.088895797729492
    10. ' line' → logprob: -12.088895797729492

Token 753: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.03895961120724678
    2. ' input' → logprob: -3.538959503173828
    3. 'lines' → logprob: -4.788959503173828
    4. ' lines' → logprob: -7.663959503173828
    5. 'import' → logprob: -8.288959503173828
    6. '   ' → logprob: -9.038959503173828
    7. ' import' → logprob: -12.788959503173828
    8. 'inputs' → logprob: -12.913959503173828
    9. 'data' → logprob: -15.163959503173828
    10. '	input' → logprob: -15.288959503173828

Token 754: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0007952123996801674
    2. '_data' → logprob: -7.500795364379883
    3. '_' → logprob: -9.125795364379883
    4. '_text' → logprob: -9.500795364379883
    5. '_line' → logprob: -9.875795364379883
    6. ' =' → logprob: -13.000795364379883
    7. 'lines' → logprob: -13.375795364379883
    8. '_=' → logprob: -14.000795364379883
    9. '_str' → logprob: -14.375795364379883
    10. '_input' → logprob: -14.875795364379883

Token 755: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2016327977180481
    2. ' =' → logprob: -1.7016327381134033
    3. '=sys' → logprob: -8.451632499694824
    4. '   ' → logprob: -12.201632499694824
    5. '=
' → logprob: -15.201632499694824
    6. '=[]' → logprob: -15.826632499694824
    7. '=input' → logprob: -16.07663345336914
    8. ' =
' → logprob: -16.32663345336914
    9. '＝' → logprob: -16.95163345336914
    10. '=subprocess' → logprob: -17.07663345336914

Token 756: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0006120019243098795
    2. ' sys' → logprob: -7.500611782073975
    3. '[' → logprob: -9.750612258911133
    4. ' [' → logprob: -14.625612258911133
    5. '(sys' → logprob: -16.125612258911133
    6. '	sys' → logprob: -16.125612258911133
    7. '=sys' → logprob: -16.875612258911133
    8. '[]
' → logprob: -18.125612258911133
    9. '[s' → logprob: -18.375612258911133
    10. '[]' → logprob: -18.500612258911133

Token 757: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.0325924449716695e-05
    2. '.' → logprob: -11.87501049041748
    3. '.argv' → logprob: -13.62501049041748
    4. '.stdout' → logprob: -13.75001049041748
    5. '.std' → logprob: -14.50001049041748
    6. 'stdin' → logprob: -14.75001049041748
    7. ' .' → logprob: -17.500009536743164
    8. '.stderr' → logprob: -17.500009536743164
    9. '(stdin' → logprob: -17.500009536743164
    10. '.\' → logprob: -18.000009536743164

Token 758: '.read' (ID: 7211)
  Prédit: '.readlines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readlines' → logprob: -0.012666095979511738
    2. '.read' → logprob: -4.51266622543335
    3. 'read' → logprob: -6.76266622543335
    4. '.readline' → logprob: -7.76266622543335
    5. '.' → logprob: -10.262665748596191
    6. '_read' → logprob: -15.512665748596191
    7. ' .' → logprob: -15.762665748596191
    8. '```' → logprob: -16.137666702270508
    9. '   ' → logprob: -17.387666702270508
    10. ' read' → logprob: -17.637666702270508

Token 759: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0014346358366310596
    2. '()' → logprob: -6.626434803009033
    3. 'lines' → logprob: -9.251434326171875
    4. '_lines' → logprob: -12.001434326171875
    5. '()
' → logprob: -12.501434326171875
    6. 'line' → logprob: -13.626434326171875
    7. '()

' → logprob: -15.126434326171875
    8. '(' → logprob: -15.126434326171875
    9. 'split' → logprob: -15.126434326171875
    10. ' lines' → logprob: -15.376434326171875

Token 760: 'strip' (ID: 23905)
  Prédit: 'split'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.011296318843960762
    2. 'strip' → logprob: -4.511296272277832
    3. 'decode' → logprob: -9.011296272277832
    4. 'read' → logprob: -9.136296272277832
    5. 'lines' → logprob: -11.136296272277832
    6. 'rstrip' → logprob: -12.636296272277832
    7. '(split' → logprob: -14.511296272277832
    8. ' split' → logprob: -15.386296272277832
    9. 'spl' → logprob: -16.88629722595215
    10. '```' → logprob: -16.88629722595215

Token 761: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005013240152038634
    2. '()' → logprob: -7.6255011558532715
    3. '()
' → logprob: -11.62550163269043
    4. '('\' → logprob: -12.62550163269043
    5. 'split' → logprob: -14.37550163269043
    6. '()\' → logprob: -15.87550163269043
    7. '.split' → logprob: -16.62550163269043
    8. ' ().' → logprob: -16.62550163269043
    9. '()

' → logprob: -16.75050163269043
    10. '('' → logprob: -16.87550163269043

Token 762: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: 0.0
    2. ' split' → logprob: -17.5
    3. '(split' → logprob: -17.875
    4. 'spl' → logprob: -19.875
    5. 'sp' → logprob: -22.125
    6. '```' → logprob: -22.5
    7. '.split' → logprob: -22.875
    8. 'rstrip' → logprob: -23.375
    9. 'lines' → logprob: -23.5
    10. 'decode' → logprob: -23.5

Token 763: '('\' (ID: 24345)
  Prédit: '('\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.004421928431838751
    2. 'lines' → logprob: -5.754421710968018
    3. '("\' → logprob: -6.754421710968018
    4. ''\' → logprob: -9.754422187805176
    5. '()' → logprob: -10.879422187805176
    6. '"\' → logprob: -14.879422187805176
    7. '('' → logprob: -15.254422187805176
    8. '()\' → logprob: -15.879422187805176
    9. '(' → logprob: -16.25442123413086
    10. '()
' → logprob: -17.50442123413086

Token 764: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.5094070477061905e-05
    2. '\n' → logprob: -11.125015258789062
    3. '
' → logprob: -15.875015258789062
    4. 'newline' → logprob: -16.625015258789062
    5. 'lines' → logprob: -18.125015258789062
    6. '\' → logprob: -18.750015258789062
    7. ''\' → logprob: -18.875015258789062
    8. 'nl' → logprob: -19.625015258789062
    9. 'ndef' → logprob: -19.875015258789062
    10. '	n' → logprob: -20.000015258789062

Token 765: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.001302618533372879
    2. ')' → logprob: -6.751302719116211
    3. '')
' → logprob: -9.001302719116211
    4. '")' → logprob: -11.751302719116211
    5. '')
' → logprob: -14.126302719116211
    6. '   ' → logprob: -15.751302719116211
    7. ''' → logprob: -15.876302719116211
    8. '')"' → logprob: -16.12630271911621
    9. ']' → logprob: -16.75130271911621
    10. '')

' → logprob: -17.12630271911621

Token 766: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4945557713508606
    2. 'parser' → logprob: -0.9945557713508606
    3. ' parser' → logprob: -3.994555711746216
    4. 'datasets' → logprob: -6.369555950164795
    5. 'dataset' → logprob: -10.494555473327637
    6. 'for' → logprob: -10.619555473327637
    7. '	parser' → logprob: -10.994555473327637
    8. ' datasets' → logprob: -11.369555473327637
    9. 'data' → logprob: -11.369555473327637
    10. 'input' → logprob: -11.494555473327637

Token 767: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' (adapté à ' parser') → logprob: -0.0003362966235727072
    2. 'datasets' → logprob: -8.000336647033691
    3. 'dataset' → logprob: -14.750336647033691
    4. ' parser' → logprob: -14.875336647033691
    5. 'input' → logprob: -17.750335693359375
    6. 'for' → logprob: -18.000335693359375
    7. '   ' → logprob: -18.125335693359375
    8. '
' → logprob: -18.875335693359375
    9. 'data' → logprob: -19.000335693359375
    10. 'inputs' → logprob: -19.500335693359375

Token 768: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759403705596924
    2. '=' → logprob: -0.8259403705596924
    3. '<|end|>' → logprob: -15.200940132141113
    4. 'parser' → logprob: -16.57594108581543
    5. '=
' → logprob: -16.57594108581543
    6. '(' → logprob: -16.70094108581543
    7. ' ' → logprob: -16.95094108581543
    8. '```' → logprob: -16.95094108581543
    9. '   ' → logprob: -17.20094108581543
    10. '=parse' → logprob: -17.45094108581543

Token 769: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -1.9361264946837764e-07
    2. ' Input' → logprob: -15.75
    3. '   ' → logprob: -24.0
    4. 'input' → logprob: -24.625
    5. '	Input' → logprob: -25.25
    6. '<Input' → logprob: -25.75
    7. ' ' → logprob: -25.875
    8. '_input' → logprob: -26.375
    9. '
' → logprob: -27.125
    10. '_Input' → logprob: -27.375

Token 770: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: 0.0
    2. 'parser' → logprob: -18.625
    3. 'Parse' → logprob: -21.375
    4. '_parser' → logprob: -21.5
    5. 'Parsed' → logprob: -21.875
    6. ' Parser' → logprob: -22.0
    7. 'Processor' → logprob: -23.25
    8. '(Parser' → logprob: -23.25
    9. 'Input' → logprob: -23.5
    10. '-parser' → logprob: -23.75

Token 771: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -8.64970643306151e-05
    2. 'input' → logprob: -9.375086784362793
    3. '[input' → logprob: -14.750086784362793
    4. '(lines' → logprob: -15.250086784362793
    5. '(parser' → logprob: -15.375086784362793
    6. '(iter' → logprob: -15.375086784362793
    7. '(' → logprob: -15.375086784362793
    8. ' (' → logprob: -15.875086784362793
    9. '(
' → logprob: -15.875086784362793
    10. '(inputs' → logprob: -17.375085830688477

Token 772: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -8.77627644513268e-06
    2. 'Lines' → logprob: -12.875008583068848
    3. '=' → logprob: -13.500008583068848
    4. 'lines' → logprob: -13.750008583068848
    5. '```' → logprob: -13.875008583068848
    6. '(lines' → logprob: -14.375008583068848
    7. '=_' → logprob: -14.375008583068848
    8. '_parser' → logprob: -15.125008583068848
    9. 's' → logprob: -15.375008583068848
    10. 'parser' → logprob: -15.750008583068848

Token 773: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01760135032236576
    2. '   ' → logprob: -4.142601490020752
    3. '(parser' → logprob: -7.142601490020752
    4. ',' → logprob: -7.642601490020752
    5. '(' → logprob: -9.392601013183594
    6. 'parser' → logprob: -9.767601013183594
    7. '(Parser' → logprob: -10.142601013183594
    8. '<|end|>' → logprob: -10.517601013183594
    9. '<|end|>' → logprob: -10.642601013183594
    10. '()' → logprob: -11.767601013183594

Token 774: '   ' (ID: 271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.27251163125038147
    2. '   ' → logprob: -1.522511601448059
    3. ' solver' → logprob: -3.8975117206573486
    4. 's' → logprob: -10.39751148223877
    5. 'sol' → logprob: -11.14751148223877
    6. 'solution' → logprob: -11.77251148223877
    7. '_solver' → logprob: -12.27251148223877
    8. 'for' → logprob: -12.27251148223877
    9. 'results' → logprob: -12.64751148223877
    10. ' for' → logprob: -12.77251148223877

Token 775: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -7.32654589228332e-05
    2. '   ' → logprob: -9.750073432922363
    3. 'datasets' → logprob: -11.875073432922363
    4. ' solver' → logprob: -11.875073432922363
    5. 'solution' → logprob: -14.750073432922363
    6. 'sol' → logprob: -15.125073432922363
    7. '    
' → logprob: -16.250072479248047
    8. 's' → logprob: -16.375072479248047
    9. 'dataset' → logprob: -17.375072479248047
    10. 'resolver' → logprob: -17.625072479248047

Token 776: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.038043901324272156
    2. '=' → logprob: -3.288043975830078
    3. '   ' → logprob: -13.038043975830078
    4. '=s' → logprob: -16.038043975830078
    5. '.' → logprob: -17.038043975830078
    6. 's' → logprob: -17.163043975830078
    7. '    ' → logprob: -17.663043975830078
    8. '_solver' → logprob: -17.788043975830078
    9. '.solve' → logprob: -17.913043975830078
    10. '＝' → logprob: -18.038043975830078

Token 777: ' Equal' (ID: 67921)
  Prédit: 'Equal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Equal' → logprob: -0.00861468818038702
    2. ' Equal' → logprob: -4.758614540100098
    3. ' equal' → logprob: -16.758615493774414
    4. '(Equal' → logprob: -17.633615493774414
    5. 'Equality' → logprob: -18.133615493774414
    6. 'equal' → logprob: -18.633615493774414
    7. 'Equals' → logprob: -18.633615493774414
    8. '   ' → logprob: -19.008615493774414
    9. '=' → logprob: -19.883615493774414
    10. '_equal' → logprob: -20.508615493774414

Token 778: 'Total' (ID: 8270)
  Prédit: 'Total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Total' → logprob: -3.128163257315464e-07
    2. ' Total' → logprob: -16.0
    3. 'total' → logprob: -17.125
    4. '_total' → logprob: -17.5
    5. '_Total' → logprob: -18.75
    6. '>Total' → logprob: -18.875
    7. '   ' → logprob: -19.0
    8. 'TOTAL' → logprob: -20.0
    9. ' total' → logprob: -20.25
    10. 'Totals' → logprob: -20.625

Token 779: 'Score' (ID: 12357)
  Prédit: 'Score'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Score' → logprob: -8.061054359131958e-06
    2. 'Solver' → logprob: -11.750007629394531
    3. 'score' → logprob: -15.625007629394531
    4. ' Score' → logprob: -17.37500762939453
    5. 'Scores' → logprob: -17.37500762939453
    6. '_score' → logprob: -17.75000762939453
    7. '_SCORE' → logprob: -18.50000762939453
    8. 'solver' → logprob: -20.75000762939453
    9. '
' → logprob: -21.50000762939453
    10. '=' → logprob: -21.50000762939453

Token 780: 'Solver' (ID: 70484)
  Prédit: 'Solver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Solver' → logprob: -1.2113979209971149e-05
    2. 'solver' → logprob: -11.500012397766113
    3. 'Score' → logprob: -13.375012397766113
    4. '_solver' → logprob: -15.625012397766113
    5. ' Solver' → logprob: -17.000011444091797
    6. ' solver' → logprob: -17.375011444091797
    7. 'Scores' → logprob: -17.625011444091797
    8. '   ' → logprob: -17.750011444091797
    9. 'Decision' → logprob: -18.375011444091797
    10. 'olver' → logprob: -19.500011444091797

Token 781: '(iter' (ID: 61014)
  Prédit: '(parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parser' → logprob: -0.12695330381393433
    2. 'parser' → logprob: -2.126953363418579
    3. ' parser' → logprob: -10.751953125
    4. '(' → logprob: -13.751953125
    5. '	parser' → logprob: -13.876953125
    6. '   ' → logprob: -14.001953125
    7. '.parser' → logprob: -15.126953125
    8. '(Parser' → logprob: -15.626953125
    9. 'Parser' → logprob: -16.001953125
    10. '(iter' → logprob: -16.126953125

Token 782: '(parser' (ID: 82535)
  Prédit: '(parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parser' → logprob: -2.1888679839321412e-05
    2. 'parser' → logprob: -10.750021934509277
    3. '	parser' → logprob: -15.875021934509277
    4. '(parse' → logprob: -16.50002098083496
    5. ')' → logprob: -16.62502098083496
    6. '(parsed' → logprob: -17.25002098083496
    7. '((' → logprob: -17.25002098083496
    8. '/parser' → logprob: -17.37502098083496
    9. '
' → logprob: -18.12502098083496
    10. '(Parser' → logprob: -18.62502098083496

Token 783: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02618127129971981
    2. '))' → logprob: -3.776181221008301
    3. ')
' → logprob: -6.026181221008301
    4. '())' → logprob: -8.2761812210083
    5. '))
' → logprob: -8.5261812210083
    6. '   ' → logprob: -10.0261812210083
    7. '())
' → logprob: -11.5261812210083
    8. ')))' → logprob: -12.7761812210083
    9. '()))' → logprob: -12.7761812210083
    10. '()' → logprob: -13.2761812210083

Token 784: '   ' (ID: 271)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' → logprob: -0.2122555524110794
    2. '   ' → logprob: -1.712255597114563
    3. 'for' → logprob: -4.837255477905273
    4. ' results' → logprob: -6.337255477905273
    5. 'result' → logprob: -7.462255477905273
    6. 'output' → logprob: -8.462255477905273
    7. '```' → logprob: -9.087255477905273
    8. ' for' → logprob: -9.462255477905273
    9. 'outputs' → logprob: -9.462255477905273
    10. '	results' → logprob: -11.337255477905273

Token 785: ' results' (ID: 4376)
  Prédit: 'results'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'results' (adapté à ' results') → logprob: -0.0002870801545213908
    2. 'for' → logprob: -8.250287055969238
    3. ' results' → logprob: -11.500287055969238
    4. 'result' → logprob: -11.500287055969238
    5. 'output' → logprob: -13.000287055969238
    6. 'outputs' → logprob: -13.500287055969238
    7. '   ' → logprob: -13.750287055969238
    8. 'answers' → logprob: -14.125287055969238
    9. 'print' → logprob: -17.000288009643555
    10. '```' → logprob: -17.000288009643555

Token 786: ' =' (ID: 314)
  Prédit: '.extend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.32541945576667786
    2. '.append' → logprob: -1.4504194259643555
    3. '=' → logprob: -4.0754194259643555
    4. '.' → logprob: -4.0754194259643555
    5. ' =' → logprob: -4.8254194259643555
    6. '   ' → logprob: -7.7004194259643555
    7. '.=' → logprob: -8.450419425964355
    8. '=[]' → logprob: -8.700419425964355
    9. '<|end|>' → logprob: -8.825419425964355
    10. ' +=' → logprob: -10.075419425964355

Token 787: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.00861456897109747
    2. ' solver' → logprob: -4.758614540100098
    3. 'sol' → logprob: -18.383615493774414
    4. '   ' → logprob: -18.883615493774414
    5. '_solver' → logprob: -19.633615493774414
    6. '```' → logprob: -21.633615493774414
    7. '(s' → logprob: -22.633615493774414
    8. 'Solver' → logprob: -23.008615493774414
    9. '	s' → logprob: -23.008615493774414
    10. ' ' → logprob: -23.133615493774414

Token 788: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -2.339278580620885e-06
    2. '.' → logprob: -13.250001907348633
    3. 'solve' → logprob: -15.375001907348633
    4. '.results' → logprob: -16.000001907348633
    5. ' .' → logprob: -16.000001907348633
    6. '.sol' → logprob: -16.625001907348633
    7. '.s' → logprob: -18.625001907348633
    8. '.resolve' → logprob: -19.500001907348633
    9. '.save' → logprob: -19.875001907348633
    10. '.best' → logprob: -20.000001907348633

Token 789: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02980232611298561
    2. 'for' → logprob: -3.5298023223876953
    3. ' for' → logprob: -9.904802322387695
    4. '```' → logprob: -13.654802322387695
    5. '	for' → logprob: -14.904802322387695
    6. '
' → logprob: -15.029802322387695
    7. '    
' → logprob: -16.654802322387695
    8. '       ' → logprob: -17.779802322387695
    9. 'import' → logprob: -18.529802322387695
    10. '<|end|>' → logprob: -18.779802322387695

Token 790: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2520182132720947
    2. 'for' → logprob: -1.5020182132720947
    3. ' for' → logprob: -9.377017974853516
    4. '```' → logprob: -13.127017974853516
    5. '	for' → logprob: -13.502017974853516
    6. 'print' → logprob: -14.127017974853516
    7. '    
' → logprob: -16.002017974853516
    8. '       ' → logprob: -16.127017974853516
    9. '
' → logprob: -16.502017974853516
    10. '`' → logprob: -17.252017974853516

Token 791: ' print' (ID: 2123)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0051031881012022495
    2. '   ' → logprob: -5.75510311126709
    3. 'print' (adapté à ' print') → logprob: -6.25510311126709
    4. ' for' → logprob: -12.75510311126709
    5. '```' → logprob: -16.380104064941406
    6. '	for' → logprob: -17.130104064941406
    7. '
' → logprob: -19.630104064941406
    8. '       ' → logprob: -20.255104064941406
    9. '``' → logprob: -21.505104064941406
    10. '    
' → logprob: -21.505104064941406

Token 792: '("\' (ID: 9730)
  Prédit: '('\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('\' → logprob: -0.10025788843631744
    2. '("\' → logprob: -2.3502578735351562
    3. '(*' → logprob: -10.475257873535156
    4. ''\' → logprob: -11.100257873535156
    5. '"\' → logprob: -12.225257873535156
    6. '(' → logprob: -13.225257873535156
    7. '()' → logprob: -13.975257873535156
    8. '(
' → logprob: -16.225257873535156
    9. '()
' → logprob: -16.475257873535156
    10. '\' → logprob: -16.600257873535156

Token 793: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.319370302458992e-06
    2. '
' → logprob: -12.500005722045898
    3. '\n' → logprob: -13.500005722045898
    4. 'join' → logprob: -16.5000057220459
    5. '".' → logprob: -17.8750057220459
    6. '"\' → logprob: -18.1250057220459
    7. ' n' → logprob: -19.0000057220459
    8. '"' → logprob: -19.2500057220459
    9. 'nj' → logprob: -20.7500057220459
    10. '```' → logprob: -20.7500057220459

Token 794: '".' (ID: 4050)
  Prédit: '".'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '".' → logprob: -1.6240566083070007e-06
    2. '.join' → logprob: -14.250001907348633
    3. ''.' → logprob: -15.250001907348633
    4. '\n' → logprob: -15.250001907348633
    5. '"' → logprob: -15.625001907348633
    6. '.' → logprob: -16.000001907348633
    7. 'join' → logprob: -16.250001907348633
    8. '").' → logprob: -17.625001907348633
    9. '`.' → logprob: -18.625001907348633
    10. ').' → logprob: -20.250001907348633

Token 795: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.7432603272027336e-06
    2. 'print' → logprob: -13.375001907348633
    3. 'j' → logprob: -16.000001907348633
    4. ' join' → logprob: -17.625001907348633
    5. 'jo' → logprob: -18.000001907348633
    6. '```' → logprob: -19.000001907348633
    7. '.join' → logprob: -20.625001907348633
    8. 'strip' → logprob: -21.375001907348633
    9. 'write' → logprob: -21.500001907348633
    10. '(join' → logprob: -21.750001907348633

Token 796: '(results' (ID: 42655)
  Prédit: '(results'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(results' → logprob: -0.0011706985533237457
    2. 'results' → logprob: -6.751170635223389
    3. ' results' → logprob: -15.001171112060547
    4. '	results' → logprob: -16.751171112060547
    5. '(' → logprob: -17.376171112060547
    6. 'Results' → logprob: -18.376171112060547
    7. ')' → logprob: -19.126171112060547
    8. '(result' → logprob: -19.126171112060547
    9. '.results' → logprob: -19.626171112060547
    10. '/results' → logprob: -19.626171112060547

Token 797: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.000747802434489131
    2. '))' → logprob: -7.2507476806640625
    3. '())' → logprob: -10.250747680664062
    4. '()' → logprob: -13.750747680664062
    5. ')`' → logprob: -14.875747680664062
    6. '   ' → logprob: -15.000747680664062
    7. '")' → logprob: -15.625747680664062
    8. '})' → logprob: -15.750747680664062
    9. ')
' → logprob: -15.750747680664062
    10. ' )' → logprob: -15.875747680664062

Token 798: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.5570885807392187e-05
    2. ' if' → logprob: -11.250015258789062
    3. '```' → logprob: -13.250015258789062
    4. '
' → logprob: -14.250015258789062
    5. '#' → logprob: -16.625015258789062
    6. '<|end|>' → logprob: -17.250015258789062
    7. '  
' → logprob: -18.125015258789062
    8. '#if' → logprob: -18.250015258789062
    9. '	if' → logprob: -18.500015258789062
    10. '@if' → logprob: -18.500015258789062

Token 799: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6931865215301514
    2. ' __' → logprob: -0.6931865215301514
    3. 'name' → logprob: -10.44318675994873
    4. '_name' → logprob: -12.31818675994873
    5. 'Name' → logprob: -13.06818675994873
    6. '___' → logprob: -13.69318675994873
    7. ' ' → logprob: -14.69318675994873
    8. ' name' → logprob: -14.69318675994873
    9. '```' → logprob: -14.69318675994873
    10. '/__' → logprob: -15.19318675994873

Token 800: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1430852860212326
    2. '==' → logprob: -2.143085241317749
    3. ' ==' → logprob: -4.518085479736328
    4. '=="' → logprob: -5.893085479736328
    5. '=='' → logprob: -6.643085479736328
    6. 'name' → logprob: -7.393085479736328
    7. 'if' → logprob: -9.393085479736328
    8. 'main' → logprob: -9.768085479736328
    9. '__.__' → logprob: -9.768085479736328
    10. '==
' → logprob: -9.893085479736328

Token 801: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.8889261304575484e-06
    2. '__.__' → logprob: -12.875003814697266
    3. '==' → logprob: -13.750003814697266
    4. '__.' → logprob: -16.125003814697266
    5. '__
' → logprob: -16.625003814697266
    6. '___' → logprob: -17.500003814697266
    7. '__('' → logprob: -17.500003814697266
    8. '__["' → logprob: -17.750003814697266
    9. '____' → logprob: -18.125003814697266
    10. 'name' → logprob: -18.250003814697266

Token 802: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.10351639986038208
    2. '==' → logprob: -2.3535163402557373
    3. ' ==' → logprob: -6.228516578674316
    4. '=="' → logprob: -7.103516578674316
    5. '=='' → logprob: -7.603516578674316
    6. '__.__' → logprob: -12.228516578674316
    7. '=' → logprob: -13.228516578674316
    8. '==
' → logprob: -13.728516578674316
    9. '_' → logprob: -14.353516578674316
    10. '===' → logprob: -14.478516578674316

Token 803: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.07891006022691727
    2. ''' → logprob: -2.5789101123809814
    3. '__' → logprob: -10.953909873962402
    4. ' "__' → logprob: -13.203909873962402
    5. '"name' → logprob: -15.203909873962402
    6. ' '__' → logprob: -15.828909873962402
    7. '"user' → logprob: -15.953909873962402
    8. '"class' → logprob: -16.57891082763672
    9. ''name' → logprob: -16.57891082763672
    10. '   ' → logprob: -17.20391082763672

Token 804: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0028928478714078665
    2. '__' → logprob: -5.877892971038818
    3. 'name' → logprob: -9.62789249420166
    4. 'built' → logprob: -12.12789249420166
    5. '"' → logprob: -12.50289249420166
    6. '__":
' → logprob: -12.87789249420166
    7. 'python' → logprob: -13.00289249420166
    8. 'py' → logprob: -13.25289249420166
    9. ''' → logprob: -13.25289249420166
    10. '```' → logprob: -14.00289249420166

Token 805: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.023749446496367455
    2. '__' → logprob: -3.773749351501465
    3. '__':
' → logprob: -7.648749351501465
    4. '__.' → logprob: -11.273749351501465
    5. '__["' → logprob: -12.148749351501465
    6. '__.__' → logprob: -12.523749351501465
    7. '__
' → logprob: -12.773749351501465
    8. '__
' → logprob: -13.773749351501465
    9. '.' → logprob: -14.398749351501465
    10. '__:' → logprob: -15.398749351501465

Token 806: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.0325924449716695e-05
    2. '__' → logprob: -11.62501049041748
    3. ' main' → logprob: -13.87501049041748
    4. '   ' → logprob: -15.12501049041748
    5. '	main' → logprob: -16.000009536743164
    6. '_main' → logprob: -17.375009536743164
    7. '
' → logprob: -18.875009536743164
    8. '    
' → logprob: -19.875009536743164
    9. '(main' → logprob: -20.000009536743164
    10. '____' → logprob: -20.625009536743164

Token 807: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.5
    3. '	main' → logprob: -20.25
    4. '   ' → logprob: -22.5
    5. '_main' → logprob: -25.375
    6. '.main' → logprob: -25.5
    7. '(main' → logprob: -25.625
    8. 'import' → logprob: -27.75
    9. '
' → logprob: -28.25
    10. '__' → logprob: -29.125

Token 808: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 806
Tokens correctement prédits (1ère position, stricte): 381
Tokens correctement prédits (1ère position, avec adaptation): 428
Tokens correctement prédits (top 10): 724
Précision stricte (1ère position): 47.27%
Précision adaptée (1ère position): 53.10%
Précision (top 10): 89.83%
================================================================================
