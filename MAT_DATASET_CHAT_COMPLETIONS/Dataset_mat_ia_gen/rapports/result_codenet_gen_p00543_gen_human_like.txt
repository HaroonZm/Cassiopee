================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:15:18
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N, M = map(int, input().split())
A = [int(input()) for _ in range(N)]

for k in range(1, M + 1):
    for i in range(N - 1):
        if A[i] % k > A[i + 1] % k:
            A[i], A[i + 1] = A[i + 1], A[i]

for a in A:
    print(a)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' M' (ID: 391)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023500170558691025
    2. ' =' → logprob: -4.398499965667725
    3. ',' → logprob: -4.523499965667725
    4. ';' → logprob: -10.898500442504883
    5. '```' → logprob: -11.148500442504883
    6. ')' → logprob: -11.398500442504883
    7. '.' → logprob: -11.773500442504883
    8. '#' → logprob: -12.398500442504883
    9. '[' → logprob: -12.398500442504883
    10. ''' → logprob: -12.523500442504883

Token 4: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.25426819920539856
    2. 'map' → logprob: -2.379268169403076
    3. ' ' → logprob: -2.879268169403076
    4. ' input' → logprob: -3.379268169403076
    5. '10' → logprob: -3.879268169403076
    6. 'input' → logprob: -4.254268169403076
    7. '0' → logprob: -6.129268169403076
    8. ' int' → logprob: -6.504268169403076
    9. ' list' → logprob: -7.254268169403076
    10. 'int' → logprob: -7.379268169403076

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.012351298704743385
    2. '(lambda' → logprob: -4.6373515129089355
    3. '```' → logprob: -6.7623515129089355
    4. '<|end|>' → logprob: -7.8873515129089355
    5. '(user' → logprob: -8.512351036071777
    6. '(int' → logprob: -8.762351036071777
    7. '(
' → logprob: -9.637351036071777
    8. ')' → logprob: -9.762351036071777
    9. '(token' → logprob: -9.762351036071777
    10. '(input' → logprob: -10.262351036071777

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.07830429822206497
    2. '(' → logprob: -3.3283042907714844
    3. ')' → logprob: -3.3283042907714844
    4. '(int' → logprob: -6.578304290771484
    5. 'input' → logprob: -7.203304290771484
    6. '(str' → logprob: -7.828304290771484
    7. '(user' → logprob: -8.578304290771484
    8. '```' → logprob: -8.703304290771484
    9. '`)' → logprob: -9.203304290771484
    10. '`' → logprob: -9.578304290771484

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.2519577145576477
    2. ' input' → logprob: -1.501957654953003
    3. '(input' → logprob: -10.501957893371582
    4. ')' → logprob: -14.376957893371582
    5. ',input' → logprob: -15.126957893371582
    6. '<input' → logprob: -16.751956939697266
    7. '=input' → logprob: -17.001956939697266
    8. ' ' → logprob: -17.376956939697266
    9. '```' → logprob: -17.501956939697266
    10. '[input' → logprob: -17.501956939697266

Token 8: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.709873378276825
    2. '())' → logprob: -0.959873378276825
    3. ')' → logprob: -2.5848734378814697
    4. '('' → logprob: -3.4598734378814697
    5. '(' → logprob: -4.834873199462891
    6. '(()' → logprob: -6.334873199462891
    7. '`()' → logprob: -6.334873199462891
    8. '(""))' → logprob: -6.459873199462891
    9. '().' → logprob: -6.834873199462891
    10. '("")' → logprob: -7.209873199462891

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001980856526643038
    2. 'strip' → logprob: -6.251980781555176
    3. ')' → logprob: -10.751980781555176
    4. 'rstrip' → logprob: -11.126980781555176
    5. 'read' → logprob: -11.376980781555176
    6. ' split' → logprob: -12.501980781555176
    7. 'spl' → logprob: -14.876980781555176
    8. '(split' → logprob: -15.626980781555176
    9. 'startswith' → logprob: -15.751980781555176
    10. 'replace' → logprob: -15.876980781555176

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030370978638529778
    2. '())' → logprob: -3.6553709506988525
    3. '))' → logprob: -5.780371189117432
    4. '()' → logprob: -7.655371189117432
    5. '(' → logprob: -8.280370712280273
    6. '`)' → logprob: -8.655370712280273
    7. '()))' → logprob: -10.655370712280273
    8. ')`' → logprob: -11.280370712280273
    9. '')' → logprob: -11.905370712280273
    10. '('' → logprob: -12.155370712280273

Token 11: 'A' (ID: 32)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1175733357667923
    2. 'for' → logprob: -3.4925732612609863
    3. '`' → logprob: -4.367573261260986
    4. 'x' → logprob: -4.617573261260986
    5. '\n' → logprob: -4.617573261260986
    6. '#' → logprob: -4.617573261260986
    7. ',' → logprob: -4.992573261260986
    8. '```' → logprob: -5.367573261260986
    9. '.' → logprob: -5.742573261260986
    10. 'n' → logprob: -5.742573261260986

Token 12: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001801438513211906
    2. '[A' → logprob: -7.626801490783691
    3. '[]' → logprob: -7.751801490783691
    4. '[i' → logprob: -8.251801490783691
    5. '.' → logprob: -8.626801490783691
    6. '\[' → logprob: -9.251801490783691
    7. '_' → logprob: -9.626801490783691
    8. '[:]' → logprob: -9.751801490783691
    9. 's' → logprob: -10.376801490783691
    10. '[a' → logprob: -10.626801490783691

Token 13: ' [' (ID: 723)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.35689806938171387
    2. 'list' → logprob: -1.4818980693817139
    3. ' []' → logprob: -3.356898069381714
    4. '[]' → logprob: -3.981898069381714
    5. ' [' → logprob: -4.481898307800293
    6. '[' → logprob: -4.856898307800293
    7. '[list' → logprob: -8.481898307800293
    8. 'input' → logprob: -10.231898307800293
    9. '[input' → logprob: -10.481898307800293
    10. ' input' → logprob: -10.481898307800293

Token 14: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0026974014472216368
    2. ' int' → logprob: -6.502697467803955
    3. '0' → logprob: -6.877697467803955
    4. 'map' → logprob: -9.252696990966797
    5. ']int' → logprob: -10.127696990966797
    6. ']' → logprob: -11.502696990966797
    7. '(int' → logprob: -11.627696990966797
    8. '*' → logprob: -13.002696990966797
    9. ')' → logprob: -13.502696990966797
    10. ',int' → logprob: -14.127696990966797

Token 15: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.23190400004386902
    2. '(input' → logprob: -1.8569040298461914
    3. '(x' → logprob: -3.8569040298461914
    4. '()' → logprob: -3.8569040298461914
    5. '()]' → logprob: -4.981904029846191
    6. '(token' → logprob: -7.981904029846191
    7. '(i' → logprob: -8.231904029846191
    8. '(a' → logprob: -8.356904029846191
    9. '())' → logprob: -8.606904029846191
    10. '(

' → logprob: -8.981904029846191

Token 16: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0002762326330412179
    2. '()]' → logprob: -8.500276565551758
    3. '()' → logprob: -9.875276565551758
    4. '()))' → logprob: -11.875276565551758
    5. ')' → logprob: -12.000276565551758
    6. ')]' → logprob: -12.875276565551758
    7. '()),' → logprob: -13.250276565551758
    8. '())
' → logprob: -14.000276565551758
    9. '().' → logprob: -14.125276565551758
    10. ' ())' → logprob: -14.125276565551758

Token 17: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009205694310367107
    2. ')]' → logprob: -4.7592058181762695
    3. ']' → logprob: -8.88420581817627
    4. 'for' → logprob: -9.13420581817627
    5. ' )' → logprob: -9.25920581817627
    6. ' for' → logprob: -9.38420581817627
    7. '()' → logprob: -9.50920581817627
    8. '())' → logprob: -11.13420581817627
    9. '[' → logprob: -11.25920581817627
    10. '),' → logprob: -11.50920581817627

Token 18: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.53042072057724
    2. '_' → logprob: -1.1554207801818848
    3. ' ' → logprob: -2.6554207801818848
    4. ' _' → logprob: -3.7804207801818848
    5. ' in' → logprob: -6.655420780181885
    6. '(' → logprob: -6.905420780181885
    7. ' i' → logprob: -7.405420780181885
    8. 'range' → logprob: -8.530420303344727
    9. '_range' → logprob: -9.030420303344727
    10. ' ()' → logprob: -9.155420303344727

Token 19: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5772161483764648
    2. 'range' → logprob: -0.8272161483764648
    3. ' in' → logprob: -6.952216148376465
    4. 'in' → logprob: -8.452216148376465
    5. '	range' → logprob: -9.952216148376465
    6. '(range' → logprob: -10.077216148376465
    7. '_' → logprob: -11.702216148376465
    8. '_range' → logprob: -13.452216148376465
    9. ' ' → logprob: -13.577216148376465
    10. '(' → logprob: -14.327216148376465

Token 20: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005234002135694027
    2. ' range' → logprob: -5.2552337646484375
    3. '(range' → logprob: -15.880233764648438
    4. '	range' → logprob: -16.880233764648438
    5. ' ' → logprob: -17.880233764648438
    6. '_range' → logprob: -18.630233764648438
    7. 'ange' → logprob: -18.630233764648438
    8. '.range' → logprob: -19.255233764648438
    9. '   ' → logprob: -19.380233764648438
    10. 'rang' → logprob: -19.505233764648438

Token 21: '(N' (ID: 10564)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.021275855600833893
    2. '(' → logprob: -4.021275997161865
    3. '(N' → logprob: -5.771275997161865
    4. 'M' → logprob: -12.771275520324707
    5. '(
' → logprob: -13.396275520324707
    6. ' (' → logprob: -15.521275520324707
    7. '(

' → logprob: -15.771275520324707
    8. '(n' → logprob: -15.896275520324707
    9. '(K' → logprob: -16.146276473999023
    10. ')' → logprob: -16.396276473999023

Token 22: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0011023490224033594
    2. ')' → logprob: -7.126102447509766
    3. ']' → logprob: -8.126102447509766
    4. '')]' → logprob: -14.876102447509766
    5. '])]' → logprob: -14.876102447509766
    6. ')])' → logprob: -15.001102447509766
    7. '))' → logprob: -15.251102447509766
    8. ')]
' → logprob: -15.626102447509766
    9. ')],' → logprob: -15.751102447509766
    10. ' )' → logprob: -15.751102447509766

Token 23: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9715855717658997
    2. 'A' → logprob: -1.0965855121612549
    3. 's' → logprob: -2.471585512161255
    4. '```' → logprob: -2.971585512161255
    5. 'a' → logprob: -3.721585512161255
    6. 'sum' → logprob: -4.221585750579834
    7. '[' → logprob: -4.346585750579834
    8. '\' → logprob: -4.596585750579834
    9. 'result' → logprob: -4.596585750579834
    10. 'M' → logprob: -4.721585750579834

Token 24: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.2029465138912201
    2. '_' → logprob: -1.9529465436935425
    3. ' _' → logprob: -3.202946424484253
    4. 'i' → logprob: -7.327946662902832
    5. ' ' → logprob: -7.952946662902832
    6. ' a' → logprob: -9.827946662902832
    7. '_i' → logprob: -10.452946662902832
    8. ' x' → logprob: -10.577946662902832
    9. ' ' → logprob: -10.952946662902832
    10. ' I' → logprob: -11.577946662902832

Token 25: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0033986021298915148
    2. 'in' → logprob: -5.878398418426514
    3. ' ' → logprob: -7.628398418426514
    4. '  ' → logprob: -10.003398895263672
    5. 'n' → logprob: -10.378398895263672
    6. ' i' → logprob: -11.378398895263672
    7. '_' → logprob: -12.503398895263672
    8. 'space' → logprob: -13.253398895263672
    9. '```' → logprob: -13.378398895263672
    10. 's' → logprob: -13.378398895263672

Token 26: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.023821620270609856
    2. 'range' → logprob: -3.7738215923309326
    3. ' A' → logprob: -7.523821830749512
    4. ' ' → logprob: -10.648821830749512
    5. 'A' → logprob: -11.898821830749512
    6. '(range' → logprob: -13.648821830749512
    7. '	range' → logprob: -14.148821830749512
    8. ' M' → logprob: -14.648821830749512
    9. ' xrange' → logprob: -14.648821830749512
    10. ' rang' → logprob: -14.648821830749512

Token 27: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.25226762890815735
    2. '(M' → logprob: -1.502267599105835
    3. '(N' → logprob: -8.127267837524414
    4. ' (' → logprob: -10.627267837524414
    5. '(k' → logprob: -12.002267837524414
    6. '(m' → logprob: -12.377267837524414
    7. '(A' → logprob: -13.377267837524414
    8. '(K' → logprob: -13.752267837524414
    9. '(I' → logprob: -14.127267837524414
    10. '((' → logprob: -14.252267837524414

Token 28: '1' (ID: 16)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.02438625693321228
    2. '1' → logprob: -3.774386167526245
    3. ' M' → logprob: -7.399386405944824
    4. 'N' → logprob: -8.024386405944824
    5. '2' → logprob: -9.649386405944824
    6. '(M' → logprob: -10.274386405944824
    7. '(' → logprob: -10.649386405944824
    8. ' ' → logprob: -11.024386405944824
    9. '0' → logprob: -11.024386405944824
    10. '10' → logprob: -11.399386405944824

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011117382906377316
    2. ' ,' → logprob: -4.511117458343506
    3. ',M' → logprob: -9.636116981506348
    4. ' M' → logprob: -13.261116981506348
    5. ',N' → logprob: -13.261116981506348
    6. ' ' → logprob: -14.386116981506348
    7. '1' → logprob: -16.261117935180664
    8. 'M' → logprob: -16.886117935180664
    9. ',K' → logprob: -17.886117935180664
    10. '2' → logprob: -18.011117935180664

Token 30: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.16023214161396027
    2. ' M' → logprob: -1.9102321863174438
    3. '10' → logprob: -12.285232543945312
    4. ' ' → logprob: -14.035232543945312
    5. 'N' → logprob: -14.160232543945312
    6. '100' → logprob: -14.785232543945312
    7. ')' → logprob: -15.410232543945312
    8. 'k' → logprob: -15.410232543945312
    9. '20' → logprob: -15.660232543945312
    10. '101' → logprob: -16.160232543945312

Token 31: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.033804524689912796
    2. ' +' → logprob: -3.408804416656494
    3. '):' → logprob: -8.783804893493652
    4. ')' → logprob: -13.533804893493652
    5. '+k' → logprob: -13.658804893493652
    6. ' ):' → logprob: -13.783804893493652
    7. '+
' → logprob: -15.033804893493652
    8. ')+' → logprob: -15.283804893493652
    9. '+:' → logprob: -15.408804893493652
    10. ',' → logprob: -15.408804893493652

Token 32: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002805110299959779
    2. ' ' → logprob: -5.877805233001709
    3. '```' → logprob: -16.502805709838867
    4. '2' → logprob: -16.627805709838867
    5. '  ' → logprob: -17.127805709838867
    6. ')' → logprob: -17.502805709838867
    7. '   ' → logprob: -17.627805709838867
    8. '+' → logprob: -18.252805709838867
    9. '

' → logprob: -18.502805709838867
    10. ' N' → logprob: -18.502805709838867

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '2' → logprob: -17.500017166137695
    4. '```' → logprob: -18.125017166137695
    5. ')' → logprob: -18.625017166137695
    6. '１' → logprob: -19.500017166137695
    7. '   ' → logprob: -19.875017166137695
    8. '(' → logprob: -20.000017166137695
    9. '  ' → logprob: -20.250017166137695
    10. '`' → logprob: -20.375017166137695

Token 34: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005583656020462513
    2. ')' → logprob: -5.630583763122559
    3. ':' → logprob: -6.255583763122559
    4. ' ):' → logprob: -9.880583763122559
    5. ':)' → logprob: -11.880583763122559
    6. '):
' → logprob: -13.380583763122559
    7. ' )' → logprob: -14.380583763122559
    8. ',' → logprob: -14.880583763122559
    9. ':**' → logprob: -14.880583763122559
    10. ']:' → logprob: -15.255583763122559

Token 35: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.15782283246517181
    2. '    ' → logprob: -2.407822847366333
    3. '   ' → logprob: -3.657822847366333
    4. '     
' → logprob: -4.407822608947754
    5. ' 
' → logprob: -4.907822608947754
    6. '    
' → logprob: -5.657822608947754
    7. '```' → logprob: -6.782822608947754
    8. '\' → logprob: -7.407822608947754
    9. '[' → logprob: -7.657822608947754
    10. ' for' → logprob: -7.782822608947754

Token 36: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.3742603063583374
    2. '   ' → logprob: -1.8742603063583374
    3. ' sum' → logprob: -2.249260425567627
    4. 'for' (adapté à ' for') → logprob: -2.499260425567627
    5. 'sum' → logprob: -2.499260425567627
    6. ' if' → logprob: -2.874260425567627
    7. ' A' → logprob: -3.124260425567627
    8. ' total' → logprob: -3.249260425567627
    9. ' ' → logprob: -3.624260425567627
    10. 'A' → logprob: -3.749260425567627

Token 37: ' i' (ID: 575)
  Prédit: ' A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.9318314790725708
    2. ' range' → logprob: -0.9318314790725708
    3. 'range' → logprob: -2.6818313598632812
    4. ' j' → logprob: -2.8068313598632812
    5. 'A' → logprob: -3.0568313598632812
    6. ' ' → logprob: -4.681831359863281
    7. ' a' → logprob: -5.181831359863281
    8. ' i' → logprob: -5.306831359863281
    9. 'j' → logprob: -5.431831359863281
    10. ' N' → logprob: -5.556831359863281

Token 38: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.026636049151420593
    2. 'in' → logprob: -3.6516361236572266
    3. ' ' → logprob: -8.276636123657227
    4. '	in' → logprob: -11.026636123657227
    5. 'range' → logprob: -11.276636123657227
    6. '<|end|>' → logprob: -11.276636123657227
    7. '(' → logprob: -11.276636123657227
    8. 'n' → logprob: -12.276636123657227
    9. '_' → logprob: -12.776636123657227
    10. ')' → logprob: -13.026636123657227

Token 39: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.005938397720456123
    2. 'range' → logprob: -5.130938529968262
    3. ' A' → logprob: -12.380938529968262
    4. '(range' → logprob: -12.630938529968262
    5. ' xrange' → logprob: -14.630938529968262
    6. ' N' → logprob: -14.755938529968262
    7. '	range' → logprob: -14.755938529968262
    8. ')' → logprob: -15.130938529968262
    9. ' ' → logprob: -15.130938529968262
    10. 'A' → logprob: -16.255937576293945

Token 40: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.2527848184108734
    2. '(' → logprob: -1.5027848482131958
    3. ' (' → logprob: -8.002784729003906
    4. '(len' → logprob: -8.377784729003906
    5. '(n' → logprob: -9.002784729003906
    6. '(k' → logprob: -9.627784729003906
    7. '(M' → logprob: -9.627784729003906
    8. '(s' → logprob: -11.627784729003906
    9. '(A' → logprob: -11.627784729003906
    10. ')' → logprob: -12.502784729003906

Token 41: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0008428608998656273
    2. ')' → logprob: -7.750843048095703
    3. '):
' → logprob: -8.125843048095703
    4. ' ):' → logprob: -10.000843048095703
    5. '-' → logprob: -10.500843048095703
    6. ':' → logprob: -11.125843048095703
    7. '+' → logprob: -11.375843048095703
    8. '   ' → logprob: -11.625843048095703
    9. '():' → logprob: -13.500843048095703
    10. ' -' → logprob: -13.625843048095703

Token 42: ' ' (ID: 220)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.5438446402549744
    2. 'k' → logprob: -1.4188446998596191
    3. '1' → logprob: -2.043844699859619
    4. ' ' → logprob: -3.043844699859619
    5. '2' → logprob: -9.543844223022461
    6. '-k' → logprob: -9.668844223022461
    7. ' M' → logprob: -10.043844223022461
    8. '+' → logprob: -10.793844223022461
    9. 'M' → logprob: -10.856344223022461
    10. '	k' → logprob: -10.981344223022461

Token 43: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6343876123428345
    2. 'k' → logprob: -0.7593876123428345
    3. ' k' → logprob: -6.884387493133545
    4. ' ' → logprob: -7.259387493133545
    5. '2' → logprob: -10.509387969970703
    6. '-' → logprob: -12.009387969970703
    7. 'M' → logprob: -12.134387969970703
    8. '	k' → logprob: -12.696887969970703
    9. '(k' → logprob: -13.009387969970703
    10. '-k' → logprob: -13.071887969970703

Token 44: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006467502098530531
    2. ')' → logprob: -5.256467342376709
    3. '):
' → logprob: -7.631467342376709
    4. '-' → logprob: -7.881467342376709
    5. ',' → logprob: -8.506467819213867
    6. ' ):' → logprob: -9.131467819213867
    7. ' -' → logprob: -10.881467819213867
    8. ':' → logprob: -11.381467819213867
    9. '+' → logprob: -12.006467819213867
    10. '   ' → logprob: -12.006467819213867

Token 45: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21261471509933472
    2. '    ' → logprob: -2.2126147747039795
    3. '   ' → logprob: -2.8376147747039795
    4. ' ' → logprob: -4.5876145362854
    5. ':' → logprob: -5.7126145362854
    6. ' for' → logprob: -6.3376145362854
    7. '    
' → logprob: -6.7126145362854
    8. 'if' → logprob: -6.8376145362854
    9. '     ' → logprob: -7.0876145362854
    10. ' if' → logprob: -7.4626145362854

Token 46: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6793528199195862
    2. 'if' (adapté à ' if') → logprob: -0.9293528199195862
    3. '   ' → logprob: -3.3043527603149414
    4. '       ' → logprob: -3.5543527603149414
    5. '    ' → logprob: -3.8043527603149414
    6. ' ' → logprob: -6.179352760314941
    7. ' A' → logprob: -6.179352760314941
    8. 'A' → logprob: -6.304352760314941
    9. ' for' → logprob: -6.304352760314941
    10. 'for' → logprob: -6.804352760314941

Token 47: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.31371259689331055
    2. 'A' → logprob: -1.3137125968933105
    3. ' abs' → logprob: -8.563713073730469
    4. 'abs' → logprob: -8.813713073730469
    5. ' ' → logprob: -10.063713073730469
    6. '    ' → logprob: -10.563713073730469
    7. '	A' → logprob: -11.063713073730469
    8. '   ' → logprob: -11.938713073730469
    9. '(A' → logprob: -12.813713073730469
    10. '(' → logprob: -13.063713073730469

Token 48: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.34876126050949097
    2. '[' → logprob: -1.2237613201141357
    3. '[j' → logprob: -9.348761558532715
    4. '[
' → logprob: -9.473761558532715
    5. '[k' → logprob: -9.598761558532715
    6. ' [' → logprob: -10.473761558532715
    7. '[A' → logprob: -10.973761558532715
    8. '[I' → logprob: -11.223761558532715
    9. '[a' → logprob: -12.223761558532715
    10. '```' → logprob: -12.723761558532715

Token 49: ']' (ID: 60)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.14465230703353882
    2. '>' → logprob: -2.2696523666381836
    3. ' <' → logprob: -3.5196523666381836
    4. ' ' → logprob: -7.269652366638184
    5. '<' → logprob: -7.394652366638184
    6. ' <=' → logprob: -9.519652366638184
    7. '+' → logprob: -9.769652366638184
    8. ' ==' → logprob: -9.769652366638184
    9. '[' → logprob: -9.894652366638184
    10. ']' → logprob: -10.269652366638184

Token 50: ' %' (ID: 1851)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.2048202008008957
    2. ' >' → logprob: -1.704820156097412
    3. '<' → logprob: -6.079820156097412
    4. ' <' → logprob: -7.079820156097412
    5. ' ' → logprob: -9.07982063293457
    6. '==' → logprob: -9.82982063293457
    7. '%' → logprob: -10.95482063293457
    8. '+' → logprob: -11.07982063293457
    9. '[' → logprob: -11.76732063293457
    10. '=' → logprob: -11.89232063293457

Token 51: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.038031045347452164
    2. '2' → logprob: -3.4130311012268066
    3. ' k' → logprob: -5.913031101226807
    4. ' ' → logprob: -7.038031101226807
    5. '10' → logprob: -8.163030624389648
    6. 'A' → logprob: -9.038030624389648
    7. '7' → logprob: -9.663030624389648
    8. '3' → logprob: -10.163030624389648
    9. '26' → logprob: -10.538030624389648
    10. '20' → logprob: -10.663030624389648

Token 52: ' >' (ID: 1424)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.37955063581466675
    2. '==' → logprob: -1.6295506954193115
    3. ' !=' → logprob: -2.2545506954193115
    4. '!=' → logprob: -4.379550457000732
    5. '=' → logprob: -6.754550457000732
    6. ' =' → logprob: -7.254550457000732
    7. ' ' → logprob: -8.37955093383789
    8. '>' → logprob: -9.00455093383789
    9. ' >' → logprob: -9.87955093383789
    10. '!' → logprob: -11.37955093383789

Token 53: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.4754783511161804
    2. 'A' → logprob: -0.9754783511161804
    3. '0' → logprob: -6.850478172302246
    4. ' ' → logprob: -8.850478172302246
    5. '=' → logprob: -9.350478172302246
    6. '=A' → logprob: -10.475478172302246
    7. '	A' → logprob: -10.600478172302246
    8. '>A' → logprob: -10.850478172302246
    9. '>' → logprob: -11.850478172302246
    10. '  ' → logprob: -12.100478172302246

Token 54: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5928495486150496e-05
    2. '[' → logprob: -11.250016212463379
    3. 'i' → logprob: -13.500016212463379
    4. '[
' → logprob: -14.625016212463379
    5. '][' → logprob: -15.250016212463379
    6. '[j' → logprob: -15.500016212463379
    7. ' [' → logprob: -16.000015258789062
    8. '```' → logprob: -16.000015258789062
    9. '[I' → logprob: -16.000015258789062
    10. '[k' → logprob: -17.125015258789062

Token 55: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.02666228637099266
    2. ' +' → logprob: -3.6516623497009277
    3. ' ' → logprob: -9.15166187286377
    4. '1' → logprob: -9.27666187286377
    5. ']' → logprob: -9.65166187286377
    6. '[i' → logprob: -10.15166187286377
    7. '+i' → logprob: -10.40166187286377
    8. ' i' → logprob: -11.27666187286377
    9. 'i' → logprob: -12.90166187286377
    10. '   ' → logprob: -13.15166187286377

Token 56: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7016246318817139
    2. 'i' → logprob: -0.8266246318817139
    3. ']' → logprob: -3.076624631881714
    4. '[i' → logprob: -4.451624870300293
    5. ' ' → logprob: -5.576624870300293
    6. '0' → logprob: -5.826624870300293
    7. ' i' → logprob: -6.576624870300293
    8. '(i' → logprob: -8.451624870300293
    9. 'k' → logprob: -9.201624870300293
    10. '_i' → logprob: -9.326624870300293

Token 57: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08845795691013336
    2. '0' → logprob: -3.0884580612182617
    3. '1' → logprob: -3.4634580612182617
    4. ']' → logprob: -5.588458061218262
    5. ' ' → logprob: -6.338458061218262
    6. ' i' → logprob: -6.713458061218262
    7. 'k' → logprob: -7.838458061218262
    8. '%i' → logprob: -8.588458061218262
    9. '[i' → logprob: -9.088458061218262
    10. ')' → logprob: -9.713458061218262

Token 58: ']' (ID: 60)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.023587729781866074
    2. ' %' → logprob: -3.773587703704834
    3. ')' → logprob: -8.398588180541992
    4. ']' → logprob: -10.148588180541992
    5. ' ' → logprob: -10.523588180541992
    6. ']%' → logprob: -11.023588180541992
    7. ')%' → logprob: -11.398588180541992
    8. '<|end|>' → logprob: -12.273588180541992
    9. 'k' → logprob: -13.086088180541992
    10. '()%' → logprob: -13.273588180541992

Token 59: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.3486497104167938
    2. ' %' → logprob: -1.2236497402191162
    3. ' ' → logprob: -8.973649978637695
    4. ' ' → logprob: -11.786149978637695
    5. '%i' → logprob: -11.848649978637695
    6. ')' → logprob: -12.036149978637695
    7. '<|end|>' → logprob: -12.098649978637695
    8. 'k' → logprob: -12.411149978637695
    9. '()%' → logprob: -12.598649978637695
    10. '[' → logprob: -12.911149978637695

Token 60: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.06994643062353134
    2. ' k' → logprob: -2.694946527481079
    3. ' ' → logprob: -11.5699462890625
    4. '	k' → logprob: -15.0699462890625
    5. ' ' → logprob: -15.5699462890625
    6. '```' → logprob: -16.9449462890625
    7. '_k' → logprob: -17.0699462890625
    8. '  ' → logprob: -17.2574462890625
    9. '(k' → logprob: -17.6324462890625
    10. '<|end|>' → logprob: -17.6949462890625

Token 61: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0061040474101901054
    2. ' :' → logprob: -5.131103992462158
    3. '):' → logprob: -9.131104469299316
    4. ' and' → logprob: -10.256104469299316
    5. ' ):' → logprob: -11.756104469299316
    6. ':
' → logprob: -12.256104469299316
    7. '>:' → logprob: -12.256104469299316
    8. ' or' → logprob: -13.006104469299316
    9. ':**' → logprob: -13.006104469299316
    10. ')' → logprob: -13.506104469299316

Token 62: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.025353385135531425
    2. '       ' → logprob: -4.27535343170166
    3. ' :' → logprob: -6.52535343170166
    4. '               ' → logprob: -6.65035343170166
    5. ' ' → logprob: -6.77535343170166
    6. '```' → logprob: -6.77535343170166
    7. ' A' → logprob: -6.90035343170166
    8. '            ' → logprob: -6.90035343170166
    9. '   ' → logprob: -7.02535343170166
    10. ' :
' → logprob: -7.65035343170166

Token 63: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.5238876938819885
    2. ' A' → logprob: -0.8988876938819885
    3. '           ' → logprob: -7.523887634277344
    4. '               ' → logprob: -8.523887634277344
    5. '   ' → logprob: -12.273887634277344
    6. '```' → logprob: -12.273887634277344
    7. '                   ' → logprob: -13.273887634277344
    8. '                
' → logprob: -13.273887634277344
    9. '            
' → logprob: -13.398887634277344
    10. ' 
' → logprob: -13.523887634277344

Token 64: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001760148094035685
    2. '[' → logprob: -6.626760005950928
    3. ',' → logprob: -7.876760005950928
    4. ',i' → logprob: -10.001760482788086
    5. 'i' → logprob: -12.626760482788086
    6. '```' → logprob: -14.001760482788086
    7. '[I' → logprob: -14.001760482788086
    8. '[j' → logprob: -14.126760482788086
    9. '.swap' → logprob: -14.126760482788086
    10. ' i' → logprob: -14.626760482788086

Token 65: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3941297233104706
    2. '],' → logprob: -1.144129753112793
    3. '>,' → logprob: -5.769129753112793
    4. ']' → logprob: -6.144129753112793
    5. ' ],' → logprob: -7.519129753112793
    6. ',A' → logprob: -7.519129753112793
    7. ' ,' → logprob: -8.019129753112793
    8. '),' → logprob: -8.644129753112793
    9. ' ' → logprob: -9.144129753112793
    10. '},' → logprob: -9.894129753112793

Token 66: ' A' (ID: 355)
  Prédit: ' A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' A' → logprob: -0.054937347769737244
    2. 'A' → logprob: -2.9299373626708984
    3. '<|end|>' → logprob: -10.054937362670898
    4. ' ' → logprob: -11.804937362670898
    5. '	A' → logprob: -13.554937362670898
    6. '           ' → logprob: -13.929937362670898
    7. ' ' → logprob: -14.054937362670898
    8. '            ' → logprob: -14.179937362670898
    9. '    ' → logprob: -15.429937362670898
    10. '<|end|>' → logprob: -15.929937362670898

Token 67: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00015062130114529282
    2. '[' → logprob: -8.875150680541992
    3. '[
' → logprob: -11.750150680541992
    4. '[I' → logprob: -13.375150680541992
    5. ']' → logprob: -14.375150680541992
    6. 'i' → logprob: -15.125150680541992
    7. '][' → logprob: -16.625150680541992
    8. '[j' → logprob: -16.750150680541992
    9. ' [' → logprob: -17.000150680541992
    10. ' ' → logprob: -17.125150680541992

Token 68: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.062014177441596985
    2. ' +' → logprob: -2.812014102935791
    3. '1' → logprob: -10.93701457977295
    4. ']' → logprob: -11.31201457977295
    5. '+i' → logprob: -11.68701457977295
    6. '+]' → logprob: -12.18701457977295
    7. '   ' → logprob: -14.18701457977295
    8. '[i' → logprob: -14.68701457977295
    9. '＋' → logprob: -15.18701457977295
    10. ' ' → logprob: -15.18701457977295

Token 69: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00673218397423625
    2. ' ' → logprob: -5.006731986999512
    3. '<|end|>' → logprob: -11.881731986999512
    4. '```' → logprob: -13.131731986999512
    5. '  ' → logprob: -13.506731986999512
    6. '`' → logprob: -14.006731986999512
    7. '   ' → logprob: -14.006731986999512
    8. ']' → logprob: -14.381731986999512
    9. ' ' → logprob: -14.381731986999512
    10. '[' → logprob: -14.631731986999512

Token 70: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -15.12500286102295
    4. '<|end|>' → logprob: -15.68750286102295
    5. '   ' → logprob: -17.062503814697266
    6. '2' → logprob: -17.500003814697266
    7. 'i' → logprob: -17.562503814697266
    8. '  ' → logprob: -17.625003814697266
    9. '１' → logprob: -18.000003814697266
    10. '0' → logprob: -18.187503814697266

Token 71: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.051109109073877335
    2. '=' → logprob: -3.0511090755462646
    3. ']=' → logprob: -6.676109313964844
    4. ' =' → logprob: -6.801109313964844
    5. ')' → logprob: -8.926109313964844
    6. '<|end|>' → logprob: -12.801109313964844
    7. '   ' → logprob: -13.176109313964844
    8. '>' → logprob: -13.676109313964844
    9. ')=' → logprob: -13.926109313964844
    10. '[' → logprob: -13.926109313964844

Token 72: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07889705896377563
    2. ' =' → logprob: -2.578896999359131
    3. ',' → logprob: -12.203897476196289
    4. '=
' → logprob: -13.953897476196289
    5. '=

' → logprob: -14.328897476196289
    6. '<|end|>' → logprob: -15.328897476196289
    7. '=A' → logprob: -16.32889747619629
    8. '.=' → logprob: -16.70389747619629
    9. ' ' → logprob: -16.82889747619629
    10. ' =
' → logprob: -16.95389747619629

Token 73: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.16022463142871857
    2. ' A' → logprob: -1.9102246761322021
    3. '	A' → logprob: -15.785224914550781
    4. '   ' → logprob: -16.28522491455078
    5. '           ' → logprob: -16.41022491455078
    6. '>A' → logprob: -16.53522491455078
    7. ' ' → logprob: -17.66022491455078
    8. ',A' → logprob: -18.78522491455078
    9. '=A' → logprob: -19.28522491455078
    10. '  ' → logprob: -19.53522491455078

Token 74: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.203409844194539e-05
    2. '[' → logprob: -10.250041961669922
    3. '[j' → logprob: -12.250041961669922
    4. 'i' → logprob: -13.625041961669922
    5. '[I' → logprob: -16.000041961669922
    6. '[
' → logprob: -16.250041961669922
    7. '```' → logprob: -16.375041961669922
    8. '[A' → logprob: -17.250041961669922
    9. ' ' → logprob: -17.250041961669922
    10. ',i' → logprob: -17.375041961669922

Token 75: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.024103986099362373
    2. '[i' → logprob: -4.024104118347168
    3. ' +' → logprob: -5.149104118347168
    4. '+i' → logprob: -9.149104118347168
    5. '],' → logprob: -11.024104118347168
    6. '   ' → logprob: -12.774104118347168
    7. 'i' → logprob: -13.024104118347168
    8. '1' → logprob: -14.524104118347168
    9. '(i' → logprob: -14.524104118347168
    10. '[' → logprob: -14.524104118347168

Token 76: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000561969296541065
    2. ' ' → logprob: -7.5005621910095215
    3. '+' → logprob: -12.625561714172363
    4. '0' → logprob: -13.625561714172363
    5. '```' → logprob: -13.750561714172363
    6. '`' → logprob: -13.938061714172363
    7. ' ' → logprob: -14.875561714172363
    8. '   ' → logprob: -14.938061714172363
    9. '<|end|>' → logprob: -15.313061714172363
    10. '[' → logprob: -15.313061714172363

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004670780152082443
    2. 'i' → logprob: -5.3796706199646
    3. '[i' → logprob: -10.504671096801758
    4. '+' → logprob: -11.504671096801758
    5. '0' → logprob: -11.879671096801758
    6. '(i' → logprob: -13.254671096801758
    7. ' i' → logprob: -13.379671096801758
    8. ' ' → logprob: -14.129671096801758
    9. '```' → logprob: -14.254671096801758
    10. '+i' → logprob: -14.379671096801758

Token 78: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007684469688683748
    2. '],' → logprob: -5.007684707641602
    3. ' ,' → logprob: -7.257684707641602
    4. ']' → logprob: -8.882684707641602
    5. '<|end|>' → logprob: -9.882684707641602
    6. '),' → logprob: -10.257684707641602
    7. '‌,' → logprob: -12.007684707641602
    8. '},' → logprob: -12.007684707641602
    9. ',A' → logprob: -12.132684707641602
    10. ',
' → logprob: -12.507684707641602

Token 79: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.023245595395565033
    2. ' A' → logprob: -3.7732455730438232
    3. '	A' → logprob: -16.273244857788086
    4. ' ' → logprob: -18.648244857788086
    5. '<|end|>' → logprob: -18.648244857788086
    6. '```' → logprob: -18.773244857788086
    7. ' ' → logprob: -19.148244857788086
    8. '>A' → logprob: -19.273244857788086
    9. '`' → logprob: -19.398244857788086
    10. '_A' → logprob: -20.023244857788086

Token 80: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.000810936326161027
    2. '[' → logprob: -7.1258111000061035
    3. '[
' → logprob: -12.875810623168945
    4. '[A' → logprob: -13.500810623168945
    5. '[I' → logprob: -14.250810623168945
    6. 'i' → logprob: -14.500810623168945
    7. '```' → logprob: -15.000810623168945
    8. 'A' → logprob: -15.250810623168945
    9. '[]' → logprob: -15.625810623168945
    10. '[k' → logprob: -15.750810623168945

Token 81: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.12747542560100555
    2. ']' → logprob: -2.1274755001068115
    3. ')]' → logprob: -7.627475261688232
    4. '])' → logprob: -10.75247573852539
    5. ')
' → logprob: -11.50247573852539
    6. '}' → logprob: -11.75247573852539
    7. '<|end|>' → logprob: -12.12747573852539
    8. '）' → logprob: -12.12747573852539
    9. ']
' → logprob: -12.87747573852539
    10. '[' → logprob: -13.50247573852539

Token 82: 'for' (ID: 1938)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.32289353013038635
    2. 'print' → logprob: -1.572893500328064
    3. ')' → logprob: -4.0728936195373535
    4. '[' → logprob: -4.1978936195373535
    5. 'p' → logprob: -4.4478936195373535
    6. '```' → logprob: -4.5728936195373535
    7. 'for' → logprob: -6.0728936195373535
    8. 'A' → logprob: -6.1978936195373535
    9. '<|end|>' → logprob: -6.3228936195373535
    10. ' ' → logprob: -6.3228936195373535

Token 83: ' a' (ID: 261)
  Prédit: ' k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.7210165858268738
    2. ' i' → logprob: -0.9710165858268738
    3. 'k' → logprob: -3.0960166454315186
    4. 'i' → logprob: -3.2210166454315186
    5. '_' → logprob: -3.3460166454315186
    6. ' _' → logprob: -4.8460164070129395
    7. ' A' → logprob: -5.3460164070129395
    8. ' ' → logprob: -7.4710164070129395
    9. 'A' → logprob: -7.8460164070129395
    10. ' x' → logprob: -8.346016883850098

Token 84: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12947160005569458
    2. 'in' → logprob: -2.12947154045105
    3. ' ' → logprob: -6.254471778869629
    4. '<|end|>' → logprob: -8.004471778869629
    5. '  ' → logprob: -9.629471778869629
    6. 'a' → logprob: -9.629471778869629
    7. 'n' → logprob: -10.504471778869629
    8. 'i' → logprob: -10.629471778869629
    9. ' a' → logprob: -10.629471778869629
    10. ' i' → logprob: -10.879471778869629

Token 85: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.00671809446066618
    2. ' A' → logprob: -5.006718158721924
    3. '<|end|>' → logprob: -13.256717681884766
    4. 'a' → logprob: -14.006717681884766
    5. '(A' → logprob: -16.381717681884766
    6. 'range' → logprob: -17.006717681884766
    7. '	A' → logprob: -17.506717681884766
    8. '>A' → logprob: -18.006717681884766
    9. ' ' → logprob: -18.631717681884766
    10. '_A' → logprob: -18.631717681884766

Token 86: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.722539834911004e-05
    2. ':
' → logprob: -10.000097274780273
    3. 'print' → logprob: -10.250097274780273
    4. 'a' → logprob: -12.250097274780273
    5. 'in' → logprob: -12.750097274780273
    6. '):' → logprob: -13.375097274780273
    7. '<|end|>' → logprob: -13.500097274780273
    8. ' in' → logprob: -13.875097274780273
    9. ' print' → logprob: -14.250097274780273
    10. '[' → logprob: -14.625097274780273

Token 87: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2030075341463089
    2. ' print' → logprob: -1.7030075788497925
    3. '   ' → logprob: -6.578007698059082
    4. '```' → logprob: -8.703007698059082
    5. '    
' → logprob: -11.453007698059082
    6. '	print' → logprob: -11.453007698059082
    7. ' 
' → logprob: -12.328007698059082
    8. '`' → logprob: -12.328007698059082
    9. '``' → logprob: -13.578007698059082
    10. '<|end|>' → logprob: -14.203007698059082

Token 88: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0002036595979006961
    2. ' print' → logprob: -8.500204086303711
    3. '```' → logprob: -16.37520408630371
    4. '   ' → logprob: -16.62520408630371
    5. 'pr' → logprob: -16.75020408630371
    6. 'prin' → logprob: -18.00020408630371
    7. '`' → logprob: -19.25020408630371
    8. 'prit' → logprob: -19.37520408630371
    9. 'pri' → logprob: -20.25020408630371
    10. '	print' → logprob: -20.37520408630371

Token 89: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.06197004392743111
    2. '(' → logprob: -2.8119699954986572
    3. 'a' → logprob: -13.436969757080078
    4. '(A' → logprob: -15.311969757080078
    5. '(
' → logprob: -15.436969757080078
    6. ' (' → logprob: -16.561969757080078
    7. '((' → logprob: -16.561969757080078
    8. '()' → logprob: -16.686969757080078
    9. '(f' → logprob: -16.811969757080078
    10. '(`' → logprob: -16.936969757080078

Token 90: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.704273118884885e-07
    2. ')
' → logprob: -15.000000953674316
    3. '))' → logprob: -16.25
    4. ')`' → logprob: -16.25
    5. ' )' → logprob: -16.375
    6. ')}' → logprob: -18.375
    7. ')a' → logprob: -18.5
    8. '),' → logprob: -19.125
    9. '')' → logprob: -19.75
    10. ')

' → logprob: -19.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 88
Tokens correctement prédits (1ère position, stricte): 33
Tokens correctement prédits (1ère position, avec adaptation): 35
Tokens correctement prédits (top 10): 79
Précision stricte (1ère position): 37.50%
Précision adaptée (1ère position): 39.77%
Précision (top 10): 89.77%
================================================================================
