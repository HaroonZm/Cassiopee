================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:06:06
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = int(input())
graph = {}
for _ in range(n):
    data = list(map(int, input().split()))
    r = data[0]
    k = data[1]
    graph[r] = data[2:] if k > 0 else []

p = int(input())
packets = [tuple(map(int, input().split())) for _ in range(p)]

from collections import deque

for s, d, ttl in packets:
    if s == d:
        # Problem states s != d, but just in case
        print(0)
        continue
    # BFS to find shortest path length (number of nodes) from s to d
    queue = deque()
    queue.append((s, 1))  # (current_node, path_length)
    visited = set()
    visited.add(s)
    found = False
    while queue:
        cur, length = queue.popleft()
        if cur == d:
            # length is count of nodes including start and end
            # Number of routers passed is length
            # Number of decrements of TTL is length -1 (excluding the destination)
            needed_ttl = length - 1
            if ttl >= needed_ttl:
                print(length)
            else:
                print("NA")
            found = True
            break
        for nxt in graph[cur]:
            if nxt not in visited:
                visited.add(nxt)
                queue.append((nxt, length + 1))
    if not found:
        print("NA")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' int' (ID: 677)
  → Token d'amorce (pas de prédiction)

Token 3: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00038134094211272895
    2. '(n' → logprob: -9.000381469726562
    3. ''' → logprob: -9.500381469726562
    4. '('' → logprob: -10.125381469726562
    5. '```' → logprob: -10.125381469726562
    6. '`' → logprob: -10.750381469726562
    7. '("("' → logprob: -10.750381469726562
    8. '()' → logprob: -11.250381469726562
    9. 'n' → logprob: -11.625381469726562
    10. ')' → logprob: -12.000381469726562

Token 4: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0733630508184433
    2. ')' → logprob: -2.8233630657196045
    3. '()' → logprob: -4.698362827301025
    4. '())' → logprob: -6.948362827301025
    5. '```' → logprob: -8.198363304138184
    6. '(
' → logprob: -8.448363304138184
    7. '('' → logprob: -8.948363304138184
    8. '(()' → logprob: -9.073363304138184
    9. '`' → logprob: -9.198363304138184
    10. '("("' → logprob: -9.698363304138184

Token 5: 'graph' (ID: 7978)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.9191706776618958
    2. 'i' → logprob: -1.169170618057251
    3. 'for' → logprob: -1.669170618057251
    4. 's' → logprob: -3.169170618057251
    5. '*' → logprob: -4.66917085647583
    6. ')' → logprob: -4.91917085647583
    7. 'x' → logprob: -5.04417085647583
    8. '#' → logprob: -5.16917085647583
    9. '`' → logprob: -5.16917085647583
    10. 'a' → logprob: -5.54417085647583

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0032664805185049772
    2. ')' → logprob: -6.878266334533691
    3. '.' → logprob: -6.878266334533691
    4. '[]' → logprob: -8.128266334533691
    5. '[n' → logprob: -8.628266334533691
    6. '=' → logprob: -8.628266334533691
    7. ' =' → logprob: -8.753266334533691
    8. '_' → logprob: -9.128266334533691
    9. '[
' → logprob: -9.503266334533691
    10. '\[' → logprob: -10.128266334533691

Token 7: ' {}
' (ID: 11421)
  Prédit: ' {}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' {}' → logprob: -0.2282240092754364
    2. '{}' → logprob: -1.7282240390777588
    3. ' []' → logprob: -3.853224039077759
    4. ' [[]' → logprob: -5.85322380065918
    5. '[' → logprob: -7.10322380065918
    6. '[]' → logprob: -7.22822380065918
    7. ' [' → logprob: -7.72822380065918
    8. ' defaultdict' → logprob: -8.97822380065918
    9. ' {' → logprob: -9.10322380065918
    10. ' ' → logprob: -9.60322380065918

Token 8: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0010172100737690926
    2. ' for' → logprob: -7.126017093658447
    3. '```' → logprob: -9.001017570495605
    4. 'n' → logprob: -10.376017570495605
    5. '
' → logprob: -11.501017570495605
    6. 'f' → logprob: -11.501017570495605
    7. 'graph' → logprob: -11.501017570495605
    8. '\n' → logprob: -11.626017570495605
    9. '`' → logprob: -12.251017570495605
    10. '\' → logprob: -12.626017570495605

Token 9: ' _' (ID: 1175)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5368400812149048
    2. ' i' → logprob: -0.9118400812149048
    3. ' node' → logprob: -4.536839962005615
    4. ' _' → logprob: -6.286839962005615
    5. '_' → logprob: -7.286839962005615
    6. 'i' → logprob: -8.661840438842773
    7. '  ' → logprob: -9.036840438842773
    8. ' vertex' → logprob: -11.286840438842773
    9. ' ‌' → logprob: -11.286840438842773
    10. ' v' → logprob: -11.411840438842773

Token 10: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015558566898107529
    2. 'in' → logprob: -4.26555871963501
    3. ' ' → logprob: -6.76555871963501
    4. 'n' → logprob: -9.390558242797852
    5. '_' → logprob: -9.890558242797852
    6. '  ' → logprob: -10.515558242797852
    7. ' i' → logprob: -10.515558242797852
    8. 'i' → logprob: -11.140558242797852
    9. ' _' → logprob: -11.265558242797852
    10. ' n' → logprob: -11.515558242797852

Token 11: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.006718690041452646
    2. ' range' → logprob: -5.006718635559082
    3. 'input' → logprob: -14.131718635559082
    4. 'ra' → logprob: -14.506718635559082
    5. 'ran' → logprob: -14.631718635559082
    6. 'n' → logprob: -15.131718635559082
    7. 'rang' → logprob: -15.131718635559082
    8. '```' → logprob: -15.131718635559082
    9. '(range' → logprob: -15.756718635559082
    10. 'r' → logprob: -15.756718635559082

Token 12: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.18146079778671265
    2. ' (' → logprob: -2.4314608573913574
    3. '(n' → logprob: -2.5564608573913574
    4. ' n' → logprob: -8.6814603805542
    5. ' ' → logprob: -8.8064603805542
    6. '(range' → logprob: -9.5564603805542
    7. ' range' → logprob: -10.1814603805542
    8. 'range' → logprob: -11.6814603805542
    9. '(
' → logprob: -12.0564603805542
    10. 'n' → logprob: -12.3064603805542

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4289981722831726
    2. ')' → logprob: -1.0539982318878174
    3. ' )' → logprob: -8.803997993469238
    4. ' ):' → logprob: -9.803997993469238
    5. '):
' → logprob: -10.178997993469238
    6. ':' → logprob: -10.678997993469238
    7. '   ' → logprob: -11.803997993469238
    8. ' ' → logprob: -12.303997993469238
    9. ',' → logprob: -12.803997993469238
    10. '```' → logprob: -12.928997993469238

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7154257893562317
    2. ' line' → logprob: -1.215425729751587
    3. '    ' → logprob: -2.340425729751587
    4. ' graph' → logprob: -3.340425729751587
    5. ' ' → logprob: -3.715425729751587
    6. ' input' → logprob: -3.840425729751587
    7. '     
' → logprob: -5.090425968170166
    8. '    
' → logprob: -5.215425968170166
    9. ' s' → logprob: -5.465425968170166
    10. ' a' → logprob: -5.965425968170166

Token 15: ' data' (ID: 1238)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.26259803771972656
    2. ' node' → logprob: -1.5125980377197266
    3. 'line' → logprob: -5.387598037719727
    4. 'node' → logprob: -5.887598037719727
    5. ' city' → logprob: -6.637598037719727
    6. '   ' → logprob: -7.637598037719727
    7. ' name' → logprob: -7.887598037719727
    8. ' nodes' → logprob: -8.137598037719727
    9. 'name' → logprob: -8.887598037719727
    10. ' graph' → logprob: -9.387598037719727

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0009595814626663923
    2. '=' → logprob: -7.000959396362305
    3. ' ' → logprob: -10.500959396362305
    4. '[' → logprob: -11.250959396362305
    5. '   ' → logprob: -13.875959396362305
    6. '  ' → logprob: -14.125959396362305
    7. ',' → logprob: -14.125959396362305
    8. ' ,' → logprob: -14.250959396362305
    9. 's' → logprob: -14.500959396362305
    10. '[]' → logprob: -14.500959396362305

Token 17: ' list' (ID: 1562)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.655886709690094
    2. 'input' → logprob: -0.780886709690094
    3. 'list' → logprob: -4.405886650085449
    4. ' list' → logprob: -4.530886650085449
    5. 'int' → logprob: -11.28088665008545
    6. ' ' → logprob: -11.90588665008545
    7. '=input' → logprob: -12.53088665008545
    8. '[input' → logprob: -12.53088665008545
    9. 'map' → logprob: -13.53088665008545
    10. 'data' → logprob: -13.53088665008545

Token 18: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.060556504875421524
    2. '(' → logprob: -3.310556411743164
    3. '(input' → logprob: -3.810556411743164
    4. '(int' → logprob: -9.185556411743164
    5. '(eval' → logprob: -11.685556411743164
    6. '(filter' → logprob: -12.310556411743164
    7. '(data' → logprob: -12.435556411743164
    8. '(range' → logprob: -13.310556411743164
    9. '()' → logprob: -13.560556411743164
    10. '(
' → logprob: -13.560556411743164

Token 19: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0013586864806711674
    2. '(' → logprob: -6.626358509063721
    3. 'int' → logprob: -10.751358985900879
    4. '<int' → logprob: -12.876358985900879
    5. '(str' → logprob: -13.001358985900879
    6. ',int' → logprob: -13.126358985900879
    7. '(
' → logprob: -13.751358985900879
    8. '(lambda' → logprob: -14.126358985900879
    9. '=int' → logprob: -14.251358985900879
    10. '(input' → logprob: -14.501358985900879

Token 20: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.001534620183520019
    2. ',input' → logprob: -6.876534461975098
    3. 'input' → logprob: -8.001534461975098
    4. '(' → logprob: -8.876534461975098
    5. ',' → logprob: -12.001534461975098
    6. '<|end|>' → logprob: -12.251534461975098
    7. ' input' → logprob: -12.376534461975098
    8. ')' → logprob: -12.626534461975098
    9. '<input' → logprob: -13.376534461975098
    10. '=input' → logprob: -13.501534461975098

Token 21: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.6931533813476562
    2. ' input' → logprob: -0.6931533813476562
    3. ')' → logprob: -13.068153381347656
    4. ',input' → logprob: -13.193153381347656
    5. '(input' → logprob: -13.693153381347656
    6. '	input' → logprob: -14.693153381347656
    7. '=input' → logprob: -15.193153381347656
    8. ' ' → logprob: -16.068153381347656
    9. '_input' → logprob: -16.193153381347656
    10. ' )' → logprob: -16.818153381347656

Token 22: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0002246357616968453
    2. '()))' → logprob: -9.000225067138672
    3. '()' → logprob: -9.250225067138672
    4. '())' → logprob: -13.250225067138672
    5. '(' → logprob: -14.375225067138672
    6. '()
' → logprob: -14.375225067138672
    7. ' ().' → logprob: -14.500225067138672
    8. '()));' → logprob: -14.625225067138672
    9. '))' → logprob: -14.750225067138672
    10. '())))' → logprob: -14.875225067138672

Token 23: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.003215261036530137
    2. 'strip' → logprob: -5.753215312957764
    3. 'rstrip' → logprob: -10.503214836120605
    4. ' split' → logprob: -12.003214836120605
    5. '(split' → logprob: -13.378214836120605
    6. ')' → logprob: -13.378214836120605
    7. 'replace' → logprob: -15.003214836120605
    8. 'read' → logprob: -15.503214836120605
    9. '```' → logprob: -16.128215789794922
    10. ' ' → logprob: -16.253215789794922

Token 24: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.039433255791664124
    2. '())' → logprob: -3.664433240890503
    3. '()' → logprob: -4.414433479309082
    4. '())))' → logprob: -7.914433479309082
    5. '(' → logprob: -8.039433479309082
    6. '()))
' → logprob: -9.289433479309082
    7. '))' → logprob: -9.414433479309082
    8. '('' → logprob: -10.289433479309082
    9. '()))

' → logprob: -11.414433479309082
    10. '()));' → logprob: -11.914433479309082

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07332039624452591
    2. '[' → logprob: -3.0733203887939453
    3. ')' → logprob: -5.323320388793945
    4. 'graph' → logprob: -5.573320388793945
    5. '    
' → logprob: -5.823320388793945
    6. ' ' → logprob: -6.073320388793945
    7. '    ' → logprob: -6.323320388793945
    8. ':' → logprob: -6.323320388793945
    9. ',' → logprob: -6.698320388793945
    10. '```' → logprob: -6.823320388793945

Token 26: ' r' (ID: 428)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -1.062017798423767
    2. 'graph' → logprob: -1.312017798423767
    3. '   ' → logprob: -1.937017798423767
    4. ' if' → logprob: -2.5620179176330566
    5. ')' → logprob: -2.6870179176330566
    6. ' for' → logprob: -3.9370179176330566
    7. ' node' → logprob: -4.062017917633057
    8. ' nodes' → logprob: -4.812017917633057
    9. ' )' → logprob: -5.062017917633057
    10. '[' → logprob: -5.062017917633057

Token 27: ' =' (ID: 314)
  Prédit: 'ow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ow' → logprob: -0.9953058958053589
    2. 'o' → logprob: -1.9953058958053589
    3. 'ange' → logprob: -2.2453060150146484
    4. 'a' → logprob: -2.2453060150146484
    5. ' =' → logprob: -2.3703060150146484
    6. 'aw' → logprob: -3.2453060150146484
    7. 'ank' → logprob: -3.4953060150146484
    8. '[' → logprob: -3.4953060150146484
    9. 'oot' → logprob: -4.120306015014648
    10. '1' → logprob: -4.620306015014648

Token 28: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.1269530951976776
    2. 'data' → logprob: -2.126953125
    3. ' ' → logprob: -10.751953125
    4. '(data' → logprob: -14.251953125
    5. '0' → logprob: -14.376953125
    6. ' dat' → logprob: -14.626953125
    7. '	data' → logprob: -15.376953125
    8. '[data' → logprob: -15.751953125
    9. '<data' → logprob: -15.751953125
    10. 'Data' → logprob: -15.876953125

Token 29: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0004230475169606507
    2. ' [' → logprob: -8.625423431396484
    3. '[-' → logprob: -8.875423431396484
    4. '[:' → logprob: -9.500423431396484
    5. '[:-' → logprob: -12.500423431396484
    6. '\[' → logprob: -12.500423431396484
    7. '0' → logprob: -13.000423431396484
    8. '```' → logprob: -13.250423431396484
    9. '[:]' → logprob: -13.375423431396484
    10. '   ' → logprob: -13.625423431396484

Token 30: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006045519839972258
    2. '1' → logprob: -5.256045341491699
    3. ' ' → logprob: -7.256045341491699
    4. '2' → logprob: -9.5060453414917
    5. '-' → logprob: -10.8810453414917
    6. ':' → logprob: -12.7560453414917
    7. '3' → logprob: -12.8185453414917
    8. ' -' → logprob: -13.5060453414917
    9. ' :' → logprob: -14.0685453414917
    10. '```' → logprob: -14.1935453414917

Token 31: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.24959927797317505
    2. '])' → logprob: -1.9995992183685303
    3. ']' → logprob: -2.6245992183685303
    4. ' )' → logprob: -5.499599456787109
    5. '[' → logprob: -5.624599456787109
    6. ',' → logprob: -6.749599456787109
    7. ' ])' → logprob: -6.874599456787109
    8. ')
' → logprob: -7.124599456787109
    9. ')]' → logprob: -7.249599456787109
    10. '   ' → logprob: -7.874599456787109

Token 32: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5234106183052063
    2. '<|end|>' → logprob: -1.6484105587005615
    3. ' ' → logprob: -2.8984105587005615
    4. ',' → logprob: -2.8984105587005615
    5. ':' → logprob: -3.0234105587005615
    6. '    ' → logprob: -4.148410797119141
    7. '  ' → logprob: -5.023410797119141
    8. ' for' → logprob: -5.148410797119141
    9. ' ,' → logprob: -5.273410797119141
    10. 'for' → logprob: -5.273410797119141

Token 33: ' k' (ID: 372)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.9779249429702759
    2. 'for' → logprob: -1.7279249429702759
    3. 'graph' → logprob: -1.7279249429702759
    4. ' graph' → logprob: -1.8529249429702759
    5. ' neighbors' → logprob: -3.7279248237609863
    6. '   ' → logprob: -3.8529248237609863
    7. 'neighbors' → logprob: -3.9779248237609863
    8. ' nodes' → logprob: -4.602924823760986
    9. 'c' → logprob: -4.977924823760986
    10. 'children' → logprob: -5.227924823760986

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.01257086731493473
    2. '=' → logprob: -4.387570858001709
    3. 'ey' → logprob: -10.762571334838867
    4. '    ' → logprob: -11.887571334838867
    5. '  ' → logprob: -12.012571334838867
    6. '   ' → logprob: -12.012571334838867
    7. 'ernel' → logprob: -12.387571334838867
    8. ' ' → logprob: -12.512571334838867
    9. 'eys' → logprob: -12.887571334838867
    10. '```' → logprob: -13.137571334838867

Token 35: ' data' (ID: 1238)
  Prédit: ' data'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' data' → logprob: -0.2520696520805359
    2. 'data' → logprob: -1.5020697116851807
    3. ' ' → logprob: -9.502069473266602
    4. ' len' → logprob: -10.377069473266602
    5. 'len' → logprob: -10.752069473266602
    6. '1' → logprob: -12.377069473266602
    7. '0' → logprob: -12.627069473266602
    8. ' int' → logprob: -13.752069473266602
    9. 'int' → logprob: -14.002069473266602
    10. '(data' → logprob: -14.252069473266602

Token 36: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.297462171758525e-05
    2. '[len' → logprob: -11.375033378601074
    3. '1' → logprob: -12.375033378601074
    4. '[k' → logprob: -12.500033378601074
    5. ' [' → logprob: -12.625033378601074
    6. '[]' → logprob: -13.000033378601074
    7. '   ' → logprob: -13.625033378601074
    8. '\[' → logprob: -13.750033378601074
    9. '[-' → logprob: -13.875033378601074
    10. '[:]' → logprob: -14.125033378601074

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.4894986785948277e-05
    2. ' ' → logprob: -10.125044822692871
    3. '2' → logprob: -13.375044822692871
    4. ']' → logprob: -14.187544822692871
    5. '0' → logprob: -14.687544822692871
    6. '   ' → logprob: -14.812544822692871
    7. '```' → logprob: -15.000044822692871
    8. '+' → logprob: -15.187544822692871
    9. '  ' → logprob: -15.562544822692871
    10. '[' → logprob: -16.500045776367188

Token 38: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -7.743758760625497e-05
    2. ' )' → logprob: -9.750077247619629
    3. ']' → logprob: -12.000077247619629
    4. '}' → logprob: -12.125077247619629
    5. ')
' → logprob: -13.000077247619629
    6. '])' → logprob: -13.500077247619629
    7. '   ' → logprob: -14.250077247619629
    8. '})' → logprob: -14.250077247619629
    9. '>' → logprob: -14.625077247619629
    10. ')}' → logprob: -14.750077247619629

Token 39: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6961852312088013
    2. 'for' → logprob: -0.8211852312088013
    3. ' for' → logprob: -2.8211851119995117
    4. 'graph' → logprob: -7.321185111999512
    5. '	for' → logprob: -7.696185111999512
    6. '    
' → logprob: -8.446185111999512
    7. ')' → logprob: -8.696185111999512
    8. ',' → logprob: -8.946185111999512
    9. '    ' → logprob: -9.571185111999512
    10. '  ' → logprob: -9.821185111999512

Token 40: ' graph' (ID: 7465)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.23672473430633545
    2. 'for' → logprob: -2.111724853515625
    3. ' for' → logprob: -3.111724853515625
    4. 'graph' (adapté à ' graph') → logprob: -3.236724853515625
    5. ' graph' → logprob: -5.361724853515625
    6. '	graph' → logprob: -7.236724853515625
    7. '	for' → logprob: -8.986724853515625
    8. ')' → logprob: -9.361724853515625
    9. '```' → logprob: -9.861724853515625
    10. '    
' → logprob: -9.986724853515625

Token 41: '[r' (ID: 33265)
  Prédit: '[r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[r' → logprob: -0.25304022431373596
    2. '[' → logprob: -1.5030401945114136
    3. '.setdefault' → logprob: -6.878040313720703
    4. '[...]' → logprob: -10.878040313720703
    5. '[]' → logprob: -11.253040313720703
    6. '[(' → logprob: -11.503040313720703
    7. '[n' → logprob: -11.753040313720703
    8. '[data' → logprob: -11.878040313720703
    9. '.' → logprob: -12.628040313720703
    10. ' [' → logprob: -13.128040313720703

Token 42: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0025685220025479794
    2. '][' → logprob: -6.25256872177124
    3. ']=' → logprob: -7.62756872177124
    4. '[' → logprob: -9.627568244934082
    5. '])' → logprob: -10.127568244934082
    6. ']={' → logprob: -10.752568244934082
    7. ' ]' → logprob: -11.877568244934082
    8. '']' → logprob: -12.127568244934082
    9. '],' → logprob: -12.752568244934082
    10. '].' → logprob: -13.252568244934082

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.30757808685302734
    2. '=' → logprob: -1.5575780868530273
    3. '[' → logprob: -2.9325780868530273
    4. ']' → logprob: -7.682578086853027
    5. '[:]' → logprob: -9.182578086853027
    6. '.setdefault' → logprob: -9.932578086853027
    7. ' ' → logprob: -10.182578086853027
    8. '=[]' → logprob: -10.182578086853027
    9. ')' → logprob: -10.432578086853027
    10. ' =[' → logprob: -10.557578086853027

Token 44: ' data' (ID: 1238)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.09708535671234131
    2. '{}' → logprob: -3.097085475921631
    3. 'data' → logprob: -3.847085475921631
    4. ' []' → logprob: -3.972085475921631
    5. '[data' → logprob: -5.722085475921631
    6. 'set' → logprob: -6.597085475921631
    7. ' data' → logprob: -6.847085475921631
    8. '[' → logprob: -7.472085475921631
    9. ' {}' → logprob: -7.472085475921631
    10. 'list' → logprob: -9.097084999084473

Token 45: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003366754623129964
    2. '[:]' → logprob: -6.503366947174072
    3. '[:' → logprob: -6.628366947174072
    4. '   ' → logprob: -9.253366470336914
    5. ' ' → logprob: -9.378366470336914
    6. '```' → logprob: -9.753366470336914
    7. '.' → logprob: -10.253366470336914
    8. '    ' → logprob: -10.628366470336914
    9. '[
' → logprob: -10.878366470336914
    10. '<|end|>' → logprob: -11.003366470336914

Token 46: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9146995327901095e-05
    2. ' ' → logprob: -11.250019073486328
    3. ':' → logprob: -13.125019073486328
    4. '3' → logprob: -13.625019073486328
    5. '[' → logprob: -14.000019073486328
    6. ']' → logprob: -14.750019073486328
    7. ':]' → logprob: -14.875019073486328
    8. '(' → logprob: -15.000019073486328
    9. '1' → logprob: -15.125019073486328
    10. '   ' → logprob: -15.375019073486328

Token 47: ':]' (ID: 67377)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08984609693288803
    2. ':]' → logprob: -2.464846134185791
    3. ':k' → logprob: -7.589846134185791
    4. ':r' → logprob: -8.714845657348633
    5. ' :' → logprob: -8.839845657348633
    6. ':(' → logprob: -10.089845657348633
    7. ']' → logprob: -10.714845657348633
    8. '2' → logprob: -11.714845657348633
    9. ' :]' → logprob: -12.214845657348633
    10. ':`' → logprob: -13.464845657348633

Token 48: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5287988185882568
    2. '\n' → logprob: -2.403798818588257
    3. '
' → logprob: -2.528798818588257
    4. '```' → logprob: -2.778798818588257
    5. 'n' → logprob: -3.028798818588257
    6. ' for' → logprob: -3.653798818588257
    7. ' 
' → logprob: -4.153799057006836
    8. 'r' → logprob: -4.278799057006836
    9. '   ' → logprob: -4.278799057006836
    10. ' ' → logprob: -4.278799057006836

Token 49: ' k' (ID: 372)
  Prédit: ' k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' k' → logprob: -0.023840945214033127
    2. 'k' → logprob: -3.77384090423584
    3. ' len' → logprob: -7.52384090423584
    4. ' ' → logprob: -10.64884090423584
    5. 'len' → logprob: -10.64884090423584
    6. ' ' → logprob: -12.14884090423584
    7. '    ' → logprob: -14.02384090423584
    8. '   ' → logprob: -14.27384090423584
    9. '  ' → logprob: -14.89884090423584
    10. '	k' → logprob: -15.27384090423584

Token 50: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2585946321487427
    2. '>' → logprob: -1.5085946321487427
    3. ' else' → logprob: -5.133594512939453
    4. ' !=' → logprob: -8.258594512939453
    5. 'else' → logprob: -8.758594512939453
    6. ' ' → logprob: -8.883594512939453
    7. '!=' → logprob: -9.883594512939453
    8. ' ==' → logprob: -10.258594512939453
    9. '<|end|>' → logprob: -10.258594512939453
    10. '==' → logprob: -10.633594512939453

Token 51: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2014157623052597
    2. ' ' → logprob: -1.701415777206421
    3. '  ' → logprob: -14.076416015625
    4. '1' → logprob: -14.701416015625
    5. '>' → logprob: -15.076416015625
    6. ' ' → logprob: -15.201416015625
    7. '=' → logprob: -15.326416015625
    8. '   ' → logprob: -16.013916015625
    9. '<|end|>' → logprob: -17.013916015625
    10. '2' → logprob: -17.013916015625

Token 52: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043102685594931245
    2. ' ' → logprob: -7.750431060791016
    3. '1' → logprob: -15.750431060791016
    4. '  ' → logprob: -16.625431060791016
    5. '=' → logprob: -17.500431060791016
    6. '>' → logprob: -18.125431060791016
    7. '```' → logprob: -18.125431060791016
    8. '۰' → logprob: -18.375431060791016
    9. '   ' → logprob: -18.500431060791016
    10. ' ' → logprob: -18.812931060791016

Token 53: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.6346305012702942
    2. ' else' → logprob: -0.7596305012702942
    3. '<|end|>' → logprob: -7.1346306800842285
    4. '
' → logprob: -7.6346306800842285
    5. '	else' → logprob: -7.8846306800842285
    6. '\n' → logprob: -8.75963020324707
    7. '[:]' → logprob: -10.00963020324707
    8. '```' → logprob: -10.25963020324707
    9. 'elif' → logprob: -10.88463020324707
    10. '' → logprob: -10.88463020324707

Token 54: ' []

' (ID: 32833)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0033046200405806303
    2. ' []' → logprob: -5.753304481506348
    3. '{}' → logprob: -9.503304481506348
    4. '[]
' → logprob: -10.753304481506348
    5. 'None' → logprob: -11.128304481506348
    6. '[]}' → logprob: -12.253304481506348
    7. '[' → logprob: -12.628304481506348
    8. '[]

' → logprob: -13.128304481506348
    9. '   ' → logprob: -13.378304481506348
    10. ' ' → logprob: -13.753304481506348

Token 55: 'p' (ID: 79)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46007564663887024
    2. '\n' → logprob: -2.085075616836548
    3. 'n' → logprob: -2.460075616836548
    4. '#' → logprob: -3.335075616836548
    5. 'r' → logprob: -3.585075616836548
    6. '```' → logprob: -3.710075616836548
    7. '' → logprob: -4.085075855255127
    8. ' 
' → logprob: -4.460075855255127
    9. ' ' → logprob: -4.835075855255127
    10. '\' → logprob: -4.835075855255127

Token 56: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -6.20603168499656e-05
    2. 'ri' → logprob: -10.875061988830566
    3. 'rin' → logprob: -11.625061988830566
    4. '_r' → logprob: -12.250061988830566
    5. 'riv' → logprob: -12.250061988830566
    6. ' r' → logprob: -12.875061988830566
    7. 'print' → logprob: -13.125061988830566
    8. 'riority' → logprob: -13.500061988830566
    9. '[r' → logprob: -13.750061988830566
    10. 'a' → logprob: -13.875061988830566

Token 57: ' int' (ID: 677)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.29008108377456665
    2. ' []' → logprob: -2.415081024169922
    3. 'int' → logprob: -2.790081024169922
    4. 'list' → logprob: -3.415081024169922
    5. '0' → logprob: -3.665081024169922
    6. 'graph' → logprob: -3.915081024169922
    7. 'r' → logprob: -5.040081024169922
    8. '{}' → logprob: -5.540081024169922
    9. '[int' → logprob: -6.040081024169922
    10. 'sorted' → logprob: -6.665081024169922

Token 58: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1135108545422554
    2. '(input' → logprob: -2.238510847091675
    3. '()' → logprob: -7.863511085510254
    4. ' (' → logprob: -8.738511085510254
    5. 'input' → logprob: -9.488511085510254
    6. '('' → logprob: -11.238511085510254
    7. '(
' → logprob: -11.488511085510254
    8. '(space' → logprob: -11.738511085510254
    9. '(p' → logprob: -11.988511085510254
    10. '((' → logprob: -12.613511085510254

Token 59: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.10040680319070816
    2. '()' → logprob: -2.6004068851470947
    3. ')' → logprob: -3.8504068851470947
    4. '())
' → logprob: -12.225406646728516
    5. '(' → logprob: -12.475406646728516
    6. '()
' → logprob: -12.850406646728516
    7. ' ())' → logprob: -13.100406646728516
    8. '`)' → logprob: -14.225406646728516
    9. '();)' → logprob: -14.600406646728516
    10. ' )' → logprob: -15.225406646728516

Token 60: 'pack' (ID: 7786)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.06040368601679802
    2. 'query' → logprob: -3.31040358543396
    3. 'queries' → logprob: -4.185403823852539
    4. 'graph' → logprob: -6.560403823852539
    5. 'result' → logprob: -6.935403823852539
    6. 'q' → logprob: -6.935403823852539
    7. 'edges' → logprob: -7.810403823852539
    8. 't' → logprob: -7.935403823852539
    9. 'results' → logprob: -8.310403823852539
    10. ' for' → logprob: -8.435403823852539

Token 61: 'ets' (ID: 1719)
  Prédit: 'ages'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ages' → logprob: -0.9496070742607117
    2. 'age' → logprob: -1.0746071338653564
    3. 'ets' → logprob: -1.5746071338653564
    4. 'et' → logprob: -2.8246071338653564
    5. 'e' → logprob: -6.199606895446777
    6. '_age' → logprob: -7.199606895446777
    7. ' =' → logprob: -7.324606895446777
    8. '_' → logprob: -7.699606895446777
    9. 'a' → logprob: -7.824606895446777
    10. '=' → logprob: -8.574606895446777

Token 62: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7666073441505432
    2. '[' → logprob: -1.1416072845458984
    3. '.' → logprob: -2.0166072845458984
    4. '_' → logprob: -3.0166072845458984
    5. '=' → logprob: -3.6416072845458984
    6. 's' → logprob: -6.016607284545898
    7. ')' → logprob: -6.891607284545898
    8. '[]' → logprob: -7.016607284545898
    9. ' ' → logprob: -7.766607284545898
    10. ']' → logprob: -8.016607284545898

Token 63: ' [' (ID: 723)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.7004038691520691
    2. ' []' → logprob: -0.7004038691520691
    3. 'list' → logprob: -5.700403690338135
    4. '[' → logprob: -6.200403690338135
    5. '[list' → logprob: -6.950403690338135
    6. ' list' → logprob: -7.700403690338135
    7. ' [' → logprob: -8.075404167175293
    8. '[p' → logprob: -9.700404167175293
    9. '[input' → logprob: -11.075404167175293
    10. ' ' → logprob: -11.450404167175293

Token 64: 'tuple' (ID: 52834)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.3156145513057709
    2. 'int' → logprob: -1.3156145811080933
    3. ' list' → logprob: -7.440614700317383
    4. '0' → logprob: -7.815614700317383
    5. ']' → logprob: -7.815614700317383
    6. 'tuple' → logprob: -7.940614700317383
    7. '[]' → logprob: -8.065614700317383
    8. ' int' → logprob: -9.440614700317383
    9. 'map' → logprob: -9.940614700317383
    10. ')' → logprob: -10.315614700317383

Token 65: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.0012453512754291296
    2. '(' → logprob: -7.001245498657227
    3. '(int' → logprob: -8.376245498657227
    4. '(input' → logprob: -9.376245498657227
    5. 'map' → logprob: -11.751245498657227
    6. '()' → logprob: -12.251245498657227
    7. '(list' → logprob: -12.376245498657227
    8. '(
' → logprob: -14.001245498657227
    9. '(

' → logprob: -15.626245498657227
    10. '(tuple' → logprob: -15.626245498657227

Token 66: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.018476033583283424
    2. 'int' → logprob: -4.0184760093688965
    3. '[int' → logprob: -8.893476486206055
    4. '<int' → logprob: -9.643476486206055
    5. ',int' → logprob: -10.018476486206055
    6. '=int' → logprob: -10.768476486206055
    7. ']int' → logprob: -10.768476486206055
    8. '(' → logprob: -11.143476486206055
    9. ' int' → logprob: -11.643476486206055
    10. '```' → logprob: -12.393476486206055

Token 67: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.003623354248702526
    2. ',input' → logprob: -6.6286234855651855
    3. 'input' → logprob: -6.7536234855651855
    4. '(' → logprob: -6.8786234855651855
    5. ')' → logprob: -10.128623008728027
    6. ',' → logprob: -10.753623008728027
    7. '),' → logprob: -11.378623008728027
    8. ' input' → logprob: -11.628623008728027
    9. '=input' → logprob: -11.753623008728027
    10. '))' → logprob: -12.503623008728027

Token 68: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3132653534412384
    2. ' input' → logprob: -1.313265323638916
    3. '(input' → logprob: -13.438265800476074
    4. ')' → logprob: -14.063265800476074
    5. ',input' → logprob: -14.188265800476074
    6. '=input' → logprob: -15.688265800476074
    7. 'list' → logprob: -15.813265800476074
    8. '[input' → logprob: -16.188264846801758
    9. '_input' → logprob: -16.313264846801758
    10. '	input' → logprob: -16.563264846801758

Token 69: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00010044389637187123
    2. '()' → logprob: -9.250100135803223
    3. ' ().' → logprob: -12.750100135803223
    4. '.' → logprob: -14.750100135803223
    5. '()))' → logprob: -15.500100135803223
    6. ' ' → logprob: -15.750100135803223
    7. '(' → logprob: -15.875100135803223
    8. '()
' → logprob: -16.00010108947754
    9. '())' → logprob: -16.62510108947754
    10. '()).' → logprob: -16.75010108947754

Token 70: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.438573680294212e-06
    2. 'strip' → logprob: -12.250005722045898
    3. ' split' → logprob: -14.500005722045898
    4. '(split' → logprob: -17.0000057220459
    5. 'rstrip' → logprob: -18.1250057220459
    6. 'spl' → logprob: -19.3750057220459
    7. '.split' → logprob: -20.3750057220459
    8. 's' → logprob: -20.8750057220459
    9. '```' → logprob: -21.2500057220459
    10. 'read' → logprob: -21.2500057220459

Token 71: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.009270301088690758
    2. '))' → logprob: -4.884270191192627
    3. '()' → logprob: -6.759270191192627
    4. '())' → logprob: -8.009270668029785
    5. '()))
' → logprob: -8.884270668029785
    6. '(' → logprob: -10.634270668029785
    7. '()
' → logprob: -13.134270668029785
    8. '())))' → logprob: -13.509270668029785
    9. '()));' → logprob: -13.884270668029785
    10. ')' → logprob: -14.009270668029785

Token 72: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004755257163196802
    2. ')]' → logprob: -5.879755020141602
    3. '()' → logprob: -6.379755020141602
    4. '())' → logprob: -8.754755020141602
    5. 'for' → logprob: -10.254755020141602
    6. ']' → logprob: -11.004755020141602
    7. ' )' → logprob: -11.629755020141602
    8. '))' → logprob: -11.629755020141602
    9. '()]' → logprob: -11.754755020141602
    10. '(' → logprob: -12.379755020141602

Token 73: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.13672514259815216
    2. '_' → logprob: -2.6367251873016357
    3. ' _' → logprob: -2.8867251873016357
    4. 'range' → logprob: -8.511725425720215
    5. '_range' → logprob: -8.761725425720215
    6. ' p' → logprob: -10.011725425720215
    7. ' i' → logprob: -11.011725425720215
    8. ' ' → logprob: -11.761725425720215
    9. ' in' → logprob: -13.136725425720215
    10. ' xrange' → logprob: -13.386725425720215

Token 74: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.14465972781181335
    2. ' in' → logprob: -2.6446597576141357
    3. 'range' → logprob: -2.7696597576141357
    4. ' p' → logprob: -7.644659519195557
    5. 'in' → logprob: -8.269659996032715
    6. ' ' → logprob: -8.644659996032715
    7. '(range' → logprob: -11.394659996032715
    8. '(' → logprob: -12.019659996032715
    9. '_' → logprob: -12.019659996032715
    10. 'p' → logprob: -12.144659996032715

Token 75: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048600658774375916
    2. ' range' → logprob: -3.048600673675537
    3. 'p' → logprob: -11.923600196838379
    4. '(range' → logprob: -12.923600196838379
    5. 'pack' → logprob: -13.048600196838379
    6. ' ' → logprob: -13.923600196838379
    7. ' p' → logprob: -14.548600196838379
    8. '	range' → logprob: -15.548600196838379
    9. '[' → logprob: -16.048601150512695
    10. 'rang' → logprob: -16.173601150512695

Token 76: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.002113381866365671
    2. 'p' → logprob: -6.377113342285156
    3. '(' → logprob: -7.877113342285156
    4. ' p' → logprob: -10.502113342285156
    5. ' (' → logprob: -12.752113342285156
    6. ')' → logprob: -14.752113342285156
    7. '(n' → logprob: -14.752113342285156
    8. '(
' → logprob: -15.377113342285156
    9. ')p' → logprob: -16.627113342285156
    10. '_p' → logprob: -17.002113342285156

Token 77: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00025883622583933175
    2. ')' → logprob: -8.375258445739746
    3. ']' → logprob: -10.875258445739746
    4. '])]' → logprob: -12.875258445739746
    5. ')])' → logprob: -13.125258445739746
    6. '))' → logprob: -13.250258445739746
    7. ' )' → logprob: -14.000258445739746
    8. '')]' → logprob: -14.250258445739746
    9. ')]
' → logprob: -14.375258445739746
    10. '])' → logprob: -15.500258445739746

Token 78: 'from' (ID: 2845)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7902390956878662
    2. 'for' → logprob: -1.0402390956878662
    3. 'dist' → logprob: -2.540239095687866
    4. 'visited' → logprob: -2.915239095687866
    5. 'result' → logprob: -3.790239095687866
    6. 'results' → logprob: -3.915239095687866
    7. 'answers' → logprob: -4.915239334106445
    8. 'dp' → logprob: -5.915239334106445
    9. 'distance' → logprob: -6.040239334106445
    10. 'answer' → logprob: -6.915239334106445

Token 79: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -1.664371848164592e-05
    2. ' queue' → logprob: -11.375016212463379
    3. ' collection' → logprob: -12.375016212463379
    4. 'collections' → logprob: -14.500016212463379
    5. ' sys' → logprob: -15.625016212463379
    6. ' colle' → logprob: -15.750016212463379
    7. ' cole' → logprob: -18.125017166137695
    8. ' kole' → logprob: -18.375017166137695
    9. ' collect' → logprob: -18.750017166137695
    10. ' c' → logprob: -19.000017166137695

Token 80: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.20201295614242554
    2. 'import' → logprob: -1.7020130157470703
    3. ' ' → logprob: -7.70201301574707
    4. '.' → logprob: -9.70201301574707
    5. ' ' → logprob: -10.70201301574707
    6. '	import' → logprob: -11.07701301574707
    7. ' defaultdict' → logprob: -11.32701301574707
    8. '<|end|>' → logprob: -11.95201301574707
    9. ' importar' → logprob: -12.57701301574707
    10. ' impor' → logprob: -12.95201301574707

Token 81: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.2021646946668625
    2. 'deque' → logprob: -1.702164649963379
    3. ' defaultdict' → logprob: -7.202164649963379
    4. 'de' → logprob: -12.452164649963379
    5. 'default' → logprob: -13.077164649963379
    6. 'collections' → logprob: -16.452165603637695
    7. '```' → logprob: -17.827165603637695
    8. ' de' → logprob: -17.952165603637695
    9. 'd' → logprob: -18.327165603637695
    10. ' dequeue' → logprob: -18.952165603637695

Token 82: '

' (ID: 279)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.9196007251739502
    2. 'results' → logprob: -1.7946007251739502
    3. 'dist' → logprob: -2.29460072517395
    4. '
' → logprob: -2.41960072517395
    5. 'for' → logprob: -2.66960072517395
    6. 'def' → logprob: -2.91960072517395
    7. 'distance' → logprob: -3.04460072517395
    8. 'result' → logprob: -3.16960072517395
    9. 'queue' → logprob: -4.169600486755371
    10. 'answers' → logprob: -4.919600486755371

Token 83: 'for' (ID: 1938)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.14972425997257233
    2. 'for' → logprob: -2.774724245071411
    3. 'dist' → logprob: -3.149724245071411
    4. 'results' → logprob: -4.27472448348999
    5. 'visited' → logprob: -4.39972448348999
    6. 'result' → logprob: -5.77472448348999
    7. 'distance' → logprob: -5.89972448348999
    8. 'answers' → logprob: -7.02472448348999
    9. '
' → logprob: -8.024724006652832
    10. 'queue' → logprob: -8.899724006652832

Token 84: ' s' (ID: 265)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5762512683868408
    2. ' packet' → logprob: -1.2012512683868408
    3. ' p' → logprob: -2.451251268386841
    4. ' _' → logprob: -3.326251268386841
    5. ' packets' → logprob: -4.826251029968262
    6. ' i' → logprob: -6.576251029968262
    7. ' node' → logprob: -6.826251029968262
    8. ' r' → logprob: -7.076251029968262
    9. ' pack' → logprob: -7.451251029968262
    10. ' v' → logprob: -8.076251029968262

Token 85: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05515589192509651
    2. ',' → logprob: -3.1801559925079346
    3. ' ' → logprob: -5.0551557540893555
    4. ' i' → logprob: -5.6801557540893555
    5. ' ,' → logprob: -6.3051557540893555
    6. 'in' → logprob: -8.430155754089355
    7. 'i' → logprob: -9.555155754089355
    8. 'ource' → logprob: -10.180155754089355
    9. '_' → logprob: -10.430155754089355
    10. 't' → logprob: -10.930155754089355

Token 86: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.5464310646057129
    2. 't' → logprob: -1.046431064605713
    3. 'e' → logprob: -3.421431064605713
    4. ' d' → logprob: -3.796431064605713
    5. ' t' → logprob: -4.671431064605713
    6. 'g' → logprob: -6.171431064605713
    7. ' e' → logprob: -7.171431064605713
    8. 'f' → logprob: -7.546431064605713
    9. ' ' → logprob: -7.921431064605713
    10. 'b' → logprob: -8.421430587768555

Token 87: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03815796226263046
    2. 'in' → logprob: -3.2881579399108887
    3. ':' → logprob: -10.038158416748047
    4. ',' → logprob: -10.663158416748047
    5. ' ' → logprob: -11.163158416748047
    6. ' :' → logprob: -11.288158416748047
    7. '	in' → logprob: -11.788158416748047
    8. ' i' → logprob: -11.913158416748047
    9. 's' → logprob: -13.163158416748047
    10. '  ' → logprob: -13.913158416748047

Token 88: ' ttl' (ID: 131197)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.4783186614513397
    2. '_' → logprob: -1.228318691253662
    3. ' t' → logprob: -3.478318691253662
    4. 'l' → logprob: -4.353318691253662
    5. 'b' → logprob: -4.728318691253662
    6. 'm' → logprob: -5.353318691253662
    7. 'v' → logprob: -5.478318691253662
    8. 'x' → logprob: -5.728318691253662
    9. ' _' → logprob: -5.728318691253662
    10. 'h' → logprob: -5.978318691253662

Token 89: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1609276831150055
    2. 'in' → logprob: -1.910927653312683
    3. ',' → logprob: -8.035927772521973
    4. ':' → logprob: -8.035927772521973
    5. ' ' → logprob: -11.285927772521973
    6. ' :' → logprob: -11.660927772521973
    7. ' i' → logprob: -11.910927772521973
    8. '=' → logprob: -12.160927772521973
    9. '	in' → logprob: -12.535927772521973
    10. ')' → logprob: -12.660927772521973

Token 90: ' packets' (ID: 58163)
  Prédit: ' packets'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' packets' → logprob: -0.005536943208426237
    2. ' range' → logprob: -6.130537033081055
    3. 'pack' → logprob: -6.505537033081055
    4. ' p' → logprob: -7.255537033081055
    5. ' graph' → logprob: -8.005537033081055
    6. ' ' → logprob: -8.255537033081055
    7. ' pack' → logprob: -8.755537033081055
    8. ' (' → logprob: -9.255537033081055
    9. 'range' → logprob: -9.755537033081055
    10. ' [(' → logprob: -10.005537033081055

Token 91: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.523948907968588e-05
    2. ':
' → logprob: -10.375035285949707
    3. ':**' → logprob: -13.500035285949707
    4. '):' → logprob: -13.875035285949707
    5. ' :' → logprob: -14.125035285949707
    6. ',' → logprob: -15.000035285949707
    7. '>:' → logprob: -16.12503433227539
    8. ':int' → logprob: -16.75003433227539
    9. ':return' → logprob: -16.87503433227539
    10. '<|end|>' → logprob: -16.87503433227539

Token 92: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7031721472740173
    2. '   ' → logprob: -0.7031721472740173
    3. ' :' → logprob: -5.453172206878662
    4. '<|end|>' → logprob: -6.703172206878662
    5. ':
' → logprob: -6.828172206878662
    6. '    
' → logprob: -6.828172206878662
    7. ' ' → logprob: -7.828172206878662
    8. '):' → logprob: -7.953172206878662
    9. ' 
' → logprob: -8.203171730041504
    10. '
' → logprob: -8.453171730041504

Token 93: ' if' (ID: 538)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.9234462976455688
    2. ' q' → logprob: -1.9234462976455688
    3. ' 
' → logprob: -2.0484461784362793
    4. '    
' → logprob: -2.0484461784362793
    5. '   ' → logprob: -2.5484461784362793
    6. ' visited' → logprob: -3.7984461784362793
    7. '    ' → logprob: -4.048446178436279
    8. 'queue' → logprob: -4.423446178436279
    9. '   
' → logprob: -4.548446178436279
    10. '     
' → logprob: -4.548446178436279

Token 94: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.0043033575639128685
    2. 's' → logprob: -6.129303455352783
    3. ' ' → logprob: -6.254303455352783
    4. ' (' → logprob: -9.004302978515625
    5. ' graph' → logprob: -10.504302978515625
    6. ' not' → logprob: -11.129302978515625
    7. ' d' → logprob: -11.879302978515625
    8. '  ' → logprob: -12.629302978515625
    9. '(s' → logprob: -13.004302978515625
    10. ' ' → logprob: -13.191802978515625

Token 95: ' ==' (ID: 951)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.886047899723053
    2. ' ==' → logprob: -1.0110478401184082
    3. '==' → logprob: -1.5110478401184082
    4. 'not' → logprob: -5.761047840118408
    5. ' in' → logprob: -10.636048316955566
    6. ')' → logprob: -12.136048316955566
    7. '==
' → logprob: -12.261048316955566
    8. ' ' → logprob: -12.511048316955566
    9. '>' → logprob: -12.761048316955566
    10. '=' → logprob: -12.886048316955566

Token 96: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.14324015378952026
    2. 'd' → logprob: -2.018240213394165
    3. ' ' → logprob: -8.143239974975586
    4. '=' → logprob: -8.518239974975586
    5. '	d' → logprob: -11.143239974975586
    6. '   ' → logprob: -11.268239974975586
    7. '  ' → logprob: -11.393239974975586
    8. '0' → logprob: -11.393239974975586
    9. '=d' → logprob: -12.143239974975586
    10. ' -' → logprob: -12.518239974975586

Token 97: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03438519686460495
    2. ':
' → logprob: -3.4093852043151855
    3. ' or' → logprob: -7.6593852043151855
    4. ' and' → logprob: -8.659384727478027
    5. '   ' → logprob: -9.659384727478027
    6. 'and' → logprob: -10.909384727478027
    7. ' :' → logprob: -12.784384727478027
    8. 'or' → logprob: -12.784384727478027
    9. '.' → logprob: -13.909384727478027
    10. ' :
' → logprob: -14.034384727478027

Token 98: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49005126953125
    2. '   ' → logprob: -1.49005126953125
    3. ':' → logprob: -1.99005126953125
    4. '    
' → logprob: -4.49005126953125
    5. '
' → logprob: -5.61505126953125
    6. ':
' → logprob: -5.74005126953125
    7. ' print' → logprob: -5.99005126953125
    8. '        
' → logprob: -5.99005126953125
    9. '```' → logprob: -7.11505126953125
    10. ',' → logprob: -8.49005126953125

Token 99: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6563754677772522
    2. '
' → logprob: -1.0313754081726074
    3. ' print' → logprob: -2.6563754081726074
    4. 'print' → logprob: -3.2813754081726074
    5. '       ' → logprob: -4.781375408172607
    6. '```' → logprob: -5.656375408172607
    7. '    
' → logprob: -5.781375408172607
    8. ' 
' → logprob: -7.031375408172607
    9. '\n' → logprob: -7.781375408172607
    10. '        
' → logprob: -8.781375885009766

Token 100: ' Problem' (ID: 26113)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.36396896839141846
    2. 'print' → logprob: -1.2389689683914185
    3. '   ' → logprob: -4.238968849182129
    4. '
' → logprob: -7.863968849182129
    5. '```' → logprob: -7.988968849182129
    6. '    ' → logprob: -9.113968849182129
    7. '       ' → logprob: -9.863968849182129
    8. '    
' → logprob: -10.738968849182129
    9. ' continue' → logprob: -11.238968849182129
    10. ' ' → logprob: -11.863968849182129

Token 101: ' states' (ID: 9407)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.36193448305130005
    2. '       ' → logprob: -1.2369344234466553
    3. '
' → logprob: -4.986934661865234
    4. ':' → logprob: -5.611934661865234
    5. ' print' → logprob: -7.111934661865234
    6. 'print' → logprob: -7.361934661865234
    7. '    
' → logprob: -7.861934661865234
    8. '```' → logprob: -8.361934661865234
    9. '        
' → logprob: -8.861934661865234
    10. ',' → logprob: -9.236934661865234

Token 102: ' s' (ID: 265)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22978904843330383
    2. '       ' → logprob: -1.9797890186309814
    3. ' print' → logprob: -3.2297890186309814
    4. '
' → logprob: -5.1047892570495605
    5. ':' → logprob: -5.2297892570495605
    6. 'print' → logprob: -5.2297892570495605
    7. ' ' → logprob: -5.6047892570495605
    8. '0' → logprob: -6.1047892570495605
    9. '    ' → logprob: -6.3547892570495605
    10. '    
' → logprob: -6.8547892570495605

Token 103: ' !=' (ID: 1666)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6995435357093811
    2. ' continue' → logprob: -2.3245434761047363
    3. ' ==' → logprob: -2.6995434761047363
    4. ' in' → logprob: -3.0745434761047363
    5. ',' → logprob: -3.3245434761047363
    6. 'print' → logprob: -3.5745434761047363
    7. ' print' → logprob: -3.5745434761047363
    8. ' can' → logprob: -3.5745434761047363
    9. ' is' → logprob: -3.8245434761047363
    10. ' ' → logprob: -4.324543476104736

Token 104: ' d' (ID: 272)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5563691258430481
    2. 'continue' → logprob: -1.8063690662384033
    3. '1' → logprob: -2.0563690662384033
    4. ' s' → logprob: -2.9313690662384033
    5. 's' → logprob: -3.6813690662384033
    6. '0' → logprob: -4.056369304656982
    7. ' d' → logprob: -4.306369304656982
    8. 'd' → logprob: -4.556369304656982
    9. ' ' → logprob: -4.681369304656982
    10. '   ' → logprob: -6.681369304656982

Token 105: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6040430665016174
    2. '   ' → logprob: -1.4790430068969727
    3. ' continue' → logprob: -1.8540430068969727
    4. 'continue' → logprob: -2.9790430068969727
    5. '
' → logprob: -4.604043006896973
    6. '	continue' → logprob: -5.604043006896973
    7. '\n' → logprob: -6.979043006896973
    8. ':' → logprob: -6.979043006896973
    9. ':
' → logprob: -7.354043006896973
    10. '           ' → logprob: -7.604043006896973

Token 106: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11334866285324097
    2. ' continue' → logprob: -2.6133487224578857
    3. '   ' → logprob: -3.7383487224578857
    4. 'continue' → logprob: -4.613348484039307
    5. 'print' → logprob: -10.613348960876465
    6. ' print' → logprob: -10.613348960876465
    7. '	continue' → logprob: -10.613348960876465
    8. '           ' → logprob: -10.988348960876465
    9. '```' → logprob: -10.988348960876465
    10. '    ' → logprob: -11.613348960876465

Token 107: ' just' (ID: 1327)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7783758640289307
    2. ' continue' → logprob: -0.7783758640289307
    3. '       ' → logprob: -3.0283758640289307
    4. ' print' → logprob: -4.153375625610352
    5. 'continue' → logprob: -4.278375625610352
    6. 'print' → logprob: -6.153375625610352
    7. '    ' → logprob: -7.528375625610352
    8. '    
' → logprob: -7.903375625610352
    9. '	continue' → logprob: -8.903375625610352
    10. '```' → logprob: -9.403375625610352

Token 108: ' in' (ID: 306)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01314399391412735
    2. ' continue' → logprob: -5.388144016265869
    3. 'print' → logprob: -5.888144016265869
    4. 'continue' → logprob: -5.888144016265869
    5. ' print' → logprob: -6.013144016265869
    6. '       ' → logprob: -7.638144016265869
    7. '```' → logprob: -11.638143539428711
    8. '
' → logprob: -14.013143539428711
    9. '    ' → logprob: -14.013143539428711
    10. '	continue' → logprob: -14.013143539428711

Token 109: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.02628972940146923
    2. 'this' → logprob: -3.901289701461792
    3. ' case' → logprob: -5.651289939880371
    4. 'pass' → logprob: -6.651289939880371
    5. ' this' → logprob: -7.901289939880371
    6. '   ' → logprob: -8.026289939880371
    7. 'continue' → logprob: -9.276289939880371
    8. 'code' → logprob: -10.276289939880371
    9. 'that' → logprob: -10.401289939880371
    10. '```' → logprob: -10.901289939880371

Token 110: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16428923606872559
    2. '   ' → logprob: -2.7892892360687256
    3. '
' → logprob: -3.0392892360687256
    4. ' continue' → logprob: -3.9142892360687256
    5. ':' → logprob: -4.664289474487305
    6. 'continue' → logprob: -5.039289474487305
    7. ',' → logprob: -5.664289474487305
    8. '    
' → logprob: -7.164289474487305
    9. ':
' → logprob: -7.539289474487305
    10. '        
' → logprob: -8.039289474487305

Token 111: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08313629031181335
    2. '       ' → logprob: -2.8331363201141357
    3. '
' → logprob: -4.583136081695557
    4. ' continue' → logprob: -5.333136081695557
    5. 'continue' → logprob: -6.208136081695557
    6. '    
' → logprob: -6.208136081695557
    7. 'print' → logprob: -7.458136081695557
    8. ':' → logprob: -8.208136558532715
    9. ':
' → logprob: -8.208136558532715
    10. '        
' → logprob: -8.333136558532715

Token 112: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.05270291864871979
    2. '   ' → logprob: -3.5527029037475586
    3. ' print' → logprob: -3.8027029037475586
    4. '
' → logprob: -8.552702903747559
    5. '       ' → logprob: -9.427702903747559
    6. '    
' → logprob: -10.302702903747559
    7. '```' → logprob: -10.552702903747559
    8. 'continue' → logprob: -10.802702903747559
    9. '	print' → logprob: -12.302702903747559
    10. '  ' → logprob: -12.427702903747559

Token 113: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.09634577482938766
    2. '0' → logprob: -2.4713456630706787
    3. '(tt' → logprob: -5.346345901489258
    4. ' (' → logprob: -6.971345901489258
    5. '("' → logprob: -7.346345901489258
    6. 'ttl' → logprob: -7.721345901489258
    7. '(-' → logprob: -8.846345901489258
    8. '('' → logprob: -9.221345901489258
    9. ' ' → logprob: -9.221345901489258
    10. '1' → logprob: -9.346345901489258

Token 114: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08115390688180923
    2. 'ttl' → logprob: -2.5811538696289062
    3. '1' → logprob: -7.081153869628906
    4. '"' → logprob: -7.706153869628906
    5. ' ttl' → logprob: -7.706153869628906
    6. ' ' → logprob: -7.831153869628906
    7. 's' → logprob: -10.831153869628906
    8. 'tt' → logprob: -11.081153869628906
    9. 'TTL' → logprob: -11.206153869628906
    10. ''' → logprob: -11.331153869628906

Token 115: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20157597959041595
    2. ')' → logprob: -1.7015759944915771
    3. '   ' → logprob: -9.076576232910156
    4. ')
' → logprob: -10.701576232910156
    5. ' )
' → logprob: -10.951576232910156
    6. ' )' → logprob: -12.076576232910156
    7. '
' → logprob: -13.451576232910156
    8. ')`
' → logprob: -14.576576232910156
    9. ')

' → logprob: -15.576576232910156
    10. '       ' → logprob: -15.576576232910156

Token 116: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004267985001206398
    2. ' continue' → logprob: -6.129268169403076
    3. 'continue' → logprob: -6.379268169403076
    4. '       ' → logprob: -9.379267692565918
    5. 'else' → logprob: -9.379267692565918
    6. '	continue' → logprob: -9.629267692565918
    7. '    
' → logprob: -9.754267692565918
    8. '
' → logprob: -10.129267692565918
    9. ' else' → logprob: -10.379267692565918
    10. ')' → logprob: -12.879267692565918

Token 117: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.7457324266433716
    2. '   ' → logprob: -0.8707324266433716
    3. ' continue' → logprob: -2.370732307434082
    4. '       ' → logprob: -4.995732307434082
    5. '	continue' → logprob: -5.245732307434082
    6. '
' → logprob: -6.745732307434082
    7. 'contin' → logprob: -8.870732307434082
    8. ' ' → logprob: -9.620732307434082
    9. '_continue' → logprob: -9.870732307434082
    10. '    
' → logprob: -10.870732307434082

Token 118: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4096147119998932
    2. '   ' → logprob: -1.4096146821975708
    3. '    
' → logprob: -2.5346148014068604
    4. '<|end|>' → logprob: -4.659614562988281
    5. '  
' → logprob: -6.409614562988281
    6. ' 
' → logprob: -7.534614562988281
    7. '   
' → logprob: -8.159614562988281
    8. '<|end|>' → logprob: -8.784614562988281
    9. 'n' → logprob: -9.159614562988281
    10. '  ' → logprob: -9.534614562988281

Token 119: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24422402679920197
    2. '    
' → logprob: -2.2442240715026855
    3. '   ' → logprob: -2.2442240715026855
    4. '  
' → logprob: -5.9942240715026855
    5. ' 
' → logprob: -7.1192240715026855
    6. '   
' → logprob: -7.7442240715026855
    7. 'n' → logprob: -8.869223594665527
    8. ' queue' → logprob: -9.369223594665527
    9. '<|end|>' → logprob: -9.619223594665527
    10. 'deque' → logprob: -9.994223594665527

Token 120: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27358007431030273
    2. 'queue' → logprob: -1.6485800743103027
    3. 'visited' → logprob: -3.7735800743103027
    4. ' queue' → logprob: -4.273580074310303
    5. '    
' → logprob: -5.023580074310303
    6. '
' → logprob: -6.523580074310303
    7. 'q' → logprob: -7.023580074310303
    8. ' visited' → logprob: -7.773580074310303
    9. 'distance' → logprob: -8.898580551147461
    10. '```' → logprob: -8.898580551147461

Token 121: ' BFS' (ID: 190016)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.6716333031654358
    2. 'queue' → logprob: -1.171633243560791
    3. 'visited' → logprob: -2.171633243560791
    4. 'q' → logprob: -3.796633243560791
    5. ' visited' → logprob: -3.796633243560791
    6. '   ' → logprob: -4.546633243560791
    7. ' q' → logprob: -4.921633243560791
    8. '```' → logprob: -7.421633243560791
    9. 'dist' → logprob: -8.04663372039795
    10. 'que' → logprob: -8.67163372039795

Token 122: ' to' (ID: 316)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.041461918503046036
    2. ' queue' → logprob: -4.541461944580078
    3. 'queue' → logprob: -4.666461944580078
    4. '<|end|>' → logprob: -5.291461944580078
    5. '(queue' → logprob: -5.416461944580078
    6. ' 
' → logprob: -5.791461944580078
    7. '   ' → logprob: -6.291461944580078
    8. '    
' → logprob: -6.541461944580078
    9. '  
' → logprob: -7.166461944580078
    10. ':' → logprob: -7.416461944580078

Token 123: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.3489188551902771
    2. 'find' → logprob: -1.2239189147949219
    3. ' explore' → logprob: -8.348918914794922
    4. 'visit' → logprob: -9.848918914794922
    5. ' visit' → logprob: -10.598918914794922
    6. 'count' → logprob: -10.973918914794922
    7. 'search' → logprob: -11.223918914794922
    8. ' bfs' → logprob: -11.223918914794922
    9. 'expl' → logprob: -11.473918914794922
    10. ' reach' → logprob: -11.598918914794922

Token 124: ' shortest' (ID: 70564)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.0441828966140747
    2. 'distance' → logprob: -1.1691828966140747
    3. ' the' → logprob: -1.4191828966140747
    4. ' shortest' → logprob: -3.544182777404785
    5. ' distance' → logprob: -3.919182777404785
    6. 'steps' → logprob: -5.044182777404785
    7. 'short' → logprob: -5.294182777404785
    8. 'minimum' → logprob: -5.419182777404785
    9. 'path' → logprob: -5.544182777404785
    10. 'depth' → logprob: -5.544182777404785

Token 125: ' path' (ID: 3104)
  Prédit: ' path'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' path' → logprob: -0.6365262269973755
    2. 'distance' → logprob: -1.6365262269973755
    3. 'path' → logprob: -1.7615262269973755
    4. ' distance' → logprob: -2.386526107788086
    5. '_path' → logprob: -4.886526107788086
    6. '_distance' → logprob: -6.011526107788086
    7. 'dist' → logprob: -6.761526107788086
    8. ' paths' → logprob: -8.386526107788086
    9. '_paths' → logprob: -8.636526107788086
    10. 'paths' → logprob: -8.761526107788086

Token 126: ' length' (ID: 5517)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33087536692619324
    2. ' queue' → logprob: -2.3308753967285156
    3. 'queue' → logprob: -2.5808753967285156
    4. '
' → logprob: -3.3308753967285156
    5. '    
' → logprob: -4.330875396728516
    6. 'q' → logprob: -4.330875396728516
    7. ' ' → logprob: -4.705875396728516
    8. ' q' → logprob: -4.705875396728516
    9. '  
' → logprob: -5.205875396728516
    10. '    ' → logprob: -5.455875396728516

Token 127: ' (' (ID: 350)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05042914301156998
    2. ' queue' → logprob: -3.550429105758667
    3. 'queue' → logprob: -4.425429344177246
    4. '
' → logprob: -5.050429344177246
    5. 'q' → logprob: -7.925429344177246
    6. '    ' → logprob: -8.300429344177246
    7. '    
' → logprob: -8.425429344177246
    8. 'visited' → logprob: -8.675429344177246
    9. '  ' → logprob: -8.800429344177246
    10. ' visited' → logprob: -8.800429344177246

Token 128: 'number' (ID: 8096)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.8189964294433594
    2. 'graph' → logprob: -1.0689964294433594
    3. ')' → logprob: -2.0689964294433594
    4. 'distance' → logprob: -3.9439964294433594
    5. 'visited' → logprob: -4.193996429443359
    6. ' queue' → logprob: -4.693996429443359
    7. 'queue' → logprob: -4.818996429443359
    8. ' )' → logprob: -4.818996429443359
    9. ' distance' → logprob: -4.818996429443359
    10. '   ' → logprob: -4.943996429443359

Token 129: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.1663060486316681
    2. 'of' → logprob: -2.2913060188293457
    3. ')' → logprob: -3.6663060188293457
    4. '_of' → logprob: -3.9163060188293457
    5. '   ' → logprob: -5.916306018829346
    6. ' ' → logprob: -6.041306018829346
    7. ' )' → logprob: -7.791306018829346
    8. '    ' → logprob: -8.041306495666504
    9. '=' → logprob: -8.291306495666504
    10. '  ' → logprob: -8.791306495666504

Token 130: ' nodes' (ID: 15749)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.45051857829093933
    2. ' steps' → logprob: -1.2005186080932617
    3. 'edges' → logprob: -3.5755186080932617
    4. ' hops' → logprob: -3.7005186080932617
    5. 'steps' → logprob: -5.325518608093262
    6. ' ' → logprob: -6.575518608093262
    7. ' spaces' → logprob: -6.950518608093262
    8. ' )' → logprob: -8.075518608093262
    9. ')' → logprob: -8.200518608093262
    10. ' nodes' → logprob: -8.575518608093262

Token 131: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6553987860679626
    2. ' )' → logprob: -1.2803988456726074
    3. ' -' → logprob: -2.4053988456726074
    4. ' in' → logprob: -3.2803988456726074
    5. ' visited' → logprob: -3.9053988456726074
    6. 'visited' → logprob: -3.9053988456726074
    7. ' to' → logprob: -4.030398845672607
    8. ' between' → logprob: -5.155398845672607
    9. ' from' → logprob: -6.030398845672607
    10. '-' → logprob: -6.155398845672607

Token 132: ' from' (ID: 591)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11154849082231522
    2. ' queue' → logprob: -2.98654842376709
    3. '
' → logprob: -3.61154842376709
    4. 'queue' → logprob: -3.86154842376709
    5. '    
' → logprob: -5.98654842376709
    6. 'q' → logprob: -7.11154842376709
    7. 'visited' → logprob: -7.61154842376709
    8. ' q' → logprob: -7.73654842376709
    9. ' visited' → logprob: -7.73654842376709
    10. '    ' → logprob: -7.73654842376709

Token 133: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3132987320423126
    2. ' s' → logprob: -1.3132987022399902
    3. 'graph' → logprob: -10.688299179077148
    4. ' graph' → logprob: -11.313299179077148
    5. '	s' → logprob: -15.188299179077148
    6. 'source' → logprob: -15.563299179077148
    7. '   ' → logprob: -15.688299179077148
    8. '
' → logprob: -15.688299179077148
    9. 'd' → logprob: -15.938299179077148
    10. ')' → logprob: -15.938299179077148

Token 134: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9098995923995972
    2. ' queue' → logprob: -1.2848995923995972
    3. ' to' → logprob: -1.4098995923995972
    4. ' visited' → logprob: -3.4098997116088867
    5. 'queue' → logprob: -4.284899711608887
    6. 'visited' → logprob: -4.659899711608887
    7. '    ' → logprob: -5.409899711608887
    8. ' q' → logprob: -6.034899711608887
    9. ',' → logprob: -6.159899711608887
    10. ' ' → logprob: -6.409899711608887

Token 135: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.3869035243988037
    2. ' d' → logprob: -1.1369035243988037
    3. ' reach' → logprob: -11.886903762817383
    4. 'reach' → logprob: -12.136903762817383
    5. 'graph' → logprob: -12.761903762817383
    6. ' find' → logprob: -12.886903762817383
    7. ' the' → logprob: -13.511903762817383
    8. '...' → logprob: -13.511903762817383
    9. ' ' → logprob: -13.636903762817383
    10. ' graph' → logprob: -13.761903762817383

Token 136: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01594521291553974
    2. ' queue' → logprob: -4.6409454345703125
    3. '
' → logprob: -5.8909454345703125
    4. 'queue' → logprob: -6.0159454345703125
    5. '    
' → logprob: -7.5159454345703125
    6. '    ' → logprob: -9.640945434570312
    7. 'visited' → logprob: -9.640945434570312
    8. 'q' → logprob: -9.890945434570312
    9. '	queue' → logprob: -10.015945434570312
    10. '  ' → logprob: -10.140945434570312

Token 137: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11259874701499939
    2. '
' → logprob: -3.3625986576080322
    3. ' queue' → logprob: -4.237598896026611
    4. ':' → logprob: -4.487598896026611
    5. 'queue' → logprob: -4.737598896026611
    6. '    
' → logprob: -4.737598896026611
    7. '  
' → logprob: -5.862598896026611
    8. 'visited' → logprob: -5.987598896026611
    9. ' ' → logprob: -6.237598896026611
    10. 'q' → logprob: -6.362598896026611

Token 138: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.7311124205589294
    2. ' queue' → logprob: -0.8561124205589294
    3. '   ' → logprob: -2.606112480163574
    4. 'visited' → logprob: -4.606112480163574
    5. ' visited' → logprob: -5.356112480163574
    6. 'q' → logprob: -5.856112480163574
    7. '    
' → logprob: -7.231112480163574
    8. ' q' → logprob: -7.231112480163574
    9. '
' → logprob: -7.731112480163574
    10. ' if' → logprob: -8.606112480163574

Token 139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012511883862316608
    2. '=' → logprob: -4.387511730194092
    3. ' ' → logprob: -13.63751220703125
    4. '<|end|>' → logprob: -15.01251220703125
    5. ')' → logprob: -15.26251220703125
    6. '.' → logprob: -15.63751220703125
    7. ' =)' → logprob: -16.51251220703125
    8. ',' → logprob: -16.63751220703125
    9. ' =
' → logprob: -16.63751220703125
    10. '=[]' → logprob: -17.76251220703125

Token 140: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.5759410858154297
    2. 'deque' → logprob: -0.8259410858154297
    3. 'Deque' → logprob: -13.45094108581543
    4. 'de' → logprob: -15.32594108581543
    5. '	de' → logprob: -18.45094108581543
    6. '(de' → logprob: -18.57594108581543
    7. 'collections' → logprob: -18.70094108581543
    8. '   ' → logprob: -19.32594108581543
    9. ' ' → logprob: -19.82594108581543
    10. '```' → logprob: -19.95094108581543

Token 141: '()
' (ID: 1234)
  Prédit: '([('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.06292498111724854
    2. '()' → logprob: -2.812924861907959
    3. '([' → logprob: -7.562924861907959
    4. '()
' → logprob: -7.812924861907959
    5. '[(' → logprob: -10.687925338745117
    6. '(' → logprob: -12.562925338745117
    7. '()

' → logprob: -13.062925338745117
    8. '((' → logprob: -13.562925338745117
    9. '([
' → logprob: -13.937925338745117
    10. '()\' → logprob: -14.562925338745117

Token 142: '   ' (ID: 271)
  Prédit: '(queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(queue' → logprob: -1.0559031963348389
    2. '[(' → logprob: -1.9309031963348389
    3. ' [(' → logprob: -1.9309031963348389
    4. '[s' → logprob: -2.180903196334839
    5. '(s' → logprob: -2.430903196334839
    6. '([(' → logprob: -3.305903196334839
    7. '[' → logprob: -3.430903196334839
    8. '   ' → logprob: -3.555903196334839
    9. ' (' → logprob: -3.805903196334839
    10. ' [' → logprob: -4.055903434753418

Token 143: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.7464653849601746
    2. 'queue' (adapté à ' queue') → logprob: -0.8714653849601746
    3. '(queue' → logprob: -2.3714654445648193
    4. ' (' → logprob: -4.62146520614624
    5. '   ' → logprob: -6.87146520614624
    6. '(' → logprob: -7.12146520614624
    7. ' [(' → logprob: -7.24646520614624
    8. 'graph' → logprob: -8.496465682983398
    9. 'visited' → logprob: -8.496465682983398
    10. '[(' → logprob: -8.746465682983398

Token 144: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00014585316239390522
    2. '.' → logprob: -10.00014591217041
    3. ' .' → logprob: -10.00014591217041
    4. '.extend' → logprob: -10.62514591217041
    5. 'append' → logprob: -11.62514591217041
    6. '=' → logprob: -12.25014591217041
    7. '.enqueue' → logprob: -12.25014591217041
    8. '().' → logprob: -12.50014591217041
    9. ' =' → logprob: -12.75014591217041
    10. '   ' → logprob: -13.00014591217041

Token 145: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.06429730355739594
    2. '(' → logprob: -2.8142971992492676
    3. '(s' → logprob: -6.064297199249268
    4. '([' → logprob: -13.189297676086426
    5. '([(' → logprob: -15.439297676086426
    6. '[(' → logprob: -15.939297676086426
    7. '(
' → logprob: -16.43929672241211
    8. '(((' → logprob: -16.56429672241211
    9. '(([' → logprob: -17.43929672241211
    10. '(('' → logprob: -17.81429672241211

Token 146: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.8789383830153383e-05
    2. ' s' → logprob: -11.000019073486328
    3. '(s' → logprob: -13.250019073486328
    4. '[s' → logprob: -16.375019073486328
    5. '{s' → logprob: -16.375019073486328
    6. ')s' → logprob: -17.125019073486328
    7. ')' → logprob: -17.500019073486328
    8. '`s' → logprob: -17.500019073486328
    9. '_s' → logprob: -18.125019073486328
    10. '   ' → logprob: -18.125019073486328

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.2994620242971e-06
    2. ' ,' → logprob: -11.750008583068848
    3. '0' → logprob: -15.625008583068848
    4. '1' → logprob: -16.25000762939453
    5. ',
' → logprob: -16.75000762939453
    6. '```' → logprob: -17.25000762939453
    7. '‌,' → logprob: -18.37500762939453
    8. '
' → logprob: -18.37500762939453
    9. ' ' → logprob: -18.50000762939453
    10. '),' → logprob: -19.00000762939453

Token 148: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005604273173958063
    2. '1' → logprob: -5.880604267120361
    3. ' ' → logprob: -5.880604267120361
    4. ')' → logprob: -14.44310474395752
    5. 'ttl' → logprob: -14.56810474395752
    6. ',' → logprob: -14.94310474395752
    7. '   ' → logprob: -15.69310474395752
    8. ' ' → logprob: -15.75560474395752
    9. '```' → logprob: -16.630603790283203
    10. '
' → logprob: -16.755603790283203

Token 149: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00042102107545360923
    2. '1' → logprob: -7.875421047210693
    3. ' ' → logprob: -10.125420570373535
    4. ')' → logprob: -15.250420570373535
    5. 'ttl' → logprob: -15.625420570373535
    6. ',' → logprob: -15.937920570373535
    7. 'depth' → logprob: -16.75042152404785
    8. '))' → logprob: -16.81292152404785
    9. '   ' → logprob: -17.00042152404785
    10. '-' → logprob: -17.37542152404785

Token 150: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008427338674664497
    2. ')' → logprob: -5.133427143096924
    3. ',' → logprob: -6.008427143096924
    4. '))
' → logprob: -11.258427619934082
    5. '),' → logprob: -11.508427619934082
    6. ' ))' → logprob: -11.633427619934082
    7. ')))' → logprob: -13.633427619934082
    8. '));' → logprob: -13.758427619934082
    9. '))

' → logprob: -14.633427619934082
    10. '```' → logprob: -14.758427619934082

Token 151: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1011312007904053
    2. '<|end|>' → logprob: -1.1011312007904053
    3. '
' → logprob: -1.2261312007904053
    4. ')' → logprob: -3.8511312007904053
    5. '```' → logprob: -5.601131439208984
    6. '    
' → logprob: -5.726131439208984
    7. '  
' → logprob: -5.976131439208984
    8. ' ' → logprob: -5.976131439208984
    9. ' 
' → logprob: -6.351131439208984
    10. 'visited' → logprob: -6.476131439208984

Token 152: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6686503291130066
    2. 'visited' → logprob: -1.0436503887176514
    3. 'while' → logprob: -2.1686503887176514
    4. ' while' → logprob: -4.668650150299072
    5. '<|end|>' → logprob: -5.168650150299072
    6. '
' → logprob: -5.918650150299072
    7. ' visited' → logprob: -6.918650150299072
    8. ')' → logprob: -7.043650150299072
    9. '```' → logprob: -7.168650150299072
    10. '    
' → logprob: -8.79365062713623

Token 153: ' (' (ID: 350)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 154: 'current' (ID: 5804)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.04946080222725868
    2. 'current' → logprob: -3.0494608879089355
    3. ' node' → logprob: -7.1744608879089355
    4. ' current' → logprob: -9.424460411071777
    5. 'vertex' → logprob: -10.924460411071777
    6. 'position' → logprob: -12.424460411071777
    7. ')' → logprob: -13.674460411071777
    8. '```' → logprob: -14.674460411071777
    9. 'neighbor' → logprob: -14.674460411071777
    10. 'location' → logprob: -14.799460411071777

Token 155: '_node' (ID: 11390)
  Prédit: '_node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.11906921118497849
    2. 'node' → logprob: -2.2440690994262695
    3. ' node' → logprob: -5.1190690994262695
    4. ',' → logprob: -8.61906909942627
    5. ',node' → logprob: -10.49406909942627
    6. 'Node' → logprob: -10.86906909942627
    7. '_vertex' → logprob: -12.11906909942627
    8. '_position' → logprob: -12.49406909942627
    9. '_location' → logprob: -13.36906909942627
    10. '_nodes' → logprob: -13.61906909942627

Token 156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.632542913896032e-05
    2. ' ,' → logprob: -10.875046730041504
    3. ')' → logprob: -11.000046730041504
    4. ',
' → logprob: -12.750046730041504
    5. ',length' → logprob: -13.875046730041504
    6. ',)' → logprob: -14.000046730041504
    7. ',n' → logprob: -14.250046730041504
    8. '<|end|>' → logprob: -14.375046730041504
    9. ',node' → logprob: -14.375046730041504
    10. '```' → logprob: -14.375046730041504

Token 157: ' path' (ID: 3104)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.07847581058740616
    2. ' distance' → logprob: -3.3284757137298584
    3. 'depth' → logprob: -3.5784757137298584
    4. 'steps' → logprob: -4.9534759521484375
    5. ' depth' → logprob: -6.4534759521484375
    6. 'current' → logprob: -6.9534759521484375
    7. ' steps' → logprob: -7.5784759521484375
    8. 'path' → logprob: -7.5784759521484375
    9. 'level' → logprob: -8.328475952148438
    10. 'dist' → logprob: -8.828475952148438

Token 158: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.00568216061219573
    2. ' length' → logprob: -5.630681991577148
    3. 'length' → logprob: -6.255681991577148
    4. '_len' → logprob: -8.880681991577148
    5. 'len' → logprob: -11.630681991577148
    6. ' _' → logprob: -12.005681991577148
    7. '_' → logprob: -13.380681991577148
    8. ' ' → logprob: -13.505681991577148
    9. '_l' → logprob: -13.505681991577148
    10. ')' → logprob: -14.255681991577148

Token 159: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0564331205387134e-05
    2. ' )' → logprob: -11.75001049041748
    3. ')
' → logprob: -13.50001049041748
    4. '<|end|>' → logprob: -14.25001049041748
    5. '))' → logprob: -14.87501049041748
    6. '   ' → logprob: -16.500011444091797
    7. '),' → logprob: -16.750011444091797
    8. ')

' → logprob: -17.375011444091797
    9. '<|end|>' → logprob: -17.875011444091797
    10. ')#' → logprob: -18.250011444091797

Token 160: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09200192987918854
    2. 'visited' → logprob: -2.4670019149780273
    3. 'while' → logprob: -6.092001914978027
    4. '```' → logprob: -7.717001914978027
    5. ' visited' → logprob: -8.842001914978027
    6. ' while' → logprob: -8.967001914978027
    7. '	while' → logprob: -10.842001914978027
    8. 'seen' → logprob: -10.967001914978027
    9. '    
' → logprob: -10.967001914978027
    10. '
' → logprob: -11.717001914978027

Token 161: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -2.546478935983032e-05
    2. ' visited' → logprob: -10.750025749206543
    3. 'seen' → logprob: -13.000025749206543
    4. '```' → logprob: -13.750025749206543
    5. '   ' → logprob: -14.500025749206543
    6. 'vis' → logprob: -17.125024795532227
    7. '    
' → logprob: -17.125024795532227
    8. 'visit' → logprob: -18.000024795532227
    9. '
' → logprob: -18.000024795532227
    10. 'found' → logprob: -18.125024795532227

Token 162: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5761324167251587
    2. '=' → logprob: -0.8261324167251587
    3. '=set' → logprob: -8.576132774353027
    4. ' ' → logprob: -13.576132774353027
    5. '.add' → logprob: -13.826132774353027
    6. ')' → logprob: -14.576132774353027
    7. '={' → logprob: -14.701132774353027
    8. ' ={' → logprob: -14.826132774353027
    9. '[' → logprob: -15.576132774353027
    10. '<|end|>' → logprob: -16.32613182067871

Token 163: ' set' (ID: 920)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.7165929079055786
    2. 'set' → logprob: -0.7165929079055786
    3. ' set' → logprob: -3.966592788696289
    4. ' {' → logprob: -5.466592788696289
    5. '{s' → logprob: -11.966592788696289
    6. '=set' → logprob: -13.091592788696289
    7. '	set' → logprob: -14.841592788696289
    8. '(set' → logprob: -14.966592788696289
    9. '{}' → logprob: -16.21659278869629
    10. '{sub' → logprob: -16.21659278869629

Token 164: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13738621771335602
    2. '([' → logprob: -2.7623863220214844
    3. '(s' → logprob: -2.8873863220214844
    4. '()
' → logprob: -5.262386322021484
    5. '(' → logprob: -5.637386322021484
    6. '({' → logprob: -7.637386322021484
    7. '{' → logprob: -9.512386322021484
    8. '   ' → logprob: -10.512386322021484
    9. '((' → logprob: -10.762386322021484
    10. ' (' → logprob: -10.887386322021484

Token 165: '   ' (ID: 271)
  Prédit: ' visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.20457549393177032
    2. '   ' → logprob: -2.829575538635254
    3. 'visited' → logprob: -2.829575538635254
    4. ' 
' → logprob: -3.079575538635254
    5. ' ' → logprob: -4.954575538635254
    6. '    
' → logprob: -5.579575538635254
    7. '<|end|>' → logprob: -5.579575538635254
    8. '
' → logprob: -5.954575538635254
    9. '    ' → logprob: -6.704575538635254
    10. '  
' → logprob: -7.079575538635254

Token 166: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.14775146543979645
    2. ' visited' → logprob: -2.147751569747925
    3. '   ' → logprob: -3.897751569747925
    4. '    ' → logprob: -9.272751808166504
    5. '```' → logprob: -10.147751808166504
    6. 'while' → logprob: -10.272751808166504
    7. '
' → logprob: -10.522751808166504
    8. ' while' → logprob: -10.647751808166504
    9. '    
' → logprob: -10.772751808166504
    10. ' ' → logprob: -10.897751808166504

Token 167: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.006089119240641594
    2. '.' → logprob: -5.131089210510254
    3. ' .' → logprob: -8.881089210510254
    4. 'add' → logprob: -11.881089210510254
    5. '().' → logprob: -12.131089210510254
    6. '.append' → logprob: -12.881089210510254
    7. ' add' → logprob: -13.506089210510254
    8. ').' → logprob: -13.881089210510254
    9. '.update' → logprob: -14.006089210510254
    10. '<|end|>' → logprob: -14.381089210510254

Token 168: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.004086355213075876
    2. '(' → logprob: -5.504086494445801
    3. '((' → logprob: -12.2540864944458
    4. ' (' → logprob: -13.7540864944458
    5. '(space' → logprob: -14.2540864944458
    6. '(queue' → logprob: -14.5040864944458
    7. '(n' → logprob: -15.5040864944458
    8. '(
' → logprob: -15.6290864944458
    9. 's' → logprob: -15.8790864944458
    10. '(current' → logprob: -16.004085540771484

Token 169: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5332478142227046e-05
    2. ')
' → logprob: -11.125015258789062
    3. ' )' → logprob: -14.750015258789062
    4. '   ' → logprob: -17.000015258789062
    5. '))' → logprob: -17.125015258789062
    6. '),' → logprob: -17.375015258789062
    7. ')

' → logprob: -18.125015258789062
    8. '}' → logprob: -18.250015258789062
    9. '<|end|>' → logprob: -18.500015258789062
    10. ',' → logprob: -18.875015258789062

Token 170: '   ' (ID: 271)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.7013453841209412
    2. ' while' → logprob: -1.076345443725586
    3. '   ' → logprob: -1.826345443725586
    4. '
' → logprob: -7.076345443725586
    5. '    
' → logprob: -7.201345443725586
    6. '	while' → logprob: -7.826345443725586
    7. '```' → logprob: -9.451345443725586
    8. '<|end|>' → logprob: -9.576345443725586
    9. ')' → logprob: -10.076345443725586
    10. 'While' → logprob: -10.951345443725586

Token 171: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' (adapté à ' found') → logprob: -0.33321189880371094
    2. 'while' → logprob: -1.583211898803711
    3. ' while' → logprob: -3.083211898803711
    4. ' found' → logprob: -4.083211898803711
    5. '   ' → logprob: -4.208211898803711
    6. 'next' → logprob: -8.458211898803711
    7. 'answer' → logprob: -9.458211898803711
    8. 'result' → logprob: -10.208211898803711
    9. '    
' → logprob: -10.583211898803711
    10. ' next' → logprob: -10.708211898803711

Token 172: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10025627166032791
    2. '=' → logprob: -2.3502562046051025
    3. '=False' → logprob: -10.475255966186523
    4. ' ' → logprob: -11.225255966186523
    5. '=True' → logprob: -12.350255966186523
    6. ':' → logprob: -13.725255966186523
    7. '   ' → logprob: -14.600255966186523
    8. ',' → logprob: -14.725255966186523
    9. ')' → logprob: -14.850255966186523
    10. '_' → logprob: -15.100255966186523

Token 173: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0011730826226994395
    2. ' False' → logprob: -6.75117301940918
    3. 'True' → logprob: -12.75117301940918
    4. '0' → logprob: -18.62617301940918
    5. 'F' → logprob: -19.12617301940918
    6. '(False' → logprob: -19.25117301940918
    7. ' True' → logprob: -19.37617301940918
    8. 'None' → logprob: -19.87617301940918
    9. '=False' → logprob: -20.25117301940918
    10. '   ' → logprob: -20.25117301940918

Token 174: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9008773565292358
    2. '
' → logprob: -1.0258773565292358
    3. '<|end|>' → logprob: -2.6508774757385254
    4. '    
' → logprob: -2.7758774757385254
    5. ' while' → logprob: -3.4008774757385254
    6. ' 
' → logprob: -3.7758774757385254
    7. '  
' → logprob: -4.400877475738525
    8. 'while' → logprob: -4.650877475738525
    9. '	while' → logprob: -5.275877475738525
    10. ',' → logprob: -5.525877475738525

Token 175: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5399670004844666
    2. '   ' → logprob: -1.2899670600891113
    3. 'while' → logprob: -2.9149670600891113
    4. ' 
' → logprob: -3.0399670600891113
    5. '    
' → logprob: -4.164967060089111
    6. '	while' → logprob: -4.664967060089111
    7. '
' → logprob: -4.789967060089111
    8. '<|end|>' → logprob: -6.539967060089111
    9. ')' → logprob: -6.914967060089111
    10. '  
' → logprob: -7.289967060089111

Token 176: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.46540823578834534
    2. 'while' (adapté à ' while') → logprob: -1.090408205986023
    3. '   ' → logprob: -3.3404083251953125
    4. '	while' → logprob: -8.465408325195312
    5. ' 
' → logprob: -8.590408325195312
    6. '    
' → logprob: -9.215408325195312
    7. '    ' → logprob: -10.340408325195312
    8. ' ' → logprob: -10.715408325195312
    9. '
' → logprob: -10.965408325195312
    10. ')' → logprob: -11.090408325195312

Token 177: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.02975199744105339
    2. ' queue' → logprob: -3.529752016067505
    3. 'len' → logprob: -13.904751777648926
    4. '(queue' → logprob: -15.154751777648926
    5. '	queue' → logprob: -15.654751777648926
    6. ' ' → logprob: -17.279752731323242
    7. '   ' → logprob: -17.279752731323242
    8. ' len' → logprob: -17.404752731323242
    9. 'que' → logprob: -18.029752731323242
    10. '```' → logprob: -18.529752731323242

Token 178: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16484418511390686
    2. ':
' → logprob: -2.164844274520874
    3. ' and' → logprob: -3.789844274520874
    4. 'and' → logprob: -4.414844036102295
    5. '):
' → logprob: -6.539844036102295
    6. '):' → logprob: -7.664844036102295
    7. 'not' → logprob: -8.914844512939453
    8. ')' → logprob: -9.289844512939453
    9. '   ' → logprob: -9.664844512939453
    10. '```' → logprob: -9.664844512939453

Token 179: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03508375212550163
    2. '    ' → logprob: -3.785083770751953
    3. '   ' → logprob: -5.660083770751953
    4. ',' → logprob: -5.785083770751953
    5. ' 
' → logprob: -6.785083770751953
    6. ' current' → logprob: -6.910083770751953
    7. '        
' → logprob: -7.535083770751953
    8. '     ' → logprob: -7.785083770751953
    9. '     
' → logprob: -7.785083770751953
    10. ' ' → logprob: -8.035083770751953

Token 180: ' cur' (ID: 4396)
  Prédit: 'current'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'current' → logprob: -0.7579306960105896
    2. 'node' → logprob: -1.0079307556152344
    3. ' node' → logprob: -2.8829307556152344
    4. 'curr' → logprob: -2.8829307556152344
    5. ' current' → logprob: -3.3829307556152344
    6. 'cur' (adapté à ' cur') → logprob: -4.382930755615234
    7. 'u' → logprob: -5.257930755615234
    8. ' u' → logprob: -6.882930755615234
    9. '   ' → logprob: -7.007930755615234
    10. ' curr' → logprob: -7.507930755615234

Token 181: ',' (ID: 11)
  Prédit: '_node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_node' → logprob: -0.003899938426911831
    2. ',' → logprob: -5.878900051116943
    3. ',_' → logprob: -7.878900051116943
    4. '_,' → logprob: -8.003899574279785
    5. '_' → logprob: -9.003899574279785
    6. '_queue' → logprob: -9.628899574279785
    7. ',node' → logprob: -9.628899574279785
    8. '[' → logprob: -9.753899574279785
    9. ')' → logprob: -11.628899574279785
    10. '=' → logprob: -11.628899574279785

Token 182: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.08162534236907959
    2. 'dist' → logprob: -3.081625461578369
    3. ' length' → logprob: -4.081625461578369
    4. 'path' → logprob: -4.956625461578369
    5. ' dist' → logprob: -5.081625461578369
    6. 'depth' → logprob: -6.831625461578369
    7. 'pl' → logprob: -7.206625461578369
    8. 'plen' → logprob: -8.831624984741211
    9. 'cur' → logprob: -8.956624984741211
    10. ' path' → logprob: -9.206624984741211

Token 183: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47409588098526
    2. ' =' → logprob: -0.97409588098526
    3. '   ' → logprob: -11.099096298217773
    4. ')' → logprob: -13.099096298217773
    5. ' ' → logprob: -14.849096298217773
    6. '    ' → logprob: -15.224096298217773
    7. '+' → logprob: -15.474096298217773
    8. '```' → logprob: -15.474096298217773
    9. '+=' → logprob: -15.974096298217773
    10. ' +=' → logprob: -15.974096298217773

Token 184: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.5759417414665222
    2. ' queue' → logprob: -0.8259417414665222
    3. '(queue' → logprob: -14.325942039489746
    4. '   ' → logprob: -14.450942039489746
    5. '	queue' → logprob: -14.700942039489746
    6. ' ' → logprob: -14.950942039489746
    7. 'que' → logprob: -15.950942039489746
    8. '.queue' → logprob: -16.07594108581543
    9. '       ' → logprob: -16.32594108581543
    10. '    ' → logprob: -16.70094108581543

Token 185: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.008545429445803165
    2. '=' → logprob: -5.258545398712158
    3. '.pop' → logprob: -6.633545398712158
    4. '.append' → logprob: -6.758545398712158
    5. '.' → logprob: -7.633545398712158
    6. '   ' → logprob: -8.758545875549316
    7. ' =' → logprob: -9.133545875549316
    8. '.extend' → logprob: -11.133545875549316
    9. 'opleft' → logprob: -11.258545875549316
    10. ')' → logprob: -11.883545875549316

Token 186: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.008631822653114796
    2. 'op' → logprob: -4.758631706237793
    3. 'p' → logprob: -11.508631706237793
    4. 'append' → logprob: -12.508631706237793
    5. 'ople' → logprob: -12.758631706237793
    6. 'opl' → logprob: -15.133631706237793
    7. '```' → logprob: -16.25863265991211
    8. 'opup' → logprob: -16.75863265991211
    9. 'opt' → logprob: -16.75863265991211
    10. 'end' → logprob: -17.13363265991211

Token 187: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4205586016178131
    2. ')' → logprob: -1.2955585718154907
    3. '()
' → logprob: -2.9205586910247803
    4. '(' → logprob: -5.295558452606201
    5. ')
' → logprob: -5.295558452606201
    6. '   ' → logprob: -6.045558452606201
    7. '       ' → logprob: -6.920558452606201
    8. '<|end|>' → logprob: -7.045558452606201
    9. '
' → logprob: -7.795558452606201
    10. '(
' → logprob: -8.42055892944336

Token 188: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.659057080745697
    2. '   ' → logprob: -1.0340571403503418
    3. '<|end|>' → logprob: -2.284057140350342
    4. ' if' → logprob: -3.909057140350342
    5. ' for' → logprob: -6.909057140350342
    6. 'if' → logprob: -6.909057140350342
    7. '<|end|>' → logprob: -6.909057140350342
    8. '        
' → logprob: -7.534057140350342
    9. ')' → logprob: -7.784057140350342
    10. '
' → logprob: -8.159056663513184

Token 189: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0017055326607078314
    2. 'for' → logprob: -6.626705646514893
    3. ' if' → logprob: -8.001705169677734
    4. '   ' → logprob: -10.376705169677734
    5. '       ' → logprob: -11.376705169677734
    6. ' for' → logprob: -13.626705169677734
    7. 'If' → logprob: -15.501705169677734
    8. '	if' → logprob: -15.501705169677734
    9. '        
' → logprob: -15.626705169677734
    10. '```' → logprob: -15.751705169677734

Token 190: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.023245595395565033
    2. ' cur' → logprob: -3.7732455730438232
    3. '	cur' → logprob: -16.398244857788086
    4. '(cur' → logprob: -18.398244857788086
    5. ' ' → logprob: -19.398244857788086
    6. '[cur' → logprob: -20.148244857788086
    7. '_cur' → logprob: -20.648244857788086
    8. ' ' → logprob: -20.773244857788086
    9. 'c' → logprob: -21.023244857788086
    10. '.cur' → logprob: -21.273244857788086

Token 191: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.048589639365673065
    2. '==' → logprob: -3.0485897064208984
    3. '=' → logprob: -14.048589706420898
    4. ' ' → logprob: -14.423589706420898
    5. ')' → logprob: -14.548589706420898
    6. ')==' → logprob: -15.923589706420898
    7. ' ' → logprob: -15.923589706420898
    8. ' =' → logprob: -16.4235897064209
    9. ']==' → logprob: -16.9235897064209
    10. '==
' → logprob: -17.6735897064209

Token 192: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.3132622241973877
    2. 'd' → logprob: -1.3132622241973877
    3. '	d' → logprob: -15.438261985778809
    4. ')d' → logprob: -15.938261985778809
    5. ' ' → logprob: -16.813262939453125
    6. ' ' → logprob: -17.563262939453125
    7. '   ' → logprob: -18.563262939453125
    8. '
' → logprob: -18.688262939453125
    9. '_d' → logprob: -18.688262939453125
    10. '*d' → logprob: -18.938262939453125

Token 193: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07902120798826218
    2. ':
' → logprob: -2.5790212154388428
    3. '):' → logprob: -9.829021453857422
    4. '):
' → logprob: -10.704021453857422
    5. '<|end|>' → logprob: -11.204021453857422
    6. ' or' → logprob: -11.704021453857422
    7. ' and' → logprob: -11.829021453857422
    8. ')' → logprob: -12.079021453857422
    9. ':return' → logprob: -12.204021453857422
    10. '       ' → logprob: -12.329021453857422

Token 194: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0801779180765152
    2. 'print' → logprob: -3.3301780223846436
    3. ' print' → logprob: -4.2051777839660645
    4. '       ' → logprob: -4.2051777839660645
    5. '
' → logprob: -4.9551777839660645
    6. ')' → logprob: -6.7051777839660645
    7. '<|end|>' → logprob: -7.2051777839660645
    8. '):
' → logprob: -7.5801777839660645
    9. ':
' → logprob: -7.8301777839660645
    10. ',' → logprob: -8.205178260803223

Token 195: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.31929850578308105
    2. ' print' → logprob: -1.319298505783081
    3. '           ' → logprob: -5.94429874420166
    4. ' if' → logprob: -6.19429874420166
    5. 'if' → logprob: -7.31929874420166
    6. '       ' → logprob: -7.44429874420166
    7. '               ' → logprob: -9.81929874420166
    8. '   ' → logprob: -10.31929874420166
    9. '```' → logprob: -11.81929874420166
    10. '
' → logprob: -12.44429874420166

Token 196: ' length' (ID: 5517)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.2874605357646942
    2. ' print' → logprob: -1.4124605655670166
    3. ' if' → logprob: -5.4124603271484375
    4. 'if' → logprob: -6.4124603271484375
    5. '           ' → logprob: -9.287460327148438
    6. '   ' → logprob: -10.037460327148438
    7. ' found' → logprob: -11.412460327148438
    8. '               ' → logprob: -11.662460327148438
    9. 'found' → logprob: -11.662460327148438
    10. 'break' → logprob: -12.662460327148438

Token 197: ' is' (ID: 382)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.8808598518371582
    2. ' -' → logprob: -1.2558598518371582
    3. 'print' → logprob: -2.380859851837158
    4. ' =' → logprob: -2.755859851837158
    5. ' print' → logprob: -2.880859851837158
    6. ' -=' → logprob: -3.755859851837158
    7. '=' → logprob: -3.755859851837158
    8. '           ' → logprob: -4.755859851837158
    9. '<|end|>' → logprob: -4.880859851837158
    10. ' ' → logprob: -5.255859851837158

Token 198: ' count' (ID: 3605)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.24441981315612793
    2. ' the' → logprob: -1.619419813156128
    3. 'length' → logprob: -4.119420051574707
    4. ' length' → logprob: -6.369420051574707
    5. 'number' → logprob: -7.494420051574707
    6. '1' → logprob: -9.244420051574707
    7. ' number' → logprob: -9.994420051574707
    8. ' ' → logprob: -10.119420051574707
    9. '<|end|>' → logprob: -10.119420051574707
    10. 'path' → logprob: -11.619420051574707

Token 199: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.042493317276239395
    2. 'of' → logprob: -3.5424933433532715
    3. 'inue' → logprob: -5.6674933433532715
    4. '   ' → logprob: -5.9174933433532715
    5. 'ing' → logprob: -5.9174933433532715
    6. ' ' → logprob: -6.0424933433532715
    7. '       ' → logprob: -8.542492866516113
    8. ' +' → logprob: -8.917492866516113
    9. '<|end|>' → logprob: -9.167492866516113
    10. '           ' → logprob: -9.292492866516113

Token 200: ' nodes' (ID: 15749)
  Prédit: 'nodes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nodes' → logprob: -0.3487672805786133
    2. ' nodes' → logprob: -1.2237672805786133
    3. 'edges' → logprob: -9.598767280578613
    4. '(nodes' → logprob: -9.973767280578613
    5. ' edges' → logprob: -10.223767280578613
    6. 'vertices' → logprob: -10.723767280578613
    7. '_nodes' → logprob: -10.848767280578613
    8. 'steps' → logprob: -11.098767280578613
    9. 'visited' → logprob: -11.223767280578613
    10. '	nodes' → logprob: -11.223767280578613

Token 201: ' including' (ID: 3463)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.42869848012924194
    2. ' -' → logprob: -1.4286985397338867
    3. '               ' → logprob: -2.8036985397338867
    4. '-' → logprob: -3.5536985397338867
    5. '
' → logprob: -4.678698539733887
    6. 'print' → logprob: -5.553698539733887
    7. ')' → logprob: -5.803698539733887
    8. ',' → logprob: -6.928698539733887
    9. ' print' → logprob: -7.428698539733887
    10. '       ' → logprob: -8.053698539733887

Token 202: ' start' (ID: 1604)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.41442668437957764
    2. 'start' → logprob: -1.7894266843795776
    3. 'both' → logprob: -2.664426803588867
    4. 'source' → logprob: -3.039426803588867
    5. 's' → logprob: -3.414426803588867
    6. ' both' → logprob: -4.914426803588867
    7. 'current' → logprob: -5.039426803588867
    8. ' start' → logprob: -6.289426803588867
    9. 'end' → logprob: -6.789426803588867
    10. 'd' → logprob: -6.914426803588867

Token 203: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1584857702255249
    2. 'and' → logprob: -2.6584858894348145
    3. '<|end|>' → logprob: -2.6584858894348145
    4. ' node' → logprob: -6.0334858894348145
    5. 'node' → logprob: -6.7834858894348145
    6. ',' → logprob: -6.7834858894348145
    7. '<|end|>' → logprob: -7.0334858894348145
    8. ')' → logprob: -7.6584858894348145
    9. 's' → logprob: -9.033485412597656
    10. ' ' → logprob: -9.658485412597656

Token 204: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.05287763103842735
    2. ' end' → logprob: -3.05287766456604
    3. 'destination' → logprob: -5.552877426147461
    4. ' destination' → logprob: -8.177877426147461
    5. 'dest' → logprob: -9.177877426147461
    6. 'd' → logprob: -11.552877426147461
    7. 'target' → logprob: -12.427877426147461
    8. 'cur' → logprob: -13.052877426147461
    9. 'goal' → logprob: -13.052877426147461
    10. 'current' → logprob: -14.302877426147461

Token 205: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01488547120243311
    2. '
' → logprob: -4.764885425567627
    3. ',' → logprob: -6.514885425567627
    4. '               ' → logprob: -6.514885425567627
    5. '       ' → logprob: -6.889885425567627
    6. '            
' → logprob: -7.014885425567627
    7. 'print' → logprob: -7.389885425567627
    8. ' print' → logprob: -8.514885902404785
    9. ')' → logprob: -8.764885902404785
    10. '<|end|>' → logprob: -9.639885902404785

Token 206: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0037905771750956774
    2. '               ' → logprob: -6.378790378570557
    3. ',' → logprob: -7.128790378570557
    4. '<|end|>' → logprob: -8.128790855407715
    5. ')' → logprob: -8.253790855407715
    6. '       ' → logprob: -8.378790855407715
    7. 'print' → logprob: -8.503790855407715
    8. ' print' → logprob: -9.378790855407715
    9. '            
' → logprob: -9.628790855407715
    10. '
' → logprob: -9.753790855407715

Token 207: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.20974048972129822
    2. ' print' → logprob: -1.7097405195236206
    3. '           ' → logprob: -5.08474063873291
    4. ' if' → logprob: -7.08474063873291
    5. 'if' → logprob: -7.45974063873291
    6. '               ' → logprob: -7.45974063873291
    7. '   ' → logprob: -10.08474063873291
    8. '       ' → logprob: -10.20974063873291
    9. '
' → logprob: -11.58474063873291
    10. '```' → logprob: -12.58474063873291

Token 208: ' Number' (ID: 9184)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.453297883272171
    2. ' print' → logprob: -1.0782978534698486
    3. '           ' → logprob: -4.578298091888428
    4. ' hops' → logprob: -5.453298091888428
    5. ' if' → logprob: -6.203298091888428
    6. 'if' → logprob: -6.328298091888428
    7. 'steps' → logprob: -6.453298091888428
    8. ' time' → logprob: -6.953298091888428
    9. 'time' → logprob: -7.328298091888428
    10. ' steps' → logprob: -7.703298091888428

Token 209: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.7165905833244324
    2. 'of' → logprob: -0.7165905833244324
    3. '_of' → logprob: -4.591590404510498
    4. ')' → logprob: -5.716590404510498
    5. '<|end|>' → logprob: -5.966590404510498
    6. '           ' → logprob: -6.591590404510498
    7. '_tokens' → logprob: -6.841590404510498
    8. ' =' → logprob: -7.341590404510498
    9. ' ' → logprob: -7.466590404510498
    10. '=' → logprob: -7.466590404510498

Token 210: ' routers' (ID: 108200)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.8615643978118896
    2. 'edges' → logprob: -1.1115643978118896
    3. ' hops' → logprob: -2.1115643978118896
    4. 'h' → logprob: -2.6115643978118896
    5. ' steps' → logprob: -3.2365643978118896
    6. 'steps' → logprob: -4.361564636230469
    7. '   ' → logprob: -8.111564636230469
    8. ' nodes' → logprob: -8.111564636230469
    9. ' h' → logprob: -8.486564636230469
    10. ' stops' → logprob: -8.861564636230469

Token 211: ' passed' (ID: 10292)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.05910852923989296
    2. '-' → logprob: -2.9341084957122803
    3. 'visited' → logprob: -6.309108734130859
    4. ' visited' → logprob: -6.559108734130859
    5. ' travers' → logprob: -8.43410873413086
    6. ' in' → logprob: -8.68410873413086
    7. ' ' → logprob: -8.68410873413086
    8. ' between' → logprob: -9.05910873413086
    9. ' to' → logprob: -9.43410873413086
    10. '   ' → logprob: -10.68410873413086

Token 212: ' is' (ID: 382)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06549851596355438
    2. '-' → logprob: -2.8154985904693604
    3. ' =' → logprob: -6.315498352050781
    4. ' is' → logprob: -7.815498352050781
    5. '=' → logprob: -8.315498352050781
    6. ' ' → logprob: -8.565498352050781
    7. ' through' → logprob: -8.815498352050781
    8. ' minus' → logprob: -9.065498352050781
    9. ',' → logprob: -9.190498352050781
    10. '           ' → logprob: -9.565498352050781

Token 213: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.25194457173347473
    2. ' length' → logprob: -1.5019445419311523
    3. '(length' → logprob: -11.751944541931152
    4. '           ' → logprob: -12.001944541931152
    5. '   ' → logprob: -14.251944541931152
    6. '[length' → logprob: -15.501944541931152
    7. '	length' → logprob: -15.501944541931152
    8. ' ' → logprob: -16.37694549560547
    9. ',length' → logprob: -16.37694549560547
    10. 'len' → logprob: -16.87694549560547

Token 214: '
' (ID: 198)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.006732422858476639
    2. '-' → logprob: -5.00673246383667
    3. ' ' → logprob: -11.631731986999512
    4. '   ' → logprob: -12.756731986999512
    5. '```' → logprob: -13.006731986999512
    6. ' ' → logprob: -14.006731986999512
    7. ')' → logprob: -14.631731986999512
    8. '           ' → logprob: -14.631731986999512
    9. '<|end|>' → logprob: -15.131731986999512
    10. ' minus' → logprob: -16.006732940673828

Token 215: '           ' (ID: 352)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.13128836452960968
    2. '-' → logprob: -2.1312882900238037
    3. '           ' → logprob: -6.006288528442383
    4. ')' → logprob: -7.631288528442383
    5. '               ' → logprob: -8.006288528442383
    6. '<|end|>' → logprob: -8.256288528442383
    7. '   ' → logprob: -8.631288528442383
    8. ' +' → logprob: -8.631288528442383
    9. '+' → logprob: -9.006288528442383
    10. ' ' → logprob: -9.631288528442383

Token 216: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6045135855674744
    2. ' print' → logprob: -0.9795135855674744
    3. '           ' → logprob: -2.604513645172119
    4. ' if' → logprob: -5.729513645172119
    5. 'if' → logprob: -7.604513645172119
    6. '       ' → logprob: -8.729513168334961
    7. '               ' → logprob: -8.854513168334961
    8. '   ' → logprob: -9.229513168334961
    9. ',' → logprob: -11.229513168334961
    10. '
' → logprob: -11.354513168334961

Token 217: ' Number' (ID: 9184)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.3945905566215515
    2. 'print' → logprob: -1.1445906162261963
    3. '           ' → logprob: -5.019590377807617
    4. ' if' → logprob: -7.519590377807617
    5. '   ' → logprob: -8.269590377807617
    6. 'if' → logprob: -9.269590377807617
    7. ' break' → logprob: -9.894590377807617
    8. '               ' → logprob: -10.144590377807617
    9. '
' → logprob: -10.394590377807617
    10. 'break' → logprob: -11.019590377807617

Token 218: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.46870556473731995
    2. 'of' → logprob: -1.3437055349349976
    3. '_of' → logprob: -2.468705654144287
    4. '<|end|>' → logprob: -4.218705654144287
    5. '<|end|>' → logprob: -5.218705654144287
    6. ')' → logprob: -5.468705654144287
    7. ' -' → logprob: -7.093705654144287
    8. '[' → logprob: -7.093705654144287
    9. 'Of' → logprob: -7.718705654144287
    10. '-' → logprob: -8.093705177307129

Token 219: ' decre' (ID: 12889)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -1.4267666339874268
    2. ' hops' → logprob: -1.9267666339874268
    3. ' steps' → logprob: -2.3017666339874268
    4. 'h' → logprob: -2.3017666339874268
    5. ' routers' → logprob: -2.4267666339874268
    6. 'routers' → logprob: -2.4267666339874268
    7. 'edges' → logprob: -2.5517666339874268
    8. ' nodes' → logprob: -3.1767666339874268
    9. 'steps' → logprob: -3.8017666339874268
    10. ' links' → logprob: -3.8017666339874268

Token 220: 'ments' (ID: 1626)
  Prédit: 'mented'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mented' → logprob: -0.13241048157215118
    2. 'ments' → logprob: -2.2574105262756348
    3. 'ment' → logprob: -4.132410526275635
    4. 'ased' → logprob: -6.757410526275635
    5. 'passed' → logprob: -8.257410049438477
    6. 'ase' → logprob: -8.632410049438477
    7. '
' → logprob: -8.757410049438477
    8. '```' → logprob: -8.882410049438477
    9. 'd' → logprob: -9.194910049438477
    10. 'ed' → logprob: -9.257410049438477

Token 221: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26815277338027954
    2. ' -' → logprob: -1.6431527137756348
    3. '-' → logprob: -4.143152713775635
    4. ' is' → logprob: -4.768152713775635
    5. 'length' → logprob: -5.768152713775635
    6. ' needed' → logprob: -5.893152713775635
    7. ' length' → logprob: -6.018152713775635
    8. '=' → logprob: -6.018152713775635
    9. ' in' → logprob: -6.518152713775635
    10. ' ' → logprob: -7.018152713775635

Token 222: ' TTL' (ID: 194586)
  Prédit: 'ttl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ttl' → logprob: -0.14180593192577362
    2. ' ttl' → logprob: -2.26680588722229
    3. 'TTL' → logprob: -3.76680588722229
    4. ' TTL' → logprob: -5.891806125640869
    5. 'length' → logprob: -7.141806125640869
    6. 'time' → logprob: -7.766806125640869
    7. ' the' → logprob: -8.016805648803711
    8. 'the' → logprob: -8.016805648803711
    9. ' length' → logprob: -8.141805648803711
    10. ' time' → logprob: -8.641805648803711

Token 223: ' is' (ID: 382)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14499975740909576
    2. '-' → logprob: -2.2699997425079346
    3. ' =' → logprob: -3.8949997425079346
    4. '           ' → logprob: -6.269999980926514
    5. ',' → logprob: -6.769999980926514
    6. 'length' → logprob: -6.769999980926514
    7. '=' → logprob: -6.894999980926514
    8. '<|end|>' → logprob: -7.144999980926514
    9. ' ' → logprob: -7.269999980926514
    10. ' is' → logprob: -7.519999980926514

Token 224: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.4741708040237427
    2. ' length' → logprob: -0.9741708040237427
    3. '(length' → logprob: -9.349170684814453
    4. ' (' → logprob: -12.849170684814453
    5. ' ' → logprob: -13.724170684814453
    6. '[length' → logprob: -14.474170684814453
    7. ',length' → logprob: -14.974170684814453
    8. 'len' → logprob: -14.974170684814453
    9. '	length' → logprob: -15.099170684814453
    10. '   ' → logprob: -15.349170684814453

Token 225: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.10130669176578522
    2. '-' → logprob: -2.351306676864624
    3. ' ' → logprob: -8.351306915283203
    4. '<|end|>' → logprob: -8.351306915283203
    5. '+' → logprob: -8.851306915283203
    6. ' +' → logprob: -8.976306915283203
    7. '
' → logprob: -9.351306915283203
    8. ')' → logprob: -9.476306915283203
    9. '<|end|>' → logprob: -9.726306915283203
    10. '```' → logprob: -10.601306915283203

Token 226: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016521085053682327
    2. ' ' → logprob: -4.141520977020264
    3. '2' → logprob: -7.641520977020264
    4. '```' → logprob: -12.766521453857422
    5. '   ' → logprob: -12.891521453857422
    6. ' one' → logprob: -14.891521453857422
    7. '  ' → logprob: -15.516521453857422
    8. ' ' → logprob: -15.891521453857422
    9. '`' → logprob: -16.141521453857422
    10. '
' → logprob: -16.704021453857422

Token 227: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009164824150502682
    2. '
' → logprob: -5.259164810180664
    3. 'print' → logprob: -5.884164810180664
    4. ',' → logprob: -7.259164810180664
    5. ' print' → logprob: -8.384164810180664
    6. '<|end|>' → logprob: -9.634164810180664
    7. '       ' → logprob: -10.384164810180664
    8. '   ' → logprob: -10.509164810180664
    9. '            
' → logprob: -11.509164810180664
    10. '               ' → logprob: -11.509164810180664

Token 228: 'excluding' (ID: 135903)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6559650897979736
    2. ')
' → logprob: -0.7809650897979736
    3. ' )
' → logprob: -4.0309648513793945
    4. ' )' → logprob: -5.2809648513793945
    5. '           ' → logprob: -8.780964851379395
    6. ')

' → logprob: -10.280964851379395
    7. '               ' → logprob: -10.655964851379395
    8. ')
' → logprob: -11.530964851379395
    9. '),' → logprob: -12.530964851379395
    10. '                   ' → logprob: -12.905964851379395

Token 229: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9957678914070129
    2. 'start' → logprob: -1.1207678318023682
    3. 'the' → logprob: -1.9957678318023682
    4. ' start' → logprob: -2.620767831802368
    5. 's' → logprob: -3.120767831802368
    6. ' starting' → logprob: -4.120768070220947
    7. ' s' → logprob: -4.870768070220947
    8. 'cur' → logprob: -4.995768070220947
    9. 'starting' → logprob: -5.120768070220947
    10. '1' → logprob: -5.245768070220947

Token 230: ' destination' (ID: 13330)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.8929569721221924
    2. ' starting' → logprob: -0.8929569721221924
    3. 'starting' → logprob: -2.2679569721221924
    4. ' start' → logprob: -3.1429569721221924
    5. 'first' → logprob: -4.892956733703613
    6. ' first' → logprob: -5.017956733703613
    7. 'source' → logprob: -5.267956733703613
    8. ' last' → logprob: -5.392956733703613
    9. ' source' → logprob: -5.642956733703613
    10. 'last' → logprob: -6.017956733703613

Token 231: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013782168738543987
    2. ' )' → logprob: -4.888782024383545
    3. ')
' → logprob: -5.638782024383545
    4. ' node' → logprob: -6.263782024383545
    5. 'node' → logprob: -7.513782024383545
    6. ' )
' → logprob: -9.013782501220703
    7. ')

' → logprob: -12.263782501220703
    8. ' ' → logprob: -12.513782501220703
    9. '),' → logprob: -12.763782501220703
    10. '_node' → logprob: -13.013782501220703

Token 232: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011066329665482044
    2. ')' → logprob: -4.761066436767578
    3. '<|end|>' → logprob: -7.261066436767578
    4. 'print' → logprob: -7.511066436767578
    5. ',' → logprob: -7.761066436767578
    6. '               ' → logprob: -8.511066436767578
    7. '       ' → logprob: -9.011066436767578
    8. '   ' → logprob: -9.386066436767578
    9. '
' → logprob: -9.511066436767578
    10. ')
' → logprob: -9.636066436767578

Token 233: ' needed' (ID: 6118)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7394692301750183
    2. ' print' → logprob: -1.114469289779663
    3. ' if' → logprob: -2.239469289779663
    4. '           ' → logprob: -2.989469289779663
    5. 'if' → logprob: -3.364469289779663
    6. '   ' → logprob: -6.364469051361084
    7. '       ' → logprob: -7.614469051361084
    8. '               ' → logprob: -7.989469051361084
    9. 'steps' → logprob: -9.489469528198242
    10. ' steps' → logprob: -9.489469528198242

Token 234: '_t' (ID: 838)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5300440192222595
    2. '_t' → logprob: -1.7800440788269043
    3. '_h' → logprob: -1.7800440788269043
    4. '=' → logprob: -3.2800440788269043
    5. '_' → logprob: -3.6550440788269043
    6. '_steps' → logprob: -5.280044078826904
    7. '_time' → logprob: -5.655044078826904
    8. '_nodes' → logprob: -8.030043601989746
    9. 'TTL' → logprob: -8.030043601989746
    10. ' ' → logprob: -8.405043601989746

Token 235: 'tl' (ID: 15894)
  Prédit: 'ime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ime' → logprob: -0.3980026841163635
    2. 'okens' → logprob: -1.7730026245117188
    3. 'ext' → logprob: -3.7730026245117188
    4. 'o' → logprob: -4.273002624511719
    5. ' =' → logprob: -4.523002624511719
    6. '_' → logprob: -4.648002624511719
    7. ' <=' → logprob: -4.773002624511719
    8. 'oken' → logprob: -4.773002624511719
    9. 'imes' → logprob: -4.773002624511719
    10. '_tokens' → logprob: -4.773002624511719

Token 236: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.023433560505509377
    2. '=' → logprob: -3.7734334468841553
    3. ' <=' → logprob: -8.648433685302734
    4. ' >=' → logprob: -12.398433685302734
    5. '<=' → logprob: -12.898433685302734
    6. ' >' → logprob: -13.273433685302734
    7. ' ' → logprob: -13.648433685302734
    8. '>' → logprob: -14.023433685302734
    9. ' ' → logprob: -14.398433685302734
    10. ',' → logprob: -14.773433685302734

Token 237: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.10020752996206284
    2. ' length' → logprob: -2.350207567214966
    3. '(length' → logprob: -14.100207328796387
    4. 'len' → logprob: -17.225208282470703
    5. '	length' → logprob: -17.225208282470703
    6. 'leng' → logprob: -17.600208282470703
    7. '[length' → logprob: -17.850208282470703
    8. ' ' → logprob: -18.100208282470703
    9. ' lenght' → logprob: -18.725208282470703
    10. ',length' → logprob: -18.850208282470703

Token 238: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.02975604310631752
    2. '-' → logprob: -3.5297560691833496
    3. ' ' → logprob: -12.529755592346191
    4. '   ' → logprob: -14.279755592346191
    5. ')' → logprob: -14.529755592346191
    6. ' ' → logprob: -14.654755592346191
    7. '<|end|>' → logprob: -15.904755592346191
    8. '```' → logprob: -16.904756546020508
    9. '<|end|>' → logprob: -17.154756546020508
    10. '
' → logprob: -17.529756546020508

Token 239: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0001398929744027555
    2. ' ' → logprob: -8.875140190124512
    3. '<|end|>' → logprob: -17.250139236450195
    4. '
' → logprob: -17.875139236450195
    5. '```' → logprob: -18.375139236450195
    6. '   ' → logprob: -19.500139236450195
    7. '2' → logprob: -20.250139236450195
    8. '0' → logprob: -20.375139236450195
    9. ' ' → logprob: -20.562639236450195
    10. ')' → logprob: -20.625139236450195

Token 240: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '<|end|>' → logprob: -16.875
    4. '```' → logprob: -18.75
    5. '
' → logprob: -19.25
    6. ')' → logprob: -19.5
    7. '2' → logprob: -20.125
    8. '۱' → logprob: -20.4375
    9. '   ' → logprob: -20.875
    10. '１' → logprob: -20.9375

Token 241: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014215687289834023
    2. '<|end|>' → logprob: -4.764215469360352
    3. ' if' → logprob: -6.389215469360352
    4. '
' → logprob: -6.639215469360352
    5. '<|end|>' → logprob: -6.889215469360352
    6. '       ' → logprob: -7.264215469360352
    7. ')' → logprob: -8.014215469360352
    8. 'if' → logprob: -8.639215469360352
    9. '   ' → logprob: -9.264215469360352
    10. '               ' → logprob: -9.264215469360352

Token 242: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5226820111274719
    2. '<|end|>' → logprob: -1.6476819515228271
    3. '
' → logprob: -2.397681951522827
    4. '           ' → logprob: -2.647681951522827
    5. ' if' → logprob: -3.272681951522827
    6. '<|end|>' → logprob: -5.397682189941406
    7. '   ' → logprob: -5.522682189941406
    8. ')' → logprob: -5.772682189941406
    9. 'if' → logprob: -6.397682189941406
    10. ',' → logprob: -7.647682189941406

Token 243: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.7337103486061096
    2. ' if' → logprob: -0.7337103486061096
    3. '           ' → logprob: -3.233710289001465
    4. '   ' → logprob: -8.608710289001465
    5. '       ' → logprob: -8.858710289001465
    6. '	if' → logprob: -12.483710289001465
    7. '<|end|>' → logprob: -12.608710289001465
    8. '               ' → logprob: -13.108710289001465
    9. ')' → logprob: -13.608710289001465
    10. 'break' → logprob: -13.858710289001465

Token 244: ' ttl' (ID: 131197)
  Prédit: ' needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' needed' → logprob: -0.8011610507965088
    2. ' ttl' → logprob: -1.3011610507965088
    3. 'needed' → logprob: -1.8011610507965088
    4. 'ttl' → logprob: -2.176161050796509
    5. ' TTL' → logprob: -8.80116081237793
    6. ' required' → logprob: -9.67616081237793
    7. 'TTL' → logprob: -10.61366081237793
    8. '   ' → logprob: -10.98866081237793
    9. ' necessary' → logprob: -10.98866081237793
    10. '_needed' → logprob: -11.11366081237793

Token 245: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.1807544231414795
    2. '>=' → logprob: -1.8057544231414795
    3. ' <' → logprob: -7.055754661560059
    4. '<' → logprob: -9.180754661560059
    5. ')>=' → logprob: -10.680754661560059
    6. '>' → logprob: -11.805754661560059
    7. ']>=' → logprob: -12.680754661560059
    8. ' >' → logprob: -12.930754661560059
    9. ')' → logprob: -13.055754661560059
    10. ' ' → logprob: -13.430754661560059

Token 246: ' needed' (ID: 6118)
  Prédit: 'needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'needed' → logprob: -0.07889441400766373
    2. ' needed' → logprob: -2.5788943767547607
    3. '           ' → logprob: -13.07889461517334
    4. 'need' → logprob: -14.32889461517334
    5. '_needed' → logprob: -14.32889461517334
    6. '   ' → logprob: -14.57889461517334
    7. '       ' → logprob: -16.078893661499023
    8. 'needs' → logprob: -16.328893661499023
    9. 'necessary' → logprob: -16.453893661499023
    10. '          ' → logprob: -16.453893661499023

Token 247: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -2.3438327843905427e-05
    2. '_' → logprob: -10.75002384185791
    3. 'ttl' → logprob: -13.87502384185791
    4. '_
' → logprob: -15.25002384185791
    5. '\' → logprob: -15.62502384185791
    6. ' _' → logprob: -15.87502384185791
    7. '_tt' → logprob: -16.000022888183594
    8. ')' → logprob: -16.750022888183594
    9. '
' → logprob: -17.250022888183594
    10. 't' → logprob: -17.375022888183594

Token 248: 'tl' (ID: 15894)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.523406445980072
    2. 'tl' → logprob: -0.898406445980072
    3. 'ttl' → logprob: -9.398406028747559
    4. 'll' → logprob: -9.648406028747559
    5. '_l' → logprob: -10.023406028747559
    6. 'L' → logprob: -11.523406028747559
    7. 't' → logprob: -11.648406028747559
    8. '1' → logprob: -11.773406028747559
    9. 'rl' → logprob: -11.898406028747559
    10. 'cl' → logprob: -11.898406028747559

Token 249: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4294832944869995
    2. ':' → logprob: -1.0544832944869995
    3. '):
' → logprob: -7.679483413696289
    4. '       ' → logprob: -9.054483413696289
    5. '):' → logprob: -9.179483413696289
    6. '           ' → logprob: -10.554483413696289
    7. ')' → logprob: -11.054483413696289
    8. ' and' → logprob: -11.179483413696289
    9. ' :
' → logprob: -11.679483413696289
    10. '   ' → logprob: -11.804483413696289

Token 250: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0034847240895032883
    2. ' print' → logprob: -6.128484725952148
    3. '           ' → logprob: -7.253484725952148
    4. 'print' → logprob: -7.503484725952148
    5. '
' → logprob: -11.003484725952148
    6. '       ' → logprob: -12.128484725952148
    7. ',' → logprob: -12.253484725952148
    8. '                   ' → logprob: -12.378484725952148
    9. ')' → logprob: -13.253484725952148
    10. '   ' → logprob: -13.503484725952148

Token 251: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0791788175702095
    2. ' print' → logprob: -2.579178810119629
    3. '               ' → logprob: -8.204178810119629
    4. '                   ' → logprob: -12.079178810119629
    5. '           ' → logprob: -12.204178810119629
    6. '   ' → logprob: -13.079178810119629
    7. '       ' → logprob: -14.079178810119629
    8. '
' → logprob: -14.454178810119629
    9. '```' → logprob: -14.579178810119629
    10. '	print' → logprob: -15.079178810119629

Token 252: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.7010277509689331
    2. '(' → logprob: -1.701027750968933
    3. 'length' → logprob: -1.951027750968933
    4. 'needed' → logprob: -2.3260278701782227
    5. '0' → logprob: -2.7010278701782227
    6. '("' → logprob: -4.451027870178223
    7. '"' → logprob: -6.576027870178223
    8. '1' → logprob: -7.826027870178223
    9. '('' → logprob: -8.326027870178223
    10. '(required' → logprob: -8.951027870178223

Token 253: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3133835196495056
    2. ')' → logprob: -1.3133835792541504
    3. '-' → logprob: -9.688383102416992
    4. ' )
' → logprob: -10.688383102416992
    5. ' )' → logprob: -11.563383102416992
    6. ')
' → logprob: -11.563383102416992
    7. ' -' → logprob: -11.688383102416992
    8. '   ' → logprob: -12.313383102416992
    9. '           ' → logprob: -13.188383102416992
    10. ')

' → logprob: -14.563383102416992

Token 254: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05078747868537903
    2. '               ' → logprob: -3.1757874488830566
    3. 'else' → logprob: -4.925787448883057
    4. ' else' → logprob: -7.675787448883057
    5. 'elif' → logprob: -11.550787925720215
    6. '<|end|>' → logprob: -11.675787925720215
    7. ')' → logprob: -11.925787925720215
    8. '                   ' → logprob: -12.425787925720215
    9. '```' → logprob: -12.675787925720215
    10. '       ' → logprob: -13.550787925720215

Token 255: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06537803262472153
    2. 'else' (adapté à ' else') → logprob: -2.815377950668335
    3. ' else' → logprob: -5.690378189086914
    4. '               ' → logprob: -11.190378189086914
    5. '       ' → logprob: -11.440378189086914
    6. 'elif' → logprob: -14.440378189086914
    7. '		' → logprob: -14.815378189086914
    8. '	else' → logprob: -15.565378189086914
    9. '   ' → logprob: -16.190378189086914
    10. '	       ' → logprob: -16.440378189086914

Token 256: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015102135017514229
    2. '           ' → logprob: -4.890101909637451
    3. 'print' → logprob: -5.390101909637451
    4. ':
' → logprob: -6.640101909637451
    5. ' print' → logprob: -6.765101909637451
    6. ':' → logprob: -8.14010238647461
    7. ',' → logprob: -10.26510238647461
    8. '                
' → logprob: -10.26510238647461
    9. ' :' → logprob: -10.89010238647461
    10. ' :
' → logprob: -11.01510238647461

Token 257: '               ' (ID: 506)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.043263621628284454
    2. ' print' → logprob: -3.2932636737823486
    3. '               ' → logprob: -5.9182634353637695
    4. '           ' → logprob: -6.0432634353637695
    5. '       ' → logprob: -8.91826343536377
    6. '   ' → logprob: -11.54326343536377
    7. '                   ' → logprob: -15.04326343536377
    8. '```' → logprob: -15.16826343536377
    9. '	print' → logprob: -15.91826343536377
    10. ' ' → logprob: -15.91826343536377

Token 258: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.029943939298391342
    2. ' print' → logprob: -3.5299439430236816
    3. '               ' → logprob: -9.404943466186523
    4. '           ' → logprob: -10.029943466186523
    5. '   ' → logprob: -10.529943466186523
    6. '-' → logprob: -10.904943466186523
    7. ' -' → logprob: -11.779943466186523
    8. '       ' → logprob: -11.779943466186523
    9. '0' → logprob: -13.029943466186523
    10. ' ' → logprob: -14.279943466186523

Token 259: '("' (ID: 568)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7811067700386047
    2. '0' → logprob: -1.28110671043396
    3. '"' → logprob: -2.03110671043396
    4. '("' → logprob: -3.03110671043396
    5. '(-' → logprob: -3.40610671043396
    6. '(' → logprob: -3.65610671043396
    7. 'TTL' → logprob: -4.781106948852539
    8. '('' → logprob: -5.281106948852539
    9. ''' → logprob: -5.406106948852539
    10. ' -' → logprob: -7.406106948852539

Token 260: 'NA' (ID: 9555)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.7169926166534424
    2. '-' → logprob: -1.0919926166534424
    3. '"' → logprob: -3.8419926166534424
    4. 'hop' → logprob: -3.9669926166534424
    5. 'Impossible' → logprob: -3.9669926166534424
    6. '0' → logprob: -4.091992378234863
    7. 'not' → logprob: -4.466992378234863
    8. 'TTL' → logprob: -4.716992378234863
    9. 'Not' → logprob: -4.966992378234863
    10. 'im' → logprob: -5.091992378234863

Token 261: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.003662191331386566
    2. '")
' → logprob: -5.628662109375
    3. ')' → logprob: -10.253662109375
    4. '")
' → logprob: -11.503662109375
    5. 'T' → logprob: -11.878662109375
    6. 'L' → logprob: -12.378662109375
    7. '"' → logprob: -13.753662109375
    8. ')")' → logprob: -14.128662109375
    9. '')' → logprob: -14.503662109375
    10. ' ")' → logprob: -14.503662109375

Token 262: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005023968406021595
    2. '               ' → logprob: -8.125502586364746
    3. '       ' → logprob: -8.500502586364746
    4. '   ' → logprob: -13.375502586364746
    5. '<|end|>' → logprob: -14.500502586364746
    6. 'else' → logprob: -15.000502586364746
    7. '                   ' → logprob: -15.750502586364746
    8. 'continue' → logprob: -16.62550163269043
    9. ' else' → logprob: -17.12550163269043
    10. '		' → logprob: -17.25050163269043

Token 263: ' found' (ID: 2491)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.41866585687967e-06
    2. '               ' → logprob: -12.750008583068848
    3. 'break' → logprob: -12.750008583068848
    4. '       ' → logprob: -13.375008583068848
    5. '   ' → logprob: -15.250008583068848
    6. '
' → logprob: -15.250008583068848
    7. 'continue' → logprob: -15.875008583068848
    8. '                   ' → logprob: -16.37500762939453
    9. '          ' → logprob: -16.75000762939453
    10. '		' → logprob: -16.87500762939453

Token 264: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06388093531131744
    2. ' =' → logprob: -2.8138809204101562
    3. '=True' → logprob: -6.313880920410156
    4. '=False' → logprob: -9.438880920410156
    5. '<|end|>' → logprob: -11.563880920410156
    6. '   ' → logprob: -12.563880920410156
    7. '=
' → logprob: -12.813880920410156
    8. '=true' → logprob: -13.188880920410156
    9. '
' → logprob: -13.938880920410156
    10. ' ' → logprob: -14.688880920410156

Token 265: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0024756586644798517
    2. ' True' → logprob: -6.002475738525391
    3. '(True' → logprob: -19.00247573852539
    4. '=True' → logprob: -19.75247573852539
    5. '   ' → logprob: -20.62747573852539
    6. 'true' → logprob: -22.12747573852539
    7. ' ' → logprob: -22.50247573852539
    8. 'Tr' → logprob: -22.87747573852539
    9. '1' → logprob: -23.37747573852539
    10. 'TRUE' → logprob: -23.62747573852539

Token 266: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00039885283331386745
    2. '       ' → logprob: -8.375398635864258
    3. '<|end|>' → logprob: -9.625398635864258
    4. '
' → logprob: -10.375398635864258
    5. '               ' → logprob: -10.500398635864258
    6. '   ' → logprob: -10.500398635864258
    7. '		' → logprob: -12.375398635864258
    8. '                   ' → logprob: -12.750398635864258
    9. '            
' → logprob: -13.125398635864258
    10. '    
' → logprob: -13.500398635864258

Token 267: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017437703907489777
    2. '       ' → logprob: -4.267437934875488
    3. '   ' → logprob: -5.767437934875488
    4. '               ' → logprob: -9.017437934875488
    5. '                   ' → logprob: -12.517437934875488
    6. '		' → logprob: -12.892437934875488
    7. 'continue' → logprob: -13.017437934875488
    8. '
' → logprob: -13.142437934875488
    9. ' continue' → logprob: -13.267437934875488
    10. '    
' → logprob: -13.767437934875488

Token 268: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007944806478917599
    2. 'break' (adapté à ' break') → logprob: -5.007944583892822
    3. ' break' → logprob: -6.757944583892822
    4. '       ' → logprob: -10.38294506072998
    5. '   ' → logprob: -11.25794506072998
    6. '	break' → logprob: -11.50794506072998
    7. '		' → logprob: -12.25794506072998
    8. '               ' → logprob: -12.25794506072998
    9. '
' → logprob: -12.88294506072998
    10. '                   ' → logprob: -14.75794506072998

Token 269: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002279434585943818
    2. '       ' → logprob: -6.252279281616211
    3. '    
' → logprob: -8.127279281616211
    4. '        
' → logprob: -11.252279281616211
    5. ')' → logprob: -11.627279281616211
    6. ' else' → logprob: -12.002279281616211
    7. 'else' → logprob: -12.252279281616211
    8. ',' → logprob: -12.627279281616211
    9. '    ' → logprob: -12.752279281616211
    10. '<|end|>' → logprob: -12.752279281616211

Token 270: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013858318561688066
    2. '       ' → logprob: -6.626385688781738
    3. 'for' → logprob: -10.001385688781738
    4. ' for' → logprob: -12.001385688781738
    5. 'if' → logprob: -13.001385688781738
    6. '    
' → logprob: -13.251385688781738
    7. '```' → logprob: -13.251385688781738
    8. 'else' → logprob: -13.626385688781738
    9. '           ' → logprob: -15.251385688781738
    10. 'continue' → logprob: -15.626385688781738

Token 271: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.19133542478084564
    2. '   ' → logprob: -2.441335439682007
    3. ' for' → logprob: -2.441335439682007
    4. '	for' → logprob: -10.191335678100586
    5. '    
' → logprob: -11.316335678100586
    6. '```' → logprob: -13.316335678100586
    7. '       ' → logprob: -13.441335678100586
    8. 'if' → logprob: -14.566335678100586
    9. ' 
' → logprob: -14.566335678100586
    10. '        
' → logprob: -14.941335678100586

Token 272: ' nxt' (ID: 160200)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.035506997257471085
    2. ' neighbor' → logprob: -4.0355072021484375
    3. 'nei' → logprob: -4.2855072021484375
    4. 'nbr' → logprob: -6.9105072021484375
    5. 'next' → logprob: -7.0355072021484375
    6. ' nei' → logprob: -7.1605072021484375
    7. ' nxt' → logprob: -8.035507202148438
    8. 'ne' → logprob: -8.535507202148438
    9. 'n' → logprob: -8.910507202148438
    10. ' neigh' → logprob: -9.660507202148438

Token 273: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42873820662498474
    2. 'in' → logprob: -1.0537382364273071
    3. 'n' → logprob: -10.678738594055176
    4. ' ' → logprob: -12.303738594055176
    5. '	in' → logprob: -12.428738594055176
    6. ',' → logprob: -13.303738594055176
    7. '_in' → logprob: -13.928738594055176
    8. ')' → logprob: -14.178738594055176
    9. '_' → logprob: -14.553738594055176
    10. 's' → logprob: -14.803738594055176

Token 274: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0011703446507453918
    2. ' graph' → logprob: -6.7511701583862305
    3. '	graph' → logprob: -16.001171112060547
    4. '(graph' → logprob: -17.876171112060547
    5. 'Graph' → logprob: -19.501171112060547
    6. 'range' → logprob: -20.251171112060547
    7. '   ' → logprob: -20.626171112060547
    8. 'graphql' → logprob: -20.876171112060547
    9. '_graph' → logprob: -21.126171112060547
    10. 'raph' → logprob: -21.251171112060547

Token 275: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -1.9361264946837764e-07
    2. 'cur' → logprob: -16.875
    3. '.get' → logprob: -17.625
    4. '[current' → logprob: -18.25
    5. '[curr' → logprob: -18.25
    6. '[' → logprob: -18.375
    7. '(cur' → logprob: -18.625
    8. '[c' → logprob: -19.125
    9. ' [' → logprob: -19.375
    10. '[get' → logprob: -20.625

Token 276: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.0016375737031921744
    2. ']:
' → logprob: -6.6266374588012695
    3. ']' → logprob: -8.37663745880127
    4. ':' → logprob: -9.75163745880127
    5. '):' → logprob: -11.37663745880127
    6. ']:
' → logprob: -12.25163745880127
    7. '}:' → logprob: -13.12663745880127
    8. ' ]' → logprob: -13.87663745880127
    9. ']):' → logprob: -14.00163745880127
    10. '   ' → logprob: -14.25163745880127

Token 277: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028068332001566887
    2. ' if' → logprob: -4.028068542480469
    3. '       ' → logprob: -5.778068542480469
    4. '<|end|>' → logprob: -6.153068542480469
    5. '   ' → logprob: -6.778068542480469
    6. ':' → logprob: -6.903068542480469
    7. '	       ' → logprob: -7.153068542480469
    8. '<|end|>' → logprob: -7.903068542480469
    9. 'if' → logprob: -8.403068542480469
    10. '    	   ' → logprob: -8.653068542480469

Token 278: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.074631467461586
    2. '           ' → logprob: -3.449631452560425
    3. '               ' → logprob: -3.699631452560425
    4. 'if' (adapté à ' if') → logprob: -4.199631690979004
    5. ' ' → logprob: -9.199631690979004
    6. ' ' → logprob: -9.574631690979004
    7. '            ' → logprob: -9.699631690979004
    8. '   ' → logprob: -9.949631690979004
    9. ' not' → logprob: -10.199631690979004
    10. ')' → logprob: -11.074631690979004

Token 279: ' nxt' (ID: 160200)
  Prédit: ' nxt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nxt' → logprob: -0.0024758970830589533
    2. 'n' → logprob: -6.002475738525391
    3. 'n't' → logprob: -16.37747573852539
    4. ' nex' → logprob: -16.87747573852539
    5. ' ' → logprob: -17.50247573852539
    6. '(n' → logprob: -17.62747573852539
    7. ' n' → logprob: -18.12747573852539
    8. ' next' → logprob: -18.12747573852539
    9. '	n' → logprob: -18.50247573852539
    10. ' nx' → logprob: -18.62747573852539

Token 280: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0010334034450352192
    2. 'not' → logprob: -6.876033306121826
    3. '	not' → logprob: -14.751033782958984
    4. ')' → logprob: -16.376033782958984
    5. ' no' → logprob: -17.126033782958984
    6. '<|end|>' → logprob: -17.376033782958984
    7. '_not' → logprob: -18.001033782958984
    8. ' ' → logprob: -18.001033782958984
    9. ':not' → logprob: -18.501033782958984
    10. ' ' → logprob: -19.251033782958984

Token 281: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10409379750490189
    2. 'in' → logprob: -2.4790937900543213
    3. 'visited' → logprob: -4.3540940284729
    4. ' visited' → logprob: -6.9790940284729
    5. '<|end|>' → logprob: -7.1040940284729
    6. ' ' → logprob: -8.854093551635742
    7. '   ' → logprob: -9.104093551635742
    8. ')' → logprob: -9.354093551635742
    9. '  ' → logprob: -11.354093551635742
    10. ' not' → logprob: -11.354093551635742

Token 282: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.1269282102584839
    2. ' visited' → logprob: -2.1269283294677734
    3. '
' → logprob: -17.626928329467773
    4. 'Visited' → logprob: -17.626928329467773
    5. 'vis' → logprob: -17.751928329467773
    6. ' ' → logprob: -17.751928329467773
    7. 'visit' → logprob: -18.001928329467773
    8. 'seen' → logprob: -18.876928329467773
    9. 'visible' → logprob: -19.126928329467773
    10. '   ' → logprob: -19.626928329467773

Token 283: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.18901114165782928
    2. ':' → logprob: -1.8140110969543457
    3. '):
' → logprob: -5.064011096954346
    4. '               ' → logprob: -6.814011096954346
    5. '           ' → logprob: -6.814011096954346
    6. '):' → logprob: -8.189011573791504
    7. ')' → logprob: -9.189011573791504
    8. ' :
' → logprob: -9.564011573791504
    9. '<|end|>' → logprob: -9.939011573791504
    10. ' and' → logprob: -10.189011573791504

Token 284: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0015571167459711432
    2. '                
' → logprob: -7.626557350158691
    3. '           ' → logprob: -7.751557350158691
    4. ' visited' → logprob: -8.126557350158691
    5. '<|end|>' → logprob: -9.376557350158691
    6. '              ' → logprob: -9.876557350158691
    7. '            
' → logprob: -10.626557350158691
    8. ':
' → logprob: -10.876557350158691
    9. '	           ' → logprob: -11.126557350158691
    10. '                   ' → logprob: -11.251557350158691

Token 285: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.00576513446867466
    2. 'visited' (adapté à ' visited') → logprob: -5.380764961242676
    3. '               ' → logprob: -7.380764961242676
    4. '                   ' → logprob: -8.255764961242676
    5. ' 
' → logprob: -8.880764961242676
    6. '                ' → logprob: -9.505764961242676
    7. '                    
' → logprob: -11.630764961242676
    8. ' ' → logprob: -11.880764961242676
    9. '                
' → logprob: -12.255764961242676
    10. ' ' → logprob: -12.505764961242676

Token 286: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -3.583550642360933e-05
    2. '.' → logprob: -10.250036239624023
    3. 'add' → logprob: -15.500036239624023
    4. ' .' → logprob: -16.125036239624023
    5. '.Add' → logprob: -16.625036239624023
    6. ' add' → logprob: -18.250036239624023
    7. '.remove' → logprob: -18.625036239624023
    8. '.append' → logprob: -19.625036239624023
    9. ')add' → logprob: -19.875036239624023
    10. '	add' → logprob: -20.375036239624023

Token 287: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.1269298940896988
    2. '(' → logprob: -2.126929998397827
    3. ' (' → logprob: -13.751930236816406
    4. '(
' → logprob: -15.376930236816406
    5. '(next' → logprob: -15.626930236816406
    6. '(nx' → logprob: -16.001930236816406
    7. 'n' → logprob: -16.751930236816406
    8. '(

' → logprob: -17.001930236816406
    9. '((' → logprob: -17.126930236816406
    10. '(s' → logprob: -17.501930236816406

Token 288: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -6.2729995988775045e-06
    2. ' nxt' → logprob: -13.250006675720215
    3. ')' → logprob: -13.875006675720215
    4. 't' → logprob: -14.125006675720215
    5. '(n' → logprob: -14.375006675720215
    6. 'x' → logprob: -14.375006675720215
    7. '   ' → logprob: -14.750006675720215
    8. '       ' → logprob: -15.125006675720215
    9. 'ext' → logprob: -15.250006675720215
    10. 'n' → logprob: -15.500006675720215

Token 289: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6402609348297119
    2. ')
' → logprob: -0.7652609348297119
    3. '               ' → logprob: -4.890260696411133
    4. ')
' → logprob: -10.140260696411133
    5. ')n' → logprob: -10.390260696411133
    6. ',' → logprob: -11.140260696411133
    7. '                   ' → logprob: -12.265260696411133
    8. 'n' → logprob: -12.390260696411133
    9. '           ' → logprob: -12.515260696411133
    10. '),' → logprob: -13.015260696411133

Token 290: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0025661452673375607
    2. '                
' → logprob: -6.627566337585449
    3. ',' → logprob: -8.00256633758545
    4. ' queue' → logprob: -8.12756633758545
    5. '
' → logprob: -8.37756633758545
    6. '```' → logprob: -8.87756633758545
    7. ',
' → logprob: -9.87756633758545
    8. '			' → logprob: -10.12756633758545
    9. ')' → logprob: -10.37756633758545
    10. ')
' → logprob: -11.12756633758545

Token 291: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.38710537552833557
    2. ' queue' → logprob: -1.1371053457260132
    3. '               ' → logprob: -8.512104988098145
    4. '           ' → logprob: -11.512104988098145
    5. '                   ' → logprob: -11.512104988098145
    6. '       ' → logprob: -12.387104988098145
    7. '   ' → logprob: -12.637104988098145
    8. '(queue' → logprob: -13.012104988098145
    9. '```' → logprob: -14.137104988098145
    10. '
' → logprob: -14.637104988098145

Token 292: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.306760805164231e-05
    2. '.' → logprob: -11.50001335144043
    3. '.p' → logprob: -13.12501335144043
    4. 'append' → logprob: -14.87501335144043
    5. '.extend' → logprob: -15.87501335144043
    6. '.enqueue' → logprob: -15.87501335144043
    7. '.app' → logprob: -16.37501335144043
    8. ' .' → logprob: -16.50001335144043
    9. '                   ' → logprob: -17.75001335144043
    10. ').' → logprob: -17.87501335144043

Token 293: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6965124607086182
    2. '((' → logprob: -0.6965124607086182
    3. '(n' → logprob: -5.696512222290039
    4. '(
' → logprob: -13.696512222290039
    5. ' (' → logprob: -15.446512222290039
    6. '(('' → logprob: -15.446512222290039
    7. '(

' → logprob: -16.07151222229004
    8. '(next' → logprob: -16.94651222229004
    9. '(("' → logprob: -17.07151222229004
    10. '(nx' → logprob: -17.07151222229004

Token 294: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.5451681974809617e-05
    2. ' nxt' → logprob: -11.125015258789062
    3. '(n' → logprob: -14.875015258789062
    4. '   ' → logprob: -15.500015258789062
    5. '	n' → logprob: -16.500015258789062
    6. 'n't' → logprob: -17.000015258789062
    7. ')n' → logprob: -17.250015258789062
    8. '[n' → logprob: -17.500015258789062
    9. '
' → logprob: -17.500015258789062
    10. ')' → logprob: -17.750015258789062

Token 295: 'xt' (ID: 711)
  Prédit: 'xt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xt' → logprob: -2.1008713702030946e-06
    2. 't' → logprob: -14.000001907348633
    3. '   ' → logprob: -14.625001907348633
    4. 'x' → logprob: -14.875001907348633
    5. ' nxt' → logprob: -15.625001907348633
    6. ' xt' → logprob: -15.750001907348633
    7. '       ' → logprob: -17.375001907348633
    8. 'txt' → logprob: -18.375001907348633
    9. '```' → logprob: -18.750001907348633
    10. ',' → logprob: -18.750001907348633

Token 296: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003993296413682401
    2. ',n' → logprob: -8.000399589538574
    3. ' ,' → logprob: -9.750399589538574
    4. ',next' → logprob: -13.875399589538574
    5. '),' → logprob: -14.375399589538574
    6. ',length' → logprob: -14.625399589538574
    7. '`,' → logprob: -14.750399589538574
    8. '           ' → logprob: -14.750399589538574
    9. '   ' → logprob: -14.875399589538574
    10. '',' → logprob: -14.875399589538574

Token 297: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.38687121868133545
    2. 'length' → logprob: -1.1368712186813354
    3. '(length' → logprob: -17.511871337890625
    4. '	length' → logprob: -17.636871337890625
    5. 'leng' → logprob: -18.011871337890625
    6. ' ' → logprob: -18.386871337890625
    7. ' lenght' → logprob: -18.636871337890625
    8. 'ength' → logprob: -18.886871337890625
    9. ',length' → logprob: -19.011871337890625
    10. '[length' → logprob: -19.261871337890625

Token 298: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20141363143920898
    2. ' +' → logprob: -1.701413631439209
    3. ')' → logprob: -16.451414108276367
    4. ' ' → logprob: -16.701414108276367
    5. ')+' → logprob: -17.076414108276367
    6. ' ' → logprob: -17.451414108276367
    7. '＋' → logprob: -18.201414108276367
    8. '+
' → logprob: -18.451414108276367
    9. '```' → logprob: -18.701414108276367
    10. ' plus' → logprob: -18.826414108276367

Token 299: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003802680876106024
    2. ' ' → logprob: -7.875380039215088
    3. '```' → logprob: -16.50037956237793
    4. ')' → logprob: -16.75037956237793
    5. '   ' → logprob: -17.12537956237793
    6. '))' → logprob: -20.06287956237793
    7. '
' → logprob: -20.50037956237793
    8. '  ' → logprob: -20.56287956237793
    9. '`' → logprob: -20.68787956237793
    10. '``' → logprob: -21.00037956237793

Token 300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '```' → logprob: -16.500015258789062
    4. '   ' → logprob: -16.875015258789062
    5. ')' → logprob: -17.250015258789062
    6. '))' → logprob: -18.000015258789062
    7. '`' → logprob: -18.750015258789062
    8. '  ' → logprob: -19.750015258789062
    9. '``' → logprob: -20.187515258789062
    10. '
' → logprob: -20.187515258789062

Token 301: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00011105302110081539
    2. ')' → logprob: -9.750110626220703
    3. '))
' → logprob: -9.875110626220703
    4. ')))' → logprob: -14.375110626220703
    5. ' ))' → logprob: -14.500110626220703
    6. '               ' → logprob: -17.375110626220703
    7. ')
' → logprob: -17.625110626220703
    8. '           ' → logprob: -17.625110626220703
    9. '   ' → logprob: -17.875110626220703
    10. '       ' → logprob: -18.125110626220703

Token 302: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.010820250026881695
    2. '   ' → logprob: -4.885820388793945
    3. 'print' → logprob: -6.510820388793945
    4. ' if' → logprob: -6.635820388793945
    5. '
' → logprob: -8.885820388793945
    6. 'If' → logprob: -9.385820388793945
    7. 'else' → logprob: -9.510820388793945
    8. '```' → logprob: -10.010820388793945
    9. '<|end|>' → logprob: -10.135820388793945
    10. '...' → logprob: -12.260820388793945

Token 303: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.25203007459640503
    2. '   ' → logprob: -1.5020301342010498
    3. ' if' → logprob: -9.252030372619629
    4. '```' → logprob: -13.127030372619629
    5. 'else' → logprob: -13.502030372619629
    6. 'If' → logprob: -13.627030372619629
    7. '
' → logprob: -15.002030372619629
    8. '	if' → logprob: -16.502029418945312
    9. ';if' → logprob: -16.752029418945312
    10. '    
' → logprob: -17.252029418945312

Token 304: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.4741035997867584
    2. ' not' → logprob: -0.974103569984436
    3. '   ' → logprob: -10.724103927612305
    4. '	not' → logprob: -13.349103927612305
    5. ' ' → logprob: -13.724103927612305
    6. ' ' → logprob: -14.099103927612305
    7. '
' → logprob: -14.724103927612305
    8. 'found' → logprob: -15.474103927612305
    9. '(not' → logprob: -15.474103927612305
    10. 'n' → logprob: -16.474103927612305

Token 305: ' found' (ID: 2491)
  Prédit: 'found'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'found' → logprob: -0.47407716512680054
    2. ' found' → logprob: -0.9740771651268005
    3. '	found' → logprob: -15.974077224731445
    4. '_found' → logprob: -17.349077224731445
    5. '(found' → logprob: -17.849077224731445
    6. ' ' → logprob: -18.724077224731445
    7. 'Found' → logprob: -19.724077224731445
    8. ' ' → logprob: -20.349077224731445
    9. '
' → logprob: -22.599077224731445
    10. 'find' → logprob: -22.849077224731445

Token 306: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29357045888900757
    2. ':
' → logprob: -1.4185705184936523
    3. '   ' → logprob: -4.668570518493652
    4. 'print' → logprob: -6.668570518493652
    5. '       ' → logprob: -6.793570518493652
    6. '():
' → logprob: -8.293570518493652
    7. '(print' → logprob: -9.918570518493652
    8. ' print' → logprob: -10.043570518493652
    9. '(' → logprob: -10.043570518493652
    10. '==' → logprob: -10.168570518493652

Token 307: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.056950923055410385
    2. '   ' → logprob: -3.681950807571411
    3. 'print' → logprob: -3.681950807571411
    4. ' print' → logprob: -5.30695104598999
    5. '    
' → logprob: -11.181950569152832
    6. '           ' → logprob: -11.556950569152832
    7. '
' → logprob: -11.681950569152832
    8. '        
' → logprob: -12.306950569152832
    9. '```' → logprob: -12.431950569152832
    10. '	print' → logprob: -12.931950569152832

Token 308: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.000777707842644304
    2. ' print' → logprob: -7.750777721405029
    3. '   ' → logprob: -8.000777244567871
    4. '       ' → logprob: -11.375777244567871
    5. '```' → logprob: -16.125778198242188
    6. '	print' → logprob: -16.750778198242188
    7. '  ' → logprob: -17.250778198242188
    8. '           ' → logprob: -17.250778198242188
    9. ' ' → logprob: -17.875778198242188
    10. '    
' → logprob: -18.375778198242188

Token 309: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -2.1008713702030946e-06
    2. '('' → logprob: -13.625001907348633
    3. '(' → logprob: -14.000001907348633
    4. '"' → logprob: -17.250001907348633
    5. ' ("' → logprob: -19.375001907348633
    6. 'NA' → logprob: -20.125001907348633
    7. '(
' → logprob: -20.875001907348633
    8. '()' → logprob: -21.250001907348633
    9. '(N' → logprob: -21.500001907348633
    10. '(("' → logprob: -21.875001907348633

Token 310: 'NA' (ID: 9555)
  Prédit: 'NA'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'NA' → logprob: -0.0002615742268972099
    2. '"' → logprob: -8.250261306762695
    3. ' NA' → logprob: -15.500261306762695
    4. '("' → logprob: -16.500261306762695
    5. ''' → logprob: -17.000261306762695
    6. 'na' → logprob: -17.250261306762695
    7. '"N' → logprob: -17.375261306762695
    8. 'N' → logprob: -18.750261306762695
    9. 'Na' → logprob: -18.875261306762695
    10. '   ' → logprob: -18.875261306762695

Token 311: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0002506111632101238
    2. ')")' → logprob: -8.500250816345215
    3. ')' → logprob: -10.000250816345215
    4. '")
' → logprob: -13.500250816345215
    5. '}")' → logprob: -15.125250816345215
    6. '')' → logprob: -17.2502498626709
    7. '")}' → logprob: -18.1252498626709
    8. '"))' → logprob: -18.8752498626709
    9. '`)' → logprob: -18.8752498626709
    10. ')"' → logprob: -19.0002498626709


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 309
Tokens correctement prédits (1ère position, stricte): 119
Tokens correctement prédits (1ère position, avec adaptation): 133
Tokens correctement prédits (top 10): 246
Précision stricte (1ère position): 38.51%
Précision adaptée (1ère position): 43.04%
Précision (top 10): 79.61%
================================================================================
