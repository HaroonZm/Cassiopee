================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:22:58
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
N, M, p = map(int, input().split())
destinations = [int(input()) for _ in range(M)]

# Inclure la station de départ parmi celles à visiter pour déterminer l'intervalle à couvrir
all_stations = destinations + [p]

# Trouver la station minimale et maximale parmi les stations à couvrir
min_station = min(all_stations)
max_station = max(all_stations)

# Calculer la distance en avançant dans le sens croissant
forward_distance = (max_station - min_station) 

# Calculer la distance en sens inverse sur le cercle
backward_distance = N - forward_distance

# Le coût minimal correspond au déplacement minimal pour couvrir l'intervalle
# Puisque on peut aller dans les deux sens, on choisit la plus petite distance pour couvrir toutes les stations
# Ensuite on calcule le coût entre p et l'intervalle, en prenant en compte la position de p

# Coûts possibles selon les stratégies:
# 1. Aller du point p vers min_station puis couvrir jusqu'à max_station (dans le sens croissant)
cost1 = (p - min_station) % N + forward_distance
# 2. Aller du point p vers max_station puis couvrir jusqu'à min_station (dans le sens décroissant)
cost2 = (max_station - p) % N + backward_distance

# Le coût minimal est le minimum entre ces deux stratégies, multiplié par 100 yens par station
min_cost = min(cost1, cost2) * 100

print(min_cost)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'N' (ID: 45)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' M' (ID: 391)
  → Token d'amorce (pas de prédiction)

Token 3: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07086548954248428
    2. ',' → logprob: -2.8208653926849365
    3. ' =' → logprob: -4.820865631103516
    4. '```' → logprob: -7.445865631103516
    5. ';' → logprob: -9.945865631103516
    6. '`' → logprob: -10.320865631103516
    7. ')' → logprob: -10.320865631103516
    8. '[' → logprob: -11.070865631103516
    9. ',
' → logprob: -11.445865631103516
    10. ''' → logprob: -11.445865631103516

Token 4: ' p' (ID: 275)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.22760403156280518
    2. ' =' → logprob: -1.8526040315628052
    3. ',' → logprob: -3.1026039123535156
    4. ')' → logprob: -6.977603912353516
    5. ';' → logprob: -8.102603912353516
    6. ' ' → logprob: -8.602603912353516
    7. '```' → logprob: -9.352603912353516
    8. ' ,' → logprob: -9.602603912353516
    9. '.' → logprob: -10.227603912353516
    10. '#' → logprob: -10.727603912353516

Token 5: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.012840177863836288
    2. ' =' → logprob: -4.637840270996094
    3. ',' → logprob: -5.887840270996094
    4. ')' → logprob: -9.512840270996094
    5. ''' → logprob: -10.137840270996094
    6. ';' → logprob: -10.262840270996094
    7. '[' → logprob: -10.262840270996094
    8. '+' → logprob: -10.512840270996094
    9. '.' → logprob: -10.637840270996094
    10. '*' → logprob: -11.137840270996094

Token 6: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.45134803652763367
    2. 'map' → logprob: -1.826348066329956
    3. ' ' → logprob: -2.826348066329956
    4. ' input' → logprob: -3.201348066329956
    5. 'input' → logprob: -3.201348066329956
    6. '0' → logprob: -3.451348066329956
    7. '10' → logprob: -4.326347827911377
    8. ' list' → logprob: -4.826347827911377
    9. 'list' → logprob: -5.701347827911377
    10. '1' → logprob: -7.201347827911377

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.06669192761182785
    2. '<|end|>' → logprob: -3.4416918754577637
    3. '```' → logprob: -4.066691875457764
    4. '(lambda' → logprob: -4.566691875457764
    5. '(user' → logprob: -6.691691875457764
    6. '(token' → logprob: -7.441691875457764
    7. ')' → logprob: -7.691691875457764
    8. '<|end|>' → logprob: -7.941691875457764
    9. 'user' → logprob: -8.191692352294922
    10. '(int' → logprob: -8.566692352294922

Token 8: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3746223747730255
    2. ')' → logprob: -1.4996223449707031
    3. '(input' → logprob: -2.499622344970703
    4. '```' → logprob: -6.499622344970703
    5. '(str' → logprob: -6.749622344970703
    6. '<|end|>' → logprob: -7.249622344970703
    7. '`)' → logprob: -7.499622344970703
    8. '(user' → logprob: -7.999622344970703
    9. '(int' → logprob: -8.249622344970703
    10. '())' → logprob: -8.249622344970703

Token 9: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.12707488238811493
    2. ' input' → logprob: -2.127074956893921
    3. '(input' → logprob: -8.8770751953125
    4. ')' → logprob: -12.1270751953125
    5. ',input' → logprob: -14.0020751953125
    6. '```' → logprob: -14.7520751953125
    7. '=input' → logprob: -15.5020751953125
    8. '<input' → logprob: -15.6270751953125
    9. '[input' → logprob: -16.2520751953125
    10. ' )' → logprob: -16.7520751953125

Token 10: '().' (ID: 1454)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0265597105026245
    2. ')' → logprob: -1.0265597105026245
    3. '()' → logprob: -2.151559829711914
    4. '())' → logprob: -2.776559829711914
    5. '('' → logprob: -3.651559829711914
    6. '```' → logprob: -4.026559829711914
    7. '(token' → logprob: -4.776559829711914
    8. '<|end|>' → logprob: -4.901559829711914
    9. '(()' → logprob: -5.276559829711914
    10. '`' → logprob: -5.276559829711914

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0011986821191385388
    2. 'strip' → logprob: -6.751198768615723
    3. 'rstrip' → logprob: -10.751198768615723
    4. ')' → logprob: -12.626198768615723
    5. ' split' → logprob: -12.876198768615723
    6. '(split' → logprob: -14.126198768615723
    7. '```' → logprob: -15.501198768615723
    8. 'read' → logprob: -16.001197814941406
    9. 'spl' → logprob: -16.876197814941406
    10. 'startswith' → logprob: -17.251197814941406

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.019873881712555885
    2. '())' → logprob: -4.019874095916748
    3. '`)' → logprob: -7.394874095916748
    4. '))' → logprob: -7.519874095916748
    5. '(' → logprob: -8.14487361907959
    6. '()' → logprob: -8.64487361907959
    7. '')' → logprob: -10.89487361907959
    8. '('' → logprob: -11.51987361907959
    9. ')`' → logprob: -11.51987361907959
    10. '```' → logprob: -11.64487361907959

Token 13: 'dest' (ID: 28338)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.4504227042198181
    2. 'for' → logprob: -1.325422763824463
    3. 'd' → logprob: -4.075422763824463
    4. 'r' → logprob: -4.575422763824463
    5. '#' → logprob: -4.700422763824463
    6. 'x' → logprob: -4.825422763824463
    7. 'A' → logprob: -4.825422763824463
    8. 's' → logprob: -5.450422763824463
    9. 'n' → logprob: -5.575422763824463
    10. '`' → logprob: -5.575422763824463

Token 14: 'inations' (ID: 15628)
  Prédit: 'ination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ination' → logprob: -0.06986895948648453
    2. 'inations' → logprob: -3.444869041442871
    3. '_' → logprob: -4.069869041442871
    4. ' =' → logprob: -4.319869041442871
    5. '```' → logprob: -6.819869041442871
    6. '   ' → logprob: -6.944869041442871
    7. '=' → logprob: -7.069869041442871
    8. 'i' → logprob: -7.444869041442871
    9. '[' → logprob: -7.819869041442871
    10. 's' → logprob: -8.569869041442871

Token 15: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.1954241693019867
    2. '=' → logprob: -2.3204240798950195
    3. ' =' → logprob: -2.6954240798950195
    4. '.' → logprob: -5.4454240798950195
    5. ')' → logprob: -6.0704240798950195
    6. 's' → logprob: -6.6954240798950195
    7. '[:]' → logprob: -7.1954240798950195
    8. '_' → logprob: -7.4454240798950195
    9. '```' → logprob: -7.6954240798950195
    10. '[]' → logprob: -7.9454240798950195

Token 16: ' [' (ID: 723)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.4768695831298828
    2. '[]' → logprob: -0.9768695831298828
    3. 'list' → logprob: -7.226869583129883
    4. ' [' → logprob: -7.476869583129883
    5. '[' → logprob: -7.726869583129883
    6. ' list' → logprob: -7.851869583129883
    7. 'set' → logprob: -7.976869583129883
    8. ' set' → logprob: -8.851869583129883
    9. '[input' → logprob: -9.976869583129883
    10. '[]}' → logprob: -10.476869583129883

Token 17: 'int' (ID: 491)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.7164757251739502
    2. '0' → logprob: -1.9664757251739502
    3. 'int' → logprob: -1.9664757251739502
    4. '[]' → logprob: -2.59147572517395
    5. 'map' → logprob: -2.84147572517395
    6. 'tuple' → logprob: -2.96647572517395
    7. ']' → logprob: -3.96647572517395
    8. ' list' → logprob: -4.466475486755371
    9. ' tuple' → logprob: -5.216475486755371
    10. ' []' → logprob: -5.466475486755371

Token 18: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3108310401439667
    2. '(input' → logprob: -1.810831069946289
    3. '(x' → logprob: -2.310831069946289
    4. '(token' → logprob: -6.310831069946289
    5. '(i' → logprob: -7.310831069946289
    6. '(user' → logprob: -7.935831069946289
    7. '(s' → logprob: -7.935831069946289
    8. ']' → logprob: -8.185831069946289
    9. '()' → logprob: -8.685831069946289
    10. '()]' → logprob: -9.060831069946289

Token 19: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -8.685467764735222e-05
    2. '()' → logprob: -10.125086784362793
    3. ')' → logprob: -10.875086784362793
    4. '()]' → logprob: -11.375086784362793
    5. '())
' → logprob: -12.000086784362793
    6. '()),' → logprob: -12.250086784362793
    7. '()))' → logprob: -13.250086784362793
    8. ' ())' → logprob: -13.625086784362793
    9. '().' → logprob: -13.875086784362793
    10. ')]' → logprob: -14.750086784362793

Token 20: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006429952569305897
    2. '()' → logprob: -5.256430149078369
    3. ')]' → logprob: -7.631430149078369
    4. 'for' → logprob: -8.006429672241211
    5. '())' → logprob: -8.756429672241211
    6. ' for' → logprob: -9.006429672241211
    7. ']' → logprob: -10.006429672241211
    8. '()]' → logprob: -10.881429672241211
    9. '[' → logprob: -12.006429672241211
    10. ' )' → logprob: -12.006429672241211

Token 21: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.040776390582323074
    2. '_' → logprob: -3.290776491165161
    3. ' _' → logprob: -6.165776252746582
    4. '_range' → logprob: -8.540776252746582
    5. ' ' → logprob: -8.665776252746582
    6. ' in' → logprob: -8.790776252746582
    7. 'range' → logprob: -9.665776252746582
    8. ' i' → logprob: -11.040776252746582
    9. '(range' → logprob: -11.290776252746582
    10. '	range' → logprob: -11.290776252746582

Token 22: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.04371444880962372
    2. ' range' → logprob: -3.1687145233154297
    3. 'in' → logprob: -8.16871452331543
    4. ' in' → logprob: -8.16871452331543
    5. '(range' → logprob: -9.16871452331543
    6. '_' → logprob: -10.54371452331543
    7. '	range' → logprob: -11.79371452331543
    8. '_range' → logprob: -11.91871452331543
    9. '.range' → logprob: -14.41871452331543
    10. 'i' → logprob: -14.54371452331543

Token 23: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011048170737922192
    2. ' range' → logprob: -4.511048316955566
    3. '(range' → logprob: -15.261048316955566
    4. '	range' → logprob: -16.26104736328125
    5. ' ' → logprob: -17.26104736328125
    6. 'ran' → logprob: -18.63604736328125
    7. '.range' → logprob: -18.63604736328125
    8. 'dest' → logprob: -19.01104736328125
    9. 'r' → logprob: -19.01104736328125
    10. '  ' → logprob: -19.26104736328125

Token 24: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.009092651307582855
    2. '(N' → logprob: -5.134092807769775
    3. '(' → logprob: -5.759092807769775
    4. ' (' → logprob: -13.509092330932617
    5. 'M' → logprob: -14.134092330932617
    6. '(n' → logprob: -14.384092330932617
    7. '(
' → logprob: -14.384092330932617
    8. ')' → logprob: -15.009092330932617
    9. '(len' → logprob: -15.259092330932617
    10. '(s' → logprob: -15.634092330932617

Token 25: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0003862245939671993
    2. ')' → logprob: -8.250386238098145
    3. ']' → logprob: -9.000386238098145
    4. ' )' → logprob: -14.750386238098145
    5. '])]' → logprob: -15.250386238098145
    6. ')])' → logprob: -15.375386238098145
    7. '')]' → logprob: -15.625386238098145
    8. '))' → logprob: -16.125385284423828
    9. ')],' → logprob: -16.375385284423828
    10. '])' → logprob: -16.375385284423828

Token 26: '#' (ID: 2)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6123756766319275
    2. 's' → logprob: -2.6123757362365723
    3. ' for' → logprob: -2.7373757362365723
    4. 'dp' → logprob: -2.7373757362365723
    5. 'd' → logprob: -3.1123757362365723
    6. ')' → logprob: -3.1123757362365723
    7. 'max' → logprob: -3.7373757362365723
    8. 'count' → logprob: -4.237375736236572
    9. '```' → logprob: -4.237375736236572
    10. 'a' → logprob: -4.487375736236572

Token 27: ' Incl' (ID: 104751)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2769588828086853
    2. 'for' → logprob: -1.90195894241333
    3. ' dp' → logprob: -3.40195894241333
    4. 'dp' → logprob: -4.15195894241333
    5. ' result' → logprob: -5.52695894241333
    6. ' total' → logprob: -5.52695894241333
    7. 'count' → logprob: -5.77695894241333
    8. 'distance' → logprob: -5.77695894241333
    9. ' distance' → logprob: -5.90195894241333
    10. ' visited' → logprob: -6.02695894241333

Token 28: 'ure' (ID: 627)
  Prédit: 'ude'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ude' → logprob: -1.005215048789978
    2. 'uded' → logprob: -1.130215048789978
    3. 'ine' → logprob: -2.7552151679992676
    4. 'ex' → logprob: -2.7552151679992676
    5. 'u' → logprob: -3.1302151679992676
    6. 'ined' → logprob: -3.2552151679992676
    7. 'e' → logprob: -3.7552151679992676
    8. 'udes' → logprob: -4.130215167999268
    9. 'uding' → logprob: -4.380215167999268
    10. 'ud' → logprob: -4.880215167999268

Token 29: ' la' (ID: 557)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03653871268033981
    2. '(' → logprob: -4.786538600921631
    3. 's' → logprob: -4.911538600921631
    4. ' ' → logprob: -5.286538600921631
    5. ' _' → logprob: -6.786538600921631
    6. '_s' → logprob: -6.911538600921631
    7. '#' → logprob: -6.911538600921631
    8. '_positions' → logprob: -7.161538600921631
    9. '(s' → logprob: -7.411538600921631
    10. 'a' → logprob: -7.411538600921631

Token 30: ' station' (ID: 11538)
  Prédit: ' destination'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' destination' → logprob: -1.257479190826416
    2. '_' → logprob: -2.507479190826416
    3. ' possibilité' → logprob: -2.507479190826416
    4. 'destination' → logprob: -3.507479190826416
    5. ' piste' → logprob: -3.507479190826416
    6. ' liste' → logprob: -3.632479190826416
    7. ' logique' → logprob: -3.757479190826416
    8. 's' → logprob: -3.757479190826416
    9. ' #' → logprob: -3.882479190826416
    10. ' prochaine' → logprob: -4.007479190826416

Token 31: ' de' (ID: 334)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.19274947047233582
    2. 's' → logprob: -2.567749500274658
    3. ' ' → logprob: -3.317749500274658
    4. ' de' → logprob: -3.442749500274658
    5. 'de' → logprob: -4.692749500274658
    6. '_' → logprob: -5.317749500274658
    7. '1' → logprob: -5.317749500274658
    8. 'd' → logprob: -6.067749500274658
    9. 'source' → logprob: -6.692749500274658
    10. ' p' → logprob: -6.942749500274658

Token 32: ' départ' (ID: 32693)
  Prédit: 'dé'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dé' → logprob: -0.16487622261047363
    2. ' départ' → logprob: -2.2898762226104736
    3. 'd' → logprob: -3.4148762226104736
    4. 'depart' → logprob: -4.5398759841918945
    5. 'destination' → logprob: -5.7898759841918945
    6. ' destination' → logprob: -6.5398759841918945
    7. ' d' → logprob: -7.5398759841918945
    8. ' ' → logprob: -7.7898759841918945
    9. '	d' → logprob: -8.039875984191895
    10. '0' → logprob: -8.414875984191895

Token 33: ' parmi' (ID: 51713)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.1645190268754959
    2. 'stations' → logprob: -2.9145190715789795
    3. '0' → logprob: -3.4145190715789795
    4. 's' → logprob: -3.5395190715789795
    5. ' destinations' → logprob: -4.1645188331604
    6. 'station' → logprob: -5.1645188331604
    7. ' stations' → logprob: -6.0395188331604
    8. 'start' → logprob: -6.6645188331604
    9. ' ,' → logprob: -6.7895188331604
    10. 'depart' → logprob: -6.9145188331604

Token 34: ' celles' (ID: 57573)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.08094867318868637
    2. ' destinations' → logprob: -2.5809485912323
    3. 'les' → logprob: -6.955948829650879
    4. 'destination' → logprob: -7.455948829650879
    5. ' les' → logprob: -9.080948829650879
    6. ' la' → logprob: -9.455948829650879
    7. 'la' → logprob: -9.955948829650879
    8. 'l' → logprob: -10.205948829650879
    9. '#' → logprob: -10.330948829650879
    10. 'des' → logprob: -10.455948829650879

Token 35: ' à' (ID: 1221)
  Prédit: 'des'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'des' → logprob: -0.29199087619781494
    2. 'dest' → logprob: -1.916990876197815
    3. ' des' → logprob: -2.7919907569885254
    4. '#' → logprob: -3.7919907569885254
    5. '_des' → logprob: -5.041990756988525
    6. '_' → logprob: -5.791990756988525
    7. ' destinations' → logprob: -5.791990756988525
    8. 's' → logprob: -6.291990756988525
    9. '_dest' → logprob: -6.291990756988525
    10. 'à' → logprob: -7.166990756988525

Token 36: ' visiter' (ID: 101443)
  Prédit: 'vis'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vis' → logprob: -0.08964210003614426
    2. 'incl' → logprob: -3.71464204788208
    3. ' visiter' → logprob: -4.21464204788208
    4. 'atte' → logprob: -4.58964204788208
    5. 'viser' → logprob: -5.21464204788208
    6. 'consider' → logprob: -5.21464204788208
    7. 'dess' → logprob: -5.58964204788208
    8. 'év' → logprob: -6.08964204788208
    9. 'visit' → logprob: -6.21464204788208
    10. 'tester' → logprob: -6.33964204788208

Token 37: ' pour' (ID: 1930)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.07729828357696533
    2. ' destinations' → logprob: -3.577298164367676
    3. 'stations' → logprob: -4.702298164367676
    4. ' p' → logprob: -4.827298164367676
    5. ' ' → logprob: -5.077298164367676
    6. 'p' → logprob: -5.452298164367676
    7. 'visited' → logprob: -5.827298164367676
    8. 's' → logprob: -5.827298164367676
    9. 'destination' → logprob: -6.702298164367676
    10. 'd' → logprob: -6.952298164367676

Token 38: ' déterminer' (ID: 122024)
  Prédit: ' visiter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' visiter' → logprob: -0.2744291126728058
    2. 'vis' → logprob: -2.7744290828704834
    3. ' rendre' → logprob: -2.8994290828704834
    4. ' effectuer' → logprob: -3.2744290828704834
    5. 'effect' → logprob: -4.6494293212890625
    6. ' pouvoir' → logprob: -4.7744293212890625
    7. ' parcour' → logprob: -4.7744293212890625
    8. 'p' → logprob: -5.6494293212890625
    9. 'aller' → logprob: -5.7744293212890625
    10. 'v' → logprob: -5.8994293212890625

Token 39: ' l' (ID: 305)
  Prédit: ' l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.5538510680198669
    2. ' la' → logprob: -1.5538511276245117
    3. ' le' → logprob: -2.6788511276245117
    4. 'le' → logprob: -2.9288511276245117
    5. ' toutes' → logprob: -3.0538511276245117
    6. 'l' → logprob: -4.428851127624512
    7. ' les' → logprob: -4.803851127624512
    8. 'la' → logprob: -5.178851127624512
    9. ' if' → logprob: -5.803851127624512
    10. ' un' → logprob: -6.053851127624512

Token 40: ''' (ID: 6)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.8797608613967896
    2. ''' → logprob: -1.3797608613967896
    3. 'a' → logprob: -2.3797607421875
    4. ''ensemble' → logprob: -2.3797607421875
    5. ''ordre' → logprob: -2.5047607421875
    6. 'es' → logprob: -2.8797607421875
    7. 'ordre' → logprob: -5.7547607421875
    8. 'ensemble' → logprob: -6.3797607421875
    9. ' itin' → logprob: -7.2547607421875
    10. ' ordre' → logprob: -7.5047607421875

Token 41: 'interval' (ID: 37558)
  Prédit: 'ordre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ordre' → logprob: -0.48717811703681946
    2. 'itin' → logprob: -1.487178087234497
    3. 'ensemble' → logprob: -2.112178087234497
    4. 'optimal' → logprob: -4.862178325653076
    5. ''ordre' → logprob: -4.862178325653076
    6. ''' → logprob: -4.987178325653076
    7. 'optim' → logprob: -5.487178325653076
    8. ''ensemble' → logprob: -5.862178325653076
    9. ' itin' → logprob: -6.237178325653076
    10. 'it' → logprob: -6.487178325653076

Token 42: 'le' (ID: 282)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.015962811186909676
    2. 'es' → logprob: -4.265962600708008
    3. 'e' → logprob: -7.265962600708008
    4. ' s' → logprob: -8.140962600708008
    5. 'v' → logprob: -8.640962600708008
    6. '_' → logprob: -8.765962600708008
    7. ',' → logprob: -9.640962600708008
    8. 'ts' → logprob: -10.265962600708008
    9. 'val' → logprob: -10.515962600708008
    10. '```' → logprob: -10.640962600708008

Token 43: ' à' (ID: 1221)
  Prédit: 'dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dest' → logprob: -0.8552436828613281
    2. 'stations' → logprob: -2.105243682861328
    3. ' destinations' → logprob: -2.730243682861328
    4. 'min' → logprob: -2.855243682861328
    5. ' p' → logprob: -2.980243682861328
    6. 's' → logprob: -2.980243682861328
    7. ' stations' → logprob: -3.105243682861328
    8. 'interval' → logprob: -3.230243682861328
    9. ' min' → logprob: -3.730243682861328
    10. 'visited' → logprob: -4.480243682861328

Token 44: ' couvrir' (ID: 197187)
  Prédit: 'par'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'par' → logprob: -0.6469492316246033
    2. 'vis' → logprob: -1.146949291229248
    3. ' parcour' → logprob: -2.646949291229248
    4. ' couvrir' → logprob: -4.021949291229248
    5. ' visiter' → logprob: -4.146949291229248
    6. 'c' → logprob: -4.146949291229248
    7. 'viser' → logprob: -5.271949291229248
    8. 'cons' → logprob: -5.521949291229248
    9. 'chercher' → logprob: -5.521949291229248
    10. 'tester' → logprob: -5.771949291229248

Token 45: '
' (ID: 198)
  Prédit: 'stations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stations' → logprob: -1.1659724712371826
    2. 'interval' → logprob: -1.2909724712371826
    3. 'dest' → logprob: -2.1659724712371826
    4. ' stations' → logprob: -2.7909724712371826
    5. 'start' → logprob: -3.1659724712371826
    6. ' start' → logprob: -3.5409724712371826
    7. 'visited' → logprob: -3.5409724712371826
    8. 'vis' → logprob: -3.9159724712371826
    9. 'positions' → logprob: -4.290972709655762
    10. ' interval' → logprob: -4.290972709655762

Token 46: 'all' (ID: 586)
  Prédit: 'interval'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.4747164845466614
    2. 'stations' → logprob: -1.7247164249420166
    3. 'vis' → logprob: -3.2247164249420166
    4. 'visited' → logprob: -3.3497164249420166
    5. ' interval' → logprob: -3.5997164249420166
    6. 'start' → logprob: -3.9747164249420166
    7. ' stations' → logprob: -4.099716663360596
    8. 'dest' → logprob: -4.099716663360596
    9. 'visit' → logprob: -5.224716663360596
    10. ' start' → logprob: -5.349716663360596

Token 47: '_st' (ID: 2518)
  Prédit: '_dest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dest' → logprob: -0.4414796531200409
    2. '_st' → logprob: -1.0664796829223633
    3. '_' → logprob: -5.066479682922363
    4. '_points' → logprob: -5.816479682922363
    5. '_positions' → logprob: -6.441479682922363
    6. 'dest' → logprob: -6.941479682922363
    7. '_places' → logprob: -8.816479682922363
    8. ' =' → logprob: -9.191479682922363
    9. '_targets' → logprob: -9.191479682922363
    10. '_locations' → logprob: -9.441479682922363

Token 48: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -5.3596853831550106e-05
    2. 'ops' → logprob: -10.125053405761719
    3. 'a' → logprob: -12.500053405761719
    4. 'at' → logprob: -12.500053405761719
    5. 't' → logprob: -12.875053405761719
    6. 'ation' → logprob: -14.000053405761719
    7. 'ati' → logprob: -14.375053405761719
    8. 'inations' → logprob: -14.750053405761719
    9. ' at' → logprob: -15.250053405761719
    10. 'op' → logprob: -15.625053405761719

Token 49: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.054887473583221436
    2. '=' → logprob: -2.929887533187866
    3. ' =[' → logprob: -13.304887771606445
    4. '＝' → logprob: -14.179887771606445
    5. '=[' → logprob: -14.304887771606445
    6. '_' → logprob: -14.429887771606445
    7. '=[]' → logprob: -14.804887771606445
    8. ' ' → logprob: -14.929887771606445
    9. '.append' → logprob: -15.054887771606445
    10. ' ' → logprob: -15.929887771606445

Token 50: ' destinations' (ID: 39004)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4360053539276123
    2. ' [' → logprob: -1.9360053539276123
    3. 'dest' → logprob: -2.3110053539276123
    4. ' destinations' → logprob: -2.4360053539276123
    5. '[p' → logprob: -4.311005592346191
    6. '{' → logprob: -5.936005592346191
    7. '[d' → logprob: -6.811005592346191
    8. ' dest' → logprob: -6.936005592346191
    9. ' set' → logprob: -7.311005592346191
    10. '[n' → logprob: -7.686005592346191

Token 51: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5910202264785767
    2. '+' → logprob: -0.8410202264785767
    3. '+[' → logprob: -4.216020107269287
    4. '[:]' → logprob: -8.841020584106445
    5. '.copy' → logprob: -10.341020584106445
    6. '[' → logprob: -10.716020584106445
    7. '+
' → logprob: -12.716020584106445
    8. '[:' → logprob: -12.841020584106445
    9. '.append' → logprob: -13.341020584106445
    10. ' +
' → logprob: -13.591020584106445

Token 52: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.05434420704841614
    2. ' [' → logprob: -3.0543441772460938
    3. '[N' → logprob: -5.179344177246094
    4. '[p' → logprob: -9.554344177246094
    5. '[n' → logprob: -11.179344177246094
    6. '[i' → logprob: -11.929344177246094
    7. '[s' → logprob: -12.304344177246094
    8. '[int' → logprob: -13.179344177246094
    9. '[start' → logprob: -13.179344177246094
    10. '[num' → logprob: -14.179344177246094

Token 53: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2859202027320862
    2. '0' → logprob: -1.6609201431274414
    3. 'N' → logprob: -3.1609201431274414
    4. '1' → logprob: -4.160920143127441
    5. ' p' → logprob: -7.660920143127441
    6. ' ' → logprob: -8.410920143127441
    7. ' N' → logprob: -10.660920143127441
    8. 'start' → logprob: -12.660920143127441
    9. '2' → logprob: -13.035920143127441
    10. 'n' → logprob: -13.723420143127441

Token 54: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -7.171581091824919e-05
    2. ' ]' → logprob: -9.87507152557373
    3. '])' → logprob: -11.75007152557373
    4. ')' → logprob: -12.12507152557373
    5. ')]' → logprob: -12.12507152557373
    6. ']
' → logprob: -14.25007152557373
    7. ']

' → logprob: -15.37507152557373
    8. ',' → logprob: -15.62507152557373
    9. '']' → logprob: -16.625072479248047
    10. '#' → logprob: -16.875072479248047

Token 55: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6468449234962463
    2. 'all' → logprob: -0.8968449234962463
    3. 'min' → logprob: -3.2718448638916016
    4. 'max' → logprob: -4.146844863891602
    5. 'sorted' → logprob: -5.146844863891602
    6. '
' → logprob: -6.146844863891602
    7. 'start' → logprob: -6.521844863891602
    8. '

' → logprob: -6.896844863891602
    9. '```' → logprob: -7.146844863891602
    10. '\' → logprob: -7.646844863891602

Token 56: ' Trou' (ID: 58947)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.62021803855896
    2. 'all' → logprob: -1.12021803855896
    3. 'start' → logprob: -2.37021803855896
    4. 'max' → logprob: -4.870218276977539
    5. 'left' → logprob: -4.870218276977539
    6. '#' → logprob: -5.120218276977539
    7. 'interval' → logprob: -5.245218276977539
    8. 'minimum' → logprob: -5.370218276977539
    9. 'range' → logprob: -6.245218276977539
    10. 'sorted' → logprob: -6.995218276977539

Token 57: 'ver' (ID: 445)
  Prédit: 'ver'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ver' → logprob: -0.16180191934108734
    2. 'v' → logprob: -1.9118019342422485
    3. 'vé' → logprob: -7.161801815032959
    4. 've' → logprob: -7.411801815032959
    5. 'vez' → logprob: -9.161802291870117
    6. 'vant' → logprob: -10.536802291870117
    7. 'va' → logprob: -10.786802291870117
    8. 'uver' → logprob: -11.161802291870117
    9. 'vera' → logprob: -11.661802291870117
    10. 'vr' → logprob: -12.286802291870117

Token 58: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.35247689485549927
    2. 'min' → logprob: -1.6024768352508545
    3. 'le' → logprob: -3.1024768352508545
    4. 'la' → logprob: -3.3524768352508545
    5. 'les' → logprob: -5.227477073669434
    6. ' l' → logprob: -5.477477073669434
    7. ' la' → logprob: -6.352477073669434
    8. 'the' → logprob: -7.102477073669434
    9. ' min' → logprob: -7.352477073669434
    10. 'minimum' → logprob: -7.352477073669434

Token 59: ' station' (ID: 11538)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.06328189373016357
    2. 'plus' → logprob: -4.063282012939453
    3. 'minimum' → logprob: -4.563282012939453
    4. 'distance' → logprob: -4.688282012939453
    5. 'val' → logprob: -5.188282012939453
    6. 'station' → logprob: -5.313282012939453
    7. 'mini' → logprob: -5.688282012939453
    8. 'pl' → logprob: -5.813282012939453
    9. 'interval' → logprob: -6.438282012939453
    10. ' plus' → logprob: -6.438282012939453

Token 60: ' minimale' (ID: 143217)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.015998821705579758
    2. 'minimum' → logprob: -4.515998840332031
    3. 'la' → logprob: -6.390998840332031
    4. ' minimale' → logprob: -6.640998840332031
    5. 'mini' → logprob: -7.515998840332031
    6. ' min' → logprob: -8.015998840332031
    7. 'max' → logprob: -8.015998840332031
    8. ' la' → logprob: -8.390998840332031
    9. 'minimal' → logprob: -8.890998840332031
    10. ' minimum' → logprob: -9.015998840332031

Token 61: ' et' (ID: 859)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.41870877146720886
    2. ',' → logprob: -2.0437088012695312
    3. 'min' → logprob: -2.2937088012695312
    4. 'et' → logprob: -2.4187088012695312
    5. '(min' → logprob: -5.293708801269531
    6. ' and' → logprob: -5.293708801269531
    7. 'and' → logprob: -6.043708801269531
    8. 's' → logprob: -6.293708801269531
    9. '(all' → logprob: -6.543708801269531
    10. ')' → logprob: -6.793708801269531

Token 62: ' maximale' (ID: 76380)
  Prédit: ' maximale'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' maximale' → logprob: -0.13324351608753204
    2. 'max' → logprob: -2.3832435607910156
    3. ' la' → logprob: -3.6332435607910156
    4. 'la' → logprob: -5.508243560791016
    5. ' max' → logprob: -6.883243560791016
    6. ' maximum' → logprob: -8.258243560791016
    7. ' maximal' → logprob: -8.758243560791016
    8. 'maximum' → logprob: -8.883243560791016
    9. '_max' → logprob: -8.883243560791016
    10. ' maxime' → logprob: -9.383243560791016

Token 63: ' parmi' (ID: 51713)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.30756255984306335
    2. 'station' → logprob: -1.6825625896453857
    3. 'stations' → logprob: -3.6825625896453857
    4. 'start' → logprob: -4.057562351226807
    5. '
' → logprob: -4.807562351226807
    6. 's' → logprob: -5.307562351226807
    7. 'interval' → logprob: -5.432562351226807
    8. 'all' → logprob: -5.807562351226807
    9. '```' → logprob: -6.182562351226807
    10. '_station' → logprob: -6.307562351226807

Token 64: ' les' (ID: 1341)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.01846596971154213
    2. ' all' → logprob: -4.018465995788574
    3. 'l' → logprob: -8.393465995788574
    4. 'les' → logprob: -11.268465995788574
    5. '_all' → logprob: -11.393465995788574
    6. 't' → logprob: -11.393465995788574
    7. '	all' → logprob: -11.393465995788574
    8. '(all' → logprob: -12.018465995788574
    9. ' toutes' → logprob: -12.018465995788574
    10. '_' → logprob: -12.143465995788574

Token 65: ' stations' (ID: 26061)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.055591367185115814
    2. ' all' → logprob: -2.930591344833374
    3. 'stations' → logprob: -7.930591583251953
    4. ' stations' → logprob: -8.180591583251953
    5. '_all' → logprob: -10.430591583251953
    6. '	all' → logprob: -12.055591583251953
    7. ' ' → logprob: -12.305591583251953
    8. '_' → logprob: -12.430591583251953
    9. 'st' → logprob: -12.680591583251953
    10. '```' → logprob: -12.680591583251953

Token 66: ' à' (ID: 1221)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.185172900557518
    2. 'à' → logprob: -2.4351727962493896
    3. ' all' → logprob: -3.4351727962493896
    4. ' à' → logprob: -3.8101727962493896
    5. '_all' → logprob: -5.185173034667969
    6. '_' → logprob: -5.560173034667969
    7. '_vis' → logprob: -5.935173034667969
    8. 'to' → logprob: -6.185173034667969
    9. '```' → logprob: -6.435173034667969
    10. '_to' → logprob: -6.435173034667969

Token 67: ' couvrir' (ID: 197187)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.7053765058517456
    2. 'vis' → logprob: -0.7053765058517456
    3. ' visiter' → logprob: -5.580376625061035
    4. 'viser' → logprob: -6.330376625061035
    5. 'venir' → logprob: -6.455376625061035
    6. 'aller' → logprob: -6.705376625061035
    7. '```' → logprob: -7.205376625061035
    8. ' all' → logprob: -7.205376625061035
    9. 'visit' → logprob: -7.330376625061035
    10. '_vis' → logprob: -7.705376625061035

Token 68: '
' (ID: 198)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.010779442265629768
    2. '
' → logprob: -5.01077938079834
    3. '_min' → logprob: -6.13577938079834
    4. 'station' → logprob: -7.63577938079834
    5. 'start' → logprob: -8.01077938079834
    6. '```' → logprob: -8.13577938079834
    7. 'minimum' → logprob: -8.51077938079834
    8. 'max' → logprob: -8.88577938079834
    9. 's' → logprob: -9.76077938079834
    10. 'interval' → logprob: -9.88577938079834

Token 69: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.005016478709876537
    2. 'start' → logprob: -5.630016326904297
    3. 'station' → logprob: -7.380016326904297
    4. 'left' → logprob: -8.005016326904297
    5. 'max' → logprob: -9.380016326904297
    6. 'low' → logprob: -9.505016326904297
    7. 'minimum' → logprob: -9.755016326904297
    8. '_min' → logprob: -9.880016326904297
    9. 'interval' → logprob: -10.255016326904297
    10. ' min' → logprob: -10.380016326904297

Token 70: '_station' (ID: 110769)
  Prédit: '_station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_station' → logprob: -0.010347717441618443
    2. '_' → logprob: -4.635347843170166
    3. '_st' → logprob: -7.760347843170166
    4. '_sta' → logprob: -9.635347366333008
    5. '_all' → logprob: -10.010347366333008
    6. '_val' → logprob: -11.010347366333008
    7. '_pos' → logprob: -11.385347366333008
    8. '(all' → logprob: -12.260347366333008
    9. '_position' → logprob: -12.260347366333008
    10. '_stat' → logprob: -12.510347366333008

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014483846724033356
    2. '=' → logprob: -4.38948392868042
    3. ',' → logprob: -6.26448392868042
    4. '=min' → logprob: -10.514483451843262
    5. ',min' → logprob: -11.264483451843262
    6. '_' → logprob: -11.764483451843262
    7. ' ' → logprob: -11.764483451843262
    8. ' ,' → logprob: -12.389483451843262
    9. '_idx' → logprob: -12.514483451843262
    10. '_index' → logprob: -13.264483451843262

Token 72: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.038047123700380325
    2. 'min' → logprob: -3.2880470752716064
    3. ' all' → logprob: -12.288046836853027
    4. ' max' → logprob: -14.913046836853027
    5. 'all' → logprob: -15.038046836853027
    6. '(min' → logprob: -15.413046836853027
    7. '	min' → logprob: -15.538046836853027
    8. 'max' → logprob: -17.163047790527344
    9. '=min' → logprob: -17.163047790527344
    10. ' ' → logprob: -17.288047790527344

Token 73: '(all' (ID: 34727)
  Prédit: '(all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(all' → logprob: -0.0001114106344175525
    2. '(' → logprob: -9.12511157989502
    3. '(min' → logprob: -14.00011157989502
    4. 'all' → logprob: -14.37511157989502
    5. ' (' → logprob: -14.87511157989502
    6. '(
' → logprob: -15.75011157989502
    7. '(All' → logprob: -16.125110626220703
    8. '(dest' → logprob: -16.500110626220703
    9. '(a' → logprob: -16.500110626220703
    10. ' all' → logprob: -17.000110626220703

Token 74: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.000718030845746398
    2. '_station' → logprob: -7.250718116760254
    3. '_' → logprob: -12.375718116760254
    4. '_sta' → logprob: -13.125718116760254
    5. '(st' → logprob: -14.375718116760254
    6. '(_' → logprob: -14.750718116760254
    7. ' _' → logprob: -15.500718116760254
    8. 'stations' → logprob: -15.500718116760254
    9. '(' → logprob: -15.875718116760254
    10. ')' → logprob: -16.000717163085938

Token 75: 'ations' (ID: 929)
  Prédit: 'ations'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ations' → logprob: -0.00041577612864784896
    2. 'ation' → logprob: -8.750415802001953
    3. '_' → logprob: -9.125415802001953
    4. 'a' → logprob: -9.625415802001953
    5. 'stations' → logprob: -10.875415802001953
    6. 'at' → logprob: -11.125415802001953
    7. 'atio' → logprob: -11.250415802001953
    8. 't' → logprob: -11.375415802001953
    9. '_st' → logprob: -11.625415802001953
    10. 'ati' → logprob: -12.000415802001953

Token 76: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.007085348479449749
    2. ')
' → logprob: -5.00708532333374
    3. ' )' → logprob: -8.007085800170898
    4. ' )
' → logprob: -10.507085800170898
    5. ',' → logprob: -12.632085800170898
    6. ')
' → logprob: -12.757085800170898
    7. ')

' → logprob: -13.632085800170898
    8. '()' → logprob: -15.007085800170898
    9. '),' → logprob: -15.007085800170898
    10. ' ' → logprob: -15.257085800170898

Token 77: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.005193439777940512
    2. '
' → logprob: -5.63019323348999
    3. ' max' → logprob: -6.88019323348999
    4. '_max' → logprob: -7.88019323348999
    5. ',max' → logprob: -9.880193710327148
    6. '' → logprob: -10.880193710327148
    7. ' 
' → logprob: -11.005193710327148
    8. '  
' → logprob: -11.255193710327148
    9. '```' → logprob: -11.255193710327148
    10. '(max' → logprob: -11.380193710327148

Token 78: '_station' (ID: 110769)
  Prédit: '_station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_station' → logprob: -0.016529642045497894
    2. '_' → logprob: -4.141529560089111
    3. '_st' → logprob: -8.01653003692627
    4. '_sta' → logprob: -9.51653003692627
    5. ' _' → logprob: -10.39153003692627
    6. '(_' → logprob: -10.51653003692627
    7. '(' → logprob: -10.89153003692627
    8. '_s' → logprob: -12.26653003692627
    9. '_stat' → logprob: -12.51653003692627
    10. '```' → logprob: -13.51653003692627

Token 79: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6593431234359741
    2. '=' → logprob: -0.9093431234359741
    3. '_' → logprob: -2.7843432426452637
    4. ')' → logprob: -4.534343242645264
    5. '(' → logprob: -5.159343242645264
    6. ' ' → logprob: -7.034343242645264
    7. '()' → logprob: -8.284342765808105
    8. ',' → logprob: -8.784342765808105
    9. ' _' → logprob: -9.284342765808105
    10. '_space' → logprob: -9.409342765808105

Token 80: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.048587825149297714
    2. 'max' → logprob: -3.0485877990722656
    3. '(max' → logprob: -15.548587799072266
    4. ' min' → logprob: -15.923587799072266
    5. 'min' → logprob: -17.923587799072266
    6. ' ' → logprob: -17.923587799072266
    7. '	max' → logprob: -18.423587799072266
    8. ' ' → logprob: -19.798587799072266
    9. '=max' → logprob: -20.048587799072266
    10. 'm' → logprob: -20.923587799072266

Token 81: '(all' (ID: 34727)
  Prédit: '(all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(all' → logprob: -0.001946248929016292
    2. '(' → logprob: -6.251946449279785
    3. '(_' → logprob: -11.376946449279785
    4. '(All' → logprob: -13.751946449279785
    5. '_all' → logprob: -14.126946449279785
    6. '(max' → logprob: -14.126946449279785
    7. 'all' → logprob: -14.126946449279785
    8. '(st' → logprob: -14.376946449279785
    9. '(min' → logprob: -14.626946449279785
    10. '(
' → logprob: -15.376946449279785

Token 82: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.0024962294846773148
    2. '_station' → logprob: -6.002496242523193
    3. 'all' → logprob: -11.752495765686035
    4. '_sta' → logprob: -12.127495765686035
    5. '_all' → logprob: -12.377495765686035
    6. '_' → logprob: -13.877495765686035
    7. 'stations' → logprob: -14.127495765686035
    8. '(st' → logprob: -14.627495765686035
    9. '_s' → logprob: -16.00249671936035
    10. 's' → logprob: -16.12749671936035

Token 83: 'ations' (ID: 929)
  Prédit: 'ation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ation' → logprob: -0.5890035629272461
    2. 'ations' → logprob: -1.339003562927246
    3. '_station' → logprob: -1.714003562927246
    4. '_st' → logprob: -6.964003562927246
    5. 'station' → logprob: -7.839003562927246
    6. '_' → logprob: -7.839003562927246
    7. 'stations' → logprob: -7.839003562927246
    8. 'a' → logprob: -8.339003562927246
    9. 'atio' → logprob: -8.464003562927246
    10. 't' → logprob: -9.714003562927246

Token 84: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00018077615823131055
    2. ')+' → logprob: -8.750181198120117
    3. ')
' → logprob: -10.875181198120117
    4. ' )' → logprob: -13.500181198120117
    5. '+' → logprob: -14.000181198120117
    6. '))' → logprob: -15.125181198120117
    7. ')

' → logprob: -15.750181198120117
    8. ')#' → logprob: -16.125181198120117
    9. '()' → logprob: -16.500181198120117
    10. '#' → logprob: -16.500181198120117

Token 85: '#' (ID: 2)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.6355247497558594
    2. 'interval' → logprob: -1.3855247497558594
    3. 'range' → logprob: -2.0105247497558594
    4. 'max' → logprob: -4.135524749755859
    5. 'print' → logprob: -4.385524749755859
    6. 'diff' → logprob: -4.885524749755859
    7. '#' → logprob: -5.135524749755859
    8. 'd' → logprob: -5.385524749755859
    9. 'dist' → logprob: -5.385524749755859
    10. 'result' → logprob: -5.510524749755859

Token 86: ' Calcul' (ID: 57243)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.3359397351741791
    2. 'interval' → logprob: -2.335939645767212
    3. '#' → logprob: -2.460939645767212
    4. 'print' → logprob: -3.460939645767212
    5. ' distance' → logprob: -4.335939884185791
    6. 'result' → logprob: -4.460939884185791
    7. 'time' → logprob: -5.085939884185791
    8. 'total' → logprob: -5.335939884185791
    9. 'range' → logprob: -5.585939884185791
    10. 'length' → logprob: -6.085939884185791

Token 87: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.36530810594558716
    2. 'ating' → logprob: -1.7403080463409424
    3. '#' → logprob: -2.7403080463409424
    4. 'ate' → logprob: -3.8653080463409424
    5. 'distance' → logprob: -4.3653082847595215
    6. 'ation' → logprob: -4.8653082847595215
    7. 'e' → logprob: -5.7403082847595215
    8. 'interval' → logprob: -5.8653082847595215
    9. '_distance' → logprob: -5.8653082847595215
    10. '_interval' → logprob: -6.6153082847595215

Token 88: ' la' (ID: 557)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.9132547974586487
    2. ' l' → logprob: -1.288254737854004
    3. ' la' → logprob: -1.413254737854004
    4. 'max' → logprob: -3.538254737854004
    5. ' max' → logprob: -4.038254737854004
    6. 'la' → logprob: -4.413254737854004
    7. ' le' → logprob: -5.163254737854004
    8. 'le' → logprob: -5.288254737854004
    9. '(max' → logprob: -6.038254737854004
    10. 'distance' → logprob: -6.538254737854004

Token 89: ' distance' (ID: 9324)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.005873332731425762
    2. 'diff' → logprob: -5.880873203277588
    3. ' distance' → logprob: -6.380873203277588
    4. 'plus' → logprob: -7.505873203277588
    5. 'dist' → logprob: -8.755873680114746
    6. 'd' → logprob: -9.130873680114746
    7. 'long' → logprob: -9.130873680114746
    8. 'difference' → logprob: -9.255873680114746
    9. 'dur' → logprob: -10.130873680114746
    10. 'min' → logprob: -10.130873680114746

Token 90: ' en' (ID: 469)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08668796718120575
    2. '=' → logprob: -3.2116880416870117
    3. '_' → logprob: -3.2116880416870117
    4. 'max' → logprob: -7.336688041687012
    5. '_distance' → logprob: -7.336688041687012
    6. '_max' → logprob: -7.961688041687012
    7. '=max' → logprob: -8.711688041687012
    8. ' max' → logprob: -9.211688041687012
    9. '_dist' → logprob: -9.336688041687012
    10. '_between' → logprob: -9.586688041687012

Token 91: ' avanç' (ID: 70203)
  Prédit: 'ligne'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ligne' → logprob: -0.8466171026229858
    2. ' kilomètres' → logprob: -2.4716172218322754
    3. 'km' → logprob: -2.5966172218322754
    4. ' ligne' → logprob: -3.3466172218322754
    5. 'kil' → logprob: -3.7216172218322754
    6. '1' → logprob: -3.8466172218322754
    7. ' lignes' → logprob: -3.9716172218322754
    8. 'lin' → logprob: -3.9716172218322754
    9. 'nombre' → logprob: -3.9716172218322754
    10. 'c' → logprob: -4.096617221832275

Token 92: 'ant' (ID: 493)
  Prédit: 'ant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ant' → logprob: -0.001999058062210679
    2. 'er' → logprob: -6.6269989013671875
    3. 'ée' → logprob: -8.251998901367188
    4. 'e' → logprob: -8.501998901367188
    5. 'ent' → logprob: -9.501998901367188
    6. 'ee' → logprob: -9.626998901367188
    7. 'a' → logprob: -10.501998901367188
    8. 'çant' → logprob: -10.876998901367188
    9. 'Ant' → logprob: -12.376998901367188
    10. 'é' → logprob: -13.251998901367188

Token 93: ' dans' (ID: 2671)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.18443067371845245
    2. ' max' → logprob: -2.1844305992126465
    3. '(max' → logprob: -4.1844305992126465
    4. 'min' → logprob: -4.4344305992126465
    5. 'dans' → logprob: -5.0594305992126465
    6. ' entre' → logprob: -5.8094305992126465
    7. ' (' → logprob: -6.1844305992126465
    8. 'd' → logprob: -6.1844305992126465
    9. ' dans' → logprob: -6.4344305992126465
    10. 'sur' → logprob: -6.8094305992126465

Token 94: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.43957751989364624
    2. 'la' → logprob: -1.439577579498291
    3. 'une' → logprob: -2.689577579498291
    4. 'max' → logprob: -4.189577579498291
    5. 'l' → logprob: -4.439577579498291
    6. ' le' → logprob: -5.564577579498291
    7. ' la' → logprob: -5.564577579498291
    8. 'les' → logprob: -5.689577579498291
    9. 'sens' → logprob: -5.814577579498291
    10. 'min' → logprob: -6.064577579498291

Token 95: ' sens' (ID: 5050)
  Prédit: 'sens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sens' → logprob: -0.35907772183418274
    2. 'c' → logprob: -1.4840776920318604
    3. 'm' → logprob: -3.4840776920318604
    4. ' sens' → logprob: -4.1090779304504395
    5. 's' → logprob: -4.6090779304504395
    6. 'train' → logprob: -5.2340779304504395
    7. 'sen' → logprob: -5.6090779304504395
    8. 'metro' → logprob: -6.1090779304504395
    9. 'cycle' → logprob: -6.8590779304504395
    10. 'tram' → logprob: -7.2340779304504395

Token 96: ' cro' (ID: 11270)
  Prédit: ' hora'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' hora' → logprob: -1.3133715391159058
    2. ' des' → logprob: -1.6883715391159058
    3. 'd' → logprob: -1.9383715391159058
    4. 'hor' → logprob: -2.4383716583251953
    5. 'hora' → logprob: -2.9383716583251953
    6. 'tr' → logprob: -3.0633716583251953
    7. 'des' → logprob: -3.1883716583251953
    8. ' d' → logprob: -3.9383716583251953
    9. ' positif' → logprob: -4.438371658325195
    10. 'cir' → logprob: -4.625871658325195

Token 97: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.008289848454296589
    2. 'issa' → logprob: -5.133289813995361
    3. '#' → logprob: -7.008289813995361
    4. 'issent' → logprob: -7.883289813995361
    5. 'iss' → logprob: -8.38329029083252
    6. 'issan' → logprob: -8.88329029083252
    7. '
' → logprob: -9.00829029083252
    8. 'issante' → logprob: -9.00829029083252
    9. '```' → logprob: -9.63329029083252
    10. 'i' → logprob: -10.00829029083252

Token 98: '
' (ID: 198)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.013940876349806786
    2. 'max' → logprob: -5.263940811157227
    3. 'dist' → logprob: -5.888940811157227
    4. 'd' → logprob: -6.013940811157227
    5. 'print' → logprob: -6.638940811157227
    6. ' distance' → logprob: -7.388940811157227
    7. 'answer' → logprob: -8.013940811157227
    8. 'result' → logprob: -8.138940811157227
    9. 'direction' → logprob: -8.638940811157227
    10. 'interval' → logprob: -8.763940811157227

Token 99: 'forward' (ID: 20233)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'distance' → logprob: -0.4116288125514984
    2. 'forward' → logprob: -1.1616288423538208
    3. 'direct' → logprob: -4.536628723144531
    4. 'dist' → logprob: -4.911628723144531
    5. 'clock' → logprob: -5.786628723144531
    6. '```' → logprob: -7.536628723144531
    7. ' distance' → logprob: -7.786628723144531
    8. ' forward' → logprob: -7.911628723144531
    9. 'max' → logprob: -8.536628723144531
    10. 'min' → logprob: -8.911628723144531

Token 100: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.0043714940547943115
    2. '_dist' → logprob: -5.754371643066406
    3. '_' → logprob: -6.879371643066406
    4. '_range' → logprob: -9.504371643066406
    5. '_direction' → logprob: -10.504371643066406
    6. '_d' → logprob: -10.879371643066406
    7. ' =' → logprob: -10.879371643066406
    8. '_length' → logprob: -12.254371643066406
    9. '_dis' → logprob: -12.504371643066406
    10. '_diff' → logprob: -12.629371643066406

Token 101: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0024758970830589533
    2. '=' → logprob: -6.002475738525391
    3. ' ' → logprob: -16.37747573852539
    4. 's' → logprob: -17.25247573852539
    5. ' ' → logprob: -17.25247573852539
    6. ' =
' → logprob: -18.37747573852539
    7. ',' → logprob: -18.62747573852539
    8. '_' → logprob: -19.00247573852539
    9. ')' → logprob: -19.50247573852539
    10. ' +=' → logprob: -19.62747573852539

Token 102: ' (' (ID: 350)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.07658611238002777
    2. ' max' → logprob: -2.7015860080718994
    3. '(max' → logprob: -5.0765862464904785
    4. ' (' → logprob: -8.07658576965332
    5. 'abs' → logprob: -10.20158576965332
    6. '(' → logprob: -11.45158576965332
    7. ' ' → logprob: -11.70158576965332
    8. 'min' → logprob: -12.20158576965332
    9. '	max' → logprob: -12.57658576965332
    10. 'm' → logprob: -13.51408576965332

Token 103: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0006920627201907337
    2. '(max' → logprob: -7.375691890716553
    3. ' max' → logprob: -10.000692367553711
    4. 'min' → logprob: -11.250692367553711
    5. 'p' → logprob: -13.125692367553711
    6. 'N' → logprob: -14.000692367553711
    7. ' (' → logprob: -14.125692367553711
    8. '(' → logprob: -14.500692367553711
    9. 'M' → logprob: -14.750692367553711
    10. 'm' → logprob: -14.875692367553711

Token 104: '_station' (ID: 110769)
  Prédit: '_station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_station' → logprob: -2.696889623621246e-06
    2. '_sta' → logprob: -13.75000286102295
    3. '_' → logprob: -14.37500286102295
    4. ' _' → logprob: -14.87500286102295
    5. '(_' → logprob: -15.75000286102295
    6. 'station' → logprob: -16.000001907348633
    7. 'Station' → logprob: -16.000001907348633
    8. '_st' → logprob: -16.125001907348633
    9. '```' → logprob: -17.000001907348633
    10. '_s' → logprob: -17.000001907348633

Token 105: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.007652299012988806
    2. '-' → logprob: -4.882652282714844
    3. ' ' → logprob: -10.757652282714844
    4. ')' → logprob: -11.257652282714844
    5. '-p' → logprob: -12.382652282714844
    6. ' )' → logprob: -12.882652282714844
    7. '+' → logprob: -13.132652282714844
    8. ' +' → logprob: -14.007652282714844
    9. ' ' → logprob: -14.132652282714844
    10. 'p' → logprob: -14.757652282714844

Token 106: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.04335346445441246
    2. ' min' → logprob: -3.29335355758667
    3. 'p' → logprob: -5.29335355758667
    4. ' p' → logprob: -8.418353080749512
    5. '	min' → logprob: -10.793353080749512
    6. ' ' → logprob: -12.293353080749512
    7. ')' → logprob: -12.543353080749512
    8. '_min' → logprob: -12.793353080749512
    9. '[min' → logprob: -12.793353080749512
    10. '(min' → logprob: -12.918353080749512

Token 107: '_station' (ID: 110769)
  Prédit: '_station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_station' → logprob: -7.3458322731312364e-06
    2. 'Station' → logprob: -12.500007629394531
    3. '_' → logprob: -13.750007629394531
    4. 'station' → logprob: -13.875007629394531
    5. '_st' → logprob: -14.875007629394531
    6. '_sta' → logprob: -15.625007629394531
    7. '_destination' → logprob: -16.12500762939453
    8. '(' → logprob: -16.37500762939453
    9. ')' → logprob: -16.62500762939453
    10. '_s' → logprob: -17.00000762939453

Token 108: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01329446118324995
    2. ' )' → logprob: -5.013294696807861
    3. ' +' → logprob: -5.388294696807861
    4. '+' → logprob: -6.263294696807861
    5. ')+' → logprob: -9.763294219970703
    6. ')
' → logprob: -11.263294219970703
    7. ' ' → logprob: -12.888294219970703
    8. ')#' → logprob: -13.013294219970703
    9. '+)' → logprob: -13.763294219970703
    10. ' )
' → logprob: -13.888294219970703

Token 109: ' 

' (ID: 1202)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.6373779773712158
    2. '+' → logprob: -0.7623779773712158
    3. '<|end|>' → logprob: -5.637377738952637
    4. ' ' → logprob: -7.887377738952637
    5. ')' → logprob: -8.262377738952637
    6. ' +
' → logprob: -9.137377738952637
    7. ' plus' → logprob: -9.512377738952637
    8. ' if' → logprob: -9.637377738952637
    9. '
' → logprob: -9.637377738952637
    10. '+
' → logprob: -9.762377738952637

Token 110: '#' (ID: 2)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.031444862484931946
    2. '<|end|>' → logprob: -3.531444787979126
    3. ' +' → logprob: -8.031444549560547
    4. 'print' → logprob: -8.031444549560547
    5. '
' → logprob: -8.156444549560547
    6. ')' → logprob: -8.781444549560547
    7. 'if' → logprob: -9.031444549560547
    8. '+
' → logprob: -9.031444549560547
    9. '<|end|>' → logprob: -9.156444549560547
    10. '#' → logprob: -9.156444549560547

Token 111: ' Calcul' (ID: 57243)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5481544733047485
    2. 'back' → logprob: -1.4231544733047485
    3. 'Calcul' → logprob: -2.298154354095459
    4. 'print' → logprob: -3.048154354095459
    5. 'reverse' → logprob: -3.798154354095459
    6. ' backward' → logprob: -5.298154354095459
    7. ' Calcul' → logprob: -6.673154354095459
    8. 'distance' → logprob: -7.423154354095459
    9. ' #' → logprob: -7.673154354095459
    10. 'cal' → logprob: -7.923154354095459

Token 112: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.17857225239276886
    2. '_distance' → logprob: -2.553572177886963
    3. '=' → logprob: -3.553572177886963
    4. 'uler' → logprob: -4.428572177886963
    5. 'distance' → logprob: -4.803572177886963
    6. '#' → logprob: -5.053572177886963
    7. '<|end|>' → logprob: -5.178572177886963
    8. 'culate' → logprob: -5.428572177886963
    9. 'ulate' → logprob: -5.803572177886963
    10. ' =' → logprob: -6.178572177886963

Token 113: ' la' (ID: 557)
  Prédit: ' la'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.17594923079013824
    2. ' the' → logprob: -2.6759493350982666
    3. 'the' → logprob: -3.3009493350982666
    4. 'la' → logprob: -3.6759493350982666
    5. 'reverse' → logprob: -4.5509490966796875
    6. ' reverse' → logprob: -5.4259490966796875
    7. ' l' → logprob: -5.8009490966796875
    8. 'le' → logprob: -5.8009490966796875
    9. ' le' → logprob: -6.5509490966796875
    10. 'l' → logprob: -6.5509490966796875

Token 114: ' distance' (ID: 9324)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.04902922362089157
    2. 'reverse' → logprob: -3.4240291118621826
    3. ' backward' → logprob: -4.299029350280762
    4. 'forward' → logprob: -7.549029350280762
    5. ' reverse' → logprob: -7.549029350280762
    6. 'distance' → logprob: -7.674029350280762
    7. 'N' → logprob: -10.549029350280762
    8. 'wrap' → logprob: -10.799029350280762
    9. ' back' → logprob: -11.049029350280762
    10. 'min' → logprob: -11.299029350280762

Token 115: ' en' (ID: 469)
  Prédit: 'en'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'en' → logprob: -0.8276344537734985
    2. ' en' → logprob: -0.8276344537734985
    3. ' =' → logprob: -3.327634334564209
    4. ' in' → logprob: -3.327634334564209
    5. 'in' → logprob: -3.827634334564209
    6. '=' → logprob: -4.077634334564209
    7. 'back' → logprob: -5.452634334564209
    8. 'reverse' → logprob: -5.702634334564209
    9. ' backward' → logprob: -6.077634334564209
    10. ' reverse' → logprob: -6.702634334564209

Token 116: ' sens' (ID: 5050)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.5548774600028992
    2. ' (' → logprob: -1.554877519607544
    3. '(' → logprob: -2.929877519607544
    4. '(min' → logprob: -3.679877519607544
    5. 're' → logprob: -3.804877519607544
    6. '(reverse' → logprob: -3.804877519607544
    7. ' recul' → logprob: -4.054877281188965
    8. '(re' → logprob: -4.554877281188965
    9. '(p' → logprob: -4.679877281188965
    10. '(len' → logprob: -4.929877281188965

Token 117: ' inverse' (ID: 53743)
  Prédit: 'inverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inverse' → logprob: -0.2752819359302521
    2. ' inverse' → logprob: -2.0252819061279297
    3. '_inverse' → logprob: -2.5252819061279297
    4. '_' → logprob: -4.27528190612793
    5. 'reverse' → logprob: -5.02528190612793
    6. '_reverse' → logprob: -6.40028190612793
    7. '_c' → logprob: -6.52528190612793
    8. 'd' → logprob: -6.52528190612793
    9. ' reverse' → logprob: -7.15028190612793
    10. ' décro' → logprob: -8.02528190612793

Token 118: ' sur' (ID: 1512)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.051360998302698135
    2. '=' → logprob: -3.551361083984375
    3. 'reverse' → logprob: -4.051361083984375
    4. 'forward' → logprob: -6.801361083984375
    5. 'back' → logprob: -7.176361083984375
    6. ' reverse' → logprob: -7.301361083984375
    7. ' backward' → logprob: -7.426361083984375
    8. '
' → logprob: -8.301361083984375
    9. 'distance' → logprob: -8.676361083984375
    10. ',' → logprob: -9.551361083984375

Token 119: ' le' (ID: 505)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.7792752385139465
    2. ' N' → logprob: -1.1542751789093018
    3. '(N' → logprob: -2.6542751789093018
    4. 'la' → logprob: -3.2792751789093018
    5. ' (' → logprob: -3.4042751789093018
    6. 'le' → logprob: -3.6542751789093018
    7. 'l' → logprob: -4.029275417327881
    8. ' la' → logprob: -4.154275417327881
    9. '(' → logprob: -4.279275417327881
    10. ' l' → logprob: -5.279275417327881

Token 120: ' cercle' (ID: 172399)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.14393988251686096
    2. ' circuit' → logprob: -2.893939971923828
    3. ' ring' → logprob: -3.518939971923828
    4. ' circular' → logprob: -4.643939971923828
    5. 'ring' → logprob: -4.643939971923828
    6. 'N' → logprob: -5.268939971923828
    7. 'cir' → logprob: -5.393939971923828
    8. ' N' → logprob: -5.393939971923828
    9. ' circle' → logprob: -5.518939971923828
    10. ' cercle' → logprob: -6.018939971923828

Token 121: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16478081047534943
    2. '=' → logprob: -2.289780855178833
    3. 'reverse' → logprob: -3.789780855178833
    4. 'inverse' → logprob: -3.914780855178833
    5. 'back' → logprob: -5.289780616760254
    6. 'circle' → logprob: -7.289780616760254
    7. ' reverse' → logprob: -7.289780616760254
    8. ' inverse' → logprob: -7.789780616760254
    9. ' backward' → logprob: -8.289780616760254
    10. ':' → logprob: -8.539780616760254

Token 122: 'back' (ID: 2205)
  Prédit: 'back'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.6639518141746521
    2. 'reverse' → logprob: -0.7889518141746521
    3. ' reverse' → logprob: -4.413951873779297
    4. 'circle' → logprob: -4.663951873779297
    5. ' backward' → logprob: -5.413951873779297
    6. 'inverse' → logprob: -6.163951873779297
    7. '=' → logprob: -7.163951873779297
    8. ' circle' → logprob: -7.538951873779297
    9. ' =' → logprob: -7.913951873779297
    10. 'c' → logprob: -8.288951873779297

Token 123: 'ward' (ID: 2076)
  Prédit: 'ward'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ward' → logprob: -0.005916000343859196
    2. '_distance' → logprob: -5.255916118621826
    3. 'w' → logprob: -8.505915641784668
    4. 'wards' → logprob: -8.630915641784668
    5. 'war' → logprob: -8.880915641784668
    6. '_' → logprob: -9.255915641784668
    7. 'distance' → logprob: -11.380915641784668
    8. 'word' → logprob: -11.505915641784668
    9. 'wa' → logprob: -12.255915641784668
    10. '=' → logprob: -12.505915641784668

Token 124: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -1.6166903151315637e-05
    2. '_direction' → logprob: -12.500016212463379
    3. '_dist' → logprob: -12.625016212463379
    4. '_' → logprob: -12.625016212463379
    5. ' _' → logprob: -12.875016212463379
    6. '_difference' → logprob: -13.375016212463379
    7. '_d' → logprob: -15.250016212463379
    8. 'distance' → logprob: -15.250016212463379
    9. '_length' → logprob: -15.750016212463379
    10. '_space' → logprob: -16.000015258789062

Token 125: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.005929505452513695
    2. '=' → logprob: -5.130929470062256
    3. ' ' → logprob: -15.005929946899414
    4. ' =
' → logprob: -15.130929946899414
    5. 's' → logprob: -16.130929946899414
    6. ' ' → logprob: -16.755929946899414
    7. ')' → logprob: -17.005929946899414
    8. ' =(' → logprob: -18.130929946899414
    9. '＝' → logprob: -18.255929946899414
    10. ',' → logprob: -18.380929946899414

Token 126: ' N' (ID: 478)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -1.1786541938781738
    2. ' (' → logprob: -1.3036541938781738
    3. 'N' → logprob: -1.4286541938781738
    4. ' N' → logprob: -1.9286541938781738
    5. '(min' → logprob: -4.053654193878174
    6. '(' → logprob: -4.678654193878174
    7. 'min' → logprob: -5.553654193878174
    8. ' min' → logprob: -5.803654193878174
    9. ' ' → logprob: -7.428654193878174
    10. '(n' → logprob: -7.553654193878174

Token 127: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.011305401101708412
    2. '-' → logprob: -4.511305332183838
    3. '+' → logprob: -9.136305809020996
    4. ' +' → logprob: -9.386305809020996
    5. ')' → logprob: -10.636305809020996
    6. '<|end|>' → logprob: -11.136305809020996
    7. ' ' → logprob: -11.886305809020996
    8. ' -(' → logprob: -12.136305809020996
    9. '-(' → logprob: -12.261305809020996
    10. ' ' → logprob: -13.011305809020996

Token 128: ' forward' (ID: 6687)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forward' → logprob: -0.06382099539041519
    2. ' forward' → logprob: -2.9388210773468018
    3. ' (' → logprob: -4.938820838928223
    4. '(for' → logprob: -6.438820838928223
    5. '(max' → logprob: -10.563820838928223
    6. '(' → logprob: -10.563820838928223
    7. '.forward' → logprob: -10.813820838928223
    8. '_forward' → logprob: -10.938820838928223
    9. 'max' → logprob: -11.188820838928223
    10. '(f' → logprob: -11.563820838928223

Token 129: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -9.877503907773644e-05
    2. 'distance' → logprob: -9.500099182128906
    3. '_station' → logprob: -11.125099182128906
    4. '_' → logprob: -11.875099182128906
    5. 'Distance' → logprob: -13.750099182128906
    6. '_DISTANCE' → logprob: -15.000099182128906
    7. '_difference' → logprob: -15.375099182128906
    8. '_dist' → logprob: -15.875099182128906
    9. '_destination' → logprob: -16.375099182128906
    10. '_direction' → logprob: -16.750099182128906

Token 130: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 131: '#' (ID: 2)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.7200806140899658
    2. 'print' → logprob: -1.0950806140899658
    3. 'answer' → logprob: -2.345080614089966
    4. '#' → logprob: -3.595080614089966
    5. 'distance' → logprob: -3.720080614089966
    6. 'if' → logprob: -4.470080375671387
    7. 'optimal' → logprob: -4.470080375671387
    8. 'min' → logprob: -5.845080375671387
    9. 'minimal' → logprob: -6.845080375671387
    10. 'total' → logprob: -6.970080375671387

Token 132: ' Le' (ID: 2018)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.4226889908313751
    2. 'distance' → logprob: -1.7976889610290527
    3. 'print' → logprob: -2.6726889610290527
    4. 'answer' → logprob: -2.9226889610290527
    5. '#' → logprob: -3.6726889610290527
    6. ' result' → logprob: -4.047688961029053
    7. ' distance' → logprob: -6.047688961029053
    8. ' print' → logprob: -6.047688961029053
    9. 'min' → logprob: -6.547688961029053
    10. ' answer' → logprob: -6.547688961029053

Token 133: ' coût' (ID: 73109)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.5674557089805603
    2. ' result' → logprob: -2.067455768585205
    3. 'print' → logprob: -2.317455768585205
    4. 'min' → logprob: -2.942455768585205
    5. ' print' → logprob: -3.317455768585205
    6. ' minimum' → logprob: -3.817455768585205
    7. 'minimum' → logprob: -3.817455768585205
    8. 'answer' → logprob: -3.942455768585205
    9. 'distance' → logprob: -4.192455768585205
    10. ' distance' → logprob: -4.942455768585205

Token 134: ' minimal' (ID: 19957)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.068169116973877
    2. 'minimum' → logprob: -1.318169116973877
    3. ' minimal' → logprob: -2.193169116973877
    4. '=' → logprob: -2.568169116973877
    5. 'min' → logprob: -2.693169116973877
    6. 'minimal' → logprob: -3.068169116973877
    7. ' minimum' → logprob: -3.318169116973877
    8. 'optimal' → logprob: -4.068169116973877
    9. 'final' → logprob: -4.443169116973877
    10. '_min' → logprob: -4.443169116973877

Token 135: ' correspond' (ID: 11095)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3138265311717987
    2. '=' → logprob: -1.313826560974121
    3. ' is' → logprob: -9.063826560974121
    4. 'is' → logprob: -9.063826560974121
    5. 'min' → logprob: -9.188826560974121
    6. 'cost' → logprob: -9.938826560974121
    7. 'minimum' → logprob: -10.063826560974121
    8. '=min' → logprob: -10.313826560974121
    9. 'minimal' → logprob: -10.313826560974121
    10. ' minimal' → logprob: -11.188826560974121

Token 136: ' au' (ID: 2791)
  Prédit: ' au'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' au' → logprob: -0.37072932720184326
    2. ' à' → logprob: -1.2457293272018433
    3. 'au' → logprob: -4.620729446411133
    4. ' a' → logprob: -5.120729446411133
    5. ' to' → logprob: -5.995729446411133
    6. ' =' → logprob: -6.495729446411133
    7. 'à' → logprob: -6.995729446411133
    8. '=' → logprob: -7.745729446411133
    9. ' ' → logprob: -8.370729446411133
    10. 'a' → logprob: -8.620729446411133

Token 137: ' déplacement' (ID: 138449)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2843800485134125
    2. ' min' → logprob: -1.4093800783157349
    3. ' forward' → logprob: -6.409379959106445
    4. 'forward' → logprob: -6.909379959106445
    5. 'minimum' → logprob: -8.534379959106445
    6. ' minimum' → logprob: -8.534379959106445
    7. ' minimal' → logprob: -9.034379959106445
    8. 'minimal' → logprob: -10.034379959106445
    9. 'max' → logprob: -11.784379959106445
    10. '	min' → logprob: -12.284379959106445

Token 138: ' minimal' (ID: 19957)
  Prédit: ' minimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.6362285614013672
    2. ' minimum' → logprob: -1.3862285614013672
    3. 'min' → logprob: -2.761228561401367
    4. 'minimum' → logprob: -3.136228561401367
    5. ' min' → logprob: -3.386228561401367
    6. ' forward' → logprob: -4.011228561401367
    7. 'minimal' → logprob: -4.511228561401367
    8. ' entre' → logprob: -4.511228561401367
    9. ' minimale' → logprob: -4.511228561401367
    10. ' le' → logprob: -4.636228561401367

Token 139: ' pour' (ID: 1930)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.3345072567462921
    2. 'minimal' → logprob: -2.2095072269439697
    3. 'cost' → logprob: -2.4595072269439697
    4. 'minimum' → logprob: -3.5845072269439697
    5. ' =' → logprob: -3.9595072269439697
    6. 'print' → logprob: -4.834507465362549
    7. '=' → logprob: -4.959507465362549
    8. ' minimal' → logprob: -5.084507465362549
    9. '
' → logprob: -5.209507465362549
    10. 'distance' → logprob: -5.709507465362549

Token 140: ' couvrir' (ID: 197187)
  Prédit: ' couvrir'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' couvrir' → logprob: -0.6424451470375061
    2. ' visiter' → logprob: -1.7674450874328613
    3. 'c' → logprob: -2.0174450874328613
    4. 'vis' → logprob: -2.1424450874328613
    5. 'aller' → logprob: -3.7674450874328613
    6. ' parcour' → logprob: -4.267445087432861
    7. 'atte' → logprob: -5.892445087432861
    8. ' atteindre' → logprob: -6.142445087432861
    9. 'par' → logprob: -6.142445087432861
    10. 'viser' → logprob: -6.517445087432861

Token 141: ' l' (ID: 305)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -1.2168556451797485
    2. ' l' → logprob: -1.8418556451797485
    3. 'all' → logprob: -1.8418556451797485
    4. ' la' → logprob: -2.591855525970459
    5. ' toutes' → logprob: -2.716855525970459
    6. 'l' → logprob: -3.216855525970459
    7. ' forward' → logprob: -3.466855525970459
    8. ' max' → logprob: -3.591855525970459
    9. 'max' → logprob: -3.716855525970459
    10. ' min' → logprob: -3.716855525970459

Token 142: ''' (ID: 6)
  Prédit: ''ensemble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''ensemble' → logprob: -0.13691456615924835
    2. 'es' → logprob: -2.8869144916534424
    3. 'e' → logprob: -3.0119144916534424
    4. ''' → logprob: -4.2619147300720215
    5. '’ensemble' → logprob: -6.1369147300720215
    6. 'a' → logprob: -6.5119147300720215
    7. ''all' → logprob: -6.6369147300720215
    8. ''intégr' → logprob: -7.0119147300720215
    9. 'all' → logprob: -7.2619147300720215
    10. 'interval' → logprob: -7.8869147300720215

Token 143: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.02748200111091137
    2. 'ensemble' → logprob: -3.777482032775879
    3. ''' → logprob: -5.902482032775879
    4. ''ensemble' → logprob: -7.027482032775879
    5. ' interval' → logprob: -9.152482032775879
    6. 'all' → logprob: -9.277482032775879
    7. '#' → logprob: -9.777482032775879
    8. 'arc' → logprob: -9.777482032775879
    9. 'éc' → logprob: -10.402482032775879
    10. '(interval' → logprob: -10.777482032775879

Token 144: 'le' (ID: 282)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.4307038187980652
    2. 'le' → logprob: -1.05570387840271
    3. 'de' → logprob: -8.180704116821289
    4. 've' → logprob: -8.180704116821289
    5. ' e' → logprob: -8.555704116821289
    6. 'all' → logprob: -8.680704116821289
    7. 'v' → logprob: -8.680704116821289
    8. '#' → logprob: -8.930704116821289
    9. 're' → logprob: -9.555704116821289
    10. 'l' → logprob: -9.618204116821289

Token 145: '
' (ID: 198)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8130642175674438
    2. 'minimal' → logprob: -1.3130642175674438
    3. ' minimal' → logprob: -1.6880642175674438
    4. 'cost' → logprob: -2.9380640983581543
    5. ' min' → logprob: -4.313064098358154
    6. 'print' → logprob: -4.438064098358154
    7. 'minimum' → logprob: -4.813064098358154
    8. ' cost' → logprob: -5.188064098358154
    9. 'total' → logprob: -6.313064098358154
    10. ' =' → logprob: -6.438064098358154

Token 146: '#' (ID: 2)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.5089673399925232
    2. 'min' → logprob: -1.383967399597168
    3. 'minimal' → logprob: -2.633967399597168
    4. 'print' → logprob: -3.258967399597168
    5. 'result' → logprob: -3.508967399597168
    6. 'answer' → logprob: -5.258967399597168
    7. 'minimum' → logprob: -7.383967399597168
    8. 'ans' → logprob: -7.383967399597168
    9. 'co' → logprob: -8.008967399597168
    10. ' cost' → logprob: -8.008967399597168

Token 147: ' Puis' (ID: 87717)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.6376720070838928
    2. 'min' → logprob: -1.262671947479248
    3. 'minimal' → logprob: -2.262671947479248
    4. 'print' → logprob: -3.762671947479248
    5. ' minimal' → logprob: -4.012671947479248
    6. 'result' → logprob: -4.012671947479248
    7. ' cost' → logprob: -4.137671947479248
    8. ' min' → logprob: -5.762671947479248
    9. 'answer' → logprob: -6.012671947479248
    10. 'minimum' → logprob: -6.512671947479248

Token 148: 'que' (ID: 1126)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.09677483141422272
    2. '#' → logprob: -3.4717748165130615
    3. 'que' → logprob: -3.4717748165130615
    4. 's' → logprob: -5.471775054931641
    5. 'min' → logprob: -5.471775054931641
    6. '
' → logprob: -5.971775054931641
    7. 'return' → logprob: -6.221775054931641
    8. ' print' → logprob: -6.221775054931641
    9. 'cost' → logprob: -6.471775054931641
    10. 'su' → logprob: -6.596775054931641

Token 149: ' on' (ID: 402)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -1.5553290843963623
    2. 'le' → logprob: -1.6803290843963623
    3. ' le' → logprob: -1.9303290843963623
    4. ' les' → logprob: -2.3053290843963623
    5. 'les' → logprob: -2.4303290843963623
    6. 'all' → logprob: -2.6803290843963623
    7. 'la' → logprob: -2.9303290843963623
    8. 'on' → logprob: -3.4303290843963623
    9. ' on' → logprob: -3.9303290843963623
    10. ' all' → logprob: -4.055329322814941

Token 150: ' peut' (ID: 9216)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.4906664788722992
    2. ' peut' → logprob: -1.8656665086746216
    3. 'do' → logprob: -1.8656665086746216
    4. ' doit' → logprob: -2.990666389465332
    5. 'a' → logprob: -5.615666389465332
    6. 'cherche' → logprob: -5.615666389465332
    7. ' veut' → logprob: -5.865666389465332
    8. 'part' → logprob: -6.115666389465332
    9. 've' → logprob: -6.615666389465332
    10. 'p' → logprob: -6.865666389465332

Token 151: ' aller' (ID: 18383)
  Prédit: 'comm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'comm' → logprob: -2.0373730659484863
    2. 'arr' → logprob: -2.1623730659484863
    3. ' partir' → logprob: -2.1623730659484863
    4. 'aller' → logprob: -2.4123730659484863
    5. 'faire' → logprob: -2.5373730659484863
    6. ' commencer' → logprob: -2.6623730659484863
    7. 'dé' → logprob: -2.7873730659484863
    8. 'part' → logprob: -3.0373730659484863
    9. ' dém' → logprob: -3.5373730659484863
    10. 'contin' → logprob: -3.6623730659484863

Token 152: ' dans' (ID: 2671)
  Prédit: 'dans'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dans' → logprob: -0.41077151894569397
    2. ' dans' → logprob: -1.1607714891433716
    3. ' soit' → logprob: -4.785771369934082
    4. 'so' → logprob: -5.535771369934082
    5. 'direct' → logprob: -5.785771369934082
    6. ' in' → logprob: -6.410771369934082
    7. 'either' → logprob: -6.410771369934082
    8. ' either' → logprob: -6.535771369934082
    9. ' ' → logprob: -7.535771369934082
    10. 'vers' → logprob: -7.660771369934082

Token 153: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.5699765682220459
    2. 'l' → logprob: -2.319976568222046
    3. 'n' → logprob: -2.319976568222046
    4. ' les' → logprob: -2.819976568222046
    5. 'le' → logprob: -3.194976568222046
    6. ' either' → logprob: -3.194976568222046
    7. 'un' → logprob: -3.694976568222046
    8. 'either' → logprob: -3.819976568222046
    9. 'sens' → logprob: -4.069976806640625
    10. ' n' → logprob: -4.194976806640625

Token 154: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.03780471906065941
    2. ' deux' → logprob: -3.41280460357666
    3. '2' → logprob: -5.78780460357666
    4. ' ' → logprob: -7.28780460357666
    5. ' two' → logprob: -9.03780460357666
    6. 'two' → logprob: -9.41280460357666
    7. '```' → logprob: -9.91280460357666
    8. 'sens' → logprob: -10.16280460357666
    9. ' ' → logprob: -11.16280460357666
    10. ' sens' → logprob: -11.41280460357666

Token 155: ' sens' (ID: 5050)
  Prédit: 'sens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sens' → logprob: -0.03524637594819069
    2. 'dire' → logprob: -3.4102463722229004
    3. ' sens' → logprob: -7.1602463722229
    4. 's' → logprob: -7.7852463722229
    5. ' directions' → logprob: -7.9102463722229
    6. '#' → logprob: -11.410246849060059
    7. ' senses' → logprob: -12.285246849060059
    8. ' sentidos' → logprob: -12.285246849060059
    9. 'sense' → logprob: -12.660246849060059
    10. 'dirs' → logprob: -12.785246849060059

Token 156: ',' (ID: 11)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8491997718811035
    2. 'minimal' → logprob: -0.8491997718811035
    3. 'result' → logprob: -2.9741997718811035
    4. 'cost' → logprob: -3.4741997718811035
    5. 'print' → logprob: -3.4741997718811035
    6. 'answer' → logprob: -4.0991997718811035
    7. ' minimal' → logprob: -4.9741997718811035
    8. 'minimum' → logprob: -5.7241997718811035
    9. '
' → logprob: -5.9741997718811035
    10. 'ans' → logprob: -7.4741997718811035

Token 157: ' on' (ID: 402)
  Prédit: ' cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cost' → logprob: -0.5052974820137024
    2. ' minimal' → logprob: -1.7552974224090576
    3. 'cost' → logprob: -2.0052974224090576
    4. ' min' → logprob: -3.3802974224090576
    5. 'min' → logprob: -4.130297660827637
    6. 'minimal' → logprob: -4.630297660827637
    7. ' result' → logprob: -4.755297660827637
    8. 'result' → logprob: -5.255297660827637
    9. ' print' → logprob: -5.380297660827637
    10. 'print' → logprob: -6.005297660827637

Token 158: ' chois' (ID: 33475)
  Prédit: ' prend'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prend' → logprob: -0.12919151782989502
    2. ' print' → logprob: -3.2541913986206055
    3. 'print' → logprob: -3.3791913986206055
    4. ' prends' → logprob: -4.1291913986206055
    5. ' chois' → logprob: -4.5041913986206055
    6. ' continue' → logprob: -5.3791913986206055
    7. 'min' → logprob: -5.7541913986206055
    8. ' prendra' → logprob: -6.0041913986206055
    9. 'pr' → logprob: -6.3791913986206055
    10. 'cho' → logprob: -6.5041913986206055

Token 159: 'it' (ID: 278)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.17983673512935638
    2. 'it' → logprob: -1.8048367500305176
    3. 'ut' → logprob: -10.17983627319336
    4. 'oit' → logprob: -11.42983627319336
    5. '#' → logprob: -11.55483627319336
    6. 'ra' → logprob: -12.17983627319336
    7. 'st' → logprob: -12.17983627319336
    8. 's' → logprob: -12.67983627319336
    9. 'e' → logprob: -12.92983627319336
    10. 'et' → logprob: -13.05483627319336

Token 160: ' la' (ID: 557)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.25469574332237244
    2. ' forward' → logprob: -2.1296956539154053
    3. 'min' → logprob: -2.8796956539154053
    4. ' le' → logprob: -3.3796956539154053
    5. ' la' → logprob: -5.004695892333984
    6. 'le' → logprob: -5.754695892333984
    7. 'forward' → logprob: -6.004695892333984
    8. ' the' → logprob: -6.504695892333984
    9. ' backward' → logprob: -7.004695892333984
    10. ' l' → logprob: -8.629695892333984

Token 161: ' plus' (ID: 2932)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.05925627052783966
    2. ' min' → logprob: -3.6842563152313232
    3. 'm' → logprob: -4.184256076812744
    4. 'minimum' → logprob: -5.184256076812744
    5. ' minimum' → logprob: -5.309256076812744
    6. ' minimal' → logprob: -5.559256076812744
    7. 'minimal' → logprob: -6.809256076812744
    8. ' plus' → logprob: -8.184256553649902
    9. ' ' → logprob: -8.309256553649902
    10. 'mi' → logprob: -8.684256553649902

Token 162: ' petite' (ID: 28119)
  Prédit: 'cour'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cour' → logprob: -0.9233131408691406
    2. 'pet' → logprob: -1.1733131408691406
    3. 'court' → logprob: -1.7983131408691406
    4. ' courte' → logprob: -2.5483131408691406
    5. 'short' → logprob: -3.4233131408691406
    6. 'min' → logprob: -5.173313140869141
    7. ' petite' → logprob: -5.673313140869141
    8. 'pro' → logprob: -6.673313140869141
    9. '_short' → logprob: -6.923313140869141
    10. '```' → logprob: -7.173313140869141

Token 163: ' distance' (ID: 9324)
  Prédit: '_distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.6203230023384094
    2. 'distance' → logprob: -1.2453229427337646
    3. '_' → logprob: -2.7453229427337646
    4. '_cost' → logprob: -3.7453229427337646
    5. ' distance' → logprob: -4.120323181152344
    6. ' des' → logprob: -4.120323181152344
    7. '_forward' → logprob: -4.370323181152344
    8. ' _' → logprob: -4.870323181152344
    9. 'cost' → logprob: -5.120323181152344
    10. '_co' → logprob: -5.995323181152344

Token 164: ' pour' (ID: 1930)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.8863843083381653
    2. 'minimal' → logprob: -1.5113842487335205
    3. '
' → logprob: -1.8863842487335205
    4. 'cost' → logprob: -2.0113842487335205
    5. 'result' → logprob: -3.3863842487335205
    6. 'print' → logprob: -4.1363844871521
    7. 'minimum' → logprob: -4.6363844871521
    8. 'answer' → logprob: -5.2613844871521
    9. ' minimal' → logprob: -5.3863844871521
    10. 'distance' → logprob: -6.0113844871521

Token 165: ' couvrir' (ID: 197187)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.45707106590271
    2. ' parcour' → logprob: -1.58207106590271
    3. ' couvrir' → logprob: -1.83207106590271
    4. '_' → logprob: -2.08207106590271
    5. 'c' → logprob: -2.83207106590271
    6. 'cover' → logprob: -2.95707106590271
    7. '_cover' → logprob: -3.58207106590271
    8. 'contin' → logprob: -4.207071304321289
    9. ' le' → logprob: -4.332071304321289
    10. '_min' → logprob: -4.332071304321289

Token 166: ' toutes' (ID: 17502)
  Prédit: ' forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' forward' → logprob: -0.9341460466384888
    2. 'forward' → logprob: -1.9341460466384888
    3. 'all' → logprob: -2.184145927429199
    4. ' min' → logprob: -2.434145927429199
    5. 'min' → logprob: -2.559145927429199
    6. ' the' → logprob: -2.684145927429199
    7. ' all' → logprob: -3.559145927429199
    8. 'max' → logprob: -4.059145927429199
    9. 'the' → logprob: -4.309145927429199
    10. ' max' → logprob: -4.434145927429199

Token 167: ' les' (ID: 1341)
  Prédit: 'stations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stations' → logprob: -0.7865546941757202
    2. ' les' → logprob: -1.6615546941757202
    3. 'les' → logprob: -1.7865546941757202
    4. ' stations' → logprob: -2.0365548133850098
    5. 'dest' → logprob: -3.4115548133850098
    6. ' destinations' → logprob: -4.91155481338501
    7. ' ' → logprob: -5.78655481338501
    8. ' dest' → logprob: -6.03655481338501
    9. ' la' → logprob: -6.16155481338501
    10. ' the' → logprob: -6.66155481338501

Token 168: ' stations' (ID: 26061)
  Prédit: 'stations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stations' → logprob: -0.053356483578681946
    2. ' stations' → logprob: -3.303356409072876
    3. 'dest' → logprob: -4.553356647491455
    4. 'st' → logprob: -6.428356647491455
    5. 'station' → logprob: -6.428356647491455
    6. ' destinations' → logprob: -6.928356647491455
    7. ' station' → logprob: -9.928356170654297
    8. ' dest' → logprob: -10.240856170654297
    9. 'sta' → logprob: -10.490856170654297
    10. '
' → logprob: -10.490856170654297

Token 169: '
' (ID: 198)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.1707186698913574
    2. 'cost' → logprob: -1.1707186698913574
    3. 'minimal' → logprob: -1.4207186698913574
    4. 'result' → logprob: -2.5457186698913574
    5. 'print' → logprob: -3.5457186698913574
    6. 'minimum' → logprob: -4.670718669891357
    7. 'total' → logprob: -5.295718669891357
    8. 'answer' → logprob: -5.545718669891357
    9. '
' → logprob: -5.545718669891357
    10. ' minimal' → logprob: -6.170718669891357

Token 170: '#' (ID: 2)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.2168850898742676
    2. 'cost' → logprob: -1.5918850898742676
    3. 'print' → logprob: -1.7168850898742676
    4. 'result' → logprob: -1.8418850898742676
    5. 'minimal' → logprob: -2.4668850898742676
    6. 'answer' → logprob: -2.7168850898742676
    7. 'return' → logprob: -5.841885089874268
    8. 'minimum' → logprob: -6.216885089874268
    9. 'optimal' → logprob: -6.216885089874268
    10. 'ans' → logprob: -6.591885089874268

Token 171: ' Ensuite' (ID: 113884)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.0693813562393188
    2. 'cost' → logprob: -1.3193813562393188
    3. 'result' → logprob: -1.5693813562393188
    4. 'min' → logprob: -1.9443813562393188
    5. 'minimal' → logprob: -3.9443812370300293
    6. 'answer' → logprob: -4.194381237030029
    7. 'ans' → logprob: -6.944381237030029
    8. 'return' → logprob: -7.444381237030029
    9. 'distance' → logprob: -7.694381237030029
    10. 'minimum' → logprob: -8.069381713867188

Token 172: ' on' (ID: 402)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.360364705324173
    2. ' on' → logprob: -2.2353646755218506
    3. 'total' → logprob: -3.1103646755218506
    4. 'on' → logprob: -3.3603646755218506
    5. ' print' → logprob: -3.7353646755218506
    6. 'result' → logprob: -3.8603646755218506
    7. 'cost' → logprob: -4.36036491394043
    8. 'distance' → logprob: -4.36036491394043
    9. ',' → logprob: -4.48536491394043
    10. 'min' → logprob: -4.98536491394043

Token 173: ' calc' (ID: 25691)
  Prédit: ' ajoute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ajoute' → logprob: -0.4329291880130768
    2. 'aj' → logprob: -1.5579291582107544
    3. 'print' → logprob: -3.307929277420044
    4. ' multipl' → logprob: -3.557929277420044
    5. ' print' → logprob: -4.057929039001465
    6. 'add' → logprob: -4.182929039001465
    7. ' add' → logprob: -4.807929039001465
    8. ' compare' → logprob: -5.182929039001465
    9. 'compare' → logprob: -5.682929039001465
    10. ' ajouter' → logprob: -5.932929039001465

Token 174: 'ule' (ID: 1601)
  Prédit: 'ule'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ule' → logprob: -0.08356688916683197
    2. 'ul' → logprob: -2.583566904067993
    3. 'uler' → logprob: -5.833566665649414
    4. 'ulate' → logprob: -7.208566665649414
    5. 'cule' → logprob: -7.708566665649414
    6. 'u' → logprob: -9.333566665649414
    7. '```' → logprob: -9.833566665649414
    8. 'er' → logprob: -9.833566665649414
    9. 'ulte' → logprob: -9.958566665649414
    10. '#' → logprob: -9.958566665649414

Token 175: ' le' (ID: 505)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.9940813779830933
    2. ' le' → logprob: -1.1190813779830933
    3. 'le' → logprob: -2.369081497192383
    4. 'min' → logprob: -2.744081497192383
    5. ' min' → logprob: -3.369081497192383
    6. ' l' → logprob: -3.619081497192383
    7. ' ' → logprob: -3.994081497192383
    8. ' =' → logprob: -4.869081497192383
    9. ' ' → logprob: -4.869081497192383
    10. ' the' → logprob: -4.994081497192383

Token 176: ' coût' (ID: 73109)
  Prédit: 'minimum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimum' → logprob: -0.7495478987693787
    2. ' minimum' → logprob: -2.1245479583740234
    3. ' coût' → logprob: -2.3745479583740234
    4. 'min' → logprob: -2.4995479583740234
    5. ' minimal' → logprob: -2.6245479583740234
    6. 'co' → logprob: -3.3745479583740234
    7. ' total' → logprob: -3.6245479583740234
    8. 'cost' → logprob: -3.7495479583740234
    9. 'minimal' → logprob: -3.9995479583740234
    10. 'total' → logprob: -4.499547958374023

Token 177: ' entre' (ID: 3853)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13923563063144684
    2. '=' → logprob: -2.139235734939575
    3. 'total' → logprob: -5.139235496520996
    4. 'min' → logprob: -5.514235496520996
    5. 'cost' → logprob: -7.889235496520996
    6. 'minimal' → logprob: -8.014235496520996
    7. '_min' → logprob: -8.514235496520996
    8. '_total' → logprob: -8.639235496520996
    9. ' total' → logprob: -8.639235496520996
    10. ' minimal' → logprob: -8.764235496520996

Token 178: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2810373902320862
    2. ' p' → logprob: -2.2810373306274414
    3. 'min' → logprob: -2.4060373306274414
    4. 'le' → logprob: -4.406037330627441
    5. ' le' → logprob: -4.531037330627441
    6. ' la' → logprob: -5.031037330627441
    7. 'max' → logprob: -5.156037330627441
    8. ' min' → logprob: -5.281037330627441
    9. 'la' → logprob: -5.281037330627441
    10. 'l' → logprob: -6.406037330627441

Token 179: ' et' (ID: 859)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -1.0860024690628052
    2. '-' → logprob: -1.4610024690628052
    3. ',' → logprob: -2.5860023498535156
    4. '_' → logprob: -2.7110023498535156
    5. 'min' → logprob: -2.7110023498535156
    6. ' =' → logprob: -3.5860023498535156
    7. '=' → logprob: -3.7110023498535156
    8. 'p' → logprob: -3.9610023498535156
    9. '+' → logprob: -4.211002349853516
    10. 'to' → logprob: -4.336002349853516

Token 180: ' l' (ID: 305)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.020598765462636948
    2. ' min' → logprob: -3.8955986499786377
    3. 'max' → logprob: -10.520598411560059
    4. 'dest' → logprob: -11.895598411560059
    5. 'the' → logprob: -12.020598411560059
    6. '	min' → logprob: -12.270598411560059
    7. ' the' → logprob: -12.395598411560059
    8. '=min' → logprob: -13.770598411560059
    9. '[min' → logprob: -13.770598411560059
    10. 'destination' → logprob: -14.270598411560059

Token 181: ''' (ID: 6)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3949858546257019
    2. 'min' → logprob: -1.5199859142303467
    3. 'e' → logprob: -3.5199859142303467
    4. ''' → logprob: -3.7699859142303467
    5. 'max' → logprob: -3.7699859142303467
    6. 'es' → logprob: -4.394985675811768
    7. 'all' → logprob: -4.519985675811768
    8. ''ensemble' → logprob: -6.519985675811768
    9. '_min' → logprob: -6.519985675811768
    10. ''all' → logprob: -6.894985675811768

Token 182: 'interval' (ID: 37558)
  Prédit: 'interval'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'interval' → logprob: -0.2683415710926056
    2. 'min' → logprob: -1.8933415412902832
    3. 'origine' → logprob: -4.268341541290283
    4. 'a' → logprob: -4.518341541290283
    5. 'max' → logprob: -4.518341541290283
    6. 'é' → logprob: -5.018341541290283
    7. 'initial' → logprob: -5.893341541290283
    8. 'all' → logprob: -6.018341541290283
    9. 'ext' → logprob: -6.018341541290283
    10. 'end' → logprob: -6.268341541290283

Token 183: 'le' (ID: 282)
  Prédit: 'le'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.05654646456241608
    2. 'e' → logprob: -3.431546449661255
    3. 'val' → logprob: -4.806546688079834
    4. 'v' → logprob: -4.931546688079834
    5. 'l' → logprob: -5.931546688079834
    6. 've' → logprob: -7.056546688079834
    7. 'all' → logprob: -7.306546688079834
    8. '_' → logprob: -7.369046688079834
    9. 'al' → logprob: -7.431546688079834
    10. '_val' → logprob: -8.806546211242676

Token 184: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5914890766143799
    2. 'distance' → logprob: -1.7164890766143799
    3. 'min' → logprob: -3.21648907661438
    4. 'start' → logprob: -3.34148907661438
    5. ' 
' → logprob: -3.71648907661438
    6. '#' → logprob: -3.96648907661438
    7. 'p' → logprob: -3.96648907661438
    8. '```' → logprob: -4.341488838195801
    9. 'cost' → logprob: -4.466488838195801
    10. '' → logprob: -4.841488838195801

Token 185: ' en' (ID: 469)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.07648099213838577
    2. ' =' → logprob: -3.7014811038970947
    3. 'min' → logprob: -3.8264811038970947
    4. ' min' → logprob: -4.076480865478516
    5. '=' → logprob: -6.201480865478516
    6. ''' → logprob: -6.826480865478516
    7. ' '' → logprob: -7.201480865478516
    8. 'space' → logprob: -7.201480865478516
    9. ' ,' → logprob: -7.326480865478516
    10. '  ' → logprob: -7.451480865478516

Token 186: ' prenant' (ID: 140375)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.20436252653598785
    2. ' min' → logprob: -1.7043625116348267
    3. ' prenant' → logprob: -6.954362392425537
    4. 'max' → logprob: -8.079362869262695
    5. '(min' → logprob: -8.954362869262695
    6. 'consider' → logprob: -9.079362869262695
    7. ' p' → logprob: -9.579362869262695
    8. ' ' → logprob: -9.579362869262695
    9. '[min' → logprob: -9.579362869262695
    10. 'sum' → logprob: -9.579362869262695

Token 187: ' en' (ID: 469)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.037882644683122635
    2. 'min' → logprob: -3.4128825664520264
    3. ' la' → logprob: -6.6628828048706055
    4. ' ' → logprob: -7.1628828048706055
    5. ' max' → logprob: -7.7878828048706055
    6. ' l' → logprob: -8.037882804870605
    7. ')' → logprob: -8.162882804870605
    8. ' le' → logprob: -8.162882804870605
    9. ' abs' → logprob: -8.287882804870605
    10. '=min' → logprob: -8.912882804870605

Token 188: ' compte' (ID: 19657)
  Prédit: 'comp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'comp' → logprob: -0.002169413026422262
    2. ' compte' → logprob: -6.377169609069824
    3. 'min' → logprob: -8.252169609069824
    4. 'account' → logprob: -9.002169609069824
    5. 'charge' → logprob: -10.127169609069824
    6. '```' → logprob: -10.752169609069824
    7. 'consider' → logprob: -11.502169609069824
    8. '
' → logprob: -12.752169609069824
    9. 'count' → logprob: -13.502169609069824
    10. 'com' → logprob: -13.627169609069824

Token 189: ' la' (ID: 557)
  Prédit: ' l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' l' → logprob: -0.4265022575855255
    2. ' la' → logprob: -1.4265022277832031
    3. ' le' → logprob: -3.301502227783203
    4. ' ' → logprob: -4.301502227783203
    5. ' min' → logprob: -4.301502227783203
    6. ' ' → logprob: -4.426502227783203
    7. 'l' → logprob: -4.551502227783203
    8. ' les' → logprob: -5.051502227783203
    9. 'min' → logprob: -5.801502227783203
    10. ' the' → logprob: -5.926502227783203

Token 190: ' position' (ID: 4010)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.994036853313446
    2. ' position' → logprob: -1.1190369129180908
    3. ' distance' → logprob: -1.9940369129180908
    4. ' minimal' → logprob: -2.869036912918091
    5. 'min' → logprob: -3.244036912918091
    6. ' plus' → logprob: -3.869036912918091
    7. ' direction' → logprob: -3.869036912918091
    8. 'position' → logprob: -5.244036674499512
    9. 'distance' → logprob: -5.244036674499512
    10. ' proximité' → logprob: -5.244036674499512

Token 191: ' de' (ID: 334)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4753519892692566
    2. '_p' → logprob: -2.4753520488739014
    3. '_to' → logprob: -2.7253520488739014
    4. '_' → logprob: -3.1003520488739014
    5. '_between' → logprob: -3.4753520488739014
    6. ' de' → logprob: -3.8503520488739014
    7. 'p' → logprob: -3.8503520488739014
    8. '=' → logprob: -4.350351810455322
    9. ' p' → logprob: -4.350351810455322
    10. '_offset' → logprob: -4.600351810455322

Token 192: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.17989978194236755
    2. ' p' → logprob: -1.80489981174469
    3. 'min' → logprob: -9.679900169372559
    4. ' min' → logprob: -9.804900169372559
    5. ' ' → logprob: -11.179900169372559
    6. ' la' → logprob: -11.804900169372559
    7. 'l' → logprob: -12.179900169372559
    8. ' l' → logprob: -13.054900169372559
    9. '	p' → logprob: -13.054900169372559
    10. '<p' → logprob: -13.554900169372559

Token 193: '

' (ID: 279)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.34802010655403137
    2. 'start' → logprob: -2.473020076751709
    3. 'min' → logprob: -2.973020076751709
    4. '#' → logprob: -3.348020076751709
    5. 'p' → logprob: -3.598020076751709
    6. ' if' → logprob: -3.848020076751709
    7. 'distance' → logprob: -4.098020076751709
    8. 'offset' → logprob: -4.348020076751709
    9. 'initial' → logprob: -5.098020076751709
    10. 's' → logprob: -5.473020076751709

Token 194: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16391834616661072
    2. 'cost' → logprob: -3.0389182567596436
    3. 'start' → logprob: -3.6639182567596436
    4. ' if' → logprob: -4.038918495178223
    5. '#' → logprob: -4.163918495178223
    6. 'distance' → logprob: -4.538918495178223
    7. 'offset' → logprob: -4.663918495178223
    8. 'min' → logprob: -4.913918495178223
    9. 'p' → logprob: -5.663918495178223
    10. 'interval' → logprob: -6.913918495178223

Token 195: ' Co' (ID: 4642)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16483883559703827
    2. 'start' → logprob: -3.1648387908935547
    3. 'cost' → logprob: -3.2898387908935547
    4. 'distance' → logprob: -3.5398387908935547
    5. '#' → logprob: -3.6648387908935547
    6. 'min' → logprob: -5.789838790893555
    7. ' if' → logprob: -5.914838790893555
    8. 'current' → logprob: -6.289838790893555
    9. 'offset' → logprob: -6.664838790893555
    10. 'dist' → logprob: -7.164838790893555

Token 196: 'û' (ID: 8596)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.037026483565568924
    2. 'ût' → logprob: -4.412026405334473
    3. 't' → logprob: -4.912026405334473
    4. 'ut' → logprob: -5.162026405334473
    5. 'n' → logprob: -6.412026405334473
    6. 'mp' → logprob: -6.662026405334473
    7. 'ver' → logprob: -6.787026405334473
    8. 'verage' → logprob: -7.037026405334473
    9. 'sts' → logprob: -7.037026405334473
    10. 'station' → logprob: -7.162026405334473

Token 197: 'ts' (ID: 1561)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -1.8193366486229934e-05
    2. 'r' → logprob: -11.750018119812012
    3. 'rt' → logprob: -12.250018119812012
    4. 'nt' → logprob: -13.250018119812012
    5. 'st' → logprob: -13.750018119812012
    6. 'ts' → logprob: -14.000018119812012
    7. '#' → logprob: -14.250018119812012
    8. '�t' → logprob: -15.375018119812012
    9. 'te' → logprob: -15.875018119812012
    10. '̂' → logprob: -16.000019073486328

Token 198: ' possibles' (ID: 97753)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.5606303811073303
    2. '_from' → logprob: -1.8106303215026855
    3. '_forward' → logprob: -1.8106303215026855
    4. '_between' → logprob: -3.6856303215026855
    5. '_p' → logprob: -3.8106303215026855
    6. '_start' → logprob: -4.1856303215026855
    7. '_' → logprob: -4.3106303215026855
    8. 'from' → logprob: -4.4356303215026855
    9. '_min' → logprob: -5.3106303215026855
    10. ' =' → logprob: -5.6856303215026855

Token 199: ' selon' (ID: 27571)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05587053671479225
    2. '=' → logprob: -4.305870532989502
    3. 'from' → logprob: -4.430870532989502
    4. 'forward' → logprob: -4.805870532989502
    5. 'between' → logprob: -5.305870532989502
    6. '_between' → logprob: -5.555870532989502
    7. '_from' → logprob: -6.180870532989502
    8. 'start' → logprob: -6.305870532989502
    9. 's' → logprob: -6.305870532989502
    10. '_forward' → logprob: -6.305870532989502

Token 200: ' les' (ID: 1341)
  Prédit: ' la'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' la' → logprob: -0.7971519827842712
    2. 'p' → logprob: -1.547152042388916
    3. 'la' → logprob: -2.047152042388916
    4. 'min' → logprob: -2.922152042388916
    5. ' p' → logprob: -3.172152042388916
    6. 'l' → logprob: -3.422152042388916
    7. 'les' → logprob: -4.047152042388916
    8. ' l' → logprob: -4.297152042388916
    9. ' les' → logprob: -4.797152042388916
    10. '[min' → logprob: -5.047152042388916

Token 201: ' stratégies' (ID: 167350)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.6131214499473572
    2. ' positions' → logprob: -0.8631214499473572
    3. 'position' → logprob: -4.113121509552002
    4. 'pos' → logprob: -4.863121509552002
    5. ' em' → logprob: -6.488121509552002
    6. ' scén' → logprob: -6.613121509552002
    7. 'em' → logprob: -6.613121509552002
    8. ' cas' → logprob: -6.863121509552002
    9. ' différentes' → logprob: -6.863121509552002
    10. ' scenarios' → logprob: -7.113121509552002

Token 202: ':
' (ID: 734)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'forward' → logprob: -1.2743830680847168
    2. 'start' → logprob: -1.5243830680847168
    3. 'p' → logprob: -2.149383068084717
    4. 'to' → logprob: -2.399383068084717
    5. 'cost' → logprob: -2.399383068084717
    6. '#' → logprob: -3.524383068084717
    7. 'if' → logprob: -3.649383068084717
    8. '=' → logprob: -3.774383068084717
    9. 'initial' → logprob: -4.274383068084717
    10. 'cover' → logprob: -4.274383068084717

Token 203: '#' (ID: 2)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -1.738391399383545
    2. ' forward' → logprob: -2.113391399383545
    3. ' cost' → logprob: -2.238391399383545
    4. 'forward' → logprob: -2.363391399383545
    5. 'start' → logprob: -2.613391399383545
    6. ' start' → logprob: -2.863391399383545
    7. ' p' → logprob: -3.113391399383545
    8. 'distance' → logprob: -3.238391399383545
    9. '#' → logprob: -3.363391399383545
    10. ' if' → logprob: -3.738391399383545

Token 204: ' ' (ID: 220)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.16740353405475616
    2. '#' → logprob: -2.66740345954895
    3. ' cost' → logprob: -3.41740345954895
    4. 'start' → logprob: -4.292403697967529
    5. 'distance' → logprob: -4.792403697967529
    6. 'cover' → logprob: -5.042403697967529
    7. 'if' → logprob: -5.417403697967529
    8. 'forward' → logprob: -5.792403697967529
    9. 'strategy' → logprob: -5.917403697967529
    10. 'dist' → logprob: -6.667403697967529

Token 205: '1' (ID: 16)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.18396258354187012
    2. '#' → logprob: -2.30896258354187
    3. 'cover' → logprob: -4.183962821960449
    4. 'start' → logprob: -4.308962821960449
    5. 'if' → logprob: -4.433962821960449
    6. 'distance' → logprob: -4.558962821960449
    7. 'forward' → logprob: -6.058962821960449
    8. 'min' → logprob: -6.183962821960449
    9. 'strategy' → logprob: -6.558962821960449
    10. 'from' → logprob: -6.683962821960449

Token 206: '.' (ID: 13)
  Prédit: '_forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_forward' → logprob: -1.1337987184524536
    2. '_' → logprob: -1.3837987184524536
    3. '#' → logprob: -1.7587987184524536
    4. ')' → logprob: -3.133798599243164
    5. 'forward' → logprob: -3.508798599243164
    6. '.' → logprob: -3.508798599243164
    7. '_distance' → logprob: -3.633798599243164
    8. '_min' → logprob: -4.258798599243164
    9. ' =' → logprob: -4.508798599243164
    10. ':' → logprob: -4.633798599243164

Token 207: ' Aller' (ID: 179307)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4196971654891968
    2. 'if' → logprob: -3.0446972846984863
    3. 'Si' → logprob: -3.2946972846984863
    4. 'forward' → logprob: -3.4196972846984863
    5. 'min' → logprob: -3.5446972846984863
    6. 'p' → logprob: -3.5446972846984863
    7. 'start' → logprob: -3.6696972846984863
    8. 'all' → logprob: -3.6696972846984863
    9. 'distance' → logprob: -3.9196972846984863
    10. 'cost' → logprob: -4.169697284698486

Token 208: ' du' (ID: 1462)
  Prédit: ' directement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' directement' → logprob: -1.3246080875396729
    2. 'direct' → logprob: -1.4496080875396729
    3. 'dans' → logprob: -2.074608087539673
    4. ' jusqu' → logprob: -2.574608087539673
    5. '_direct' → logprob: -2.699608087539673
    6. ' vers' → logprob: -2.824608087539673
    7. ' dans' → logprob: -3.324608087539673
    8. ' de' → logprob: -3.699608087539673
    9. ' au' → logprob: -3.699608087539673
    10. ' à' → logprob: -4.449607849121094

Token 209: ' point' (ID: 2438)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.01913560926914215
    2. ' p' → logprob: -4.019135475158691
    3. 'min' → logprob: -7.144135475158691
    4. ' min' → logprob: -8.644135475158691
    5. ' point' → logprob: -12.519135475158691
    6. ' ' → logprob: -12.644135475158691
    7. 'point' → logprob: -13.144135475158691
    8. ' ' → logprob: -13.706635475158691
    9. ' départ' → logprob: -13.894135475158691
    10. '	p' → logprob: -14.081635475158691

Token 210: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7781795263290405
    2. ' p' → logprob: -1.1531795263290405
    3. ' de' → logprob: -1.6531795263290405
    4. 'de' → logprob: -3.40317964553833
    5. 'd' → logprob: -8.153179168701172
    6. ' ' → logprob: -10.028179168701172
    7. ' d' → logprob: -10.778179168701172
    8. 'depart' → logprob: -11.278179168701172
    9. ' ' → logprob: -11.653179168701172
    10. 'min' → logprob: -12.153179168701172

Token 211: ' vers' (ID: 3640)
  Prédit: ' jusqu'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' jusqu' → logprob: -0.801382839679718
    2. ' au' → logprob: -1.5513827800750732
    3. ' à' → logprob: -1.6763827800750732
    4. ' vers' → logprob: -2.4263827800750732
    5. ' jusque' → logprob: -4.176383018493652
    6. 'au' → logprob: -4.301383018493652
    7. 'à' → logprob: -4.301383018493652
    8. ' ' → logprob: -4.301383018493652
    9. ',' → logprob: -6.301383018493652
    10. ' aux' → logprob: -6.551383018493652

Token 212: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.09200365841388702
    2. ' min' → logprob: -2.467003583908081
    3. 'max' → logprob: -6.59200382232666
    4. ' la' → logprob: -7.59200382232666
    5. 'le' → logprob: -7.96700382232666
    6. ' le' → logprob: -8.34200382232666
    7. 'la' → logprob: -8.34200382232666
    8. ' max' → logprob: -8.59200382232666
    9. 'l' → logprob: -9.09200382232666
    10. ' l' → logprob: -10.84200382232666

Token 213: '_station' (ID: 110769)
  Prédit: '_station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_station' → logprob: -3.500108141452074e-05
    2. '_' → logprob: -10.875035285949707
    3. 'Station' → logprob: -12.125035285949707
    4. 'station' → logprob: -12.750035285949707
    5. '_st' → logprob: -12.875035285949707
    6. '(all' → logprob: -13.250035285949707
    7. '(_' → logprob: -13.750035285949707
    8. '_destination' → logprob: -13.750035285949707
    9. '_sta' → logprob: -15.000035285949707
    10. '(' → logprob: -15.125035285949707

Token 214: ' puis' (ID: 18766)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.24716585874557495
    2. '+' → logprob: -2.1221659183502197
    3. ',' → logprob: -2.4971659183502197
    4. ')' → logprob: -5.247165679931641
    5. ' ,' → logprob: -5.747165679931641
    6. ' ' → logprob: -5.747165679931641
    7. ' and' → logprob: -7.372165679931641
    8. 'if' → logprob: -7.622165679931641
    9. ' -' → logprob: -7.747165679931641
    10. '-' → logprob: -7.872165679931641

Token 215: ' couvrir' (ID: 197187)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.1956008672714233
    2. ' aller' → logprob: -1.5706008672714233
    3. ' continuer' → logprob: -1.5706008672714233
    4. 'aller' → logprob: -2.570600986480713
    5. '(' → logprob: -3.070600986480713
    6. 'contin' → logprob: -3.570600986480713
    7. ' max' → logprob: -3.945600986480713
    8. '(max' → logprob: -4.195600986480713
    9. ' (' → logprob: -4.195600986480713
    10. ' vers' → logprob: -4.445600986480713

Token 216: ' jusqu' (ID: 21961)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.3877276182174683
    2. 'min' → logprob: -2.137727737426758
    3. 'forward' → logprob: -2.137727737426758
    4. ' forward' → logprob: -2.262727737426758
    5. ' min' → logprob: -2.512727737426758
    6. ' ' → logprob: -2.762727737426758
    7. ' _' → logprob: -2.887727737426758
    8. ' max' → logprob: -2.887727737426758
    9. '_forward' → logprob: -3.387727737426758
    10. '_' → logprob: -3.762727737426758

Token 217: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.08120831102132797
    2. ''au' → logprob: -2.7062082290649414
    3. 'à' → logprob: -5.081208229064941
    4. 'au' → logprob: -6.331208229064941
    5. '’à' → logprob: -6.581208229064941
    6. ' à' → logprob: -6.706208229064941
    7. ''' → logprob: -7.956208229064941
    8. ' au' → logprob: -9.331208229064941
    9. '’au' → logprob: -9.581208229064941
    10. ''a' → logprob: -10.081208229064941

Token 218: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6931548714637756
    2. 'max' → logprob: -0.6931548714637756
    3. ' ' → logprob: -12.443155288696289
    4. ' ' → logprob: -13.443155288696289
    5. ' maxi' → logprob: -14.068155288696289
    6. '	max' → logprob: -14.943155288696289
    7. '(max' → logprob: -15.193155288696289
    8. ' maximal' → logprob: -15.568155288696289
    9. 'min' → logprob: -15.693155288696289
    10. ''' → logprob: -15.943155288696289

Token 219: '_station' (ID: 110769)
  Prédit: '_station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_station' → logprob: -0.001052815350703895
    2. '_' → logprob: -6.8760528564453125
    3. '_st' → logprob: -11.626052856445312
    4. '_sta' → logprob: -12.251052856445312
    5. '_s' → logprob: -13.001052856445312
    6. ' _' → logprob: -13.501052856445312
    7. '_destination' → logprob: -14.626052856445312
    8. 'station' → logprob: -14.626052856445312
    9. 'Station' → logprob: -14.876052856445312
    10. '_stat' → logprob: -15.626052856445312

Token 220: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.23344960808753967
    2. 'forward' → logprob: -2.108449697494507
    3. '#' → logprob: -3.983449697494507
    4. '+' → logprob: -4.108449459075928
    5. 'distance' → logprob: -4.233449459075928
    6. '
' → logprob: -4.483449459075928
    7. ' +' → logprob: -5.233449459075928
    8. '+
' → logprob: -5.483449459075928
    9. 'if' → logprob: -5.983449459075928
    10. 'cost' → logprob: -6.483449459075928

Token 221: 'dans' (ID: 108151)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3382173478603363
    2. ' +' → logprob: -1.8382173776626587
    3. '+' → logprob: -2.588217258453369
    4. ' )' → logprob: -3.963217258453369
    5. ')
' → logprob: -4.713217258453369
    6. ')+' → logprob: -4.963217258453369
    7. 'forward' → logprob: -5.213217258453369
    8. 'min' → logprob: -5.463217258453369
    9. ' )
' → logprob: -6.713217258453369
    10. ' ' → logprob: -6.963217258453369

Token 222: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -1.0371339321136475
    2. 'forward' → logprob: -1.4121339321136475
    3. 'l' → logprob: -1.7871339321136475
    4. 'la' → logprob: -2.9121339321136475
    5. 'min' → logprob: -3.0371339321136475
    6. ' le' → logprob: -3.7871339321136475
    7. ')' → logprob: -4.037134170532227
    8. ' la' → logprob: -4.287134170532227
    9. ' l' → logprob: -4.287134170532227
    10. ' forward' → logprob: -4.412134170532227

Token 223: ' sens' (ID: 5050)
  Prédit: ' sens'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sens' → logprob: -0.8696803450584412
    2. 'sens' → logprob: -0.9946803450584412
    3. 'forward' → logprob: -1.994680404663086
    4. ')' → logprob: -3.494680404663086
    5. ' forward' → logprob: -3.744680404663086
    6. ' )' → logprob: -5.244680404663086
    7. 's' → logprob: -5.744680404663086
    8. 'sent' → logprob: -5.869680404663086
    9. 'min' → logprob: -6.619680404663086
    10. ',' → logprob: -6.744680404663086

Token 224: ' cro' (ID: 11270)
  Prédit: 'cro'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cro' → logprob: -0.32595041394233704
    2. ' cro' → logprob: -2.3259503841400146
    3. ')' → logprob: -2.8259503841400146
    4. ' )' → logprob: -3.0759503841400146
    5. ' forward' → logprob: -3.3259503841400146
    6. 'forward' → logprob: -4.825950622558594
    7. 'asc' → logprob: -5.325950622558594
    8. ' asc' → logprob: -5.450950622558594
    9. ',' → logprob: -5.950950622558594
    10. ' direct' → logprob: -6.700950622558594

Token 225: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.06649652123451233
    2. 'ss' → logprob: -3.9414966106414795
    3. 'iss' → logprob: -4.3164963722229
    4. '#' → logprob: -5.3164963722229
    5. '
' → logprob: -6.1914963722229
    6. '\' → logprob: -6.4414963722229
    7. ')' → logprob: -6.4414963722229
    8. 'issa' → logprob: -6.5664963722229
    9. 'issent' → logprob: -6.5664963722229
    10. '_' → logprob: -6.6914963722229

Token 226: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002669353736564517
    2. ')
' → logprob: -6.502669334411621
    3. ' )' → logprob: -7.127669334411621
    4. '+' → logprob: -9.627669334411621
    5. ')+' → logprob: -9.877669334411621
    6. '#' → logprob: -10.002669334411621
    7. ')#' → logprob: -10.127669334411621
    8. 'direction' → logprob: -10.502669334411621
    9. ')

' → logprob: -10.627669334411621
    10. ',' → logprob: -10.877669334411621

Token 227: 'cost' (ID: 33457)
  Prédit: 'forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'forward' → logprob: -0.9502198100090027
    2. '
' → logprob: -1.4502198696136475
    3. 'if' → logprob: -2.0752198696136475
    4. 'distance' → logprob: -2.2002198696136475
    5. 'cost' → logprob: -3.0752198696136475
    6. '#' → logprob: -3.0752198696136475
    7. 'p' → logprob: -4.200219631195068
    8. 'min' → logprob: -4.325219631195068
    9. '#
' → logprob: -6.075219631195068
    10. 'possible' → logprob: -6.200219631195068

Token 228: '1' (ID: 16)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.2485276609659195
    2. '1' → logprob: -2.248527765274048
    3. '_' → logprob: -2.873527765274048
    4. '_min' → logprob: -3.623527765274048
    5. ' =' → logprob: -4.623527526855469
    6. '_forward' → logprob: -4.873527526855469
    7. '_p' → logprob: -5.248527526855469
    8. '_start' → logprob: -5.873527526855469
    9. 's' → logprob: -5.998527526855469
    10. '_go' → logprob: -6.998527526855469

Token 229: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020448574796319008
    2. '=' → logprob: -4.020448684692383
    3. '_' → logprob: -6.395448684692383
    4. '_forward' → logprob: -7.520448684692383
    5. '_min' → logprob: -10.895448684692383
    6. '1' → logprob: -11.270448684692383
    7. '_to' → logprob: -11.395448684692383
    8. ' ' → logprob: -11.520448684692383
    9. '_p' → logprob: -11.645448684692383
    10. '_start' → logprob: -12.270448684692383

Token 230: ' (' (ID: 350)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.6532208919525146
    2. '(max' → logprob: -1.5282208919525146
    3. '(abs' → logprob: -1.5282208919525146
    4. 'max' → logprob: -3.5282208919525146
    5. ' (' → logprob: -5.153221130371094
    6. ' abs' → logprob: -5.278221130371094
    7. '(min' → logprob: -5.528221130371094
    8. 'min' → logprob: -7.528221130371094
    9. ' max' → logprob: -8.278221130371094
    10. '((' → logprob: -8.278221130371094

Token 231: 'p' (ID: 79)
  Prédit: '(min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.6338315606117249
    2. 'min' → logprob: -1.38383150100708
    3. '(p' → logprob: -2.00883150100708
    4. 'p' → logprob: -2.75883150100708
    5. '(max' → logprob: -4.75883150100708
    6. ' (' → logprob: -5.50883150100708
    7. 'abs' → logprob: -5.75883150100708
    8. '(abs' → logprob: -6.00883150100708
    9. 'max' → logprob: -6.25883150100708
    10. ' min' → logprob: -7.75883150100708

Token 232: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.005993263330310583
    2. '-' → logprob: -5.130993366241455
    3. '-min' → logprob: -9.755992889404297
    4. ' ' → logprob: -12.005992889404297
    5. ' ' → logprob: -16.255992889404297
    6. '-p' → logprob: -16.255992889404297
    7. '-m' → logprob: -16.630992889404297
    8. ',' → logprob: -17.005992889404297
    9. '-num' → logprob: -17.130992889404297
    10. ')' → logprob: -17.255992889404297

Token 233: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -5.836499985889532e-05
    2. ' min' → logprob: -9.7500581741333
    3. '	min' → logprob: -17.000059127807617
    4. '[min' → logprob: -18.125059127807617
    5. '_min' → logprob: -18.500059127807617
    6. 'minimum' → logprob: -19.375059127807617
    7. '(min' → logprob: -19.375059127807617
    8. '=min' → logprob: -19.375059127807617
    9. 'max' → logprob: -19.625059127807617
    10. '
' → logprob: -19.750059127807617

Token 234: '_station' (ID: 110769)
  Prédit: '_station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_station' → logprob: -1.6240566083070007e-06
    2. 'station' → logprob: -13.750001907348633
    3. 'Station' → logprob: -15.000001907348633
    4. '_' → logprob: -16.375001907348633
    5. ')' → logprob: -17.375001907348633
    6. '_sta' → logprob: -17.500001907348633
    7. ' Station' → logprob: -18.375001907348633
    8. '(' → logprob: -19.000001907348633
    9. '(min' → logprob: -19.250001907348633
    10. ' station' → logprob: -19.250001907348633

Token 235: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07226234674453735
    2. ' if' → logprob: -2.8222622871398926
    3. 'if' → logprob: -4.947262287139893
    4. ' )' → logprob: -6.197262287139893
    5. ')%' → logprob: -7.447262287139893
    6. ' +' → logprob: -8.69726276397705
    7. ')+' → logprob: -8.69726276397705
    8. '+' → logprob: -9.32226276397705
    9. '%' → logprob: -9.57226276397705
    10. ' ' → logprob: -11.44726276397705

Token 236: ' %' (ID: 1851)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10708663612604141
    2. 'if' → logprob: -2.482086658477783
    3. '%' → logprob: -4.482086658477783
    4. ' %' → logprob: -5.107086658477783
    5. ' +' → logprob: -7.982086658477783
    6. '+' → logprob: -9.232086181640625
    7. ')' → logprob: -9.357086181640625
    8. ' ' → logprob: -9.607086181640625
    9. ' and' → logprob: -11.107086181640625
    10. ',' → logprob: -13.357086181640625

Token 237: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.004078401252627373
    2. ' N' → logprob: -5.504078388214111
    3. '	N' → logprob: -17.754077911376953
    4. '<|end|>' → logprob: -18.129077911376953
    5. ' ' → logprob: -18.754077911376953
    6. '`' → logprob: -19.879077911376953
    7. '>N' → logprob: -20.004077911376953
    8. '```' → logprob: -20.254077911376953
    9. '(N' → logprob: -20.504077911376953
    10. ' ' → logprob: -20.629077911376953

Token 238: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.14274129271507263
    2. '+' → logprob: -2.0177412033081055
    3. ' +
' → logprob: -10.392741203308105
    4. '+
' → logprob: -11.267741203308105
    5. ' ' → logprob: -11.642741203308105
    6. '
' → logprob: -12.017741203308105
    7. ' plus' → logprob: -13.267741203308105
    8. ')' → logprob: -13.642741203308105
    9. ' ' → logprob: -14.017741203308105
    10. 'forward' → logprob: -14.267741203308105

Token 239: ' forward' (ID: 6687)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.9085874557495117
    2. '(for' → logprob: -0.9085874557495117
    3. 'forward' → logprob: -2.0335874557495117
    4. ' forward' → logprob: -3.2835874557495117
    5. '(max' → logprob: -3.9085874557495117
    6. '(back' → logprob: -5.658587455749512
    7. 'back' → logprob: -7.158587455749512
    8. '(' → logprob: -8.033587455749512
    9. 'max' → logprob: -8.033587455749512
    10. ' ' → logprob: -9.408587455749512

Token 240: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -1.3902033970225602e-05
    2. 'distance' → logprob: -11.375014305114746
    3. '_' → logprob: -13.750014305114746
    4. '_dist' → logprob: -14.000014305114746
    5. ' _' → logprob: -15.375014305114746
    6. '_direction' → logprob: -16.25001335144043
    7. '_d' → logprob: -16.37501335144043
    8. '_cost' → logprob: -17.12501335144043
    9. '_difference' → logprob: -17.50001335144043
    10. '_length' → logprob: -18.37501335144043

Token 241: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.012369437143206596
    2. '  
' → logprob: -6.262369632720947
    3. '\n' → logprob: -6.262369632720947
    4. '+' → logprob: -6.512369632720947
    5. '
' → logprob: -6.512369632720947
    6. '+
' → logprob: -6.637369632720947
    7. 'cost' → logprob: -6.637369632720947
    8. ' 
' → logprob: -7.012369632720947
    9. '' → logprob: -7.637369632720947
    10. '<|end|>' → logprob: -8.012369155883789

Token 242: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12932203710079193
    2. 'cost' → logprob: -3.004322052001953
    3. '+' → logprob: -3.879322052001953
    4. ')' → logprob: -4.879322052001953
    5. '\n' → logprob: -4.879322052001953
    6. '<|end|>' → logprob: -5.129322052001953
    7. '+
' → logprob: -5.504322052001953
    8. '#' → logprob: -5.504322052001953
    9. '\' → logprob: -5.629322052001953
    10. '
' → logprob: -5.629322052001953

Token 243: ' ' (ID: 220)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.07315100729465485
    2. '#' → logprob: -3.073151111602783
    3. '2' → logprob: -4.323151111602783
    4. ' cost' → logprob: -5.073151111602783
    5. '
' → logprob: -5.823151111602783
    6. '1' → logprob: -6.698151111602783
    7. ' ' → logprob: -8.448150634765625
    8. ' #' → logprob: -8.573150634765625
    9. '0' → logprob: -10.573150634765625
    10. ' 
' → logprob: -10.823150634765625

Token 244: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.02915334887802601
    2. '#' → logprob: -3.779153347015381
    3. 'cost' → logprob: -5.279153347015381
    4. '1' → logprob: -7.779153347015381
    5. ' ' → logprob: -8.529153823852539
    6. '(' → logprob: -9.154153823852539
    7. '
' → logprob: -11.279153823852539
    8. 'p' → logprob: -11.279153823852539
    9. ' cost' → logprob: -11.404153823852539
    10. '0' → logprob: -11.404153823852539

Token 245: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.002940382808446884
    2. ' .' → logprob: -6.2529401779174805
    3. ' =' → logprob: -7.0029401779174805
    4. '=' → logprob: -9.75294017791748
    5. ':' → logprob: -11.62794017791748
    6. ',' → logprob: -11.75294017791748
    7. ' (' → logprob: -12.25294017791748
    8. ')' → logprob: -12.37794017791748
    9. '.
' → logprob: -12.37794017791748
    10. '2' → logprob: -12.75294017791748

Token 246: ' Aller' (ID: 179307)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4338093101978302
    2. '(p' → logprob: -1.0588092803955078
    3. 'cost' → logprob: -5.558809280395508
    4. ' cost' → logprob: -7.808809280395508
    5. '(cost' → logprob: -7.933809280395508
    6. ' ' → logprob: -8.433809280395508
    7. '(' → logprob: -8.808809280395508
    8. '(go' → logprob: -10.433809280395508
    9. '(max' → logprob: -11.308809280395508
    10. ' ' → logprob: -11.308809280395508

Token 247: ' du' (ID: 1462)
  Prédit: ' du'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' du' → logprob: -0.16181683540344238
    2. 'du' → logprob: -1.9118168354034424
    3. 'from' → logprob: -7.411816596984863
    4. '(p' → logprob: -7.786816596984863
    5. ' from' → logprob: -8.536816596984863
    6. ' ' → logprob: -8.661816596984863
    7. ' (' → logprob: -8.911816596984863
    8. ' ' → logprob: -11.036816596984863
    9. ' p' → logprob: -11.536816596984863
    10. ' de' → logprob: -12.036816596984863

Token 248: ' point' (ID: 2438)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.01225368957966566
    2. ' max' → logprob: -4.512253761291504
    3. '(max' → logprob: -6.887253761291504
    4. 'p' → logprob: -8.762253761291504
    5. 'min' → logprob: -11.512253761291504
    6. ' p' → logprob: -12.262253761291504
    7. '[max' → logprob: -12.387253761291504
    8. '(p' → logprob: -12.762253761291504
    9. ' (' → logprob: -13.137253761291504
    10. '(' → logprob: -14.262253761291504

Token 249: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5288803577423096
    2. 'max' → logprob: -1.6538803577423096
    3. ' p' → logprob: -2.1538803577423096
    4. ' max' → logprob: -2.2788803577423096
    5. '(max' → logprob: -7.4038801193237305
    6. ' ' → logprob: -9.15388011932373
    7. 'min' → logprob: -9.52888011932373
    8. ' min' → logprob: -9.65388011932373
    9. ' (' → logprob: -10.02888011932373
    10. '[max' → logprob: -10.90388011932373

Token 250: ' vers' (ID: 3640)
  Prédit: ' vers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vers' → logprob: -0.05142507702112198
    2. ' à' → logprob: -3.801424980163574
    3. ' ' → logprob: -4.301424980163574
    4. 'vers' → logprob: -4.801424980163574
    5. ' to' → logprob: -6.551424980163574
    6. ' ' → logprob: -7.051424980163574
    7. ' -' → logprob: -7.051424980163574
    8. 'à' → logprob: -7.426424980163574
    9. ' towards' → logprob: -7.926424980163574
    10. 't' → logprob: -8.301424980163574

Token 251: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.16867032647132874
    2. 'max' → logprob: -1.9186702966690063
    3. '(max' → logprob: -4.918670177459717
    4. ' (' → logprob: -6.918670177459717
    5. '(' → logprob: -10.043670654296875
    6. ' ' → logprob: -10.293670654296875
    7. ' min' → logprob: -10.793670654296875
    8. 'min' → logprob: -12.668670654296875
    9. ' ' → logprob: -12.793670654296875
    10. '	max' → logprob: -13.168670654296875

Token 252: '_station' (ID: 110769)
  Prédit: '_station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_station' → logprob: -1.6240566083070007e-06
    2. '_' → logprob: -13.875001907348633
    3. 'Station' → logprob: -14.500001907348633
    4. 'station' → logprob: -16.000001907348633
    5. '_sta' → logprob: -17.250001907348633
    6. ' Station' → logprob: -18.500001907348633
    7. ' _' → logprob: -18.500001907348633
    8. '_s' → logprob: -19.000001907348633
    9. '_staff' → logprob: -19.625001907348633
    10. '(' → logprob: -19.625001907348633

Token 253: ' puis' (ID: 18766)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06137692555785179
    2. ' +' → logprob: -3.0613768100738525
    3. ' )' → logprob: -5.311377048492432
    4. ')+' → logprob: -5.811377048492432
    5. '+' → logprob: -6.436377048492432
    6. ',' → logprob: -7.186377048492432
    7. ' (' → logprob: -7.936377048492432
    8. ')%' → logprob: -8.061376571655273
    9. ' plus' → logprob: -8.436376571655273
    10. ' then' → logprob: -8.686376571655273

Token 254: ' couvrir' (ID: 197187)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.7659910917282104
    2. ' (' → logprob: -0.8909910917282104
    3. ' couvrir' → logprob: -3.2659912109375
    4. 'cover' → logprob: -3.8909912109375
    5. '(' → logprob: -4.0159912109375
    6. '((' → logprob: -4.1409912109375
    7. ' ((' → logprob: -4.5159912109375
    8. ' cover' → logprob: -5.5159912109375
    9. ' covering' → logprob: -5.8909912109375
    10. ' backward' → logprob: -6.2659912109375

Token 255: ' jusqu' (ID: 21961)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.03757419064640999
    2. '(max' → logprob: -3.912574291229248
    3. ' jusqu' → logprob: -4.662574291229248
    4. '(' → logprob: -6.037574291229248
    5. '(p' → logprob: -7.162574291229248
    6. ' le' → logprob: -7.412574291229248
    7. ' ' → logprob: -7.662574291229248
    8. 'le' → logprob: -7.787574291229248
    9. 'max' → logprob: -7.787574291229248
    10. ' backward' → logprob: -8.41257381439209

Token 256: ''à' (ID: 33688)
  Prédit: ''à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''à' → logprob: -0.03603828325867653
    2. ''au' → logprob: -3.661038398742676
    3. '’à' → logprob: -5.161038398742676
    4. 'à' → logprob: -6.536038398742676
    5. '#' → logprob: -6.661038398742676
    6. '=' → logprob: -7.536038398742676
    7. 'au' → logprob: -7.911038398742676
    8. '’au' → logprob: -8.786038398742676
    9. '_' → logprob: -9.536038398742676
    10. ' à' → logprob: -10.911038398742676

Token 257: ' min' (ID: 1349)
  Prédit: ' min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.08771024644374847
    2. '(min' → logprob: -3.21271014213562
    3. 'min' → logprob: -3.46271014213562
    4. ' (' → logprob: -4.587710380554199
    5. ' ' → logprob: -6.337710380554199
    6. '(' → logprob: -7.962710380554199
    7. ' max' → logprob: -10.2127103805542
    8. '	min' → logprob: -11.4627103805542
    9. '[min' → logprob: -11.7127103805542
    10. '(max' → logprob: -11.9627103805542

Token 258: '_station' (ID: 110769)
  Prédit: '_station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_station' → logprob: -4.60414821645827e-06
    2. '_' → logprob: -13.625004768371582
    3. 'Station' → logprob: -14.000004768371582
    4. 'station' → logprob: -14.125004768371582
    5. '(_' → logprob: -14.625004768371582
    6. '```' → logprob: -15.375004768371582
    7. '(' → logprob: -15.500004768371582
    8. '(max' → logprob: -15.625004768371582
    9. '-_' → logprob: -15.875004768371582
    10. ' _' → logprob: -16.125003814697266

Token 259: ' (' (ID: 350)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.7425155639648438
    2. ' (' → logprob: -1.8675155639648438
    3. ' +' → logprob: -2.1175155639648438
    4. ' =' → logprob: -2.1175155639648438
    5. ' cost' → logprob: -2.2425155639648438
    6. '+' → logprob: -5.242515563964844
    7. '(cost' → logprob: -5.242515563964844
    8. '=' → logprob: -5.242515563964844
    9. ')' → logprob: -6.117515563964844
    10. ',' → logprob: -6.492515563964844

Token 260: 'dans' (ID: 108151)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1257091611623764
    2. ' dans' → logprob: -2.875709056854248
    3. 'dans' → logprob: -3.375709056854248
    4. '(p' → logprob: -4.125709056854248
    5. ' N' → logprob: -6.000709056854248
    6. ')' → logprob: -6.125709056854248
    7. '(N' → logprob: -6.750709056854248
    8. 'N' → logprob: -6.875709056854248
    9. 'p' → logprob: -7.500709056854248
    10. ' p' → logprob: -7.500709056854248

Token 261: ' le' (ID: 505)
  Prédit: 'le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'le' → logprob: -0.15486325323581696
    2. ' le' → logprob: -2.1548633575439453
    3. 'p' → logprob: -4.654863357543945
    4. 'the' → logprob: -5.404863357543945
    5. ' p' → logprob: -5.904863357543945
    6. ' (' → logprob: -5.904863357543945
    7. 'l' → logprob: -6.029863357543945
    8. '(p' → logprob: -6.279863357543945
    9. 'N' → logprob: -6.779863357543945
    10. '(N' → logprob: -7.279863357543945

Token 262: ' sens' (ID: 5050)
  Prédit: 'sens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sens' → logprob: -0.04402386024594307
    2. ' sens' → logprob: -3.1690237522125244
    3. 'sense' → logprob: -7.1690239906311035
    4. 's' → logprob: -8.919023513793945
    5. 'sent' → logprob: -9.669023513793945
    6. 'N' → logprob: -11.044023513793945
    7. ' (' → logprob: -12.044023513793945
    8. '```' → logprob: -12.294023513793945
    9. ' sense' → logprob: -12.419023513793945
    10. ' sentido' → logprob: -12.669023513793945

Token 263: ' décro' (ID: 176854)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.004423113074153662
    2. ' décro' → logprob: -6.754423141479492
    3. 'dec' → logprob: -7.254423141479492
    4. ' décr' → logprob: -7.504423141479492
    5. '   ' → logprob: -7.754423141479492
    6. 'de' → logprob: -8.004423141479492
    7. 'desc' → logprob: -9.004423141479492
    8. '`' → logprob: -9.004423141479492
    9. 'dé' → logprob: -9.004423141479492
    10. '1' → logprob: -9.129423141479492

Token 264: 'issant' (ID: 31359)
  Prédit: 'issant'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'issant' → logprob: -0.003615751164034009
    2. 'iss' → logprob: -6.628615856170654
    3. 'issa' → logprob: -6.753615856170654
    4. 'issent' → logprob: -7.378615856170654
    5. 'ss' → logprob: -8.628615379333496
    6. '#' → logprob: -9.128615379333496
    7. ' iss' → logprob: -9.753615379333496
    8. 'is' → logprob: -9.878615379333496
    9. 'issing' → logprob: -11.128615379333496
    10. 'issan' → logprob: -11.253615379333496

Token 265: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003270023735240102
    2. ' )' → logprob: -8.125327110290527
    3. ')
' → logprob: -10.625327110290527
    4. 'cost' → logprob: -13.750327110290527
    5. ')+' → logprob: -13.875327110290527
    6. '+' → logprob: -14.250327110290527
    7. ' ' → logprob: -14.500327110290527
    8. '))' → logprob: -14.625327110290527
    9. ' +' → logprob: -15.000327110290527
    10. '")' → logprob: -15.125327110290527

Token 266: 'cost' (ID: 33457)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.22288993000984192
    2. '(p' → logprob: -2.4728899002075195
    3. 'cost' → logprob: -2.7228899002075195
    4. ' +' → logprob: -3.8478899002075195
    5. '(cost' → logprob: -4.4728899002075195
    6. '((' → logprob: -5.2228899002075195
    7. '(' → logprob: -5.3478899002075195
    8. ' cost' → logprob: -5.7228899002075195
    9. '+' → logprob: -6.2228899002075195
    10. ' ((' → logprob: -7.0978899002075195

Token 267: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '
' → logprob: -17.5
    3. ' ' → logprob: -17.75
    4. '_' → logprob: -19.25
    5. '

' → logprob: -19.25
    6. '２' → logprob: -19.25
    7. ' =' → logprob: -19.25
    8. '₂' → logprob: -19.375
    9. '۲' → logprob: -20.125
    10. '=' → logprob: -20.75

Token 268: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269282102584839
    2. '=' → logprob: -2.1269283294677734
    3. ' =(' → logprob: -17.251928329467773
    4. ' ' → logprob: -17.501928329467773
    5. ',' → logprob: -17.751928329467773
    6. ' ' → logprob: -18.126928329467773
    7. '＝' → logprob: -18.251928329467773
    8. ')' → logprob: -18.376928329467773
    9. 's' → logprob: -18.751928329467773
    10. '>' → logprob: -20.001928329467773

Token 269: ' (' (ID: 350)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.019836248829960823
    2. ' (' → logprob: -4.64483642578125
    3. '(min' → logprob: -4.64483642578125
    4. '(p' → logprob: -8.64483642578125
    5. '(' → logprob: -9.01983642578125
    6. '(abs' → logprob: -9.76983642578125
    7. '   ' → logprob: -10.89483642578125
    8. ' ' → logprob: -10.89483642578125
    9. '((' → logprob: -11.51983642578125
    10. '(back' → logprob: -12.64483642578125

Token 270: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.4752289950847626
    2. '(max' → logprob: -0.975229024887085
    3. ' max' → logprob: -7.350228786468506
    4. ' (' → logprob: -8.975229263305664
    5. '(p' → logprob: -8.975229263305664
    6. 'p' → logprob: -9.225229263305664
    7. '(min' → logprob: -10.100229263305664
    8. '(' → logprob: -10.100229263305664
    9. 'min' → logprob: -10.600229263305664
    10. '[max' → logprob: -11.725229263305664

Token 271: '_station' (ID: 110769)
  Prédit: '_station'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_station' → logprob: -2.7133641196996905e-05
    2. '_' → logprob: -10.62502670288086
    3. 'Station' → logprob: -13.50002670288086
    4. ' _' → logprob: -14.37502670288086
    5. 'station' → logprob: -14.37502670288086
    6. '_sta' → logprob: -16.25002670288086
    7. '_s' → logprob: -17.62502670288086
    8. '_stat' → logprob: -17.87502670288086
    9. ' station' → logprob: -18.12502670288086
    10. '_staff' → logprob: -18.75002670288086

Token 272: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.03804194927215576
    2. '-' → logprob: -3.2880420684814453
    3. ' ' → logprob: -15.413042068481445
    4. '-p' → logprob: -15.538042068481445
    5. ' ' → logprob: -17.538042068481445
    6. 'p' → logprob: -18.038042068481445
    7. ',' → logprob: -18.163042068481445
    8. ')' → logprob: -18.538042068481445
    9. '+' → logprob: -18.913042068481445
    10. ' p' → logprob: -19.913042068481445

Token 273: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.12701177597045898
    2. ' p' → logprob: -2.127011775970459
    3. '(p' → logprob: -9.627012252807617
    4. ' (' → logprob: -11.002012252807617
    5. ')' → logprob: -15.002012252807617
    6. ')p' → logprob: -15.377012252807617
    7. '(' → logprob: -15.627012252807617
    8. '	p' → logprob: -16.377012252807617
    9. '_p' → logprob: -16.502012252807617
    10. ' ' → logprob: -16.627012252807617

Token 274: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.5577775128767826e-06
    2. ' )' → logprob: -12.125005722045898
    3. '+' → logprob: -17.8750057220459
    4. ')%' → logprob: -17.8750057220459
    5. '`)' → logprob: -18.7500057220459
    6. '）' → logprob: -19.6250057220459
    7. '}' → logprob: -19.8750057220459
    8. ' ' → logprob: -20.0000057220459
    9. ' +' → logprob: -20.1250057220459
    10. ' ' → logprob: -20.1250057220459

Token 275: ' %' (ID: 1851)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '%' → logprob: -0.4462631344795227
    2. ' %' → logprob: -1.071263074874878
    3. ')' → logprob: -4.071263313293457
    4. ')%' → logprob: -8.071263313293457
    5. ' )' → logprob: -11.196263313293457
    6. '```' → logprob: -11.696263313293457
    7. '%D' → logprob: -12.821263313293457
    8. ' ' → logprob: -12.946263313293457
    9. ' ' → logprob: -13.196263313293457
    10. '%n' → logprob: -13.321263313293457

Token 276: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.01814994215965271
    2. ' N' → logprob: -4.0181498527526855
    3. ' ' → logprob: -17.018150329589844
    4. ' ' → logprob: -17.268150329589844
    5. '	N' → logprob: -18.393150329589844
    6. '```' → logprob: -18.893150329589844
    7. 'n' → logprob: -19.768150329589844
    8. '   ' → logprob: -19.893150329589844
    9. '`' → logprob: -20.143150329589844
    10. '
' → logprob: -20.768150329589844

Token 277: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.25192928314208984
    2. '+' → logprob: -1.5019292831420898
    3. ' ' → logprob: -16.751930236816406
    4. ' ' → logprob: -17.001930236816406
    5. ' +
' → logprob: -17.126930236816406
    6. '+
' → logprob: -17.251930236816406
    7. ' plus' → logprob: -18.001930236816406
    8. '+b' → logprob: -18.126930236816406
    9. '＋' → logprob: -18.626930236816406
    10. '+c' → logprob: -20.251930236816406

Token 278: ' backward' (ID: 58986)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'back' → logprob: -0.0015034328680485487
    2. ' backward' → logprob: -6.5015034675598145
    3. ' back' → logprob: -14.001502990722656
    4. '.backward' → logprob: -16.376502990722656
    5. '   ' → logprob: -16.876502990722656
    6. ' ' → logprob: -16.876502990722656
    7. '(back' → logprob: -17.001502990722656
    8. 'Backward' → logprob: -17.876502990722656
    9. '_backward' → logprob: -18.001502990722656
    10. 'forward' → logprob: -18.251502990722656

Token 279: '_distance' (ID: 45537)
  Prédit: '_distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_distance' → logprob: -2.8921695047756657e-05
    2. 'distance' → logprob: -10.500028610229492
    3. '_' → logprob: -14.875028610229492
    4. '_direction' → logprob: -15.250028610229492
    5. '_difference' → logprob: -15.375028610229492
    6. ' _' → logprob: -15.875028610229492
    7. '_dist' → logprob: -16.250028610229492
    8. '_backward' → logprob: -16.375028610229492
    9. '_cost' → logprob: -16.875028610229492
    10. '\' → logprob: -17.375028610229492

Token 280: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.26234230399131775
    2. 'result' → logprob: -2.2623422145843506
    3. 'min' → logprob: -2.7623422145843506
    4. 'answer' → logprob: -3.2623422145843506
    5. 'cost' → logprob: -4.01234245300293
    6. 'minimal' → logprob: -5.88734245300293
    7. '
' → logprob: -6.38734245300293
    8. 'minimum' → logprob: -6.76234245300293
    9. 'ans' → logprob: -7.26234245300293
    10. '#' → logprob: -7.88734245300293

Token 281: '#' (ID: 2)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.016179826110601425
    2. 'min' → logprob: -4.641180038452148
    3. 'result' → logprob: -5.266180038452148
    4. 'cost' → logprob: -7.141180038452148
    5. 'minimal' → logprob: -8.516180038452148
    6. 'answer' → logprob: -9.141180038452148
    7. '
' → logprob: -10.016180038452148
    8. ' print' → logprob: -10.266180038452148
    9. 'minimum' → logprob: -10.891180038452148
    10. 'optimal' → logprob: -11.391180038452148

Token 282: ' Le' (ID: 2018)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.027049310505390167
    2. 'result' → logprob: -3.7770493030548096
    3. 'answer' → logprob: -6.027049541473389
    4. 'min' → logprob: -7.402049541473389
    5. 'ans' → logprob: -8.15204906463623
    6. 'cost' → logprob: -8.40204906463623
    7. 'minimal' → logprob: -9.65204906463623
    8. '#' → logprob: -9.90204906463623
    9. 'minimum' → logprob: -10.02704906463623
    10. ' print' → logprob: -10.27704906463623

Token 283: ' coût' (ID: 73109)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.496610164642334
    2. 'min' → logprob: -1.121610164642334
    3. 'result' → logprob: -3.746610164642334
    4. ' cost' → logprob: -3.871610164642334
    5. 'print' → logprob: -5.246610164642334
    6. 'minimum' → logprob: -5.746610164642334
    7. 'cout' → logprob: -5.871610164642334
    8. ' min' → logprob: -5.996610164642334
    9. 'minimal' → logprob: -6.121610164642334
    10. 'answer' → logprob: -6.121610164642334

Token 284: ' minimal' (ID: 19957)
  Prédit: 'minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'minimal' → logprob: -0.1041463166475296
    2. 'min' → logprob: -2.6041462421417236
    3. ' minimal' → logprob: -4.854146480560303
    4. 'minimum' → logprob: -5.104146480560303
    5. '=' → logprob: -5.479146480560303
    6. '_min' → logprob: -5.479146480560303
    7. ' =' → logprob: -6.479146480560303
    8. 'final' → logprob: -6.979146480560303
    9. 'optimal' → logprob: -8.479146003723145
    10. '=min' → logprob: -10.604146003723145

Token 285: ' est' (ID: 893)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16637489199638367
    2. '=' → logprob: -1.916374921798706
    3. 'min' → logprob: -6.041374683380127
    4. 'cost' → logprob: -6.291374683380127
    5. '=min' → logprob: -6.541374683380127
    6. 'minimum' → logprob: -8.666375160217285
    7. '=
' → logprob: -9.791375160217285
    8. ' =
' → logprob: -10.041375160217285
    9. 'print' → logprob: -10.041375160217285
    10. '
' → logprob: -10.416375160217285

Token 286: ' le' (ID: 505)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.011047935113310814
    2. ' min' → logprob: -4.511047840118408
    3. '	min' → logprob: -17.13604736328125
    4. '=min' → logprob: -17.26104736328125
    5. '(min' → logprob: -17.38604736328125
    6. 'minimum' → logprob: -18.51104736328125
    7. 'max' → logprob: -19.13604736328125
    8. '[min' → logprob: -19.13604736328125
    9. 'mi' → logprob: -19.38604736328125
    10. 'mini' → logprob: -19.51104736328125

Token 287: ' minimum' (ID: 11085)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.004091458860784769
    2. ' min' → logprob: -5.504091262817383
    3. 'minimum' → logprob: -11.379091262817383
    4. ' minimum' → logprob: -13.629091262817383
    5. '=min' → logprob: -16.254091262817383
    6. 'mi' → logprob: -16.754091262817383
    7. 'minimal' → logprob: -16.754091262817383
    8. '	min' → logprob: -16.879091262817383
    9. 'max' → logprob: -17.129091262817383
    10. '(min' → logprob: -18.004091262817383

Token 288: ' entre' (ID: 3853)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.8633825778961182
    2. 'min' → logprob: -1.3633825778961182
    3. '(min' → logprob: -1.7383825778961182
    4. '(cost' → logprob: -1.9883825778961182
    5. '(' → logprob: -5.488382339477539
    6. 'of' → logprob: -6.363382339477539
    7. '(co' → logprob: -6.613382339477539
    8. 'print' → logprob: -8.113382339477539
    9. '=min' → logprob: -8.113382339477539
    10. 'between' → logprob: -8.238382339477539

Token 289: ' ces' (ID: 10532)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -4.11996734328568e-05
    2. ' cost' → logprob: -10.750041007995605
    3. 'min' → logprob: -11.000041007995605
    4. '(cost' → logprob: -12.875041007995605
    5. 'co' → logprob: -14.750041007995605
    6. 'cos' → logprob: -17.375041961669922
    7. '
' → logprob: -18.375041961669922
    8. '```' → logprob: -18.500041961669922
    9. 'c' → logprob: -19.375041961669922
    10. ' min' → logprob: -19.375041961669922

Token 290: ' deux' (ID: 10301)
  Prédit: 'de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -0.6355977654457092
    2. 'cost' → logprob: -1.0105977058410645
    3. '2' → logprob: -2.7605977058410645
    4. 'co' → logprob: -3.5105977058410645
    5. ' deux' → logprob: -4.7605977058410645
    6. 'two' → logprob: -6.0105977058410645
    7. '(cost' → logprob: -7.7605977058410645
    8. ' cost' → logprob: -7.8855977058410645
    9. ' two' → logprob: -8.010598182678223
    10. 'cout' → logprob: -8.760598182678223

Token 291: ' stratégies' (ID: 167350)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.04944559931755066
    2. 'min' → logprob: -3.299445629119873
    3. '_cost' → logprob: -5.049445629119873
    4. '(min' → logprob: -6.424445629119873
    5. 'co' → logprob: -6.799445629119873
    6. '(cost' → logprob: -6.799445629119873
    7. '
' → logprob: -8.049445152282715
    8. '(' → logprob: -8.424445152282715
    9. '(
' → logprob: -8.924445152282715
    10. '_co' → logprob: -9.674445152282715

Token 292: ',' (ID: 11)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7811933159828186
    2. 'print' → logprob: -0.9061933159828186
    3. 'cost' → logprob: -2.656193256378174
    4. 'result' → logprob: -3.281193256378174
    5. '
' → logprob: -3.781193256378174
    6. 'answer' → logprob: -5.781193256378174
    7. 'minimal' → logprob: -6.156193256378174
    8. 'minimum' → logprob: -6.656193256378174
    9. 'ans' → logprob: -7.281193256378174
    10. 'res' → logprob: -9.781193733215332

Token 293: ' multip' (ID: 17524)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.11065293848514557
    2. 'cost' → logprob: -2.7356529235839844
    3. 'print' → logprob: -3.6106529235839844
    4. 'result' → logprob: -4.485652923583984
    5. ' min' → logprob: -7.610652923583984
    6. 'answer' → logprob: -7.860652923583984
    7. '
' → logprob: -8.735652923583984
    8. 'minimal' → logprob: -8.860652923583984
    9. 'ans' → logprob: -9.110652923583984
    10. 'minimum' → logprob: -9.360652923583984

Token 294: 'lié' (ID: 102412)
  Prédit: 'lié'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lié' → logprob: -0.04309568181633949
    2. 'lic' → logprob: -3.793095588684082
    3. 'li' → logprob: -4.918095588684082
    4. 'ip' → logprob: -5.918095588684082
    5. '*' → logprob: -6.168095588684082
    6. 'lied' → logprob: -6.793095588684082
    7. 'lication' → logprob: -7.293095588684082
    8. 'lé' → logprob: -7.793095588684082
    9. 'iqué' → logprob: -7.793095588684082
    10. 'ic' → logprob: -7.918095588684082

Token 295: ' par' (ID: 686)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.12822462618350983
    2. '(' → logprob: -3.1282246112823486
    3. ' par' → logprob: -3.7532246112823486
    4. 'by' → logprob: -4.503224849700928
    5. '10' → logprob: -4.753224849700928
    6. '<|end|>' → logprob: -5.128224849700928
    7. '*' → logprob: -5.253224849700928
    8. ')' → logprob: -5.753224849700928
    9. '(N' → logprob: -5.753224849700928
    10. ' ' → logprob: -6.003224849700928

Token 296: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.25796809792518616
    2. '2' → logprob: -1.6329680681228638
    3. '100' → logprob: -4.257967948913574
    4. ' ' → logprob: -4.507967948913574
    5. '10' → logprob: -5.382967948913574
    6. 'M' → logprob: -8.132967948913574
    7. '3' → logprob: -8.382967948913574
    8. '5' → logprob: -8.507967948913574
    9. '4' → logprob: -8.882967948913574
    10. '200' → logprob: -9.007967948913574

Token 297: '100' (ID: 1353)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5318379402160645
    2. '2' → logprob: -0.9068379402160645
    3. '100' → logprob: -5.6568379402160645
    4. '10' → logprob: -5.9068379402160645
    5. ' ' → logprob: -7.2818379402160645
    6. '5' → logprob: -8.156837463378906
    7. 'cost' → logprob: -8.531837463378906
    8. '3' → logprob: -8.531837463378906
    9. '0' → logprob: -8.781837463378906
    10. 'a' → logprob: -9.031837463378906

Token 298: ' y' (ID: 342)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6353525519371033
    2. 'cost' → logprob: -1.260352611541748
    3. 'min' → logprob: -2.260352611541748
    4. 'result' → logprob: -2.760352611541748
    5. '
' → logprob: -4.260352611541748
    6. 'answer' → logprob: -6.135352611541748
    7. 'minimum' → logprob: -6.385352611541748
    8. 'minimal' → logprob: -8.13535213470459
    9. 'total' → logprob: -8.63535213470459
    10. 'cout' → logprob: -9.01035213470459

Token 299: 'ens' (ID: 696)
  Prédit: 'ield'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ield' → logprob: -0.13063468039035797
    2. 'ields' → logprob: -2.2556347846984863
    3. 'iel' → logprob: -5.130634784698486
    4. 'our' → logprob: -5.880634784698486
    5. 'e' → logprob: -6.130634784698486
    6. 'eux' → logprob: -7.005634784698486
    7. 'et' → logprob: -7.630634784698486
    8. 'eld' → logprob: -7.630634784698486
    9. '```' → logprob: -7.630634784698486
    10. '0' → logprob: -7.880634784698486

Token 300: ' par' (ID: 686)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9137129187583923
    2. 'min' → logprob: -1.288712978363037
    3. 'result' → logprob: -2.163712978363037
    4. 'cost' → logprob: -2.163712978363037
    5. 'print' → logprob: -2.788712978363037
    6. 'answer' → logprob: -3.788712978363037
    7. 'minimum' → logprob: -5.663712978363037
    8. 'ans' → logprob: -5.913712978363037
    9. 'minimal' → logprob: -6.913712978363037
    10. '
' → logprob: -7.538712978363037

Token 301: ' station' (ID: 11538)
  Prédit: ' unité'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' unité' → logprob: -0.6293603181838989
    2. 'kil' → logprob: -1.879360318183899
    3. ' kilom' → logprob: -2.2543601989746094
    4. 'distance' → logprob: -3.0043601989746094
    5. 'unit' → logprob: -3.1293601989746094
    6. 'un' → logprob: -3.2543601989746094
    7. 'km' → logprob: -3.8793601989746094
    8. ' distance' → logprob: -4.379360198974609
    9. 'station' → logprob: -5.004360198974609
    10. ' unit' → logprob: -5.004360198974609

Token 302: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04296870902180672
    2. 'min' → logprob: -3.79296875
    3. 'result' → logprob: -4.79296875
    4. 'cost' → logprob: -4.91796875
    5. 'answer' → logprob: -7.04296875
    6. 'print' → logprob: -7.16796875
    7. '
' → logprob: -7.29296875
    8. 'minimum' → logprob: -7.41796875
    9. 'minimal' → logprob: -8.04296875
    10. 'final' → logprob: -8.16796875

Token 303: 'min' (ID: 1493)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7347970604896545
    2. '
' → logprob: -1.6097970008850098
    3. 'cost' → logprob: -2.1097970008850098
    4. 'result' → logprob: -2.3597970008850098
    5. 'min' → logprob: -2.3597970008850098
    6. 'answer' → logprob: -4.98479700088501
    7. 'minimum' → logprob: -6.98479700088501
    8. 'total' → logprob: -7.23479700088501
    9. 'cout' → logprob: -7.73479700088501
    10. 'minimal' → logprob: -7.73479700088501

Token 304: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -0.0020592615474015474
    2. '_' → logprob: -6.252059459686279
    3. '_distance' → logprob: -9.252058982849121
    4. '_val' → logprob: -11.002058982849121
    5. '_co' → logprob: -11.752058982849121
    6. '_station' → logprob: -13.127058982849121
    7. '_dist' → logprob: -13.252058982849121
    8. '_price' → logprob: -13.627058982849121
    9. 'cost' → logprob: -13.752058982849121
    10. ' _' → logprob: -13.877058982849121

Token 305: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3137856721878052
    2. '=' → logprob: -1.3137856721878052
    3. '_' → logprob: -7.563785552978516
    4. ' ' → logprob: -13.688785552978516
    5. '_=' → logprob: -13.688785552978516
    6. 's' → logprob: -14.438785552978516
    7. '_cost' → logprob: -14.438785552978516
    8. ' ' → logprob: -14.938785552978516
    9. ' _' → logprob: -15.063785552978516
    10. '＝' → logprob: -15.813785552978516

Token 306: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.08323314785957336
    2. ' min' → logprob: -2.583233118057251
    3. '100' → logprob: -5.45823335647583
    4. ' ' → logprob: -9.583232879638672
    5. '(min' → logprob: -12.583232879638672
    6. '	min' → logprob: -15.833232879638672
    7. '   ' → logprob: -15.958232879638672
    8. 'minimum' → logprob: -15.958232879638672
    9. 'int' → logprob: -16.458232879638672
    10. 'max' → logprob: -16.958232879638672

Token 307: '(cost' (ID: 133554)
  Prédit: '(cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cost' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.125000953674316
    3. 'cost' → logprob: -15.375000953674316
    4. ' (' → logprob: -17.5
    5. '(
' → logprob: -18.125
    6. '(co' → logprob: -18.375
    7. '(c' → logprob: -18.5
    8. ' cost' → logprob: -18.625
    9. '(min' → logprob: -19.875
    10. '((' → logprob: -20.125

Token 308: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07026517391204834
    2. '(cost' → logprob: -2.695265293121338
    3. 'cost' → logprob: -8.19526481628418
    4. '(' → logprob: -10.32026481628418
    5. ' cost' → logprob: -11.19526481628418
    6. '_cost' → logprob: -13.07026481628418
    7. ')' → logprob: -13.57026481628418
    8. 's' → logprob: -14.57026481628418
    9. '(c' → logprob: -15.07026481628418
    10. ' (' → logprob: -15.19526481628418

Token 309: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009175319573841989
    2. ' ,' → logprob: -7.000917434692383
    3. ',min' → logprob: -12.500917434692383
    4. ',c' → logprob: -13.000917434692383
    5. ',
' → logprob: -17.125917434692383
    6. '2' → logprob: -18.125917434692383
    7. ',max' → logprob: -18.875917434692383
    8. ')' → logprob: -19.125917434692383
    9. '1' → logprob: -19.625917434692383
    10. ',num' → logprob: -19.625917434692383

Token 310: ' cost' (ID: 3097)
  Prédit: 'cost'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cost' → logprob: -0.25192928314208984
    2. ' cost' → logprob: -1.5019292831420898
    3. '(cost' → logprob: -15.87692928314209
    4. 'Cost' → logprob: -17.876930236816406
    5. '_cost' → logprob: -18.501930236816406
    6. ')' → logprob: -19.001930236816406
    7. ' ' → logprob: -19.001930236816406
    8. ' kost' → logprob: -19.126930236816406
    9. '
' → logprob: -19.376930236816406
    10. ' ' → logprob: -19.876930236816406

Token 311: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.45848218582978e-06
    2. ')' → logprob: -13.00000286102295
    3. ',' → logprob: -16.125001907348633
    4. 'cost' → logprob: -17.375001907348633
    5. '```' → logprob: -18.000001907348633
    6. '(' → logprob: -18.000001907348633
    7. '
' → logprob: -18.625001907348633
    8. '２' → logprob: -18.625001907348633
    9. '₂' → logprob: -18.625001907348633
    10. 'ex' → logprob: -18.750001907348633

Token 312: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006143859936855733
    2. ' *' → logprob: -8.000614166259766
    3. ' )' → logprob: -9.000614166259766
    4. '*' → logprob: -9.125614166259766
    5. ')*' → logprob: -10.000614166259766
    6. ' ' → logprob: -14.125614166259766
    7. ' ' → logprob: -14.875614166259766
    8. ']' → logprob: -16.500614166259766
    9. '   ' → logprob: -17.125614166259766
    10. '}' → logprob: -17.250614166259766

Token 313: ' *' (ID: 425)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.24799160659313202
    2. 'print' → logprob: -1.9979915618896484
    3. '*' → logprob: -2.4979915618896484
    4. ' print' → logprob: -7.247991561889648
    5. '
' → logprob: -7.497991561889648
    6. ' *' → logprob: -8.622991561889648
    7. '*
' → logprob: -9.247991561889648
    8. '100' → logprob: -9.247991561889648
    9. '```' → logprob: -9.497991561889648
    10. ' 
' → logprob: -11.122991561889648

Token 314: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.1602267622947693
    2. ' ' → logprob: -1.910226821899414
    3. ' ' → logprob: -12.910226821899414
    4. '```' → logprob: -17.035226821899414
    5. ' 
' → logprob: -17.285226821899414
    6. '１００' → logprob: -18.035226821899414
    7. '​' → logprob: -19.160226821899414
    8. '  ' → logprob: -19.285226821899414
    9. ' ' → logprob: -19.285226821899414
    10. '   ' → logprob: -19.410226821899414

Token 315: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '1' → logprob: -19.0
    4. '```' → logprob: -19.75
    5. '１００' → logprob: -20.125
    6. '10' → logprob: -20.625
    7. '
' → logprob: -21.125
    8. '   ' → logprob: -21.625
    9. '`' → logprob: -22.625
    10. '(' → logprob: -22.75

Token 316: '

' (ID: 279)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -1.2664456789934775e-06
    2. ' print' → logprob: -13.625000953674316
    3. '
' → logprob: -17.875001907348633
    4. '#print' → logprob: -19.250001907348633
    5. '-print' → logprob: -19.750001907348633
    6. '```' → logprob: -19.875001907348633
    7. '(print' → logprob: -20.375001907348633
    8. '.print' → logprob: -20.750001907348633
    9. '#' → logprob: -21.125001907348633
    10. 'prin' → logprob: -21.500001907348633

Token 317: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -5.796184723294573e-06
    2. ' print' → logprob: -12.375005722045898
    3. '
' → logprob: -13.375005722045898
    4. '#print' → logprob: -18.1250057220459
    5. '.print' → logprob: -18.8750057220459
    6. '```' → logprob: -19.0000057220459
    7. '(print' → logprob: -19.1250057220459
    8. '<|end|>' → logprob: -19.1250057220459
    9. '#' → logprob: -19.8750057220459
    10. '-print' → logprob: -20.1250057220459

Token 318: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.25193196535110474
    2. '(' → logprob: -1.50193190574646
    3. '(
' → logprob: -14.501932144165039
    4. '(f' → logprob: -14.626932144165039
    5. '(max' → logprob: -14.626932144165039
    6. '()' → logprob: -14.626932144165039
    7. '(m' → logprob: -15.501932144165039
    8. '("("' → logprob: -15.751932144165039
    9. '(

' → logprob: -15.876932144165039
    10. '('' → logprob: -16.12693214416504

Token 319: '_cost' (ID: 36820)
  Prédit: '_cost'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cost' → logprob: -4.320199877838604e-07
    2. ')' → logprob: -15.875
    3. 'cost' → logprob: -15.875
    4. '_co' → logprob: -17.875
    5. '_COST' → logprob: -17.875
    6. '_' → logprob: -18.25
    7. '_min' → logprob: -18.625
    8. '_)' → logprob: -19.0
    9. ')_' → logprob: -19.5
    10. '_c' → logprob: -19.625

Token 320: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ' )' → logprob: -13.500001907348633
    3. '))' → logprob: -18.125001907348633
    4. ')`' → logprob: -19.375001907348633
    5. ')
' → logprob: -19.750001907348633
    6. ')}' → logprob: -20.500001907348633
    7. '）' → logprob: -20.625001907348633
    8. ')#' → logprob: -20.750001907348633
    9. '()' → logprob: -21.125001907348633
    10. '}' → logprob: -21.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 318
Tokens correctement prédits (1ère position, stricte): 94
Tokens correctement prédits (1ère position, avec adaptation): 94
Tokens correctement prédits (top 10): 221
Précision stricte (1ère position): 29.56%
Précision adaptée (1ère position): 29.56%
Précision (top 10): 69.50%
================================================================================
