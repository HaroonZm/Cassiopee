================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:13:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from math import hypot, isclose

class Point:
    __slots__ = ('x', 'y')
    def __init__(self, x: float, y: float):
        self.x = x
        self.y = y
    def distance_to(self, other: 'Point') -> float:
        return hypot(self.x - other.x, self.y - other.y)
    def __repr__(self):
        return f"Point({self.x}, {self.y})"

class LineSegment:
    __slots__ = ('p1', 'p2')
    def __init__(self, p1: Point, p2: Point):
        self.p1 = p1
        self.p2 = p2
    def length(self) -> float:
        return self.p1.distance_to(self.p2)
    def distance_to_point(self, p: Point) -> float:
        # Compute distance from point p to this segment
        # Project point p onto the line, then clamp to segment ends
        vx, vy = self.p2.x - self.p1.x, self.p2.y - self.p1.y
        wx, wy = p.x - self.p1.x, p.y - self.p1.y
        c1 = vx*wx + vy*wy
        if c1 <= 0:
            return p.distance_to(self.p1)
        c2 = vx*vx + vy*vy
        if c2 <= c1:
            return p.distance_to(self.p2)
        b = c1 / c2
        pb = Point(self.p1.x + b*vx, self.p1.y + b*vy)
        return p.distance_to(pb)
    def __repr__(self):
        return f"LineSegment({self.p1}, {self.p2})"

class Laser:
    __slots__ = ('line', 'thickness')
    def __init__(self, p1: Point, p2: Point, thickness: float):
        self.line = LineSegment(p1, p2)
        self.thickness = thickness
    def safe_distance(self) -> float:
        # minimal distance from machine center to laser line is at least this
        # laser is a band with thickness, so half thickness margin plus machine radius
        return self.thickness/2
    def overlaps(self, c: Point, r: float) -> bool:
        # Returns True if circle with center c and radius r overlaps with laser
        dist = self.line.distance_to_point(c)
        # overlap if distance <= laser half thickness + r
        return dist <= (self.thickness/2 + r - 1e-12)
    def __repr__(self):
        return f"Laser({self.line}, thickness={self.thickness})"

class Screen:
    def __init__(self, width: int, height: int, radius: float):
        self.width = width
        self.height = height
        self.radius = radius
        self.lasers = []
    def add_laser(self, laser: Laser):
        self.lasers.append(laser)
    def _point_valid(self, point: Point) -> bool:
        # Check machine fits entirely inside screen
        return (self.radius <= point.x <= self.width - self.radius and
                self.radius <= point.y <= self.height - self.radius)
    def is_safe(self, point: Point) -> bool:
        if not self._point_valid(point):
            return False
        for laser in self.lasers:
            if laser.overlaps(point, self.radius):
                return False
        return True
    def has_safe_area(self) -> bool:
        # To solve this, we want to find any point in the rectangle,
        # distance >= radius from edges, that is not overlapping any laser zone.
        #
        # Observation: laser safe zone contour is union of (line band) thickened by half thickness+r.
        # Since lasers are few (N <= 100), perform a sampling grid with adaptive checks.
        #
        # But problem is that laser beams are infinite in length, covering entire screen.
        # So safe areas are bounded by laser bands covering the screen except gaps between them.
        #
        # Implement a quadtree-like recursive subdivision refinement.
        
        class QuadTreeNode:
            def __init__(self, x0, y0, x1, y1, depth):
                self.x0 = x0
                self.y0 = y0
                self.x1 = x1
                self.y1 = y1
                self.depth = depth
                self.covered = None  # None means unknown, True means no safe, False means safe area exists
            def corners(self):
                return [Point(self.x0, self.y0), Point(self.x1, self.y0),
                        Point(self.x0, self.y1), Point(self.x1, self.y1)]
            def center(self):
                return Point((self.x0+self.x1)/2, (self.y0+self.y1)/2)
            def size(self):
                return max(self.x1 - self.x0, self.y1 - self.y0)
        
        # check if all points in box are definitely covered or definitely free
        # first check center and corners, if all safe or all unsafe, conclude
        # else subdivide if depth allows
        #
        # minimal box size threshold set based on radius, to detect safe spots of radius size
        
        MIN_SIZE = self.radius/2
        MAX_DEPTH = 12
        
        def check_covered(node: QuadTreeNode) -> bool:
            # True if all covered (no safe area), False if any safe area detected
            # Return True means covered, no safe area in node boundary
            
            points_to_check = node.corners() + [node.center()]
            statuses = []
            for p in points_to_check:
                if not self._point_valid(p):
                    statuses.append(True)  # outside screen as covered => no safe
                    continue
                safe = self.is_safe(p)
                statuses.append(not safe)  # covered means not safe
            
            # if all points indicate covered => whole node covered
            if all(statuses):
                return True
            # if all points indicate safe => whole node safe => safe area exists
            if not any(statuses):
                return False
            
            # Mixed signals: subdivide if possible
            if node.depth >= MAX_DEPTH or node.size() < MIN_SIZE:
                # We can't subdivide anymore, pessimistically treat as covered
                return True
            
            mx = (node.x0 + node.x1)/2
            my = (node.y0 + node.y1)/2
            childs = [QuadTreeNode(node.x0, node.y0, mx, my, node.depth+1),
                      QuadTreeNode(mx, node.y0, node.x1, my, node.depth+1),
                      QuadTreeNode(node.x0, my, mx, node.y1, node.depth+1),
                      QuadTreeNode(mx, my, node.x1, node.y1, node.depth+1)]
            for child in childs:
                if not check_covered(child):
                    return False
            return True
        
        root = QuadTreeNode(self.radius, self.radius, self.width - self.radius, self.height - self.radius, 0)
        
        return not check_covered(root)

def parse_input():
    import sys
    for line in sys.stdin:
        if not line.strip():
            continue
        W, H, N, R = map(int, line.strip().split())
        if W == 0 and H == 0 and N == 0 and R == 0:
            break
        screen = Screen(W, H, R)
        for _ in range(N):
            coords = sys.stdin.readline().strip().split()
            x1, y1, x2, y2, t = map(int, coords)
            p1 = Point(x1, y1)
            p2 = Point(x2, y2)
            laser = Laser(p1, p2, t)
            screen.add_laser(laser)
        yield screen

def main():
    for screen in parse_input():
        print("Yes" if screen.has_safe_area() else "No")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' hypot' (ID: 85756)
  Prédit: 'sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sqrt' → logprob: -0.1960834264755249
    2. ' sqrt' → logprob: -1.946083426475525
    3. 'pow' → logprob: -4.1960835456848145
    4. 'pi' → logprob: -5.1960835456848145
    5. ' pi' → logprob: -5.3210835456848145
    6. 'sin' → logprob: -5.4460835456848145
    7. 'import' → logprob: -6.5710835456848145
    8. 'ceil' → logprob: -6.6960835456848145
    9. 'log' → logprob: -7.6960835456848145
    10. '```' → logprob: -7.9460835456848145

Token 4: ',' (ID: 11)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0004946522531099617
    2. '\(' → logprob: -8.250494956970215
    3. '(
' → logprob: -8.750494956970215
    4. ',' → logprob: -10.375494956970215
    5. ' (' → logprob: -11.250494956970215
    6. '\n' → logprob: -12.125494956970215
    7. '\' → logprob: -12.375494956970215
    8. 'a' → logprob: -12.375494956970215
    9. ''' → logprob: -13.375494956970215
    10. '(

' → logprob: -13.500494956970215

Token 5: ' is' (ID: 382)
  Prédit: 'atan'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'atan' → logprob: -0.024704398587346077
    2. 'sqrt' → logprob: -4.524704456329346
    3. 'is' → logprob: -5.149704456329346
    4. 'dist' → logprob: -5.899704456329346
    5. 'acos' → logprob: -6.649704456329346
    6. 'ceil' → logprob: -6.774704456329346
    7. ' atan' → logprob: -6.899704456329346
    8. 'sin' → logprob: -7.399704456329346
    9. 'pow' → logprob: -8.024703979492188
    10. 'pi' → logprob: -8.524703979492188

Token 6: 'close' (ID: 8722)
  Prédit: 'qrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'qrt' → logprob: -0.13086123764514923
    2. 'close' → logprob: -2.630861282348633
    3. 'inf' → logprob: -4.005861282348633
    4. 'in' → logprob: -4.630861282348633
    5. 'nt' → logprob: -5.005861282348633
    6. 'finite' → logprob: -5.130861282348633
    7. 'nan' → logprob: -5.755861282348633
    8. 'np' → logprob: -6.755861282348633
    9. 'n' → logprob: -7.380861282348633
    10. 'ne' → logprob: -7.630861282348633

Token 7: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00042114028474316
    2. '\(' → logprob: -8.875421524047852
    3. '(
' → logprob: -9.250421524047852
    4. ',' → logprob: -9.250421524047852
    5. ' (' → logprob: -10.125421524047852
    6. '\n' → logprob: -10.500421524047852
    7. '\' → logprob: -11.625421524047852
    8. '```' → logprob: -12.875421524047852
    9. '\[' → logprob: -13.875421524047852
    10. '.' → logprob: -14.000421524047852

Token 8: 'class' (ID: 1444)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.008885776624083519
    2. '(
' → logprob: -5.883885860443115
    3. '\n' → logprob: -6.133885860443115
    4. 'def' → logprob: -6.633885860443115
    5. ',' → logprob: -7.008885860443115
    6. '\(' → logprob: -7.258885860443115
    7. '\' → logprob: -8.133885383605957
    8. 'import' → logprob: -8.508885383605957
    9. '
' → logprob: -9.383885383605957
    10. '```' → logprob: -9.633885383605957

Token 9: ' Point' (ID: 9971)
  Prédit: ' Vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Vector' → logprob: -0.15730217099189758
    2. ' Point' → logprob: -3.032302141189575
    3. ' ' → logprob: -3.657302141189575
    4. ' Triangle' → logprob: -3.657302141189575
    5. ' Right' → logprob: -3.782302141189575
    6. ' P' → logprob: -4.782302379608154
    7. ' Distance' → logprob: -5.407302379608154
    8. ' Geometry' → logprob: -5.907302379608154
    9. ' My' → logprob: -6.032302379608154
    10. ' Tri' → logprob: -6.407302379608154

Token 10: ':
' (ID: 734)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28506550192832947
    2. ':' → logprob: -1.4100655317306519
    3. '(:' → logprob: -5.910065650939941
    4. '():' → logprob: -7.035065650939941
    5. '```' → logprob: -9.410065650939941
    6. '(
' → logprob: -9.785065650939941
    7. '.' → logprob: -10.660065650939941
    8. '(":' → logprob: -10.785065650939941
    9. '<|end|>' → logprob: -10.785065650939941
    10. '(`' → logprob: -11.535065650939941

Token 11: '   ' (ID: 271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7274123430252075
    2. ':' → logprob: -0.9774123430252075
    3. '   ' → logprob: -2.727412223815918
    4. '```' → logprob: -3.602412223815918
    5. ' ' → logprob: -4.102412223815918
    6. '<|end|>' → logprob: -4.727412223815918
    7. '    ' → logprob: -5.477412223815918
    8. ' (' → logprob: -5.477412223815918
    9. ''' → logprob: -5.852412223815918
    10. '():' → logprob: -6.227412223815918

Token 12: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.2987106442451477
    2. 'def' → logprob: -1.423710584640503
    3. '   ' → logprob: -4.548710823059082
    4. '    ' → logprob: -5.173710823059082
    5. '```' → logprob: -7.923710823059082
    6. ' ' → logprob: -8.048710823059082
    7. ' __' → logprob: -9.048710823059082
    8. '(' → logprob: -9.798710823059082
    9. '__' (adapté à ' __') → logprob: -9.923710823059082
    10. 'class' → logprob: -10.298710823059082

Token 13: 'slots' (ID: 101916)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.0488746203482151
    2. 'slots' → logprob: -3.423874616622925
    3. '_init' → logprob: -4.548874855041504
    4. '_x' → logprob: -6.423874855041504
    5. '_' → logprob: -6.548874855041504
    6. '_slots' → logprob: -6.798874855041504
    7. ' init' → logprob: -9.673874855041504
    8. '_slot' → logprob: -9.798874855041504
    9. 'x' → logprob: -10.673874855041504
    10. '_pos' → logprob: -10.923874855041504

Token 14: '__' (ID: 771)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.48214584589004517
    2. '__' → logprob: -0.9821458458900452
    3. '=['' → logprob: -5.6071457862854
    4. ' =' → logprob: -5.9821457862854
    5. '_=' → logprob: -7.4821457862854
    6. '[' → logprob: -8.232146263122559
    7. '=[' → logprob: -8.357146263122559
    8. '_' → logprob: -9.232146263122559
    9. '=[
' → logprob: -9.482146263122559
    10. '==' → logprob: -9.732146263122559

Token 15: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4801477789878845
    2. '=' → logprob: -0.9801477789878845
    3. '=['' → logprob: -5.230147838592529
    4. '=('' → logprob: -8.230147361755371
    5. '['' → logprob: -8.605147361755371
    6. '__' → logprob: -8.730147361755371
    7. ' ='' → logprob: -10.480147361755371
    8. ' =[' → logprob: -11.730147361755371
    9. '='' → logprob: -11.855147361755371
    10. ' ['' → logprob: -11.855147361755371

Token 16: ' ('' (ID: 9906)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.815708577632904
    2. ' ('' → logprob: -0.940708577632904
    3. '('_' → logprob: -2.690708637237549
    4. '('' → logprob: -3.440708637237549
    5. ''s' → logprob: -4.315708637237549
    6. ' '' → logprob: -4.315708637237549
    7. ''_' → logprob: -4.315708637237549
    8. ' '_' → logprob: -4.940708637237549
    9. ''x' → logprob: -5.065708637237549
    10. '('__' → logprob: -5.940708637237549

Token 17: 'x' (ID: 87)
  Prédit: '_x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_x' → logprob: -0.5432240962982178
    2. 'x' → logprob: -0.9182240962982178
    3. '__' → logprob: -3.9182240962982178
    4. '___' → logprob: -11.668224334716797
    5. ' x' → logprob: -13.043224334716797
    6. '_' → logprob: -13.168224334716797
    7. ' __' → logprob: -13.543224334716797
    8. '_coords' → logprob: -13.543224334716797
    9. 'a' → logprob: -14.293224334716797
    10. '1' → logprob: -14.543224334716797

Token 18: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.01817171648144722
    2. ',' → logprob: -4.018171787261963
    3. '','' → logprob: -11.393171310424805
    4. ' ',' → logprob: -11.643171310424805
    5. '',
' → logprob: -15.143171310424805
    6. '')' → logprob: -15.268171310424805
    7. '",' → logprob: -15.393171310424805
    8. ''' → logprob: -15.393171310424805
    9. ' ,' → logprob: -15.393171310424805
    10. ',y' → logprob: -15.768171310424805

Token 19: ' '' (ID: 461)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.9068400263786316
    2. ' y' → logprob: -1.1568400859832764
    3. ''y' → logprob: -1.6568400859832764
    4. ''' → logprob: -2.6568400859832764
    5. ' '' → logprob: -4.156839847564697
    6. '‘y' → logprob: -5.781839847564697
    7. ' ' → logprob: -6.406839847564697
    8. '    ' → logprob: -8.781840324401855
    9. ')' → logprob: -9.531840324401855
    10. 'space' → logprob: -9.906840324401855

Token 20: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.246537173457909e-06
    2. ' y' → logprob: -12.500003814697266
    3. '<|end|>' → logprob: -15.875003814697266
    4. '<|end|>' → logprob: -16.000003814697266
    5. ''y' → logprob: -16.250003814697266
    6. '_y' → logprob: -17.375003814697266
    7. '‘y' → logprob: -17.625003814697266
    8. '   ' → logprob: -17.625003814697266
    9. '	y' → logprob: -18.250003814697266
    10. 'yse' → logprob: -18.375003814697266

Token 21: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.009900340810418129
    2. ')' → logprob: -5.0099005699157715
    3. '',' → logprob: -5.7599005699157715
    4. ''' → logprob: -11.259900093078613
    5. '')
' → logprob: -11.759900093078613
    6. ',' → logprob: -12.509900093078613
    7. '')

' → logprob: -13.634900093078613
    8. '','' → logprob: -13.759900093078613
    9. '']' → logprob: -15.384900093078613
    10. '")' → logprob: -15.509900093078613

Token 22: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.04831332713365555
    2. '   ' → logprob: -4.173313140869141
    3. '    
' → logprob: -4.673313140869141
    4. ' def' → logprob: -5.298313140869141
    5. ',' → logprob: -5.423313140869141
    6. '

' → logprob: -5.548313140869141
    7. ':' → logprob: -5.673313140869141
    8. 'def' → logprob: -6.173313140869141
    9. ',
' → logprob: -7.673313140869141
    10. '
' → logprob: -7.798313140869141

Token 23: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.03927474468946457
    2. 'def' (adapté à ' def') → logprob: -3.6642746925354004
    3. '    
' → logprob: -5.5392746925354
    4. ' def' → logprob: -5.6642746925354
    5. '

' → logprob: -6.0392746925354
    6. '\n' → logprob: -7.1642746925354
    7. '```' → logprob: -7.1642746925354
    8. '   ' → logprob: -7.6642746925354
    9. ':' → logprob: -8.414275169372559
    10. '  
' → logprob: -8.539275169372559

Token 24: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.003632731270045042
    2. '__' → logprob: -5.753632545471191
    3. ' init' → logprob: -8.003632545471191
    4. ' ' → logprob: -9.753632545471191
    5. '_init' → logprob: -10.378632545471191
    6. ' def' → logprob: -10.878632545471191
    7. 'init' → logprob: -11.628632545471191
    8. ' _' → logprob: -13.753632545471191
    9. ' ' → logprob: -14.253632545471191
    10. '_' → logprob: -15.128632545471191

Token 25: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -2.522638169466518e-05
    2. 'ini' → logprob: -11.375024795532227
    3. 'i' → logprob: -11.625024795532227
    4. 'in' → logprob: -12.375024795532227
    5. 'int' → logprob: -15.625024795532227
    6. 'inite' → logprob: -16.000024795532227
    7. ' init' → logprob: -16.375024795532227
    8. '_init' → logprob: -16.625024795532227
    9. 'inti' → logprob: -16.875024795532227
    10. 'innit' → logprob: -17.250024795532227

Token 26: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.014169031754136086
    2. '(self' → logprob: -5.014169216156006
    3. '__' → logprob: -5.139169216156006
    4. '(' → logprob: -7.139169216156006
    5. '__(
' → logprob: -8.014168739318848
    6. '__((' → logprob: -9.139168739318848
    7. '<|end|>' → logprob: -9.139168739318848
    8. '__(*' → logprob: -9.764168739318848
    9. 'self' → logprob: -9.889168739318848
    10. ' (' → logprob: -10.264168739318848

Token 27: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.3306015716807451e-05
    2. ' self' → logprob: -11.25001335144043
    3. 'x' → logprob: -16.25001335144043
    4. '(self' → logprob: -17.25001335144043
    5. '   ' → logprob: -17.50001335144043
    6. '	self' → logprob: -17.87501335144043
    7. 's' → logprob: -18.00001335144043
    8. ')' → logprob: -18.25001335144043
    9. '0' → logprob: -18.37501335144043
    10. '       ' → logprob: -18.87501335144043

Token 28: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.601440966129303
    2. ' self' → logprob: -1.2264409065246582
    3. 'self' → logprob: -2.101440906524658
    4. ' ,' → logprob: -3.476440906524658
    5. ',self' → logprob: -6.101440906524658
    6. ' ' → logprob: -6.226440906524658
    7. ' x' → logprob: -7.726440906524658
    8. ')' → logprob: -8.226441383361816
    9. ' )' → logprob: -8.601441383361816
    10. '<|end|>' → logprob: -9.226441383361816

Token 29: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.019752800464630127
    2. 'self' → logprob: -4.5197529792785645
    3. ' x' → logprob: -4.7697529792785645
    4. ' self' → logprob: -8.644752502441406
    5. '   ' → logprob: -12.019752502441406
    6. ' ' → logprob: -13.894752502441406
    7. '	x' → logprob: -14.769752502441406
    8. '       ' → logprob: -14.894752502441406
    9. ')x' → logprob: -15.269752502441406
    10. '    ' → logprob: -15.519752502441406

Token 30: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.3226136767771095e-05
    2. ' ,' → logprob: -10.625042915344238
    3. ':' → logprob: -12.125042915344238
    4. ')' → logprob: -12.125042915344238
    5. '):' → logprob: -13.000042915344238
    6. '<|end|>' → logprob: -13.375042915344238
    7. ',y' → logprob: -13.750042915344238
    8. '=' → logprob: -14.125042915344238
    9. ',)' → logprob: -14.500042915344238
    10. '<|end|>' → logprob: -14.500042915344238

Token 31: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.4919213056564331
    2. 'float' → logprob: -1.491921305656433
    3. 'int' → logprob: -2.2419214248657227
    4. ' int' → logprob: -2.8669214248657227
    5. '0' → logprob: -9.116921424865723
    6. '=float' → logprob: -9.491921424865723
    7. ' ' → logprob: -9.866921424865723
    8. ',float' → logprob: -9.991921424865723
    9. ')' → logprob: -10.491921424865723
    10. '(float' → logprob: -10.491921424865723

Token 32: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005265804938971996
    2. ' ,' → logprob: -7.625526428222656
    3. ')' → logprob: -11.000526428222656
    4. '):' → logprob: -11.875526428222656
    5. '<|end|>' → logprob: -12.125526428222656
    6. ',y' → logprob: -13.250526428222656
    7. ',x' → logprob: -13.500526428222656
    8. ',int' → logprob: -14.000526428222656
    9. '<|end|>' → logprob: -14.000526428222656
    10. '   ' → logprob: -14.000526428222656

Token 33: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.043026477098464966
    2. 'y' → logprob: -3.1680264472961426
    3. ' ' → logprob: -10.6680269241333
    4. '	y' → logprob: -13.5430269241333
    5. ' ' → logprob: -13.5430269241333
    6. '<|end|>' → logprob: -14.5430269241333
    7. ')' → logprob: -14.7930269241333
    8. ')y' → logprob: -16.168025970458984
    9. '    ' → logprob: -16.293025970458984
    10. '<|end|>' → logprob: -16.418025970458984

Token 34: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03721923008561134
    2. '):' → logprob: -3.662219285964966
    3. ')' → logprob: -4.537219047546387
    4. '<|end|>' → logprob: -10.162219047546387
    5. ' :' → logprob: -10.412219047546387
    6. ' ):' → logprob: -10.662219047546387
    7. '<|end|>' → logprob: -10.662219047546387
    8. '=' → logprob: -11.037219047546387
    9. '):
' → logprob: -11.662219047546387
    10. ' )' → logprob: -11.662219047546387

Token 35: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.17984989285469055
    2. 'float' → logprob: -1.8048498630523682
    3. ')' → logprob: -9.679849624633789
    4. '=float' → logprob: -11.179849624633789
    5. ' ' → logprob: -11.679849624633789
    6. '	float' → logprob: -11.679849624633789
    7. '(float' → logprob: -12.554849624633789
    8. ',float' → logprob: -12.929849624633789
    9. ' )' → logprob: -13.179849624633789
    10. '<float' → logprob: -13.429849624633789

Token 36: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00865806546062231
    2. ')' → logprob: -4.758657932281494
    3. ':' → logprob: -10.383658409118652
    4. ''):' → logprob: -12.258658409118652
    5. ' ):' → logprob: -12.758658409118652
    6. '):
' → logprob: -12.883658409118652
    7. '   ' → logprob: -13.383658409118652
    8. ',' → logprob: -16.133657455444336
    9. ' ' → logprob: -16.258657455444336
    10. '),' → logprob: -16.758657455444336

Token 37: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003152407705783844
    2. ' self' → logprob: -6.503152370452881
    3. '<|end|>' → logprob: -7.128152370452881
    4. 'self' → logprob: -7.753152370452881
    5. '   ' → logprob: -9.128152847290039
    6. ')' → logprob: -9.378152847290039
    7. ' ' → logprob: -9.503152847290039
    8. ' ' → logprob: -10.628152847290039
    9. '    ' → logprob: -10.753152847290039
    10. '<|end|>' → logprob: -11.003152847290039

Token 38: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3134945333003998
    2. ' self' → logprob: -1.3134945631027222
    3. '       ' → logprob: -8.438494682312012
    4. '        ' → logprob: -11.313494682312012
    5. '	self' → logprob: -13.813494682312012
    6. ' ' → logprob: -14.063494682312012
    7. '   ' → logprob: -14.688494682312012
    8. 'x' → logprob: -14.688494682312012
    9. ' ' → logprob: -14.938494682312012
    10. '    ' → logprob: -14.938494682312012

Token 39: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.02633815072476864
    2. '.x' → logprob: -3.6513381004333496
    3. ' .' → logprob: -10.526338577270508
    4. '.)' → logprob: -13.026338577270508
    5. ').' → logprob: -13.276338577270508
    6. '<|end|>' → logprob: -13.401338577270508
    7. '<|end|>' → logprob: -14.026338577270508
    8. ')' → logprob: -14.401338577270508
    9. '.y' → logprob: -14.401338577270508
    10. '.xlabel' → logprob: -14.526338577270508

Token 40: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932268142700195
    2. ' =' → logprob: -0.6932268142700195
    3. ',' → logprob: -10.19322681427002
    4. ')' → logprob: -10.69322681427002
    5. ' =)' → logprob: -11.44322681427002
    6. '<|end|>' → logprob: -12.56822681427002
    7. '.' → logprob: -13.69322681427002
    8. '=}' → logprob: -13.69322681427002
    9. ' ' → logprob: -14.31822681427002
    10. ' ,' → logprob: -14.56822681427002

Token 41: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.16022422909736633
    2. ' x' → logprob: -1.910224199295044
    3. '	x' → logprob: -16.53522491455078
    4. ')x' → logprob: -18.91022491455078
    5. ' ' → logprob: -20.66022491455078
    6. '_x' → logprob: -21.16022491455078
    7. '(x' → logprob: -21.28522491455078
    8. ' ' → logprob: -21.28522491455078
    9. '$x' → logprob: -21.28522491455078
    10. '{x' → logprob: -22.03522491455078

Token 42: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.046438202261924744
    2. '<|end|>' → logprob: -3.546438217163086
    3. ' y' → logprob: -5.046438217163086
    4. '        ' → logprob: -6.171438217163086
    5. 'self' → logprob: -6.296438217163086
    6. ' 
' → logprob: -6.671438217163086
    7. ' self' → logprob: -6.671438217163086
    8. '        
' → logprob: -6.921438217163086
    9. ' ' → logprob: -7.171438217163086
    10. '   ' → logprob: -8.046438217163086

Token 44: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04575463756918907
    2. ' self' → logprob: -3.2957546710968018
    3. 'y' → logprob: -5.045754432678223
    4. ' y' → logprob: -7.045754432678223
    5. '       ' → logprob: -7.920754432678223
    6. '   ' → logprob: -11.920754432678223
    7. ' ' → logprob: -12.795754432678223
    8. ' ' → logprob: -13.545754432678223
    9. '        ' → logprob: -14.420754432678223
    10. '    ' → logprob: -14.920754432678223

Token 45: '.y' (ID: 4486)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.001399879576638341
    2. '.y' → logprob: -6.626399993896484
    3. '.x' → logprob: -9.876399993896484
    4. '<|end|>' → logprob: -11.376399993896484
    5. '<|end|>' → logprob: -12.001399993896484
    6. ' .' → logprob: -13.626399993896484
    7. ')' → logprob: -13.751399993896484
    8. '.user' → logprob: -14.751399993896484
    9. ' ' → logprob: -14.876399993896484
    10. 'y' → logprob: -15.626399993896484

Token 46: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.28121647238731384
    2. '=' → logprob: -1.4062165021896362
    3. '<|end|>' → logprob: -9.906216621398926
    4. ')' → logprob: -11.906216621398926
    5. ' ' → logprob: -12.156216621398926
    6. '<|end|>' → logprob: -13.531216621398926
    7. ' =)' → logprob: -14.156216621398926
    8. '=y' → logprob: -14.406216621398926
    9. ',' → logprob: -14.656216621398926
    10. '.' → logprob: -15.656216621398926

Token 47: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07888978719711304
    2. ' y' → logprob: -2.578889846801758
    3. '	y' → logprob: -17.328889846801758
    4. ' ' → logprob: -17.578889846801758
    5. ')y' → logprob: -18.703889846801758
    6. 'x' → logprob: -19.203889846801758
    7. '   ' → logprob: -19.828889846801758
    8. ' ' → logprob: -19.828889846801758
    9. '(y' → logprob: -19.953889846801758
    10. 'yj' → logprob: -20.203889846801758

Token 48: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4601624011993408
    2. '   ' → logprob: -1.0851624011993408
    3. '    
' → logprob: -3.710162401199341
    4. 'def' → logprob: -6.335162162780762
    5. ' def' → logprob: -7.085162162780762
    6. '\n' → logprob: -7.335162162780762
    7. ' 
' → logprob: -7.335162162780762
    8. '<|end|>' → logprob: -7.335162162780762
    9. '        
' → logprob: -7.960162162780762
    10. '  
' → logprob: -7.960162162780762

Token 49: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07975730299949646
    2. '
' → logprob: -3.2047572135925293
    3. '    
' → logprob: -3.5797572135925293
    4. 'def' → logprob: -5.829757213592529
    5. ' def' → logprob: -5.954757213592529
    6. ' 
' → logprob: -6.954757213592529
    7. '<|end|>' → logprob: -8.079757690429688
    8. '  
' → logprob: -8.704757690429688
    9. '```' → logprob: -8.704757690429688
    10. ' ' → logprob: -8.829757690429688

Token 50: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8433882594108582
    2. 'def' (adapté à ' def') → logprob: -1.468388319015503
    3. ' def' → logprob: -1.843388319015503
    4. '
' → logprob: -2.218388319015503
    5. '    
' → logprob: -2.718388319015503
    6. ' 
' → logprob: -6.718388080596924
    7. '  
' → logprob: -7.093388080596924
    8. '\n' → logprob: -7.468388080596924
    9. '@property' → logprob: -7.468388080596924
    10. '   
' → logprob: -7.468388080596924

Token 51: ' distance' (ID: 9324)
  Prédit: ' distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' distance' → logprob: -0.4361690580844879
    2. ' ' → logprob: -1.1861690282821655
    3. 'distance' → logprob: -3.311169147491455
    4. '_' → logprob: -6.436169147491455
    5. ' distances' → logprob: -6.436169147491455
    6. ' def' → logprob: -6.561169147491455
    7. ' _' → logprob: -6.561169147491455
    8. '_distance' → logprob: -6.686169147491455
    9. ' space' → logprob: -6.686169147491455
    10. ' __' → logprob: -7.436169147491455

Token 52: '_to' (ID: 5089)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.48819586634635925
    2. '(self' → logprob: -1.4881958961486816
    3. '_to' → logprob: -1.8631958961486816
    4. 'to' → logprob: -5.863195896148682
    5. ' (' → logprob: -6.988195896148682
    6. '(to' → logprob: -7.238195896148682
    7. '_' → logprob: -7.988195896148682
    8. 'To' → logprob: -8.238195419311523
    9. '_from' → logprob: -9.988195419311523
    10. 'self' → logprob: -10.488195419311523

Token 53: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04411761835217476
    2. '(' → logprob: -3.1691176891326904
    3. '<|end|>' → logprob: -6.919117450714111
    4. 'self' → logprob: -10.66911792755127
    5. '<|end|>' → logprob: -10.66911792755127
    6. ' (' → logprob: -11.04411792755127
    7. '(other' → logprob: -11.04411792755127
    8. '(
' → logprob: -11.41911792755127
    9. '(Point' → logprob: -12.04411792755127
    10. ')' → logprob: -12.04411792755127

Token 54: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014168102643452585
    2. ' ,' → logprob: -9.250142097473145
    3. 'other' → logprob: -10.125142097473145
    4. 'another' → logprob: -13.000142097473145
    5. 'self' → logprob: -13.625142097473145
    6. ',target' → logprob: -14.625142097473145
    7. ',self' → logprob: -15.500142097473145
    8. ')' → logprob: -15.750142097473145
    9. '_,' → logprob: -16.375141143798828
    10. ',line' → logprob: -16.500141143798828

Token 55: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.20171017944812775
    2. ' other' → logprob: -1.7017102241516113
    3. 'point' → logprob: -8.576709747314453
    4. ' point' → logprob: -9.576709747314453
    5. 'self' → logprob: -10.451709747314453
    6. ' self' → logprob: -12.576709747314453
    7. 'another' → logprob: -13.076709747314453
    8. ' another' → logprob: -14.076709747314453
    9. ' p' → logprob: -14.326709747314453
    10. 'p' → logprob: -14.451709747314453

Token 56: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06449414789676666
    2. ')' → logprob: -3.5644941329956055
    3. ':' → logprob: -3.6894941329956055
    4. ' ):' → logprob: -4.8144941329956055
    5. ' )' → logprob: -7.5644941329956055
    6. ',' → logprob: -7.8144941329956055
    7. '):
' → logprob: -10.314494132995605
    8. '.' → logprob: -10.564494132995605
    9. ' :' → logprob: -11.064494132995605
    10. ' ' → logprob: -11.189494132995605

Token 57: ' '' (ID: 461)
  Prédit: ' Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.005413403734564781
    2. 'Point' → logprob: -5.50541353225708
    3. ' ' → logprob: -7.38041353225708
    4. ' )' → logprob: -8.130413055419922
    5. ')' → logprob: -8.505413055419922
    6. ' point' → logprob: -9.380413055419922
    7. '	Point' → logprob: -9.880413055419922
    8. '_Point' → logprob: -10.630413055419922
    9. '_point' → logprob: -11.380413055419922
    10. '<Point' → logprob: -11.755413055419922

Token 58: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -1.9743012671824545e-05
    2. ' Point' → logprob: -10.875020027160645
    3. '	Point' → logprob: -15.250020027160645
    4. '<Point' → logprob: -15.625020027160645
    5. '.Point' → logprob: -16.250019073486328
    6. '_Point' → logprob: -16.250019073486328
    7. 'Points' → logprob: -16.500019073486328
    8. '_point' → logprob: -17.375019073486328
    9. 'P' → logprob: -18.125019073486328
    10. 'point' → logprob: -18.750019073486328

Token 59: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.6002652049064636
    2. ''):' → logprob: -0.8502652049064636
    3. ')' → logprob: -3.8502652645111084
    4. '):' → logprob: -5.975265026092529
    5. ''):
' → logprob: -9.100265502929688
    6. ''' → logprob: -10.975265502929688
    7. ''):
' → logprob: -10.975265502929688
    8. '')->' → logprob: -11.225265502929688
    9. '`)' → logprob: -11.600265502929688
    10. '   ' → logprob: -11.725265502929688

Token 60: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.010723067447543144
    2. '):' → logprob: -4.885723114013672
    3. '->' → logprob: -6.135723114013672
    4. ' ->' → logprob: -7.510723114013672
    5. ')' → logprob: -8.510723114013672
    6. ')->' → logprob: -9.260723114013672
    7. '():' → logprob: -10.010723114013672
    8. ':
' → logprob: -10.510723114013672
    9. ' :' → logprob: -11.885723114013672
    10. ':return' → logprob: -11.885723114013672

Token 61: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.0024769625160843134
    2. 'float' → logprob: -6.002477169036865
    3. '	float' → logprob: -14.377476692199707
    4. ' ' → logprob: -15.252476692199707
    5. ' ' → logprob: -15.877476692199707
    6. '=float' → logprob: -16.502477645874023
    7. '(float' → logprob: -16.502477645874023
    8. '<float' → logprob: -16.877477645874023
    9. ',float' → logprob: -17.502477645874023
    10. ' flo' → logprob: -17.752477645874023

Token 62: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016218038217630237
    2. '):' → logprob: -9.000162124633789
    3. ':
' → logprob: -10.625162124633789
    4. ':return' → logprob: -11.875162124633789
    5. '       ' → logprob: -13.000162124633789
    6. '():' → logprob: -13.375162124633789
    7. ',' → logprob: -13.500162124633789
    8. '   ' → logprob: -14.375162124633789
    9. ' :' → logprob: -15.000162124633789
    10. ')' → logprob: -15.375162124633789

Token 63: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001546406652778387
    2. ' return' → logprob: -6.626546382904053
    3. 'return' → logprob: -8.751546859741211
    4. '        ' → logprob: -10.751546859741211
    5. '      ' → logprob: -11.501546859741211
    6. '        
' → logprob: -12.001546859741211
    7. '    ' → logprob: -12.251546859741211
    8. ':return' → logprob: -12.751546859741211
    9. '   ' → logprob: -12.876546859741211
    10. ' 
' → logprob: -13.126546859741211

Token 64: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0029761565383523703
    2. 'hyp' → logprob: -6.127975940704346
    3. '       ' → logprob: -7.377975940704346
    4. ' return' → logprob: -9.127976417541504
    5. 'h' → logprob: -10.002976417541504
    6. '```' → logprob: -12.127976417541504
    7. '   ' → logprob: -12.877976417541504
    8. 'dx' → logprob: -12.877976417541504
    9. 'hy' → logprob: -14.877976417541504
    10. 'hx' → logprob: -15.252976417541504

Token 65: ' hypot' (ID: 85756)
  Prédit: ' hypot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' hypot' → logprob: -0.07922111451625824
    2. 'hyp' → logprob: -2.57922101020813
    3. ' hyp' → logprob: -8.07922077178955
    4. ' hypers' → logprob: -10.95422077178955
    5. ' hypoth' → logprob: -13.57922077178955
    6. ' hypothetical' → logprob: -13.70422077178955
    7. ' ' → logprob: -15.20422077178955
    8. ' hypoc' → logprob: -15.32922077178955
    9. 'hy' → logprob: -15.57922077178955
    10. ' hipot' → logprob: -16.204221725463867

Token 66: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.31328487396240234
    2. '(' → logprob: -1.3132848739624023
    3. '(
' → logprob: -11.313284873962402
    4. '((' → logprob: -11.938284873962402
    5. '(

' → logprob: -13.063284873962402
    6. '(s' → logprob: -14.438284873962402
    7. ' (' → logprob: -14.938284873962402
    8. 'self' → logprob: -14.938284873962402
    9. '(x' → logprob: -15.188284873962402
    10. '(abs' → logprob: -15.313284873962402

Token 67: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.04861188679933548
    2. '.' → logprob: -3.048611879348755
    3. ' .' → logprob: -10.923611640930176
    4. ' ' → logprob: -12.923611640930176
    5. ').' → logprob: -13.673611640930176
    6. ' -' → logprob: -14.048611640930176
    7. ')' → logprob: -14.548611640930176
    8. '.y' → logprob: -14.798611640930176
    9. 'x' → logprob: -15.048611640930176
    10. '-' → logprob: -15.673611640930176

Token 68: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.011049704626202583
    2. '-' → logprob: -4.511049747467041
    3. ' ' → logprob: -13.636049270629883
    4. '-other' → logprob: -14.761049270629883
    5. ' –' → logprob: -16.011049270629883
    6. ' ' → logprob: -17.136049270629883
    7. '-self' → logprob: -17.386049270629883
    8. ',' → logprob: -18.386049270629883
    9. '   ' → logprob: -19.011049270629883
    10. '  ' → logprob: -19.261049270629883

Token 69: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.1269306242465973
    2. 'other' → logprob: -2.1269307136535645
    3. '<|end|>' → logprob: -14.126930236816406
    4. '_other' → logprob: -14.251930236816406
    5. '(other' → logprob: -14.626930236816406
    6. '.other' → logprob: -14.876930236816406
    7. 'Other' → logprob: -15.001930236816406
    8. ' ' → logprob: -17.876930236816406
    9. ' andere' → logprob: -18.001930236816406
    10. ' Other' → logprob: -18.751930236816406

Token 70: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0011724866926670074
    2. '.' → logprob: -6.7511725425720215
    3. ' .' → logprob: -13.876172065734863
    4. 'x' → logprob: -14.501172065734863
    5. ').' → logprob: -15.251172065734863
    6. '.xaml' → logprob: -15.626172065734863
    7. '.xhtml' → logprob: -16.50117301940918
    8. '..' → logprob: -16.75117301940918
    9. '.y' → logprob: -17.12617301940918
    10. '`.' → logprob: -17.25117301940918

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011248346709180623
    2. ' ,' → logprob: -9.125112533569336
    3. ',
' → logprob: -13.000112533569336
    4. ',

' → logprob: -14.000112533569336
    5. ',self' → logprob: -15.750112533569336
    6. ')' → logprob: -16.375112533569336
    7. '),' → logprob: -16.500112533569336
    8. ',y' → logprob: -17.250112533569336
    9. '       ' → logprob: -18.375112533569336
    10. '',' → logprob: -18.750112533569336

Token 72: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.19510605931282043
    2. 'self' → logprob: -1.945106029510498
    3. ' other' → logprob: -4.070106029510498
    4. ' ' → logprob: -4.695106029510498
    5. 'other' → logprob: -5.195106029510498
    6. ' ' → logprob: -7.195106029510498
    7. '<|end|>' → logprob: -7.320106029510498
    8. ')' → logprob: -7.445106029510498
    9. '        ' → logprob: -8.820106506347656
    10. '0' → logprob: -9.195106506347656

Token 73: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0021874953527003527
    2. '.' → logprob: -6.127187728881836
    3. 'y' → logprob: -13.377187728881836
    4. ' .' → logprob: -14.502187728881836
    5. '<|end|>' → logprob: -16.252187728881836
    6. ')' → logprob: -16.377187728881836
    7. '.ylabel' → logprob: -16.752187728881836
    8. ').' → logprob: -17.127187728881836
    9. '	y' → logprob: -17.502187728881836
    10. '.py' → logprob: -17.627187728881836

Token 74: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.004083624575287104
    2. '-' → logprob: -5.504083633422852
    3. ')' → logprob: -12.504083633422852
    4. ' ' → logprob: -14.004083633422852
    5. '.' → logprob: -15.504083633422852
    6. '<|end|>' → logprob: -15.879083633422852
    7. '-)' → logprob: -16.00408363342285
    8. ' –' → logprob: -16.62908363342285
    9. ' ' → logprob: -16.62908363342285
    10. '<|end|>' → logprob: -16.87908363342285

Token 75: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.014191007241606712
    2. ' other' → logprob: -4.264191150665283
    3. 'y' → logprob: -10.764190673828125
    4. ' y' → logprob: -12.889190673828125
    5. '<|end|>' → logprob: -13.764190673828125
    6. ' ' → logprob: -13.889190673828125
    7. '.other' → logprob: -13.889190673828125
    8. ')' → logprob: -14.514190673828125
    9. '(other' → logprob: -15.264190673828125
    10. '_other' → logprob: -16.514190673828125

Token 76: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.02229391783475876
    2. ')' → logprob: -3.89729380607605
    3. '.' → logprob: -6.647294044494629
    4. 'y' → logprob: -7.897294044494629
    5. '-' → logprob: -9.647294044494629
    6. '.)' → logprob: -11.772294044494629
    7. ')y' → logprob: -13.397294044494629
    8. '-y' → logprob: -13.647294044494629
    9. '-)' → logprob: -13.647294044494629
    10. '.py' → logprob: -13.772294044494629

Token 77: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -14.625000953674316
    3. ' )' → logprob: -16.375
    4. ')return' → logprob: -16.5
    5. '))' → logprob: -16.875
    6. '       ' → logprob: -16.875
    7. '   ' → logprob: -17.5
    8. '')' → logprob: -18.75
    9. '`)' → logprob: -19.375
    10. '}' → logprob: -19.5

Token 78: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04440855607390404
    2. '
' → logprob: -3.9194085597991943
    3. '    
' → logprob: -4.044408321380615
    4. ' ' → logprob: -6.294408321380615
    5. ' 
' → logprob: -6.669408321380615
    6. '<|end|>' → logprob: -6.919408321380615
    7. '    ' → logprob: -7.169408321380615
    8. '  
' → logprob: -7.919408321380615
    9. '  ' → logprob: -9.044408798217773
    10. '```' → logprob: -9.169408798217773

Token 79: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20298972725868225
    2. '
' → logprob: -2.5779898166656494
    3. '    
' → logprob: -3.0779898166656494
    4. ' def' → logprob: -3.5779898166656494
    5. ' ' → logprob: -4.07798957824707
    6. 'def' (adapté à ' def') → logprob: -4.95298957824707
    7. ' 
' → logprob: -5.95298957824707
    8. '```' → logprob: -6.20298957824707
    9. '    ' → logprob: -6.57798957824707
    10. '  
' → logprob: -6.70298957824707

Token 80: ' __' (ID: 2516)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.029062453657388687
    2. ' __' → logprob: -3.654062509536743
    3. ' def' → logprob: -7.029062271118164
    4. ' ' → logprob: -7.404062271118164
    5. ' ==' → logprob: -7.779062271118164
    6. ' _' → logprob: -8.154062271118164
    7. '_' → logprob: -8.529062271118164
    8. ' is' → logprob: -9.404062271118164
    9. ' ▁' → logprob: -9.904062271118164
    10. '__' → logprob: -10.404062271118164

Token 81: 'repr' (ID: 67002)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.00011403311509639025
    2. 'repr' → logprob: -9.375114440917969
    3. ' eq' → logprob: -10.625114440917969
    4. 'e' → logprob: -12.500114440917969
    5. '_eq' → logprob: -14.500114440917969
    6. ' ' → logprob: -15.375114440917969
    7. 'str' → logprob: -15.875114440917969
    8. '==' → logprob: -16.50011444091797
    9. 'init' → logprob: -16.62511444091797
    10. 'lt' → logprob: -17.37511444091797

Token 82: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.4764568507671356
    2. '__' → logprob: -0.976456880569458
    3. '__('' → logprob: -6.226456642150879
    4. '__(
' → logprob: -7.976456642150879
    5. '__((' → logprob: -10.976456642150879
    6. '__("' → logprob: -11.351456642150879
    7. '___' → logprob: -11.476456642150879
    8. '__.__' → logprob: -11.601456642150879
    9. '____' → logprob: -12.726456642150879
    10. '__[' → logprob: -12.851456642150879

Token 83: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.729906196298543e-06
    2. ')' → logprob: -11.625009536743164
    3. ' self' → logprob: -14.500009536743164
    4. 'sel' → logprob: -16.625009536743164
    5. 's' → logprob: -17.375009536743164
    6. ' ' → logprob: -17.625009536743164
    7. '_self' → logprob: -17.750009536743164
    8. '
' → logprob: -17.875009536743164
    9. 'se' → logprob: -18.000009536743164
    10. '')' → logprob: -18.000009536743164

Token 84: '):
' (ID: 1883)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.8442530632019043
    2. ')' → logprob: -0.9692530632019043
    3. 'self' → logprob: -2.8442530632019043
    4. '__(' → logprob: -3.0942530632019043
    5. '__('' → logprob: -3.7192530632019043
    6. '__)' → logprob: -3.9692530632019043
    7. '(' → logprob: -4.594253063201904
    8. '(self' → logprob: -4.719253063201904
    9. '__(
' → logprob: -5.219253063201904
    10. '<|end|>' → logprob: -5.719253063201904

Token 85: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.623439371585846
    2. 'f' → logprob: -0.998439371585846
    3. '   ' → logprob: -3.248439311981201
    4. ' f' → logprob: -3.623439311981201
    5. 'return' → logprob: -3.998439311981201
    6. ' return' → logprob: -5.248439311981201
    7. '    ' → logprob: -6.123439311981201
    8. ''' → logprob: -6.498439311981201
    9. '        ' → logprob: -7.373439311981201
    10. '(' → logprob: -7.873439311981201

Token 86: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.10380510985851288
    2. 'f' → logprob: -2.6038050651550293
    3. '   ' → logprob: -3.8538050651550293
    4. ' return' → logprob: -6.228805065155029
    5. '       ' → logprob: -6.603805065155029
    6. '    ' → logprob: -10.978805541992188
    7. ' f' → logprob: -11.228805541992188
    8. '    
' → logprob: -11.353805541992188
    9. '```' → logprob: -11.728805541992188
    10. 'r' → logprob: -12.478805541992188

Token 87: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.5759419798851013
    2. ' f' → logprob: -0.8259419798851013
    3. '(f' → logprob: -14.200942039489746
    4. 'F' → logprob: -14.200942039489746
    5. ' ' → logprob: -14.575942039489746
    6. ''f' → logprob: -14.825942039489746
    7. ' F' → logprob: -15.700942039489746
    8. '	f' → logprob: -16.20094108581543
    9. ' Point' → logprob: -17.57594108581543
    10. ''' → logprob: -17.82594108581543

Token 88: '"' (ID: 1)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4852612316608429
    2. '"' → logprob: -1.6102612018585205
    3. 'f' → logprob: -2.3602612018585205
    4. '(' → logprob: -2.6102612018585205
    5. '(f' → logprob: -4.8602614402771
    6. '(Point' → logprob: -5.6102614402771
    7. ''f' → logprob: -6.6102614402771
    8. ''(' → logprob: -6.8602614402771
    9. 'Point' → logprob: -6.9852614402771
    10. '('' → logprob: -7.2352614402771

Token 89: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -1.7835754988482222e-05
    2. '(Point' → logprob: -11.750018119812012
    3. '<Point' → logprob: -11.875018119812012
    4. '.Point' → logprob: -14.125018119812012
    5. ' Point' → logprob: -14.125018119812012
    6. '"' → logprob: -14.750018119812012
    7. '	Point' → logprob: -15.125018119812012
    8. 'Points' → logprob: -15.250018119812012
    9. '_Point' → logprob: -15.500018119812012
    10. ''' → logprob: -16.000017166137695

Token 90: '({' (ID: 3972)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010400574654340744
    2. '(x' → logprob: -5.385400772094727
    3. '({' → logprob: -5.385400772094727
    4. '(self' → logprob: -6.885400772094727
    5. '(`' → logprob: -9.885400772094727
    6. '(f' → logprob: -10.635400772094727
    7. '(

' → logprob: -10.635400772094727
    8. '(
' → logprob: -10.885400772094727
    9. '{' → logprob: -11.135400772094727
    10. '('' → logprob: -12.260400772094727

Token 91: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.36574100604048e-06
    2. ' self' → logprob: -12.500004768371582
    3. '{' → logprob: -14.500004768371582
    4. 'sel' → logprob: -16.500003814697266
    5. 'repr' → logprob: -16.875003814697266
    6. 's' → logprob: -18.000003814697266
    7. 'elf' → logprob: -18.375003814697266
    8. 'Self' → logprob: -18.750003814697266
    9. '	self' → logprob: -19.000003814697266
    10. '0' → logprob: -19.500003814697266

Token 92: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.3134371340274811
    2. '.x' → logprob: -1.3134371042251587
    3. ' .' → logprob: -8.938437461853027
    4. '.s' → logprob: -10.688437461853027
    5. '.i' → logprob: -12.688437461853027
    6. '.user' → logprob: -12.688437461853027
    7. '.y' → logprob: -13.063437461853027
    8. 'self' → logprob: -13.063437461853027
    9. '.self' → logprob: -13.188437461853027
    10. ',' → logprob: -13.438437461853027

Token 93: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014222272671759129
    2. '},' → logprob: -4.264222145080566
    3. '}' → logprob: -10.014222145080566
    4. '},{' → logprob: -12.389222145080566
    5. ' ,' → logprob: -12.514222145080566
    6. ',
' → logprob: -13.764222145080566
    7. '<|end|>' → logprob: -13.764222145080566
    8. '),' → logprob: -13.889222145080566
    9. '!' → logprob: -14.639222145080566
    10. '',' → logprob: -14.764222145080566

Token 94: ' {' (ID: 354)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.3154107630252838
    2. ' {' → logprob: -1.3154107332229614
    3. ' ' → logprob: -6.940410614013672
    4. 'self' → logprob: -7.190410614013672
    5. ' self' → logprob: -8.440410614013672
    6. ' ' → logprob: -8.690410614013672
    7. ' )' → logprob: -11.065410614013672
    8. ',' → logprob: -12.065410614013672
    9. '{}' → logprob: -12.190410614013672
    10. ' ){' → logprob: -12.190410614013672

Token 95: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.253090865968261e-06
    2. ' self' → logprob: -11.625009536743164
    3. '{' → logprob: -15.750009536743164
    4. '       ' → logprob: -17.375009536743164
    5. '   ' → logprob: -17.750009536743164
    6. '    ' → logprob: -18.375009536743164
    7. ' ' → logprob: -18.625009536743164
    8. '	self' → logprob: -18.625009536743164
    9. '     ' → logprob: -19.125009536743164
    10. '  ' → logprob: -19.500009536743164

Token 96: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -9.65101717156358e-05
    2. '.' → logprob: -9.250096321105957
    3. 'y' → logprob: -16.000097274780273
    4. ' .' → logprob: -16.125097274780273
    5. '.x' → logprob: -16.750097274780273
    6. '.
' → logprob: -18.375097274780273
    7. '	y' → logprob: -18.500097274780273
    8. ' ' → logprob: -18.750097274780273
    9. '.Y' → logprob: -19.250097274780273
    10. '
' → logprob: -19.500097274780273

Token 97: '})' (ID: 9263)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47494566440582275
    2. ')"' → logprob: -0.9749456644058228
    3. ')")' → logprob: -7.599945545196533
    4. '})' → logprob: -8.599946022033691
    5. '}")' → logprob: -10.224946022033691
    6. '}' → logprob: -10.224946022033691
    7. '}"' → logprob: -10.349946022033691
    8. ')}' → logprob: -10.474946022033691
    9. '")' → logprob: -10.599946022033691
    10. ')">' → logprob: -11.474946022033691

Token 98: '"

' (ID: 2678)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0012640443164855242
    2. ')' → logprob: -7.5012640953063965
    3. '<|end|>' → logprob: -8.001263618469238
    4. '"""' → logprob: -9.126263618469238
    5. '```' → logprob: -9.876263618469238
    6. ')"' → logprob: -9.876263618469238
    7. '"
' → logprob: -10.376263618469238
    8. '
' → logprob: -10.626263618469238
    9. '")' → logprob: -10.751263618469238
    10. '"}' → logprob: -11.001263618469238

Token 99: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7086427807807922
    2. '
' → logprob: -0.8336427807807922
    3. '    
' → logprob: -3.5836427211761475
    4. ' 
' → logprob: -4.583642959594727
    5. ' ' → logprob: -5.333642959594727
    6. 'd' → logprob: -5.333642959594727
    7. '<|end|>' → logprob: -5.333642959594727
    8. '\n' → logprob: -5.583642959594727
    9. 'def' → logprob: -5.833642959594727
    10. 'n' → logprob: -6.083642959594727

Token 100: ' Line' (ID: 11342)
  Prédit: ' Triangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Triangle' → logprob: -0.19492872059345245
    2. ' Line' → logprob: -2.8199286460876465
    3. ' Polygon' → logprob: -2.9449286460876465
    4. ' Circle' → logprob: -3.4449286460876465
    5. ' Rectangle' → logprob: -4.4449286460876465
    6. 'Triangle' → logprob: -4.5699286460876465
    7. ' Vector' → logprob: -5.3199286460876465
    8. 'Line' → logprob: -6.8199286460876465
    9. 'Polygon' → logprob: -7.0699286460876465
    10. 'Circle' → logprob: -7.0699286460876465

Token 101: 'Segment' (ID: 24880)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0030822865664958954
    2. ':
' → logprob: -5.878082275390625
    3. 'Segment' → logprob: -8.878082275390625
    4. '():' → logprob: -10.003082275390625
    5. '<|end|>' → logprob: -10.128082275390625
    6. '):' → logprob: -11.128082275390625
    7. ':

' → logprob: -11.628082275390625
    8. '(Point' → logprob: -11.878082275390625
    9. ' :' → logprob: -12.378082275390625
    10. '(object' → logprob: -12.753082275390625

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0036972241941839457
    2. ':
' → logprob: -6.378697395324707
    3. '):' → logprob: -7.253697395324707
    4. ' :' → logprob: -7.378697395324707
    5. '<|end|>' → logprob: -7.878697395324707
    6. '(' → logprob: -8.628697395324707
    7. '(Point' → logprob: -9.878697395324707
    8. '(object' → logprob: -11.378697395324707
    9. '(Line' → logprob: -12.253697395324707
    10. '>:' → logprob: -12.253697395324707

Token 103: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0010822329204529524
    2. ' __' → logprob: -7.626082420349121
    3. '    
' → logprob: -8.001082420349121
    4. '__' → logprob: -9.376082420349121
    5. ' 
' → logprob: -10.376082420349121
    6. '  ' → logprob: -10.501082420349121
    7. 'def' → logprob: -10.626082420349121
    8. ' ' → logprob: -10.751082420349121
    9. '
' → logprob: -11.251082420349121
    10. '    ' → logprob: -11.751082420349121

Token 104: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.08769615739583969
    2. '__' (adapté à ' __') → logprob: -2.962696075439453
    3. '   ' → logprob: -3.962696075439453
    4. 'def' → logprob: -4.962696075439453
    5. ' def' → logprob: -5.087696075439453
    6. ' ' → logprob: -9.837696075439453
    7. '```' → logprob: -11.837696075439453
    8. '  ' → logprob: -12.212696075439453
    9. ' ' → logprob: -12.337696075439453
    10. '.__' → logprob: -12.337696075439453

Token 105: 'slots' (ID: 101916)
  Prédit: 'slots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -0.006773988250643015
    2. '_slots' → logprob: -5.006773948669434
    3. '__' → logprob: -9.881773948669434
    4. ' slots' → logprob: -12.131773948669434
    5. 'sl' → logprob: -13.381773948669434
    6. 'slot' → logprob: -15.506773948669434
    7. '_slot' → logprob: -16.63177490234375
    8. '_sl' → logprob: -16.63177490234375
    9. 'spots' → logprob: -16.75677490234375
    10. 'Slots' → logprob: -16.88177490234375

Token 106: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.033990632742643356
    2. '=' → logprob: -4.033990859985352
    3. ' =' → logprob: -4.158990859985352
    4. '_' → logprob: -10.283990859985352
    5. '=['' → logprob: -10.908990859985352
    6. '<|end|>' → logprob: -11.533990859985352
    7. '__('' → logprob: -12.158990859985352
    8. '__:' → logprob: -12.283990859985352
    9. '=('' → logprob: -12.533990859985352
    10. '___' → logprob: -12.908990859985352

Token 107: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018198875710368156
    2. '=' → logprob: -4.0181989669799805
    3. '=('' → logprob: -10.39319896697998
    4. ' ' → logprob: -12.14319896697998
    5. '   ' → logprob: -12.39319896697998
    6. '__' → logprob: -12.89319896697998
    7. '=['' → logprob: -12.89319896697998
    8. ')' → logprob: -13.76819896697998
    9. ' =
' → logprob: -15.01819896697998
    10. ',' → logprob: -15.26819896697998

Token 108: ' ('' (ID: 9906)
  Prédit: ' (''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ('' → logprob: -0.1281139999628067
    2. '('' → logprob: -2.1281139850616455
    3. '('_' → logprob: -6.878114223480225
    4. '('__' → logprob: -9.503113746643066
    5. ' '' → logprob: -10.503113746643066
    6. '   ' → logprob: -10.628113746643066
    7. ' ' → logprob: -11.503113746643066
    8. ''s' → logprob: -11.878113746643066
    9. ''' → logprob: -12.628113746643066
    10. '(' → logprob: -12.878113746643066

Token 109: 'p' (ID: 79)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.39009398221969604
    2. 'p' → logprob: -1.1400940418243408
    3. 'a' → logprob: -6.140093803405762
    4. 'point' → logprob: -7.640093803405762
    5. '_start' → logprob: -7.640093803405762
    6. '_p' → logprob: -10.265093803405762
    7. 'pt' → logprob: -10.390093803405762
    8. '_point' → logprob: -11.265093803405762
    9. ' start' → logprob: -12.140093803405762
    10. '_a' → logprob: -12.515093803405762

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000597712118178606
    2. 'oint' → logprob: -8.250597953796387
    3. 'oints' → logprob: -8.625597953796387
    4. 'a' → logprob: -8.875597953796387
    5. '0' → logprob: -11.500597953796387
    6. '_start' → logprob: -13.250597953796387
    7. 'start' → logprob: -13.250597953796387
    8. 's' → logprob: -14.500597953796387
    9. '')' → logprob: -14.625597953796387
    10. 'r' → logprob: -14.750597953796387

Token 111: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0028084407094866037
    2. ',' → logprob: -5.877808570861816
    3. '','' → logprob: -13.627808570861816
    4. ' ',' → logprob: -13.877808570861816
    5. '",' → logprob: -14.002808570861816
    6. '   ' → logprob: -15.127808570861816
    7. ''' → logprob: -16.2528076171875
    8. 'p' → logprob: -16.3778076171875
    9. '',
' → logprob: -16.5028076171875
    10. ' ,' → logprob: -17.5028076171875

Token 112: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.1270170211791992
    2. ' '' → logprob: -1.1270170211791992
    3. ''p' → logprob: -1.3770170211791992
    4. ' p' → logprob: -2.627017021179199
    5. 'p' → logprob: -3.627017021179199
    6. ''s' → logprob: -8.0020170211792
    7. ' ' → logprob: -8.7520170211792
    8. ')' → logprob: -9.3770170211792
    9. ',' → logprob: -10.3770170211792
    10. '<|end|>' → logprob: -11.1270170211792

Token 113: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0001249925117008388
    2. ' p' → logprob: -9.00012493133545
    3. '<|end|>' → logprob: -14.87512493133545
    4. ' ' → logprob: -15.00012493133545
    5. '   ' → logprob: -15.37512493133545
    6. '<|end|>' → logprob: -16.250125885009766
    7. '1' → logprob: -16.375125885009766
    8. '2' → logprob: -16.500125885009766
    9. '
' → logprob: -16.750125885009766
    10. '  ' → logprob: -16.875125885009766

Token 114: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0280383548888494e-06
    2. 'oints' → logprob: -14.750000953674316
    3. 'oint' → logprob: -15.625000953674316
    4. 'ython' → logprob: -15.750000953674316
    5. 'p' → logprob: -16.500001907348633
    6. '<|end|>' → logprob: -17.375001907348633
    7. '<|end|>' → logprob: -17.625001907348633
    8. '۲' → logprob: -18.250001907348633
    9. ')' → logprob: -18.625001907348633
    10. '₂' → logprob: -18.750001907348633

Token 115: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.006829036865383387
    2. '')
' → logprob: -5.006829261779785
    3. ')' → logprob: -9.381829261779785
    4. '',' → logprob: -10.881829261779785
    5. '')

' → logprob: -12.131829261779785
    6. '   ' → logprob: -13.131829261779785
    7. ''' → logprob: -13.506829261779785
    8. '')
' → logprob: -14.131829261779785
    9. ',' → logprob: -14.631829261779785
    10. '")' → logprob: -15.131829261779785

Token 116: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000918604782782495
    2. '
' → logprob: -7.125918388366699
    3. '    
' → logprob: -9.7509183883667
    4. 'def' → logprob: -10.0009183883667
    5. ' def' → logprob: -12.2509183883667
    6. '	def' → logprob: -12.8759183883667
    7. '  ' → logprob: -14.0009183883667
    8. '    ' → logprob: -14.3759183883667
    9. '  
' → logprob: -14.8759183883667
    10. '
' → logprob: -15.2509183883667

Token 117: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.041492562741041183
    2. '   ' → logprob: -3.541492462158203
    3. ' def' → logprob: -4.541492462158203
    4. '
' → logprob: -6.916492462158203
    5. '    
' → logprob: -11.416492462158203
    6. '	def' → logprob: -11.541492462158203
    7. '  ' → logprob: -14.166492462158203
    8. ' 
' → logprob: -14.166492462158203
    9. '

' → logprob: -14.416492462158203
    10. ' ' → logprob: -14.541492462158203

Token 118: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.0008097442332655191
    2. '__' → logprob: -7.125809669494629
    3. ' def' → logprob: -12.625809669494629
    4. ' ' → logprob: -13.750809669494629
    5. ' ' → logprob: -14.250809669494629
    6. 'def' → logprob: -16.375810623168945
    7. '_init' → logprob: -16.375810623168945
    8. '.__' → logprob: -17.750810623168945
    9. ' _' → logprob: -18.000810623168945
    10. ' init' → logprob: -18.125810623168945

Token 119: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -4.656383680412546e-05
    2. '_init' → logprob: -10.500046730041504
    3. 'def' → logprob: -11.125046730041504
    4. 'nit' → logprob: -13.625046730041504
    5. ' init' → logprob: -14.125046730041504
    6. '   ' → logprob: -14.250046730041504
    7. 'ini' → logprob: -14.375046730041504
    8. '__' → logprob: -15.125046730041504
    9. '```' → logprob: -15.625046730041504
    10. '	init' → logprob: -16.000045776367188

Token 120: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0021395552903413773
    2. '__' → logprob: -6.252139568328857
    3. '(self' → logprob: -9.0021390914917
    4. '__(
' → logprob: -9.5021390914917
    5. '__((' → logprob: -12.0021390914917
    6. '__('' → logprob: -13.0021390914917
    7. '(' → logprob: -13.3771390914917
    8. '__(*' → logprob: -13.6271390914917
    9. '_(' → logprob: -14.3771390914917
    10. 'self' → logprob: -14.5021390914917

Token 121: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.747814349073451e-05
    2. ' self' → logprob: -11.000017166137695
    3. '(self' → logprob: -15.250017166137695
    4. '<|end|>' → logprob: -15.375017166137695
    5. '
' → logprob: -16.625017166137695
    6. ',' → logprob: -16.625017166137695
    7. '   ' → logprob: -17.500017166137695
    8. 's' → logprob: -17.625017166137695
    9. '	self' → logprob: -17.750017166137695
    10. '       ' → logprob: -17.875017166137695

Token 122: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0501941442489624
    2. 'self' → logprob: -3.175194263458252
    3. ' self' → logprob: -5.425194263458252
    4. ' ,' → logprob: -6.175194263458252
    5. '(self' → logprob: -8.425193786621094
    6. '<|end|>' → logprob: -8.550193786621094
    7. ' ' → logprob: -8.675193786621094
    8. ',self' → logprob: -10.050193786621094
    9. ' p' → logprob: -10.800193786621094
    10. ')' → logprob: -11.050193786621094

Token 123: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10027783364057541
    2. ' p' → logprob: -2.350277900695801
    3. 'self' → logprob: -9.7252779006958
    4. '_p' → logprob: -12.9752779006958
    5. ',' → logprob: -13.2252779006958
    6. ' self' → logprob: -13.4752779006958
    7. '<|end|>' → logprob: -13.8502779006958
    8. ')' → logprob: -14.1002779006958
    9. 'point' → logprob: -14.3502779006958
    10. 'x' → logprob: -14.6002779006958

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '<|end|>' → logprob: -14.750000953674316
    3. ' ' → logprob: -16.0
    4. 'oint' → logprob: -16.25
    5. '_' → logprob: -16.75
    6. 'oints' → logprob: -17.125
    7. '<|end|>' → logprob: -17.5625
    8. '```' → logprob: -17.6875
    9. ')' → logprob: -17.75
    10. '   ' → logprob: -17.9375

Token 125: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003234262694604695
    2. ':' → logprob: -8.625323295593262
    3. ' ,' → logprob: -9.125323295593262
    4. '<|end|>' → logprob: -10.375323295593262
    5. ',p' → logprob: -13.375323295593262
    6. ')' → logprob: -14.500323295593262
    7. '<|end|>' → logprob: -14.625323295593262
    8. '):' → logprob: -15.375323295593262
    9. '‌,' → logprob: -15.375323295593262
    10. ' ' → logprob: -15.750323295593262

Token 126: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.16024139523506165
    2. ' Point' → logprob: -1.9102413654327393
    3. '_Point' → logprob: -11.78524112701416
    4. '	Point' → logprob: -11.91024112701416
    5. '_point' → logprob: -13.91024112701416
    6. '<Point' → logprob: -14.16024112701416
    7. '.Point' → logprob: -14.78524112701416
    8. '(Point' → logprob: -15.16024112701416
    9. ')' → logprob: -15.28524112701416
    10. '<|end|>' → logprob: -15.53524112701416

Token 127: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.741137283621356e-05
    2. ' ,' → logprob: -9.875057220458984
    3. ',p' → logprob: -12.250057220458984
    4. '‌,' → logprob: -14.875057220458984
    5. '<|end|>' → logprob: -15.750057220458984
    6. ',
' → logprob: -16.000057220458984
    7. ')' → logprob: -16.000057220458984
    8. ' ' → logprob: -16.375057220458984
    9. 'p' → logprob: -16.375057220458984
    10. ' p' → logprob: -16.875057220458984

Token 128: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.04301003739237785
    2. 'p' → logprob: -3.1680099964141846
    3. ' ' → logprob: -12.418009757995605
    4. ')' → logprob: -12.543009757995605
    5. ' ' → logprob: -14.043009757995605
    6. ',' → logprob: -14.793009757995605
    7. ' 
' → logprob: -14.793009757995605
    8. ')p' → logprob: -14.918009757995605
    9. '<|end|>' → logprob: -15.293009757995605
    10. ',p' → logprob: -15.668009757995605

Token 129: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -13.375003814697266
    3. ',' → logprob: -14.000003814697266
    4. ')' → logprob: -14.375003814697266
    5. '۲' → logprob: -16.125003814697266
    6. '   ' → logprob: -16.375003814697266
    7. '<|end|>' → logprob: -16.375003814697266
    8. '1' → logprob: -16.500003814697266
    9. '.' → logprob: -16.500003814697266
    10. '₂' → logprob: -17.000003814697266

Token 130: ':' (ID: 25)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01364741288125515
    2. '):' → logprob: -4.388647556304932
    3. ':' → logprob: -7.263647556304932
    4. ' )' → logprob: -8.763647079467773
    5. ' ' → logprob: -9.388647079467773
    6. '):
' → logprob: -9.888647079467773
    7. ',' → logprob: -9.888647079467773
    8. '<|end|>' → logprob: -10.388647079467773
    9. '=' → logprob: -11.138647079467773
    10. ' ):' → logprob: -11.388647079467773

Token 131: ' Point' (ID: 9971)
  Prédit: ' Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.22312724590301514
    2. 'Point' → logprob: -1.8481272459030151
    3. ' p' → logprob: -3.2231273651123047
    4. 'p' → logprob: -6.098127365112305
    5. ')' → logprob: -8.348127365112305
    6. '	Point' → logprob: -10.223127365112305
    7. ' )' → logprob: -10.473127365112305
    8. '_point' → logprob: -10.973127365112305
    9. '_Point' → logprob: -11.098127365112305
    10. '<Point' → logprob: -11.348127365112305

Token 132: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0012496389681473374
    2. '):
' → logprob: -7.12624979019165
    3. ')' → logprob: -7.75124979019165
    4. ':' → logprob: -11.751249313354492
    5. ' ):' → logprob: -12.126249313354492
    6. ''):' → logprob: -14.876249313354492
    7. '   ' → logprob: -14.876249313354492
    8. '):
' → logprob: -15.251249313354492
    9. ',' → logprob: -15.751249313354492
    10. '):

' → logprob: -16.126249313354492

Token 133: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006596576422452927
    2. ' self' → logprob: -8.875659942626953
    3. '<|end|>' → logprob: -9.125659942626953
    4. '   ' → logprob: -9.625659942626953
    5. ')' → logprob: -9.625659942626953
    6. ' ' → logprob: -9.750659942626953
    7. 'self' → logprob: -9.875659942626953
    8. ',' → logprob: -9.875659942626953
    9. '        
' → logprob: -10.375659942626953
    10. '):
' → logprob: -10.750659942626953

Token 134: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04869217425584793
    2. ' self' → logprob: -3.048692226409912
    3. '       ' → logprob: -9.173691749572754
    4. '	self' → logprob: -14.423691749572754
    5. '   ' → logprob: -15.298691749572754
    6. '
' → logprob: -15.798691749572754
    7. ' ' → logprob: -16.54869270324707
    8. '(self' → logprob: -17.67369270324707
    9. '        ' → logprob: -17.79869270324707
    10. '        
' → logprob: -18.04869270324707

Token 135: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.08933494240045547
    2. '.' → logprob: -2.4643349647521973
    3. 'p' → logprob: -8.089334487915039
    4. ' .' → logprob: -9.589334487915039
    5. ' p' → logprob: -12.339334487915039
    6. ').' → logprob: -12.839334487915039
    7. ' ' → logprob: -13.214334487915039
    8. 's' → logprob: -13.339334487915039
    9. '.py' → logprob: -13.339334487915039
    10. '.п' → logprob: -13.839334487915039

Token 136: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. 'p' → logprob: -14.875000953674316
    3. ' ' → logprob: -16.125
    4. 'oints' → logprob: -16.3125
    5. '```' → logprob: -16.75
    6. '   ' → logprob: -17.0625
    7. '=' → logprob: -17.3125
    8. 's' → logprob: -17.625
    9. '_' → logprob: -17.625
    10. ' =' → logprob: -17.875

Token 137: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043047718703746796
    2. '=' → logprob: -3.1680476665496826
    3. ' ' → logprob: -10.168047904968262
    4. ',' → logprob: -12.418047904968262
    5. '=p' → logprob: -12.418047904968262
    6. ')' → logprob: -13.793047904968262
    7. ' =
' → logprob: -14.668047904968262
    8. '.' → logprob: -15.918047904968262
    9. '<|end|>' → logprob: -16.293046951293945
    10. ' =)' → logprob: -16.418046951293945

Token 138: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.251930296421051
    2. 'p' → logprob: -1.5019302368164062
    3. ' ' → logprob: -15.501930236816406
    4. '<|end|>' → logprob: -15.751930236816406
    5. ' ' → logprob: -15.876930236816406
    6. '_p' → logprob: -16.001930236816406
    7. '	p' → logprob: -16.251930236816406
    8. ')p' → logprob: -16.251930236816406
    9. ' п' → logprob: -16.501930236816406
    10. ' 
' → logprob: -16.751930236816406

Token 139: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.003614801215007901
    2. '.' → logprob: -5.628614902496338
    3. '.p' → logprob: -11.87861442565918
    4. ',' → logprob: -13.50361442565918
    5. '2' → logprob: -13.62861442565918
    6. 'p' → logprob: -13.62861442565918
    7. ' .' → logprob: -14.25361442565918
    8. ' p' → logprob: -14.37861442565918
    9. '.Point' → logprob: -14.87861442565918
    10. '' → logprob: -14.87861442565918

Token 140: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.02462216466665268
    2. '       ' → logprob: -4.024621963500977
    3. '<|end|>' → logprob: -5.649621963500977
    4. ' 
' → logprob: -6.899621963500977
    5. '        
' → logprob: -7.399621963500977
    6. '  
' → logprob: -7.399621963500977
    7. 'self' → logprob: -8.024621963500977
    8. '
' → logprob: -9.149621963500977
    9. '    
' → logprob: -9.274621963500977
    10. '<|end|>' → logprob: -9.899621963500977

Token 141: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012952557764947414
    2. '
' → logprob: -4.3879523277282715
    3. '<|end|>' → logprob: -8.51295280456543
    4. '  
' → logprob: -9.13795280456543
    5. '        
' → logprob: -10.01295280456543
    6. '   ' → logprob: -10.63795280456543
    7. ' 
' → logprob: -10.88795280456543
    8. '    
' → logprob: -10.88795280456543
    9. ' ' → logprob: -11.76295280456543
    10. 'self' → logprob: -12.51295280456543

Token 142: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.017269941046833992
    2. ' self' → logprob: -4.142270088195801
    3. 'p' → logprob: -6.767270088195801
    4. '       ' → logprob: -10.1422700881958
    5. ' p' → logprob: -10.1422700881958
    6. '
' → logprob: -13.2672700881958
    7. '   ' → logprob: -13.8922700881958
    8. 's' → logprob: -14.0172700881958
    9. ' ' → logprob: -14.3922700881958
    10. '        ' → logprob: -15.1422700881958

Token 143: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.16521857678890228
    2. '.' → logprob: -2.0402185916900635
    3. 'p' → logprob: -3.9152185916900635
    4. '2' → logprob: -6.165218353271484
    5. ' .' → logprob: -9.540218353271484
    6. ' p' → logprob: -9.665218353271484
    7. ' ' → logprob: -10.665218353271484
    8. '```' → logprob: -11.165218353271484
    9. '<p' → logprob: -11.790218353271484
    10. ')' → logprob: -11.790218353271484

Token 144: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.796184723294573e-06
    2. '۲' → logprob: -13.125005722045898
    3. ' ' → logprob: -13.750005722045898
    4. '1' → logprob: -15.062505722045898
    5. '२' → logprob: -15.437505722045898
    6. '   ' → logprob: -15.625005722045898
    7. 'p' → logprob: -15.687505722045898
    8. '২' → logprob: -15.750005722045898
    9. '٢' → logprob: -15.875005722045898
    10. '２' → logprob: -15.937505722045898

Token 145: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2030634880065918
    2. ' =' → logprob: -1.7030634880065918
    3. '.' → logprob: -6.703063488006592
    4. '<|end|>' → logprob: -8.20306396484375
    5. ')' → logprob: -9.70306396484375
    6. '=p' → logprob: -10.82806396484375
    7. ' ' → logprob: -10.82806396484375
    8. '.=' → logprob: -11.45306396484375
    9. '<|end|>' → logprob: -11.45306396484375
    10. 'p' → logprob: -12.07806396484375

Token 146: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.38687241077423096
    2. 'p' → logprob: -1.136872410774231
    3. ' ' → logprob: -14.011872291564941
    4. '	p' → logprob: -15.511872291564941
    5. ' ' → logprob: -15.636872291564941
    6. '<p' → logprob: -16.386873245239258
    7. '<|end|>' → logprob: -16.511873245239258
    8. ' п' → logprob: -17.886873245239258
    9. '(p' → logprob: -17.949373245239258
    10. '_p' → logprob: -18.261873245239258

Token 147: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.893480243277736e-05
    2. 'p' → logprob: -10.375039100646973
    3. 't' → logprob: -12.375039100646973
    4. '.' → logprob: -13.250039100646973
    5. ' ' → logprob: -15.000039100646973
    6. '.p' → logprob: -15.000039100646973
    7. '1' → logprob: -15.250039100646973
    8. '```' → logprob: -15.875039100646973
    9. ' p' → logprob: -16.375038146972656
    10. 's' → logprob: -16.375038146972656

Token 148: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2077053189277649
    2. '   ' → logprob: -1.7077052593231201
    3. '    
' → logprob: -5.082705497741699
    4. '<|end|>' → logprob: -10.7077054977417
    5. 'def' → logprob: -11.4577054977417
    6. '        
' → logprob: -11.7077054977417
    7. '  
' → logprob: -11.7077054977417
    8. ' 
' → logprob: -12.0827054977417
    9. ' def' → logprob: -12.8327054977417
    10. '   
' → logprob: -12.9577054977417

Token 149: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10812061280012131
    2. '   ' → logprob: -2.3581206798553467
    3. '    
' → logprob: -4.858120441436768
    4. '  
' → logprob: -9.983120918273926
    5. '   
' → logprob: -10.733120918273926
    6. ' 
' → logprob: -11.483120918273926
    7. 'def' → logprob: -11.733120918273926
    8. '        
' → logprob: -11.733120918273926
    9. '<|end|>' → logprob: -11.858120918273926
    10. '
    
' → logprob: -12.858120918273926

Token 150: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.47495338320732117
    2. 'def' (adapté à ' def') → logprob: -1.2249534130096436
    3. '   ' → logprob: -2.4749534130096436
    4. '    
' → logprob: -9.474953651428223
    5. '	def' → logprob: -11.099953651428223
    6. ' 
' → logprob: -11.349953651428223
    7. ' ' → logprob: -11.349953651428223
    8. '
' → logprob: -11.599953651428223
    9. ')' → logprob: -12.224953651428223
    10. '    ' → logprob: -12.599953651428223

Token 151: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.005198536440730095
    2. 'length' → logprob: -5.5051984786987305
    3. ' def' → logprob: -7.0051984786987305
    4. ' distance' → logprob: -8.88019847869873
    5. 'def' → logprob: -10.25519847869873
    6. 'distance' → logprob: -10.38019847869873
    7. '_length' → logprob: -12.63019847869873
    8. ' lenght' → logprob: -13.38019847869873
    9. ' is' → logprob: -14.00519847869873
    10. ' direction' → logprob: -15.13019847869873

Token 152: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0017153972294181585
    2. '(' → logprob: -6.376715183258057
    3. ' (' → logprob: -11.751715660095215
    4. '(
' → logprob: -12.751715660095215
    5. 'self' → logprob: -13.626715660095215
    6. '(s' → logprob: -14.751715660095215
    7. '()' → logprob: -15.251715660095215
    8. '   ' → logprob: -15.751715660095215
    9. ' self' → logprob: -16.0017147064209
    10. ' ' → logprob: -16.1267147064209

Token 153: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.08462469279766083
    2. ')' → logprob: -3.209624767303467
    3. '):
' → logprob: -3.209624767303467
    4. '):

' → logprob: -8.584624290466309
    5. 'self' → logprob: -9.334624290466309
    6. ' ):' → logprob: -9.334624290466309
    7. '()' → logprob: -11.334624290466309
    8. '(self' → logprob: -12.209624290466309
    9. '():' → logprob: -12.459624290466309
    10. '):
' → logprob: -12.459624290466309

Token 154: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5523040890693665
    2. ' ->' → logprob: -1.5523040294647217
    3. '->' → logprob: -2.3023040294647217
    4. ')' → logprob: -2.4273040294647217
    5. '=' → logprob: -4.927304267883301
    6. '):' → logprob: -5.677304267883301
    7. '(self' → logprob: -5.927304267883301
    8. '       ' → logprob: -6.302304267883301
    9. '   ' → logprob: -6.677304267883301
    10. ' =' → logprob: -6.677304267883301

Token 155: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.10156099498271942
    2. 'float' → logprob: -2.3515610694885254
    3. ' self' → logprob: -6.726561069488525
    4. 'self' → logprob: -8.851560592651367
    5. ' ' → logprob: -12.601560592651367
    6. ' ' → logprob: -12.726560592651367
    7. '(float' → logprob: -13.601560592651367
    8. ' int' → logprob: -13.726560592651367
    9. '	float' → logprob: -14.351560592651367
    10. 'int' → logprob: -14.851560592651367

Token 156: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0025661452673375607
    2. '(self' → logprob: -6.627566337585449
    3. ':
' → logprob: -7.002566337585449
    4. '):' → logprob: -9.12756633758545
    5. '       ' → logprob: -9.37756633758545
    6. '(' → logprob: -10.12756633758545
    7. '():' → logprob: -10.37756633758545
    8. 'self' → logprob: -10.62756633758545
    9. '   ' → logprob: -11.25256633758545
    10. '=' → logprob: -11.50256633758545

Token 157: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014655604027211666
    2. ' return' → logprob: -4.514655590057373
    3. 'return' → logprob: -5.639655590057373
    4. '
' → logprob: -10.639656066894531
    5. ' 
' → logprob: -12.014656066894531
    6. '        
' → logprob: -12.264656066894531
    7. '   ' → logprob: -12.514656066894531
    8. ':return' → logprob: -13.139656066894531
    9. '{return' → logprob: -13.764656066894531
    10. '	return' → logprob: -14.139656066894531

Token 158: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.1002611368894577
    2. ' return' → logprob: -2.3502612113952637
    3. '       ' → logprob: -9.850260734558105
    4. 'self' → logprob: -13.475260734558105
    5. '```' → logprob: -15.975260734558105
    6. ' self' → logprob: -16.225261688232422
    7. '	return' → logprob: -16.475261688232422
    8. ':return' → logprob: -17.475261688232422
    9. ' ' → logprob: -17.725261688232422
    10. 'eturn' → logprob: -18.100261688232422

Token 159: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.6932821273803711
    2. 'self' → logprob: -0.6932821273803711
    3. 'hyp' → logprob: -9.068282127380371
    4. ' hypot' → logprob: -11.443282127380371
    5. ' hyp' → logprob: -12.068282127380371
    6. '(self' → logprob: -13.818282127380371
    7. '	self' → logprob: -13.943282127380371
    8. 's' → logprob: -15.443282127380371
    9. '$self' → logprob: -15.443282127380371
    10. ' ' → logprob: -15.568282127380371

Token 160: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0015586663503199816
    2. '.' → logprob: -6.501558780670166
    3. '.length' → logprob: -10.001558303833008
    4. '.distance' → logprob: -12.126558303833008
    5. ' .' → logprob: -13.126558303833008
    6. 'p' → logprob: -13.376558303833008
    7. '.segment' → logprob: -14.251558303833008
    8. '.line' → logprob: -14.501558303833008
    9. '.point' → logprob: -15.376558303833008
    10. '.s' → logprob: -15.376558303833008

Token 161: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.153795766294934e-06
    2. 'oints' → logprob: -13.500005722045898
    3. 'length' → logprob: -13.500005722045898
    4. 'distance' → logprob: -13.875005722045898
    5. '2' → logprob: -14.000005722045898
    6. 'oint' → logprob: -14.375005722045898
    7. 'l' → logprob: -15.250005722045898
    8. 'p' → logprob: -15.875005722045898
    9. 't' → logprob: -16.3750057220459
    10. 'ength' → logprob: -16.5000057220459

Token 162: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -0.00020580526324920356
    2. '.' → logprob: -8.500205993652344
    3. '.dist' → logprob: -13.625205993652344
    4. 'distance' → logprob: -14.250205993652344
    5. '.Distance' → logprob: -15.500205993652344
    6. ' .' → logprob: -16.250205993652344
    7. '.position' → logprob: -17.500205993652344
    8. ').' → logprob: -17.500205993652344
    9. '.point' → logprob: -17.875205993652344
    10. '.degree' → logprob: -18.750205993652344

Token 163: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -4.320199877838604e-07
    2. '_' → logprob: -14.75
    3. '_t' → logprob: -17.5
    4. ' _' → logprob: -20.125
    5. 'to' → logprob: -21.25
    6. '(_' → logprob: -21.25
    7. '_TO' → logprob: -21.375
    8. ')_' → logprob: -21.375
    9. '_of' → logprob: -21.5
    10. '__' → logprob: -21.75

Token 164: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004307884373702109
    2. '(' → logprob: -7.750430583953857
    3. 'self' → logprob: -17.250431060791016
    4. '(

' → logprob: -18.125431060791016
    5. ' (' → logprob: -18.375431060791016
    6. '(
' → logprob: -18.375431060791016
    7. '(this' → logprob: -18.500431060791016
    8. ' self' → logprob: -19.625431060791016
    9. '(s' → logprob: -19.875431060791016
    10. '(sel' → logprob: -21.625431060791016

Token 165: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0005605389014817774
    2. '.' → logprob: -7.500560760498047
    3. ').' → logprob: -12.250560760498047
    4. ' .' → logprob: -13.250560760498047
    5. 'p' → logprob: -14.625560760498047
    6. ')' → logprob: -14.875560760498047
    7. '.)' → logprob: -15.875560760498047
    8. '2' → logprob: -17.000560760498047
    9. '.п' → logprob: -17.125560760498047
    10. '.s' → logprob: -18.125560760498047

Token 166: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. '۲' → logprob: -16.25
    3. ' ' → logprob: -16.75
    4. ')' → logprob: -16.75
    5. '```' → logprob: -17.5
    6. '₂' → logprob: -17.625
    7. '1' → logprob: -17.8125
    8. 't' → logprob: -18.0
    9. '２' → logprob: -18.0625
    10. '٢' → logprob: -18.1875

Token 167: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.512236498361744e-07
    2. ')
' → logprob: -15.000000953674316
    3. ' )' → logprob: -16.75
    4. '())' → logprob: -17.0
    5. '()' → logprob: -17.375
    6. ')return' → logprob: -17.5
    7. ')

' → logprob: -17.625
    8. '))' → logprob: -18.0
    9. '<|end|>' → logprob: -18.375
    10. '}' → logprob: -18.625

Token 168: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6070724129676819
    2. '
' → logprob: -0.8570724129676819
    3. '    
' → logprob: -3.732072353363037
    4. ' 
' → logprob: -5.732072353363037
    5. '  
' → logprob: -6.232072353363037
    6. '   
' → logprob: -7.357072353363037
    7. '```' → logprob: -8.607072830200195
    8. ' ' → logprob: -8.857072830200195
    9. 'def' → logprob: -9.357072830200195
    10. '  ' → logprob: -9.357072830200195

Token 169: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.4806489646434784
    2. '   ' → logprob: -0.9806489944458008
    3. ' def' → logprob: -5.105648994445801
    4. '    
' → logprob: -8.4806489944458
    5. '
' → logprob: -8.8556489944458
    6. ' ' → logprob: -9.8556489944458
    7. '  ' → logprob: -10.4806489944458
    8. '	def' → logprob: -10.9806489944458
    9. '    ' → logprob: -11.2306489944458
    10. ')' → logprob: -11.9806489944458

Token 170: ' distance' (ID: 9324)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.008669291622936726
    2. ' __' → logprob: -5.758669376373291
    3. 'def' → logprob: -5.883669376373291
    4. ' midpoint' → logprob: -6.883669376373291
    5. ' is' → logprob: -7.383669376373291
    6. ' intersects' → logprob: -8.008668899536133
    7. ' _' → logprob: -9.133668899536133
    8. ' contains' → logprob: -9.258668899536133
    9. ' ' → logprob: -9.258668899536133
    10. '_' → logprob: -9.383668899536133

Token 171: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.000375380739569664
    2. '_' → logprob: -8.625375747680664
    3. '_between' → logprob: -8.750375747680664
    4. '_from' → logprob: -10.250375747680664
    5. '_t' → logprob: -14.375375747680664
    6. '(' → logprob: -15.125375747680664
    7. '(self' → logprob: -15.375375747680664
    8. '_self' → logprob: -15.750375747680664
    9. '_(' → logprob: -16.000375747680664
    10. ')_' → logprob: -16.375375747680664

Token 172: '_point' (ID: 15466)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.03376464545726776
    2. '(' → logprob: -3.408764600753784
    3. 'self' → logprob: -10.033764839172363
    4. ' (' → logprob: -10.033764839172363
    5. '(
' → logprob: -11.408764839172363
    6. '<|end|>' → logprob: -12.158764839172363
    7. '_point' → logprob: -12.283764839172363
    8. ' self' → logprob: -12.783764839172363
    9. '(Point' → logprob: -13.283764839172363
    10. '_line' → logprob: -14.158764839172363

Token 173: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.13286492228507996
    2. '(' → logprob: -2.1328649520874023
    3. ' (' → logprob: -5.132864952087402
    4. '(
' → logprob: -11.632864952087402
    5. 'self' → logprob: -12.882864952087402
    6. ' ' → logprob: -13.007864952087402
    7. '(s' → logprob: -13.132864952087402
    8. ' self' → logprob: -13.507864952087402
    9. '(Point' → logprob: -14.757864952087402
    10. '(

' → logprob: -14.757864952087402

Token 174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0018584381323307753
    2. 'self' → logprob: -6.376858234405518
    3. ' ,' → logprob: -9.251858711242676
    4. ')' → logprob: -9.876858711242676
    5. '(self' → logprob: -12.376858711242676
    6. ' self' → logprob: -13.876858711242676
    7. '       ' → logprob: -14.001858711242676
    8. '   ' → logprob: -14.251858711242676
    9. 's' → logprob: -14.626858711242676
    10. ' ' → logprob: -15.001858711242676

Token 175: ' p' (ID: 275)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.20162655413150787
    2. 'self' → logprob: -1.7016265392303467
    3. ' point' → logprob: -8.701626777648926
    4. 'point' → logprob: -10.451626777648926
    5. ' p' → logprob: -12.076626777648926
    6. '   ' → logprob: -12.701626777648926
    7. ' ' → logprob: -12.826626777648926
    8. 'p' → logprob: -13.576626777648926
    9. '(self' → logprob: -13.576626777648926
    10. '       ' → logprob: -13.576626777648926

Token 176: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9313944578170776
    2. '(self' → logprob: -1.5563944578170776
    3. ':' → logprob: -1.6813944578170776
    4. 'oint' → logprob: -2.056394577026367
    5. '1' → logprob: -3.431394577026367
    6. '   ' → logprob: -4.056394577026367
    7. 'self' → logprob: -4.056394577026367
    8. ')' → logprob: -5.056394577026367
    9. '       ' → logprob: -6.181394577026367
    10. ',' → logprob: -7.056394577026367

Token 177: ' Point' (ID: 9971)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.8158238530158997
    2. ')' → logprob: -1.4408237934112549
    3. ' self' → logprob: -1.8158237934112549
    4. ' ' → logprob: -2.690823793411255
    5. ' Point' → logprob: -2.815823793411255
    6. 'self' → logprob: -4.065824031829834
    7. ' '' → logprob: -4.815824031829834
    8. 'Point' → logprob: -5.815824031829834
    9. ' )
' → logprob: -8.065823554992676
    10. ' ):' → logprob: -8.190823554992676

Token 178: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01821327395737171
    2. '):' → logprob: -4.018213272094727
    3. ' )' → logprob: -10.268213272094727
    4. '):
' → logprob: -10.893213272094727
    5. ' ):' → logprob: -12.518213272094727
    6. '   ' → logprob: -12.768213272094727
    7. ':' → logprob: -13.268213272094727
    8. ')->' → logprob: -13.643213272094727
    9. '       ' → logprob: -15.268213272094727
    10. '):
' → logprob: -15.768213272094727

Token 179: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018562922487035394
    2. ' :' → logprob: -6.751856327056885
    3. '():' → logprob: -8.001855850219727
    4. '):' → logprob: -8.376855850219727
    5. ' ->' → logprob: -9.376855850219727
    6. '->' → logprob: -10.876855850219727
    7. ')' → logprob: -11.876855850219727
    8. '   ' → logprob: -12.751855850219727
    9. ':
' → logprob: -12.876855850219727
    10. ':**' → logprob: -13.126855850219727

Token 180: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.029754191637039185
    2. 'float' → logprob: -3.529754161834717
    3. '	float' → logprob: -13.654754638671875
    4. '(float' → logprob: -13.904754638671875
    5. ' ' → logprob: -14.279754638671875
    6. ' ' → logprob: -15.779754638671875
    7. '   ' → logprob: -16.154754638671875
    8. '=float' → logprob: -16.404754638671875
    9. ')' → logprob: -16.654754638671875
    10. ' def' → logprob: -16.779754638671875

Token 181: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.019675778225064278
    2. '):' → logprob: -4.1446757316589355
    3. '(self' → logprob: -5.8946757316589355
    4. '       ' → logprob: -7.2696757316589355
    5. '   ' → logprob: -10.394676208496094
    6. ':
' → logprob: -10.519676208496094
    7. ':self' → logprob: -10.644676208496094
    8. ' :' → logprob: -10.644676208496094
    9. '():' → logprob: -10.894676208496094
    10. 'self' → logprob: -11.144676208496094

Token 182: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016808905638754368
    2. '        
' → logprob: -7.001680850982666
    3. '
' → logprob: -7.876680850982666
    4. ' 
' → logprob: -8.751681327819824
    5. '        ' → logprob: -8.876681327819824
    6. ' x' → logprob: -10.626681327819824
    7. '    
' → logprob: -11.501681327819824
    8. '   ' → logprob: -11.626681327819824
    9. '```' → logprob: -11.876681327819824
    10. 'x' → logprob: -12.501681327819824

Token 183: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5916292667388916
    2. 'px' → logprob: -1.5916292667388916
    3. '"""' → logprob: -2.9666292667388916
    4. '   ' → logprob: -3.3416292667388916
    5. 'x' → logprob: -3.4666292667388916
    6. 'dx' → logprob: -3.5916292667388916
    7. 'ap' → logprob: -4.0916290283203125
    8. 'A' → logprob: -4.0916290283203125
    9. 'v' → logprob: -4.4666290283203125
    10. 'a' → logprob: -4.5916290283203125

Token 184: ' Compute' (ID: 45438)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.5816298723220825
    2. 'dx' → logprob: -1.7066298723220825
    3. 'px' → logprob: -1.8316298723220825
    4. 'p' → logprob: -2.331629753112793
    5. 'a' → logprob: -2.581629753112793
    6. '"""' → logprob: -2.706629753112793
    7. 'line' → logprob: -3.331629753112793
    8. 'ap' → logprob: -3.331629753112793
    9. 'x' → logprob: -3.581629753112793
    10. '#' → logprob: -3.956629753112793

Token 185: ' distance' (ID: 9324)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.9863987565040588
    2. 'dx' → logprob: -1.486398696899414
    3. 'line' → logprob: -2.111398696899414
    4. '#' → logprob: -2.611398696899414
    5. 'v' → logprob: -2.736398696899414
    6. 'a' → logprob: -3.361398696899414
    7. 'l' → logprob: -3.736398696899414
    8. ' line' → logprob: -3.986398696899414
    9. 'ap' → logprob: -4.736398696899414
    10. 'ab' → logprob: -4.736398696899414

Token 186: ' from' (ID: 591)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6602137684822083
    2. '<|end|>' → logprob: -1.6602137088775635
    3. '   ' → logprob: -2.9102137088775635
    4. 'from' → logprob: -3.2852137088775635
    5. '_vector' → logprob: -3.5352137088775635
    6. 'p' → logprob: -3.6602137088775635
    7. ' from' → logprob: -4.035213947296143
    8. 's' → logprob: -4.285213947296143
    9. ' ' → logprob: -4.410213947296143
    10. '(' → logprob: -4.535213947296143

Token 187: ' point' (ID: 2438)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.34846681356430054
    2. ' p' → logprob: -1.8484668731689453
    3. 'self' → logprob: -2.4734668731689453
    4. ' self' → logprob: -3.7234668731689453
    5. ' the' → logprob: -4.098466873168945
    6. 'the' → logprob: -5.348466873168945
    7. 'point' → logprob: -5.723466873168945
    8. ' point' → logprob: -6.598466873168945
    9. ' line' → logprob: -6.848466873168945
    10. 'line' → logprob: -8.348466873168945

Token 188: ' p' (ID: 275)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.9128265380859375
    2. ' p' → logprob: -1.2878265380859375
    3. 'p' → logprob: -1.4128265380859375
    4. 'to' → logprob: -2.5378265380859375
    5. ' ' → logprob: -9.287826538085938
    6. '   ' → logprob: -9.662826538085938
    7. '<|end|>' → logprob: -10.287826538085938
    8. '(p' → logprob: -11.662826538085938
    9. ' line' → logprob: -11.787826538085938
    10. '<|end|>' → logprob: -12.162826538085938

Token 189: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.1014825850725174
    2. 'to' → logprob: -2.351482629776001
    3. '   ' → logprob: -6.726482391357422
    4. '       ' → logprob: -10.226482391357422
    5. ',' → logprob: -11.726482391357422
    6. '.' → logprob: -12.226482391357422
    7. ':' → logprob: -12.351482391357422
    8. 't' → logprob: -12.601482391357422
    9. '  ' → logprob: -12.976482391357422
    10. ' ' → logprob: -12.976482391357422

Token 190: ' this' (ID: 495)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4585200250148773
    2. ' the' → logprob: -1.7085200548171997
    3. ' self' → logprob: -1.8335200548171997
    4. 'the' → logprob: -3.83351993560791
    5. ' a' → logprob: -6.08351993560791
    6. ' line' → logprob: -6.33351993560791
    7. '       ' → logprob: -8.45851993560791
    8. 'line' → logprob: -8.70851993560791
    9. '(self' → logprob: -8.95851993560791
    10. 'segment' → logprob: -9.33351993560791

Token 191: ' segment' (ID: 14806)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.01966245099902153
    2. ' segment' → logprob: -4.769662380218506
    3. 'line' → logprob: -5.394662380218506
    4. 'Line' → logprob: -6.269662380218506
    5. ' Line' → logprob: -6.269662380218506
    6. 'segment' → logprob: -6.894662380218506
    7. ' p' → logprob: -7.644662380218506
    8. '   ' → logprob: -8.144662857055664
    9. '.' → logprob: -8.644662857055664
    10. '_line' → logprob: -8.769662857055664

Token 192: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37668025493621826
    2. '
' → logprob: -1.7516802549362183
    3. '        
' → logprob: -2.626680374145508
    4. ':' → logprob: -3.626680374145508
    5. '        ' → logprob: -4.126680374145508
    6. '<|end|>' → logprob: -4.501680374145508
    7. '<|end|>' → logprob: -6.001680374145508
    8. '        

' → logprob: -6.501680374145508
    9. ':
' → logprob: -6.626680374145508
    10. '    
' → logprob: -6.751680374145508

Token 193: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005077921785414219
    2. '<|end|>' → logprob: -5.755077838897705
    3. '        
' → logprob: -7.255077838897705
    4. '
' → logprob: -7.880077838897705
    5. ':' → logprob: -8.880078315734863
    6. ',' → logprob: -8.880078315734863
    7. '   ' → logprob: -9.130078315734863
    8. '        ' → logprob: -9.380078315734863
    9. '<|end|>' → logprob: -9.505078315734863
    10. '      ' → logprob: -10.380078315734863

Token 194: ' #' (ID: 1069)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.8678802251815796
    2. 'x' → logprob: -1.1178802251815796
    3. 'px' → logprob: -1.7428802251815796
    4. 'v' → logprob: -3.492880344390869
    5. ' dx' → logprob: -4.867880344390869
    6. 'vx' → logprob: -4.992880344390869
    7. 'A' → logprob: -5.117880344390869
    8. '   ' → logprob: -5.242880344390869
    9. 'line' → logprob: -5.242880344390869
    10. '#' (adapté à ' #') → logprob: -5.742880344390869

Token 195: ' Project' (ID: 8761)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.8427693843841553
    2. 'px' → logprob: -1.3427693843841553
    3. 'x' → logprob: -2.0927693843841553
    4. 'v' → logprob: -2.3427693843841553
    5. 'vx' → logprob: -4.217769622802734
    6. 'a' → logprob: -4.217769622802734
    7. 'A' → logprob: -4.342769622802734
    8. '#' → logprob: -4.717769622802734
    9. '   ' → logprob: -4.717769622802734
    10. 'p' → logprob: -5.092769622802734

Token 196: ' point' (ID: 2438)
  Prédit: ' onto'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' onto' → logprob: -0.9483900666236877
    2. ' the' → logprob: -1.448390007019043
    3. '       ' → logprob: -1.698390007019043
    4. ' p' → logprob: -2.448390007019043
    5. 'p' → logprob: -3.198390007019043
    6. 'self' → logprob: -4.198390007019043
    7. ' self' → logprob: -4.448390007019043
    8. 'the' → logprob: -4.698390007019043
    9. '   ' → logprob: -4.823390007019043
    10. 'ed' → logprob: -5.323390007019043

Token 197: ' p' (ID: 275)
  Prédit: ' onto'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' onto' → logprob: -0.3348245918750763
    2. 'p' → logprob: -1.959824562072754
    3. ' p' → logprob: -2.459824562072754
    4. 'onto' → logprob: -2.959824562072754
    5. ' on' → logprob: -5.459824562072754
    6. ' vector' → logprob: -6.834824562072754
    7. 'on' → logprob: -8.209824562072754
    8. 'vector' → logprob: -8.584824562072754
    9. '   ' → logprob: -8.959824562072754
    10. ' ' → logprob: -9.209824562072754

Token 198: ' onto' (ID: 13291)
  Prédit: ' onto'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' onto' → logprob: -0.012554273009300232
    2. 'onto' → logprob: -5.012554168701172
    3. ' to' → logprob: -5.512554168701172
    4. ' on' → logprob: -7.512554168701172
    5. ' -' → logprob: -7.637554168701172
    6. ' vector' → logprob: -8.012554168701172
    7. '-' → logprob: -9.387554168701172
    8. '.' → logprob: -10.012554168701172
    9. ' line' → logprob: -10.262554168701172
    10. '       ' → logprob: -10.262554168701172

Token 199: ' the' (ID: 290)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.9148113131523132
    2. 'the' → logprob: -0.9148113131523132
    3. ' the' → logprob: -1.664811372756958
    4. ' self' → logprob: -4.914811134338379
    5. 'this' → logprob: -7.539811134338379
    6. '       ' → logprob: -7.914811134338379
    7. '   ' → logprob: -7.914811134338379
    8. 'line' → logprob: -8.164811134338379
    9. ' line' → logprob: -8.539811134338379
    10. '(self' → logprob: -8.789811134338379

Token 200: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.7444494962692261
    2. 'self' → logprob: -0.9944494962692261
    3. 'segment' → logprob: -2.2444496154785156
    4. ' line' → logprob: -3.6194496154785156
    5. 'p' → logprob: -4.994449615478516
    6. 'Line' → logprob: -5.244449615478516
    7. 'vector' → logprob: -5.494449615478516
    8. 'def' → logprob: -6.619449615478516
    9. '_line' → logprob: -6.619449615478516
    10. ' segment' → logprob: -6.744449615478516

Token 201: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01518173050135374
    2. ' segment' → logprob: -4.390181541442871
    3. 'segment' → logprob: -7.015181541442871
    4. '<|end|>' → logprob: -7.390181541442871
    5. ' vector' → logprob: -8.390181541442871
    6. '        ' → logprob: -8.515181541442871
    7. ',' → logprob: -9.140181541442871
    8. ' from' → logprob: -9.140181541442871
    9. ' through' → logprob: -9.890181541442871
    10. '      ' → logprob: -9.890181541442871

Token 202: ' then' (ID: 1815)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0528348833322525
    2. ' then' → logprob: -4.552834987640381
    3. ' and' → logprob: -4.802834987640381
    4. '#' → logprob: -4.927834987640381
    5. 'v' → logprob: -5.052834987640381
    6. ' line' → logprob: -5.427834987640381
    7. ' v' → logprob: -6.427834987640381
    8. 'u' → logprob: -6.552834987640381
    9. 'segment' → logprob: -6.552834987640381
    10. '   ' → logprob: -6.677834987640381

Token 203: ' clamp' (ID: 76503)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.7429789900779724
    2. 'check' → logprob: -0.7429789900779724
    3. '
' → logprob: -3.992979049682617
    4. 'calculate' → logprob: -4.617979049682617
    5. ' clamp' → logprob: -4.992979049682617
    6. 'compute' → logprob: -5.867979049682617
    7. 'clip' → logprob: -5.867979049682617
    8. 'return' → logprob: -6.242979049682617
    9. ' check' → logprob: -6.617979049682617
    10. 'import' → logprob: -6.992979049682617

Token 204: ' to' (ID: 316)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.04518887400627136
    2. 't' → logprob: -4.045188903808594
    3. '       ' → logprob: -4.420188903808594
    4. ' to' → logprob: -4.670188903808594
    5. ' the' → logprob: -6.420188903808594
    6. ' onto' → logprob: -6.545188903808594
    7. ' vector' → logprob: -7.420188903808594
    8. 'to' → logprob: -7.795188903808594
    9. '   ' → logprob: -8.545188903808594
    10. '(t' → logprob: -8.920188903808594

Token 205: ' segment' (ID: 14806)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0669440031051636
    2. 'self' → logprob: -1.5669440031051636
    3. 'segment' → logprob: -1.6919440031051636
    4. ' segment' → logprob: -2.191944122314453
    5. 'the' → logprob: -2.316944122314453
    6. ' self' → logprob: -3.816944122314453
    7. '0' → logprob: -4.566944122314453
    8. '1' → logprob: -4.691944122314453
    9. ' ' → logprob: -5.691944122314453
    10. '[' → logprob: -5.691944122314453

Token 206: ' ends' (ID: 17095)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040224142372608185
    2. '
' → logprob: -3.290224075317383
    3. '        
' → logprob: -6.665224075317383
    4. '<|end|>' → logprob: -8.540224075317383
    5. ' line' → logprob: -9.040224075317383
    6. ' vector' → logprob: -9.540224075317383
    7. '    
' → logprob: -9.665224075317383
    8. ',' → logprob: -9.790224075317383
    9. '  
' → logprob: -9.790224075317383
    10. 'v' → logprob: -10.165224075317383

Token 207: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012869019992649555
    2. '
' → logprob: -7.50128698348999
    3. '        
' → logprob: -7.87628698348999
    4. ',' → logprob: -8.501286506652832
    5. '<|end|>' → logprob: -11.376286506652832
    6. 'x' → logprob: -11.626286506652832
    7. ':' → logprob: -11.751286506652832
    8. '<|end|>' → logprob: -11.876286506652832
    9. '```' → logprob: -12.001286506652832
    10. ':
' → logprob: -12.001286506652832

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.165027217415627e-05
    2. '
' → logprob: -11.875021934509277
    3. '        
' → logprob: -12.250021934509277
    4. ',' → logprob: -13.000021934509277
    5. 'v' → logprob: -13.625021934509277
    6. 'x' → logprob: -13.875021934509277
    7. '      ' → logprob: -13.875021934509277
    8. 'n' → logprob: -14.125021934509277
    9. ')' → logprob: -14.125021934509277
    10. 't' → logprob: -14.375021934509277

Token 209: ' vx' (ID: 93588)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02866137959063053
    2. 'dx' → logprob: -4.403661251068115
    3. 'x' → logprob: -4.528661251068115
    4. 'v' → logprob: -5.903661251068115
    5. ' dx' → logprob: -7.028661251068115
    6. 'p' → logprob: -7.903661251068115
    7. 'px' → logprob: -8.153661727905273
    8. 'a' → logprob: -8.528661727905273
    9. 'd' → logprob: -8.528661727905273
    10. ' x' → logprob: -9.028661727905273

Token 210: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25415539741516113
    2. '=' → logprob: -1.5041553974151611
    3. ',' → logprob: -6.129155158996582
    4. '1' → logprob: -11.004155158996582
    5. 'x' → logprob: -11.504155158996582
    6. 'p' → logprob: -12.254155158996582
    7. '0' → logprob: -12.504155158996582
    8. '   ' → logprob: -13.254155158996582
    9. '=self' → logprob: -13.379155158996582
    10. ' ' → logprob: -13.754155158996582

Token 211: ' vy' (ID: 14190)
  Prédit: ' vy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vy' → logprob: -0.5423020720481873
    2. 'vy' → logprob: -0.9173020720481873
    3. 'v' → logprob: -4.542302131652832
    4. 'w' → logprob: -6.542302131652832
    5. 'x' → logprob: -6.917302131652832
    6. ' v' → logprob: -6.917302131652832
    7. ' =' → logprob: -7.542302131652832
    8. ' self' → logprob: -7.542302131652832
    9. 'wy' → logprob: -7.542302131652832
    10. 'self' → logprob: -7.667302131652832

Token 212: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2014147937297821
    2. '=' → logprob: -1.7014148235321045
    3. ' ' → logprob: -14.451415061950684
    4. ',' → logprob: -14.826415061950684
    5. '=v' → logprob: -15.326415061950684
    6. '=p' → logprob: -16.326414108276367
    7. ')' → logprob: -16.576414108276367
    8. 'v' → logprob: -16.701414108276367
    9. '=self' → logprob: -16.701414108276367
    10. '   ' → logprob: -16.951414108276367

Token 213: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011939177056774497
    2. ' self' → logprob: -7.376194000244141
    3. '(self' → logprob: -7.501194000244141
    4. '
' → logprob: -11.75119400024414
    5. '   ' → logprob: -13.00119400024414
    6. '=self' → logprob: -13.12619400024414
    7. '[self' → logprob: -13.75119400024414
    8. '	self' → logprob: -14.00119400024414
    9. '<|end|>' → logprob: -15.75119400024414
    10. ' (' → logprob: -15.87619400024414

Token 214: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0005606581107713282
    2. '.' → logprob: -8.125560760498047
    3. 'p' → logprob: -8.250560760498047
    4. ' .' → logprob: -13.000560760498047
    5. '   ' → logprob: -15.125560760498047
    6. ').' → logprob: -16.125560760498047
    7. ' p' → logprob: -16.125560760498047
    8. '..' → logprob: -16.500560760498047
    9. '.п' → logprob: -16.500560760498047
    10. '
' → logprob: -16.625560760498047

Token 215: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3868741989135742
    2. '2' → logprob: -1.1368741989135742
    3. 'p' → logprob: -14.449374198913574
    4. 'oints' → logprob: -14.449374198913574
    5. '```' → logprob: -14.636874198913574
    6. 'oint' → logprob: -15.199374198913574
    7. '

' → logprob: -15.699374198913574
    8. '.p' → logprob: -16.32437515258789
    9. '``' → logprob: -16.51187515258789
    10. 's' → logprob: -16.76187515258789

Token 216: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -1.5213274309644476e-05
    2. '.' → logprob: -12.125015258789062
    3. 'x' → logprob: -12.250015258789062
    4. ' .' → logprob: -12.375015258789062
    5. '.p' → logprob: -15.625015258789062
    6. ').' → logprob: -16.000015258789062
    7. ' ' → logprob: -16.750015258789062
    8. '.y' → logprob: -16.750015258789062
    9. '   ' → logprob: -16.875015258789062
    10. '

' → logprob: -16.875015258789062

Token 217: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.026305176317691803
    2. '-' → logprob: -3.6513051986694336
    3. ' ' → logprob: -12.401305198669434
    4. '   ' → logprob: -15.651305198669434
    5. ' ' → logprob: -15.651305198669434
    6. '-self' → logprob: -15.651305198669434
    7. '<|end|>' → logprob: -17.151304244995117
    8. '  ' → logprob: -17.276304244995117
    9. ',' → logprob: -17.276304244995117
    10. '-p' → logprob: -17.401304244995117

Token 218: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07019595056772232
    2. ' self' → logprob: -2.6951959133148193
    3. '<|end|>' → logprob: -8.445196151733398
    4. ' ' → logprob: -11.820196151733398
    5. '	self' → logprob: -11.945196151733398
    6. '(self' → logprob: -12.320196151733398
    7. '<|end|>' → logprob: -12.320196151733398
    8. '=self' → logprob: -12.445196151733398
    9. '[self' → logprob: -12.445196151733398
    10. '_self' → logprob: -13.132696151733398

Token 219: '.p' (ID: 1201)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47465941309928894
    2. '1' → logprob: -1.7246594429016113
    3. 'p' → logprob: -1.8496594429016113
    4. '.p' → logprob: -3.3496594429016113
    5. 's' → logprob: -5.349659442901611
    6. '.s' → logprob: -7.099659442901611
    7. ' self' → logprob: -7.474659442901611
    8. '.self' → logprob: -7.599659442901611
    9. '.' → logprob: -8.474658966064453
    10. '   ' → logprob: -9.099658966064453

Token 220: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1637164789135568e-05
    2. 'self' → logprob: -12.000011444091797
    3. 'p' → logprob: -13.250011444091797
    4. ' ' → logprob: -14.750011444091797
    5. '```' → logprob: -14.812511444091797
    6. 't' → logprob: -14.812511444091797
    7. 'x' → logprob: -15.062511444091797
    8. '2' → logprob: -15.187511444091797
    9. 'oint' → logprob: -15.250011444091797
    10. '   ' → logprob: -15.375011444091797

Token 221: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0020042958203703165
    2. '.' → logprob: -6.252004146575928
    3. 'x' → logprob: -9.627004623413086
    4. '.y' → logprob: -12.252004623413086
    5. ' .' → logprob: -12.502004623413086
    6. ',' → logprob: -14.877004623413086
    7. '.py' → logprob: -15.502004623413086
    8. '	x' → logprob: -15.877004623413086
    9. '[' → logprob: -16.377004623413086
    10. ' ' → logprob: -16.377004623413086

Token 222: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015629465924575925
    2. ' ,' → logprob: -6.50156307220459
    3. ',v' → logprob: -10.00156307220459
    4. ',
' → logprob: -11.62656307220459
    5. ',y' → logprob: -12.25156307220459
    6. '       ' → logprob: -14.37656307220459
    7. 'v' → logprob: -14.37656307220459
    8. ' ,
' → logprob: -15.87656307220459
    9. ',\
' → logprob: -16.001562118530273
    10. ',

' → logprob: -17.001562118530273

Token 223: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.1798054575920105
    2. 'self' → logprob: -1.8048055171966553
    3. '<|end|>' → logprob: -9.929805755615234
    4. ' ' → logprob: -11.929805755615234
    5. '	self' → logprob: -13.429805755615234
    6. '(self' → logprob: -13.679805755615234
    7. '[self' → logprob: -14.804805755615234
    8. ' ' → logprob: -14.804805755615234
    9. '        ' → logprob: -15.429805755615234
    10. '<|end|>' → logprob: -15.554805755615234

Token 224: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -3.5716304410016164e-05
    2. '2' → logprob: -10.750035285949707
    3. 'p' → logprob: -12.250035285949707
    4. '.y' → logprob: -12.500035285949707
    5. '.' → logprob: -12.875035285949707
    6. ' .' → logprob: -14.000035285949707
    7. '1' → logprob: -14.375035285949707
    8. '-' → logprob: -14.875035285949707
    9. 'self' → logprob: -15.000035285949707
    10. '.py' → logprob: -15.250035285949707

Token 225: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00047392549458891153
    2. 'p' → logprob: -8.125473976135254
    3. '.p' → logprob: -9.125473976135254
    4. '1' → logprob: -9.750473976135254
    5. '.y' → logprob: -11.875473976135254
    6. 'y' → logprob: -13.937973976135254
    7. ' ' → logprob: -14.375473976135254
    8. ' p' → logprob: -14.937973976135254
    9. '```' → logprob: -15.125473976135254
    10. '
' → logprob: -15.125473976135254

Token 226: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.001167960581369698
    2. '.' → logprob: -6.8761677742004395
    3. '-' → logprob: -9.626168251037598
    4. ' -' → logprob: -10.126168251037598
    5. ' .' → logprob: -11.376168251037598
    6. '.py' → logprob: -12.001168251037598
    7. '.x' → logprob: -12.376168251037598
    8. 'y' → logprob: -12.876168251037598
    9. '-.' → logprob: -13.126168251037598
    10. '.v' → logprob: -14.001168251037598

Token 227: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.001930420519784093
    2. '-' → logprob: -6.251930236816406
    3. '<|end|>' → logprob: -13.626930236816406
    4. ' ' → logprob: -14.626930236816406
    5. '<|end|>' → logprob: -17.626930236816406
    6. ' -
' → logprob: -17.751930236816406
    7. ' –' → logprob: -18.501930236816406
    8. ')' → logprob: -19.001930236816406
    9. '   ' → logprob: -19.376930236816406
    10. 'user' → logprob: -19.501930236816406

Token 228: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16022950410842896
    2. ' self' → logprob: -1.9102294445037842
    3. '(self' → logprob: -12.785229682922363
    4. '	self' → logprob: -14.535229682922363
    5. '_self' → logprob: -14.910229682922363
    6. '-self' → logprob: -15.035229682922363
    7. ' ' → logprob: -15.285229682922363
    8. 'Self' → logprob: -15.535229682922363
    9. '[self' → logprob: -15.785229682922363
    10. '1' → logprob: -15.910229682922363

Token 229: '.p' (ID: 1201)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9201232194900513
    2. '.y' → logprob: -1.0451232194900513
    3. '.p' → logprob: -1.4201232194900513
    4. '.' → logprob: -5.545123100280762
    5. 'p' → logprob: -5.545123100280762
    6. 'y' → logprob: -8.920123100280762
    7. ' .' → logprob: -9.670123100280762
    8. '.py' → logprob: -10.295123100280762
    9. '```' → logprob: -10.420123100280762
    10. '.x' → logprob: -10.795123100280762

Token 230: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00031282080453820527
    2. 'p' → logprob: -8.125312805175781
    3. '.p' → logprob: -12.375312805175781
    4. '.y' → logprob: -12.500312805175781
    5. '2' → logprob: -13.125312805175781
    6. ' p' → logprob: -13.500312805175781
    7. 'y' → logprob: -13.875312805175781
    8. ' ' → logprob: -14.625312805175781
    9. '```' → logprob: -14.625312805175781
    10. '
' → logprob: -15.125312805175781

Token 231: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.003679767018184066
    2. '-' → logprob: -6.2536797523498535
    3. '.' → logprob: -6.5036797523498535
    4. ' -' → logprob: -8.503680229187012
    5. '.py' → logprob: -10.878680229187012
    6. 'y' → logprob: -11.003680229187012
    7. '.x' → logprob: -11.878680229187012
    8. ' .' → logprob: -12.878680229187012
    9. '-y' → logprob: -13.878680229187012
    10. '<|end|>' → logprob: -14.628680229187012

Token 232: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07298312336206436
    2. '
' → logprob: -3.4479830265045166
    3. '<|end|>' → logprob: -4.197983264923096
    4. ',' → logprob: -4.572983264923096
    5. '        
' → logprob: -5.447983264923096
    6. '  
' → logprob: -5.947983264923096
    7. ' 
' → logprob: -6.572983264923096
    8. 'v' → logprob: -6.822983264923096
    9. '   ' → logprob: -7.197983264923096
    10. ' ' → logprob: -7.697983264923096

Token 233: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09992138296365738
    2. '
' → logprob: -3.349921464920044
    3. ' 
' → logprob: -3.599921464920044
    4. '        
' → logprob: -4.724921226501465
    5. '  
' → logprob: -5.349921226501465
    6. ' t' → logprob: -5.974921226501465
    7. '   ' → logprob: -5.974921226501465
    8. 'x' → logprob: -6.224921226501465
    9. ' x' → logprob: -6.224921226501465
    10. '        ' → logprob: -6.349921226501465

Token 234: ' wx' (ID: 20113)
  Prédit: 'wx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wx' (adapté à ' wx') → logprob: -0.018421495333313942
    2. 'px' → logprob: -4.018421649932861
    3. 'dx' → logprob: -8.768421173095703
    4. ' wx' → logprob: -9.268421173095703
    5. 'ux' → logprob: -11.518421173095703
    6. ' px' → logprob: -11.768421173095703
    7. 'mx' → logprob: -13.518421173095703
    8. 'lx' → logprob: -13.893421173095703
    9. 'if' → logprob: -14.893421173095703
    10. '   ' → logprob: -15.268421173095703

Token 235: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020715773105621338
    2. '=' → logprob: -4.145715713500977
    3. ' =' → logprob: -5.395715713500977
    4. 'x' → logprob: -9.520715713500977
    5. ' ,' → logprob: -9.770715713500977
    6. 'w' → logprob: -14.270715713500977
    7. 'v' → logprob: -14.645715713500977
    8. 'p' → logprob: -14.770715713500977
    9. ' ' → logprob: -14.770715713500977
    10. ')' → logprob: -14.895715713500977

Token 236: ' wy' (ID: 14962)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.5023691654205322
    2. 'p' → logprob: -1.6273691654205322
    3. ' wy' → logprob: -2.7523691654205322
    4. ' vy' → logprob: -3.1273691654205322
    5. 'wy' → logprob: -3.5023691654205322
    6. ' py' → logprob: -3.6273691654205322
    7. 'w' → logprob: -4.377368927001953
    8. ' w' → logprob: -4.752368927001953
    9. 'vy' → logprob: -5.502368927001953
    10. ' =' → logprob: -6.127368927001953

Token 237: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6931481957435608
    2. ' =' → logprob: -0.6931481957435608
    3. '=p' → logprob: -14.693148612976074
    4. ',' → logprob: -15.068148612976074
    5. ' ' → logprob: -15.943148612976074
    6. 'p' → logprob: -17.193147659301758
    7. ')' → logprob: -18.193147659301758
    8. 'x' → logprob: -18.318147659301758
    9. ' ' → logprob: -18.443147659301758
    10. '=user' → logprob: -18.818147659301758

Token 238: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.4741615951061249
    2. 'p' → logprob: -0.9741616249084473
    3. '   ' → logprob: -9.599161148071289
    4. ' ' → logprob: -11.474161148071289
    5. '    ' → logprob: -13.099161148071289
    6. '  ' → logprob: -13.099161148071289
    7. '(p' → logprob: -14.474161148071289
    8. '
' → logprob: -14.849161148071289
    9. '       ' → logprob: -15.099161148071289
    10. '	p' → logprob: -15.599161148071289

Token 239: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0018829426262527704
    2. '.' → logprob: -6.376883029937744
    3. ' .' → logprob: -8.626882553100586
    4. 'x' → logprob: -14.001882553100586
    5. ' x' → logprob: -15.376882553100586
    6. ' ' → logprob: -15.626882553100586
    7. '`.' → logprob: -16.876882553100586
    8. '.y' → logprob: -17.376882553100586
    9. '.py' → logprob: -17.751882553100586
    10. ').' → logprob: -17.876882553100586

Token 240: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.029857739806175232
    2. '-' → logprob: -3.529857635498047
    3. ' ' → logprob: -9.154857635498047
    4. ' ' → logprob: -14.529857635498047
    5. '   ' → logprob: -14.779857635498047
    6. ')' → logprob: -15.779857635498047
    7. '  ' → logprob: -16.154857635498047
    8. ' -
' → logprob: -16.404857635498047
    9. ',' → logprob: -16.654857635498047
    10. '.' → logprob: -16.654857635498047

Token 241: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4287355840206146
    2. ' self' → logprob: -1.053735613822937
    3. '       ' → logprob: -11.428735733032227
    4. '(self' → logprob: -12.178735733032227
    5. ' ' → logprob: -12.428735733032227
    6. '[self' → logprob: -12.553735733032227
    7. '	self' → logprob: -12.803735733032227
    8. '   ' → logprob: -13.053735733032227
    9. '=self' → logprob: -13.303735733032227
    10. 'Self' → logprob: -13.928735733032227

Token 242: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -4.763666947837919e-05
    2. '.' → logprob: -10.25004768371582
    3. 'p' → logprob: -12.00004768371582
    4. '1' → logprob: -12.62504768371582
    5. ' .' → logprob: -13.12504768371582
    6. '.x' → logprob: -15.25004768371582
    7. 'self' → logprob: -15.50004768371582
    8. '.s' → logprob: -16.12504768371582
    9. '   ' → logprob: -17.00004768371582
    10. ' p' → logprob: -17.37504768371582

Token 243: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. '.' → logprob: -14.750001907348633
    3. 'p' → logprob: -15.125001907348633
    4. 'oint' → logprob: -15.500001907348633
    5. 'oints' → logprob: -15.500001907348633
    6. '.p' → logprob: -15.750001907348633
    7. '   ' → logprob: -15.875001907348633
    8. ' ' → logprob: -16.062501907348633
    9. '2' → logprob: -16.125001907348633
    10. 't' → logprob: -16.375001907348633

Token 244: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0015297401696443558
    2. '.' → logprob: -6.501529693603516
    3. 'x' → logprob: -11.126529693603516
    4. ' .' → logprob: -11.501529693603516
    5. '.y' → logprob: -14.501529693603516
    6. '.py' → logprob: -14.501529693603516
    7. '.xaml' → logprob: -15.376529693603516
    8. '<|end|>' → logprob: -15.376529693603516
    9. ').' → logprob: -15.501529693603516
    10. ' x' → logprob: -15.876529693603516

Token 245: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013182159746065736
    2. ' ,' → logprob: -7.376317977905273
    3. ',w' → logprob: -7.501317977905273
    4. ',
' → logprob: -10.126317977905273
    5. '<|end|>' → logprob: -10.251317977905273
    6. '       ' → logprob: -10.376317977905273
    7. ',v' → logprob: -11.501317977905273
    8. '
' → logprob: -12.626317977905273
    9. ',y' → logprob: -12.876317977905273
    10. 'wx' → logprob: -12.876317977905273

Token 246: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.10020678490400314
    2. 'p' → logprob: -2.3502068519592285
    3. ' ' → logprob: -16.47520637512207
    4. ' ' → logprob: -17.10020637512207
    5. '	p' → logprob: -18.22520637512207
    6. '    ' → logprob: -18.72520637512207
    7. ' п' → logprob: -19.47520637512207
    8. '   ' → logprob: -20.10020637512207
    9. '        ' → logprob: -20.10020637512207
    10. '(p' → logprob: -20.47520637512207

Token 247: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.00040576665196567774
    2. '.' → logprob: -7.875405788421631
    3. '.x' → logprob: -11.250405311584473
    4. ' .' → logprob: -11.500405311584473
    5. 'y' → logprob: -13.250405311584473
    6. '.py' → logprob: -14.500405311584473
    7. '<|end|>' → logprob: -16.12540626525879
    8. ' ' → logprob: -16.25040626525879
    9. '	y' → logprob: -16.50040626525879
    10. ' y' → logprob: -17.62540626525879

Token 248: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06196959316730499
    2. '-' → logprob: -2.811969518661499
    3. ' ' → logprob: -13.936969757080078
    4. '<|end|>' → logprob: -14.061969757080078
    5. ' ' → logprob: -16.811969757080078
    6. ')' → logprob: -17.436969757080078
    7. '<|end|>' → logprob: -17.936969757080078
    8. ' -
' → logprob: -18.061969757080078
    9. '.' → logprob: -18.561969757080078
    10. ',' → logprob: -18.811969757080078

Token 249: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001034595537930727
    2. ' self' → logprob: -6.876034736633301
    3. '(self' → logprob: -14.7510347366333
    4. '[self' → logprob: -14.8760347366333
    5. '       ' → logprob: -15.0010347366333
    6. '	self' → logprob: -16.126033782958984
    7. '   ' → logprob: -16.626033782958984
    8. 'p' → logprob: -16.751033782958984
    9. ' ' → logprob: -16.876033782958984
    10. '=self' → logprob: -16.876033782958984

Token 250: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.013074111193418503
    2. '.' → logprob: -4.763073921203613
    3. '1' → logprob: -5.888073921203613
    4. '.y' → logprob: -6.513073921203613
    5. 'p' → logprob: -8.888073921203613
    6. ' .' → logprob: -10.638073921203613
    7. '.py' → logprob: -11.388073921203613
    8. '<p' → logprob: -12.388073921203613
    9. ' p' → logprob: -12.513073921203613
    10. '```' → logprob: -13.013073921203613

Token 251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002643675310537219
    2. '.y' → logprob: -6.127643585205078
    3. 'p' → logprob: -8.377643585205078
    4. '.' → logprob: -8.752643585205078
    5. '.p' → logprob: -9.752643585205078
    6. 'y' → logprob: -12.252643585205078
    7. '.x' → logprob: -12.752643585205078
    8. '```' → logprob: -13.877643585205078
    9. '2' → logprob: -14.252643585205078
    10. '-' → logprob: -14.627643585205078

Token 252: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0006973040290176868
    2. '.' → logprob: -7.500697135925293
    3. 'y' → logprob: -9.250697135925293
    4. '.x' → logprob: -10.000697135925293
    5. ' .' → logprob: -13.000697135925293
    6. '1' → logprob: -16.00069808959961
    7. '.py' → logprob: -16.00069808959961
    8. '```' → logprob: -16.37569808959961
    9. '   ' → logprob: -16.62569808959961
    10. '.z' → logprob: -17.00069808959961

Token 253: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06726095825433731
    2. '
' → logprob: -2.942260980606079
    3. 't' → logprob: -4.5672607421875
    4. ' t' → logprob: -7.0672607421875
    5. '        
' → logprob: -7.6922607421875
    6. 'v' → logprob: -9.0672607421875
    7. 'n' → logprob: -9.1922607421875
    8. '```' → logprob: -9.5672607421875
    9. ' 
' → logprob: -9.6922607421875
    10. 'u' → logprob: -10.1922607421875

Token 254: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03980426490306854
    2. ' t' → logprob: -3.664804220199585
    3. 't' → logprob: -4.539804458618164
    4. '        ' → logprob: -6.789804458618164
    5. ' dot' → logprob: -7.289804458618164
    6. '        
' → logprob: -8.039804458618164
    7. ' tx' → logprob: -9.039804458618164
    8. ' dt' → logprob: -9.789804458618164
    9. 'v' → logprob: -9.914804458618164
    10. ' 
' → logprob: -10.039804458618164

Token 255: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.3450714945793152
    2. 'dot' → logprob: -1.72007155418396
    3. ' dot' → logprob: -2.47007155418396
    4. ' c' → logprob: -4.095071315765381
    5. '   ' → logprob: -5.720071315765381
    6. 'dv' → logprob: -5.845071315765381
    7. 't' → logprob: -6.220071315765381
    8. '       ' → logprob: -6.845071315765381
    9. 'd' → logprob: -7.720071315765381
    10. 'l' → logprob: -7.970071315765381

Token 256: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3696158528327942
    2. 'l' → logprob: -1.2446157932281494
    3. '2' → logprob: -5.3696160316467285
    4. '_' → logprob: -5.4946160316467285
    5. '=' → logprob: -6.1196160316467285
    6. '   ' → logprob: -6.4946160316467285
    7. '_l' → logprob: -6.7446160316467285
    8. '```' → logprob: -7.1196160316467285
    9. 'dot' → logprob: -7.2446160316467285
    10. '_dot' → logprob: -7.2446160316467285

Token 257: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25193241238594055
    2. '=' → logprob: -1.5019323825836182
    3. ',' → logprob: -13.001932144165039
    4. ' ' → logprob: -15.001932144165039
    5. ':' → logprob: -15.126932144165039
    6. '=c' → logprob: -15.751932144165039
    7. '=v' → logprob: -16.12693214416504
    8. '.' → logprob: -17.00193214416504
    9. '   ' → logprob: -17.37693214416504
    10. ')' → logprob: -17.87693214416504

Token 258: ' vx' (ID: 93588)
  Prédit: 'wx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wx' → logprob: -0.22534923255443573
    2. 'vx' → logprob: -1.7253491878509521
    3. ' vx' → logprob: -4.225349426269531
    4. ' wx' → logprob: -4.725349426269531
    5. 'vw' → logprob: -9.100349426269531
    6. '   ' → logprob: -10.850349426269531
    7. '(wx' → logprob: -10.850349426269531
    8. 'wv' → logprob: -12.350349426269531
    9. 'w' → logprob: -12.850349426269531
    10. '	wx' → logprob: -13.475349426269531

Token 259: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6931478381156921
    2. ' *' → logprob: -0.6931478381156921
    3. '*w' → logprob: -14.568147659301758
    4. 'wx' → logprob: -16.318147659301758
    5. '*v' → logprob: -17.193147659301758
    6. ' wx' → logprob: -17.943147659301758
    7. ' ' → logprob: -17.943147659301758
    8. '**' → logprob: -18.193147659301758
    9. ' ' → logprob: -18.443147659301758
    10. 'wy' → logprob: -18.568147659301758

Token 260: 'wx' (ID: 43176)
  Prédit: 'wx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wx' → logprob: -7.541112427134067e-05
    2. ' wx' → logprob: -9.500075340270996
    3. '(wx' → logprob: -14.875075340270996
    4. '	wx' → logprob: -16.125076293945312
    5. '.wx' → logprob: -17.125076293945312
    6. 'w' → logprob: -17.500076293945312
    7. 'vx' → logprob: -17.875076293945312
    8. 'wy' → logprob: -19.625076293945312
    9. 'Wx' → logprob: -20.125076293945312
    10. '   ' → logprob: -21.250076293945312

Token 261: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47410500049591064
    2. ' +' → logprob: -0.9741050004959106
    3. '+
' → logprob: -11.224104881286621
    4. '+c' → logprob: -12.099104881286621
    5. ' +
' → logprob: -12.224104881286621
    6. '+y' → logprob: -13.224104881286621
    7. '+w' → logprob: -13.974104881286621
    8. '+

' → logprob: -15.474104881286621
    9. ' ' → logprob: -15.599104881286621
    10. '+b' → logprob: -15.599104881286621

Token 262: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.06197608634829521
    2. ' vy' → logprob: -2.811976194381714
    3. 'wy' → logprob: -12.561976432800293
    4. ' ' → logprob: -12.811976432800293
    5. 'v' → logprob: -14.686976432800293
    6. 'ovy' → logprob: -14.936976432800293
    7. 'vyk' → logprob: -15.436976432800293
    8. '   ' → logprob: -15.561976432800293
    9. ' wy' → logprob: -15.561976432800293
    10. '  ' → logprob: -15.811976432800293

Token 263: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.00018280261429026723
    2. ' *' → logprob: -9.00018310546875
    3. '*w' → logprob: -9.75018310546875
    4. 'wy' → logprob: -14.50018310546875
    5. ' ' → logprob: -14.75018310546875
    6. ' wy' → logprob: -17.00018310546875
    7. '*out' → logprob: -17.25018310546875
    8. '*y' → logprob: -17.25018310546875
    9. '*object' → logprob: -17.37518310546875
    10. '<|end|>' → logprob: -17.87518310546875

Token 264: 'wy' (ID: 10201)
  Prédit: 'wy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'wy' → logprob: -0.0013278567930683494
    2. ' wy' → logprob: -6.626327991485596
    3. ' ' → logprob: -14.251327514648438
    4. 'wyl' → logprob: -14.376327514648438
    5. 'w' → logprob: -15.251327514648438
    6. 'Wy' → logprob: -15.626327514648438
    7. 'wx' → logprob: -15.751327514648438
    8. '<|end|>' → logprob: -17.001327514648438
    9. 'wys' → logprob: -17.126327514648438
    10. 'wyd' → logprob: -17.501327514648438

Token 265: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0010390023235231638
    2. '<|end|>' → logprob: -7.876039028167725
    3. '
' → logprob: -8.376038551330566
    4. '       ' → logprob: -8.376038551330566
    5. '  
' → logprob: -10.001038551330566
    6. ' 
' → logprob: -10.251038551330566
    7. '<|end|>' → logprob: -10.251038551330566
    8. '\n' → logprob: -10.501038551330566
    9. '        
' → logprob: -10.751038551330566
    10. '    
' → logprob: -12.126038551330566

Token 266: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17899109423160553
    2. '       ' → logprob: -2.1789910793304443
    3. '   ' → logprob: -4.178991317749023
    4. ' if' → logprob: -4.303991317749023
    5. ' 
' → logprob: -5.303991317749023
    6. '        
' → logprob: -5.428991317749023
    7. '    
' → logprob: -5.678991317749023
    8. '  
' → logprob: -5.803991317749023
    9. '\n' → logprob: -5.928991317749023
    10. 'if' → logprob: -7.053991317749023

Token 267: ' if' (ID: 538)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.06273187696933746
    2. ' c' → logprob: -3.437731981277466
    3. 'if' (adapté à ' if') → logprob: -4.187731742858887
    4. ' if' → logprob: -4.312731742858887
    5. '   ' → logprob: -9.812731742858887
    6. '       ' → logprob: -10.687731742858887
    7. '```' → logprob: -12.687731742858887
    8. 'cc' → logprob: -12.812731742858887
    9. 'div' → logprob: -13.312731742858887
    10. '	c' → logprob: -14.062731742858887

Token 268: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.126937136054039
    2. ' c' → logprob: -2.1269371509552
    3. '   ' → logprob: -12.501936912536621
    4. 'not' → logprob: -12.751936912536621
    5. ' not' → logprob: -13.501936912536621
    6. '       ' → logprob: -15.126936912536621
    7. '	c' → logprob: -15.251936912536621
    8. '    ' → logprob: -16.001937866210938
    9. '<c' → logprob: -16.501937866210938
    10. '<=' → logprob: -16.626937866210938

Token 269: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0564331205387134e-05
    2. '<=' → logprob: -12.50001049041748
    3. ' <=' → logprob: -12.50001049041748
    4. ' ' → logprob: -13.75001049041748
    5. '<' → logprob: -14.25001049041748
    6. '_' → logprob: -14.62501049041748
    7. '==' → logprob: -15.12501049041748
    8. ' <' → logprob: -15.37501049041748
    9. 'c' → logprob: -16.000011444091797
    10. '```' → logprob: -16.250011444091797

Token 270: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5759524703025818
    2. ' <=' → logprob: -0.8259524703025818
    3. '<' → logprob: -11.825952529907227
    4. ' <' → logprob: -12.325952529907227
    5. ')<=' → logprob: -14.950952529907227
    6. '=' → logprob: -15.700952529907227
    7. ' <=",' → logprob: -15.700952529907227
    8. ']<=' → logprob: -15.825952529907227
    9. ' ' → logprob: -15.950952529907227
    10. '≤' → logprob: -16.575952529907227

Token 271: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017970333283301443
    2. ' ' → logprob: -8.625179290771484
    3. '   ' → logprob: -15.875179290771484
    4. '  ' → logprob: -17.500179290771484
    5. '۰' → logprob: -20.500179290771484
    6. '```' → logprob: -20.500179290771484
    7. '00' → logprob: -20.875179290771484
    8. '    ' → logprob: -21.000179290771484
    9. ' ' → logprob: -21.250179290771484
    10. '٠' → logprob: -21.750179290771484

Token 272: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -20.75
    4. '۰' → logprob: -20.75
    5. '00' → logprob: -21.125
    6. '  ' → logprob: -22.0
    7. '000' → logprob: -22.125
    8. '٠' → logprob: -22.75
    9. '০' → logprob: -23.25
    10. '０' → logprob: -23.375

Token 273: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16029195487499237
    2. ':
' → logprob: -1.9102919101715088
    3. ':
' → logprob: -10.53529167175293
    4. ':return' → logprob: -10.78529167175293
    5. ' :' → logprob: -11.91029167175293
    6. ' :
' → logprob: -12.16029167175293
    7. '.' → logprob: -12.66029167175293
    8. ':

' → logprob: -13.16029167175293
    9. '):
' → logprob: -13.91029167175293
    10. '       ' → logprob: -14.28529167175293

Token 274: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.819406270980835
    2. ':
' → logprob: -0.819406270980835
    3. ':' → logprob: -2.319406270980835
    4. '       ' → logprob: -4.569406509399414
    5. ' return' → logprob: -5.319406509399414
    6. ':return' → logprob: -6.194406509399414
    7. ' :
' → logprob: -6.569406509399414
    8. '
' → logprob: -7.319406509399414
    9. 'return' → logprob: -7.944406509399414
    10. ' :' → logprob: -8.944406509399414

Token 275: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5986985564231873
    2. 'return' (adapté à ' return') → logprob: -1.348698616027832
    3. '       ' → logprob: -1.723698616027832
    4. '           ' → logprob: -4.973698616027832
    5. '
' → logprob: -5.223698616027832
    6. '        
' → logprob: -9.723698616027832
    7. '   ' → logprob: -10.223698616027832
    8. '	return' → logprob: -10.848698616027832
    9. ' 
' → logprob: -11.098698616027832
    10. '               ' → logprob: -11.723698616027832

Token 276: ' p' (ID: 275)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2449277639389038
    2. ' self' → logprob: -1.6199277639389038
    3. 'hyp' → logprob: -3.9949278831481934
    4. ' hypot' → logprob: -7.369927883148193
    5. 'p' → logprob: -8.744927406311035
    6. ' p' → logprob: -9.619927406311035
    7. ' hyp' → logprob: -10.119927406311035
    8. '	self' → logprob: -12.369927406311035
    9. ' ' → logprob: -12.994927406311035
    10. 'v' → logprob: -13.119927406311035

Token 277: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -0.0004166105354670435
    2. ' .' → logprob: -8.00041675567627
    3. 'distance' → logprob: -9.87541675567627
    4. '.' → logprob: -11.00041675567627
    5. '.p' → logprob: -11.87541675567627
    6. '.x' → logprob: -13.37541675567627
    7. ' distance' → logprob: -13.50041675567627
    8. '.dist' → logprob: -14.00041675567627
    9. '.point' → logprob: -14.50041675567627
    10. 'p' → logprob: -14.62541675567627

Token 278: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -9.088346359931165e-07
    2. 'To' → logprob: -14.750000953674316
    3. 'to' → logprob: -14.875000953674316
    4. '_t' → logprob: -17.5
    5. '   ' → logprob: -17.625
    6. '_TO' → logprob: -17.875
    7. 'self' → logprob: -18.5
    8. '_from' → logprob: -19.0
    9. 's' → logprob: -19.125
    10. '  ' → logprob: -19.25

Token 279: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00015633940347470343
    2. '(' → logprob: -9.25015640258789
    3. 'self' → logprob: -10.00015640258789
    4. 'Point' → logprob: -12.00015640258789
    5. '(Point' → logprob: -12.25015640258789
    6. ' (' → logprob: -13.75015640258789
    7. ' self' → logprob: -13.75015640258789
    8. '(
' → logprob: -14.87515640258789
    9. '_point' → logprob: -14.87515640258789
    10. ' Point' → logprob: -15.12515640258789

Token 280: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -3.893480243277736e-05
    2. '.' → logprob: -10.375039100646973
    3. 'p' → logprob: -12.000039100646973
    4. ' .' → logprob: -13.750039100646973
    5. ').' → logprob: -15.250039100646973
    6. '   ' → logprob: -17.500038146972656
    7. 'self' → logprob: -17.750038146972656
    8. ')' → logprob: -18.125038146972656
    9. ' p' → logprob: -18.250038146972656
    10. ' ' → logprob: -18.625038146972656

Token 281: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4153549020411447e-05
    2. '.p' → logprob: -11.62502384185791
    3. 'p' → logprob: -12.37502384185791
    4. '.' → logprob: -13.12502384185791
    5. 'oint' → logprob: -13.12502384185791
    6. ' p' → logprob: -13.37502384185791
    7. 'oints' → logprob: -13.62502384185791
    8. '```' → logprob: -13.75002384185791
    9. 'segment' → logprob: -14.50002384185791
    10. ' ' → logprob: -14.75002384185791

Token 282: ')
' (ID: 446)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3662547469139099
    2. '())
' → logprob: -1.8662548065185547
    3. ')' → logprob: -1.9912548065185547
    4. ')
' → logprob: -4.491254806518555
    5. '()' → logprob: -5.616254806518555
    6. '()
' → logprob: -7.866254806518555
    7. '   ' → logprob: -9.866254806518555
    8. ' )' → logprob: -10.116254806518555
    9. '())
' → logprob: -10.116254806518555
    10. '       ' → logprob: -10.741254806518555

Token 283: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004697357304394245
    2. '
' → logprob: -5.504697322845459
    3. '        
' → logprob: -8.254697799682617
    4. '   ' → logprob: -9.504697799682617
    5. ' 
' → logprob: -9.879697799682617
    6. ' s' → logprob: -10.629697799682617
    7. ' c' → logprob: -10.754697799682617
    8. 's' → logprob: -10.754697799682617
    9. '<|end|>' → logprob: -11.129697799682617
    10. ')' → logprob: -11.254697799682617

Token 284: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.15929271280765533
    2. 'v' → logprob: -2.409292697906494
    3. '   ' → logprob: -3.659292697906494
    4. 'vx' → logprob: -4.409292697906494
    5. '       ' → logprob: -5.034292697906494
    6. ' c' → logprob: -5.159292697906494
    7. 'vc' → logprob: -5.409292697906494
    8. ' v' → logprob: -7.409292697906494
    9. 'vb' → logprob: -7.659292697906494
    10. ' vx' → logprob: -8.159293174743652

Token 285: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5271559953689575
    2. '2' → logprob: -0.9021559953689575
    3. 'elif' → logprob: -6.152155876159668
    4. 'import' → logprob: -8.027155876159668
    5. '=' → logprob: -8.152155876159668
    6. ' ' → logprob: -8.277155876159668
    7. 'def' → logprob: -8.527155876159668
    8. '_squared' → logprob: -9.152155876159668
    9. '   ' → logprob: -9.402155876159668
    10. '```' → logprob: -9.527155876159668

Token 286: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16025175154209137
    2. '=' → logprob: -1.9102517366409302
    3. '=v' → logprob: -10.66025161743164
    4. '   ' → logprob: -12.78525161743164
    5. ' ' → logprob: -14.16025161743164
    6. '=c' → logprob: -15.91025161743164
    7. '    ' → logprob: -16.28525161743164
    8. '        ' → logprob: -16.53525161743164
    9. 'v' → logprob: -16.53525161743164
    10. '       ' → logprob: -16.66025161743164

Token 287: ' vx' (ID: 93588)
  Prédit: 'vx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.004111880902200937
    2. ' vx' → logprob: -5.5041117668151855
    3. '   ' → logprob: -10.629112243652344
    4. 'v' → logprob: -11.754112243652344
    5. ' ' → logprob: -14.879112243652344
    6. 'vy' → logprob: -15.004112243652344
    7. '       ' → logprob: -15.754112243652344
    8. 'hyp' → logprob: -15.879112243652344
    9. '(v' → logprob: -16.004112243652344
    10. 'self' → logprob: -16.254112243652344

Token 288: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -3.941161776310764e-05
    2. ' *' → logprob: -10.375039100646973
    3. '*v' → logprob: -12.125039100646973
    4. 'vx' → logprob: -12.875039100646973
    5. '**' → logprob: -15.750039100646973
    6. ' vx' → logprob: -17.75004005432129
    7. '*(' → logprob: -18.62504005432129
    8. '*x' → logprob: -19.25004005432129
    9. '```' → logprob: -19.25004005432129
    10. '*
' → logprob: -20.37504005432129

Token 289: 'vx' (ID: 96015)
  Prédit: 'vx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -6.630610641877865e-06
    2. ' vx' → logprob: -12.125006675720215
    3. 'vy' → logprob: -14.125006675720215
    4. 'v' → logprob: -15.500006675720215
    5. 'vq' → logprob: -17.0000057220459
    6. '   ' → logprob: -17.1250057220459
    7. '
' → logprob: -17.3750057220459
    8. ' ' → logprob: -18.1250057220459
    9. 'vw' → logprob: -18.2500057220459
    10. 'x' → logprob: -18.2500057220459

Token 290: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10020678490400314
    2. '+' → logprob: -2.3502068519592285
    3. ' ' → logprob: -17.10020637512207
    4. ' +
' → logprob: -17.60020637512207
    5. 'import' → logprob: -18.60020637512207
    6. '   ' → logprob: -18.72520637512207
    7. '＋' → logprob: -18.72520637512207
    8. '+
' → logprob: -18.85020637512207
    9. ' plus' → logprob: -19.10020637512207
    10. ' ' → logprob: -19.47520637512207

Token 291: ' vy' (ID: 14190)
  Prédit: 'vy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.6326160430908203
    2. ' vy' → logprob: -0.7576160430908203
    3. ' ' → logprob: -12.25761604309082
    4. '<|end|>' → logprob: -12.38261604309082
    5. ' ' → logprob: -14.00761604309082
    6. ' wy' → logprob: -14.13261604309082
    7. 'wy' → logprob: -14.50761604309082
    8. '```' → logprob: -14.63261604309082
    9. ' vya' → logprob: -14.88261604309082
    10. 'vyk' → logprob: -14.88261604309082

Token 292: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0003464289184194058
    2. ' *' → logprob: -8.125346183776855
    3. 'vy' → logprob: -10.000346183776855
    4. ' vy' → logprob: -13.375346183776855
    5. '*y' → logprob: -13.625346183776855
    6. ' ' → logprob: -14.000346183776855
    7. '*v' → logprob: -14.250346183776855
    8. '   ' → logprob: -15.750346183776855
    9. '<|end|>' → logprob: -16.250347137451172
    10. '```' → logprob: -16.250347137451172

Token 293: 'vy' (ID: 16670)
  Prédit: 'vy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.00020592445798683912
    2. ' vy' → logprob: -8.500205993652344
    3. 'yv' → logprob: -13.875205993652344
    4. 'vx' → logprob: -14.625205993652344
    5. ' ' → logprob: -15.000205993652344
    6. 'wy' → logprob: -15.750205993652344
    7. 'vyk' → logprob: -15.750205993652344
    8. 'v' → logprob: -16.125205993652344
    9. 'Vy' → logprob: -16.750205993652344
    10. '   ' → logprob: -17.000205993652344

Token 294: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002097564283758402
    2. ' if' → logprob: -6.6270976066589355
    3. '<|end|>' → logprob: -7.6270976066589355
    4. '
' → logprob: -8.752097129821777
    5. 'if' → logprob: -10.127097129821777
    6. '   ' → logprob: -10.127097129821777
    7. '<|end|>' → logprob: -11.752097129821777
    8. ',' → logprob: -12.002097129821777
    9. '           ' → logprob: -12.502097129821777
    10. ' ' → logprob: -12.627097129821777

Token 295: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008211841923184693
    2. '
' → logprob: -7.875821113586426
    3. ' if' → logprob: -8.250821113586426
    4. '   ' → logprob: -8.750821113586426
    5. 'if' → logprob: -11.250821113586426
    6. '           ' → logprob: -13.500821113586426
    7. '        
' → logprob: -13.625821113586426
    8. ' ' → logprob: -13.750821113586426
    9. '	if' → logprob: -14.125821113586426
    10. ' 
' → logprob: -14.500821113586426

Token 296: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4295322895050049
    2. '       ' → logprob: -1.1795322895050049
    3. ' if' → logprob: -3.179532289505005
    4. '   ' → logprob: -8.804532051086426
    5. '	if' → logprob: -13.054532051086426
    6. '           ' → logprob: -13.179532051086426
    7. ' ' → logprob: -13.429532051086426
    8. '```' → logprob: -13.679532051086426
    9. '
' → logprob: -14.304532051086426
    10. '      ' → logprob: -14.679532051086426

Token 297: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.47413399815559387
    2. 'c' → logprob: -0.9741339683532715
    3. '   ' → logprob: -10.72413444519043
    4. ' is' → logprob: -11.09913444519043
    5. 'is' → logprob: -11.47413444519043
    6. ' ' → logprob: -12.84913444519043
    7. '    ' → logprob: -13.34913444519043
    8. '	c' → logprob: -13.72413444519043
    9. '       ' → logprob: -14.66163444519043
    10. '```' → logprob: -14.84913444519043

Token 298: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.023408405482769012
    2. '1' → logprob: -3.7734084129333496
    3. ' ' → logprob: -9.898407936096191
    4. '   ' → logprob: -10.398407936096191
    5. '```' → logprob: -10.523407936096191
    6. '>=' → logprob: -10.898407936096191
    7. '_' → logprob: -11.398407936096191
    8. ' >=' → logprob: -11.898407936096191
    9. '>' → logprob: -12.398407936096191
    10. '==' → logprob: -13.148407936096191

Token 299: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.3868744373321533
    2. ' <=' → logprob: -1.1368744373321533
    3. ' ' → logprob: -13.511874198913574
    4. ']<=' → logprob: -14.511874198913574
    5. '==' → logprob: -14.761874198913574
    6. ')<=' → logprob: -14.886874198913574
    7. '>=' → logprob: -15.136874198913574
    8. '=' → logprob: -15.261874198913574
    9. '```' → logprob: -15.761874198913574
    10. '<' → logprob: -16.76187515258789

Token 300: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7332368493080139
    2. ' c' → logprob: -0.8582368493080139
    3. ' ' → logprob: -2.733236789703369
    4. '0' → logprob: -3.483236789703369
    5. '  ' → logprob: -12.358237266540527
    6. '1' → logprob: -12.483237266540527
    7. '
' → logprob: -12.733237266540527
    8. '	c' → logprob: -12.983237266540527
    9. ')c' → logprob: -13.233237266540527
    10. '   ' → logprob: -13.670737266540527

Token 301: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.28851592540740967
    2. '0' → logprob: -1.9135159254074097
    3. ' ' → logprob: -2.288516044616699
    4. '2' → logprob: -7.163516044616699
    5. '   ' → logprob: -7.413516044616699
    6. '  ' → logprob: -8.9135160446167
    7. 'c' → logprob: -9.6635160446167
    8. ' c' → logprob: -10.6635160446167
    9. '     ' → logprob: -11.9135160446167
    10. ':' → logprob: -12.0385160446167

Token 302: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25428205728530884
    2. ':
' → logprob: -1.504281997680664
    3. ':return' → logprob: -6.129281997680664
    4. '           ' → logprob: -9.754281997680664
    5. '       ' → logprob: -10.129281997680664
    6. ':
' → logprob: -10.629281997680664
    7. '   ' → logprob: -11.004281997680664
    8. 'return' → logprob: -11.379281997680664
    9. ':

' → logprob: -11.754281997680664
    10. ' return' → logprob: -12.754281997680664

Token 303: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005237233126536012
    2. ' return' → logprob: -8.125523567199707
    3. '       ' → logprob: -9.125523567199707
    4. 'return' → logprob: -10.500523567199707
    5. ':
' → logprob: -10.750523567199707
    6. '
' → logprob: -11.000523567199707
    7. ':' → logprob: -11.125523567199707
    8. ':return' → logprob: -11.750523567199707
    9. '          ' → logprob: -12.000523567199707
    10. ',' → logprob: -12.250523567199707

Token 304: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.30913180112838745
    2. 'return' (adapté à ' return') → logprob: -1.8091318607330322
    3. '       ' → logprob: -2.3091318607330322
    4. '           ' → logprob: -6.059131622314453
    5. '   ' → logprob: -7.809131622314453
    6. '
' → logprob: -11.309131622314453
    7. '	return' → logprob: -11.434131622314453
    8. ' ' → logprob: -13.059131622314453
    9. ':return' → logprob: -13.934131622314453
    10. '     ' → logprob: -14.559131622314453

Token 305: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.005235529970377684
    2. 'p' → logprob: -5.25523567199707
    3. ' ' → logprob: -13.50523567199707
    4. ' ' → logprob: -15.00523567199707
    5. '(p' → logprob: -18.25523567199707
    6. '	p' → logprob: -18.25523567199707
    7. '```' → logprob: -18.75523567199707
    8. '<p' → logprob: -19.00523567199707
    9. ' п' → logprob: -19.31773567199707
    10. ' ' → logprob: -19.69273567199707

Token 306: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -4.008129963040119e-06
    2. 'distance' → logprob: -12.750003814697266
    3. '.' → logprob: -13.875003814697266
    4. '.Distance' → logprob: -17.000003814697266
    5. '.dist' → logprob: -18.000003814697266
    6. ' distance' → logprob: -18.875003814697266
    7. ' .' → logprob: -18.875003814697266
    8. '(distance' → logprob: -19.250003814697266
    9. 'Distance' → logprob: -20.875003814697266
    10. '.point' → logprob: -21.375003814697266

Token 307: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -9.088346359931165e-07
    2. '._' → logprob: -15.375000953674316
    3. '.distance' → logprob: -15.375000953674316
    4. '.' → logprob: -15.500000953674316
    5. '_.' → logprob: -16.75
    6. '.to' → logprob: -17.0
    7. 'distance' → logprob: -17.375
    8. '```' → logprob: -17.375
    9. 'to' → logprob: -17.625
    10. 'To' → logprob: -17.75

Token 308: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.273621405242011e-05
    2. 'self' → logprob: -10.375032424926758
    3. '(' → logprob: -13.500032424926758
    4. ' self' → logprob: -16.000032424926758
    5. '	self' → logprob: -19.000032424926758
    6. ' (' → logprob: -19.125032424926758
    7. 's' → logprob: -19.125032424926758
    8. '(s' → logprob: -19.125032424926758
    9. '(this' → logprob: -19.250032424926758
    10. '(
' → logprob: -19.250032424926758

Token 309: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -5.512236498361744e-07
    2. '.' → logprob: -15.250000953674316
    3. ' .' → logprob: -15.875000953674316
    4. 'p' → logprob: -16.5
    5. 'self' → logprob: -19.875
    6. '
' → logprob: -20.125
    7. ').' → logprob: -20.375
    8. '```' → logprob: -20.75
    9. '.s' → logprob: -20.875
    10. '	p' → logprob: -21.125

Token 310: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -14.625001907348633
    3. '.' → logprob: -15.125001907348633
    4. '```' → logprob: -15.125001907348633
    5. 'p' → logprob: -15.250001907348633
    6. '.p' → logprob: -15.375001907348633
    7. 'self' → logprob: -15.500001907348633
    8. '   ' → logprob: -16.000001907348633
    9. '
' → logprob: -16.375001907348633
    10. '1' → logprob: -16.750001907348633

Token 311: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.21851128339767456
    2. ')' → logprob: -1.7185113430023193
    3. '       ' → logprob: -4.09351110458374
    4. ')
' → logprob: -8.593511581420898
    5. ' )
' → logprob: -9.968511581420898
    6. '   ' → logprob: -11.093511581420898
    7. ')

' → logprob: -11.218511581420898
    8. ' )' → logprob: -12.468511581420898
    9. ')return' → logprob: -12.843511581420898
    10. ' ' → logprob: -13.718511581420898

Token 312: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16082283854484558
    2. ' t' → logprob: -2.035822868347168
    3. 't' → logprob: -4.285822868347168
    4. ' b' → logprob: -6.035822868347168
    5. 'b' → logprob: -6.660822868347168
    6. '   ' → logprob: -7.660822868347168
    7. '        ' → logprob: -9.910822868347168
    8. '    ' → logprob: -12.285822868347168
    9. '```' → logprob: -12.535822868347168
    10. 'v' → logprob: -12.660822868347168

Token 313: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.007983481511473656
    2. 't' → logprob: -5.632983684539795
    3. ' b' → logprob: -6.257983684539795
    4. '   ' → logprob: -6.382983684539795
    5. '       ' → logprob: -7.257983684539795
    6. ' t' → logprob: -10.132983207702637
    7. 'bc' → logprob: -11.257983207702637
    8. '```' → logprob: -13.132983207702637
    9. '    ' → logprob: -13.257983207702637
    10. '	b' → logprob: -13.382983207702637

Token 314: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20145173370838165
    2. '=' → logprob: -1.7014517784118652
    3. '   ' → logprob: -10.951451301574707
    4. '=c' → logprob: -10.951451301574707
    5. ' ' → logprob: -14.201451301574707
    6. 'c' → logprob: -14.326451301574707
    7. '=b' → logprob: -14.451451301574707
    8. '       ' → logprob: -14.826451301574707
    9. '    ' → logprob: -14.951451301574707
    10. '=float' → logprob: -15.451451301574707

Token 315: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.01816035620868206
    2. ' c' → logprob: -4.018160343170166
    3. '   ' → logprob: -11.518160820007324
    4. '	c' → logprob: -15.393160820007324
    5. '
' → logprob: -16.393159866333008
    6. ' ' → logprob: -17.018159866333008
    7. '  ' → logprob: -17.268159866333008
    8. '    ' → logprob: -17.643159866333008
    9. '       ' → logprob: -17.768159866333008
    10. ')c' → logprob: -18.518159866333008

Token 316: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '=' → logprob: -18.75
    3. 'b' → logprob: -18.75
    4. ' ' → logprob: -19.0
    5. '```' → logprob: -19.5625
    6. 'c' → logprob: -19.875
    7. '=b' → logprob: -20.0625
    8. '１' → logprob: -20.4375
    9. ' =' → logprob: -20.8125
    10. 'token' → logprob: -21.0625

Token 317: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.39351069927215576
    2. '/' → logprob: -1.1435106992721558
    3. '/c' → logprob: -5.018510818481445
    4. '   ' → logprob: -12.893510818481445
    5. ' ' → logprob: -16.018510818481445
    6. '/b' → logprob: -16.143510818481445
    7. '  ' → logprob: -16.393510818481445
    8. '/
' → logprob: -16.518510818481445
    9. '/d' → logprob: -16.768510818481445
    10. ' ' → logprob: -16.893510818481445

Token 318: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0001584850688232109
    2. ' c' → logprob: -8.750158309936523
    3. '   ' → logprob: -19.625158309936523
    4. '	c' → logprob: -20.000158309936523
    5. ' ' → logprob: -20.125158309936523
    6. 'cation' → logprob: -21.250158309936523
    7. ')c' → logprob: -21.375158309936523
    8. '  ' → logprob: -22.250158309936523
    9. '_c' → logprob: -23.250158309936523
    10. '```' → logprob: -23.500158309936523

Token 319: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. ' ' → logprob: -18.0
    3. 's' → logprob: -19.0
    4. '۲' → logprob: -19.0
    5. 'c' → logprob: -19.625
    6. 'v' → logprob: -19.875
    7. '```' → logprob: -19.875
    8. '₂' → logprob: -20.5
    9. '²' → logprob: -20.75
    10. '２' → logprob: -20.875

Token 320: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015098022297024727
    2. ',' → logprob: -5.0150980949401855
    3. '
' → logprob: -5.3900980949401855
    4. '        
' → logprob: -6.6400980949401855
    5. 'x' → logprob: -7.1400980949401855
    6. ' dx' → logprob: -8.515097618103027
    7. ' px' → logprob: -8.640097618103027
    8. 'px' → logprob: -8.640097618103027
    9. ' 
' → logprob: -9.015097618103027
    10. '  
' → logprob: -9.140097618103027

Token 321: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037804816383868456
    2. 'x' → logprob: -6.378780364990234
    3. ' x' → logprob: -7.378780364990234
    4. '        ' → logprob: -7.878780364990234
    5. ' dx' → logprob: -8.128780364990234
    6. ' px' → logprob: -8.378780364990234
    7. 'px' → logprob: -8.503780364990234
    8. 'proj' → logprob: -9.628780364990234
    9. ' closest' → logprob: -10.253780364990234
    10. 'dx' → logprob: -10.253780364990234

Token 322: ' pb' (ID: 31582)
  Prédit: 'px'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'px' → logprob: -0.2558686137199402
    2. 'proj' → logprob: -1.880868673324585
    3. 'pb' (adapté à ' pb') → logprob: -2.755868673324585
    4. '   ' → logprob: -5.505868434906006
    5. 'closest' → logprob: -5.630868434906006
    6. 'bx' → logprob: -7.255868434906006
    7. 'x' → logprob: -8.005868911743164
    8. 'cx' → logprob: -8.005868911743164
    9. ' px' → logprob: -8.880868911743164
    10. '       ' → logprob: -9.130868911743164

Token 323: ' =' (ID: 314)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0034309120383113623
    2. '_x' → logprob: -5.7534308433532715
    3. ' =' → logprob: -8.37843132019043
    4. '=' → logprob: -10.75343132019043
    5. '   ' → logprob: -13.75343132019043
    6. '.x' → logprob: -15.12843132019043
    7. ' x' → logprob: -15.25343132019043
    8. ' ' → logprob: -15.50343132019043
    9. '.' → logprob: -16.87843132019043
    10. '_' → logprob: -16.87843132019043

Token 324: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.002087569562718272
    2. ' Point' → logprob: -6.252087593078613
    3. 'Line' → logprob: -9.127087593078613
    4. '       ' → logprob: -11.002087593078613
    5. '           ' → logprob: -11.502087593078613
    6. 'x' → logprob: -11.877087593078613
    7. '   ' → logprob: -12.377087593078613
    8. 'self' → logprob: -12.752087593078613
    9. '	Point' → logprob: -12.752087593078613
    10. '(Point' → logprob: -12.877087593078613

Token 325: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002063661115244031
    2. '(
' → logprob: -6.502063751220703
    3. '(' → logprob: -7.502063751220703
    4. 'self' → logprob: -12.002063751220703
    5. '((' → logprob: -13.127063751220703
    6. '(s' → logprob: -13.877063751220703
    7. '(

' → logprob: -16.127063751220703
    8. ' self' → logprob: -17.127063751220703
    9. '(this' → logprob: -17.252063751220703
    10. ' (' → logprob: -17.502063751220703

Token 326: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00044902291847392917
    2. 'p' → logprob: -7.750449180603027
    3. '.' → logprob: -11.125449180603027
    4. 'self' → logprob: -13.375449180603027
    5. ' .' → logprob: -14.625449180603027
    6. ' p' → logprob: -14.625449180603027
    7. '<p' → logprob: -15.125449180603027
    8. '_p' → logprob: -15.500449180603027
    9. '   ' → logprob: -16.12544822692871
    10. ' ' → logprob: -16.12544822692871

Token 327: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. '.' → logprob: -15.250000953674316
    3. 'p' → logprob: -15.875000953674316
    4. 'x' → logprob: -16.125
    5. ' ' → logprob: -16.75
    6. '   ' → logprob: -17.125
    7. '.x' → logprob: -17.25
    8. '```' → logprob: -18.4375
    9. '2' → logprob: -18.875
    10. ',' → logprob: -19.125

Token 328: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00012809180771000683
    2. 'x' → logprob: -9.125127792358398
    3. '.' → logprob: -10.875127792358398
    4. ' .' → logprob: -15.625127792358398
    5. ' ' → logprob: -18.2501277923584
    6. ' x' → logprob: -18.2501277923584
    7. ',' → logprob: -19.6251277923584
    8. ',x' → logprob: -20.2501277923584
    9. '[' → logprob: -20.5001277923584
    10. '   ' → logprob: -20.6251277923584

Token 329: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.4829218089580536
    2. '+' → logprob: -0.982921838760376
    3. '+b' → logprob: -4.732921600341797
    4. '+B' → logprob: -13.107921600341797
    5. '+x' → logprob: -13.482921600341797
    6. '+y' → logprob: -14.982921600341797
    7. ' ' → logprob: -15.107921600341797
    8. 'b' → logprob: -15.357921600341797
    9. '+p' → logprob: -15.607921600341797
    10. '+c' → logprob: -15.732921600341797

Token 330: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03838995099067688
    2. ' b' → logprob: -3.2883899211883545
    3. 'vx' → logprob: -8.413390159606934
    4. ' vx' → logprob: -9.163390159606934
    5. 'bx' → logprob: -11.538390159606934
    6. 'vy' → logprob: -12.163390159606934
    7. 'bv' → logprob: -12.538390159606934
    8. ' bx' → logprob: -13.538390159606934
    9. ' ' → logprob: -14.538390159606934
    10. '   ' → logprob: -14.663390159606934

Token 331: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -7.517272024415433e-05
    2. ' *' → logprob: -9.500075340270996
    3. '*v' → logprob: -15.375075340270996
    4. 'vx' → logprob: -17.75007438659668
    5. ' vx' → logprob: -19.25007438659668
    6. '**' → logprob: -19.87507438659668
    7. '*(' → logprob: -20.37507438659668
    8. ' ' → logprob: -21.12507438659668
    9. '   ' → logprob: -21.50007438659668
    10. '*object' → logprob: -21.87507438659668

Token 332: 'vx' (ID: 96015)
  Prédit: 'vx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vx' → logprob: -0.004621780011802912
    2. ' vx' → logprob: -5.379621982574463
    3. '   ' → logprob: -13.879621505737305
    4. ' ' → logprob: -15.129621505737305
    5. 'v' → logprob: -16.379621505737305
    6. 'vy' → logprob: -16.754621505737305
    7. '  ' → logprob: -16.754621505737305
    8. 'x' → logprob: -17.254621505737305
    9. '
' → logprob: -17.629621505737305
    10. '```' → logprob: -17.754621505737305

Token 333: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.301394023466855e-05
    2. ' ,' → logprob: -9.750062942504883
    3. ',
' → logprob: -12.500062942504883
    4. ',self' → logprob: -14.125062942504883
    5. '   ' → logprob: -16.375062942504883
    6. ',

' → logprob: -16.500062942504883
    7. 'self' → logprob: -17.750062942504883
    8. '‌,' → logprob: -19.250062942504883
    9. '       ' → logprob: -19.375062942504883
    10. ',
' → logprob: -19.625062942504883

Token 334: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01815415732562542
    2. ' self' → logprob: -4.018154144287109
    3. '   ' → logprob: -13.64315414428711
    4. '       ' → logprob: -13.64315414428711
    5. '           ' → logprob: -13.76815414428711
    6. '    ' → logprob: -15.89315414428711
    7. '	self' → logprob: -16.14315414428711
    8. '          ' → logprob: -16.39315414428711
    9. ' ' → logprob: -16.64315414428711
    10. '               ' → logprob: -16.76815414428711

Token 335: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.00021843716967850924
    2. '1' → logprob: -8.500218391418457
    3. '.' → logprob: -11.500218391418457
    4. 'p' → logprob: -12.625218391418457
    5. '.y' → logprob: -14.250218391418457
    6. 'self' → logprob: -14.500218391418457
    7. ' .' → logprob: -16.125219345092773
    8. '
' → logprob: -16.250219345092773
    9. 'y' → logprob: -16.375219345092773
    10. '.py' → logprob: -17.250219345092773

Token 336: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3425219549390022e-05
    2. '.p' → logprob: -11.87501335144043
    3. 'p' → logprob: -12.62501335144043
    4. '.y' → logprob: -13.00001335144043
    5. '
' → logprob: -15.50001335144043
    6. '2' → logprob: -15.87501335144043
    7. '```' → logprob: -15.87501335144043
    8. 'y' → logprob: -16.12501335144043
    9. 'py' → logprob: -16.43751335144043
    10. ' ' → logprob: -17.12501335144043

Token 337: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -4.3464544432936236e-05
    2. '.' → logprob: -10.500043869018555
    3. '1' → logprob: -11.750043869018555
    4. 'y' → logprob: -12.000043869018555
    5. '.py' → logprob: -14.125043869018555
    6. ' .' → logprob: -14.375043869018555
    7. '.x' → logprob: -14.625043869018555
    8. ' ' → logprob: -17.875043869018555
    9. ''y' → logprob: -18.125043869018555
    10. '   ' → logprob: -18.250043869018555

Token 338: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3869166076183319
    2. '+' → logprob: -1.1369166374206543
    3. '+b' → logprob: -10.011916160583496
    4. '+y' → logprob: -15.011916160583496
    5. ' ' → logprob: -15.511916160583496
    6. '<|end|>' → logprob: -16.511917114257812
    7. ' +
' → logprob: -17.636917114257812
    8. '+
' → logprob: -17.761917114257812
    9. '   ' → logprob: -18.011917114257812
    10. ' ' → logprob: -18.011917114257812

Token 339: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0009118211455643177
    2. ' b' → logprob: -7.000911712646484
    3. '   ' → logprob: -15.375911712646484
    4. 'bv' → logprob: -16.625911712646484
    5. ' ' → logprob: -17.625911712646484
    6. '	b' → logprob: -18.000911712646484
    7. ')b' → logprob: -18.500911712646484
    8. ')' → logprob: -19.625911712646484
    9. '    ' → logprob: -19.625911712646484
    10. '  ' → logprob: -20.125911712646484

Token 340: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.00010509284038562328
    2. 'vy' → logprob: -9.250104904174805
    3. ' *' → logprob: -12.375104904174805
    4. ' vy' → logprob: -12.875104904174805
    5. 'v' → logprob: -14.000104904174805
    6. ')' → logprob: -15.125104904174805
    7. 'Vy' → logprob: -15.250104904174805
    8. ' ' → logprob: -15.750104904174805
    9. '*v' → logprob: -16.125104904174805
    10. 'y' → logprob: -16.250104904174805

Token 341: 'vy' (ID: 16670)
  Prédit: 'vy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vy' → logprob: -0.00014120421838015318
    2. ' vy' → logprob: -8.875141143798828
    3. 'yv' → logprob: -14.625141143798828
    4. '*' → logprob: -14.750141143798828
    5. 'v' → logprob: -15.000141143798828
    6. ' ' → logprob: -15.750141143798828
    7. '   ' → logprob: -17.375141143798828
    8. '  ' → logprob: -18.500141143798828
    9. 'wy' → logprob: -18.500141143798828
    10. '
' → logprob: -18.500141143798828

Token 342: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4741207957267761
    2. ')' → logprob: -0.9741207957267761
    3. ')
' → logprob: -10.59912109375
    4. '       ' → logprob: -11.59912109375
    5. ' )
' → logprob: -11.97412109375
    6. '   ' → logprob: -13.59912109375
    7. ')

' → logprob: -13.84912109375
    8. ' )' → logprob: -14.09912109375
    9. ')`
' → logprob: -15.47412109375
    10. ')return' → logprob: -16.34912109375

Token 343: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023467533756047487
    2. ' return' → logprob: -6.377346515655518
    3. '
' → logprob: -8.002346992492676
    4. 'return' → logprob: -8.377346992492676
    5. '   ' → logprob: -9.502346992492676
    6. '	return' → logprob: -13.127346992492676
    7. '        
' → logprob: -14.502346992492676
    8. '<|end|>' → logprob: -14.877346992492676
    9. '
' → logprob: -15.002346992492676
    10. '	' → logprob: -15.002346992492676

Token 344: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0041747987270355225
    2. '       ' → logprob: -5.504174709320068
    3. ' return' → logprob: -9.254175186157227
    4. '   ' → logprob: -14.629175186157227
    5. '	return' → logprob: -15.129175186157227
    6. '
' → logprob: -18.004175186157227
    7. '```' → logprob: -18.629175186157227
    8. '	' → logprob: -20.129175186157227
    9. ':return' → logprob: -20.379175186157227
    10. ')return' → logprob: -21.004175186157227

Token 345: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0946502685546875
    2. ' p' → logprob: -2.4696502685546875
    3. 'pb' → logprob: -5.2196502685546875
    4. ' pb' → logprob: -8.219650268554688
    5. '   ' → logprob: -11.344650268554688
    6. '	p' → logprob: -13.594650268554688
    7. ' ' → logprob: -13.719650268554688
    8. '       ' → logprob: -15.282150268554688
    9. 'PB' → logprob: -15.469650268554688
    10. ' ' → logprob: -15.719650268554688

Token 346: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -6.511406809295295e-06
    2. 'distance' → logprob: -12.000006675720215
    3. '.' → logprob: -16.0000057220459
    4. ' .' → logprob: -16.5000057220459
    5. ' distance' → logprob: -16.7500057220459
    6. '.dist' → logprob: -18.2500057220459
    7. '.Distance' → logprob: -18.2500057220459
    8. '(distance' → logprob: -19.2500057220459
    9. '_distance' → logprob: -20.2500057220459
    10. 'Distance' → logprob: -20.5000057220459

Token 347: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: 0.0
    2. 'to' → logprob: -18.75
    3. '_' → logprob: -19.125
    4. 'To' → logprob: -19.375
    5. '_TO' → logprob: -19.875
    6. '_t' → logprob: -21.0
    7. '__' → logprob: -21.25
    8. ' _' → logprob: -21.5
    9. '(_' → logprob: -21.625
    10. '(' → logprob: -22.125

Token 348: '(pb' (ID: 176819)
  Prédit: '(pb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pb' → logprob: -1.5048530030981055e-06
    2. 'pb' → logprob: -13.875001907348633
    3. '(p' → logprob: -15.250001907348633
    4. '_pb' → logprob: -16.250001907348633
    5. ' pb' → logprob: -16.625001907348633
    6. '(pm' → logprob: -17.500001907348633
    7. '(px' → logprob: -17.875001907348633
    8. '(py' → logprob: -19.000001907348633
    9. '(' → logprob: -19.375001907348633
    10. '.pb' → logprob: -19.750001907348633

Token 349: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1875571544806007e-05
    2. ')
' → logprob: -11.375011444091797
    3. ' )' → logprob: -16.375011444091797
    4. ')

' → logprob: -17.000011444091797
    5. ')return' → logprob: -17.125011444091797
    6. '}' → logprob: -17.375011444091797
    7. ')#' → logprob: -17.500011444091797
    8. '   ' → logprob: -17.875011444091797
    9. '))' → logprob: -18.875011444091797
    10. '<|end|>' → logprob: -19.000011444091797

Token 350: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2599652111530304
    2. '<|end|>' → logprob: -2.259965181350708
    3. '
' → logprob: -2.884965181350708
    4. 'def' → logprob: -3.134965181350708
    5. 'class' → logprob: -3.884965181350708
    6. '<|end|>' → logprob: -6.634965419769287
    7. '    
' → logprob: -6.884965419769287
    8. ' def' → logprob: -8.134964942932129
    9. ' ' → logprob: -8.134964942932129
    10. '  ' → logprob: -8.509964942932129

Token 351: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.9849125742912292
    2. '
' → logprob: -1.234912633895874
    3. '   ' → logprob: -1.359912633895874
    4. '<|end|>' → logprob: -3.109912633895874
    5. 'class' → logprob: -3.859912633895874
    6. ' def' → logprob: -5.109912395477295
    7. '    
' → logprob: -5.859912395477295
    8. ' ' → logprob: -6.984912395477295
    9. '<|end|>' → logprob: -7.484912395477295
    10. ' 
' → logprob: -7.859912395477295

Token 352: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.4804997742176056
    2. ' __' → logprob: -1.3554997444152832
    3. ' intersects' → logprob: -2.980499744415283
    4. ' midpoint' → logprob: -3.605499744415283
    5. 'inter' → logprob: -4.105499744415283
    6. '_inter' → logprob: -4.855499744415283
    7. ' contains' → logprob: -5.105499744415283
    8. 'contains' → logprob: -5.230499744415283
    9. ' is' → logprob: -6.605499744415283
    10. ' ' → logprob: -6.980499744415283

Token 353: 'repr' (ID: 67002)
  Prédit: 'eq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -0.6933119297027588
    2. 'repr' → logprob: -0.6933119297027588
    3. 'str' → logprob: -9.19331169128418
    4. 'lt' → logprob: -10.56831169128418
    5. 'hash' → logprob: -11.06831169128418
    6. 'init' → logprob: -12.19331169128418
    7. 'iter' → logprob: -12.19331169128418
    8. 'rep' → logprob: -13.19331169128418
    9. 'contains' → logprob: -13.44331169128418
    10. 'bool' → logprob: -13.69331169128418

Token 354: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.038729701191186905
    2. '(self' → logprob: -3.288729667663574
    3. '__' → logprob: -7.538729667663574
    4. '(' → logprob: -9.288729667663574
    5. '__(
' → logprob: -9.788729667663574
    6. '_(' → logprob: -12.913729667663574
    7. '__('' → logprob: -13.413729667663574
    8. 'self' → logprob: -13.913729667663574
    9. '```' → logprob: -14.288729667663574
    10. '(s' → logprob: -14.413729667663574

Token 355: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.512236498361744e-07
    2. ' self' → logprob: -14.625000953674316
    3. ')' → logprob: -17.25
    4. '   ' → logprob: -18.25
    5. 's' → logprob: -18.5
    6. '       ' → logprob: -19.25
    7. '
' → logprob: -19.25
    8. ' ' → logprob: -19.375
    9. '(self' → logprob: -19.375
    10. 'sel' → logprob: -20.25

Token 356: '):
' (ID: 1883)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.31268733739852905
    2. '__(' → logprob: -1.6876873970031738
    3. '__)' → logprob: -2.562687397003174
    4. '__(
' → logprob: -5.937687397003174
    5. '__((' → logprob: -7.187687397003174
    6. '__).' → logprob: -7.437687397003174
    7. 'self' → logprob: -7.437687397003174
    8. '__,' → logprob: -8.062686920166016
    9. '__:' → logprob: -8.187686920166016
    10. '__("' → logprob: -8.312686920166016

Token 357: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01038452796638012
    2. 'self' → logprob: -5.010384559631348
    3. 'f' → logprob: -6.135384559631348
    4. ' f' → logprob: -7.135384559631348
    5. ' self' → logprob: -7.635384559631348
    6. '   ' → logprob: -9.010384559631348
    7. 'return' → logprob: -9.760384559631348
    8. ' return' → logprob: -11.135384559631348
    9. 'def' → logprob: -11.760384559631348
    10. '(self' → logprob: -11.885384559631348

Token 358: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.584186315536499
    2. '       ' → logprob: -0.834186315536499
    3. ' return' → logprob: -4.834186553955078
    4. 'f' → logprob: -8.334186553955078
    5. '   ' → logprob: -11.959186553955078
    6. '
' → logprob: -12.084186553955078
    7. ' f' → logprob: -12.334186553955078
    8. '	return' → logprob: -13.084186553955078
    9. '           ' → logprob: -15.209186553955078
    10. '```' → logprob: -15.334186553955078

Token 359: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.575939416885376
    2. ' f' → logprob: -0.825939416885376
    3. ' ' → logprob: -17.700939178466797
    4. '	f' → logprob: -18.075939178466797
    5. '   ' → logprob: -18.450939178466797
    6. ''f' → logprob: -19.825939178466797
    7. '(f' → logprob: -20.450939178466797
    8. '    ' → logprob: -20.700939178466797
    9. '"' → logprob: -20.825939178466797
    10. 'F' → logprob: -20.825939178466797

Token 360: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.1684568077325821
    2. '"' → logprob: -2.543456792831421
    3. '(Line' → logprob: -2.793456792831421
    4. ' f' → logprob: -4.91845703125
    5. '(f' → logprob: -5.16845703125
    6. 'Line' → logprob: -6.16845703125
    7. '"(' → logprob: -9.91845703125
    8. '("' → logprob: -10.54345703125
    9. '

' → logprob: -11.91845703125
    10. '.Line' → logprob: -11.91845703125

Token 361: 'Line' (ID: 3665)
  Prédit: 'Line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Line' → logprob: -1.981667537620524e-06
    2. '{' → logprob: -14.125001907348633
    3. ''' → logprob: -14.750001907348633
    4. 'f' → logprob: -15.250001907348633
    5. 'Point' → logprob: -15.375001907348633
    6. ' Line' → logprob: -15.750001907348633
    7. '"' → logprob: -16.625001907348633
    8. 'Segment' → logprob: -16.750001907348633
    9. '(Line' → logprob: -16.875001907348633
    10. ''{' → logprob: -17.625001907348633

Token 362: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -2.339278580620885e-06
    2. 'Seg' → logprob: -13.000001907348633
    3. 'S' → logprob: -18.000001907348633
    4. '"' → logprob: -18.375001907348633
    5. ' Segment' → logprob: -18.375001907348633
    6. 'Segments' → logprob: -18.625001907348633
    7. '(' → logprob: -18.750001907348633
    8. '_segment' → logprob: -19.250001907348633
    9. 'Se' → logprob: -19.875001907348633
    10. 'segment' → logprob: -20.125001907348633

Token 363: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -1.723973582556937e-05
    2. '(Point' → logprob: -11.000017166137695
    3. '(' → logprob: -15.125017166137695
    4. '(({' → logprob: -16.375017166137695
    5. '{' → logprob: -17.125017166137695
    6. '(self' → logprob: -17.250017166137695
    7. '([{' → logprob: -19.375017166137695
    8. '({
' → logprob: -19.500017166137695
    9. '(Line' → logprob: -19.750017166137695
    10. 'Point' → logprob: -19.750017166137695

Token 364: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0001410850090906024
    2. 'repr' → logprob: -8.875141143798828
    3. '{' → logprob: -14.250141143798828
    4. ' self' → logprob: -14.375141143798828
    5. '   ' → logprob: -18.000141143798828
    6. '(self' → logprob: -19.000141143798828
    7. '.self' → logprob: -19.875141143798828
    8. ' repr' → logprob: -20.125141143798828
    9. ' ' → logprob: -20.125141143798828
    10. 're' → logprob: -20.375141143798828

Token 365: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -2.8921695047756657e-05
    2. '.' → logprob: -10.625028610229492
    3. '.s' → logprob: -12.375028610229492
    4. ').' → logprob: -15.750028610229492
    5. ' .' → logprob: -16.875028610229492
    6. 'p' → logprob: -17.875028610229492
    7. ')' → logprob: -18.250028610229492
    8. 'self' → logprob: -19.375028610229492
    9. '<p' → logprob: -19.375028610229492
    10. '.i' → logprob: -19.500028610229492

Token 366: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. '.p' → logprob: -13.25000286102295
    3. 'p' → logprob: -15.25000286102295
    4. '```' → logprob: -15.50000286102295
    5. '.' → logprob: -16.250001907348633
    6. ' ' → logprob: -17.625001907348633
    7. '._' → logprob: -18.000001907348633
    8. 'self' → logprob: -18.000001907348633
    9. 's' → logprob: -18.250001907348633
    10. 'oints' → logprob: -18.375001907348633

Token 367: '},' (ID: 4180)
  Prédit: '},'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '},' → logprob: -8.661626634420827e-05
    2. ',' → logprob: -9.375086784362793
    3. '}' → logprob: -14.250086784362793
    4. '},{' → logprob: -14.375086784362793
    5. '!' → logprob: -15.250086784362793
    6. ' },' → logprob: -16.375085830688477
    7. '"},' → logprob: -16.500085830688477
    8. '>,' → logprob: -16.625085830688477
    9. '},
' → logprob: -16.875085830688477
    10. '),' → logprob: -18.875085830688477

Token 368: ' {' (ID: 354)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.08094680309295654
    2. ' {' → logprob: -2.830946922302246
    3. 'self' → logprob: -4.330946922302246
    4. ' f' → logprob: -6.205946922302246
    5. '{' → logprob: -6.330946922302246
    6. ' ' → logprob: -7.080946922302246
    7. ' ' → logprob: -7.330946922302246
    8. '<|end|>' → logprob: -8.455946922302246
    9. ',' → logprob: -10.080946922302246
    10. ' 
' → logprob: -11.080946922302246

Token 369: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002036595979006961
    2. ' self' → logprob: -8.500204086303711
    3. '	self' → logprob: -17.00020408630371
    4. 'Self' → logprob: -17.12520408630371
    5. '(self' → logprob: -17.25020408630371
    6. '$self' → logprob: -17.37520408630371
    7. '[self' → logprob: -18.12520408630371
    8. '{' → logprob: -18.12520408630371
    9. '*self' → logprob: -19.37520408630371
    10. '_self' → logprob: -19.75020408630371

Token 370: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0020454595796763897
    2. '.' → logprob: -6.252045631408691
    3. '2' → logprob: -9.252045631408691
    4. 'p' → logprob: -11.502045631408691
    5. ')' → logprob: -12.877045631408691
    6. '.s' → logprob: -13.127045631408691
    7. ' .' → logprob: -13.252045631408691
    8. ' ' → logprob: -13.752045631408691
    9. '   ' → logprob: -14.377045631408691
    10. '
' → logprob: -14.627045631408691

Token 371: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.688212614681106e-05
    2. '.' → logprob: -11.125017166137695
    3. '.p' → logprob: -14.125017166137695
    4. '1' → logprob: -14.625017166137695
    5. '}' → logprob: -15.125017166137695
    6. 'p' → logprob: -15.125017166137695
    7. '```' → logprob: -15.625017166137695
    8. '
' → logprob: -17.125017166137695
    9. 't' → logprob: -17.375017166137695
    10. ')' → logprob: -18.000017166137695

Token 372: '})' (ID: 9263)
  Prédit: '})'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '})' → logprob: -0.025523530319333076
    2. ')"' → logprob: -4.275523662567139
    3. ')' → logprob: -4.525523662567139
    4. ')}' → logprob: -7.775523662567139
    5. ')")' → logprob: -10.65052318572998
    6. '}")' → logprob: -11.65052318572998
    7. '))' → logprob: -12.15052318572998
    8. '}"' → logprob: -13.02552318572998
    9. ')`' → logprob: -13.15052318572998
    10. '}' → logprob: -13.15052318572998

Token 373: '"

' (ID: 2678)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.015611383132636547
    2. '   ' → logprob: -4.390611171722412
    3. '\n' → logprob: -7.015611171722412
    4. '<|end|>' → logprob: -7.015611171722412
    5. '    
' → logprob: -7.390611171722412
    6. 'n' → logprob: -8.14061164855957
    7. '' → logprob: -9.51561164855957
    8. '\' → logprob: -10.01561164855957
    9. '<|end|>' → logprob: -10.26561164855957
    10. ')' → logprob: -10.51561164855957

Token 374: 'class' (ID: 1444)
  Prédit: 'class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.0234137661755085
    2. 'c' → logprob: -4.27341365814209
    3. 'def' → logprob: -4.89841365814209
    4. 'd' → logprob: -6.77341365814209
    5. ' class' → logprob: -8.52341365814209
    6. '   ' → logprob: -9.02341365814209
    7. '
' → logprob: -9.02341365814209
    8. '#' → logprob: -10.64841365814209
    9. '\n' → logprob: -10.64841365814209
    10. '@' → logprob: -11.14841365814209

Token 375: ' Laser' (ID: 49648)
  Prédit: 'Triangle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Triangle' → logprob: -0.9375824928283691
    2. ' Triangle' → logprob: -0.9375824928283691
    3. 'Polygon' → logprob: -2.312582492828369
    4. ' Polygon' → logprob: -2.937582492828369
    5. 'Circle' → logprob: -3.812582492828369
    6. 'Rectangle' → logprob: -4.062582492828369
    7. ' Circle' → logprob: -4.312582492828369
    8. ' Rectangle' → logprob: -4.937582492828369
    9. 'Polyline' → logprob: -5.562582492828369
    10. '__' → logprob: -7.937582492828369

Token 376: ':
' (ID: 734)
  Prédit: 'Beam'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Beam' → logprob: -0.40705135464668274
    2. ':' → logprob: -1.2820513248443604
    3. 'Pointer' → logprob: -3.7820513248443604
    4. 'Scanner' → logprob: -4.6570515632629395
    5. 'Line' → logprob: -5.4070515632629395
    6. 'Path' → logprob: -5.6570515632629395
    7. '(' → logprob: -5.6570515632629395
    8. 'Point' → logprob: -6.0320515632629395
    9. 'Sensor' → logprob: -6.1570515632629395
    10. ':
' → logprob: -6.5320515632629395

Token 377: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00034023032640106976
    2. ':
' → logprob: -8.250340461730957
    3. ':' → logprob: -10.375340461730957
    4. ' def' → logprob: -11.625340461730957
    5. 'def' → logprob: -12.000340461730957
    6. '<|end|>' → logprob: -12.000340461730957
    7. '(object' → logprob: -12.500340461730957
    8. '):
' → logprob: -12.750340461730957
    9. '
' → logprob: -13.000340461730957
    10. '(' → logprob: -13.500340461730957

Token 378: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.528205156326294
    2. '__' (adapté à ' __') → logprob: -1.153205156326294
    3. ' def' → logprob: -2.903205156326294
    4. 'def' → logprob: -3.278205156326294
    5. '   ' → logprob: -6.153204917907715
    6. 'class' → logprob: -11.278204917907715
    7. '.__' → logprob: -12.278204917907715
    8. ' ' → logprob: -12.653204917907715
    9. 'slots' → logprob: -12.840704917907715
    10. 'from' → logprob: -13.028204917907715

Token 379: 'slots' (ID: 101916)
  Prédit: 'slots'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'slots' → logprob: -3.8889261304575484e-06
    2. '_slots' → logprob: -12.750003814697266
    3. 'init' → logprob: -14.875003814697266
    4. 'slot' → logprob: -15.125003814697266
    5. ' slots' → logprob: -15.625003814697266
    6. 'spots' → logprob: -17.125003814697266
    7. 'sl' → logprob: -17.125003814697266
    8. '__' → logprob: -18.250003814697266
    9. 'repr' → logprob: -18.625003814697266
    10. 'spaces' → logprob: -19.125003814697266

Token 380: '__' (ID: 771)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.390484094619751
    2. ' =' → logprob: -1.140484094619751
    3. '__' → logprob: -5.640483856201172
    4. '=('' → logprob: -10.015483856201172
    5. '_' → logprob: -11.765483856201172
    6. '=['' → logprob: -13.890483856201172
    7. '_=' → logprob: -14.515483856201172
    8. '=("' → logprob: -15.140483856201172
    9. ':' → logprob: -15.515483856201172
    10. '='' → logprob: -15.765483856201172

Token 381: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.474661260843277
    2. ' =' → logprob: -0.9746612310409546
    3. '__' → logprob: -7.474661350250244
    4. '=('' → logprob: -11.224660873413086
    5. '=['' → logprob: -14.224660873413086
    6. ':' → logprob: -14.474660873413086
    7. '   ' → logprob: -14.724660873413086
    8. '('' → logprob: -15.349660873413086
    9. '=("' → logprob: -15.474660873413086
    10. ' ' → logprob: -15.599660873413086

Token 382: ' ('' (ID: 9906)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.2591143846511841
    2. ' ('' → logprob: -1.509114384651184
    3. '('_' → logprob: -5.0091142654418945
    4. '('__' → logprob: -7.7591142654418945
    5. ' ' → logprob: -11.384114265441895
    6. '   ' → logprob: -11.634114265441895
    7. ' '' → logprob: -11.884114265441895
    8. '['' → logprob: -11.884114265441895
    9. ''s' → logprob: -12.134114265441895
    10. '=('' → logprob: -12.384114265441895

Token 383: 'line' (ID: 1137)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.9255584478378296
    2. 'origin' → logprob: -1.3005584478378296
    3. 'position' → logprob: -1.4255584478378296
    4. 'start' → logprob: -3.925558567047119
    5. 'beam' → logprob: -4.050558567047119
    6. 'line' → logprob: -4.300558567047119
    7. 'segment' → logprob: -4.425558567047119
    8. 'pos' → logprob: -4.550558567047119
    9. 'lines' → logprob: -5.675558567047119
    10. 'angle' → logprob: -5.925558567047119

Token 384: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.4677911102771759
    2. '_segment' → logprob: -1.0927910804748535
    3. '')' → logprob: -3.8427910804748535
    4. 'segment' → logprob: -4.5927910804748535
    5. '_segments' → logprob: -6.0927910804748535
    6. 's' → logprob: -6.2177910804748535
    7. '','' → logprob: -6.5927910804748535
    8. ',' → logprob: -8.217791557312012
    9. '_seg' → logprob: -8.217791557312012
    10. ''' → logprob: -8.217791557312012

Token 385: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.799837589263916
    2. ' '' → logprob: -1.424837589263916
    3. ''s' → logprob: -2.424837589263916
    4. ''ob' → logprob: -2.424837589263916
    5. ''d' → logprob: -3.049837589263916
    6. ''r' → logprob: -4.549837589263916
    7. ''m' → logprob: -4.674837589263916
    8. ''t' → logprob: -4.674837589263916
    9. ''h' → logprob: -5.049837589263916
    10. ''int' → logprob: -5.049837589263916

Token 386: 'th' (ID: 404)
  Prédit: 'power'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'power' → logprob: -1.4884687662124634
    2. 'angle' → logprob: -1.8634687662124634
    3. 'point' → logprob: -2.363468647003174
    4. 'origin' → logprob: -2.488468647003174
    5. 'length' → logprob: -2.988468647003174
    6. 'distance' → logprob: -3.113468647003174
    7. 'points' → logprob: -3.488468647003174
    8. 'active' → logprob: -3.613468647003174
    9. 'reflection' → logprob: -3.738468647003174
    10. 'ob' → logprob: -3.863468647003174

Token 387: 'ickness' (ID: 46853)
  Prédit: 'ickness'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ickness' → logprob: -0.47905784845352173
    2. 'reshold' → logprob: -0.9790578484535217
    3. 'resh' → logprob: -5.604057788848877
    4. 'ick' → logprob: -7.229057788848877
    5. 'res' → logprob: -7.729057788848877
    6. 'r' → logprob: -10.479058265686035
    7. 'read' → logprob: -10.979058265686035
    8. 'ck' → logprob: -11.229058265686035
    9. 're' → logprob: -12.354058265686035
    10. '1' → logprob: -12.354058265686035

Token 388: '')
' (ID: 2515)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.16027702391147614
    2. '')' → logprob: -1.910277009010315
    3. ')' → logprob: -10.910277366638184
    4. ''' → logprob: -11.285277366638184
    5. ',' → logprob: -11.535277366638184
    6. '')
' → logprob: -11.785277366638184
    7. '','' → logprob: -13.660277366638184
    8. ' ',' → logprob: -14.160277366638184
    9. '')

' → logprob: -14.535277366638184
    10. '',
' → logprob: -14.785277366638184

Token 389: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11081036180257797
    2. '
' → logprob: -2.3608102798461914
    3. '    
' → logprob: -4.860810279846191
    4. ' def' → logprob: -7.110810279846191
    5. 'def' → logprob: -7.110810279846191
    6. '	
' → logprob: -7.735810279846191
    7. '	def' → logprob: -7.860810279846191
    8. '    ' → logprob: -9.235810279846191
    9. ' 
' → logprob: -9.485810279846191
    10. '  
' → logprob: -10.360810279846191

Token 390: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.33093318343162537
    2. ' def' → logprob: -1.7059332132339478
    3. '   ' → logprob: -2.330933094024658
    4. '
' → logprob: -6.205933094024658
    5. '	def' → logprob: -7.205933094024658
    6. '    
' → logprob: -8.830933570861816
    7. ' ' → logprob: -11.830933570861816
    8. '  ' → logprob: -12.205933570861816
    9. ' 
' → logprob: -12.705933570861816
    10. '  
' → logprob: -12.830933570861816

Token 391: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.004179667681455612
    2. '__' → logprob: -5.62917947769165
    3. '_init' → logprob: -8.129179954528809
    4. ' def' → logprob: -8.754179954528809
    5. 'init' → logprob: -10.129179954528809
    6. ' init' → logprob: -10.129179954528809
    7. 'def' → logprob: -10.629179954528809
    8. ' ' → logprob: -11.129179954528809
    9. '_' → logprob: -13.004179954528809
    10. ' line' → logprob: -13.504179954528809

Token 392: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.20141635835170746
    2. 'slots' → logprob: -1.7014163732528687
    3. '_init' → logprob: -14.076416015625
    4. ' slots' → logprob: -14.326416015625
    5. '_slots' → logprob: -14.326416015625
    6. ' init' → logprob: -14.826416015625
    7. 'slot' → logprob: -15.701416015625
    8. '__' → logprob: -15.826416015625
    9. '```' → logprob: -16.326416015625
    10. 'sl' → logprob: -16.826416015625

Token 393: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0005711443373002112
    2. '(self' → logprob: -7.750571250915527
    3. '__' → logprob: -9.000571250915527
    4. '__(
' → logprob: -11.625571250915527
    5. '_(' → logprob: -12.000571250915527
    6. '(' → logprob: -13.625571250915527
    7. '__((' → logprob: -14.875571250915527
    8. 'self' → logprob: -15.750571250915527
    9. '__('' → logprob: -16.25057029724121
    10. '__(*' → logprob: -17.12557029724121

Token 394: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.3902033970225602e-05
    2. ' self' → logprob: -11.250014305114746
    3. '   ' → logprob: -15.125014305114746
    4. '(self' → logprob: -15.875014305114746
    5. ',' → logprob: -16.50001335144043
    6. 's' → logprob: -16.62501335144043
    7. '       ' → logprob: -16.62501335144043
    8. 'line' → logprob: -16.62501335144043
    9. ')' → logprob: -16.75001335144043
    10. '
' → logprob: -16.87501335144043

Token 395: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0063779521733522415
    2. 'self' → logprob: -5.131378173828125
    3. '(self' → logprob: -7.881378173828125
    4. ' self' → logprob: -10.381378173828125
    5. ' ,' → logprob: -10.631378173828125
    6. ' (' → logprob: -12.131378173828125
    7. ',self' → logprob: -12.381378173828125
    8. ')' → logprob: -13.131378173828125
    9. '<|end|>' → logprob: -13.256378173828125
    10. '(' → logprob: -14.006378173828125

Token 396: ' p' (ID: 275)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6900626420974731
    2. 'line' → logprob: -0.8150626420974731
    3. ' line' → logprob: -3.3150625228881836
    4. ' self' → logprob: -3.9400625228881836
    5. '   ' → logprob: -10.565062522888184
    6. ',line' → logprob: -12.190062522888184
    7. ')' → logprob: -12.440062522888184
    8. '_line' → logprob: -12.690062522888184
    9. '	line' → logprob: -12.815062522888184
    10. ',' → logprob: -12.815062522888184

Token 397: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ')' → logprob: -13.75000286102295
    3. 'oints' → logprob: -14.87500286102295
    4. 'oint' → logprob: -15.00000286102295
    5. ',' → logprob: -15.25000286102295
    6. ' ' → logprob: -15.75000286102295
    7. ':' → logprob: -15.75000286102295
    8. '   ' → logprob: -16.000003814697266
    9. 'a' → logprob: -16.125003814697266
    10. '=None' → logprob: -16.500003814697266

Token 398: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17981791496276855
    2. ':' → logprob: -1.8048179149627686
    3. ' ,' → logprob: -10.054818153381348
    4. '<|end|>' → logprob: -11.429818153381348
    5. ',p' → logprob: -12.304818153381348
    6. 'p' → logprob: -13.179818153381348
    7. ' :' → logprob: -13.304818153381348
    8. '<|end|>' → logprob: -13.554818153381348
    9. '):' → logprob: -13.679818153381348
    10. '=None' → logprob: -13.804818153381348

Token 399: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.0019308974733576179
    2. ' Point' → logprob: -6.2519307136535645
    3. '	Point' → logprob: -13.501931190490723
    4. '_Point' → logprob: -14.626931190490723
    5. '_point' → logprob: -15.501931190490723
    6. '.Point' → logprob: -16.376930236816406
    7. 'float' → logprob: -16.876930236816406
    8. '<Point' → logprob: -17.001930236816406
    9. '<|end|>' → logprob: -17.001930236816406
    10. '-point' → logprob: -18.001930236816406

Token 400: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.045823566731997e-05
    2. ' ,' → logprob: -10.875020027160645
    3. ',p' → logprob: -13.750020027160645
    4. '‌,' → logprob: -15.625020027160645
    5. ',
' → logprob: -16.50002098083496
    6. '<|end|>' → logprob: -17.00002098083496
    7. '   ' → logprob: -17.62502098083496
    8. '',' → logprob: -17.62502098083496
    9. 'p' → logprob: -18.00002098083496
    10. ' p' → logprob: -18.12502098083496

Token 401: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10020828247070312
    2. ' p' → logprob: -2.350208282470703
    3. '   ' → logprob: -13.600208282470703
    4. '    ' → logprob: -15.725208282470703
    5. ' ' → logprob: -15.975208282470703
    6. '  ' → logprob: -16.475208282470703
    7. ',' → logprob: -16.850208282470703
    8. '_p' → logprob: -16.975208282470703
    9. '<p' → logprob: -17.600208282470703
    10. '	p' → logprob: -17.975208282470703

Token 402: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7432603272027336e-06
    2. ',' → logprob: -14.125001907348633
    3. ' ' → logprob: -14.500001907348633
    4. ')' → logprob: -15.875001907348633
    5. '₂' → logprob: -17.125001907348633
    6. '۲' → logprob: -17.187501907348633
    7. '=' → logprob: -17.312501907348633
    8. ':' → logprob: -17.375001907348633
    9. '   ' → logprob: -17.562501907348633
    10. '２' → logprob: -18.000001907348633

Token 403: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11435577273368835
    2. ':' → logprob: -2.3643558025360107
    3. ')' → logprob: -4.614355564117432
    4. '):' → logprob: -5.864355564117432
    5. '=' → logprob: -7.114355564117432
    6. '),' → logprob: -8.23935604095459
    7. ' ,' → logprob: -9.36435604095459
    8. '<|end|>' → logprob: -9.86435604095459
    9. '=None' → logprob: -11.11435604095459
    10. '):
' → logprob: -11.23935604095459

Token 404: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.04858941584825516
    2. ' Point' → logprob: -3.0485894680023193
    3. ' p' → logprob: -14.548589706420898
    4. 'p' → logprob: -14.673589706420898
    5. '_point' → logprob: -14.923589706420898
    6. ')' → logprob: -15.048589706420898
    7. '	Point' → logprob: -15.298589706420898
    8. '_Point' → logprob: -16.1735897064209
    9. ' point' → logprob: -16.2985897064209
    10. 'point' → logprob: -17.2985897064209

Token 405: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018266644328832626
    2. '):' → logprob: -4.268266677856445
    3. ')' → logprob: -5.518266677856445
    4. '):
' → logprob: -10.018266677856445
    5. ' ,' → logprob: -10.518266677856445
    6. '),' → logprob: -12.518266677856445
    7. '   ' → logprob: -13.143266677856445
    8. ' ):' → logprob: -13.643266677856445
    9. ' ' → logprob: -14.143266677856445
    10. ''):' → logprob: -14.518266677856445

Token 406: ' thickness' (ID: 38833)
  Prédit: 'th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.38693541288375854
    2. ' thickness' → logprob: -1.1369354724884033
    3. ',' → logprob: -10.636935234069824
    4. 't' → logprob: -11.011935234069824
    5. '   ' → logprob: -11.136935234069824
    6. 'thin' → logprob: -13.136935234069824
    7. '	th' → logprob: -13.636935234069824
    8. ' ' → logprob: -13.636935234069824
    9. ' thick' → logprob: -13.886935234069824
    10. '0' → logprob: -14.386935234069824

Token 407: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008170081302523613
    2. '=' → logprob: -4.883170127868652
    3. '):' → logprob: -7.883170127868652
    4. ')' → logprob: -8.758170127868652
    5. ' :' → logprob: -10.633170127868652
    6. ' =' → logprob: -12.883170127868652
    7. ' ):' → logprob: -13.633170127868652
    8. ':int' → logprob: -14.383170127868652
    9. ',' → logprob: -14.883170127868652
    10. '=None' → logprob: -15.508170127868652

Token 408: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.004098942968994379
    2. ' float' → logprob: -5.504098892211914
    3. '=float' → logprob: -11.504098892211914
    4. ')' → logprob: -12.379098892211914
    5. 'flo' → logprob: -12.504098892211914
    6. ',float' → logprob: -14.129098892211914
    7. '	float' → logprob: -14.254098892211914
    8. 'int' → logprob: -14.629098892211914
    9. '<float' → logprob: -14.879098892211914
    10. '.float' → logprob: -15.504098892211914

Token 409: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004806634038686752
    2. ')' → logprob: -5.3798065185546875
    3. '=' → logprob: -9.004806518554688
    4. '):
' → logprob: -9.754806518554688
    5. ':' → logprob: -12.879806518554688
    6. ' ):' → logprob: -13.379806518554688
    7. ',' → logprob: -14.754806518554688
    8. ')=' → logprob: -14.879806518554688
    9. '):
' → logprob: -15.004806518554688
    10. '=None' → logprob: -16.629806518554688

Token 410: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005698331515304744
    2. 'self' → logprob: -7.875569820404053
    3. ' self' → logprob: -9.750570297241211
    4. '   ' → logprob: -10.250570297241211
    5. ',' → logprob: -10.875570297241211
    6. '        
' → logprob: -11.375570297241211
    7. '
' → logprob: -11.500570297241211
    8. ')' → logprob: -11.875570297241211
    9. '```' → logprob: -11.875570297241211
    10. '<|end|>' → logprob: -12.000570297241211

Token 411: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01122559979557991
    2. ' self' → logprob: -4.511225700378418
    3. '       ' → logprob: -8.636225700378418
    4. 'super' → logprob: -16.0112247467041
    5. '   ' → logprob: -16.6362247467041
    6. '	self' → logprob: -17.1362247467041
    7. '        ' → logprob: -17.8862247467041
    8. '
' → logprob: -18.1362247467041
    9. '        
' → logprob: -18.6362247467041
    10. 'line' → logprob: -18.8862247467041

Token 412: '.line' (ID: 21221)
  Prédit: '.line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.line' → logprob: -0.1752772331237793
    2. '.' → logprob: -1.9252772331237793
    3. ' =' → logprob: -4.925277233123779
    4. '=' → logprob: -5.175277233123779
    5. '=line' → logprob: -7.050277233123779
    6. ' .' → logprob: -7.300277233123779
    7. '.=' → logprob: -9.175277709960938
    8. ' line' → logprob: -9.425277709960938
    9. '.Line' → logprob: -9.800277709960938
    10. '_line' → logprob: -10.175277709960938

Token 413: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0009114635176956654
    2. ' =' → logprob: -7.000911235809326
    3. '=

' → logprob: -20.125911712646484
    4. '=line' → logprob: -20.625911712646484
    5. 'Segment' → logprob: -22.375911712646484
    6. '=}' → logprob: -22.375911712646484
    7. ')' → logprob: -22.750911712646484
    8. 's' → logprob: -22.875911712646484
    9. '＝' → logprob: -23.250911712646484
    10. '_=' → logprob: -23.250911712646484

Token 414: ' Line' (ID: 11342)
  Prédit: 'Line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Line' → logprob: -0.0005530327325686812
    2. ' Line' → logprob: -7.500553131103516
    3. '   ' → logprob: -17.500553131103516
    4. '(Line' → logprob: -19.875553131103516
    5. 'Lin' → logprob: -20.250553131103516
    6. 'Point' → logprob: -20.625553131103516
    7. 'Linear' → logprob: -20.875553131103516
    8. 'line' → logprob: -21.000553131103516
    9. ' line' → logprob: -21.000553131103516
    10. ' ' → logprob: -21.250553131103516

Token 415: 'Segment' (ID: 24880)
  Prédit: 'Segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Segment' → logprob: -1.9361264946837764e-07
    2. 'Seg' → logprob: -15.875
    3. 'segment' → logprob: -18.625
    4. 'Line' → logprob: -20.0
    5. 'Segments' → logprob: -20.375
    6. '_segment' → logprob: -20.625
    7. ' Segment' → logprob: -21.25
    8. 'egment' → logprob: -22.5
    9. 'Point' → logprob: -22.625
    10. '(p' → logprob: -23.125

Token 416: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.3425219549390022e-05
    2. '(' → logprob: -11.25001335144043
    3. '(P' → logprob: -15.75001335144043
    4. '(Point' → logprob: -16.00001335144043
    5. '(point' → logprob: -17.25001335144043
    6. '(
' → logprob: -17.87501335144043
    7. ' (' → logprob: -18.12501335144043
    8. 'p' → logprob: -19.12501335144043
    9. 'Point' → logprob: -20.37501335144043
    10. '((' → logprob: -20.37501335144043

Token 417: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. 'oint' → logprob: -13.750001907348633
    3. 'oints' → logprob: -14.875001907348633
    4. 'oin' → logprob: -17.375001907348633
    5. '```' → logprob: -17.875001907348633
    6. ')' → logprob: -19.000001907348633
    7. 't' → logprob: -19.562501907348633
    8. '１' → logprob: -19.687501907348633
    9. '' → logprob: -19.750001907348633
    10. '(Point' → logprob: -19.875001907348633

Token 418: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002979240380227566
    2. ',p' → logprob: -8.125297546386719
    3. ' ,' → logprob: -13.500297546386719
    4. 'p' → logprob: -14.875297546386719
    5. ',
' → logprob: -16.25029754638672
    6. '   ' → logprob: -17.62529754638672
    7. '‌,' → logprob: -17.75029754638672
    8. ')' → logprob: -18.00029754638672
    9. ',q' → logprob: -18.00029754638672
    10. '<|end|>' → logprob: -18.50029754638672

Token 419: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00029613598599098623
    2. ' p' → logprob: -8.125296592712402
    3. '   ' → logprob: -18.250295639038086
    4. '       ' → logprob: -18.500295639038086
    5. ' ' → logprob: -19.625295639038086
    6. ')p' → logprob: -20.000295639038086
    7. '<p' → logprob: -20.125295639038086
    8. ')' → logprob: -20.125295639038086
    9. '    ' → logprob: -20.250295639038086
    10. '	p' → logprob: -20.625295639038086

Token 420: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.875000953674316
    3. '۲' → logprob: -16.625
    4. ',' → logprob: -16.9375
    5. '
' → logprob: -17.375
    6. ' ' → logprob: -17.4375
    7. 't' → logprob: -17.5
    8. ')' → logprob: -17.5
    9. '２' → logprob: -17.75
    10. '

' → logprob: -18.125

Token 421: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02325584553182125
    2. ')' → logprob: -3.7732558250427246
    3. '),' → logprob: -12.398256301879883
    4. '<|end|>' → logprob: -12.898256301879883
    5. ',
' → logprob: -13.773256301879883
    6. '       ' → logprob: -13.773256301879883
    7. ' ,' → logprob: -14.273256301879883
    8. ')
' → logprob: -14.773256301879883
    9. ',)' → logprob: -15.773256301879883
    10. '   ' → logprob: -15.898256301879883

Token 422: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.6087021473795176e-05
    2. 'self' → logprob: -10.125045776367188
    3. ' self' → logprob: -12.250045776367188
    4. '   ' → logprob: -14.000045776367188
    5. ' ' → logprob: -16.125045776367188
    6. '```' → logprob: -17.125045776367188
    7. '<|end|>' → logprob: -17.250045776367188
    8. ' ' → logprob: -17.250045776367188
    9. '	self' → logprob: -17.500045776367188
    10. '      ' → logprob: -17.625045776367188

Token 423: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002003938192501664
    2. ' self' → logprob: -6.252004146575928
    3. '       ' → logprob: -9.50200366973877
    4. '   ' → logprob: -14.87700366973877
    5. '
' → logprob: -16.002004623413086
    6. '	self' → logprob: -16.377004623413086
    7. '        
' → logprob: -18.127004623413086
    8. ' ' → logprob: -18.752004623413086
    9. '        ' → logprob: -19.502004623413086
    10. '(self' → logprob: -19.627004623413086

Token 424: '.th' (ID: 24848)
  Prédit: '.th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.th' → logprob: -0.04859963804483414
    2. '.' → logprob: -3.0485997200012207
    3. ' .' → logprob: -12.173599243164062
    4. 'th' → logprob: -12.798599243164062
    5. '.t' → logprob: -12.798599243164062
    6. '.threshold' → logprob: -14.423599243164062
    7. '	th' → logprob: -15.048599243164062
    8. '<th' → logprob: -15.673599243164062
    9. '.thrift' → logprob: -16.173599243164062
    10. '.Th' → logprob: -16.673599243164062

Token 425: 'ickness' (ID: 46853)
  Prédit: 'ickness'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ickness' → logprob: -0.0001831565605243668
    2. 'ick' → logprob: -8.62518310546875
    3. 'ck' → logprob: -12.75018310546875
    4. ' ' → logprob: -15.00018310546875
    5. 'ickname' → logprob: -16.25018310546875
    6. 'ic' → logprob: -16.25018310546875
    7. 'e' → logprob: -17.37518310546875
    8. '```' → logprob: -17.62518310546875
    9. '   ' → logprob: -17.87518310546875
    10. 'ness' → logprob: -18.00018310546875

Token 426: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16023437678813934
    2. ' =' → logprob: -1.9102343320846558
    3. ' ' → logprob: -12.035234451293945
    4. '.' → logprob: -13.535234451293945
    5. '_' → logprob: -13.660234451293945
    6. ')' → logprob: -14.410234451293945
    7. '<|end|>' → logprob: -14.660234451293945
    8. '.=' → logprob: -15.910234451293945
    9. ' *=' → logprob: -16.035234451293945
    10. '[' → logprob: -16.285234451293945

Token 427: ' thickness' (ID: 38833)
  Prédit: 'th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.2812025249004364
    2. ' thickness' → logprob: -1.4062025547027588
    3. ' thick' → logprob: -10.65620231628418
    4. ' th' → logprob: -12.03120231628418
    5. '	th' → logprob: -12.03120231628418
    6. ' ' → logprob: -12.78120231628418
    7. 'thin' → logprob: -12.90620231628418
    8. 'Thickness' → logprob: -13.15620231628418
    9. '(th' → logprob: -13.28120231628418
    10. '   ' → logprob: -13.40620231628418

Token 428: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4327475428581238
    2. '   ' → logprob: -1.0577476024627686
    3. '    
' → logprob: -5.9327473640441895
    4. '<|end|>' → logprob: -7.1827473640441895
    5. 'def' → logprob: -7.9327473640441895
    6. ' ' → logprob: -10.182747840881348
    7. '  
' → logprob: -10.182747840881348
    8. ' 
' → logprob: -10.307747840881348
    9. ' def' → logprob: -10.432747840881348
    10. '  ' → logprob: -10.432747840881348

Token 429: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021113168448209763
    2. '
' → logprob: -4.146113395690918
    3. 'def' → logprob: -6.146113395690918
    4. '    
' → logprob: -6.396113395690918
    5. ' def' → logprob: -7.771113395690918
    6. '  ' → logprob: -8.771113395690918
    7. '  
' → logprob: -8.896113395690918
    8. ' ' → logprob: -9.021113395690918
    9. '<|end|>' → logprob: -9.021113395690918
    10. ' 
' → logprob: -9.521113395690918

Token 430: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.01829451508820057
    2. ' def' → logprob: -4.643294334411621
    3. '   ' → logprob: -4.768294334411621
    4. '	def' → logprob: -12.393294334411621
    5. ' ' → logprob: -13.643294334411621
    6. '
' → logprob: -14.143294334411621
    7. '    
' → logprob: -15.018294334411621
    8. 'd' → logprob: -15.393294334411621
    9. '  ' → logprob: -15.518294334411621
    10. 'de' → logprob: -15.768294334411621

Token 431: ' safe' (ID: 7703)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -1.4197871685028076
    2. 'contains' → logprob: -1.6697871685028076
    3. ' hits' → logprob: -2.1697871685028076
    4. 'distance' → logprob: -2.4197871685028076
    5. ' distance' → logprob: -2.6697871685028076
    6. ' contains' → logprob: -2.7947871685028076
    7. 'hits' → logprob: -3.1697871685028076
    8. ' intersects' → logprob: -3.1697871685028076
    9. 'hit' → logprob: -3.5447871685028076
    10. 'def' → logprob: -3.5447871685028076

Token 432: '_distance' (ID: 45537)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.5675082206726074
    2. '_distance' → logprob: -0.9425082206726074
    3. '_at' → logprob: -4.567508220672607
    4. '_hit' → logprob: -4.942508220672607
    5. '_area' → logprob: -4.942508220672607
    6. '_' → logprob: -5.442508220672607
    7. '_length' → logprob: -6.067508220672607
    8. '_fire' → logprob: -6.442508220672607
    9. '_radius' → logprob: -6.567508220672607
    10. '_point' → logprob: -7.067508220672607

Token 433: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0008996733813546598
    2. '(' → logprob: -7.375899791717529
    3. '_to' → logprob: -8.375899314880371
    4. ' (' → logprob: -10.250899314880371
    5. 'self' → logprob: -12.875899314880371
    6. '(s' → logprob: -13.750899314880371
    7. 'to' → logprob: -14.000899314880371
    8. '_from' → logprob: -14.250899314880371
    9. '_between' → logprob: -14.375899314880371
    10. 's' → logprob: -14.750899314880371

Token 434: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5140441060066223
    2. '(self' → logprob: -1.2640440464019775
    3. 'self' → logprob: -2.3890440464019775
    4. ')' → logprob: -3.8890440464019775
    5. ')(' → logprob: -5.139044284820557
    6. ' ,' → logprob: -7.889044284820557
    7. ' self' → logprob: -8.139043807983398
    8. '(' → logprob: -8.764043807983398
    9. ',self' → logprob: -8.764043807983398
    10. ',p' → logprob: -9.764043807983398

Token 435: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.2537742257118225
    2. '->' → logprob: -1.5037741661071777
    3. '(self' → logprob: -6.753774166107178
    4. ')' → logprob: -8.253774642944336
    5. '(' → logprob: -8.378774642944336
    6. 'self' → logprob: -9.503774642944336
    7. ' ' → logprob: -10.253774642944336
    8. '   ' → logprob: -10.378774642944336
    9. ':' → logprob: -11.003774642944336
    10. ')->' → logprob: -11.128774642944336

Token 436: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.01819712109863758
    2. ' float' → logprob: -4.018197059631348
    3. 'int' → logprob: -10.143197059631348
    4. '(float' → logprob: -12.518197059631348
    5. 'self' → logprob: -13.018197059631348
    6. 'bool' → logprob: -14.518197059631348
    7. '->' → logprob: -15.018197059631348
    8. '   ' → logprob: -15.393197059631348
    9. '<float' → logprob: -16.143198013305664
    10. ')' → logprob: -16.143198013305664

Token 437: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011482786387205124
    2. '(' → logprob: -4.7614827156066895
    3. ':' → logprob: -5.8864827156066895
    4. '->' → logprob: -10.761483192443848
    5. ':
' → logprob: -10.886483192443848
    6. 'self' → logprob: -11.261483192443848
    7. '(
' → logprob: -11.886483192443848
    8. '   ' → logprob: -11.886483192443848
    9. '       ' → logprob: -12.136483192443848
    10. ':self' → logprob: -12.636483192443848

Token 438: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023993074893951416
    2. '   ' → logprob: -4.648993015289307
    3. ' return' → logprob: -4.898993015289307
    4. 'return' → logprob: -5.023993015289307
    5. '0' → logprob: -10.273993492126465
    6. '	return' → logprob: -10.773993492126465
    7. ':return' → logprob: -11.273993492126465
    8. '{return' → logprob: -11.648993492126465
    9. ' ' → logprob: -12.148993492126465
    10. '```' → logprob: -12.773993492126465

Token 439: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.004793703090399504
    2. ' return' → logprob: -5.379793643951416
    3. '0' → logprob: -9.254794120788574
    4. 'self' → logprob: -9.754794120788574
    5. '   ' → logprob: -11.629794120788574
    6. '       ' → logprob: -12.004794120788574
    7. '
' → logprob: -13.629794120788574
    8. '{return' → logprob: -14.004794120788574
    9. '1' → logprob: -14.379794120788574
    10. ':return' → logprob: -14.629794120788574

Token 440: ' minimal' (ID: 19957)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0010503156809136271
    2. ' return' → logprob: -6.8760504722595215
    3. '   ' → logprob: -11.126049995422363
    4. '       ' → logprob: -14.251049995422363
    5. '0' → logprob: -14.626049995422363
    6. 'self' → logprob: -15.001049995422363
    7. '{return' → logprob: -15.376049995422363
    8. '
' → logprob: -15.501049995422363
    9. '	return' → logprob: -16.00105094909668
    10. '#' → logprob: -16.00105094909668

Token 441: ' distance' (ID: 9324)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1035181283950806
    2. 'distance' → logprob: -1.9785181283950806
    3. '_distance' → logprob: -1.9785181283950806
    4. ' safe' → logprob: -2.353518009185791
    5. '_' → logprob: -2.853518009185791
    6. '()' → logprob: -3.228518009185791
    7. 'safe' → logprob: -3.353518009185791
    8. ' distance' → logprob: -3.478518009185791
    9. '_safe' → logprob: -3.603518009185791
    10. ' ' → logprob: -3.853518009185791

Token 442: ' from' (ID: 591)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.1727238893508911
    2. 'return' → logprob: -1.4227238893508911
    3. 'from' → logprob: -1.6727238893508911
    4. ' =' → logprob: -3.0477237701416016
    5. '   ' → logprob: -3.1727237701416016
    6. ' to' → logprob: -3.2977237701416016
    7. ' return' → logprob: -3.5477237701416016
    8. 'to' → logprob: -3.7977237701416016
    9. '       ' → logprob: -3.7977237701416016
    10. '=' → logprob: -4.297723770141602

Token 443: ' machine' (ID: 7342)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.016406286507844925
    2. 'the' → logprob: -4.266406059265137
    3. ' self' → logprob: -6.641406059265137
    4. 'a' → logprob: -8.016406059265137
    5. ' the' → logprob: -8.016406059265137
    6. '0' → logprob: -9.266406059265137
    7. '(self' → logprob: -10.516406059265137
    8. 'any' → logprob: -10.516406059265137
    9. 'point' → logprob: -11.266406059265137
    10. ''s' → logprob: -11.391406059265137

Token 444: ' center' (ID: 6170)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.13452447950839996
    2. 'to' → logprob: -2.5095245838165283
    3. '=' → logprob: -4.259524345397949
    4. ' center' → logprob: -5.259524345397949
    5. '   ' → logprob: -5.509524345397949
    6. 'surface' → logprob: -6.134524345397949
    7. '()' → logprob: -6.384524345397949
    8. ' surface' → logprob: -6.509524345397949
    9. ' line' → logprob: -6.634524345397949
    10. ''s' → logprob: -6.634524345397949

Token 445: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4247474670410156
    2. 'to' → logprob: -1.7997474670410156
    3. '(self' → logprob: -2.9247474670410156
    4. 'self' → logprob: -3.2997474670410156
    5. '       ' → logprob: -3.5497474670410156
    6. '()' → logprob: -4.049747467041016
    7. 'return' → logprob: -4.299747467041016
    8. '   ' → logprob: -4.424747467041016
    9. 'def' → logprob: -5.424747467041016
    10. '+' → logprob: -6.299747467041016

Token 446: ' laser' (ID: 23429)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7082164883613586
    2. 'self' → logprob: -1.2082164287567139
    3. ' the' → logprob: -1.8332164287567139
    4. 'laser' → logprob: -3.833216428756714
    5. ' self' → logprob: -3.958216428756714
    6. ' laser' → logprob: -5.208216667175293
    7. 'Laser' → logprob: -7.458216667175293
    8. 'line' → logprob: -7.833216667175293
    9. 'this' → logprob: -8.083216667175293
    10. 'a' → logprob: -8.333216667175293

Token 447: ' line' (ID: 2543)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8291389346122742
    2. '()' → logprob: -2.454138994216919
    3. '(self' → logprob: -2.454138994216919
    4. ' line' → logprob: -2.454138994216919
    5. ' +' → logprob: -2.704138994216919
    6. '   ' → logprob: -2.829138994216919
    7. 'self' → logprob: -3.329138994216919
    8. ' to' → logprob: -3.829138994216919
    9. 'line' → logprob: -4.07913875579834
    10. '+' → logprob: -4.07913875579834

Token 448: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14787115156650543
    2. '   ' → logprob: -2.397871255874634
    3. 'return' → logprob: -3.772871255874634
    4. ' =' → logprob: -5.147871017456055
    5. '
' → logprob: -5.522871017456055
    6. ' return' → logprob: -5.897871017456055
    7. '()' → logprob: -6.272871017456055
    8. '=' → logprob: -6.272871017456055
    9. '(' → logprob: -6.772871017456055
    10. ':' → logprob: -6.897871017456055

Token 449: ' at' (ID: 540)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.043764542788267136
    2. ' self' → logprob: -3.168764591217041
    3. '0' → logprob: -7.418764591217041
    4. '   ' → logprob: -9.168764114379883
    5. 'max' → logprob: -10.793764114379883
    6. '(self' → logprob: -10.918764114379883
    7. '	self' → logprob: -12.168764114379883
    8. '       ' → logprob: -12.293764114379883
    9. ' ' → logprob: -12.418764114379883
    10. ' max' → logprob: -13.168764114379883

Token 450: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.003681909292936325
    2. ' least' → logprob: -5.8786821365356445
    3. 'self' → logprob: -7.6286821365356445
    4. '_le' → logprob: -9.128682136535645
    5. 'most' → logprob: -9.128682136535645
    6. 'lest' → logprob: -10.003682136535645
    7. '   ' → logprob: -10.378682136535645
    8. 'east' → logprob: -10.628682136535645
    9. '0' → logprob: -10.878682136535645
    10. 'Least' → logprob: -12.128682136535645

Token 451: ' this' (ID: 495)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07053916901350021
    2. ' self' → logprob: -2.6955392360687256
    3. '0' → logprob: -7.5705389976501465
    4. '(self' → logprob: -9.820539474487305
    5. '1' → logprob: -11.570539474487305
    6. '       ' → logprob: -11.695539474487305
    7. '=self' → logprob: -12.570539474487305
    8. '   ' → logprob: -12.820539474487305
    9. '
' → logprob: -13.195539474487305
    10. ' ' → logprob: -13.195539474487305

Token 452: '
' (ID: 198)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.09249555319547653
    2. ' self' → logprob: -3.0924954414367676
    3. 'return' → logprob: -3.5924954414367676
    4. '
' → logprob: -5.217495441436768
    5. '       ' → logprob: -5.967495441436768
    6. ' return' → logprob: -6.217495441436768
    7. ' +' → logprob: -7.217495441436768
    8. '0' → logprob: -7.217495441436768
    9. ' ' → logprob: -7.467495441436768
    10. '+' → logprob: -7.467495441436768

Token 453: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5040139555931091
    2. 'return' → logprob: -1.129014015197754
    3. ' return' → logprob: -2.629014015197754
    4. '0' → logprob: -9.129014015197754
    5. 'self' → logprob: -9.254014015197754
    6. '   ' → logprob: -9.754014015197754
    7. ' =' → logprob: -10.379014015197754
    8. ',' → logprob: -11.004014015197754
    9. ' self' → logprob: -11.004014015197754
    10. ' ' → logprob: -11.629014015197754

Token 454: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10059482604265213
    2. 'return' → logprob: -2.3505947589874268
    3. ' self' → logprob: -8.350594520568848
    4. '0' → logprob: -9.350594520568848
    5. ' return' → logprob: -9.975594520568848
    6. '   ' → logprob: -12.100594520568848
    7. '       ' → logprob: -12.100594520568848
    8. '(self' → logprob: -12.725594520568848
    9. 'max' → logprob: -12.850594520568848
    10. '1' → logprob: -15.350594520568848

Token 455: ' laser' (ID: 23429)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1135854572057724
    2. 'return' → logprob: -2.4885854721069336
    3. ' self' → logprob: -3.8635854721069336
    4. ' return' → logprob: -5.988585472106934
    5. '0' → logprob: -7.363585472106934
    6. '   ' → logprob: -9.363585472106934
    7. '       ' → logprob: -9.738585472106934
    8. 'max' → logprob: -10.863585472106934
    9. '(self' → logprob: -11.488585472106934
    10. ' ' → logprob: -11.988585472106934

Token 456: ' is' (ID: 382)
  Prédit: '.th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.th' → logprob: -0.31604868173599243
    2. '.' → logprob: -1.4410486221313477
    3. 'th' → logprob: -4.066048622131348
    4. ' thickness' → logprob: -4.816048622131348
    5. '   ' → logprob: -5.816048622131348
    6. '.
' → logprob: -6.691048622131348
    7. ' .' → logprob: -7.316048622131348
    8. '_th' → logprob: -7.441048622131348
    9. '	th' → logprob: -7.691048622131348
    10. '.length' → logprob: -7.816048622131348

Token 457: ' a' (ID: 261)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2899380922317505
    2. 'self' → logprob: -1.4149380922317505
    3. '0' → logprob: -6.289937973022461
    4. '2' → logprob: -6.789937973022461
    5. ' half' → logprob: -6.789937973022461
    6. ' ' → logprob: -6.914937973022461
    7. ' max' → logprob: -7.164937973022461
    8. ' the' → logprob: -7.414937973022461
    9. ' a' → logprob: -7.539937973022461
    10. 'half' → logprob: -8.039937973022461

Token 458: ' band' (ID: 8177)
  Prédit: 'circle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'circle' → logprob: -0.24986544251441956
    2. ' circle' → logprob: -2.4998655319213867
    3. 'c' → logprob: -3.2498655319213867
    4. ' cylinder' → logprob: -3.6248655319213867
    5. 'line' → logprob: -4.374865531921387
    6. 'beam' → logprob: -4.499865531921387
    7. 'self' → logprob: -4.624865531921387
    8. ' line' → logprob: -5.249865531921387
    9. 'tube' → logprob: -5.374865531921387
    10. 'radius' → logprob: -5.499865531921387

Token 459: ' with' (ID: 483)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5870394110679626
    2. '       ' → logprob: -0.9620394110679626
    3. ' of' → logprob: -4.212039470672607
    4. ' with' → logprob: -4.462039470672607
    5. ':' → logprob: -4.837039470672607
    6. '
' → logprob: -5.212039470672607
    7. ',' → logprob: -5.462039470672607
    8. ' that' → logprob: -5.837039470672607
    9. ' return' → logprob: -5.837039470672607
    10. '        
' → logprob: -6.212039470672607

Token 460: ' thickness' (ID: 38833)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.19991333782672882
    2. ' self' → logprob: -2.324913263320923
    3. 'width' → logprob: -3.074913263320923
    4. ' width' → logprob: -3.949913263320923
    5. ' thickness' → logprob: -4.699913501739502
    6. 'th' → logprob: -5.074913501739502
    7. ' a' → logprob: -7.574913501739502
    8. 'a' → logprob: -8.074913024902344
    9. 'half' → logprob: -8.199913024902344
    10. '
' → logprob: -8.199913024902344

Token 461: ',' (ID: 11)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.22952517867088318
    2. ' /' → logprob: -1.7295252084732056
    3. '   ' → logprob: -4.354525089263916
    4. 'self' → logprob: -5.104525089263916
    5. '       ' → logprob: -5.729525089263916
    6. ' self' → logprob: -5.979525089263916
    7. ' ' → logprob: -7.354525089263916
    8. '(self' → logprob: -7.604525089263916
    9. 'return' → logprob: -7.979525089263916
    10. 'def' → logprob: -8.479525566101074

Token 462: ' so' (ID: 813)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.011594255454838276
    2. ' so' → logprob: -4.636594295501709
    3. 'return' → logprob: -6.386594295501709
    4. ' self' → logprob: -9.51159381866455
    5. ' half' → logprob: -10.51159381866455
    6. ' ' → logprob: -10.76159381866455
    7. ' hence' → logprob: -12.13659381866455
    8. ' 
' → logprob: -12.63659381866455
    9. '0' → logprob: -12.88659381866455
    10. ' ' → logprob: -13.26159381866455

Token 463: ' half' (ID: 6375)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.22057606279850006
    2. ' self' → logprob: -1.7205760478973389
    3. 'return' → logprob: -4.220576286315918
    4. 'self' → logprob: -5.470576286315918
    5. ' the' → logprob: -10.595576286315918
    6. '       ' → logprob: -11.470576286315918
    7. '0' → logprob: -11.595576286315918
    8. ' ' → logprob: -11.970576286315918
    9. ' ' → logprob: -12.220576286315918
    10. '   ' → logprob: -12.345576286315918

Token 464: ' thickness' (ID: 38833)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.61274254322052
    2. '(self' → logprob: -0.86274254322052
    3. '   ' → logprob: -3.8627424240112305
    4. ' self' → logprob: -4.4877424240112305
    5. ' of' → logprob: -7.4877424240112305
    6. '*self' → logprob: -7.6127424240112305
    7. '=self' → logprob: -7.6127424240112305
    8. 's' → logprob: -7.7377424240112305
    9. '       ' → logprob: -8.11274242401123
    10. '_size' → logprob: -8.48774242401123

Token 465: ' margin' (ID: 8358)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.10826140642166138
    2. '/' → logprob: -2.3582613468170166
    3. '()' → logprob: -5.608261585235596
    4. '   ' → logprob: -6.483261585235596
    5. 'return' → logprob: -6.983261585235596
    6. ' ' → logprob: -7.108261585235596
    7. ' return' → logprob: -7.983261585235596
    8. '       ' → logprob: -8.608261108398438
    9. ' *' → logprob: -8.858261108398438
    10. '*' → logprob: -9.233261108398438

Token 466: ' plus' (ID: 2932)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7745807766914368
    2. 'return' → logprob: -1.524580717086792
    3. '
' → logprob: -2.024580717086792
    4. '   ' → logprob: -2.399580717086792
    5. '/' → logprob: -3.524580717086792
    6. '()' → logprob: -3.649580717086792
    7. ' /' → logprob: -4.024580955505371
    8. ' return' → logprob: -4.149580955505371
    9. '()
' → logprob: -6.024580955505371
    10. '        
' → logprob: -6.024580955505371

Token 467: ' machine' (ID: 7342)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5248662829399109
    2. 'self' → logprob: -1.0248663425445557
    3. '0' → logprob: -3.3998663425445557
    4. ' ' → logprob: -4.399866104125977
    5. '1' → logprob: -6.024866104125977
    6. '(self' → logprob: -7.524866104125977
    7. ' (' → logprob: -8.024866104125977
    8. ' the' → logprob: -8.899866104125977
    9. ' a' → logprob: -9.774866104125977
    10. ' safe' → logprob: -10.024866104125977

Token 468: ' radius' (ID: 21090)
  Prédit: '_radius'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_radius' → logprob: -0.34379416704177856
    2. ' radius' → logprob: -1.5937941074371338
    3. 'radius' → logprob: -2.718794107437134
    4. '_center' → logprob: -5.843794345855713
    5. '_size' → logprob: -5.968794345855713
    6. ' center' → logprob: -5.968794345855713
    7. '_margin' → logprob: -6.218794345855713
    8. '.' → logprob: -6.468794345855713
    9. ' size' → logprob: -6.593794345855713
    10. 'size' → logprob: -6.718794345855713

Token 469: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07007458806037903
    2. 'return' → logprob: -4.445074558258057
    3. '   ' → logprob: -4.945074558258057
    4. ' ' → logprob: -5.195074558258057
    5. ' return' → logprob: -5.195074558258057
    6. '        ' → logprob: -5.445074558258057
    7. ' +' → logprob: -5.445074558258057
    8. '        
' → logprob: -5.445074558258057
    9. ' 
' → logprob: -5.570074558258057
    10. ')' → logprob: -5.695074558258057

Token 470: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014677229337394238
    2. '   ' → logprob: -7.626467704772949
    3. 'return' → logprob: -8.00146770477295
    4. ' return' → logprob: -8.50146770477295
    5. ' +' → logprob: -9.00146770477295
    6. '+' → logprob: -9.62646770477295
    7. ',' → logprob: -10.25146770477295
    8. ' =' → logprob: -10.50146770477295
    9. ' ' → logprob: -10.62646770477295
    10. ')' → logprob: -10.62646770477295

Token 471: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.40762531757354736
    2. ' return' → logprob: -1.1576253175735474
    3. 'self' → logprob: -4.657625198364258
    4. '0' → logprob: -5.032625198364258
    5. ' self' → logprob: -5.532625198364258
    6. '       ' → logprob: -8.032625198364258
    7. '   ' → logprob: -8.657625198364258
    8. '
' → logprob: -10.782625198364258
    9. '(self' → logprob: -11.407625198364258
    10. ':return' → logprob: -11.407625198364258

Token 472: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001387850963510573
    2. ' self' → logprob: -7.251388072967529
    3. '0' → logprob: -7.501388072967529
    4. '(self' → logprob: -9.001387596130371
    5. '   ' → logprob: -14.251387596130371
    6. '
' → logprob: -14.501387596130371
    7. '1' → logprob: -15.251387596130371
    8. ' ' → logprob: -15.376387596130371
    9. ' (' → logprob: -16.251388549804688
    10. '(' → logprob: -16.376388549804688

Token 473: '.th' (ID: 24848)
  Prédit: '.th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.th' → logprob: -0.0003063838230445981
    2. '.' → logprob: -8.125306129455566
    3. ' .' → logprob: -12.125306129455566
    4. '.line' → logprob: -13.250306129455566
    5. '	th' → logprob: -14.250306129455566
    6. '.length' → logprob: -14.875306129455566
    7. 'th' → logprob: -14.875306129455566
    8. '.threshold' → logprob: -15.000306129455566
    9. ').' → logprob: -16.125307083129883
    10. '.Th' → logprob: -16.125307083129883

Token 474: 'ickness' (ID: 46853)
  Prédit: 'ickness'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ickness' → logprob: -0.00033581978641450405
    2. 'ick' → logprob: -8.000335693359375
    3. 'ck' → logprob: -16.000335693359375
    4. ' ' → logprob: -16.000335693359375
    5. 'ic' → logprob: -16.000335693359375
    6. 'icks' → logprob: -18.375335693359375
    7. 'ickname' → logprob: -18.750335693359375
    8. 'icker' → logprob: -19.000335693359375
    9. 'i' → logprob: -19.000335693359375
    10. 'icken' → logprob: -19.250335693359375

Token 475: '/' (ID: 14)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.4776454269886017
    2. '/' → logprob: -0.9776453971862793
    3. ' ' → logprob: -5.727645397186279
    4. '   ' → logprob: -9.477645874023438
    5. '*' → logprob: -9.602645874023438
    6. '2' → logprob: -9.977645874023438
    7. ' *' → logprob: -10.477645874023438
    8. '_' → logprob: -10.852645874023438
    9. ' ' → logprob: -11.227645874023438
    10. '0' → logprob: -11.852645874023438

Token 476: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.027225754223764e-05
    2. ' ' → logprob: -9.750060081481934
    3. '20' → logprob: -14.250060081481934
    4. '200' → logprob: -14.750060081481934
    5. '22' → logprob: -16.25006103515625
    6. '```' → logprob: -16.50006103515625
    7. '26' → logprob: -16.68756103515625
    8. '202' → logprob: -17.00006103515625
    9. '210' → logprob: -17.18756103515625
    10. '4' → logprob: -17.18756103515625

Token 477: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06412213295698166
    2. '+' → logprob: -2.814122200012207
    3. ' ' → logprob: -6.189122200012207
    4. ' plus' → logprob: -10.064122200012207
    5. '<|end|>' → logprob: -10.564122200012207
    6. '    ' → logprob: -11.189122200012207
    7. ' ' → logprob: -12.439122200012207
    8. ' +
' → logprob: -12.939122200012207
    9. '   ' → logprob: -12.939122200012207
    10. '  ' → logprob: -12.939122200012207

Token 478: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 479: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 480: ' overlaps' (ID: 173439)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.8904542922973633
    2. ' is' → logprob: -1.8904542922973633
    3. 'can' → logprob: -1.8904542922973633
    4. 'inter' → logprob: -2.3904542922973633
    5. ' safe' → logprob: -3.3904542922973633
    6. ' can' → logprob: -3.5154542922973633
    7. ' intersects' → logprob: -3.6404542922973633
    8. ' hits' → logprob: -3.7654542922973633
    9. 'hits' → logprob: -3.7654542922973633
    10. 'safe' → logprob: -4.390454292297363

Token 481: '(self' (ID: 2402)
  Prédit: '_with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_with' → logprob: -0.2611103951931
    2. '(self' → logprob: -1.5111104249954224
    3. 'with' → logprob: -5.511110305786133
    4. '_point' → logprob: -5.636110305786133
    5. '(' → logprob: -7.386110305786133
    6. '_' → logprob: -8.136110305786133
    7. '_line' → logprob: -8.261110305786133
    8. '_circle' → logprob: -9.636110305786133
    9. '_segment' → logprob: -9.886110305786133
    10. ' (' → logprob: -10.136110305786133

Token 482: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009353100322186947
    2. '_point' → logprob: -4.884353160858154
    3. 'self' → logprob: -6.884353160858154
    4. ' ,' → logprob: -7.634353160858154
    5. 'point' → logprob: -9.009352684020996
    6. 'with' → logprob: -10.634352684020996
    7. '_,' → logprob: -10.884352684020996
    8. '(self' → logprob: -11.009352684020996
    9. '_with' → logprob: -11.634352684020996
    10. '_points' → logprob: -12.134352684020996

Token 483: ' c' (ID: 274)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6596369743347168
    2. ' self' → logprob: -0.9096369743347168
    3. ' other' → logprob: -3.034636974334717
    4. 'other' → logprob: -3.909636974334717
    5. ' point' → logprob: -5.159636974334717
    6. 'point' → logprob: -5.284636974334717
    7. ' machine' → logprob: -7.784636974334717
    8. 'machine' → logprob: -7.784636974334717
    9. ')' → logprob: -9.284637451171875
    10. '   ' → logprob: -9.409637451171875

Token 484: ':' (ID: 25)
  Prédit: 'ircle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ircle' → logprob: -0.06149250268936157
    2. 'enter' → logprob: -3.061492443084717
    3. ':' → logprob: -4.936492443084717
    4. '):' → logprob: -6.936492443084717
    5. '_circle' → logprob: -6.936492443084717
    6. 'circle' → logprob: -7.686492443084717
    7. '   ' → logprob: -7.811492443084717
    8. 'point' → logprob: -7.936492443084717
    9. ',' → logprob: -7.936492443084717
    10. '_point' → logprob: -8.061492919921875

Token 485: ' Point' (ID: 9971)
  Prédit: ' Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.370022177696228
    2. 'Point' → logprob: -1.245022177696228
    3. ' '' → logprob: -4.370022296905518
    4. ''' → logprob: -6.120022296905518
    5. ')' → logprob: -6.120022296905518
    6. 'Circle' → logprob: -6.620022296905518
    7. 'ircle' → logprob: -7.245022296905518
    8. '(Point' → logprob: -7.620022296905518
    9. ' Circle' → logprob: -7.995022296905518
    10. '_Point' → logprob: -8.62002182006836

Token 486: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5272141098976135
    2. ')' → logprob: -0.9022141098976135
    3. ' )' → logprob: -5.777214050292969
    4. ' ,' → logprob: -7.152214050292969
    5. '   ' → logprob: -8.652214050292969
    6. '       ' → logprob: -12.152214050292969
    7. '):' → logprob: -12.152214050292969
    8. '`)' → logprob: -12.277214050292969
    9. ',)' → logprob: -12.652214050292969
    10. ' ' → logprob: -13.402214050292969

Token 487: ' r' (ID: 428)
  Prédit: ' radius'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' radius' → logprob: -0.691938579082489
    2. 'radius' → logprob: -0.941938579082489
    3. 'machine' → logprob: -2.816938638687134
    4. ' machine' → logprob: -3.316938638687134
    5. 'r' → logprob: -5.316938400268555
    6. ' margin' → logprob: -5.816938400268555
    7. ' r' → logprob: -6.566938400268555
    8. 'margin' → logprob: -6.816938400268555
    9. ' clearance' → logprob: -7.566938400268555
    10. ' ' → logprob: -7.691938400268555

Token 488: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017049367306753993
    2. ')' → logprob: -7.376705169677734
    3. '):' → logprob: -7.376705169677734
    4. 'adius' → logprob: -8.126705169677734
    5. ' :' → logprob: -9.251705169677734
    6. ' ):' → logprob: -10.126705169677734
    7. '   ' → logprob: -12.251705169677734
    8. ' )' → logprob: -12.376705169677734
    9. '  ' → logprob: -12.876705169677734
    10. '):
' → logprob: -13.251705169677734

Token 489: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.3133681118488312
    2. 'float' → logprob: -1.3133680820465088
    3. ')' → logprob: -9.43836784362793
    4. '=float' → logprob: -11.68836784362793
    5. ',float' → logprob: -11.93836784362793
    6. '(float' → logprob: -12.18836784362793
    7. '	float' → logprob: -12.18836784362793
    8. '<float' → logprob: -14.56336784362793
    9. ' )' → logprob: -14.56336784362793
    10. '.float' → logprob: -15.31336784362793

Token 490: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4974866644479334e-05
    2. ' )' → logprob: -11.250015258789062
    3. '   ' → logprob: -13.375015258789062
    4. '')' → logprob: -15.625015258789062
    5. '`)' → logprob: -16.250015258789062
    6. '")' → logprob: -17.125015258789062
    7. '):
' → logprob: -17.750015258789062
    8. ')->' → logprob: -18.000015258789062
    9. '       ' → logprob: -18.500015258789062
    10. '):' → logprob: -19.250015258789062

Token 491: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.43255946040153503
    2. '->' → logprob: -1.1825594902038574
    3. ')' → logprob: -3.1825594902038574
    4. ':' → logprob: -6.557559490203857
    5. ')->' → logprob: -6.557559490203857
    6. '   ' → logprob: -8.6825590133667
    7. '       ' → logprob: -8.8075590133667
    8. '):' → logprob: -12.0575590133667
    9. ' ' → logprob: -12.4325590133667
    10. '()->' → logprob: -12.8075590133667

Token 492: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.2892972230911255
    2. ' bool' → logprob: -1.4142972230911255
    3. 'float' → logprob: -5.414297103881836
    4. ' ->' → logprob: -6.414297103881836
    5. ')' → logprob: -7.414297103881836
    6. ' float' → logprob: -7.539297103881836
    7. '->' → logprob: -7.664297103881836
    8. '   ' → logprob: -8.789297103881836
    9. '>' → logprob: -10.289297103881836
    10. ' ' → logprob: -10.289297103881836

Token 493: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005197895807214081
    2. ':
' → logprob: -8.125519752502441
    3. '):' → logprob: -9.000519752502441
    4. '       ' → logprob: -9.500519752502441
    5. '():' → logprob: -10.875519752502441
    6. '):
' → logprob: -12.875519752502441
    7. '   ' → logprob: -13.625519752502441
    8. '():
' → logprob: -13.750519752502441
    9. ' :' → logprob: -14.625519752502441
    10. ')' → logprob: -14.625519752502441

Token 494: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0010075619211420417
    2. '        
' → logprob: -7.751007556915283
    3. '   ' → logprob: -8.501008033752441
    4. '
' → logprob: -8.876008033752441
    5. '    
' → logprob: -9.376008033752441
    6. '    ' → logprob: -10.126008033752441
    7. '  
' → logprob: -10.626008033752441
    8. ' ' → logprob: -11.126008033752441
    9. ' 
' → logprob: -11.251008033752441
    10. '     ' → logprob: -11.501008033752441

Token 495: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03638974949717522
    2. 'dist' → logprob: -3.7863898277282715
    3. 'd' → logprob: -4.7863898277282715
    4. 'distance' → logprob: -5.5363898277282715
    5. ' dist' → logprob: -8.536389350891113
    6. 'return' → logprob: -8.536389350891113
    7. ' d' → logprob: -8.661389350891113
    8. ' distance' → logprob: -8.661389350891113
    9. ' return' → logprob: -11.036389350891113
    10. '
' → logprob: -12.536389350891113

Token 496: ' Returns' (ID: 9609)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.22834108769893646
    2. '       ' → logprob: -2.6033411026000977
    3. 'distance' → logprob: -2.7283411026000977
    4. 'd' → logprob: -3.2283411026000977
    5. ' dist' → logprob: -3.8533411026000977
    6. ' distance' → logprob: -6.228341102600098
    7. ' d' → logprob: -7.228341102600098
    8. 'return' → logprob: -7.228341102600098
    9. '   ' → logprob: -8.603341102600098
    10. 'min' → logprob: -9.353341102600098

Token 497: ' True' (ID: 6432)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0232619009912014
    2. ' self' → logprob: -3.773261785507202
    3. '   ' → logprob: -11.898262023925781
    4. '       ' → logprob: -12.148262023925781
    5. 'True' → logprob: -13.023262023925781
    6. '(self' → logprob: -14.023262023925781
    7. '     ' → logprob: -15.398262023925781
    8. 'abs' → logprob: -15.398262023925781
    9. '    ' → logprob: -15.773262023925781
    10. ' True' → logprob: -16.02326202392578

Token 498: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24839338660240173
    2. ' if' → logprob: -1.7483934164047241
    3. ' self' → logprob: -3.3733932971954346
    4. 'self' → logprob: -4.873393535614014
    5. ',' → logprob: -6.373393535614014
    6. ' and' → logprob: -6.998393535614014
    7. ' return' → logprob: -7.998393535614014
    8. ':' → logprob: -8.498393058776855
    9. ' or' → logprob: -8.748393058776855
    10. '(self' → logprob: -9.123393058776855

Token 499: ' circle' (ID: 22005)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.002039987128227949
    2. ' self' → logprob: -6.252039909362793
    3. '       ' → logprob: -9.252039909362793
    4. '(self' → logprob: -11.252039909362793
    5. 'c' → logprob: -14.002039909362793
    6. '
' → logprob: -14.752039909362793
    7. 'abs' → logprob: -15.002039909362793
    8. '           ' → logprob: -15.252039909362793
    9. '	self' → logprob: -15.502039909362793
    10. '   ' → logprob: -15.752039909362793

Token 500: ' with' (ID: 483)
  Prédit: 'distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'distance' → logprob: -1.0140525102615356
    2. '       ' → logprob: -1.7640525102615356
    3. '   ' → logprob: -2.264052391052246
    4. '.distance' → logprob: -2.889052391052246
    5. '(center' → logprob: -3.139052391052246
    6. 'center' → logprob: -3.264052391052246
    7. ' at' → logprob: -3.514052391052246
    8. '.center' → logprob: -3.639052391052246
    9. '.' → logprob: -3.889052391052246
    10. ''s' → logprob: -4.014052391052246

Token 501: ' center' (ID: 6170)
  Prédit: 'center'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'center' → logprob: -0.05289052054286003
    2. 'c' → logprob: -3.6778905391693115
    3. ' center' → logprob: -3.6778905391693115
    4. 'distance' → logprob: -8.30289077758789
    5. '(center' → logprob: -8.42789077758789
    6. 'self' → logprob: -8.67789077758789
    7. 'radius' → logprob: -8.67789077758789
    8. '_center' → logprob: -10.05289077758789
    9. ' c' → logprob: -10.30289077758789
    10. 'Center' → logprob: -11.55289077758789

Token 502: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.439524382352829
    2. ' c' → logprob: -1.0645244121551514
    3. '=c' → logprob: -5.064524173736572
    4. ' at' → logprob: -5.689524173736572
    5. '=' → logprob: -7.564524173736572
    6. '=center' → logprob: -8.56452465057373
    7. 'at' → logprob: -9.56452465057373
    8. 'center' → logprob: -9.68952465057373
    9. ' and' → logprob: -10.18952465057373
    10. ' center' → logprob: -10.31452465057373

Token 503: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12431588023900986
    2. 'and' → logprob: -2.2493159770965576
    3. ',' → logprob: -4.6243157386779785
    4. ' at' → logprob: -6.6243157386779785
    5. 'at' → logprob: -9.124316215515137
    6. 'distance' → logprob: -9.874316215515137
    7. ' is' → logprob: -10.374316215515137
    8. ')' → logprob: -10.749316215515137
    9. '   ' → logprob: -10.749316215515137
    10. '       ' → logprob: -11.874316215515137

Token 504: ' radius' (ID: 21090)
  Prédit: 'radius'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'radius' → logprob: -0.10101298987865448
    2. ' radius' → logprob: -2.976012945175171
    3. 'r' → logprob: -3.101012945175171
    4. ' r' → logprob: -10.60101318359375
    5. '
' → logprob: -10.72601318359375
    6. '       ' → logprob: -10.97601318359375
    7. '   ' → logprob: -11.97601318359375
    8. '	r' → logprob: -13.85101318359375
    9. '
' → logprob: -13.85101318359375
    10. 'adius' → logprob: -13.97601318359375

Token 505: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.45414572954177856
    2. ' r' → logprob: -1.0791456699371338
    3. ' self' → logprob: -3.954145669937134
    4. 'self' → logprob: -5.454145908355713
    5. ' at' → logprob: -7.704145908355713
    6. ' is' → logprob: -7.954145908355713
    7. 'distance' → logprob: -8.204145431518555
    8. ' (' → logprob: -9.329145431518555
    9. ' distance' → logprob: -9.454145431518555
    10. '(self' → logprob: -10.579145431518555

Token 506: ' overlaps' (ID: 173439)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.5266092419624329
    2. ' overlaps' → logprob: -1.526609182357788
    3. ' intersects' → logprob: -2.151609182357788
    4. '   ' → logprob: -3.276609182357788
    5. '       ' → logprob: -4.776609420776367
    6. ' touches' → logprob: -5.026609420776367
    7. ' and' → logprob: -5.151609420776367
    8. ' has' → logprob: -5.276609420776367
    9. 'is' → logprob: -5.901609420776367
    10. 'inter' → logprob: -6.151609420776367

Token 507: ' with' (ID: 483)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7495505213737488
    2. ' self' → logprob: -0.9995505213737488
    3. '(self' → logprob: -2.1245505809783936
    4. ' with' → logprob: -3.6245505809783936
    5. 'with' → logprob: -4.7495503425598145
    6. '       ' → logprob: -5.4995503425598145
    7. ' the' → logprob: -7.9995503425598145
    8. ' (' → logprob: -9.624550819396973
    9. 'the' → logprob: -10.624550819396973
    10. '(' → logprob: -10.999550819396973

Token 508: ' laser' (ID: 23429)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05124151334166527
    2. ' self' → logprob: -3.301241397857666
    3. '(self' → logprob: -5.426241397857666
    4. 'Line' → logprob: -5.676241397857666
    5. 'the' → logprob: -5.926241397857666
    6. 'Point' → logprob: -6.676241397857666
    7. ' the' → logprob: -7.676241397857666
    8. 'c' → logprob: -8.676241874694824
    9. '       ' → logprob: -9.051241874694824
    10. '
' → logprob: -9.301241874694824

Token 509: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00305364653468132
    2. '(self' → logprob: -6.878053665161133
    3. ',' → logprob: -7.753053665161133
    4. ' and' → logprob: -8.128053665161133
    5. ' line' → logprob: -8.378053665161133
    6. ':' → logprob: -8.378053665161133
    7. ' (' → logprob: -8.628053665161133
    8. '(' → logprob: -9.128053665161133
    9. 'self' → logprob: -9.128053665161133
    10. ' self' → logprob: -9.878053665161133

Token 510: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0026195356622338295
    2. ':' → logprob: -6.252619743347168
    3. ',' → logprob: -7.502619743347168
    4. ':
' → logprob: -9.752619743347168
    5. '.' → logprob: -10.877619743347168
    6. '
' → logprob: -11.877619743347168
    7. ' =' → logprob: -11.877619743347168
    8. ' and' → logprob: -12.002619743347168
    9. ' (' → logprob: -12.252619743347168
    10. '=' → logprob: -12.502619743347168

Token 511: ' dist' (ID: 3601)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4260256886482239
    2. 'dist' (adapté à ' dist') → logprob: -1.801025629043579
    3. 'distance' → logprob: -2.426025629043579
    4. 'd' → logprob: -2.676025629043579
    5. 'return' → logprob: -3.801025629043579
    6. ' distance' → logprob: -7.176025867462158
    7. ' dist' → logprob: -7.426025867462158
    8. ' return' → logprob: -7.801025867462158
    9. ' d' → logprob: -8.176025390625
    10. '
' → logprob: -10.926025390625

Token 512: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7167261242866516
    2. '_to' → logprob: -0.8417261242866516
    3. '=' → logprob: -2.591726064682007
    4. 'ance' → logprob: -5.341726303100586
    5. '=self' → logprob: -8.216726303100586
    6. '       ' → logprob: -8.341726303100586
    7. 'to' → logprob: -8.466726303100586
    8. ' :=' → logprob: -9.341726303100586
    9. 'ence' → logprob: -10.591726303100586
    10. '(self' → logprob: -10.841726303100586

Token 513: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024769625160843134
    2. ' self' → logprob: -6.002477169036865
    3. '(self' → logprob: -13.877476692199707
    4. '       ' → logprob: -15.252476692199707
    5. '=self' → logprob: -16.127477645874023
    6. '	self' → logprob: -17.252477645874023
    7. '[self' → logprob: -17.502477645874023
    8. ' ' → logprob: -19.627477645874023
    9. ':self' → logprob: -19.877477645874023
    10. '   ' → logprob: -20.002477645874023

Token 514: '.line' (ID: 21221)
  Prédit: '.line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.line' → logprob: -1.0564331205387134e-05
    2. 'line' → logprob: -12.25001049041748
    3. '.' → logprob: -13.37501049041748
    4. '.distance' → logprob: -13.87501049041748
    5. ' line' → logprob: -14.12501049041748
    6. ' .' → logprob: -14.50001049041748
    7. '#line' → logprob: -14.75001049041748
    8. '=line' → logprob: -14.75001049041748
    9. '	line' → logprob: -15.37501049041748
    10. '.lines' → logprob: -15.62501049041748

Token 515: '.distance' (ID: 65482)
  Prédit: '.distance'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.distance' → logprob: -8.061054359131958e-06
    2. 'distance' → logprob: -12.125007629394531
    3. '.' → logprob: -13.000007629394531
    4. '.dist' → logprob: -15.875007629394531
    5. ' .' → logprob: -16.37500762939453
    6. ' distance' → logprob: -17.25000762939453
    7. '.Distance' → logprob: -17.25000762939453
    8. '(distance' → logprob: -18.25000762939453
    9. '_distance' → logprob: -19.62500762939453
    10. '.d' → logprob: -19.75000762939453

Token 516: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.500000953674316
    3. '_t' → logprob: -15.125000953674316
    4. ' _' → logprob: -17.625
    5. ')_' → logprob: -18.125
    6. '_from' → logprob: -19.375
    7. '##_' → logprob: -19.875
    8. '(_' → logprob: -20.25
    9. ' to' → logprob: -20.5
    10. '_top' → logprob: -20.5

Token 517: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -7.896309739408025e-07
    2. 'point' → logprob: -14.875000953674316
    3. '_p' → logprob: -16.25
    4. 'Point' → logprob: -16.75
    5. '_Point' → logprob: -16.875
    6. '```' → logprob: -16.875
    7. '_line' → logprob: -17.375
    8. '-point' → logprob: -17.75
    9. '_' → logprob: -18.0
    10. '_POINT' → logprob: -18.625

Token 518: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.000488811288960278
    2. '(' → logprob: -7.625488758087158
    3. '(
' → logprob: -14.875489234924316
    4. ' (' → logprob: -15.500489234924316
    5. '(p' → logprob: -15.625489234924316
    6. ' c' → logprob: -17.62548828125
    7. 'c' → logprob: -17.75048828125
    8. ')' → logprob: -18.37548828125
    9. '()' → logprob: -18.50048828125
    10. '(

' → logprob: -18.50048828125

Token 519: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014674274250864983
    2. ')
' → logprob: -4.264674186706543
    3. ' )' → logprob: -8.639674186706543
    4. '       ' → logprob: -8.889674186706543
    5. '()' → logprob: -9.389674186706543
    6. ')
' → logprob: -9.889674186706543
    7. '())' → logprob: -10.764674186706543
    8. ' )
' → logprob: -11.139674186706543
    9. ')

' → logprob: -11.764674186706543
    10. '   ' → logprob: -12.139674186706543

Token 520: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0073923454619944096
    2. '
' → logprob: -5.632392406463623
    3. 'return' → logprob: -6.007392406463623
    4. ' return' → logprob: -6.757392406463623
    5. '        
' → logprob: -9.632391929626465
    6. ',' → logprob: -11.007391929626465
    7. '   ' → logprob: -11.007391929626465
    8. '
' → logprob: -11.632391929626465
    9. '+' → logprob: -11.882391929626465
    10. ')' → logprob: -12.132391929626465

Token 521: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.10171595215797424
    2. ' return' → logprob: -2.3517160415649414
    3. '<=' → logprob: -6.601716041564941
    4. ' <=' → logprob: -9.601716041564941
    5. '       ' → logprob: -9.851716041564941
    6. '
' → logprob: -11.351716041564941
    7. 'dist' → logprob: -12.351716041564941
    8. ':return' → logprob: -12.351716041564941
    9. '{return' → logprob: -12.851716041564941
    10. '	return' → logprob: -13.476716041564941

Token 522: ' overlap' (ID: 56631)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.1800280213356018
    2. ' return' → logprob: -1.805027961730957
    3. '       ' → logprob: -8.555027961730957
    4. 'margin' → logprob: -10.680027961730957
    5. 'threshold' → logprob: -11.180027961730957
    6. ' margin' → logprob: -11.305027961730957
    7. 'if' → logprob: -11.555027961730957
    8. '   ' → logprob: -12.055027961730957
    9. ' if' → logprob: -12.055027961730957
    10. 'radius' → logprob: -12.555027961730957

Token 523: ' if' (ID: 538)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.12694984674453735
    2. '<=' → logprob: -2.1269497871398926
    3. 'return' → logprob: -12.00195026397705
    4. ' <' → logprob: -12.62695026397705
    5. ' return' → logprob: -13.00195026397705
    6. '+' → logprob: -13.50195026397705
    7. '=' → logprob: -13.62695026397705
    8. '<' → logprob: -13.75195026397705
    9. ' +' → logprob: -14.12695026397705
    10. ' ' → logprob: -14.37695026397705

Token 524: ' distance' (ID: 9324)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4740844964981079
    2. ' dist' → logprob: -0.9740844964981079
    3. '(dist' → logprob: -12.474084854125977
    4. '	dist' → logprob: -13.349084854125977
    5. ' is' → logprob: -13.724084854125977
    6. 'is' → logprob: -14.849084854125977
    7. '_dist' → logprob: -15.724084854125977
    8. ' ' → logprob: -15.849084854125977
    9. ' ' → logprob: -16.474084854125977
    10. '```' → logprob: -16.724084854125977

Token 525: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2022259533405304
    2. '<=' → logprob: -1.702225923538208
    3. ' <' → logprob: -7.327226161956787
    4. '<' → logprob: -8.827225685119629
    5. ' -' → logprob: -12.827225685119629
    6. '-' → logprob: -13.202225685119629
    7. ' ' → logprob: -13.702225685119629
    8. ' ≤' → logprob: -14.327225685119629
    9. ' ' → logprob: -14.577225685119629
    10. ')<=' → logprob: -14.827225685119629

Token 526: ' laser' (ID: 23429)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.24958395957946777
    2. 'r' → logprob: -2.2495839595794678
    3. 'dist' → logprob: -2.4995839595794678
    4. '(self' → logprob: -4.124584197998047
    5. ' self' → logprob: -5.124584197998047
    6. ' dist' → logprob: -5.374584197998047
    7. '(dist' → logprob: -5.499584197998047
    8. '(r' → logprob: -6.374584197998047
    9. ' (' → logprob: -7.874584197998047
    10. ' r' → logprob: -8.624584197998047

Token 527: ' half' (ID: 6375)
  Prédit: '.th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.th' → logprob: -0.007550428155809641
    2. 'th' → logprob: -5.632550239562988
    3. '.' → logprob: -6.382550239562988
    4. '.dist' → logprob: -7.632550239562988
    5. '_th' → logprob: -7.882550239562988
    6. ' .' → logprob: -8.257550239562988
    7. ' thickness' → logprob: -8.507550239562988
    8. 'dist' → logprob: -9.007550239562988
    9. '   ' → logprob: -9.132550239562988
    10. '	th' → logprob: -9.132550239562988

Token 528: ' thickness' (ID: 38833)
  Prédit: '_th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_th' → logprob: -0.12632596492767334
    2. 'th' → logprob: -3.001326084136963
    3. ' thickness' → logprob: -3.001326084136963
    4. 'self' → logprob: -5.001326084136963
    5. ' _' → logprob: -5.876326084136963
    6. '_' → logprob: -5.876326084136963
    7. ' self' → logprob: -6.001326084136963
    8. ' +' → logprob: -6.251326084136963
    9. ' ' → logprob: -6.751326084136963
    10. ' the' → logprob: -8.126325607299805

Token 529: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.007666840683668852
    2. '+' → logprob: -4.882667064666748
    3. ' plus' → logprob: -9.88266658782959
    4. ' ' → logprob: -12.38266658782959
    5. '   ' → logprob: -13.63266658782959
    6. 'plus' → logprob: -13.75766658782959
    7. ' ' → logprob: -14.38266658782959
    8. ' +
' → logprob: -14.38266658782959
    9. '+self' → logprob: -14.88266658782959
    10. '()' → logprob: -14.88266658782959

Token 530: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.05288463830947876
    2. ' r' → logprob: -3.177884578704834
    3. 'self' → logprob: -5.177884578704834
    4. ' self' → logprob: -6.052884578704834
    5. ' (' → logprob: -6.802884578704834
    6. '(r' → logprob: -7.552884578704834
    7. '(self' → logprob: -8.552885055541992
    8. '(' → logprob: -11.802885055541992
    9. ' ' → logprob: -12.927885055541992
    10. 'dist' → logprob: -13.552885055541992

Token 531: '
' (ID: 198)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.018445953726768494
    2. '+' → logprob: -5.26844596862793
    3. ' and' → logprob: -5.39344596862793
    4. '       ' → logprob: -5.51844596862793
    5. 'return' → logprob: -6.39344596862793
    6. ' <=' → logprob: -6.64344596862793
    7. ' return' → logprob: -7.39344596862793
    8. '(self' → logprob: -8.89344596862793
    9. '<=' → logprob: -8.89344596862793
    10. '+self' → logprob: -9.39344596862793

Token 532: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06023119390010834
    2. ' return' → logprob: -3.3102312088012695
    3. 'return' → logprob: -4.3102312088012695
    4. '
' → logprob: -5.5602312088012695
    5. '+' → logprob: -6.1852312088012695
    6. ' +' → logprob: -6.6852312088012695
    7. ' <=' → logprob: -8.31023120880127
    8. '   ' → logprob: -8.68523120880127
    9. '<=' → logprob: -8.81023120880127
    10. ':return' → logprob: -9.06023120880127

Token 533: ' return' (ID: 622)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.24102622270584106
    2. 'self' → logprob: -2.1160261631011963
    3. ' <=' → logprob: -3.2410261631011963
    4. ' return' → logprob: -3.2410261631011963
    5. '<=' → logprob: -4.616026401519775
    6. 'return' (adapté à ' return') → logprob: -5.616026401519775
    7. ' dist' → logprob: -6.741026401519775
    8. ' if' → logprob: -7.991026401519775
    9. '(self' → logprob: -8.991025924682617
    10. ' (' → logprob: -9.491025924682617

Token 534: ' dist' (ID: 3601)
  Prédit: ' dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dist' → logprob: -0.576340913772583
    2. 'dist' → logprob: -0.826340913772583
    3. '(dist' → logprob: -7.826340675354004
    4. '	dist' → logprob: -13.326340675354004
    5. ' (' → logprob: -15.576340675354004
    6. '_dist' → logprob: -15.951340675354004
    7. ' ' → logprob: -16.07634162902832
    8. ' is' → logprob: -16.20134162902832
    9. '(' → logprob: -16.45134162902832
    10. 'Dist' → logprob: -17.20134162902832

Token 535: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.01815052703022957
    2. '<=' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.768150329589844
    4. '()' → logprob: -15.768150329589844
    5. ')<=' → logprob: -15.768150329589844
    6. ' <' → logprob: -16.018150329589844
    7. '<' → logprob: -17.143150329589844
    8. ' <=",' → logprob: -17.518150329589844
    9. ' ' → logprob: -17.893150329589844
    10. ' ≤' → logprob: -18.268150329589844

Token 536: ' (' (ID: 350)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0035124069545418024
    2. ' self' → logprob: -5.753512382507324
    3. '(self' → logprob: -8.003512382507324
    4. ' (' → logprob: -15.003512382507324
    5. '(' → logprob: -18.37851333618164
    6. '	self' → logprob: -19.62851333618164
    7. 'se' → logprob: -20.00351333618164
    8. '0' → logprob: -20.12851333618164
    9. 'sel' → logprob: -20.50351333618164
    10. '=self' → logprob: -20.62851333618164

Token 537: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.225939872208983e-05
    2. '(self' → logprob: -10.625032424926758
    3. ' self' → logprob: -11.750032424926758
    4. '0' → logprob: -17.500032424926758
    5. '   ' → logprob: -18.500032424926758
    6. '=self' → logprob: -18.750032424926758
    7. '[self' → logprob: -19.125032424926758
    8. '	self' → logprob: -19.250032424926758
    9. 'r' → logprob: -19.750032424926758
    10. '$self' → logprob: -19.875032424926758

Token 538: '.th' (ID: 24848)
  Prédit: '.th'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.th' → logprob: -0.0022110389545559883
    2. '.' → logprob: -6.127211093902588
    3. '.safe' → logprob: -11.37721061706543
    4. ' .' → logprob: -11.87721061706543
    5. 'th' → logprob: -12.12721061706543
    6. '.s' → logprob: -14.25221061706543
    7. ').' → logprob: -14.37721061706543
    8. '	th' → logprob: -15.25221061706543
    9. '<th' → logprob: -16.50221061706543
    10. '.t' → logprob: -16.50221061706543

Token 539: 'ickness' (ID: 46853)
  Prédit: 'ickness'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ickness' → logprob: -8.602024900028482e-05
    2. 'ick' → logprob: -9.375085830688477
    3. 'ck' → logprob: -13.875085830688477
    4. 'ic' → logprob: -16.000085830688477
    5. 'ickname' → logprob: -17.625085830688477
    6. ' ' → logprob: -18.375085830688477
    7. 'ik' → logprob: -18.375085830688477
    8. 'ich' → logprob: -18.750085830688477
    9. '   ' → logprob: -18.750085830688477
    10. 'i' → logprob: -19.000085830688477

Token 540: '/' (ID: 14)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.5759621858596802
    2. '/' → logprob: -0.8259621858596802
    3. ' ' → logprob: -11.07596206665039
    4. ')' → logprob: -12.45096206665039
    5. ')/' → logprob: -13.20096206665039
    6. '   ' → logprob: -14.45096206665039
    7. ' ' → logprob: -15.76346206665039
    8. ' )' → logprob: -16.13846206665039
    9. ' /
' → logprob: -16.20096206665039
    10. '()/' → logprob: -16.45096206665039

Token 541: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -17.62510871887207
    4. ')' → logprob: -18.37510871887207
    5. '۲' → logprob: -18.37510871887207
    6. '```' → logprob: -18.62510871887207
    7. '  ' → logprob: -19.00010871887207
    8. '２' → logprob: -19.25010871887207
    9. '
' → logprob: -19.43760871887207
    10. '(' → logprob: -20.06260871887207

Token 542: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.013035167939960957
    2. '+' → logprob: -4.388035297393799
    3. ')' → logprob: -7.638035297393799
    4. ')+' → logprob: -10.63803482055664
    5. '+r' → logprob: -11.51303482055664
    6. ' )' → logprob: -12.38803482055664
    7. ' plus' → logprob: -12.51303482055664
    8. ' ' → logprob: -13.63803482055664
    9. '+c' → logprob: -16.13803482055664
    10. ' ' → logprob: -16.26303482055664

Token 543: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.023245595395565033
    2. ' r' → logprob: -3.7732455730438232
    3. '	r' → logprob: -17.398244857788086
    4. ' ' → logprob: -17.648244857788086
    5. ')' → logprob: -18.398244857788086
    6. '_r' → logprob: -19.023244857788086
    7. '
' → logprob: -19.398244857788086
    8. '   ' → logprob: -19.648244857788086
    9. ' ' → logprob: -19.773244857788086
    10. '+r' → logprob: -20.023244857788086

Token 544: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.975612187583465e-05
    2. ' )' → logprob: -10.875029563903809
    3. ')
' → logprob: -11.500029563903809
    4. ')

' → logprob: -15.000029563903809
    5. ')return' → logprob: -15.750029563903809
    6. '<|end|>' → logprob: -17.250030517578125
    7. '))' → logprob: -17.500030517578125
    8. ')#' → logprob: -17.500030517578125
    9. '),' → logprob: -17.625030517578125
    10. '   ' → logprob: -18.250030517578125

Token 545: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014060820103622973
    2. ' ' → logprob: -8.875140190124512
    3. '(' → logprob: -15.250140190124512
    4. '   ' → logprob: -15.625140190124512
    5. '0' → logprob: -15.750140190124512
    6. '-' → logprob: -16.875141143798828
    7. ')' → logprob: -17.750141143798828
    8. '*' → logprob: -18.125141143798828
    9. '  ' → logprob: -18.250141143798828
    10. '10' → logprob: -18.375141143798828

Token 546: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.465036105713807e-06
    2. ' ' → logprob: -11.875007629394531
    3. 'is' → logprob: -15.375007629394531
    4. '0' → logprob: -16.00000762939453
    5. '(' → logprob: -16.75000762939453
    6. '   ' → logprob: -16.87500762939453
    7. '-' → logprob: -17.37500762939453
    8. '*' → logprob: -18.25000762939453
    9. '10' → logprob: -18.50000762939453
    10. '**' → logprob: -19.00000762939453

Token 547: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -3.8889261304575484e-06
    2. '.e' → logprob: -13.375003814697266
    3. '0' → logprob: -13.750003814697266
    4. 'E' → logprob: -14.625003814697266
    5. '1' → logprob: -14.750003814697266
    6. '.' → logprob: -16.250003814697266
    7. ')' → logprob: -16.375003814697266
    8. ' ' → logprob: -17.250003814697266
    9. ')e' → logprob: -17.625003814697266
    10. 'е' → logprob: -18.125003814697266

Token 548: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.8908587662735954e-05
    2. '9' → logprob: -11.375019073486328
    3. ' -' → logprob: -12.625019073486328
    4. '12' → logprob: -13.500019073486328
    5. '6' → logprob: -13.875019073486328
    6. '10' → logprob: -14.625019073486328
    7. '```' → logprob: -14.750019073486328
    8. '8' → logprob: -15.500019073486328
    9. '
' → logprob: -16.125019073486328
    10. ' ' → logprob: -16.250019073486328

Token 549: '12' (ID: 899)
  Prédit: '9'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '9' → logprob: -0.23192715644836426
    2. '12' → logprob: -1.7319271564483643
    3. '10' → logprob: -3.7319271564483643
    4. '8' → logprob: -6.231926918029785
    5. '14' → logprob: -6.356926918029785
    6. '7' → logprob: -6.731926918029785
    7. '15' → logprob: -7.356926918029785
    8. '6' → logprob: -7.981926918029785
    9. '13' → logprob: -9.106926918029785
    10. '11' → logprob: -9.856926918029785

Token 550: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2113979209971149e-05
    2. ' )' → logprob: -11.625012397766113
    3. ')
' → logprob: -12.875012397766113
    4. ')return' → logprob: -15.375012397766113
    5. '   ' → logprob: -16.125011444091797
    6. ')

' → logprob: -16.375011444091797
    7. ')#' → logprob: -17.125011444091797
    8. '       ' → logprob: -17.500011444091797
    9. '<|end|>' → logprob: -17.750011444091797
    10. '))' → logprob: -18.125011444091797

Token 551: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 552: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 553: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5119211077690125
    2. ' __' → logprob: -2.2619211673736572
    3. 'move' → logprob: -3.1369211673736572
    4. 'safe' → logprob: -3.1369211673736572
    5. 'can' → logprob: -3.5119211673736572
    6. ' safe' → logprob: -3.5119211673736572
    7. ' move' → logprob: -3.6369211673736572
    8. 'is' → logprob: -4.386920928955078
    9. 'clear' → logprob: -4.761920928955078
    10. 'def' → logprob: -4.761920928955078

Token 554: 'repr' (ID: 67002)
  Prédit: 'repr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'repr' → logprob: -1.9361264946837764e-07
    2. '_repr' → logprob: -16.375
    3. 'eq' → logprob: -17.625
    4. 'str' → logprob: -17.625
    5. ' repr' → logprob: -17.875
    6. 'rep' → logprob: -18.25
    7. 'name' → logprob: -22.0
    8. 'represent' → logprob: -22.375
    9. 'r' → logprob: -22.5
    10. 'hash' → logprob: -23.0

Token 555: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0019521836657077074
    2. '__' → logprob: -6.251952171325684
    3. '__(
' → logprob: -11.001952171325684
    4. '(self' → logprob: -12.126952171325684
    5. '__((' → logprob: -14.251952171325684
    6. '__('' → logprob: -14.626952171325684
    7. '__("' → logprob: -15.376952171325684
    8. '__[' → logprob: -16.126953125
    9. '_(' → logprob: -16.751953125
    10. '(' → logprob: -17.626953125

Token 556: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.4285862057004124e-05
    2. ')' → logprob: -10.37503433227539
    3. ' self' → logprob: -13.50003433227539
    4. 's' → logprob: -14.62503433227539
    5. '
' → logprob: -14.75003433227539
    6. '   ' → logprob: -15.50003433227539
    7. ')(' → logprob: -15.75003433227539
    8. ' ' → logprob: -16.25003433227539
    9. '(self' → logprob: -16.37503433227539
    10. '       ' → logprob: -17.00003433227539

Token 557: '):
' (ID: 1883)
  Prédit: ')('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')(' → logprob: -0.7435140609741211
    2. '__(' → logprob: -1.368514060974121
    3. 'self' → logprob: -2.368514060974121
    4. '(self' → logprob: -2.368514060974121
    5. '__' → logprob: -3.368514060974121
    6. ')' → logprob: -3.618514060974121
    7. '):' → logprob: -4.743514060974121
    8. ')(
' → logprob: -5.493514060974121
    9. ')(__' → logprob: -5.993514060974121
    10. '):
' → logprob: -6.493514060974121

Token 558: '       ' (ID: 309)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.2420203983783722
    2. '       ' → logprob: -1.7420203685760498
    3. 'return' → logprob: -3.24202036857605
    4. ' f' → logprob: -7.992020606994629
    5. ' return' → logprob: -8.617020606994629
    6. '   ' → logprob: -8.742020606994629
    7. 'self' → logprob: -11.242020606994629
    8. '           ' → logprob: -11.867020606994629
    9. '     ' → logprob: -12.492020606994629
    10. '      ' → logprob: -13.117020606994629

Token 559: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.03396827355027199
    2. 'f' → logprob: -4.033968448638916
    3. '       ' → logprob: -4.283968448638916
    4. ' return' → logprob: -6.283968448638916
    5. ' f' → logprob: -10.283967971801758
    6. '   ' → logprob: -12.533967971801758
    7. '           ' → logprob: -13.908967971801758
    8. '
' → logprob: -14.408967971801758
    9. '     ' → logprob: -15.658967971801758
    10. ' ' → logprob: -16.033967971801758

Token 560: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.01814994215965271
    2. ' f' → logprob: -4.0181498527526855
    3. '   ' → logprob: -18.268150329589844
    4. '	f' → logprob: -18.518150329589844
    5. '(f' → logprob: -19.643150329589844
    6. ''f' → logprob: -19.643150329589844
    7. '

' → logprob: -20.518150329589844
    8. '
' → logprob: -20.643150329589844
    9. '    ' → logprob: -20.768150329589844
    10. '"' → logprob: -20.893150329589844

Token 561: '"' (ID: 1)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.4351077079772949
    2. '"L' → logprob: -1.185107707977295
    3. '"' → logprob: -3.060107707977295
    4. '(f' → logprob: -8.935108184814453
    5. '"<' → logprob: -11.060108184814453
    6. 'L' → logprob: -11.060108184814453
    7. ' f' → logprob: -11.185108184814453
    8. '(L' → logprob: -11.685108184814453
    9. 'Laser' → logprob: -12.310108184814453
    10. '"(' → logprob: -12.810108184814453

Token 562: 'Laser' (ID: 99061)
  Prédit: 'Laser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Laser' → logprob: -5.512236498361744e-07
    2. 'f' → logprob: -15.625000953674316
    3. '"' → logprob: -15.750000953674316
    4. ' Laser' → logprob: -16.5
    5. ''' → logprob: -17.25
    6. 'Las' → logprob: -17.625
    7. '"L' → logprob: -18.25
    8. 'Laptop' → logprob: -18.25
    9. 'laser' → logprob: -18.5
    10. 'Line' → logprob: -18.625

Token 563: '({' (ID: 3972)
  Prédit: '({'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '({' → logprob: -0.00016361083544325083
    2. '(Line' → logprob: -9.375164031982422
    3. '(f' → logprob: -10.375164031982422
    4. '{' → logprob: -10.875164031982422
    5. '(' → logprob: -11.125164031982422
    6. '(Point' → logprob: -12.000164031982422
    7. '(L' → logprob: -12.250164031982422
    8. '(({' → logprob: -13.250164031982422
    9. '(self' → logprob: -14.500164031982422
    10. 'Line' → logprob: -15.000164031982422

Token 564: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.36574100604048e-06
    2. 'repr' → logprob: -12.625004768371582
    3. ' self' → logprob: -14.125004768371582
    4. '{' → logprob: -16.125003814697266
    5. 'sel' → logprob: -16.125003814697266
    6. 's' → logprob: -18.250003814697266
    7. '(self' → logprob: -18.750003814697266
    8. 'se' → logprob: -18.875003814697266
    9. 'elf' → logprob: -19.500003814697266
    10. '
' → logprob: -19.625003814697266

Token 565: '.line' (ID: 21221)
  Prédit: '.line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.line' → logprob: -4.961759259458631e-06
    2. '.l' → logprob: -12.625004768371582
    3. '.' → logprob: -14.250004768371582
    4. '.lin' → logprob: -14.375004768371582
    5. 'line' → logprob: -16.2500057220459
    6. '.point' → logprob: -16.3750057220459
    7. '.li' → logprob: -16.7500057220459
    8. '.Line' → logprob: -17.5000057220459
    9. ' .' → logprob: -17.6250057220459
    10. '#line' → logprob: -18.1250057220459

Token 566: '},' (ID: 4180)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23012889921665192
    2. '},' → logprob: -1.9801288843154907
    3. '})' → logprob: -2.8551290035247803
    4. '}' → logprob: -4.855128765106201
    5. ')' → logprob: -6.230128765106201
    6. ')}' → logprob: -9.60512924194336
    7. '}"' → logprob: -9.98012924194336
    8. '),' → logprob: -10.23012924194336
    9. '}")' → logprob: -10.73012924194336
    10. '!' → logprob: -11.35512924194336

Token 567: ' thickness' (ID: 38833)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.4174336791038513
    2. 'self' → logprob: -1.667433738708496
    3. ' {' → logprob: -2.417433738708496
    4. '{' → logprob: -2.917433738708496
    5. ' thickness' → logprob: -5.167433738708496
    6. 'th' → logprob: -5.667433738708496
    7. ' th' → logprob: -9.292433738708496
    8. ',' → logprob: -11.292433738708496
    9. 'Thickness' → logprob: -11.917433738708496
    10. ' ' → logprob: -12.042433738708496

Token 568: '={' (ID: 1693)
  Prédit: '={'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '={' → logprob: -0.4299331605434418
    2. '=' → logprob: -1.1799331903457642
    3. '=self' → logprob: -3.1799330711364746
    4. '{' → logprob: -8.554933547973633
    5. '=}' → logprob: -9.054933547973633
    6. 'self' → logprob: -9.179933547973633
    7. ')' → logprob: -9.929933547973633
    8. '}' → logprob: -10.679933547973633
    9. ',' → logprob: -10.929933547973633
    10. ' =' → logprob: -10.929933547973633

Token 569: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10035030543804169
    2. '{' → logprob: -2.3503503799438477
    3. ' self' → logprob: -8.850350379943848
    4. ' {' → logprob: -15.100350379943848
    5. '{s' → logprob: -17.72534942626953
    6. '	self' → logprob: -17.85034942626953
    7. '{return' → logprob: -18.10034942626953
    8. '{
' → logprob: -18.60034942626953
    9. '$self' → logprob: -18.72534942626953
    10. '(self' → logprob: -19.10034942626953

Token 570: '.th' (ID: 24848)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.18103726208209991
    2. ' self' → logprob: -1.9310373067855835
    3. ' ' → logprob: -4.056037425994873
    4. ',' → logprob: -6.306037425994873
    5. '{' → logprob: -8.181036949157715
    6. ')' → logprob: -8.181036949157715
    7. '}' → logprob: -8.181036949157715
    8. '.' → logprob: -8.931036949157715
    9. '  ' → logprob: -9.181036949157715
    10. '   ' → logprob: -9.306036949157715

Token 571: 'ickness' (ID: 46853)
  Prédit: 'ickness'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ickness' → logprob: -0.0012310652527958155
    2. 'ick' → logprob: -6.7512311935424805
    3. 'ic' → logprob: -10.12623119354248
    4. 'ck' → logprob: -11.25123119354248
    5. 'ik' → logprob: -12.37623119354248
    6. ' ' → logprob: -13.37623119354248
    7. '.' → logprob: -14.87623119354248
    8. '```' → logprob: -15.37623119354248
    9. 'ickname' → logprob: -15.50123119354248
    10. 'ness' → logprob: -16.001230239868164

Token 572: '})' (ID: 9263)
  Prédit: ')"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')"' → logprob: -0.3870229125022888
    2. ')' → logprob: -1.1370229721069336
    3. ')")' → logprob: -9.637022972106934
    4. ')">' → logprob: -9.637022972106934
    5. ')`' → logprob: -11.887022972106934
    6. '})' → logprob: -12.012022972106934
    7. '")' → logprob: -12.762022972106934
    8. ')”' → logprob: -13.262022972106934
    9. ')}' → logprob: -13.262022972106934
    10. ')'' → logprob: -14.512022972106934

Token 573: '"

' (ID: 2678)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 574: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 575: ' Screen' (ID: 22269)
  Prédit: 'Machine'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Machine' → logprob: -0.211919903755188
    2. 'Circle' → logprob: -1.836919903755188
    3. ' Machine' → logprob: -4.086919784545898
    4. ' Circle' → logprob: -5.336919784545898
    5. 'Robot' → logprob: -5.711919784545898
    6. 'Circular' → logprob: -5.711919784545898
    7. 'Obstacle' → logprob: -7.086919784545898
    8. 'Rectangle' → logprob: -7.461919784545898
    9. 'Laser' → logprob: -8.086919784545898
    10. 'Safe' → logprob: -8.336919784545898

Token 576: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16044163703918457
    2. ':
' → logprob: -1.9104416370391846
    3. '   ' → logprob: -9.785441398620605
    4. '(object' → logprob: -10.410441398620605
    5. '<|end|>' → logprob: -10.535441398620605
    6. '):' → logprob: -10.910441398620605
    7. ':
' → logprob: -11.410441398620605
    8. '):
' → logprob: -11.410441398620605
    9. ' :' → logprob: -11.910441398620605
    10. '(' → logprob: -12.160441398620605

Token 577: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00010282796574756503
    2. '<|end|>' → logprob: -9.750102996826172
    3. '__' → logprob: -11.125102996826172
    4. ':
' → logprob: -12.250102996826172
    5. '<|end|>' → logprob: -12.625102996826172
    6. 'class' → logprob: -12.875102996826172
    7. '):
' → logprob: -13.125102996826172
    8. ':' → logprob: -13.500102996826172
    9. ' __' → logprob: -13.500102996826172
    10. '_slots' → logprob: -13.750102996826172

Token 578: ' def' (ID: 1056)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.01666787639260292
    2. ' __' → logprob: -4.14166784286499
    3. '   ' → logprob: -8.016668319702148
    4. 'def' (adapté à ' def') → logprob: -8.641668319702148
    5. ' def' → logprob: -10.016668319702148
    6. '_slots' → logprob: -10.266668319702148
    7. '___' → logprob: -11.141668319702148
    8. 'slots' → logprob: -11.641668319702148
    9. ' slots' → logprob: -11.891668319702148
    10. '.__' → logprob: -12.266668319702148

Token 579: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2024763822555542
    2. ' __' → logprob: -1.7024763822555542
    3. 'init' → logprob: -7.577476501464844
    4. '_slots' → logprob: -8.202476501464844
    5. '___' → logprob: -8.952476501464844
    6. ''' → logprob: -10.327476501464844
    7. 'slots' → logprob: -10.327476501464844
    8. ''s' → logprob: -11.202476501464844
    9. '```' → logprob: -11.452476501464844
    10. ' slots' → logprob: -11.827476501464844

Token 580: 'init' (ID: 3287)
  Prédit: 'slots'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'slots' → logprob: -0.0007437567692250013
    2. '_slots' → logprob: -7.500743865966797
    3. '__' → logprob: -8.625743865966797
    4. ' slots' → logprob: -12.375743865966797
    5. '(__' → logprob: -13.875743865966797
    6. 'lots' → logprob: -14.000743865966797
    7. '('__' → logprob: -14.125743865966797
    8. 'Slots' → logprob: -14.125743865966797
    9. '___' → logprob: -14.250743865966797
    10. '```' → logprob: -14.500743865966797

Token 581: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005603918805718422
    2. '__(' → logprob: -5.505603790283203
    3. '(' → logprob: -6.880603790283203
    4. '   ' → logprob: -8.505603790283203
    5. ' (' → logprob: -8.880603790283203
    6. 'self' → logprob: -9.255603790283203
    7. '
' → logprob: -10.755603790283203
    8. 'def' → logprob: -11.380603790283203
    9. ' self' → logprob: -12.005603790283203
    10. '       ' → logprob: -12.255603790283203

Token 582: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00011892046313732862
    2. ' self' → logprob: -9.25011920928955
    3. '   ' → logprob: -11.62511920928955
    4. '
' → logprob: -12.00011920928955
    5. '       ' → logprob: -12.00011920928955
    6. ',' → logprob: -14.50011920928955
    7. '  ' → logprob: -15.25011920928955
    8. ')' → logprob: -16.125118255615234
    9. '(self' → logprob: -16.250118255615234
    10. ' ' → logprob: -16.375118255615234

Token 583: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013715495588257909
    2. 'self' → logprob: -6.626371383666992
    3. '   ' → logprob: -10.751371383666992
    4. ',
' → logprob: -12.126371383666992
    5. '(self' → logprob: -12.251371383666992
    6. '       ' → logprob: -12.251371383666992
    7. ',self' → logprob: -12.501371383666992
    8. ' ,' → logprob: -13.626371383666992
    9. '):
' → logprob: -13.876371383666992
    10. ' self' → logprob: -14.001371383666992

Token 584: ' width' (ID: 4345)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.3526887893676758
    2. ' width' → logprob: -1.3526887893676758
    3. 'las' → logprob: -4.477688789367676
    4. 'size' → logprob: -4.977688789367676
    5. 'self' → logprob: -5.352688789367676
    6. ' size' → logprob: -5.727688789367676
    7. 'w' → logprob: -5.852688789367676
    8. ' lasers' → logprob: -6.227688789367676
    9. 'points' → logprob: -6.477688789367676
    10. ' self' → logprob: -7.102688789367676

Token 585: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12702500820159912
    2. ',' → logprob: -2.1270251274108887
    3. ':int' → logprob: -9.37702465057373
    4. ' ,' → logprob: -11.75202465057373
    5. ' :' → logprob: -12.50202465057373
    6. ':,' → logprob: -15.25202465057373
    7. '=' → logprob: -15.37702465057373
    8. '   ' → logprob: -16.252025604248047
    9. '```' → logprob: -17.627025604248047
    10. '_:' → logprob: -18.502025604248047

Token 586: ' int' (ID: 677)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.11390984803438187
    2. 'int' → logprob: -2.363909959793091
    3. ' float' → logprob: -4.363909721374512
    4. ' int' → logprob: -7.113909721374512
    5. '800' → logprob: -10.988909721374512
    6. '400' → logprob: -10.988909721374512
    7. '100' → logprob: -11.863909721374512
    8. '   ' → logprob: -12.238909721374512
    9. '=float' → logprob: -12.488909721374512
    10. ' ' → logprob: -13.238909721374512

Token 587: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.65707261255011e-06
    2. ' ,' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.500008583068848
    4. ':' → logprob: -15.500008583068848
    5. '‌,' → logprob: -16.375009536743164
    6. ',int' → logprob: -16.625009536743164
    7. ',
' → logprob: -17.000009536743164
    8. '):' → logprob: -17.750009536743164
    9. '<|end|>' → logprob: -18.125009536743164
    10. ')' → logprob: -18.500009536743164

Token 588: ' height' (ID: 4679)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.11283061653375626
    2. ' height' → logprob: -2.237830638885498
    3. '   ' → logprob: -12.11283016204834
    4. '	height' → logprob: -14.23783016204834
    5. ' ' → logprob: -14.61283016204834
    6. 'width' → logprob: -14.73783016204834
    7. '_height' → logprob: -14.86283016204834
    8. ',height' → logprob: -15.86283016204834
    9. 'length' → logprob: -15.98783016204834
    10. '.height' → logprob: -16.112831115722656

Token 589: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.47477954626083374
    2. '):' → logprob: -0.9747795462608337
    3. '):
' → logprob: -7.8497796058654785
    4. ':int' → logprob: -9.22477912902832
    5. '   ' → logprob: -9.34977912902832
    6. ',' → logprob: -10.09977912902832
    7. ')' → logprob: -10.22477912902832
    8. ' ):' → logprob: -10.47477912902832
    9. ' :' → logprob: -11.84977912902832
    10. '):
' → logprob: -12.59977912902832

Token 590: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00091217877343297
    2. ' int' → logprob: -7.000912189483643
    3. 'float' → logprob: -15.375911712646484
    4. '   ' → logprob: -15.500911712646484
    5. ':int' → logprob: -16.250911712646484
    6. ')' → logprob: -17.000911712646484
    7. '[int' → logprob: -17.875911712646484
    8. '       ' → logprob: -18.000911712646484
    9. '=int' → logprob: -18.125911712646484
    10. 'height' → logprob: -18.750911712646484

Token 591: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030363578349351883
    2. '):
' → logprob: -3.5303635597229004
    3. ',' → logprob: -7.7803635597229
    4. '):
' → logprob: -9.155364036560059
    5. ')' → logprob: -9.405364036560059
    6. '   ' → logprob: -12.280364036560059
    7. ':' → logprob: -13.905364036560059
    8. '):

' → logprob: -14.405364036560059
    9. ' ):' → logprob: -14.655364036560059
    10. '       ' → logprob: -15.405364036560059

Token 592: ' radius' (ID: 21090)
  Prédit: 'las'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'las' → logprob: -0.03755846247076988
    2. 'laser' → logprob: -4.537558555603027
    3. 'ob' → logprob: -4.787558555603027
    4. 'machines' → logprob: -5.162558555603027
    5. 'background' → logprob: -5.787558555603027
    6. ' lasers' → logprob: -5.787558555603027
    7. 'safe' → logprob: -6.912558555603027
    8. 'machine' → logprob: -7.412558555603027
    9. 'margin' → logprob: -7.537558555603027
    10. ' obstacles' → logprob: -8.037558555603027

Token 593: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -3.881560041918419e-05
    2. '):' → logprob: -11.000039100646973
    3. '=' → logprob: -11.750039100646973
    4. ')' → logprob: -12.000039100646973
    5. ' :' → logprob: -12.625039100646973
    6. ',' → logprob: -12.750039100646973
    7. ':int' → logprob: -13.875039100646973
    8. '_:' → logprob: -15.250039100646973
    9. '=float' → logprob: -15.875039100646973
    10. 'r' → logprob: -15.875039100646973

Token 594: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.004966066684573889
    2. ' float' → logprob: -5.5049662590026855
    3. 'int' → logprob: -7.3799662590026855
    4. ')' → logprob: -9.254965782165527
    5. '0' → logprob: -9.879965782165527
    6. '   ' → logprob: -10.254965782165527
    7. '1' → logprob: -11.129965782165527
    8. ' ' → logprob: -11.129965782165527
    9. '10' → logprob: -11.504965782165527
    10. ' int' → logprob: -11.629965782165527

Token 595: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06210346892476082
    2. '):
' → logprob: -2.812103509902954
    3. '):
' → logprob: -9.437103271484375
    4. ',' → logprob: -10.187103271484375
    5. ')' → logprob: -11.562103271484375
    6. '   ' → logprob: -12.312103271484375
    7. '):

' → logprob: -13.312103271484375
    8. ' ):' → logprob: -13.562103271484375
    9. ':' → logprob: -14.437103271484375
    10. '=' → logprob: -14.937103271484375

Token 596: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00048405781853944063
    2. '   ' → logprob: -8.000484466552734
    3. 'self' → logprob: -9.125484466552734
    4. ' self' → logprob: -11.000484466552734
    5. '
' → logprob: -11.875484466552734
    6. '```' → logprob: -12.375484466552734
    7. '	   ' → logprob: -12.875484466552734
    8. '	' → logprob: -13.500484466552734
    9. '	self' → logprob: -13.500484466552734
    10. '        
' → logprob: -13.625484466552734

Token 597: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.002638676203787327
    2. '       ' → logprob: -6.252638816833496
    3. ' self' → logprob: -7.252638816833496
    4. '	self' → logprob: -13.877638816833496
    5. '   ' → logprob: -14.252638816833496
    6. 'super' → logprob: -18.25263786315918
    7. '(self' → logprob: -18.62763786315918
    8. '```' → logprob: -19.12763786315918
    9. ' ' → logprob: -19.62763786315918
    10. '        ' → logprob: -20.25263786315918

Token 598: '.width' (ID: 11038)
  Prédit: '.width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.width' → logprob: -0.07766841351985931
    2. '.' → logprob: -2.7026684284210205
    3. ' .' → logprob: -5.077668190002441
    4. ' width' → logprob: -7.202668190002441
    5. 'width' → logprob: -8.077668190002441
    6. ' =' → logprob: -9.077668190002441
    7. '   ' → logprob: -9.202668190002441
    8. '.w' → logprob: -9.452668190002441
    9. '_width' → logprob: -9.702668190002441
    10. '=' → logprob: -10.952668190002441

Token 599: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.33411481976509094
    2. ',' → logprob: -1.5841147899627686
    3. ' =' → logprob: -2.5841147899627686
    4. ' ,' → logprob: -5.834115028381348
    5. ':' → logprob: -8.334115028381348
    6. '=int' → logprob: -8.709115028381348
    7. '<|end|>' → logprob: -9.709115028381348
    8. ':int' → logprob: -10.834115028381348
    9. '   ' → logprob: -12.209115028381348
    10. ',
' → logprob: -12.334115028381348

Token 600: ' width' (ID: 4345)
  Prédit: ' width'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' width' → logprob: -0.38687190413475037
    2. 'width' → logprob: -1.1368719339370728
    3. 'int' → logprob: -15.261872291564941
    4. '(width' → logprob: -15.261872291564941
    5. '	width' → logprob: -15.511872291564941
    6. 'height' → logprob: -16.261871337890625
    7. ',width' → logprob: -16.761871337890625
    8. ' ' → logprob: -17.386871337890625
    9. ' int' → logprob: -17.511871337890625
    10. '_width' → logprob: -17.886871337890625

Token 601: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01607613079249859
    2. '<|end|>' → logprob: -4.39107608795166
    3. '
' → logprob: -5.89107608795166
    4. ',' → logprob: -7.26607608795166
    5. '   ' → logprob: -10.39107608795166
    6. '<|end|>' → logprob: -10.89107608795166
    7. ',
' → logprob: -11.51607608795166
    8. '        
' → logprob: -11.51607608795166
    9. '      ' → logprob: -12.51607608795166
    10. ' ' → logprob: -12.64107608795166

Token 602: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04087984561920166
    2. '   ' → logprob: -4.165879726409912
    3. '<|end|>' → logprob: -4.415879726409912
    4. ',' → logprob: -4.540879726409912
    5. '
' → logprob: -7.040879726409912
    6. ' ' → logprob: -7.915879726409912
    7. 'self' → logprob: -8.91588020324707
    8. '<|end|>' → logprob: -9.66588020324707
    9. '           ' → logprob: -10.16588020324707
    10. '        
' → logprob: -10.16588020324707

Token 603: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.014942311681807041
    2. ' self' → logprob: -4.264942169189453
    3. '       ' → logprob: -7.264942169189453
    4. 'height' → logprob: -9.514942169189453
    5. '   ' → logprob: -12.514942169189453
    6. ' height' → logprob: -13.889942169189453
    7. '
' → logprob: -14.764942169189453
    8. ' ' → logprob: -16.639942169189453
    9. '	self' → logprob: -17.139942169189453
    10. '        
' → logprob: -17.764942169189453

Token 604: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -0.0786421149969101
    2. 'height' → logprob: -3.2036421298980713
    3. '=' → logprob: -3.5786421298980713
    4. ' =' → logprob: -5.203641891479492
    5. ' height' → logprob: -7.328641891479492
    6. '_height' → logprob: -7.703641891479492
    7. '.' → logprob: -8.578641891479492
    8. ',' → logprob: -9.328641891479492
    9. '.radius' → logprob: -9.578641891479492
    10. '   ' → logprob: -10.578641891479492

Token 605: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.386884480714798
    2. ' =' → logprob: -1.1368844509124756
    3. '<|end|>' → logprob: -11.386884689331055
    4. ',' → logprob: -13.511884689331055
    5. '=int' → logprob: -15.761884689331055
    6. ':' → logprob: -15.886884689331055
    7. '   ' → logprob: -16.136884689331055
    8. '=float' → logprob: -16.261884689331055
    9. ' ' → logprob: -16.261884689331055
    10. ')' → logprob: -16.511884689331055

Token 606: ' height' (ID: 4679)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'height' → logprob: -9.698698704596609e-05
    2. ' height' → logprob: -9.250097274780273
    3. 'radius' → logprob: -14.000097274780273
    4. '   ' → logprob: -17.250097274780273
    5. 'width' → logprob: -17.250097274780273
    6. '(height' → logprob: -18.125097274780273
    7. '	height' → logprob: -18.750097274780273
    8. 'float' → logprob: -18.875097274780273
    9. ' ' → logprob: -19.375097274780273
    10. 'h' → logprob: -19.750097274780273

Token 607: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -4.56102097814437e-05
    2. 'self' → logprob: -11.000045776367188
    3. '   ' → logprob: -11.250045776367188
    4. '
' → logprob: -11.250045776367188
    5. ' self' → logprob: -14.000045776367188
    6. '<|end|>' → logprob: -14.000045776367188
    7. ',' → logprob: -14.125045776367188
    8. ' ' → logprob: -16.250045776367188
    9. '           ' → logprob: -16.375045776367188
    10. '        
' → logprob: -16.625045776367188

Token 608: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0001439459010725841
    2. 'self' → logprob: -9.000144004821777
    3. ' self' → logprob: -11.500144004821777
    4. '   ' → logprob: -11.500144004821777
    5. 'def' → logprob: -16.62514305114746
    6. ' ' → logprob: -16.87514305114746
    7. '      ' → logprob: -17.37514305114746
    8. '           ' → logprob: -17.62514305114746
    9. '	self' → logprob: -17.87514305114746
    10. '<|end|>' → logprob: -18.12514305114746

Token 609: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -4.008129963040119e-06
    2. '       ' → logprob: -12.500003814697266
    3. ' self' → logprob: -15.625003814697266
    4. '        
' → logprob: -16.750003814697266
    5. '
' → logprob: -17.875003814697266
    6. '   ' → logprob: -18.125003814697266
    7. 's' → logprob: -19.625003814697266
    8. 'radius' → logprob: -19.750003814697266
    9. '	self' → logprob: -20.125003814697266
    10. 'r' → logprob: -20.125003814697266

Token 610: '.radius' (ID: 73491)
  Prédit: '.radius'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.radius' → logprob: -0.000750663282815367
    2. 'radius' → logprob: -7.250750541687012
    3. '.r' → logprob: -10.500750541687012
    4. '_radius' → logprob: -12.250750541687012
    5. '.' → logprob: -12.750750541687012
    6. ' radius' → logprob: -13.125750541687012
    7. ' .' → logprob: -14.125750541687012
    8. '.robot' → logprob: -14.625750541687012
    9. '-radius' → logprob: -14.875750541687012
    10. '   ' → logprob: -14.875750541687012

Token 611: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693282961845398
    2. '=' → logprob: -2.1269328594207764
    3. ' ' → logprob: -12.376933097839355
    4. '   ' → logprob: -14.876933097839355
    5. ':' → logprob: -15.251933097839355
    6. ' =
' → logprob: -17.62693214416504
    7. ',' → logprob: -18.50193214416504
    8. '    ' → logprob: -18.62693214416504
    9. '_' → logprob: -18.62693214416504
    10. '  ' → logprob: -18.87693214416504

Token 612: ' radius' (ID: 21090)
  Prédit: 'radius'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'radius' → logprob: -0.20141655206680298
    2. ' radius' → logprob: -1.7014164924621582
    3. 'r' → logprob: -12.826416969299316
    4. '(radius' → logprob: -14.951416969299316
    5. 'float' → logprob: -16.826416015625
    6. ' r' → logprob: -16.951416015625
    7. 'radi' → logprob: -17.076416015625
    8. '   ' → logprob: -17.201416015625
    9. '.radius' → logprob: -18.826416015625
    10. '_radius' → logprob: -18.951416015625

Token 613: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025372562929987907
    2. '
' → logprob: -4.150372505187988
    3. '<|end|>' → logprob: -5.025372505187988
    4. '    
' → logprob: -6.025372505187988
    5. '<|end|>' → logprob: -9.150372505187988
    6. 'def' → logprob: -9.775372505187988
    7. '       ' → logprob: -10.025372505187988
    8. '        
' → logprob: -10.775372505187988
    9. ' def' → logprob: -11.275372505187988
    10. ',' → logprob: -11.275372505187988

Token 614: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017552033066749573
    2. '<|end|>' → logprob: -4.142551898956299
    3. '
' → logprob: -7.392551898956299
    4. '    
' → logprob: -7.892551898956299
    5. 'def' → logprob: -8.267552375793457
    6. '<|end|>' → logprob: -9.392552375793457
    7. ' def' → logprob: -9.892552375793457
    8. '       ' → logprob: -9.892552375793457
    9. '    ' → logprob: -11.017552375793457
    10. '```' → logprob: -11.267552375793457

Token 615: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.04359541833400726
    2. '       ' → logprob: -3.543595314025879
    3. 'def' → logprob: -4.293595314025879
    4. '   ' → logprob: -9.918595314025879
    5. ' self' → logprob: -10.168595314025879
    6. 'class' → logprob: -13.418595314025879
    7. '
' → logprob: -13.793595314025879
    8. '	self' → logprob: -13.918595314025879
    9. 'from' → logprob: -14.543595314025879
    10. '        
' → logprob: -14.668595314025879

Token 616: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.008523324504494667
    2. '.' → logprob: -5.758523464202881
    3. '.points' → logprob: -6.133523464202881
    4. '.lines' → logprob: -7.008523464202881
    5. '._' → logprob: -7.383523464202881
    6. ' .' → logprob: -8.133522987365723
    7. '.objects' → logprob: -8.383522987365723
    8. '.L' → logprob: -8.883522987365723
    9. '.s' → logprob: -9.258522987365723
    10. '.d' → logprob: -9.383522987365723

Token 617: 'asers' (ID: 74351)
  Prédit: 'asers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asers' → logprob: -0.0009009773493744433
    2. 'as' → logprob: -7.375900745391846
    3. 'aser' → logprob: -8.875901222229004
    4. 'a' → logprob: -9.500901222229004
    5. 'azers' → logprob: -11.250901222229004
    6. 'asters' → logprob: -11.250901222229004
    7. 'ases' → logprob: -11.500901222229004
    8. 'ayers' → logprob: -12.000901222229004
    9. '   ' → logprob: -12.250901222229004
    10. 'ase' → logprob: -12.875901222229004

Token 618: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4747312366962433
    2. ' =' → logprob: -0.9747312068939209
    3. ':' → logprob: -7.3497314453125
    4. '=[]' → logprob: -11.4747314453125
    5. '[:]' → logprob: -15.0997314453125
    6. ' ' → logprob: -15.3497314453125
    7. ' :' → logprob: -15.8497314453125
    8. '   ' → logprob: -15.9747314453125
    9. '.' → logprob: -16.9747314453125
    10. '  ' → logprob: -17.5997314453125

Token 619: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -2.47495681833243e-05
    2. ' []' → logprob: -11.000024795532227
    3. '[' → logprob: -12.250024795532227
    4. '[]
' → logprob: -13.000024795532227
    5. '[]}' → logprob: -14.250024795532227
    6. '[]

' → logprob: -15.625024795532227
    7. '[])' → logprob: -17.000024795532227
    8. '[]"' → logprob: -17.625024795532227
    9. 'list' → logprob: -17.750024795532227
    10. '[],' → logprob: -18.125024795532227

Token 620: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006832706276327372
    2. '    
' → logprob: -5.506832599639893
    3. '
' → logprob: -6.381832599639893
    4. ' def' → logprob: -7.631832599639893
    5. 'def' → logprob: -8.25683307647705
    6. '<|end|>' → logprob: -9.00683307647705
    7. ' 
' → logprob: -9.38183307647705
    8. '        
' → logprob: -9.50683307647705
    9. '<|end|>' → logprob: -11.88183307647705
    10. '       ' → logprob: -12.63183307647705

Token 621: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10139878839254379
    2. 'def' (adapté à ' def') → logprob: -2.6013987064361572
    3. ' def' → logprob: -3.8513987064361572
    4. '<|end|>' → logprob: -7.726398944854736
    5. '    
' → logprob: -8.476398468017578
    6. '
' → logprob: -8.601398468017578
    7. ' ' → logprob: -9.601398468017578
    8. '<|end|>' → logprob: -10.851398468017578
    9. '	def' → logprob: -11.101398468017578
    10. '  ' → logprob: -11.101398468017578

Token 622: ' add' (ID: 1147)
  Prédit: 'add'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -0.3486841022968292
    2. ' add' → logprob: -1.2236840724945068
    3. '_add' → logprob: -9.473684310913086
    4. 'clear' → logprob: -9.723684310913086
    5. 'can' → logprob: -10.223684310913086
    6. 'def' → logprob: -11.098684310913086
    7. ' clear' → logprob: -11.473684310913086
    8. ' can' → logprob: -11.973684310913086
    9. 'is' → logprob: -12.348684310913086
    10. ' safe' → logprob: -12.473684310913086

Token 623: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -0.00021438424300868064
    2. '(self' → logprob: -8.500214576721191
    3. '_line' → logprob: -12.625214576721191
    4. 'laser' → logprob: -12.750214576721191
    5. '_' → logprob: -12.875214576721191
    6. 'Laser' → logprob: -14.500214576721191
    7. '_layer' → logprob: -14.875214576721191
    8. '   ' → logprob: -15.125214576721191
    9. '(l' → logprob: -15.375214576721191
    10. '(' → logprob: -15.625214576721191

Token 624: 'aser' (ID: 18231)
  Prédit: 'aser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aser' → logprob: -0.00030078491545282304
    2. 'a' → logprob: -9.375300407409668
    3. 'as' → logprob: -9.375300407409668
    4. 'ase' → logprob: -10.000300407409668
    5. 'ine' → logprob: -11.250300407409668
    6. '_' → logprob: -11.375300407409668
    7. '   ' → logprob: -11.500300407409668
    8. 'azer' → logprob: -12.000300407409668
    9. 'inear' → logprob: -12.125300407409668
    10. '#' → logprob: -12.250300407409668

Token 625: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.2200749754119897e-06
    2. '(' → logprob: -13.125001907348633
    3. 'self' → logprob: -16.375001907348633
    4. '(
' → logprob: -17.875001907348633
    5. ' (' → logprob: -18.000001907348633
    6. '   ' → logprob: -18.125001907348633
    7. '(s' → logprob: -18.250001907348633
    8. '(sel' → logprob: -19.875001907348633
    9. 'def' → logprob: -20.000001907348633
    10. '=self' → logprob: -20.500001907348633

Token 626: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11337612569332123
    2. ',' → logprob: -2.2383761405944824
    3. '(' → logprob: -8.988375663757324
    4. ' (' → logprob: -9.363375663757324
    5. '(p' → logprob: -9.363375663757324
    6. 'self' → logprob: -9.363375663757324
    7. ')' → logprob: -9.988375663757324
    8. '       ' → logprob: -10.613375663757324
    9. '(l' → logprob: -10.613375663757324
    10. ',self' → logprob: -10.613375663757324

Token 627: ' laser' (ID: 23429)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0019301822176203132
    2. ' p' → logprob: -6.501930236816406
    3. 'self' → logprob: -8.001930236816406
    4. 'laser' → logprob: -9.876930236816406
    5. '   ' → logprob: -10.751930236816406
    6. ' self' → logprob: -11.626930236816406
    7. 'point' → logprob: -13.001930236816406
    8. 'line' → logprob: -13.501930236816406
    9. ' laser' → logprob: -13.751930236816406
    10. '           ' → logprob: -13.751930236816406

Token 628: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5773853063583374
    2. ':' → logprob: -1.3273853063583374
    3. '(self' → logprob: -2.202385425567627
    4. ')' → logprob: -3.952385425567627
    5. 'self' → logprob: -4.077385425567627
    6. ',' → logprob: -4.202385425567627
    7. '):
' → logprob: -4.702385425567627
    8. '       ' → logprob: -6.327385425567627
    9. '   ' → logprob: -7.327385425567627
    10. ' self' → logprob: -9.827384948730469

Token 629: ' Laser' (ID: 49648)
  Prédit: 'Laser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Laser' → logprob: -0.002205451251938939
    2. ' Laser' → logprob: -6.7522053718566895
    3. 'laser' → logprob: -7.7522053718566895
    4. ')' → logprob: -8.127205848693848
    5. ' laser' → logprob: -8.127205848693848
    6. ')L' → logprob: -11.877205848693848
    7. '):' → logprob: -13.127205848693848
    8. '):
' → logprob: -13.377205848693848
    9. 'L' → logprob: -13.752205848693848
    10. '...' → logprob: -14.627205848693848

Token 630: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.8703310489654541
    2. '):
' → logprob: -1.120331048965454
    3. ')' → logprob: -1.370331048965454
    4. '):
' → logprob: -7.495330810546875
    5. ')->' → logprob: -8.495330810546875
    6. '   ' → logprob: -8.870330810546875
    7. '       ' → logprob: -9.745330810546875
    8. ',' → logprob: -11.245330810546875
    9. '):

' → logprob: -11.620330810546875
    10. ':' → logprob: -12.495330810546875

Token 631: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012088033836334944
    2. ' self' → logprob: -6.876208782196045
    3. 'self' → logprob: -9.001209259033203
    4. '   ' → logprob: -10.376209259033203
    5. '	self' → logprob: -11.751209259033203
    6. '```' → logprob: -12.001209259033203
    7. '(self' → logprob: -13.501209259033203
    8. '        
' → logprob: -13.876209259033203
    9. '	' → logprob: -14.001209259033203
    10. '<|end|>' → logprob: -14.251209259033203

Token 632: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0025512888096272945
    2. '       ' → logprob: -6.002551078796387
    3. ' self' → logprob: -9.502551078796387
    4. '	self' → logprob: -14.127551078796387
    5. '   ' → logprob: -15.502551078796387
    6. '(self' → logprob: -18.252552032470703
    7. '	' → logprob: -19.877552032470703
    8. '[self' → logprob: -20.252552032470703
    9. '﻿' → logprob: -21.252552032470703
    10. '```' → logprob: -21.252552032470703

Token 633: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -4.084206375409849e-05
    2. '.' → logprob: -10.125041007995605
    3. '.s' → logprob: -14.750041007995605
    4. ' .' → logprob: -15.875041007995605
    5. ').' → logprob: -16.87504005432129
    6. '.lo' → logprob: -17.37504005432129
    7. '.la' → logprob: -17.50004005432129
    8. '._' → logprob: -17.50004005432129
    9. '.ll' → logprob: -17.62504005432129
    10. 's' → logprob: -17.75004005432129

Token 634: 'asers' (ID: 74351)
  Prédit: 'asers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asers' → logprob: -7.703443770878948e-06
    2. 'as' → logprob: -12.000007629394531
    3. 'aser' → logprob: -14.500007629394531
    4. 'asters' → logprob: -14.875007629394531
    5. 'las' → logprob: -15.125007629394531
    6. '   ' → logprob: -16.37500762939453
    7. 'ases' → logprob: -16.37500762939453
    8. 'azers' → logprob: -16.75000762939453
    9. ' lasers' → logprob: -17.12500762939453
    10. '       ' → logprob: -17.87500762939453

Token 635: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008627340197563171
    2. '.' → logprob: -4.758627414703369
    3. '.app' → logprob: -12.008626937866211
    4. '.ap' → logprob: -12.508626937866211
    5. '.extend' → logprob: -13.258626937866211
    6. '.add' → logprob: -14.883626937866211
    7. 'append' → logprob: -15.008626937866211
    8. ').' → logprob: -15.383626937866211
    9. ' .' → logprob: -16.25862693786621
    10. '.Append' → logprob: -16.63362693786621

Token 636: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -1.5094070477061905e-05
    2. '(' → logprob: -11.125015258789062
    3. 'laser' → logprob: -15.625015258789062
    4. '((' → logprob: -18.125015258789062
    5. '(
' → logprob: -18.500015258789062
    6. '	l' → logprob: -19.125015258789062
    7. '(ls' → logprob: -19.125015258789062
    8. ')' → logprob: -19.250015258789062
    9. ' (' → logprob: -19.375015258789062
    10. 'l' → logprob: -19.375015258789062

Token 637: 'aser' (ID: 18231)
  Prédit: 'aser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aser' → logprob: -0.00031091354321688414
    2. 'laser' → logprob: -8.125310897827148
    3. 'as' → logprob: -12.375310897827148
    4. 'a' → logprob: -13.125310897827148
    5. 'ase' → logprob: -13.375310897827148
    6. '[' → logprob: -13.875310897827148
    7. ')' → logprob: -14.000310897827148
    8. '   ' → logprob: -14.125310897827148
    9. 'Laser' → logprob: -14.250310897827148
    10. 'ser' → logprob: -14.250310897827148

Token 638: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.749814019713085e-06
    2. '<|end|>' → logprob: -12.375006675720215
    3. '   ' → logprob: -14.125006675720215
    4. ')
' → logprob: -14.250006675720215
    5. ')return' → logprob: -14.750006675720215
    6. ' )' → logprob: -15.750006675720215
    7. '()' → logprob: -16.00000762939453
    8. '())' → logprob: -16.50000762939453
    9. '       ' → logprob: -16.75000762939453
    10. '}' → logprob: -16.87500762939453

Token 639: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011827271664515138
    2. '
' → logprob: -7.126182556152344
    3. '    
' → logprob: -8.626182556152344
    4. 'def' → logprob: -8.751182556152344
    5. '<|end|>' → logprob: -10.876182556152344
    6. '  ' → logprob: -12.501182556152344
    7. '```' → logprob: -12.626182556152344
    8. ' def' → logprob: -12.751182556152344
    9. '        
' → logprob: -12.876182556152344
    10. '  
' → logprob: -13.001182556152344

Token 640: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.08268509805202484
    2. '   ' → logprob: -2.5826849937438965
    3. ' def' → logprob: -5.5826849937438965
    4. '	def' → logprob: -10.707685470581055
    5. '```' → logprob: -13.582685470581055
    6. 'from' → logprob: -14.207685470581055
    7. '  ' → logprob: -14.707685470581055
    8. ' ' → logprob: -14.707685470581055
    9. '<|end|>' → logprob: -15.832685470581055
    10. '
' → logprob: -16.457685470581055

Token 641: ' _' (ID: 1175)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' can' → logprob: -1.3741028308868408
    2. 'can' → logprob: -1.3741028308868408
    3. ' safe' → logprob: -1.8741028308868408
    4. 'def' → logprob: -1.9991028308868408
    5. ' is' → logprob: -2.624102830886841
    6. ' def' → logprob: -2.749102830886841
    7. 'is' → logprob: -2.999102830886841
    8. 'safe' → logprob: -4.374102592468262
    9. 'clear' → logprob: -6.249102592468262
    10. ' clear' → logprob: -6.749102592468262

Token 642: 'point' (ID: 4859)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.7483731508255005
    2. 'is' → logprob: -1.6233731508255005
    3. 'point' → logprob: -2.123373031616211
    4. 'safe' → logprob: -2.873373031616211
    5. 'clear' → logprob: -2.873373031616211
    6. 'check' → logprob: -3.498373031616211
    7. 'circle' → logprob: -4.498373031616211
    8. 'possible' → logprob: -4.873373031616211
    9. 'has' → logprob: -5.248373031616211
    10. 'points' → logprob: -5.748373031616211

Token 643: '_valid' (ID: 23321)
  Prédit: '_inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_inside' → logprob: -0.36187878251075745
    2. 's' → logprob: -2.4868788719177246
    3. '_in' → logprob: -2.4868788719177246
    4. '_over' → logprob: -3.2368788719177246
    5. '_is' → logprob: -3.3618788719177246
    6. '_with' → logprob: -3.9868788719177246
    7. '_safe' → logprob: -3.9868788719177246
    8. '_ne' → logprob: -5.486878871917725
    9. '_at' → logprob: -5.861878871917725
    10. '_on' → logprob: -5.861878871917725

Token 644: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.2246291337069124e-05
    2. '(' → logprob: -10.750021934509277
    3. ' (' → logprob: -15.125021934509277
    4. 'self' → logprob: -15.250021934509277
    5. '_(' → logprob: -15.625021934509277
    6. '(s' → logprob: -16.250022888183594
    7. '(sel' → logprob: -17.875022888183594
    8. '   ' → logprob: -18.250022888183594
    9. '_point' → logprob: -18.500022888183594
    10. ' self' → logprob: -18.625022888183594

Token 645: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1340574324131012
    2. '(self' → logprob: -2.2590575218200684
    3. 'self' → logprob: -3.8840575218200684
    4. ')' → logprob: -8.75905704498291
    5. ' self' → logprob: -9.00905704498291
    6. '   ' → logprob: -10.50905704498291
    7. ')(' → logprob: -10.50905704498291
    8. ' ,' → logprob: -10.63405704498291
    9. ',self' → logprob: -10.63405704498291
    10. '       ' → logprob: -11.00905704498291

Token 646: ' point' (ID: 2438)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0034761743154376745
    2. ' self' → logprob: -6.128476142883301
    3. 'p' → logprob: -7.378476142883301
    4. '       ' → logprob: -7.628476142883301
    5. 'point' → logprob: -9.5034761428833
    6. '   ' → logprob: -9.8784761428833
    7. 'x' → logprob: -10.6284761428833
    8. ')' → logprob: -11.8784761428833
    9. '           ' → logprob: -12.3784761428833
    10. '(self' → logprob: -12.6284761428833

Token 647: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07056739181280136
    2. '):' → logprob: -2.8205673694610596
    3. ')' → logprob: -5.070567607879639
    4. ',' → logprob: -7.195567607879639
    5. '   ' → logprob: -7.695567607879639
    6. 'self' → logprob: -7.820567607879639
    7. '):
' → logprob: -7.945567607879639
    8. '       ' → logprob: -8.94556713104248
    9. '(self' → logprob: -9.44556713104248
    10. ' ):' → logprob: -10.44556713104248

Token 648: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.2659587264060974
    2. 'self' → logprob: -1.7659587860107422
    3. ' self' → logprob: -3.515958786010742
    4. ' Point' → logprob: -3.640958786010742
    5. ')' → logprob: -5.390958786010742
    6. '   ' → logprob: -7.390958786010742
    7. 'point' → logprob: -7.765958786010742
    8. '):' → logprob: -8.015958786010742
    9. ' point' → logprob: -8.515958786010742
    10. '       ' → logprob: -9.140958786010742

Token 649: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001984146365430206
    2. ',' → logprob: -9.500198364257812
    3. '   ' → logprob: -9.875198364257812
    4. ' )' → logprob: -10.125198364257812
    5. '):' → logprob: -10.500198364257812
    6. '       ' → logprob: -12.875198364257812
    7. '):
' → logprob: -14.125198364257812
    8. ':' → logprob: -14.625198364257812
    9. ',)' → logprob: -15.500198364257812
    10. ')->' → logprob: -15.750198364257812

Token 650: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.6608787775039673
    2. ' ->' → logprob: -1.2858787775039673
    3. ':' → logprob: -1.9108787775039673
    4. ')' → logprob: -3.2858786582946777
    5. ')->' → logprob: -4.035878658294678
    6. '       ' → logprob: -5.910878658294678
    7. '   ' → logprob: -7.410878658294678
    8. '):' → logprob: -7.910878658294678
    9. ',' → logprob: -8.785879135131836
    10. '()->' → logprob: -8.910879135131836

Token 651: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.002491118386387825
    2. ' bool' → logprob: -6.002490997314453
    3. 'None' → logprob: -12.752490997314453
    4. '(bool' → logprob: -12.877490997314453
    5. '<bool' → logprob: -13.127490997314453
    6. 'True' → logprob: -13.377490997314453
    7. 'Point' → logprob: -13.377490997314453
    8. '	bool' → logprob: -13.502490997314453
    9. 'float' → logprob: -13.627490997314453
    10. '   ' → logprob: -13.752490997314453

Token 652: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0470016784965992
    2. '       ' → logprob: -3.547001600265503
    3. '(self' → logprob: -4.797001838684082
    4. ':
' → logprob: -5.422001838684082
    5. '):' → logprob: -5.797001838684082
    6. '):
' → logprob: -7.797001838684082
    7. '   ' → logprob: -8.172001838684082
    8. ')' → logprob: -8.297001838684082
    9. ',' → logprob: -9.422001838684082
    10. '<|end|>' → logprob: -9.547001838684082

Token 653: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.6286106983898208e-05
    2. 'return' → logprob: -11.875016212463379
    3. ' return' → logprob: -11.875016212463379
    4. ' if' → logprob: -13.750016212463379
    5. '   ' → logprob: -14.500016212463379
    6. 'if' → logprob: -15.875016212463379
    7. '#' → logprob: -16.375017166137695
    8. '```' → logprob: -16.375017166137695
    9. '           ' → logprob: -16.500017166137695
    10. ' for' → logprob: -16.625017166137695

Token 654: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10410292446613312
    2. 'return' → logprob: -2.354102849960327
    3. 'if' → logprob: -6.104103088378906
    4. ' return' → logprob: -6.604103088378906
    5. '0' → logprob: -8.979103088378906
    6. ' if' → logprob: -9.354103088378906
    7. 'x' → logprob: -10.229103088378906
    8. '   ' → logprob: -10.979103088378906
    9. '
' → logprob: -11.229103088378906
    10. '#' (adapté à ' #') → logprob: -12.104103088378906

Token 655: ' Check' (ID: 6208)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.20303137600421906
    2. '0' → logprob: -2.578031301498413
    3. 'if' → logprob: -2.578031301498413
    4. ' return' → logprob: -4.203031539916992
    5. '       ' → logprob: -4.328031539916992
    6. '   ' → logprob: -6.703031539916992
    7. 'x' → logprob: -6.953031539916992
    8. ' if' → logprob: -7.078031539916992
    9. '#' → logprob: -7.828031539916992
    10. ' ' → logprob: -9.203031539916992

Token 656: ' machine' (ID: 7342)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00924077257514
    2. ' ' → logprob: -5.259240627288818
    3. '   ' → logprob: -6.009240627288818
    4. '       ' → logprob: -6.884240627288818
    5. 'return' → logprob: -8.134241104125977
    6. ' return' → logprob: -9.134241104125977
    7. '(' → logprob: -9.509241104125977
    8. '  ' → logprob: -11.384241104125977
    9. ' (' → logprob: -11.384241104125977
    10. 'if' → logprob: -12.134241104125977

Token 657: ' fits' (ID: 23440)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.5196622610092163
    2. 'return' → logprob: -1.7696622610092163
    3. 'def' → logprob: -1.8946622610092163
    4. '0' → logprob: -1.8946622610092163
    5. '       ' → logprob: -2.519662380218506
    6. '   ' → logprob: -2.894662380218506
    7. '.x' → logprob: -3.269662380218506
    8. ' return' → logprob: -3.644662380218506
    9. 'radius' → logprob: -3.769662380218506
    10. 's' → logprob: -3.894662380218506

Token 658: ' entirely' (ID: 19449)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6381284594535828
    2. ' in' → logprob: -2.2631285190582275
    3. ' if' → logprob: -2.3881285190582275
    4. '       ' → logprob: -2.5131285190582275
    5. ' inside' → logprob: -2.7631285190582275
    6. 'and' → logprob: -3.5131285190582275
    7. ' within' → logprob: -3.7631285190582275
    8. ',' → logprob: -4.013128280639648
    9. '   ' → logprob: -4.513128280639648
    10. ' at' → logprob: -4.888128280639648

Token 659: ' inside' (ID: 6772)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9307835102081299
    2. ' in' → logprob: -1.3057835102081299
    3. ' at' → logprob: -2.30578351020813
    4. 'in' → logprob: -2.68078351020813
    5. ' and' → logprob: -2.80578351020813
    6. ' if' → logprob: -3.18078351020813
    7. 'and' → logprob: -4.180783271789551
    8. ',' → logprob: -4.555783271789551
    9. ' inside' → logprob: -5.180783271789551
    10. ' self' → logprob: -5.305783271789551

Token 660: ' screen' (ID: 6188)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7349413633346558
    2. ' return' → logprob: -1.9849413633346558
    3. '0' → logprob: -2.1099414825439453
    4. 'return' → logprob: -2.2349414825439453
    5. ' if' → logprob: -3.1099414825439453
    6. 'self' → logprob: -3.4849414825439453
    7. ' self' → logprob: -3.6099414825439453
    8. ' (' → logprob: -4.359941482543945
    9. 'point' → logprob: -5.109941482543945
    10. ' and' → logprob: -5.234941482543945

Token 661: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00022237090161070228
    2. 'return' → logprob: -8.750222206115723
    3. ' return' → logprob: -10.375222206115723
    4. ',' → logprob: -10.875222206115723
    5. ' if' → logprob: -12.250222206115723
    6. ' and' → logprob: -12.500222206115723
    7. '   ' → logprob: -13.000222206115723
    8. '           ' → logprob: -13.875222206115723
    9. ':' → logprob: -14.625222206115723
    10. 'if' → logprob: -15.500222206115723

Token 662: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0012203442165628076
    2. 'return' → logprob: -7.376220226287842
    3. ' return' → logprob: -7.876220226287842
    4. ' if' → logprob: -8.876220703125
    5. '
' → logprob: -10.126220703125
    6. ',' → logprob: -11.376220703125
    7. 'if' → logprob: -12.001220703125
    8. ' and' → logprob: -12.626220703125
    9. 'x' → logprob: -12.751220703125
    10. '   ' → logprob: -13.251220703125

Token 663: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.32188400626182556
    2. '       ' → logprob: -1.321884036064148
    3. ' return' → logprob: -4.9468841552734375
    4. 'if' → logprob: -7.1968841552734375
    5. 'margin' → logprob: -8.321884155273438
    6. 'x' → logprob: -8.446884155273438
    7. '   ' → logprob: -8.696884155273438
    8. 'r' → logprob: -10.446884155273438
    9. 'min' → logprob: -10.571884155273438
    10. 'xmin' → logprob: -11.321884155273438

Token 664: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.5344328284263611
    2. 'self' → logprob: -1.4094328880310059
    3. '0' → logprob: -2.034432888031006
    4. '(' → logprob: -3.284432888031006
    5. '(
' → logprob: -7.909432888031006
    6. '(point' → logprob: -8.034432411193848
    7. ' (' → logprob: -8.159432411193848
    8. ' self' → logprob: -8.284432411193848
    9. '   ' → logprob: -8.784432411193848
    10. 'point' → logprob: -9.534432411193848

Token 665: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.009153837338089943
    2. '0' → logprob: -5.134153842926025
    3. 'point' → logprob: -5.884153842926025
    4. ' self' → logprob: -8.009153366088867
    5. '(self' → logprob: -9.884153366088867
    6. '   ' → logprob: -10.509153366088867
    7. ' ' → logprob: -11.134153366088867
    8. ' point' → logprob: -12.634153366088867
    9. '(point' → logprob: -13.009153366088867
    10. '(' → logprob: -13.759153366088867

Token 666: '.radius' (ID: 73491)
  Prédit: '.radius'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.radius' → logprob: -0.00024429336190223694
    2. 'radius' → logprob: -8.375244140625
    3. '.' → logprob: -12.250244140625
    4. '.width' → logprob: -12.375244140625
    5. '.r' → logprob: -13.375244140625
    6. '.x' → logprob: -14.125244140625
    7. '._' → logprob: -14.750244140625
    8. ' .' → logprob: -14.875244140625
    9. ' radius' → logprob: -15.250244140625
    10. '.rad' → logprob: -15.250244140625

Token 667: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.001389400800690055
    2. ' <=' → logprob: -6.626389503479004
    3. '+' → logprob: -9.751389503479004
    4. '<' → logprob: -12.751389503479004
    5. '```' → logprob: -14.001389503479004
    6. '*' → logprob: -14.251389503479004
    7. ')<=' → logprob: -14.876389503479004
    8. '[' → logprob: -16.376388549804688
    9. '   ' → logprob: -16.626388549804688
    10. ' ' → logprob: -16.626388549804688

Token 668: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.0011708177626132965
    2. ' point' → logprob: -6.751170635223389
    3. '   ' → logprob: -15.376171112060547
    4. '(point' → logprob: -16.251171112060547
    5. 'points' → logprob: -16.876171112060547
    6. ' ' → logprob: -16.876171112060547
    7. '	point' → logprob: -17.251171112060547
    8. '       ' → logprob: -17.501171112060547
    9. 'p' → logprob: -17.626171112060547
    10. '```' → logprob: -17.751171112060547

Token 669: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -8.061054359131958e-06
    2. '.' → logprob: -11.875007629394531
    3. ' .' → logprob: -13.875007629394531
    4. 'x' → logprob: -16.62500762939453
    5. ').' → logprob: -17.50000762939453
    6. '   ' → logprob: -19.62500762939453
    7. '}.' → logprob: -20.25000762939453
    8. '
' → logprob: -20.37500762939453
    9. '.y' → logprob: -20.62500762939453
    10. '.
' → logprob: -20.87500762939453

Token 670: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.02360881119966507
    2. ' <=' → logprob: -3.773608922958374
    3. 'and' → logprob: -8.148609161376953
    4. ')' → logprob: -10.023609161376953
    5. ' and' → logprob: -10.523609161376953
    6. 'le' → logprob: -14.273609161376953
    7. ')<=' → logprob: -14.523609161376953
    8. '       ' → logprob: -14.648609161376953
    9. '<' → logprob: -14.773609161376953
    10. '   ' → logprob: -15.523609161376953

Token 671: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0011997550027444959
    2. ' self' → logprob: -6.751199722290039
    3. '(self' → logprob: -10.626199722290039
    4. '       ' → logprob: -12.251199722290039
    5. '
' → logprob: -15.501199722290039
    6. '           ' → logprob: -16.37619972229004
    7. '   ' → logprob: -16.62619972229004
    8. '[self' → logprob: -17.12619972229004
    9. '=self' → logprob: -17.50119972229004
    10. '         ' → logprob: -17.87619972229004

Token 672: '.width' (ID: 11038)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.014309346675872803
    2. 'width' → logprob: -4.264309406280518
    3. ' self' → logprob: -8.88930892944336
    4. '.width' → logprob: -12.26430892944336
    5. ' width' → logprob: -13.38930892944336
    6. '(self' → logprob: -13.76430892944336
    7. '
' → logprob: -15.38930892944336
    8. '   ' → logprob: -16.13930892944336
    9. '=self' → logprob: -16.13930892944336
    10. '       ' → logprob: -16.63930892944336

Token 673: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.2519362270832062
    2. '-' → logprob: -1.5019361972808838
    3. ' ' → logprob: -12.376935958862305
    4. '   ' → logprob: -13.501935958862305
    5. '-self' → logprob: -13.501935958862305
    6. '  ' → logprob: -17.126935958862305
    7. ' ' → logprob: -17.251935958862305
    8. ')' → logprob: -17.751935958862305
    9. '-
' → logprob: -18.001935958862305
    10. '−' → logprob: -18.126935958862305

Token 674: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006716079078614712
    2. ' self' → logprob: -5.006716251373291
    3. '       ' → logprob: -15.006715774536133
    4. '(self' → logprob: -16.006715774536133
    5. '   ' → logprob: -16.631715774536133
    6. ' ' → logprob: -16.756715774536133
    7. '           ' → logprob: -17.381715774536133
    8. '	self' → logprob: -18.006715774536133
    9. '[self' → logprob: -18.506715774536133
    10. '     ' → logprob: -19.006715774536133

Token 675: '.radius' (ID: 73491)
  Prédit: '.radius'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.radius' → logprob: -0.0031797364354133606
    2. 'radius' → logprob: -5.753179550170898
    3. ' radius' → logprob: -13.503179550170898
    4. '_radius' → logprob: -14.378179550170898
    5. '.' → logprob: -16.5031795501709
    6. '-radius' → logprob: -17.2531795501709
    7. '_RADIUS' → logprob: -18.0031795501709
    8. 'Radius' → logprob: -18.3781795501709
    9. '.r' → logprob: -19.0031795501709
    10. 'adius' → logprob: -19.3781795501709

Token 676: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.023940930142998695
    2. ')' → logprob: -4.2739410400390625
    3. 'and' → logprob: -4.6489410400390625
    4. ' )' → logprob: -9.273941040039062
    5. '       ' → logprob: -9.773941040039062
    6. '   ' → logprob: -12.773941040039062
    7. ' ' → logprob: -13.148941040039062
    8. '        ' → logprob: -14.148941040039062
    9. '      ' → logprob: -14.398941040039062
    10. '    ' → logprob: -15.023941040039062

Token 677: '
' (ID: 198)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003239624435082078
    2. ' self' → logprob: -6.503239631652832
    3. '(self' → logprob: -7.128239631652832
    4. '       ' → logprob: -7.378239631652832
    5. '              ' → logprob: -8.503239631652832
    6. '          ' → logprob: -10.378239631652832
    7. '0' → logprob: -10.628239631652832
    8. '        ' → logprob: -11.378239631652832
    9. '               ' → logprob: -11.503239631652832
    10. '           ' → logprob: -11.628239631652832

Token 678: '               ' (ID: 506)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4659869372844696
    2. ' self' → logprob: -1.465986967086792
    3. '       ' → logprob: -1.965986967086792
    4. '        ' → logprob: -6.965986728668213
    5. '      ' → logprob: -8.590987205505371
    6. '              ' → logprob: -9.340987205505371
    7. '           ' → logprob: -9.465987205505371
    8. '          ' → logprob: -9.590987205505371
    9. '(self' → logprob: -9.715987205505371
    10. '    ' → logprob: -10.090987205505371

Token 679: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.005246568005532026
    2. ' self' → logprob: -5.255246639251709
    3. '       ' → logprob: -12.25524616241455
    4. '               ' → logprob: -12.50524616241455
    5. '           ' → logprob: -13.25524616241455
    6. '0' → logprob: -14.38024616241455
    7. '(self' → logprob: -14.63024616241455
    8. '   ' → logprob: -14.88024616241455
    9. '              ' → logprob: -15.00524616241455
    10. ' ' → logprob: -15.63024616241455

Token 680: '.radius' (ID: 73491)
  Prédit: '.radius'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.radius' → logprob: -0.00044068231363780797
    2. 'radius' → logprob: -7.75044059753418
    3. '.' → logprob: -12.00044059753418
    4. ' .' → logprob: -13.37544059753418
    5. ' radius' → logprob: -13.75044059753418
    6. '.r' → logprob: -14.25044059753418
    7. 'self' → logprob: -15.75044059753418
    8. '   ' → logprob: -15.87544059753418
    9. '       ' → logprob: -16.75044059753418
    10. ' ' → logprob: -17.50044059753418

Token 681: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.10021303594112396
    2. '<=' → logprob: -2.350213050842285
    3. ' >=' → logprob: -12.350213050842285
    4. '>=' → logprob: -13.225213050842285
    5. ' ' → logprob: -15.850213050842285
    6. ' <' → logprob: -17.22521209716797
    7. ' ' → logprob: -17.72521209716797
    8. ')<=' → logprob: -17.72521209716797
    9. '<' → logprob: -17.85021209716797
    10. ')' → logprob: -17.97521209716797

Token 682: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.2519298195838928
    2. ' point' → logprob: -1.501929759979248
    3. '(point' → logprob: -15.501930236816406
    4. '           ' → logprob: -15.626930236816406
    5. '               ' → logprob: -16.126930236816406
    6. '	point' → logprob: -16.251930236816406
    7. '   ' → logprob: -17.376930236816406
    8. ' ' → logprob: -17.751930236816406
    9. '       ' → logprob: -17.876930236816406
    10. '_point' → logprob: -18.126930236816406

Token 683: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0001940040965564549
    2. '.' → logprob: -8.62519359588623
    3. ' .' → logprob: -11.37519359588623
    4. '.x' → logprob: -12.75019359588623
    5. 'y' → logprob: -16.625194549560547
    6. '   ' → logprob: -19.625194549560547
    7. '.z' → logprob: -19.750194549560547
    8. ' ' → logprob: -19.750194549560547
    9. '..' → logprob: -20.000194549560547
    10. '.
' → logprob: -20.125194549560547

Token 684: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.07889155298471451
    2. '<=' → logprob: -2.5788915157318115
    3. ' ' → logprob: -14.82889175415039
    4. '               ' → logprob: -15.20389175415039
    5. '           ' → logprob: -15.45389175415039
    6. ')<=' → logprob: -15.57889175415039
    7. ' <=",' → logprob: -15.82889175415039
    8. '<' → logprob: -16.07889175415039
    9. ' <' → logprob: -16.20389175415039
    10. ' ' → logprob: -16.45389175415039

Token 685: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.016046686097979546
    2. ' self' → logprob: -4.141046524047852
    3. '               ' → logprob: -12.516046524047852
    4. '           ' → logprob: -12.641046524047852
    5. '       ' → logprob: -13.516046524047852
    6. '(self' → logprob: -13.766046524047852
    7. '   ' → logprob: -14.141046524047852
    8. ' ' → logprob: -14.641046524047852
    9. '                   ' → logprob: -15.141046524047852
    10. 'point' → logprob: -15.266046524047852

Token 686: '.height' (ID: 11682)
  Prédit: '.height'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.height' → logprob: -0.07268277555704117
    2. 'height' → logprob: -2.8226828575134277
    3. 'self' → logprob: -4.572682857513428
    4. '_height' → logprob: -8.82268238067627
    5. ' height' → logprob: -9.44768238067627
    6. ' self' → logprob: -9.94768238067627
    7. ' ' → logprob: -10.82268238067627
    8. '   ' → logprob: -11.57268238067627
    9. '-height' → logprob: -11.94768238067627
    10. '.' → logprob: -12.19768238067627

Token 687: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.014173032715916634
    2. '-' → logprob: -4.2641730308532715
    3. ' ' → logprob: -11.88917350769043
    4. '   ' → logprob: -13.63917350769043
    5. '               ' → logprob: -14.88917350769043
    6. '       ' → logprob: -15.26417350769043
    7. ' ' → logprob: -15.76417350769043
    8. '  ' → logprob: -15.88917350769043
    9. '           ' → logprob: -15.88917350769043
    10. '-self' → logprob: -16.38917350769043

Token 688: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.661626634420827e-05
    2. ' self' → logprob: -9.375086784362793
    3. '               ' → logprob: -13.500086784362793
    4. '           ' → logprob: -15.500086784362793
    5. '       ' → logprob: -16.500085830688477
    6. '(self' → logprob: -16.875085830688477
    7. '                   ' → logprob: -17.375085830688477
    8. '   ' → logprob: -18.375085830688477
    9. '[self' → logprob: -18.375085830688477
    10. '             ' → logprob: -18.625085830688477

Token 689: '.radius' (ID: 73491)
  Prédit: '.radius'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.radius' → logprob: -0.0006595384911634028
    2. 'radius' → logprob: -8.000659942626953
    3. 'self' → logprob: -8.125659942626953
    4. '_radius' → logprob: -10.875659942626953
    5. '.r' → logprob: -12.500659942626953
    6. ' radius' → logprob: -13.375659942626953
    7. '.' → logprob: -13.875659942626953
    8. '.self' → logprob: -14.250659942626953
    9. '.height' → logprob: -14.500659942626953
    10. '.y' → logprob: -14.500659942626953

Token 690: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.840432565193623e-05
    2. ' )' → logprob: -9.750088691711426
    3. '       ' → logprob: -10.875088691711426
    4. ')
' → logprob: -11.625088691711426
    5. ' and' → logprob: -14.625088691711426
    6. '   ' → logprob: -14.625088691711426
    7. '))' → logprob: -15.250088691711426
    8. ')

' → logprob: -15.500088691711426
    9. '())' → logprob: -15.750088691711426
    10. ')return' → logprob: -16.25008773803711

Token 691: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00030578780570067465
    2. '<|end|>' → logprob: -8.125306129455566
    3. '<|end|>' → logprob: -12.750306129455566
    4. '
' → logprob: -12.750306129455566
    5. '       ' → logprob: -13.625306129455566
    6. '    
' → logprob: -14.125306129455566
    7. 'def' → logprob: -14.625306129455566
    8. '```' → logprob: -15.125306129455566
    9. '   ' → logprob: -15.500306129455566
    10. '        
' → logprob: -15.750306129455566

Token 692: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31362295150756836
    2. 'def' (adapté à ' def') → logprob: -1.3136229515075684
    3. ' def' → logprob: -7.938622951507568
    4. '	def' → logprob: -13.188623428344727
    5. '<|end|>' → logprob: -14.313623428344727
    6. 'from' → logprob: -14.438623428344727
    7. '
' → logprob: -14.813623428344727
    8. '    
' → logprob: -14.938623428344727
    9. ' ' → logprob: -15.563623428344727
    10. 'import' → logprob: -15.688623428344727

Token 693: ' is' (ID: 382)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6783498525619507
    2. 'can' → logprob: -1.0533498525619507
    3. ' def' → logprob: -2.5533499717712402
    4. ' can' → logprob: -3.3033499717712402
    5. 'valid' → logprob: -4.80334997177124
    6. ' safe' → logprob: -4.92834997177124
    7. 'is' → logprob: -5.05334997177124
    8. 'safe' → logprob: -6.05334997177124
    9. ' valid' → logprob: -6.30334997177124
    10. ' is' → logprob: -6.55334997177124

Token 694: '_safe' (ID: 87847)
  Prédit: '_safe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_safe' → logprob: -0.09482041001319885
    2. '_point' → logprob: -3.719820499420166
    3. '_position' → logprob: -3.719820499420166
    4. 'safe' → logprob: -4.469820499420166
    5. '_valid' → logprob: -4.844820499420166
    6. '_' → logprob: -5.219820499420166
    7. '_inside' → logprob: -5.469820499420166
    8. '_clear' → logprob: -5.719820499420166
    9. '_possible' → logprob: -5.844820499420166
    10. '_access' → logprob: -6.344820499420166

Token 695: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.368984107510187e-05
    2. '(' → logprob: -11.250033378601074
    3. '_point' → logprob: -11.500033378601074
    4. '_position' → logprob: -12.875033378601074
    5. '_at' → logprob: -13.000033378601074
    6. '   ' → logprob: -13.000033378601074
    7. '_for' → logprob: -13.875033378601074
    8. '_to' → logprob: -13.875033378601074
    9. '_(' → logprob: -15.375033378601074
    10. '_from' → logprob: -15.375033378601074

Token 696: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.05611918866634369
    2. ',' → logprob: -2.931119203567505
    3. 'self' → logprob: -7.056118965148926
    4. ')' → logprob: -9.431118965148926
    5. '(' → logprob: -9.431118965148926
    6. '       ' → logprob: -9.556118965148926
    7. ')(' → logprob: -10.431118965148926
    8. '_point' → logprob: -10.681118965148926
    9. '   ' → logprob: -10.806118965148926
    10. ',self' → logprob: -10.806118965148926

Token 697: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.3607916235923767
    2. 'self' → logprob: -1.3607916831970215
    3. '       ' → logprob: -3.9857916831970215
    4. ' point' → logprob: -4.7357916831970215
    5. '   ' → logprob: -5.4857916831970215
    6. 'machine' → logprob: -5.7357916831970215
    7. ' self' → logprob: -5.8607916831970215
    8. 'position' → logprob: -5.8607916831970215
    9. 'center' → logprob: -6.1107916831970215
    10. 'c' → logprob: -6.3607916831970215

Token 698: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00041494169272482395
    2. ')' → logprob: -8.625414848327637
    3. '):' → logprob: -9.125414848327637
    4. '   ' → logprob: -9.625414848327637
    5. '       ' → logprob: -10.625414848327637
    6. 'self' → logprob: -11.000414848327637
    7. ',' → logprob: -11.375414848327637
    8. '):
' → logprob: -12.750414848327637
    9. ' :' → logprob: -13.125414848327637
    10. '(self' → logprob: -13.375414848327637

Token 699: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.3868725001811981
    2. ' Point' → logprob: -1.1368725299835205
    3. '   ' → logprob: -14.136872291564941
    4. ' ' → logprob: -14.761872291564941
    5. '	Point' → logprob: -15.261872291564941
    6. '       ' → logprob: -17.011873245239258
    7. '(Point' → logprob: -17.386873245239258
    8. '  ' → logprob: -17.636873245239258
    9. ')' → logprob: -17.886873245239258
    10. '_Point' → logprob: -18.386873245239258

Token 700: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011243985965847969
    2. ',' → logprob: -4.51124382019043
    3. '   ' → logprob: -8.63624382019043
    4. ' )' → logprob: -11.26124382019043
    5. '       ' → logprob: -12.26124382019043
    6. ' ,' → logprob: -15.76124382019043
    7. ':' → logprob: -16.01124382019043
    8. '  ' → logprob: -16.38624382019043
    9. '):' → logprob: -16.38624382019043
    10. ',)' → logprob: -16.38624382019043

Token 701: ' ->' (ID: 2747)
  Prédit: ' ->'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ->' → logprob: -0.1682179570198059
    2. '->' → logprob: -1.9182178974151611
    3. '   ' → logprob: -5.54321813583374
    4. ')' → logprob: -5.91821813583374
    5. '       ' → logprob: -6.79321813583374
    6. ':' → logprob: -8.668217658996582
    7. ':
' → logprob: -11.293217658996582
    8. ' ' → logprob: -11.418217658996582
    9. ')->' → logprob: -11.543217658996582
    10. '()->' → logprob: -12.043217658996582

Token 702: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.0052377874962985516
    2. ' bool' → logprob: -5.255237579345703
    3. '   ' → logprob: -12.755237579345703
    4. ' ' → logprob: -14.755237579345703
    5. 'True' → logprob: -15.380237579345703
    6. '       ' → logprob: -15.880237579345703
    7. '	bool' → logprob: -16.130237579345703
    8. '  ' → logprob: -16.630237579345703
    9. '<bool' → logprob: -16.880237579345703
    10. '    ' → logprob: -17.755237579345703

Token 703: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.7850370407104492
    2. '       ' → logprob: -0.9100370407104492
    3. ':' → logprob: -2.035037040710449
    4. '   ' → logprob: -5.160037040710449
    5. '(' → logprob: -6.410037040710449
    6. ':
' → logprob: -6.535037040710449
    7. 'self' → logprob: -7.410037040710449
    8. ' self' → logprob: -8.03503704071045
    9. 'def' → logprob: -8.28503704071045
    10. ',' → logprob: -8.66003704071045

Token 704: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016368059441447258
    2. ' for' → logprob: -4.1413679122924805
    3. 'for' → logprob: -8.01636791229248
    4. '   ' → logprob: -13.01636791229248
    5. ' return' → logprob: -14.39136791229248
    6. '	for' → logprob: -15.01636791229248
    7. ' if' → logprob: -15.76636791229248
    8. 'return' → logprob: -15.76636791229248
    9. '```' → logprob: -16.141368865966797
    10. '
' → logprob: -16.391368865966797

Token 705: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04064729064702988
    2. '       ' → logprob: -3.290647268295288
    3. ' if' → logprob: -6.415647506713867
    4. 'return' → logprob: -7.040647506713867
    5. 'for' → logprob: -9.915647506713867
    6. 'self' → logprob: -10.290647506713867
    7. '#' → logprob: -13.040647506713867
    8. '   ' → logprob: -13.165647506713867
    9. 'not' → logprob: -13.915647506713867
    10. ' return' → logprob: -13.915647506713867

Token 706: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.007935931906104088
    2. ' not' → logprob: -4.882936000823975
    3. 'any' → logprob: -8.757935523986816
    4. '       ' → logprob: -9.507935523986816
    5. '   ' → logprob: -10.007935523986816
    6. '(not' → logprob: -10.632935523986816
    7. 'self' → logprob: -11.632935523986816
    8. '           ' → logprob: -11.757935523986816
    9. 'point' → logprob: -11.882935523986816
    10. ' any' → logprob: -12.757935523986816

Token 707: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002888682356569916
    2. ' self' → logprob: -8.250288963317871
    3. '(self' → logprob: -10.500288963317871
    4. '   ' → logprob: -17.875288009643555
    5. '
' → logprob: -18.625288009643555
    6. '	self' → logprob: -19.000288009643555
    7. ' ' → logprob: -20.500288009643555
    8. '_self' → logprob: -20.500288009643555
    9. '       ' → logprob: -20.625288009643555
    10. '(' → logprob: -20.625288009643555

Token 708: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: 0.0
    2. '.' → logprob: -17.625
    3. '   ' → logprob: -19.0
    4. '
' → logprob: -19.625
    5. '_point' → logprob: -19.875
    6. '.\' → logprob: -20.25
    7. ' ' → logprob: -20.25
    8. ' .' → logprob: -20.5
    9. ']._' → logprob: -20.5
    10. '->_' → logprob: -21.0

Token 709: 'point' (ID: 4859)
  Prédit: 'point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -4.060365608893335e-05
    2. '_point' → logprob: -10.125041007995605
    3. '(point' → logprob: -15.625041007995605
    4. ' point' → logprob: -15.625041007995605
    5. '.point' → logprob: -16.50004005432129
    6. '	point' → logprob: -18.12504005432129
    7. 'points' → logprob: -18.62504005432129
    8. 'punkt' → logprob: -19.12504005432129
    9. '-point' → logprob: -19.25004005432129
    10. '_' → logprob: -20.12504005432129

Token 710: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -3.173704271830502e-06
    2. 'Valid' → logprob: -13.12500286102295
    3. '_safe' → logprob: -13.87500286102295
    4. '_' → logprob: -16.375003814697266
    5. 'valid' → logprob: -17.000003814697266
    6. ' _' → logprob: -17.500003814697266
    7. '_val' → logprob: -19.250003814697266
    8. '_VALID' → logprob: -19.875003814697266
    9. '_validate' → logprob: -20.500003814697266
    10. ' valid' → logprob: -21.000003814697266

Token 711: '(point' (ID: 46989)
  Prédit: '(point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(point' → logprob: -3.583550642360933e-05
    2. '(' → logprob: -10.250036239624023
    3. '(Point' → logprob: -15.875036239624023
    4. ' (' → logprob: -15.875036239624023
    5. '(p' → logprob: -16.625036239624023
    6. '(
' → logprob: -18.000036239624023
    7. '(points' → logprob: -18.250036239624023
    8. '(

' → logprob: -20.250036239624023
    9. '(line' → logprob: -20.375036239624023
    10. '(piece' → logprob: -20.625036239624023

Token 712: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03843618929386139
    2. '):
' → logprob: -3.2884361743927
    3. ')' → logprob: -8.663435935974121
    4. ' ):' → logprob: -9.163435935974121
    5. '       ' → logprob: -9.413435935974121
    6. ':' → logprob: -11.163435935974121
    7. '   ' → logprob: -11.288435935974121
    8. '):
' → logprob: -12.538435935974121
    9. ' ):
' → logprob: -12.913435935974121
    10. ' or' → logprob: -13.538435935974121

Token 713: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20157286524772644
    2. '           ' → logprob: -1.7015728950500488
    3. ':' → logprob: -10.07657241821289
    4. '
' → logprob: -10.32657241821289
    5. ' return' → logprob: -11.07657241821289
    6. ',' → logprob: -11.32657241821289
    7. 'return' → logprob: -11.45157241821289
    8. '   ' → logprob: -11.82657241821289
    9. ':return' → logprob: -11.95157241821289
    10. '<|end|>' → logprob: -12.07657241821289

Token 714: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.007197550963610411
    2. ' return' → logprob: -5.257197380065918
    3. '           ' → logprob: -6.257197380065918
    4. '       ' → logprob: -10.132197380065918
    5. '
' → logprob: -12.882197380065918
    6. '{return' → logprob: -13.757197380065918
    7. '               ' → logprob: -14.257197380065918
    8. 'False' → logprob: -14.632197380065918
    9. '	return' → logprob: -15.382197380065918
    10. ':return' → logprob: -15.757197380065918

Token 715: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -6.704273118884885e-07
    2. ' False' → logprob: -14.250000953674316
    3. 'True' → logprob: -19.5
    4. 'false' → logprob: -22.25
    5. '(False' → logprob: -22.375
    6. '=False' → logprob: -24.75
    7. 'F' → logprob: -25.125
    8. 'FALSE' → logprob: -25.375
    9. 'None' → logprob: -26.5
    10. '_false' → logprob: -26.875

Token 716: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005387549754232168
    2. '
' → logprob: -5.255387783050537
    3. '        
' → logprob: -9.505387306213379
    4. ' for' → logprob: -10.130387306213379
    5. '<|end|>' → logprob: -11.005387306213379
    6. ',' → logprob: -12.130387306213379
    7. 'for' → logprob: -12.255387306213379
    8. '   ' → logprob: -12.755387306213379
    9. '  
' → logprob: -13.505387306213379
    10. '
' → logprob: -13.505387306213379

Token 717: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005981888971291482
    2. ' for' → logprob: -7.625597953796387
    3. 'for' → logprob: -9.750597953796387
    4. '
' → logprob: -10.750597953796387
    5. '   ' → logprob: -11.000597953796387
    6. '        
' → logprob: -12.125597953796387
    7. '<|end|>' → logprob: -12.250597953796387
    8. '```' → logprob: -14.375597953796387
    9. 'import' → logprob: -14.625597953796387
    10. '           ' → logprob: -14.875597953796387

Token 718: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.002215084619820118
    2. '       ' → logprob: -6.1272149085998535
    3. ' for' → logprob: -10.627215385437012
    4. 'return' → logprob: -12.502215385437012
    5. 'margin' → logprob: -14.252215385437012
    6. '   ' → logprob: -14.502215385437012
    7. 'distance' → logprob: -16.127214431762695
    8. 'safe' → logprob: -16.252214431762695
    9. 'dist' → logprob: -16.377214431762695
    10. '	for' → logprob: -16.377214431762695

Token 719: ' laser' (ID: 23429)
  Prédit: 'laser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'laser' → logprob: -0.0002330992283532396
    2. ' laser' → logprob: -9.000232696533203
    3. 'l' → logprob: -9.250232696533203
    4. 'las' → logprob: -11.250232696533203
    5. 'Laser' → logprob: -16.250232696533203
    6. 'la' → logprob: -16.375232696533203
    7. 'ls' → logprob: -16.875232696533203
    8. '   ' → logprob: -16.875232696533203
    9. 'lens' → logprob: -17.625232696533203
    10. 'lar' → logprob: -17.625232696533203

Token 720: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009762464091181755
    2. 'in' → logprob: -4.634762287139893
    3. 'import' → logprob: -13.38476276397705
    4. 's' → logprob: -13.50976276397705
    5. '	in' → logprob: -13.88476276397705
    6. ' ' → logprob: -14.00976276397705
    7. '_in' → logprob: -14.88476276397705
    8. '_' → logprob: -14.88476276397705
    9. ',' → logprob: -15.38476276397705
    10. ' i' → logprob: -15.63476276397705

Token 721: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.166338137816638e-05
    2. ' self' → logprob: -10.375031471252441
    3. '(self' → logprob: -15.125031471252441
    4. '[self' → logprob: -17.375032424926758
    5. '	self' → logprob: -18.625032424926758
    6. '   ' → logprob: -18.750032424926758
    7. '       ' → logprob: -19.125032424926758
    8. '
' → logprob: -19.250032424926758
    9. '=self' → logprob: -20.625032424926758
    10. '           ' → logprob: -20.750032424926758

Token 722: '.l' (ID: 1000)
  Prédit: '.l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.l' → logprob: -0.0005188359646126628
    2. '.s' → logprob: -7.750518798828125
    3. 's' → logprob: -10.125518798828125
    4. '.' → logprob: -10.625518798828125
    5. 'self' → logprob: -10.750518798828125
    6. '.self' → logprob: -13.625518798828125
    7. ' .' → logprob: -14.000518798828125
    8. '.L' → logprob: -16.375518798828125
    9. '.screen' → logprob: -16.500518798828125
    10. ' self' → logprob: -17.125518798828125

Token 723: 'asers' (ID: 74351)
  Prédit: 'asers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'asers' → logprob: -1.771655115589965e-05
    2. 'as' → logprob: -11.625018119812012
    3. 'aser' → logprob: -13.125018119812012
    4. 'sers' → logprob: -13.250018119812012
    5. 'asters' → logprob: -13.500018119812012
    6. 'ayers' → logprob: -13.750018119812012
    7. 'ases' → logprob: -14.500018119812012
    8. 'azers' → logprob: -14.625018119812012
    9. ' lasers' → logprob: -15.125018119812012
    10. 'las' → logprob: -15.625018119812012

Token 724: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.253902405500412
    2. ':
' → logprob: -1.5039024353027344
    3. '       ' → logprob: -6.253902435302734
    4. '           ' → logprob: -11.128902435302734
    5. ':
' → logprob: -11.378902435302734
    6. '):
' → logprob: -12.753902435302734
    7. '():
' → logprob: -12.753902435302734
    8. '   ' → logprob: -12.878902435302734
    9. ':

' → logprob: -13.003902435302734
    10. ' :
' → logprob: -13.003902435302734

Token 725: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020455787889659405
    2. '   ' → logprob: -6.877045631408691
    3. '           ' → logprob: -7.002045631408691
    4. ' if' → logprob: -9.627045631408691
    5. 'if' → logprob: -11.002045631408691
    6. '	   ' → logprob: -11.752045631408691
    7. '     ' → logprob: -12.377045631408691
    8. '      ' → logprob: -12.502045631408691
    9. '    ' → logprob: -14.002045631408691
    10. '<|end|>' → logprob: -14.252045631408691

Token 726: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.012165233492851257
    2. ' if' → logprob: -4.762165069580078
    3. '       ' → logprob: -5.762165069580078
    4. '           ' → logprob: -7.887165069580078
    5. '   ' → logprob: -10.887165069580078
    6. '
' → logprob: -12.387165069580078
    7. '	if' → logprob: -13.637165069580078
    8. 'If' → logprob: -15.637165069580078
    9. '	   ' → logprob: -16.012165069580078
    10. '```' → logprob: -17.012165069580078

Token 727: ' laser' (ID: 23429)
  Prédit: 'laser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'laser' → logprob: -0.002191660227254033
    2. ' laser' → logprob: -6.127191543579102
    3. 'las' → logprob: -12.252191543579102
    4. '   ' → logprob: -13.502191543579102
    5. 'l' → logprob: -16.7521915435791
    6. '  ' → logprob: -17.0021915435791
    7. 'Laser' → logprob: -17.0021915435791
    8. ' ' → logprob: -17.2521915435791
    9. ' ' → logprob: -17.5021915435791
    10. 'lass' → logprob: -17.5021915435791

Token 728: '.over' (ID: 74455)
  Prédit: '.over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.over' → logprob: -6.20603168499656e-05
    2. '.' → logprob: -9.750061988830566
    3. ' .' → logprob: -13.375061988830566
    4. '.ov' → logprob: -13.375061988830566
    5. '       ' → logprob: -15.750061988830566
    6. '>.' → logprob: -16.125062942504883
    7. '   ' → logprob: -16.125062942504883
    8. ').' → logprob: -16.375062942504883
    9. '.ob' → logprob: -16.750062942504883
    10. '.is' → logprob: -17.375062942504883

Token 729: 'laps' (ID: 177373)
  Prédit: 'laps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'laps' → logprob: -0.018150296062231064
    2. 'aps' → logprob: -4.018150329589844
    3. ' laps' → logprob: -15.518150329589844
    4. 'apses' → logprob: -15.768150329589844
    5. 'l' → logprob: -17.393150329589844
    6. 'lap' → logprob: -17.768150329589844
    7. 'ap' → logprob: -18.143150329589844
    8. ' overlaps' → logprob: -18.143150329589844
    9. 'lapping' → logprob: -18.268150329589844
    10. '(l' → logprob: -19.518150329589844

Token 730: '(point' (ID: 46989)
  Prédit: '(point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(point' → logprob: -0.0001302374730585143
    2. '(' → logprob: -9.000130653381348
    3. '(p' → logprob: -12.375130653381348
    4. ' (' → logprob: -13.750130653381348
    5. '(Point' → logprob: -14.250130653381348
    6. '(
' → logprob: -14.500130653381348
    7. '(points' → logprob: -16.12512969970703
    8. '(line' → logprob: -16.25012969970703
    9. '(c' → logprob: -17.75012969970703
    10. '(part' → logprob: -18.00012969970703

Token 731: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005045388825237751
    2. ' ,' → logprob: -7.625504493713379
    3. ',p' → logprob: -12.250504493713379
    4. '(point' → logprob: -12.250504493713379
    5. '           ' → logprob: -12.875504493713379
    6. 'point' → logprob: -13.625504493713379
    7. ',
' → logprob: -14.375504493713379
    8. ',self' → logprob: -14.625504493713379
    9. ',r' → logprob: -15.000504493713379
    10. '       ' → logprob: -15.500504493713379

Token 732: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0010418595047667623
    2. ' self' → logprob: -6.876041889190674
    3. '           ' → logprob: -12.126041412353516
    4. '       ' → logprob: -13.001041412353516
    5. '(self' → logprob: -14.126041412353516
    6. '
' → logprob: -16.251041412353516
    7. '               ' → logprob: -16.376041412353516
    8. '   ' → logprob: -16.501041412353516
    9. 's' → logprob: -16.501041412353516
    10. '=self' → logprob: -17.001041412353516

Token 733: '.radius' (ID: 73491)
  Prédit: '.radius'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.radius' → logprob: -6.2729995988775045e-06
    2. 'radius' → logprob: -12.000006675720215
    3. '.' → logprob: -16.3750057220459
    4. '.r' → logprob: -17.1250057220459
    5. '.rad' → logprob: -17.5000057220459
    6. ' .' → logprob: -18.0000057220459
    7. '.height' → logprob: -18.7500057220459
    8. ' radius' → logprob: -19.2500057220459
    9. '
' → logprob: -19.8750057220459
    10. '.radio' → logprob: -19.8750057220459

Token 734: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.006203938275575638
    2. '):' → logprob: -5.131204128265381
    3. '           ' → logprob: -8.506203651428223
    4. '       ' → logprob: -10.381203651428223
    5. '):
' → logprob: -10.506203651428223
    6. '               ' → logprob: -12.381203651428223
    7. ' ):
' → logprob: -12.756203651428223
    8. '():
' → logprob: -12.881203651428223
    9. ':
' → logprob: -13.131203651428223
    10. ':' → logprob: -13.756203651428223

Token 735: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0076537118293344975
    2. '           ' → logprob: -4.882653713226318
    3. ' return' → logprob: -10.75765323638916
    4. 'return' → logprob: -10.75765323638916
    5. '                
' → logprob: -13.75765323638916
    6. '                   ' → logprob: -13.75765323638916
    7. '            
' → logprob: -14.25765323638916
    8. '              ' → logprob: -14.38265323638916
    9. '<|end|>' → logprob: -14.88265323638916
    10. ':return' → logprob: -15.13265323638916

Token 736: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02911432459950447
    2. ' return' → logprob: -4.279114246368408
    3. '                   ' → logprob: -4.529114246368408
    4. '               ' → logprob: -5.529114246368408
    5. '                       ' → logprob: -10.404114723205566
    6. '           ' → logprob: -10.404114723205566
    7. '
' → logprob: -11.904114723205566
    8. '	return' → logprob: -12.029114723205566
    9. ':return' → logprob: -13.154114723205566
    10. '   ' → logprob: -13.404114723205566

Token 737: ' False' (ID: 7983)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0032130072358995676
    2. 'False' → logprob: -5.753212928771973
    3. ' True' → logprob: -10.253212928771973
    4. ' False' → logprob: -17.00321388244629
    5. '   ' → logprob: -22.25321388244629
    6. '(True' → logprob: -22.50321388244629
    7. '=True' → logprob: -23.75321388244629
    8. 'true' → logprob: -24.62821388244629
    9. '       ' → logprob: -25.12821388244629
    10. 'Tr' → logprob: -25.25321388244629

Token 738: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.407366916188039e-05
    2. '
' → logprob: -10.375054359436035
    3. 'return' → logprob: -11.625054359436035
    4. '   ' → logprob: -12.000054359436035
    5. ' return' → logprob: -13.375054359436035
    6. '	' → logprob: -13.375054359436035
    7. '           ' → logprob: -13.750054359436035
    8. '      ' → logprob: -13.750054359436035
    9. '        
' → logprob: -14.250054359436035
    10. ',' → logprob: -14.875054359436035

Token 739: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1279553291387856e-05
    2. '   ' → logprob: -12.500011444091797
    3. 'return' → logprob: -12.500011444091797
    4. '           ' → logprob: -13.875011444091797
    5. ' return' → logprob: -13.875011444091797
    6. '      ' → logprob: -14.500011444091797
    7. '
' → logprob: -14.625011444091797
    8. '<|end|>' → logprob: -14.625011444091797
    9. '     ' → logprob: -16.625011444091797
    10. '0' → logprob: -16.625011444091797

Token 740: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006669254507869482
    2. 'return' (adapté à ' return') → logprob: -7.500667095184326
    3. '   ' → logprob: -9.625666618347168
    4. ' return' → logprob: -10.000666618347168
    5. '           ' → logprob: -13.625666618347168
    6. '
' → logprob: -14.125666618347168
    7. '	return' → logprob: -14.875666618347168
    8. '      ' → logprob: -16.000667572021484
    9. '               ' → logprob: -16.500667572021484
    10. 'eturn' → logprob: -17.125667572021484

Token 741: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0005530327325686812
    2. ' True' → logprob: -7.500553131103516
    3. '   ' → logprob: -19.000553131103516
    4. 'Tr' → logprob: -20.250553131103516
    5. '       ' → logprob: -20.250553131103516
    6. 'False' → logprob: -21.750553131103516
    7. 'true' → logprob: -21.875553131103516
    8. '(True' → logprob: -22.625553131103516
    9. '=True' → logprob: -23.375553131103516
    10. '    ' → logprob: -24.375553131103516

Token 742: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 743: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5906029343605042
    2. '<|end|>' → logprob: -1.0906028747558594
    3. '   ' → logprob: -2.2156028747558594
    4. '<|end|>' → logprob: -8.21560287475586
    5. ' def' → logprob: -8.34060287475586
    6. '#' → logprob: -8.84060287475586
    7. '```' → logprob: -9.34060287475586
    8. '
' → logprob: -10.59060287475586
    9. '	def' → logprob: -10.59060287475586
    10. '  ' → logprob: -11.09060287475586

Token 744: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00216441391967237
    2. '<|end|>' → logprob: -6.502164363861084
    3. '   ' → logprob: -7.627164363861084
    4. ' def' → logprob: -9.877164840698242
    5. 'from' → logprob: -10.002164840698242
    6. '#' → logprob: -10.252164840698242
    7. '```' → logprob: -11.002164840698242
    8. '  ' → logprob: -12.252164840698242
    9. ' ' → logprob: -12.377164840698242
    10. 'class' → logprob: -12.627164840698242

Token 745: ' has' (ID: 853)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9607571959495544
    2. 'find' → logprob: -1.0857572555541992
    3. 'safe' → logprob: -2.210757255554199
    4. 'possible' → logprob: -2.335757255554199
    5. 'can' → logprob: -4.460757255554199
    6. 'points' → logprob: -4.960757255554199
    7. 'closest' → logprob: -5.085757255554199
    8. 'max' → logprob: -5.085757255554199
    9. 'valid' → logprob: -5.210757255554199
    10. 'is' → logprob: -5.460757255554199

Token 746: '_safe' (ID: 87847)
  Prédit: '_safe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_safe' → logprob: -0.4421120584011078
    2. '_path' → logprob: -1.1921120882034302
    3. '_point' → logprob: -3.0671119689941406
    4. '_line' → logprob: -6.942111968994141
    5. '_l' → logprob: -6.942111968994141
    6. '_space' → logprob: -7.192111968994141
    7. '_any' → logprob: -7.317111968994141
    8. '_clear' → logprob: -7.442111968994141
    9. '_no' → logprob: -7.817111968994141
    10. '_s' → logprob: -8.06711196899414

Token 747: '_area' (ID: 34097)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.10648141801357269
    2. '_path' → logprob: -2.7314813137054443
    3. '_sp' → logprob: -3.4814813137054443
    4. '_position' → logprob: -5.606481552124023
    5. '_points' → logprob: -7.731481552124023
    6. '_place' → logprob: -7.981481552124023
    7. '_space' → logprob: -8.356481552124023
    8. '_move' → logprob: -9.481481552124023
    9. '_area' → logprob: -9.481481552124023
    10. 'point' → logprob: -9.481481552124023

Token 748: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002821993315592408
    2. '(' → logprob: -5.877821922302246
    3. ' (' → logprob: -11.752821922302246
    4. 'self' → logprob: -12.377821922302246
    5. '(
' → logprob: -12.877821922302246
    6. '   ' → logprob: -14.002821922302246
    7. '(s' → logprob: -14.502821922302246
    8. ' ' → logprob: -15.252821922302246
    9. ' self' → logprob: -15.502821922302246
    10. '
' → logprob: -15.502821922302246

Token 749: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7053753733634949
    2. ',' → logprob: -1.5803754329681396
    3. '(self' → logprob: -1.8303754329681396
    4. 'self' → logprob: -2.0803754329681396
    5. '):
' → logprob: -5.0803751945495605
    6. '):' → logprob: -5.7053751945495605
    7. '       ' → logprob: -5.8303751945495605
    8. '   ' → logprob: -6.3303751945495605
    9. ' self' → logprob: -8.080375671386719
    10. ')->' → logprob: -9.205375671386719

Token 750: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0010281658032909036
    2. '(' → logprob: -7.126028060913086
    3. 'self' → logprob: -8.501028060913086
    4. ' (' → logprob: -11.751028060913086
    5. 'def' → logprob: -12.626028060913086
    6. ' self' → logprob: -12.626028060913086
    7. '   ' → logprob: -13.376028060913086
    8. 's' → logprob: -13.876028060913086
    9. '       ' → logprob: -13.876028060913086
    10. ' ->' → logprob: -15.001028060913086

Token 751: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.04341556131839752
    2. 'bool' → logprob: -3.1684155464172363
    3. ' def' → logprob: -8.668416023254395
    4. ' True' → logprob: -8.793416023254395
    5. '   ' → logprob: -10.668416023254395
    6. ' self' → logprob: -10.793416023254395
    7. '
' → logprob: -11.668416023254395
    8. 'def' → logprob: -11.918416023254395
    9. 'True' → logprob: -12.293416023254395
    10. '(bool' → logprob: -12.418416023254395

Token 752: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0017539531690999866
    2. '       ' → logprob: -6.751753807067871
    3. '(' → logprob: -7.501753807067871
    4. 'self' → logprob: -11.126753807067871
    5. '   ' → logprob: -11.501753807067871
    6. '(
' → logprob: -12.626753807067871
    7. ':' → logprob: -13.626753807067871
    8. ' (' → logprob: -14.001753807067871
    9. ':
' → logprob: -14.376753807067871
    10. ' self' → logprob: -14.626753807067871

Token 753: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005477914237417281
    2. '   ' → logprob: -7.625547885894775
    3. '
' → logprob: -10.750547409057617
    4. '```' → logprob: -11.375547409057617
    5. '        
' → logprob: -12.125547409057617
    6. '           ' → logprob: -12.125547409057617
    7. '#' → logprob: -12.625547409057617
    8. '    
' → logprob: -13.125547409057617
    9. ',' → logprob: -13.250547409057617
    10. ':' → logprob: -13.375547409057617

Token 754: ' #' (ID: 1069)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.3468233048915863
    2. '       ' → logprob: -2.096823215484619
    3. '#' (adapté à ' #') → logprob: -2.846823215484619
    4. 'margin' → logprob: -3.721823215484619
    5. 'grid' → logprob: -3.721823215484619
    6. 'steps' → logprob: -4.096823215484619
    7. 'import' → logprob: -4.346823215484619
    8. 'for' → logprob: -4.471823215484619
    9. 'STEP' → logprob: -4.471823215484619
    10. 'def' → logprob: -5.721823215484619

Token 755: ' To' (ID: 2514)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.8106341361999512
    2. '#' → logprob: -1.1856341361999512
    3. 'steps' → logprob: -3.310634136199951
    4. 'import' → logprob: -3.310634136199951
    5. 'def' → logprob: -3.435634136199951
    6. '       ' → logprob: -3.685634136199951
    7. 'STEP' → logprob: -3.810634136199951
    8. 'for' → logprob: -3.935634136199951
    9. 'margin' → logprob: -3.935634136199951
    10. 'grid' → logprob: -4.060634136199951

Token 756: ' solve' (ID: 17722)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' check' → logprob: -1.5927698612213135
    2. ' find' → logprob: -1.8427698612213135
    3. 'def' → logprob: -1.9677698612213135
    4. '       ' → logprob: -2.2177698612213135
    5. 'check' → logprob: -2.3427698612213135
    6. 'find' → logprob: -2.4677698612213135
    7. ' def' → logprob: -2.9677698612213135
    8. '   ' → logprob: -2.9677698612213135
    9. '    ' → logprob: -4.467769622802734
    10. ' safe' → logprob: -5.092769622802734

Token 757: ' this' (ID: 495)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14168283343315125
    2. 'import' → logprob: -2.5166828632354736
    3. 'def' → logprob: -3.3916828632354736
    4. 'from' → logprob: -5.1416826248168945
    5. '
' → logprob: -6.0166826248168945
    6. ' for' → logprob: -6.3916826248168945
    7. '#' → logprob: -6.6416826248168945
    8. ' import' → logprob: -6.6416826248168945
    9. ' from' → logprob: -6.7666826248168945
    10. '   ' → logprob: -7.1416826248168945

Token 758: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30027344822883606
    2. ':' → logprob: -1.9252734184265137
    3. ',' → logprob: -2.5502734184265137
    4. ':
' → logprob: -4.175273418426514
    5. 'def' → logprob: -5.050273418426514
    6. 'import' → logprob: -5.425273418426514
    7. '#' → logprob: -5.550273418426514
    8. '
' → logprob: -6.425273418426514
    9. 'from' → logprob: -7.300273418426514
    10. '   ' → logprob: -7.550273418426514

Token 759: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9047327637672424
    2. 'import' → logprob: -1.2797327041625977
    3. '       ' → logprob: -2.4047327041625977
    4. ' import' → logprob: -2.7797327041625977
    5. ' step' → logprob: -3.0297327041625977
    6. 'step' → logprob: -3.5297327041625977
    7. ' #' → logprob: -4.029732704162598
    8. ' margin' → logprob: -4.279732704162598
    9. 'from' → logprob: -5.029732704162598
    10. 'grid' → logprob: -5.154732704162598

Token 760: ' want' (ID: 1682)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3696984350681305
    2. 'import' → logprob: -1.744698405265808
    3. ' can' → logprob: -3.3696985244750977
    4. '   ' → logprob: -4.244698524475098
    5. ' def' → logprob: -4.494698524475098
    6. ' could' → logprob: -4.619698524475098
    7. ' will' → logprob: -4.744698524475098
    8. 'will' → logprob: -4.744698524475098
    9. 'can' → logprob: -4.994698524475098
    10. ' need' → logprob: -5.369698524475098

Token 761: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.2697802186012268
    2. ' a' → logprob: -2.894780158996582
    3. 'to' → logprob: -2.894780158996582
    4. 'def' → logprob: -3.019780158996582
    5. '       ' → logprob: -3.519780158996582
    6. '   ' → logprob: -3.894780158996582
    7. 'a' → logprob: -4.394780158996582
    8. ' for' → logprob: -5.144780158996582
    9. ' def' → logprob: -6.269780158996582
    10. 'import' → logprob: -6.769780158996582

Token 762: ' find' (ID: 1646)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.4213069975376129
    2. 'find' → logprob: -1.6713069677352905
    3. 'det' → logprob: -2.54630708694458
    4. 'return' → logprob: -3.92130708694458
    5. 'implement' → logprob: -4.42130708694458
    6. 'import' → logprob: -4.54630708694458
    7. 'try' → logprob: -4.92130708694458
    8. ' check' → logprob: -5.17130708694458
    9. 'def' → logprob: -5.79630708694458
    10. 'expl' → logprob: -5.92130708694458

Token 763: ' any' (ID: 1062)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2713497579097748
    2. 'any' → logprob: -1.6463497877120972
    3. ' any' → logprob: -4.646349906921387
    4. 'at' → logprob: -4.771349906921387
    5. 'if' → logprob: -4.771349906921387
    6. ' a' → logprob: -5.021349906921387
    7. 'some' → logprob: -5.271349906921387
    8. ' at' → logprob: -5.396349906921387
    9. ' if' → logprob: -7.146349906921387
    10. ' some' → logprob: -8.021349906921387

Token 764: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.6747605800628662
    2. ' point' → logprob: -0.7997605800628662
    3. ' safe' → logprob: -3.674760580062866
    4. 'safe' → logprob: -4.674760818481445
    5. 'Point' → logprob: -5.924760818481445
    6. ' Point' → logprob: -6.299760818481445
    7. 'space' → logprob: -7.674760818481445
    8. '_point' → logprob: -7.799760818481445
    9. ' spot' → logprob: -8.549760818481445
    10. ' space' → logprob: -8.799760818481445

Token 765: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4761352837085724
    2. ' on' → logprob: -1.35113525390625
    3. ' that' → logprob: -3.47613525390625
    4. 'in' → logprob: -3.85113525390625
    5. ' within' → logprob: -3.85113525390625
    6. '       ' → logprob: -3.97613525390625
    7. 'on' → logprob: -4.97613525390625
    8. ' with' → logprob: -5.10113525390625
    9. ' inside' → logprob: -5.85113525390625
    10. ' at' → logprob: -6.22613525390625

Token 766: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.258133202791214
    2. 'self' → logprob: -1.5081331729888916
    3. ' the' → logprob: -5.258133411407471
    4. 'Point' → logprob: -7.883133411407471
    5. '       ' → logprob: -8.508132934570312
    6. ' self' → logprob: -8.758132934570312
    7. 'a' → logprob: -9.383132934570312
    8. '(self' → logprob: -10.008132934570312
    9. 'def' → logprob: -10.883132934570312
    10. '(Point' → logprob: -11.133132934570312

Token 767: ' rectangle' (ID: 45808)
  Prédit: 'screen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'screen' → logprob: -0.02663755975663662
    2. 'rectangle' → logprob: -4.276637554168701
    3. 'Screen' → logprob: -4.776637554168701
    4. 'continuous' → logprob: -6.776637554168701
    5. 'area' → logprob: -7.026637554168701
    6. 'rect' → logprob: -7.151637554168701
    7. 'Rectangle' → logprob: -7.901637554168701
    8. 'self' → logprob: -8.65163803100586
    9. 'space' → logprob: -9.15163803100586
    10. ' screen' → logprob: -9.27663803100586

Token 768: ',
' (ID: 412)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.38660719990730286
    2. ' with' → logprob: -2.0116071701049805
    3. '       ' → logprob: -2.3866071701049805
    4. ' (' → logprob: -3.3866071701049805
    5. '(' → logprob: -4.8866071701049805
    6. 'that' → logprob: -4.8866071701049805
    7. ' at' → logprob: -5.0116071701049805
    8. ' such' → logprob: -5.2616071701049805
    9. ' where' → logprob: -5.5116071701049805
    10. ',' → logprob: -5.6366071701049805

Token 769: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4063746929168701
    2. ' not' → logprob: -2.53137469291687
    3. ' #' → logprob: -3.28137469291687
    4. '#' → logprob: -3.53137469291687
    5. ' given' → logprob: -3.78137469291687
    6. ' with' → logprob: -3.78137469291687
    7. ' at' → logprob: -3.90637469291687
    8. '<|end|>' → logprob: -4.156374931335449
    9. ' possibly' → logprob: -4.406374931335449
    10. ' considering' → logprob: -4.781374931335449

Token 770: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2081344723701477
    2. ' not' → logprob: -2.583134412765503
    3. ' given' → logprob: -3.583134412765503
    4. ' x' → logprob: -4.583134651184082
    5. ' with' → logprob: -4.833134651184082
    6. 'not' → logprob: -4.958134651184082
    7. ' possibly' → logprob: -5.208134651184082
    8. '```' → logprob: -5.458134651184082
    9. ' that' → logprob: -5.583134651184082
    10. 'x' → logprob: -5.833134651184082

Token 771: ' distance' (ID: 9324)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2494749128818512
    2. '       ' → logprob: -1.7494748830795288
    3. ' #' → logprob: -3.7494750022888184
    4. 'with' → logprob: -5.374475002288818
    5. 'given' → logprob: -5.999475002288818
    6. 'consider' → logprob: -6.124475002288818
    7. 'not' → logprob: -6.249475002288818
    8. 'from' → logprob: -6.874475002288818
    9. 'including' → logprob: -6.874475002288818
    10. ' given' → logprob: -6.999475002288818

Token 772: ' >=' (ID: 5064)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.28291621804237366
    2. ' from' → logprob: -2.157916307449341
    3. 'to' → logprob: -2.657916307449341
    4. '>' → logprob: -3.407916307449341
    5. ' to' → logprob: -4.407916069030762
    6. '>=' → logprob: -5.532916069030762
    7. ' at' → logprob: -5.907916069030762
    8. 'greater' → logprob: -6.407916069030762
    9. 's' → logprob: -6.907916069030762
    10. '       ' → logprob: -7.157916069030762

Token 773: ' radius' (ID: 21090)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04550556838512421
    2. 'max' → logprob: -3.2955055236816406
    3. ' self' → logprob: -5.295505523681641
    4. ' max' → logprob: -7.295505523681641
    5. 'sum' → logprob: -7.420505523681641
    6. '0' → logprob: -8.04550552368164
    7. 'min' → logprob: -8.42050552368164
    8. '(self' → logprob: -8.67050552368164
    9. '[self' → logprob: -9.29550552368164
    10. 'for' → logprob: -9.54550552368164

Token 774: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.663741946220398
    2. ' from' → logprob: -1.663741946220398
    3. '       ' → logprob: -1.913741946220398
    4. 'to' → logprob: -3.5387420654296875
    5. ' to' → logprob: -3.5387420654296875
    6. ',' → logprob: -3.5387420654296875
    7. '+' → logprob: -3.9137420654296875
    8. ' and' → logprob: -4.1637420654296875
    9. 'and' → logprob: -4.2887420654296875
    10. ' +' → logprob: -5.5387420654296875

Token 775: ' edges' (ID: 22569)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.21345408260822296
    2. 'any' → logprob: -2.213454008102417
    3. 'each' → logprob: -3.088454008102417
    4. ' all' → logprob: -4.088454246520996
    5. 'every' → logprob: -4.963454246520996
    6. ' any' → logprob: -5.338454246520996
    7. 'laser' → logprob: -5.963454246520996
    8. 'las' → logprob: -6.088454246520996
    9. ' each' → logprob: -6.463454246520996
    10. 'the' → logprob: -7.088454246520996

Token 776: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06580160558223724
    2. ',' → logprob: -3.3158016204833984
    3. ' and' → logprob: -3.6908016204833984
    4. 'and' → logprob: -7.440801620483398
    5. ' for' → logprob: -7.815801620483398
    6. ' to' → logprob: -7.940801620483398
    7. 'import' → logprob: -8.440801620483398
    8. '   ' → logprob: -8.565801620483398
    9. ' (' → logprob: -9.065801620483398
    10. '        
' → logprob: -9.565801620483398

Token 777: ' that' (ID: 484)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.558009684085846
    2. '       ' → logprob: -2.058009624481201
    3. 'and' → logprob: -2.308009624481201
    4. ' that' → logprob: -2.433009624481201
    5. '#' → logprob: -2.558009624481201
    6. ' #' → logprob: -4.683009624481201
    7. ' with' → logprob: -4.933009624481201
    8. ',' → logprob: -5.308009624481201
    9. 'that' → logprob: -5.558009624481201
    10. ' which' → logprob: -5.808009624481201

Token 778: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.842311441898346
    2. 'does' → logprob: -0.842311441898346
    3. ' is' → logprob: -2.342311382293701
    4. ' does' → logprob: -3.342311382293701
    5. 'and' → logprob: -6.592311382293701
    6. ' doesn't' → logprob: -6.967311382293701
    7. 'also' → logprob: -7.342311382293701
    8. 'not' → logprob: -7.592311382293701
    9. '       ' → logprob: -7.592311382293701
    10. 'avo' → logprob: -7.717311382293701

Token 779: ' not' (ID: 625)
  Prédit: 'safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'safe' → logprob: -0.3761882483959198
    2. 'not' → logprob: -1.6261882781982422
    3. ' safe' → logprob: -2.751188278198242
    4. ' not' → logprob: -3.126188278198242
    5. ' at' → logprob: -5.376188278198242
    6. 'at' → logprob: -5.876188278198242
    7. 'is' → logprob: -8.126188278198242
    8. '   ' → logprob: -8.126188278198242
    9. 'far' → logprob: -8.501188278198242
    10. '       ' → logprob: -8.626188278198242

Token 780: ' overlapping' (ID: 90457)
  Prédit: 'over'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'over' → logprob: -0.3406643271446228
    2. 'too' → logprob: -2.7156643867492676
    3. 'within' → logprob: -2.8406643867492676
    4. 'inside' → logprob: -2.9656643867492676
    5. 'covered' → logprob: -3.3406643867492676
    6. 'in' → logprob: -4.090664386749268
    7. 'blocked' → logprob: -4.215664386749268
    8. 'close' → logprob: -4.340664386749268
    9. ' overl' → logprob: -4.465664386749268
    10. 'ob' → logprob: -4.715664386749268

Token 781: ' any' (ID: 1062)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.2535076141357422
    2. 'with' → logprob: -1.7535076141357422
    3. ' any' → logprob: -3.003507614135742
    4. 'any' → logprob: -7.128507614135742
    5. '       ' → logprob: -8.128507614135742
    6. ' by' → logprob: -11.253507614135742
    7. '   ' → logprob: -11.378507614135742
    8. ',' → logprob: -11.753507614135742
    9. ' to' → logprob: -12.628507614135742
    10. ' a' → logprob: -12.878507614135742

Token 782: ' laser' (ID: 23429)
  Prédit: 'laser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'laser' → logprob: -0.00903263408690691
    2. ' laser' → logprob: -4.759032726287842
    3. '       ' → logprob: -8.259032249450684
    4. 'las' → logprob: -9.634032249450684
    5. '           ' → logprob: -10.759032249450684
    6. '   ' → logprob: -10.884032249450684
    7. 'self' → logprob: -11.259032249450684
    8. ' of' → logprob: -11.634032249450684
    9. '#' → logprob: -11.759032249450684
    10. 'Laser' → logprob: -12.509032249450684

Token 783: ' zone' (ID: 15070)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06136773154139519
    2. '
' → logprob: -2.9363677501678467
    3. '        
' → logprob: -5.686367511749268
    4. ',' → logprob: -6.561367511749268
    5. '.' → logprob: -7.186367511749268
    6. '<|end|>' → logprob: -8.186367988586426
    7. 'import' → logprob: -8.811367988586426
    8. '<|end|>' → logprob: -9.686367988586426
    9. ':' → logprob: -10.061367988586426
    10. '.
' → logprob: -10.186367988586426

Token 784: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2842722237110138
    2. '
' → logprob: -1.4092721939086914
    3. '        
' → logprob: -6.784272193908691
    4. ',' → logprob: -7.034272193908691
    5. '#' → logprob: -8.284272193908691
    6. 'import' → logprob: -8.409272193908691
    7. '<|end|>' → logprob: -8.909272193908691
    8. '```' → logprob: -9.034272193908691
    9. '
' → logprob: -9.909272193908691
    10. '<|end|>' → logprob: -10.159272193908691

Token 785: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014974139630794525
    2. '
' → logprob: -4.264974117279053
    3. '        
' → logprob: -7.889974117279053
    4. '<|end|>' → logprob: -8.764974594116211
    5. '```' → logprob: -9.264974594116211
    6. '#' → logprob: -9.264974594116211
    7. 'import' → logprob: -11.264974594116211
    8. ',' → logprob: -11.264974594116211
    9. '<|end|>' → logprob: -12.014974594116211
    10. '   ' → logprob: -12.139974594116211

Token 786: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002569356467574835
    2. ' step' → logprob: -7.127569198608398
    3. '#' → logprob: -7.502569198608398
    4. ' margin' → logprob: -7.752569198608398
    5. 'import' → logprob: -8.377569198608398
    6. '
' → logprob: -8.877569198608398
    7. 'def' → logprob: -9.502569198608398
    8. ' #' → logprob: -9.627569198608398
    9. ' import' → logprob: -9.877569198608398
    10. ' def' → logprob: -10.002569198608398

Token 787: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025794629473239183
    2. '#' → logprob: -6.377579689025879
    3. '
' → logprob: -8.002579689025879
    4. 'import' → logprob: -9.002579689025879
    5. '   ' → logprob: -9.252579689025879
    6. '        
' → logprob: -9.377579689025879
    7. ' #' → logprob: -9.627579689025879
    8. ' import' → logprob: -10.627579689025879
    9. 'Let's' → logprob: -10.752579689025879
    10. ' step' → logprob: -10.877579689025879

Token 788: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.03709150850772858
    2. '       ' → logprob: -4.1620917320251465
    3. 'import' → logprob: -4.4120917320251465
    4. 'step' → logprob: -5.7870917320251465
    5. 'def' → logprob: -6.5370917320251465
    6. 'STEP' → logprob: -7.1620917320251465
    7. 'margin' → logprob: -7.5370917320251465
    8. 'from' → logprob: -7.6620917320251465
    9. ' #' → logprob: -7.7870917320251465
    10. 'Step' → logprob: -7.7870917320251465

Token 789: ' Observation' (ID: 143762)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5313515663146973
    2. 'import' → logprob: -1.2813515663146973
    3. 'step' → logprob: -3.1563515663146973
    4. 'grid' → logprob: -3.7813515663146973
    5. 'from' → logprob: -4.031351566314697
    6. 'def' → logprob: -4.156351566314697
    7. 'STEP' → logprob: -4.406351566314697
    8. 'Step' → logprob: -5.406351566314697
    9. 'margin' → logprob: -5.531351566314697
    10. 'EPS' → logprob: -5.781351566314697

Token 790: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0027637446764856577
    2. ':
' → logprob: -6.127763748168945
    3. '#' → logprob: -8.377763748168945
    4. ',' → logprob: -8.752763748168945
    5. '=' → logprob: -9.377763748168945
    6. '   ' → logprob: -10.252763748168945
    7. '       ' → logprob: -10.627763748168945
    8. ' =' → logprob: -11.877763748168945
    9. ':

' → logprob: -11.877763748168945
    10. '
' → logprob: -12.127763748168945

Token 791: ' laser' (ID: 23429)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.008778716437518597
    2. ' #' → logprob: -6.3837785720825195
    3. 'We' → logprob: -6.3837785720825195
    4. 'if' → logprob: -6.8837785720825195
    5. 'for' → logprob: -7.3837785720825195
    6. 'from' → logprob: -7.7587785720825195
    7. '
' → logprob: -7.7587785720825195
    8. 'import' → logprob: -7.8837785720825195
    9. 'If' → logprob: -8.00877857208252
    10. 'The' → logprob: -8.38377857208252

Token 792: ' safe' (ID: 7703)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4473315179347992
    2. ' zones' → logprob: -1.1973315477371216
    3. 'zones' → logprob: -3.822331428527832
    4. ' lines' → logprob: -4.197331428527832
    5. ' areas' → logprob: -5.447331428527832
    6. 'lines' → logprob: -5.822331428527832
    7. ' is' → logprob: -6.197331428527832
    8. 'areas' → logprob: -6.572331428527832
    9. ' regions' → logprob: -6.947331428527832
    10. ' coverage' → logprob: -7.072331428527832

Token 793: ' zone' (ID: 15070)
  Prédit: '_distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_distance' → logprob: -0.9856073260307312
    2. 'distance' → logprob: -1.860607385635376
    3. '_margin' → logprob: -1.860607385635376
    4. ' zones' → logprob: -2.860607385635376
    5. '_zone' → logprob: -2.985607385635376
    6. 'margin' → logprob: -3.110607385635376
    7. 'zones' → logprob: -3.110607385635376
    8. 'zone' → logprob: -3.610607385635376
    9. ' distance' → logprob: -4.235607147216797
    10. '_z' → logprob: -4.235607147216797

Token 794: ' contour' (ID: 66089)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.42574024200439453
    2. ' is' → logprob: -1.4257402420043945
    3. 'is' → logprob: -3.1757402420043945
    4. '   ' → logprob: -5.0507402420043945
    5. 'def' → logprob: -5.3007402420043945
    6. ' =' → logprob: -5.9257402420043945
    7. ' extends' → logprob: -5.9257402420043945
    8. 'distance' → logprob: -5.9257402420043945
    9. ' may' → logprob: -6.1757402420043945
    10. '#' → logprob: -6.1757402420043945

Token 795: ' is' (ID: 382)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2686586380004883
    2. ' is' → logprob: -2.1436586380004883
    3. ' s' → logprob: -3.1436586380004883
    4. ' consists' → logprob: -3.1436586380004883
    5. ' points' → logprob: -4.643658638000488
    6. ' comprises' → logprob: -5.143658638000488
    7. ' lines' → logprob: -5.768658638000488
    8. ' forms' → logprob: -5.768658638000488
    9. 'is' → logprob: -6.268658638000488
    10. ' includes' → logprob: -6.643658638000488

Token 796: ' union' (ID: 22208)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.7162632346153259
    2. 'the' → logprob: -1.9662632942199707
    3. 'polygon' → logprob: -2.3412632942199707
    4. 'com' → logprob: -2.8412632942199707
    5. ' polygon' → logprob: -2.9662632942199707
    6. 'defined' → logprob: -3.0912632942199707
    7. 'formed' → logprob: -3.8412632942199707
    8. ' composed' → logprob: -4.341263294219971
    9. ' the' → logprob: -4.466263294219971
    10. ' a' → logprob: -4.466263294219971

Token 797: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.1813015192747116
    2. 'of' → logprob: -1.806301474571228
    3. '       ' → logprob: -6.556301593780518
    4. '   ' → logprob: -9.30630111694336
    5. '#' → logprob: -11.30630111694336
    6. '	of' → logprob: -12.05630111694336
    7. ' ' → logprob: -12.80630111694336
    8. ',' → logprob: -12.80630111694336
    9. '<|end|>' → logprob: -13.18130111694336
    10. '           ' → logprob: -13.43130111694336

Token 798: ' (' (ID: 350)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.5374041199684143
    2. 'c' → logprob: -1.6624040603637695
    3. 'line' → logprob: -2.9124040603637695
    4. 'offset' → logprob: -3.1624040603637695
    5. 'lines' → logprob: -3.7874040603637695
    6. 'circle' → logprob: -4.0374040603637695
    7. 'dis' → logprob: -4.1624040603637695
    8. 'caps' → logprob: -4.1624040603637695
    9. 'segments' → logprob: -4.5374040603637695
    10. 'all' → logprob: -4.5374040603637695

Token 799: 'line' (ID: 1137)
  Prédit: 'cir'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cir' → logprob: -0.1817583292722702
    2. 'dis' → logprob: -2.931758403778076
    3. 'c' → logprob: -3.556758403778076
    4. 'circle' → logprob: -3.806758403778076
    5. 'offset' → logprob: -4.056758403778076
    6. 'lines' → logprob: -5.181758403778076
    7. 'the' → logprob: -5.181758403778076
    8. ' circles' → logprob: -5.306758403778076
    9. 'line' → logprob: -5.556758403778076
    10. ')' → logprob: -5.556758403778076

Token 800: ' band' (ID: 8177)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.7388004660606384
    2. ' segments' → logprob: -1.1138005256652832
    3. 's' → logprob: -1.7388005256652832
    4. ')' → logprob: -4.738800525665283
    5. ' and' → logprob: -5.988800525665283
    6. 'and' → logprob: -6.363800525665283
    7. '_segments' → logprob: -6.863800525665283
    8. ' s' → logprob: -6.988800525665283
    9. ',' → logprob: -7.113800525665283
    10. ')s' → logprob: -7.738800525665283

Token 801: ')' (ID: 8)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4328508675098419
    2. ' and' → logprob: -2.0578508377075195
    3. ' +' → logprob: -2.8078508377075195
    4. 'and' → logprob: -3.0578508377075195
    5. ' plus' → logprob: -3.3078508377075195
    6. ')' → logprob: -3.9328508377075195
    7. ' s' → logprob: -4.6828508377075195
    8. ' with' → logprob: -4.8078508377075195
    9. '+' → logprob: -4.9328508377075195
    10. 'segments' → logprob: -5.3078508377075195

Token 802: ' thick' (ID: 17154)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6378241777420044
    2. 'and' → logprob: -1.1378241777420044
    3. ' and' → logprob: -2.137824058532715
    4. ' plus' → logprob: -4.012824058532715
    5. 'plus' → logprob: -5.762824058532715
    6. 'segments' → logprob: -6.512824058532715
    7. 'with' → logprob: -6.637824058532715
    8. ',' → logprob: -6.887824058532715
    9. '+' → logprob: -7.012824058532715
    10. ' expanded' → logprob: -7.137824058532715

Token 803: 'ened' (ID: 12848)
  Prédit: 'ness'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ness' → logprob: -0.09240556508302689
    2. 'ess' → logprob: -2.4674055576324463
    3. ' ' → logprob: -6.342405796051025
    4. ' ness' → logprob: -7.467405796051025
    5. '   ' → logprob: -7.592405796051025
    6. 'n' → logprob: -9.217405319213867
    7. 'esses' → logprob: -9.342405319213867
    8. '  ' → logprob: -9.467405319213867
    9. 'nes' → logprob: -10.092405319213867
    10. '=' → logprob: -10.342405319213867

Token 804: ' by' (ID: 656)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -1.3333007097244263
    2. 'lines' → logprob: -1.4583007097244263
    3. ' lines' → logprob: -1.7083007097244263
    4. ' segments' → logprob: -2.0833005905151367
    5. ' line' → logprob: -2.3333005905151367
    6. 'line' → logprob: -3.7083005905151367
    7. ' by' → logprob: -3.7083005905151367
    8. 's' → logprob: -4.333300590515137
    9. 'edges' → logprob: -4.958300590515137
    10. ' edges' → logprob: -5.333300590515137

Token 805: ' half' (ID: 6375)
  Prédit: 'radius'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'radius' → logprob: -0.5222291946411133
    2. ' radius' → logprob: -1.3972291946411133
    3. ' the' → logprob: -2.2722291946411133
    4. 'the' → logprob: -4.022229194641113
    5. 'r' → logprob: -4.272229194641113
    6. ' a' → logprob: -4.897229194641113
    7. 'self' → logprob: -5.022229194641113
    8. ' self' → logprob: -5.147229194641113
    9. ' r' → logprob: -6.522229194641113
    10. 'a' → logprob: -6.897229194641113

Token 806: ' thickness' (ID: 38833)
  Prédit: 'th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'th' → logprob: -1.0335536003112793
    2. 'self' → logprob: -1.5335536003112793
    3. ' thickness' → logprob: -1.5335536003112793
    4. ' the' → logprob: -2.7835536003112793
    5. ' self' → logprob: -2.7835536003112793
    6. 'the' → logprob: -3.4085536003112793
    7. '   ' → logprob: -3.5335536003112793
    8. 'laser' → logprob: -4.533553600311279
    9. '(self' → logprob: -5.783553600311279
    10. ' laser' → logprob: -6.283553600311279

Token 807: '+r' (ID: 133712)
  Prédit: ' plus'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' plus' → logprob: -1.2388277053833008
    2. ' and' → logprob: -1.3638277053833008
    3. 'and' → logprob: -1.6138277053833008
    4. ',' → logprob: -2.738827705383301
    5. '.' → logprob: -2.738827705383301
    6. 'plus' → logprob: -3.113827705383301
    7. '   ' → logprob: -3.738827705383301
    8. '+' → logprob: -4.113827705383301
    9. ' +' → logprob: -4.363827705383301
    10. 's' → logprob: -4.988827705383301

Token 808: '.
' (ID: 558)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.239733338356018
    2. ',' → logprob: -1.364733338356018
    3. ' and' → logprob: -2.7397332191467285
    4. ' in' → logprob: -3.1147332191467285
    5. ' plus' → logprob: -3.2397332191467285
    6. 's' → logprob: -3.6147332191467285
    7. 'and' → logprob: -3.6147332191467285
    8. ' of' → logprob: -3.9897332191467285
    9. 'radius' → logprob: -4.1147332191467285
    10. ' for' → logprob: -4.2397332191467285

Token 809: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002387302927672863
    2. '        
' → logprob: -6.502387523651123
    3. '#' → logprob: -7.752387523651123
    4. '
' → logprob: -8.752387046813965
    5. '   ' → logprob: -9.877387046813965
    6. '<|end|>' → logprob: -9.877387046813965
    7. 'import' → logprob: -10.252387046813965
    8. ' #' → logprob: -10.377387046813965
    9. 'from' → logprob: -11.377387046813965
    10. ' from' → logprob: -11.377387046813965

Token 810: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01742495223879814
    2. '
' → logprob: -4.642425060272217
    3. '        
' → logprob: -5.642425060272217
    4. '#' (adapté à ' #') → logprob: -6.267425060272217
    5. '   ' → logprob: -6.892425060272217
    6. ' 
' → logprob: -8.767424583435059
    7. '    
' → logprob: -8.767424583435059
    8. 'import' → logprob: -9.142424583435059
    9. '<|end|>' → logprob: -9.142424583435059
    10. '\
' → logprob: -9.642424583435059

Token 811: ' Since' (ID: 12265)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35729363560676575
    2. '#' → logprob: -1.7322936058044434
    3. '
' → logprob: -2.4822936058044434
    4. 'import' → logprob: -4.232293605804443
    5. ' margin' → logprob: -5.357293605804443
    6. 'margin' → logprob: -5.607293605804443
    7. ' #' → logprob: -5.857293605804443
    8. 'We' → logprob: -6.107293605804443
    9. 'from' → logprob: -6.232293605804443
    10. 'Step' → logprob: -6.357293605804443

Token 812: ' lasers' (ID: 114839)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7153536081314087
    2. 'las' → logprob: -1.9653536081314087
    3. 'r' → logprob: -2.340353488922119
    4. 'laser' → logprob: -2.590353488922119
    5. 'we' → logprob: -3.090353488922119
    6. 'all' → logprob: -3.715353488922119
    7. ' the' → logprob: -4.090353488922119
    8. 'th' → logprob: -4.590353488922119
    9. 'this' → logprob: -4.715353488922119
    10. 'lines' → logprob: -4.965353488922119

Token 813: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -1.042788028717041
    2. 'are' → logprob: -1.167788028717041
    3. ' cover' → logprob: -2.417788028717041
    4. ' may' → logprob: -3.167788028717041
    5. ' can' → logprob: -3.292788028717041
    6. 'may' → logprob: -3.667788028717041
    7. 'can' → logprob: -3.917788028717041
    8. ' have' → logprob: -3.917788028717041
    9. 'have' → logprob: -4.292788028717041
    10. 'cover' → logprob: -4.417788028717041

Token 814: ' few' (ID: 3120)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.2989778220653534
    2. 'lines' → logprob: -2.173977851867676
    3. ' line' → logprob: -3.298977851867676
    4. 'finite' → logprob: -3.548977851867676
    5. 'linear' → logprob: -3.673977851867676
    6. 'rect' → logprob: -3.923977851867676
    7. 'segments' → logprob: -5.173977851867676
    8. 'straight' → logprob: -5.423977851867676
    9. 'thin' → logprob: -5.548977851867676
    10. 'represented' → logprob: -5.673977851867676

Token 815: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05590558424592018
    2. 'and' → logprob: -3.43090558052063
    3. ' and' → logprob: -3.93090558052063
    4. ',
' → logprob: -6.555905818939209
    5. ' in' → logprob: -7.555905818939209
    6. ' (' → logprob: -8.68090534210205
    7. '(' → logprob: -9.93090534210205
    8. ' lines' → logprob: -9.93090534210205
    9. 'in' → logprob: -10.18090534210205
    10. '   ' → logprob: -10.93090534210205

Token 816: 'N' (ID: 45)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '),' → logprob: -1.1701489686965942
    2. 'len' → logprob: -1.1701489686965942
    3. 'self' → logprob: -2.0451488494873047
    4. ')' → logprob: -2.6701488494873047
    5. 'few' → logprob: -3.0451488494873047
    6. ' few' → logprob: -4.295148849487305
    7. 'def' → logprob: -4.420148849487305
    8. 'and' → logprob: -4.670148849487305
    9. '<=' → logprob: -4.670148849487305
    10. '10' → logprob: -4.795148849487305

Token 817: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -1.096161127090454
    2. '),' → logprob: -1.471161127090454
    3. '=' → logprob: -1.846161127090454
    4. '<=' → logprob: -2.471161127090454
    5. ')' → logprob: -2.596161127090454
    6. ' <' → logprob: -2.721161127090454
    7. ',' → logprob: -4.346160888671875
    8. ' =' → logprob: -4.346160888671875
    9. ' ),' → logprob: -5.346160888671875
    10. '<' → logprob: -5.471160888671875

Token 818: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '100' → logprob: -0.8401762843132019
    2. '10' → logprob: -0.9651762843132019
    3. '20' → logprob: -1.9651763439178467
    4. '50' → logprob: -3.2151763439178467
    5. '30' → logprob: -6.215176105499268
    6. '5' → logprob: -6.715176105499268
    7. '500' → logprob: -6.715176105499268
    8. '200' → logprob: -6.840176105499268
    9. '15' → logprob: -7.465176105499268
    10. '8' → logprob: -8.590176582336426

Token 819: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.5146989822387695
    2. '10' → logprob: -1.6396989822387695
    3. '20' → logprob: -2.0146989822387695
    4. '50' → logprob: -2.7646989822387695
    5. '500' → logprob: -5.5146989822387695
    6. '200' → logprob: -5.6396989822387695
    7. '30' → logprob: -6.1396989822387695
    8. '15' → logprob: -7.5146989822387695
    9. '5' → logprob: -8.01469898223877
    10. '40' → logprob: -8.38969898223877

Token 820: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.034901537001132965
    2. ')' → logprob: -3.4099016189575195
    3. ',' → logprob: -8.03490161895752
    4. '0' → logprob: -8.15990161895752
    5. '),
' → logprob: -8.28490161895752
    6. ' ),' → logprob: -8.78490161895752
    7. '       ' → logprob: -9.90990161895752
    8. ')
' → logprob: -9.90990161895752
    9. '
' → logprob: -10.15990161895752
    10. '   ' → logprob: -10.65990161895752

Token 821: ' perform' (ID: 3347)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6415711641311646
    2. '       ' → logprob: -1.0165711641311646
    3. 'import' → logprob: -2.641571044921875
    4. ' #' → logprob: -4.516571044921875
    5. ' we' → logprob: -4.766571044921875
    6. ' import' → logprob: -5.016571044921875
    7. 'we' → logprob: -5.016571044921875
    8. 'from' → logprob: -6.641571044921875
    9. ' the' → logprob: -6.891571044921875
    10. ' and' → logprob: -7.516571044921875

Token 822: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.27869361639022827
    2. 'sampling' → logprob: -2.153693675994873
    3. 'import' → logprob: -2.778693675994873
    4. 'grid' → logprob: -2.903693675994873
    5. 'random' → logprob: -5.153693675994873
    6. ' a' → logprob: -7.028693675994873
    7. 'def' → logprob: -7.653693675994873
    8. 'binary' → logprob: -7.653693675994873
    9. ' grid' → logprob: -7.903693675994873
    10. 'an' → logprob: -7.903693675994873

Token 823: ' sampling' (ID: 43881)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.05635944381356239
    2. 'sampling' → logprob: -3.5563595294952393
    3. 'binary' → logprob: -4.93135929107666
    4. 'search' → logprob: -5.55635929107666
    5. 'random' → logprob: -5.80635929107666
    6. 'br' → logprob: -5.93135929107666
    7. 'bread' → logprob: -6.43135929107666
    8. 'sample' → logprob: -6.68135929107666
    9. 'def' → logprob: -6.80635929107666
    10. 'dense' → logprob: -6.93135929107666

Token 824: ' grid' (ID: 10586)
  Prédit: ' approach'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.25064146518707275
    2. '       ' → logprob: -3.125641345977783
    3. ' strategy' → logprob: -3.375641345977783
    4. ' of' → logprob: -3.875641345977783
    5. '   ' → logprob: -4.000641345977783
    6. ',' → logprob: -4.125641345977783
    7. '-based' → logprob: -4.250641345977783
    8. 'appro' → logprob: -4.375641345977783
    9. ' method' → logprob: -4.625641345977783
    10. 'def' → logprob: -4.750641345977783

Token 825: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2619679272174835
    2. ',' → logprob: -2.636967897415161
    3. ' approach' → logprob: -3.636967897415161
    4. ' and' → logprob: -4.01196813583374
    5. 'import' → logprob: -4.13696813583374
    6. ' or' → logprob: -4.38696813583374
    7. '   ' → logprob: -4.38696813583374
    8. ' with' → logprob: -4.38696813583374
    9. 'def' → logprob: -4.51196813583374
    10. ' method' → logprob: -4.76196813583374

Token 826: ' adaptive' (ID: 75942)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.0950087234377861
    2. ' step' → logprob: -3.095008611679077
    3. 'steps' → logprob: -3.720008611679077
    4. 'spacing' → logprob: -4.845008850097656
    5. 'a' → logprob: -5.095008850097656
    6. ' spacing' → logprob: -6.345008850097656
    7. 'dx' → logprob: -6.595008850097656
    8. 'delta' → logprob: -7.095008850097656
    9. 'resolution' → logprob: -7.345008850097656
    10. 'small' → logprob: -7.845008850097656

Token 827: ' checks' (ID: 22097)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.4444018006324768
    2. 'steps' → logprob: -1.694401741027832
    3. ' step' → logprob: -2.069401741027832
    4. ' steps' → logprob: -3.819401741027832
    5. 'spacing' → logprob: -4.319401741027832
    6. ' spacing' → logprob: -5.194401741027832
    7. 'resolution' → logprob: -5.944401741027832
    8. ' refinement' → logprob: -6.069401741027832
    9. 'density' → logprob: -7.694401741027832
    10. 'sampling' → logprob: -7.819401741027832

Token 828: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.047701697796583176
    2. '
' → logprob: -3.297701597213745
    3. ',' → logprob: -5.797701835632324
    4. '        
' → logprob: -6.172701835632324
    5. ':' → logprob: -6.797701835632324
    6. '.' → logprob: -7.172701835632324
    7. 'import' → logprob: -7.172701835632324
    8. ':
' → logprob: -7.797701835632324
    9. '<|end|>' → logprob: -8.047701835632324
    10. ' and' → logprob: -8.422701835632324

Token 829: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11378452181816101
    2. '
' → logprob: -2.3637845516204834
    3. '   ' → logprob: -5.113784313201904
    4. '        
' → logprob: -5.238784313201904
    5. '    
' → logprob: -6.488784313201904
    6. '<|end|>' → logprob: -9.488784790039062
    7. 'import' → logprob: -9.738784790039062
    8. '    ' → logprob: -9.863784790039062
    9. '' → logprob: -9.988784790039062
    10. ',' → logprob: -9.988784790039062

Token 830: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03157226741313934
    2. '
' → logprob: -3.5315723419189453
    3. '        
' → logprob: -7.281572341918945
    4. '   ' → logprob: -7.406572341918945
    5. '    
' → logprob: -9.406572341918945
    6. '' → logprob: -9.406572341918945
    7. '
' → logprob: -9.531572341918945
    8. '```' → logprob: -10.156572341918945
    9. '    ' → logprob: -10.281572341918945
    10. 'def' → logprob: -10.531572341918945

Token 831: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007291293237358332
    2. '
' → logprob: -5.007291316986084
    3. '   ' → logprob: -8.257290840148926
    4. 'import' → logprob: -8.757290840148926
    5. '        
' → logprob: -8.882290840148926
    6. '    
' → logprob: -11.632290840148926
    7. ' import' → logprob: -12.757290840148926
    8. '```' → logprob: -13.507290840148926
    9. '           ' → logprob: -13.757290840148926
    10. 'def' → logprob: -14.007290840148926

Token 832: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9219009876251221
    2. 'def' → logprob: -1.671900987625122
    3. 'import' → logprob: -1.671900987625122
    4. 'step' → logprob: -2.046900987625122
    5. 'grid' → logprob: -2.796900987625122
    6. 'margin' → logprob: -4.046900749206543
    7. '#' (adapté à ' #') → logprob: -5.296900749206543
    8. '   ' → logprob: -5.671900749206543
    9. 'from' → logprob: -5.921900749206543
    10. 'STEP' → logprob: -5.921900749206543

Token 833: ' But' (ID: 3072)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2442142367362976
    2. 'step' → logprob: -2.3692142963409424
    3. 'grid' → logprob: -2.7442142963409424
    4. 'import' → logprob: -3.2442142963409424
    5. '   ' → logprob: -4.869214057922363
    6. '#' → logprob: -5.869214057922363
    7. 'margin' → logprob: -6.119214057922363
    8. 'GRID' → logprob: -6.119214057922363
    9. 'STEP' → logprob: -6.244214057922363
    10. 'sample' → logprob: -6.869214057922363

Token 834: ' problem' (ID: 4792)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8081490397453308
    2. '#' → logprob: -0.9331490397453308
    3. '
' → logprob: -2.9331490993499756
    4. 'def' → logprob: -3.4331490993499756
    5. 'import' → logprob: -3.8081490993499756
    6. ' #' → logprob: -4.0581488609313965
    7. ' def' → logprob: -4.8081488609313965
    8. '        
' → logprob: -4.9331488609313965
    9. '   ' → logprob: -5.6831488609313965
    10. ' import' → logprob: -5.9331488609313965

Token 835: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.0163875818252563
    2. '   ' → logprob: -1.0163875818252563
    3. '.' → logprob: -3.266387462615967
    4. '       ' → logprob: -3.266387462615967
    5. ' is' → logprob: -3.516387462615967
    6. 'def' → logprob: -3.641387462615967
    7. ' remains' → logprob: -3.766387462615967
    8. '<|end|>' → logprob: -3.891387462615967
    9. '...' → logprob: -4.141387462615967
    10. '#' → logprob: -4.516387462615967

Token 836: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.44040966033935547
    2. ' that' → logprob: -1.4404096603393555
    3. '   ' → logprob: -3.0654096603393555
    4. 'the' → logprob: -3.8154096603393555
    5. 'complex' → logprob: -4.1904096603393555
    6. 'to' → logprob: -4.3154096603393555
    7. '       ' → logprob: -5.8154096603393555
    8. ' the' → logprob: -5.9404096603393555
    9. ' to' → logprob: -6.0654096603393555
    10. 'finding' → logprob: -6.0654096603393555

Token 837: ' laser' (ID: 23429)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.4775856137275696
    2. ' the' → logprob: -1.8525855541229248
    3. 'finding' → logprob: -3.602585554122925
    4. ' code' → logprob: -3.727585554122925
    5. 'this' → logprob: -4.102585792541504
    6. 'we' → logprob: -4.227585792541504
    7. 'continuous' → logprob: -4.227585792541504
    8. 'checking' → logprob: -4.602585792541504
    9. 'sampling' → logprob: -4.727585792541504
    10. ' we' → logprob: -5.102585792541504

Token 838: ' beams' (ID: 81992)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09878817945718765
    2. ' zones' → logprob: -3.348788261413574
    3. ' lines' → logprob: -4.348788261413574
    4. ' coverage' → logprob: -4.598788261413574
    5. '_' → logprob: -5.348788261413574
    6. ' areas' → logprob: -5.473788261413574
    7. ' safe' → logprob: -6.098788261413574
    8. 'zones' → logprob: -6.223788261413574
    9. ' is' → logprob: -6.348788261413574
    10. 'safe' → logprob: -6.723788261413574

Token 839: ' are' (ID: 553)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.966776430606842
    2. ' are' → logprob: -1.7167763710021973
    3. ' may' → logprob: -2.0917763710021973
    4. ' cover' → logprob: -2.2167763710021973
    5. 'are' → logprob: -2.8417763710021973
    6. 'can' → logprob: -3.3417763710021973
    7. ' could' → logprob: -3.5917763710021973
    8. 'may' → logprob: -4.091776371002197
    9. ' might' → logprob: -4.466776371002197
    10. ' have' → logprob: -5.341776371002197

Token 840: ' infinite' (ID: 48413)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.142439842224121
    2. 'inf' → logprob: -1.642439842224121
    3. 'in' → logprob: -1.767439842224121
    4. 'lines' → logprob: -2.142439842224121
    5. 'thin' → logprob: -2.517439842224121
    6. 'linear' → logprob: -3.517439842224121
    7. 'not' → logprob: -3.767439842224121
    8. 'very' → logprob: -4.392439842224121
    9. 'ar' → logprob: -4.517439842224121
    10. 'finite' → logprob: -4.767439842224121

Token 841: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7256194353103638
    2. '.' → logprob: -2.225619316101074
    3. '...' → logprob: -2.600619316101074
    4. ' lines' → logprob: -2.725619316101074
    5. 'lines' → logprob: -3.350619316101074
    6. '<|end|>' → logprob: -3.475619316101074
    7. ')' → logprob: -3.600619316101074
    8. ' segments' → logprob: -3.600619316101074
    9. 'segments' → logprob: -3.600619316101074
    10. 's' → logprob: -3.975619316101074

Token 842: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.08998654782772064
    2. 'extent' → logprob: -3.339986562728882
    3. 'th' → logprob: -4.089986324310303
    4. 'width' → logprob: -4.589986324310303
    5. ' length' → logprob: -4.714986324310303
    6. 'both' → logprob: -5.839986324310303
    7. 'segments' → logprob: -6.089986324310303
    8. 'precision' → logprob: -6.589986324310303
    9. 'the' → logprob: -6.714986324310303
    10. 'segment' → logprob: -6.714986324310303

Token 843: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3056129217147827
    2. '.' → logprob: -1.9306129217147827
    3. '<|end|>' → logprob: -3.4306130409240723
    4. '   ' → logprob: -3.8056130409240723
    5. '#' → logprob: -4.180613040924072
    6. ',
' → logprob: -4.305613040924072
    7. '...' → logprob: -4.555613040924072
    8. '       ' → logprob: -5.055613040924072
    9. ' and' → logprob: -5.180613040924072
    10. '<|end|>' → logprob: -6.055613040924072

Token 844: ' covering' (ID: 24878)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.20304793119430542
    2. ' but' → logprob: -2.45304799079895
    3. ' not' → logprob: -3.57804799079895
    4. ' and' → logprob: -3.82804799079895
    5. 'so' → logprob: -3.95304799079895
    6. '       ' → logprob: -4.703047752380371
    7. 'and' → logprob: -5.328047752380371
    8. ' only' → logprob: -5.953047752380371
    9. 'but' → logprob: -5.953047752380371
    10. '#' → logprob: -6.328047752380371

Token 845: ' entire' (ID: 6508)
  Prédit: ' only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' only' → logprob: -0.6109635233879089
    2. 'only' → logprob: -1.2359635829925537
    3. 'the' → logprob: -2.1109635829925537
    4. ' the' → logprob: -3.7359635829925537
    5. 'finite' → logprob: -4.985963344573975
    6. ' just' → logprob: -5.735963344573975
    7. 'just' → logprob: -6.360963344573975
    8. 'a' → logprob: -6.735963344573975
    9. 'screen' → logprob: -6.860963344573975
    10. 'space' → logprob: -7.235963344573975

Token 846: ' screen' (ID: 6188)
  Prédit: 'screen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'screen' → logprob: -1.1696950197219849
    2. ' screen' → logprob: -1.4196950197219849
    3. 'area' → logprob: -2.6696949005126953
    4. ' plane' → logprob: -2.7946949005126953
    5. ' area' → logprob: -2.9196949005126953
    6. 'plane' → logprob: -2.9196949005126953
    7. 'space' → logprob: -3.0446949005126953
    8. 'width' → logprob: -3.5446949005126953
    9. 'rectangle' → logprob: -3.6696949005126953
    10. ' lines' → logprob: -4.544694900512695

Token 847: '.
' (ID: 558)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9328061938285828
    2. '       ' → logprob: -1.1828062534332275
    3. '.' → logprob: -1.5578062534332275
    4. '.
' → logprob: -3.5578062534332275
    5. '
' → logprob: -4.182806015014648
    6. ',
' → logprob: -4.682806015014648
    7. '#' → logprob: -4.932806015014648
    8. ' and' → logprob: -5.182806015014648
    9. '...' → logprob: -5.807806015014648
    10. ' to' → logprob: -6.182806015014648

Token 848: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09820277988910675
    2. '<|end|>' → logprob: -2.598202705383301
    3. '#' → logprob: -4.598202705383301
    4. '<|end|>' → logprob: -5.973202705383301
    5. '        
' → logprob: -6.598202705383301
    6. ')' → logprob: -6.848202705383301
    7. '
' → logprob: -6.848202705383301
    8. '.' → logprob: -7.098202705383301
    9. '   ' → logprob: -7.473202705383301
    10. ',' → logprob: -7.723202705383301

Token 849: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0701412782073021
    2. '#' (adapté à ' #') → logprob: -3.195141315460205
    3. '
' → logprob: -3.695141315460205
    4. '        
' → logprob: -7.820141315460205
    5. ' #' → logprob: -7.820141315460205
    6. '   ' → logprob: -7.945141315460205
    7. 'import' → logprob: -8.570140838623047
    8. '
' → logprob: -8.820140838623047
    9. 'def' → logprob: -10.070140838623047
    10. '           ' → logprob: -10.195140838623047

Token 850: ' So' (ID: 2632)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7708785533905029
    2. '
' → logprob: -1.520878553390503
    3. '#' → logprob: -1.770878553390503
    4. 'def' → logprob: -2.645878553390503
    5. '   ' → logprob: -3.270878553390503
    6. 'import' → logprob: -4.895878791809082
    7. 'Step' → logprob: -5.520878791809082
    8. ' def' → logprob: -5.520878791809082
    9. ' step' → logprob: -5.520878791809082
    10. 'step' → logprob: -5.645878791809082

Token 851: ' safe' (ID: 7703)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1039679050445557
    2. ' step' → logprob: -1.4789679050445557
    3. ' margin' → logprob: -1.8539679050445557
    4. 'import' → logprob: -2.7289679050445557
    5. '       ' → logprob: -3.1039679050445557
    6. ' #' → logprob: -3.3539679050445557
    7. 'step' → logprob: -3.4789679050445557
    8. ' import' → logprob: -3.9789679050445557
    9. 'margin' → logprob: -4.228967666625977
    10. ' for' → logprob: -4.478967666625977

Token 852: ' areas' (ID: 6723)
  Prédit: 'zone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'zone' → logprob: -1.6276501417160034
    2. 'area' → logprob: -1.7526501417160034
    3. '_area' → logprob: -2.002650260925293
    4. '_points' → logprob: -2.252650260925293
    5. 'distance' → logprob: -2.752650260925293
    6. '       ' → logprob: -3.252650260925293
    7. 'points' → logprob: -3.377650260925293
    8. '_distance' → logprob: -3.377650260925293
    9. '_zone' → logprob: -3.752650260925293
    10. '   ' → logprob: -4.002650260925293

Token 853: ' are' (ID: 553)
  Prédit: ' may'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' may' → logprob: -1.3920046091079712
    2. '   ' → logprob: -2.0170044898986816
    3. ' might' → logprob: -2.0170044898986816
    4. ' are' → logprob: -2.0170044898986816
    5. 'are' → logprob: -2.5170044898986816
    6. '       ' → logprob: -2.7670044898986816
    7. 'may' → logprob: -2.8920044898986816
    8. ' can' → logprob: -3.6420044898986816
    9. 'might' → logprob: -4.017004489898682
    10. ' exist' → logprob: -4.142004489898682

Token 854: ' bounded' (ID: 136812)
  Prédit: 'likely'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'likely' → logprob: -2.255798101425171
    2. 'bounded' → logprob: -2.505798101425171
    3. '   ' → logprob: -2.630798101425171
    4. 'either' → logprob: -2.880798101425171
    5. 'only' → logprob: -3.005798101425171
    6. 'possible' → logprob: -3.130798101425171
    7. 'finite' → logprob: -3.255798101425171
    8. 'possibly' → logprob: -3.380798101425171
    9. 'potential' → logprob: -3.505798101425171
    10. 'limited' → logprob: -3.505798101425171

Token 855: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.38414496183395386
    2. '       ' → logprob: -2.6341450214385986
    3. 'by' → logprob: -2.8841450214385986
    4. ' only' → logprob: -3.0091450214385986
    5. '.' → logprob: -3.1341450214385986
    6. '   ' → logprob: -3.3841450214385986
    7. ',' → logprob: -3.7591450214385986
    8. ' to' → logprob: -4.5091447830200195
    9. 'def' → logprob: -5.2591447830200195
    10. ' and' → logprob: -5.8841447830200195

Token 856: ' laser' (ID: 23429)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.3096970319747925
    2. ' the' → logprob: -2.309697151184082
    3. 'self' → logprob: -2.934697151184082
    4. 'las' → logprob: -3.559697151184082
    5. 'laser' → logprob: -4.059697151184082
    6. 'screen' → logprob: -4.309697151184082
    7. 'line' → logprob: -4.809697151184082
    8. ' self' → logprob: -5.309697151184082
    9. 'edges' → logprob: -5.559697151184082
    10. 'lines' → logprob: -5.684697151184082

Token 857: ' bands' (ID: 29650)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5243488550186157
    2. 'segments' → logprob: -1.7743488550186157
    3. ' segments' → logprob: -1.8993488550186157
    4. ' lines' → logprob: -3.774348735809326
    5. ' beams' → logprob: -4.399348735809326
    6. 'lines' → logprob: -4.399348735809326
    7. ' endpoints' → logprob: -4.524348735809326
    8. 'es' → logprob: -4.899348735809326
    9. ' edges' → logprob: -5.274348735809326
    10. ' line' → logprob: -6.024348735809326

Token 858: ' covering' (ID: 24878)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4725724756717682
    2. '   ' → logprob: -1.4725724458694458
    3. '
' → logprob: -2.7225725650787354
    4. '<|end|>' → logprob: -3.7225725650787354
    5. '        
' → logprob: -4.347572326660156
    6. '    
' → logprob: -4.722572326660156
    7. '<|end|>' → logprob: -4.847572326660156
    8. '.' → logprob: -5.097572326660156
    9. 'def' → logprob: -5.472572326660156
    10. ',' → logprob: -5.597572326660156

Token 859: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.7143626809120178
    2. 'the' → logprob: -0.8393626809120178
    3. ' only' → logprob: -3.714362621307373
    4. ' entire' → logprob: -3.839362621307373
    5. 'all' → logprob: -5.464362621307373
    6. ' all' → logprob: -5.589362621307373
    7. 'only' → logprob: -5.589362621307373
    8. ' edges' → logprob: -5.839362621307373
    9. 'ent' → logprob: -5.964362621307373
    10. ' whole' → logprob: -6.339362621307373

Token 860: ' screen' (ID: 6188)
  Prédit: 'screen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'screen' → logprob: -0.7481042742729187
    2. 'ent' → logprob: -1.3731043338775635
    3. ' screen' → logprob: -2.2481043338775635
    4. ' entire' → logprob: -2.7481043338775635
    5. 'whole' → logprob: -3.4981043338775635
    6. ' whole' → logprob: -3.8731043338775635
    7. 'rectangle' → logprob: -4.373104095458984
    8. 'space' → logprob: -5.123104095458984
    9. 'area' → logprob: -5.248104095458984
    10. ' rectangle' → logprob: -5.498104095458984

Token 861: ' except' (ID: 6384)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22901767492294312
    2. '<|end|>' → logprob: -2.604017734527588
    3. '
' → logprob: -2.854017734527588
    4. '        
' → logprob: -3.854017734527588
    5. '<|end|>' → logprob: -4.229017734527588
    6. '.' → logprob: -4.729017734527588
    7. ',' → logprob: -4.854017734527588
    8. '#' → logprob: -5.604017734527588
    9. '   ' → logprob: -5.729017734527588
    10. '.
' → logprob: -5.854017734527588

Token 862: ' gaps' (ID: 52008)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1111396551132202
    2. 'the' → logprob: -1.6111396551132202
    3. 'some' → logprob: -1.7361396551132202
    4. ' for' → logprob: -2.7361397743225098
    5. ' the' → logprob: -3.2361397743225098
    6. 'corn' → logprob: -3.3611397743225098
    7. ' corners' → logprob: -4.11113977432251
    8. ' some' → logprob: -4.36113977432251
    9. 'possible' → logprob: -4.61113977432251
    10. ' at' → logprob: -4.86113977432251

Token 863: ' between' (ID: 2870)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7704797387123108
    2. '.' → logprob: -1.395479679107666
    3. '       ' → logprob: -2.020479679107666
    4. ',' → logprob: -2.770479679107666
    5. '
' → logprob: -3.520479679107666
    6. '.
' → logprob: -4.020479679107666
    7. '<|end|>' → logprob: -4.645479679107666
    8. 'def' → logprob: -4.895479679107666
    9. ' and' → logprob: -5.145479679107666
    10. '    
' → logprob: -5.270479679107666

Token 864: ' them' (ID: 1373)
  Prédit: 'las'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'las' → logprob: -0.3060764968395233
    2. 'them' → logprob: -1.5560765266418457
    3. 'laser' → logprob: -3.9310765266418457
    4. 'be' → logprob: -5.056076526641846
    5. ' them' → logprob: -5.056076526641846
    6. 'bands' → logprob: -5.181076526641846
    7. 'the' → logprob: -5.306076526641846
    8. 'lines' → logprob: -5.431076526641846
    9. 'segments' → logprob: -5.806076526641846
    10. 'their' → logprob: -7.431076526641846

Token 865: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06973344087600708
    2. '.' → logprob: -3.9447333812713623
    3. 'def' → logprob: -4.194733619689941
    4. '<|end|>' → logprob: -4.944733619689941
    5. '
' → logprob: -5.069733619689941
    6. ',' → logprob: -5.194733619689941
    7. '    
' → logprob: -5.319733619689941
    8. ')' → logprob: -6.194733619689941
    9. '.
' → logprob: -6.569733619689941
    10. '...' → logprob: -6.819733619689941

Token 866: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012835468165576458
    2. '
' → logprob: -5.387835502624512
    3. '   ' → logprob: -5.387835502624512
    4. '<|end|>' → logprob: -6.762835502624512
    5. '        
' → logprob: -7.137835502624512
    6. '#' → logprob: -7.137835502624512
    7. '<|end|>' → logprob: -8.512835502624512
    8. '    
' → logprob: -8.637835502624512
    9. 'def' → logprob: -8.887835502624512
    10. 'import' → logprob: -9.137835502624512

Token 867: ' #
' (ID: 21888)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7599464058876038
    2. '       ' → logprob: -0.7599464058876038
    3. '   ' → logprob: -3.259946346282959
    4. '        
' → logprob: -4.259946346282959
    5. '    
' → logprob: -5.009946346282959
    6. 'def' → logprob: -5.884946346282959
    7. '<|end|>' → logprob: -6.884946346282959
    8. 'import' → logprob: -7.884946346282959
    9. '#' → logprob: -8.134946823120117
    10. '<|end|>' → logprob: -8.384946823120117

Token 868: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025696774944663048
    2. '
' → logprob: -3.7756967544555664
    3. '        
' → logprob: -6.150696754455566
    4. '#' → logprob: -9.400696754455566
    5. '<|end|>' → logprob: -9.900696754455566
    6. '    
' → logprob: -10.275696754455566
    7. '   ' → logprob: -10.775696754455566
    8. 'import' → logprob: -11.150696754455566
    9. '

' → logprob: -11.275696754455566
    10. '        

' → logprob: -11.400696754455566

Token 869: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2342575341463089
    2. '#' (adapté à ' #') → logprob: -1.9842575788497925
    3. '
' → logprob: -2.984257459640503
    4. 'import' → logprob: -4.359257698059082
    5. ' #' → logprob: -6.109257698059082
    6. '        
' → logprob: -6.359257698059082
    7. ' import' → logprob: -6.859257698059082
    8. '   ' → logprob: -7.109257698059082
    9. 'def' → logprob: -7.359257698059082
    10. 'Here' → logprob: -8.609257698059082

Token 870: ' Implement' (ID: 32889)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.45904409885406494
    2. 'step' → logprob: -1.834044098854065
    3. 'import' → logprob: -2.5840439796447754
    4. 'margin' → logprob: -2.8340439796447754
    5. 'def' → logprob: -3.5840439796447754
    6. 'grid' → logprob: -4.584043979644775
    7. 'from' → logprob: -4.834043979644775
    8. 'Step' → logprob: -5.209043979644775
    9. 'STEP' → logprob: -5.709043979644775
    10. 'padding' → logprob: -5.834043979644775

Token 871: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10072632133960724
    2. 'import' → logprob: -3.350726366043091
    3. '#' → logprob: -3.725726366043091
    4. ' import' → logprob: -4.100726127624512
    5. ' def' → logprob: -4.975726127624512
    6. 'def' → logprob: -5.100726127624512
    7. ' #' → logprob: -6.100726127624512
    8. ' a' → logprob: -6.350726127624512
    9. '
' → logprob: -7.225726127624512
    10. '   ' → logprob: -7.350726127624512

Token 872: ' qu' (ID: 474)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0048851617611944675
    2. 'import' → logprob: -6.879885196685791
    3. 'grid' → logprob: -6.879885196685791
    4. ' def' → logprob: -7.254885196685791
    5. 'sampling' → logprob: -7.754885196685791
    6. 'binary' → logprob: -7.754885196685791
    7. '#' → logprob: -8.004884719848633
    8. 'from' → logprob: -8.379884719848633
    9. 'b' → logprob: -8.879884719848633
    10. 'search' → logprob: -9.004884719848633

Token 873: 'adt' (ID: 14269)
  Prédit: 'adt'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adt' → logprob: -0.5292181968688965
    2. 'ad' → logprob: -0.9042181968688965
    3. 'ick' → logprob: -6.2792181968688965
    4. '   ' → logprob: -6.2792181968688965
    5. 'adc' → logprob: -7.1542181968688965
    6. 'a' → logprob: -7.7792181968688965
    7. 'ads' → logprob: -8.529218673706055
    8. '       ' → logprob: -8.529218673706055
    9. 'adr' → logprob: -8.779218673706055
    10. '#' → logprob: -9.029218673706055

Token 874: 'ree' (ID: 908)
  Prédit: 'ree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ree' → logprob: -0.0003422567679081112
    2. 'tree' → logprob: -8.75034236907959
    3. 'ee' → logprob: -9.25034236907959
    4. 're' → logprob: -10.62534236907959
    5. 'r' → logprob: -11.12534236907959
    6. 'reen' → logprob: -12.12534236907959
    7. 'reet' → logprob: -12.12534236907959
    8. '       ' → logprob: -12.25034236907959
    9. 'reed' → logprob: -12.25034236907959
    10. 'rees' → logprob: -12.50034236907959

Token 875: '-like' (ID: 22085)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.0155582427978516
    2. '<|end|>' → logprob: -2.0155582427978516
    3. ',' → logprob: -2.2655582427978516
    4. '       ' → logprob: -2.5155582427978516
    5. '   ' → logprob: -2.6405582427978516
    6. '
' → logprob: -2.8905582427978516
    7. '...' → logprob: -3.5155582427978516
    8. ':' → logprob: -3.7655582427978516
    9. ' class' → logprob: -3.7655582427978516
    10. 'import' → logprob: -4.140558242797852

Token 876: ' recursive' (ID: 66711)
  Prédit: ' search'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' search' → logprob: -0.1561243087053299
    2. ' approach' → logprob: -2.1561243534088135
    3. 'search' → logprob: -3.7811243534088135
    4. ' sampling' → logprob: -6.906124114990234
    5. 'appro' → logprob: -7.031124114990234
    6. ' traversal' → logprob: -7.031124114990234
    7. ' spatial' → logprob: -7.781124114990234
    8. ' def' → logprob: -7.781124114990234
    9. ' subdivision' → logprob: -7.906124114990234
    10. ' space' → logprob: -8.031124114990234

Token 877: ' subdivision' (ID: 117101)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.22382168471813202
    2. 'search' → logprob: -1.7238216400146484
    3. ' search' → logprob: -4.473821640014648
    4. ' def' → logprob: -4.598821640014648
    5. '_search' → logprob: -8.598821640014648
    6. 'check' → logprob: -9.223821640014648
    7. ' subdivision' → logprob: -9.473821640014648
    8. 'division' → logprob: -9.598821640014648
    9. ' approach' → logprob: -9.598821640014648
    10. 'sampling' → logprob: -9.848821640014648

Token 878: ' refinement' (ID: 132590)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3154697120189667
    2. '       ' → logprob: -1.815469741821289
    3. ',' → logprob: -3.190469741821289
    4. 'def' → logprob: -3.565469741821289
    5. ':' → logprob: -4.690469741821289
    6. ' def' → logprob: -5.190469741821289
    7. '.' → logprob: -5.690469741821289
    8. ' to' → logprob: -5.815469741821289
    9. '
' → logprob: -5.940469741821289
    10. ' approach' → logprob: -6.065469741821289

Token 879: '.
' (ID: 558)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2910456955432892
    2. '       ' → logprob: -1.5410456657409668
    3. 'def' → logprob: -3.916045665740967
    4. '
' → logprob: -4.916045665740967
    5. ',' → logprob: -5.291045665740967
    6. '(' → logprob: -6.166045665740967
    7. ' def' → logprob: -6.916045665740967
    8. ':' → logprob: -7.041045665740967
    9. ' ' → logprob: -8.166046142578125
    10. 'import' → logprob: -8.291046142578125

Token 880: '        
' (ID: 3564)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01812559738755226
    2. '
' → logprob: -4.143125534057617
    3. '       ' → logprob: -7.143125534057617
    4. ' def' → logprob: -7.143125534057617
    5. 'def' → logprob: -7.893125534057617
    6. '    
' → logprob: -9.643125534057617
    7. '```' → logprob: -11.268125534057617
    8. ' indentation' → logprob: -11.268125534057617
    9. ',' → logprob: -11.643125534057617
    10. 'import' → logprob: -11.768125534057617

Token 881: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4282391667366028
    2. '       ' → logprob: -1.178239107131958
    3. ' def' → logprob: -3.428239107131958
    4. 'def' → logprob: -4.928239345550537
    5. 'import' → logprob: -7.678239345550537
    6. ' import' → logprob: -9.053238868713379
    7. '
' → logprob: -9.428238868713379
    8. ' margin' → logprob: -10.053238868713379
    9. '        
' → logprob: -10.803238868713379
    10. ' step' → logprob: -10.803238868713379

Token 882: ' class' (ID: 744)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.062354497611522675
    2. 'import' → logprob: -3.687354564666748
    3. 'from' → logprob: -4.062354564666748
    4. '   ' → logprob: -4.937354564666748
    5. 'margin' → logprob: -4.937354564666748
    6. 'step' → logprob: -6.937354564666748
    7. 'grid' → logprob: -7.062354564666748
    8. ' def' → logprob: -7.687354564666748
    9. 'MIN' → logprob: -7.937354564666748
    10. 'min' → logprob: -8.31235408782959

Token 883: ' Quad' (ID: 69708)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.387085884809494
    2. 'Node' → logprob: -2.5120859146118164
    3. 'Quad' → logprob: -3.2620859146118164
    4. 'def' → logprob: -4.012085914611816
    5. 'Checker' → logprob: -4.012085914611816
    6. 'Rectangle' → logprob: -4.137085914611816
    7. '_qu' → logprob: -4.137085914611816
    8. '_Rect' → logprob: -4.137085914611816
    9. '_Q' → logprob: -4.262085914611816
    10. 'Rect' → logprob: -4.637085914611816

Token 884: 'Tree' (ID: 8062)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tree' → logprob: -0.579830527305603
    2. 'Tree' → logprob: -0.829830527305603
    3. 'tre' → logprob: -6.454830646514893
    4. '       ' → logprob: -6.704830646514893
    5. 'ree' → logprob: -7.329830646514893
    6. '   ' → logprob: -8.704830169677734
    7. ' tree' → logprob: -10.079830169677734
    8. 'TREE' → logprob: -10.329830169677734
    9. '-tree' → logprob: -10.454830169677734
    10. 'Node' → logprob: -10.829830169677734

Token 885: 'Node' (ID: 2701)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0029205416794866323
    2. ':
' → logprob: -5.877920627593994
    3. '):' → logprob: -9.252920150756836
    4. '(object' → logprob: -12.252920150756836
    5. '>:' → logprob: -12.752920150756836
    6. '<|end|>' → logprob: -12.752920150756836
    7. '   ' → logprob: -12.877920150756836
    8. '):
' → logprob: -13.377920150756836
    9. '():' → logprob: -13.877920150756836
    10. ' :' → logprob: -14.002920150756836

Token 886: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.020793644711375237
    2. ':
' → logprob: -3.8957936763763428
    3. '<|end|>' → logprob: -9.520793914794922
    4. '(' → logprob: -9.645793914794922
    5. '   ' → logprob: -10.020793914794922
    6. '(object' → logprob: -10.270793914794922
    7. '):' → logprob: -11.270793914794922
    8. ' :' → logprob: -12.270793914794922
    9. '():' → logprob: -12.270793914794922
    10. ':

' → logprob: -13.020793914794922

Token 887: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.511271059513092
    2. ':' → logprob: -1.3862709999084473
    3. ':
' → logprob: -2.0112709999084473
    4. '   ' → logprob: -4.261270999908447
    5. '<|end|>' → logprob: -7.011270999908447
    6. '(object' → logprob: -7.761270999908447
    7. '           ' → logprob: -8.261271476745605
    8. '(' → logprob: -8.636271476745605
    9. '):
' → logprob: -9.136271476745605
    10. '     ' → logprob: -10.011271476745605

Token 888: ' def' (ID: 1056)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.32808783650398254
    2. 'def' (adapté à ' def') → logprob: -2.07808780670166
    3. ' __' → logprob: -2.57808780670166
    4. ' def' → logprob: -2.57808780670166
    5. '   ' → logprob: -5.95308780670166
    6. '       ' → logprob: -9.57808780670166
    7. '___' → logprob: -11.70308780670166
    8. '	def' → logprob: -11.95308780670166
    9. '.__' → logprob: -12.45308780670166
    10. '____' → logprob: -13.07808780670166

Token 889: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00016516048344783485
    2. 'init' → logprob: -9.375164985656738
    3. ' __' → logprob: -9.500164985656738
    4. '_init' → logprob: -13.375164985656738
    5. 'def' → logprob: -13.500164985656738
    6. '___' → logprob: -14.250164985656738
    7. '   ' → logprob: -14.250164985656738
    8. '**' → logprob: -14.500164985656738
    9. ' ' → logprob: -15.625164985656738
    10. '```' → logprob: -16.250165939331055

Token 890: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.7697225252486533e-06
    2. 'slots' → logprob: -12.500003814697266
    3. ' init' → logprob: -17.625003814697266
    4. '__' → logprob: -17.625003814697266
    5. '...' → logprob: -18.250003814697266
    6. '_init' → logprob: -19.000003814697266
    7. '```' → logprob: -19.000003814697266
    8. 'in' → logprob: -19.125003814697266
    9. 'inite' → logprob: -19.250003814697266
    10. '`' → logprob: -19.750003814697266

Token 891: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.011488670483231544
    2. '(self' → logprob: -4.511488437652588
    3. '__' → logprob: -7.886488437652588
    4. '(' → logprob: -10.386488914489746
    5. '__(
' → logprob: -10.511488914489746
    6. 'self' → logprob: -13.136488914489746
    7. ' (' → logprob: -13.136488914489746
    8. '_(' → logprob: -13.386488914489746
    9. '__((' → logprob: -13.761488914489746
    10. '__('' → logprob: -15.886488914489746

Token 892: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.421908958349377e-05
    2. ' self' → logprob: -10.25007438659668
    3. '           ' → logprob: -10.87507438659668
    4. '(self' → logprob: -11.37507438659668
    5. ',' → logprob: -12.50007438659668
    6. ',self' → logprob: -13.25007438659668
    7. '0' → logprob: -13.62507438659668
    8. '               ' → logprob: -13.87507438659668
    9. '                   ' → logprob: -15.12507438659668
    10. 's' → logprob: -15.75007438659668

Token 893: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.013009977526962757
    2. 'self' → logprob: -4.388010025024414
    3. '(self' → logprob: -8.513010025024414
    4. '               ' → logprob: -9.263010025024414
    5. ',self' → logprob: -9.263010025024414
    6. '           ' → logprob: -9.388010025024414
    7. ' ,' → logprob: -11.513010025024414
    8. ' self' → logprob: -12.388010025024414
    9. '                   ' → logprob: -12.513010025024414
    10. ',s' → logprob: -12.888010025024414

Token 894: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.18677139282226562
    2. 'xmin' → logprob: -1.9367713928222656
    3. 'self' → logprob: -3.6867713928222656
    4. '           ' → logprob: -8.061771392822266
    5. 'min' → logprob: -8.186771392822266
    6. 'xl' → logprob: -8.936771392822266
    7. '       ' → logprob: -8.936771392822266
    8. ' xmin' → logprob: -9.436771392822266
    9. '   ' → logprob: -9.686771392822266
    10. 'rect' → logprob: -10.436771392822266

Token 895: '0' (ID: 15)
  Prédit: '_min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_min' → logprob: -0.5499303936958313
    2. ',' → logprob: -1.5499303340911865
    3. 'min' → logprob: -1.9249303340911865
    4. '0' → logprob: -2.7999303340911865
    5. '1' → logprob: -5.924930572509766
    6. ':' → logprob: -6.799930572509766
    7. '           ' → logprob: -9.674930572509766
    8. ' ,' → logprob: -10.299930572509766
    9. '_start' → logprob: -10.424930572509766
    10. ':min' → logprob: -10.924930572509766

Token 896: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.176947600673884e-05
    2. ':' → logprob: -11.375021934509277
    3. ' ,' → logprob: -11.875021934509277
    4. ':int' → logprob: -13.875021934509277
    5. '<|end|>' → logprob: -13.875021934509277
    6. ',x' → logprob: -14.250021934509277
    7. ',int' → logprob: -15.875021934509277
    8. ',y' → logprob: -16.12502098083496
    9. '   ' → logprob: -16.25002098083496
    10. '‌,' → logprob: -16.37502098083496

Token 897: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0026828988920897245
    2. 'x' → logprob: -6.002682685852051
    3. ' y' → logprob: -8.50268268585205
    4. '<|end|>' → logprob: -12.62768268585205
    5. '	y' → logprob: -14.62768268585205
    6. ''y' → logprob: -15.62768268585205
    7. ',y' → logprob: -16.002683639526367
    8. '   ' → logprob: -16.752683639526367
    9. '‘y' → logprob: -16.877683639526367
    10. ' x' → logprob: -17.002683639526367

Token 898: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2127087504486553e-05
    2. ',' → logprob: -10.750021934509277
    3. ')' → logprob: -15.125021934509277
    4. '<|end|>' → logprob: -15.500021934509277
    5. ' ' → logprob: -17.375022888183594
    6. '_' → logprob: -17.500022888183594
    7. ' ,' → logprob: -17.625022888183594
    8. '    ' → logprob: -18.000022888183594
    9. '۰' → logprob: -18.125022888183594
    10. '<|end|>' → logprob: -18.500022888183594

Token 899: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5213274309644476e-05
    2. ',x' → logprob: -11.875015258789062
    3. ' ,' → logprob: -12.000015258789062
    4. '<|end|>' → logprob: -14.250015258789062
    5. ',
' → logprob: -14.875015258789062
    6. '),' → logprob: -15.500015258789062
    7. '       ' → logprob: -15.750015258789062
    8. '           ' → logprob: -15.750015258789062
    9. ',y' → logprob: -16.125015258789062
    10. '<|end|>' → logprob: -16.125015258789062

Token 900: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.002192137064412236
    2. ' x' → logprob: -6.12719202041626
    3. 'y' → logprob: -12.377192497253418
    4. '   ' → logprob: -13.877192497253418
    5. '           ' → logprob: -13.877192497253418
    6. '       ' → logprob: -15.252192497253418
    7. '	x' → logprob: -15.377192497253418
    8. ' y' → logprob: -17.2521915435791
    9. '    ' → logprob: -17.3771915435791
    10. ',' → logprob: -17.5021915435791

Token 901: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5327019095420837
    2. '1' → logprob: -0.9077019095420837
    3. ',' → logprob: -4.6577019691467285
    4. ')' → logprob: -10.53270149230957
    5. 'size' → logprob: -12.90770149230957
    6. '<|end|>' → logprob: -13.03270149230957
    7. '),' → logprob: -13.15770149230957
    8. ' ' → logprob: -13.28270149230957
    9. 'f' → logprob: -13.78270149230957
    10. 'w' → logprob: -14.03270149230957

Token 902: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.399378566537052e-05
    2. '<|end|>' → logprob: -10.000083923339844
    3. ' ,' → logprob: -10.375083923339844
    4. ',y' → logprob: -12.750083923339844
    5. ',x' → logprob: -13.000083923339844
    6. '<|end|>' → logprob: -13.750083923339844
    7. ')' → logprob: -15.500083923339844
    8. '=' → logprob: -15.750083923339844
    9. '):' → logprob: -16.125083923339844
    10. ',
' → logprob: -16.625083923339844

Token 903: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6931487321853638
    2. ' y' → logprob: -0.6931487321853638
    3. '    ' → logprob: -14.693148612976074
    4. '           ' → logprob: -15.068148612976074
    5. '            ' → logprob: -15.318148612976074
    6. '   ' → logprob: -15.443148612976074
    7. 'x' → logprob: -16.19314956665039
    8. ',' → logprob: -16.31814956665039
    9. ' ' → logprob: -16.56814956665039
    10. ',y' → logprob: -16.94314956665039

Token 904: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.49704986810684204
    2. '1' → logprob: -1.8720498085021973
    3. '0' → logprob: -1.8720498085021973
    4. '):' → logprob: -2.4970498085021973
    5. '):
' → logprob: -7.372049808502197
    6. ')' → logprob: -7.872049808502197
    7. '<|end|>' → logprob: -8.372050285339355
    8. ' ' → logprob: -8.997050285339355
    9. '  ' → logprob: -9.622050285339355
    10. '   ' → logprob: -9.747050285339355

Token 905: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2647710144519806
    2. ',' → logprob: -1.6397709846496582
    3. '):
' → logprob: -3.264770984649658
    4. '           ' → logprob: -8.889771461486816
    5. '               ' → logprob: -9.389771461486816
    6. ')' → logprob: -9.764771461486816
    7. '):
' → logprob: -10.264771461486816
    8. '       ' → logprob: -10.889771461486816
    9. ':' → logprob: -11.264771461486816
    10. ' ):' → logprob: -11.389771461486816

Token 906: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.3179868459701538
    2. ' depth' → logprob: -1.3179868459701538
    3. '           ' → logprob: -5.692986965179443
    4. 'level' → logprob: -7.442986965179443
    5. '               ' → logprob: -8.442986488342285
    6. ' level' → logprob: -8.692986488342285
    7. 'points' → logprob: -9.192986488342285
    8. 'screen' → logprob: -9.567986488342285
    9. ' points' → logprob: -10.567986488342285
    10. 'parent' → logprob: -11.067986488342285

Token 907: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.21228544414043427
    2. '=' → logprob: -1.7122853994369507
    3. '):
' → logprob: -5.21228551864624
    4. ',' → logprob: -5.96228551864624
    5. ':' → logprob: -5.96228551864624
    6. '=None' → logprob: -9.087285041809082
    7. ' ):' → logprob: -10.337285041809082
    8. '):
' → logprob: -10.462285041809082
    9. ')' → logprob: -11.462285041809082
    10. '   ' → logprob: -11.837285041809082

Token 908: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006685942644253373
    2. ':' → logprob: -8.2506685256958
    3. ',' → logprob: -9.2506685256958
    4. '       ' → logprob: -9.3756685256958
    5. '<|end|>' → logprob: -9.3756685256958
    6. '   ' → logprob: -10.2506685256958
    7. '           ' → logprob: -10.2506685256958
    8. ':
' → logprob: -11.1256685256958
    9. '                   ' → logprob: -11.5006685256958
    10. '                
' → logprob: -11.7506685256958

Token 909: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0006174852605909109
    2. ' self' → logprob: -7.750617504119873
    3. '       ' → logprob: -8.625617027282715
    4. '           ' → logprob: -12.625617027282715
    5. '               ' → logprob: -13.000617027282715
    6. '   ' → logprob: -14.000617027282715
    7. '	self' → logprob: -14.125617027282715
    8. ' ' → logprob: -16.50061798095703
    9. 'super' → logprob: -16.50061798095703
    10. '(self' → logprob: -17.87561798095703

Token 910: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.001037214300595224
    2. '.' → logprob: -6.876037120819092
    3. ' .' → logprob: -13.12603759765625
    4. '._' → logprob: -14.37603759765625
    5. 'x' → logprob: -14.75103759765625
    6. '.xhtml' → logprob: -14.75103759765625
    7. '.=' → logprob: -15.25103759765625
    8. '.xlabel' → logprob: -15.75103759765625
    9. '.gridx' → logprob: -16.00103759765625
    10. '   ' → logprob: -16.00103759765625

Token 911: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '_' → logprob: -15.75
    3. '۰' → logprob: -19.5
    4. '=' → logprob: -20.375
    5. ' =' → logprob: -20.5
    6. '00' → logprob: -21.875
    7. '\xe2\x82' → logprob: -21.875
    8. '０' → logprob: -22.0
    9. '   ' → logprob: -22.25
    10. ' ' → logprob: -22.375

Token 912: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8095912933349609
    2. '=' → logprob: -1.184591293334961
    3. ',' → logprob: -1.434591293334961
    4. '<|end|>' → logprob: -4.559591293334961
    5. ' ' → logprob: -8.934591293334961
    6. ' ,' → logprob: -9.559591293334961
    7. '<|end|>' → logprob: -9.559591293334961
    8. ')' → logprob: -10.059591293334961
    9. '=None' → logprob: -10.434591293334961
    10. ':' → logprob: -10.684591293334961

Token 913: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00861528143286705
    2. ' x' → logprob: -4.758615493774414
    3. '<|end|>' → logprob: -14.633615493774414
    4. '                ' → logprob: -16.008615493774414
    5. '<|end|>' → logprob: -16.508615493774414
    6. '0' → logprob: -16.883615493774414
    7. '                   ' → logprob: -17.258615493774414
    8. '{x' → logprob: -17.258615493774414
    9. '	x' → logprob: -17.383615493774414
    10. ')x' → logprob: -17.508615493774414

Token 914: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2668076455593109
    2. '<|end|>' → logprob: -1.5168076753616333
    3. ',' → logprob: -4.766807556152344
    4. ' ' → logprob: -6.016807556152344
    5. '                ' → logprob: -6.891807556152344
    6. '<|end|>' → logprob: -7.516807556152344
    7. ' ' → logprob: -7.641807556152344
    8. ')' → logprob: -8.141807556152344
    9. '               ' → logprob: -8.266807556152344
    10. '[' → logprob: -8.516807556152344

Token 915: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2479638010263443
    2. '<|end|>' → logprob: -1.747963786125183
    3. '
' → logprob: -3.8729639053344727
    4. '       ' → logprob: -4.747963905334473
    5. ',' → logprob: -4.747963905334473
    6. '           ' → logprob: -5.122963905334473
    7. '<|end|>' → logprob: -7.747963905334473
    8. ',
' → logprob: -8.247963905334473
    9. '                   ' → logprob: -9.497963905334473
    10. '                ' → logprob: -9.497963905334473

Token 916: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02229204960167408
    2. '<|end|>' → logprob: -4.147292137145996
    3. '       ' → logprob: -6.147292137145996
    4. '
' → logprob: -6.522292137145996
    5. '           ' → logprob: -6.647292137145996
    6. ',' → logprob: -6.897292137145996
    7. '<|end|>' → logprob: -9.772292137145996
    8. ',
' → logprob: -10.147292137145996
    9. '                
' → logprob: -10.647292137145996
    10. ')' → logprob: -10.772292137145996

Token 917: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.034738391637802124
    2. ' self' → logprob: -3.659738302230835
    3. '               ' → logprob: -4.784738540649414
    4. 'y' → logprob: -10.534738540649414
    5. '           ' → logprob: -12.284738540649414
    6. '                ' → logprob: -12.284738540649414
    7. '(self' → logprob: -12.409738540649414
    8. '[self' → logprob: -14.034738540649414
    9. '              ' → logprob: -14.284738540649414
    10. '                   ' → logprob: -14.284738540649414

Token 918: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.12278949469327927
    2. '0' → logprob: -2.8727893829345703
    3. '<|end|>' → logprob: -3.4977893829345703
    4. ' y' → logprob: -4.37278938293457
    5. ',' → logprob: -4.99778938293457
    6. '=' → logprob: -6.24778938293457
    7. 'x' → logprob: -6.24778938293457
    8. ',y' → logprob: -6.62278938293457
    9. '<|end|>' → logprob: -7.37278938293457
    10. ' ' → logprob: -7.62278938293457

Token 919: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '<|end|>' → logprob: -18.125
    3. '1' → logprob: -18.75
    4. '۰' → logprob: -19.125
    5. '<|end|>' → logprob: -19.75
    6. ' ' → logprob: -20.0
    7. '=' → logprob: -21.25
    8. '```' → logprob: -21.25
    9. '   ' → logprob: -21.75
    10. '_' → logprob: -22.0

Token 920: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 921: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -1.9027791495318525e-05
    2. ' y' → logprob: -10.875019073486328
    3. '<|end|>' → logprob: -17.125019073486328
    4. '                   ' → logprob: -17.875019073486328
    5. '‘y' → logprob: -18.375019073486328
    6. '<|end|>' → logprob: -18.875019073486328
    7. '	y' → logprob: -19.000019073486328
    8. 'self' → logprob: -19.000019073486328
    9. ''y' → logprob: -19.250019073486328
    10. '               ' → logprob: -19.750019073486328

Token 922: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.65101717156358e-05
    2. '1' → logprob: -9.250096321105957
    3. 'o' → logprob: -16.500097274780273
    4. '<|end|>' → logprob: -16.500097274780273
    5. ' ' → logprob: -17.375097274780273
    6. ')' → logprob: -17.750097274780273
    7. '<|end|>' → logprob: -17.937597274780273
    8. '۰' → logprob: -18.375097274780273
    9. '=' → logprob: -18.437597274780273
    10. '```' → logprob: -18.500097274780273

Token 923: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005868355743587017
    2. '<|end|>' → logprob: -5.380868434906006
    3. '           ' → logprob: -7.630868434906006
    4. 'self' → logprob: -9.005867958068848
    5. '       ' → logprob: -9.005867958068848
    6. '
' → logprob: -9.380867958068848
    7. '                ' → logprob: -9.505867958068848
    8. '              ' → logprob: -9.630867958068848
    9. '                
' → logprob: -9.630867958068848
    10. ',' → logprob: -9.880867958068848

Token 924: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0023920638486742973
    2. 'self' → logprob: -6.252392292022705
    3. '           ' → logprob: -8.002391815185547
    4. '       ' → logprob: -9.752391815185547
    5. ' self' → logprob: -10.752391815185547
    6. '                ' → logprob: -11.627391815185547
    7. '              ' → logprob: -11.752391815185547
    8. '             ' → logprob: -12.002391815185547
    9. '                   ' → logprob: -12.002391815185547
    10. '<|end|>' → logprob: -12.252391815185547

Token 925: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -6.392202976712724e-06
    2. ' self' → logprob: -12.500006675720215
    3. '               ' → logprob: -12.875006675720215
    4. '(self' → logprob: -17.3750057220459
    5. '           ' → logprob: -17.7500057220459
    6. 'x' → logprob: -18.0000057220459
    7. '                   ' → logprob: -18.1250057220459
    8. 's' → logprob: -18.3750057220459
    9. '	self' → logprob: -18.8750057220459
    10. 'y' → logprob: -19.1250057220459

Token 926: '.x' (ID: 3700)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010402000043541193
    2. 'y' → logprob: -9.625103950500488
    3. 'x' → logprob: -10.500103950500488
    4. '0' → logprob: -12.500103950500488
    5. '=' → logprob: -12.500103950500488
    6. '```' → logprob: -14.000103950500488
    7. ')' → logprob: -15.250103950500488
    8. '<|end|>' → logprob: -15.500103950500488
    9. '   ' → logprob: -15.625103950500488
    10. ' y' → logprob: -15.875103950500488

Token 927: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.45848218582978e-06
    2. '0' → logprob: -13.00000286102295
    3. '```' → logprob: -16.875001907348633
    4. '
' → logprob: -18.000001907348633
    5. '<|end|>' → logprob: -18.000001907348633
    6. '   ' → logprob: -18.437501907348633
    7. ')' → logprob: -19.125001907348633
    8. ' ' → logprob: -19.187501907348633
    9. '=' → logprob: -19.500001907348633
    10. '     ' → logprob: -19.562501907348633

Token 928: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 929: ' x' (ID: 1215)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0003360582049936056
    2. ' y' → logprob: -8.000335693359375
    3. 'self' → logprob: -15.000335693359375
    4. '   ' → logprob: -15.750335693359375
    5. '(y' → logprob: -17.000335693359375
    6. '	y' → logprob: -17.375335693359375
    7. 'x' → logprob: -17.500335693359375
    8. '       ' → logprob: -17.750335693359375
    9. ''y' → logprob: -17.750335693359375
    10. '           ' → logprob: -18.500335693359375

Token 930: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.842555426876061e-06
    2. '<|end|>' → logprob: -12.875004768371582
    3. '```' → logprob: -14.250004768371582
    4. ')' → logprob: -14.500004768371582
    5. '<|end|>' → logprob: -14.625004768371582
    6. '`' → logprob: -16.3750057220459
    7. '...' → logprob: -16.8125057220459
    8. '}' → logprob: -16.8750057220459
    9. '0' → logprob: -17.0625057220459
    10. '.' → logprob: -17.1250057220459

Token 931: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 932: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8518538475036621
    2. '               ' → logprob: -1.226853847503662
    3. '<|end|>' → logprob: -1.351853847503662
    4. '           ' → logprob: -4.476853847503662
    5. ',' → logprob: -5.226853847503662
    6. '                   ' → logprob: -6.601853847503662
    7. '<|end|>' → logprob: -6.976853847503662
    8. '```' → logprob: -7.226853847503662
    9. '   ' → logprob: -8.22685432434082
    10. '.' → logprob: -8.97685432434082

Token 933: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0002407282590866089
    2. '               ' → logprob: -8.875240325927734
    3. ' self' → logprob: -9.250240325927734
    4. '           ' → logprob: -12.500240325927734
    5. '       ' → logprob: -14.250240325927734
    6. '(self' → logprob: -16.125240325927734
    7. '[self' → logprob: -16.125240325927734
    8. '   ' → logprob: -16.250240325927734
    9. '	self' → logprob: -16.375240325927734
    10. 's' → logprob: -17.875240325927734

Token 934: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.2145998328924179
    2. '=' → logprob: -1.964599847793579
    3. '.y' → logprob: -3.214599847793579
    4. '0' → logprob: -4.964599609375
    5. ' =' → logprob: -5.589599609375
    6. '_y' → logprob: -7.089599609375
    7. '=y' → logprob: -8.339599609375
    8. '   ' → logprob: -8.589599609375
    9. ' y' → logprob: -8.589599609375
    10. '.' → logprob: -9.089599609375

Token 935: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.435139898210764e-05
    2. '0' → logprob: -10.000083923339844
    3. '<|end|>' → logprob: -10.500083923339844
    4. '<|end|>' → logprob: -12.500083923339844
    5. ')' → logprob: -12.625083923339844
    6. '```' → logprob: -14.500083923339844
    7. '   ' → logprob: -14.625083923339844
    8. ']' → logprob: -14.750083923339844
    9. '...' → logprob: -15.312583923339844
    10. '**' → logprob: -15.562583923339844

Token 936: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3134256899356842
    2. ' =' → logprob: -1.3134256601333618
    3. '<|end|>' → logprob: -8.93842601776123
    4. ')' → logprob: -11.06342601776123
    5. ' ' → logprob: -12.06342601776123
    6. '=self' → logprob: -12.93842601776123
    7. '=None' → logprob: -13.18842601776123
    8. ' =
' → logprob: -13.68842601776123
    9. '<|end|>' → logprob: -13.81342601776123
    10. '=
' → logprob: -13.81342601776123

Token 937: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0009137284359894693
    2. ' y' → logprob: -7.000913619995117
    3. 'self' → logprob: -13.125913619995117
    4. '	y' → logprob: -17.000913619995117
    5. ''y' → logprob: -17.125913619995117
    6. '       ' → logprob: -17.250913619995117
    7. '‘y' → logprob: -17.375913619995117
    8. '   ' → logprob: -17.750913619995117
    9. 'yj' → logprob: -18.125913619995117
    10. '(y' → logprob: -18.375913619995117

Token 938: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '0' → logprob: -16.75
    3. '```' → logprob: -18.375
    4. ' ' → logprob: -18.5
    5. '=' → logprob: -18.875
    6. '<|end|>' → logprob: -19.5625
    7. ')' → logprob: -20.1875
    8. '_' → logprob: -20.375
    9. 'y' → logprob: -20.4375
    10. '   ' → logprob: -20.5

Token 939: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.024735331535339355
    2. '<|end|>' → logprob: -4.399735450744629
    3. '       ' → logprob: -4.774735450744629
    4. '           ' → logprob: -5.899735450744629
    5. ',' → logprob: -8.024735450744629
    6. 'self' → logprob: -8.524735450744629
    7. '<|end|>' → logprob: -9.149735450744629
    8. '   ' → logprob: -10.024735450744629
    9. '
' → logprob: -10.149735450744629
    10. '                   ' → logprob: -10.149735450744629

Token 940: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.025891494005918503
    2. '       ' → logprob: -4.025891304016113
    3. '           ' → logprob: -5.275891304016113
    4. '<|end|>' → logprob: -6.025891304016113
    5. 'self' → logprob: -10.275891304016113
    6. ',' → logprob: -10.650891304016113
    7. '<|end|>' → logprob: -10.650891304016113
    8. '	       ' → logprob: -10.775891304016113
    9. '		       ' → logprob: -11.025891304016113
    10. '   ' → logprob: -11.400891304016113

Token 941: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.006278925109654665
    2. '           ' → logprob: -5.256278991699219
    3. '               ' → logprob: -7.006278991699219
    4. 'def' → logprob: -9.506278991699219
    5. ' self' → logprob: -9.756278991699219
    6. '       ' → logprob: -12.881278991699219
    7. '   ' → logprob: -13.256278991699219
    8. '            ' → logprob: -15.006278991699219
    9. '                   ' → logprob: -15.006278991699219
    10. '	self' → logprob: -15.381278991699219

Token 942: '.depth' (ID: 89791)
  Prédit: '.depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depth' → logprob: -0.00029041420202702284
    2. 'depth' → logprob: -8.375290870666504
    3. '.' → logprob: -10.250290870666504
    4. '.children' → logprob: -11.750290870666504
    5. ' .' → logprob: -12.500290870666504
    6. '_depth' → logprob: -12.875290870666504
    7. '.Depth' → logprob: -12.875290870666504
    8. '=' → logprob: -13.375290870666504
    9. '.dep' → logprob: -14.125290870666504
    10. ' =' → logprob: -14.375290870666504

Token 943: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10025186091661453
    2. ' =' → logprob: -2.3502519130706787
    3. ' +=' → logprob: -10.975252151489258
    4. '+=' → logprob: -11.100252151489258
    5. '<|end|>' → logprob: -11.475252151489258
    6. '   ' → logprob: -14.225252151489258
    7. ' ' → logprob: -14.225252151489258
    8. '+' → logprob: -14.850252151489258
    9. '    ' → logprob: -15.475252151489258
    10. ',' → logprob: -15.475252151489258

Token 944: ' depth' (ID: 13636)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.030709167942404747
    2. ' depth' → logprob: -3.7807092666625977
    3. '0' → logprob: -4.905709266662598
    4. ' ' → logprob: -11.780709266662598
    5. '(depth' → logprob: -11.780709266662598
    6. '                   ' → logprob: -11.905709266662598
    7. '               ' → logprob: -12.030709266662598
    8. '_depth' → logprob: -14.155709266662598
    9. '           ' → logprob: -14.530709266662598
    10. 'self' → logprob: -15.280709266662598

Token 945: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5632535815238953
    2. '<|end|>' → logprob: -0.9382535815238953
    3. '           ' → logprob: -3.31325364112854
    4. '<|end|>' → logprob: -6.438253402709961
    5. '               ' → logprob: -7.188253402709961
    6. '   ' → logprob: -8.188253402709961
    7. '
' → logprob: -9.563253402709961
    8. ',' → logprob: -9.688253402709961
    9. ' ' → logprob: -10.813253402709961
    10. '```' → logprob: -11.063253402709961

Token 946: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11402163654565811
    2. '           ' → logprob: -2.2390215396881104
    3. '<|end|>' → logprob: -6.9890217781066895
    4. '   ' → logprob: -8.864021301269531
    5. '               ' → logprob: -10.364021301269531
    6. '        
' → logprob: -10.739021301269531
    7. '<|end|>' → logprob: -11.114021301269531
    8. '
' → logprob: -11.114021301269531
    9. 'def' → logprob: -11.489021301269531
    10. '	       ' → logprob: -11.489021301269531

Token 947: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.05527208000421524
    2. '       ' → logprob: -3.305272102355957
    3. '           ' → logprob: -4.930272102355957
    4. 'def' → logprob: -5.055272102355957
    5. ' self' → logprob: -5.805272102355957
    6. '   ' → logprob: -8.055272102355957
    7. '               ' → logprob: -9.055272102355957
    8. '	self' → logprob: -11.680272102355957
    9. 'if' → logprob: -12.555272102355957
    10. ' def' → logprob: -12.555272102355957

Token 948: '.cover' (ID: 93824)
  Prédit: '.children'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.children' → logprob: -0.22262969613075256
    2. '.is' → logprob: -2.7226297855377197
    3. '.' → logprob: -2.8476297855377197
    4. '=' → logprob: -4.847629547119141
    5. '.points' → logprob: -4.847629547119141
    6. '.depth' → logprob: -5.472629547119141
    7. '.available' → logprob: -5.722629547119141
    8. '.sub' → logprob: -5.722629547119141
    9. '.safe' → logprob: -5.722629547119141
    10. 'children' → logprob: -5.847629547119141

Token 949: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.10022791475057602
    2. 'age' → logprob: -2.3502278327941895
    3. '=' → logprob: -11.100228309631348
    4. 's' → logprob: -13.100228309631348
    5. 'a' → logprob: -14.225228309631348
    6. 'aged' → logprob: -14.475228309631348
    7. '=None' → logprob: -14.725228309631348
    8. ' =' → logprob: -15.100228309631348
    9. 'ance' → logprob: -15.475228309631348
    10. 'ged' → logprob: -15.600228309631348

Token 950: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05492493882775307
    2. ' =' → logprob: -2.929924964904785
    3. 'd' → logprob: -11.054924964904785
    4. 's' → logprob: -11.679924964904785
    5. '_' → logprob: -12.054924964904785
    6. '_=' → logprob: -12.179924964904785
    7. '_points' → logprob: -13.179924964904785
    8. '=None' → logprob: -13.929924964904785
    9. '_count' → logprob: -14.054924964904785
    10. '=True' → logprob: -14.554924964904785

Token 951: ' None' (ID: 4662)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.44597330689430237
    2. 'None' → logprob: -1.07097327709198
    3. 'True' → logprob: -4.0709733963012695
    4. ' False' → logprob: -10.69597339630127
    5. 'all' → logprob: -11.07097339630127
    6. ' None' → logprob: -11.19597339630127
    7. '(False' → logprob: -13.19597339630127
    8. '   ' → logprob: -13.32097339630127
    9. '0' → logprob: -13.94597339630127
    10. '_None' → logprob: -13.94597339630127

Token 952: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 953: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 954: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.06235192343592644
    2. ' None' → logprob: -3.312351942062378
    3. '           ' → logprob: -4.687351703643799
    4. 'False' → logprob: -5.187351703643799
    5. 'True' → logprob: -5.562351703643799
    6. '<|end|>' → logprob: -5.812351703643799
    7. 'self' → logprob: -7.062351703643799
    8. '#' → logprob: -8.312352180480957
    9. '               ' → logprob: -8.312352180480957
    10. 'bool' → logprob: -8.812352180480957

Token 955: ' means' (ID: 4748)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 956: ' unknown' (ID: 17927)
  Prédit: 'unknown'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unknown' → logprob: -0.012327632866799831
    2. 'und' → logprob: -4.512327671051025
    3. 'unchecked' → logprob: -6.887327671051025
    4. 'undefined' → logprob: -9.262327194213867
    5. ' unknown' → logprob: -10.012327194213867
    6. 'un' → logprob: -10.262327194213867
    7. 'not' → logprob: -10.262327194213867
    8. 'unk' → logprob: -10.762327194213867
    9. 'Unknown' → logprob: -11.762327194213867
    10. 'unc' → logprob: -12.262327194213867

Token 957: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4593125581741333
    2. '               ' → logprob: -1.2093125581741333
    3. '<|end|>' → logprob: -2.7093124389648438
    4. '       ' → logprob: -6.459312438964844
    5. ',' → logprob: -6.834312438964844
    6. '   ' → logprob: -8.209312438964844
    7. '<|end|>' → logprob: -8.834312438964844
    8. '
' → logprob: -10.084312438964844
    9. '```' → logprob: -10.209312438964844
    10. '                   ' → logprob: -10.584312438964844

Token 958: ' True' (ID: 6432)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.7460252642631531
    2. '           ' → logprob: -1.3710253238677979
    3. 'self' → logprob: -1.4960253238677979
    4. '               ' → logprob: -3.871025323867798
    5. ' not' → logprob: -4.746025085449219
    6. ' else' → logprob: -5.746025085449219
    7. 'False' → logprob: -5.746025085449219
    8. ' False' → logprob: -6.371025085449219
    9. '       ' → logprob: -6.621025085449219
    10. '                   ' → logprob: -6.871025085449219

Token 959: ' means' (ID: 4748)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16819436848163605
    2. ' or' → logprob: -2.16819429397583
    3. 'or' → logprob: -3.79319429397583
    4. '<|end|>' → logprob: -4.04319429397583
    5. ')' → logprob: -9.668194770812988
    6. '/' → logprob: -9.668194770812988
    7. 'elif' → logprob: -9.918194770812988
    8. ' ,' → logprob: -10.043194770812988
    9. '<|end|>' → logprob: -10.418194770812988
    10. '
' → logprob: -11.043194770812988

Token 960: ' no' (ID: 860)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.5073660612106323
    2. 'fully' → logprob: -1.0073660612106323
    3. ' fully' → logprob: -4.382366180419922
    4. ' covered' → logprob: -4.382366180419922
    5. 'all' → logprob: -5.507366180419922
    6. 'com' → logprob: -6.507366180419922
    7. 'full' → logprob: -7.007366180419922
    8. ' all' → logprob: -8.132366180419922
    9. 'ent' → logprob: -8.882366180419922
    10. 'no' → logprob: -9.257366180419922

Token 961: ' safe' (ID: 7703)
  Prédit: 'safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'safe' → logprob: -0.10956356674432755
    2. ' safe' → logprob: -2.4845635890960693
    3. 'coverage' → logprob: -5.10956335067749
    4. 'space' → logprob: -5.73456335067749
    5. 'over' → logprob: -6.10956335067749
    6. 'point' → logprob: -6.23456335067749
    7. 'cover' → logprob: -6.60956335067749
    8. ' coverage' → logprob: -7.10956335067749
    9. '_safe' → logprob: -7.23456335067749
    10. ' overlap' → logprob: -7.35956335067749

Token 962: ',' (ID: 11)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.12224909663200378
    2. 'space' → logprob: -2.872249126434326
    3. 'point' → logprob: -3.247249126434326
    4. ' area' → logprob: -4.497249126434326
    5. 'spot' → logprob: -5.622249126434326
    6. 'areas' → logprob: -6.372249126434326
    7. 'points' → logprob: -6.497249126434326
    8. 'zone' → logprob: -7.372249126434326
    9. ' space' → logprob: -8.122248649597168
    10. ',' → logprob: -8.747248649597168

Token 963: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.4742148220539093
    2. 'False' → logprob: -0.9742147922515869
    3. ' and' → logprob: -9.224214553833008
    4. '           ' → logprob: -11.599214553833008
    5. 'and' → logprob: -11.599214553833008
    6. ' or' → logprob: -11.974214553833008
    7. '               ' → logprob: -12.349214553833008
    8. '(False' → logprob: -13.099214553833008
    9. '=False' → logprob: -13.599214553833008
    10. ' else' → logprob: -13.724214553833008

Token 964: ' means' (ID: 4748)
  Prédit: ' means'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' means' → logprob: -0.07889925688505173
    2. 'means' → logprob: -2.5788991451263428
    3. 'mean' → logprob: -12.578899383544922
    4. ' mean' → logprob: -12.578899383544922
    5. 'meaning' → logprob: -13.203899383544922
    6. 'Means' → logprob: -14.828899383544922
    7. ' meaning' → logprob: -16.453899383544922
    8. '<|end|>' → logprob: -16.578899383544922
    9. '#' → logprob: -16.828899383544922
    10. ' safe' → logprob: -18.328899383544922

Token 965: ' safe' (ID: 7703)
  Prédit: 'safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'safe' → logprob: -0.6090506911277771
    2. ' safe' → logprob: -1.1090507507324219
    3. 'some' → logprob: -2.359050750732422
    4. ' some' → logprob: -5.359050750732422
    5. 'there' → logprob: -5.359050750732422
    6. 'has' → logprob: -5.484050750732422
    7. ' has' → logprob: -5.734050750732422
    8. 'exists' → logprob: -5.734050750732422
    9. 'possible' → logprob: -5.984050750732422
    10. ' at' → logprob: -6.234050750732422

Token 966: ' area' (ID: 3624)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4348469078540802
    2. '<|end|>' → logprob: -1.0598468780517578
    3. '<|end|>' → logprob: -5.934846878051758
    4. '       ' → logprob: -5.934846878051758
    5. ')' → logprob: -8.184846878051758
    6. '               ' → logprob: -8.809846878051758
    7. '   ' → logprob: -9.184846878051758
    8. '
' → logprob: -9.559846878051758
    9. ',' → logprob: -9.684846878051758
    10. '```' → logprob: -10.309846878051758

Token 967: ' exists' (ID: 13031)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7514435052871704
    2. '<|end|>' → logprob: -0.7514435052871704
    3. '       ' → logprob: -3.376443386077881
    4. '               ' → logprob: -4.126443386077881
    5. '<|end|>' → logprob: -6.001443386077881
    6. '   ' → logprob: -6.501443386077881
    7. ')' → logprob: -6.876443386077881
    8. '
' → logprob: -8.126443862915039
    9. ',' → logprob: -8.251443862915039
    10. '```' → logprob: -9.001443862915039

Token 968: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2372380644083023
    2. '<|end|>' → logprob: -1.9872380495071411
    3. '       ' → logprob: -2.7372381687164307
    4. ')' → logprob: -5.862237930297852
    5. '               ' → logprob: -5.862237930297852
    6. '   ' → logprob: -6.487237930297852
    7. ',' → logprob: -7.112237930297852
    8. '<|end|>' → logprob: -7.362237930297852
    9. '
' → logprob: -8.362237930297852
    10. ' ' → logprob: -9.487237930297852

Token 969: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03851017728447914
    2. '       ' → logprob: -3.2885100841522217
    3. '   ' → logprob: -8.2885103225708
    4. '<|end|>' → logprob: -9.1635103225708
    5. 'def' → logprob: -10.7885103225708
    6. '
' → logprob: -10.9135103225708
    7. '            
' → logprob: -11.0385103225708
    8. '               ' → logprob: -11.0385103225708
    9. '	       ' → logprob: -12.0385103225708
    10. '        
' → logprob: -12.1635103225708

Token 970: ' def' (ID: 1056)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6217839121818542
    2. 'def' (adapté à ' def') → logprob: -1.121783971786499
    3. '       ' → logprob: -2.246783971786499
    4. '   ' → logprob: -3.496783971786499
    5. ' def' → logprob: -6.74678373336792
    6. ' ' → logprob: -10.121784210205078
    7. 'import' → logprob: -11.246784210205078
    8. '            
' → logprob: -11.496784210205078
    9. '        
' → logprob: -12.246784210205078
    10. '
' → logprob: -12.371784210205078

Token 971: ' corners' (ID: 39479)
  Prédit: 'contains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contains' → logprob: -0.8823956251144409
    2. 'sub' → logprob: -1.632395625114441
    3. 'area' → logprob: -1.882395625114441
    4. 'is' → logprob: -2.3823957443237305
    5. '_sub' → logprob: -3.6323957443237305
    6. 'corner' → logprob: -3.6323957443237305
    7. 'check' → logprob: -4.0073957443237305
    8. '_area' → logprob: -4.0073957443237305
    9. ' contains' → logprob: -4.5073957443237305
    10. 'size' → logprob: -4.7573957443237305

Token 972: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002539632609114051
    2. '(' → logprob: -6.00253963470459
    3. '(
' → logprob: -10.50253963470459
    4. 'self' → logprob: -10.75253963470459
    5. '(s' → logprob: -12.37753963470459
    6. ' (' → logprob: -12.87753963470459
    7. '()' → logprob: -13.50253963470459
    8. '   ' → logprob: -14.00253963470459
    9. '[' → logprob: -14.12753963470459
    10. '=' → logprob: -14.12753963470459

Token 973: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.05442752689123154
    2. '):' → logprob: -3.0544276237487793
    3. 'self' → logprob: -5.429427623748779
    4. '):
' → logprob: -7.554427623748779
    5. '(' → logprob: -8.054427146911621
    6. '():' → logprob: -8.054427146911621
    7. ')' → logprob: -8.929427146911621
    8. ':' → logprob: -10.804427146911621
    9. 'def' → logprob: -10.804427146911621
    10. '()' → logprob: -10.804427146911621

Token 974: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0029881594236940145
    2. 'return' → logprob: -6.002988338470459
    3. ' return' → logprob: -9.0029878616333
    4. '	           ' → logprob: -9.2529878616333
    5. ':' → logprob: -10.2529878616333
    6. '()' → logprob: -10.2529878616333
    7. '[' → logprob: -11.0029878616333
    8. '[
' → logprob: -11.0029878616333
    9. '		       ' → logprob: -11.0029878616333
    10. '           ' → logprob: -11.1279878616333

Token 975: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0013621398247778416
    2. ' return' → logprob: -6.751362323760986
    3. '               ' → logprob: -8.626361846923828
    4. 'yield' → logprob: -11.501361846923828
    5. '	return' → logprob: -14.001361846923828
    6. ')return' → logprob: -14.751361846923828
    7. '[
' → logprob: -14.876361846923828
    8. ':return' → logprob: -14.876361846923828
    9. '```' → logprob: -15.876361846923828
    10. '{return' → logprob: -16.626361846923828

Token 976: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5520151257514954
    2. '[(' → logprob: -1.5520150661468506
    3. '[
' → logprob: -1.5520150661468506
    4. '(Point' → logprob: -7.55201530456543
    5. '[self' → logprob: -10.92701530456543
    6. 'Point' → logprob: -11.30201530456543
    7. ' [
' → logprob: -12.67701530456543
    8. '[((' → logprob: -12.92701530456543
    9. ' [' → logprob: -13.17701530456543
    10. ' [(' → logprob: -13.30201530456543

Token 977: 'Point' (ID: 4219)
  Prédit: 'Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -9.877503907773644e-05
    2. '(Point' → logprob: -9.750099182128906
    3. '           ' → logprob: -10.750099182128906
    4. ' Point' → logprob: -11.250099182128906
    5. '               ' → logprob: -12.500099182128906
    6. '                   ' → logprob: -14.250099182128906
    7. '(' → logprob: -15.000099182128906
    8. '[' → logprob: -15.500099182128906
    9. '	Point' → logprob: -15.500099182128906
    10. 'self' → logprob: -15.500099182128906

Token 978: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -8.2994620242971e-06
    2. '(' → logprob: -12.000008583068848
    3. 'self' → logprob: -13.375008583068848
    4. '               ' → logprob: -15.125008583068848
    5. '(
' → logprob: -16.12500762939453
    6. ' (' → logprob: -16.75000762939453
    7. '(s' → logprob: -18.25000762939453
    8. '           ' → logprob: -18.25000762939453
    9. '[self' → logprob: -19.00000762939453
    10. '                   ' → logprob: -19.12500762939453

Token 979: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0015915116528049111
    2. 'self' → logprob: -6.501591682434082
    3. '(self' → logprob: -9.501591682434082
    4. '.' → logprob: -12.376591682434082
    5. 'x' → logprob: -12.751591682434082
    6. ' self' → logprob: -12.876591682434082
    7. '.self' → logprob: -13.501591682434082
    8. '               ' → logprob: -14.001591682434082
    9. '.s' → logprob: -14.126591682434082
    10. ' .' → logprob: -14.251591682434082

Token 980: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. 'self' → logprob: -12.625003814697266
    3. ',' → logprob: -17.000003814697266
    4. ' ' → logprob: -17.500003814697266
    5. '   ' → logprob: -17.500003814697266
    6. '(self' → logprob: -18.250003814697266
    7. ')' → logprob: -18.625003814697266
    8. ' self' → logprob: -18.625003814697266
    9. '_' → logprob: -18.875003814697266
    10. '.' → logprob: -19.125003814697266

Token 981: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003448792558629066
    2. ',self' → logprob: -8.000345230102539
    3. ',
' → logprob: -12.375345230102539
    4. ' ,' → logprob: -12.625345230102539
    5. 'self' → logprob: -13.750345230102539
    6. ',

' → logprob: -14.500345230102539
    7. '<|end|>' → logprob: -15.500345230102539
    8. ')' → logprob: -17.37534523010254
    9. ',y' → logprob: -17.62534523010254
    10. '),' → logprob: -17.62534523010254

Token 982: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002314303710591048
    2. ' self' → logprob: -8.375231742858887
    3. '(self' → logprob: -15.000231742858887
    4. '[self' → logprob: -15.375231742858887
    5. '	self' → logprob: -16.00023078918457
    6. '<|end|>' → logprob: -16.62523078918457
    7. '               ' → logprob: -17.00023078918457
    8. ',self' → logprob: -17.62523078918457
    9. '$self' → logprob: -17.62523078918457
    10. ' ' → logprob: -17.62523078918457

Token 983: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.26882603764533997
    2. 'self' → logprob: -1.8938260078430176
    3. 'y' → logprob: -2.6438260078430176
    4. '0' → logprob: -4.268826007843018
    5. '.' → logprob: -9.893826484680176
    6. '   ' → logprob: -10.768826484680176
    7. '.self' → logprob: -10.768826484680176
    8. '       ' → logprob: -11.393826484680176
    9. ' self' → logprob: -11.643826484680176
    10. '1' → logprob: -12.893826484680176

Token 984: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.03521392197581e-05
    2. '1' → logprob: -10.625030517578125
    3. 'self' → logprob: -12.125030517578125
    4. '   ' → logprob: -16.125030517578125
    5. ')' → logprob: -16.250030517578125
    6. '۰' → logprob: -16.625030517578125
    7. '       ' → logprob: -17.437530517578125
    8. ',' → logprob: -17.687530517578125
    9. ' ' → logprob: -17.812530517578125
    10. '```' → logprob: -17.875030517578125

Token 985: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.13699793815612793
    2. ',' → logprob: -2.636997938156128
    3. '),
' → logprob: -2.886997938156128
    4. '),

' → logprob: -7.886998176574707
    5. ',
' → logprob: -8.261998176574707
    6. '),
' → logprob: -10.636998176574707
    7. '       ' → logprob: -11.386998176574707
    8. ')' → logprob: -11.386998176574707
    9. '           ' → logprob: -11.511998176574707
    10. ',),
' → logprob: -12.386998176574707

Token 986: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.31777310371398926
    2. ' Point' → logprob: -1.3177731037139893
    3. '               ' → logprob: -5.69277286529541
    4. '                   ' → logprob: -7.44277286529541
    5. '                ' → logprob: -8.56777286529541
    6. '                    ' → logprob: -8.94277286529541
    7. '                       ' → logprob: -9.81777286529541
    8. '                        ' → logprob: -10.44277286529541
    9. '                      ' → logprob: -10.44277286529541
    10. '           ' → logprob: -10.56777286529541

Token 987: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00047726318007335067
    2. '(' → logprob: -7.750477313995361
    3. 'self' → logprob: -10.500476837158203
    4. '(Point' → logprob: -11.000476837158203
    5. ' (' → logprob: -13.625476837158203
    6. '(
' → logprob: -15.000476837158203
    7. '   ' → logprob: -15.750476837158203
    8. '[self' → logprob: -15.875476837158203
    9. '       ' → logprob: -16.250476837158203
    10. '(s' → logprob: -16.500476837158203

Token 988: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.05026816576719284
    2. 'self' → logprob: -3.0502681732177734
    3. 'x' → logprob: -6.425268173217773
    4. '1' → logprob: -11.050268173217773
    5. '.self' → logprob: -11.300268173217773
    6. ' self' → logprob: -11.425268173217773
    7. '.s' → logprob: -11.925268173217773
    8. '0' → logprob: -12.925268173217773
    9. ' .' → logprob: -13.675268173217773
    10. '	self' → logprob: -13.800268173217773

Token 989: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5760000944137573
    2. '1' → logprob: -0.8260000944137573
    3. '
' → logprob: -11.388500213623047
    4. 'self' → logprob: -11.638500213623047
    5. '```' → logprob: -12.513500213623047
    6. ')' → logprob: -12.576000213623047
    7. '

' → logprob: -13.326000213623047
    8. '   ' → logprob: -13.763500213623047
    9. '),' → logprob: -13.826000213623047
    10. '[self' → logprob: -13.888500213623047

Token 990: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.8828707804204896e-05
    2. ' ,' → logprob: -10.625048637390137
    3. ',self' → logprob: -10.875048637390137
    4. '<|end|>' → logprob: -12.625048637390137
    5. ',
' → logprob: -13.500048637390137
    6. 'self' → logprob: -15.625048637390137
    7. ')' → logprob: -16.250049591064453
    8. '),' → logprob: -16.250049591064453
    9. ',y' → logprob: -16.875049591064453
    10. ',s' → logprob: -16.875049591064453

Token 991: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.006734080612659454
    2. ' self' → logprob: -5.0067338943481445
    3. '(self' → logprob: -12.506733894348145
    4. '[self' → logprob: -12.506733894348145
    5. '               ' → logprob: -12.756733894348145
    6. '           ' → logprob: -13.256733894348145
    7. '	self' → logprob: -13.381733894348145
    8. ' ' → logprob: -13.631733894348145
    9. '<|end|>' → logprob: -14.756733894348145
    10. '=self' → logprob: -14.881733894348145

Token 992: '.y' (ID: 4486)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09616994857788086
    2. 'self' → logprob: -2.471169948577881
    3. 'y' → logprob: -5.596169948577881
    4. '1' → logprob: -5.846169948577881
    5. ',' → logprob: -9.221170425415039
    6. ',self' → logprob: -9.221170425415039
    7. ' self' → logprob: -9.471170425415039
    8. '[self' → logprob: -9.721170425415039
    9. '.y' → logprob: -10.221170425415039
    10. ')' → logprob: -10.346170425415039

Token 993: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018411019118502736
    2. '0' → logprob: -8.625184059143066
    3. ')' → logprob: -14.000184059143066
    4. '```' → logprob: -14.437684059143066
    5. 'y' → logprob: -14.687684059143066
    6. ' ' → logprob: -15.875184059143066
    7. '۱' → logprob: -16.000185012817383
    8. ')]' → logprob: -16.000185012817383
    9. '১' → logprob: -16.062685012817383
    10. '   ' → logprob: -16.125185012817383

Token 994: '),
' (ID: 2313)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.576994001865387
    2. '),' → logprob: -0.826994001865387
    3. '),
' → logprob: -7.201993942260742
    4. ',
' → logprob: -8.576993942260742
    5. ')' → logprob: -9.826993942260742
    6. ' ,' → logprob: -10.951993942260742
    7. '),

' → logprob: -11.076993942260742
    8. ',),' → logprob: -11.701993942260742
    9. ' ),' → logprob: -11.951993942260742
    10. '],' → logprob: -12.076993942260742

Token 995: '                       ' (ID: 968)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -0.422848641872406
    2. ' Point' → logprob: -1.1728487014770508
    3. '               ' → logprob: -3.672848701477051
    4. '                   ' → logprob: -4.922848701477051
    5. '           ' → logprob: -6.922848701477051
    6. '                ' → logprob: -7.297848701477051
    7. '                    ' → logprob: -7.797848701477051
    8. '                       ' → logprob: -8.92284870147705
    9. '                     ' → logprob: -9.29784870147705
    10. '                  ' → logprob: -9.92284870147705

Token 996: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' (adapté à ' Point') → logprob: -0.0790521651506424
    2. ' Point' → logprob: -2.579052209854126
    3. '           ' → logprob: -9.204051971435547
    4. '               ' → logprob: -10.079051971435547
    5. '                   ' → logprob: -11.329051971435547
    6. '	Point' → logprob: -13.079051971435547
    7. '   ' → logprob: -14.079051971435547
    8. '            ' → logprob: -14.204051971435547
    9. '                       ' → logprob: -14.454051971435547
    10. '                ' → logprob: -14.579051971435547

Token 997: '(self' (ID: 2402)
  Prédit: '(Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Point' → logprob: -0.3438083529472351
    2. '(self' → logprob: -1.3438084125518799
    3. 'Point' → logprob: -4.218808174133301
    4. 'self' → logprob: -4.218808174133301
    5. '(' → logprob: -7.468808174133301
    6. ' Point' → logprob: -10.4688081741333
    7. ' self' → logprob: -11.0938081741333
    8. '(
' → logprob: -11.7188081741333
    9. ' (' → logprob: -12.0938081741333
    10. '                   ' → logprob: -12.2188081741333

Token 998: '.x' (ID: 3700)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.16410735249519348
    2. '.x' → logprob: -1.914107322692871
    3. 'x' → logprob: -5.664107322692871
    4. ' self' → logprob: -8.289107322692871
    5. '[self' → logprob: -10.039107322692871
    6. '.self' → logprob: -10.414107322692871
    7. '(self' → logprob: -10.789107322692871
    8. '_x' → logprob: -11.414107322692871
    9. '=self' → logprob: -11.539107322692871
    10. ',self' → logprob: -11.539107322692871

Token 999: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.843177233240567e-05
    2. '0' → logprob: -11.875018119812012
    3. '```' → logprob: -12.625018119812012
    4. '
' → logprob: -13.812518119812012
    5. 'self' → logprob: -13.937518119812012
    6. 'class' → logprob: -15.375018119812012
    7. ',' → logprob: -15.437518119812012
    8. '۱' → logprob: -15.437518119812012
    9. 'import' → logprob: -15.500018119812012
    10. 'The' → logprob: -15.500018119812012

Token 1000: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005610156804323196
    2. ',self' → logprob: -7.750561237335205
    3. ',
' → logprob: -10.000560760498047
    4. 'self' → logprob: -10.125560760498047
    5. ' ,' → logprob: -10.125560760498047
    6. '(self' → logprob: -13.375560760498047
    7. '       ' → logprob: -13.875560760498047
    8. '<|end|>' → logprob: -14.125560760498047
    9. '[self' → logprob: -15.125560760498047
    10. ' self' → logprob: -15.375560760498047

Token 1001: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011050059460103512
    2. ' self' → logprob: -4.511050224304199
    3. '(self' → logprob: -13.8860502243042
    4. '[self' → logprob: -14.3860502243042
    5. '                       ' → logprob: -14.6360502243042
    6. '                   ' → logprob: -16.636049270629883
    7. '	self' → logprob: -16.761049270629883
    8. '=self' → logprob: -17.386049270629883
    9. ' ' → logprob: -17.636049270629883
    10. '                               ' → logprob: -18.011049270629883

Token 1002: '.y' (ID: 4486)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.600520133972168
    2. '1' → logprob: -1.225520133972168
    3. 'y' → logprob: -1.850520133972168
    4. '
' → logprob: -8.475520133972168
    5. '.y' → logprob: -8.850520133972168
    6. '```' → logprob: -8.850520133972168
    7. '[self' → logprob: -10.600520133972168
    8. ' self' → logprob: -10.850520133972168
    9. '[' → logprob: -10.850520133972168
    10. 's' → logprob: -11.350520133972168

Token 1003: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.729906196298543e-06
    2. '0' → logprob: -12.375009536743164
    3. '```' → logprob: -13.625009536743164
    4. '
' → logprob: -14.250009536743164
    5. 'self' → logprob: -15.000009536743164
    6. '<|end|>' → logprob: -15.125009536743164
    7. 'y' → logprob: -15.187509536743164
    8. ')' → logprob: -15.250009536743164
    9. '                   ' → logprob: -15.562509536743164
    10. ',' → logprob: -15.625009536743164

Token 1004: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31423231959342957
    2. '),' → logprob: -1.314232349395752
    3. ',
' → logprob: -7.564232349395752
    4. ' ,' → logprob: -8.564231872558594
    5. '),
' → logprob: -8.689231872558594
    6. ',),' → logprob: -10.689231872558594
    7. ')' → logprob: -10.814231872558594
    8. '],' → logprob: -11.064231872558594
    9. ',

' → logprob: -12.064231872558594
    10. ' ),' → logprob: -12.064231872558594

Token 1005: ' Point' (ID: 9971)
  Prédit: ' Point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Point' → logprob: -0.3870680034160614
    2. 'Point' → logprob: -1.1370680332183838
    3. '                       ' → logprob: -8.887067794799805
    4. '           ' → logprob: -10.262067794799805
    5. '               ' → logprob: -11.887067794799805
    6. '(Point' → logprob: -12.012067794799805
    7. '                   ' → logprob: -12.262067794799805
    8. '	Point' → logprob: -13.387067794799805
    9. '                        ' → logprob: -14.137067794799805
    10. '   ' → logprob: -14.137067794799805

Token 1006: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.005913865752518177
    2. 'self' → logprob: -5.380913734436035
    3. '(Point' → logprob: -6.755913734436035
    4. 'Point' → logprob: -9.630913734436035
    5. '(' → logprob: -9.755913734436035
    6. ' self' → logprob: -13.130913734436035
    7. '(
' → logprob: -13.755913734436035
    8. '[self' → logprob: -14.505913734436035
    9. ' (' → logprob: -14.630913734436035
    10. '.Point' → logprob: -15.130913734436035

Token 1007: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.001216305885463953
    2. 'self' → logprob: -6.751216411590576
    3. 'x' → logprob: -10.126215934753418
    4. ' self' → logprob: -13.876215934753418
    5. '_x' → logprob: -13.876215934753418
    6. '.self' → logprob: -13.876215934753418
    7. 'Self' → logprob: -14.626215934753418
    8. 'class' → logprob: -14.751215934753418
    9. '[self' → logprob: -14.876215934753418
    10. '.s' → logprob: -15.251215934753418

Token 1008: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.251091377227567e-05
    2. ')' → logprob: -11.812542915344238
    3. '...' → logprob: -12.500042915344238
    4. '<|end|>' → logprob: -12.750042915344238
    5. '```' → logprob: -12.812542915344238
    6. 'y' → logprob: -12.812542915344238
    7. '<|end|>' → logprob: -13.375042915344238
    8. 'self' → logprob: -13.437542915344238
    9. '۱' → logprob: -13.750042915344238
    10. 's' → logprob: -13.875042915344238

Token 1009: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.5597102396423e-05
    2. ',self' → logprob: -10.750035285949707
    3. ',
' → logprob: -12.250035285949707
    4. ' ,' → logprob: -12.500035285949707
    5. 'self' → logprob: -12.875035285949707
    6. '<|end|>' → logprob: -13.125035285949707
    7. '<|end|>' → logprob: -15.500035285949707
    8. 'The' → logprob: -16.000036239624023
    9. ')' → logprob: -16.500036239624023
    10. ',user' → logprob: -17.000036239624023

Token 1010: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0015078396536409855
    2. ' self' → logprob: -6.501507759094238
    3. '(self' → logprob: -13.126507759094238
    4. '[self' → logprob: -13.376507759094238
    5. '<|end|>' → logprob: -15.126507759094238
    6. '	self' → logprob: -15.376507759094238
    7. '                   ' → logprob: -15.501507759094238
    8. '           ' → logprob: -15.751507759094238
    9. '       ' → logprob: -15.876507759094238
    10. 'y' → logprob: -16.126508712768555

Token 1011: '.y' (ID: 4486)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03177298977971077
    2. 'y' → logprob: -3.531773090362549
    3. '_y' → logprob: -7.281773090362549
    4. 'self' → logprob: -7.656773090362549
    5. '.y' → logprob: -7.656773090362549
    6. ')' → logprob: -9.65677261352539
    7. '<|end|>' → logprob: -9.65677261352539
    8. '...' → logprob: -10.65677261352539
    9. '<|end|>' → logprob: -10.65677261352539
    10. ',' → logprob: -10.65677261352539

Token 1012: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5690089639974758e-05
    2. 'y' → logprob: -11.250015258789062
    3. '
' → logprob: -14.375015258789062
    4. ')' → logprob: -14.500015258789062
    5. '.y' → logprob: -14.625015258789062
    6. '```' → logprob: -15.250015258789062
    7. '0' → logprob: -16.312515258789062
    8. '۱' → logprob: -16.375015258789062
    9. 'h' → logprob: -16.687515258789062
    10. 's' → logprob: -16.812515258789062

Token 1013: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.4027406871318817
    2. ']' → logprob: -1.152740716934204
    3. ')' → logprob: -4.277740478515625
    4. '       ' → logprob: -7.527740478515625
    5. '           ' → logprob: -7.777740478515625
    6. ',' → logprob: -8.027740478515625
    7. '`]' → logprob: -8.277740478515625
    8. '               ' → logprob: -8.777740478515625
    9. '}]' → logprob: -10.527740478515625
    10. ' ]' → logprob: -10.777740478515625

Token 1014: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10398883372545242
    2. '       ' → logprob: -2.3539888858795166
    3. 'def' → logprob: -6.2289886474609375
    4. '
' → logprob: -7.3539886474609375
    5. '   ' → logprob: -7.7289886474609375
    6. ' def' → logprob: -8.728988647460938
    7. '	   ' → logprob: -9.353988647460938
    8. '<|end|>' → logprob: -9.603988647460938
    9. '        
' → logprob: -9.853988647460938
    10. ',' → logprob: -9.978988647460938

Token 1015: ' def' (ID: 1056)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030575865879654884
    2. '       ' → logprob: -3.655575752258301
    3. 'def' (adapté à ' def') → logprob: -5.530575752258301
    4. '   ' → logprob: -8.4055757522583
    5. ' def' → logprob: -9.7805757522583
    6. '               ' → logprob: -11.6555757522583
    7. ' ' → logprob: -12.0305757522583
    8. '```' → logprob: -13.4055757522583
    9. '	   ' → logprob: -13.5305757522583
    10. '
' → logprob: -14.0305757522583

Token 1016: ' center' (ID: 6170)
  Prédit: 'contains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'contains' → logprob: -1.1061078310012817
    2. 'check' → logprob: -1.7311078310012817
    3. 'center' → logprob: -1.8561078310012817
    4. 'is' → logprob: -2.731107711791992
    5. '_center' → logprob: -2.981107711791992
    6. 'sub' → logprob: -2.981107711791992
    7. '_sub' → logprob: -3.106107711791992
    8. 'mid' → logprob: -3.481107711791992
    9. '_contains' → logprob: -4.231107711791992
    10. '_check' → logprob: -4.606107711791992

Token 1017: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.002216988243162632
    2. '(' → logprob: -6.127216815948486
    3. 'self' → logprob: -11.002217292785645
    4. '(
' → logprob: -12.002217292785645
    5. ' (' → logprob: -12.627217292785645
    6. '()' → logprob: -13.127217292785645
    7. '<|end|>' → logprob: -13.752217292785645
    8. '(s' → logprob: -14.002217292785645
    9. 'def' → logprob: -14.877217292785645
    10. '   ' → logprob: -14.877217292785645

Token 1018: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11818400770425797
    2. '):
' → logprob: -2.4931840896606445
    3. '()' → logprob: -4.2431840896606445
    4. ')' → logprob: -4.6181840896606445
    5. '():' → logprob: -6.2431840896606445
    6. '()):
' → logprob: -6.6181840896606445
    7. '():
' → logprob: -7.3681840896606445
    8. '(self' → logprob: -7.9931840896606445
    9. 'self' → logprob: -9.118184089660645
    10. '):

' → logprob: -9.243184089660645

Token 1019: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03057726100087166
    2. 'return' → logprob: -3.7805771827697754
    3. '               ' → logprob: -6.155577182769775
    4. ' return' → logprob: -6.405577182769775
    5. 'Point' → logprob: -6.655577182769775
    6. '(Point' → logprob: -7.280577182769775
    7. '(' → logprob: -7.780577182769775
    8. '           ' → logprob: -7.905577182769775
    9. '   ' → logprob: -8.030577659606934
    10. '    
' → logprob: -9.280577659606934

Token 1020: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.16168874502182007
    2. 'Point' → logprob: -1.9116888046264648
    3. '       ' → logprob: -7.036688804626465
    4. ' return' → logprob: -7.786688804626465
    5. '           ' → logprob: -9.286688804626465
    6. ' Point' → logprob: -10.286688804626465
    7. '   ' → logprob: -10.661688804626465
    8. '               ' → logprob: -11.411688804626465
    9. 'Return' → logprob: -12.661688804626465
    10. '(Point' → logprob: -12.661688804626465

Token 1021: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -3.5597102396423e-05
    2. ' Point' → logprob: -10.250035285949707
    3. '(Point' → logprob: -16.875036239624023
    4. '	Point' → logprob: -17.625036239624023
    5. '   ' → logprob: -17.875036239624023
    6. '<Point' → logprob: -21.125036239624023
    7. '_Point' → logprob: -21.250036239624023
    8. '.Point' → logprob: -21.250036239624023
    9. '       ' → logprob: -21.375036239624023
    10. 'self' → logprob: -21.500036239624023

Token 1022: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.16373923420906067
    2. '(self' → logprob: -1.9137392044067383
    3. '(' → logprob: -5.663739204406738
    4. '(
' → logprob: -10.413739204406738
    5. ' (' → logprob: -12.288739204406738
    6. '   ' → logprob: -13.288739204406738
    7. 'self' → logprob: -13.913739204406738
    8. '
' → logprob: -14.038739204406738
    9. '0' → logprob: -14.163739204406738
    10. '       ' → logprob: -15.538739204406738

Token 1023: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0031786637846380472
    2. '(self' → logprob: -5.753178596496582
    3. ' self' → logprob: -14.253178596496582
    4. '[self' → logprob: -14.878178596496582
    5. '=self' → logprob: -17.8781795501709
    6. '0' → logprob: -18.5031795501709
    7. '
' → logprob: -18.5031795501709
    8. '	self' → logprob: -18.8781795501709
    9. '+self' → logprob: -18.8781795501709
    10. '           ' → logprob: -19.2531795501709

Token 1024: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.25255611538887024
    2. 'self' → logprob: -1.5025560855865479
    3. 'x' → logprob: -7.627556324005127
    4. '0' → logprob: -9.377555847167969
    5. ' self' → logprob: -10.877555847167969
    6. '(self' → logprob: -11.502555847167969
    7. '```' → logprob: -11.752555847167969
    8. '.self' → logprob: -12.127555847167969
    9. '[self' → logprob: -12.627555847167969
    10. 'Self' → logprob: -12.877555847167969

Token 1025: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. 'self' → logprob: -16.0
    3. '1' → logprob: -17.125
    4. '۰' → logprob: -20.75
    5. '(self' → logprob: -20.875
    6. '[self' → logprob: -21.625
    7. '+self' → logprob: -21.75
    8. '[' → logprob: -22.6875
    9. '```' → logprob: -22.6875
    10. '   ' → logprob: -22.8125

Token 1026: '+self' (ID: 195959)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6803300976753235
    2. ' +' → logprob: -1.1803300380706787
    3. '+self' → logprob: -1.6803300380706787
    4. 'self' → logprob: -9.805330276489258
    5. '+
' → logprob: -12.430330276489258
    6. ' +
' → logprob: -14.805330276489258
    7. '[self' → logprob: -15.555330276489258
    8. '＋' → logprob: -15.930330276489258
    9. ' self' → logprob: -15.930330276489258
    10. '+x' → logprob: -16.680330276489258

Token 1027: '.x' (ID: 3700)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.33523568511009216
    2. 'x' → logprob: -1.3352357149124146
    3. '.x' → logprob: -3.835235595703125
    4. 'self' → logprob: -9.960235595703125
    5. '.' → logprob: -10.085235595703125
    6. '   ' → logprob: -11.085235595703125
    7. '```' → logprob: -11.585235595703125
    8. ' x' → logprob: -12.085235595703125
    9. ' ' → logprob: -12.710235595703125
    10. '_x' → logprob: -13.210235595703125

Token 1028: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. '0' → logprob: -14.250000953674316
    3. '```' → logprob: -14.875000953674316
    4. ')' → logprob: -16.750001907348633
    5. '
' → logprob: -16.750001907348633
    6. '   ' → logprob: -18.000001907348633
    7. '``' → logprob: -18.187501907348633
    8. '{' → logprob: -18.375001907348633
    9. 'def' → logprob: -18.500001907348633
    10. '...' → logprob: -18.750001907348633

Token 1029: ')/' (ID: 11876)
  Prédit: ')/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')/' → logprob: -0.0098508819937706
    2. ')' → logprob: -4.634850978851318
    3. ')*' → logprob: -10.13485050201416
    4. ' )' → logprob: -10.50985050201416
    5. ')//' → logprob: -10.63485050201416
    6. '   ' → logprob: -13.50985050201416
    7. ')>>' → logprob: -14.13485050201416
    8. '```' → logprob: -14.88485050201416
    9. ' ' → logprob: -15.50985050201416
    10. '0' → logprob: -15.50985050201416

Token 1030: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3902033970225602e-05
    2. ' ' → logprob: -11.250014305114746
    3. '   ' → logprob: -14.750014305114746
    4. '```' → logprob: -15.875014305114746
    5. '(' → logprob: -16.18751335144043
    6. '۲' → logprob: -17.18751335144043
    7. '  ' → logprob: -18.06251335144043
    8. '
' → logprob: -18.06251335144043
    9. '٢' → logprob: -18.31251335144043
    10. '２' → logprob: -18.50001335144043

Token 1031: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016610898077487946
    2. ',
' → logprob: -4.766611099243164
    3. ',(' → logprob: -4.891611099243164
    4. ' ,' → logprob: -7.891611099243164
    5. ',self' → logprob: -10.016611099243164
    6. ',
' → logprob: -11.891611099243164
    7. '               ' → logprob: -12.141611099243164
    8. ',

' → logprob: -12.516611099243164
    9. '(self' → logprob: -13.016611099243164
    10. '),' → logprob: -13.141611099243164

Token 1032: ' (' (ID: 350)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00026503115077503026
    2. ' (' → logprob: -8.250265121459961
    3. '       ' → logprob: -13.250265121459961
    4. '               ' → logprob: -14.125265121459961
    5. '(' → logprob: -15.625265121459961
    6. '           ' → logprob: -15.750265121459961
    7. '   ' → logprob: -15.875265121459961
    8. ' ' → logprob: -15.875265121459961
    9. 'self' → logprob: -15.875265121459961
    10. '      ' → logprob: -16.12526512145996

Token 1033: 'self' (ID: 1156)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.018173357471823692
    2. 'self' → logprob: -4.0181732177734375
    3. ' (' → logprob: -11.643173217773438
    4. '[self' → logprob: -11.768173217773438
    5. ' self' → logprob: -12.268173217773438
    6. '       ' → logprob: -14.143173217773438
    7. '   ' → logprob: -14.893173217773438
    8. '+self' → logprob: -15.268173217773438
    9. '	self' → logprob: -15.643173217773438
    10. '
' → logprob: -15.893173217773438

Token 1034: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0023705356288701296
    2. 'self' → logprob: -6.377370357513428
    3. 'y' → logprob: -7.377370357513428
    4. '0' → logprob: -11.377370834350586
    5. '(self' → logprob: -11.502370834350586
    6. '.' → logprob: -12.002370834350586
    7. '
' → logprob: -12.627370834350586
    8. '   ' → logprob: -13.252370834350586
    9. '_y' → logprob: -13.627370834350586
    10. '@y' → logprob: -13.627370834350586

Token 1035: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. '.' → logprob: -13.875001907348633
    3. '1' → logprob: -14.500001907348633
    4. '   ' → logprob: -15.125001907348633
    5. 'self' → logprob: -16.375001907348633
    6. '
' → logprob: -16.625001907348633
    7. ' ' → logprob: -16.875001907348633
    8. '       ' → logprob: -17.875001907348633
    9. '۰' → logprob: -18.500001907348633
    10. '(self' → logprob: -18.750001907348633

Token 1036: '+self' (ID: 195959)
  Prédit: '+self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+self' → logprob: -0.007922333665192127
    2. ' +' → logprob: -5.382922172546387
    3. '+' → logprob: -7.007922172546387
    4. '+y' → logprob: -7.132922172546387
    5. '(self' → logprob: -7.257922172546387
    6. '+(' → logprob: -7.757922172546387
    7. '+
' → logprob: -8.257922172546387
    8. 'self' → logprob: -9.757922172546387
    9. ',' → logprob: -10.132922172546387
    10. '[self' → logprob: -10.882922172546387

Token 1037: '.y' (ID: 4486)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009187239338643849
    2. 'y' → logprob: -7.000918865203857
    3. ' ' → logprob: -13.5009183883667
    4. '.y' → logprob: -13.5009183883667
    5. ' y' → logprob: -13.6259183883667
    6. '0' → logprob: -13.6259183883667
    7. '   ' → logprob: -14.5009183883667
    8. ')' → logprob: -14.7509183883667
    9. '
' → logprob: -15.0009183883667
    10. '<|end|>' → logprob: -15.8759183883667

Token 1038: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. '0' → logprob: -12.875005722045898
    3. '
' → logprob: -14.000005722045898
    4. ')' → logprob: -14.250005722045898
    5. '5' → logprob: -14.875005722045898
    6. ' ' → logprob: -15.250005722045898
    7. '   ' → logprob: -15.625005722045898
    8. '
' → logprob: -15.750005722045898
    9. '```' → logprob: -16.1875057220459
    10. '...' → logprob: -16.5625057220459

Token 1039: ')/' (ID: 11876)
  Prédit: ')/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')/' → logprob: -0.006205834913998842
    2. '/' → logprob: -5.131206035614014
    3. ')' → logprob: -8.506205558776855
    4. '   ' → logprob: -10.506205558776855
    5. ' )' → logprob: -10.631205558776855
    6. ' /' → logprob: -11.381205558776855
    7. '0' → logprob: -12.756205558776855
    8. ' ' → logprob: -13.506205558776855
    9. '()/' → logprob: -13.881205558776855
    10. 'def' → logprob: -13.881205558776855

Token 1040: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -16.875003814697266
    4. '```' → logprob: -17.187503814697266
    5. '۲' → logprob: -17.437503814697266
    6. ')' → logprob: -17.937503814697266
    7. '{' → logprob: -18.250003814697266
    8. '...' → logprob: -18.562503814697266
    9. '２' → logprob: -18.812503814697266
    10. '<|end|>' → logprob: -19.250003814697266

Token 1041: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0038055418990552425
    2. ',' → logprob: -6.128805637359619
    3. '       ' → logprob: -6.503805637359619
    4. ')
' → logprob: -10.628805160522461
    5. '   ' → logprob: -10.878805160522461
    6. ' )' → logprob: -11.128805160522461
    7. '           ' → logprob: -11.253805160522461
    8. '               ' → logprob: -11.753805160522461
    9. '<|end|>' → logprob: -11.753805160522461
    10. '))' → logprob: -12.003805160522461

Token 1042: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2032279074192047
    2. '           ' → logprob: -1.7032278776168823
    3. '   ' → logprob: -6.578227996826172
    4. '	   ' → logprob: -8.703227996826172
    5. '	' → logprob: -9.203227996826172
    6. '	       ' → logprob: -10.078227996826172
    7. '<|end|>' → logprob: -10.453227996826172
    8. 'def' → logprob: -10.953227996826172
    9. '        
' → logprob: -11.703227996826172
    10. '        ' → logprob: -11.703227996826172

Token 1043: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.6675246357917786
    2. '           ' → logprob: -1.0425245761871338
    3. '   ' → logprob: -2.667524576187134
    4. '       ' → logprob: -3.167524576187134
    5. ' def' → logprob: -3.792524576187134
    6. ' ' → logprob: -8.542524337768555
    7. '
' → logprob: -9.542524337768555
    8. '               ' → logprob: -10.417524337768555
    9. '	def' → logprob: -10.667524337768555
    10. '    ' → logprob: -11.417524337768555

Token 1044: ' size' (ID: 2349)
  Prédit: 'sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sub' → logprob: -0.5815109610557556
    2. '_sub' → logprob: -1.9565110206604004
    3. 'is' → logprob: -2.2065110206604004
    4. 'check' → logprob: -2.5815110206604004
    5. 'contains' → logprob: -2.7065110206604004
    6. 'size' → logprob: -3.8315110206604004
    7. 'safe' → logprob: -5.3315110206604
    8. '__' → logprob: -5.8315110206604
    9. 'area' → logprob: -5.9565110206604
    10. '_check' → logprob: -6.2065110206604

Token 1045: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.019846530631184578
    2. '(' → logprob: -4.269846439361572
    3. '()' → logprob: -5.269846439361572
    4. ' =' → logprob: -8.64484691619873
    5. '(
' → logprob: -9.26984691619873
    6. '(s' → logprob: -9.39484691619873
    7. '=' → logprob: -10.01984691619873
    8. ' (' → logprob: -10.14484691619873
    9. 'self' → logprob: -10.51984691619873
    10. '()(' → logprob: -10.89484691619873

Token 1046: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2545178532600403
    2. '):
' → logprob: -1.5045177936553955
    3. ')' → logprob: -6.129518032073975
    4. '   ' → logprob: -9.129517555236816
    5. '):
' → logprob: -9.629517555236816
    6. '():
' → logprob: -10.004517555236816
    7. '()' → logprob: -10.254517555236816
    8. '       ' → logprob: -10.504517555236816
    9. '):

' → logprob: -10.629517555236816
    10. 'self' → logprob: -11.004517555236816

Token 1047: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04134422168135643
    2. 'return' → logprob: -3.541344165802002
    3. '           ' → logprob: -5.416344165802002
    4. '=' → logprob: -5.791344165802002
    5. ' return' → logprob: -5.916344165802002
    6. '               ' → logprob: -7.791344165802002
    7. '   ' → logprob: -8.54134464263916
    8. '()' → logprob: -8.66634464263916
    9. ' =' → logprob: -9.16634464263916
    10. ':return' → logprob: -9.29134464263916

Token 1048: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0009747094009071589
    2. ' return' → logprob: -7.125974655151367
    3. 'self' → logprob: -8.750974655151367
    4. '       ' → logprob: -12.250974655151367
    5. 'max' → logprob: -12.500974655151367
    6. '{return' → logprob: -13.625974655151367
    7. '           ' → logprob: -13.750974655151367
    8. 'min' → logprob: -15.250974655151367
    9. ' self' → logprob: -15.625974655151367
    10. '               ' → logprob: -15.750974655151367

Token 1049: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.13337163627147675
    2. 'self' → logprob: -2.133371591567993
    3. '(max' → logprob: -5.633371829986572
    4. ' max' → logprob: -6.133371829986572
    5. '(self' → logprob: -7.758371829986572
    6. ' self' → logprob: -8.758371353149414
    7. 'min' → logprob: -9.508371353149414
    8. '((' → logprob: -12.133371353149414
    9. 'abs' → logprob: -12.883371353149414
    10. '[max' → logprob: -13.258371353149414

Token 1050: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.857719275401905e-05
    2. 'self' → logprob: -10.500038146972656
    3. '(' → logprob: -11.500038146972656
    4. '(
' → logprob: -14.500038146972656
    5. '((' → logprob: -15.750038146972656
    6. '(abs' → logprob: -16.000038146972656
    7. '0' → logprob: -17.250038146972656
    8. ' (' → logprob: -17.625038146972656
    9. '[self' → logprob: -17.875038146972656
    10. '   ' → logprob: -18.250038146972656

Token 1051: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.32449424266815186
    2. 'self' → logprob: -1.3244942426681519
    3. '(self' → logprob: -4.949494361877441
    4. '_x' → logprob: -6.449494361877441
    5. ' self' → logprob: -7.449494361877441
    6. '	self' → logprob: -7.449494361877441
    7. 'x' → logprob: -7.949494361877441
    8. '   ' → logprob: -8.199494361877441
    9. ')' → logprob: -9.199494361877441
    10. '       ' → logprob: -9.324494361877441

Token 1052: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001772638875991106
    2. 'self' → logprob: -6.626772403717041
    3. '<|end|>' → logprob: -9.2517728805542
    4. '_' → logprob: -9.8767728805542
    5. '-self' → logprob: -10.0017728805542
    6. 's' → logprob: -10.0017728805542
    7. '-' → logprob: -10.1267728805542
    8. ' -' → logprob: -10.2517728805542
    9. '```' → logprob: -10.2517728805542
    10. '<|end|>' → logprob: -11.5017728805542

Token 1053: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.06221874803304672
    2. '-' → logprob: -2.81221866607666
    3. '-self' → logprob: -8.31221866607666
    4. '-
' → logprob: -13.68721866607666
    5. 'self' → logprob: -13.93721866607666
    6. ' -
' → logprob: -14.31221866607666
    7. '<|end|>' → logprob: -14.56221866607666
    8. '   ' → logprob: -14.56221866607666
    9. ',' → logprob: -14.68721866607666
    10. '-token' → logprob: -14.93721866607666

Token 1054: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020389800192788243
    2. ' self' → logprob: -8.500204086303711
    3. '(self' → logprob: -15.875204086303711
    4. '           ' → logprob: -16.00020408630371
    5. '[self' → logprob: -16.62520408630371
    6. '=self' → logprob: -17.62520408630371
    7. '	self' → logprob: -18.62520408630371
    8. '0' → logprob: -18.62520408630371
    9. '               ' → logprob: -18.75020408630371
    10. 'Self' → logprob: -18.75020408630371

Token 1055: '.x' (ID: 3700)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0016993449535220861
    2. 'x' → logprob: -6.751699447631836
    3. ' self' → logprob: -8.376699447631836
    4. '0' → logprob: -8.751699447631836
    5. '.x' → logprob: -9.501699447631836
    6. '[self' → logprob: -10.626699447631836
    7. '.self' → logprob: -10.626699447631836
    8. '=self' → logprob: -12.376699447631836
    9. '(self' → logprob: -12.376699447631836
    10. ',self' → logprob: -13.876699447631836

Token 1056: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08925438672304153
    2. 'self' → logprob: -2.464254379272461
    3. '<|end|>' → logprob: -8.964254379272461
    4. ' self' → logprob: -9.464254379272461
    5. '<|end|>' → logprob: -10.214254379272461
    6. '[self' → logprob: -11.464254379272461
    7. 'token' → logprob: -11.714254379272461
    8. ')' → logprob: -11.714254379272461
    9. '(self' → logprob: -12.214254379272461
    10. '1' → logprob: -12.464254379272461

Token 1057: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00036918214755132794
    2. ',self' → logprob: -8.25036907196045
    3. ' ,' → logprob: -9.75036907196045
    4. ',
' → logprob: -10.00036907196045
    5. 'self' → logprob: -13.12536907196045
    6. ',max' → logprob: -15.25036907196045
    7. '<|end|>' → logprob: -15.25036907196045
    8. ')' → logprob: -15.37536907196045
    9. '               ' → logprob: -15.50036907196045
    10. '),' → logprob: -15.75036907196045

Token 1058: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00704534025862813
    2. ' self' → logprob: -5.007045269012451
    3. '               ' → logprob: -8.38204574584961
    4. '           ' → logprob: -9.75704574584961
    5. '                   ' → logprob: -11.13204574584961
    6. '                ' → logprob: -11.88204574584961
    7. '              ' → logprob: -12.50704574584961
    8. '             ' → logprob: -12.75704574584961
    9. '            ' → logprob: -12.75704574584961
    10. '                       ' → logprob: -12.88204574584961

Token 1059: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.5846070647239685
    2. 'self' → logprob: -0.9596070647239685
    3. '.y' → logprob: -3.2096071243286133
    4. '_y' → logprob: -4.709607124328613
    5. ' y' → logprob: -5.584607124328613
    6. ' self' → logprob: -5.584607124328613
    7. '(self' → logprob: -6.959607124328613
    8. '   ' → logprob: -8.084607124328613
    9. '       ' → logprob: -8.084607124328613
    10. '
' → logprob: -8.084607124328613

Token 1060: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00022690063633490354
    2. '1' → logprob: -8.500226974487305
    3. ')' → logprob: -12.000226974487305
    4. '-' → logprob: -12.375226974487305
    5. 'self' → logprob: -12.375226974487305
    6. '   ' → logprob: -12.875226974487305
    7. ' -' → logprob: -13.750226974487305
    8. '<|end|>' → logprob: -13.875226974487305
    9. '<|end|>' → logprob: -14.000226974487305
    10. ' ' → logprob: -14.375226974487305

Token 1061: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.004622611217200756
    2. '-' → logprob: -5.379622459411621
    3. 'self' → logprob: -13.629622459411621
    4. '-self' → logprob: -14.379622459411621
    5. ' ' → logprob: -15.254622459411621
    6. ' self' → logprob: -16.129623413085938
    7. '   ' → logprob: -16.754623413085938
    8. ' -
' → logprob: -16.879623413085938
    9. ',' → logprob: -16.879623413085938
    10. '       ' → logprob: -17.504623413085938

Token 1062: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003820524725597352
    2. ' self' → logprob: -7.875381946563721
    3. '(self' → logprob: -13.875382423400879
    4. '[self' → logprob: -14.625382423400879
    5. '           ' → logprob: -15.250382423400879
    6. '	self' → logprob: -16.875381469726562
    7. '               ' → logprob: -17.250381469726562
    8. '=self' → logprob: -17.250381469726562
    9. '                   ' → logprob: -17.625381469726562
    10. '       ' → logprob: -17.750381469726562

Token 1063: '.y' (ID: 4486)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.020912155508995056
    2. '0' → logprob: -4.395912170410156
    3. 'y' → logprob: -5.395912170410156
    4. ' self' → logprob: -6.645912170410156
    5. ')' → logprob: -7.145912170410156
    6. 's' → logprob: -8.145912170410156
    7. '1' → logprob: -8.395912170410156
    8. '(self' → logprob: -8.395912170410156
    9. '[self' → logprob: -8.520912170410156
    10. '<|end|>' → logprob: -8.770912170410156

Token 1064: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.771655115589965e-05
    2. '<|end|>' → logprob: -11.625018119812012
    3. '1' → logprob: -12.875018119812012
    4. 'self' → logprob: -13.250018119812012
    5. ' ' → logprob: -13.875018119812012
    6. ')' → logprob: -14.250018119812012
    7. 'The' → logprob: -14.250018119812012
    8. '<|end|>' → logprob: -14.625018119812012
    9. '.' → logprob: -15.625018119812012
    10. '```' → logprob: -15.750018119812012

Token 1065: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003460712905507535
    2. '       ' → logprob: -8.750346183776855
    3. ')
' → logprob: -9.625346183776855
    4. '           ' → logprob: -9.750346183776855
    5. ',' → logprob: -11.000346183776855
    6. ' )' → logprob: -11.750346183776855
    7. '               ' → logprob: -11.875346183776855
    8. '<|end|>' → logprob: -11.875346183776855
    9. '())' → logprob: -12.750346183776855
    10. ')*' → logprob: -12.750346183776855

Token 1066: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2888496518135071
    2. '   ' → logprob: -1.5388495922088623
    3. '           ' → logprob: -3.4138495922088623
    4. '    
' → logprob: -6.288849830627441
    5. '        
' → logprob: -6.913849830627441
    6. 'def' → logprob: -9.663849830627441
    7. '<|end|>' → logprob: -9.788849830627441
    8. '	' → logprob: -10.038849830627441
    9. '	   ' → logprob: -10.038849830627441
    10. '            
' → logprob: -10.163849830627441

Token 1067: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00020818933262489736
    2. '       ' → logprob: -8.500207901000977
    3. 'def' → logprob: -13.000207901000977
    4. '   ' → logprob: -14.125207901000977
    5. '	       ' → logprob: -14.625207901000977
    6. '	   ' → logprob: -15.000207901000977
    7. '```' → logprob: -15.875207901000977
    8. '               ' → logprob: -16.000207901000977
    9. '		' → logprob: -16.375207901000977
    10. '[' → logprob: -16.375207901000977

Token 1068: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021907366812229156
    2. 'def' → logprob: -4.521907329559326
    3. '   ' → logprob: -5.021907329559326
    4. ' def' → logprob: -6.396907329559326
    5. '
' → logprob: -6.896907329559326
    6. '        
' → logprob: -7.271907329559326
    7. '           ' → logprob: -7.396907329559326
    8. '```' → logprob: -9.896907806396484
    9. 'import' → logprob: -10.521907806396484
    10. '        ' → logprob: -10.771907806396484

Token 1069: ' check' (ID: 2371)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1696138083934784
    2. '       ' → logprob: -2.669613838195801
    3. 'step' → logprob: -3.419613838195801
    4. 'threshold' → logprob: -4.419613838195801
    5. 'MIN' → logprob: -4.669613838195801
    6. 'max' → logprob: -4.919613838195801
    7. 'min' → logprob: -5.044613838195801
    8. 'EPS' → logprob: -5.544613838195801
    9. 'import' → logprob: -5.669613838195801
    10. 'stack' → logprob: -6.044613838195801

Token 1070: ' if' (ID: 538)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.733425498008728
    2. ' def' → logprob: -1.108425498008728
    3. ' =' → logprob: -2.4834256172180176
    4. '       ' → logprob: -3.6084256172180176
    5. '_' → logprob: -4.358425617218018
    6. '_node' → logprob: -4.358425617218018
    7. 'node' → logprob: -4.733425617218018
    8. '_point' → logprob: -5.233425617218018
    9. '_points' → logprob: -5.358425617218018
    10. ' node' → logprob: -5.358425617218018

Token 1071: ' all' (ID: 722)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.4042500853538513
    2. 'self' → logprob: -1.404250144958496
    3. 'all' → logprob: -3.529250144958496
    4. 'point' → logprob: -3.904250144958496
    5. 'quad' → logprob: -5.279250144958496
    6. ' node' → logprob: -5.654250144958496
    7. 'covered' → logprob: -5.779250144958496
    8. 'any' → logprob: -5.904250144958496
    9. 'len' → logprob: -5.904250144958496
    10. ' self' → logprob: -5.904250144958496

Token 1072: ' points' (ID: 5571)
  Prédit: 'corn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'corn' → logprob: -0.5171278715133667
    2. ' corners' → logprob: -1.0171278715133667
    3. ' four' → logprob: -4.392127990722656
    4. 'points' → logprob: -4.392127990722656
    5. ' points' → logprob: -4.392127990722656
    6. '       ' → logprob: -5.892127990722656
    7. 'las' → logprob: -7.517127990722656
    8. 'four' → logprob: -7.517127990722656
    9. 'self' → logprob: -8.517127990722656
    10. 'c' → logprob: -8.767127990722656

Token 1073: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20014747977256775
    2. '=' → logprob: -1.9501475095748901
    3. 'in' → logprob: -3.4501473903656006
    4. ' in' → logprob: -5.57514762878418
    5. '_in' → logprob: -6.57514762878418
    6. 'are' → logprob: -6.95014762878418
    7. ' are' → logprob: -8.70014762878418
    8. 'def' → logprob: -9.07514762878418
    9. 'of' → logprob: -9.07514762878418
    10. '=
' → logprob: -9.45014762878418

Token 1074: ' box' (ID: 5506)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.848020613193512
    2. 'corn' → logprob: -1.2230205535888672
    3. 'the' → logprob: -1.9730205535888672
    4. '[self' → logprob: -3.223020553588867
    5. 'node' → logprob: -3.598020553588867
    6. '[' → logprob: -4.098020553588867
    7. 'Quad' → logprob: -4.223020553588867
    8. '[node' → logprob: -4.848020553588867
    9. '[c' → logprob: -4.973020553588867
    10. 'c' → logprob: -4.973020553588867

Token 1075: ' are' (ID: 553)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3265681862831116
    2. ' =' → logprob: -1.9515681266784668
    3. 'are' → logprob: -3.326568126678467
    4. ' are' → logprob: -3.826568126678467
    5. '           ' → logprob: -4.076568126678467
    6. 'def' → logprob: -4.076568126678467
    7. ' in' → logprob: -4.326568126678467
    8. ' (' → logprob: -4.951568126678467
    9. '=' → logprob: -5.201568126678467
    10. 'in' → logprob: -5.326568126678467

Token 1076: ' definitely' (ID: 9504)
  Prédit: 'safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'safe' → logprob: -0.05113017559051514
    2. 'covered' → logprob: -3.4261302947998047
    3. 'def' → logprob: -5.051130294799805
    4. ' safe' → logprob: -5.176130294799805
    5. 'inside' → logprob: -6.551130294799805
    6. 'outside' → logprob: -6.551130294799805
    7. 'screen' → logprob: -7.676130294799805
    8. 'sure' → logprob: -8.051130294799805
    9. 'self' → logprob: -8.551130294799805
    10. '_safe' → logprob: -8.926130294799805

Token 1077: ' covered' (ID: 13083)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.774408757686615
    2. 'safe' → logprob: -0.774408757686615
    3. ' safe' → logprob: -3.2744088172912598
    4. 'outside' → logprob: -4.27440881729126
    5. 'inside' → logprob: -4.39940881729126
    6. ' covered' → logprob: -5.27440881729126
    7. 'unsafe' → logprob: -5.27440881729126
    8. 'not' → logprob: -7.14940881729126
    9. 'either' → logprob: -7.64940881729126
    10. ' outside' → logprob: -8.274408340454102

Token 1078: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.050767090171575546
    2. ' by' → logprob: -3.425767183303833
    3. ',' → logprob: -5.300766944885254
    4. 'def' → logprob: -5.425766944885254
    5. ':' → logprob: -5.800766944885254
    6. '        
' → logprob: -6.175766944885254
    7. '
' → logprob: -7.175766944885254
    8. '<|end|>' → logprob: -7.675766944885254
    9. 'by' → logprob: -7.925766944885254
    10. '<|end|>' → logprob: -8.425766944885254

Token 1079: ' definitely' (ID: 9504)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5543028116226196
    2. 'not' → logprob: -1.8043028116226196
    3. 'safe' → logprob: -2.05430269241333
    4. 'all' → logprob: -2.92930269241333
    5. 'maybe' → logprob: -3.92930269241333
    6. ' definitely' → logprob: -4.17930269241333
    7. 'possibly' → logprob: -4.55430269241333
    8. ' safe' → logprob: -4.92930269241333
    9. 'none' → logprob: -5.30430269241333
    10. ' not' → logprob: -5.42930269241333

Token 1080: ' free' (ID: 2240)
  Prédit: 'safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'safe' → logprob: -0.3783116042613983
    2. 'not' → logprob: -1.2533116340637207
    3. 'def' → logprob: -3.6283116340637207
    4. ' safe' → logprob: -6.753311634063721
    5. ' not' → logprob: -7.628311634063721
    6. 'excluded' → logprob: -8.003311157226562
    7. 'un' → logprob: -8.378311157226562
    8. 'free' → logprob: -8.503311157226562
    9. 'outside' → logprob: -8.753311157226562
    10. 'unsafe' → logprob: -8.878311157226562

Token 1081: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04940769821405411
    2. '
' → logprob: -3.174407720565796
    3. 'def' → logprob: -5.299407482147217
    4. '        
' → logprob: -7.174407482147217
    5. '           ' → logprob: -7.674407482147217
    6. ',' → logprob: -9.924407958984375
    7. '   ' → logprob: -10.549407958984375
    8. '            
' → logprob: -10.799407958984375
    9. ':' → logprob: -11.924407958984375
    10. ';' → logprob: -11.924407958984375

Token 1082: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00013047587708570063
    2. '
' → logprob: -9.625130653381348
    3. 'def' → logprob: -10.625130653381348
    4. '           ' → logprob: -10.625130653381348
    5. '        
' → logprob: -11.375130653381348
    6. '```' → logprob: -12.750130653381348
    7. '   ' → logprob: -14.125130653381348
    8. '      ' → logprob: -16.12512969970703
    9. ' def' → logprob: -16.37512969970703
    10. ',' → logprob: -16.75012969970703

Token 1083: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00512275006622076
    2. 'def' → logprob: -5.505122661590576
    3. '
' → logprob: -7.630122661590576
    4. ' def' → logprob: -7.755122661590576
    5. '        
' → logprob: -9.255123138427734
    6. '   ' → logprob: -10.755123138427734
    7. '           ' → logprob: -12.505123138427734
    8. 'indent' → logprob: -12.505123138427734
    9. '```' → logprob: -13.005123138427734
    10. ' indent' → logprob: -14.505123138427734

Token 1084: ' first' (ID: 1577)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0708591639995575
    2. 'def' → logprob: -3.07085919380188
    3. ' def' → logprob: -3.94585919380188
    4. '
' → logprob: -6.195858955383301
    5. 'indent' → logprob: -8.1958589553833
    6. '        
' → logprob: -8.8208589553833
    7. ' indent' → logprob: -8.9458589553833
    8. '   ' → logprob: -10.0708589553833
    9. '```' → logprob: -11.1958589553833
    10. '           ' → logprob: -11.5708589553833

Token 1085: ' check' (ID: 2371)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5537543892860413
    2. 'def' → logprob: -1.0537543296813965
    3. ',' → logprob: -3.0537543296813965
    4. '
' → logprob: -4.5537543296813965
    5. 'points' → logprob: -5.3037543296813965
    6. ' def' → logprob: -5.6787543296813965
    7. '        
' → logprob: -6.0537543296813965
    8. 'for' → logprob: -6.5537543296813965
    9. ':' → logprob: -6.8037543296813965
    10. '           ' → logprob: -7.3037543296813965

Token 1086: ' center' (ID: 6170)
  Prédit: 'corn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'corn' → logprob: -0.3412465751171112
    2. ' corners' → logprob: -1.7162466049194336
    3. 'points' → logprob: -3.3412466049194336
    4. ' points' → logprob: -3.9662466049194336
    5. 'for' → logprob: -4.591246604919434
    6. ' for' → logprob: -4.841246604919434
    7. 'pts' → logprob: -5.216246604919434
    8. 'def' → logprob: -5.341246604919434
    9. 'all' → logprob: -5.341246604919434
    10. 'corner' → logprob: -5.591246604919434

Token 1087: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7159821391105652
    2. '           ' → logprob: -0.8409821391105652
    3. '
' → logprob: -2.84098219871521
    4. ',' → logprob: -4.715981960296631
    5. '        
' → logprob: -6.340981960296631
    6. 'point' → logprob: -6.465981960296631
    7. 'c' → logprob: -6.965981960296631
    8. '            
' → logprob: -6.965981960296631
    9. 'node' → logprob: -7.340981960296631
    10. ' point' → logprob: -7.340981960296631

Token 1088: ' corners' (ID: 39479)
  Prédit: 'corn'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'corn' → logprob: -0.003234394360333681
    2. ' corners' → logprob: -5.753234386444092
    3. 'all' → logprob: -9.87823486328125
    4. ' all' → logprob: -13.25323486328125
    5. 'corner' → logprob: -13.62823486328125
    6. 'self' → logprob: -14.12823486328125
    7. 'points' → logprob: -14.62823486328125
    8. 'def' → logprob: -15.37823486328125
    9. 'c' → logprob: -15.37823486328125
    10. 'the' → logprob: -15.62823486328125

Token 1089: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02289612591266632
    2. '
' → logprob: -4.3978962898254395
    3. '        
' → logprob: -4.6478962898254395
    4. '           ' → logprob: -7.5228962898254395
    5. ',' → logprob: -10.272895812988281
    6. 'points' → logprob: -10.272895812988281
    7. '            
' → logprob: -10.397895812988281
    8. '```' → logprob: -10.772895812988281
    9. 'def' → logprob: -11.022895812988281
    10. ' points' → logprob: -11.522895812988281

Token 1090: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2778483629226685
    2. ' points' → logprob: -1.4028483629226685
    3. 'points' → logprob: -1.7778483629226685
    4. '           ' → logprob: -2.652848243713379
    5. 'all' → logprob: -3.027848243713379
    6. ' then' → logprob: -3.277848243713379
    7. ' all' → logprob: -3.277848243713379
    8. '
' → logprob: -3.402848243713379
    9. ' if' → logprob: -4.402848243713379
    10. '        
' → logprob: -4.652848243713379

Token 1091: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.017872115597128868
    2. 'any' → logprob: -4.892872333526611
    3. ' all' → logprob: -5.017872333526611
    4. 'not' → logprob: -6.517872333526611
    5. 'self' → logprob: -7.017872333526611
    6. 'they' → logprob: -7.642872333526611
    7. 'covered' → logprob: -7.767872333526611
    8. 'safe' → logprob: -8.892871856689453
    9. ' any' → logprob: -10.142871856689453
    10. 'corn' → logprob: -10.892871856689453

Token 1092: ' safe' (ID: 7703)
  Prédit: 'safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'safe' → logprob: -0.9160240292549133
    2. ' safe' → logprob: -1.2910239696502686
    3. ' are' → logprob: -1.5410239696502686
    4. 'are' → logprob: -3.1660239696502686
    5. 'covered' → logprob: -3.4160239696502686
    6. 'over' → logprob: -4.416024208068848
    7. 'points' → logprob: -5.166024208068848
    8. ' covered' → logprob: -5.166024208068848
    9. ' points' → logprob: -5.291024208068848
    10. 'same' → logprob: -6.541024208068848

Token 1093: ' or' (ID: 503)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.8174530863761902
    2. ' and' → logprob: -1.192453145980835
    3. ':' → logprob: -2.317453145980835
    4. ' or' → logprob: -3.192453145980835
    5. ':
' → logprob: -3.442453145980835
    6. ',' → logprob: -3.817453145980835
    7. 'or' → logprob: -3.942453145980835
    8. '           ' → logprob: -4.067452907562256
    9. '       ' → logprob: -5.067452907562256
    10. '=' → logprob: -5.192452907562256

Token 1094: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.011693227104842663
    2. ' all' → logprob: -5.011693000793457
    3. 'unsafe' → logprob: -5.511693000793457
    4. 'not' → logprob: -7.136693000793457
    5. 'covered' → logprob: -9.386693000793457
    6. 'uns' → logprob: -11.136693000793457
    7. 'none' → logprob: -11.886693000793457
    8. '
' → logprob: -12.011693000793457
    9. ' not' → logprob: -12.386693000793457
    10. 'safe' → logprob: -12.511693000793457

Token 1095: ' unsafe' (ID: 37750)
  Prédit: 'unsafe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'unsafe' → logprob: -0.05627763643860817
    2. 'not' → logprob: -3.3062777519226074
    3. 'covered' → logprob: -4.431277751922607
    4. 'over' → logprob: -5.806277751922607
    5. ' unsafe' → logprob: -6.306277751922607
    6. ' not' → logprob: -7.806277751922607
    7. 'uns' → logprob: -8.30627727508545
    8. 'safe' → logprob: -8.55627727508545
    9. 'danger' → logprob: -8.80627727508545
    10. '```' → logprob: -9.05627727508545

Token 1096: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5854411721229553
    2. ',' → logprob: -1.2104411125183105
    3. ':' → logprob: -2.2104411125183105
    4. ':
' → logprob: -3.7104411125183105
    5. '           ' → logprob: -5.8354411125183105
    6. 'points' → logprob: -6.2104411125183105
    7. ' points' → logprob: -6.3354411125183105
    8. ',
' → logprob: -6.9604411125183105
    9. '
' → logprob: -7.2104411125183105
    10. 'def' → logprob: -7.4604411125183105

Token 1097: ' conclude' (ID: 54504)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14937801659107208
    2. ' return' → logprob: -2.5243780612945557
    3. 'return' → logprob: -2.8993780612945557
    4. '       ' → logprob: -6.524377822875977
    5. '               ' → logprob: -7.149377822875977
    6. '
' → logprob: -7.524377822875977
    7. ' then' → logprob: -8.149377822875977
    8. '            
' → logprob: -8.899377822875977
    9. '#' → logprob: -9.774377822875977
    10. '   ' → logprob: -10.149377822875977

Token 1098: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0372825860977173
    2. '       ' → logprob: -1.2872825860977173
    3. 'points' → logprob: -2.1622824668884277
    4. 'point' → logprob: -2.6622824668884277
    5. '        
' → logprob: -3.2872824668884277
    6. '               ' → logprob: -3.6622824668884277
    7. '
' → logprob: -4.162282466888428
    8. ',' → logprob: -4.412282466888428
    9. '            
' → logprob: -4.662282466888428
    10. 'status' → logprob: -4.662282466888428

Token 1099: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004446124075911939
    2. '
' → logprob: -8.375444412231445
    3. '        
' → logprob: -8.875444412231445
    4. '           ' → logprob: -10.125444412231445
    5. ',' → logprob: -11.125444412231445
    6. ' and' → logprob: -12.125444412231445
    7. '.' → logprob: -12.750444412231445
    8. '```' → logprob: -12.750444412231445
    9. '               ' → logprob: -13.125444412231445
    10. ' with' → logprob: -14.625444412231445

Token 1100: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.037317320704460144
    2. '
' → logprob: -3.4123172760009766
    3. '        
' → logprob: -5.662317276000977
    4. '           ' → logprob: -8.912317276000977
    5. '```' → logprob: -10.662317276000977
    6. '            
' → logprob: -11.537317276000977
    7. '    
' → logprob: -12.162317276000977
    8. 'def' → logprob: -12.287317276000977
    9. '
' → logprob: -13.037317276000977
    10. '   ' → logprob: -13.287317276000977

Token 1101: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0035099145025014877
    2. 'def' → logprob: -6.003509998321533
    3. '
' → logprob: -7.378509998321533
    4. '        
' → logprob: -8.378509521484375
    5. ' def' → logprob: -9.128509521484375
    6. '   ' → logprob: -10.503509521484375
    7. '           ' → logprob: -10.753509521484375
    8. '```' → logprob: -12.003509521484375
    9. 'indent' → logprob: -12.128509521484375
    10. '
' → logprob: -13.628509521484375

Token 1102: ' subdiv' (ID: 107226)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28702330589294434
    2. '       ' → logprob: -1.5370233058929443
    3. ' return' → logprob: -3.9120233058929443
    4. '
' → logprob: -4.912023544311523
    5. ' def' → logprob: -5.662023544311523
    6. 'def' → logprob: -7.037023544311523
    7. 'return' → logprob: -7.787023544311523
    8. '   ' → logprob: -7.787023544311523
    9. ' continue' → logprob: -8.037023544311523
    10. '        
' → logprob: -8.162023544311523

Token 1103: 'ide' (ID: 617)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008351447060704231
    2. '
' → logprob: -4.8833513259887695
    3. '        
' → logprob: -7.2583513259887695
    4. '           ' → logprob: -11.38335132598877
    5. '    
' → logprob: -11.63335132598877
    6. '   ' → logprob: -11.88335132598877
    7. 'def' → logprob: -12.63335132598877
    8. '
' → logprob: -12.75835132598877
    9. '            
' → logprob: -13.63335132598877
    10. '  
' → logprob: -13.88335132598877

Token 1104: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06829006224870682
    2. '
' → logprob: -2.8182899951934814
    3. '           ' → logprob: -5.4432902336120605
    4. '        
' → logprob: -6.9432902336120605
    5. 'def' → logprob: -7.0682902336120605
    6. ' def' → logprob: -10.068289756774902
    7. '            
' → logprob: -10.443289756774902
    8. '```' → logprob: -10.443289756774902
    9. '   ' → logprob: -11.193289756774902
    10. '
' → logprob: -11.318289756774902

Token 1105: ' depth' (ID: 13636)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002989968634210527
    2. ' self' → logprob: -8.500299453735352
    3. 'depth' → logprob: -9.500299453735352
    4. '(self' → logprob: -11.000299453735352
    5. 'node' → logprob: -12.875299453735352
    6. 'not' → logprob: -14.500299453735352
    7. 'size' → logprob: -15.500299453735352
    8. 'max' → logprob: -16.12529945373535
    9. 'quad' → logprob: -16.37529945373535
    10. 'Quad' → logprob: -16.50029945373535

Token 1106: ' allows' (ID: 7927)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.10951633006334305
    2. ' >' → logprob: -2.4845163822174072
    3. '<' → logprob: -4.609516143798828
    4. '>' → logprob: -4.609516143798828
    5. ' ==' → logprob: -9.234516143798828
    6. ' <=' → logprob: -9.234516143798828
    7. '   ' → logprob: -9.359516143798828
    8. ' ' → logprob: -10.109516143798828
    9. '==' → logprob: -10.234516143798828
    10. ' +' → logprob: -10.484516143798828

Token 1107: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08112192153930664
    2. '
' → logprob: -2.5811219215393066
    3. '           ' → logprob: -6.706121921539307
    4. '        
' → logprob: -7.331121921539307
    5. 'def' → logprob: -9.081121444702148
    6. '
' → logprob: -9.206121444702148
    7. '```' → logprob: -9.956121444702148
    8. '            
' → logprob: -10.831121444702148
    9. '    
' → logprob: -10.831121444702148
    10. ',' → logprob: -11.206121444702148

Token 1108: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0013261953135952353
    2. '
' → logprob: -6.751326084136963
    3. '        
' → logprob: -8.876326560974121
    4. 'def' → logprob: -12.501326560974121
    5. '           ' → logprob: -12.626326560974121
    6. '   ' → logprob: -12.626326560974121
    7. '
' → logprob: -13.001326560974121
    8. '```' → logprob: -13.501326560974121
    9. '    
' → logprob: -13.626326560974121
    10. '        
' → logprob: -15.501326560974121

Token 1109: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03112506866455078
    2. '
' → logprob: -3.531125068664551
    3. '        
' → logprob: -7.281125068664551
    4. 'def' → logprob: -7.406125068664551
    5. '   ' → logprob: -9.90612506866455
    6. '
' → logprob: -11.90612506866455
    7. '    
' → logprob: -12.03112506866455
    8. ' def' → logprob: -12.78112506866455
    9. 'threshold' → logprob: -12.90612506866455
    10. '           ' → logprob: -13.03112506866455

Token 1110: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0008116515236906707
    2. '
' → logprob: -7.250811576843262
    3. '        
' → logprob: -9.500811576843262
    4. '   ' → logprob: -11.125811576843262
    5. 'def' → logprob: -11.625811576843262
    6. '           ' → logprob: -13.625811576843262
    7. '    
' → logprob: -14.375811576843262
    8. '
' → logprob: -14.500811576843262
    9. '```' → logprob: -15.000811576843262
    10. 'indent' → logprob: -15.125811576843262

Token 1111: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007898209616541862
    2. 'def' → logprob: -5.382898330688477
    3. '   ' → logprob: -6.132898330688477
    4. '
' → logprob: -7.007898330688477
    5. '        
' → logprob: -8.882898330688477
    6. 'indent' → logprob: -10.632898330688477
    7. ' def' → logprob: -11.007898330688477
    8. 'threshold' → logprob: -12.257898330688477
    9. '    
' → logprob: -12.632898330688477
    10. '           ' → logprob: -12.882898330688477

Token 1112: ' minimal' (ID: 19957)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.401930034160614
    2. '       ' → logprob: -1.1519300937652588
    3. ' def' → logprob: -4.52692985534668
    4. '
' → logprob: -5.77692985534668
    5. 'indent' → logprob: -8.15192985534668
    6. 'import' → logprob: -8.27692985534668
    7. '   ' → logprob: -8.40192985534668
    8. '        
' → logprob: -9.15192985534668
    9. 'class' → logprob: -10.40192985534668
    10. '           ' → logprob: -10.40192985534668

Token 1113: ' box' (ID: 5506)
  Prédit: '_size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.5444739460945129
    2. 'size' → logprob: -1.5444738864898682
    3. '_safe' → logprob: -3.044473886489868
    4. '_side' → logprob: -3.669473886489868
    5. 'safe' → logprob: -3.794473886489868
    6. 'def' → logprob: -3.794473886489868
    7. '_depth' → logprob: -4.044474124908447
    8. '_radius' → logprob: -5.044474124908447
    9. '_cell' → logprob: -5.044474124908447
    10. '_step' → logprob: -5.044474124908447

Token 1114: ' size' (ID: 2349)
  Prédit: '_size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.2747959494590759
    2. 'size' → logprob: -1.5247960090637207
    3. '       ' → logprob: -4.524796009063721
    4. '   ' → logprob: -4.899796009063721
    5. 'def' → logprob: -6.649796009063721
    6. ' =' → logprob: -6.774796009063721
    7. '
' → logprob: -7.649796009063721
    8. '=' → logprob: -8.274795532226562
    9. '           ' → logprob: -8.524795532226562
    10. '        
' → logprob: -8.649795532226562

Token 1115: ' threshold' (ID: 24313)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20285239815711975
    2. '=' → logprob: -1.8278523683547974
    3. '       ' → logprob: -4.077852249145508
    4. '   ' → logprob: -6.202852249145508
    5. ' <=' → logprob: -6.577852249145508
    6. ':' → logprob: -6.827852249145508
    7. ' ==' → logprob: -7.577852249145508
    8. '<=' → logprob: -8.952852249145508
    9. ' >=' → logprob: -9.077852249145508
    10. '           ' → logprob: -9.202852249145508

Token 1116: ' set' (ID: 920)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03416748344898224
    2. ',' → logprob: -4.909167289733887
    3. '
' → logprob: -5.034167289733887
    4. '10' → logprob: -5.284167289733887
    5. '20' → logprob: -5.409167289733887
    6. '16' → logprob: -6.159167289733887
    7. '0' → logprob: -7.034167289733887
    8. 'MIN' → logprob: -7.159167289733887
    9. '        
' → logprob: -7.284167289733887
    10. 'threshold' → logprob: -7.659167289733887

Token 1117: ' based' (ID: 4122)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01832389272749424
    2. ' =' → logprob: -4.01832389831543
    3. '       ' → logprob: -9.39332389831543
    4. '=
' → logprob: -11.14332389831543
    5. '=size' → logprob: -11.26832389831543
    6. '   ' → logprob: -11.39332389831543
    7. '=min' → logprob: -11.39332389831543
    8. 'to' → logprob: -11.51832389831543
    9. '=self' → logprob: -12.14332389831543
    10. ' to' → logprob: -12.14332389831543

Token 1118: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.07902693003416061
    2. 'to' → logprob: -2.704026937484741
    3. 'f' → logprob: -4.954026699066162
    4. 'def' → logprob: -7.579026699066162
    5. '=' → logprob: -8.32902717590332
    6. ' on' → logprob: -8.70402717590332
    7. '```' → logprob: -8.82902717590332
    8. 'self' → logprob: -8.95402717590332
    9. 'size' → logprob: -9.20402717590332
    10. 'e' → logprob: -9.82902717590332

Token 1119: ' radius' (ID: 21090)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.017798222601413727
    2. 'max' → logprob: -4.64279842376709
    3. ' self' → logprob: -5.39279842376709
    4. 'min' → logprob: -5.76779842376709
    5. ' max' → logprob: -8.76779842376709
    6. '10' → logprob: -10.01779842376709
    7. ' min' → logprob: -10.14279842376709
    8. 'r' → logprob: -10.76779842376709
    9. '0' → logprob: -11.14279842376709
    10. '1' → logprob: -11.51779842376709

Token 1120: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16122844815254211
    2. '
' → logprob: -1.9112284183502197
    3. '        
' → logprob: -7.536228656768799
    4. 'threshold' → logprob: -8.66122817993164
    5. '   ' → logprob: -9.16122817993164
    6. '
' → logprob: -10.03622817993164
    7. '```' → logprob: -10.03622817993164
    8. 'def' → logprob: -10.66122817993164
    9. '           ' → logprob: -10.91122817993164
    10. ' threshold' → logprob: -11.03622817993164

Token 1121: ' to' (ID: 316)
  Prédit: ' threshold'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' threshold' → logprob: -0.9997045993804932
    2. 'threshold' → logprob: -1.4997045993804932
    3. '       ' → logprob: -1.6247045993804932
    4. ' minimal' → logprob: -2.124704599380493
    5. ' min' → logprob: -3.124704599380493
    6. ' max' → logprob: -4.124704360961914
    7. 'min' → logprob: -4.999704360961914
    8. ' TH' → logprob: -5.249704360961914
    9. 'minimal' → logprob: -5.499704360961914
    10. 'max' → logprob: -5.624704360961914

Token 1122: ' detect' (ID: 11839)
  Prédit: ' allow'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' allow' → logprob: -1.0278316736221313
    2. 'allow' → logprob: -1.4028316736221313
    3. 'continue' → logprob: -2.027831554412842
    4. 'avoid' → logprob: -2.777831554412842
    5. ' avoid' → logprob: -3.152831554412842
    6. 'return' → logprob: -3.402831554412842
    7. ' continue' → logprob: -3.527831554412842
    8. ' return' → logprob: -3.652831554412842
    9. ' enable' → logprob: -3.777831554412842
    10. 'def' → logprob: -4.652831554412842

Token 1123: ' safe' (ID: 7703)
  Prédit: 'safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'safe' → logprob: -0.7447680234909058
    2. ' safe' → logprob: -2.1197681427001953
    3. 'small' → logprob: -2.3697681427001953
    4. 'possible' → logprob: -2.8697681427001953
    5. 's' → logprob: -3.1197681427001953
    6. 'holes' → logprob: -3.7447681427001953
    7. ' potential' → logprob: -3.8697681427001953
    8. 'over' → logprob: -3.9947681427001953
    9. 'very' → logprob: -3.9947681427001953
    10. 'potential' → logprob: -4.119768142700195

Token 1124: ' spots' (ID: 25522)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8604166507720947
    2. 'margin' → logprob: -2.3604166507720947
    3. ' margin' → logprob: -2.3604166507720947
    4. '   ' → logprob: -2.4854166507720947
    5. ' area' → logprob: -2.7354166507720947
    6. 'area' → logprob: -3.2354166507720947
    7. 'zone' → logprob: -3.4854166507720947
    8. ' zone' → logprob: -3.8604166507720947
    9. ' zones' → logprob: -3.8604166507720947
    10. ' if' → logprob: -3.9854166507720947

Token 1125: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20316584408283234
    2. '
' → logprob: -1.703165888786316
    3. '        
' → logprob: -6.4531660079956055
    4. 'threshold' → logprob: -9.203166007995605
    5. '
' → logprob: -10.953166007995605
    6. '           ' → logprob: -11.578166007995605
    7. '_threshold' → logprob: -11.578166007995605
    8. '```' → logprob: -11.703166007995605
    9. ' threshold' → logprob: -12.078166007995605
    10. '   ' → logprob: -12.078166007995605

Token 1126: ' radius' (ID: 21090)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.400364488363266
    2. 'at' → logprob: -1.6503645181655884
    3. 'size' → logprob: -2.775364398956299
    4. 'radius' → logprob: -3.150364398956299
    5. 'approximately' → logprob: -4.025364398956299
    6. ' at' → logprob: -5.525364398956299
    7. '0' → logprob: -6.025364398956299
    8. '2' → logprob: -6.275364398956299
    9. 'about' → logprob: -6.400364398956299
    10. 'approx' → logprob: -7.150364398956299

Token 1127: ' size' (ID: 2349)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25425082445144653
    2. 'threshold' → logprob: -2.6292507648468018
    3. '   ' → logprob: -3.2542507648468018
    4. 'self' → logprob: -3.6292507648468018
    5. ':' → logprob: -4.504251003265381
    6. 'if' → logprob: -4.629251003265381
    7. '
' → logprob: -4.629251003265381
    8. '*' → logprob: -5.004251003265381
    9. '_threshold' → logprob: -5.379251003265381
    10. '```' → logprob: -5.379251003265381

Token 1128: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16176460683345795
    2. '
' → logprob: -1.9117646217346191
    3. 'threshold' → logprob: -7.161764621734619
    4. '        
' → logprob: -7.536764621734619
    5. '   ' → logprob: -10.036764144897461
    6. 'def' → logprob: -10.411764144897461
    7. '```' → logprob: -10.411764144897461
    8. ' threshold' → logprob: -10.911764144897461
    9. '           ' → logprob: -10.911764144897461
    10. 'import' → logprob: -10.911764144897461

Token 1129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00420352490618825
    2. '
' → logprob: -5.5042033195495605
    3. '        
' → logprob: -9.504203796386719
    4. '   ' → logprob: -10.879203796386719
    5. 'def' → logprob: -11.004203796386719
    6. '           ' → logprob: -12.254203796386719
    7. '```' → logprob: -12.254203796386719
    8. '
' → logprob: -13.504203796386719
    9. ' def' → logprob: -13.629203796386719
    10. '    
' → logprob: -14.004203796386719

Token 1130: ' MIN' (ID: 27151)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07018417865037918
    2. '
' → logprob: -2.6951842308044434
    3. '        
' → logprob: -8.570183753967285
    4. 'threshold' → logprob: -10.820183753967285
    5. 'def' → logprob: -10.945183753967285
    6. '   ' → logprob: -12.070183753967285
    7. '
' → logprob: -12.695183753967285
    8. 'import' → logprob: -13.195183753967285
    9. 'min' → logprob: -13.320183753967285
    10. '```' → logprob: -13.695183753967285

Token 1131: '_SIZE' (ID: 7347)
  Prédit: '_SIZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_SIZE' → logprob: -0.20151010155677795
    2. '_BOX' → logprob: -1.7015100717544556
    3. '_SIDE' → logprob: -10.076510429382324
    4. '_CELL' → logprob: -11.076510429382324
    5. 'SIZE' → logprob: -11.576510429382324
    6. '_' → logprob: -11.951510429382324
    7. 'BOX' → logprob: -12.076510429382324
    8. '_SZ' → logprob: -12.576510429382324
    9. '_S' → logprob: -13.326510429382324
    10. '_BLOCK' → logprob: -13.576510429382324

Token 1132: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132791221141815
    2. '=' → logprob: -1.313279151916504
    3. '   ' → logprob: -11.063279151916504
    4. ':' → logprob: -14.188279151916504
    5. '       ' → logprob: -15.188279151916504
    6. '```' → logprob: -15.938279151916504
    7. ' ' → logprob: -16.063278198242188
    8. '_THRESHOLD' → logprob: -16.188278198242188
    9. '    ' → logprob: -16.313278198242188
    10. ',' → logprob: -16.938278198242188

Token 1133: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2690926790237427
    2. '1' → logprob: -1.8940926790237427
    3. '0' → logprob: -3.019092559814453
    4. 'min' → logprob: -3.769092559814453
    5. '2' → logprob: -5.019092559814453
    6. 'max' → logprob: -5.269092559814453
    7. '10' → logprob: -7.644092559814453
    8. '4' → logprob: -7.894092559814453
    9. ' self' → logprob: -8.394092559814453
    10. '   ' → logprob: -8.519092559814453

Token 1134: '.radius' (ID: 73491)
  Prédit: '.radius'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.radius' → logprob: -6.511406809295295e-06
    2. 'radius' → logprob: -12.500006675720215
    3. '.height' → logprob: -13.625006675720215
    4. '.width' → logprob: -13.875006675720215
    5. '.' → logprob: -15.375006675720215
    6. '.r' → logprob: -15.500006675720215
    7. ' .' → logprob: -16.0000057220459
    8. '.rad' → logprob: -16.1250057220459
    9. '   ' → logprob: -17.7500057220459
    10. '.radio' → logprob: -18.5000057220459

Token 1135: '/' (ID: 14)
  Prédit: ' /'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.6413366794586182
    2. '/' → logprob: -0.7663366794586182
    3. '*' → logprob: -5.391336441040039
    4. '   ' → logprob: -6.391336441040039
    5. '       ' → logprob: -6.516336441040039
    6. ' *' → logprob: -7.016336441040039
    7. '
' → logprob: -10.266336441040039
    8. '**' → logprob: -11.641336441040039
    9. '           ' → logprob: -11.641336441040039
    10. 'def' → logprob: -11.641336441040039

Token 1136: '2' (ID: 17)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.34307345747947693
    2. '2' → logprob: -1.4680734872817993
    3. '3' → logprob: -3.3430733680725098
    4. '5' → logprob: -4.46807336807251
    5. '8' → logprob: -4.84307336807251
    6. '10' → logprob: -5.34307336807251
    7. '6' → logprob: -7.84307336807251
    8. '16' → logprob: -9.218073844909668
    9. '20' → logprob: -9.968073844909668
    10. '12' → logprob: -11.718073844909668

Token 1137: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.07128529250621796
    2. '       ' → logprob: -2.6962852478027344
    3. '        
' → logprob: -6.821285247802734
    4. '
' → logprob: -9.446285247802734
    5. 'def' → logprob: -9.446285247802734
    6. '   ' → logprob: -9.946285247802734
    7. '    
' → logprob: -10.821285247802734
    8. '

' → logprob: -10.946285247802734
    9. '           ' → logprob: -12.321285247802734
    10. 'class' → logprob: -13.196285247802734

Token 1138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03274081274867058
    2. '
' → logprob: -3.532740831375122
    3. '   ' → logprob: -6.782740592956543
    4. '        
' → logprob: -6.782740592956543
    5. 'def' → logprob: -7.407740592956543
    6. '    
' → logprob: -9.907740592956543
    7. '           ' → logprob: -10.032740592956543
    8. ' def' → logprob: -12.407740592956543
    9. '
' → logprob: -12.532740592956543
    10. '```' → logprob: -13.157740592956543

Token 1139: ' MAX' (ID: 16960)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22248055040836334
    2. 'def' → logprob: -1.9724805355072021
    3. '
' → logprob: -2.847480535507202
    4. '        
' → logprob: -6.472480773925781
    5. ' def' → logprob: -7.597480773925781
    6. '   ' → logprob: -8.222480773925781
    7. '    
' → logprob: -11.222480773925781
    8. '
' → logprob: -11.472480773925781
    9. '           ' → logprob: -11.847480773925781
    10. '            
' → logprob: -12.347480773925781

Token 1140: '_DEPTH' (ID: 80468)
  Prédit: '_DEPTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_DEPTH' → logprob: -0.004089443478733301
    2. '_depth' → logprob: -5.50408935546875
    3. 'depth' → logprob: -12.00408935546875
    4. 'DEP' → logprob: -12.62908935546875
    5. '_DE' → logprob: -14.62908935546875
    6. 'Depth' → logprob: -15.12908935546875
    7. '(depth' → logprob: -15.25408935546875
    8. '_DEP' → logprob: -15.75408935546875
    9. '_SIZE' → logprob: -16.37908935546875
    10. '_RE' → logprob: -16.37908935546875

Token 1141: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687989115715027
    2. '=' → logprob: -1.1368799209594727
    3. ' ' → logprob: -12.761879920959473
    4. ',' → logprob: -12.886879920959473
    5. '   ' → logprob: -12.886879920959473
    6. '    ' → logprob: -15.011879920959473
    7. ')' → logprob: -15.886879920959473
    8. '  ' → logprob: -16.136878967285156
    9. ':' → logprob: -16.511878967285156
    10. '=None' → logprob: -16.886878967285156

Token 1142: ' ' (ID: 220)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.4945010840892792
    2. '12' → logprob: -1.9945011138916016
    3. '15' → logprob: -1.9945011138916016
    4. '20' → logprob: -2.2445011138916016
    5. '16' → logprob: -4.994501113891602
    6. '14' → logprob: -5.994501113891602
    7. '8' → logprob: -6.494501113891602
    8. '30' → logprob: -7.869501113891602
    9. '18' → logprob: -8.619501113891602
    10. '25' → logprob: -8.619501113891602

Token 1143: '12' (ID: 899)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.7540246248245239
    2. '20' → logprob: -1.504024624824524
    3. '15' → logprob: -1.504024624824524
    4. '12' → logprob: -2.5040245056152344
    5. '16' → logprob: -6.504024505615234
    6. '14' → logprob: -6.629024505615234
    7. '30' → logprob: -8.504024505615234
    8. '8' → logprob: -9.129024505615234
    9. '25' → logprob: -9.879024505615234
    10. '18' → logprob: -9.879024505615234

Token 1144: '
        
' (ID: 20417)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2593366801738739
    2. '       ' → logprob: -1.5093367099761963
    3. '   ' → logprob: -5.384336471557617
    4. '        
' → logprob: -6.134336471557617
    5. 'def' → logprob: -8.009336471557617
    6. '    
' → logprob: -8.509336471557617
    7. '
' → logprob: -10.259336471557617
    8. '           ' → logprob: -10.634336471557617
    9. '

' → logprob: -11.634336471557617
    10. ' def' → logprob: -12.134336471557617

Token 1145: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016004569828510284
    2. '   ' → logprob: -4.39100456237793
    3. '
' → logprob: -6.01600456237793
    4. '        
' → logprob: -7.64100456237793
    5. 'def' → logprob: -7.64100456237793
    6. '           ' → logprob: -10.14100456237793
    7. '    
' → logprob: -10.51600456237793
    8. '     ' → logprob: -11.51600456237793
    9. '    ' → logprob: -12.64100456237793
    10. '      ' → logprob: -12.89100456237793

Token 1146: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.04328679293394089
    2. '       ' → logprob: -3.1682868003845215
    3. ' def' → logprob: -9.418286323547363
    4. '   ' → logprob: -9.543286323547363
    5. '
' → logprob: -9.668286323547363
    6. 'import' → logprob: -10.418286323547363
    7. 'from' → logprob: -11.668286323547363
    8. 'stack' → logprob: -12.043286323547363
    9. 'result' → logprob: -12.043286323547363
    10. '        
' → logprob: -12.168286323547363

Token 1147: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.0392569936811924
    2. 'search' → logprob: -3.664257049560547
    3. 'query' → logprob: -5.414257049560547
    4. 'sub' → logprob: -5.414257049560547
    5. 'quad' → logprob: -6.414257049560547
    6. '_check' → logprob: -7.289257049560547
    7. 're' → logprob: -7.289257049560547
    8. '_sub' → logprob: -8.914257049560547
    9. 'scan' → logprob: -9.164257049560547
    10. 'is' → logprob: -9.164257049560547

Token 1148: '_' (ID: 62)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.0011672453256323934
    2. '_safe' → logprob: -8.251167297363281
    3. 'node' → logprob: -8.376167297363281
    4. '_node' → logprob: -9.001167297363281
    5. '_area' → logprob: -9.251167297363281
    6. '_' → logprob: -9.251167297363281
    7. '(' → logprob: -9.626167297363281
    8. 'safe' → logprob: -10.126167297363281
    9. '(area' → logprob: -10.751167297363281
    10. '_cover' → logprob: -10.751167297363281

Token 1149: 'covered' (ID: 32827)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.6827407479286194
    2. 'point' → logprob: -1.1827406883239746
    3. 'covered' → logprob: -2.1827406883239746
    4. 'safe' → logprob: -3.5577406883239746
    5. 'quad' → logprob: -3.8077406883239746
    6. 'area' → logprob: -4.807740688323975
    7. 'Quad' → logprob: -5.932740688323975
    8. '(node' → logprob: -6.182740688323975
    9. 'coverage' → logprob: -6.307740688323975
    10. '_safe' → logprob: -6.432740688323975

Token 1150: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.00019543453527148813
    2. '(self' → logprob: -9.000195503234863
    3. '(n' → logprob: -10.125195503234863
    4. '(' → logprob: -11.500195503234863
    5. '(x' → logprob: -11.750195503234863
    6. '(box' → logprob: -11.875195503234863
    7. '(root' → logprob: -12.500195503234863
    8. ' (' → logprob: -14.250195503234863
    9. '(rect' → logprob: -14.500195503234863
    10. '(area' → logprob: -14.625195503234863

Token 1151: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.006795186549425125
    2. '):
' → logprob: -5.006795406341553
    3. ':' → logprob: -10.006794929504395
    4. ')' → logprob: -10.881794929504395
    5. ' ):' → logprob: -11.756794929504395
    6. '):
' → logprob: -12.381794929504395
    7. '(node' → logprob: -13.506794929504395
    8. ',' → logprob: -14.381794929504395
    9. '):

' → logprob: -14.381794929504395
    10. '   ' → logprob: -14.381794929504395

Token 1152: ' Quad' (ID: 69708)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.3052915632724762
    2. '):
' → logprob: -2.3052916526794434
    3. ')' → logprob: -2.5552916526794434
    4. 'self' → logprob: -3.6802916526794434
    5. 'Quad' → logprob: -3.6802916526794434
    6. '   ' → logprob: -4.680291652679443
    7. '):' → logprob: -4.805291652679443
    8. '       ' → logprob: -5.430291652679443
    9. '(node' → logprob: -5.930291652679443
    10. '
' → logprob: -6.305291652679443

Token 1153: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -1.0280383548888494e-06
    2. 'Tre' → logprob: -14.500000953674316
    3. 'tree' → logprob: -15.500000953674316
    4. '	Tree' → logprob: -16.625001907348633
    5. 'Node' → logprob: -17.250001907348633
    6. ' Tree' → logprob: -17.375001907348633
    7. '<Tree' → logprob: -17.625001907348633
    8. 'T' → logprob: -18.500001907348633
    9. '```' → logprob: -18.500001907348633
    10. '_tree' → logprob: -18.875001907348633

Token 1154: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -6.64708495605737e-05
    2. '           ' → logprob: -10.750066757202148
    3. 'node' → logprob: -11.500066757202148
    4. '.Node' → logprob: -11.500066757202148
    5. '       ' → logprob: -11.875066757202148
    6. '):
' → logprob: -12.500066757202148
    7. '   ' → logprob: -12.750066757202148
    8. ')' → logprob: -13.125066757202148
    9. ' Node' → logprob: -13.375066757202148
    10. '_node' → logprob: -13.875066757202148

Token 1155: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7065894603729248
    2. '):' → logprob: -0.7065894603729248
    3. ')' → logprob: -4.331589698791504
    4. '):
' → logprob: -8.831589698791504
    5. '       ' → logprob: -10.706589698791504
    6. '   ' → logprob: -11.456589698791504
    7. '):

' → logprob: -11.581589698791504
    8. ')->' → logprob: -11.581589698791504
    9. ':' → logprob: -12.331589698791504
    10. '           ' → logprob: -13.206589698791504

Token 1156: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00020783171930816025
    2. ':
' → logprob: -8.875207901000977
    3. '):' → logprob: -10.250207901000977
    4. '():' → logprob: -10.875207901000977
    5. ' :' → logprob: -11.750207901000977
    6. '       ' → logprob: -13.750207901000977
    7. '   ' → logprob: -13.875207901000977
    8. '():
' → logprob: -14.375207901000977
    9. ':return' → logprob: -14.375207901000977
    10. '#:' → logprob: -14.500207901000977

Token 1157: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.0006164124351926148
    2. 'None' → logprob: -7.500616550445557
    3. 'float' → logprob: -11.125616073608398
    4. ' bool' → logprob: -11.375616073608398
    5. 'int' → logprob: -11.750616073608398
    6. 'Bool' → logprob: -12.000616073608398
    7. '(bool' → logprob: -12.250616073608398
    8. 'True' → logprob: -12.375616073608398
    9. '...' → logprob: -12.500616073608398
    10. 'False' → logprob: -12.875616073608398

Token 1158: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0030551888048648834
    2. ':
' → logprob: -6.003055095672607
    3. '       ' → logprob: -7.878055095672607
    4. '):' → logprob: -9.253055572509766
    5. '           ' → logprob: -10.628055572509766
    6. '():' → logprob: -10.878055572509766
    7. ' :' → logprob: -11.253055572509766
    8. ',' → logprob: -11.628055572509766
    9. '):
' → logprob: -11.878055572509766
    10. '<|end|>' → logprob: -11.878055572509766

Token 1159: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013441616669297218
    2. '
' → logprob: -5.513441562652588
    3. '        
' → logprob: -6.013441562652588
    4. '   ' → logprob: -6.138441562652588
    5. '           ' → logprob: -6.263441562652588
    6. ' 
' → logprob: -6.763441562652588
    7. '        ' → logprob: -7.638441562652588
    8. '    
' → logprob: -7.888441562652588
    9. ' if' → logprob: -8.888442039489746
    10. '    ' → logprob: -9.013442039489746

Token 1160: ' #' (ID: 1069)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.39646920561790466
    2. 'pts' → logprob: -1.771469235420227
    3. '           ' → logprob: -3.2714691162109375
    4. 'corn' → logprob: -3.2714691162109375
    5. ' points' → logprob: -3.3964691162109375
    6. ' pts' → logprob: -3.5214691162109375
    7. 'safe' → logprob: -5.2714691162109375
    8. ' corners' → logprob: -5.3964691162109375
    9. 'all' → logprob: -6.2714691162109375
    10. 'if' → logprob: -6.8964691162109375

Token 1161: ' True' (ID: 6432)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.5870144963264465
    2. 'pts' → logprob: -0.8370144963264465
    3. 'corn' → logprob: -5.212014675140381
    4. 'all' → logprob: -6.212014675140381
    5. 'safe' → logprob: -7.087014675140381
    6. '           ' → logprob: -7.087014675140381
    7. 'samples' → logprob: -7.837014675140381
    8. 'corner' → logprob: -8.087014198303223
    9. ' pts' → logprob: -8.587014198303223
    10. 'ps' → logprob: -8.712014198303223

Token 1162: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3190310597419739
    2. 'if' → logprob: -1.319031000137329
    3. ' =' → logprob: -6.819031238555908
    4. ' means' → logprob: -7.194031238555908
    5. 'points' → logprob: -7.319031238555908
    6. ':' → logprob: -7.444031238555908
    7. '           ' → logprob: -7.694031238555908
    8. 'means' → logprob: -8.06903076171875
    9. 'def' → logprob: -8.19403076171875
    10. ',' → logprob: -8.19403076171875

Token 1163: ' all' (ID: 722)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.07162336260080338
    2. 'all' → logprob: -2.8216233253479004
    3. ' node' → logprob: -4.9466233253479
    4. ' all' → logprob: -6.1966233253479
    5. '           ' → logprob: -8.321623802185059
    6. 'True' → logprob: -9.321623802185059
    7. '
' → logprob: -10.071623802185059
    8. ' True' → logprob: -10.071623802185059
    9. 'not' → logprob: -10.696623802185059
    10. '       ' → logprob: -12.696623802185059

Token 1164: ' covered' (ID: 13083)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.21929796040058136
    2. ' points' → logprob: -2.3442978858947754
    3. 'corn' → logprob: -2.7192978858947754
    4. ' corners' → logprob: -4.344297885894775
    5. 'samples' → logprob: -5.094297885894775
    6. 'safe' → logprob: -5.344297885894775
    7. 'point' → logprob: -6.219297885894775
    8. 'node' → logprob: -6.469297885894775
    9. 'covered' → logprob: -6.969297885894775
    10. ' safe' → logprob: -6.969297885894775

Token 1165: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017551444470882416
    2. ',' → logprob: -4.642551422119141
    3. ' or' → logprob: -5.517551422119141
    4. '
' → logprob: -6.517551422119141
    5. '<|end|>' → logprob: -7.392551422119141
    6. '.' → logprob: -7.517551422119141
    7. ';' → logprob: -8.39255142211914
    8. ':' → logprob: -9.14255142211914
    9. '            
' → logprob: -9.14255142211914
    10. '<|end|>' → logprob: -9.14255142211914

Token 1166: 'no' (ID: 1750)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.4524891972541809
    2. ')' → logprob: -1.4524891376495361
    3. ' True' → logprob: -2.202489137649536
    4. '           ' → logprob: -4.827489376068115
    5. 'return' → logprob: -6.202489376068115
    6. '               ' → logprob: -6.202489376068115
    7. ')
' → logprob: -6.202489376068115
    8. 'not' → logprob: -6.952489376068115
    9. 'node' → logprob: -7.202489376068115
    10. ' or' → logprob: -7.327489376068115

Token 1167: ' safe' (ID: 7703)
  Prédit: ' safe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' safe' → logprob: -0.34904205799102783
    2. 'safe' → logprob: -1.2240420579910278
    3. 'space' → logprob: -8.724041938781738
    4. '_safe' → logprob: -8.849041938781738
    5. ')' → logprob: -9.099041938781738
    6. ' possible' → logprob: -9.974041938781738
    7. 'possible' → logprob: -10.099041938781738
    8. ' space' → logprob: -10.224041938781738
    9. '-safe' → logprob: -11.849041938781738
    10. ' point' → logprob: -12.474041938781738

Token 1168: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.3783227205276489
    2. ' area' → logprob: -1.628322720527649
    3. ')' → logprob: -3.2533226013183594
    4. 'space' → logprob: -3.7533226013183594
    5. '),' → logprob: -3.8783226013183594
    6. 'areas' → logprob: -4.628322601318359
    7. '           ' → logprob: -4.878322601318359
    8. 'points' → logprob: -5.878322601318359
    9. '_area' → logprob: -6.003322601318359
    10. ' space' → logprob: -6.003322601318359

Token 1169: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3523271679878235
    2. '),' → logprob: -1.9773271083831787
    3. '           ' → logprob: -2.2273271083831787
    4. ')
' → logprob: -3.3523271083831787
    5. ' or' → logprob: -4.352327346801758
    6. '):
' → logprob: -6.852327346801758
    7. '               ' → logprob: -7.352327346801758
    8. ',' → logprob: -7.477327346801758
    9. '),
' → logprob: -8.727327346801758
    10. '       ' → logprob: -9.102327346801758

Token 1170: ' False' (ID: 7983)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07363937795162201
    2. ' return' → logprob: -3.698639392852783
    3. ' if' → logprob: -4.073639392852783
    4. '
' → logprob: -5.073639392852783
    5. ' points' → logprob: -5.198639392852783
    6. ' corners' → logprob: -5.698639392852783
    7. 'points' → logprob: -5.823639392852783
    8. 'return' → logprob: -6.198639392852783
    9. ' tokens' → logprob: -6.323639392852783
    10. '            
' → logprob: -7.323639392852783

Token 1171: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06199199706315994
    2. 'if' → logprob: -3.0619919300079346
    3. '           ' → logprob: -4.686992168426514
    4. ' or' → logprob: -5.811992168426514
    5. 'or' → logprob: -7.561992168426514
    6. ',' → logprob: -8.936991691589355
    7. ')' → logprob: -9.311991691589355
    8. ' is' → logprob: -9.561991691589355
    9. '=' → logprob: -9.686991691589355
    10. ':' → logprob: -9.811991691589355

Token 1172: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.08839433640241623
    2. 'not' → logprob: -2.8383944034576416
    3. 'there' → logprob: -4.3383941650390625
    4. 'some' → logprob: -5.2133941650390625
    5. 'safe' → logprob: -5.7133941650390625
    6. ' any' → logprob: -6.4633941650390625
    7. 'exists' → logprob: -6.5883941650390625
    8. '
' → logprob: -7.7133941650390625
    9. 'False' → logprob: -8.088394165039062
    10. 'found' → logprob: -8.463394165039062

Token 1173: ' safe' (ID: 7703)
  Prédit: 'safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'safe' → logprob: -0.4005312919616699
    2. ' safe' → logprob: -1.77553129196167
    3. 'point' → logprob: -1.90053129196167
    4. ' point' → logprob: -5.15053129196167
    5. 'not' → logprob: -6.02553129196167
    6. 'spot' → logprob: -7.77553129196167
    7. 'space' → logprob: -7.90053129196167
    8. ' is' → logprob: -7.90053129196167
    9. 'possible' → logprob: -7.90053129196167
    10. ' not' → logprob: -8.150531768798828

Token 1174: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.3000457286834717
    2. 'area' → logprob: -1.5500457286834717
    3. '           ' → logprob: -3.6750457286834717
    4. ':' → logprob: -4.550045967102051
    5. ')' → logprob: -5.800045967102051
    6. '_area' → logprob: -6.300045967102051
    7. ':
' → logprob: -7.050045967102051
    8. '):
' → logprob: -7.050045967102051
    9. ',' → logprob: -7.425045967102051
    10. 'point' → logprob: -7.550045967102051

Token 1175: ' detected' (ID: 28357)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00941569171845913
    2. '<|end|>' → logprob: -5.634415626525879
    3. '<|end|>' → logprob: -6.759415626525879
    4. ',' → logprob: -6.884415626525879
    5. ')' → logprob: -7.134415626525879
    6. '            
' → logprob: -7.259415626525879
    7. '{' → logprob: -7.884415626525879
    8. ':' → logprob: -8.509415626525879
    9. '               ' → logprob: -8.634415626525879
    10. '
' → logprob: -8.634415626525879

Token 1176: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8085720539093018
    2. ':' → logprob: -0.9335720539093018
    3. ':
' → logprob: -2.0585720539093018
    4. '):
' → logprob: -4.433571815490723
    5. ',' → logprob: -4.683571815490723
    6. '):' → logprob: -5.808571815490723
    7. '():
' → logprob: -6.183571815490723
    8. '():' → logprob: -6.433571815490723
    9. '(
' → logprob: -6.933571815490723
    10. '            
' → logprob: -7.433571815490723

Token 1177: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020297084003686905
    2. '       ' → logprob: -4.895297050476074
    3. '   ' → logprob: -6.020297050476074
    4. '            
' → logprob: -6.145297050476074
    5. '    
' → logprob: -6.270297050476074
    6. '
' → logprob: -6.395297050476074
    7. ' tokens' → logprob: -7.395297050476074
    8. '        
' → logprob: -7.645297050476074
    9. '[' → logprob: -7.770297050476074
    10. '	       ' → logprob: -8.020297050476074

Token 1178: ' #' (ID: 1069)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.39543214440345764
    2. '           ' → logprob: -1.5204321146011353
    3. 'pts' → logprob: -2.395432233810425
    4. ' points' → logprob: -4.645431995391846
    5. ' pts' → logprob: -6.145431995391846
    6. 'corn' → logprob: -6.395431995391846
    7. 'all' → logprob: -6.895431995391846
    8. 'samples' → logprob: -7.770431995391846
    9. 'safe' → logprob: -8.145432472229004
    10. 'for' → logprob: -8.270432472229004

Token 1179: ' Return' (ID: 6318)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.29620444774627686
    2. 'points' → logprob: -1.5462044477462769
    3. ' points' → logprob: -3.4212045669555664
    4. ' corners' → logprob: -5.671204566955566
    5. ' pts' → logprob: -6.171204566955566
    6. 'pts' → logprob: -6.796204566955566
    7. 'corn' → logprob: -6.796204566955566
    8. 'point' → logprob: -7.546204566955566
    9. ' if' → logprob: -7.671204566955566
    10. ' c' → logprob: -8.421204566955566

Token 1180: ' True' (ID: 6432)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8398684859275818
    2. 'None' → logprob: -1.8398685455322266
    3. '           ' → logprob: -2.0898685455322266
    4. ' if' → logprob: -2.5898685455322266
    5. 'node' → logprob: -2.9648685455322266
    6. 'False' → logprob: -3.4648685455322266
    7. 'points' → logprob: -3.4648685455322266
    8. ' None' → logprob: -3.8398685455322266
    9. '
' → logprob: -4.089868545532227
    10. 'point' → logprob: -4.464868545532227

Token 1181: ' means' (ID: 4748)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7707861065864563
    2. '           ' → logprob: -1.0207860469818115
    3. '<|end|>' → logprob: -3.1457860469818115
    4. 'def' → logprob: -3.5207860469818115
    5. 'if' → logprob: -3.7707860469818115
    6. ',' → logprob: -3.8957860469818115
    7. ' =' → logprob: -4.395786285400391
    8. '
' → logprob: -4.895786285400391
    9. 'tokens' → logprob: -4.895786285400391
    10. '<|end|>' → logprob: -5.145786285400391

Token 1182: ' covered' (ID: 13083)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.22897058725357056
    2. 'all' → logprob: -2.603970527648926
    3. 'covered' → logprob: -2.603970527648926
    4. 'no' → logprob: -3.353970527648926
    5. 'node' → logprob: -4.228970527648926
    6. 'False' → logprob: -5.603970527648926
    7. ' True' → logprob: -6.353970527648926
    8. 'fully' → logprob: -7.228970527648926
    9. 'safe' → logprob: -7.353970527648926
    10. '   ' → logprob: -8.978970527648926

Token 1183: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07630141824483871
    2. ':' → logprob: -3.076301336288452
    3. '
' → logprob: -4.576301574707031
    4. ':
' → logprob: -5.076301574707031
    5. ',' → logprob: -5.826301574707031
    6. '            
' → logprob: -6.326301574707031
    7. '       ' → logprob: -7.201301574707031
    8. '):
' → logprob: -7.201301574707031
    9. '               ' → logprob: -7.451301574707031
    10. ')' → logprob: -7.451301574707031

Token 1184: ' no' (ID: 860)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03410734236240387
    2. ' if' → logprob: -4.409107208251953
    3. '            
' → logprob: -4.784107208251953
    4. '
' → logprob: -5.784107208251953
    5. 'if' → logprob: -5.909107208251953
    6. 'point' → logprob: -7.034107208251953
    7. 'tokens' → logprob: -7.034107208251953
    8. 'False' → logprob: -7.409107208251953
    9. ' tokens' → logprob: -7.534107208251953
    10. '            ' → logprob: -7.659107208251953

Token 1185: ' safe' (ID: 7703)
  Prédit: 'safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'safe' → logprob: -0.062033895403146744
    2. ' safe' → logprob: -2.8120338916778564
    3. 'space' → logprob: -10.062033653259277
    4. 'possible' → logprob: -11.812033653259277
    5. '_safe' → logprob: -12.437033653259277
    6. '           ' → logprob: -13.187033653259277
    7. 'need' → logprob: -13.312033653259277
    8. '
' → logprob: -13.312033653259277
    9. 's' → logprob: -13.937033653259277
    10. 'return' → logprob: -14.062033653259277

Token 1186: ' area' (ID: 3624)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5312080979347229
    2. ' area' → logprob: -1.2812080383300781
    3. 'area' → logprob: -2.281208038330078
    4. '       ' → logprob: -5.156208038330078
    5. '_area' → logprob: -5.406208038330078
    6. ':
' → logprob: -5.531208038330078
    7. '
' → logprob: -5.781208038330078
    8. '               ' → logprob: -5.906208038330078
    9. ':' → logprob: -5.906208038330078
    10. '   ' → logprob: -6.031208038330078

Token 1187: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4950428903102875
    2. '
' → logprob: -1.9950429201126099
    3. ':' → logprob: -2.3700428009033203
    4. ':
' → logprob: -2.7450428009033203
    5. '<|end|>' → logprob: -3.8700428009033203
    6. '):
' → logprob: -4.12004280090332
    7. ',' → logprob: -4.74504280090332
    8. '    
' → logprob: -4.99504280090332
    9. '<|end|>' → logprob: -4.99504280090332
    10. ')' → logprob: -5.12004280090332

Token 1188: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.22535791993141174
    2. ' node' → logprob: -1.8503578901290894
    3. 'this' → logprob: -3.475358009338379
    4. ' this' → logprob: -5.225358009338379
    5. 'that' → logprob: -5.475358009338379
    6. 'the' → logprob: -5.850358009338379
    7. ' the' → logprob: -7.725358009338379
    8. ' that' → logprob: -7.975358009338379
    9. '           ' → logprob: -9.100358009338379
    10. 'box' → logprob: -9.600358009338379

Token 1189: ' boundary' (ID: 35021)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0368642657995224
    2. '
' → logprob: -3.7868642807006836
    3. ':' → logprob: -5.536864280700684
    4. ',' → logprob: -5.661864280700684
    5. '            
' → logprob: -6.161864280700684
    6. ':
' → logprob: -6.411864280700684
    7. '):
' → logprob: -7.536864280700684
    8. ')' → logprob: -8.286864280700684
    9. '.' → logprob: -8.661864280700684
    10. ',
' → logprob: -8.786864280700684

Token 1190: '
            
' (ID: 45334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.622742772102356
    2. '
' → logprob: -0.997742772102356
    3. ':' → logprob: -2.8727426528930664
    4. ',' → logprob: -3.9977426528930664
    5. '            
' → logprob: -4.872742652893066
    6. ':
' → logprob: -5.747742652893066
    7. '):
' → logprob: -6.247742652893066
    8. ')' → logprob: -6.872742652893066
    9. '):' → logprob: -7.247742652893066
    10. '    
' → logprob: -7.247742652893066

Token 1191: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00040910433745011687
    2. '       ' → logprob: -8.125409126281738
    3. 'tokens' → logprob: -9.500409126281738
    4. '   ' → logprob: -11.625409126281738
    5. '            
' → logprob: -11.875409126281738
    6. 'token' → logprob: -12.000409126281738
    7. '	       ' → logprob: -12.750409126281738
    8. 'indent' → logprob: -12.875409126281738
    9. '
' → logprob: -13.000409126281738
    10. '        
' → logprob: -13.125409126281738

Token 1192: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -0.13166505098342896
    2. 'pts' → logprob: -2.256664991378784
    3. '           ' → logprob: -4.631665229797363
    4. 'corn' → logprob: -5.006665229797363
    5. 'samples' → logprob: -6.631665229797363
    6. '#' → logprob: -8.006665229797363
    7. 'all' → logprob: -8.881665229797363
    8. 'corner' → logprob: -9.506665229797363
    9. 'if' → logprob: -9.881665229797363
    10. 'ps' → logprob: -10.131665229797363

Token 1193: '_to' (ID: 5089)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6326236724853516
    2. ' =' → logprob: -0.7576236724853516
    3. '=[]' → logprob: -12.007623672485352
    4. ')' → logprob: -12.132623672485352
    5. '=[' → logprob: -13.132623672485352
    6. ':' → logprob: -13.632623672485352
    7. 's' → logprob: -13.632623672485352
    8. '<|end|>' → logprob: -13.632623672485352
    9. '           ' → logprob: -13.757623672485352
    10. ' =[' → logprob: -14.257623672485352

Token 1194: '_check' (ID: 15847)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.0022179381921887398
    2. 'test' → logprob: -6.502217769622803
    3. ' check' → logprob: -7.752217769622803
    4. '_check' → logprob: -8.752218246459961
    5. '=' → logprob: -10.377218246459961
    6. 'try' → logprob: -10.627218246459961
    7. '
' → logprob: -10.877218246459961
    8. 'sample' → logprob: -11.127218246459961
    9. 'visit' → logprob: -11.627218246459961
    10. 'cover' → logprob: -12.377218246459961

Token 1195: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38693711161613464
    2. '=' → logprob: -1.136937141418457
    3. ':' → logprob: -10.886937141418457
    4. ' =[' → logprob: -10.886937141418457
    5. ' ' → logprob: -11.011937141418457
    6. '=[' → logprob: -11.886937141418457
    7. '=[
' → logprob: -13.261937141418457
    8. '=[]' → logprob: -13.761937141418457
    9. '   ' → logprob: -14.386937141418457
    10. ')' → logprob: -15.136937141418457

Token 1196: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.7617944478988647
    2. '[node' → logprob: -0.7617944478988647
    3. ' node' → logprob: -3.0117945671081543
    4. ' [' → logprob: -4.511794567108154
    5. '[' → logprob: -5.136794567108154
    6. '(node' → logprob: -8.886794090270996
    7. '   ' → logprob: -10.011794090270996
    8. '           ' → logprob: -10.386794090270996
    9. '[
' → logprob: -10.511794090270996
    10. '	node' → logprob: -11.511794090270996

Token 1197: '.c' (ID: 1081)
  Prédit: '.c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.c' → logprob: -0.0006046222406439483
    2. '().' → logprob: -8.375604629516602
    3. '.' → logprob: -9.000604629516602
    4. '.points' → logprob: -9.125604629516602
    5. ' .' → logprob: -9.375604629516602
    6. '.corner' → logprob: -10.375604629516602
    7. 'corn' → logprob: -11.250604629516602
    8. '   ' → logprob: -13.250604629516602
    9. ').' → logprob: -13.375604629516602
    10. '.cor' → logprob: -13.625604629516602

Token 1198: 'orners' (ID: 83180)
  Prédit: 'orners'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orners' → logprob: -0.0003430912329349667
    2. 'corn' → logprob: -8.375343322753906
    3. 'orn' → logprob: -9.875343322753906
    4. 'points' → logprob: -11.125343322753906
    5. 'orns' → logprob: -11.250343322753906
    6. 'c' → logprob: -12.250343322753906
    7. 'or' → logprob: -12.375343322753906
    8. 'ent' → logprob: -12.500343322753906
    9. 'orner' → logprob: -13.000343322753906
    10. '{' → logprob: -13.000343322753906

Token 1199: '()' (ID: 416)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.05239741876721382
    2. '+' → logprob: -3.1773974895477295
    3. '+[' → logprob: -4.67739725112915
    4. '[' → logprob: -10.427397727966309
    5. ' +
' → logprob: -12.302397727966309
    6. '           ' → logprob: -12.552397727966309
    7. '+
' → logprob: -12.927397727966309
    8. '[:]' → logprob: -13.302397727966309
    9. ')' → logprob: -13.552397727966309
    10. '()+' → logprob: -13.802397727966309

Token 1200: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3207276463508606
    2. '+' → logprob: -1.4457275867462158
    3. '+[' → logprob: -3.445727586746216
    4. '           ' → logprob: -5.320727825164795
    5. 'points' → logprob: -7.695727825164795
    6. '[' → logprob: -7.945727825164795
    7. '<|end|>' → logprob: -7.945727825164795
    8. ')' → logprob: -8.570727348327637
    9. ' points' → logprob: -8.820727348327637
    10. '(points' → logprob: -8.820727348327637

Token 1201: ' [' (ID: 723)
  Prédit: '[node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[node' → logprob: -0.000487276294734329
    2. '[' → logprob: -8.000487327575684
    3. ' [' → logprob: -9.250487327575684
    4. '[cell' → logprob: -11.250487327575684
    5. '[n' → logprob: -11.375487327575684
    6. '([' → logprob: -12.000487327575684
    7. '[player' → logprob: -12.250487327575684
    8. '[
' → logprob: -12.750487327575684
    9. '[token' → logprob: -12.875487327575684
    10. '[module' → logprob: -13.000487327575684

Token 1202: 'node' (ID: 7005)
  Prédit: 'node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -5.490809417096898e-05
    2. ' node' → logprob: -9.875055313110352
    3. '(node' → logprob: -13.125055313110352
    4. '           ' → logprob: -15.000055313110352
    5. '   ' → logprob: -15.250055313110352
    6. '[node' → logprob: -15.625055313110352
    7. ')' → logprob: -15.750055313110352
    8. ']' → logprob: -15.875055313110352
    9. '       ' → logprob: -16.25005531311035
    10. '	node' → logprob: -16.75005531311035

Token 1203: '.center' (ID: 26875)
  Prédit: '.center'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.center' → logprob: -0.0003037650021724403
    2. '.' → logprob: -8.125304222106934
    3. ' .' → logprob: -12.500304222106934
    4. 'center' → logprob: -13.125304222106934
    5. '.cent' → logprob: -14.750304222106934
    6. ':center' → logprob: -15.125304222106934
    7. '.central' → logprob: -15.125304222106934
    8. ' center' → logprob: -15.125304222106934
    9. '<center' → logprob: -15.750304222106934
    10. '	center' → logprob: -16.250303268432617

Token 1204: '()]
' (ID: 67155)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.01241711713373661
    2. ']' → logprob: -4.762417316436768
    3. '()]
' → logprob: -5.637417316436768
    4. '()' → logprob: -8.63741683959961
    5. ']
' → logprob: -10.01241683959961
    6. ']()' → logprob: -11.63741683959961
    7. '(' → logprob: -14.51241683959961
    8. '()
' → logprob: -15.13741683959961
    9. ']()
' → logprob: -15.13741683959961
    10. ']
' → logprob: -15.26241683959961

Token 1205: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003314123023301363
    2. '
' → logprob: -6.878314018249512
    3. '            
' → logprob: -6.878314018249512
    4. ' for' → logprob: -8.003314018249512
    5. '       ' → logprob: -8.753314018249512
    6. ')' → logprob: -9.003314018249512
    7. ',' → logprob: -9.003314018249512
    8. '   ' → logprob: -9.378314018249512
    9. '  
' → logprob: -9.503314018249512
    10. 'for' → logprob: -9.628314018249512

Token 1206: ' statuses' (ID: 125643)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0007693672669120133
    2. '           ' → logprob: -7.250769138336182
    3. 'results' → logprob: -10.62576961517334
    4. ' for' → logprob: -11.37576961517334
    5. 'statuses' (adapté à ' statuses') → logprob: -11.50076961517334
    6. 'safe' → logprob: -12.37576961517334
    7. 'dist' → logprob: -12.87576961517334
    8. '       ' → logprob: -13.00076961517334
    9. 'points' → logprob: -13.75076961517334
    10. 'if' → logprob: -14.62576961517334

Token 1207: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31333035230636597
    2. ' =' → logprob: -1.3133304119110107
    3. '=[]' → logprob: -9.68833065032959
    4. '   ' → logprob: -13.18833065032959
    5. '=[]
' → logprob: -13.31333065032959
    6. ' =[' → logprob: -13.93833065032959
    7. '           ' → logprob: -14.18833065032959
    8. '=[' → logprob: -14.68833065032959
    9. '    ' → logprob: -15.68833065032959
    10. '[:]' → logprob: -16.063329696655273

Token 1208: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.028183305636048317
    2. '[]' → logprob: -4.028183460235596
    3. '[self' → logprob: -5.403183460235596
    4. '[p' → logprob: -5.903183460235596
    5. '[]
' → logprob: -6.278183460235596
    6. '[list' → logprob: -9.528182983398438
    7. '[len' → logprob: -9.778182983398438
    8. '[
' → logprob: -9.778182983398438
    9. '[obj' → logprob: -9.778182983398438
    10. '[f' → logprob: -10.028182983398438

Token 1209: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001720742875477299
    2. 'for' → logprob: -9.000171661376953
    3. ' for' → logprob: -10.125171661376953
    4. '       ' → logprob: -12.250171661376953
    5. '   ' → logprob: -13.125171661376953
    6. '<|end|>' → logprob: -14.125171661376953
    7. '	       ' → logprob: -15.000171661376953
    8. '[' → logprob: -15.875171661376953
    9. '```' → logprob: -16.250171661376953
    10. '<|end|>' → logprob: -16.500171661376953

Token 1210: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5773342847824097
    2. 'for' (adapté à ' for') → logprob: -0.8273342847824097
    3. ' for' → logprob: -6.577334403991699
    4. '   ' → logprob: -13.4523344039917
    5. '       ' → logprob: -14.4523344039917
    6. '	for' → logprob: -15.9523344039917
    7. '               ' → logprob: -16.827333450317383
    8. '
' → logprob: -17.077333450317383
    9. '            
' → logprob: -17.702333450317383
    10. ' ' → logprob: -18.077333450317383

Token 1211: ' p' (ID: 275)
  Prédit: 'pt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pt' → logprob: -0.3134465217590332
    2. 'p' → logprob: -1.3134465217590332
    3. 'point' → logprob: -9.063446044921875
    4. ' pt' → logprob: -9.688446044921875
    5. ' p' → logprob: -12.063446044921875
    6. '   ' → logprob: -13.938446044921875
    7. '	pt' → logprob: -16.563446044921875
    8. '       ' → logprob: -16.688446044921875
    9. '           ' → logprob: -16.938446044921875
    10. 'pts' → logprob: -17.438446044921875

Token 1212: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.009759039618074894
    2. 'in' → logprob: -4.634758949279785
    3. '	in' → logprob: -14.009758949279785
    4. ' ' → logprob: -14.134758949279785
    5. 'n' → logprob: -14.759758949279785
    6. 'p' → logprob: -15.634758949279785
    7. 's' → logprob: -16.2597599029541
    8. '_in' → logprob: -16.2597599029541
    9. 'i' → logprob: -16.2597599029541
    10. '
' → logprob: -16.6347599029541

Token 1213: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -1.735893965815194e-05
    2. '[' → logprob: -11.875017166137695
    3. '(points' → logprob: -12.250017166137695
    4. ' points' → logprob: -12.500017166137695
    5. 'point' → logprob: -13.625017166137695
    6. '           ' → logprob: -15.500017166137695
    7. '
' → logprob: -16.500017166137695
    8. '	points' → logprob: -16.625017166137695
    9. '   ' → logprob: -16.750017166137695
    10. '[
' → logprob: -17.375017166137695

Token 1214: '_to' (ID: 5089)
  Prédit: '_to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.0012399908155202866
    2. '           ' → logprob: -7.376239776611328
    3. '               ' → logprob: -9.001239776611328
    4. 'in' → logprob: -9.501239776611328
    5. ' in' → logprob: -9.626239776611328
    6. ')' → logprob: -9.751239776611328
    7. 'to' → logprob: -9.751239776611328
    8. 'To' → logprob: -10.376239776611328
    9. '):
' → logprob: -10.751239776611328
    10. '                   ' → logprob: -10.876239776611328

Token 1215: '_check' (ID: 15847)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.2538011372089386
    2. '_check' → logprob: -1.5038011074066162
    3. 'node' → logprob: -7.253801345825195
    4. '[' → logprob: -7.503801345825195
    5. 'points' → logprob: -8.628801345825195
    6. '[
' → logprob: -9.128801345825195
    7. 'range' → logprob: -9.503801345825195
    8. '
' → logprob: -9.628801345825195
    9. '[node' → logprob: -9.753801345825195
    10. 'checks' → logprob: -10.128801345825195

Token 1216: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14629870653152466
    2. ':
' → logprob: -2.02129864692688
    3. '):
' → logprob: -6.771298885345459
    4. '               ' → logprob: -6.771298885345459
    5. '           ' → logprob: -7.896298885345459
    6. '<|end|>' → logprob: -7.896298885345459
    7. '):' → logprob: -9.0212984085083
    8. ',' → logprob: -9.0212984085083
    9. '<|end|>' → logprob: -9.2712984085083
    10. '():
' → logprob: -9.7712984085083

Token 1217: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00032485672272741795
    2. 'statuses' → logprob: -8.625325202941895
    3. ' if' → logprob: -10.250325202941895
    4. ' statuses' → logprob: -10.375325202941895
    5. '           ' → logprob: -11.375325202941895
    6. 'status' → logprob: -11.625325202941895
    7. '   ' → logprob: -11.750325202941895
    8. '                ' → logprob: -12.000325202941895
    9. '                
' → logprob: -12.125325202941895
    10. '<|end|>' → logprob: -12.125325202941895

Token 1218: ' if' (ID: 538)
  Prédit: 'statuses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'statuses' → logprob: -0.2708371579647064
    2. '                   ' → logprob: -2.5208370685577393
    3. 'if' (adapté à ' if') → logprob: -2.8958370685577393
    4. ' statuses' → logprob: -3.0208370685577393
    5. ' if' → logprob: -3.6458370685577393
    6. 'status' → logprob: -4.145837306976318
    7. '               ' → logprob: -5.145837306976318
    8. ' status' → logprob: -6.020837306976318
    9. 's' → logprob: -7.020837306976318
    10. ' s' → logprob: -7.770837306976318

Token 1219: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.00074959039920941
    2. ' not' → logprob: -7.375749588012695
    3. 'self' → logprob: -9.500749588012695
    4. 'p' → logprob: -10.500749588012695
    5. '(not' → logprob: -11.500749588012695
    6. '           ' → logprob: -12.375749588012695
    7. '               ' → logprob: -12.875749588012695
    8. '
' → logprob: -13.500749588012695
    9. '                   ' → logprob: -14.125749588012695
    10. '   ' → logprob: -14.625749588012695

Token 1220: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0002943479048553854
    2. '(self' → logprob: -8.50029468536377
    3. ' self' → logprob: -9.37529468536377
    4. '(' → logprob: -12.62529468536377
    5. 'screen' → logprob: -13.12529468536377
    6. '
' → logprob: -15.37529468536377
    7. '_screen' → logprob: -16.625293731689453
    8. ' (' → logprob: -16.750293731689453
    9. '	self' → logprob: -16.750293731689453
    10. '_self' → logprob: -17.000293731689453

Token 1221: '._' (ID: 2697)
  Prédit: '._'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '._' → logprob: -0.00017565040616318583
    2. '.is' → logprob: -8.875175476074219
    3. '_point' → logprob: -10.375175476074219
    4. '.point' → logprob: -13.375175476074219
    5. '.' → logprob: -13.750175476074219
    6. '_is' → logprob: -14.500175476074219
    7. '   ' → logprob: -14.500175476074219
    8. '
' → logprob: -16.12517547607422
    9. '_safe' → logprob: -16.12517547607422
    10. '.Point' → logprob: -16.12517547607422

Token 1222: 'point' (ID: 4859)
  Prédit: 'point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -1.7432603272027336e-06
    2. 'is' → logprob: -14.500001907348633
    3. '.point' → logprob: -15.000001907348633
    4. '_point' → logprob: -15.250001907348633
    5. 'screen' → logprob: -15.500001907348633
    6. '(point' → logprob: -16.125001907348633
    7. '
' → logprob: -16.625001907348633
    8. ' point' → logprob: -16.875001907348633
    9. 'points' → logprob: -17.625001907348633
    10. '`' → logprob: -18.000001907348633

Token 1223: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.003318403847515583
    2. 'valid' → logprob: -5.7533183097839355
    3. 'Valid' → logprob: -8.878318786621094
    4. '_safe' → logprob: -14.253318786621094
    5. '
' → logprob: -15.628318786621094
    6. ' valid' → logprob: -15.753318786621094
    7. ' Valid' → logprob: -16.253318786621094
    8. 'safe' → logprob: -16.378318786621094
    9. '```' → logprob: -16.878318786621094
    10. '_VALID' → logprob: -17.003318786621094

Token 1224: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.0001439459010725841
    2. '(' → logprob: -9.250144004821777
    3. '(point' → logprob: -10.500144004821777
    4. ' (' → logprob: -11.125144004821777
    5. '(
' → logprob: -12.625144004821777
    6. ')' → logprob: -13.250144004821777
    7. '(Point' → logprob: -16.12514305114746
    8. '((' → logprob: -16.37514305114746
    9. '               ' → logprob: -17.25014305114746
    10. '(space' → logprob: -17.50014305114746

Token 1225: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.019919922575354576
    2. '):' → logprob: -4.0199198722839355
    3. ')' → logprob: -6.3949198722839355
    4. '):
' → logprob: -9.394920349121094
    5. '):

' → logprob: -12.394920349121094
    6. '                   ' → logprob: -12.394920349121094
    7. '               ' → logprob: -12.894920349121094
    8. ' or' → logprob: -13.144920349121094
    9. '           ' → logprob: -14.519920349121094
    10. ':' → logprob: -15.019920349121094

Token 1226: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06697436422109604
    2. ':' → logprob: -3.066974401473999
    3. ':
' → logprob: -4.31697416305542
    4. '):
' → logprob: -6.31697416305542
    5. '):' → logprob: -7.19197416305542
    6. '               ' → logprob: -7.31697416305542
    7. '                       ' → logprob: -7.44197416305542
    8. ' or' → logprob: -7.44197416305542
    9. ')' → logprob: -9.191974639892578
    10. '<|end|>' → logprob: -9.441974639892578

Token 1227: ' statuses' (ID: 125643)
  Prédit: 'statuses'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'statuses' (adapté à ' statuses') → logprob: -0.0002646735229063779
    2. '               ' → logprob: -9.500265121459961
    3. ' statuses' → logprob: -9.625265121459961
    4. 'status' → logprob: -10.000265121459961
    5. 'return' → logprob: -10.250265121459961
    6. '           ' → logprob: -10.625265121459961
    7. '                   ' → logprob: -11.125265121459961
    8. '   ' → logprob: -13.500265121459961
    9. '
' → logprob: -14.250265121459961
    10. '                       ' → logprob: -14.375265121459961

Token 1228: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00015979631280060858
    2. '.' → logprob: -8.750160217285156
    3. '.app' → logprob: -14.625160217285156
    4. '.ap' → logprob: -14.875160217285156
    5. ' .' → logprob: -15.000160217285156
    6. 'append' → logprob: -16.125160217285156
    7. '.Append' → logprob: -18.875160217285156
    8. '().' → logprob: -18.875160217285156
    9. '=' → logprob: -19.000160217285156
    10. '   ' → logprob: -19.750160217285156

Token 1229: '(True' (ID: 55978)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.016208916902542114
    2. 'True' → logprob: -4.141209125518799
    3. '(False' → logprob: -8.89120864868164
    4. ' False' → logprob: -10.39120864868164
    5. '(True' → logprob: -12.26620864868164
    6. ' True' → logprob: -14.01620864868164
    7. '   ' → logprob: -15.39120864868164
    8. 'None' → logprob: -15.76620864868164
    9. '0' → logprob: -16.14120864868164
    10. '[' → logprob: -16.64120864868164

Token 1230: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06625590473413467
    2. ')
' → logprob: -2.816255807876587
    3. '               ' → logprob: -5.566256046295166
    4. '                   ' → logprob: -7.941256046295166
    5. '<|end|>' → logprob: -10.066255569458008
    6. ')return' → logprob: -11.066255569458008
    7. '):
' → logprob: -11.316255569458008
    8. '           ' → logprob: -12.066255569458008
    9. '                       ' → logprob: -12.566255569458008
    10. ')#' → logprob: -12.816255569458008

Token 1231: ' ' (ID: 220)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002864438807591796
    2. '                   ' → logprob: -6.377864360809326
    3. 'else' → logprob: -7.502864360809326
    4. '<|end|>' → logprob: -8.127864837646484
    5. ' else' → logprob: -8.752864837646484
    6. '           ' → logprob: -9.252864837646484
    7. ')' → logprob: -10.752864837646484
    8. '
' → logprob: -11.877864837646484
    9. 'continue' → logprob: -12.377864837646484
    10. '                ' → logprob: -12.377864837646484

Token 1232: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005604511592537165
    2. 'else' → logprob: -5.6306047439575195
    3. '                   ' → logprob: -6.5056047439575195
    4. '<|end|>' → logprob: -8.25560474395752
    5. ' else' → logprob: -9.13060474395752
    6. ')' → logprob: -10.13060474395752
    7. '           ' → logprob: -10.50560474395752
    8. '                       ' → logprob: -10.88060474395752
    9. 'continue' → logprob: -11.00560474395752
    10. '
' → logprob: -11.75560474395752

Token 1233: ' outside' (ID: 7539)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.002470305422320962
    2. 'False' → logprob: -6.75247049331665
    3. ' True' → logprob: -7.50247049331665
    4. '#' → logprob: -7.62747049331665
    5. '           ' → logprob: -9.002470016479492
    6. '               ' → logprob: -9.127470016479492
    7. '                   ' → logprob: -10.502470016479492
    8. '                       ' → logprob: -15.252470016479492
    9. 'continue' → logprob: -15.377470016479492
    10. '
' → logprob: -15.502470016479492

Token 1234: ' screen' (ID: 6188)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05949217453598976
    2. ')' → logprob: -3.8094921112060547
    3. 'else' → logprob: -4.559492111206055
    4. '           ' → logprob: -5.059492111206055
    5. ' else' → logprob: -5.184492111206055
    6. ' or' → logprob: -5.434492111206055
    7. '                   ' → logprob: -5.684492111206055
    8. '=True' → logprob: -5.809492111206055
    9. ' (' → logprob: -7.684492111206055
    10. '(True' → logprob: -8.184492111206055

Token 1235: ' as' (ID: 472)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008362325839698315
    2. '                   ' → logprob: -4.883362293243408
    3. '           ' → logprob: -8.383362770080566
    4. ')' → logprob: -8.758362770080566
    5. '
' → logprob: -8.883362770080566
    6. 'else' → logprob: -9.633362770080566
    7. '<|end|>' → logprob: -9.883362770080566
    8. 'continue' → logprob: -10.133362770080566
    9. ' else' → logprob: -11.383362770080566
    10. '                       ' → logprob: -11.508362770080566

Token 1236: ' covered' (ID: 13083)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.025246452540159225
    2. 'True' → logprob: -3.7752463817596436
    3. ' covered' → logprob: -6.650246620178223
    4. 'not' → logprob: -8.525246620178223
    5. 'safe' → logprob: -8.900246620178223
    6. '"' → logprob: -8.900246620178223
    7. ' True' → logprob: -9.025246620178223
    8. 'unsafe' → logprob: -10.275246620178223
    9. '   ' → logprob: -10.900246620178223
    10. 'False' → logprob: -10.900246620178223

Token 1237: ' =>' (ID: 871)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008917083963751793
    2. '                   ' → logprob: -4.758916854858398
    3. 'continue' → logprob: -8.508916854858398
    4. 'else' → logprob: -9.883916854858398
    5. '<|end|>' → logprob: -11.258916854858398
    6. '           ' → logprob: -11.508916854858398
    7. ' continue' → logprob: -11.508916854858398
    8. '```' → logprob: -12.508916854858398
    9. ' else' → logprob: -12.758916854858398
    10. ')' → logprob: -12.758916854858398

Token 1238: ' no' (ID: 860)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00017267030489165336
    2. 'False' → logprob: -9.00017261505127
    3. ' True' → logprob: -10.00017261505127
    4. '           ' → logprob: -12.75017261505127
    5. '               ' → logprob: -14.75017261505127
    6. '                   ' → logprob: -15.25017261505127
    7. '   ' → logprob: -15.87517261505127
    8. '
' → logprob: -16.125173568725586
    9. '       ' → logprob: -17.375173568725586
    10. 'true' → logprob: -18.125173568725586

Token 1239: ' safe' (ID: 7703)
  Prédit: 'safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'safe' → logprob: -0.002459841314703226
    2. ' safe' → logprob: -6.37746000289917
    3. 'False' → logprob: -7.75246000289917
    4. 'True' → logprob: -8.502459526062012
    5. '               ' → logprob: -10.877459526062012
    6. '
' → logprob: -10.877459526062012
    7. ')' → logprob: -10.877459526062012
    8. '           ' → logprob: -11.127459526062012
    9. 'space' → logprob: -11.377459526062012
    10. '                   ' → logprob: -12.377459526062012

Token 1240: '
' (ID: 198)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.10339094698429108
    2. ' area' → logprob: -2.72839093208313
    3. '           ' → logprob: -4.228391170501709
    4. '               ' → logprob: -4.478391170501709
    5. '                   ' → logprob: -5.853391170501709
    6. ')' → logprob: -7.228391170501709
    7. '
' → logprob: -7.353391170501709
    8. 'point' → logprob: -7.353391170501709
    9. 'space' → logprob: -7.478391170501709
    10. ')
' → logprob: -7.478391170501709

Token 1241: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6935924887657166
    2. '                   ' → logprob: -0.6935924887657166
    3. 'continue' → logprob: -7.943592548370361
    4. ' continue' → logprob: -9.818592071533203
    5. '           ' → logprob: -11.068592071533203
    6. '```' → logprob: -11.693592071533203
    7. '                       ' → logprob: -12.443592071533203
    8. 'else' → logprob: -12.818592071533203
    9. '   ' → logprob: -13.318592071533203
    10. '       ' → logprob: -13.943592071533203

Token 1242: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6720065474510193
    2. '                   ' → logprob: -1.047006607055664
    3. 'continue' (adapté à ' continue') → logprob: -2.047006607055664
    4. '           ' → logprob: -5.172006607055664
    5. ' continue' → logprob: -5.797006607055664
    6. '       ' → logprob: -8.797006607055664
    7. '
' → logprob: -9.422006607055664
    8. 'else' → logprob: -9.547006607055664
    9. '                       ' → logprob: -9.922006607055664
    10. '```' → logprob: -9.922006607055664

Token 1243: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -2.069664333248511e-05
    2. '           ' → logprob: -11.750020980834961
    3. '                   ' → logprob: -12.125020980834961
    4. '
' → logprob: -13.500020980834961
    5. '       ' → logprob: -13.500020980834961
    6. '```' → logprob: -13.500020980834961
    7. '<|end|>' → logprob: -13.750020980834961
    8. '              ' → logprob: -14.875020980834961
    9. 'import' → logprob: -15.125020980834961
    10. 's' → logprob: -15.250020980834961

Token 1244: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.8624639324116288e-06
    2. '           ' → logprob: -14.000001907348633
    3. '                   ' → logprob: -15.250001907348633
    4. '
' → logprob: -16.000001907348633
    5. 'import' → logprob: -16.375001907348633
    6. '              ' → logprob: -16.500001907348633
    7. '       ' → logprob: -16.500001907348633
    8. '```' → logprob: -16.500001907348633
    9. 'p' → logprob: -17.000001907348633
    10. '			' → logprob: -17.125001907348633

Token 1245: ' safe' (ID: 7703)
  Prédit: 'statuses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'statuses' → logprob: -0.34191223978996277
    2. 'if' → logprob: -2.091912269592285
    3. 'status' → logprob: -2.966912269592285
    4. '           ' → logprob: -3.091912269592285
    5. '               ' → logprob: -3.466912269592285
    6. 'safe' (adapté à ' safe') → logprob: -3.591912269592285
    7. '                   ' → logprob: -5.341912269592285
    8. ' if' → logprob: -5.841912269592285
    9. ' statuses' → logprob: -6.841912269592285
    10. ' safe' → logprob: -7.966912269592285

Token 1246: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20262601971626282
    2. ' =' → logprob: -1.7026259899139404
    3. '_status' → logprob: -8.45262622833252
    4. '=False' → logprob: -8.57762622833252
    5. ')' → logprob: -8.70262622833252
    6. 'safe' → logprob: -9.57762622833252
    7. 's' → logprob: -9.70262622833252
    8. '=True' → logprob: -9.70262622833252
    9. '           ' → logprob: -9.82762622833252
    10. '               ' → logprob: -10.32762622833252

Token 1247: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005252729752101004
    2. 'not' → logprob: -7.87552547454834
    3. ' self' → logprob: -9.12552547454834
    4. '           ' → logprob: -10.37552547454834
    5. '               ' → logprob: -13.00052547454834
    6. ' not' → logprob: -14.25052547454834
    7. '                   ' → logprob: -14.25052547454834
    8. '
' → logprob: -14.75052547454834
    9. '       ' → logprob: -14.87552547454834
    10. '   ' → logprob: -15.00052547454834

Token 1248: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.03808201104402542
    2. 'is' → logprob: -3.2880821228027344
    3. '.' → logprob: -11.038082122802734
    4. '
' → logprob: -12.288082122802734
    5. '   ' → logprob: -12.538082122802734
    6. 'safe' → logprob: -12.663082122802734
    7. 's' → logprob: -12.913082122802734
    8. 'screen' → logprob: -13.788082122802734
    9. ' .' → logprob: -13.913082122802734
    10. ').' → logprob: -14.288082122802734

Token 1249: '_safe' (ID: 87847)
  Prédit: 'safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'safe' → logprob: -0.10032453387975693
    2. '_safe' → logprob: -2.3503246307373047
    3. 's' → logprob: -9.475324630737305
    4. ' safe' → logprob: -10.600324630737305
    5. 'Safe' → logprob: -12.350324630737305
    6. '(point' → logprob: -12.725324630737305
    7. 'afe' → logprob: -13.100324630737305
    8. '-safe' → logprob: -13.100324630737305
    9. 'point' → logprob: -13.725324630737305
    10. '(p' → logprob: -14.100324630737305

Token 1250: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -4.127333340875339e-06
    2. '(' → logprob: -12.875003814697266
    3. '               ' → logprob: -14.000003814697266
    4. '(point' → logprob: -15.125003814697266
    5. ' (' → logprob: -15.500003814697266
    6. '(
' → logprob: -16.250003814697266
    7. '                   ' → logprob: -16.625003814697266
    8. '           ' → logprob: -17.125003814697266
    9. '```' → logprob: -17.250003814697266
    10. '
' → logprob: -18.125003814697266

Token 1251: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3602219223976135
    2. ')' → logprob: -1.4852218627929688
    3. '               ' → logprob: -2.6102218627929688
    4. ')==' → logprob: -6.360221862792969
    5. '                   ' → logprob: -7.485221862792969
    6. '==' → logprob: -9.735221862792969
    7. ' )
' → logprob: -10.235221862792969
    8. ')

' → logprob: -10.360221862792969
    9. '           ' → logprob: -10.735221862792969
    10. ' )' → logprob: -11.735221862792969

Token 1252: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.611323624383658e-05
    2. '           ' → logprob: -10.000065803527832
    3. '                   ' → logprob: -12.125065803527832
    4. '                
' → logprob: -12.250065803527832
    5. ')' → logprob: -12.875065803527832
    6. '       ' → logprob: -13.250065803527832
    7. '```' → logprob: -13.250065803527832
    8. '              ' → logprob: -13.875065803527832
    9. '<|end|>' → logprob: -13.875065803527832
    10. '                       ' → logprob: -14.500065803527832

Token 1253: ' statuses' (ID: 125643)
  Prédit: 'statuses'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'statuses' (adapté à ' statuses') → logprob: -0.1311340630054474
    2. '               ' → logprob: -2.131134033203125
    3. '           ' → logprob: -5.756134033203125
    4. ' statuses' → logprob: -7.256134033203125
    5. 'if' → logprob: -8.631134033203125
    6. 'status' → logprob: -9.631134033203125
    7. ' if' → logprob: -10.256134033203125
    8. '                   ' → logprob: -10.631134033203125
    9. '       ' → logprob: -11.381134033203125
    10. '   ' → logprob: -11.881134033203125

Token 1254: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0002067588793579489
    2. '.' → logprob: -8.50020694732666
    3. '.ap' → logprob: -13.25020694732666
    4. '.app' → logprob: -13.62520694732666
    5. ' .' → logprob: -15.62520694732666
    6. 'append' → logprob: -16.375205993652344
    7. '.=' → logprob: -18.625205993652344
    8. '.a' → logprob: -19.375205993652344
    9. '.extend' → logprob: -19.500205993652344
    10. '.
' → logprob: -19.625205993652344

Token 1255: '(not' (ID: 44576)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.04340037330985069
    2. '(not' → logprob: -3.168400287628174
    3. '(s' → logprob: -8.668400764465332
    4. 'safe' → logprob: -8.793400764465332
    5. 'False' → logprob: -10.418400764465332
    6. ' not' → logprob: -10.668400764465332
    7. '(False' → logprob: -11.293400764465332
    8. 's' → logprob: -12.168400764465332
    9. '(' → logprob: -12.918400764465332
    10. 'no' → logprob: -13.543400764465332

Token 1256: ' safe' (ID: 7703)
  Prédit: 'safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'safe' → logprob: -4.024604277219623e-05
    2. ' safe' → logprob: -10.125040054321289
    3. '
' → logprob: -17.00004005432129
    4. ')' → logprob: -17.25004005432129
    5. '   ' → logprob: -18.00004005432129
    6. '.safe' → logprob: -19.00004005432129
    7. 'Safe' → logprob: -19.12504005432129
    8. '_safe' → logprob: -19.62504005432129
    9. ' ' → logprob: -20.00004005432129
    10. 's' → logprob: -20.00004005432129

Token 1257: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5814624428749084
    2. ')
' → logprob: -0.8314624428749084
    3. '           ' → logprob: -5.206462383270264
    4. ')

' → logprob: -11.706462860107422
    5. '               ' → logprob: -11.831462860107422
    6. ')
' → logprob: -12.206462860107422
    7. '       ' → logprob: -13.081462860107422
    8. '
' → logprob: -14.081462860107422
    9. ' )
' → logprob: -14.581462860107422
    10. '),' → logprob: -14.956462860107422

Token 1258: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7990302443504333
    2. '           ' → logprob: -0.9240302443504333
    3. '<|end|>' → logprob: -1.9240303039550781
    4. ')' → logprob: -5.924030303955078
    5. '               ' → logprob: -6.924030303955078
    6. '            
' → logprob: -7.174030303955078
    7. '  
' → logprob: -7.549030303955078
    8. '<|end|>' → logprob: -7.549030303955078
    9. ' 
' → logprob: -8.049030303955078
    10. ')
' → logprob: -8.424030303955078

Token 1259: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.2278572916984558
    2. '           ' → logprob: -1.6028573513031006
    3. '<|end|>' → logprob: -7.4778571128845215
    4. '            
' → logprob: -7.9778571128845215
    5. ')
' → logprob: -8.35285758972168
    6. '               ' → logprob: -8.35285758972168
    7. '       ' → logprob: -8.35285758972168
    8. ')' → logprob: -8.72785758972168
    9. ' 
' → logprob: -8.85285758972168
    10. ' if' → logprob: -9.10285758972168

Token 1260: ' covered' (ID: 13083)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.4439813792705536
    2. 'statuses' → logprob: -1.318981409072876
    3. 'True' → logprob: -3.568981409072876
    4. ' not' → logprob: -3.693981409072876
    5. ' False' → logprob: -4.318981170654297
    6. 'not' → logprob: -4.568981170654297
    7. ' statuses' → logprob: -4.818981170654297
    8. ' True' → logprob: -5.943981170654297
    9. ')' → logprob: -6.068981170654297
    10. 'status' → logprob: -7.693981170654297

Token 1261: ' means' (ID: 4748)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1262: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3890179991722107
    2. 'True' → logprob: -1.1390180587768555
    3. ' not' → logprob: -6.8890180587768555
    4. ' True' → logprob: -7.3890180587768555
    5. 'False' → logprob: -8.264018058776855
    6. '(not' → logprob: -9.264018058776855
    7. 'safe' → logprob: -10.514018058776855
    8. '   ' → logprob: -10.764018058776855
    9. 'covered' → logprob: -10.764018058776855
    10. '`' → logprob: -11.014018058776855

Token 1263: ' safe' (ID: 7703)
  Prédit: 'safe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'safe' → logprob: -0.003621331648901105
    2. ' safe' → logprob: -5.6286211013793945
    3. 'not' → logprob: -11.003621101379395
    4. '
' → logprob: -13.628621101379395
    5. '_safe' → logprob: -13.753621101379395
    6. 'is' → logprob: -14.378621101379395
    7. 'Safe' → logprob: -15.003621101379395
    8. '-safe' → logprob: -15.128621101379395
    9. 's' → logprob: -15.628621101379395
    10. ' not' → logprob: -15.753621101379395

Token 1264: '
            
' (ID: 45334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03448137268424034
    2. '
' → logprob: -3.4094812870025635
    3. '<|end|>' → logprob: -7.409481525421143
    4. ')' → logprob: -9.409481048583984
    5. '            
' → logprob: -10.284481048583984
    6. '       ' → logprob: -10.659481048583984
    7. ')
' → logprob: -10.909481048583984
    8. '<|end|>' → logprob: -10.909481048583984
    9. '          ' → logprob: -11.784481048583984
    10. '```' → logprob: -12.159481048583984

Token 1265: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00037740718107670546
    2. '
' → logprob: -8.000377655029297
    3. '       ' → logprob: -10.375377655029297
    4. '          ' → logprob: -12.750377655029297
    5. '<|end|>' → logprob: -13.125377655029297
    6. '   ' → logprob: -13.375377655029297
    7. '            
' → logprob: -13.875377655029297
    8. '```' → logprob: -14.000377655029297
    9. '               ' → logprob: -14.125377655029297
    10. ')' → logprob: -15.250377655029297

Token 1266: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0029567815363407135
    2. 'all' → logprob: -6.252956867218018
    3. '           ' → logprob: -7.502956867218018
    4. ' if' → logprob: -8.00295639038086
    5. '#' (adapté à ' #') → logprob: -8.87795639038086
    6. '            
' → logprob: -14.12795639038086
    7. 'covered' → logprob: -14.25295639038086
    8. '   ' → logprob: -14.87795639038086
    9. '       ' → logprob: -15.62795639038086
    10. '
' → logprob: -16.37795639038086

Token 1267: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.018304456025362015
    2. 'all' → logprob: -4.018304347991943
    3. '           ' → logprob: -9.518304824829102
    4. ' if' → logprob: -9.643304824829102
    5. '#' → logprob: -11.518304824829102
    6. '   ' → logprob: -12.768304824829102
    7. 'covered' → logprob: -13.643304824829102
    8. '       ' → logprob: -14.393304824829102
    9. '            
' → logprob: -14.518304824829102
    10. 'If' → logprob: -14.643304824829102

Token 1268: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.0009177703177556396
    2. ' all' → logprob: -7.000917911529541
    3. 'len' → logprob: -12.625917434692383
    4. '   ' → logprob: -13.125917434692383
    5. 'any' → logprob: -14.500917434692383
    6. '	all' → logprob: -15.875917434692383
    7. '
' → logprob: -16.250917434692383
    8. '(all' → logprob: -16.375917434692383
    9. 'statuses' → logprob: -16.500917434692383
    10. ' ' → logprob: -16.500917434692383

Token 1269: ' points' (ID: 5571)
  Prédit: 'statuses'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'statuses' → logprob: -0.056508276611566544
    2. 'status' → logprob: -3.3065083026885986
    3. '(status' → logprob: -4.0565080642700195
    4. ' statuses' → logprob: -6.9315080642700195
    5. ' status' → logprob: -11.68150806427002
    6. '=status' → logprob: -13.80650806427002
    7. 'stat' → logprob: -13.80650806427002
    8. 'points' → logprob: -15.43150806427002
    9. '	status' → logprob: -15.80650806427002
    10. 's' → logprob: -15.80650806427002

Token 1270: ' indicate' (ID: 21611)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.6210002899169922
    2. 'statuses' → logprob: -0.8710002899169922
    3. 'are' → logprob: -4.246000289916992
    4. '(status' → logprob: -4.996000289916992
    5. '           ' → logprob: -5.246000289916992
    6. ' statuses' → logprob: -5.496000289916992
    7. ' ==' → logprob: -5.996000289916992
    8. '==' → logprob: -5.996000289916992
    9. 'status' → logprob: -6.246000289916992
    10. '_are' → logprob: -6.371000289916992

Token 1271: ' covered' (ID: 13083)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.5309858918190002
    2. 'statuses' → logprob: -1.1559858322143555
    3. ' True' → logprob: -3.1559858322143555
    4. 'covered' → logprob: -3.5309858322143555
    5. ' statuses' → logprob: -4.4059858322143555
    6. ' covered' → logprob: -4.4059858322143555
    7. 'status' → logprob: -7.5309858322143555
    8. 'all' → logprob: -9.155985832214355
    9. 'points' → logprob: -9.405985832214355
    10. 'true' → logprob: -10.030985832214355

Token 1272: ' =>' (ID: 871)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2093720436096191
    2. ' or' → logprob: -1.4593720436096191
    3. ':
' → logprob: -1.8343720436096191
    4. ':' → logprob: -2.334372043609619
    5. ' and' → logprob: -2.584372043609619
    6. ' =' → logprob: -2.834372043609619
    7. '=True' → logprob: -3.834372043609619
    8. '               ' → logprob: -4.084372043609619
    9. '(True' → logprob: -4.209372043609619
    10. ' (' → logprob: -4.834372043609619

Token 1273: ' whole' (ID: 6062)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.3576710820198059
    2. 'True' → logprob: -1.6076710224151611
    3. 'all' → logprob: -2.607671022415161
    4. ' return' → logprob: -4.60767126083374
    5. ' True' → logprob: -4.73267126083374
    6. '           ' → logprob: -4.98267126083374
    7. ' all' → logprob: -7.23267126083374
    8. 'if' → logprob: -8.482670783996582
    9. '               ' → logprob: -10.607670783996582
    10. 'true' → logprob: -10.607670783996582

Token 1274: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.17043928802013397
    2. 'True' → logprob: -3.2954392433166504
    3. ' node' → logprob: -3.4204392433166504
    4. '           ' → logprob: -3.6704392433166504
    5. 'return' → logprob: -3.7954392433166504
    6. '
' → logprob: -4.17043924331665
    7. ' True' → logprob: -4.29543924331665
    8. '               ' → logprob: -5.67043924331665
    9. ' return' → logprob: -6.42043924331665
    10. '=True' → logprob: -6.67043924331665

Token 1275: ' covered' (ID: 13083)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5737863779067993
    2. '           ' → logprob: -2.1987862586975098
    3. 'return' → logprob: -2.3237862586975098
    4. ':' → logprob: -2.6987862586975098
    5. '
' → logprob: -3.1987862586975098
    6. ' return' → logprob: -3.3237862586975098
    7. ':
' → logprob: -3.5737862586975098
    8. ' is' → logprob: -4.32378625869751
    9. ' =' → logprob: -4.44878625869751
    10. ' if' → logprob: -5.07378625869751

Token 1276: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007801925763487816
    2. ' and' → logprob: -5.3828020095825195
    3. '               ' → logprob: -7.1328020095825195
    4. ' or' → logprob: -7.2578020095825195
    5. ':' → logprob: -7.6328020095825195
    6. 'and' → logprob: -7.8828020095825195
    7. ',' → logprob: -8.50780200958252
    8. ':
' → logprob: -8.50780200958252
    9. ' if' → logprob: -9.25780200958252
    10. '
' → logprob: -9.38280200958252

Token 1277: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.429896944202483e-05
    2. ',' → logprob: -11.000043869018555
    3. '
' → logprob: -12.000043869018555
    4. '               ' → logprob: -12.125043869018555
    5. ' if' → logprob: -12.250043869018555
    6. ' or' → logprob: -12.750043869018555
    7. '       ' → logprob: -13.000043869018555
    8. '<|end|>' → logprob: -13.500043869018555
    9. '   ' → logprob: -13.875043869018555
    10. '            
' → logprob: -14.750043869018555

Token 1278: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.18006975948810577
    2. '           ' → logprob: -1.9300698041915894
    3. ' if' → logprob: -3.9300696849823
    4. '       ' → logprob: -12.680069923400879
    5. 'return' → logprob: -13.555069923400879
    6. '   ' → logprob: -13.805069923400879
    7. '               ' → logprob: -14.305069923400879
    8. 'all' → logprob: -14.555069923400879
    9. 'for' → logprob: -15.055069923400879
    10. '```' → logprob: -15.555069923400879

Token 1279: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -5.490809417096898e-05
    2. '   ' → logprob: -10.375055313110352
    3. ' all' → logprob: -10.750055313110352
    4. ' ' → logprob: -14.750055313110352
    5. '       ' → logprob: -14.750055313110352
    6. '           ' → logprob: -15.250055313110352
    7. '  ' → logprob: -15.500055313110352
    8. '    ' → logprob: -15.625055313110352
    9. 'len' → logprob: -15.875055313110352
    10. 'True' → logprob: -16.12505531311035

Token 1280: '(status' (ID: 26454)
  Prédit: '(status'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(status' → logprob: -5.2762428822461516e-05
    2. 'statuses' → logprob: -10.000052452087402
    3. 'status' → logprob: -12.250052452087402
    4. '(stat' → logprob: -14.000052452087402
    5. '(s' → logprob: -14.125052452087402
    6. '=status' → logprob: -14.875052452087402
    7. '(' → logprob: -15.375052452087402
    8. '(
' → logprob: -15.875052452087402
    9. '(x' → logprob: -16.25005340576172
    10. '((' → logprob: -16.87505340576172

Token 1281: 'es' (ID: 268)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006727683823555708
    2. ')' → logprob: -5.506727695465088
    3. '==' → logprob: -8.00672721862793
    4. '):
' → logprob: -8.00672721862793
    5. 'es' → logprob: -8.13172721862793
    6. 'status' → logprob: -8.13172721862793
    7. ')s' → logprob: -8.38172721862793
    8. 'statuses' → logprob: -8.50672721862793
    9. '=True' → logprob: -8.63172721862793
    10. '(s' → logprob: -8.75672721862793

Token 1282: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1603616178035736
    2. '):' → logprob: -1.910361647605896
    3. ')' → logprob: -9.160361289978027
    4. '       ' → logprob: -11.660361289978027
    5. '):
' → logprob: -11.910361289978027
    6. '):

' → logprob: -12.160361289978027
    7. '           ' → logprob: -12.285361289978027
    8. ')==' → logprob: -13.035361289978027
    9. '   ' → logprob: -13.410361289978027
    10. ' ):
' → logprob: -14.035361289978027

Token 1283: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002632430987432599
    2. ':
' → logprob: -9.250263214111328
    3. '           ' → logprob: -9.625263214111328
    4. ':' → logprob: -9.750263214111328
    5. ' return' → logprob: -10.625263214111328
    6. '):
' → logprob: -12.500263214111328
    7. 'return' → logprob: -12.750263214111328
    8. ' or' → logprob: -12.875263214111328
    9. '                   ' → logprob: -13.125263214111328
    10. ' and' → logprob: -13.750263214111328

Token 1284: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12785755097866058
    2. 'return' (adapté à ' return') → logprob: -2.1278574466705322
    3. ' return' → logprob: -7.127857685089111
    4. '                   ' → logprob: -9.377857208251953
    5. '   ' → logprob: -10.252857208251953
    6. '           ' → logprob: -12.127857208251953
    7. '                       ' → logprob: -15.127857208251953
    8. '{return' → logprob: -15.127857208251953
    9. '       ' → logprob: -15.502857208251953
    10. '                ' → logprob: -15.502857208251953

Token 1285: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -3.5597102396423e-05
    2. ' True' → logprob: -10.250035285949707
    3. '           ' → logprob: -15.750035285949707
    4. '               ' → logprob: -17.000036239624023
    5. '                   ' → logprob: -18.375036239624023
    6. '(True' → logprob: -19.125036239624023
    7. '       ' → logprob: -20.125036239624023
    8. '   ' → logprob: -20.375036239624023
    9. '=True' → logprob: -21.875036239624023
    10. '                       ' → logprob: -21.875036239624023

Token 1286: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010014898143708706
    2. '
' → logprob: -7.376001358032227
    3. '            
' → logprob: -8.251001358032227
    4. '<|end|>' → logprob: -9.751001358032227
    5. '    
' → logprob: -10.876001358032227
    6. '            ' → logprob: -11.626001358032227
    7. '          ' → logprob: -12.376001358032227
    8. '       ' → logprob: -12.626001358032227
    9. 'elif' → logprob: -12.751001358032227
    10. ',' → logprob: -13.001001358032227

Token 1287: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.664371848164592e-05
    2. '       ' → logprob: -11.250016212463379
    3. '          ' → logprob: -13.875016212463379
    4. '               ' → logprob: -14.375016212463379
    5. '
' → logprob: -14.875016212463379
    6. '<|end|>' → logprob: -15.125016212463379
    7. ',' → logprob: -15.500016212463379
    8. '            ' → logprob: -15.500016212463379
    9. 'elif' → logprob: -15.500016212463379
    10. '            
' → logprob: -15.625016212463379

Token 1288: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009044341859407723
    2. 'if' → logprob: -7.250904560089111
    3. '       ' → logprob: -8.625904083251953
    4. ' if' → logprob: -11.375904083251953
    5. 'elif' → logprob: -13.500904083251953
    6. '   ' → logprob: -14.250904083251953
    7. '          ' → logprob: -14.625904083251953
    8. '
' → logprob: -14.625904083251953
    9. '               ' → logprob: -15.125904083251953
    10. '            
' → logprob: -15.375904083251953

Token 1289: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0005940204137004912
    2. '           ' → logprob: -7.750594139099121
    3. ' if' → logprob: -8.750594139099121
    4. 'elif' → logprob: -12.250594139099121
    5. '       ' → logprob: -15.875594139099121
    6. '#' → logprob: -16.875593185424805
    7. '   ' → logprob: -17.250593185424805
    8. '
' → logprob: -17.375593185424805
    9. '            
' → logprob: -17.875593185424805
    10. ' elif' → logprob: -21.125593185424805

Token 1290: ' all' (ID: 722)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3244611620903015
    2. 'any' → logprob: -1.5744612216949463
    3. ' not' → logprob: -3.0744612216949463
    4. 'all' → logprob: -3.8244612216949463
    5. ' any' → logprob: -6.324460983276367
    6. ' all' → logprob: -9.074460983276367
    7. '   ' → logprob: -11.324460983276367
    8. ' ' → logprob: -15.824460983276367
    9. 'none' → logprob: -16.199460983276367
    10. '(any' → logprob: -16.199460983276367

Token 1291: ' points' (ID: 5571)
  Prédit: '(not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(not' → logprob: -0.041132036596536636
    2. 'not' → logprob: -3.2911319732666016
    3. '(status' → logprob: -5.791131973266602
    4. ' not' → logprob: -11.041131973266602
    5. '(s' → logprob: -11.666131973266602
    6. 'status' → logprob: -12.666131973266602
    7. '(x' → logprob: -13.541131973266602
    8. '(st' → logprob: -14.666131973266602
    9. '([' → logprob: -15.041131973266602
    10. '(n' → logprob: -15.166131973266602

Token 1292: ' indicate' (ID: 21611)
  Prédit: '(status'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(status' → logprob: -0.13630124926567078
    2. 'not' → logprob: -2.386301279067993
    3. '(not' → logprob: -3.511301279067993
    4. 'are' → logprob: -6.136301040649414
    5. 'statuses' → logprob: -7.136301040649414
    6. '(
' → logprob: -7.636301040649414
    7. ' are' → logprob: -7.636301040649414
    8. '==' → logprob: -7.761301040649414
    9. ' not' → logprob: -7.761301040649414
    10. '           ' → logprob: -8.511301040649414

Token 1293: ' safe' (ID: 7703)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.00037979125045239925
    2. 'False' → logprob: -8.37537956237793
    3. ' not' → logprob: -8.87537956237793
    4. '(not' → logprob: -12.12537956237793
    5. 'all' → logprob: -13.25037956237793
    6. '
' → logprob: -13.75037956237793
    7. 'no' → logprob: -14.37537956237793
    8. ' False' → logprob: -15.37537956237793
    9. 'status' → logprob: -15.75037956237793
    10. '(False' → logprob: -16.12537956237793

Token 1294: ' =>' (ID: 871)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.3256324529647827
    2. ' ==' → logprob: -1.3256324529647827
    3. ':' → logprob: -1.4506324529647827
    4. ':
' → logprob: -2.2006325721740723
    5. '(False' → logprob: -2.7006325721740723
    6. '           ' → logprob: -3.5756325721740723
    7. ' or' → logprob: -5.075632572174072
    8. ' and' → logprob: -5.575632572174072
    9. '=False' → logprob: -5.700632572174072
    10. 'and' → logprob: -6.075632572174072

Token 1295: ' whole' (ID: 6062)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.14811882376670837
    2. 'False' → logprob: -2.023118734359741
    3. ' return' → logprob: -6.02311897277832
    4. '           ' → logprob: -6.77311897277832
    5. 'not' → logprob: -7.02311897277832
    6. 'all' → logprob: -8.14811897277832
    7. ' False' → logprob: -8.14811897277832
    8. 'if' → logprob: -9.14811897277832
    9. '               ' → logprob: -9.27311897277832
    10. '
' → logprob: -9.27311897277832

Token 1296: ' node' (ID: 4596)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0915144756436348
    2. 'node' → logprob: -2.8415145874023438
    3. 'status' → logprob: -4.466514587402344
    4. 'statuses' → logprob: -4.966514587402344
    5. 'not' → logprob: -5.091514587402344
    6. ' False' → logprob: -6.091514587402344
    7. ' node' → logprob: -6.466514587402344
    8. ' statuses' → logprob: -8.716514587402344
    9. '(False' → logprob: -8.841514587402344
    10. ' not' → logprob: -9.216514587402344

Token 1297: ' safe' (ID: 7703)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.005528404377400875
    2. 'is' → logprob: -6.380528450012207
    3. ' covered' → logprob: -7.005528450012207
    4. 'False' → logprob: -7.130528450012207
    5. 'not' → logprob: -7.505528450012207
    6. '           ' → logprob: -7.755528450012207
    7. 'return' → logprob: -8.005528450012207
    8. ' is' → logprob: -8.380528450012207
    9. 'safe' → logprob: -8.505528450012207
    10. '   ' → logprob: -9.630528450012207

Token 1298: ' =>' (ID: 871)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26056358218193054
    2. '               ' → logprob: -1.510563611984253
    3. ':
' → logprob: -5.510563373565674
    4. ':' → logprob: -6.385563373565674
    5. ' and' → logprob: -7.510563373565674
    6. '):
' → logprob: -7.760563373565674
    7. ',' → logprob: -7.760563373565674
    8. '       ' → logprob: -8.010563850402832
    9. 'return' → logprob: -8.635563850402832
    10. '	       ' → logprob: -8.760563850402832

Token 1299: ' safe' (ID: 7703)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.01386364083737135
    2. 'False' → logprob: -4.513863563537598
    3. ' return' → logprob: -6.013863563537598
    4. '               ' → logprob: -8.388863563537598
    5. '           ' → logprob: -9.263863563537598
    6. ' False' → logprob: -10.513863563537598
    7. '   ' → logprob: -11.638863563537598
    8. 'false' → logprob: -12.263863563537598
    9. '                   ' → logprob: -13.638863563537598
    10. '
' → logprob: -13.763863563537598

Token 1300: ' area' (ID: 3624)
  Prédit: ' area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' area' → logprob: -0.27669253945350647
    2. 'area' → logprob: -1.526692509651184
    3. '_area' → logprob: -4.5266923904418945
    4. 'return' → logprob: -5.0266923904418945
    5. ' return' → logprob: -5.9016923904418945
    6. '           ' → logprob: -7.0266923904418945
    7. '   ' → logprob: -7.4016923904418945
    8. ':' → logprob: -7.6516923904418945
    9. '=False' → logprob: -8.151692390441895
    10. ' ' → logprob: -8.276692390441895

Token 1301: ' exists' (ID: 13031)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.7369658946990967
    2. '           ' → logprob: -1.1119658946990967
    3. '               ' → logprob: -1.8619658946990967
    4. ' return' → logprob: -3.4869658946990967
    5. '
' → logprob: -6.486966133117676
    6. ':return' → logprob: -6.486966133117676
    7. '                   ' → logprob: -7.736966133117676
    8. '            
' → logprob: -8.236966133117676
    9. '=False' → logprob: -8.361966133117676
    10. '       ' → logprob: -8.361966133117676

Token 1302: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012833021173719317
    2. ',' → logprob: -9.750128746032715
    3. '       ' → logprob: -10.500128746032715
    4. '               ' → logprob: -11.000128746032715
    5. '<|end|>' → logprob: -12.125128746032715
    6. 'return' → logprob: -12.500128746032715
    7. '          ' → logprob: -12.750128746032715
    8. '            
' → logprob: -13.000128746032715
    9. ' if' → logprob: -13.375128746032715
    10. '
' → logprob: -13.625128746032715

Token 1303: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0008234490524046123
    2. '       ' → logprob: -7.375823497772217
    3. '		' → logprob: -9.125823020935059
    4. '   ' → logprob: -10.750823020935059
    5. '               ' → logprob: -11.000823020935059
    6. '	       ' → logprob: -11.375823020935059
    7. '          ' → logprob: -11.500823020935059
    8. '<|end|>' → logprob: -12.375823020935059
    9. ' if' → logprob: -12.750823020935059
    10. '            
' → logprob: -12.875823020935059

Token 1304: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18460899591445923
    2. 'if' (adapté à ' if') → logprob: -2.3096089363098145
    3. ' if' → logprob: -2.6846089363098145
    4. '       ' → logprob: -6.9346089363098145
    5. '   ' → logprob: -10.559609413146973
    6. 'elif' → logprob: -11.434609413146973
    7. '               ' → logprob: -12.059609413146973
    8. '		' → logprob: -13.934609413146973
    9. '          ' → logprob: -14.059609413146973
    10. '[' → logprob: -14.184609413146973

Token 1305: ' not' (ID: 625)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.612459659576416
    2. 'not' → logprob: -0.862459659576416
    3. ' not' → logprob: -3.612459659576416
    4. ' all' → logprob: -4.737459659576416
    5. '   ' → logprob: -9.237459182739258
    6. 'False' → logprob: -12.112459182739258
    7. ' ' → logprob: -12.737459182739258
    8. '           ' → logprob: -12.862459182739258
    9. '       ' → logprob: -13.112459182739258
    10. '(not' → logprob: -13.737459182739258

Token 1306: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -8.590104698669165e-05
    2. ' any' → logprob: -9.375085830688477
    3. 'all' → logprob: -14.000085830688477
    4. '(any' → logprob: -16.875085830688477
    5. ''any' → logprob: -18.375085830688477
    6. '
' → logprob: -19.625085830688477
    7. 'True' → logprob: -20.125085830688477
    8. ':any' → logprob: -20.375085830688477
    9. '   ' → logprob: -20.625085830688477
    10. 'an' → logprob: -20.750085830688477

Token 1307: '(status' (ID: 26454)
  Prédit: '(status'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(status' → logprob: -0.16756980121135712
    2. 'statuses' → logprob: -1.9175697565078735
    3. 'status' → logprob: -4.917569637298584
    4. ' statuses' → logprob: -13.917570114135742
    5. '=status' → logprob: -14.667570114135742
    6. 'Statuses' → logprob: -15.792570114135742
    7. '	status' → logprob: -16.292570114135742
    8. ',status' → logprob: -16.917570114135742
    9. '(
' → logprob: -17.042570114135742
    10. '(' → logprob: -17.667570114135742

Token 1308: 'es' (ID: 268)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8289851546287537
    2. 'statuses' → logprob: -0.8289851546287537
    3. '(status' → logprob: -2.3289852142333984
    4. 'es' → logprob: -3.8289852142333984
    5. 'atus' → logprob: -5.453985214233398
    6. '=status' → logprob: -6.328985214233398
    7. ')' → logprob: -6.703985214233398
    8. ' statuses' → logprob: -8.703985214233398
    9. 'ages' → logprob: -8.828985214233398
    10. 'ates' → logprob: -9.453985214233398

Token 1309: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.026362191885709763
    2. '):' → logprob: -3.651362180709839
    3. ':
' → logprob: -11.151362419128418
    4. ':' → logprob: -11.276362419128418
    5. ')' → logprob: -11.651362419128418
    6. '):
' → logprob: -11.901362419128418
    7. '):

' → logprob: -12.026362419128418
    8. '       ' → logprob: -12.651362419128418
    9. '():
' → logprob: -13.151362419128418
    10. '           ' → logprob: -13.276362419128418

Token 1310: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0006457181880250573
    2. '           ' → logprob: -7.625645637512207
    3. ':' → logprob: -9.375645637512207
    4. ' return' → logprob: -10.750645637512207
    5. '       ' → logprob: -11.125645637512207
    6. '              ' → logprob: -11.750645637512207
    7. ':
' → logprob: -12.375645637512207
    8. '                   ' → logprob: -12.375645637512207
    9. '                ' → logprob: -12.750645637512207
    10. ',' → logprob: -12.750645637512207

Token 1311: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24653692543506622
    2. 'return' (adapté à ' return') → logprob: -1.9965369701385498
    3. ' return' → logprob: -2.49653697013855
    4. '                   ' → logprob: -8.371537208557129
    5. '           ' → logprob: -9.996537208557129
    6. '   ' → logprob: -10.371537208557129
    7. '	return' → logprob: -12.121537208557129
    8. '       ' → logprob: -12.621537208557129
    9. '                       ' → logprob: -13.621537208557129
    10. '	           ' → logprob: -13.871537208557129

Token 1312: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -3.054500666621607e-06
    2. ' False' → logprob: -12.75000286102295
    3. 'True' → logprob: -16.875003814697266
    4. '(False' → logprob: -17.875003814697266
    5. '   ' → logprob: -19.125003814697266
    6. 'false' → logprob: -20.500003814697266
    7. '=False' → logprob: -21.375003814697266
    8. '           ' → logprob: -21.500003814697266
    9. '                   ' → logprob: -21.750003814697266
    10. '               ' → logprob: -22.125003814697266

Token 1313: '
            
' (ID: 45334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00341072422452271
    2. '<|end|>' → logprob: -6.128410816192627
    3. '            
' → logprob: -7.753410816192627
    4. '    
' → logprob: -8.253410339355469
    5. '
' → logprob: -8.753410339355469
    6. '       ' → logprob: -8.878410339355469
    7. '  
' → logprob: -9.753410339355469
    8. '<|end|>' → logprob: -9.878410339355469
    9. '        
' → logprob: -10.253410339355469
    10. '   ' → logprob: -10.378410339355469

Token 1314: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0028983091469854116
    2. '       ' → logprob: -5.877898216247559
    3. '   ' → logprob: -10.002898216247559
    4. '        
' → logprob: -11.002898216247559
    5. '            
' → logprob: -11.252898216247559
    6. '    
' → logprob: -11.752898216247559
    7. '
' → logprob: -13.002898216247559
    8. '               ' → logprob: -13.127898216247559
    9. '	       ' → logprob: -13.627898216247559
    10. '          ' → logprob: -13.627898216247559

Token 1315: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13173599541187286
    2. 'if' → logprob: -2.1317360401153564
    3. ' if' → logprob: -5.506735801696777
    4. '       ' → logprob: -7.256735801696777
    5. '   ' → logprob: -10.381735801696777
    6. '               ' → logprob: -15.756735801696777
    7. '	   ' → logprob: -16.631736755371094
    8. '          ' → logprob: -16.881736755371094
    9. '            
' → logprob: -17.006736755371094
    10. '		' → logprob: -17.131736755371094

Token 1316: ' Mixed' (ID: 83351)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0038245373871177435
    2. '           ' → logprob: -6.003824710845947
    3. ' if' → logprob: -6.628824710845947
    4. 'size' → logprob: -11.003824234008789
    5. '   ' → logprob: -12.128824234008789
    6. '       ' → logprob: -12.628824234008789
    7. '#' → logprob: -14.753824234008789
    8. 'width' → logprob: -15.378824234008789
    9. 'If' → logprob: -16.12882423400879
    10. 'depth' → logprob: -17.12882423400879

Token 1317: ' signals' (ID: 29026)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00846197921782732
    2. ' if' → logprob: -5.383461952209473
    3. 'if' → logprob: -5.883461952209473
    4. '
' → logprob: -7.383461952209473
    5. ':' → logprob: -9.633461952209473
    6. '            
' → logprob: -9.758461952209473
    7. '       ' → logprob: -10.008461952209473
    8. '   ' → logprob: -10.258461952209473
    9. ' status' → logprob: -10.258461952209473
    10. 'status' → logprob: -10.258461952209473

Token 1318: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004694037605077028
    2. '
' → logprob: -6.004693984985352
    3. ',' → logprob: -6.629693984985352
    4. ' and' → logprob: -8.379693984985352
    5. ':' → logprob: -8.629693984985352
    6. ':
' → logprob: -9.254693984985352
    7. ' if' → logprob: -9.254693984985352
    8. '            
' → logprob: -9.379693984985352
    9. 'and' → logprob: -10.004693984985352
    10. '       ' → logprob: -10.004693984985352

Token 1319: ' subdiv' (ID: 107226)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05232342705130577
    2. '           ' → logprob: -3.552323341369629
    3. ' if' → logprob: -3.802323341369629
    4. '   ' → logprob: -15.052323341369629
    5. 'size' → logprob: -15.427323341369629
    6. '       ' → logprob: -15.677323341369629
    7. '```' → logprob: -16.302324295043945
    8. '               ' → logprob: -16.427324295043945
    9. 'If' → logprob: -16.552324295043945
    10. '            
' → logprob: -16.802324295043945

Token 1320: 'ide' (ID: 617)
  Prédit: 'ide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.08307705074548721
    2. 'divide' → logprob: -2.5830769538879395
    3. '           ' → logprob: -5.5830769538879395
    4. '               ' → logprob: -8.583077430725098
    5. 'div' → logprob: -8.958077430725098
    6. 'de' → logprob: -9.958077430725098
    7. 'id' → logprob: -10.458077430725098
    8. '            
' → logprob: -12.458077430725098
    9. ' divide' → logprob: -12.583077430725098
    10. '                   ' → logprob: -12.958077430725098

Token 1321: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002908296650275588
    2. ' if' → logprob: -6.377908229827881
    3. 'if' → logprob: -6.752908229827881
    4. '       ' → logprob: -11.502908706665039
    5. ',' → logprob: -11.752908706665039
    6. '   ' → logprob: -11.877908706665039
    7. '
' → logprob: -11.877908706665039
    8. '               ' → logprob: -13.002908706665039
    9. '            
' → logprob: -13.752908706665039
    10. '          ' → logprob: -14.002908706665039

Token 1322: ' possible' (ID: 4149)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0007528089336119592
    2. ' node' → logprob: -7.250752925872803
    3. '           ' → logprob: -10.625752449035645
    4. '(node' → logprob: -11.125752449035645
    5. '               ' → logprob: -13.500752449035645
    6. '                   ' → logprob: -13.625752449035645
    7. '   ' → logprob: -14.750752449035645
    8. 'depth' → logprob: -15.375752449035645
    9. 'not' → logprob: -16.25075340270996
    10. '	node' → logprob: -16.25075340270996

Token 1323: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005476363468915224
    2. '
' → logprob: -5.255476474761963
    3. ' if' → logprob: -9.380475997924805
    4. '            
' → logprob: -10.130475997924805
    5. '               ' → logprob: -10.380475997924805
    6. 'if' → logprob: -10.755475997924805
    7. '    
' → logprob: -11.005475997924805
    8. '\n' → logprob: -11.130475997924805
    9. '       ' → logprob: -11.755475997924805
    10. ',' → logprob: -11.755475997924805

Token 1324: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010300694266334176
    2. '       ' → logprob: -7.126029968261719
    3. 'if' → logprob: -8.501029968261719
    4. ' if' → logprob: -10.876029968261719
    5. '   ' → logprob: -13.126029968261719
    6. '               ' → logprob: -14.001029968261719
    7. '          ' → logprob: -15.126029968261719
    8. '	       ' → logprob: -16.75102996826172
    9. '	   ' → logprob: -17.37602996826172
    10. '		' → logprob: -17.37602996826172

Token 1325: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5158018469810486
    2. '           ' → logprob: -1.0158019065856934
    3. '       ' → logprob: -3.5158019065856934
    4. ' if' → logprob: -4.515801906585693
    5. '   ' → logprob: -8.515801429748535
    6. '               ' → logprob: -12.515801429748535
    7. '	if' → logprob: -13.765801429748535
    8. '		' → logprob: -14.765801429748535
    9. '
' → logprob: -14.890801429748535
    10. '	   ' → logprob: -15.140801429748535

Token 1326: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.038063984364271164
    2. ' node' → logprob: -3.2880640029907227
    3. '           ' → logprob: -10.913064002990723
    4. '(node' → logprob: -13.413064002990723
    5. 'depth' → logprob: -13.538064002990723
    6. 'self' → logprob: -14.163064002990723
    7. '               ' → logprob: -15.413064002990723
    8. '   ' → logprob: -15.538064002990723
    9. '                   ' → logprob: -15.663064002990723
    10. '	node' → logprob: -16.413063049316406

Token 1327: '.depth' (ID: 89791)
  Prédit: '.depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depth' → logprob: -6.754368223482743e-05
    2. 'depth' → logprob: -9.625067710876465
    3. '.' → logprob: -14.125067710876465
    4. ' depth' → logprob: -15.500067710876465
    5. '_depth' → logprob: -16.12506675720215
    6. 'Depth' → logprob: -16.37506675720215
    7. '(depth' → logprob: -16.75006675720215
    8. ' .' → logprob: -16.87506675720215
    9. '_DEPTH' → logprob: -16.87506675720215
    10. '.Depth' → logprob: -17.25006675720215

Token 1328: ' >=' (ID: 5064)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.5232645273208618
    2. '<' → logprob: -0.8982645273208618
    3. ' ==' → logprob: -10.39826488494873
    4. '<len' → logprob: -11.02326488494873
    5. '<n' → logprob: -11.27326488494873
    6. ' ' → logprob: -11.27326488494873
    7. '==' → logprob: -11.52326488494873
    8. '<num' → logprob: -11.89826488494873
    9. '<int' → logprob: -11.89826488494873
    10. '[' → logprob: -12.14826488494873

Token 1329: ' MAX' (ID: 16960)
  Prédit: 'MAX'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MAX' → logprob: -5.512236498361744e-07
    2. ' MAX' → logprob: -15.000000953674316
    3. 'max' → logprob: -15.875000953674316
    4. '(MAX' → logprob: -18.875
    5. '_MAX' → logprob: -19.125
    6. 'Max' → logprob: -20.0
    7. '12' → logprob: -20.25
    8. '10' → logprob: -21.125
    9. '[MAX' → logprob: -21.125
    10. '.MAX' → logprob: -21.25

Token 1330: '_DEPTH' (ID: 80468)
  Prédit: '_DEPTH'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_DEPTH' → logprob: -2.057743949990254e-05
    2. 'DEP' → logprob: -10.875020980834961
    3. '_DEP' → logprob: -14.625020980834961
    4. '_depth' → logprob: -14.875020980834961
    5. 'Depth' → logprob: -15.500020980834961
    6. 'depth' → logprob: -15.500020980834961
    7. '_SIZE' → logprob: -15.750020980834961
    8. '_' → logprob: -16.87502098083496
    9. '\' → logprob: -17.25002098083496
    10. '   ' → logprob: -17.50002098083496

Token 1331: ' or' (ID: 503)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9738722443580627
    2. ':
' → logprob: -1.348872184753418
    3. '               ' → logprob: -1.723872184753418
    4. ':' → logprob: -1.723872184753418
    5. ' or' → logprob: -5.348872184753418
    6. '   ' → logprob: -7.973872184753418
    7. '       ' → logprob: -8.098872184753418
    8. ':return' → logprob: -8.223872184753418
    9. ' and' → logprob: -9.223872184753418
    10. '):
' → logprob: -9.473872184753418

Token 1332: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.3996078073978424
    2. ' node' → logprob: -1.52460777759552
    3. '(node' → logprob: -2.2746078968048096
    4. ' (' → logprob: -4.7746076583862305
    5. 'max' → logprob: -8.52460765838623
    6. ' max' → logprob: -9.64960765838623
    7. '(' → logprob: -9.89960765838623
    8. '(max' → logprob: -10.77460765838623
    9. 'abs' → logprob: -10.89960765838623
    10. '           ' → logprob: -11.02460765838623

Token 1333: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.06337746232748032
    2. '.x' → logprob: -3.0633773803710938
    3. 'size' → logprob: -4.438377380371094
    4. '.' → logprob: -6.313377380371094
    5. ' .' → logprob: -7.688377380371094
    6. '
' → logprob: -8.063377380371094
    7. '.
' → logprob: -9.813377380371094
    8. ' ' → logprob: -10.188377380371094
    9. '   ' → logprob: -10.438377380371094
    10. ' size' → logprob: -10.813377380371094

Token 1334: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.6822625994682312
    2. '<=' → logprob: -0.9322625994682312
    3. ' <=' → logprob: -2.307262659072876
    4. '()<' → logprob: -6.807262420654297
    5. '<' → logprob: -9.307262420654297
    6. ' <' → logprob: -10.057262420654297
    7. ' ()' → logprob: -10.182262420654297
    8. ')<=' → logprob: -10.557262420654297
    9. '```' → logprob: -11.682262420654297
    10. ')' → logprob: -12.307262420654297

Token 1335: ' <' (ID: 464)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.055251773446798325
    2. ' <=' → logprob: -2.9302518367767334
    3. '<' → logprob: -8.430252075195312
    4. ')<=' → logprob: -9.555252075195312
    5. '/' → logprob: -10.180252075195312
    6. '()' → logprob: -10.680252075195312
    7. ' <' → logprob: -11.555252075195312
    8. '()<' → logprob: -12.805252075195312
    9. ']<=' → logprob: -13.180252075195312
    10. '```' → logprob: -13.305252075195312

Token 1336: ' MIN' (ID: 27151)
  Prédit: 'MIN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MIN' → logprob: -0.0067550367675721645
    2. 'self' → logprob: -5.0067548751831055
    3. ' MIN' → logprob: -10.256754875183105
    4. ' self' → logprob: -12.631754875183105
    5. '1' → logprob: -13.881754875183105
    6. '0' → logprob: -16.131755828857422
    7. '_MIN' → logprob: -16.381755828857422
    8. 'min' → logprob: -16.506755828857422
    9. '(self' → logprob: -17.131755828857422
    10. '   ' → logprob: -17.506755828857422

Token 1337: '_SIZE' (ID: 7347)
  Prédit: '_SIZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_SIZE' → logprob: -0.00016158436483237892
    2. 'SIZE' → logprob: -8.750161170959473
    3. '_S' → logprob: -13.500161170959473
    4. '\' → logprob: -14.500161170959473
    5. '_size' → logprob: -15.625161170959473
    6. '_MIN' → logprob: -16.12516212463379
    7. '.SIZE' → logprob: -16.12516212463379
    8. '__' → logprob: -16.25016212463379
    9. ')' → logprob: -16.37516212463379
    10. '_' → logprob: -16.37516212463379

Token 1338: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.43183210492134094
    2. ':' → logprob: -1.3068320751190186
    3. '           ' → logprob: -2.5568320751190186
    4. ':return' → logprob: -6.556832313537598
    5. '               ' → logprob: -7.681832313537598
    6. '       ' → logprob: -8.556832313537598
    7. '):
' → logprob: -8.931832313537598
    8. '   ' → logprob: -9.056832313537598
    9. ':
' → logprob: -10.556832313537598
    10. '          ' → logprob: -10.681832313537598

Token 1339: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0032947517465800047
    2. '           ' → logprob: -5.753294944763184
    3. '       ' → logprob: -10.378294944763184
    4. '                   ' → logprob: -11.253294944763184
    5. '<|end|>' → logprob: -11.378294944763184
    6. 'return' → logprob: -11.628294944763184
    7. '	       ' → logprob: -11.628294944763184
    8. '                       ' → logprob: -11.753294944763184
    9. '	           ' → logprob: -12.003294944763184
    10. '		       ' → logprob: -12.378294944763184

Token 1340: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.00039730319986119866
    2. '               ' → logprob: -8.000397682189941
    3. ' return' → logprob: -10.250397682189941
    4. '                   ' → logprob: -10.625397682189941
    5. '   ' → logprob: -13.875397682189941
    6. '           ' → logprob: -14.125397682189941
    7. '#' (adapté à ' #') → logprob: -15.250397682189941
    8. 'for' → logprob: -15.375397682189941
    9. '       ' → logprob: -16.500396728515625
    10. '	return' → logprob: -16.750396728515625

Token 1341: ' We' (ID: 1416)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.027692129835486412
    2. '#' → logprob: -3.6526920795440674
    3. 'for' → logprob: -6.6526923179626465
    4. '                   ' → logprob: -10.527691841125488
    5. ' return' → logprob: -10.652691841125488
    6. '               ' → logprob: -10.777691841125488
    7. 'if' → logprob: -11.277691841125488
    8. '           ' → logprob: -12.027691841125488
    9. 'min' → logprob: -13.027691841125488
    10. '   ' → logprob: -13.527691841125488

Token 1342: ' can't' (ID: 8535)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.41678962111473083
    2. 'return' → logprob: -1.6667896509170532
    3. '               ' → logprob: -2.0417895317077637
    4. '                   ' → logprob: -5.541789531707764
    5. '           ' → logprob: -5.666789531707764
    6. '
' → logprob: -5.791789531707764
    7. '   ' → logprob: -6.041789531707764
    8. ' can' → logprob: -6.416789531707764
    9. '.' → logprob: -6.916789531707764
    10. '#' → logprob: -6.916789531707764

Token 1343: ' subdiv' (ID: 107226)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.046945616602897644
    2. 'con' → logprob: -3.421945571899414
    3. 'det' → logprob: -5.796945571899414
    4. ' return' → logprob: -6.046945571899414
    5. 'def' → logprob: -6.296945571899414
    6. 'assert' → logprob: -6.921945571899414
    7. 'gu' → logprob: -7.296945571899414
    8. '
' → logprob: -7.296945571899414
    9. 'dec' → logprob: -7.421945571899414
    10. 's' → logprob: -7.671945571899414

Token 1344: 'ide' (ID: 617)
  Prédit: 'ide'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.00017982252757064998
    2. 'divide' → logprob: -8.8751802444458
    3. 'id' → logprob: -10.7501802444458
    4. '               ' → logprob: -11.2501802444458
    5. '           ' → logprob: -13.2501802444458
    6. '       ' → logprob: -14.5001802444458
    7. '              ' → logprob: -14.7501802444458
    8. 'de' → logprob: -15.0001802444458
    9. '                   ' → logprob: -15.1251802444458
    10. 'ides' → logprob: -15.5001802444458

Token 1345: ' anymore' (ID: 23680)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.22584013640880585
    2. 'return' → logprob: -2.2258400917053223
    3. ',' → logprob: -2.9758400917053223
    4. '           ' → logprob: -4.350840091705322
    5. ' return' → logprob: -4.600840091705322
    6. '
' → logprob: -4.725840091705322
    7. ';' → logprob: -5.725840091705322
    8. '                   ' → logprob: -6.100840091705322
    9. ' further' → logprob: -6.725840091705322
    10. ' anymore' → logprob: -6.975840091705322

Token 1346: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05546709522604942
    2. '
' → logprob: -3.180467128753662
    3. '           ' → logprob: -5.180467128753662
    4. ',' → logprob: -5.305467128753662
    5. '                   ' → logprob: -7.430467128753662
    6. ':
' → logprob: -7.680467128753662
    7. 'return' → logprob: -8.555466651916504
    8. ' and' → logprob: -9.180466651916504
    9. ' or' → logprob: -9.305466651916504
    10. ' return' → logprob: -9.305466651916504

Token 1347: ' pessim' (ID: 132382)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.008021329529583454
    2. '#' → logprob: -4.883021354675293
    3. ' return' → logprob: -8.258021354675293
    4. '               ' → logprob: -9.133021354675293
    5. '           ' → logprob: -10.383021354675293
    6. 'for' → logprob: -11.258021354675293
    7. '                   ' → logprob: -13.508021354675293
    8. ' #' → logprob: -13.758021354675293
    9. '   ' → logprob: -14.133021354675293
    10. '       ' → logprob: -14.633021354675293

Token 1348: 'istically' (ID: 67862)
  Prédit: 'im'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'im' → logprob: -0.006645033601671457
    2. 'istically' → logprob: -5.881645202636719
    3. 'i' → logprob: -7.131645202636719
    4. '           ' → logprob: -7.256645202636719
    5. 'imately' → logprob: -7.506645202636719
    6. 'ist' → logprob: -8.756645202636719
    7. 'ism' → logprob: -8.756645202636719
    8. 'istic' → logprob: -8.756645202636719
    9. 'il' → logprob: -8.881645202636719
    10. 'imate' → logprob: -9.006645202636719

Token 1349: ' treat' (ID: 4665)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.0007282786536961794
    2. ' return' → logprob: -7.250728130340576
    3. '               ' → logprob: -11.250728607177734
    4. '                   ' → logprob: -12.250728607177734
    5. '           ' → logprob: -16.000728607177734
    6. '	return' → logprob: -16.125728607177734
    7. '   ' → logprob: -16.250728607177734
    8. ':return' → logprob: -17.000728607177734
    9. '{return' → logprob: -17.125728607177734
    10. '                       ' → logprob: -18.000728607177734

Token 1350: ' as' (ID: 472)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.005697811488062143
    2. 'True' → logprob: -6.380697727203369
    3. 'node' → logprob: -6.630697727203369
    4. 'as' → logprob: -6.880697727203369
    5. ' return' → logprob: -7.005697727203369
    6. '               ' → logprob: -8.005698204040527
    7. ' as' → logprob: -8.630698204040527
    8. '           ' → logprob: -9.380698204040527
    9. '                   ' → logprob: -9.505698204040527
    10. ' True' → logprob: -11.005698204040527

Token 1351: ' covered' (ID: 13083)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.31344714760780334
    2. 'covered' → logprob: -1.313447117805481
    3. 'False' → logprob: -8.813446998596191
    4. ' True' → logprob: -10.813446998596191
    5. 'not' → logprob: -11.438446998596191
    6. ' covered' → logprob: -13.313446998596191
    7. 'true' → logprob: -13.438446998596191
    8. '   ' → logprob: -13.438446998596191
    9. 'no' → logprob: -13.813446998596191
    10. 'occupied' → logprob: -17.063447952270508

Token 1352: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4764842391014099
    2. '           ' → logprob: -0.9764842391014099
    3. '
' → logprob: -6.601484298706055
    4. 'return' → logprob: -7.476484298706055
    5. '                   ' → logprob: -8.101484298706055
    6. ' return' → logprob: -9.476484298706055
    7. ',' → logprob: -10.601484298706055
    8. '            
' → logprob: -11.101484298706055
    9. '                       ' → logprob: -11.351484298706055
    10. '       ' → logprob: -11.476484298706055

Token 1353: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004159125965088606
    2. '           ' → logprob: -5.504158973693848
    3. '                   ' → logprob: -10.004158973693848
    4. 'return' → logprob: -10.629158973693848
    5. '
' → logprob: -12.504158973693848
    6. '       ' → logprob: -12.879158973693848
    7. '   ' → logprob: -13.129158973693848
    8. ' return' → logprob: -13.129158973693848
    9. '                       ' → logprob: -14.754158973693848
    10. '	           ' → logprob: -15.379158973693848

Token 1354: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0007461408386006951
    2. '               ' → logprob: -7.250746250152588
    3. ' return' → logprob: -10.50074577331543
    4. '                   ' → logprob: -11.75074577331543
    5. '           ' → logprob: -14.25074577331543
    6. '   ' → logprob: -16.12574577331543
    7. '                       ' → logprob: -17.25074577331543
    8. '	return' → logprob: -17.50074577331543
    9. '       ' → logprob: -18.37574577331543
    10. '                ' → logprob: -19.50074577331543

Token 1355: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.0325924449716695e-05
    2. ' True' → logprob: -11.50001049041748
    3. 'False' → logprob: -16.500009536743164
    4. '   ' → logprob: -19.375009536743164
    5. '           ' → logprob: -20.500009536743164
    6. 'true' → logprob: -21.375009536743164
    7. '       ' → logprob: -21.625009536743164
    8. '(True' → logprob: -21.875009536743164
    9. '                   ' → logprob: -22.500009536743164
    10. '=True' → logprob: -23.000009536743164

Token 1356: '
            
' (ID: 45334)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4837380647659302
    2. '           ' → logprob: -0.9837380647659302
    3. '            
' → logprob: -5.733737945556641
    4. '\n' → logprob: -5.858737945556641
    5. '    
' → logprob: -6.108737945556641
    6. '        
' → logprob: -7.483737945556641
    7. '<|end|>' → logprob: -8.60873794555664
    8. '\
' → logprob: -8.73373794555664
    9. '       ' → logprob: -8.98373794555664
    10. '
' → logprob: -9.85873794555664

Token 1357: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8627587556838989
    2. '           ' → logprob: -0.8627587556838989
    3. '
' → logprob: -1.862758755683899
    4. '        
' → logprob: -7.362758636474609
    5. '            
' → logprob: -9.98775863647461
    6. '    
' → logprob: -9.98775863647461
    7. '
' → logprob: -10.61275863647461
    8. '   ' → logprob: -11.98775863647461
    9. '               ' → logprob: -12.86275863647461
    10. '  
' → logprob: -14.48775863647461

Token 1358: ' mx' (ID: 28004)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007132573984563351
    2. 'node' → logprob: -6.382132530212402
    3. 'tl' → logprob: -6.507132530212402
    4. 'children' → logprob: -7.257132530212402
    5. '               ' → logprob: -7.507132530212402
    6. '   ' → logprob: -7.507132530212402
    7. 'child' → logprob: -7.757132530212402
    8. 'quad' → logprob: -7.757132530212402
    9. '       ' → logprob: -7.882132530212402
    10. 'n' → logprob: -8.757132530212402

Token 1359: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.018353624269366264
    2. '=' → logprob: -4.018353462219238
    3. ',' → logprob: -9.018353462219238
    4. '   ' → logprob: -10.518353462219238
    5. '=(' → logprob: -10.518353462219238
    6. '       ' → logprob: -11.393353462219238
    7. '           ' → logprob: -12.143353462219238
    8. ' =(' → logprob: -12.143353462219238
    9. '=((' → logprob: -12.393353462219238
    10. '    ' → logprob: -14.518353462219238

Token 1360: ' (' (ID: 350)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.00037347347824834287
    2. ' (' → logprob: -8.000373840332031
    3. '0' → logprob: -10.875373840332031
    4. '           ' → logprob: -11.250373840332031
    5. '   ' → logprob: -12.625373840332031
    6. '       ' → logprob: -13.625373840332031
    7. '(self' → logprob: -14.875373840332031
    8. 'node' → logprob: -15.125373840332031
    9. '(' → logprob: -15.375373840332031
    10. ' ' → logprob: -15.500373840332031

Token 1361: 'node' (ID: 7005)
  Prédit: 'node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -1.4736459888808895e-05
    2. '(node' → logprob: -11.250014305114746
    3. ' node' → logprob: -13.750014305114746
    4. 'self' → logprob: -14.750014305114746
    5. '           ' → logprob: -15.875014305114746
    6. '   ' → logprob: -18.250015258789062
    7. '[node' → logprob: -18.375015258789062
    8. '       ' → logprob: -18.500015258789062
    9. '	node' → logprob: -19.125015258789062
    10. '/node' → logprob: -19.250015258789062

Token 1362: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -3.292907877039397e-06
    2. 'x' → logprob: -13.37500286102295
    3. '_x' → logprob: -14.37500286102295
    4. '0' → logprob: -14.50000286102295
    5. '.' → logprob: -14.87500286102295
    6. 'self' → logprob: -15.75000286102295
    7. ' .' → logprob: -16.250003814697266
    8. '```' → logprob: -17.875003814697266
    9. '   ' → logprob: -18.125003814697266
    10. '_.' → logprob: -18.375003814697266

Token 1363: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '1' → logprob: -15.25
    3. 'self' → logprob: -21.25
    4. '```' → logprob: -22.375
    5. '۰' → logprob: -22.625
    6. '   ' → logprob: -23.5
    7. '[' → logprob: -23.625
    8. ')' → logprob: -24.125
    9. 'm' → logprob: -24.625
    10. '０' → logprob: -25.125

Token 1364: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.01857631839811802
    2. ' +' → logprob: -4.018576145172119
    3. '+self' → logprob: -7.768576145172119
    4. '+
' → logprob: -12.768576622009277
    5. '+x' → logprob: -15.018576622009277
    6. '+n' → logprob: -15.143576622009277
    7. '＋' → logprob: -17.14357566833496
    8. '+m' → logprob: -17.76857566833496
    9. 'self' → logprob: -18.14357566833496
    10. ' +
' → logprob: -18.26857566833496

Token 1365: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0006297559011727571
    2. ' node' → logprob: -7.375629901885986
    3. '(node' → logprob: -13.000629425048828
    4. '[node' → logprob: -15.375629425048828
    5. '	node' → logprob: -15.500629425048828
    6. '   ' → logprob: -15.750629425048828
    7. '           ' → logprob: -15.750629425048828
    8. '.node' → logprob: -16.750629425048828
    9. '       ' → logprob: -16.875629425048828
    10. '
' → logprob: -17.375629425048828

Token 1366: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.07427318394184113
    2. 'x' → logprob: -2.699273109436035
    3. '1' → logprob: -5.699273109436035
    4. '_x' → logprob: -6.949273109436035
    5. ' x' → logprob: -11.824273109436035
    6. '   ' → logprob: -12.074273109436035
    7. 'node' → logprob: -12.824273109436035
    8. '	x' → logprob: -14.199273109436035
    9. '```' → logprob: -14.199273109436035
    10. '<x' → logprob: -14.949273109436035

Token 1367: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001570683903992176
    2. 'x' → logprob: -6.501570701599121
    3. 'node' → logprob: -10.001570701599121
    4. '.x' → logprob: -11.126570701599121
    5. '(node' → logprob: -12.876570701599121
    6. '   ' → logprob: -13.501570701599121
    7. 'mx' → logprob: -14.001570701599121
    8. '_x' → logprob: -14.251570701599121
    9. '.node' → logprob: -14.501570701599121
    10. ' x' → logprob: -14.501570701599121

Token 1368: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10061055421829224
    2. ')/' → logprob: -2.3506104946136475
    3. ')//' → logprob: -7.850610733032227
    4. ')>>' → logprob: -11.850610733032227
    5. ' )' → logprob: -12.725610733032227
    6. '   ' → logprob: -12.975610733032227
    7. ')*' → logprob: -13.975610733032227
    8. ')#' → logprob: -14.225610733032227
    9. ')
' → logprob: -16.225610733032227
    10. '```' → logprob: -16.850610733032227

Token 1369: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.895480277715251e-06
    2. ' ' → logprob: -11.750008583068848
    3. '   ' → logprob: -14.125008583068848
    4. '```' → logprob: -16.187509536743164
    5. '۲' → logprob: -17.562509536743164
    6. '
' → logprob: -17.875009536743164
    7. '２' → logprob: -17.937509536743164
    8. '=' → logprob: -18.312509536743164
    9. '  ' → logprob: -18.562509536743164
    10. '    ' → logprob: -18.687509536743164

Token 1370: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.40469515323638916
    2. '<|end|>' → logprob: -1.9046951532363892
    3. '
' → logprob: -2.0296950340270996
    4. '           ' → logprob: -3.2796950340270996
    5. '<|end|>' → logprob: -5.5296950340271
    6. '            
' → logprob: -5.7796950340271
    7. '       ' → logprob: -6.4046950340271
    8. ',m' → logprob: -6.4046950340271
    9. 'm' → logprob: -7.0296950340271
    10. '
' → logprob: -7.7796950340271

Token 1371: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021518105641007423
    2. '       ' → logprob: -4.521518230438232
    3. '               ' → logprob: -5.521518230438232
    4. ',' → logprob: -6.021518230438232
    5. ' my' → logprob: -7.396518230438232
    6. '   ' → logprob: -7.771518230438232
    7. 'm' → logprob: -8.146517753601074
    8. ',y' → logprob: -8.396517753601074
    9. 'y' → logprob: -8.521517753601074
    10. ',my' → logprob: -8.646517753601074

Token 1372: ' my' (ID: 922)
  Prédit: 'my'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'my' (adapté à ' my') → logprob: -0.00896080769598484
    2. '           ' → logprob: -4.758960723876953
    3. ' my' → logprob: -8.008960723876953
    4. 'My' → logprob: -12.508960723876953
    5. '       ' → logprob: -12.633960723876953
    6. '            ' → logprob: -13.383960723876953
    7. '_my' → logprob: -13.508960723876953
    8. '               ' → logprob: -14.258960723876953
    9. 'mi' → logprob: -14.508960723876953
    10. '   ' → logprob: -14.633960723876953

Token 1373: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18414852023124695
    2. '=' → logprob: -1.8091485500335693
    3. ' (' → logprob: -6.05914831161499
    4. '(node' → logprob: -6.43414831161499
    5. '=(' → logprob: -7.93414831161499
    6. ',' → logprob: -10.809148788452148
    7. ')' → logprob: -11.059148788452148
    8. '(' → logprob: -11.059148788452148
    9. '=node' → logprob: -11.184148788452148
    10. ' =(' → logprob: -11.309148788452148

Token 1374: ' (' (ID: 350)
  Prédit: '(node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.007610413245856762
    2. ' (' → logprob: -4.882610321044922
    3. '(self' → logprob: -13.507610321044922
    4. '   ' → logprob: -13.632610321044922
    5. '(user' → logprob: -14.757610321044922
    6. '       ' → logprob: -14.882610321044922
    7. '           ' → logprob: -15.257610321044922
    8. ' ' → logprob: -15.507610321044922
    9. '[node' → logprob: -16.007610321044922
    10. '  ' → logprob: -16.757610321044922

Token 1375: 'node' (ID: 7005)
  Prédit: 'node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.00031186718842945993
    2. '(node' → logprob: -8.125311851501465
    3. ' node' → logprob: -11.500311851501465
    4. '           ' → logprob: -12.875311851501465
    5. 'self' → logprob: -13.000311851501465
    6. '[node' → logprob: -15.125311851501465
    7. '   ' → logprob: -15.625311851501465
    8. '       ' → logprob: -15.875311851501465
    9. '               ' → logprob: -16.50031280517578
    10. '	node' → logprob: -16.87531280517578

Token 1376: '.y' (ID: 4486)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.017940258607268333
    2. '.y' → logprob: -4.142940044403076
    3. 'y' → logprob: -6.517940044403076
    4. '(' → logprob: -8.517940521240234
    5. '(y' → logprob: -9.767940521240234
    6. ' y' → logprob: -9.892940521240234
    7. '_y' → logprob: -10.767940521240234
    8. ')' → logprob: -11.392940521240234
    9. '.py' → logprob: -11.642940521240234
    10. '   ' → logprob: -11.892940521240234

Token 1377: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.704273118884885e-07
    2. '
' → logprob: -15.375000953674316
    3. '1' → logprob: -15.750000953674316
    4. ' ' → logprob: -16.25
    5. '   ' → logprob: -16.5
    6. '(' → logprob: -16.75
    7. '```' → logprob: -17.0
    8. ' (' → logprob: -18.25
    9. ')' → logprob: -18.875
    10. '۰' → logprob: -19.125

Token 1378: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10103455185890198
    2. '+' → logprob: -2.351034641265869
    3. '(node' → logprob: -7.851034641265869
    4. '+self' → logprob: -8.476034164428711
    5. '+y' → logprob: -9.101034164428711
    6. '+m' → logprob: -10.101034164428711
    7. ')' → logprob: -10.601034164428711
    8. ' (' → logprob: -11.351034164428711
    9. '(' → logprob: -11.726034164428711
    10. '+(' → logprob: -11.976034164428711

Token 1379: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.3145853281021118
    2. '(node' → logprob: -1.3145853281021118
    3. 'self' → logprob: -6.814585208892822
    4. '
' → logprob: -9.81458568572998
    5. '[node' → logprob: -10.06458568572998
    6. '(self' → logprob: -10.31458568572998
    7. ')' → logprob: -10.93958568572998
    8. '       ' → logprob: -11.06458568572998
    9. '   ' → logprob: -11.18958568572998
    10. ' (' → logprob: -11.18958568572998

Token 1380: '.y' (ID: 4486)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -2.963691804325208e-05
    2. '
' → logprob: -10.875029563903809
    3. '```' → logprob: -12.250029563903809
    4. '/' → logprob: -13.250029563903809
    5. '0' → logprob: -13.500029563903809
    6. '   ' → logprob: -14.625029563903809
    7. '...' → logprob: -14.625029563903809
    8. '``' → logprob: -15.625029563903809
    9. 'my' → logprob: -15.625029563903809
    10. ' ' → logprob: -15.750029563903809

Token 1381: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1186566047836095e-05
    2. '0' → logprob: -11.000031471252441
    3. '```' → logprob: -11.750031471252441
    4. '/' → logprob: -13.375031471252441
    5. '   ' → logprob: -13.500031471252441
    6. '
' → logprob: -14.000031471252441
    7. 'my' → logprob: -14.500031471252441
    8. '5' → logprob: -15.000031471252441
    9. 'm' → logprob: -15.375031471252441
    10. '...' → logprob: -15.500031471252441

Token 1382: ')/' (ID: 11876)
  Prédit: ')/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')/' → logprob: -0.0003490514063742012
    2. ')' → logprob: -8.000349044799805
    3. '/' → logprob: -11.625349044799805
    4. '   ' → logprob: -12.750349044799805
    5. ' )' → logprob: -13.750349044799805
    6. '       ' → logprob: -16.000349044799805
    7. '))/' → logprob: -16.500349044799805
    8. '```' → logprob: -16.500349044799805
    9. '0' → logprob: -16.625349044799805
    10. ' ' → logprob: -16.750349044799805

Token 1383: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '   ' → logprob: -18.875
    4. '```' → logprob: -19.625
    5. '۲' → logprob: -19.75
    6. '<|end|>' → logprob: -20.125
    7. '２' → logprob: -20.25
    8. '{' → logprob: -20.625
    9. '(' → logprob: -20.875
    10. '=' → logprob: -21.4375

Token 1384: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0019619399681687355
    2. '
' → logprob: -6.501961708068848
    3. '<|end|>' → logprob: -8.251961708068848
    4. ',' → logprob: -10.251961708068848
    5. '            
' → logprob: -10.501961708068848
    6. '	       ' → logprob: -11.001961708068848
    7. ' quad' → logprob: -11.126961708068848
    8. '   ' → logprob: -11.126961708068848
    9. '       ' → logprob: -11.251961708068848
    10. '               ' → logprob: -11.501961708068848

Token 1385: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00011021859245374799
    2. '
' → logprob: -9.375110626220703
    3. '       ' → logprob: -12.000110626220703
    4. '            
' → logprob: -12.000110626220703
    5. 'quad' → logprob: -12.500110626220703
    6. '               ' → logprob: -12.625110626220703
    7. '          ' → logprob: -13.250110626220703
    8. '   ' → logprob: -13.375110626220703
    9. ' quad' → logprob: -14.500110626220703
    10. '    
' → logprob: -14.750110626220703

Token 1386: ' childs' (ID: 172090)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17471884191036224
    2. 'children' → logprob: -2.1747188568115234
    3. 'child' → logprob: -3.5497188568115234
    4. 'nodes' → logprob: -5.174718856811523
    5. 'quad' → logprob: -5.674718856811523
    6. 'tl' → logprob: -6.049718856811523
    7. 'quadr' → logprob: -6.924718856811523
    8. 'qu' → logprob: -7.049718856811523
    9. 'nw' → logprob: -7.424718856811523
    10. 'sub' → logprob: -7.674718856811523

Token 1387: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006718571297824383
    2. '=' → logprob: -5.006718635559082
    3. '=[' → logprob: -14.131718635559082
    4. ' =[' → logprob: -14.381718635559082
    5. '=[
' → logprob: -14.506718635559082
    6. '[' → logprob: -14.881718635559082
    7. 's' → logprob: -15.256718635559082
    8. '   ' → logprob: -15.506718635559082
    9. '_' → logprob: -15.506718635559082
    10. '=[]' → logprob: -16.256717681884766

Token 1388: ' [' (ID: 723)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.038309767842292786
    2. '[' → logprob: -3.2883098125457764
    3. '           ' → logprob: -8.538310050964355
    4. ' [
' → logprob: -10.038310050964355
    5. ' [' → logprob: -11.288310050964355
    6. '   ' → logprob: -12.288310050964355
    7. '               ' → logprob: -12.413310050964355
    8. '(
' → logprob: -13.413310050964355
    9. '[(' → logprob: -13.913310050964355
    10. '[node' → logprob: -14.288310050964355

Token 1389: 'Quad' (ID: 54931)
  Prédit: 'Quad'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Quad' → logprob: -0.0009972022380679846
    2. '           ' → logprob: -7.000997066497803
    3. '               ' → logprob: -10.000997543334961
    4. ' Quad' → logprob: -10.625997543334961
    5. 'Quadr' → logprob: -11.875997543334961
    6. 'type' → logprob: -12.250997543334961
    7. 'quad' → logprob: -12.750997543334961
    8. '                   ' → logprob: -14.250997543334961
    9. '   ' → logprob: -15.750997543334961
    10. '_quad' → logprob: -16.12599754333496

Token 1390: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -8.41866585687967e-06
    2. 'ree' → logprob: -11.750008583068848
    3. 'tree' → logprob: -15.000008583068848
    4. 'Tre' → logprob: -16.00000762939453
    5. '<Tree' → logprob: -18.37500762939453
    6. 'TREE' → logprob: -18.37500762939453
    7. '               ' → logprob: -18.62500762939453
    8. ' Tree' → logprob: -19.00000762939453
    9. '           ' → logprob: -19.12500762939453
    10. '	Tree' → logprob: -19.37500762939453

Token 1391: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -2.45848218582978e-06
    2. '(x' → logprob: -14.25000286102295
    3. 'node' → logprob: -14.75000286102295
    4. 'N' → logprob: -14.87500286102295
    5. '_Node' → logprob: -15.87500286102295
    6. '(
' → logprob: -16.125001907348633
    7. '   ' → logprob: -16.250001907348633
    8. ' Node' → logprob: -16.250001907348633
    9. '.Node' → logprob: -16.375001907348633
    10. '(' → logprob: -16.500001907348633

Token 1392: '(node' (ID: 13356)
  Prédit: '(node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(node' → logprob: -0.1604691445827484
    2. 'node' → logprob: -1.9104691743850708
    3. '           ' → logprob: -9.285469055175781
    4. '(' → logprob: -9.535469055175781
    5. '(
' → logprob: -10.535469055175781
    6. ' node' → logprob: -10.660469055175781
    7. '   ' → logprob: -11.410469055175781
    8. '               ' → logprob: -12.410469055175781
    9. '[node' → logprob: -12.410469055175781
    10. ' (' → logprob: -13.160469055175781

Token 1393: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00021021578868385404
    2. 'x' → logprob: -8.50020980834961
    3. '.' → logprob: -12.37520980834961
    4. ' .' → logprob: -13.12520980834961
    5. '   ' → logprob: -15.62520980834961
    6. '.mx' → logprob: -16.00020980834961
    7. '0' → logprob: -16.62520980834961
    8. ').' → logprob: -17.00020980834961
    9. '	x' → logprob: -17.50020980834961
    10. '_x' → logprob: -17.62520980834961

Token 1394: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.723352049040841e-06
    2. '.' → logprob: -12.625004768371582
    3. '1' → logprob: -13.750004768371582
    4. ' ' → logprob: -15.750004768371582
    5. '   ' → logprob: -16.500003814697266
    6. ' .' → logprob: -16.812503814697266
    7. '2' → logprob: -17.375003814697266
    8. ',' → logprob: -17.687503814697266
    9. '۰' → logprob: -17.875003814697266
    10. '[' → logprob: -18.375003814697266

Token 1395: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010226861340925097
    2. ',node' → logprob: -7.001022815704346
    3. ',
' → logprob: -9.751022338867188
    4. ',m' → logprob: -10.626022338867188
    5. ' ,' → logprob: -10.876022338867188
    6. '           ' → logprob: -12.626022338867188
    7. ',my' → logprob: -13.126022338867188
    8. '       ' → logprob: -14.626022338867188
    9. ',
' → logprob: -14.751022338867188
    10. '               ' → logprob: -14.876022338867188

Token 1396: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0001375089050270617
    2. '           ' → logprob: -9.500137329101562
    3. ' node' → logprob: -10.125137329101562
    4. '               ' → logprob: -11.500137329101562
    5. '                   ' → logprob: -13.000137329101562
    6. '          ' → logprob: -13.125137329101562
    7. '            ' → logprob: -13.250137329101562
    8. '(node' → logprob: -13.625137329101562
    9. '              ' → logprob: -14.000137329101562
    10. '                ' → logprob: -14.625137329101562

Token 1397: '.y' (ID: 4486)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.15350675582885742
    2. 'y' → logprob: -2.1535067558288574
    3. '0' → logprob: -4.028506755828857
    4. '(node' → logprob: -5.153506755828857
    5. '[node' → logprob: -7.153506755828857
    6. '.node' → logprob: -7.278506755828857
    7. ' node' → logprob: -7.653506755828857
    8. ',node' → logprob: -8.528507232666016
    9. '   ' → logprob: -8.903507232666016
    10. '
' → logprob: -9.903507232666016

Token 1398: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. '1' → logprob: -15.375
    3. '۰' → logprob: -18.0
    4. ' ' → logprob: -18.5
    5. '   ' → logprob: -19.125
    6. '       ' → logprob: -19.375
    7. '           ' → logprob: -20.25
    8. '
' → logprob: -20.625
    9. ',' → logprob: -20.75
    10. ')' → logprob: -20.75

Token 1399: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014728360110893846
    2. '           ' → logprob: -10.125146865844727
    3. ',node' → logprob: -10.125146865844727
    4. ',
' → logprob: -10.750146865844727
    5. ' ,' → logprob: -11.000146865844727
    6. '       ' → logprob: -11.250146865844727
    7. ',m' → logprob: -12.000146865844727
    8. '   ' → logprob: -13.000146865844727
    9. '               ' → logprob: -13.125146865844727
    10. '```' → logprob: -13.625146865844727

Token 1400: ' mx' (ID: 28004)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.003179975086823106
    2. ' mx' → logprob: -5.753180027008057
    3. '(mx' → logprob: -13.503179550170898
    4. '           ' → logprob: -14.378179550170898
    5. '.mx' → logprob: -16.0031795501709
    6. 'm' → logprob: -16.7531795501709
    7. 'mc' → logprob: -16.8781795501709
    8. 'MX' → logprob: -18.6281795501709
    9. 'xm' → logprob: -19.0031795501709
    10. 'mv' → logprob: -19.1281795501709

Token 1401: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001568545587360859
    2. ',my' → logprob: -6.50156831741333
    3. ' ,' → logprob: -9.751568794250488
    4. ',m' → logprob: -12.501568794250488
    5. '   ' → logprob: -13.251568794250488
    6. ',node' → logprob: -13.251568794250488
    7. ',
' → logprob: -15.126568794250488
    8. '  ' → logprob: -15.501568794250488
    9. 'my' → logprob: -15.751568794250488
    10. ',y' → logprob: -17.376567840576172

Token 1402: ' my' (ID: 922)
  Prédit: 'my'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'my' → logprob: -0.048609279096126556
    2. 'node' → logprob: -3.0486092567443848
    3. '       ' → logprob: -11.923609733581543
    4. '   ' → logprob: -12.048609733581543
    5. ' my' → logprob: -12.673609733581543
    6. '     ' → logprob: -12.923609733581543
    7. ' node' → logprob: -13.298609733581543
    8. '           ' → logprob: -14.173609733581543
    9. '    ' → logprob: -14.423609733581543
    10. '      ' → logprob: -15.298609733581543

Token 1403: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4824743866920471
    2. '),' → logprob: -1.4824743270874023
    3. '),
' → logprob: -1.9824743270874023
    4. ',
' → logprob: -4.107474327087402
    5. '           ' → logprob: -7.482474327087402
    6. ',),
' → logprob: -7.607474327087402
    7. ',),' → logprob: -8.357474327087402
    8. '               ' → logprob: -10.107474327087402
    9. '),

' → logprob: -10.482474327087402
    10. '       ' → logprob: -10.732474327087402

Token 1404: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0001363168703392148
    2. ' node' → logprob: -9.000136375427246
    3. '               ' → logprob: -11.750136375427246
    4. '           ' → logprob: -13.750136375427246
    5. '                ' → logprob: -14.000136375427246
    6. '              ' → logprob: -14.125136375427246
    7. '            ' → logprob: -14.125136375427246
    8. '             ' → logprob: -14.250136375427246
    9. '                   ' → logprob: -15.125136375427246
    10. '	node' → logprob: -15.375136375427246

Token 1405: '.depth' (ID: 89791)
  Prédit: '.depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depth' → logprob: -0.03810666874051094
    2. 'depth' → logprob: -3.288106679916382
    3. '   ' → logprob: -10.538106918334961
    4. '.' → logprob: -11.038106918334961
    5. ' depth' → logprob: -11.288106918334961
    6. ' .' → logprob: -12.538106918334961
    7. ' ' → logprob: -13.413106918334961
    8. '+' → logprob: -13.538106918334961
    9. '  ' → logprob: -14.038106918334961
    10. '_depth' → logprob: -14.413106918334961

Token 1406: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0024781543761491776
    2. ' +' → logprob: -6.002478122711182
    3. '           ' → logprob: -13.50247859954834
    4. '               ' → logprob: -15.25247859954834
    5. '		' → logprob: -15.62747859954834
    6. '	' → logprob: -15.75247859954834
    7. '   ' → logprob: -16.377477645874023
    8. '       ' → logprob: -16.377477645874023
    9. '                   ' → logprob: -16.502477645874023
    10. ')+' → logprob: -16.752477645874023

Token 1407: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.875
    3. '
' → logprob: -18.375
    4. '           ' → logprob: -19.5
    5. '   ' → logprob: -19.875
    6. '```' → logprob: -21.0
    7. '0' → logprob: -21.625
    8. '+' → logprob: -21.75
    9. ')' → logprob: -22.0625
    10. '       ' → logprob: -22.1875

Token 1408: '),
' (ID: 2313)
  Prédit: '),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.0808945819735527
    2. '),' → logprob: -2.5808944702148438
    3. '           ' → logprob: -6.330894470214844
    4. '          ' → logprob: -9.205894470214844
    5. '            ' → logprob: -10.830894470214844
    6. '               ' → logprob: -10.830894470214844
    7. '       ' → logprob: -11.080894470214844
    8. '),

' → logprob: -11.205894470214844
    9. '),
' → logprob: -11.455894470214844
    10. ')' → logprob: -11.705894470214844

Token 1409: '                     ' (ID: 4451)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3088623285293579
    2. 'Quad' → logprob: -2.3088622093200684
    3. '                   ' → logprob: -2.5588622093200684
    4. '               ' → logprob: -3.3088622093200684
    5. '                    ' → logprob: -3.6838622093200684
    6. '                     ' → logprob: -4.558862209320068
    7. '                       ' → logprob: -5.433862209320068
    8. ' Quad' → logprob: -5.808862209320068
    9. '                      ' → logprob: -5.933862209320068
    10. '            ' → logprob: -6.183862209320068

Token 1410: ' Quad' (ID: 69708)
  Prédit: 'Quad'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Quad' (adapté à ' Quad') → logprob: -0.011147095821797848
    2. '                     ' → logprob: -5.6361470222473145
    3. '                    ' → logprob: -6.6361470222473145
    4. '                 ' → logprob: -6.6361470222473145
    5. ' Quad' → logprob: -6.6361470222473145
    6. '                   ' → logprob: -7.2611470222473145
    7. '                ' → logprob: -7.5111470222473145
    8. '               ' → logprob: -7.6361470222473145
    9. '                  ' → logprob: -7.7611470222473145
    10. '           ' → logprob: -7.8861470222473145

Token 1411: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.11987600475549698
    2. 'mx' → logprob: -3.244875907897949
    3. '(node' → logprob: -4.119875907897949
    4. '(mx' → logprob: -4.119875907897949
    5. '1' → logprob: -4.619875907897949
    6. 'node' → logprob: -4.744875907897949
    7. 'Node' → logprob: -5.744875907897949
    8. '(x' → logprob: -5.869875907897949
    9. '_tree' → logprob: -5.994875907897949
    10. '(' → logprob: -6.369875907897949

Token 1412: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.11631271988153458
    2. '.x' → logprob: -2.6163127422332764
    3. '1' → logprob: -3.9913127422332764
    4. '.mx' → logprob: -4.991312503814697
    5. '0' → logprob: -5.241312503814697
    6. '_x' → logprob: -6.366312503814697
    7. 'Tree' → logprob: -6.491312503814697
    8. 'x' → logprob: -6.741312503814697
    9. '(x' → logprob: -6.866312503814697
    10. '._' → logprob: -8.991312980651855

Token 1413: '(mx' (ID: 160663)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.3763018846511841
    2. '(mx' → logprob: -1.251301884651184
    3. ' mx' → logprob: -3.8763017654418945
    4. 'node' → logprob: -5.1263017654418945
    5. '(node' → logprob: -7.8763017654418945
    6. ' node' → logprob: -9.251301765441895
    7. '               ' → logprob: -9.751301765441895
    8. '             ' → logprob: -10.251301765441895
    9. '.mx' → logprob: -10.376301765441895
    10. '                     ' → logprob: -10.376301765441895

Token 1414: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029947367147542536
    2. ' ,' → logprob: -8.125299453735352
    3. ',node' → logprob: -14.000299453735352
    4. ',
' → logprob: -14.375299453735352
    5. ' ' → logprob: -14.625299453735352
    6. ',m' → logprob: -15.375299453735352
    7. '   ' → logprob: -15.375299453735352
    8. ',y' → logprob: -15.500299453735352
    9. '       ' → logprob: -16.25029945373535
    10. '<|end|>' → logprob: -16.37529945373535

Token 1415: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0069732400588691235
    2. 'my' → logprob: -5.0069732666015625
    3. ' node' → logprob: -8.881973266601562
    4. 'self' → logprob: -9.506973266601562
    5. 'y' → logprob: -10.756973266601562
    6. '           ' → logprob: -12.256973266601562
    7. '(node' → logprob: -13.131973266601562
    8. '               ' → logprob: -13.256973266601562
    9. '     ' → logprob: -13.381973266601562
    10. '                   ' → logprob: -13.381973266601562

Token 1416: '.y' (ID: 4486)
  Prédit: 'my'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'my' → logprob: -0.05530456826090813
    2. 'y' → logprob: -3.555304527282715
    3. '.my' → logprob: -3.930304527282715
    4. '.y' → logprob: -6.680304527282715
    5. '     ' → logprob: -7.305304527282715
    6. ',my' → logprob: -7.430304527282715
    7. ',' → logprob: -7.555304527282715
    8. '_my' → logprob: -7.555304527282715
    9. '0' → logprob: -7.930304527282715
    10. 'ym' → logprob: -8.055304527282715

Token 1417: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00038467496051453054
    2. '1' → logprob: -8.125384330749512
    3. 'my' → logprob: -9.500384330749512
    4. '     ' → logprob: -12.375384330749512
    5. '   ' → logprob: -12.625384330749512
    6. '       ' → logprob: -13.125384330749512
    7. 'y' → logprob: -14.000384330749512
    8. '           ' → logprob: -14.625384330749512
    9. ' ' → logprob: -14.875384330749512
    10. '```' → logprob: -15.125384330749512

Token 1418: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009619582560844719
    2. ',m' → logprob: -7.625961780548096
    3. 'mx' → logprob: -8.250962257385254
    4. ' ,' → logprob: -8.750962257385254
    5. ' mx' → logprob: -10.625962257385254
    6. '(mx' → logprob: -10.625962257385254
    7. ',
' → logprob: -13.250962257385254
    8. ',my' → logprob: -13.750962257385254
    9. '                     ' → logprob: -13.875962257385254
    10. '.mx' → logprob: -14.875962257385254

Token 1419: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -6.392202976712724e-06
    2. ' node' → logprob: -12.000006675720215
    3. '               ' → logprob: -16.2500057220459
    4. '(node' → logprob: -17.0000057220459
    5. 'mx' → logprob: -17.3750057220459
    6. '                   ' → logprob: -17.7500057220459
    7. '           ' → logprob: -18.1250057220459
    8. '[node' → logprob: -18.2500057220459
    9. '	node' → logprob: -19.0000057220459
    10. ',node' → logprob: -19.1250057220459

Token 1420: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.07928422093391418
    2. 'x' → logprob: -2.579284191131592
    3. '.mx' → logprob: -8.45428466796875
    4. '1' → logprob: -9.45428466796875
    5. '_x' → logprob: -10.32928466796875
    6. 'self' → logprob: -11.07928466796875
    7. '```' → logprob: -11.95428466796875
    8. '{x' → logprob: -12.20428466796875
    9. ' x' → logprob: -12.32928466796875
    10. '       ' → logprob: -12.45428466796875

Token 1421: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. 'm' → logprob: -13.750003814697266
    3. '```' → logprob: -14.500003814697266
    4. '0' → logprob: -14.625003814697266
    5. '
' → logprob: -15.500003814697266
    6. '_' → logprob: -16.125003814697266
    7. '_mid' → logprob: -16.375003814697266
    8. ')' → logprob: -16.500003814697266
    9. '...' → logprob: -16.500003814697266
    10. 'x' → logprob: -16.500003814697266

Token 1422: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004249547782819718
    2. ',my' → logprob: -8.500425338745117
    3. ',m' → logprob: -9.000425338745117
    4. ' ,' → logprob: -9.250425338745117
    5. 'mx' → logprob: -13.750425338745117
    6. ',
' → logprob: -15.125425338745117
    7. ' ' → logprob: -15.875425338745117
    8. ',y' → logprob: -16.000425338745117
    9. 'my' → logprob: -16.125425338745117
    10. '(mx' → logprob: -16.625425338745117

Token 1423: ' my' (ID: 922)
  Prédit: 'my'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'my' → logprob: -1.688212614681106e-05
    2. ' my' → logprob: -11.000017166137695
    3. '(my' → logprob: -18.500017166137695
    4. ',my' → logprob: -18.500017166137695
    5. 'My' → logprob: -18.625017166137695
    6. '_my' → logprob: -18.750017166137695
    7. '	my' → logprob: -19.125017166137695
    8. '   ' → logprob: -19.125017166137695
    9. '
' → logprob: -19.250017166137695
    10. 'node' → logprob: -19.250017166137695

Token 1424: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010997301433235407
    2. ',node' → logprob: -6.876099586486816
    3. '                     ' → logprob: -10.376099586486816
    4. ' ,' → logprob: -10.751099586486816
    5. ',
' → logprob: -12.126099586486816
    6. '),' → logprob: -12.751099586486816
    7. '           ' → logprob: -14.126099586486816
    8. '                    ' → logprob: -14.376099586486816
    9. '(node' → logprob: -14.376099586486816
    10. ',m' → logprob: -14.501099586486816

Token 1425: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -3.857719275401905e-05
    2. ' node' → logprob: -10.625038146972656
    3. '                     ' → logprob: -11.625038146972656
    4. 'my' → logprob: -13.000038146972656
    5. '           ' → logprob: -14.625038146972656
    6. '               ' → logprob: -14.750038146972656
    7. '                   ' → logprob: -15.000038146972656
    8. '                    ' → logprob: -15.125038146972656
    9. '[node' → logprob: -15.375038146972656
    10. '             ' → logprob: -15.500038146972656

Token 1426: '.depth' (ID: 89791)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.06648837774991989
    2. '+' → logprob: -3.441488265991211
    3. 'depth' → logprob: -4.066488265991211
    4. 'node' → logprob: -4.691488265991211
    5. 'y' → logprob: -5.441488265991211
    6. '.y' → logprob: -7.316488265991211
    7. '.depth' → logprob: -7.441488265991211
    8. '
' → logprob: -9.566488265991211
    9. '   ' → logprob: -9.816488265991211
    10. ')' → logprob: -10.191488265991211

Token 1427: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.3544423381972592e-05
    2. ' +' → logprob: -11.50001335144043
    3. '1' → logprob: -14.50001335144043
    4. '[' → logprob: -14.62501335144043
    5. '+
' → logprob: -14.62501335144043
    6. '```' → logprob: -14.62501335144043
    7. '[node' → logprob: -15.12501335144043
    8. ')+' → logprob: -15.25001335144043
    9. '                     ' → logprob: -15.75001335144043
    10. ')' → logprob: -16.00001335144043

Token 1428: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '0' → logprob: -16.25
    3. '2' → logprob: -16.75
    4. '+' → logprob: -16.75
    5. ' ' → logprob: -16.75
    6. '   ' → logprob: -18.125
    7. '```' → logprob: -18.875
    8. '
' → logprob: -19.125
    9. '           ' → logprob: -19.75
    10. '...' → logprob: -19.875

Token 1429: '),
' (ID: 2313)
  Prédit: '),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.08896356076002121
    2. '),' → logprob: -2.838963508605957
    3. '                     ' → logprob: -3.713963508605957
    4. '                    ' → logprob: -6.838963508605957
    5. '           ' → logprob: -7.213963508605957
    6. '                   ' → logprob: -8.463963508605957
    7. '            ' → logprob: -10.213963508605957
    8. '                 ' → logprob: -10.338963508605957
    9. '),

' → logprob: -10.338963508605957
    10. '             ' → logprob: -10.713963508605957

Token 1430: '                     ' (ID: 4451)
  Prédit: '                     '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                     ' → logprob: -0.000496436667162925
    2. '           ' → logprob: -8.250496864318848
    3. 'Quad' → logprob: -8.750496864318848
    4. '             ' → logprob: -9.875496864318848
    5. '                 ' → logprob: -11.625496864318848
    6. '               ' → logprob: -12.000496864318848
    7. '                   ' → logprob: -12.125496864318848
    8. '         ' → logprob: -13.250496864318848
    9. '                    ' → logprob: -14.000496864318848
    10. '       ' → logprob: -14.750496864318848

Token 1431: ' Quad' (ID: 69708)
  Prédit: 'Quad'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Quad' (adapté à ' Quad') → logprob: -7.159660890465602e-05
    2. '           ' → logprob: -10.50007152557373
    3. ' Quad' → logprob: -11.12507152557373
    4. '                     ' → logprob: -11.25007152557373
    5. '                 ' → logprob: -12.37507152557373
    6. '                   ' → logprob: -12.50007152557373
    7. 'Quadr' → logprob: -12.87507152557373
    8. '               ' → logprob: -13.12507152557373
    9. '             ' → logprob: -13.25007152557373
    10. '         ' → logprob: -13.75007152557373

Token 1432: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.009869301691651344
    2. '(mx' → logprob: -5.00986909866333
    3. 'Node' → logprob: -5.88486909866333
    4. '(x' → logprob: -9.384869575500488
    5. 'mx' → logprob: -10.009869575500488
    6. 'My' → logprob: -10.259869575500488
    7. ' mx' → logprob: -10.259869575500488
    8. '((' → logprob: -10.634869575500488
    9. '(' → logprob: -10.759869575500488
    10. '(my' → logprob: -10.884869575500488

Token 1433: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.04833422228693962
    2. '(node' → logprob: -4.173334121704102
    3. '(my' → logprob: -4.423334121704102
    4. 'My' → logprob: -4.798334121704102
    5. '(mx' → logprob: -4.798334121704102
    6. 'my' → logprob: -7.048334121704102
    7. '(x' → logprob: -7.798334121704102
    8. 'Point' → logprob: -8.173334121704102
    9. '(m' → logprob: -8.298334121704102
    10. '(y' → logprob: -8.548334121704102

Token 1434: '(node' (ID: 13356)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.025700723752379417
    2. '(mx' → logprob: -4.025700569152832
    3. 'node' → logprob: -5.150700569152832
    4. 'my' → logprob: -6.525700569152832
    5. '(node' → logprob: -8.900700569152832
    6. ' mx' → logprob: -9.900700569152832
    7. '(my' → logprob: -10.525700569152832
    8. '   ' → logprob: -11.275700569152832
    9. '           ' → logprob: -12.275700569152832
    10. '               ' → logprob: -12.525700569152832

Token 1435: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.1602608859539032
    2. 'x' → logprob: -1.9102609157562256
    3. '   ' → logprob: -11.160261154174805
    4. '_x' → logprob: -12.035261154174805
    5. '0' → logprob: -12.660261154174805
    6. ' ' → logprob: -13.160261154174805
    7. '.' → logprob: -13.285261154174805
    8. '(x' → logprob: -13.535261154174805
    9. ' x' → logprob: -13.910261154174805
    10. '       ' → logprob: -13.910261154174805

Token 1436: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.12528666853904724
    2. '1' → logprob: -2.75028657913208
    3. 'x' → logprob: -3.62528657913208
    4. 'y' → logprob: -4.50028657913208
    5. '.y' → logprob: -4.75028657913208
    6. '.x' → logprob: -5.00028657913208
    7. '.' → logprob: -9.125287055969238
    8. 'm' → logprob: -9.125287055969238
    9. '
' → logprob: -9.625287055969238
    10. '.m' → logprob: -9.687787055969238

Token 1437: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018732868193183094
    2. ',my' → logprob: -9.125186920166016
    3. ' ,' → logprob: -10.125186920166016
    4. ',
' → logprob: -11.375186920166016
    5. '           ' → logprob: -11.625186920166016
    6. '                   ' → logprob: -11.750186920166016
    7. '               ' → logprob: -12.500186920166016
    8. ',m' → logprob: -12.750186920166016
    9. '   ' → logprob: -14.375186920166016
    10. '       ' → logprob: -14.625186920166016

Token 1438: ' my' (ID: 922)
  Prédit: 'my'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'my' → logprob: -3.786196975852363e-05
    2. ' my' → logprob: -10.750038146972656
    3. '(my' → logprob: -11.375038146972656
    4. 'mx' → logprob: -13.875038146972656
    5. '                   ' → logprob: -14.500038146972656
    6. '
' → logprob: -14.625038146972656
    7. '               ' → logprob: -14.750038146972656
    8. '                     ' → logprob: -14.875038146972656
    9. '     ' → logprob: -15.125038146972656
    10. '           ' → logprob: -15.125038146972656

Token 1439: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009531481191515923
    2. ',node' → logprob: -7.000953197479248
    3. ' ,' → logprob: -11.00095272064209
    4. ',m' → logprob: -11.25095272064209
    5. ',my' → logprob: -11.62595272064209
    6. ',
' → logprob: -13.37595272064209
    7. '(node' → logprob: -14.50095272064209
    8. ',n' → logprob: -15.37595272064209
    9. 'node' → logprob: -15.87595272064209
    10. '[node' → logprob: -15.87595272064209

Token 1440: ' mx' (ID: 28004)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.4789541959762573
    2. 'node' → logprob: -0.9789541959762573
    3. ' mx' → logprob: -5.853954315185547
    4. ' node' → logprob: -6.228954315185547
    5. '(mx' → logprob: -11.728954315185547
    6. 'm' → logprob: -12.478954315185547
    7. '           ' → logprob: -12.978954315185547
    8. '(node' → logprob: -13.478954315185547
    9. '.mx' → logprob: -13.478954315185547
    10. '          ' → logprob: -14.103954315185547

Token 1441: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.0339031834737398e-05
    2. ' ,' → logprob: -11.625020027160645
    3. ',my' → logprob: -11.750020027160645
    4. ',node' → logprob: -12.875020027160645
    5. ',
' → logprob: -14.875020027160645
    6. ',m' → logprob: -16.25002098083496
    7. ',y' → logprob: -16.25002098083496
    8. '   ' → logprob: -16.37502098083496
    9. '           ' → logprob: -16.50002098083496
    10. 'my' → logprob: -17.75002098083496

Token 1442: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -1.4974866644479334e-05
    2. ' node' → logprob: -11.125015258789062
    3. '(node' → logprob: -16.625015258789062
    4. '               ' → logprob: -17.125015258789062
    5. '           ' → logprob: -17.375015258789062
    6. '                   ' → logprob: -17.625015258789062
    7. 'self' → logprob: -18.000015258789062
    8. '	node' → logprob: -18.500015258789062
    9. 'my' → logprob: -18.750015258789062
    10. '   ' → logprob: -18.750015258789062

Token 1443: '.y' (ID: 4486)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.9399368166923523
    2. 'y' → logprob: -0.9399368166923523
    3. '.y' → logprob: -1.689936876296997
    4. 'my' → logprob: -3.439936876296997
    5. '.my' → logprob: -7.064936637878418
    6. '_y' → logprob: -7.939936637878418
    7. '[' → logprob: -8.814936637878418
    8. ',y' → logprob: -9.314936637878418
    9. '_my' → logprob: -9.314936637878418
    10. 'My' → logprob: -9.564936637878418

Token 1444: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. '0' → logprob: -14.50000286102295
    3. '
' → logprob: -14.62500286102295
    4. '   ' → logprob: -14.87500286102295
    5. '<|end|>' → logprob: -15.50000286102295
    6. ')' → logprob: -16.125001907348633
    7. '۱' → logprob: -16.125001907348633
    8. '     ' → logprob: -16.250001907348633
    9. ' ' → logprob: -16.625001907348633
    10. 'my' → logprob: -16.812501907348633

Token 1445: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005312023684382439
    2. '),' → logprob: -5.880311965942383
    3. '),
' → logprob: -6.880311965942383
    4. '                     ' → logprob: -7.130311965942383
    5. ',node' → logprob: -7.755311965942383
    6. ',
' → logprob: -9.130311965942383
    7. ' ,' → logprob: -9.755311965942383
    8. '           ' → logprob: -11.880311965942383
    9. '                    ' → logprob: -11.880311965942383
    10. ',m' → logprob: -12.005311965942383

Token 1446: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.018979009240865707
    2. '                     ' → logprob: -4.018979072570801
    3. ' node' → logprob: -7.268979072570801
    4. '                    ' → logprob: -9.8939790725708
    5. '           ' → logprob: -11.3939790725708
    6. '             ' → logprob: -11.5189790725708
    7. '(node' → logprob: -11.6439790725708
    8. '                   ' → logprob: -12.0189790725708
    9. '                 ' → logprob: -12.0189790725708
    10. '                ' → logprob: -12.1439790725708

Token 1447: '.depth' (ID: 89791)
  Prédit: 'depth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'depth' → logprob: -0.5275198817253113
    2. '.depth' → logprob: -0.9025198817253113
    3. '+' → logprob: -5.902519702911377
    4. '   ' → logprob: -7.152519702911377
    5. '     ' → logprob: -8.402520179748535
    6. 'y' → logprob: -8.402520179748535
    7. '1' → logprob: -9.152520179748535
    8. ' ' → logprob: -9.652520179748535
    9. '
' → logprob: -10.152520179748535
    10. '       ' → logprob: -10.152520179748535

Token 1448: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.372294698550832e-06
    2. '+
' → logprob: -12.125009536743164
    3. ' +' → logprob: -12.750009536743164
    4. '+,' → logprob: -15.000009536743164
    5. ',' → logprob: -15.750009536743164
    6. '[' → logprob: -16.000009536743164
    7. '),' → logprob: -16.250009536743164
    8. '                     ' → logprob: -16.625009536743164
    9. '+)' → logprob: -17.000009536743164
    10. '1' → logprob: -17.125009536743164

Token 1449: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.664371848164592e-05
    2. '+' → logprob: -11.125016212463379
    3. ' ' → logprob: -14.375016212463379
    4. '0' → logprob: -14.750016212463379
    5. 'node' → logprob: -15.375016212463379
    6. '
' → logprob: -15.750016212463379
    7. '   ' → logprob: -16.250017166137695
    8. '```' → logprob: -16.500017166137695
    9. ')' → logprob: -17.187517166137695
    10. '...' → logprob: -17.812517166137695

Token 1450: '),
' (ID: 2313)
  Prédit: '),
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),
' → logprob: -0.21331165730953217
    2. '),' → logprob: -2.0883116722106934
    3. '                     ' → logprob: -2.7133116722106934
    4. '           ' → logprob: -7.463311672210693
    5. '                   ' → logprob: -7.588311672210693
    6. '                    ' → logprob: -7.963311672210693
    7. '                 ' → logprob: -8.713311195373535
    8. '),

' → logprob: -9.463311195373535
    9. '             ' → logprob: -9.963311195373535
    10. '               ' → logprob: -10.463311195373535

Token 1451: '                     ' (ID: 4451)
  Prédit: '                     '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                     ' → logprob: -0.0004581942630466074
    2. 'Quad' → logprob: -7.875458240509033
    3. '           ' → logprob: -10.250457763671875
    4. '             ' → logprob: -10.750457763671875
    5. '                 ' → logprob: -11.875457763671875
    6. '                   ' → logprob: -12.500457763671875
    7. '         ' → logprob: -12.875457763671875
    8. '                    ' → logprob: -12.875457763671875
    9. '               ' → logprob: -13.500457763671875
    10. '					 ' → logprob: -14.000457763671875

Token 1452: ' Quad' (ID: 69708)
  Prédit: 'Quad'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Quad' (adapté à ' Quad') → logprob: -7.016616291366518e-05
    2. 'Quadr' → logprob: -10.500070571899414
    3. 'mx' → logprob: -11.250070571899414
    4. ' Quad' → logprob: -11.375070571899414
    5. '           ' → logprob: -12.125070571899414
    6. '               ' → logprob: -12.500070571899414
    7. '                   ' → logprob: -13.125070571899414
    8. 'quad' → logprob: -13.750070571899414
    9. '                 ' → logprob: -14.000070571899414
    10. '                     ' → logprob: -14.125070571899414

Token 1453: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -0.000672043883241713
    2. '1' → logprob: -7.875671863555908
    3. '(' → logprob: -8.500672340393066
    4. 'Node' → logprob: -10.250672340393066
    5. '(m' → logprob: -10.750672340393066
    6. '(mx' → logprob: -11.875672340393066
    7. '/' → logprob: -12.000672340393066
    8. '((' → logprob: -12.125672340393066
    9. '(Tree' → logprob: -12.750672340393066
    10. '(mid' → logprob: -13.500672340393066

Token 1454: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -0.2425532191991806
    2. 'Tree' → logprob: -1.6175532341003418
    3. 'Point' → logprob: -4.117553234100342
    4. 'My' → logprob: -7.992553234100342
    5. '(my' → logprob: -8.867552757263184
    6. '(' → logprob: -9.367552757263184
    7. '0' → logprob: -9.617552757263184
    8. '(node' → logprob: -11.367552757263184
    9. '(Tree' → logprob: -11.742552757263184
    10. 'my' → logprob: -12.242552757263184

Token 1455: '(mx' (ID: 160663)
  Prédit: '(mx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(mx' → logprob: -0.20146624743938446
    2. 'mx' → logprob: -1.7014662027359009
    3. '(my' → logprob: -10.45146656036377
    4. 'my' → logprob: -11.20146656036377
    5. ' mx' → logprob: -11.95146656036377
    6. '(' → logprob: -12.70146656036377
    7. '.mx' → logprob: -14.95146656036377
    8. ' (' → logprob: -15.70146656036377
    9. 'Mx' → logprob: -15.70146656036377
    10. '   ' → logprob: -16.576465606689453

Token 1456: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.776898251497187e-05
    2. ' ,' → logprob: -10.0000581741333
    3. ',my' → logprob: -11.6250581741333
    4. ',
' → logprob: -13.5000581741333
    5. ',m' → logprob: -14.5000581741333
    6. ',y' → logprob: -15.0000581741333
    7. '
' → logprob: -15.2500581741333
    8. '   ' → logprob: -15.5000581741333
    9. '',' → logprob: -16.000057220458984
    10. '‌,' → logprob: -16.375057220458984

Token 1457: ' my' (ID: 922)
  Prédit: 'my'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'my' → logprob: -0.00020401719666551799
    2. ' my' → logprob: -8.500204086303711
    3. '_my' → logprob: -15.750204086303711
    4. 'My' → logprob: -15.750204086303711
    5. '(my' → logprob: -16.75020408630371
    6. 'm' → logprob: -17.25020408630371
    7. '	my' → logprob: -17.62520408630371
    8. ',my' → logprob: -17.87520408630371
    9. 'y' → logprob: -18.12520408630371
    10. '
' → logprob: -18.12520408630371

Token 1458: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030412263004109263
    2. ',node' → logprob: -8.250304222106934
    3. ' ,' → logprob: -10.500304222106934
    4. ',
' → logprob: -11.625304222106934
    5. ',m' → logprob: -13.250304222106934
    6. '(node' → logprob: -13.375304222106934
    7. '```' → logprob: -14.000304222106934
    8. ',n' → logprob: -15.125304222106934
    9. '
' → logprob: -15.375304222106934
    10. '<|end|>' → logprob: -15.375304222106934

Token 1459: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0002067588793579489
    2. ' node' → logprob: -8.50020694732666
    3. '               ' → logprob: -13.25020694732666
    4. '           ' → logprob: -14.12520694732666
    5. 'self' → logprob: -15.00020694732666
    6. '(node' → logprob: -15.12520694732666
    7. '                   ' → logprob: -16.625205993652344
    8. '              ' → logprob: -17.875205993652344
    9. '[node' → logprob: -17.875205993652344
    10. '          ' → logprob: -18.000205993652344

Token 1460: '.x' (ID: 3700)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.00028970264247618616
    2. 'y' → logprob: -8.500289916992188
    3. ' node' → logprob: -10.250289916992188
    4. 'my' → logprob: -10.875289916992188
    5. '(node' → logprob: -11.125289916992188
    6. '   ' → logprob: -12.125289916992188
    7. '1' → logprob: -13.000289916992188
    8. '_node' → logprob: -13.125289916992188
    9. '.node' → logprob: -13.125289916992188
    10. '       ' → logprob: -13.250289916992188

Token 1461: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.816093228830141e-06
    2. '.' → logprob: -14.12500286102295
    3. '<|end|>' → logprob: -14.25000286102295
    4. ')' → logprob: -15.12500286102295
    5. '   ' → logprob: -15.12500286102295
    6. '           ' → logprob: -16.000001907348633
    7. '       ' → logprob: -16.000001907348633
    8. ' ' → logprob: -16.125001907348633
    9. '
' → logprob: -16.625001907348633
    10. '<|end|>' → logprob: -16.875001907348633

Token 1462: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.546478935983032e-05
    2. ' ,' → logprob: -10.750025749206543
    3. ',my' → logprob: -13.125025749206543
    4. ',m' → logprob: -13.750025749206543
    5. ',
' → logprob: -15.125025749206543
    6. '<|end|>' → logprob: -15.125025749206543
    7. ')' → logprob: -15.750025749206543
    8. '),' → logprob: -16.500024795532227
    9. '           ' → logprob: -17.000024795532227
    10. '<|end|>' → logprob: -17.125024795532227

Token 1463: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -4.8232690460281447e-05
    2. ' node' → logprob: -10.000048637390137
    3. 'self' → logprob: -12.875048637390137
    4. 'y' → logprob: -16.62504768371582
    5. '(node' → logprob: -16.87504768371582
    6. 'my' → logprob: -17.75004768371582
    7. '	node' → logprob: -19.25004768371582
    8. '.node' → logprob: -19.75004768371582
    9. '[node' → logprob: -20.00004768371582
    10. '_node' → logprob: -20.25004768371582

Token 1464: '.y' (ID: 4486)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.08153053373098373
    2. '.y' → logprob: -2.5815305709838867
    3. '1' → logprob: -6.331530570983887
    4. 'node' → logprob: -7.706530570983887
    5. 'my' → logprob: -8.456530570983887
    6. '_y' → logprob: -10.081530570983887
    7. 'self' → logprob: -10.081530570983887
    8. ' y' → logprob: -10.706530570983887
    9. '.node' → logprob: -10.706530570983887
    10. '   ' → logprob: -11.081530570983887

Token 1465: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004714210517704487
    2. 'y' → logprob: -5.379714012145996
    3. '.y' → logprob: -9.879714012145996
    4. ')' → logprob: -10.629714012145996
    5. '   ' → logprob: -12.379714012145996
    6. ' y' → logprob: -13.004714012145996
    7. 'my' → logprob: -13.004714012145996
    8. '       ' → logprob: -13.629714012145996
    9. '
' → logprob: -13.754714012145996
    10. '#' → logprob: -13.879714012145996

Token 1466: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.77022064034827e-05
    2. ',node' → logprob: -9.750097274780273
    3. ' ,' → logprob: -10.375097274780273
    4. '           ' → logprob: -12.625097274780273
    5. '               ' → logprob: -13.250097274780273
    6. '                   ' → logprob: -14.250097274780273
    7. ')' → logprob: -14.375097274780273
    8. ',
' → logprob: -14.625097274780273
    9. '),' → logprob: -14.875097274780273
    10. '       ' → logprob: -15.000097274780273

Token 1467: ' node' (ID: 4596)
  Prédit: 'node'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'node' → logprob: -0.0024876687675714493
    2. ' node' → logprob: -6.002487659454346
    3. '           ' → logprob: -12.252488136291504
    4. 'depth' → logprob: -13.502488136291504
    5. '               ' → logprob: -13.877488136291504
    6. ',' → logprob: -14.252488136291504
    7. ')' → logprob: -14.502488136291504
    8. '                   ' → logprob: -14.502488136291504
    9. '         ' → logprob: -14.877488136291504
    10. '             ' → logprob: -15.127488136291504

Token 1468: '.depth' (ID: 89791)
  Prédit: '.depth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.depth' → logprob: -0.17651791870594025
    2. 'depth' → logprob: -1.9265179634094238
    3. '1' → logprob: -4.926517963409424
    4. '+' → logprob: -5.051517963409424
    5. '_depth' → logprob: -6.926517963409424
    6. '   ' → logprob: -7.551517963409424
    7. '-depth' → logprob: -8.051517486572266
    8. ')' → logprob: -8.301517486572266
    9. '       ' → logprob: -9.301517486572266
    10. '(depth' → logprob: -9.676517486572266

Token 1469: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.7729658540920354e-05
    2. '1' → logprob: -11.000027656555176
    3. ' +' → logprob: -11.875027656555176
    4. '.' → logprob: -13.375027656555176
    5. '   ' → logprob: -14.375027656555176
    6. '2' → logprob: -14.625027656555176
    7. '+
' → logprob: -15.250027656555176
    8. '       ' → logprob: -15.375027656555176
    9. '```' → logprob: -15.750027656555176
    10. '++' → logprob: -16.000028610229492

Token 1470: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. '2' → logprob: -12.125005722045898
    3. ' ' → logprob: -16.5000057220459
    4. '   ' → logprob: -16.5000057220459
    5. '0' → logprob: -17.8750057220459
    6. '+' → logprob: -18.1250057220459
    7. '```' → logprob: -18.6250057220459
    8. ')' → logprob: -19.5000057220459
    9. '5' → logprob: -19.7500057220459
    10. '           ' → logprob: -20.2500057220459

Token 1471: ')]
' (ID: 11587)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34248143434524536
    2. ')]' → logprob: -1.7174813747406006
    3. ')]
' → logprob: -2.9674813747406006
    4. '           ' → logprob: -3.5924813747406006
    5. ')
' → logprob: -3.7174813747406006
    6. '       ' → logprob: -5.59248161315918
    7. ']' → logprob: -6.59248161315918
    8. ']
' → logprob: -7.59248161315918
    9. '         ' → logprob: -7.84248161315918
    10. '             ' → logprob: -8.21748161315918

Token 1472: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01600269228219986
    2. 'for' → logprob: -4.266002655029297
    3. '       ' → logprob: -6.891002655029297
    4. ' for' → logprob: -7.141002655029297
    5. '   ' → logprob: -10.766002655029297
    6. '            
' → logprob: -13.391002655029297
    7. '
' → logprob: -13.516002655029297
    8. 'def' → logprob: -13.641002655029297
    9. '               ' → logprob: -14.016002655029297
    10. 'return' → logprob: -14.141002655029297

Token 1473: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5776750445365906
    2. 'for' (adapté à ' for') → logprob: -0.8276750445365906
    3. ' for' → logprob: -6.452674865722656
    4. '       ' → logprob: -8.827674865722656
    5. '   ' → logprob: -12.077674865722656
    6. 'return' → logprob: -12.952674865722656
    7. '          ' → logprob: -13.827674865722656
    8. '         ' → logprob: -14.202674865722656
    9. '               ' → logprob: -14.577674865722656
    10. '	for' → logprob: -15.452674865722656

Token 1474: ' child' (ID: 2320)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -9.615255839889869e-05
    2. ' child' → logprob: -9.250096321105957
    3. 'c' → logprob: -17.50009536743164
    4. 'node' → logprob: -18.00009536743164
    5. '	child' → logprob: -18.00009536743164
    6. 'quad' → logprob: -19.12509536743164
    7. '(child' → logprob: -20.00009536743164
    8. '_child' → logprob: -22.00009536743164
    9. 'Child' → logprob: -22.62509536743164
    10. 'ch' → logprob: -22.75009536743164

Token 1475: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3868781626224518
    2. 'in' → logprob: -1.1368781328201294
    3. '	in' → logprob: -12.38687801361084
    4. '
' → logprob: -13.76187801361084
    5. ' ' → logprob: -13.76187801361084
    6. 'i' → logprob: -15.01187801361084
    7. '   ' → logprob: -16.136878967285156
    8. 'n' → logprob: -16.261878967285156
    9. '  ' → logprob: -16.511878967285156
    10. '_in' → logprob: -16.761878967285156

Token 1476: ' childs' (ID: 172090)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -2.339278580620885e-06
    2. ' childs' → logprob: -13.125001907348633
    3. 'children' → logprob: -15.125001907348633
    4. ' child' → logprob: -17.250001907348633
    5. '   ' → logprob: -19.375001907348633
    6. '
' → logprob: -19.625001907348633
    7. '	child' → logprob: -20.000001907348633
    8. '.child' → logprob: -20.000001907348633
    9. '(child' → logprob: -20.875001907348633
    10. '           ' → logprob: -21.250001907348633

Token 1477: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5111833810806274
    2. ':
' → logprob: -1.0111833810806274
    3. ':' → logprob: -3.386183261871338
    4. '):
' → logprob: -7.136183261871338
    5. '():
' → logprob: -7.261183261871338
    6. '           ' → logprob: -8.011183738708496
    7. '       ' → logprob: -8.636183738708496
    8. ',' → logprob: -8.636183738708496
    9. ' if' → logprob: -9.636183738708496
    10. '	           ' → logprob: -10.011183738708496

Token 1478: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0003345122095197439
    2. 'if' → logprob: -9.000334739685059
    3. '           ' → logprob: -9.250334739685059
    4. '       ' → logprob: -9.375334739685059
    5. ' if' → logprob: -10.875334739685059
    6. '   ' → logprob: -12.375334739685059
    7. 'return' → logprob: -12.500334739685059
    8. '                   ' → logprob: -13.625334739685059
    9. '
' → logprob: -13.875334739685059
    10. 'result' → logprob: -15.375334739685059

Token 1479: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.07910437136888504
    2. '               ' → logprob: -2.579104423522949
    3. ' if' → logprob: -8.45410442352295
    4. '           ' → logprob: -14.70410442352295
    5. 'return' → logprob: -14.70410442352295
    6. '                   ' → logprob: -15.32910442352295
    7. '
' → logprob: -15.32910442352295
    8. '   ' → logprob: -15.70410442352295
    9. '	if' → logprob: -16.329103469848633
    10. '       ' → logprob: -16.704103469848633

Token 1480: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0015046248445287347
    2. ' not' → logprob: -6.501504421234131
    3. 'check' → logprob: -14.001504898071289
    4. '               ' → logprob: -14.126504898071289
    5. '
' → logprob: -15.126504898071289
    6. '           ' → logprob: -15.251504898071289
    7. '   ' → logprob: -15.876504898071289
    8. '!' → logprob: -17.00150489807129
    9. '(not' → logprob: -17.62650489807129
    10. '       ' → logprob: -18.37650489807129

Token 1481: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.0013530949363484979
    2. 'child' → logprob: -6.7513532638549805
    3. ' check' → logprob: -8.62635326385498
    4. 'self' → logprob: -13.87635326385498
    5. '
' → logprob: -14.25135326385498
    6. ' child' → logprob: -14.87635326385498
    7. '   ' → logprob: -14.87635326385498
    8. '	check' → logprob: -15.50135326385498
    9. '(check' → logprob: -15.62635326385498
    10. '_check' → logprob: -16.001352310180664

Token 1482: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.002645098604261875
    2. '(child' → logprob: -6.377645015716553
    3. 'covered' → logprob: -7.627645015716553
    4. 'child' → logprob: -7.752645015716553
    5. '_child' → logprob: -10.752645492553711
    6. ' child' → logprob: -13.377645492553711
    7. '_cover' → logprob: -13.377645492553711
    8. 'Covered' → logprob: -14.752645492553711
    9. 'cover' → logprob: -15.502645492553711
    10. '(' → logprob: -15.502645492553711

Token 1483: 'covered' (ID: 32827)
  Prédit: 'child'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'child' → logprob: -0.47440212965011597
    2. 'covered' → logprob: -0.974402129650116
    3. '(child' → logprob: -8.22440242767334
    4. 'Covered' → logprob: -10.34940242767334
    5. ' child' → logprob: -11.84940242767334
    6. 'cover' → logprob: -12.09940242767334
    7. '-covered' → logprob: -12.22440242767334
    8. '_' → logprob: -12.22440242767334
    9. ' covered' → logprob: -14.59940242767334
    10. '_child' → logprob: -14.84940242767334

Token 1484: '(child' (ID: 34164)
  Prédit: '(child'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(child' → logprob: -3.054500666621607e-06
    2. '(' → logprob: -12.75000286102295
    3. '(
' → logprob: -16.125003814697266
    4. ' (' → logprob: -17.250003814697266
    5. 'child' → logprob: -17.250003814697266
    6. '(parent' → logprob: -20.375003814697266
    7. '(cell' → logprob: -21.125003814697266
    8. '(children' → logprob: -21.125003814697266
    9. '(chunk' → logprob: -21.500003814697266
    10. '(ch' → logprob: -21.500003814697266

Token 1485: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.062019892036914825
    2. '):' → logprob: -2.8120198249816895
    3. '):
' → logprob: -10.437020301818848
    4. '               ' → logprob: -11.312020301818848
    5. '                   ' → logprob: -12.437020301818848
    6. '           ' → logprob: -13.312020301818848
    7. ':
' → logprob: -13.562020301818848
    8. ':' → logprob: -13.562020301818848
    9. '():
' → logprob: -13.562020301818848
    10. ')' → logprob: -15.312020301818848

Token 1486: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -8.947715832618997e-05
    2. 'return' → logprob: -10.125089645385742
    3. '                       ' → logprob: -11.250089645385742
    4. '
' → logprob: -11.250089645385742
    5. '                  ' → logprob: -11.375089645385742
    6. '               ' → logprob: -12.125089645385742
    7. ' return' → logprob: -13.125089645385742
    8. '           ' → logprob: -13.625089645385742
    9. ':
' → logprob: -13.750089645385742
    10. '                    ' → logprob: -14.125089645385742

Token 1487: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3262498676776886
    2. '                   ' → logprob: -1.3262498378753662
    3. '                       ' → logprob: -4.826250076293945
    4. ' return' → logprob: -5.326250076293945
    5. '               ' → logprob: -10.701250076293945
    6. '                  ' → logprob: -14.326250076293945
    7. ':return' → logprob: -14.826250076293945
    8. '
' → logprob: -14.951250076293945
    9. '       ' → logprob: -15.201250076293945
    10. '                    ' → logprob: -15.576250076293945

Token 1488: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -9.088346359931165e-07
    2. ' False' → logprob: -14.000000953674316
    3. '(False' → logprob: -21.625
    4. 'True' → logprob: -21.75
    5. 'false' → logprob: -22.25
    6. '   ' → logprob: -23.5
    7. '=False' → logprob: -23.875
    8. 'F' → logprob: -25.0
    9. 'Fal' → logprob: -26.125
    10. '
' → logprob: -26.25

Token 1489: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007689916528761387
    2. '       ' → logprob: -4.882689952850342
    3. '
' → logprob: -9.757689476013184
    4. 'return' → logprob: -12.132689476013184
    5. '		' → logprob: -12.507689476013184
    6. '          ' → logprob: -12.632689476013184
    7. '               ' → logprob: -13.007689476013184
    8. '<|end|>' → logprob: -13.132689476013184
    9. ' return' → logprob: -13.257689476013184
    10. '        
' → logprob: -13.632689476013184

Token 1490: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.313279926776886
    2. '       ' → logprob: -1.3132798671722412
    3. 'return' → logprob: -11.81328010559082
    4. '               ' → logprob: -12.31328010559082
    5. '          ' → logprob: -13.06328010559082
    6. '
' → logprob: -14.06328010559082
    7. '```' → logprob: -14.18828010559082
    8. ' return' → logprob: -14.31328010559082
    9. '   ' → logprob: -14.68828010559082
    10. '         ' → logprob: -14.93828010559082

Token 1491: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02844380773603916
    2. '       ' → logprob: -3.6534438133239746
    3. 'return' (adapté à ' return') → logprob: -6.153443813323975
    4. ' return' → logprob: -11.278443336486816
    5. '   ' → logprob: -14.153443336486816
    6. '               ' → logprob: -15.153443336486816
    7. '          ' → logprob: -15.153443336486816
    8. '	return' → logprob: -15.403443336486816
    9. '<|end|>' → logprob: -15.653443336486816
    10. '```' → logprob: -15.903443336486816

Token 1492: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.1472419600977446e-06
    2. ' True' → logprob: -13.750000953674316
    3. 'true' → logprob: -21.250001907348633
    4. 'False' → logprob: -21.875001907348633
    5. '(True' → logprob: -22.500001907348633
    6. '
' → logprob: -23.250001907348633
    7. '=True' → logprob: -23.500001907348633
    8. '   ' → logprob: -24.625001907348633
    9. 'Tr' → logprob: -25.250001907348633
    10. '_true' → logprob: -25.625001907348633

Token 1493: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004055128898471594
    2. '        
' → logprob: -6.004055023193359
    3. '
' → logprob: -6.629055023193359
    4. 'return' → logprob: -8.87905502319336
    5. '   ' → logprob: -9.75405502319336
    6. '    
' → logprob: -10.00405502319336
    7. '  
' → logprob: -12.12905502319336
    8. '           ' → logprob: -13.37905502319336
    9. '            
' → logprob: -13.75405502319336
    10. ' return' → logprob: -14.12905502319336

Token 1494: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019221604452468455
    2. 'return' → logprob: -9.500192642211914
    3. '        
' → logprob: -9.875192642211914
    4. '   ' → logprob: -10.250192642211914
    5. '
' → logprob: -10.625192642211914
    6. '    
' → logprob: -12.625192642211914
    7. ' return' → logprob: -13.750192642211914
    8. '           ' → logprob: -14.250192642211914
    9. '  
' → logprob: -15.375192642211914
    10. 'def' → logprob: -15.750192642211914

Token 1495: ' root' (ID: 6577)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04961054399609566
    2. 'return' → logprob: -3.0496106147766113
    3. 'root' (adapté à ' root') → logprob: -7.299610614776611
    4. '
' → logprob: -8.674610137939453
    5. ' return' → logprob: -9.049610137939453
    6. '        
' → logprob: -10.299610137939453
    7. 'start' → logprob: -11.674610137939453
    8. 'node' → logprob: -12.174610137939453
    9. '   ' → logprob: -12.299610137939453
    10. 'origin' → logprob: -13.549610137939453

Token 1496: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.848347008228302
    2. ' =' → logprob: -0.848347008228302
    3. '(' → logprob: -1.9733469486236572
    4. '(root' → logprob: -6.473347187042236
    5. '=(' → logprob: -6.473347187042236
    6. '(
' → logprob: -7.723347187042236
    7. '=root' → logprob: -8.098346710205078
    8. ')' → logprob: -8.598346710205078
    9. '(Point' → logprob: -8.848346710205078
    10. '(node' → logprob: -8.973346710205078

Token 1497: ' Quad' (ID: 69708)
  Prédit: 'Quad'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Quad' → logprob: -0.0010126839624717832
    2. ' Quad' → logprob: -7.001012802124023
    3. '       ' → logprob: -10.126012802124023
    4. '0' → logprob: -10.376012802124023
    5. 'Screen' → logprob: -11.251012802124023
    6. '   ' → logprob: -11.751012802124023
    7. 'Quadr' → logprob: -13.001012802124023
    8. 'Root' → logprob: -13.251012802124023
    9. 'Qu' → logprob: -13.501012802124023
    10. 'root' → logprob: -13.626012802124023

Token 1498: 'Tree' (ID: 8062)
  Prédit: 'Tree'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Tree' → logprob: -6.704273118884885e-07
    2. 'tree' → logprob: -15.875000953674316
    3. 'ree' → logprob: -16.125
    4. ' Tree' → logprob: -16.25
    5. '(Tree' → logprob: -16.75
    6. 'Tre' → logprob: -17.375
    7. '	Tree' → logprob: -17.625
    8. 'TREE' → logprob: -17.625
    9. '_tree' → logprob: -18.0
    10. '_TREE' → logprob: -18.75

Token 1499: 'Node' (ID: 2701)
  Prédit: 'Node'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Node' → logprob: -7.016616291366518e-05
    2. 'ree' → logprob: -9.750070571899414
    3. 'node' → logprob: -12.375070571899414
    4. 'ode' → logprob: -12.750070571899414
    5. 'Tree' → logprob: -13.625070571899414
    6. '(' → logprob: -14.000070571899414
    7. 'root' → logprob: -14.500070571899414
    8. ' Node' → logprob: -14.625070571899414
    9. '(root' → logprob: -14.750070571899414
    10. 'ee' → logprob: -15.125070571899414

Token 1500: '(self' (ID: 2402)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029781844466924667
    2. '(' → logprob: -3.5297818183898926
    3. 'self' → logprob: -11.15478229522705
    4. '(self' → logprob: -11.40478229522705
    5. '(
' → logprob: -12.77978229522705
    6. '       ' → logprob: -13.27978229522705
    7. ' ' → logprob: -14.15478229522705
    8. '   ' → logprob: -14.77978229522705
    9. ' (' → logprob: -16.279781341552734
    10. '```' → logprob: -16.279781341552734

Token 1501: '.radius' (ID: 73491)
  Prédit: '.radius'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.radius' → logprob: -0.18008169531822205
    2. '0' → logprob: -1.9300817251205444
    3. 'radius' → logprob: -4.055081844329834
    4. '   ' → logprob: -6.680081844329834
    5. 'self' → logprob: -7.305081844329834
    6. '       ' → logprob: -9.055081367492676
    7. '.' → logprob: -9.430081367492676
    8. ' ' → logprob: -10.305081367492676
    9. '_radius' → logprob: -10.555081367492676
    10. '(radius' → logprob: -10.680081367492676

Token 1502: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001290454383706674
    2. ',self' → logprob: -9.750128746032715
    3. ',
' → logprob: -10.000128746032715
    4. ' ,' → logprob: -11.250128746032715
    5. '       ' → logprob: -11.750128746032715
    6. '   ' → logprob: -12.875128746032715
    7. ')' → logprob: -14.625128746032715
    8. 'self' → logprob: -15.250128746032715
    9. '<|end|>' → logprob: -15.375128746032715
    10. '           ' → logprob: -15.500128746032715

Token 1503: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.8624639324116288e-06
    2. ' self' → logprob: -13.625001907348633
    3. '       ' → logprob: -14.375001907348633
    4. '           ' → logprob: -18.500001907348633
    5. '   ' → logprob: -19.375001907348633
    6. '	self' → logprob: -19.875001907348633
    7. '(self' → logprob: -20.000001907348633
    8. '=self' → logprob: -20.375001907348633
    9. '[self' → logprob: -21.000001907348633
    10. '         ' → logprob: -21.250001907348633

Token 1504: '.radius' (ID: 73491)
  Prédit: 'radius'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'radius' → logprob: -0.07015727460384369
    2. '.radius' → logprob: -2.945157289505005
    3. 'self' → logprob: -4.195157051086426
    4. '_radius' → logprob: -10.195157051086426
    5. ' radius' → logprob: -10.945157051086426
    6. 'Radius' → logprob: -11.570157051086426
    7. '   ' → logprob: -11.695157051086426
    8. '-radius' → logprob: -12.570157051086426
    9. 'r' → logprob: -13.195157051086426
    10. '       ' → logprob: -13.320157051086426

Token 1505: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00015347852604463696
    2. ',
' → logprob: -8.875153541564941
    3. ' ,' → logprob: -11.750153541564941
    4. ',self' → logprob: -12.875153541564941
    5. '       ' → logprob: -13.500153541564941
    6. 'self' → logprob: -14.000153541564941
    7. '   ' → logprob: -14.250153541564941
    8. '           ' → logprob: -16.125152587890625
    9. ',\
' → logprob: -16.625152587890625
    10. ',

' → logprob: -16.750152587890625

Token 1506: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.978233846486546e-05
    2. ' self' → logprob: -10.500049591064453
    3. '       ' → logprob: -10.750049591064453
    4. '           ' → logprob: -15.000049591064453
    5. '(self' → logprob: -15.125049591064453
    6. '	self' → logprob: -16.250049591064453
    7. '   ' → logprob: -16.875049591064453
    8. '
' → logprob: -17.250049591064453
    9. '[self' → logprob: -18.000049591064453
    10. '               ' → logprob: -18.125049591064453

Token 1507: '.width' (ID: 11038)
  Prédit: 'width'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'width' → logprob: -0.3890395760536194
    2. 'self' → logprob: -1.1390395164489746
    3. '.width' → logprob: -6.139039516448975
    4. ' width' → logprob: -12.264039993286133
    5. ' self' → logprob: -13.139039993286133
    6. 'Width' → logprob: -14.764039993286133
    7. '
' → logprob: -14.764039993286133
    8. 'w' → logprob: -15.014039993286133
    9. '```' → logprob: -15.014039993286133
    10. '   ' → logprob: -15.389039993286133

Token 1508: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.11303834617137909
    2. '-' → logprob: -2.2380383014678955
    3. 'self' → logprob: -9.363038063049316
    4. ' ' → logprob: -9.738038063049316
    5. '-self' → logprob: -10.863038063049316
    6. '   ' → logprob: -11.613038063049316
    7. '       ' → logprob: -11.863038063049316
    8. ',' → logprob: -12.113038063049316
    9. '-
' → logprob: -12.113038063049316
    10. ')' → logprob: -12.363038063049316

Token 1509: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.710618905955926e-05
    2. ' self' → logprob: -9.250097274780273
    3. '       ' → logprob: -14.000097274780273
    4. '   ' → logprob: -17.125097274780273
    5. '           ' → logprob: -17.500097274780273
    6. '
' → logprob: -19.000097274780273
    7. '(self' → logprob: -19.125097274780273
    8. '	self' → logprob: -19.500097274780273
    9. '               ' → logprob: -20.000097274780273
    10. '[self' → logprob: -20.000097274780273

Token 1510: '.radius' (ID: 73491)
  Prédit: '.radius'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.radius' → logprob: -0.006769126281142235
    2. 'radius' → logprob: -5.006769180297852
    3. 'self' → logprob: -10.006769180297852
    4. '_radius' → logprob: -12.006769180297852
    5. ' radius' → logprob: -13.256769180297852
    6. 'Radius' → logprob: -14.631769180297852
    7. '_RADIUS' → logprob: -15.881769180297852
    8. '-radius' → logprob: -16.13176918029785
    9. 'adius' → logprob: -17.13176918029785
    10. '.self' → logprob: -17.88176918029785

Token 1511: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009314678027294576
    2. '-' → logprob: -7.250931262969971
    3. ' -' → logprob: -8.875931739807129
    4. ',
' → logprob: -10.375931739807129
    5. ' ,' → logprob: -10.500931739807129
    6. 'self' → logprob: -12.125931739807129
    7. '       ' → logprob: -12.250931739807129
    8. '   ' → logprob: -12.750931739807129
    9. '```' → logprob: -12.750931739807129
    10. ',self' → logprob: -13.125931739807129

Token 1512: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0005575587856583297
    2. ' self' → logprob: -7.5005574226379395
    3. '       ' → logprob: -12.375557899475098
    4. '           ' → logprob: -15.875557899475098
    5. '(self' → logprob: -16.37555694580078
    6. '	self' → logprob: -16.87555694580078
    7. '               ' → logprob: -17.62555694580078
    8. '        ' → logprob: -18.12555694580078
    9. '         ' → logprob: -18.37555694580078
    10. '
' → logprob: -18.37555694580078

Token 1513: '.height' (ID: 11682)
  Prédit: '.radius'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.radius' → logprob: -0.1368490755558014
    2. 'radius' → logprob: -2.1368491649627686
    3. 'self' → logprob: -4.6368489265441895
    4. '_radius' → logprob: -8.886849403381348
    5. ' radius' → logprob: -10.386849403381348
    6. '.height' → logprob: -11.636849403381348
    7. '       ' → logprob: -13.636849403381348
    8. '_RADIUS' → logprob: -13.761849403381348
    9. 'Radius' → logprob: -13.886849403381348
    10. '   ' → logprob: -14.011849403381348

Token 1514: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.160269632935524
    2. '-' → logprob: -1.9102696180343628
    3. ' ' → logprob: -10.785269737243652
    4. '   ' → logprob: -11.910269737243652
    5. '-self' → logprob: -12.035269737243652
    6. '-radius' → logprob: -12.285269737243652
    7. 'self' → logprob: -12.535269737243652
    8. '       ' → logprob: -13.035269737243652
    9. ' self' → logprob: -14.285269737243652
    10. '  ' → logprob: -15.160269737243652

Token 1515: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -5.2166411478538066e-05
    2. ' self' → logprob: -9.875052452087402
    3. '(self' → logprob: -15.500052452087402
    4. '       ' → logprob: -16.000051498413086
    5. '   ' → logprob: -16.125051498413086
    6. 'radius' → logprob: -17.000051498413086
    7. '[self' → logprob: -17.125051498413086
    8. '	self' → logprob: -17.250051498413086
    9. '=self' → logprob: -17.625051498413086
    10. '           ' → logprob: -17.625051498413086

Token 1516: '.radius' (ID: 73491)
  Prédit: 'radius'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'radius' → logprob: -0.019251860678195953
    2. '_radius' → logprob: -4.019251823425293
    3. 'self' → logprob: -7.394251823425293
    4. '.radius' → logprob: -7.894251823425293
    5. ' radius' → logprob: -9.894251823425293
    6. 'th' → logprob: -10.769251823425293
    7. 'r' → logprob: -11.144251823425293
    8. 'radi' → logprob: -12.019251823425293
    9. '-radius' → logprob: -12.144251823425293
    10. '_RADIUS' → logprob: -12.269251823425293

Token 1517: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0015305745182558894
    2. '       ' → logprob: -6.501530647277832
    3. ')
' → logprob: -10.751530647277832
    4. '   ' → logprob: -12.001530647277832
    5. ',' → logprob: -15.126530647277832
    6. ' )' → logprob: -15.501530647277832
    7. ')`' → logprob: -16.626529693603516
    8. '))' → logprob: -16.751529693603516
    9. '      ' → logprob: -16.876529693603516
    10. '),' → logprob: -17.001529693603516

Token 1518: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '           ' → logprob: -16.25
    3. ' ' → logprob: -16.75
    4. '       ' → logprob: -17.75
    5. '   ' → logprob: -21.5
    6. '               ' → logprob: -21.875
    7. '                   ' → logprob: -23.625
    8. '        ' → logprob: -24.5
    9. '                           ' → logprob: -24.5
    10. '          ' → logprob: -24.5

Token 1519: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -16.375
    3. '           ' → logprob: -17.0
    4. '       ' → logprob: -17.75
    5. '   ' → logprob: -19.875
    6. '
' → logprob: -21.25
    7. '               ' → logprob: -21.625
    8. '۰' → logprob: -22.375
    9. '        ' → logprob: -22.875
    10. '                   ' → logprob: -23.0

Token 1520: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008234490524046123
    2. '       ' → logprob: -7.250823497772217
    3. ')
' → logprob: -9.125823020935059
    4. '   ' → logprob: -12.375823020935059
    5. ' )' → logprob: -16.125823974609375
    6. ')
' → logprob: -16.625823974609375
    7. ')`' → logprob: -16.875823974609375
    8. '`)' → logprob: -17.625823974609375
    9. '           ' → logprob: -17.875823974609375
    10. ')return' → logprob: -18.250823974609375

Token 1521: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005556552205234766
    2. 'return' → logprob: -7.500555515289307
    3. ' return' → logprob: -13.125555992126465
    4. '   ' → logprob: -14.250555992126465
    5. '
' → logprob: -16.62555503845215
    6. '           ' → logprob: -17.00055503845215
    7. '        
' → logprob: -17.25055503845215
    8. '      ' → logprob: -18.50055503845215
    9. '	return' → logprob: -18.62555503845215
    10. '	' → logprob: -18.87555503845215

Token 1522: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0380634106695652
    2. 'return' → logprob: -3.2880635261535645
    3. ' return' → logprob: -10.913063049316406
    4. '   ' → logprob: -12.538063049316406
    5. '
' → logprob: -15.788063049316406
    6. '           ' → logprob: -17.413063049316406
    7. '      ' → logprob: -18.288063049316406
    8. '	return' → logprob: -18.288063049316406
    9. '	' → logprob: -18.538063049316406
    10. 'result' → logprob: -18.663063049316406

Token 1523: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02976345270872116
    2. '       ' → logprob: -3.5297634601593018
    3. ' return' → logprob: -11.279763221740723
    4. '   ' → logprob: -15.654763221740723
    5. '
' → logprob: -16.40476417541504
    6. '```' → logprob: -17.02976417541504
    7. '	return' → logprob: -17.65476417541504
    8. 'result' → logprob: -18.27976417541504
    9. '{return' → logprob: -18.40476417541504
    10. ')return' → logprob: -19.52976417541504

Token 1524: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0004315036640036851
    2. ' not' → logprob: -7.750431537628174
    3. 'check' → logprob: -14.125431060791016
    4. '!' → logprob: -16.875431060791016
    5. '(not' → logprob: -17.625431060791016
    6. '	not' → logprob: -19.125431060791016
    7. '   ' → logprob: -19.375431060791016
    8. 'False' → logprob: -19.750431060791016
    9. '
' → logprob: -20.500431060791016
    10. ' ' → logprob: -20.625431060791016

Token 1525: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.00043102685594931245
    2. ' check' → logprob: -7.750431060791016
    3. '(check' → logprob: -14.750431060791016
    4. '	check' → logprob: -20.250431060791016
    5. '   ' → logprob: -21.375431060791016
    6. 'chec' → logprob: -22.750431060791016
    7. 'checked' → logprob: -23.125431060791016
    8. ' ' → logprob: -23.375431060791016
    9. ' ' → logprob: -23.625431060791016
    10. '_check' → logprob: -23.750431060791016

Token 1526: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.668304245569743e-05
    2. 'root' → logprob: -10.625046730041504
    3. 'covered' → logprob: -10.875046730041504
    4. '(root' → logprob: -13.000046730041504
    5. '_root' → logprob: -14.500046730041504
    6. 'Covered' → logprob: -15.000046730041504
    7. '[root' → logprob: -15.875046730041504
    8. '-covered' → logprob: -16.500045776367188
    9. '_cover' → logprob: -17.000045776367188
    10. '\' → logprob: -17.500045776367188

Token 1527: 'covered' (ID: 32827)
  Prédit: 'covered'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'covered' → logprob: -3.5120287066092715e-05
    2. 'root' → logprob: -10.750035285949707
    3. 'Covered' → logprob: -11.750035285949707
    4. '-covered' → logprob: -12.375035285949707
    5. 'cover' → logprob: -14.125035285949707
    6. '_' → logprob: -14.500035285949707
    7. ' covered' → logprob: -15.625035285949707
    8. '(root' → logprob: -16.87503433227539
    9. 'coverage' → logprob: -17.25003433227539
    10. '
' → logprob: -18.25003433227539

Token 1528: '(root' (ID: 17410)
  Prédit: '(root'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(root' → logprob: -3.7697225252486533e-06
    2. '(' → logprob: -12.875003814697266
    3. '(parent' → logprob: -14.750003814697266
    4. '(node' → logprob: -15.250003814697266
    5. ' (' → logprob: -15.375003814697266
    6. 'root' → logprob: -16.125003814697266
    7. '(ROOT' → logprob: -16.875003814697266
    8. '[root' → logprob: -17.000003814697266
    9. '(rest' → logprob: -17.750003814697266
    10. '(return' → logprob: -18.125003814697266

Token 1529: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -2.618001053633634e-05
    2. '())' → logprob: -10.875025749206543
    3. ' )' → logprob: -12.500025749206543
    4. '()' → logprob: -13.375025749206543
    5. ')
' → logprob: -13.750025749206543
    6. '))' → logprob: -14.875025749206543
    7. '   ' → logprob: -15.000025749206543
    8. ')return' → logprob: -16.87502670288086
    9. ')}' → logprob: -17.25002670288086
    10. ')`' → logprob: -17.50002670288086

Token 1530: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1531: ' parse' (ID: 8420)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.0542946457862854
    2. ' test' → logprob: -4.179294586181641
    3. 'main' → logprob: -4.304294586181641
    4. ' safe' → logprob: -4.429294586181641
    5. ' example' → logprob: -5.054294586181641
    6. ' run' → logprob: -7.054294586181641
    7. ' solve' → logprob: -7.179294586181641
    8. 'example' → logprob: -7.179294586181641
    9. ' find' → logprob: -7.679294586181641
    10. '__' → logprob: -7.804294586181641

Token 1532: '_input' (ID: 12507)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1533: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.06258542090654373
    2. '():
' → logprob: -2.8125853538513184
    3. '(line' → logprob: -8.687585830688477
    4. '(lines' → logprob: -8.937585830688477
    5. '(input' → logprob: -8.937585830688477
    6. '_line' → logprob: -9.687585830688477
    7. '(prompt' → logprob: -10.187585830688477
    8. '()' → logprob: -10.437585830688477
    9. '(' → logprob: -11.062585830688477
    10. '(text' → logprob: -11.312585830688477

Token 1534: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19650015234947205
    2. 'import' → logprob: -1.9465001821517944
    3. ' import' → logprob: -3.446500062942505
    4. '```' → logprob: -6.321500301361084
    5. '
' → logprob: -6.946500301361084
    6. 'n' → logprob: -7.821500301361084
    7. '	import' → logprob: -8.071499824523926
    8. ' n' → logprob: -9.446499824523926
    9. '   ' → logprob: -9.446499824523926
    10. 'def' → logprob: -9.946499824523926

Token 1535: ' import' (ID: 1588)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.435508668422699
    2. 'import' (adapté à ' import') → logprob: -1.1855087280273438
    3. ' n' → logprob: -3.4355087280273438
    4. ' import' → logprob: -4.435508728027344
    5. '   ' → logprob: -5.685508728027344
    6. 'N' → logprob: -11.685508728027344
    7. '```' → logprob: -12.310508728027344
    8. 'num' → logprob: -12.685508728027344
    9. '	n' → logprob: -13.560508728027344
    10. '
' → logprob: -13.935508728027344

Token 1536: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -6.682846287731081e-05
    2. ' sys' → logprob: -9.750066757202148
    3. 'math' → logprob: -12.000066757202148
    4. '=sys' → logprob: -13.000066757202148
    5. '	sys' → logprob: -17.12506675720215
    6. '(sys' → logprob: -17.75006675720215
    7. '_sys' → logprob: -20.37506675720215
    8. 'stdin' → logprob: -20.62506675720215
    9. 'io' → logprob: -21.12506675720215
    10. '```' → logprob: -21.25006675720215

Token 1537: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.41074851155281067
    2. '
' → logprob: -1.1607484817504883
    3. ' lines' → logprob: -4.785748481750488
    4. 'data' → logprob: -5.410748481750488
    5. '    
' → logprob: -5.910748481750488
    6. 'for' → logprob: -6.160748481750488
    7. 'n' → logprob: -6.160748481750488
    8. 'lines' → logprob: -6.910748481750488
    9. ' for' → logprob: -7.410748481750488
    10. ' line' → logprob: -7.410748481750488

Token 1538: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.28741690516471863
    2. ' lines' → logprob: -1.662416934967041
    3. '
' → logprob: -3.662416934967041
    4. 'data' → logprob: -4.287416934967041
    5. 'lines' → logprob: -4.662416934967041
    6. 'input' → logprob: -6.037416934967041
    7. ' line' → logprob: -6.162416934967041
    8. 'for' → logprob: -6.662416934967041
    9. 'line' → logprob: -7.162416934967041
    10. ' for' → logprob: -7.162416934967041

Token 1539: ' for' (ID: 395)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6221573948860168
    2. '   ' → logprob: -1.122157335281372
    3. 'lines' → logprob: -2.747157335281372
    4. 'input' → logprob: -2.997157335281372
    5. 'data' → logprob: -3.872157335281372
    6. 'line' → logprob: -7.122157573699951
    7. '
' → logprob: -7.122157573699951
    8. 'def' → logprob: -8.122157096862793
    9. ' n' → logprob: -8.247157096862793
    10. 'r' → logprob: -8.497157096862793

Token 1540: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.20143623650074005
    2. 'line' → logprob: -1.7014362812042236
    3. '	line' → logprob: -11.076436042785645
    4. '=line' → logprob: -12.201436042785645
    5. '_line' → logprob: -13.201436042785645
    6. '(line' → logprob: -15.826436042785645
    7. '#line' → logprob: -15.951436042785645
    8. '[line' → logprob: -16.70143699645996
    9. 'eline' → logprob: -17.20143699645996
    10. ' linha' → logprob: -17.32643699645996

Token 1541: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012768260203301907
    2. 'in' → logprob: -4.387768268585205
    3. '   ' → logprob: -10.012767791748047
    4. ' ' → logprob: -10.012767791748047
    5. '[' → logprob: -10.762767791748047
    6. '    ' → logprob: -11.137767791748047
    7. '():
' → logprob: -11.387767791748047
    8. '[line' → logprob: -11.387767791748047
    9. 'line' → logprob: -11.512767791748047
    10. '.rstrip' → logprob: -11.762767791748047

Token 1542: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.000431861262768507
    2. ' sys' → logprob: -7.750432014465332
    3. '(sys' → logprob: -14.500432014465332
    4. '=sys' → logprob: -14.750432014465332
    5. '	sys' → logprob: -16.125431060791016
    6. 'line' → logprob: -17.000431060791016
    7. 'stdin' → logprob: -17.625431060791016
    8. '```' → logprob: -17.750431060791016
    9. 'iter' → logprob: -19.000431060791016
    10. '
' → logprob: -19.000431060791016

Token 1543: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.008848085068166256
    2. 'stdin' → logprob: -4.758848190307617
    3. ' stdin' → logprob: -9.008848190307617
    4. '(stdin' → logprob: -9.383848190307617
    5. '.stdout' → logprob: -11.008848190307617
    6. '.argv' → logprob: -11.883848190307617
    7. '.readline' → logprob: -13.758848190307617
    8. '.' → logprob: -14.758848190307617
    9. '   ' → logprob: -14.758848190307617
    10. '.stderr' → logprob: -15.008848190307617

Token 1544: ':
' (ID: 734)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.011934857815504074
    2. '():
' → logprob: -5.136934757232666
    3. ':
' → logprob: -6.386934757232666
    4. '   ' → logprob: -6.636934757232666
    5. '.readlines' → logprob: -7.761934757232666
    6. '.' → logprob: -8.136935234069824
    7. ' readline' → logprob: -8.136935234069824
    8. '().' → logprob: -8.261935234069824
    9. '```' → logprob: -8.261935234069824
    10. ':' → logprob: -8.261935234069824

Token 1545: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.043760545551776886
    2. '       ' → logprob: -3.1687605381011963
    3. ' if' → logprob: -7.668760776519775
    4. '```' → logprob: -9.293760299682617
    5. ' line' → logprob: -9.668760299682617
    6. '    
' → logprob: -10.418760299682617
    7. 'tokens' → logprob: -10.668760299682617
    8. ' token' → logprob: -11.168760299682617
    9. ' tokens' → logprob: -11.293760299682617
    10. ',' → logprob: -11.543760299682617

Token 1546: ' if' (ID: 538)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.2772245407104492
    2. ' line' → logprob: -1.7772245407104492
    3. '       ' → logprob: -2.777224540710449
    4. ' if' → logprob: -5.527224540710449
    5. 'if' (adapté à ' if') → logprob: -5.652224540710449
    6. '=line' → logprob: -6.402224540710449
    7. ' stripped' → logprob: -7.902224540710449
    8. '	line' → logprob: -7.902224540710449
    9. '   ' → logprob: -8.52722454071045
    10. '#line' → logprob: -8.52722454071045

Token 1547: ' not' (ID: 625)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.9853925108909607
    2. ' line' → logprob: -1.2353925704956055
    3. ' not' → logprob: -1.2353925704956055
    4. 'not' → logprob: -3.1103925704956055
    5. '=line' → logprob: -7.3603925704956055
    6. '#line' → logprob: -10.735392570495605
    7. '(line' → logprob: -11.360392570495605
    8. '   ' → logprob: -12.110392570495605
    9. '	line' → logprob: -13.110392570495605
    10. '[line' → logprob: -13.110392570495605

Token 1548: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.10020678490400314
    2. ' line' → logprob: -2.3502068519592285
    3. '(line' → logprob: -16.72520637512207
    4. '=line' → logprob: -16.85020637512207
    5. '#line' → logprob: -17.47520637512207
    6. '	line' → logprob: -18.10020637512207
    7. '_line' → logprob: -19.22520637512207
    8. '
' → logprob: -20.10020637512207
    9. '[line' → logprob: -20.35020637512207
    10. ' ' → logprob: -20.72520637512207

Token 1549: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.004059163853526115
    2. '.' → logprob: -5.879059314727783
    3. 'strip' → logprob: -6.754059314727783
    4. '.rstrip' → logprob: -10.129058837890625
    5. '_strip' → logprob: -11.504058837890625
    6. '.startswith' → logprob: -11.629058837890625
    7. '   ' → logprob: -11.754058837890625
    8. ':' → logprob: -11.879058837890625
    9. ':
' → logprob: -12.754058837890625
    10. ' .' → logprob: -12.879058837890625

Token 1550: '():
' (ID: 8595)
  Prédit: '():
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():
' → logprob: -0.3870354890823364
    2. '():' → logprob: -1.1370354890823364
    3. '()' → logprob: -9.387035369873047
    4. ':
' → logprob: -10.137035369873047
    5. '():
' → logprob: -10.637035369873047
    6. ':' → logprob: -11.137035369873047
    7. '():

' → logprob: -14.137035369873047
    8. '().' → logprob: -14.387035369873047
    9. ' ():' → logprob: -15.262035369873047
    10. '()
' → logprob: -15.512035369873047

Token 1551: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0037121959030628204
    2. '       ' → logprob: -5.628712177276611
    3. ':' → logprob: -10.62871265411377
    4. '	       ' → logprob: -10.87871265411377
    5. ':
' → logprob: -10.87871265411377
    6. ',' → logprob: -11.25371265411377
    7. ' continue' → logprob: -11.87871265411377
    8. ' =' → logprob: -12.12871265411377
    9. 'continue' → logprob: -12.37871265411377
    10. '   ' → logprob: -12.62871265411377

Token 1552: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.588093101978302
    2. 'continue' (adapté à ' continue') → logprob: -0.838093101978302
    3. ' break' → logprob: -5.213093280792236
    4. ' continue' → logprob: -5.463093280792236
    5. '       ' → logprob: -6.838093280792236
    6. '           ' → logprob: -7.213093280792236
    7. 'return' → logprob: -7.463093280792236
    8. '               ' → logprob: -12.713092803955078
    9. ' return' → logprob: -12.963092803955078
    10. '	break' → logprob: -13.463092803955078

Token 1553: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009486184571869671
    2. '   ' → logprob: -8.000948905944824
    3. ' yield' → logprob: -8.125948905944824
    4. 'yield' → logprob: -8.625948905944824
    5. ' parts' → logprob: -10.250948905944824
    6. '```' → logprob: -10.500948905944824
    7. ' tokens' → logprob: -10.750948905944824
    8. 'tokens' → logprob: -11.000948905944824
    9. '           ' → logprob: -11.875948905944824
    10. '	yield' → logprob: -12.000948905944824

Token 1554: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011641718447208405
    2. '   ' → logprob: -9.500116348266602
    3. 'tokens' → logprob: -11.250116348266602
    4. ' tokens' → logprob: -12.250116348266602
    5. '<|end|>' → logprob: -12.375116348266602
    6. ' parts' → logprob: -12.625116348266602
    7. '```' → logprob: -12.625116348266602
    8. 'yield' → logprob: -12.875116348266602
    9. 'def' → logprob: -13.000116348266602
    10. ',' → logprob: -13.250116348266602

Token 1555: ' W' (ID: 486)
  Prédit: 'parts'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parts' → logprob: -0.6038585305213928
    2. '       ' → logprob: -0.9788585305213928
    3. 'tokens' → logprob: -3.353858470916748
    4. 'n' → logprob: -4.478858470916748
    5. ' parts' → logprob: -4.603858470916748
    6. 'args' → logprob: -4.853858470916748
    7. 'yield' → logprob: -4.978858470916748
    8. 'fields' → logprob: -6.353858470916748
    9. 'data' → logprob: -6.728858470916748
    10. '   ' → logprob: -6.853858470916748

Token 1556: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016092435689643025
    2. '=' → logprob: -7.0016093254089355
    3. ' =' → logprob: -7.5016093254089355
    4. ' ,' → logprob: -9.251608848571777
    5. '   ' → logprob: -11.126608848571777
    6. ',width' → logprob: -12.001608848571777
    7. '=int' → logprob: -12.501608848571777
    8. ' ' → logprob: -12.501608848571777
    9. '  ' → logprob: -13.001608848571777
    10. 'IDTH' → logprob: -13.126608848571777

Token 1557: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -5.836499985889532e-05
    2. ' H' → logprob: -9.7500581741333
    3. '   ' → logprob: -19.250059127807617
    4. ' ' → logprob: -20.125059127807617
    5. ',H' → logprob: -20.250059127807617
    6. '
' → logprob: -20.375059127807617
    7. '       ' → logprob: -20.375059127807617
    8. '
' → logprob: -20.625059127807617
    9. '    ' → logprob: -20.750059127807617
    10. '  ' → logprob: -20.750059127807617

Token 1558: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.14484280347824097
    2. '=' → logprob: -2.0198428630828857
    3. ' =' → logprob: -6.269842624664307
    4. ' ,' → logprob: -8.394843101501465
    5. '<|end|>' → logprob: -10.894843101501465
    6. ',W' → logprob: -11.269843101501465
    7. '=int' → logprob: -12.644843101501465
    8. ',w' → logprob: -13.144843101501465
    9. ',int' → logprob: -13.519843101501465
    10. ' ' → logprob: -13.644843101501465

Token 1559: ' N' (ID: 478)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.22551167011260986
    2. 'N' → logprob: -1.7255116701126099
    3. 'M' → logprob: -3.9755115509033203
    4. 'r' → logprob: -5.85051155090332
    5. ' R' → logprob: -6.72551155090332
    6. 'T' → logprob: -7.35051155090332
    7. ' N' → logprob: -9.47551155090332
    8. 'L' → logprob: -10.35051155090332
    9. 'n' → logprob: -10.35051155090332
    10. 'radius' → logprob: -10.35051155090332

Token 1560: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39539945125579834
    2. ',' → logprob: -1.1453994512557983
    3. ' =' → logprob: -4.770399570465088
    4. ')' → logprob: -12.14539909362793
    5. ' ,' → logprob: -13.02039909362793
    6. '<|end|>' → logprob: -13.14539909362793
    7. ',W' → logprob: -14.39539909362793
    8. '=int' → logprob: -14.64539909362793
    9. '=
' → logprob: -14.64539909362793
    10. '=line' → logprob: -14.64539909362793

Token 1561: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.23847073316574097
    2. 'r' → logprob: -1.6134707927703857
    3. 'M' → logprob: -5.363470554351807
    4. '=' → logprob: -5.613470554351807
    5. 'radius' → logprob: -6.113470554351807
    6. ' R' → logprob: -6.863470554351807
    7. ' =' → logprob: -7.488470554351807
    8. '_r' → logprob: -9.113471031188965
    9. '*' → logprob: -9.113471031188965
    10. 'T' → logprob: -9.238471031188965

Token 1562: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0196267981082201
    2. ' =' → logprob: -4.019626617431641
    3. ',' → logprob: -6.519626617431641
    4. ')' → logprob: -14.51962661743164
    5. '=line' → logprob: -15.14462661743164
    6. ')=' → logprob: -16.01962661743164
    7. '<|end|>' → logprob: -16.14462661743164
    8. '=int' → logprob: -16.14462661743164
    9. ' ' → logprob: -16.64462661743164
    10. ' ,' → logprob: -16.64462661743164

Token 1563: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.5785607695579529
    2. 'map' → logprob: -0.8285607695579529
    3. 'line' → logprob: -6.578560829162598
    4. ' line' → logprob: -6.828560829162598
    5. '[line' → logprob: -9.703560829162598
    6. '[' → logprob: -10.078560829162598
    7. '(map' → logprob: -10.828560829162598
    8. '*' → logprob: -11.328560829162598
    9. '(line' → logprob: -12.578560829162598
    10. '=line' → logprob: -13.203560829162598

Token 1564: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.16024211049079895
    2. 'int' → logprob: -1.9102420806884766
    3. 'str' → logprob: -11.535242080688477
    4. '[int' → logprob: -12.535242080688477
    5. '(str' → logprob: -12.785242080688477
    6. '=int' → logprob: -13.535242080688477
    7. ' int' → logprob: -15.910242080688477
    8. '<int' → logprob: -16.035242080688477
    9. '```' → logprob: -17.285242080688477
    10. 'lambda' → logprob: -17.785242080688477

Token 1565: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9154691100120544
    2. '(line' → logprob: -1.0404691696166992
    3. ',line' → logprob: -1.4154691696166992
    4. '=line' → logprob: -6.790469169616699
    5. '[line' → logprob: -7.040469169616699
    6. ' line' → logprob: -7.415469169616699
    7. 'line' → logprob: -7.415469169616699
    8. ')' → logprob: -8.5404691696167
    9. '#line' → logprob: -9.1654691696167
    10. '<|end|>' → logprob: -11.0404691696167

Token 1566: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -4.370294846012257e-05
    2. ' line' → logprob: -10.500043869018555
    3. '[line' → logprob: -11.625043869018555
    4. '(line' → logprob: -12.125043869018555
    5. '=line' → logprob: -13.625043869018555
    6. '#line' → logprob: -15.250043869018555
    7. ',line' → logprob: -16.500043869018555
    8. '	line' → logprob: -17.375043869018555
    9. '
' → logprob: -18.250043869018555
    10. ')' → logprob: -18.500043869018555

Token 1567: '.strip' (ID: 40613)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.022170566022396088
    2. '.strip' → logprob: -4.022170543670654
    3. '.split' → logprob: -5.522170543670654
    4. '.' → logprob: -11.397171020507812
    5. 'strip' → logprob: -13.272171020507812
    6. '.rstrip' → logprob: -14.272171020507812
    7. 'split' → logprob: -14.522171020507812
    8. ' .' → logprob: -14.772171020507812
    9. '()' → logprob: -15.147171020507812
    10. '.readline' → logprob: -15.522171020507812

Token 1568: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.128163257315464e-07
    2. '.split' → logprob: -15.5
    3. '()' → logprob: -17.125
    4. ' ().' → logprob: -20.5
    5. 'split' → logprob: -20.5
    6. '   ' → logprob: -21.25
    7. '('').' → logprob: -22.25
    8. '(' → logprob: -22.375
    9. '()
' → logprob: -22.5
    10. '()[' → logprob: -23.75

Token 1569: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.512236498361744e-07
    2. '.split' → logprob: -15.625000953674316
    3. '(split' → logprob: -15.750000953674316
    4. ' split' → logprob: -16.375
    5. 'plit' → logprob: -18.25
    6. 'rstrip' → logprob: -18.5
    7. 'strip' → logprob: -19.75
    8. 'spl' → logprob: -20.0
    9. '```' → logprob: -20.5
    10. '().' → logprob: -22.0

Token 1570: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.15702813863754272
    2. ')' → logprob: -2.2820281982421875
    3. '()' → logprob: -3.1570281982421875
    4. '(' → logprob: -8.282028198242188
    5. '('' → logprob: -8.782028198242188
    6. '())
' → logprob: -8.907028198242188
    7. '(),' → logprob: -9.657028198242188
    8. '(','' → logprob: -10.282028198242188
    9. ' )' → logprob: -11.157028198242188
    10. '());' → logprob: -11.657028198242188

Token 1571: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025672181509435177
    2. '   ' → logprob: -7.002567291259766
    3. 'if' → logprob: -7.252567291259766
    4. ' if' → logprob: -7.252567291259766
    5. '<|end|>' → logprob: -9.627567291259766
    6. 'for' → logprob: -10.127567291259766
    7. '           ' → logprob: -10.252567291259766
    8. ' for' → logprob: -10.627567291259766
    9. '```' → logprob: -10.877567291259766
    10. ',' → logprob: -11.877567291259766

Token 1572: ' if' (ID: 538)
  Prédit: 'las'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'las' → logprob: -0.04057162255048752
    2. 'if' (adapté à ' if') → logprob: -4.415571689605713
    3. 'for' → logprob: -4.790571689605713
    4. 'l' → logprob: -5.290571689605713
    5. 'lines' → logprob: -5.790571689605713
    6. 'th' → logprob: -5.790571689605713
    7. '       ' → logprob: -6.040571689605713
    8. 'yield' → logprob: -6.415571689605713
    9. 'points' → logprob: -6.665571689605713
    10. 'L' → logprob: -7.290571689605713

Token 1573: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.0017284912755712867
    2. ' W' → logprob: -6.376728534698486
    3. '(W' → logprob: -10.751728057861328
    4. ' (' → logprob: -12.751728057861328
    5. '(' → logprob: -13.626728057861328
    6. ' ' → logprob: -15.126728057861328
    7. '	W' → logprob: -15.626728057861328
    8. ' not' → logprob: -15.751728057861328
    9. 'N' → logprob: -16.251728057861328
    10. 'not' → logprob: -16.376728057861328

Token 1574: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5825856328010559
    2. ' ==' → logprob: -0.8325856328010559
    3. ',' → logprob: -5.33258581161499
    4. '=' → logprob: -6.58258581161499
    5. ' <' → logprob: -9.457585334777832
    6. '<|end|>' → logprob: -9.582585334777832
    7. '<' → logprob: -9.707585334777832
    8. '<=' → logprob: -10.082585334777832
    9. ' <=' → logprob: -10.207585334777832
    10. ' ,' → logprob: -10.832585334777832

Token 1575: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -11.125015258789062
    3. 'H' → logprob: -15.125015258789062
    4. 'Q' → logprob: -17.250015258789062
    5. ' H' → logprob: -19.625015258789062
    6. '۰' → logprob: -19.625015258789062
    7. '   ' → logprob: -20.125015258789062
    8. 'Y' → logprob: -20.250015258789062
    9. 'A' → logprob: -20.625015258789062
    10. '<|end|>' → logprob: -20.875015258789062

Token 1576: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.625001907348633
    3. 'H' → logprob: -13.750001907348633
    4. 'Q' → logprob: -18.000001907348633
    5. ' H' → logprob: -18.875001907348633
    6. 'R' → logprob: -19.500001907348633
    7. '-' → logprob: -20.000001907348633
    8. '
' → logprob: -20.125001907348633
    9. '۰' → logprob: -20.250001907348633
    10. 'Y' → logprob: -20.625001907348633

Token 1577: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.31326824426651
    2. 'and' → logprob: -1.3132681846618652
    3. ':' → logprob: -12.938268661499023
    4. '   ' → logprob: -13.313268661499023
    5. ' ' → logprob: -14.188268661499023
    6. '	and' → logprob: -14.438268661499023
    7. ':
' → logprob: -15.063268661499023
    8. '           ' → logprob: -15.563268661499023
    9. '0' → logprob: -15.688268661499023
    10. '<|end|>' → logprob: -15.938268661499023

Token 1578: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -2.4391956685576588e-05
    2. ' H' → logprob: -10.625024795532227
    3. '	H' → logprob: -20.250024795532227
    4. '
' → logprob: -20.875024795532227
    5. ' ' → logprob: -21.125024795532227
    6. '   ' → logprob: -21.375024795532227
    7. '  ' → logprob: -22.000024795532227
    8. '
' → logprob: -22.125024795532227
    9. 'HBox' → logprob: -22.625024795532227
    10. ' ' → logprob: -22.875024795532227

Token 1579: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.006721995305269957
    2. ' ==' → logprob: -5.0067219734191895
    3. '=' → logprob: -12.881722450256348
    4. '===' → logprob: -13.006722450256348
    5. 'N' → logprob: -13.756722450256348
    6. '0' → logprob: -14.756722450256348
    7. '==
' → logprob: -16.25672149658203
    8. ' ' → logprob: -16.38172149658203
    9. ')==' → logprob: -17.00672149658203
    10. '()==' → logprob: -17.38172149658203

Token 1580: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '<|end|>' → logprob: -20.000051498413086
    4. '۰' → logprob: -21.000051498413086
    5. '   ' → logprob: -21.250051498413086
    6. '
' → logprob: -21.250051498413086
    7. '  ' → logprob: -21.375051498413086
    8. '=' → logprob: -22.500051498413086
    9. ' ' → logprob: -22.750051498413086
    10. 'N' → logprob: -22.750051498413086

Token 1581: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. 'N' → logprob: -17.125003814697266
    4. '۰' → logprob: -19.875003814697266
    5. '
' → logprob: -20.250003814697266
    6. '<|end|>' → logprob: -20.750003814697266
    7. '
' → logprob: -21.500003814697266
    8. 'R' → logprob: -21.625003814697266
    9. '  ' → logprob: -21.625003814697266
    10. '=' → logprob: -21.937503814697266

Token 1582: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4745350778102875
    2. 'and' → logprob: -0.9745351076126099
    3. '0' → logprob: -7.72453498840332
    4. ' ' → logprob: -11.22453498840332
    5. 'N' → logprob: -13.47453498840332
    6. '000' → logprob: -15.47453498840332
    7. '<|end|>' → logprob: -15.59953498840332
    8. '<|end|>' → logprob: -15.59953498840332
    9. '   ' → logprob: -15.84953498840332
    10. '  ' → logprob: -16.22453498840332

Token 1583: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.4391956685576588e-05
    2. ' N' → logprob: -10.625024795532227
    3. '<|end|>' → logprob: -16.875024795532227
    4. '	N' → logprob: -18.000024795532227
    5. '   ' → logprob: -19.625024795532227
    6. ' ' → logprob: -19.625024795532227
    7. '<|end|>' → logprob: -19.750024795532227
    8. '0' → logprob: -19.875024795532227
    9. '  ' → logprob: -20.125024795532227
    10. '...' → logprob: -20.875024795532227

Token 1584: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.02977270446717739
    2. ' ==' → logprob: -3.5297727584838867
    3. '=' → logprob: -11.029772758483887
    4. '0' → logprob: -12.404772758483887
    5. '===' → logprob: -13.779772758483887
    6. ' ' → logprob: -15.529772758483887
    7. 'and' → logprob: -15.654772758483887
    8. ')==' → logprob: -15.779772758483887
    9. ' =' → logprob: -16.40477180480957
    10. '==
' → logprob: -16.52977180480957

Token 1585: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. 'and' → logprob: -15.750004768371582
    4. ' and' → logprob: -18.875003814697266
    5. '<|end|>' → logprob: -19.000003814697266
    6. '
' → logprob: -20.000003814697266
    7. '<|end|>' → logprob: -20.125003814697266
    8. '۰' → logprob: -20.250003814697266
    9. '=' → logprob: -20.875003814697266
    10. '   ' → logprob: -20.875003814697266

Token 1586: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. 'and' → logprob: -16.125001907348633
    4. '<|end|>' → logprob: -17.125001907348633
    5. '<|end|>' → logprob: -18.500001907348633
    6. ' and' → logprob: -18.750001907348633
    7. '=' → logprob: -18.875001907348633
    8. '۰' → logprob: -19.125001907348633
    9. '```' → logprob: -21.312501907348633
    10. '০' → logprob: -21.312501907348633

Token 1587: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10024441033601761
    2. 'and' → logprob: -2.3502445220947266
    3. '0' → logprob: -10.350244522094727
    4. '           ' → logprob: -13.350244522094727
    5. '       ' → logprob: -13.600244522094727
    6. ' ' → logprob: -14.475244522094727
    7. ':' → logprob: -14.725244522094727
    8. ',' → logprob: -14.725244522094727
    9. '<|end|>' → logprob: -14.725244522094727
    10. '==' → logprob: -15.725244522094727

Token 1588: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -5.676981345459353e-06
    2. ' R' → logprob: -12.250005722045898
    3. '0' → logprob: -14.000005722045898
    4. ' ' → logprob: -19.6250057220459
    5. '   ' → logprob: -20.0000057220459
    6. '
' → logprob: -20.0000057220459
    7. '	R' → logprob: -20.6250057220459
    8. 'r' → logprob: -21.3750057220459
    9. '  ' → logprob: -21.7500057220459
    10. '_R' → logprob: -22.6250057220459

Token 1589: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3132796585559845
    2. '==' → logprob: -1.313279628753662
    3. '=' → logprob: -11.68828010559082
    4. ' =' → logprob: -12.81328010559082
    5. '==
' → logprob: -13.18828010559082
    6. ')==' → logprob: -13.43828010559082
    7. '0' → logprob: -14.18828010559082
    8. ' ==
' → logprob: -14.18828010559082
    9. '<|end|>' → logprob: -14.56328010559082
    10. ' ' → logprob: -14.81328010559082

Token 1590: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.75
    3. '۰' → logprob: -20.5
    4. '   ' → logprob: -21.625
    5. '০' → logprob: -21.875
    6. '=' → logprob: -22.625
    7. '<|end|>' → logprob: -22.875
    8. '०' → logprob: -23.25
    9. '<|end|>' → logprob: -24.3125
    10. ')' → logprob: -24.4375

Token 1591: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.25
    3. '<|end|>' → logprob: -18.5
    4. '۰' → logprob: -18.625
    5. '<|end|>' → logprob: -19.125
    6. ')' → logprob: -20.0
    7. '=' → logprob: -20.25
    8. '০' → logprob: -20.375
    9. '-' → logprob: -21.125
    10. '०' → logprob: -21.5

Token 1592: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2546338438987732
    2. ':
' → logprob: -1.504633903503418
    3. ':return' → logprob: -6.254633903503418
    4. '           ' → logprob: -7.379633903503418
    5. '       ' → logprob: -9.129633903503418
    6. '   ' → logprob: -11.129633903503418
    7. ' break' → logprob: -11.629633903503418
    8. '.' → logprob: -12.629633903503418
    9. ',' → logprob: -12.754633903503418
    10. '):
' → logprob: -13.004633903503418

Token 1593: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003162868320941925
    2. '       ' → logprob: -6.128162860870361
    3. ':' → logprob: -7.128162860870361
    4. ':
' → logprob: -9.12816333770752
    5. '		' → logprob: -10.25316333770752
    6. '               ' → logprob: -11.75316333770752
    7. '          ' → logprob: -12.37816333770752
    8. '	       ' → logprob: -12.50316333770752
    9. '   ' → logprob: -12.87816333770752
    10. '	   ' → logprob: -13.25316333770752

Token 1594: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.01916344091296196
    2. 'return' → logprob: -4.269163608551025
    3. ' break' → logprob: -5.894163608551025
    4. '           ' → logprob: -6.144163608551025
    5. '               ' → logprob: -9.894163131713867
    6. '	break' → logprob: -10.769163131713867
    7. ' return' → logprob: -11.894163131713867
    8. '       ' → logprob: -13.269163131713867
    9. '_break' → logprob: -13.269163131713867
    10. '```' → logprob: -13.394163131713867

Token 1595: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.46579137444496155
    2. '       ' → logprob: -1.3407913446426392
    3. '<|end|>' → logprob: -2.3407914638519287
    4. '        
' → logprob: -5.21579122543335
    5. '
' → logprob: -5.71579122543335
    6. '    
' → logprob: -5.84079122543335
    7. '```' → logprob: -7.46579122543335
    8. ' lines' → logprob: -8.090791702270508
    9. 'def' → logprob: -8.340791702270508
    10. ',' → logprob: -8.340791702270508

Token 1596: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021647131070494652
    2. '   ' → logprob: -4.146646976470947
    3. '```' → logprob: -5.771646976470947
    4. '
' → logprob: -7.021646976470947
    5. '<|end|>' → logprob: -8.271647453308105
    6. 'points' → logprob: -8.521647453308105
    7. '        
' → logprob: -8.521647453308105
    8. ' for' → logprob: -8.646647453308105
    9. 'tokens' → logprob: -8.896647453308105
    10. ' lines' → logprob: -9.021647453308105

Token 1597: ' screen' (ID: 6188)
  Prédit: 'las'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'las' → logprob: -0.0011597428238019347
    2. 'l' → logprob: -7.75115966796875
    3. 'points' → logprob: -8.25115966796875
    4. ' lasers' → logprob: -8.87615966796875
    5. '   ' → logprob: -9.50115966796875
    6. 'laser' → logprob: -9.87615966796875
    7. '       ' → logprob: -10.00115966796875
    8. 'lines' → logprob: -10.12615966796875
    9. 'lam' → logprob: -11.00115966796875
    10. '        
' → logprob: -11.12615966796875

Token 1598: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004684187937527895
    2. '=' → logprob: -5.379683971405029
    3. '.' → logprob: -10.754684448242188
    4. '   ' → logprob: -11.629684448242188
    5. '<|end|>' → logprob: -11.629684448242188
    6. ' ' → logprob: -11.879684448242188
    7. ' =
' → logprob: -12.379684448242188
    8. 's' → logprob: -13.129684448242188
    9. '    ' → logprob: -13.254684448242188
    10. '_' → logprob: -13.379684448242188

Token 1599: ' Screen' (ID: 22269)
  Prédit: 'Screen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Screen' → logprob: -0.0007099286303855479
    2. ' Screen' → logprob: -7.2507100105285645
    3. '(Screen' → logprob: -18.250709533691406
    4. '   ' → logprob: -22.250709533691406
    5. '.Screen' → logprob: -22.500709533691406
    6. '_screen' → logprob: -23.250709533691406
    7. 'Screenshot' → logprob: -23.625709533691406
    8. 'Scene' → logprob: -24.125709533691406
    9. 'Screens' → logprob: -24.125709533691406
    10. 'SCREEN' → logprob: -24.500709533691406

Token 1600: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -5.3358446166384965e-05
    2. 'W' → logprob: -9.875053405761719
    3. '(' → logprob: -13.500053405761719
    4. '(
' → logprob: -14.625053405761719
    5. '   ' → logprob: -18.00005340576172
    6. '=W' → logprob: -18.00005340576172
    7. '	W' → logprob: -18.12505340576172
    8. ' (' → logprob: -18.62505340576172
    9. '(int' → logprob: -18.75005340576172
    10. ' W' → logprob: -19.00005340576172

Token 1601: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010891393758356571
    2. ',H' → logprob: -6.876089096069336
    3. ' ,' → logprob: -10.501089096069336
    4. ',R' → logprob: -11.126089096069336
    5. '<|end|>' → logprob: -11.751089096069336
    6. '=' → logprob: -13.751089096069336
    7. '   ' → logprob: -13.876089096069336
    8. ')' → logprob: -14.126089096069336
    9. ',W' → logprob: -14.251089096069336
    10. 'H' → logprob: -14.251089096069336

Token 1602: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.0013269031187519431
    2. ' H' → logprob: -6.626327037811279
    3. '<|end|>' → logprob: -15.376326560974121
    4. '   ' → logprob: -15.626326560974121
    5. '
' → logprob: -15.876326560974121
    6. '
' → logprob: -16.376327514648438
    7. ' ' → logprob: -16.376327514648438
    8. '       ' → logprob: -16.626327514648438
    9. ',H' → logprob: -16.876327514648438
    10. '' → logprob: -17.251327514648438

Token 1603: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018899753922596574
    2. ',R' → logprob: -8.875188827514648
    3. '<|end|>' → logprob: -11.125188827514648
    4. ' ,' → logprob: -11.250188827514648
    5. ')' → logprob: -11.750188827514648
    6. ',
' → logprob: -12.375188827514648
    7. '       ' → logprob: -12.875188827514648
    8. '   ' → logprob: -12.875188827514648
    9. '<|end|>' → logprob: -13.125188827514648
    10. '),' → logprob: -14.750188827514648

Token 1604: ' R' (ID: 460)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.0011745095252990723
    2. 'float' → logprob: -6.751174449920654
    3. ' R' → logprob: -13.001174926757812
    4. 'r' → logprob: -13.376174926757812
    5. ' float' → logprob: -14.876174926757812
    6. '   ' → logprob: -16.501174926757812
    7. '
' → logprob: -17.501174926757812
    8. '       ' → logprob: -17.501174926757812
    9. '(float' → logprob: -17.876174926757812
    10. '           ' → logprob: -18.001174926757812

Token 1605: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043209049850702286
    2. ')
' → logprob: -3.1682090759277344
    3. '   ' → logprob: -8.668209075927734
    4. '       ' → logprob: -10.543209075927734
    5. ')
' → logprob: -11.918209075927734
    6. '<|end|>' → logprob: -13.543209075927734
    7. '```' → logprob: -14.168209075927734
    8. '	' → logprob: -14.418209075927734
    9. '*' → logprob: -15.793209075927734
    10. ');' → logprob: -15.918209075927734

Token 1606: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14992673695087433
    2. '   ' → logprob: -2.7749266624450684
    3. 'for' → logprob: -2.7749266624450684
    4. ' for' → logprob: -4.274926662445068
    5. '<|end|>' → logprob: -8.149927139282227
    6. '	for' → logprob: -9.024927139282227
    7. '```' → logprob: -9.149927139282227
    8. ' ' → logprob: -11.149927139282227
    9. ' lines' → logprob: -11.274927139282227
    10. '	   ' → logprob: -11.524927139282227

Token 1607: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0003855093673337251
    2. '       ' → logprob: -8.250385284423828
    3. ' for' → logprob: -9.000385284423828
    4. '   ' → logprob: -14.000385284423828
    5. '	for' → logprob: -16.750385284423828
    6. '
' → logprob: -17.500385284423828
    7. 'import' → logprob: -18.375385284423828
    8. '```' → logprob: -19.375385284423828
    9. '           ' → logprob: -20.000385284423828
    10. 'from' → logprob: -20.250385284423828

Token 1608: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0032397438772022724
    2. '_i' → logprob: -5.753239631652832
    3. ' _' → logprob: -9.753239631652832
    4. '_in' → logprob: -13.503239631652832
    5. '_j' → logprob: -14.378239631652832
    6. '_index' → logprob: -14.753239631652832
    7. '_line' → logprob: -15.378239631652832
    8. 'i' → logprob: -15.628239631652832
    9. '_idx' → logprob: -15.753239631652832
    10. '_
' → logprob: -15.753239631652832

Token 1609: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -3.666993507067673e-05
    2. 'in' → logprob: -10.250036239624023
    3. ' ' → logprob: -14.750036239624023
    4. '
' → logprob: -15.000036239624023
    5. 'i' → logprob: -15.375036239624023
    6. 's' → logprob: -16.125036239624023
    7. 'import' → logprob: -16.875036239624023
    8. 'n' → logprob: -17.000036239624023
    9. ' 
' → logprob: -17.375036239624023
    10. 'range' → logprob: -17.500036239624023

Token 1610: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0015340241370722651
    2. ' range' → logprob: -6.5015339851379395
    3. ' in' → logprob: -10.376534461975098
    4. 'in' → logprob: -15.251534461975098
    5. '
' → logprob: -15.751534461975098
    6. ' ' → logprob: -16.75153350830078
    7. '	range' → logprob: -17.62653350830078
    8. '_' → logprob: -18.00153350830078
    9. '  ' → logprob: -18.12653350830078
    10. '[' → logprob: -18.25153350830078

Token 1611: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.06756596267223358
    2. 'N' → logprob: -3.56756591796875
    3. '(int' → logprob: -3.94256591796875
    4. 'int' → logprob: -4.19256591796875
    5. '(n' → logprob: -6.81756591796875
    6. '(' → logprob: -7.56756591796875
    7. ' N' → logprob: -8.31756591796875
    8. ' (' → logprob: -8.31756591796875
    9. 'n' → logprob: -9.31756591796875
    10. '   ' → logprob: -9.44256591796875

Token 1612: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.11208244413137436
    2. ':' → logprob: -3.7370824813842773
    3. '):' → logprob: -3.9870824813842773
    4. ':
' → logprob: -3.9870824813842773
    5. '():
' → logprob: -3.9870824813842773
    6. '       ' → logprob: -4.112082481384277
    7. '<|end|>' → logprob: -5.612082481384277
    8. '           ' → logprob: -5.737082481384277
    9. '   ' → logprob: -6.862082481384277
    10. ',' → logprob: -8.237082481384277

Token 1613: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0074491375125944614
    2. ' line' → logprob: -5.007449150085449
    3. 'line' → logprob: -8.38244915008545
    4. '	line' → logprob: -9.38244915008545
    5. '#line' → logprob: -9.38244915008545
    6. '	       ' → logprob: -9.63244915008545
    7. '=line' → logprob: -9.88244915008545
    8. '   ' → logprob: -10.13244915008545
    9. '[line' → logprob: -10.25744915008545
    10. '(line' → logprob: -10.50744915008545

Token 1614: ' coords' (ID: 53253)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.14545956254005432
    2. '           ' → logprob: -2.2704596519470215
    3. 'line' → logprob: -4.1454596519470215
    4. ' x' → logprob: -5.3954596519470215
    5. 'xl' → logprob: -5.6454596519470215
    6. 'px' → logprob: -5.7704596519470215
    7. 'ax' → logprob: -7.1454596519470215
    8. 'l' → logprob: -7.2704596519470215
    9. 'lx' → logprob: -7.2704596519470215
    10. ' line' → logprob: -7.6454596519470215

Token 1615: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38904836773872375
    2. ' =' → logprob: -1.1390483379364014
    3. '=line' → logprob: -6.1390485763549805
    4. 'line' → logprob: -11.76404857635498
    5. '_line' → logprob: -11.88904857635498
    6. '=input' → logprob: -14.01404857635498
    7. '   ' → logprob: -14.51404857635498
    8. '=list' → logprob: -14.76404857635498
    9. ' line' → logprob: -14.88904857635498
    10. '(line' → logprob: -15.13904857635498

Token 1616: ' sys' (ID: 12228)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.0002562137378845364
    2. ' list' → logprob: -8.750256538391113
    3. 'tuple' → logprob: -9.750256538391113
    4. 'line' → logprob: -10.250256538391113
    5. 'input' → logprob: -12.500256538391113
    6. ' tuple' → logprob: -16.000255584716797
    7. 'map' → logprob: -16.250255584716797
    8. 'sys' → logprob: -16.375255584716797
    9. '[list' → logprob: -17.000255584716797
    10. '   ' → logprob: -17.750255584716797

Token 1617: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.0025013405829668045
    2. 'stdin' → logprob: -6.002501487731934
    3. '(stdin' → logprob: -11.627501487731934
    4. '.stdout' → logprob: -11.752501487731934
    5. ' stdin' → logprob: -12.502501487731934
    6. '   ' → logprob: -12.627501487731934
    7. 'import' → logprob: -14.502501487731934
    8. '.argv' → logprob: -14.752501487731934
    9. 'input' → logprob: -15.627501487731934
    10. '_st' → logprob: -15.627501487731934

Token 1618: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.00029041420202702284
    2. '.' → logprob: -8.250290870666504
    3. '().' → logprob: -11.000290870666504
    4. '.stdin' → logprob: -11.625290870666504
    5. '   ' → logprob: -14.125290870666504
    6. 'line' → logprob: -14.750290870666504
    7. '.next' → logprob: -15.000290870666504
    8. '_line' → logprob: -15.250290870666504
    9. ' readline' → logprob: -15.500290870666504
    10. '#line' → logprob: -15.500290870666504

Token 1619: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00012308525037951767
    2. '()' → logprob: -9.375123023986816
    3. '.strip' → logprob: -10.750123023986816
    4. '()
' → logprob: -12.000123023986816
    5. '.split' → logprob: -12.250123023986816
    6. '           ' → logprob: -12.625123023986816
    7. '.rstrip' → logprob: -14.250123023986816
    8. '.readline' → logprob: -14.500123023986816
    9. '(' → logprob: -14.875123023986816
    10. '               ' → logprob: -15.750123023986816

Token 1620: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.023252464830875397
    2. 'split' → logprob: -3.773252487182617
    3. 'rstrip' → logprob: -12.023252487182617
    4. '.strip' → logprob: -14.398252487182617
    5. ' strip' → logprob: -15.148252487182617
    6. '_strip' → logprob: -16.648252487182617
    7. '-strip' → logprob: -17.148252487182617
    8. '(strip' → logprob: -17.648252487182617
    9. ' split' → logprob: -18.648252487182617
    10. 'str' → logprob: -18.648252487182617

Token 1621: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0003178273618686944
    2. '()' → logprob: -8.125317573547363
    3. '.split' → logprob: -11.125317573547363
    4. 'split' → logprob: -12.875317573547363
    5. '()
' → logprob: -13.625317573547363
    6. '()).' → logprob: -14.875317573547363
    7. '();' → logprob: -15.125317573547363
    8. '())' → logprob: -15.125317573547363
    9. '()?.' → logprob: -15.125317573547363
    10. '()='' → logprob: -15.250317573547363

Token 1622: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.320199877838604e-07
    2. ' split' → logprob: -15.5
    3. '.split' → logprob: -16.125
    4. 'spl' → logprob: -17.25
    5. '_split' → logprob: -17.75
    6. '(split' → logprob: -18.25
    7. 'plit' → logprob: -21.375
    8. 'rstrip' → logprob: -21.875
    9. '```' → logprob: -22.875
    10. 'Split' → logprob: -23.5

Token 1623: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003109622746706009
    2. '               ' → logprob: -7.878109455108643
    3. '[' → logprob: -8.1281099319458
    4. '            
' → logprob: -8.1281099319458
    5. ' =' → logprob: -8.2531099319458
    6. '=' → logprob: -8.2531099319458
    7. '
' → logprob: -8.2531099319458
    8. '<|end|>' → logprob: -8.6281099319458
    9. '(' → logprob: -8.7531099319458
    10. ',' → logprob: -8.8781099319458

Token 1624: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012999961618334055
    2. '[' → logprob: -8.126299858093262
    3. '               ' → logprob: -8.126299858093262
    4. 'x' → logprob: -8.626299858093262
    5. '       ' → logprob: -9.126299858093262
    6. 'p' → logprob: -9.251299858093262
    7. 'tokens' → logprob: -9.876299858093262
    8. '[p' → logprob: -10.251299858093262
    9. '	       ' → logprob: -11.001299858093262
    10. '   ' → logprob: -11.126299858093262

Token 1625: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.006579893175512552
    2. 'p' → logprob: -5.131579875946045
    3. '           ' → logprob: -8.006580352783203
    4. 'px' → logprob: -8.131580352783203
    5. 'xp' → logprob: -11.256580352783203
    6. '       ' → logprob: -12.756580352783203
    7. ' x' → logprob: -13.256580352783203
    8. '   ' → logprob: -13.756580352783203
    9. '            
' → logprob: -13.756580352783203
    10. '               ' → logprob: -14.131580352783203

Token 1626: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0266839899122715
    2. '0' → logprob: -3.901684045791626
    3. ' =' → logprob: -5.526683807373047
    4. '=' → logprob: -6.651683807373047
    5. 's' → logprob: -8.401683807373047
    6. ' ' → logprob: -8.776683807373047
    7. '   ' → logprob: -9.526683807373047
    8. ',' → logprob: -9.526683807373047
    9. 'def' → logprob: -9.651683807373047
    10. '=int' → logprob: -9.776683807373047

Token 1627: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13366693258285522
    2. '<|end|>' → logprob: -3.1336669921875
    3. ',x' → logprob: -3.6336669921875
    4. '=' → logprob: -4.1336669921875
    5. 'x' → logprob: -4.8836669921875
    6. '[' → logprob: -5.0086669921875
    7. ' x' → logprob: -5.1336669921875
    8. '<|end|>' → logprob: -5.7586669921875
    9. ' =' → logprob: -6.0086669921875
    10. '.' → logprob: -6.2586669921875

Token 1628: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -5.621933451038785e-05
    2. ' y' → logprob: -10.000056266784668
    3. 'int' → logprob: -12.250056266784668
    4. 'x' → logprob: -12.500056266784668
    5. 'float' → logprob: -13.750056266784668
    6. '<|end|>' → logprob: -14.750056266784668
    7. '=int' → logprob: -15.000056266784668
    8. 'Y' → logprob: -15.750056266784668
    9. '=float' → logprob: -15.875056266784668
    10. '=' → logprob: -16.75005531311035

Token 1629: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. '0' → logprob: -14.500000953674316
    3. '=' → logprob: -15.750000953674316
    4. 'x' → logprob: -17.25
    5. ' ' → logprob: -18.25
    6. '2' → logprob: -18.25
    7. '_' → logprob: -19.5
    8. ' =' → logprob: -19.75
    9. ',' → logprob: -20.0
    10. '' → logprob: -20.125

Token 1630: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23558883368968964
    2. '=' → logprob: -1.610588788986206
    3. ' =' → logprob: -4.610589027404785
    4. ',x' → logprob: -9.610589027404785
    5. '=int' → logprob: -9.735589027404785
    6. '=float' → logprob: -10.985589027404785
    7. '<|end|>' → logprob: -11.110589027404785
    8. ' ,' → logprob: -11.860589027404785
    9. 'x' → logprob: -12.110589027404785
    10. '=
' → logprob: -13.735589027404785

Token 1631: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.696889623621246e-06
    2. ' x' → logprob: -12.87500286102295
    3. '<|end|>' → logprob: -15.75000286102295
    4. '=' → logprob: -18.125001907348633
    5. ' =' → logprob: -19.000001907348633
    6. 'y' → logprob: -19.125001907348633
    7. '	x' → logprob: -19.375001907348633
    8. '   ' → logprob: -19.625001907348633
    9. ' ' → logprob: -19.875001907348633
    10. '  ' → logprob: -20.250001907348633

Token 1632: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5149324536323547
    2. '2' → logprob: -1.01493239402771
    3. '=' → logprob: -3.38993239402771
    4. ' =' → logprob: -5.514932632446289
    5. 'x' → logprob: -6.514932632446289
    6. ',' → logprob: -8.389932632446289
    7. ' ' → logprob: -8.764932632446289
    8. '0' → logprob: -9.139932632446289
    9. '=x' → logprob: -9.639932632446289
    10. '=float' → logprob: -9.889932632446289

Token 1633: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004534795880317688
    2. '=' → logprob: -5.629534721374512
    3. ' =' → logprob: -7.754534721374512
    4. '<|end|>' → logprob: -8.129534721374512
    5. ',x' → logprob: -8.879534721374512
    6. '<|end|>' → logprob: -11.129534721374512
    7. ')' → logprob: -12.254534721374512
    8. '=int' → logprob: -12.379534721374512
    9. ',user' → logprob: -12.379534721374512
    10. 'x' → logprob: -12.504534721374512

Token 1634: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.03949914500117302
    2. 'y' → logprob: -3.789499044418335
    3. ' x' → logprob: -4.289499282836914
    4. ' y' → logprob: -6.164499282836914
    5. '<|end|>' → logprob: -8.289499282836914
    6. ' ' → logprob: -9.914499282836914
    7. 'w' → logprob: -13.539499282836914
    8. 's' → logprob: -14.414499282836914
    9. ',' → logprob: -14.664499282836914
    10. 'xy' → logprob: -14.789499282836914

Token 1635: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.20141635835170746
    2. '1' → logprob: -1.7014163732528687
    3. '3' → logprob: -13.826416015625
    4. ' ' → logprob: -14.201416015625
    5. ',' → logprob: -14.451416015625
    6. '=' → logprob: -14.701416015625
    7. '```' → logprob: -16.451416015625
    8. '   ' → logprob: -16.701416015625
    9. '<|end|>' → logprob: -16.826416015625
    10. '<|end|>' → logprob: -16.826416015625

Token 1636: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11326733976602554
    2. ' =' → logprob: -2.238267421722412
    3. ',' → logprob: -7.738267421722412
    4. '=int' → logprob: -13.238266944885254
    5. '=
' → logprob: -13.238266944885254
    6. ')' → logprob: -13.488266944885254
    7. '<|end|>' → logprob: -14.113266944885254
    8. '=float' → logprob: -14.238266944885254
    9. ' ' → logprob: -14.613266944885254
    10. ' =
' → logprob: -14.863266944885254

Token 1637: ' t' (ID: 260)
  Prédit: 'th'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'th' → logprob: -0.28363701701164246
    2. 't' → logprob: -1.5336370468139648
    3. ' thickness' → logprob: -3.658637046813965
    4. ' t' → logprob: -5.283637046813965
    5. '   ' → logprob: -9.033637046813965
    6. 'float' → logprob: -9.658637046813965
    7. 'width' → logprob: -10.033637046813965
    8. 'w' → logprob: -10.908637046813965
    9. ' th' → logprob: -10.908637046813965
    10. 'T' → logprob: -11.158637046813965

Token 1638: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6957893371582031
    2. ' =' → logprob: -0.6957893371582031
    3. '=float' → logprob: -6.695789337158203
    4. ',' → logprob: -7.570789337158203
    5. 'ype' → logprob: -7.695789337158203
    6. 'h' → logprob: -9.445789337158203
    7. '=int' → logprob: -9.820789337158203
    8. 'oken' → logprob: -9.945789337158203
    9. ' ' → logprob: -10.195789337158203
    10. 'okens' → logprob: -10.320789337158203

Token 1639: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.28215155005455017
    2. 'float' → logprob: -1.5321515798568726
    3. ' map' → logprob: -3.532151460647583
    4. ' float' → logprob: -7.657151699066162
    5. 'int' → logprob: -11.032151222229004
    6. '[' → logprob: -11.157151222229004
    7. 'flo' → logprob: -11.657151222229004
    8. 'list' → logprob: -11.907151222229004
    9. '   ' → logprob: -12.282151222229004
    10. '(map' → logprob: -13.282151222229004

Token 1640: '(int' (ID: 2742)
  Prédit: '(float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(float' → logprob: -0.57603919506073
    2. 'float' → logprob: -0.82603919506073
    3. '(int' → logprob: -9.57603931427002
    4. 'int' → logprob: -10.57603931427002
    5. '=float' → logprob: -12.57603931427002
    6. ' float' → logprob: -14.32603931427002
    7. '   ' → logprob: -15.20103931427002
    8. '	float' → logprob: -15.32603931427002
    9. '(' → logprob: -16.201038360595703
    10. ',float' → logprob: -16.201038360595703

Token 1641: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04361448064446449
    2. '<|end|>' → logprob: -3.418614387512207
    3. ')' → logprob: -5.543614387512207
    4. '<|end|>' → logprob: -7.043614387512207
    5. '(' → logprob: -7.418614387512207
    6. '(x' → logprob: -7.668614387512207
    7. '(int' → logprob: -7.918614387512207
    8. ',
' → logprob: -7.918614387512207
    9. '   ' → logprob: -8.043614387512207
    10. '
' → logprob: -8.293614387512207

Token 1642: ' coords' (ID: 53253)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coords' → logprob: -3.643152740551159e-05
    2. ' coords' → logprob: -10.250036239624023
    3. '(coords' → logprob: -13.875036239624023
    4. '[' → logprob: -17.500036239624023
    5. '_coords' → logprob: -19.500036239624023
    6. 'coordinates' → logprob: -19.500036239624023
    7. '   ' → logprob: -19.500036239624023
    8. '
' → logprob: -19.625036239624023
    9. 'x' → logprob: -19.875036239624023
    10. 'coord' → logprob: -20.250036239624023

Token 1643: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004321998916566372
    2. ')
' → logprob: -5.629322052001953
    3. '<|end|>' → logprob: -8.379322052001953
    4. '       ' → logprob: -8.879322052001953
    5. ')x' → logprob: -9.379322052001953
    6. '):
' → logprob: -10.629322052001953
    7. '           ' → logprob: -10.629322052001953
    8. ');' → logprob: -10.754322052001953
    9. '<|end|>' → logprob: -10.879322052001953
    10. ')**' → logprob: -11.004322052001953

Token 1644: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00215109228156507
    2. '       ' → logprob: -6.377151012420654
    3. '<|end|>' → logprob: -9.127151489257812
    4. '   ' → logprob: -9.502151489257812
    5. ',' → logprob: -9.627151489257812
    6. '               ' → logprob: -9.752151489257812
    7. '```' → logprob: -10.377151489257812
    8. '            
' → logprob: -10.502151489257812
    9. '
' → logprob: -11.002151489257812
    10. '          ' → logprob: -11.127151489257812

Token 1645: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.3365079164505005
    2. '           ' → logprob: -1.5865079164505005
    3. 'point' → logprob: -3.336507797241211
    4. 'laser' → logprob: -3.586507797241211
    5. ' p' → logprob: -4.711507797241211
    6. 'l' → logprob: -5.586507797241211
    7. '       ' → logprob: -6.211507797241211
    8. ' point' → logprob: -6.836507797241211
    9. ' laser' → logprob: -7.586507797241211
    10. 'screen' → logprob: -7.711507797241211

Token 1646: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.735893965815194e-05
    2. 'oint' → logprob: -11.125017166137695
    3. 'oints' → logprob: -13.875017166137695
    4. ' =' → logprob: -14.000017166137695
    5. 'r' → logprob: -15.125017166137695
    6. '=' → logprob: -15.500017166137695
    7. '_' → logprob: -15.875017166137695
    8. 't' → logprob: -16.125017166137695
    9. '```' → logprob: -18.125017166137695
    10. 'p' → logprob: -18.125017166137695

Token 1647: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020549247041344643
    2. ' =' → logprob: -3.8955492973327637
    3. ',' → logprob: -12.020548820495605
    4. '=
' → logprob: -14.270548820495605
    5. '<|end|>' → logprob: -16.020549774169922
    6. ')' → logprob: -16.395549774169922
    7. '=

' → logprob: -16.395549774169922
    8. '=}' → logprob: -16.520549774169922
    9. 'Point' → logprob: -16.895549774169922
    10. '(Point' → logprob: -17.020549774169922

Token 1648: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -2.15310683415737e-05
    2. ' Point' → logprob: -10.750021934509277
    3. '	Point' → logprob: -19.12502098083496
    4. '(Point' → logprob: -21.37502098083496
    5. '_Point' → logprob: -21.62502098083496
    6. '<Point' → logprob: -21.75002098083496
    7. 'point' → logprob: -21.87502098083496
    8. '_point' → logprob: -22.50002098083496
    9. '.Point' → logprob: -22.50002098083496
    10. '   ' → logprob: -22.87502098083496

Token 1649: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0007161272224038839
    2. 'x' → logprob: -7.625716209411621
    3. '(' → logprob: -9.000716209411621
    4. '(float' → logprob: -9.500716209411621
    5. '(int' → logprob: -10.625716209411621
    6. 'float' → logprob: -13.000716209411621
    7. '(p' → logprob: -13.250716209411621
    8. '(
' → logprob: -13.875716209411621
    9. 'int' → logprob: -14.750716209411621
    10. ' (' → logprob: -15.875716209411621

Token 1650: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03401701897382736
    2. '(x' → logprob: -3.7840170860290527
    3. 'x' → logprob: -5.284017086029053
    4. 'p' → logprob: -6.284017086029053
    5. '=' → logprob: -6.909017086029053
    6. '(' → logprob: -6.909017086029053
    7. '(float' → logprob: -7.409017086029053
    8. '(p' → logprob: -7.909017086029053
    9. '=x' → logprob: -8.159016609191895
    10. '=float' → logprob: -8.909016609191895

Token 1651: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.102680633077398e-05
    2. ',p' → logprob: -10.500090599060059
    3. ' ,' → logprob: -10.750090599060059
    4. '<|end|>' → logprob: -11.500090599060059
    5. ',y' → logprob: -11.625090599060059
    6. ',
' → logprob: -11.625090599060059
    7. ')' → logprob: -12.875090599060059
    8. '),' → logprob: -13.250090599060059
    9. ',x' → logprob: -13.625090599060059
    10. '<|end|>' → logprob: -14.000090599060059

Token 1652: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.000431861262768507
    2. ' y' → logprob: -7.750432014465332
    3. '<|end|>' → logprob: -13.750432014465332
    4. '	y' → logprob: -17.625431060791016
    5. ''y' → logprob: -18.000431060791016
    6. ' ' → logprob: -18.750431060791016
    7. '   ' → logprob: -19.000431060791016
    8. '<|end|>' → logprob: -19.250431060791016
    9. '       ' → logprob: -19.625431060791016
    10. '‘y' → logprob: -19.625431060791016

Token 1653: '1' (ID: 16)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0501691959798336
    2. ' y' → logprob: -3.4251692295074463
    3. '0' → logprob: -4.175168991088867
    4. ')' → logprob: -7.800168991088867
    5. ',' → logprob: -8.300168991088867
    6. ',y' → logprob: -8.925168991088867
    7. '1' → logprob: -9.425168991088867
    8. ' ' → logprob: -10.550168991088867
    9. '<|end|>' → logprob: -10.550168991088867
    10. 'p' → logprob: -10.925168991088867

Token 1654: ')
' (ID: 446)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02366422489285469
    2. ')' → logprob: -3.7736642360687256
    3. ')
' → logprob: -9.023664474487305
    4. ',p' → logprob: -9.148664474487305
    5. '),' → logprob: -9.273664474487305
    6. ',
' → logprob: -10.148664474487305
    7. '<|end|>' → logprob: -10.523664474487305
    8. '   ' → logprob: -11.523664474487305
    9. ' ,' → logprob: -12.148664474487305
    10. 'p' → logprob: -12.523664474487305

Token 1655: '           ' (ID: 352)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.5634933114051819
    2. '       ' → logprob: -1.438493251800537
    3. 'p' → logprob: -2.063493251800537
    4. '   ' → logprob: -3.313493251800537
    5. '           ' → logprob: -3.688493251800537
    6. ' ' → logprob: -6.563493251800537
    7. '<|end|>' → logprob: -7.313493251800537
    8. '    ' → logprob: -7.438493251800537
    9. '	p' → logprob: -7.563493251800537
    10. '```' → logprob: -7.688493251800537

Token 1656: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.0041103423573076725
    2. ' p' → logprob: -5.504110336303711
    3. '   ' → logprob: -11.504110336303711
    4. '       ' → logprob: -11.504110336303711
    5. '           ' → logprob: -11.754110336303711
    6. '	p' → logprob: -12.629110336303711
    7. '    ' → logprob: -15.879110336303711
    8. ' ' → logprob: -16.50411033630371
    9. '      ' → logprob: -16.75411033630371
    10. '        ' → logprob: -16.87911033630371

Token 1657: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.931863051955588e-05
    2. 'p' → logprob: -9.750059127807617
    3. ' p' → logprob: -14.375059127807617
    4. '=p' → logprob: -15.375059127807617
    5. '=' → logprob: -15.750059127807617
    6. '1' → logprob: -16.750059127807617
    7. 't' → logprob: -18.250059127807617
    8. ' =' → logprob: -18.375059127807617
    9. '```' → logprob: -18.375059127807617
    10. '.p' → logprob: -18.375059127807617

Token 1658: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.04858839511871338
    2. ' =' → logprob: -3.048588275909424
    3. '=
' → logprob: -14.048588752746582
    4. ' =
' → logprob: -16.548587799072266
    5. '=p' → logprob: -17.173587799072266
    6. '<|end|>' → logprob: -17.298587799072266
    7. '=

' → logprob: -17.923587799072266
    8. '=}' → logprob: -18.673587799072266
    9. ',' → logprob: -18.798587799072266
    10. ')' → logprob: -19.048587799072266

Token 1659: ' Point' (ID: 9971)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Point' → logprob: -1.1472419600977446e-06
    2. ' Point' → logprob: -13.750000953674316
    3. '	Point' → logprob: -21.000001907348633
    4. '_point' → logprob: -21.125001907348633
    5. '.Point' → logprob: -22.000001907348633
    6. '(Point' → logprob: -22.125001907348633
    7. '_Point' → logprob: -22.125001907348633
    8. '<Point' → logprob: -22.375001907348633
    9. 'point' → logprob: -23.125001907348633
    10. 'Points' → logprob: -24.125001907348633

Token 1660: '(x' (ID: 4061)
  Prédit: 'Point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Point' → logprob: -4.739826181321405e-05
    2. ' Point' → logprob: -10.00004768371582
    3. '(Point' → logprob: -13.25004768371582
    4. '.Point' → logprob: -16.87504768371582
    5. '	Point' → logprob: -17.00004768371582
    6. '<Point' → logprob: -18.25004768371582
    7. '_Point' → logprob: -19.50004768371582
    8. '_point' → logprob: -20.50004768371582
    9. 'p' → logprob: -20.87504768371582
    10. 'P' → logprob: -21.50004768371582

Token 1661: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0003806257154792547
    2. 'x' → logprob: -7.875380516052246
    3. '(x' → logprob: -15.125380516052246
    4. ' x' → logprob: -16.625381469726562
    5. '```' → logprob: -17.500381469726562
    6. '(' → logprob: -17.750381469726562
    7. '
' → logprob: -17.875381469726562
    8. '1' → logprob: -18.250381469726562
    9. ' ' → logprob: -18.250381469726562
    10. '₂' → logprob: -18.875381469726562

Token 1662: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00014406509581021965
    2. ',p' → logprob: -8.875144004821777
    3. ' ,' → logprob: -12.875144004821777
    4. 'p' → logprob: -13.625144004821777
    5. ',
' → logprob: -16.250144958496094
    6. ' p' → logprob: -16.375144958496094
    7. '<|end|>' → logprob: -16.500144958496094
    8. ')' → logprob: -16.625144958496094
    9. ',x' → logprob: -16.875144958496094
    10. ',y' → logprob: -17.000144958496094

Token 1663: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.029751529917120934
    2. ' y' → logprob: -3.5297515392303467
    3. 'Point' → logprob: -14.654751777648926
    4. 'x' → logprob: -14.654751777648926
    5. '	y' → logprob: -16.52975082397461
    6. ' Point' → logprob: -17.40475082397461
    7. '   ' → logprob: -18.27975082397461
    8. 'p' → logprob: -18.40475082397461
    9. ' ' → logprob: -18.65475082397461
    10. ''y' → logprob: -18.77975082397461

Token 1664: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010962842497974634
    2. '2' → logprob: -7.876096248626709
    3. 'y' → logprob: -8.001096725463867
    4. ',' → logprob: -8.251096725463867
    5. '   ' → logprob: -10.126096725463867
    6. '```' → logprob: -10.876096725463867
    7. 'p' → logprob: -11.001096725463867
    8. ' y' → logprob: -11.376096725463867
    9. '<|end|>' → logprob: -12.001096725463867
    10. ' ' → logprob: -12.001096725463867

Token 1665: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6781523823738098
    2. ')
' → logprob: -0.8031523823738098
    3. ',' → logprob: -3.553152322769165
    4. '           ' → logprob: -4.303152561187744
    5. ')t' → logprob: -6.803152561187744
    6. '       ' → logprob: -7.553152561187744
    7. '),' → logprob: -8.928152084350586
    8. 't' → logprob: -8.928152084350586
    9. ',t' → logprob: -9.678152084350586
    10. '   ' → logprob: -9.678152084350586

Token 1666: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005686430260539055
    2. '       ' → logprob: -5.505686283111572
    3. 't' → logprob: -7.505686283111572
    4. '   ' → logprob: -7.505686283111572
    5. 'laser' → logprob: -8.88068675994873
    6. '               ' → logprob: -9.50568675994873
    7. ' laser' → logprob: -10.13068675994873
    8. '```' → logprob: -10.25568675994873
    9. '                   ' → logprob: -10.38068675994873
    10. '<|end|>' → logprob: -10.88068675994873

Token 1667: ' laser' (ID: 23429)
  Prédit: 'laser'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'laser' (adapté à ' laser') → logprob: -0.05576895549893379
    2. 'l' → logprob: -3.6807689666748047
    3. 't' → logprob: -4.430768966674805
    4. 'th' → logprob: -4.680768966674805
    5. '           ' → logprob: -4.930768966674805
    6. ' laser' → logprob: -7.805768966674805
    7. 'las' → logprob: -9.055768966674805
    8. 'Laser' → logprob: -9.930768966674805
    9. ' thickness' → logprob: -11.430768966674805
    10. ' t' → logprob: -11.555768966674805

Token 1668: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326964497566223
    2. '=' → logprob: -1.3132696151733398
    3. ' =
' → logprob: -12.56326961517334
    4. '=
' → logprob: -13.43826961517334
    5. '.' → logprob: -13.93826961517334
    6. 's' → logprob: -14.18826961517334
    7. '=line' → logprob: -15.18826961517334
    8. '<|end|>' → logprob: -15.56326961517334
    9. ' ' → logprob: -15.68826961517334
    10. ')' → logprob: -16.063270568847656

Token 1669: ' Laser' (ID: 49648)
  Prédit: 'Laser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Laser' → logprob: -5.836499985889532e-05
    2. ' Laser' → logprob: -9.7500581741333
    3. 'L' → logprob: -19.875059127807617
    4. 'Laptop' → logprob: -20.000059127807617
    5. 'Las' → logprob: -20.375059127807617
    6. '	L' → logprob: -22.250059127807617
    7. ' laser' → logprob: -22.250059127807617
    8. '   ' → logprob: -22.500059127807617
    9. '
' → logprob: -22.500059127807617
    10. 'Lap' → logprob: -22.625059127807617

Token 1670: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -2.7729658540920354e-05
    2. 'p' → logprob: -10.625027656555176
    3. '(' → logprob: -12.750027656555176
    4. '(
' → logprob: -15.250027656555176
    5. ' p' → logprob: -15.875027656555176
    6. 'L' → logprob: -17.500028610229492
    7. 'Laser' → logprob: -17.750028610229492
    8. '(P' → logprob: -18.625028610229492
    9. 'Point' → logprob: -18.750028610229492
    10. '=p' → logprob: -18.875028610229492

Token 1671: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. 'oint' → logprob: -13.750001907348633
    3. 'oints' → logprob: -14.875001907348633
    4. 'p' → logprob: -15.000001907348633
    5. '```' → logprob: -16.375001907348633
    6. '(p' → logprob: -16.500001907348633
    7. 't' → logprob: -16.875001907348633
    8. 'oin' → logprob: -17.625001907348633
    9. ' p' → logprob: -17.625001907348633
    10. 'Point' → logprob: -17.750001907348633

Token 1672: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.3451433409936726e-05
    2. ',p' → logprob: -10.375033378601074
    3. 'p' → logprob: -13.625033378601074
    4. ' ,' → logprob: -14.000033378601074
    5. ',
' → logprob: -16.12503433227539
    6. '<|end|>' → logprob: -17.50003433227539
    7. ' p' → logprob: -17.87503433227539
    8. '=' → logprob: -18.00003433227539
    9. ')' → logprob: -18.37503433227539
    10. '(p' → logprob: -18.75003433227539

Token 1673: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004078639671206474
    2. ' p' → logprob: -5.5040788650512695
    3. '           ' → logprob: -16.004077911376953
    4. '	p' → logprob: -17.629077911376953
    5. '            ' → logprob: -18.379077911376953
    6. '<p' → logprob: -19.379077911376953
    7. '   ' → logprob: -19.379077911376953
    8. ')p' → logprob: -19.629077911376953
    9. ' ' → logprob: -20.004077911376953
    10. '               ' → logprob: -20.254077911376953

Token 1674: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.001504982472397387
    2. 'p' → logprob: -6.501504898071289
    3. ' p' → logprob: -12.876504898071289
    4. ' ' → logprob: -17.25150489807129
    5. 'oints' → logprob: -17.50150489807129
    6. '₂' → logprob: -17.75150489807129
    7. 'oint' → logprob: -18.12650489807129
    8. 'Point' → logprob: -18.75150489807129
    9. 't' → logprob: -19.12650489807129
    10. 'point' → logprob: -19.50150489807129

Token 1675: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024192029377445579
    2. ',t' → logprob: -8.875242233276367
    3. 't' → logprob: -9.375242233276367
    4. ',
' → logprob: -12.000242233276367
    5. ' ,' → logprob: -12.250242233276367
    6. ' t' → logprob: -12.250242233276367
    7. '=' → logprob: -14.000242233276367
    8. '           ' → logprob: -15.250242233276367
    9. '<|end|>' → logprob: -15.750242233276367
    10. ')' → logprob: -16.250242233276367

Token 1676: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0007292322698049247
    2. 'float' → logprob: -7.250729084014893
    3. ' t' → logprob: -10.87572956085205
    4. ' float' → logprob: -15.25072956085205
    5. '   ' → logprob: -16.250728607177734
    6. '`t' → logprob: -17.375728607177734
    7. '	t' → logprob: -18.375728607177734
    8. 'int' → logprob: -19.125728607177734
    9. '           ' → logprob: -19.375728607177734
    10. '       ' → logprob: -19.500728607177734

Token 1677: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00193458900321275
    2. ')
' → logprob: -6.25193452835083
    3. '       ' → logprob: -13.251935005187988
    4. ')
' → logprob: -13.626935005187988
    5. ' )' → logprob: -14.626935005187988
    6. '<|end|>' → logprob: -14.751935005187988
    7. '=' → logprob: -14.876935005187988
    8. '   ' → logprob: -15.126935005187988
    9. ')return' → logprob: -15.251935005187988
    10. '.' → logprob: -15.251935005187988

Token 1678: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4818316400051117
    2. '           ' → logprob: -0.9818316698074341
    3. '	       ' → logprob: -6.2318315505981445
    4. '        
' → logprob: -6.8568315505981445
    5. 'screen' → logprob: -6.9818315505981445
    6. '	   ' → logprob: -7.2318315505981445
    7. '	' → logprob: -7.4818315505981445
    8. '   ' → logprob: -7.7318315505981445
    9. '[' → logprob: -7.8568315505981445
    10. '	screen' → logprob: -7.8568315505981445

Token 1679: ' screen' (ID: 6188)
  Prédit: 'screen'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'screen' (adapté à ' screen') → logprob: -4.3464544432936236e-05
    2. '           ' → logprob: -10.750043869018555
    3. '       ' → logprob: -11.500043869018555
    4. ' screen' → logprob: -11.750043869018555
    5. '   ' → logprob: -12.750043869018555
    6. '
' → logprob: -14.500043869018555
    7. '	screen' → logprob: -15.500043869018555
    8. 's' → logprob: -16.000043869018555
    9. '(screen' → logprob: -17.000043869018555
    10. 'screens' → logprob: -17.375043869018555

Token 1680: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -2.093505099765025e-05
    2. '.' → logprob: -10.875020980834961
    3. '   ' → logprob: -14.000020980834961
    4. '.append' → logprob: -15.375020980834961
    5. 'add' → logprob: -15.625020980834961
    6. '.Add' → logprob: -15.625020980834961
    7. '>.' → logprob: -15.875020980834961
    8. '       ' → logprob: -16.50002098083496
    9. '.ad' → logprob: -17.00002098083496
    10. ').' → logprob: -17.12502098083496

Token 1681: '_l' (ID: 1478)
  Prédit: '_l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_l' → logprob: -7.226628895296017e-06
    2. 'laser' → logprob: -11.875007629394531
    3. '_' → logprob: -15.750007629394531
    4. '(l' → logprob: -17.37500762939453
    5. 'Laser' → logprob: -17.62500762939453
    6. ' laser' → logprob: -18.50000762939453
    7. 's' → logprob: -19.12500762939453
    8. '\' → logprob: -19.12500762939453
    9. '(' → logprob: -19.50000762939453
    10. '(_' → logprob: -19.75000762939453

Token 1682: 'aser' (ID: 18231)
  Prédit: 'aser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aser' → logprob: -0.0008464370621368289
    2. 'laser' → logprob: -7.2508463859558105
    3. 'a' → logprob: -9.750846862792969
    4. 'as' → logprob: -10.750846862792969
    5. '_l' → logprob: -11.250846862792969
    6. '_' → logprob: -11.250846862792969
    7. 'ase' → logprob: -11.375846862792969
    8. 'asers' → logprob: -12.500846862792969
    9. '   ' → logprob: -12.750846862792969
    10. 'azer' → logprob: -13.000846862792969

Token 1683: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.00016265720478259027
    2. 'laser' → logprob: -8.750163078308105
    3. '(' → logprob: -12.500163078308105
    4. ' laser' → logprob: -16.12516212463379
    5. 'l' → logprob: -16.12516212463379
    6. '.l' → logprob: -16.50016212463379
    7. '(
' → logprob: -16.87516212463379
    8. 'Laser' → logprob: -17.12516212463379
    9. '_l' → logprob: -17.75016212463379
    10. 'las' → logprob: -18.00016212463379

Token 1684: 'aser' (ID: 18231)
  Prédit: 'aser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aser' → logprob: -0.0003433296224102378
    2. 'laser' → logprob: -8.125343322753906
    3. 'ser' → logprob: -10.750343322753906
    4. 'as' → logprob: -11.750343322753906
    5. 'ar' → logprob: -12.500343322753906
    6. 'ase' → logprob: -12.875343322753906
    7. 'er' → logprob: -13.000343322753906
    8. '=' → logprob: -13.250343322753906
    9. '[' → logprob: -13.625343322753906
    10. '(' → logprob: -13.625343322753906

Token 1685: ')
' (ID: 446)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.635647714138031
    2. '<|end|>' → logprob: -0.885647714138031
    3. ')' → logprob: -3.510647773742676
    4. '
' → logprob: -4.385647773742676
    5. '<|end|>' → logprob: -5.010647773742676
    6. '   ' → logprob: -5.385647773742676
    7. '        
' → logprob: -6.385647773742676
    8. '    
' → logprob: -7.385647773742676
    9. '	' → logprob: -7.760647773742676
    10. '.' → logprob: -8.135647773742676

Token 1686: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0045537808910012245
    2. '   ' → logprob: -5.87955379486084
    3. 'yield' → logprob: -7.12955379486084
    4. ' yield' → logprob: -7.87955379486084
    5. '
' → logprob: -8.50455379486084
    6. '<|end|>' → logprob: -8.62955379486084
    7. '```' → logprob: -9.50455379486084
    8. '        
' → logprob: -9.75455379486084
    9. '           ' → logprob: -11.12955379486084
    10. '	yield' → logprob: -11.12955379486084

Token 1687: ' yield' (ID: 14376)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23801860213279724
    2. 'yield' (adapté à ' yield') → logprob: -1.8630186319351196
    3. 'print' → logprob: -3.11301851272583
    4. 'if' → logprob: -5.11301851272583
    5. 'result' → logprob: -5.73801851272583
    6. '```' → logprob: -6.86301851272583
    7. 'safe' → logprob: -7.11301851272583
    8. ' yield' → logprob: -7.98801851272583
    9. '
' → logprob: -8.488018989562988
    10. '   ' → logprob: -8.613018989562988

Token 1688: ' screen' (ID: 6188)
  Prédit: 'screen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'screen' → logprob: -0.0592949204146862
    2. ' screen' → logprob: -2.9342949390411377
    3. '(screen' → logprob: -5.434294700622559
    4. '   ' → logprob: -11.184294700622559
    5. ' (' → logprob: -11.434294700622559
    6. '(W' → logprob: -12.934294700622559
    7. '(s' → logprob: -13.184294700622559
    8. '       ' → logprob: -13.559294700622559
    9. 'from' → logprob: -13.809294700622559
    10. 'W' → logprob: -13.809294700622559

Token 1689: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.008838512934744358
    2. 'for' → logprob: -4.758838653564453
    3. 'if' → logprob: -9.258838653564453
    4. '```' → logprob: -9.633838653564453
    5. '<|end|>' → logprob: -10.008838653564453
    6. ' for' → logprob: -11.633838653564453
    7. '    
' → logprob: -13.133838653564453
    8. '
' → logprob: -13.258838653564453
    9. '        
' → logprob: -13.258838653564453
    10. 'import' → logprob: -13.758838653564453

Token 1690: 'def' (ID: 1314)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6691532731056213
    2. 'for' → logprob: -0.9191532731056213
    3. 'def' → logprob: -2.4191532135009766
    4. 'import' → logprob: -12.794153213500977
    5. '```' → logprob: -13.419153213500977
    6. ' if' → logprob: -16.419153213500977
    7. ' for' → logprob: -16.544153213500977
    8. 'while' → logprob: -17.419153213500977
    9. '#' → logprob: -17.919153213500977
    10. '
' → logprob: -18.044153213500977

Token 1691: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.16022473573684692
    2. ' main' → logprob: -1.9102246761322021
    3. 'run' → logprob: -15.535224914550781
    4. ' run' → logprob: -16.03522491455078
    5. '_main' → logprob: -16.16022491455078
    6. 'solve' → logprob: -16.41022491455078
    7. ' solve' → logprob: -17.41022491455078
    8. '	main' → logprob: -17.78522491455078
    9. 'process' → logprob: -18.66022491455078
    10. '__' → logprob: -19.53522491455078

Token 1692: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.00024132427643053234
    2. '(' → logprob: -9.00024127960205
    3. '():
' → logprob: -9.75024127960205
    4. '()' → logprob: -9.87524127960205
    5. ':' → logprob: -12.87524127960205
    6. ' ():' → logprob: -13.12524127960205
    7. 'def' → logprob: -14.00024127960205
    8. '():
' → logprob: -14.50024127960205
    9. '(:' → logprob: -14.62524127960205
    10. '();' → logprob: -15.37524127960205

Token 1693: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11273124814033508
    2. 'for' → logprob: -2.3627312183380127
    3. 'import' → logprob: -4.612731456756592
    4. ' for' → logprob: -6.112731456756592
    5. 'screens' → logprob: -8.237730979919434
    6. '```' → logprob: -10.862730979919434
    7. ' screens' → logprob: -11.612730979919434
    8. 'from' → logprob: -12.362730979919434
    9. 'screen' → logprob: -12.987730979919434
    10. '    
' → logprob: -13.237730979919434

Token 1694: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.39027294516563416
    2. 'import' → logprob: -1.1402729749679565
    3. '   ' → logprob: -5.890273094177246
    4. ' for' → logprob: -7.390273094177246
    5. ' import' → logprob: -12.015273094177246
    6. 'while' → logprob: -12.515273094177246
    7. 'from' → logprob: -12.890273094177246
    8. 'screen' → logprob: -15.890273094177246
    9. '
' → logprob: -16.14027214050293
    10. '```' → logprob: -16.14027214050293

Token 1695: ' screen' (ID: 6188)
  Prédit: 'screen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'screen' → logprob: -0.001170225441455841
    2. ' screen' → logprob: -6.7511701583862305
    3. 'scene' → logprob: -17.376171112060547
    4. '	screen' → logprob: -17.376171112060547
    5. '   ' → logprob: -18.876171112060547
    6. '(screen' → logprob: -19.376171112060547
    7. '_screen' → logprob: -19.626171112060547
    8. 'Screen' → logprob: -19.626171112060547
    9. ' ' → logprob: -19.751171112060547
    10. 's' → logprob: -20.126171112060547

Token 1696: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01252060104161501
    2. 'in' → logprob: -4.387520790100098
    3. 'screen' → logprob: -11.887520790100098
    4. '	in' → logprob: -13.387520790100098
    5. '   ' → logprob: -14.012520790100098
    6. 's' → logprob: -14.137520790100098
    7. ' ' → logprob: -15.262520790100098
    8. '_in' → logprob: -15.637520790100098
    9. '_screen' → logprob: -16.01251983642578
    10. 'import' → logprob: -16.13751983642578

Token 1697: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -1.8624639324116288e-06
    2. ' parse' → logprob: -13.250001907348633
    3. '(parse' → logprob: -17.250001907348633
    4. '	parse' → logprob: -19.375001907348633
    5. '=parse' → logprob: -19.625001907348633
    6. '_parse' → logprob: -22.625001907348633
    7. '   ' → logprob: -22.875001907348633
    8. 'parser' → logprob: -22.875001907348633
    9. '
' → logprob: -23.250001907348633
    10. '.parse' → logprob: -23.375001907348633

Token 1698: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -9.889424836728722e-05
    2. '_' → logprob: -10.500099182128906
    3. 'input' → logprob: -10.625099182128906
    4. '()' → logprob: -11.625099182128906
    5. '_
' → logprob: -11.625099182128906
    6. '()
' → logprob: -11.750099182128906
    7. 'Input' → logprob: -12.250099182128906
    8. '_screen' → logprob: -12.250099182128906
    9. '(
' → logprob: -12.875099182128906
    10. '_inputs' → logprob: -13.375099182128906

Token 1699: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.059307392686605453
    2. '():
' → logprob: -2.934307336807251
    3. ':' → logprob: -5.43430757522583
    4. ':
' → logprob: -10.434307098388672
    5. '():
' → logprob: -12.059307098388672
    6. ' ():' → logprob: -12.059307098388672
    7. '()' → logprob: -12.434307098388672
    8. '   ' → logprob: -12.684307098388672
    9. '):' → logprob: -14.059307098388672
    10. '(screen' → logprob: -14.184307098388672

Token 1700: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03809703141450882
    2. '   ' → logprob: -3.2880971431732178
    3. '```' → logprob: -11.038097381591797
    4. '    
' → logprob: -11.288097381591797
    5. '        
' → logprob: -11.663097381591797
    6. '    ' → logprob: -12.038097381591797
    7. '<|end|>' → logprob: -12.788097381591797
    8. ' for' → logprob: -12.913097381591797
    9. '           ' → logprob: -13.413097381591797
    10. '     ' → logprob: -13.913097381591797

Token 1701: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.013811679556965828
    2. 'result' → logprob: -5.1388115882873535
    3. ' print' → logprob: -5.6388115882873535
    4. 'if' → logprob: -6.1388115882873535
    5. 'safe' → logprob: -6.7638115882873535
    6. ' if' → logprob: -8.138812065124512
    7. '   ' → logprob: -8.138812065124512
    8. ' safe' → logprob: -8.513812065124512
    9. ' result' → logprob: -9.263812065124512
    10. '       ' → logprob: -9.388812065124512

Token 1702: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.005496395286172628
    2. '('' → logprob: -5.755496501922607
    3. '(' → logprob: -6.505496501922607
    4. '"' → logprob: -7.130496501922607
    5. '(int' → logprob: -12.13049602508545
    6. '(("' → logprob: -12.38049602508545
    7. ''' → logprob: -12.63049602508545
    8. '(
' → logprob: -13.13049602508545
    9. '1' → logprob: -13.75549602508545
    10. 'int' → logprob: -14.00549602508545

Token 1703: 'Yes' (ID: 13022)
  Prédit: 'YES'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'YES' → logprob: -0.12647482752799988
    2. 'SAFE' → logprob: -2.6264748573303223
    3. 'safe' → logprob: -3.5014748573303223
    4. '"' → logprob: -4.751474857330322
    5. 'Safe' → logprob: -5.626474857330322
    6. 'yes' → logprob: -6.876474857330322
    7. 'unsafe' → logprob: -6.876474857330322
    8. '%s' → logprob: -7.251474857330322
    9. 'Yes' → logprob: -7.876474857330322
    10. ''' → logprob: -8.751474380493164

Token 1704: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00861528143286705
    2. '")' → logprob: -4.758615493774414
    3. '")
' → logprob: -15.508615493774414
    4. '```' → logprob: -15.883615493774414
    5. ''' → logprob: -16.133615493774414
    6. '",' → logprob: -16.883615493774414
    7. '"""' → logprob: -16.883615493774414
    8. '</' → logprob: -17.008615493774414
    9. '\n' → logprob: -17.258615493774414
    10. ' if' → logprob: -17.258615493774414

Token 1705: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02533804066479206
    2. 'if' → logprob: -4.275338172912598
    3. ')' → logprob: -4.775338172912598
    4. '()' → logprob: -6.275338172912598
    5. '   ' → logprob: -8.150338172912598
    6. '(' → logprob: -8.775338172912598
    7. '       ' → logprob: -8.900338172912598
    8. '")' → logprob: -9.400338172912598
    9. '"' → logprob: -10.025338172912598
    10. ',' → logprob: -10.900338172912598

Token 1706: ' screen' (ID: 6188)
  Prédit: 'screen'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'screen' → logprob: -0.07889033854007721
    2. ' screen' → logprob: -2.578890323638916
    3. '(screen' → logprob: -14.828890800476074
    4. '	screen' → logprob: -15.203890800476074
    5. '   ' → logprob: -17.453889846801758
    6. 'not' → logprob: -18.953889846801758
    7. ' not' → logprob: -19.453889846801758
    8. 'creen' → logprob: -19.578889846801758
    9. '_screen' → logprob: -19.953889846801758
    10. '       ' → logprob: -20.078889846801758

Token 1707: '.has' (ID: 10752)
  Prédit: '.has'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.has' → logprob: -0.0031879288144409657
    2. '.is' → logprob: -5.753188133239746
    3. '.' → logprob: -11.753188133239746
    4. ').' → logprob: -13.878188133239746
    5. '.have' → logprob: -14.378188133239746
    6. 'has' → logprob: -14.753188133239746
    7. ' .' → logprob: -15.378188133239746
    8. '.Has' → logprob: -16.50318717956543
    9. '   ' → logprob: -16.87818717956543
    10. '(has' → logprob: -17.62818717956543

Token 1708: '_safe' (ID: 87847)
  Prédit: '_safe'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_safe' → logprob: -3.583550642360933e-05
    2. 'safe' → logprob: -10.250036239624023
    3. ' safe' → logprob: -15.125036239624023
    4. '_SAFE' → logprob: -16.625036239624023
    5. 'Safe' → logprob: -16.750036239624023
    6. '_' → logprob: -17.500036239624023
    7. 's' → logprob: -18.000036239624023
    8. 'a' → logprob: -18.250036239624023
    9. '_s' → logprob: -18.375036239624023
    10. '\' → logprob: -18.625036239624023

Token 1709: '_area' (ID: 34097)
  Prédit: '_area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_area' → logprob: -2.339278580620885e-06
    2. 'area' → logprob: -14.250001907348633
    3. '_AREA' → logprob: -14.500001907348633
    4. '_space' → logprob: -14.625001907348633
    5. ' area' → logprob: -15.000001907348633
    6. 'Area' → logprob: -15.500001907348633
    7. '_distance' → logprob: -16.375001907348633
    8. '_' → logprob: -16.875001907348633
    9. ' _' → logprob: -17.375001907348633
    10. '
' → logprob: -17.750001907348633

Token 1710: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -1.8624639324116288e-06
    2. 'else' → logprob: -13.750001907348633
    3. ' else' → logprob: -14.500001907348633
    4. ' ()' → logprob: -15.625001907348633
    5. '()
' → logprob: -16.125001907348633
    6. '(' → logprob: -19.125001907348633
    7. '()==' → logprob: -19.250001907348633
    8. '()`' → logprob: -19.750001907348633
    9. '())' → logprob: -20.000001907348633
    10. '（）' → logprob: -20.750001907348633

Token 1711: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.163333922624588
    2. 'else' → logprob: -1.9133338928222656
    3. '()' → logprob: -5.788333892822266
    4. ')' → logprob: -10.288333892822266
    5. ' ' → logprob: -13.038333892822266
    6. '())' → logprob: -13.413333892822266
    7. '       ' → logprob: -14.038333892822266
    8. '   ' → logprob: -14.163333892822266
    9. '```' → logprob: -14.288333892822266
    10. '        ' → logprob: -14.663333892822266

Token 1712: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.00028410006780177355
    2. ' "' → logprob: -8.875284194946289
    3. '"No' → logprob: -8.875284194946289
    4. ')' → logprob: -13.625284194946289
    5. ''' → logprob: -13.875284194946289
    6. '
' → logprob: -14.625284194946289
    7. ' ' → logprob: -14.625284194946289
    8. '   ' → logprob: -15.000284194946289
    9. '("' → logprob: -15.000284194946289
    10. 'Yes' → logprob: -15.625284194946289

Token 1713: 'No' (ID: 3160)
  Prédit: 'No'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'No' → logprob: -0.001502717612311244
    2. '"No' → logprob: -6.501502513885498
    3. '"' → logprob: -15.126502990722656
    4. ' No' → logprob: -16.001502990722656
    5. 'NO' → logprob: -17.126502990722656
    6. '“No' → logprob: -18.001502990722656
    7. ''' → logprob: -18.501502990722656
    8. 'Safe' → logprob: -19.376502990722656
    9. '_No' → logprob: -19.501502990722656
    10. '   ' → logprob: -20.001502990722656

Token 1714: '")

' (ID: 10822)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0003577495808713138
    2. ')")' → logprob: -8.250357627868652
    3. ')' → logprob: -9.250357627868652
    4. '}")' → logprob: -15.500357627868652
    5. '")
' → logprob: -16.50035858154297
    6. '()' → logprob: -17.87535858154297
    7. '!")' → logprob: -17.87535858154297
    8. '())' → logprob: -18.12535858154297
    9. '.")' → logprob: -18.62535858154297
    10. '"))' → logprob: -18.62535858154297

Token 1715: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00018661346985027194
    2. '```' → logprob: -8.750186920166016
    3. ' if' → logprob: -10.750186920166016
    4. '
' → logprob: -12.500186920166016
    5. 'main' → logprob: -13.250186920166016
    6. '<|end|>' → logprob: -15.125186920166016
    7. '``' → logprob: -15.375186920166016
    8. '    
' → logprob: -15.875186920166016
    9. '#' → logprob: -16.250186920166016
    10. '  
' → logprob: -16.375186920166016

Token 1716: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04860984906554222
    2. ' __' → logprob: -3.048609733581543
    3. 'name' → logprob: -11.673609733581543
    4. '_name' → logprob: -11.798609733581543
    5. '_' → logprob: -12.548609733581543
    6. '___' → logprob: -13.423609733581543
    7. 'Name' → logprob: -14.548609733581543
    8. '/__' → logprob: -15.548609733581543
    9. 'True' → logprob: -15.923609733581543
    10. '```' → logprob: -16.04861068725586

Token 1717: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.003500646213069558
    2. ' ==' → logprob: -6.503500461578369
    3. '==' → logprob: -6.878500461578369
    4. ' __' → logprob: -7.378500461578369
    5. '.__' → logprob: -8.753500938415527
    6. 'name' → logprob: -9.878500938415527
    7. '__.__' → logprob: -10.503500938415527
    8. 'if' → logprob: -11.003500938415527
    9. '=="' → logprob: -11.128500938415527
    10. '__
' → logprob: -11.503500938415527

Token 1718: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -2.558399319241289e-05
    2. '__.__' → logprob: -10.875025749206543
    3. '==' → logprob: -12.125025749206543
    4. '__.' → logprob: -14.125025749206543
    5. ' ==' → logprob: -15.625025749206543
    6. '__["' → logprob: -17.000024795532227
    7. '___' → logprob: -17.250024795532227
    8. '____' → logprob: -17.625024795532227
    9. '=="' → logprob: -17.875024795532227
    10. '__('' → logprob: -18.000024795532227

Token 1719: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.20403215289115906
    2. ' ==' → logprob: -2.0790321826934814
    3. '=="' → logprob: -3.3290321826934814
    4. '__' → logprob: -3.8290321826934814
    5. '=='' → logprob: -6.329031944274902
    6. '==
' → logprob: -10.079031944274902
    7. '.__' → logprob: -10.579031944274902
    8. '.' → logprob: -10.704031944274902
    9. '===' → logprob: -11.204031944274902
    10. '__.__' → logprob: -11.204031944274902

Token 1720: ' "__' (ID: 27367)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.16030648350715637
    2. '"' → logprob: -1.910306453704834
    3. '__' → logprob: -9.410306930541992
    4. ' "__' → logprob: -15.660306930541992
    5. ' '__' → logprob: -15.910306930541992
    6. ''name' → logprob: -16.410306930541992
    7. '('__' → logprob: -17.410306930541992
    8. ''m' → logprob: -17.660306930541992
    9. 'main' → logprob: -17.910306930541992
    10. ''"' → logprob: -18.160306930541992

Token 1721: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.2526019513607025
    2. '__' → logprob: -1.502601981163025
    3. ''' → logprob: -7.7526021003723145
    4. '"' → logprob: -9.002601623535156
    5. 'name' → logprob: -9.752601623535156
    6. '_main' → logprob: -10.127601623535156
    7. ' main' → logprob: -11.502601623535156
    8. '_MAIN' → logprob: -12.877601623535156
    9. 'MAIN' → logprob: -13.377601623535156
    10. '__":
' → logprob: -13.627601623535156

Token 1722: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.03862292319536209
    2. '__' → logprob: -3.2886228561401367
    3. '__':
' → logprob: -7.788622856140137
    4. '__.' → logprob: -8.788622856140137
    5. '__.__' → logprob: -11.288622856140137
    6. '__["' → logprob: -13.788622856140137
    7. '__
' → logprob: -14.663622856140137
    8. '__
' → logprob: -15.788622856140137
    9. '__",' → logprob: -16.413623809814453
    10. '__[' → logprob: -17.538623809814453

Token 1723: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.3207416534423828
    2. '   ' → logprob: -1.3207416534423828
    3. '	main' → logprob: -5.070741653442383
    4. ' main' → logprob: -6.945741653442383
    5. '_main' → logprob: -9.195741653442383
    6. 'import' → logprob: -10.320741653442383
    7. '    
' → logprob: -10.570741653442383
    8. '__' → logprob: -11.070741653442383
    9. '   ' → logprob: -11.945741653442383
    10. '```' → logprob: -11.945741653442383

Token 1724: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -7.822646693966817e-06
    2. 'import' → logprob: -12.250007629394531
    3. '   ' → logprob: -13.000007629394531
    4. ' main' → logprob: -14.500007629394531
    5. '	main' → logprob: -15.250007629394531
    6. '_main' → logprob: -20.37500762939453
    7. '(main' → logprob: -20.87500762939453
    8. '.main' → logprob: -21.75000762939453
    9. '
' → logprob: -21.87500762939453
    10. '```' → logprob: -23.37500762939453

Token 1725: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1723
Tokens correctement prédits (1ère position, stricte): 709
Tokens correctement prédits (1ère position, avec adaptation): 783
Tokens correctement prédits (top 10): 1420
Précision stricte (1ère position): 41.15%
Précision adaptée (1ère position): 45.44%
Précision (top 10): 82.41%
================================================================================
