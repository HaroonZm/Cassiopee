================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:17:11
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def is_prime(num):
    if num < 2:
        return False
    for i in range(2, int(num**0.5)+1):
        if num % i == 0:
            return False
    return True

while True:
    n = int(input())
    if n == 0:
        break
    count = 0
    for i in range(2, n//2+1):
        if is_prime(i) and is_prime(n - i):
            count += 1
    print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' is' (ID: 382)
  → Token d'amorce (pas de prédiction)

Token 2: '_prime' (ID: 98616)
  → Token d'amorce (pas de prédiction)

Token 3: '(num' (ID: 15828)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01459873653948307
    2. '_' → logprob: -4.264598846435547
    3. '```' → logprob: -9.139598846435547
    4. ' (' → logprob: -9.514598846435547
    5. '(_' → logprob: -9.639598846435547
    6. '_(' → logprob: -9.764598846435547
    7. '(_:' → logprob: -10.139598846435547
    8. '("("' → logprob: -11.389598846435547
    9. '(def' → logprob: -11.764598846435547
    10. '(a' → logprob: -11.889598846435547

Token 4: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04325277730822563
    2. ')' → logprob: -3.16825270652771
    3. ':' → logprob: -8.418252944946289
    4. '):
' → logprob: -11.293252944946289
    5. '```' → logprob: -11.418252944946289
    6. ' ):' → logprob: -13.918252944946289
    7. '   ' → logprob: -13.918252944946289
    8. ''):' → logprob: -14.293252944946289
    9. ')：' → logprob: -14.293252944946289
    10. ':)' → logprob: -14.418252944946289

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014996565878391266
    2. '   ' → logprob: -4.889996528625488
    3. '```' → logprob: -5.139996528625488
    4. ':
' → logprob: -7.264996528625488
    5. '():' → logprob: -8.514996528625488
    6. '':' → logprob: -9.264996528625488
    7. '):' → logprob: -9.764996528625488
    8. '":' → logprob: -9.889996528625488
    9. ' :' → logprob: -9.889996528625488
    10. '    
' → logprob: -10.139996528625488

Token 6: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4374653398990631
    2. '```' → logprob: -1.8124653100967407
    3. ' if' → logprob: -2.6874654293060303
    4. ' 
' → logprob: -2.9374654293060303
    5. ':' → logprob: -4.187465190887451
    6. ' ' → logprob: -4.312465190887451
    7. '\' → logprob: -4.687465190887451
    8. '    
' → logprob: -4.687465190887451
    9. '    ' → logprob: -5.187465190887451
    10. '\n' → logprob: -5.937465190887451

Token 7: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.05065682902932167
    2. ' ' → logprob: -3.050656795501709
    3. ' not' → logprob: -6.675656795501709
    4. 'num' → logprob: -7.175656795501709
    5. ' ' → logprob: -10.925657272338867
    6. ' n' → logprob: -11.425657272338867
    7. '  ' → logprob: -12.300657272338867
    8. '<num' → logprob: -13.175657272338867
    9. '	num' → logprob: -13.300657272338867
    10. '   ' → logprob: -13.300657272338867

Token 8: ' <' (ID: 464)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2970044016838074
    2. ' <' → logprob: -1.5470044612884521
    3. ' ' → logprob: -3.297004461288452
    4. ' %' → logprob: -5.797004222869873
    5. ' ==' → logprob: -6.547004222869873
    6. '<=' → logprob: -7.172004222869873
    7. '<' → logprob: -7.172004222869873
    8. ' >' → logprob: -7.422004222869873
    9. '%' → logprob: -9.547004699707031
    10. '   ' → logprob: -9.672004699707031

Token 9: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.47409334778785706
    2. ' ' → logprob: -0.9740933179855347
    3. '```' → logprob: -11.724093437194824
    4. ' ' → logprob: -12.599093437194824
    5. '=' → logprob: -13.349093437194824
    6. '3' → logprob: -14.224093437194824
    7. '   ' → logprob: -14.224093437194824
    8. '(' → logprob: -14.974093437194824
    9. ''' → logprob: -15.099093437194824
    10. '_' → logprob: -15.224093437194824

Token 10: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.8206473871250637e-05
    2. ' ' → logprob: -10.500028610229492
    3. '```' → logprob: -14.750028610229492
    4. '   ' → logprob: -16.500028610229492
    5. '3' → logprob: -17.500028610229492
    6. '۲' → logprob: -17.750028610229492
    7. '(' → logprob: -17.875028610229492
    8. '２' → logprob: -18.000028610229492
    9. '_' → logprob: -18.875028610229492
    10. '"' → logprob: -19.000028610229492

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0020974453072994947
    2. ':
' → logprob: -6.5020976066589355
    3. ':return' → logprob: -7.7520976066589355
    4. ' :' → logprob: -9.377097129821777
    5. '   ' → logprob: -10.002097129821777
    6. '       ' → logprob: -11.252097129821777
    7. '):' → logprob: -12.127097129821777
    8. ':\' → logprob: -12.377097129821777
    9. '    ' → logprob: -12.502097129821777
    10. ' :
' → logprob: -12.877097129821777

Token 12: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6672260761260986
    2. '   ' → logprob: -1.5422260761260986
    3. ' return' → logprob: -2.1672260761260986
    4. '    ' → logprob: -3.5422260761260986
    5. '\n' → logprob: -3.5422260761260986
    6. ':' → logprob: -3.6672260761260986
    7. 'return' → logprob: -3.6672260761260986
    8. ':return' → logprob: -4.0422258377075195
    9. ':
' → logprob: -4.1672258377075195
    10. '\' → logprob: -5.1672258377075195

Token 13: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.6461475491523743
    2. ' return' → logprob: -1.0211474895477295
    3. '   ' → logprob: -2.5211474895477295
    4. '       ' → logprob: -3.3961474895477295
    5. '    ' → logprob: -7.146147727966309
    6. '```' → logprob: -7.771147727966309
    7. ':return' → logprob: -8.521147727966309
    8. '\n' → logprob: -8.646147727966309
    9. ' 
' → logprob: -9.646147727966309
    10. '
' → logprob: -9.896147727966309

Token 14: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.014185366220772266
    2. 'False' → logprob: -4.264185428619385
    3. ' True' → logprob: -10.764184951782227
    4. ' ' → logprob: -14.389184951782227
    5. 'True' → logprob: -16.139184951782227
    6. ' None' → logprob: -17.764184951782227
    7. ' ' → logprob: -18.139184951782227
    8. ' false' → logprob: -18.639184951782227
    9. '(False' → logprob: -19.014184951782227
    10. '=False' → logprob: -20.889184951782227

Token 15: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19045764207839966
    2. '\n' → logprob: -2.440457582473755
    3. '
' → logprob: -3.065457582473755
    4. '    
' → logprob: -3.940457582473755
    5. ':
' → logprob: -4.440457820892334
    6. '```' → logprob: -6.190457820892334
    7. '  
' → logprob: -6.315457820892334
    8. ':' → logprob: -6.440457820892334
    9. '\' → logprob: -7.315457820892334
    10. ':\' → logprob: -7.565457820892334

Token 16: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0797366201877594
    2. '```' → logprob: -3.2047367095947266
    3. '    
' → logprob: -4.079736709594727
    4. '
' → logprob: -5.329736709594727
    5. '\n' → logprob: -5.704736709594727
    6. ':
' → logprob: -5.704736709594727
    7. ':' → logprob: -5.829736709594727
    8. '   
' → logprob: -6.329736709594727
    9. '  
' → logprob: -6.454736709594727
    10. '\' → logprob: -7.954736709594727

Token 17: ' for' (ID: 395)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9191386699676514
    2. '    
' → logprob: -1.7941386699676514
    3. '   ' → logprob: -2.1691386699676514
    4. ':
' → logprob: -2.2941386699676514
    5. '\n' → logprob: -2.7941386699676514
    6. 'for' (adapté à ' for') → logprob: -2.9191386699676514
    7. ' 
' → logprob: -3.4191386699676514
    8. ' for' → logprob: -3.6691386699676514
    9. '  
' → logprob: -3.7941386699676514
    10. '   
' → logprob: -4.5441389083862305

Token 18: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.004892042838037014
    2. ' ' → logprob: -5.379891872406006
    3. 'i' → logprob: -8.379892349243164
    4. ' n' → logprob: -10.879892349243164
    5. ' in' → logprob: -11.379892349243164
    6. 'n' → logprob: -12.504892349243164
    7. ' _' → logprob: -13.004892349243164
    8. '_' → logprob: -13.004892349243164
    9. ' range' → logprob: -13.879892349243164
    10. ' I' → logprob: -14.754892349243164

Token 19: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036886746529489756
    2. ' ' → logprob: -5.753688812255859
    3. 'in' → logprob: -7.628688812255859
    4. '  ' → logprob: -11.75368881225586
    5. ' i' → logprob: -11.75368881225586
    6. '   ' → logprob: -12.50368881225586
    7. '    ' → logprob: -14.25368881225586
    8. '1' → logprob: -14.37868881225586
    9. 'range' → logprob: -14.50368881225586
    10. 'space' → logprob: -14.62868881225586

Token 20: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.252848356962204
    2. ' ' → logprob: -1.5028483867645264
    3. 'range' → logprob: -7.127848148345947
    4. ' space' → logprob: -9.752848625183105
    5. ' in' → logprob: -10.752848625183105
    6. ' xrange' → logprob: -11.502848625183105
    7. '	range' → logprob: -11.627848625183105
    8. '  ' → logprob: -12.127848625183105
    9. ' ' → logprob: -12.502848625183105
    10. ' i' → logprob: -13.502848625183105

Token 21: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002631238894537091
    2. ' (' → logprob: -8.250263214111328
    3. '<|end|>' → logprob: -14.250263214111328
    4. '(
' → logprob: -14.375263214111328
    5. ' ' → logprob: -15.625263214111328
    6. '2' → logprob: -15.750263214111328
    7. '(i' → logprob: -16.500263214111328
    8. '1' → logprob: -16.500263214111328
    9. '(

' → logprob: -17.000263214111328
    10. '(space' → logprob: -17.000263214111328

Token 22: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.259079363080673e-05
    2. ' ' → logprob: -11.375012397766113
    3. '(' → logprob: -14.375012397766113
    4. '   ' → logprob: -14.875012397766113
    5. '```' → logprob: -16.62501335144043
    6. ')' → logprob: -17.37501335144043
    7. '    ' → logprob: -19.25001335144043
    8. '  ' → logprob: -20.12501335144043
    9. '	' → logprob: -20.31251335144043
    10. '       ' → logprob: -20.37501335144043

Token 23: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07172878086566925
    2. ' ,' → logprob: -2.6967287063598633
    3. ',num' → logprob: -6.571728706359863
    4. ' ' → logprob: -7.946728706359863
    5. ',
' → logprob: -11.571728706359863
    6. ',int' → logprob: -12.446728706359863
    7. ',i' → logprob: -12.446728706359863
    8. '*num' → logprob: -12.446728706359863
    9. '   ' → logprob: -12.696728706359863
    10. '  ' → logprob: -12.946728706359863

Token 24: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4332731366157532
    2. 'int' → logprob: -1.5582730770111084
    3. ' num' → logprob: -2.4332730770111084
    4. 'num' → logprob: -2.9332730770111084
    5. '   ' → logprob: -9.308273315429688
    6. '    ' → logprob: -10.308273315429688
    7. ' ' → logprob: -11.808273315429688
    8. '  ' → logprob: -12.808273315429688
    9. ' )' → logprob: -13.183273315429688
    10. ')' → logprob: -13.183273315429688

Token 25: '(num' (ID: 15828)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3870124816894531
    2. '(num' → logprob: -1.1370124816894531
    3. '(s' → logprob: -9.387012481689453
    4. ' (' → logprob: -10.262012481689453
    5. '(
' → logprob: -11.637012481689453
    6. '(n' → logprob: -12.887012481689453
    7. '(math' → logprob: -13.137012481689453
    8. '(pow' → logprob: -13.387012481689453
    9. '(i' → logprob: -13.637012481689453
    10. 'num' → logprob: -13.762012481689453

Token 26: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.048666853457689285
    2. ' **' → logprob: -3.0486669540405273
    3. ''s' → logprob: -10.923666954040527
    4. ' ' → logprob: -11.298666954040527
    5. ')**' → logprob: -11.798666954040527
    6. '.sqrt' → logprob: -11.923666954040527
    7. '(' → logprob: -11.923666954040527
    8. ')' → logprob: -12.173666954040527
    9. '(num' → logprob: -12.298666954040527
    10. '```' → logprob: -12.548666954040527

Token 27: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002964935847558081
    2. ' ' → logprob: -8.125296592712402
    3. '.' → logprob: -14.625296592712402
    4. ' ' → logprob: -17.875295639038086
    5. '(' → logprob: -18.875295639038086
    6. '   ' → logprob: -19.125295639038086
    7. ')' → logprob: -19.875295639038086
    8. '```' → logprob: -20.000295639038086
    9. '  ' → logprob: -20.375295639038086
    10. '    ' → logprob: -20.875295639038086

Token 28: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -9.491498531133402e-06
    2. '0' → logprob: -12.250009536743164
    3. ' .' → logprob: -12.875009536743164
    4. '`.' → logprob: -13.875009536743164
    5. '5' → logprob: -14.750009536743164
    6. '```' → logprob: -15.750009536743164
    7. '​.' → logprob: -15.875009536743164
    8. ''.' → logprob: -16.000009536743164
    9. '1' → logprob: -16.125009536743164
    10. ' ' → logprob: -16.750009536743164

Token 29: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -1.8624639324116288e-06
    2. '```' → logprob: -14.437501907348633
    3. '   ' → logprob: -15.875001907348633
    4. '``' → logprob: -16.000001907348633
    5. '4' → logprob: -16.062501907348633
    6. '.' → logprob: -16.187501907348633
    7. '25' → logprob: -16.625001907348633
    8. '
' → logprob: -16.937501907348633
    9. '**' → logprob: -17.062501907348633
    10. '05' → logprob: -17.062501907348633

Token 30: ')+' (ID: 16161)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1458975225687027
    2. ')+' → logprob: -2.020897626876831
    3. '+' → logprob: -5.770897388458252
    4. ' +' → logprob: -10.14589786529541
    5. ' )' → logprob: -10.27089786529541
    6. '+)' → logprob: -11.77089786529541
    7. '(' → logprob: -12.39589786529541
    8. '}+' → logprob: -12.77089786529541
    9. '()+' → logprob: -13.02089786529541
    10. '()' → logprob: -13.27089786529541

Token 31: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013270224444568157
    2. ' ' → logprob: -6.626327037811279
    3. '   ' → logprob: -14.251326560974121
    4. '  ' → logprob: -15.501326560974121
    5. '2' → logprob: -15.626326560974121
    6. '```' → logprob: -16.501327514648438
    7. ')' → logprob: -17.001327514648438
    8. '    ' → logprob: -17.376327514648438
    9. '(' → logprob: -18.626327514648438
    10. '۱' → logprob: -19.188827514648438

Token 32: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0032793101854622364
    2. ':' → logprob: -5.753279209136963
    3. ' ):' → logprob: -10.128279685974121
    4. ')' → logprob: -10.128279685974121
    5. '):
' → logprob: -11.378279685974121
    6. '   ' → logprob: -12.378279685974121
    7. ',' → logprob: -13.378279685974121
    8. '}:' → logprob: -13.628279685974121
    9. '():' → logprob: -14.628279685974121
    10. ' ' → logprob: -14.878279685974121

Token 33: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003008011495694518
    2. ' :' → logprob: -6.378007888793945
    3. '   ' → logprob: -7.503007888793945
    4. '):' → logprob: -8.128007888793945
    5. ':
' → logprob: -8.253007888793945
    6. '    ' → logprob: -9.378007888793945
    7. '       ' → logprob: -10.003007888793945
    8. ' if' → logprob: -11.128007888793945
    9. ':**' → logprob: -11.253007888793945
    10. '():' → logprob: -11.503007888793945

Token 34: ' if' (ID: 538)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17108967900276184
    2. ' :' → logprob: -2.7960896492004395
    3. ' if' → logprob: -3.1710896492004395
    4. '    ' → logprob: -4.0460896492004395
    5. 'if' (adapté à ' if') → logprob: -4.0460896492004395
    6. '   ' → logprob: -4.2960896492004395
    7. '       ' → logprob: -6.4210896492004395
    8. '<|end|>' → logprob: -6.6710896492004395
    9. ' ' → logprob: -7.0460896492004395
    10. ' ):' → logprob: -7.4210896492004395

Token 35: ' num' (ID: 2269)
  Prédit: ' num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' num' → logprob: -0.0004642736748792231
    2. 'num' → logprob: -7.75046443939209
    3. ' ' → logprob: -10.50046443939209
    4. '	num' → logprob: -13.25046443939209
    5. '(num' → logprob: -13.37546443939209
    6. ' ' → logprob: -13.75046443939209
    7. '<num' → logprob: -14.50046443939209
    8. ' (' → logprob: -14.75046443939209
    9. ' n' → logprob: -15.50046443939209
    10. '[num' → logprob: -15.87546443939209

Token 36: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.002248388482257724
    2. '%' → logprob: -6.127248287200928
    3. ' ' → logprob: -9.752248764038086
    4. '%i' → logprob: -12.502248764038086
    5. '<|end|>' → logprob: -15.127248764038086
    6. ' %#' → logprob: -15.377248764038086
    7. ' %)' → logprob: -15.377248764038086
    8. ' ' → logprob: -15.502248764038086
    9. ' %=' → logprob: -16.127248764038086
    10. ' %
' → logprob: -16.627248764038086

Token 37: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.10039298981428146
    2. 'i' → logprob: -2.350393056869507
    3. ' ' → logprob: -8.850393295288086
    4. '	i' → logprob: -10.100393295288086
    5. '2' → logprob: -14.725393295288086
    6. ' ‌' → logprob: -15.100393295288086
    7. '<|end|>' → logprob: -15.100393295288086
    8. ' ' → logprob: -15.225393295288086
    9. '  ' → logprob: -15.350393295288086
    10. '   ' → logprob: -15.600393295288086

Token 38: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.011076359078288078
    2. '==' → logprob: -4.5110764503479
    3. ' =' → logprob: -11.636075973510742
    4. '=' → logprob: -11.636075973510742
    5. ' ' → logprob: -11.636075973510742
    6. ' !=' → logprob: -14.136075973510742
    7. ')==' → logprob: -15.011075973510742
    8. ')' → logprob: -15.136075973510742
    9. ' ===' → logprob: -15.886075973510742
    10. ' ' → logprob: -16.261075973510742

Token 39: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12692810595035553
    2. '0' → logprob: -2.1269280910491943
    3. ' ' → logprob: -16.876928329467773
    4. '  ' → logprob: -19.626928329467773
    5. '```' → logprob: -19.876928329467773
    6. '	' → logprob: -21.251928329467773
    7. '   ' → logprob: -21.376928329467773
    8. ' ' → logprob: -21.376928329467773
    9. '=' → logprob: -21.626928329467773
    10. '۰' → logprob: -21.751928329467773

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '۰' → logprob: -20.000017166137695
    4. '```' → logprob: -21.625017166137695
    5. '０' → logprob: -21.750017166137695
    6. ' ' → logprob: -21.875017166137695
    7. '٠' → logprob: -22.375017166137695
    8. '00' → logprob: -22.375017166137695
    9. '  ' → logprob: -22.875017166137695
    10. ' ' → logprob: -22.875017166137695

Token 41: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00018077615823131055
    2. ':return' → logprob: -8.875181198120117
    3. ':
' → logprob: -10.625181198120117
    4. '):' → logprob: -11.625181198120117
    5. ' :' → logprob: -12.500181198120117
    6. '       ' → logprob: -13.375181198120117
    7. '           ' → logprob: -13.625181198120117
    8. ':**' → logprob: -14.500181198120117
    9. '<|end|>' → logprob: -16.250181198120117
    10. '():' → logprob: -16.500181198120117

Token 42: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2501390278339386
    2. '       ' → logprob: -1.6251389980316162
    3. ' return' → logprob: -4.000139236450195
    4. ' ' → logprob: -6.625139236450195
    5. ' 
' → logprob: -6.625139236450195
    6. '   ' → logprob: -6.875139236450195
    7. ' ' → logprob: -7.250139236450195
    8. 'return' → logprob: -7.250139236450195
    9. '        ' → logprob: -8.500139236450195
    10. '               ' → logprob: -8.500139236450195

Token 43: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.39786049723625183
    2. 'return' (adapté à ' return') → logprob: -1.1478605270385742
    3. '               ' → logprob: -4.897860527038574
    4. '           ' → logprob: -5.772860527038574
    5. '       ' → logprob: -8.647860527038574
    6. '   ' → logprob: -9.272860527038574
    7. ' 
' → logprob: -9.897860527038574
    8. ' ' → logprob: -10.897860527038574
    9. ' ' → logprob: -11.772860527038574
    10. '	return' → logprob: -13.022860527038574

Token 44: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.1602904349565506
    2. 'False' → logprob: -1.9102904796600342
    3. ' True' → logprob: -9.660290718078613
    4. 'True' → logprob: -12.910290718078613
    5. ' ' → logprob: -16.160289764404297
    6. ' ' → logprob: -18.785289764404297
    7. '(False' → logprob: -19.285289764404297
    8. ' false' → logprob: -19.910289764404297
    9. 'F' → logprob: -21.410289764404297
    10. ' F' → logprob: -21.785289764404297

Token 45: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08112159371376038
    2. '
' → logprob: -3.3311216831207275
    3. '    
' → logprob: -3.7061216831207275
    4. '\n' → logprob: -4.831121444702148
    5. ' 
' → logprob: -5.581121444702148
    6. '  
' → logprob: -5.956121444702148
    7. '   
' → logprob: -6.456121444702148
    8. ' return' → logprob: -7.706121444702148
    9. '' → logprob: -7.956121444702148
    10. '```' → logprob: -9.081121444702148

Token 46: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0005019200034439564
    2. '    
' → logprob: -8.87550163269043
    3. 'return' → logprob: -8.87550163269043
    4. ' return' → logprob: -9.50050163269043
    5. '
' → logprob: -9.75050163269043
    6. '```' → logprob: -10.25050163269043
    7. '       ' → logprob: -10.37550163269043
    8. ' 
' → logprob: -11.87550163269043
    9. '  
' → logprob: -12.50050163269043
    10. '	return' → logprob: -13.00050163269043

Token 47: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.4086547791957855
    2. '   ' → logprob: -1.158654808998108
    3. ' return' → logprob: -3.9086546897888184
    4. '
' → logprob: -6.908654689788818
    5. '    
' → logprob: -8.658655166625977
    6. ' ' → logprob: -9.158655166625977
    7. '```' → logprob: -9.658655166625977
    8. ' 
' → logprob: -10.158655166625977
    9. ':return' → logprob: -10.658655166625977
    10. 'r' → logprob: -11.033655166625977

Token 48: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.4740770161151886
    2. ' True' → logprob: -0.9740769863128662
    3. '(True' → logprob: -19.599077224731445
    4. '=True' → logprob: -20.224077224731445
    5. ' Tru' → logprob: -21.849077224731445
    6. '   ' → logprob: -21.849077224731445
    7. ' ' → logprob: -22.349077224731445
    8. 'False' → logprob: -23.099077224731445
    9. ' ' → logprob: -23.474077224731445
    10. 'true' → logprob: -23.849077224731445

Token 49: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1965656727552414
    2. '<|end|>' → logprob: -2.446565628051758
    3. '\n' → logprob: -3.571565628051758
    4. '```' → logprob: -4.071565628051758
    5. '#' → logprob: -4.571565628051758
    6. 'newline' → logprob: -4.571565628051758
    7. '\' → logprob: -4.821565628051758
    8. ':' → logprob: -5.321565628051758
    9. '

' → logprob: -6.196565628051758
    10. 'n' → logprob: -6.196565628051758

Token 50: 'while' (ID: 7032)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.685200572013855
    2. '
' → logprob: -1.810200572013855
    3. '<|end|>' → logprob: -1.935200572013855
    4. '\' → logprob: -2.4352006912231445
    5. '```' → logprob: -2.4352006912231445
    6. ':' → logprob: -2.8102006912231445
    7. '#' → logprob: -2.9352006912231445
    8. '\n' → logprob: -3.0602006912231445
    9. 'newline' → logprob: -3.4352006912231445
    10. ')' → logprob: -3.6852006912231445

Token 51: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0028559938073158264
    2. ' True' → logprob: -5.8778557777404785
    3. '  ' → logprob: -10.377856254577637
    4. ' space' → logprob: -12.002856254577637
    5. ' not' → logprob: -12.252856254577637
    6. 'True' → logprob: -13.127856254577637
    7. ' i' → logprob: -13.877856254577637
    8. ' ‌' → logprob: -13.877856254577637
    9. ' a' → logprob: -14.002856254577637
    10. ' ' → logprob: -14.127856254577637

Token 52: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002933942887466401
    2. '():' → logprob: -8.500293731689453
    3. ' :' → logprob: -9.625293731689453
    4. ':
' → logprob: -11.750293731689453
    5. '):' → logprob: -12.000293731689453
    6. ':**' → logprob: -12.250293731689453
    7. '(:' → logprob: -13.875293731689453
    8. '(' → logprob: -14.000293731689453
    9. ',' → logprob: -14.625293731689453
    10. '   ' → logprob: -14.750293731689453

Token 53: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3607996106147766
    2. ' ' → logprob: -1.6107995510101318
    3. ' input' → logprob: -3.110799551010132
    4. ' 
' → logprob: -4.110799789428711
    5. '    ' → logprob: -4.360799789428711
    6. '    
' → logprob: -4.610799789428711
    7. ' n' → logprob: -5.735799789428711
    8. ' )' → logprob: -5.735799789428711
    9. 'input' → logprob: -5.985799789428711
    10. 'n' → logprob: -6.360799789428711

Token 54: ' n' (ID: 297)
  Prédit: ' user'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' user' → logprob: -1.1714041233062744
    2. 'n' (adapté à ' n') → logprob: -1.2964041233062744
    3. ' n' → logprob: -1.5464041233062744
    4. ' inp' → logprob: -2.7964041233062744
    5. ' num' → logprob: -3.2964041233062744
    6. 'user' → logprob: -3.4214041233062744
    7. ' number' → logprob: -3.7964041233062744
    8. 'num' → logprob: -4.171403884887695
    9. '   ' → logprob: -4.421403884887695
    10. ' try' → logprob: -4.921403884887695

Token 55: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013481252826750278
    2. ' ' → logprob: -4.763481140136719
    3. '=' → logprob: -5.513481140136719
    4. 'o' → logprob: -8.138481140136719
    5. '  ' → logprob: -8.513481140136719
    6. 'u' → logprob: -8.763481140136719
    7. '   ' → logprob: -9.513481140136719
    8. 'um' → logprob: -10.388481140136719
    9. 'umber' → logprob: -11.388481140136719
    10. '=input' → logprob: -11.388481140136719

Token 56: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6176061630249023
    2. ' int' → logprob: -0.8676061630249023
    3. 'int' → logprob: -3.7426061630249023
    4. 'input' → logprob: -4.117606163024902
    5. ' in' → logprob: -7.242606163024902
    6. ' ' → logprob: -9.742606163024902
    7. ' inp' → logprob: -10.742606163024902
    8. ' i' → logprob: -10.867606163024902
    9. 'in' → logprob: -11.867606163024902
    10. 'i' → logprob: -12.492606163024902

Token 57: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20152774453163147
    2. '(input' → logprob: -1.701527714729309
    3. 'input' → logprob: -9.45152759552002
    4. '()' → logprob: -10.70152759552002
    5. ' (' → logprob: -12.07652759552002
    6. ' input' → logprob: -13.07652759552002
    7. '(
' → logprob: -13.20152759552002
    8. ' ' → logprob: -13.95152759552002
    9. '('' → logprob: -14.20152759552002
    10. '(

' → logprob: -15.32652759552002

Token 58: '())
' (ID: 4574)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.41682198643684387
    2. '(' → logprob: -1.1668219566345215
    3. '('' → logprob: -4.1668219566345215
    4. '("' → logprob: -5.1668219566345215
    5. '("("' → logprob: -5.5418219566345215
    6. '())' → logprob: -6.1668219566345215
    7. '("")' → logprob: -6.9168219566345215
    8. '(">' → logprob: -7.1668219566345215
    9. '(""))' → logprob: -8.41682243347168
    10. ')' → logprob: -9.91682243347168

Token 59: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7407228946685791
    2. ' ' → logprob: -1.365722894668579
    3. ' if' → logprob: -1.865722894668579
    4. '   ' → logprob: -2.990722894668579
    5. '    ' → logprob: -4.24072265625
    6. '<|end|>' → logprob: -4.24072265625
    7. 'if' → logprob: -4.61572265625
    8. ' :' → logprob: -5.11572265625
    9. ' 
' → logprob: -5.36572265625
    10. ')' → logprob: -5.49072265625

Token 60: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02521180734038353
    2. ' if' → logprob: -3.775211811065674
    3. 'if' (adapté à ' if') → logprob: -7.025211811065674
    4. '<|end|>' → logprob: -8.150211334228516
    5. ':' → logprob: -8.400211334228516
    6. '    ' → logprob: -8.775211334228516
    7. ' 
' → logprob: -9.525211334228516
    8. ' )' → logprob: -9.775211334228516
    9. '  ' → logprob: -10.400211334228516
    10. ' :' → logprob: -10.400211334228516

Token 61: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.00042662365012802184
    2. ' ' → logprob: -8.500426292419434
    3. ' not' → logprob: -8.500426292419434
    4. 'n' → logprob: -11.000426292419434
    5. ' ' → logprob: -12.875426292419434
    6. '	n' → logprob: -15.375426292419434
    7. 'not' → logprob: -17.00042724609375
    8. '_' → logprob: -17.50042724609375
    9. ' (' → logprob: -17.50042724609375
    10. ' ‌' → logprob: -17.62542724609375

Token 62: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.30497708916664124
    2. ' <=' → logprob: -1.4299770593643188
    3. ' <' → logprob: -4.429976940155029
    4. '==' → logprob: -4.804976940155029
    5. '<=' → logprob: -5.929976940155029
    6. ' ' → logprob: -7.304976940155029
    7. '<' → logprob: -9.304977416992188
    8. ' ' → logprob: -12.554977416992188
    9. '<|end|>' → logprob: -12.679977416992188
    10. '==-' → logprob: -13.054977416992188

Token 63: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0036006635054945946
    2. '0' → logprob: -5.628600597381592
    3. ' -' → logprob: -14.37860107421875
    4. ' ' → logprob: -17.37860107421875
    5. '-' → logprob: -17.87860107421875
    6. '  ' → logprob: -18.75360107421875
    7. '<|end|>' → logprob: -19.06610107421875
    8. ' )' → logprob: -20.00360107421875
    9. ')' → logprob: -20.12860107421875
    10. ' a' → logprob: -20.31610107421875

Token 64: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001179512357339263
    2. '-' → logprob: -7.0011796951293945
    3. ' ' → logprob: -8.251179695129395
    4. ' -' → logprob: -12.126179695129395
    5. '42' → logprob: -14.751179695129395
    6. '```' → logprob: -14.751179695129395
    7. '   ' → logprob: -15.813679695129395
    8. '1' → logprob: -15.876179695129395
    9. '``' → logprob: -16.438678741455078
    10. '  ' → logprob: -16.563678741455078

Token 65: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017901362152770162
    2. ' :' → logprob: -6.5017900466918945
    3. ':
' → logprob: -8.251790046691895
    4. ' :
' → logprob: -11.126790046691895
    5. '   ' → logprob: -11.626790046691895
    6. ':return' → logprob: -13.001790046691895
    7. '       ' → logprob: -14.876790046691895
    8. '    ' → logprob: -15.501790046691895
    9. '):' → logprob: -16.37679100036621
    10. ' break' → logprob: -16.37679100036621

Token 66: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01842617243528366
    2. '   ' → logprob: -4.018425941467285
    3. '    ' → logprob: -9.643425941467285
    4. ':' → logprob: -9.768425941467285
    5. ' break' → logprob: -9.893425941467285
    6. ' ' → logprob: -11.018425941467285
    7. '	break' → logprob: -11.143425941467285
    8. '     ' → logprob: -11.143425941467285
    9. '      ' → logprob: -11.518425941467285
    10. '  ' → logprob: -11.893425941467285

Token 67: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.13425903022289276
    2. 'break' (adapté à ' break') → logprob: -2.384258985519409
    3. '   ' → logprob: -3.634258985519409
    4. '       ' → logprob: -5.009259223937988
    5. '	break' → logprob: -7.884259223937988
    6. 'b' → logprob: -11.759259223937988
    7. '```' → logprob: -12.634259223937988
    8. '_break' → logprob: -12.759259223937988
    9. '    
' → logprob: -13.509259223937988
    10. ' ' → logprob: -13.509259223937988

Token 68: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10474091023206711
    2. ' 
' → logprob: -3.354740858078003
    3. '    
' → logprob: -3.729740858078003
    4. '<|end|>' → logprob: -4.604741096496582
    5. ':' → logprob: -4.854741096496582
    6. '   ' → logprob: -4.979741096496582
    7. '  
' → logprob: -4.979741096496582
    8. '\n' → logprob: -5.479741096496582
    9. '   
' → logprob: -6.479741096496582
    10. ':
' → logprob: -6.604741096496582

Token 69: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17356322705745697
    2. '   ' → logprob: -2.923563241958618
    3. '    
' → logprob: -3.048563241958618
    4. ' 
' → logprob: -3.298563241958618
    5. '  
' → logprob: -4.298563003540039
    6. '   
' → logprob: -5.798563003540039
    7. '\n' → logprob: -6.798563003540039
    8. ':' → logprob: -6.923563003540039
    9. '<|end|>' → logprob: -6.923563003540039
    10. ' ' → logprob: -8.548563003540039

Token 70: ' count' (ID: 3605)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4571733772754669
    2. ' 
' → logprob: -1.2071733474731445
    3. '     
' → logprob: -3.3321733474731445
    4. '    ' → logprob: -4.3321733474731445
    5. 'print' → logprob: -5.2071733474731445
    6. ' print' → logprob: -5.7071733474731445
    7. '    
' → logprob: -6.4571733474731445
    8. '  
' → logprob: -6.7071733474731445
    9. 'count' (adapté à ' count') → logprob: -7.3321733474731445
    10. '   ' → logprob: -7.4571733474731445

Token 71: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10101697593927383
    2. '=' → logprob: -2.9760169982910156
    3. '_' → logprob: -3.6010169982910156
    4. ' ' → logprob: -4.351016998291016
    5. '(' → logprob: -5.601016998291016
    6. ' +=' → logprob: -7.476016998291016
    7. '  ' → logprob: -8.601016998291016
    8. '   ' → logprob: -9.226016998291016
    9. ')' → logprob: -9.351016998291016
    10. '    ' → logprob: -9.976016998291016

Token 72: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02055438980460167
    2. '0' → logprob: -3.895554304122925
    3. ' sum' → logprob: -11.395554542541504
    4. 'sum' → logprob: -14.020554542541504
    5. ' ' → logprob: -15.645554542541504
    6. '1' → logprob: -15.645554542541504
    7. '20' → logprob: -16.645553588867188
    8. '2' → logprob: -17.583053588867188
    9. 's' → logprob: -17.958053588867188
    10. '<|end|>' → logprob: -18.333053588867188

Token 73: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013257184764370322
    2. ' ' → logprob: -6.751325607299805
    3. 'sum' → logprob: -8.876325607299805
    4. ' sum' → logprob: -11.376325607299805
    5. '1' → logprob: -12.751325607299805
    6. '2' → logprob: -14.751325607299805
    7. '   ' → logprob: -14.876325607299805
    8. '  ' → logprob: -15.751325607299805
    9. 'len' → logprob: -16.251325607299805
    10. '4' → logprob: -16.376325607299805

Token 74: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 75: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 76: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.22596615552902222
    2. ' for' → logprob: -1.600966215133667
    3. '   ' → logprob: -7.600965976715088
    4. '    ' → logprob: -10.850966453552246
    5. 'range' → logprob: -11.225966453552246
    6. '	for' → logprob: -12.475966453552246
    7. 'i' → logprob: -12.475966453552246
    8. '```' → logprob: -12.600966453552246
    9. '  ' → logprob: -13.350966453552246
    10. ' ' → logprob: -13.350966453552246

Token 77: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.002158945193514228
    2. ' ' → logprob: -6.627159118652344
    3. ' num' → logprob: -7.627159118652344
    4. 'i' → logprob: -8.252159118652344
    5. ' number' → logprob: -10.377159118652344
    6. ' x' → logprob: -10.752159118652344
    7. ' n' → logprob: -11.002159118652344
    8. '	i' → logprob: -12.377159118652344
    9. ' p' → logprob: -13.127159118652344
    10. ' range' → logprob: -13.627159118652344

Token 78: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004875077400356531
    2. 'in' → logprob: -5.379875183105469
    3. ' ' → logprob: -8.379875183105469
    4. '  ' → logprob: -12.254875183105469
    5. 'n' → logprob: -12.629875183105469
    6. ' i' → logprob: -12.754875183105469
    7. '    ' → logprob: -13.004875183105469
    8. '   ' → logprob: -13.004875183105469
    9. ',' → logprob: -13.379875183105469
    10. '	in' → logprob: -13.879875183105469

Token 79: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.012534137815237045
    2. 'range' → logprob: -4.387534141540527
    3. ' ' → logprob: -11.137534141540527
    4. '	range' → logprob: -12.262534141540527
    5. '(range' → logprob: -13.012534141540527
    6. '  ' → logprob: -14.512534141540527
    7. '   ' → logprob: -15.137534141540527
    8. ' ' → logprob: -15.137534141540527
    9. ' ran' → logprob: -15.512534141540527
    10. ' in' → logprob: -15.512534141540527

Token 80: '(' (ID: 7)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.09006182849407196
    2. '(n' → logprob: -3.090061902999878
    3. 'n' → logprob: -3.590061902999878
    4. '(' → logprob: -4.590061664581299
    5. ' ' → logprob: -5.965061664581299
    6. ' (' → logprob: -8.340062141418457
    7. '	n' → logprob: -10.340062141418457
    8. '2' → logprob: -10.590062141418457
    9. '   ' → logprob: -12.965062141418457
    10. '  ' → logprob: -12.965062141418457

Token 81: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0007295898394659162
    2. ' n' → logprob: -7.250729560852051
    3. '   ' → logprob: -11.12572956085205
    4. '(n' → logprob: -13.00072956085205
    5. ' ' → logprob: -14.37572956085205
    6. '2' → logprob: -14.50072956085205
    7. '    ' → logprob: -15.00072956085205
    8. ')' → logprob: -15.00072956085205
    9. '	n' → logprob: -15.25072956085205
    10. '1' → logprob: -15.50072956085205

Token 82: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014559502713382244
    2. ' ,' → logprob: -4.639559268951416
    3. ',n' → logprob: -5.389559268951416
    4. 'n' → logprob: -9.014559745788574
    5. '*n' → logprob: -9.639559745788574
    6. ' *' → logprob: -11.264559745788574
    7. '*' → logprob: -11.514559745788574
    8. ' n' → logprob: -12.014559745788574
    9. ' ' → logprob: -12.639559745788574
    10. ',
' → logprob: -12.889559745788574

Token 83: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0328952856361866
    2. ' n' → logprob: -3.65789532661438
    3. '2' → logprob: -5.032895088195801
    4. '	n' → logprob: -10.7828950881958
    5. ' ' → logprob: -11.1578950881958
    6. '   ' → logprob: -11.4078950881958
    7. '(n' → logprob: -13.1578950881958
    8. '    ' → logprob: -13.5328950881958
    9. '_n' → logprob: -14.5328950881958
    10. ')n' → logprob: -14.9078950881958

Token 84: '//' (ID: 393)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.009953226894140244
    2. ' +' → logprob: -4.634953022003174
    3. '*' → logprob: -8.634953498840332
    4. ')' → logprob: -11.759953498840332
    5. '+n' → logprob: -12.634953498840332
    6. ' ' → logprob: -13.509953498840332
    7. '+i' → logprob: -13.884953498840332
    8. '2' → logprob: -13.884953498840332
    9. ' *' → logprob: -14.259953498840332
    10. '   ' → logprob: -14.384953498840332

Token 85: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006142667261883616
    2. ' ' → logprob: -8.000614166259766
    3. '1' → logprob: -8.250614166259766
    4. '+' → logprob: -11.500614166259766
    5. '```' → logprob: -13.250614166259766
    6. '=' → logprob: -13.375614166259766
    7. ')' → logprob: -13.500614166259766
    8. '   ' → logprob: -14.125614166259766
    9. '  ' → logprob: -15.375614166259766
    10. '`' → logprob: -15.375614166259766

Token 86: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10022446513175964
    2. ' +' → logprob: -2.350224494934082
    3. ' ' → logprob: -12.225224494934082
    4. ')' → logprob: -12.225224494934082
    5. ')+' → logprob: -12.725224494934082
    6. '   ' → logprob: -12.725224494934082
    7. '+)' → logprob: -14.850224494934082
    8. '    ' → logprob: -14.975224494934082
    9. '```' → logprob: -15.475224494934082
    10. '＋' → logprob: -15.600224494934082

Token 87: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013910694979131222
    2. ' ' → logprob: -6.6263909339904785
    3. '2' → logprob: -10.126391410827637
    4. '+' → logprob: -11.376391410827637
    5. '   ' → logprob: -11.876391410827637
    6. ')' → logprob: -13.126391410827637
    7. ' +' → logprob: -13.938891410827637
    8. '  ' → logprob: -13.938891410827637
    9. '    ' → logprob: -14.001391410827637
    10. '```' → logprob: -14.376391410827637

Token 88: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02380206063389778
    2. '):
' → logprob: -3.8988020420074463
    3. '+' → logprob: -6.148802280426025
    4. ':' → logprob: -7.273802280426025
    5. ' ):' → logprob: -8.773801803588867
    6. '   ' → logprob: -9.023801803588867
    7. '):
' → logprob: -10.148801803588867
    8. ')' → logprob: -10.523801803588867
    9. ',' → logprob: -10.523801803588867
    10. '       ' → logprob: -11.148801803588867

Token 89: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3743646442890167
    2. '<|end|>' → logprob: -1.7493646144866943
    3. ' ' → logprob: -2.1243646144866943
    4. '    ' → logprob: -4.374364852905273
    5. '   ' → logprob: -5.624364852905273
    6. '<|end|>' → logprob: -7.124364852905273
    7. '        ' → logprob: -7.749364852905273
    8. ' if' → logprob: -7.749364852905273
    9. '  ' → logprob: -8.374364852905273
    10. '      ' → logprob: -8.749364852905273

Token 90: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4633113741874695
    2. ' if' → logprob: -1.4633114337921143
    3. 'if' (adapté à ' if') → logprob: -2.8383114337921143
    4. ' ' → logprob: -3.4633114337921143
    5. '    ' → logprob: -4.213311195373535
    6. '   ' → logprob: -4.338311195373535
    7. '<|end|>' → logprob: -4.713311195373535
    8. '1' → logprob: -4.963311195373535
    9. '+' → logprob: -5.588311195373535
    10. '  ' → logprob: -7.838311195373535

Token 91: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.00770955067127943
    2. 'is' → logprob: -4.882709503173828
    3. ' ' → logprob: -10.007709503173828
    4. 'n' → logprob: -10.757709503173828
    5. '	is' → logprob: -11.382709503173828
    6. '   ' → logprob: -12.132709503173828
    7. '    ' → logprob: -12.632709503173828
    8. ' n' → logprob: -12.757709503173828
    9. '  ' → logprob: -12.757709503173828
    10. ' i' → logprob: -13.132709503173828

Token 92: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.0061796484515070915
    2. '_' → logprob: -5.1311798095703125
    3. ' _' → logprob: -9.131179809570312
    4. '_p' → logprob: -9.756179809570312
    5. '_pr' → logprob: -9.756179809570312
    6. '_pal' → logprob: -12.006179809570312
    7. '_pi' → logprob: -12.506179809570312
    8. ' ' → logprob: -13.006179809570312
    9. '_
' → logprob: -13.131179809570312
    10. 'prime' → logprob: -13.631179809570312

Token 93: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.011058080941438675
    2. '(' → logprob: -4.5110578536987305
    3. '(n' → logprob: -11.76105785369873
    4. ' (' → logprob: -14.26105785369873
    5. '(
' → logprob: -14.26105785369873
    6. '(s' → logprob: -14.88605785369873
    7. '(

' → logprob: -15.13605785369873
    8. '((' → logprob: -15.26105785369873
    9. '(a' → logprob: -16.011058807373047
    10. ')' → logprob: -16.761058807373047

Token 94: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03852256387472153
    2. 'and' → logprob: -3.288522481918335
    3. ')' → logprob: -7.663522720336914
    4. ' )' → logprob: -11.913522720336914
    5. ' ' → logprob: -12.538522720336914
    6. ' an' → logprob: -15.913522720336914
    7. ' a' → logprob: -16.163522720336914
    8. '    ' → logprob: -16.163522720336914
    9. '):' → logprob: -16.288522720336914
    10. '	and' → logprob: -16.288522720336914

Token 95: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.4740791916847229
    2. 'and' → logprob: -0.9740791916847229
    3. ' ' → logprob: -13.474079132080078
    4. '    ' → logprob: -15.474079132080078
    5. '	and' → logprob: -15.474079132080078
    6. ' ' → logprob: -16.224079132080078
    7. '   ' → logprob: -16.474079132080078
    8. '  ' → logprob: -17.224079132080078
    9. ' an' → logprob: -17.349079132080078
    10. ' a' → logprob: -17.724079132080078

Token 96: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.25206008553504944
    2. 'is' → logprob: -1.502060055732727
    3. ' ' → logprob: -9.502059936523438
    4. '   ' → logprob: -11.127059936523438
    5. '    ' → logprob: -11.127059936523438
    6. '	is' → logprob: -11.752059936523438
    7. '  ' → logprob: -11.877059936523438
    8. '<|end|>' → logprob: -12.002059936523438
    9. ' 
' → logprob: -13.502059936523438
    10. '(is' → logprob: -14.002059936523438

Token 97: '_prime' (ID: 98616)
  Prédit: '_prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prime' → logprob: -0.00022761584841646254
    2. ' _' → logprob: -8.875227928161621
    3. '_' → logprob: -9.625227928161621
    4. 'prime' → logprob: -11.875227928161621
    5. '_p' → logprob: -13.250227928161621
    6. '_pr' → logprob: -13.250227928161621
    7. '```' → logprob: -13.250227928161621
    8. '._' → logprob: -14.125227928161621
    9. '-_' → logprob: -14.250227928161621
    10. '   ' → logprob: -14.250227928161621

Token 98: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.06197541579604149
    2. '(' → logprob: -2.8119754791259766
    3. '(
' → logprob: -12.561975479125977
    4. ' (' → logprob: -12.811975479125977
    5. '((' → logprob: -14.061975479125977
    6. '(

' → logprob: -14.936975479125977
    7. '(num' → logprob: -16.436975479125977
    8. 'n' → logprob: -17.061975479125977
    9. '\(' → logprob: -17.061975479125977
    10. '('' → logprob: -17.311975479125977

Token 99: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.032154232263565063
    2. '-' → logprob: -3.5321543216705322
    3. '-i' → logprob: -6.032154083251953
    4. ' ' → logprob: -14.532154083251953
    5. '-ai' → logprob: -17.282154083251953
    6. '   ' → logprob: -17.907154083251953
    7. '-ion' → logprob: -18.157154083251953
    8. ' i' → logprob: -18.532154083251953
    9. '-ui' → logprob: -18.532154083251953
    10. 'i' → logprob: -18.782154083251953

Token 100: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0015028368216007948
    2. ' i' → logprob: -6.501502990722656
    3. ' ' → logprob: -15.126502990722656
    4. '	i' → logprob: -15.876502990722656
    5. '   ' → logprob: -16.626502990722656
    6. '<|end|>' → logprob: -17.876502990722656
    7. '  ' → logprob: -18.251502990722656
    8. ')i' → logprob: -19.751502990722656
    9. ')' → logprob: -20.126502990722656
    10. '<|end|>' → logprob: -20.501502990722656

Token 101: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00040755473310127854
    2. ')' → logprob: -8.500407218933105
    3. '):
' → logprob: -9.000407218933105
    4. ' ):' → logprob: -9.625407218933105
    5. '):
' → logprob: -11.875407218933105
    6. '   ' → logprob: -12.875407218933105
    7. ':' → logprob: -13.250407218933105
    8. '       ' → logprob: -14.000407218933105
    9. ''):' → logprob: -14.250407218933105
    10. '):

' → logprob: -14.625407218933105

Token 102: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3509756922721863
    2. '           ' → logprob: -1.225975751876831
    3. ':' → logprob: -7.100975513458252
    4. '               ' → logprob: -7.600975513458252
    5. ':
' → logprob: -8.35097599029541
    6. ')' → logprob: -8.97597599029541
    7. '        ' → logprob: -9.10097599029541
    8. '   ' → logprob: -9.35097599029541
    9. '          ' → logprob: -9.60097599029541
    10. ' :' → logprob: -9.60097599029541

Token 103: ' count' (ID: 3605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17932341992855072
    2. '               ' → logprob: -2.054323434829712
    3. '           ' → logprob: -3.554323434829712
    4. 'count' (adapté à ' count') → logprob: -5.554323196411133
    5. ' count' → logprob: -6.804323196411133
    6. '   ' → logprob: -7.179323196411133
    7. '            ' → logprob: -8.054323196411133
    8. '        ' → logprob: -8.304323196411133
    9. '      ' → logprob: -8.304323196411133
    10. ' ' → logprob: -8.679323196411133

Token 104: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.006868348456919193
    2. '+=' → logprob: -5.006868362426758
    3. '+' → logprob: -9.256868362426758
    4. ' ' → logprob: -10.131868362426758
    5. '<|end|>' → logprob: -12.256868362426758
    6. ' =' → logprob: -12.381868362426758
    7. ' +' → logprob: -12.381868362426758
    8. '=' → logprob: -13.381868362426758
    9. ']+=' → logprob: -14.506868362426758
    10. '1' → logprob: -14.756868362426758

Token 105: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00038014890742488205
    2. ' ' → logprob: -7.875380039215088
    3. '   ' → logprob: -17.87537956237793
    4. '  ' → logprob: -19.37537956237793
    5. '2' → logprob: -19.37537956237793
    6. '<|end|>' → logprob: -19.75037956237793
    7. '    ' → logprob: -20.37537956237793
    8. '１' → logprob: -20.50037956237793
    9. '۱' → logprob: -20.87537956237793
    10. '```' → logprob: -20.87537956237793

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -13.875000953674316
    3. '2' → logprob: -18.875001907348633
    4. '   ' → logprob: -19.000001907348633
    5. '```' → logprob: -20.250001907348633
    6. '１' → logprob: -20.312501907348633
    7. '۱' → logprob: -20.375001907348633
    8. '<|end|>' → logprob: -21.125001907348633
    9. '१' → logprob: -21.312501907348633
    10. '  ' → logprob: -21.312501907348633

Token 107: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0070325471460819244
    2. 'print' → logprob: -5.25703239440918
    3. '
' → logprob: -6.50703239440918
    4. '    
' → logprob: -8.50703239440918
    5. ' print' → logprob: -10.50703239440918
    6. '       ' → logprob: -10.75703239440918
    7. '```' → logprob: -11.13203239440918
    8. '  
' → logprob: -11.63203239440918
    9. '<|end|>' → logprob: -11.88203239440918
    10. '	print' → logprob: -12.00703239440918

Token 108: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.38750559091567993
    2. '   ' → logprob: -1.1375055313110352
    3. ' print' → logprob: -7.512505531311035
    4. '
' → logprob: -9.637505531311035
    5. '```' → logprob: -11.512505531311035
    6. '	print' → logprob: -12.637505531311035
    7. '       ' → logprob: -12.762505531311035
    8. '    
' → logprob: -12.762505531311035
    9. '

' → logprob: -14.012505531311035
    10. 'Print' → logprob: -14.137505531311035

Token 109: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.3795937522663735e-05
    2. '   ' → logprob: -10.75002384185791
    3. ' print' → logprob: -13.00002384185791
    4. '```' → logprob: -17.125022888183594
    5. '	print' → logprob: -18.250022888183594
    6. 'Print' → logprob: -20.000022888183594
    7. '#print' → logprob: -20.500022888183594
    8. '    
' → logprob: -21.375022888183594
    9. 'printf' → logprob: -21.500022888183594
    10. '``' → logprob: -21.750022888183594

Token 110: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.1603858917951584
    2. '(' → logprob: -1.9103858470916748
    3. ' (' → logprob: -9.910386085510254
    4. '()' → logprob: -10.285386085510254
    5. '('' → logprob: -10.410386085510254
    6. '("' → logprob: -10.660386085510254
    7. '(f' → logprob: -10.910386085510254
    8. '(c' → logprob: -13.285386085510254
    9. 'count' → logprob: -13.785386085510254
    10. '((' → logprob: -14.035386085510254

Token 111: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0280383548888494e-06
    2. ' )' → logprob: -14.000000953674316
    3. '))' → logprob: -17.375001907348633
    4. ')`' → logprob: -17.750001907348633
    5. ')
' → logprob: -18.125001907348633
    6. '()' → logprob: -19.125001907348633
    7. '())' → logprob: -20.375001907348633
    8. '(' → logprob: -20.500001907348633
    9. '')' → logprob: -21.000001907348633
    10. '）' → logprob: -21.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 109
Tokens correctement prédits (1ère position, stricte): 59
Tokens correctement prédits (1ère position, avec adaptation): 63
Tokens correctement prédits (top 10): 103
Précision stricte (1ère position): 54.13%
Précision adaptée (1ère position): 57.80%
Précision (top 10): 94.50%
================================================================================
