================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:19
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

def all_lines(m):
    lines = []
    for i in range(m):
        lines.append([(i,j) for j in range(m)])   # row i
        lines.append([(j,i) for j in range(m)])   # column i
    lines.append([(i,i) for i in range(m)])       # main diagonal
    lines.append([(i,m-1-i) for i in range(m)])   # anti diagonal
    return lines

def solve():
    while True:
        P,M = map(int,input().split())
        if P==0 and M==0:
            break
        cards = []
        for _ in range(P):
            row = list(map(int,input().split()))
            card = [row[i*M:(i+1)*M] for i in range(M)]
            cards.append(card)
        # For each card, for each line, store the numbers forming that line
        lines = all_lines(M)
        card_lines = []
        for c in range(P):
            clines = []
            for ln in lines:
                clines.append(set(cards[c][i][j] for i,j in ln))
            card_lines.append(clines)

        # For each card, find minimal numbers needed for a line to bingo
        # But we want to order the bingo finishing times:
        # The gamemaster can choose order of calling numbers, to satisfy condition that card_i bingo no later than card_j if i<j.
        # We seek minimal length of sequence of numbers satisfying the condition.
        #
        # Modeling:
        # Each card can bingo on any line.
        # The bingo time of the card = max of called numbers in chosen line (numbers called so far).
        # The gamemaster controls call order so to order bingo times by card index ascending.
        #
        # We'll try to find, for each card, a line and assign finishing times (the max called number in that line),
        # such that finishing times are nondecreasing in card order,
        # and total unique numbers used in all chosen lines is minimal.
        #
        # To model that, build all combinations candidate finishing times by choosing one line per card.
        #
        # But possibly huge.
        # Because P<=4, M<=4, total lines are max 2*M+2=10.
        #
        # We'll proceed with a branch and bound search:
        # For each card, try all lines.
        # Determine finish_time (max number in line) for that card.
        # Enforce finish_time[i] <= finish_time[i+1]
        #
        # To minimize total unique numbers selected, accumulate the union of sets.
        #
        # We'll implement DFS with pruning.

        from functools import lru_cache

        cards_lines_sets = card_lines
        P_lines = [len(card_lines[i]) for i in range(P)]  # number of lines per card

        # Precompute for each card and line:
        # line_set: set of numbers in line
        # max_num_line: max number in line
        line_info = []
        for c in range(P):
            info = []
            for s in cards_lines_sets[c]:
                mx = max(s)
                info.append((s,mx))
            line_info.append(info)

        min_length = float('inf')

        # Order lines for efficiency: sort by max number ascending (to get smaller finishing times first)
        for c in range(P):
            line_info[c].sort(key=lambda x:x[1])

        # DFS:
        # idx: current card index
        # last_finish_time: finish_time of previous card
        # used_numbers:set of numbers used so far
        def dfs(idx,last_finish_time,used_numbers):
            nonlocal min_length
            if idx==P:
                min_length = min(min_length,len(used_numbers))
                return
            # bound: if used numbers already >= min_length, prune
            if len(used_numbers)>=min_length:
                return
            for s,mx in line_info[idx]:
                # enforce condition: finish_time of current line >= last_finish_time
                if mx>=last_finish_time:
                    new_used = used_numbers | s
                    if len(new_used)>=min_length:
                        continue
                    dfs(idx+1,mx,new_used)

        dfs(0,0,set())
        print(min_length if min_length!=float('inf') else 0)

if __name__=="__main__":
    solve()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3441300094127655
    2. '.' → logprob: -1.594130039215088
    3. '<|end|>' → logprob: -2.969130039215088
    4. '\' → logprob: -4.469130039215088
    5. 'import' → logprob: -5.094130039215088
    6. 'newline' → logprob: -5.094130039215088
    7. '' → logprob: -5.844130039215088
    8. '<|end|>' → logprob: -5.969130039215088
    9. '\r' → logprob: -6.094130039215088
    10. '
' → logprob: -6.344130039215088

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.009539559483528137
    2. '.' → logprob: -4.759539604187012
    3. ''' → logprob: -8.259539604187012
    4. '```' → logprob: -8.884539604187012
    5. ')' → logprob: -9.009539604187012
    6. ' (' → logprob: -9.634539604187012
    7. '(
' → logprob: -9.634539604187012
    8. '"' → logprob: -9.759539604187012
    9. ''s' → logprob: -10.259539604187012
    10. '()' → logprob: -10.259539604187012

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.1605147421360016
    2. 'sys' → logprob: -1.9105147123336792
    3. ' input' → logprob: -8.785514831542969
    4. 'input' → logprob: -9.035514831542969
    5. '	sys' → logprob: -11.785514831542969
    6. '=sys' → logprob: -12.035514831542969
    7. '(sys' → logprob: -12.785514831542969
    8. ' ' → logprob: -13.535514831542969
    9. ' system' → logprob: -15.035514831542969
    10. '_sys' → logprob: -15.535514831542969

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00013715129171032459
    2. '[' → logprob: -10.000137329101562
    3. '.readline' → logprob: -10.750137329101562
    4. ' .' → logprob: -10.875137329101562
    5. '.
' → logprob: -11.750137329101562
    6. '.import' → logprob: -12.625137329101562
    7. '.[' → logprob: -12.750137329101562
    8. '.`' → logprob: -12.750137329101562
    9. '.stdin' → logprob: -12.875137329101562
    10. '.)' → logprob: -13.000137329101562

Token 7: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4906425178050995
    2. '.readline' → logprob: -0.9906425476074219
    3. '.read' → logprob: -4.115642547607422
    4. '```' → logprob: -10.615642547607422
    5. '.readlines' → logprob: -10.865642547607422
    6. 'read' → logprob: -10.990642547607422
    7. '.Read' → logprob: -11.115642547607422
    8. ' .' → logprob: -12.240642547607422
    9. ')' → logprob: -12.490642547607422
    10. '.write' → logprob: -12.615642547607422

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06234453618526459
    2. '(' → logprob: -3.062344551086426
    3. '()
' → logprob: -5.187344551086426
    4. '
' → logprob: -5.687344551086426
    5. '(
' → logprob: -6.062344551086426
    6. '\n' → logprob: -7.187344551086426
    7. '().' → logprob: -7.812344551086426
    8. '()\' → logprob: -7.937344551086426
    9. '\' → logprob: -8.187344551086426
    10. '()

' → logprob: -8.312344551086426

Token 9: 'def' (ID: 1314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.47490477561950684
    2. '(' → logprob: -0.9749047756195068
    3. '().' → logprob: -8.349905014038086
    4. '(
' → logprob: -8.474905014038086
    5. '()
' → logprob: -8.849905014038086
    6. '()

' → logprob: -10.349905014038086
    7. 'a' → logprob: -10.724905014038086
    8. ')' → logprob: -10.849905014038086
    9. '#' → logprob: -10.974905014038086
    10. '.' → logprob: -10.974905014038086

Token 10: ' all' (ID: 722)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0005278917378745973
    2. ' space' → logprob: -9.250528335571289
    3. ' process' → logprob: -9.500528335571289
    4. ' main' → logprob: -9.625528335571289
    5. '_' → logprob: -9.750528335571289
    6. ' add' → logprob: -10.000528335571289
    7. ' read' → logprob: -10.375528335571289
    8. ' calculate' → logprob: -11.000528335571289
    9. ' foo' → logprob: -11.125528335571289
    10. ' my' → logprob: -11.250528335571289

Token 11: '_lines' (ID: 42980)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.009185614064335823
    2. '(' → logprob: -4.884185791015625
    3. '_words' → logprob: -8.384185791015625
    4. '_tokens' → logprob: -8.384185791015625
    5. '_possible' → logprob: -8.759185791015625
    6. '_en' → logprob: -9.259185791015625
    7. '()' → logprob: -9.509185791015625
    8. '_items' → logprob: -9.634185791015625
    9. '_cells' → logprob: -9.884185791015625
    10. '_chars' → logprob: -10.384185791015625

Token 12: '(m' (ID: 2145)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '():' → logprob: -0.144802063703537
    2. '(' → logprob: -2.0198020935058594
    3. '()' → logprob: -7.144802093505859
    4. '_' → logprob: -8.39480209350586
    5. ':' → logprob: -8.51980209350586
    6. '):' → logprob: -8.64480209350586
    7. '_lines' → logprob: -9.14480209350586
    8. '('' → logprob: -9.64480209350586
    9. ' ():' → logprob: -9.76980209350586
    10. '(_' → logprob: -9.89480209350586

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07320329546928406
    2. '=' → logprob: -4.448203086853027
    3. 'ap' → logprob: -4.448203086853027
    4. ',' → logprob: -4.573203086853027
    5. 's' → logprob: -4.698203086853027
    6. 'a' → logprob: -5.073203086853027
    7. 'atch' → logprob: -5.948203086853027
    8. 'in' → logprob: -6.073203086853027
    9. ':' → logprob: -6.198203086853027
    10. 'essages' → logprob: -6.323203086853027

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.026963340118527412
    2. ':' → logprob: -4.401963233947754
    3. ' for' → logprob: -5.276963233947754
    4. '    ' → logprob: -6.151963233947754
    5. ' return' → logprob: -6.651963233947754
    6. '    
' → logprob: -7.151963233947754
    7. ' ' → logprob: -7.276963233947754
    8. '():' → logprob: -7.401963233947754
    9. '\t' → logprob: -7.651963233947754
    10. '\n' → logprob: -7.776963233947754

Token 15: ' lines' (ID: 8698)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1108736991882324
    2. ' ' → logprob: -1.4858736991882324
    3. ' return' → logprob: -1.8608736991882324
    4. '   ' → logprob: -2.4858736991882324
    5. ' lines' → logprob: -2.6108736991882324
    6. '    ' → logprob: -2.8608736991882324
    7. ' m' → logprob: -4.610873699188232
    8. ' []' → logprob: -4.985873699188232
    9. '```' → logprob: -5.110873699188232
    10. ' 
' → logprob: -5.110873699188232

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.19297635555267334
    2. '.' → logprob: -2.567976474761963
    3. '=' → logprob: -3.067976474761963
    4. '.append' → logprob: -3.942976474761963
    5. '   ' → logprob: -4.317976474761963
    6. '.extend' → logprob: -4.442976474761963
    7. ' ' → logprob: -5.817976474761963
    8. '[' → logprob: -6.442976474761963
    9. '[:]' → logprob: -7.567976474761963
    10. '  ' → logprob: -7.817976474761963

Token 17: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.2643655836582184
    2. ' []' → logprob: -1.639365553855896
    3. '[m' → logprob: -3.7643656730651855
    4. '[' → logprob: -4.5143656730651855
    5. ' [' → logprob: -5.8893656730651855
    6. '[input' → logprob: -8.639365196228027
    7. '[line' → logprob: -8.639365196228027
    8. 'm' → logprob: -8.764365196228027
    9. '["' → logprob: -9.139365196228027
    10. '['' → logprob: -9.514365196228027

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14549070596694946
    2. ' for' → logprob: -2.1454906463623047
    3. 'for' → logprob: -4.895490646362305
    4. '    ' → logprob: -5.270490646362305
    5. '    
' → logprob: -6.020490646362305
    6. '	for' → logprob: -6.020490646362305
    7. ' ' → logprob: -7.770490646362305
    8. '
' → logprob: -9.395490646362305
    9. '<|end|>' → logprob: -9.395490646362305
    10. '  ' → logprob: -9.770490646362305

Token 19: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.21309001743793488
    2. 'for' (adapté à ' for') → logprob: -1.7130900621414185
    3. '   ' → logprob: -4.463089942932129
    4. '	for' → logprob: -9.588089942932129
    5. ' ' → logprob: -11.838089942932129
    6. '    ' → logprob: -13.088089942932129
    7. ' while' → logprob: -13.588089942932129
    8. '```' → logprob: -13.713089942932129
    9. '    
' → logprob: -13.838089942932129
    10. 'while' → logprob: -15.838089942932129

Token 20: ' i' (ID: 575)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.019314998760819435
    2. '_' → logprob: -4.269314765930176
    3. ' i' → logprob: -5.644314765930176
    4. ' ' → logprob: -6.519314765930176
    5. ' line' → logprob: -9.769314765930176
    6. ' range' → logprob: -10.269314765930176
    7. 'i' → logprob: -10.769314765930176
    8. ' in' → logprob: -12.644314765930176
    9. '_i' → logprob: -12.644314765930176
    10. '_line' → logprob: -13.269314765930176

Token 21: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.010942526161670685
    2. 'in' → logprob: -4.760942459106445
    3. 'n' → logprob: -6.135942459106445
    4. ' ' → logprob: -9.010942459106445
    5. ' n' → logprob: -11.260942459106445
    6. ',' → logprob: -12.010942459106445
    7. 'range' → logprob: -12.635942459106445
    8. '  ' → logprob: -12.885942459106445
    9. '	in' → logprob: -13.260942459106445
    10. '```' → logprob: -13.385942459106445

Token 22: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07891258597373962
    2. 'range' → logprob: -2.5789124965667725
    3. ' ' → logprob: -11.828912734985352
    4. 'm' → logprob: -12.203912734985352
    5. ' m' → logprob: -12.328912734985352
    6. '	range' → logprob: -13.703912734985352
    7. ' xrange' → logprob: -14.203912734985352
    8. ' in' → logprob: -14.328912734985352
    9. '```' → logprob: -14.453912734985352
    10. '  ' → logprob: -14.578912734985352

Token 23: '(m' (ID: 2145)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5766096711158752
    2. '(m' → logprob: -0.8266096711158752
    3. '(len' → logprob: -7.9516096115112305
    4. ' (' → logprob: -8.32660961151123
    5. '(n' → logprob: -10.20160961151123
    6. '(i' → logprob: -11.07660961151123
    7. '(range' → logprob: -12.32660961151123
    8. '(length' → logprob: -12.45160961151123
    9. ' m' → logprob: -13.32660961151123
    10. ' )' → logprob: -13.57660961151123

Token 24: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02003549411892891
    2. '+' → logprob: -4.270035266876221
    3. ')' → logprob: -5.270035266876221
    4. ' ):' → logprob: -7.395035266876221
    5. ' +' → logprob: -9.895035743713379
    6. '):
' → logprob: -10.395035743713379
    7. ' )' → logprob: -12.270035743713379
    8. ' ' → logprob: -12.645035743713379
    9. '+:' → logprob: -13.145035743713379
    10. ':' → logprob: -13.145035743713379

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030377337709069252
    2. '    ' → logprob: -4.530377388000488
    3. '   ' → logprob: -4.780377388000488
    4. ' lines' → logprob: -5.030377388000488
    5. ' readline' → logprob: -7.155377388000488
    6. '(lines' → logprob: -7.155377388000488
    7. ' ' → logprob: -7.780377388000488
    8. '        
' → logprob: -7.905377388000488
    9. 'input' → logprob: -8.030377388000488
    10. '        ' → logprob: -8.280377388000488

Token 26: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.1506081521511078
    2. '   ' → logprob: -2.0256080627441406
    3. ' line' → logprob: -5.525608062744141
    4. '       ' → logprob: -6.650608062744141
    5. ' ' → logprob: -7.025608062744141
    6. '    ' → logprob: -7.900608062744141
    7. 'lines' (adapté à ' lines') → logprob: -8.27560806274414
    8. ' input' → logprob: -8.40060806274414
    9. 'line' → logprob: -8.40060806274414
    10. ' readline' → logprob: -9.02560806274414

Token 27: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.06201518699526787
    2. '.' → logprob: -2.8120152950286865
    3. '.extend' → logprob: -10.812015533447266
    4. 'append' → logprob: -11.187015533447266
    5. ' .' → logprob: -11.812015533447266
    6. '.app' → logprob: -13.562015533447266
    7. '=' → logprob: -13.562015533447266
    8. '.=' → logprob: -14.312015533447266
    9. '   ' → logprob: -14.687015533447266
    10. '.Append' → logprob: -15.062015533447266

Token 28: '([(' (ID: 156282)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.024359144270420074
    2. '(' → logprob: -3.8993592262268066
    3. '(list' → logprob: -6.399359226226807
    4. '(int' → logprob: -6.649359226226807
    5. '(str' → logprob: -7.899359226226807
    6. '(sys' → logprob: -8.399358749389648
    7. 'input' → logprob: -8.899358749389648
    8. '(
' → logprob: -10.649358749389648
    9. 'list' → logprob: -10.649358749389648
    10. '((' → logprob: -11.524358749389648

Token 29: 'i' (ID: 72)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.5607180595397949
    2. 'input' → logprob: -1.060718059539795
    3. 'i' → logprob: -2.810718059539795
    4. 'ord' → logprob: -5.560718059539795
    5. ' input' → logprob: -5.560718059539795
    6. 'j' → logprob: -5.810718059539795
    7. ' int' → logprob: -6.185718059539795
    8. ')' → logprob: -6.435718059539795
    9. 'len' → logprob: -6.435718059539795
    10. '0' → logprob: -6.435718059539795

Token 30: ',j' (ID: 22712)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21344128251075745
    2. '+' → logprob: -2.3384413719177246
    3. ',j' → logprob: -2.8384413719177246
    4. ' +' → logprob: -4.338441371917725
    5. '*' → logprob: -4.838441371917725
    6. ')' → logprob: -5.088441371917725
    7. ' ,' → logprob: -6.088441371917725
    8. '-' → logprob: -6.713441371917725
    9. '+j' → logprob: -6.713441371917725
    10. ' *' → logprob: -6.838441371917725

Token 31: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006207128055393696
    2. ')])' → logprob: -5.13120698928833
    3. ' )' → logprob: -9.131207466125488
    4. ')]' → logprob: -10.131207466125488
    5. '),' → logprob: -10.131207466125488
    6. ')])
' → logprob: -11.006207466125488
    7. '   ' → logprob: -11.131207466125488
    8. ',' → logprob: -11.131207466125488
    9. ')
' → logprob: -11.631207466125488
    10. ')],' → logprob: -11.881207466125488

Token 32: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8225693106651306
    2. ',' → logprob: -1.1975693702697754
    3. ')])' → logprob: -2.3225693702697754
    4. '       ' → logprob: -3.1975693702697754
    5. '])' → logprob: -3.1975693702697754
    6. ')]' → logprob: -3.4475693702697754
    7. ' for' → logprob: -4.447569370269775
    8. ' )' → logprob: -4.697569370269775
    9. ' ,' → logprob: -5.072569370269775
    10. 'for' → logprob: -5.447569370269775

Token 33: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.04353722184896469
    2. 'j' → logprob: -3.168537139892578
    3. ' range' → logprob: -7.793537139892578
    4. 'range' → logprob: -9.168537139892578
    5. '<|end|>' → logprob: -12.043537139892578
    6. ' in' → logprob: -12.418537139892578
    7. ' ' → logprob: -12.543537139892578
    8. '_j' → logprob: -13.043537139892578
    9. ')' → logprob: -13.293537139892578
    10. '_' → logprob: -14.043537139892578

Token 34: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004688930232077837
    2. 'in' → logprob: -5.379688739776611
    3. '<|end|>' → logprob: -10.00468921661377
    4. ' ' → logprob: -11.12968921661377
    5. 'range' → logprob: -12.37968921661377
    6. ' range' → logprob: -12.87968921661377
    7. 'import' → logprob: -14.12968921661377
    8. '<|end|>' → logprob: -14.62968921661377
    9. 'In' → logprob: -15.00468921661377
    10. ')' → logprob: -15.87968921661377

Token 35: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.020544573664665222
    2. 'range' → logprob: -3.8955445289611816
    3. ' input' → logprob: -14.39554500579834
    4. '(range' → logprob: -14.52054500579834
    5. ' rang' → logprob: -15.39554500579834
    6. ' ' → logprob: -15.39554500579834
    7. ' ran' → logprob: -15.39554500579834
    8. ' xrange' → logprob: -15.39554500579834
    9. '	range' → logprob: -15.77054500579834
    10. ')' → logprob: -16.145544052124023

Token 36: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.20936569571495056
    2. '(' → logprob: -1.709365725517273
    3. '(n' → logprob: -5.3343658447265625
    4. ' (' → logprob: -6.3343658447265625
    5. '(i' → logprob: -7.5843658447265625
    6. ')' → logprob: -8.209365844726562
    7. ' )' → logprob: -8.959365844726562
    8. 'm' → logprob: -9.459365844726562
    9. '(len' → logprob: -9.709365844726562
    10. ' m' → logprob: -9.709365844726562

Token 37: ')])' (ID: 99066)
  Prédit: ')])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.005766784306615591
    2. ')]' → logprob: -5.630766868591309
    3. ')' → logprob: -6.255766868591309
    4. ' )' → logprob: -9.380766868591309
    5. '   ' → logprob: -9.880766868591309
    6. ')])
' → logprob: -10.255766868591309
    7. '       ' → logprob: -10.880766868591309
    8. ')],' → logprob: -11.005766868591309
    9. '])' → logprob: -11.505766868591309
    10. ' ' → logprob: -11.755766868591309

Token 38: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04307660460472107
    2. '<|end|>' → logprob: -4.043076515197754
    3. '\n' → logprob: -4.793076515197754
    4. ' ' → logprob: -5.418076515197754
    5. '
' → logprob: -6.168076515197754
    6. '    
' → logprob: -6.293076515197754
    7. '       ' → logprob: -6.543076515197754
    8. ' 
' → logprob: -6.918076515197754
    9. ' return' → logprob: -7.043076515197754
    10. ')' → logprob: -7.043076515197754

Token 39: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1693731546401978
    2. '<|end|>' → logprob: -1.6693731546401978
    3. '\n' → logprob: -1.7943731546401978
    4. '
' → logprob: -1.9193731546401978
    5. ')' → logprob: -2.044373035430908
    6. '\' → logprob: -4.794373035430908
    7. ' 
' → logprob: -4.919373035430908
    8. '    
' → logprob: -5.044373035430908
    9. '  
' → logprob: -5.419373035430908
    10. ' ' → logprob: -5.419373035430908

Token 40: ' row' (ID: 5225)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: ' i' (ID: 575)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 42: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 43: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10750477761030197
    2. '\n' → logprob: -3.3575048446655273
    3. ' ' → logprob: -4.107504844665527
    4. '<|end|>' → logprob: -4.107504844665527
    5. ')' → logprob: -4.357504844665527
    6. '    
' → logprob: -5.357504844665527
    7. '
' → logprob: -5.857504844665527
    8. '    ' → logprob: -5.982504844665527
    9. ' 
' → logprob: -6.357504844665527
    10. '       ' → logprob: -6.482504844665527

Token 44: ' lines' (ID: 8698)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 45: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.1532844454050064
    2. '.' → logprob: -2.1532845497131348
    3. '.extend' → logprob: -3.6532845497131348
    4. ' .' → logprob: -10.653284072875977
    5. '.pop' → logprob: -11.028284072875977
    6. 'append' → logprob: -11.403284072875977
    7. '.
' → logprob: -11.528284072875977
    8. '[' → logprob: -11.778284072875977
    9. '.app' → logprob: -12.153284072875977
    10. '<|end|>' → logprob: -12.403284072875977

Token 46: '([(' (ID: 156282)
  Prédit: '([('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.008674376644194126
    2. '([' → logprob: -4.758674144744873
    3. '((' → logprob: -10.508674621582031
    4. '[(' → logprob: -12.508674621582031
    5. '(' → logprob: -12.633674621582031
    6. '([
' → logprob: -12.758674621582031
    7. '(["' → logprob: -12.758674621582031
    8. '(['' → logprob: -12.758674621582031
    9. '([{' → logprob: -12.758674621582031
    10. '([]' → logprob: -12.883674621582031

Token 47: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0005029928870499134
    2. '(j' → logprob: -8.000502586364746
    3. ' j' → logprob: -9.000502586364746
    4. '   ' → logprob: -11.500502586364746
    5. '0' → logprob: -12.125502586364746
    6. '(' → logprob: -12.125502586364746
    7. '(i' → logprob: -12.250502586364746
    8. 'i' → logprob: -12.250502586364746
    9. ' (' → logprob: -12.500502586364746
    10. '[j' → logprob: -12.875502586364746

Token 48: ',i' (ID: 25032)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01935041882097721
    2. ' ,' → logprob: -4.269350528717041
    3. ',i' → logprob: -5.269350528717041
    4. ' i' → logprob: -10.769350051879883
    5. 'i' → logprob: -12.644350051879883
    6. ' ' → logprob: -13.269350051879883
    7. '`,' → logprob: -16.394350051879883
    8. '(i' → logprob: -16.644350051879883
    9. ' for' → logprob: -16.894350051879883
    10. '，' → logprob: -16.894350051879883

Token 49: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.227250610711053e-05
    2. ' )' → logprob: -10.125041961669922
    3. '`)' → logprob: -14.375041961669922
    4. ')
' → logprob: -14.625041961669922
    5. '')' → logprob: -14.875041961669922
    6. '   ' → logprob: -15.750041961669922
    7. ')`' → logprob: -15.875041961669922
    8. 'for' → logprob: -15.875041961669922
    9. ' for' → logprob: -16.000041961669922
    10. ' ' → logprob: -16.625041961669922

Token 50: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5377843976020813
    2. ' for' → logprob: -1.0377843379974365
    3. 'for' → logprob: -2.7877843379974365
    4. ' ' → logprob: -9.162784576416016
    5. ' )' → logprob: -10.287784576416016
    6. '	for' → logprob: -11.412784576416016
    7. '   ' → logprob: -11.912784576416016
    8. '```' → logprob: -13.537784576416016
    9. '    ' → logprob: -13.662784576416016
    10. '  ' → logprob: -13.787784576416016

Token 51: ' j' (ID: 441)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.016197416931390762
    2. 'range' → logprob: -4.141197204589844
    3. ' j' → logprob: -9.266197204589844
    4. ' in' → logprob: -10.141197204589844
    5. ' ' → logprob: -11.016197204589844
    6. 'j' → logprob: -12.266197204589844
    7. '(range' → logprob: -12.766197204589844
    8. ' xrange' → logprob: -13.891197204589844
    9. 'm' → logprob: -14.141197204589844
    10. ' m' → logprob: -14.516197204589844

Token 52: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012569227255880833
    2. 'in' → logprob: -4.387569427490234
    3. ' ' → logprob: -10.637569427490234
    4. ' range' → logprob: -10.887569427490234
    5. '<|end|>' → logprob: -11.637569427490234
    6. 'range' → logprob: -11.762569427490234
    7. '(range' → logprob: -16.137569427490234
    8. ')' → logprob: -16.762569427490234
    9. 'import' → logprob: -17.137569427490234
    10. '    ' → logprob: -17.637569427490234

Token 53: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.39322030544281006
    2. 'range' → logprob: -1.14322030544281
    3. 'm' → logprob: -5.1432204246521
    4. ' m' → logprob: -7.6432204246521
    5. '(range' → logprob: -11.768219947814941
    6. '(m' → logprob: -13.393219947814941
    7. ' ' → logprob: -14.143219947814941
    8. ' xrange' → logprob: -15.268219947814941
    9. '(' → logprob: -15.893219947814941
    10. '[m' → logprob: -16.268220901489258

Token 54: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00015753143816255033
    2. '(' → logprob: -9.250157356262207
    3. 'm' → logprob: -10.000157356262207
    4. ' (' → logprob: -11.125157356262207
    5. ' m' → logprob: -14.125157356262207
    6. ')' → logprob: -15.750157356262207
    7. ')m' → logprob: -16.250158309936523
    8. 'range' → logprob: -17.375158309936523
    9. ',m' → logprob: -17.500158309936523
    10. ' ' → logprob: -17.500158309936523

Token 55: ')])' (ID: 99066)
  Prédit: ')])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.015212377533316612
    2. ')]' → logprob: -4.765212535858154
    3. ')' → logprob: -5.515212535858154
    4. '])' → logprob: -6.015212535858154
    5. ')])
' → logprob: -10.140212059020996
    6. ' )' → logprob: -10.765212059020996
    7. '])]' → logprob: -11.390212059020996
    8. '))' → logprob: -11.390212059020996
    9. ')])

' → logprob: -12.265212059020996
    10. '       ' → logprob: -12.390212059020996

Token 56: '  ' (ID: 256)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 57: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 58: ' column' (ID: 6000)
  Prédit: ' column'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' column' → logprob: -0.07123178988695145
    2. 'column' → logprob: -2.6962318420410156
    3. ' col' → logprob: -6.821231842041016
    4. 'col' → logprob: -8.696231842041016
    5. ' row' → logprob: -10.571231842041016
    6. 'row' → logprob: -12.946231842041016
    7. ' ' → logprob: -13.821231842041016
    8. ' columns' → logprob: -13.946231842041016
    9. '	column' → logprob: -14.071231842041016
    10. ' #' → logprob: -14.196231842041016

Token 59: ' i' (ID: 575)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 60: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6540266871452332
    2. ')' → logprob: -1.029026746749878
    3. '       ' → logprob: -2.654026746749878
    4. '<|end|>' → logprob: -3.529026746749878
    5. '
' → logprob: -5.154026508331299
    6. '\n' → logprob: -5.529026508331299
    7. ' ' → logprob: -5.654026508331299
    8. '    
' → logprob: -6.029026508331299
    9. '    ' → logprob: -7.029026508331299
    10. '\' → logprob: -7.154026508331299

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02192532643675804
    2. '<|end|>' → logprob: -4.521925449371338
    3. '       ' → logprob: -4.771925449371338
    4. ' ' → logprob: -7.021925449371338
    5. ')' → logprob: -7.521925449371338
    6. '    
' → logprob: -8.52192497253418
    7. 'return' → logprob: -8.64692497253418
    8. '    ' → logprob: -9.27192497253418
    9. '  ' → logprob: -9.52192497253418
    10. '
' → logprob: -10.02192497253418

Token 62: ' lines' (ID: 8698)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01752415858209133
    2. ')' → logprob: -4.517524242401123
    3. ' ' → logprob: -6.267524242401123
    4. '<|end|>' → logprob: -6.517524242401123
    5. 'return' → logprob: -7.142524242401123
    6. '       ' → logprob: -7.642524242401123
    7. '    
' → logprob: -8.142523765563965
    8. '```' → logprob: -8.392523765563965
    9. ' lines' → logprob: -8.517523765563965
    10. ']' → logprob: -8.642523765563965

Token 63: '.append' (ID: 3709)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 64: '([(' (ID: 156282)
  Prédit: '([('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -0.022006377577781677
    2. '([' → logprob: -3.8970062732696533
    3. '((' → logprob: -7.397006511688232
    4. '(' → logprob: -7.772006511688232
    5. '([]' → logprob: -8.522006034851074
    6. '([[' → logprob: -9.397006034851074
    7. ' (' → logprob: -9.897006034851074
    8. '({' → logprob: -11.397006034851074
    9. '([-' → logprob: -11.522006034851074
    10. '([
' → logprob: -11.522006034851074

Token 65: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2813003659248352
    2. 'j' → logprob: -1.4063003063201904
    3. 'k' → logprob: -9.03130054473877
    4. '(i' → logprob: -11.78130054473877
    5. 'd' → logprob: -12.03130054473877
    6. ' i' → logprob: -12.65630054473877
    7. 'x' → logprob: -12.65630054473877
    8. '```' → logprob: -12.90630054473877
    9. ')' → logprob: -13.15630054473877
    10. ' j' → logprob: -13.53130054473877

Token 66: ',i' (ID: 25032)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19734014570713043
    2. ',i' → logprob: -1.8223401308059692
    3. ',j' → logprob: -4.19734001159668
    4. ',m' → logprob: -6.44734001159668
    5. ' ,' → logprob: -7.19734001159668
    6. ',n' → logprob: -9.94734001159668
    7. ',k' → logprob: -11.32234001159668
    8. ',d' → logprob: -13.57234001159668
    9. ',l' → logprob: -13.82234001159668
    10. ',r' → logprob: -13.82234001159668

Token 67: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015812745550647378
    2. ' )' → logprob: -8.875158309936523
    3. ' for' → logprob: -12.000158309936523
    4. 'for' → logprob: -12.125158309936523
    5. '}' → logprob: -12.625158309936523
    6. ',' → logprob: -13.125158309936523
    7. ' ' → logprob: -14.375158309936523
    8. '   ' → logprob: -15.500158309936523
    9. '```' → logprob: -15.625158309936523
    10. '）' → logprob: -16.250158309936523

Token 68: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.029763683676719666
    2. 'for' → logprob: -3.529763698577881
    3. ' ' → logprob: -11.279763221740723
    4. '	for' → logprob: -15.029763221740723
    5. '   ' → logprob: -16.02976417541504
    6. '  ' → logprob: -17.15476417541504
    7. ' i' → logprob: -17.40476417541504
    8. ' in' → logprob: -18.15476417541504
    9. '    ' → logprob: -18.27976417541504
    10. ')' → logprob: -18.27976417541504

Token 69: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5267633199691772
    2. 'range' → logprob: -1.5267633199691772
    3. ' range' → logprob: -1.7767633199691772
    4. ' i' → logprob: -3.776763439178467
    5. ' in' → logprob: -9.401762962341309
    6. 'in' → logprob: -9.776762962341309
    7. '(range' → logprob: -11.276762962341309
    8. ' ' → logprob: -11.526762962341309
    9. '(i' → logprob: -13.276762962341309
    10. '  ' → logprob: -13.526762962341309

Token 70: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03526720032095909
    2. 'in' → logprob: -3.4102671146392822
    3. ' range' → logprob: -6.910267353057861
    4. 'range' → logprob: -7.535267353057861
    5. '(range' → logprob: -9.410266876220703
    6. ' ' → logprob: -12.660266876220703
    7. '(' → logprob: -13.035266876220703
    8. ')' → logprob: -14.285266876220703
    9. 'm' → logprob: -15.285266876220703
    10. ' (' → logprob: -15.660266876220703

Token 71: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12694741785526276
    2. ' range' → logprob: -2.1269474029541016
    3. 'm' → logprob: -11.251947402954102
    4. '(range' → logprob: -12.001947402954102
    5. ' m' → logprob: -16.6269474029541
    6. '(m' → logprob: -16.6269474029541
    7. ' ' → logprob: -17.6269474029541
    8. '[m' → logprob: -18.6269474029541
    9. '	range' → logprob: -18.6269474029541
    10. '   ' → logprob: -19.8769474029541

Token 72: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.3544423381972592e-05
    2. '(' → logprob: -11.25001335144043
    3. 'm' → logprob: -15.25001335144043
    4. ' (' → logprob: -15.37501335144043
    5. '(len' → logprob: -17.87501335144043
    6. '(
' → logprob: -18.25001335144043
    7. '(M' → logprob: -18.75001335144043
    8. '(s' → logprob: -19.25001335144043
    9. '(n' → logprob: -19.50001335144043
    10. '((' → logprob: -19.75001335144043

Token 73: ')])' (ID: 99066)
  Prédit: ')])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.010666819289326668
    2. ')]' → logprob: -4.635666847229004
    3. '])' → logprob: -7.510666847229004
    4. ')' → logprob: -8.260666847229004
    5. ')])
' → logprob: -9.260666847229004
    6. ')])

' → logprob: -12.635666847229004
    7. '))' → logprob: -12.760666847229004
    8. ']])' → logprob: -13.760666847229004
    9. ' ])' → logprob: -14.510666847229004
    10. '])]' → logprob: -14.510666847229004

Token 74: '      ' (ID: 1699)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33611541986465454
    2. '   ' → logprob: -1.8361153602600098
    3. '<|end|>' → logprob: -2.4611153602600098
    4. ' lines' → logprob: -4.21111536026001
    5. '(lines' → logprob: -4.96111536026001
    6. ' ' → logprob: -5.46111536026001
    7. '\' → logprob: -5.58611536026001
    8. '[' → logprob: -6.21111536026001
    9. ' )' → logprob: -6.58611536026001
    10. 'lines' → logprob: -6.96111536026001

Token 75: ' #' (ID: 1069)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.021763669326901436
    2. ' lines' → logprob: -5.271763801574707
    3. '   ' → logprob: -5.271763801574707
    4. ')
' → logprob: -5.646763801574707
    5. '(lines' → logprob: -5.771763801574707
    6. '[' → logprob: -6.271763801574707
    7. 'lines' → logprob: -7.271763801574707
    8. ']' → logprob: -7.521763801574707
    9. ',' → logprob: -8.396763801574707
    10. '#' (adapté à ' #') → logprob: -8.521763801574707

Token 76: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.21398887038230896
    2. ' diagonal' → logprob: -1.9639889001846313
    3. 'main' → logprob: -3.213988780975342
    4. 'di' → logprob: -4.463988780975342
    5. ' principal' → logprob: -8.0889892578125
    6. 'principal' → logprob: -9.2139892578125
    7. 'major' → logprob: -9.9639892578125
    8. ' primary' → logprob: -10.3389892578125
    9. 'diag' → logprob: -10.4639892578125
    10. ' major' → logprob: -10.5889892578125

Token 77: ' diagonal' (ID: 71638)
  Prédit: '_di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_di' → logprob: -0.2431953102350235
    2. ' diagonal' → logprob: -2.1181952953338623
    3. 'di' → logprob: -2.6181952953338623
    4. '_diag' → logprob: -3.9931952953338623
    5. '_' → logprob: -5.993195533752441
    6. '_d' → logprob: -7.618195533752441
    7. 'diag' → logprob: -7.993195533752441
    8. '<|end|>' → logprob: -8.243195533752441
    9. ' _' → logprob: -8.618195533752441
    10. ' ' → logprob: -9.118195533752441

Token 78: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15219804644584656
    2. ' lines' → logprob: -2.152198076248169
    3. 'lines' → logprob: -4.40219783782959
    4. '(lines' → logprob: -5.52719783782959
    5. '	lines' → logprob: -5.90219783782959
    6. '
' → logprob: -6.27719783782959
    7. '<|end|>' → logprob: -7.15219783782959
    8. '```' → logprob: -7.52719783782959
    9. ')' → logprob: -8.15219783782959
    10. '    
' → logprob: -8.27719783782959

Token 79: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029873361811041832
    2. 'lines' → logprob: -4.404873371124268
    3. ' lines' → logprob: -4.404873371124268
    4. '	lines' → logprob: -6.029873371124268
    5. '(lines' → logprob: -6.529873371124268
    6. ')' → logprob: -7.404873371124268
    7. '```' → logprob: -8.90487289428711
    8. '    
' → logprob: -9.77987289428711
    9. '+' → logprob: -9.90487289428711
    10. '[' → logprob: -10.02987289428711

Token 80: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.8008456826210022
    2. 'lines' (adapté à ' lines') → logprob: -0.8008456826210022
    3. '   ' → logprob: -2.3008456230163574
    4. '	lines' → logprob: -6.925845623016357
    5. '(lines' → logprob: -7.300845623016357
    6. '+' → logprob: -8.925846099853516
    7. '```' → logprob: -10.175846099853516
    8. ' ' → logprob: -10.800846099853516
    9. '.lines' → logprob: -11.300846099853516
    10. '[' → logprob: -11.425846099853516

Token 81: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.2017553746700287
    2. '.' → logprob: -1.701755404472351
    3. '.extend' → logprob: -8.57675552368164
    4. 'append' → logprob: -8.95175552368164
    5. ' .' → logprob: -11.95175552368164
    6. '.app' → logprob: -12.20175552368164
    7. '.setdefault' → logprob: -12.82675552368164
    8. ').' → logprob: -12.82675552368164
    9. '<|end|>' → logprob: -14.07675552368164
    10. '`.' → logprob: -14.45175552368164

Token 82: '([(' (ID: 156282)
  Prédit: '([('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([(' → logprob: -2.8206473871250637e-05
    2. '([' → logprob: -10.750028610229492
    3. '((' → logprob: -13.000028610229492
    4. '(' → logprob: -13.750028610229492
    5. ' (' → logprob: -14.000028610229492
    6. '([]' → logprob: -14.125028610229492
    7. '([[' → logprob: -14.625028610229492
    8. '({' → logprob: -15.750028610229492
    9. '([-' → logprob: -15.750028610229492
    10. '([
' → logprob: -16.000028610229492

Token 83: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.35195034742355347
    2. 'm' → logprob: -1.2269504070281982
    3. 'range' → logprob: -6.351950168609619
    4. '(m' → logprob: -6.726950168609619
    5. '(i' → logprob: -8.476950645446777
    6. '[m' → logprob: -8.726950645446777
    7. '[i' → logprob: -9.351950645446777
    8. 'j' → logprob: -9.851950645446777
    9. '   ' → logprob: -10.976950645446777
    10. ' m' → logprob: -11.851950645446777

Token 84: ',m' (ID: 26648)
  Prédit: ',m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',m' → logprob: -0.10124129801988602
    2. ',' → logprob: -2.35124135017395
    3. ' ,' → logprob: -7.476241111755371
    4. '(m' → logprob: -7.976241111755371
    5. ',i' → logprob: -9.351241111755371
    6. 'm' → logprob: -11.226241111755371
    7. '(' → logprob: -11.601241111755371
    8. ',(' → logprob: -11.976241111755371
    9. ',j' → logprob: -13.476241111755371
    10. 'for' → logprob: -13.851241111755371

Token 85: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.007312234491109848
    2. ' -' → logprob: -5.507312297821045
    3. '-i' → logprob: -6.382312297821045
    4. '1' → logprob: -6.507312297821045
    5. 'i' → logprob: -10.132311820983887
    6. ' ' → logprob: -12.507311820983887
    7. '−' → logprob: -14.632311820983887
    8. 'minus' → logprob: -15.132311820983887
    9. '   ' → logprob: -15.507311820983887
    10. ' i' → logprob: -15.757311820983887

Token 86: '1' (ID: 16)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5759457945823669
    2. '1' → logprob: -0.8259457945823669
    3. ' i' → logprob: -12.450945854187012
    4. ' ' → logprob: -14.200945854187012
    5. '   ' → logprob: -14.575945854187012
    6. '(i' → logprob: -14.700945854187012
    7. '_i' → logprob: -15.450945854187012
    8. '-' → logprob: -15.575945854187012
    9. '[i' → logprob: -16.200944900512695
    10. '	i' → logprob: -16.325944900512695

Token 87: '-i' (ID: 18499)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.7945042848587036
    2. ' -' → logprob: -1.2945042848587036
    3. '-i' → logprob: -1.2945042848587036
    4. 'i' → logprob: -9.169504165649414
    5. ' i' → logprob: -11.169504165649414
    6. ' ' → logprob: -11.794504165649414
    7. '-
' → logprob: -14.544504165649414
    8. '   ' → logprob: -14.919504165649414
    9. '−' → logprob: -15.919504165649414
    10. '  ' → logprob: -16.044504165649414

Token 88: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00044068231363780797
    2. ' )' → logprob: -7.75044059753418
    3. ']' → logprob: -12.87544059753418
    4. '   ' → logprob: -13.00044059753418
    5. 'for' → logprob: -13.12544059753418
    6. ' for' → logprob: -14.25044059753418
    7. ')]' → logprob: -14.62544059753418
    8. ' ' → logprob: -14.75044059753418
    9. ')
' → logprob: -14.75044059753418
    10. '    ' → logprob: -15.37544059753418

Token 89: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03807580843567848
    2. 'for' → logprob: -3.2880759239196777
    3. ')' → logprob: -10.41307544708252
    4. ' ' → logprob: -12.78807544708252
    5. '   ' → logprob: -13.91307544708252
    6. '	for' → logprob: -15.16307544708252
    7. '    ' → logprob: -15.91307544708252
    8. ' in' → logprob: -15.91307544708252
    9. ']' → logprob: -16.413076400756836
    10. '  ' → logprob: -17.038076400756836

Token 90: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.25195810198783875
    2. 'i' → logprob: -1.5019581317901611
    3. ' in' → logprob: -11.251957893371582
    4. 'range' → logprob: -12.001957893371582
    5. ' range' → logprob: -12.876957893371582
    6. '	i' → logprob: -13.251957893371582
    7. ' ' → logprob: -13.376957893371582
    8. '  ' → logprob: -13.501957893371582
    9. '   ' → logprob: -14.251957893371582
    10. 'in' → logprob: -14.626957893371582

Token 91: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.002489926293492317
    2. 'in' → logprob: -6.002490043640137
    3. 'range' → logprob: -11.502490043640137
    4. ' range' → logprob: -13.127490043640137
    5. ' ' → logprob: -13.877490043640137
    6. '<|end|>' → logprob: -14.252490043640137
    7. 'm' → logprob: -15.002490043640137
    8. '(range' → logprob: -16.12748908996582
    9. 'import' → logprob: -16.50248908996582
    10. ')' → logprob: -17.37748908996582

Token 92: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10022079944610596
    2. ' range' → logprob: -2.3502206802368164
    3. '(range' → logprob: -11.225220680236816
    4. 'm' → logprob: -14.100220680236816
    5. '	range' → logprob: -17.600221633911133
    6. ' ' → logprob: -18.600221633911133
    7. ' xrange' → logprob: -18.725221633911133
    8. '.range' → logprob: -19.600221633911133
    9. '```' → logprob: -19.725221633911133
    10. 'span' → logprob: -19.850221633911133

Token 93: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -1.4617256056226324e-05
    2. '(' → logprob: -11.625014305114746
    3. 'm' → logprob: -12.125014305114746
    4. ' (' → logprob: -16.625015258789062
    5. '(M' → logprob: -18.250015258789062
    6. ' m' → logprob: -18.500015258789062
    7. '<m' → logprob: -19.250015258789062
    8. '(
' → logprob: -19.625015258789062
    9. ',m' → logprob: -19.625015258789062
    10. '   ' → logprob: -19.625015258789062

Token 94: ')])' (ID: 99066)
  Prédit: ')])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')])' → logprob: -0.03189169615507126
    2. ')]' → logprob: -3.5318915843963623
    3. ')' → logprob: -6.281891822814941
    4. '])' → logprob: -9.031891822814941
    5. ' )' → logprob: -9.156891822814941
    6. '))' → logprob: -10.906891822814941
    7. ' ])' → logprob: -11.781891822814941
    8. ')])
' → logprob: -11.906891822814941
    9. '])]' → logprob: -12.656891822814941
    10. ')])

' → logprob: -12.781891822814941

Token 95: '  ' (ID: 256)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02787613868713379
    2. '<|end|>' → logprob: -4.152875900268555
    3. ' return' → logprob: -5.152875900268555
    4. 'return' → logprob: -5.402875900268555
    5. ':return' → logprob: -7.652875900268555
    6. ')' → logprob: -8.152875900268555
    7. '	return' → logprob: -8.277875900268555
    8. ' lines' → logprob: -8.527875900268555
    9. '    
' → logprob: -10.277875900268555
    10. '       ' → logprob: -10.277875900268555

Token 96: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.03221840411424637
    2. ')' → logprob: -3.7822184562683105
    3. ' #' → logprob: -5.9072184562683105
    4. '(lines' → logprob: -6.0322184562683105
    5. ' lines' → logprob: -6.1572184562683105
    6. '      ' → logprob: -8.282217979431152
    7. ')#' → logprob: -8.282217979431152
    8. '   ' → logprob: -8.532217979431152
    9. '  ' → logprob: -8.532217979431152
    10. 'lines' → logprob: -8.657217979431152

Token 97: ' anti' (ID: 10329)
  Prédit: 'anti'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'anti' → logprob: -0.31319668889045715
    2. ' anti' → logprob: -1.6881966590881348
    3. 'secondary' → logprob: -3.1881966590881348
    4. 'ant' → logprob: -3.3131966590881348
    5. ' secondary' → logprob: -5.438196659088135
    6. 'reverse' → logprob: -7.188196659088135
    7. 'other' → logprob: -7.938196659088135
    8. ' ant' → logprob: -8.563197135925293
    9. 'second' → logprob: -8.688197135925293
    10. 'antic' → logprob: -8.938197135925293

Token 98: ' diagonal' (ID: 71638)
  Prédit: 'di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'di' → logprob: -0.5789246559143066
    2. ' diagonal' → logprob: -0.8289246559143066
    3. '-di' → logprob: -5.953924655914307
    4. '_di' → logprob: -8.703924179077148
    5. 'diag' → logprob: -8.703924179077148
    6. '-' → logprob: -10.828924179077148
    7. '   ' → logprob: -11.203924179077148
    8. 'Diagonal' → logprob: -11.828924179077148
    9. '_diag' → logprob: -12.203924179077148
    10. ' ' → logprob: -12.828924179077148

Token 99: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0031881670001894236
    2. ' return' → logprob: -6.628188133239746
    3. 'return' → logprob: -7.003188133239746
    4. '
' → logprob: -7.503188133239746
    5. '	return' → logprob: -8.503188133239746
    6. '<|end|>' → logprob: -8.753188133239746
    7. '    
' → logprob: -10.628188133239746
    8. '```' → logprob: -12.378188133239746
    9. ':return' → logprob: -13.128188133239746
    10. ')' → logprob: -13.128188133239746

Token 100: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01798884943127632
    2. 'return' → logprob: -4.142988681793213
    3. '<|end|>' → logprob: -7.142988681793213
    4. ' return' → logprob: -7.267988681793213
    5. '    
' → logprob: -8.392989158630371
    6. '	return' → logprob: -8.642989158630371
    7. '
' → logprob: -11.267989158630371
    8. ':return' → logprob: -11.392989158630371
    9. '```' → logprob: -11.767989158630371
    10. '\n' → logprob: -12.142989158630371

Token 101: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3149324357509613
    2. 'return' (adapté à ' return') → logprob: -1.3149324655532837
    3. ' return' → logprob: -6.439932346343994
    4. '	return' → logprob: -10.189932823181152
    5. '<|end|>' → logprob: -11.189932823181152
    6. '    
' → logprob: -12.064932823181152
    7. ' ' → logprob: -12.314932823181152
    8. ':return' → logprob: -12.939932823181152
    9. '```' → logprob: -13.064932823181152
    10. ')' → logprob: -13.189932823181152

Token 102: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.0019287518225610256
    2. ' lines' → logprob: -6.251928806304932
    3. '(lines' → logprob: -16.126928329467773
    4. 'line' → logprob: -17.376928329467773
    5. '	lines' → logprob: -18.626928329467773
    6. 'lin' → logprob: -20.501928329467773
    7. 'list' → logprob: -20.626928329467773
    8. '`' → logprob: -20.626928329467773
    9. '   ' → logprob: -20.626928329467773
    10. ' ' → logprob: -20.626928329467773

Token 103: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007975318469107151
    2. 'for' → logprob: -5.632975101470947
    3. 'm' → logprob: -7.132975101470947
    4. '
' → logprob: -7.132975101470947
    5. '```' → logprob: -7.132975101470947
    6. '#' → logprob: -7.382975101470947
    7. '<|end|>' → logprob: -8.632975578308105
    8. 'n' → logprob: -8.882975578308105
    9. '[' → logprob: -9.382975578308105
    10. '\' → logprob: -9.507975578308105

Token 105: ' solve' (ID: 17722)
  Prédit: ' check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' check' → logprob: -0.15165826678276062
    2. ' solve' → logprob: -2.901658296585083
    3. ' is' → logprob: -3.276658296585083
    4. ' main' → logprob: -4.901658058166504
    5. ' validate' → logprob: -4.901658058166504
    6. ' valid' → logprob: -4.901658058166504
    7. ' evaluate' → logprob: -5.651658058166504
    8. ' find' → logprob: -5.776658058166504
    9. ' analyze' → logprob: -5.776658058166504
    10. ' calculate' → logprob: -6.151658058166504

Token 106: '():
' (ID: 8595)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.2919902503490448
    2. '(' → logprob: -1.4169902801513672
    3. '():' → logprob: -4.791990280151367
    4. '(n' → logprob: -6.166990280151367
    5. '((' → logprob: -9.666990280151367
    6. '(a' → logprob: -9.791990280151367
    7. ' (' → logprob: -10.291990280151367
    8. '(s' → logprob: -10.666990280151367
    9. '(M' → logprob: -10.666990280151367
    10. '(N' → logprob: -10.791990280151367

Token 107: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0542328767478466
    2. ' n' → logprob: -3.5542328357696533
    3. ' m' → logprob: -3.8042328357696533
    4. 'n' → logprob: -6.804233074188232
    5. 'm' → logprob: -7.554233074188232
    6. ' pass' → logprob: -9.429232597351074
    7. ' import' → logprob: -10.179232597351074
    8. '    ' → logprob: -10.304232597351074
    9. ' input' → logprob: -10.304232597351074
    10. '   ' → logprob: -10.554232597351074

Token 108: ' while' (ID: 2049)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.01239674724638462
    2. '   ' → logprob: -5.262396812438965
    3. ' m' → logprob: -5.387396812438965
    4. 'n' → logprob: -6.012396812438965
    5. ' n' → logprob: -9.762396812438965
    6. 'import' → logprob: -10.012396812438965
    7. '```' → logprob: -12.512396812438965
    8. ' ' → logprob: -13.012396812438965
    9. 'N' → logprob: -13.512396812438965
    10. 't' → logprob: -13.887396812438965

Token 109: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.005726132541894913
    2. 'True' → logprob: -5.255726337432861
    3. '(True' → logprob: -7.630726337432861
    4. ' ' → logprob: -12.255725860595703
    5. '1' → logprob: -14.130725860595703
    6. '=True' → logprob: -14.380725860595703
    7. '(' → logprob: -15.255725860595703
    8. ' T' → logprob: -16.130725860595703
    9. ' (' → logprob: -16.255725860595703
    10. '  ' → logprob: -16.505725860595703

Token 110: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00118677644059062
    2. ':
' → logprob: -7.626186847686768
    3. ' :' → logprob: -7.876186847686768
    4. ',' → logprob: -9.12618637084961
    5. '   ' → logprob: -9.12618637084961
    6. '():' → logprob: -9.50118637084961
    7. '):' → logprob: -11.25118637084961
    8. '       ' → logprob: -13.12618637084961
    9. '<|end|>' → logprob: -13.50118637084961
    10. ':**' → logprob: -13.87618637084961

Token 111: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09192798286676407
    2. '   ' → logprob: -2.841928005218506
    3. ' line' → logprob: -3.841928005218506
    4. 'line' → logprob: -5.966928005218506
    5. 'try' → logprob: -6.591928005218506
    6. ' try' → logprob: -6.591928005218506
    7. '    ' → logprob: -7.091928005218506
    8. 'n' → logprob: -7.466928005218506
    9. ' ' → logprob: -8.341927528381348
    10. ' n' → logprob: -8.841927528381348

Token 112: ' P' (ID: 398)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8901233077049255
    2. ' m' → logprob: -1.7651233673095703
    3. 'm' → logprob: -1.8901233673095703
    4. 'n' → logprob: -1.8901233673095703
    5. '   ' → logprob: -2.2651233673095703
    6. ' line' → logprob: -4.51512336730957
    7. 'line' → logprob: -7.76512336730957
    8. ' try' → logprob: -8.51512336730957
    9. ' N' → logprob: -9.14012336730957
    10. ' ' → logprob: -9.26512336730957

Token 113: ',M' (ID: 54127)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0329827144742012
    2. '=' → logprob: -3.53298282623291
    3. 'm' → logprob: -6.65798282623291
    4. '=m' → logprob: -7.40798282623291
    5. ',' → logprob: -7.65798282623291
    6. '=int' → logprob: -8.15798282623291
    7. ',m' → logprob: -8.65798282623291
    8. ' ' → logprob: -9.40798282623291
    9. 'r' → logprob: -10.03298282623291
    10. 'N' → logprob: -10.65798282623291

Token 114: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.34992918372154236
    2. ' =' → logprob: -1.2249292135238647
    3. ',' → logprob: -7.224929332733154
    4. '=input' → logprob: -8.224928855895996
    5. '=line' → logprob: -8.974928855895996
    6. ',N' → logprob: -9.349928855895996
    7. ',K' → logprob: -9.474928855895996
    8. ',n' → logprob: -10.099928855895996
    9. '=int' → logprob: -10.474928855895996
    10. ',Q' → logprob: -11.099928855895996

Token 115: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.07897428423166275
    2. 'map' → logprob: -2.5789742469787598
    3. ' input' → logprob: -9.828974723815918
    4. 'input' → logprob: -10.703974723815918
    5. ' list' → logprob: -12.203974723815918
    6. ' ' → logprob: -13.578974723815918
    7. 'list' → logprob: -13.828974723815918
    8. '(map' → logprob: -14.453974723815918
    9. '	map' → logprob: -15.328974723815918
    10. '[' → logprob: -16.3289737701416

Token 116: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.21809911727905273
    2. '(input' → logprob: -1.7180991172790527
    3. '(' → logprob: -4.218099117279053
    4. '(str' → logprob: -6.343099117279053
    5. ' (' → logprob: -10.468099594116211
    6. 'input' → logprob: -11.093099594116211
    7. 'int' → logprob: -11.218099594116211
    8. '(list' → logprob: -13.593099594116211
    9. 'str' → logprob: -13.968099594116211
    10. '(
' → logprob: -14.468099594116211

Token 117: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.04578845947980881
    2. ',' → logprob: -3.545788526535034
    3. '(input' → logprob: -4.170788288116455
    4. 'input' → logprob: -7.795788288116455
    5. '(' → logprob: -10.170788764953613
    6. ')' → logprob: -12.420788764953613
    7. '   ' → logprob: -12.420788764953613
    8. ' ,' → logprob: -12.920788764953613
    9. ' (' → logprob: -13.045788764953613
    10. ' input' → logprob: -13.420788764953613

Token 118: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.9153885558771435e-06
    2. '()' → logprob: -12.125005722045898
    3. ' ().' → logprob: -14.875005722045898
    4. '())' → logprob: -18.8750057220459
    5. '()
' → logprob: -19.6250057220459
    6. '().'' → logprob: -19.6250057220459
    7. '   ' → logprob: -20.0000057220459
    8. '(' → logprob: -20.0000057220459
    9. ')' → logprob: -20.5000057220459
    10. '('').' → logprob: -20.6250057220459

Token 119: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.08373924344778061
    2. 'strip' → logprob: -2.5837392807006836
    3. 'rstrip' → logprob: -5.333739280700684
    4. 'read' → logprob: -11.958739280700684
    5. '(split' → logprob: -12.958739280700684
    6. '().' → logprob: -13.708739280700684
    7. ' split' → logprob: -14.583739280700684
    8. ' strip' → logprob: -14.583739280700684
    9. ')' → logprob: -15.208739280700684
    10. 'decode' → logprob: -15.333739280700684

Token 120: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.023042108863592148
    2. '()' → logprob: -3.8980422019958496
    3. ')' → logprob: -6.27304220199585
    4. '('' → logprob: -8.273041725158691
    5. '())
' → logprob: -8.273041725158691
    6. '(' → logprob: -10.023041725158691
    7. '(','' → logprob: -10.648041725158691
    8. '()))' → logprob: -11.148041725158691
    9. '(',' → logprob: -12.273041725158691
    10. ' ())' → logprob: -12.648041725158691

Token 121: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9641693830490112
    2. ' ' → logprob: -1.2141693830490112
    3. '<|end|>' → logprob: -1.4641693830490112
    4. ' 
' → logprob: -3.714169502258301
    5. ' if' → logprob: -3.839169502258301
    6. '   ' → logprob: -4.464169502258301
    7. '        ' → logprob: -4.964169502258301
    8. '    ' → logprob: -5.089169502258301
    9. 'if' → logprob: -5.089169502258301
    10. '        
' → logprob: -5.839169502258301

Token 122: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04897167906165123
    2. ' if' → logprob: -3.048971652984619
    3. '       ' → logprob: -7.923971652984619
    4. ' ' → logprob: -11.673972129821777
    5. '        ' → logprob: -12.298972129821777
    6. '
' → logprob: -12.798972129821777
    7. '<|end|>' → logprob: -13.298972129821777
    8. '        
' → logprob: -13.423972129821777
    9. ' 
' → logprob: -13.673972129821777
    10. 'If' → logprob: -14.548972129821777

Token 123: ' P' (ID: 398)
  Prédit: ' P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' P' → logprob: -0.01832459680736065
    2. 'P' → logprob: -4.018324375152588
    3. ' not' → logprob: -8.768324851989746
    4. ' ' → logprob: -11.143324851989746
    5. ' (' → logprob: -13.143324851989746
    6. 'not' → logprob: -13.518324851989746
    7. '(P' → logprob: -14.018324851989746
    8. '(' → logprob: -15.143324851989746
    9. ' ' → logprob: -16.26832389831543
    10. '(not' → logprob: -16.76832389831543

Token 124: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5241272449493408
    2. '==' → logprob: -0.8991272449493408
    3. ' ' → logprob: -7.774127006530762
    4. '0' → logprob: -8.274127006530762
    5. '==-' → logprob: -8.399127006530762
    6. ')==' → logprob: -10.649127006530762
    7. '=' → logprob: -11.024127006530762
    8. ')' → logprob: -11.149127006530762
    9. '<=' → logprob: -11.274127006530762
    10. '<' → logprob: -11.524127006530762

Token 125: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00016682932619005442
    2. ' ' → logprob: -8.750166893005371
    3. '-' → logprob: -11.750166893005371
    4. '```' → logprob: -15.625166893005371
    5. ' -' → logprob: -17.000165939331055
    6. 'M' → logprob: -17.562665939331055
    7. '
' → logprob: -17.562665939331055
    8. '   ' → logprob: -17.625165939331055
    9. '

' → logprob: -17.812665939331055
    10. 'Q' → logprob: -17.812665939331055

Token 126: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1686452478170395
    2. 'and' → logprob: -1.9186452627182007
    3. ':' → logprob: -4.79364538192749
    4. ' or' → logprob: -9.293644905090332
    5. '	and' → logprob: -12.043644905090332
    6. '<|end|>' → logprob: -13.043644905090332
    7. ':return' → logprob: -13.168644905090332
    8. ' ' → logprob: -14.668644905090332
    9. 'or' → logprob: -15.043644905090332
    10. '<|end|>' → logprob: -15.418644905090332

Token 127: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.3132617771625519
    2. ' M' → logprob: -1.3132617473602295
    3. ' ' → logprob: -17.438261032104492
    4. '   ' → logprob: -17.938261032104492
    5. ' ' → logprob: -18.063261032104492
    6. '  ' → logprob: -18.688261032104492
    7. '	M' → logprob: -19.063261032104492
    8. '    ' → logprob: -20.313261032104492
    9. ',M' → logprob: -21.688261032104492
    10. '<M' → logprob: -21.938261032104492

Token 128: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00033427379094064236
    2. ' ==' → logprob: -8.125334739685059
    3. '0' → logprob: -10.250334739685059
    4. '=' → logprob: -13.625334739685059
    5. ']==' → logprob: -14.500334739685059
    6. '()==' → logprob: -15.000334739685059
    7. '==
' → logprob: -15.250334739685059
    8. ')==' → logprob: -15.250334739685059
    9. '===' → logprob: -16.125333786010742
    10. '<|end|>' → logprob: -16.500333786010742

Token 129: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '<|end|>' → logprob: -16.250009536743164
    4. '۰' → logprob: -18.125009536743164
    5. '   ' → logprob: -18.750009536743164
    6. '  ' → logprob: -18.875009536743164
    7. '```' → logprob: -18.875009536743164
    8. '<|end|>' → logprob: -19.000009536743164
    9. '-' → logprob: -19.500009536743164
    10. '০' → logprob: -19.875009536743164

Token 130: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0620235949754715
    2. ':
' → logprob: -2.812023639678955
    3. ':return' → logprob: -9.812023162841797
    4. ':
' → logprob: -14.312023162841797
    5. '   ' → logprob: -15.937023162841797
    6. ' :' → logprob: -16.062023162841797
    7. '):
' → logprob: -16.562023162841797
    8. ':

' → logprob: -16.562023162841797
    9. ' :
' → logprob: -16.812023162841797
    10. '       ' → logprob: -16.937023162841797

Token 131: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -8.590104698669165e-05
    2. '       ' → logprob: -10.375085830688477
    3. ' break' → logprob: -10.500085830688477
    4. 'break' → logprob: -11.750085830688477
    5. '		' → logprob: -12.125085830688477
    6. '   ' → logprob: -12.625085830688477
    7. '          ' → logprob: -13.000085830688477
    8. '               ' → logprob: -13.125085830688477
    9. ':' → logprob: -13.375085830688477
    10. '	       ' → logprob: -13.875085830688477

Token 132: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.10707559436559677
    2. 'return' → logprob: -2.6070756912231445
    3. ' break' → logprob: -3.6070756912231445
    4. ' return' → logprob: -7.3570756912231445
    5. '           ' → logprob: -11.232075691223145
    6. '	break' → logprob: -12.482075691223145
    7. '       ' → logprob: -12.482075691223145
    8. '   ' → logprob: -13.107075691223145
    9. '               ' → logprob: -15.357075691223145
    10. '
' → logprob: -16.232074737548828

Token 133: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16897955536842346
    2. '       ' → logprob: -1.918979525566101
    3. '<|end|>' → logprob: -5.668979644775391
    4. '        
' → logprob: -5.793979644775391
    5. '```' → logprob: -7.668979644775391
    6. '    
' → logprob: -7.793979644775391
    7. '
' → logprob: -7.918979644775391
    8. '  
' → logprob: -8.16897964477539
    9. ' 
' → logprob: -8.41897964477539
    10. '   ' → logprob: -8.54397964477539

Token 134: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7426495552062988
    2. '
' → logprob: -1.4926495552062988
    3. '<|end|>' → logprob: -1.7426495552062988
    4. '        
' → logprob: -2.117649555206299
    5. '<|end|>' → logprob: -6.867649555206299
    6. '```' → logprob: -7.117649555206299
    7. '        ' → logprob: -7.867649555206299
    8. '    
' → logprob: -7.992649555206299
    9. '            
' → logprob: -8.36764907836914
    10. '  
' → logprob: -8.61764907836914

Token 135: ' cards' (ID: 10541)
  Prédit: 'board'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'board' → logprob: -0.2411530613899231
    2. 'grid' → logprob: -1.8661530017852783
    3. 'field' → logprob: -4.491153240203857
    4. 'matrix' → logprob: -5.366153240203857
    5. 'b' → logprob: -5.491153240203857
    6. 'G' → logprob: -5.616153240203857
    7. ' board' → logprob: -5.616153240203857
    8. '   ' → logprob: -5.866153240203857
    9. ' grid' → logprob: -6.241153240203857
    10. 'B' → logprob: -6.241153240203857

Token 136: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048674117773771286
    2. '=' → logprob: -3.0486741065979004
    3. ',' → logprob: -10.048674583435059
    4. '=[]' → logprob: -10.548674583435059
    5. ')' → logprob: -12.423674583435059
    6. '[' → logprob: -12.673674583435059
    7. '<|end|>' → logprob: -13.298674583435059
    8. ' ' → logprob: -13.923674583435059
    9. '   ' → logprob: -14.048674583435059
    10. ']' → logprob: -14.298674583435059

Token 137: ' []
' (ID: 8911)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.31537675857543945
    2. '[list' → logprob: -2.0653767585754395
    3. '[]' → logprob: -2.8153767585754395
    4. '[' → logprob: -3.4403767585754395
    5. ' [' → logprob: -3.8153767585754395
    6. 'list' → logprob: -4.0653767585754395
    7. ' []' → logprob: -5.5653767585754395
    8. ' list' → logprob: -5.8153767585754395
    9. '{}' → logprob: -6.4403767585754395
    10. '[int' → logprob: -7.5653767585754395

Token 138: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.784830629825592
    2. ' for' → logprob: -1.0348305702209473
    3. 'for' → logprob: -2.4098305702209473
    4. '<|end|>' → logprob: -2.9098305702209473
    5. ' =' → logprob: -3.2848305702209473
    6. '[' → logprob: -6.159830570220947
    7. '=' → logprob: -6.284830570220947
    8. '<|end|>' → logprob: -7.784830570220947
    9. '	for' → logprob: -7.909830570220947
    10. ' ' → logprob: -8.034831047058105

Token 139: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0005205047782510519
    2. ' for' → logprob: -7.750520706176758
    3. 'while' → logprob: -9.875520706176758
    4. 'line' → logprob: -11.625520706176758
    5. 'card' → logprob: -12.125520706176758
    6. 'cards' → logprob: -12.125520706176758
    7. 'count' → logprob: -12.875520706176758
    8. 'idx' → logprob: -13.125520706176758
    9. '_for' → logprob: -13.375520706176758
    10. 'row' → logprob: -13.375520706176758

Token 140: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03595538064837456
    2. ' _' → logprob: -3.7859554290771484
    3. '_i' → logprob: -4.410955429077148
    4. ' i' → logprob: -8.285955429077148
    5. 'i' → logprob: -8.410955429077148
    6. '_in' → logprob: -12.410955429077148
    7. '_m' → logprob: -13.160955429077148
    8. '_j' → logprob: -13.160955429077148
    9. ' ' → logprob: -14.785955429077148
    10. '_s' → logprob: -14.785955429077148

Token 141: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.058452896773815155
    2. ' in' → logprob: -3.183452844619751
    3. 'range' → logprob: -4.18345308303833
    4. ' range' → logprob: -9.433452606201172
    5. ' ' → logprob: -12.433452606201172
    6. '```' → logprob: -13.808452606201172
    7. '0' → logprob: -14.308452606201172
    8. 'import' → logprob: -14.808452606201172
    9. ')' → logprob: -14.933452606201172
    10. '_' → logprob: -15.058452606201172

Token 142: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -8.542423165636137e-05
    2. ' range' → logprob: -9.375085830688477
    3. '(range' → logprob: -14.750085830688477
    4. 'ange' → logprob: -17.375085830688477
    5. '	range' → logprob: -17.500085830688477
    6. 'in' → logprob: -18.250085830688477
    7. ')' → logprob: -19.625085830688477
    8. '(' → logprob: -19.625085830688477
    9. ' ' → logprob: -19.750085830688477
    10. 'r' → logprob: -19.750085830688477

Token 143: '(P' (ID: 8952)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.6932814717292786
    2. '(P' → logprob: -0.6932814717292786
    3. '(' → logprob: -9.443281173706055
    4. 'P' → logprob: -10.568281173706055
    5. 'M' → logprob: -10.693281173706055
    6. '(m' → logprob: -12.943281173706055
    7. ' (' → logprob: -13.568281173706055
    8. '((' → logprob: -13.693281173706055
    9. '(p' → logprob: -15.068281173706055
    10. '(C' → logprob: -15.568281173706055

Token 144: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07914435118436813
    2. '):
' → logprob: -2.579144239425659
    3. '):
' → logprob: -8.954144477844238
    4. ' ):' → logprob: -9.829144477844238
    5. '+' → logprob: -10.579144477844238
    6. '*' → logprob: -10.579144477844238
    7. '   ' → logprob: -12.579144477844238
    8. ')' → logprob: -12.829144477844238
    9. '*M' → logprob: -12.954144477844238
    10. ' ):
' → logprob: -13.204144477844238

Token 145: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6740959286689758
    2. '   ' → logprob: -1.549095869064331
    3. '       ' → logprob: -1.549095869064331
    4. ' cards' → logprob: -3.049095869064331
    5. 'cards' → logprob: -4.67409610748291
    6. '(cards' → logprob: -6.42409610748291
    7. '	   ' → logprob: -6.54909610748291
    8. ',c' → logprob: -6.79909610748291
    9. ' c' → logprob: -7.29909610748291
    10. ',' → logprob: -7.54909610748291

Token 146: ' row' (ID: 5225)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.3361043334007263
    2. ' cards' → logprob: -1.586104393005371
    3. 'line' → logprob: -4.086104393005371
    4. ' line' → logprob: -4.211104393005371
    5. 'card' → logprob: -4.711104393005371
    6. 'row' (adapté à ' row') → logprob: -4.711104393005371
    7. ' row' → logprob: -5.086104393005371
    8. ' card' → logprob: -5.461104393005371
    9. ' hand' → logprob: -5.586104393005371
    10. 'hand' → logprob: -5.711104393005371

Token 147: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026504293084144592
    2. '=' → logprob: -3.6515042781829834
    3. 's' → logprob: -8.901504516601562
    4. '_cards' → logprob: -10.526504516601562
    5. ' ' → logprob: -11.901504516601562
    6. ' =
' → logprob: -12.276504516601562
    7. '=[]' → logprob: -12.276504516601562
    8. '   ' → logprob: -12.526504516601562
    9. ',' → logprob: -12.526504516601562
    10. '=input' → logprob: -12.651504516601562

Token 148: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.35032203793525696
    2. ' list' → logprob: -1.3503220081329346
    3. 'input' → logprob: -3.6003220081329346
    4. ' input' → logprob: -4.725322246551514
    5. '[input' → logprob: -8.975321769714355
    6. ' [' → logprob: -10.975321769714355
    7. '[list' → logprob: -10.975321769714355
    8. '[' → logprob: -10.975321769714355
    9. 'tuple' → logprob: -12.600321769714355
    10. ' tuple' → logprob: -12.725321769714355

Token 149: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -3.2020991056924686e-05
    2. '(' → logprob: -10.500032424926758
    3. 'map' → logprob: -13.125032424926758
    4. '(input' → logprob: -13.250032424926758
    5. '()' → logprob: -15.000032424926758
    6. '(int' → logprob: -15.375032424926758
    7. '(
' → logprob: -17.750032424926758
    8. '(range' → logprob: -17.750032424926758
    9. ' map' → logprob: -18.250032424926758
    10. '(m' → logprob: -18.250032424926758

Token 150: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0032316597644239664
    2. 'int' → logprob: -5.753231525421143
    3. ',int' → logprob: -10.6282320022583
    4. 'str' → logprob: -11.6282320022583
    5. '(' → logprob: -12.1282320022583
    6. '=int' → logprob: -12.3782320022583
    7. ' int' → logprob: -12.6282320022583
    8. '(str' → logprob: -13.0032320022583
    9. ']int' → logprob: -13.2532320022583
    10. ')' → logprob: -13.8782320022583

Token 151: ',input' (ID: 123014)
  Prédit: ',input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.0012029698118567467
    2. ',' → logprob: -7.5012030601501465
    3. '(input' → logprob: -7.5012030601501465
    4. 'input' → logprob: -9.251202583312988
    5. '(' → logprob: -14.501202583312988
    6. '=input' → logprob: -15.001202583312988
    7. ' ,' → logprob: -15.876202583312988
    8. ' input' → logprob: -15.876202583312988
    9. ')' → logprob: -16.626203536987305
    10. '	input' → logprob: -17.251203536987305

Token 152: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.2113979209971149e-05
    2. '()' → logprob: -11.375012397766113
    3. ' ().' → logprob: -15.875012397766113
    4. '(' → logprob: -16.000011444091797
    5. '.readline' → logprob: -17.000011444091797
    6. '.' → logprob: -17.375011444091797
    7. ')' → logprob: -17.500011444091797
    8. '()))' → logprob: -17.625011444091797
    9. '.split' → logprob: -18.000011444091797
    10. '   ' → logprob: -18.000011444091797

Token 153: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0004642736748792231
    2. 'strip' → logprob: -7.75046443939209
    3. 'read' → logprob: -10.62546443939209
    4. 'rstrip' → logprob: -11.75046443939209
    5. ' split' → logprob: -14.12546443939209
    6. '(split' → logprob: -14.37546443939209
    7. ')' → logprob: -16.500463485717773
    8. '().' → logprob: -16.875463485717773
    9. 'spl' → logprob: -17.250463485717773
    10. '_split' → logprob: -18.000463485717773

Token 154: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.027552518993616104
    2. '()' → logprob: -4.152552604675293
    3. '))' → logprob: -4.902552604675293
    4. '()))
' → logprob: -5.652552604675293
    5. '(' → logprob: -8.027552604675293
    6. '())' → logprob: -9.152552604675293
    7. '().' → logprob: -10.777552604675293
    8. '()));' → logprob: -11.027552604675293
    9. '()))

' → logprob: -11.402552604675293
    10. '()
' → logprob: -11.902552604675293

Token 155: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004766765050590038
    2. ')' → logprob: -6.379766941070557
    3. '(cards' → logprob: -6.629766941070557
    4. ' cards' → logprob: -7.254766941070557
    5. ')
' → logprob: -7.879766941070557
    6. 'cards' → logprob: -8.129766464233398
    7. '<|end|>' → logprob: -8.504766464233398
    8. '       ' → logprob: -9.629766464233398
    9. '.cards' → logprob: -10.379766464233398
    10. '.append' → logprob: -11.879766464233398

Token 156: ' card' (ID: 4766)
  Prédit: ' cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cards' → logprob: -0.635688066482544
    2. 'cards' → logprob: -0.760688066482544
    3. '           ' → logprob: -6.135687828063965
    4. '   ' → logprob: -7.385687828063965
    5. '       ' → logprob: -9.260687828063965
    6. ' for' → logprob: -9.885687828063965
    7. '(cards' → logprob: -10.510687828063965
    8. ' ' → logprob: -10.510687828063965
    9. '.cards' → logprob: -10.635687828063965
    10. 'for' → logprob: -10.885687828063965

Token 157: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.0722858102526516e-05
    2. '.append' → logprob: -10.125041007995605
    3. '=' → logprob: -15.375041007995605
    4. ' s' → logprob: -15.750041007995605
    5. ' =' → logprob: -16.12504005432129
    6. 'append' → logprob: -16.75004005432129
    7. '.' → logprob: -17.00004005432129
    8. '.extend' → logprob: -17.87504005432129
    9. '<|end|>' → logprob: -17.87504005432129
    10. '=s' → logprob: -18.12504005432129

Token 158: ' [' (ID: 723)
  Prédit: '[row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -0.044059332460165024
    2. '[' → logprob: -4.0440592765808105
    3. ' [' → logprob: -4.4190592765808105
    4. 'row' → logprob: -4.6690592765808105
    5. '{' → logprob: -6.5440592765808105
    6. '[]' → logprob: -6.7940592765808105
    7. '[]
' → logprob: -7.9190592765808105
    8. 'set' → logprob: -8.044059753417969
    9. '{}' → logprob: -8.044059753417969
    10. '[[' → logprob: -9.044059753417969

Token 159: 'row' (ID: 843)
  Prédit: 'row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.039380647242069244
    2. '0' → logprob: -4.9143805503845215
    3. 'cell' → logprob: -5.1643805503845215
    4. 'False' → logprob: -5.5393805503845215
    5. 'item' → logprob: -5.5393805503845215
    6. 'list' → logprob: -5.7893805503845215
    7. 'set' → logprob: -6.2893805503845215
    8. 'tuple' → logprob: -6.2893805503845215
    9. 'num' → logprob: -6.4143805503845215
    10. '[' → logprob: -6.6643805503845215

Token 160: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.08620055764913559
    2. '[:]' → logprob: -3.461200475692749
    3. '[j' → logprob: -3.711200475692749
    4. '])' → logprob: -4.711200714111328
    5. ']' → logprob: -4.961200714111328
    6. ')]' → logprob: -6.211200714111328
    7. '[:' → logprob: -6.336200714111328
    8. '[' → logprob: -6.461200714111328
    9. '[n' → logprob: -6.711200714111328
    10. ')' → logprob: -7.211200714111328

Token 161: '*M' (ID: 151552)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.128056526184082
    2. ':i' → logprob: -1.878056526184082
    3. '*M' → logprob: -1.878056526184082
    4. '::' → logprob: -2.378056526184082
    5. '*m' → logprob: -2.503056526184082
    6. ' for' → logprob: -2.503056526184082
    7. ' *' → logprob: -3.253056526184082
    8. '*' → logprob: -3.503056526184082
    9. ' :' → logprob: -4.378056526184082
    10. ':' → logprob: -4.878056526184082

Token 162: ':(' (ID: 7990)
  Prédit: ':('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':(' → logprob: -0.28476810455322266
    2. ' +' → logprob: -1.6597681045532227
    3. '+i' → logprob: -3.5347681045532227
    4. '+' → logprob: -4.659768104553223
    5. ':' → logprob: -4.909768104553223
    6. '+(' → logprob: -5.284768104553223
    7. '+j' → logprob: -6.534768104553223
    8. ':i' → logprob: -6.784768104553223
    9. ' :(' → logprob: -6.784768104553223
    10. ' :' → logprob: -7.034768104553223

Token 163: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.015685077756643295
    2. '(i' → logprob: -4.265685081481934
    3. ' i' → logprob: -6.890685081481934
    4. ' (' → logprob: -7.765685081481934
    5. '(' → logprob: -9.890685081481934
    6. '   ' → logprob: -11.640685081481934
    7. ' ' → logprob: -12.765685081481934
    8. '{i' → logprob: -13.015685081481934
    9. ')i' → logprob: -13.140685081481934
    10. '
' → logprob: -13.390685081481934

Token 164: '+' (ID: 10)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.35778647661209106
    2. '*M' → logprob: -1.2327864170074463
    3. '(i' → logprob: -4.982786655426025
    4. '   ' → logprob: -6.857786655426025
    5. '*i' → logprob: -8.357786178588867
    6. 'i' → logprob: -8.357786178588867
    7. '(M' → logprob: -8.857786178588867
    8. '*(' → logprob: -8.982786178588867
    9. '           ' → logprob: -9.107786178588867
    10. '[i' → logprob: -9.482786178588867

Token 165: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017183588352054358
    2. ' ' → logprob: -9.000171661376953
    3. '   ' → logprob: -10.500171661376953
    4. 'row' → logprob: -11.125171661376953
    5. '           ' → logprob: -13.125171661376953
    6. '  ' → logprob: -14.000171661376953
    7. '       ' → logprob: -14.625171661376953
    8. ' row' → logprob: -14.687671661376953
    9. '```' → logprob: -15.312671661376953
    10. '    ' → logprob: -15.437671661376953

Token 166: ')*' (ID: 11043)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.7398218512535095
    2. '*M' → logprob: -1.1148219108581543
    3. ')' → logprob: -2.4898219108581543
    4. ')*' → logprob: -3.1148219108581543
    5. ']*' → logprob: -3.8648219108581543
    6. ']' → logprob: -4.489821910858154
    7. '[M' → logprob: -4.989821910858154
    8. '   ' → logprob: -4.989821910858154
    9. 'row' → logprob: -5.489821910858154
    10. '][' → logprob: -5.864821910858154

Token 167: 'M' (ID: 44)
  Prédit: 'M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00021021578868385404
    2. ' M' → logprob: -8.75020980834961
    3. '   ' → logprob: -10.62520980834961
    4. 'P' → logprob: -12.25020980834961
    5. 'N' → logprob: -12.37520980834961
    6. ' ' → logprob: -13.00020980834961
    7. '  ' → logprob: -13.12520980834961
    8. 'row' → logprob: -13.25020980834961
    9. '           ' → logprob: -13.37520980834961
    10. '       ' → logprob: -13.37520980834961

Token 168: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002238162560388446
    2. ' ]' → logprob: -6.1272382736206055
    3. ']]' → logprob: -11.002238273620605
    4. '[i' → logprob: -11.252238273620605
    5. 'M' → logprob: -12.252238273620605
    6. '(i' → logprob: -12.752238273620605
    7. 'row' → logprob: -13.127238273620605
    8. ']
' → logprob: -13.252238273620605
    9. 'i' → logprob: -13.377238273620605
    10. ' ' → logprob: -13.502238273620605

Token 169: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5089619755744934
    2. 'for' → logprob: -1.1339619159698486
    3. ']' → logprob: -2.6339619159698486
    4. ' ' → logprob: -5.883962154388428
    5. '   ' → logprob: -6.883962154388428
    6. '  ' → logprob: -8.00896167755127
    7. '    ' → logprob: -8.00896167755127
    8. ' ]' → logprob: -8.38396167755127
    9. '(i' → logprob: -8.88396167755127
    10. ' i' → logprob: -9.13396167755127

Token 170: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.02344777062535286
    2. ' range' → logprob: -3.7734477519989014
    3. 'i' → logprob: -8.52344799041748
    4. ' i' → logprob: -13.77344799041748
    5. '  ' → logprob: -14.02344799041748
    6. ' ' → logprob: -14.14844799041748
    7. '   ' → logprob: -14.89844799041748
    8. 'in' → logprob: -15.64844799041748
    9. '(range' → logprob: -15.64844799041748
    10. '	range' → logprob: -16.398447036743164

Token 171: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10655000060796738
    2. ' range' → logprob: -2.3565499782562256
    3. 'in' → logprob: -5.731550216674805
    4. 'range' → logprob: -6.231550216674805
    5. '(range' → logprob: -7.106550216674805
    6. '<|end|>' → logprob: -8.231550216674805
    7. '	range' → logprob: -11.606550216674805
    8. '(' → logprob: -11.606550216674805
    9. ' xrange' → logprob: -11.856550216674805
    10. ' ' → logprob: -13.356550216674805

Token 172: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06200734153389931
    2. ' range' → logprob: -2.812007427215576
    3. '   ' → logprob: -10.687006950378418
    4. '(range' → logprob: -11.687006950378418
    5. ' ' → logprob: -12.562006950378418
    6. '	range' → logprob: -13.062006950378418
    7. '  ' → logprob: -13.562006950378418
    8. '[' → logprob: -13.937006950378418
    9. '    ' → logprob: -15.187006950378418
    10. 'row' → logprob: -15.937006950378418

Token 173: '(M' (ID: 6103)
  Prédit: '(P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.5862277746200562
    2. '(M' → logprob: -1.3362277746200562
    3. '(len' → logprob: -1.8362277746200562
    4. '(' → logprob: -4.086227893829346
    5. '((' → logprob: -5.711227893829346
    6. '(N' → logprob: -7.836227893829346
    7. 'len' → logprob: -7.961227893829346
    8. 'P' → logprob: -8.836227416992188
    9. '(int' → logprob: -9.211227416992188
    10. 'M' → logprob: -9.836227416992188

Token 174: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.353008499601856e-05
    2. ')]
' → logprob: -9.500093460083008
    3. ' )' → logprob: -11.750093460083008
    4. ']' → logprob: -12.375093460083008
    5. ')' → logprob: -13.000093460083008
    6. ')]
' → logprob: -14.000093460083008
    7. ')]

' → logprob: -14.250093460083008
    8. ' ]' → logprob: -14.375093460083008
    9. ' ' → logprob: -14.500093460083008
    10. ')])' → logprob: -15.125093460083008

Token 175: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6735199689865112
    2. '       ' → logprob: -1.1735199689865112
    3. '<|end|>' → logprob: -1.7985199689865112
    4. '<|end|>' → logprob: -4.923520088195801
    5. ')' → logprob: -5.298520088195801
    6. '[' → logprob: -7.048520088195801
    7. '
' → logprob: -8.1735200881958
    8. '   ' → logprob: -8.2985200881958
    9. ',' → logprob: -8.4235200881958
    10. '          ' → logprob: -8.9235200881958

Token 176: ' cards' (ID: 10541)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' (adapté à ' cards') → logprob: -0.2110685259103775
    2. ' cards' → logprob: -2.086068630218506
    3. '       ' → logprob: -2.836068630218506
    4. '           ' → logprob: -5.711068630218506
    5. '   ' → logprob: -6.211068630218506
    6. '(cards' → logprob: -7.211068630218506
    7. '
' → logprob: -7.711068630218506
    8. '.cards' → logprob: -8.211068153381348
    9. 'lines' → logprob: -8.836068153381348
    10. ')' → logprob: -9.586068153381348

Token 177: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0010476969182491302
    2. '.extend' → logprob: -7.251047611236572
    3. '.' → logprob: -8.00104808807373
    4. ' .' → logprob: -13.12604808807373
    5. '.ap' → logprob: -15.37604808807373
    6. '.app' → logprob: -15.50104808807373
    7. 'append' → logprob: -15.62604808807373
    8. '.push' → logprob: -18.001047134399414
    9. '=' → logprob: -19.876047134399414
    10. '.Append' → logprob: -20.126047134399414

Token 178: '(card' (ID: 51112)
  Prédit: '(card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(card' → logprob: -3.833878508885391e-05
    2. '(row' → logprob: -10.250038146972656
    3. '(' → logprob: -13.375038146972656
    4. '(cards' → logprob: -14.000038146972656
    5. ' (' → logprob: -14.875038146972656
    6. 'card' → logprob: -16.000038146972656
    7. '(c' → logprob: -17.500038146972656
    8. '(car' → logprob: -17.750038146972656
    9. '(cart' → logprob: -18.750038146972656
    10. '((' → logprob: -19.000038146972656

Token 179: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006378429476171732
    2. '<|end|>' → logprob: -5.131378650665283
    3. '<|end|>' → logprob: -8.631378173828125
    4. '       ' → logprob: -9.506378173828125
    5. ')
' → logprob: -9.631378173828125
    6. '
' → logprob: -9.631378173828125
    7. ')return' → logprob: -10.256378173828125
    8. ' )' → logprob: -12.006378173828125
    9. '```' → logprob: -13.131378173828125
    10. ')}' → logprob: -13.256378173828125

Token 180: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 181: ' #' (ID: 1069)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.2751885652542114
    2. 'lines' → logprob: -1.6501885652542114
    3. '       ' → logprob: -4.025188446044922
    4. '   ' → logprob: -5.400188446044922
    5. 'marks' → logprob: -5.775188446044922
    6. ' for' → logprob: -6.025188446044922
    7. ' marks' → logprob: -6.400188446044922
    8. 'def' → logprob: -6.400188446044922
    9. 'all' → logprob: -6.525188446044922
    10. '#' (adapté à ' #') → logprob: -6.650188446044922

Token 182: ' For' (ID: 2214)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.10702643543481827
    2. 'lines' → logprob: -2.9820263385772705
    3. '#' → logprob: -4.48202657699585
    4. ' #' → logprob: -5.10702657699585
    5. ' for' → logprob: -5.35702657699585
    6. 'def' → logprob: -5.73202657699585
    7. ' valid' → logprob: -5.85702657699585
    8. ' all' → logprob: -6.35702657699585
    9. ' found' → logprob: -6.35702657699585
    10. ' def' → logprob: -6.98202657699585

Token 183: ' each' (ID: 2454)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.5326493978500366
    2. ' i' → logprob: -2.282649517059326
    3. 'line' → logprob: -2.407649517059326
    4. ' card' → logprob: -2.532649517059326
    5. 'i' → logprob: -2.657649517059326
    6. 'card' → logprob: -4.282649517059326
    7. ' now' → logprob: -4.782649517059326
    8. ' lines' → logprob: -4.907649517059326
    9. ' _' → logprob: -5.157649517059326
    10. '_' → logprob: -5.407649517059326

Token 184: ' card' (ID: 4766)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.6799394488334656
    2. ' card' → logprob: -0.9299394488334656
    3. 'line' → logprob: -2.9299395084381104
    4. ' line' → logprob: -3.3049395084381104
    5. 'token' → logprob: -6.429939270019531
    6. 'i' → logprob: -6.679939270019531
    7. ' i' → logprob: -7.304939270019531
    8. 'def' → logprob: -7.429939270019531
    9. ' token' → logprob: -7.679939270019531
    10. 'p' → logprob: -7.804939270019531

Token 185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08325892686843872
    2. '       ' → logprob: -3.208258867263794
    3. ' lines' → logprob: -3.708258867263794
    4. '   ' → logprob: -5.958259105682373
    5. ' ,' → logprob: -6.208259105682373
    6. ':' → logprob: -6.583259105682373
    7. ' and' → logprob: -6.583259105682373
    8. 'lines' → logprob: -6.583259105682373
    9. ' for' → logprob: -7.333259105682373
    10. ',
' → logprob: -7.583259105682373

Token 186: ' for' (ID: 395)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.7445767521858215
    2. ' for' → logprob: -1.1195766925811768
    3. 'for' → logprob: -2.2445766925811768
    4. 'lines' → logprob: -3.7445766925811768
    5. ' marks' → logprob: -4.369576930999756
    6. '#' → logprob: -4.994576930999756
    7. ' all' → logprob: -5.244576930999756
    8. 'marks' → logprob: -5.369576930999756
    9. 'n' → logprob: -5.619576930999756
    10. 'def' → logprob: -5.869576930999756

Token 187: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9971091747283936
    2. ' i' → logprob: -1.7471091747283936
    3. ' each' → logprob: -1.8721091747283936
    4. ' line' → logprob: -1.8721091747283936
    5. 'each' → logprob: -2.8721091747283936
    6. 'line' → logprob: -3.4971091747283936
    7. ' card' → logprob: -4.247109413146973
    8. ' now' → logprob: -4.747109413146973
    9. 'card' → logprob: -5.122109413146973
    10. ' row' → logprob: -5.372109413146973

Token 188: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.4610949754714966
    2. 'line' → logprob: -1.0860949754714966
    3. ' lines' → logprob: -4.836094856262207
    4. ' i' → logprob: -5.461094856262207
    5. 'lines' → logprob: -5.461094856262207
    6. 'i' → logprob: -5.711094856262207
    7. ' card' → logprob: -5.961094856262207
    8. 'row' → logprob: -5.961094856262207
    9. ' row' → logprob: -6.336094856262207
    10. 'card' → logprob: -6.711094856262207

Token 189: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14630551636219025
    2. ',' → logprob: -2.771305561065674
    3. ' in' → logprob: -3.396305561065674
    4. '<|end|>' → logprob: -3.771305561065674
    5. '(lines' → logprob: -6.021305561065674
    6. '   ' → logprob: -6.021305561065674
    7. ' for' → logprob: -6.396305561065674
    8. ':
' → logprob: -6.396305561065674
    9. 'for' → logprob: -6.646305561065674
    10. '<|end|>' → logprob: -6.771305561065674

Token 190: ' store' (ID: 4897)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6884440779685974
    2. ' pass' → logprob: -1.3134441375732422
    3. 'for' → logprob: -2.563444137573242
    4. 'pass' → logprob: -3.688444137573242
    5. ' lines' → logprob: -3.813444137573242
    6. 'found' → logprob: -4.063444137573242
    7. '#' → logprob: -4.188444137573242
    8. ' found' → logprob: -4.313444137573242
    9. ' #' → logprob: -5.188444137573242
    10. ' check' → logprob: -5.313444137573242

Token 191: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.49605950713157654
    2. 'the' → logprob: -2.1210594177246094
    3. ' which' → logprob: -3.2460594177246094
    4. ' all' → logprob: -3.3710594177246094
    5. ' line' → logprob: -3.6210594177246094
    6. ' its' → logprob: -3.8710594177246094
    7. ' lines' → logprob: -4.121059417724609
    8. ' their' → logprob: -4.371059417724609
    9. 'line' → logprob: -4.371059417724609
    10. ' a' → logprob: -4.496059417724609

Token 192: ' numbers' (ID: 8663)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.763853907585144
    2. 'numbers' → logprob: -2.3888540267944336
    3. 'marked' → logprob: -2.5138540267944336
    4. 'positions' → logprob: -2.7638540267944336
    5. 'sum' → logprob: -2.8888540267944336
    6. 'line' → logprob: -2.8888540267944336
    7. 'lines' → logprob: -3.1388540267944336
    8. ' numbers' → logprob: -3.1388540267944336
    9. 'indices' → logprob: -3.2638540267944336
    10. 'maximum' → logprob: -3.3888540267944336

Token 193: ' forming' (ID: 44860)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.3369027376174927
    2. ' lines' → logprob: -1.7119027376174927
    3. 'marks' → logprob: -2.586902618408203
    4. 'numbers' → logprob: -2.586902618408203
    5. 'marked' → logprob: -2.711902618408203
    6. ' marks' → logprob: -2.961902618408203
    7. 'in' → logprob: -3.586902618408203
    8. 'num' → logprob: -3.711902618408203
    9. 'lines' → logprob: -3.711902618408203
    10. ' numbers' → logprob: -3.836902618408203

Token 194: ' that' (ID: 484)
  Prédit: ' that'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.811528742313385
    2. ' the' → logprob: -1.0615286827087402
    3. 'the' → logprob: -2.6865286827087402
    4. ' lines' → logprob: -2.6865286827087402
    5. 'that' → logprob: -3.0615286827087402
    6. ' a' → logprob: -4.06152868270874
    7. '<|end|>' → logprob: -5.93652868270874
    8. ' line' → logprob: -6.56152868270874
    9. 'a' → logprob: -6.56152868270874
    10. 'lines' → logprob: -6.68652868270874

Token 195: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.38689905405044556
    2. ' line' → logprob: -1.1368989944458008
    3. '	line' → logprob: -11.7618989944458
    4. '[line' → logprob: -12.3868989944458
    5. 'lines' → logprob: -12.8868989944458
    6. '   ' → logprob: -12.8868989944458
    7. '(line' → logprob: -13.1368989944458
    8. '#line' → logprob: -13.5118989944458
    9. '<|end|>' → logprob: -13.5118989944458
    10. ' ' → logprob: -13.7618989944458

Token 196: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 197: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04859180003404617
    2. '
' → logprob: -3.7985918521881104
    3. '<|end|>' → logprob: -4.048591613769531
    4. '        
' → logprob: -5.423591613769531
    5. '<|end|>' → logprob: -7.298591613769531
    6. '        ' → logprob: -7.423591613769531
    7. ' for' → logprob: -7.548591613769531
    8. 'for' → logprob: -8.173591613769531
    9. ',' → logprob: -8.298591613769531
    10. ' lines' → logprob: -8.548591613769531

Token 198: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.41958528757095337
    2. 'lines' (adapté à ' lines') → logprob: -1.4195852279663086
    3. '       ' → logprob: -3.1695852279663086
    4. ' for' → logprob: -3.9195852279663086
    5. 'for' → logprob: -4.044585227966309
    6. 'line' → logprob: -6.044585227966309
    7. 'all' → logprob: -6.169585227966309
    8. 'numbers' → logprob: -6.169585227966309
    9. 'marks' → logprob: -6.419585227966309
    10. 'cards' → logprob: -6.419585227966309

Token 199: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31873515248298645
    2. '=' → logprob: -1.318735122680664
    3. 's' → logprob: -5.693735122680664
    4. '_lines' → logprob: -6.568735122680664
    5. '_' → logprob: -8.318735122680664
    6. '=[]' → logprob: -8.818735122680664
    7. '_for' → logprob: -9.318735122680664
    8. '_lists' → logprob: -10.318735122680664
    9. 'for' → logprob: -10.818735122680664
    10. '_per' → logprob: -11.443735122680664

Token 200: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.0031920899637043476
    2. ' all' → logprob: -5.753191947937012
    3. '[]' → logprob: -11.253191947937012
    4. '[' → logprob: -14.253191947937012
    5. ' []' → logprob: -15.378191947937012
    6. '[]
' → logprob: -15.628191947937012
    7. ' ' → logprob: -16.378192901611328
    8. '	all' → logprob: -16.628192901611328
    9. '   ' → logprob: -16.878192901611328
    10. '(all' → logprob: -17.753192901611328

Token 201: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -7.896309739408025e-07
    2. 'lines' → logprob: -14.500000953674316
    3. '_' → logprob: -16.625
    4. '_LINES' → logprob: -16.875
    5. 'Lines' → logprob: -17.25
    6. '```' → logprob: -17.375
    7. '_line' → logprob: -17.875
    8. '(lines' → logprob: -18.125
    9. ' lines' → logprob: -18.5
    10. '_rows' → logprob: -18.75

Token 202: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -7.465036105713807e-06
    2. ' (' → logprob: -12.500007629394531
    3. 'M' → logprob: -13.250007629394531
    4. '(m' → logprob: -13.500007629394531
    5. '(' → logprob: -14.875007629394531
    6. '```' → logprob: -16.75000762939453
    7. ' M' → logprob: -17.25000762939453
    8. '
' → logprob: -17.50000762939453
    9. '(P' → logprob: -18.12500762939453
    10. '[M' → logprob: -18.37500762939453

Token 203: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006299942615441978
    2. ')
' → logprob: -7.375629901885986
    3. ' )' → logprob: -13.750630378723145
    4. ')
' → logprob: -13.875630378723145
    5. ')

' → logprob: -14.375630378723145
    6. ')`' → logprob: -15.375630378723145
    7. '   ' → logprob: -15.500630378723145
    8. '))' → logprob: -16.125629425048828
    9. '())' → logprob: -16.125629425048828
    10. ')m' → logprob: -17.250629425048828

Token 204: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004802953451871872
    2. 'for' → logprob: -6.25480318069458
    3. '        
' → logprob: -7.50480318069458
    4. 'results' → logprob: -7.75480318069458
    5. 'result' → logprob: -8.254802703857422
    6. 'next' → logprob: -8.504802703857422
    7. 'scores' → logprob: -8.629802703857422
    8. '<|end|>' → logprob: -8.629802703857422
    9. ' for' → logprob: -8.879802703857422
    10. 'marks' → logprob: -9.129802703857422

Token 205: ' card' (ID: 4766)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' (adapté à ' card') → logprob: -1.0833879709243774
    2. 'for' → logprob: -1.8333879709243774
    3. 'marks' → logprob: -1.8333879709243774
    4. 'line' → logprob: -2.708387851715088
    5. 'lines' → logprob: -2.708387851715088
    6. 'marked' → logprob: -2.958387851715088
    7. 'cards' → logprob: -3.333387851715088
    8. 'numbers' → logprob: -3.833387851715088
    9. 'results' → logprob: -4.083387851715088
    10. 'b' → logprob: -4.208387851715088

Token 206: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.0524018220603466
    2. '_marks' → logprob: -3.4274017810821533
    3. '_masks' → logprob: -5.552402019500732
    4. '_mark' → logprob: -5.677402019500732
    5. '_scores' → logprob: -6.302402019500732
    6. 's' → logprob: -6.427402019500732
    7. '_line' → logprob: -6.427402019500732
    8. '_counts' → logprob: -6.927402019500732
    9. '_sets' → logprob: -7.052402019500732
    10. '_mask' → logprob: -7.302402019500732

Token 207: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4302462041378021
    2. '=' → logprob: -1.0552462339401245
    3. 's' → logprob: -6.805246353149414
    4. '_lines' → logprob: -8.180246353149414
    5. '=[]' → logprob: -10.180246353149414
    6. '_' → logprob: -10.555246353149414
    7. '_cards' → logprob: -10.680246353149414
    8. '_sets' → logprob: -11.430246353149414
    9. ' ' → logprob: -11.430246353149414
    10. '   ' → logprob: -11.930246353149414

Token 208: ' []
' (ID: 8911)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.579966127872467
    2. '[]' → logprob: -1.0799660682678223
    3. '[[' → logprob: -2.5799660682678223
    4. ' []' → logprob: -4.829966068267822
    5. ' [[]' → logprob: -4.829966068267822
    6. ' [' → logprob: -5.329966068267822
    7. '[]
' → logprob: -5.829966068267822
    8. ' [[' → logprob: -7.954966068267822
    9. '[
' → logprob: -7.954966068267822
    10. '[][]' → logprob: -8.95496654510498

Token 209: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003549105254933238
    2. ' for' → logprob: -6.128549098968506
    3. 'for' → logprob: -7.128549098968506
    4. '<|end|>' → logprob: -8.128549575805664
    5. '   ' → logprob: -8.503549575805664
    6. '        
' → logprob: -11.253549575805664
    7. '           ' → logprob: -11.378549575805664
    8. '<|end|>' → logprob: -12.003549575805664
    9. '[]' → logprob: -12.378549575805664
    10. ')' → logprob: -12.628549575805664

Token 210: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005279057659208775
    2. ' for' → logprob: -5.255279064178467
    3. '       ' → logprob: -10.005278587341309
    4. '	for' → logprob: -17.005279541015625
    5. '   ' → logprob: -17.130279541015625
    6. '
' → logprob: -17.505279541015625
    7. ' ' → logprob: -19.630279541015625
    8. '```' → logprob: -19.880279541015625
    9. '        
' → logprob: -20.130279541015625
    10. 'For' → logprob: -20.630279541015625

Token 211: ' c' (ID: 274)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.6173407435417175
    2. ' card' → logprob: -0.9923407435417175
    3. 'c' → logprob: -2.9923408031463623
    4. ' c' → logprob: -3.2423408031463623
    5. ' idx' → logprob: -8.367341041564941
    6. 'idx' → logprob: -8.367341041564941
    7. 'p' → logprob: -9.492341041564941
    8. ' p' → logprob: -10.117341041564941
    9. 'k' → logprob: -10.867341041564941
    10. '	card' → logprob: -10.867341041564941

Token 212: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005112914834171534
    2. 'in' → logprob: -5.380113124847412
    3. 'ard' → logprob: -8.005112648010254
    4. 'card' → logprob: -9.755112648010254
    5. ' ' → logprob: -10.380112648010254
    6. '_card' → logprob: -11.130112648010254
    7. ' card' → logprob: -11.255112648010254
    8. 'ards' → logprob: -11.380112648010254
    9. '_' → logprob: -11.380112648010254
    10. '  ' → logprob: -12.755112648010254

Token 213: ' range' (ID: 3352)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.5790545344352722
    2. 'range' → logprob: -0.8290545344352722
    3. ' range' → logprob: -6.079054355621338
    4. ' cards' → logprob: -7.329054355621338
    5. 'card' → logprob: -8.954054832458496
    6. '(cards' → logprob: -11.204054832458496
    7. '.cards' → logprob: -13.079054832458496
    8. 'c' → logprob: -13.204054832458496
    9. 'cars' → logprob: -13.204054832458496
    10. 'Cards' → logprob: -13.579054832458496

Token 214: '(P' (ID: 8952)
  Prédit: '(P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(P' → logprob: -0.00018327576981391758
    2. 'P' → logprob: -8.75018310546875
    3. ' P' → logprob: -11.12518310546875
    4. '(len' → logprob: -12.25018310546875
    5. 'len' → logprob: -12.62518310546875
    6. '(' → logprob: -13.62518310546875
    7. ' (' → logprob: -14.62518310546875
    8. ' len' → logprob: -15.75018310546875
    9. '   ' → logprob: -16.37518310546875
    10. '	P' → logprob: -16.75018310546875

Token 215: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0019463682547211647
    2. '):
' → logprob: -6.251946449279785
    3. ' ):' → logprob: -11.501946449279785
    4. ':' → logprob: -12.626946449279785
    5. ')' → logprob: -12.751946449279785
    6. '):
' → logprob: -14.251946449279785
    7. ']:' → logprob: -14.626946449279785
    8. '):

' → logprob: -15.876946449279785
    9. '}:' → logprob: -16.00194549560547
    10. '   ' → logprob: -16.12694549560547

Token 216: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5089887976646423
    2. '           ' → logprob: -1.258988857269287
    3. '   ' → logprob: -2.258988857269287
    4. ' lines' → logprob: -5.008988857269287
    5. '
' → logprob: -6.008988857269287
    6. '	   ' → logprob: -7.758988857269287
    7. '    
' → logprob: -8.258988380432129
    8. ',' → logprob: -9.008988380432129
    9. ' card' → logprob: -9.383988380432129
    10. ' for' → logprob: -9.508988380432129

Token 217: ' cl' (ID: 567)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.8873278498649597
    2. ' card' → logprob: -1.1373279094696045
    3. '   ' → logprob: -2.0123279094696045
    4. 'cl' (adapté à ' cl') → logprob: -2.2623279094696045
    5. 'line' → logprob: -5.012327671051025
    6. 'lines' → logprob: -5.262327671051025
    7. 'for' → logprob: -5.762327671051025
    8. '       ' → logprob: -5.887327671051025
    9. ' for' → logprob: -6.012327671051025
    10. ' cl' → logprob: -6.137327671051025

Token 218: 'ines' (ID: 2028)
  Prédit: 'ines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ines' → logprob: -0.10014649480581284
    2. '_lines' → logprob: -2.475146532058716
    3. '_' → logprob: -5.475146293640137
    4. ' =' → logprob: -5.850146293640137
    5. '=' → logprob: -6.225146293640137
    6. '_card' → logprob: -7.475146293640137
    7. 'ine' → logprob: -7.725146293640137
    8. 'lines' → logprob: -7.975146293640137
    9. '   ' → logprob: -8.850146293640137
    10. '=[]' → logprob: -8.975146293640137

Token 219: ' =' (ID: 314)
  Prédit: '.append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.6601237058639526
    2. ' =' → logprob: -1.1601237058639526
    3. '=' → logprob: -1.7851237058639526
    4. '.' → logprob: -6.910123825073242
    5. '=[]' → logprob: -7.285123825073242
    6. 'append' → logprob: -8.785123825073242
    7. ' .' → logprob: -10.535123825073242
    8. '.extend' → logprob: -10.660123825073242
    9. '.=' → logprob: -10.910123825073242
    10. ')' → logprob: -11.035123825073242

Token 220: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0038738276343792677
    2. '[' → logprob: -6.253873825073242
    3. '[]
' → logprob: -6.253873825073242
    4. ' []' → logprob: -11.003873825073242
    5. '[]

' → logprob: -13.378873825073242
    6. '[[' → logprob: -14.878873825073242
    7. '[
' → logprob: -14.878873825073242
    8. '[]}' → logprob: -15.003873825073242
    9. '[][]' → logprob: -15.253873825073242
    10. '[list' → logprob: -15.753873825073242

Token 221: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0412730798125267
    2. ' for' → logprob: -3.2912731170654297
    3. 'for' → logprob: -5.79127311706543
    4. '               ' → logprob: -9.66627311706543
    5. '       ' → logprob: -10.29127311706543
    6. '   ' → logprob: -10.79127311706543
    7. '<|end|>' → logprob: -11.41627311706543
    8. ',' → logprob: -12.04127311706543
    9. ' ' → logprob: -12.41627311706543
    10. '	for' → logprob: -12.54127311706543

Token 222: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08511737734079361
    2. ' for' → logprob: -2.5851173400878906
    3. '           ' → logprob: -5.085117340087891
    4. '   ' → logprob: -11.83511734008789
    5. 'card' → logprob: -11.96011734008789
    6. '       ' → logprob: -13.21011734008789
    7. ' ' → logprob: -13.46011734008789
    8. ' lines' → logprob: -14.21011734008789
    9. 'lines' → logprob: -14.21011734008789
    10. '	for' → logprob: -14.83511734008789

Token 223: ' ln' (ID: 68859)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.008840166963636875
    2. 'l' → logprob: -5.258840084075928
    3. ' line' → logprob: -5.633840084075928
    4. 'L' → logprob: -11.758840560913086
    5. ' l' → logprob: -11.758840560913086
    6. 'ln' → logprob: -12.633840560913086
    7. 'lines' → logprob: -13.258840560913086
    8. 'lst' → logprob: -13.508840560913086
    9. 'lin' → logprob: -13.883840560913086
    10. '(line' → logprob: -14.383840560913086

Token 224: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6933143138885498
    2. ' in' → logprob: -0.6933143138885498
    3. 'ine' → logprob: -9.568314552307129
    4. 'ines' → logprob: -9.943314552307129
    5. ' ' → logprob: -10.818314552307129
    6. 'n' → logprob: -10.943314552307129
    7. '   ' → logprob: -12.943314552307129
    8. 'o' → logprob: -13.193314552307129
    9. 'e' → logprob: -13.443314552307129
    10. 'i' → logprob: -13.693314552307129

Token 225: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.0011901067337021232
    2. ' lines' → logprob: -6.751190185546875
    3. 'range' → logprob: -10.876190185546875
    4. 'line' → logprob: -15.376190185546875
    5. '(lines' → logprob: -15.376190185546875
    6. ' range' → logprob: -15.626190185546875
    7. '	lines' → logprob: -15.751190185546875
    8. '   ' → logprob: -16.001190185546875
    9. ' ' → logprob: -16.251190185546875
    10. 'ranges' → logprob: -18.126190185546875

Token 226: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.048823993653059006
    2. ':
' → logprob: -3.0488240718841553
    3. '):' → logprob: -8.923824310302734
    4. '):
' → logprob: -10.423824310302734
    5. '               ' → logprob: -10.548824310302734
    6. ')' → logprob: -11.298824310302734
    7. '=' → logprob: -11.923824310302734
    8. ' :' → logprob: -12.048824310302734
    9. ':
' → logprob: -12.423824310302734
    10. '           ' → logprob: -12.673824310302734

Token 227: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00010044389637187123
    2. '           ' → logprob: -10.625100135803223
    3. '[' → logprob: -11.125100135803223
    4. ',' → logprob: -11.250100135803223
    5. ':' → logprob: -11.875100135803223
    6. 's' → logprob: -12.375100135803223
    7. '	           ' → logprob: -12.625100135803223
    8. 'indices' → logprob: -12.625100135803223
    9. ':
' → logprob: -12.750100135803223
    10. 'n' → logprob: -12.875100135803223

Token 228: ' cl' (ID: 567)
  Prédit: ' cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' cl' → logprob: -0.12594451010227203
    2. 'cl' (adapté à ' cl') → logprob: -2.3759446144104004
    3. ' line' → logprob: -4.2509446144104
    4. '               ' → logprob: -5.0009446144104
    5. 'line' → logprob: -6.0009446144104
    6. 'nums' → logprob: -7.7509446144104
    7. '                   ' → logprob: -8.125944137573242
    8. ' nums' → logprob: -8.125944137573242
    9. ' numbers' → logprob: -8.625944137573242
    10. ' values' → logprob: -8.750944137573242

Token 229: 'ines' (ID: 2028)
  Prédit: 'ines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ines' → logprob: -0.0013080945936962962
    2. '   ' → logprob: -7.251307964324951
    3. 'lines' → logprob: -8.37630844116211
    4. 'ine' → logprob: -9.25130844116211
    5. ' =' → logprob: -9.62630844116211
    6. '=' → logprob: -9.87630844116211
    7. '.append' → logprob: -10.00130844116211
    8. '```' → logprob: -10.62630844116211
    9. '_' → logprob: -11.00130844116211
    10. 'imes' → logprob: -11.75130844116211

Token 230: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0017181389266625047
    2. '.' → logprob: -7.251718044281006
    3. 'append' → logprob: -7.376718044281006
    4. '=' → logprob: -8.001718521118164
    5. ' =' → logprob: -10.376718521118164
    6. ' .' → logprob: -11.501718521118164
    7. '.extend' → logprob: -12.876718521118164
    8. '_append' → logprob: -13.876718521118164
    9. ' append' → logprob: -14.626718521118164
    10. '].' → logprob: -14.876718521118164

Token 231: '(set' (ID: 25904)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.002851232886314392
    2. '[' → logprob: -6.0028510093688965
    3. '(' → logprob: -8.502851486206055
    4. '(tuple' → logprob: -9.502851486206055
    5. ' [' → logprob: -10.127851486206055
    6. ' ([' → logprob: -10.752851486206055
    7. '(set' → logprob: -11.002851486206055
    8. '([(' → logprob: -11.877851486206055
    9. '   ' → logprob: -12.877851486206055
    10. '(
' → logprob: -13.127851486206055

Token 232: '(cards' (ID: 161529)
  Prédit: '(cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cards' → logprob: -0.00379532715305686
    2. '([' → logprob: -5.878795146942139
    3. '(' → logprob: -7.128795146942139
    4. '(card' → logprob: -9.253795623779297
    5. 'cards' → logprob: -9.753795623779297
    6. '(sum' → logprob: -11.128795623779297
    7. '((' → logprob: -11.753795623779297
    8. '(
' → logprob: -12.503795623779297
    9. '())' → logprob: -13.128795623779297
    10. '(c' → logprob: -13.503795623779297

Token 233: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.318681188422488e-05
    2. 'c' → logprob: -12.12501335144043
    3. ')[' → logprob: -13.37501335144043
    4. '][' → logprob: -13.50001335144043
    5. '[
' → logprob: -13.87501335144043
    6. ' [' → logprob: -14.00001335144043
    7. ')c' → logprob: -14.25001335144043
    8. '           ' → logprob: -14.50001335144043
    9. '[' → logprob: -14.62501335144043
    10. ')' → logprob: -15.00001335144043

Token 234: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.08976982533931732
    2. '[i' → logprob: -2.9647698402404785
    3. '[' → logprob: -3.7147698402404785
    4. '[c' → logprob: -5.4647698402404785
    5. '[l' → logprob: -6.3397698402404785
    6. '[row' → logprob: -7.2147698402404785
    7. '[x' → logprob: -8.08976936340332
    8. ']' → logprob: -8.21476936340332
    9. '[r' → logprob: -8.21476936340332
    10. ' ][' → logprob: -8.33976936340332

Token 235: 'i' (ID: 72)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3247179090976715
    2. 'i' → logprob: -1.8247178792953491
    3. 'pos' → logprob: -2.1997179985046387
    4. 'r' → logprob: -5.699717998504639
    5. 'p' → logprob: -6.574717998504639
    6. 'ln' → logprob: -9.07471752166748
    7. 'xy' → logprob: -9.57471752166748
    8. 'idx' → logprob: -9.82471752166748
    9. 'y' → logprob: -10.32471752166748
    10. 'coord' → logprob: -10.44971752166748

Token 236: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07041851431131363
    2. '][' → logprob: -2.9454185962677
    3. '0' → logprob: -4.320418357849121
    4. '[j' → logprob: -6.695418357849121
    5. ']' → logprob: -8.195418357849121
    6. '1' → logprob: -9.070418357849121
    7. 'j' → logprob: -9.445418357849121
    8. 'x' → logprob: -9.820418357849121
    9. ' ][' → logprob: -10.195418357849121
    10. '[i' → logprob: -10.320418357849121

Token 237: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -3.023293538717553e-05
    2. ' j' → logprob: -10.750030517578125
    3. '1' → logprob: -11.875030517578125
    4. '
' → logprob: -14.750030517578125
    5. 'k' → logprob: -15.250030517578125
    6. ']' → logprob: -15.375030517578125
    7. 'i' → logprob: -15.625030517578125
    8. 'x' → logprob: -16.500030517578125
    9. 'jj' → logprob: -16.500030517578125
    10. '0' → logprob: -16.625030517578125

Token 238: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0007106438861228526
    2. ' ]' → logprob: -7.625710487365723
    3. 'for' → logprob: -9.125710487365723
    4. ' for' → logprob: -9.375710487365723
    5. ')' → logprob: -11.250710487365723
    6. '])' → logprob: -11.625710487365723
    7. ']))' → logprob: -12.250710487365723
    8. '}' → logprob: -14.125710487365723
    9. '   ' → logprob: -14.500710487365723
    10. ' ' → logprob: -15.125710487365723

Token 239: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2025015950202942
    2. 'for' → logprob: -1.7025015354156494
    3. ')' → logprob: -7.2025017738342285
    4. ']' → logprob: -8.32750129699707
    5. ' ' → logprob: -9.95250129699707
    6. ' )' → logprob: -10.70250129699707
    7. '	for' → logprob: -11.45250129699707
    8. '])' → logprob: -11.45250129699707
    9. '   ' → logprob: -12.57750129699707
    10. ' ]' → logprob: -13.32750129699707

Token 240: ' i' (ID: 575)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.335255891084671
    2. 'i' → logprob: -1.3352558612823486
    3. ' (' → logprob: -3.9602558612823486
    4. ' i' → logprob: -6.085256099700928
    5. '(' → logprob: -7.960256099700928
    6. '[i' → logprob: -11.46025562286377
    7. ' ' → logprob: -11.71025562286377
    8. '(
' → logprob: -12.08525562286377
    9. '	i' → logprob: -12.21025562286377
    10. ')' → logprob: -12.33525562286377

Token 241: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.03374447673559189
    2. ',' → logprob: -3.4087445735931396
    3. ' ,' → logprob: -9.408744812011719
    4. ' in' → logprob: -11.408744812011719
    5. 'j' → logprob: -13.408744812011719
    6. ',
' → logprob: -14.033744812011719
    7. ' j' → logprob: -14.283744812011719
    8. 'in' → logprob: -14.283744812011719
    9. ' ' → logprob: -14.658744812011719
    10. '<|end|>' → logprob: -15.283744812011719

Token 242: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1602320373058319
    2. 'in' → logprob: -1.9102320671081543
    3. '<|end|>' → logprob: -12.160231590270996
    4. ' ' → logprob: -13.660231590270996
    5. ')' → logprob: -14.410231590270996
    6. '
' → logprob: -14.910231590270996
    7. 'n' → logprob: -15.785231590270996
    8. '<|end|>' → logprob: -16.160232543945312
    9. 'ln' → logprob: -16.535232543945312
    10. '	in' → logprob: -16.785232543945312

Token 243: ' ln' (ID: 68859)
  Prédit: 'ln'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ln' → logprob: -1.9027791495318525e-05
    2. ' ln' → logprob: -10.875019073486328
    3. '
' → logprob: -18.750019073486328
    4. '_ln' → logprob: -19.375019073486328
    5. '   ' → logprob: -19.750019073486328
    6. 'len' → logprob: -20.125019073486328
    7. '-ln' → logprob: -20.375019073486328
    8. 'log' → logprob: -20.375019073486328
    9. 'Ln' → logprob: -20.500019073486328
    10. '[' → logprob: -20.625019073486328

Token 244: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -6.265633419388905e-05
    2. ')' → logprob: -10.375062942504883
    3. '))
' → logprob: -10.625062942504883
    4. ' ))' → logprob: -12.125062942504883
    5. ')))' → logprob: -13.500062942504883
    6. '               ' → logprob: -16.125062942504883
    7. '))
' → logprob: -16.500062942504883
    8. '           ' → logprob: -16.625062942504883
    9. '),' → logprob: -17.000062942504883
    10. '()))' → logprob: -17.375062942504883

Token 245: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0005495758377946913
    2. '       ' → logprob: -8.00054931640625
    3. '		' → logprob: -9.62554931640625
    4. ')' → logprob: -9.87554931640625
    5. '               ' → logprob: -10.25054931640625
    6. '<|end|>' → logprob: -10.87554931640625
    7. '          ' → logprob: -11.75054931640625
    8. '	       ' → logprob: -12.25054931640625
    9. '```' → logprob: -12.62554931640625
    10. '         ' → logprob: -12.75054931640625

Token 246: ' card' (ID: 4766)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018649214878678322
    2. '<|end|>' → logprob: -4.518649101257324
    3. 'card' (adapté à ' card') → logprob: -5.143649101257324
    4. '           ' → logprob: -7.268649101257324
    5. '   ' → logprob: -7.768649101257324
    6. '<|end|>' → logprob: -8.643649101257324
    7. ')' → logprob: -8.893649101257324
    8. ' card' → logprob: -9.893649101257324
    9. '	card' → logprob: -10.268649101257324
    10. '```' → logprob: -10.268649101257324

Token 247: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -5.7292167184641585e-05
    2. 'lines' → logprob: -10.000057220458984
    3. 's' → logprob: -11.500057220458984
    4. 'Lines' → logprob: -14.750057220458984
    5. '_LINES' → logprob: -14.875057220458984
    6. '_' → logprob: -15.125057220458984
    7. '=' → logprob: -16.250057220458984
    8. '_line' → logprob: -16.250057220458984
    9. ' lines' → logprob: -16.375057220458984
    10. '   ' → logprob: -16.750057220458984

Token 248: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007220837287604809
    2. '.' → logprob: -7.2507219314575195
    3. '.extend' → logprob: -11.87572193145752
    4. '.setdefault' → logprob: -13.00072193145752
    5. '.app' → logprob: -13.87572193145752
    6. ' .' → logprob: -14.62572193145752
    7. '.Append' → logprob: -14.75072193145752
    8. '.add' → logprob: -15.50072193145752
    9. '.push' → logprob: -15.50072193145752
    10. 'append' → logprob: -15.50072193145752

Token 249: '(cl' (ID: 16811)
  Prédit: '(cl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cl' → logprob: -7.3458322731312364e-06
    2. ' (' → logprob: -12.125007629394531
    3. '(' → logprob: -13.875007629394531
    4. 'cl' → logprob: -14.125007629394531
    5. '(c' → logprob: -16.25000762939453
    6. '	cl' → logprob: -17.00000762939453
    7. ' cl' → logprob: -18.75000762939453
    8. '((' → logprob: -19.00000762939453
    9. '(
' → logprob: -19.87500762939453
    10. '/cl' → logprob: -20.00000762939453

Token 250: 'ines' (ID: 2028)
  Prédit: 'ines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ines' → logprob: -0.0005861566751264036
    2. '[' → logprob: -8.12558650970459
    3. 'lines' → logprob: -9.50058650970459
    4. '.append' → logprob: -10.37558650970459
    5. 'nes' → logprob: -10.37558650970459
    6. '[c' → logprob: -10.62558650970459
    7. 'p' → logprob: -10.87558650970459
    8. 'udes' → logprob: -11.12558650970459
    9. 'es' → logprob: -11.25058650970459
    10. '   ' → logprob: -11.37558650970459

Token 251: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00010080150241265073
    2. ')
' → logprob: -9.250101089477539
    3. '       ' → logprob: -12.875101089477539
    4. ' )' → logprob: -14.000101089477539
    5. '))' → logprob: -14.625101089477539
    6. '   ' → logprob: -15.250101089477539
    7. ')return' → logprob: -16.25010108947754
    8. '<|end|>' → logprob: -16.87510108947754
    9. ']' → logprob: -17.12510108947754
    10. ')
' → logprob: -17.25010108947754

Token 252: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0015917499549686909
    2. '<|end|>' → logprob: -7.251591682434082
    3. '   ' → logprob: -7.751591682434082
    4. '```' → logprob: -9.251591682434082
    5. '        
' → logprob: -9.501591682434082
    6. '
' → logprob: -9.501591682434082
    7. '#' → logprob: -9.626591682434082
    8. 'for' → logprob: -10.501591682434082
    9. '           ' → logprob: -11.126591682434082
    10. ' for' → logprob: -11.126591682434082

Token 253: ' #' (ID: 1069)
  Prédit: 'draw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'draw' → logprob: -1.2730473279953003
    2. 'marked' → logprob: -1.8980473279953003
    3. 'marks' → logprob: -2.02304744720459
    4. '       ' → logprob: -2.39804744720459
    5. 'nums' → logprob: -2.39804744720459
    6. 'n' → logprob: -2.89804744720459
    7. 'numbers' → logprob: -3.14804744720459
    8. 'called' → logprob: -3.64804744720459
    9. 'for' → logprob: -3.89804744720459
    10. 'mark' → logprob: -3.89804744720459

Token 254: ' For' (ID: 2214)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'marked' → logprob: -0.7543837428092957
    2. 'marks' → logprob: -1.8793838024139404
    3. 'for' → logprob: -2.2543838024139404
    4. 'draw' → logprob: -3.1293838024139404
    5. 'b' → logprob: -3.3793838024139404
    6. '#' → logprob: -3.5043838024139404
    7. 'called' → logprob: -3.6293838024139404
    8. 'mark' → logprob: -3.6293838024139404
    9. 'def' → logprob: -4.004383563995361
    10. 'results' → logprob: -4.879383563995361

Token 255: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.7034084796905518
    2. ' i' → logprob: -1.8284084796905518
    3. ' line' → logprob: -1.9534084796905518
    4. ' p' → logprob: -3.0784084796905518
    5. 'p' → logprob: -3.3284084796905518
    6. ' card' → logprob: -3.3284084796905518
    7. 'line' → logprob: -3.4534084796905518
    8. ' m' → logprob: -3.5784084796905518
    9. 'ln' → logprob: -3.7034084796905518
    10. ' ln' → logprob: -3.7034084796905518

Token 256: ' card' (ID: 4766)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.9373641014099121
    2. 'c' → logprob: -1.187364101409912
    3. ' card' → logprob: -2.437364101409912
    4. 'p' → logprob: -2.437364101409912
    5. 'line' → logprob: -3.437364101409912
    6. ' c' → logprob: -3.687364101409912
    7. 'number' → logprob: -3.937364101409912
    8. ' line' → logprob: -4.437364101409912
    9. 'i' → logprob: -5.062364101409912
    10. ' p' → logprob: -5.312364101409912

Token 257: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.33922842144966125
    2. ' c' → logprob: -2.339228391647339
    3. '       ' → logprob: -2.339228391647339
    4. 'c' → logprob: -2.464228391647339
    5. '#' → logprob: -6.214228630065918
    6. 'for' → logprob: -6.339228630065918
    7. ',c' → logprob: -6.589228630065918
    8. ' for' → logprob: -6.964228630065918
    9. ' ,' → logprob: -7.089228630065918
    10. ' and' → logprob: -7.589228630065918

Token 258: ' find' (ID: 1646)
  Prédit: 'marked'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'marked' → logprob: -0.7147955298423767
    2. 'for' → logprob: -1.3397955894470215
    3. 'marks' → logprob: -3.0897955894470215
    4. 'b' → logprob: -3.8397955894470215
    5. '#' → logprob: -3.8397955894470215
    6. 'found' → logprob: -3.9647955894470215
    7. 'won' → logprob: -4.3397955894470215
    8. 'done' → logprob: -4.5897955894470215
    9. 'completed' → logprob: -4.7147955894470215
    10. 'line' → logprob: -4.7147955894470215

Token 259: ' minimal' (ID: 19957)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7158157825469971
    2. ' the' → logprob: -1.465815782546997
    3. 'max' → logprob: -2.715815782546997
    4. 'winning' → logprob: -2.715815782546997
    5. ' bingo' → logprob: -2.965815782546997
    6. ' winning' → logprob: -4.465815544128418
    7. 'all' → logprob: -4.465815544128418
    8. ' max' → logprob: -4.590815544128418
    9. '   ' → logprob: -5.090815544128418
    10. ' lines' → logprob: -5.340815544128418

Token 260: ' numbers' (ID: 8663)
  Prédit: ' winning'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' winning' → logprob: -2.019202947616577
    2. ' lines' → logprob: -2.144202947616577
    3. 'winning' → logprob: -2.144202947616577
    4. 'number' → logprob: -2.394202947616577
    5. ' bingo' → logprob: -2.769202947616577
    6. ' number' → logprob: -2.894202947616577
    7. 'draw' → logprob: -3.144202947616577
    8. 'count' → logprob: -3.394202947616577
    9. 'card' → logprob: -3.644202947616577
    10. '_lines' → logprob: -3.644202947616577

Token 261: ' needed' (ID: 6118)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5292279124259949
    2. '       ' → logprob: -2.7792279720306396
    3. 'for' → logprob: -2.9042279720306396
    4. '_to' → logprob: -3.2792279720306396
    5. '_needed' → logprob: -3.2792279720306396
    6. '   ' → logprob: -3.5292279720306396
    7. ' to' → logprob: -3.6542279720306396
    8. '=' → logprob: -3.7792279720306396
    9. 'needed' → logprob: -4.2792277336120605
    10. ' for' → logprob: -4.4042277336120605

Token 262: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12416879832744598
    2. ' to' → logprob: -2.499168872833252
    3. 'to' → logprob: -3.999168872833252
    4. '   ' → logprob: -5.124168872833252
    5. 'for' → logprob: -5.499168872833252
    6. ' for' → logprob: -5.499168872833252
    7. 'marked' → logprob: -8.124168395996094
    8. ',' → logprob: -8.499168395996094
    9. 'marks' → logprob: -8.499168395996094
    10. ' =' → logprob: -8.624168395996094

Token 263: ' a' (ID: 261)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6464885473251343
    2. 'a' → logprob: -1.5214885473251343
    3. ' bingo' → logprob: -2.021488666534424
    4. ' a' → logprob: -2.896488666534424
    5. 'winning' → logprob: -3.896488666534424
    6. 'bing' → logprob: -4.521488666534424
    7. ' any' → logprob: -5.146488666534424
    8. ' each' → logprob: -5.271488666534424
    9. ' lines' → logprob: -5.396488666534424
    10. ' winning' → logprob: -5.521488666534424

Token 264: ' line' (ID: 2543)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.017210181802511215
    2. 'win' → logprob: -4.392210006713867
    3. 'winning' → logprob: -6.642210006713867
    4. 'll' → logprob: -6.892210006713867
    5. ' bingo' → logprob: -7.142210006713867
    6. 'bing' → logprob: -8.142210006713867
    7. 'line' → logprob: -8.517210006713867
    8. 'card' → logprob: -8.642210006713867
    9. 'B' → logprob: -8.642210006713867
    10. 'complete' → logprob: -9.642210006713867

Token 265: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0525662899017334
    2. 'needed' → logprob: -3.9275662899017334
    3. 'min' → logprob: -4.5525665283203125
    4. ' for' → logprob: -5.3025665283203125
    5. 'for' → logprob: -5.6775665283203125
    6. ' needed' → logprob: -5.9275665283203125
    7. ' to' → logprob: -6.3025665283203125
    8. ' min' → logprob: -6.4275665283203125
    9. 'need' → logprob: -7.1775665283203125
    10. ' minimal' → logprob: -7.5525665283203125

Token 266: ' bingo' (ID: 65141)
  Prédit: 'be'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'be' → logprob: -0.3964923620223999
    2. 'win' → logprob: -1.8964923620224
    3. 'complete' → logprob: -2.3964924812316895
    4. ' be' → logprob: -2.7714924812316895
    5. 'b' → logprob: -5.0214924812316895
    6. ' win' → logprob: -5.1464924812316895
    7. ' complete' → logprob: -5.8964924812316895
    8. 'gu' → logprob: -6.8964924812316895
    9. 'have' → logprob: -6.8964924812316895
    10. 'finish' → logprob: -7.1464924812316895

Token 267: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6548523902893066
    2. ' for' → logprob: -2.0298523902893066
    3. 'min' → logprob: -2.2798523902893066
    4. 'for' → logprob: -2.6548523902893066
    5. 'needed' → logprob: -3.4048523902893066
    6. '
' → logprob: -3.5298523902893066
    7. ' bingo' → logprob: -3.6548523902893066
    8. ' min' → logprob: -3.9048523902893066
    9. 'b' → logprob: -4.154852390289307
    10. ' minimal' → logprob: -5.029852390289307

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005619804374873638
    2. ' for' → logprob: -5.630620002746582
    3. '
' → logprob: -7.005620002746582
    4. 'for' → logprob: -7.505620002746582
    5. '#' → logprob: -9.880620002746582
    6. ',' → logprob: -9.880620002746582
    7. 'b' → logprob: -10.005620002746582
    8. '        
' → logprob: -10.130620002746582
    9. 'def' → logprob: -10.130620002746582
    10. ' marks' → logprob: -10.505620002746582

Token 269: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8398353457450867
    2. 'min' → logprob: -1.7148354053497314
    3. 'needed' → logprob: -2.2148354053497314
    4. 'b' → logprob: -2.4648354053497314
    5. 'results' → logprob: -2.8398354053497314
    6. 'need' → logprob: -3.0898354053497314
    7. 'res' → logprob: -3.2148354053497314
    8. 'result' → logprob: -4.589835166931152
    9. 'needs' → logprob: -5.214835166931152
    10. 'ans' → logprob: -5.464835166931152

Token 270: ' But' (ID: 3072)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6892755031585693
    2. 'b' → logprob: -1.6892755031585693
    3. 'min' → logprob: -3.0642755031585693
    4. ' for' → logprob: -3.1892755031585693
    5. 'results' → logprob: -3.1892755031585693
    6. 'res' → logprob: -3.5642755031585693
    7. 'needed' → logprob: -3.5642755031585693
    8. 'result' → logprob: -3.8142755031585693
    9. 'need' → logprob: -4.064275741577148
    10. 'marked' → logprob: -4.564275741577148

Token 271: ' we' (ID: 581)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7838742733001709
    2. 'for' → logprob: -1.408874273300171
    3. '       ' → logprob: -3.033874273300171
    4. ' continue' → logprob: -3.033874273300171
    5. ' the' → logprob: -3.158874273300171
    6. '#' → logprob: -3.658874273300171
    7. 'continue' → logprob: -3.783874273300171
    8. ' not' → logprob: -4.28387451171875
    9. ' we' → logprob: -4.65887451171875
    10. 'the' → logprob: -4.78387451171875

Token 272: ' want' (ID: 1682)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.46400415897369385
    2. 'need' → logprob: -1.2140041589736938
    3. ' haven't' → logprob: -4.089004039764404
    4. 'have' → logprob: -4.964004039764404
    5. ' don't' → logprob: -4.964004039764404
    6. ' have' → logprob: -5.214004039764404
    7. 'continue' → logprob: -5.214004039764404
    8. 'don't' → logprob: -5.214004039764404
    9. '       ' → logprob: -5.964004039764404
    10. ' want' → logprob: -6.339004039764404

Token 273: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.04693662375211716
    2. ' the' → logprob: -4.171936511993408
    3. 'to' → logprob: -4.171936511993408
    4. ' all' → logprob: -5.171936511993408
    5. ' minimal' → logprob: -5.671936511993408
    6. 'the' → logprob: -6.421936511993408
    7. 'all' → logprob: -6.546936511993408
    8. ' a' → logprob: -6.921936511993408
    9. '   ' → logprob: -7.546936511993408
    10. 'minimal' → logprob: -8.171936988830566

Token 274: ' order' (ID: 2569)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.8279814720153809
    2. 'find' → logprob: -1.2029814720153809
    3. 'continue' → logprob: -3.077981472015381
    4. 'min' → logprob: -3.202981472015381
    5. ' minimize' → logprob: -4.077981472015381
    6. 'count' → logprob: -4.452981472015381
    7. ' cover' → logprob: -4.452981472015381
    8. 'maximize' → logprob: -4.452981472015381
    9. 'check' → logprob: -4.577981472015381
    10. ' continue' → logprob: -4.702981472015381

Token 275: ' the' (ID: 290)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cards' → logprob: -1.5628210306167603
    2. ' the' → logprob: -1.6878210306167603
    3. 'the' → logprob: -1.8128210306167603
    4. 'card' → logprob: -2.4378209114074707
    5. ' lines' → logprob: -2.8128209114074707
    6. 'numbers' → logprob: -3.0628209114074707
    7. ' cards' → logprob: -3.1878209114074707
    8. 'for' → logprob: -3.8128209114074707
    9. 'tokens' → logprob: -3.9378209114074707
    10. 'lines' → logprob: -4.062820911407471

Token 276: ' bingo' (ID: 65141)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.16616925597190857
    2. ' cards' → logprob: -2.7911691665649414
    3. 'calls' → logprob: -3.5411691665649414
    4. 'lines' → logprob: -4.041169166564941
    5. 'numbers' → logprob: -4.791169166564941
    6. ' lines' → logprob: -4.916169166564941
    7. ' calls' → logprob: -5.416169166564941
    8. 'output' → logprob: -5.666169166564941
    9. 'draw' → logprob: -5.666169166564941
    10. ' output' → logprob: -5.791169166564941

Token 277: ' finishing' (ID: 34631)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lines' → logprob: -1.3051862716674805
    2. '_numbers' → logprob: -1.9301862716674805
    3. 'numbers' → logprob: -1.9301862716674805
    4. ' lines' → logprob: -2.0551862716674805
    5. ' numbers' → logprob: -2.6801862716674805
    6. 'lines' → logprob: -2.8051862716674805
    7. '_cards' → logprob: -3.4301862716674805
    8. 'cards' → logprob: -3.9301862716674805
    9. '_sets' → logprob: -4.3051862716674805
    10. ' cards' → logprob: -4.4301862716674805

Token 278: ' times' (ID: 4238)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.7401557564735413
    2. 'times' → logprob: -2.1151556968688965
    3. 'cards' → logprob: -2.4901556968688965
    4. 'lines' → logprob: -2.8651556968688965
    5. ' cards' → logprob: -2.9901556968688965
    6. ' by' → logprob: -3.1151556968688965
    7. ' times' → logprob: -3.3651556968688965
    8. 'numbers' → logprob: -3.3651556968688965
    9. ' numbers' → logprob: -4.2401556968688965
    10. ' here' → logprob: -4.8651556968688965

Token 279: ':
' (ID: 734)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7521881461143494
    2. '       ' → logprob: -0.7521881461143494
    3. '<|end|>' → logprob: -3.252188205718994
    4. '        
' → logprob: -5.002188205718994
    5. '#' → logprob: -5.752188205718994
    6. 'times' → logprob: -6.627188205718994
    7. '<|end|>' → logprob: -6.627188205718994
    8. ',' → logprob: -7.377188205718994
    9. 'tokens' → logprob: -8.002187728881836
    10. '
' → logprob: -8.002187728881836

Token 280: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7488908171653748
    2. 'b' → logprob: -2.3738908767700195
    3. ' marked' → logprob: -3.2488908767700195
    4. 'marked' → logprob: -3.2488908767700195
    5. 'draw' → logprob: -3.4988908767700195
    6. ' numbers' → logprob: -3.4988908767700195
    7. '#' → logprob: -3.6238908767700195
    8. ' b' → logprob: -3.6238908767700195
    9. 'need' → logprob: -3.9988908767700195
    10. ' called' → logprob: -4.2488908767700195

Token 281: ' #' (ID: 1069)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.193563461303711
    2. 'marked' → logprob: -2.193563461303711
    3. '#' (adapté à ' #') → logprob: -2.318563461303711
    4. 'numbers' → logprob: -2.568563461303711
    5. 'need' → logprob: -2.693563461303711
    6. 'for' → logprob: -2.693563461303711
    7. '       ' → logprob: -2.818563461303711
    8. 'nums' → logprob: -3.318563461303711
    9. 'marks' → logprob: -3.943563461303711
    10. 'draw' → logprob: -3.943563461303711

Token 282: ' The' (ID: 623)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.7887492179870605
    2. 'for' → logprob: -1.9137492179870605
    3. 'marked' → logprob: -1.9137492179870605
    4. '#' → logprob: -2.9137492179870605
    5. 'need' → logprob: -2.9137492179870605
    6. 'numbers' → logprob: -3.0387492179870605
    7. 'nums' → logprob: -3.2887492179870605
    8. 'draw' → logprob: -3.2887492179870605
    9. 'called' → logprob: -3.2887492179870605
    10. 'marks' → logprob: -3.6637492179870605

Token 283: ' gam' (ID: 6579)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -1.5413261651992798
    2. 'numbers' → logprob: -1.9163261651992798
    3. 'draw' → logprob: -2.2913260459899902
    4. 'called' → logprob: -2.4163260459899902
    5. '#' → logprob: -2.6663260459899902
    6. 'rest' → logprob: -3.5413260459899902
    7. ' numbers' → logprob: -3.5413260459899902
    8. 'next' → logprob: -3.7913260459899902
    9. ' rest' → logprob: -3.7913260459899902
    10. 'for' → logprob: -3.9163260459899902

Token 284: 'em' (ID: 347)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0026648349594324827
    2. 'es' → logprob: -6.252665042877197
    3. 'ers' → logprob: -8.377664566040039
    4. 'eline' → logprob: -8.627664566040039
    5. 'er' → logprob: -9.627664566040039
    6. 'emode' → logprob: -10.627664566040039
    7. 'edata' → logprob: -10.752664566040039
    8. 'blers' → logprob: -10.752664566040039
    9. 'elines' → logprob: -10.877664566040039
    10. 'estate' → logprob: -10.877664566040039

Token 285: 'aster' (ID: 3588)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.001038287067785859
    2. 'es' → logprob: -7.251038074493408
    3. 'play' → logprob: -9.001038551330566
    4. '   ' → logprob: -9.626038551330566
    5. '       ' → logprob: -9.626038551330566
    6. 'eline' → logprob: -11.126038551330566
    7. '=' → logprob: -12.001038551330566
    8. '
' → logprob: -12.126038551330566
    9. '```' → logprob: -12.126038551330566
    10. ' ' → logprob: -12.501038551330566

Token 286: ' can' (ID: 665)
  Prédit: ' wants'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' wants' → logprob: -1.0235676765441895
    2. ' marks' → logprob: -2.0235676765441895
    3. ' will' → logprob: -2.2735676765441895
    4. ' needs' → logprob: -2.6485676765441895
    5. ' calls' → logprob: -3.2735676765441895
    6. ' must' → logprob: -3.5235676765441895
    7. 'needs' → logprob: -3.7735676765441895
    8. 'marks' → logprob: -3.8985676765441895
    9. ' has' → logprob: -4.0235676765441895
    10. ' is' → logprob: -4.1485676765441895

Token 287: ' choose' (ID: 5655)
  Prédit: ' mark'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' mark' → logprob: -1.4763526916503906
    2. ' choose' → logprob: -1.4763526916503906
    3. ' call' → logprob: -2.3513526916503906
    4. 'choose' → logprob: -2.8513526916503906
    5. ' select' → logprob: -2.9763526916503906
    6. 'mark' → logprob: -3.1013526916503906
    7. '   ' → logprob: -3.2263526916503906
    8. ' pick' → logprob: -3.2263526916503906
    9. ' give' → logprob: -3.7263526916503906
    10. ' only' → logprob: -3.7263526916503906

Token 288: ' order' (ID: 2569)
  Prédit: ' which'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' which' → logprob: -1.111367106437683
    2. ' any' → logprob: -1.361367106437683
    3. ' the' → logprob: -1.611367106437683
    4. 'any' → logprob: -2.2363672256469727
    5. 'which' → logprob: -3.1113672256469727
    6. 'the' → logprob: -3.3613672256469727
    7. ' numbers' → logprob: -4.486367225646973
    8. 'numbers' → logprob: -4.986367225646973
    9. ' when' → logprob: -6.236367225646973
    10. ' a' → logprob: -6.486367225646973

Token 289: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2926833927631378
    2. '<|end|>' → logprob: -1.4176833629608154
    3. '<|end|>' → logprob: -5.0426836013793945
    4. ',' → logprob: -6.0426836013793945
    5. '.' → logprob: -7.1676836013793945
    6. ' to' → logprob: -7.4176836013793945
    7. '        
' → logprob: -7.9176836013793945
    8. '...' → logprob: -8.542683601379395
    9. ' of' → logprob: -8.792683601379395
    10. ' and' → logprob: -9.542683601379395

Token 290: ' calling' (ID: 14471)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'called' → logprob: -0.553507924079895
    2. 'numbers' → logprob: -1.553507924079895
    3. 'draw' → logprob: -2.6785078048706055
    4. 'calls' → logprob: -2.8035078048706055
    5. 'calling' → logprob: -3.8035078048706055
    6. 'the' → logprob: -4.0535078048706055
    7. 'b' → logprob: -4.4285078048706055
    8. 'number' → logprob: -4.8035078048706055
    9. 'drawing' → logprob: -5.3035078048706055
    10. 'cards' → logprob: -5.5535078048706055

Token 291: ' numbers' (ID: 8663)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009597881697118282
    2. '<|end|>' → logprob: -5.6345977783203125
    3. '        
' → logprob: -6.0095977783203125
    4. '#' → logprob: -6.8845977783203125
    5. '
' → logprob: -7.3845977783203125
    6. ',' → logprob: -7.6345977783203125
    7. '.' → logprob: -8.134597778320312
    8. '<|end|>' → logprob: -9.009597778320312
    9. 'tokens' → logprob: -9.134597778320312
    10. 'numbers' → logprob: -9.384597778320312

Token 292: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 293: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4793897867202759
    2. '#' → logprob: -0.9793897867202759
    3. ' so' → logprob: -6.229389667510986
    4. ' but' → logprob: -6.604389667510986
    5. 'but' → logprob: -6.979389667510986
    6. 'and' → logprob: -8.104390144348145
    7. 'so' → logprob: -8.104390144348145
    8. ' and' → logprob: -9.354390144348145
    9. '```' → logprob: -9.604390144348145
    10. '<|end|>' → logprob: -9.854390144348145

Token 294: ' satisfy' (ID: 35441)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5422353744506836
    2. 'maximize' → logprob: -1.6672353744506836
    3. 'ach' → logprob: -2.6672353744506836
    4. ' minimize' → logprob: -2.9172353744506836
    5. 'make' → logprob: -3.0422353744506836
    6. 'delay' → logprob: -4.792235374450684
    7. 'force' → logprob: -5.292235374450684
    8. 'ensure' → logprob: -5.292235374450684
    9. 'b' → logprob: -5.417235374450684
    10. 'help' → logprob: -5.542235374450684

Token 295: ' condition' (ID: 7060)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.3764817416667938
    2. ' the' → logprob: -1.5014817714691162
    3. ' all' → logprob: -3.501481771469116
    4. 'all' → logprob: -3.751481771469116
    5. 'that' → logprob: -4.751481533050537
    6. ' that' → logprob: -5.376481533050537
    7. '   ' → logprob: -5.376481533050537
    8. '#' → logprob: -5.751481533050537
    9. '       ' → logprob: -5.751481533050537
    10. 'b' → logprob: -6.126481533050537

Token 296: ' that' (ID: 484)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007171874865889549
    2. '<|end|>' → logprob: -5.132172107696533
    3. '        
' → logprob: -7.507172107696533
    4. '<|end|>' → logprob: -8.382171630859375
    5. '
' → logprob: -8.757171630859375
    6. '#' → logprob: -9.007171630859375
    7. 'numbers' → logprob: -10.132171630859375
    8. '```' → logprob: -10.882171630859375
    9. 'scores' → logprob: -11.382171630859375
    10. 'number' → logprob: -11.507171630859375

Token 297: ' card' (ID: 4766)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6659621596336365
    2. 'b' → logprob: -2.1659622192382812
    3. 'all' → logprob: -2.4159622192382812
    4. 'cards' → logprob: -2.6659622192382812
    5. 'each' → logprob: -2.9159622192382812
    6. 'for' → logprob: -3.0409622192382812
    7. 'no' → logprob: -3.6659622192382812
    8. ' the' → logprob: -4.040962219238281
    9. ' all' → logprob: -4.915962219238281
    10. '#' → logprob: -5.040962219238281

Token 298: '_i' (ID: 10853)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.03268681839108467
    2. '_lines' → logprob: -3.657686710357666
    3. ' lines' → logprob: -6.157686710357666
    4. '#' → logprob: -6.782686710357666
    5. 'lines' → logprob: -7.032686710357666
    6. 'b' → logprob: -7.282686710357666
    7. ' s' → logprob: -8.532687187194824
    8. ''s' → logprob: -8.657687187194824
    9. ' bingo' → logprob: -8.782687187194824
    10. ' finishing' → logprob: -8.782687187194824

Token 299: ' bingo' (ID: 65141)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06073320657014847
    2. ''s' → logprob: -3.6857333183288574
    3. 'b' → logprob: -4.435733318328857
    4. 'wins' → logprob: -5.185733318328857
    5. 'fin' → logprob: -5.435733318328857
    6. ' finishes' → logprob: -6.060733318328857
    7. 'scores' → logprob: -6.685733318328857
    8. ' has' → logprob: -6.810733318328857
    9. 'has' → logprob: -7.435733318328857
    10. '```' → logprob: -7.435733318328857

Token 300: ' no' (ID: 860)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.08507314324378967
    2. 'times' → logprob: -4.335072994232178
    3. 'before' → logprob: -4.835072994232178
    4. ' before' → logprob: -5.085072994232178
    5. '[i' → logprob: -5.210072994232178
    6. '#' → logprob: -5.460072994232178
    7. ' finishes' → logprob: -5.585072994232178
    8. '...' → logprob: -5.960072994232178
    9. '   ' → logprob: -6.210072994232178
    10. 'ach' → logprob: -6.335072994232178

Token 301: ' later' (ID: 4849)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0306050106883049
    2. 'long' → logprob: -3.6556050777435303
    3. 'later' → logprob: -5.780604839324951
    4. 'w' → logprob: -7.280604839324951
    5. ' longer' → logprob: -9.53060531616211
    6. ' later' → logprob: -9.53060531616211
    7. ' t' → logprob: -9.65560531616211
    8. 'more' → logprob: -9.78060531616211
    9. 'ear' → logprob: -10.28060531616211
    10. 'less' → logprob: -10.78060531616211

Token 302: ' than' (ID: 1572)
  Prédit: 'than'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'than' → logprob: -0.13252344727516174
    2. ' than' → logprob: -2.132523536682129
    3. '       ' → logprob: -5.257523536682129
    4. '           ' → logprob: -9.007523536682129
    5. '_than' → logprob: -9.882523536682129
    6. '        ' → logprob: -10.007523536682129
    7. 'that' → logprob: -10.632523536682129
    8. '               ' → logprob: -11.132523536682129
    9. '=' → logprob: -11.132523536682129
    10. 'Than' → logprob: -11.257523536682129

Token 303: ' card' (ID: 4766)
  Prédit: ' card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.16071158647537231
    2. 'card' → logprob: -1.9107115268707275
    3. ' cards' → logprob: -8.285711288452148
    4. '_card' → logprob: -9.660711288452148
    5. '_' → logprob: -10.535711288452148
    6. 'cards' → logprob: -10.535711288452148
    7. '	card' → logprob: -10.660711288452148
    8. ' i' → logprob: -11.035711288452148
    9. ' ' → logprob: -11.035711288452148
    10. ' ' → logprob: -11.035711288452148

Token 304: '_j' (ID: 12021)
  Prédit: '_i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -0.026727866381406784
    2. '_j' → logprob: -3.7767279148101807
    3. '_{' → logprob: -6.526727676391602
    4. '_' → logprob: -6.776727676391602
    5. 's' → logprob: -8.401727676391602
    6. 'i' → logprob: -9.026727676391602
    7. '```' → logprob: -9.276727676391602
    8. '_(' → logprob: -9.276727676391602
    9. '[i' → logprob: -9.651727676391602
    10. '_s' → logprob: -9.776727676391602

Token 305: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17940384149551392
    2. '<|end|>' → logprob: -1.9294037818908691
    3. '
' → logprob: -4.429403781890869
    4. '        
' → logprob: -5.679403781890869
    5. '#' → logprob: -6.429403781890869
    6. '<|end|>' → logprob: -6.804403781890869
    7. '        ' → logprob: -9.054404258728027
    8. '...' → logprob: -9.179404258728027
    9. ',' → logprob: -9.804404258728027
    10. ')' → logprob: -9.804404258728027

Token 306: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.6936646699905396
    2. ' i' → logprob: -0.6936646699905396
    3. ' card' → logprob: -9.19366455078125
    4. 'j' → logprob: -9.19366455078125
    5. ' j' → logprob: -9.44366455078125
    6. '   ' → logprob: -9.69366455078125
    7. 'card' → logprob: -9.81866455078125
    8. ' ' → logprob: -10.44366455078125
    9. ' ' → logprob: -11.06866455078125
    10. '(i' → logprob: -11.63116455078125

Token 307: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.1460714042186737
    2. ' <' → logprob: -2.021071434020996
    3. '<=' → logprob: -6.521071434020996
    4. ' <=' → logprob: -7.646071434020996
    5. '<n' → logprob: -7.646071434020996
    6. '>' → logprob: -8.146071434020996
    7. '==' → logprob: -8.521071434020996
    8. ' >' → logprob: -9.146071434020996
    9. ' ==' → logprob: -9.896071434020996
    10. '<int' → logprob: -10.021071434020996

Token 308: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.014164687134325504
    2. ' j' → logprob: -4.264164924621582
    3. '=j' → logprob: -14.639164924621582
    4. ' ' → logprob: -15.389164924621582
    5. '	j' → logprob: -16.014163970947266
    6. '   ' → logprob: -16.014163970947266
    7. '_j' → logprob: -16.264163970947266
    8. '=' → logprob: -16.514163970947266
    9. '```' → logprob: -16.639163970947266
    10. ' ' → logprob: -17.389163970947266

Token 309: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013515590690076351
    2. '
' → logprob: -5.263515472412109
    3. '        
' → logprob: -6.263515472412109
    4. 'numbers' → logprob: -6.388515472412109
    5. '#' → logprob: -6.763515472412109
    6. 'called' → logprob: -7.013515472412109
    7. ' called' → logprob: -7.138515472412109
    8. '<|end|>' → logprob: -8.13851547241211
    9. 'def' → logprob: -8.88851547241211
    10. 'marked' → logprob: -8.88851547241211

Token 310: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024718815460801125
    2. '<|end|>' → logprob: -4.399718761444092
    3. '
' → logprob: -5.149718761444092
    4. '        
' → logprob: -5.899718761444092
    5. '#' → logprob: -6.024718761444092
    6. 'numbers' → logprob: -8.52471923828125
    7. '        ' → logprob: -8.77471923828125
    8. '<|end|>' → logprob: -9.02471923828125
    9. 'number' → logprob: -9.39971923828125
    10. 'def' → logprob: -9.64971923828125

Token 311: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4418922960758209
    2. 'b' → logprob: -1.8168922662734985
    3. '#' (adapté à ' #') → logprob: -2.441892385482788
    4. 'called' → logprob: -3.441892385482788
    5. 'marked' → logprob: -4.691892147064209
    6. 'order' → logprob: -5.066892147064209
    7. '        
' → logprob: -5.191892147064209
    8. 'from' → logprob: -5.441892147064209
    9. 'times' → logprob: -5.441892147064209
    10. 'def' → logprob: -5.441892147064209

Token 312: ' We' (ID: 1416)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.2591273784637451
    2. 'called' → logprob: -1.5091273784637451
    3. 'b' → logprob: -1.7591273784637451
    4. 'marked' → logprob: -2.759127378463745
    5. 'def' → logprob: -3.134127378463745
    6. '       ' → logprob: -3.134127378463745
    7. 'need' → logprob: -3.634127378463745
    8. 'nums' → logprob: -4.009127616882324
    9. 'from' → logprob: -4.134127616882324
    10. 'numbers' → logprob: -4.384127616882324

Token 313: ' seek' (ID: 8142)
  Prédit: 'need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'need' → logprob: -0.3428439497947693
    2. 'want' → logprob: -2.217844009399414
    3. 'have' → logprob: -2.842844009399414
    4. 'continue' → logprob: -3.342844009399414
    5. '#' → logprob: -3.717844009399414
    6. ' need' → logprob: -4.217844009399414
    7. 'def' → logprob: -4.217844009399414
    8. 'import' → logprob: -5.092844009399414
    9. 'can' → logprob: -5.217844009399414
    10. ' want' → logprob: -5.342844009399414

Token 314: ' minimal' (ID: 19957)
  Prédit: ' minimal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.7977147698402405
    2. ' to' → logprob: -1.1727147102355957
    3. ' the' → logprob: -1.7977147102355957
    4. 'minimal' → logprob: -3.6727147102355957
    5. 'the' → logprob: -3.9227147102355957
    6. 'min' → logprob: -5.047714710235596
    7. ' min' → logprob: -5.547714710235596
    8. 'to' → logprob: -5.797714710235596
    9. ' minimum' → logprob: -5.922714710235596
    10. 'minimum' → logprob: -6.047714710235596

Token 315: ' length' (ID: 5517)
  Prédit: '_b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.6914743185043335
    2. '_numbers' → logprob: -2.191474437713623
    3. '_times' → logprob: -3.066474437713623
    4. 'b' → logprob: -3.441474437713623
    5. '_finish' → logprob: -3.441474437713623
    6. ' finishing' → logprob: -3.566474437713623
    7. '_calls' → logprob: -3.566474437713623
    8. 'times' → logprob: -3.691474437713623
    9. '_time' → logprob: -3.816474437713623
    10. '_line' → logprob: -3.941474437713623

Token 316: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10598457604646683
    2. ' for' → logprob: -3.730984687805176
    3. ' called' → logprob: -4.105984687805176
    4. '   ' → logprob: -4.855984687805176
    5. 'for' → logprob: -4.980984687805176
    6. '#' → logprob: -5.480984687805176
    7. ' =' → logprob: -5.605984687805176
    8. 'called' → logprob: -5.605984687805176
    9. 'times' → logprob: -5.730984687805176
    10. ' #' → logprob: -5.730984687805176

Token 317: ' sequence' (ID: 16281)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.8172634840011597
    2. 'b' → logprob: -2.192263603210449
    3. ' a' → logprob: -2.317263603210449
    4. ' lines' → logprob: -2.567263603210449
    5. 'lines' → logprob: -2.817263603210449
    6. 'the' → logprob: -2.942263603210449
    7. 'sequence' → logprob: -3.067263603210449
    8. ' the' → logprob: -4.067263603210449
    9. 'called' → logprob: -4.192263603210449
    10. 'line' → logprob: -4.317263603210449

Token 318: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020845023915171623
    2. '        
' → logprob: -4.64584493637085
    3. '
' → logprob: -6.14584493637085
    4. '#' → logprob: -6.27084493637085
    5. 'def' → logprob: -6.64584493637085
    6. '<|end|>' → logprob: -6.77084493637085
    7. 'numbers' → logprob: -7.14584493637085
    8. ' called' → logprob: -7.89584493637085
    9. 'max' → logprob: -8.145845413208008
    10. ',' → logprob: -8.145845413208008

Token 319: ' numbers' (ID: 8663)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.5869451761245728
    2. ' numbers' → logprob: -1.3369451761245728
    3. 'called' → logprob: -1.9619451761245728
    4. ' called' → logprob: -4.586945056915283
    5. 'calls' → logprob: -4.836945056915283
    6. 'cards' → logprob: -5.211945056915283
    7. 'b' → logprob: -5.336945056915283
    8. 'lines' → logprob: -5.961945056915283
    9. 'sets' → logprob: -6.586945056915283
    10. 'number' → logprob: -6.961945056915283

Token 320: ' satisfying' (ID: 52718)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14012180268764496
    2. '
' → logprob: -3.0151216983795166
    3. ' called' → logprob: -3.1401216983795166
    4. '        
' → logprob: -4.765121936798096
    5. 'called' → logprob: -4.765121936798096
    6. 'def' → logprob: -5.640121936798096
    7. '#' → logprob: -5.765121936798096
    8. ',' → logprob: -6.015121936798096
    9. '<|end|>' → logprob: -6.265121936798096
    10. 'import' → logprob: -6.390121936798096

Token 321: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.16817885637283325
    2. ' the' → logprob: -2.2931787967681885
    3. ' all' → logprob: -4.168179035186768
    4. 'that' → logprob: -4.293179035186768
    5. 'all' → logprob: -4.418179035186768
    6. 'these' → logprob: -6.043179035186768
    7. ' these' → logprob: -6.168179035186768
    8. 'card' → logprob: -6.668179035186768
    9. ' that' → logprob: -6.668179035186768
    10. 'this' → logprob: -6.918179035186768

Token 322: ' condition' (ID: 7060)
  Prédit: 'constraints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'constraints' → logprob: -1.193910002708435
    2. ' constraints' → logprob: -1.693910002708435
    3. 'condition' → logprob: -2.4439101219177246
    4. 'ordering' → logprob: -2.5689101219177246
    5. 'conditions' → logprob: -2.6939101219177246
    6. 'b' → logprob: -2.8189101219177246
    7. ' conditions' → logprob: -3.0689101219177246
    8. 'order' → logprob: -3.5689101219177246
    9. ' ordering' → logprob: -3.5689101219177246
    10. 'above' → logprob: -3.6939101219177246

Token 323: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04467328265309334
    2. '#' → logprob: -3.669673204421997
    3. '        
' → logprob: -5.669673442840576
    4. 'numbers' → logprob: -5.794673442840576
    5. 'called' → logprob: -5.919673442840576
    6. 'from' → logprob: -6.044673442840576
    7. 'marked' → logprob: -6.544673442840576
    8. 'def' → logprob: -7.419673442840576
    9. ' called' → logprob: -7.544673442840576
    10. '
' → logprob: -7.919673442840576

Token 324: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43810445070266724
    2. '
' → logprob: -1.4381043910980225
    3. '        
' → logprob: -2.9381043910980225
    4. ' called' → logprob: -3.3131043910980225
    5. 'called' → logprob: -4.438104629516602
    6. ' 
' → logprob: -5.813104629516602
    7. 'numbers' → logprob: -5.938104629516602
    8. '#' → logprob: -5.938104629516602
    9. 'def' → logprob: -7.188104629516602
    10. ' numbers' → logprob: -7.438104629516602

Token 325: ' #
' (ID: 21888)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1556285619735718
    2. '       ' → logprob: -1.1556285619735718
    3. 'def' → logprob: -2.5306286811828613
    4. 'from' → logprob: -3.0306286811828613
    5. 'called' → logprob: -3.5306286811828613
    6. 'dp' → logprob: -3.6556286811828613
    7. 'marked' → logprob: -3.9056286811828613
    8. '        
' → logprob: -3.9056286811828613
    9. 'b' → logprob: -4.030628681182861
    10. ' #' → logprob: -4.155628681182861

Token 326: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24301385879516602
    2. '#' → logprob: -1.868013858795166
    3. 'numbers' → logprob: -4.368013858795166
    4. ' called' → logprob: -4.493013858795166
    5. ' numbers' → logprob: -4.993013858795166
    6. '        
' → logprob: -5.118013858795166
    7. ' #' → logprob: -5.243013858795166
    8. '
' → logprob: -5.493013858795166
    9. 'called' → logprob: -5.993013858795166
    10. 'from' → logprob: -5.993013858795166

Token 327: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.6797354221343994
    2. '       ' → logprob: -1.3047354221343994
    3. 'called' → logprob: -2.9297354221343994
    4. 'from' → logprob: -3.1797354221343994
    5. ' #' → logprob: -3.4297354221343994
    6. 'numbers' → logprob: -3.5547354221343994
    7. ' called' → logprob: -4.67973518371582
    8. 'nums' → logprob: -4.67973518371582
    9. 'def' → logprob: -4.80473518371582
    10. 'marked' → logprob: -5.17973518371582

Token 328: ' Modeling' (ID: 129776)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.47591879963874817
    2. 'from' → logprob: -1.9759187698364258
    3. 'called' → logprob: -2.725918769836426
    4. 'def' → logprob: -3.350918769836426
    5. 'marked' → logprob: -4.100918769836426
    6. 'need' → logprob: -4.100918769836426
    7. 'needed' → logprob: -4.475918769836426
    8. 'all' → logprob: -4.475918769836426
    9. 'min' → logprob: -4.600918769836426
    10. 'nums' → logprob: -4.600918769836426

Token 329: ':
' (ID: 734)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0938735082745552
    2. 'numbers' → logprob: -3.9688735008239746
    3. '       ' → logprob: -4.093873500823975
    4. '<|end|>' → logprob: -4.218873500823975
    5. 'def' → logprob: -5.218873500823975
    6. 'from' → logprob: -5.343873500823975
    7. 'the' → logprob: -5.718873500823975
    8. '...' → logprob: -5.843873500823975
    9. 'import' → logprob: -5.843873500823975
    10. ' the' → logprob: -6.093873500823975

Token 330: '       ' (ID: 309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.47919708490371704
    2. ' #' → logprob: -1.4791970252990723
    3. ' numbers' → logprob: -3.8541970252990723
    4. 'from' → logprob: -4.104197025299072
    5. '       ' → logprob: -4.229197025299072
    6. ' visited' → logprob: -4.479197025299072
    7. ' from' → logprob: -4.479197025299072
    8. ' lines' → logprob: -4.604197025299072
    9. ' n' → logprob: -4.729197025299072
    10. '<|end|>' → logprob: -4.729197025299072

Token 331: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.40908050537109375
    2. ' #' → logprob: -2.0340805053710938
    3. 'from' → logprob: -2.7840805053710938
    4. ' from' → logprob: -2.9090805053710938
    5. ' numbers' → logprob: -4.159080505371094
    6. ' pass' → logprob: -4.159080505371094
    7. ' lines' → logprob: -4.909080505371094
    8. '       ' → logprob: -5.659080505371094
    9. ' called' → logprob: -5.784080505371094
    10. ' needed' → logprob: -5.784080505371094

Token 332: ' Each' (ID: 11555)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2016223818063736
    2. 'from' → logprob: -1.9516223669052124
    3. ' #' → logprob: -4.576622486114502
    4. ' from' → logprob: -4.576622486114502
    5. 'import' → logprob: -5.451622486114502
    6. 'def' → logprob: -6.326622486114502
    7. 'We' → logprob: -6.451622486114502
    8. ' needed' → logprob: -6.951622486114502
    9. 'min' → logprob: -7.201622486114502
    10. 'needed' → logprob: -7.326622486114502

Token 333: ' card' (ID: 4766)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.6028639078140259
    2. ' line' → logprob: -1.4778639078140259
    3. 'card' → logprob: -1.7278639078140259
    4. 'cl' → logprob: -4.102863788604736
    5. ' card' → logprob: -4.102863788604736
    6. '#' → logprob: -5.477863788604736
    7. 'set' → logprob: -5.727863788604736
    8. 'b' → logprob: -6.602863788604736
    9. ' set' → logprob: -7.102863788604736
    10. 'def' → logprob: -7.602863788604736

Token 334: ' can' (ID: 665)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.8397352695465088
    2. ' has' → logprob: -1.9647352695465088
    3. ''s' → logprob: -2.089735269546509
    4. '#' → logprob: -2.339735269546509
    5. 'line' → logprob: -2.714735269546509
    6. '_lines' → logprob: -3.339735269546509
    7. 'c' → logprob: -3.714735269546509
    8. 'i' → logprob: -4.08973503112793
    9. ',' → logprob: -4.58973503112793
    10. 'is' → logprob: -4.83973503112793

Token 335: ' bingo' (ID: 65141)
  Prédit: ' bingo'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bingo' → logprob: -1.047580361366272
    2. 'b' → logprob: -1.297580361366272
    3. 'win' → logprob: -2.2975802421569824
    4. ' be' → logprob: -2.4225802421569824
    5. ' win' → logprob: -3.1725802421569824
    6. ' have' → logprob: -3.2975802421569824
    7. 'be' → logprob: -3.2975802421569824
    8. 'ach' → logprob: -3.9225802421569824
    9. 'have' → logprob: -4.172580242156982
    10. ' achieve' → logprob: -4.922580242156982

Token 336: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -1.1710715293884277
    2. ' by' → logprob: -1.4210715293884277
    3. ' with' → logprob: -1.6710715293884277
    4. 'on' → logprob: -2.6710715293884277
    5. 'with' → logprob: -2.9210715293884277
    6. ' in' → logprob: -3.2960715293884277
    7. 'by' → logprob: -3.4210715293884277
    8. 'in' → logprob: -3.9210715293884277
    9. ' at' → logprob: -4.671071529388428
    10. ' via' → logprob: -5.171071529388428

Token 337: ' any' (ID: 1062)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.08587164431810379
    2. 'a' → logprob: -3.585871696472168
    3. 'at' → logprob: -4.210871696472168
    4. ' any' → logprob: -4.335871696472168
    5. 'one' → logprob: -4.585871696472168
    6. 'some' → logprob: -4.960871696472168
    7. 'each' → logprob: -5.585871696472168
    8. ' at' → logprob: -5.585871696472168
    9. ' a' → logprob: -7.460871696472168
    10. ' one' → logprob: -8.085871696472168

Token 338: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5454586744308472
    2. 'one' → logprob: -1.7954586744308472
    3. ' line' → logprob: -2.1704587936401367
    4. ' of' → logprob: -2.7954587936401367
    5. 'of' → logprob: -3.2954587936401367
    6. ' one' → logprob: -3.4204587936401367
    7. '#' → logprob: -5.920458793640137
    8. 'card' → logprob: -6.045458793640137
    9. '#line' → logprob: -6.420458793640137
    10. 'lines' → logprob: -7.170458793640137

Token 339: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16071534156799316
    2. '#' → logprob: -3.035715341567993
    3. '<|end|>' → logprob: -3.035715341567993
    4. '.' → logprob: -3.285715341567993
    5. ',' → logprob: -4.785715103149414
    6. '<|end|>' → logprob: -6.535715103149414
    7. '...' → logprob: -6.785715103149414
    8. '.
' → logprob: -7.535715103149414
    9. ' lines' → logprob: -7.660715103149414
    10. '
' → logprob: -7.785715103149414

Token 340: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6368666291236877
    2. '<|end|>' → logprob: -1.386866569519043
    3. '#' → logprob: -1.636866569519043
    4. '
' → logprob: -4.636866569519043
    5. '        
' → logprob: -5.636866569519043
    6. ' #' → logprob: -6.136866569519043
    7. ')' → logprob: -6.261866569519043
    8. ' ' → logprob: -6.511866569519043
    9. '<|end|>' → logprob: -6.511866569519043
    10. '        ' → logprob: -7.011866569519043

Token 341: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5436149835586548
    2. '       ' → logprob: -1.0436149835586548
    3. 'from' → logprob: -4.418614864349365
    4. ' #' → logprob: -4.543614864349365
    5. 'min' → logprob: -5.418614864349365
    6. '#
' → logprob: -5.543614864349365
    7. 'tokens' → logprob: -5.918614864349365
    8. '
' → logprob: -6.168614864349365
    9. ' minimal' → logprob: -6.168614864349365
    10. 'needed' → logprob: -6.418614864349365

Token 342: ' The' (ID: 623)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.102602243423462
    2. 'called' → logprob: -1.727602243423462
    3. 'from' → logprob: -2.352602243423462
    4. '       ' → logprob: -2.852602243423462
    5. 'needed' → logprob: -2.852602243423462
    6. 'need' → logprob: -3.227602243423462
    7. 'numbers' → logprob: -3.227602243423462
    8. 'min' → logprob: -3.227602243423462
    9. 'used' → logprob: -3.602602243423462
    10. 'def' → logprob: -4.227602005004883

Token 343: ' bingo' (ID: 65141)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -0.7919471263885498
    2. ' minimal' → logprob: -1.6669471263885498
    3. '#' → logprob: -3.16694712638855
    4. ' code' → logprob: -3.54194712638855
    5. ' rest' → logprob: -3.91694712638855
    6. ' card' → logprob: -4.041947364807129
    7. ' cards' → logprob: -4.041947364807129
    8. ' lines' → logprob: -4.166947364807129
    9. 'next' → logprob: -4.166947364807129
    10. ' numbers' → logprob: -4.166947364807129

Token 344: ' time' (ID: 1058)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.6320388317108154
    2. '#' → logprob: -3.0070388317108154
    3. ' line' → logprob: -3.0070388317108154
    4. ' is' → logprob: -3.0070388317108154
    5. 'lines' → logprob: -3.3820388317108154
    6. ' completion' → logprob: -3.5070388317108154
    7. ' can' → logprob: -3.8820388317108154
    8. '       ' → logprob: -4.1320390701293945
    9. ' sequence' → logprob: -4.1320390701293945
    10. ' #' → logprob: -4.2570390701293945

Token 345: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5664712190628052
    2. ' is' → logprob: -1.4414712190628052
    3. ' for' → logprob: -2.3164710998535156
    4. 'is' → logprob: -3.5664710998535156
    5. 'for' → logprob: -3.6914710998535156
    6. '=' → logprob: -3.8164710998535156
    7. '#' → logprob: -4.816471099853516
    8. ' of' → logprob: -5.191471099853516
    9. ' =' → logprob: -5.941471099853516
    10. 't' → logprob: -5.941471099853516

Token 346: ' the' (ID: 290)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.6090781092643738
    2. ' card' → logprob: -1.3590781688690186
    3. 'a' → logprob: -2.1090781688690186
    4. 'each' → logprob: -3.6090781688690186
    5. ' a' → logprob: -3.7340781688690186
    6. 'the' → logprob: -4.4840779304504395
    7. 'cards' → logprob: -5.2340779304504395
    8. ' each' → logprob: -5.2340779304504395
    9. ' the' → logprob: -6.2340779304504395
    10. ' cards' → logprob: -6.9840779304504395

Token 347: ' card' (ID: 4766)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.6720342636108398
    2. ' card' → logprob: -1.0470342636108398
    3. ' next' → logprob: -3.17203426361084
    4. 'cards' → logprob: -3.67203426361084
    5. 'first' → logprob: -4.17203426361084
    6. 'next' → logprob: -4.54703426361084
    7. ' cards' → logprob: -4.54703426361084
    8. ' first' → logprob: -4.67203426361084
    9. 'sequence' → logprob: -4.79703426361084
    10. ' sequence' → logprob: -5.42203426361084

Token 348: ' =' (ID: 314)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.010749367997050285
    2. '_' → logprob: -4.885749340057373
    3. '#' → logprob: -7.010749340057373
    4. 'is' → logprob: -7.635749340057373
    5. ' #' → logprob: -7.885749340057373
    6. ' i' → logprob: -7.885749340057373
    7. 's' → logprob: -8.385749816894531
    8. ' c' → logprob: -8.760749816894531
    9. '_i' → logprob: -8.760749816894531
    10. ' =' → logprob: -9.260749816894531

Token 349: ' max' (ID: 2999)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.5813040733337402
    2. 'minimum' → logprob: -1.3313040733337402
    3. 'the' → logprob: -2.4563040733337402
    4. 'minimal' → logprob: -2.9563040733337402
    5. ' min' → logprob: -4.08130407333374
    6. ' minimal' → logprob: -4.58130407333374
    7. 'max' → logprob: -5.45630407333374
    8. ' minimum' → logprob: -5.70630407333374
    9. ' the' → logprob: -5.70630407333374
    10. '#' → logprob: -8.331304550170898

Token 350: ' of' (ID: 328)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.23369696736335754
    2. '(' → logprob: -1.9836969375610352
    3. 'len' → logprob: -3.858696937561035
    4. '([' → logprob: -4.483696937561035
    5. '(card' → logprob: -4.608696937561035
    6. '(
' → logprob: -5.233696937561035
    7. '(line' → logprob: -5.608696937561035
    8. '({' → logprob: -6.233696937561035
    9. '_len' → logprob: -6.483696937561035
    10. '(s' → logprob: -6.483696937561035

Token 351: ' called' (ID: 4358)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.1091499328613281
    2. 'min' → logprob: -2.109149932861328
    3. 'len' → logprob: -2.234149932861328
    4. '(len' → logprob: -2.734149932861328
    5. 'numbers' → logprob: -2.984149932861328
    6. 'card' → logprob: -3.109149932861328
    7. 'line' → logprob: -3.484149932861328
    8. '(min' → logprob: -3.609149932861328
    9. '(' → logprob: -3.734149932861328
    10. 'time' → logprob: -3.859149932861328

Token 352: ' numbers' (ID: 8663)
  Prédit: '_numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.9099786281585693
    2. '(' → logprob: -1.9099786281585693
    3. 'numbers' → logprob: -2.0349786281585693
    4. '_number' → logprob: -2.7849786281585693
    5. 'number' → logprob: -2.7849786281585693
    6. '_' → logprob: -3.1599786281585693
    7. ' numbers' → logprob: -3.7849786281585693
    8. ' (' → logprob: -4.034978866577148
    9. '()' → logprob: -4.409978866577148
    10. '_called' → logprob: -4.534978866577148

Token 353: ' in' (ID: 306)
  Prédit: '_needed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_needed' → logprob: -1.1008591651916504
    2. '_called' → logprob: -2.1008591651916504
    3. ')' → logprob: -2.7258591651916504
    4. '_required' → logprob: -2.8508591651916504
    5. 'called' → logprob: -2.9758591651916504
    6. 'needed' → logprob: -2.9758591651916504
    7. ' called' → logprob: -2.9758591651916504
    8. ' needed' → logprob: -3.4758591651916504
    9. '_to' → logprob: -3.4758591651916504
    10. '[' → logprob: -3.9758591651916504

Token 354: ' chosen' (ID: 16180)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.8479753732681274
    2. 'that' → logprob: -0.9729753732681274
    3. 'any' → logprob: -2.097975254058838
    4. ' that' → logprob: -4.597975254058838
    5. 'line' → logprob: -4.597975254058838
    6. 'all' → logprob: -4.722975254058838
    7. 'card' → logprob: -4.847975254058838
    8. 'a' → logprob: -4.847975254058838
    9. ' the' → logprob: -5.222975254058838
    10. ' any' → logprob: -5.847975254058838

Token 355: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.2405988574028015
    2. ' line' → logprob: -1.6155989170074463
    3. 'set' → logprob: -4.865598678588867
    4. ' set' → logprob: -5.615598678588867
    5. 'subset' → logprob: -6.740598678588867
    6. 'card' → logprob: -6.865598678588867
    7. 'winning' → logprob: -7.490598678588867
    8. 'b' → logprob: -8.615598678588867
    9. 'lines' → logprob: -9.115598678588867
    10. ' subset' → logprob: -9.115598678588867

Token 356: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38992586731910706
    2. '
' → logprob: -1.3899258375167847
    3. '<|end|>' → logprob: -3.014925956726074
    4. ')' → logprob: -5.639925956726074
    5. ',' → logprob: -5.764925956726074
    6. '.' → logprob: -6.014925956726074
    7. '        ' → logprob: -6.139925956726074
    8. ',
' → logprob: -6.389925956726074
    9. '<|end|>' → logprob: -6.639925956726074
    10. '        
' → logprob: -6.639925956726074

Token 357: 'numbers' (ID: 85055)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0043265032581985
    2. ').' → logprob: -6.629326343536377
    3. '),' → logprob: -6.879326343536377
    4. ')
' → logprob: -7.629326343536377
    5. ' )' → logprob: -7.754326343536377
    6. 'set' → logprob: -8.504326820373535
    7. '[' → logprob: -9.129326820373535
    8. '-' → logprob: -9.254326820373535
    9. ' -' → logprob: -9.629326820373535
    10. '       ' → logprob: -9.629326820373535

Token 358: ' called' (ID: 4358)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.279546856880188
    2. 'called' → logprob: -2.0295467376708984
    3. ')]' → logprob: -4.154546737670898
    4. ' called' → logprob: -4.529546737670898
    5. '])' → logprob: -4.654546737670898
    6. '_called' → logprob: -4.779546737670898
    7. '       ' → logprob: -4.904546737670898
    8. '_needed' → logprob: -5.029546737670898
    9. ')}' → logprob: -5.529546737670898
    10. '))' → logprob: -5.654546737670898

Token 359: ' so' (ID: 813)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.030817413702607155
    2. ' )' → logprob: -3.7808175086975098
    3. ' so' → logprob: -5.53081750869751
    4. ')+' → logprob: -6.40581750869751
    5. ' up' → logprob: -7.65581750869751
    6. ' at' → logprob: -8.530817031860352
    7. '[' → logprob: -8.655817031860352
    8. ').' → logprob: -9.155817031860352
    9. 'so' → logprob: -9.530817031860352
    10. '+' → logprob: -9.655817031860352

Token 360: ' far' (ID: 4150)
  Prédit: 'far'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'far' → logprob: -0.005257595330476761
    2. ' far' → logprob: -5.255257606506348
    3. '_far' → logprob: -11.005257606506348
    4. 'Far' → logprob: -13.005257606506348
    5. '   ' → logprob: -13.380257606506348
    6. ' ' → logprob: -13.880257606506348
    7. '    ' → logprob: -14.255257606506348
    8. '        ' → logprob: -14.880257606506348
    9. '       ' → logprob: -15.255257606506348
    10. 'fare' → logprob: -15.505257606506348

Token 361: ').
' (ID: 6294)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031452777329832315
    2. ' )' → logprob: -6.503145217895508
    3. ')+' → logprob: -7.253145217895508
    4. ').' → logprob: -8.753145217895508
    5. '),' → logprob: -8.878145217895508
    6. ',' → logprob: -8.878145217895508
    7. '+' → logprob: -9.378145217895508
    8. ')
' → logprob: -9.628145217895508
    9. '[' → logprob: -9.628145217895508
    10. ' +' → logprob: -10.253145217895508

Token 362: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.33481213450431824
    2. '<|end|>' → logprob: -1.7098121643066406
    3. '
' → logprob: -2.8348121643066406
    4. '#' → logprob: -3.3348121643066406
    5. '<|end|>' → logprob: -5.459812164306641
    6. ')' → logprob: -6.709812164306641
    7. '        
' → logprob: -6.709812164306641
    8. ' #' → logprob: -7.959812164306641
    9. '...' → logprob: -8.20981216430664
    10. '#
' → logprob: -8.33481216430664

Token 363: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 364: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23851045966148376
    2. 'called' → logprob: -2.8635103702545166
    3. '#' → logprob: -3.1135103702545166
    4. ' called' → logprob: -3.2385103702545166
    5. ' #' → logprob: -3.9885103702545166
    6. '
' → logprob: -4.238510608673096
    7. '        
' → logprob: -4.613510608673096
    8. 'numbers' → logprob: -5.113510608673096
    9. 'from' → logprob: -6.113510608673096
    10. ' numbers' → logprob: -6.113510608673096

Token 365: ' gam' (ID: 6579)
  Prédit: ' next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' next' → logprob: -1.1958487033843994
    2. '#' → logprob: -2.4458487033843994
    3. ' called' → logprob: -2.4458487033843994
    4. ' minimal' → logprob: -2.6958487033843994
    5. 'called' → logprob: -3.0708487033843994
    6. ' best' → logprob: -3.4458487033843994
    7. 'next' → logprob: -3.4458487033843994
    8. ' rest' → logprob: -3.6958487033843994
    9. 'def' → logprob: -3.9458487033843994
    10. 'b' → logprob: -3.9458487033843994

Token 366: 'em' (ID: 347)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.30556708574295044
    2. 'em' → logprob: -1.6805670261383057
    3. ' e' → logprob: -3.6805670261383057
    4. ' master' → logprob: -4.055567264556885
    5. 'master' → logprob: -4.555567264556885
    6. '_' → logprob: -5.430567264556885
    7. 'emaker' → logprob: -5.430567264556885
    8. '   ' → logprob: -5.555567264556885
    9. 'aster' → logprob: -6.180567264556885
    10. '_master' → logprob: -6.180567264556885

Token 367: 'aster' (ID: 3588)
  Prédit: 'aster'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aster' → logprob: -0.09142689406871796
    2. 'master' → logprob: -3.0914268493652344
    3. ' master' → logprob: -3.2164268493652344
    4. '_master' → logprob: -6.466426849365234
    5. '_' → logprob: -8.841426849365234
    6. '-master' → logprob: -9.591426849365234
    7. 'ster' → logprob: -10.216426849365234
    8. 'ast' → logprob: -11.841426849365234
    9. ' ast' → logprob: -12.466426849365234
    10. '(master' → logprob: -12.841426849365234

Token 368: ' controls' (ID: 20081)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.13878102600574493
    2. ' can' → logprob: -3.1387810707092285
    3. '<|end|>' → logprob: -3.1387810707092285
    4. '_' → logprob: -3.5137810707092285
    5. '_can' → logprob: -5.8887810707092285
    6. '_calls' → logprob: -6.5137810707092285
    7. ' _' → logprob: -6.6387810707092285
    8. '<|end|>' → logprob: -6.7637810707092285
    9. ')' → logprob: -6.8887810707092285
    10. ' wants' → logprob: -7.3887810707092285

Token 369: ' call' (ID: 2421)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5062552094459534
    2. 'the' → logprob: -1.5062551498413086
    3. ' which' → logprob: -2.0062551498413086
    4. 'which' → logprob: -3.7562551498413086
    5. 'called' → logprob: -4.381255149841309
    6. ' called' → logprob: -5.506255149841309
    7. ' order' → logprob: -8.381255149841309
    8. '	the' → logprob: -9.381255149841309
    9. 'order' → logprob: -9.506255149841309
    10. ' ' → logprob: -9.506255149841309

Token 370: ' order' (ID: 2569)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.026170242577791214
    2. 'ing' → logprob: -4.776170253753662
    3. ' sequence' → logprob: -4.776170253753662
    4. 's' → logprob: -5.026170253753662
    5. ' numbers' → logprob: -7.026170253753662
    6. '_numbers' → logprob: -7.776170253753662
    7. 'sequence' → logprob: -7.901170253753662
    8. ' order' → logprob: -8.526169776916504
    9. 'd' → logprob: -8.526169776916504
    10. '_sequence' → logprob: -9.276169776916504

Token 371: ' so' (ID: 813)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 372: ' to' (ID: 316)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.06368230283260345
    2. 'that' → logprob: -2.8136823177337646
    3. ' as' → logprob: -7.6886820793151855
    4. ' the' → logprob: -7.8136820793151855
    5. ' ' → logprob: -8.188682556152344
    6. '   ' → logprob: -9.313682556152344
    7. 'the' → logprob: -9.563682556152344
    8. ' tokens' → logprob: -9.688682556152344
    9. '#' → logprob: -9.813682556152344
    10. '    ' → logprob: -10.188682556152344

Token 373: ' order' (ID: 2569)
  Prédit: ' guarantee'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' guarantee' → logprob: -1.142555594444275
    2. ' ensure' → logprob: -1.642555594444275
    3. ' satisfy' → logprob: -2.0175557136535645
    4. 'ensure' → logprob: -2.6425557136535645
    5. ' achieve' → logprob: -2.8925557136535645
    6. ' minimize' → logprob: -3.1425557136535645
    7. 'ach' → logprob: -3.3925557136535645
    8. 's' → logprob: -3.3925557136535645
    9. ' enforce' → logprob: -3.8925557136535645
    10. ' call' → logprob: -4.1425557136535645

Token 374: ' bingo' (ID: 65141)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.13482943177223206
    2. 'the' → logprob: -2.884829521179199
    3. ' cards' → logprob: -3.259829521179199
    4. ' called' → logprob: -4.509829521179199
    5. 'cards' → logprob: -5.259829521179199
    6. 'called' → logprob: -5.384829521179199
    7. ' them' → logprob: -6.009829521179199
    8. ' numbers' → logprob: -6.509829521179199
    9. ' of' → logprob: -6.634829521179199
    10. ' card' → logprob: -7.009829521179199

Token 375: ' times' (ID: 4238)
  Prédit: 'times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'times' → logprob: -0.2931823432445526
    2. ' times' → logprob: -1.418182373046875
    3. '_times' → logprob: -5.293182373046875
    4. 'time' → logprob: -5.543182373046875
    5. ' time' → logprob: -6.793182373046875
    6. 's' → logprob: -7.793182373046875
    7. '_time' → logprob: -7.918182373046875
    8. '
' → logprob: -9.293182373046875
    9. 'cards' → logprob: -9.293182373046875
    10. '   ' → logprob: -9.293182373046875

Token 376: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.533879816532135
    2. ',' → logprob: -2.5338797569274902
    3. '.' → logprob: -2.5338797569274902
    4. '<|end|>' → logprob: -2.6588797569274902
    5. '
' → logprob: -2.7838797569274902
    6. ':' → logprob: -2.7838797569274902
    7. '<|end|>' → logprob: -4.28387975692749
    8. ',
' → logprob: -4.53387975692749
    9. ':
' → logprob: -5.40887975692749
    10. '        
' → logprob: -5.40887975692749

Token 377: ' card' (ID: 4766)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.018993740901350975
    2. ' card' → logprob: -4.768993854522705
    3. 'indices' → logprob: -5.643993854522705
    4. 'index' → logprob: -5.768993854522705
    5. 'cards' → logprob: -6.643993854522705
    6. 'the' → logprob: -7.018993854522705
    7. 'their' → logprob: -7.518993854522705
    8. 'i' → logprob: -7.768993854522705
    9. 'in' → logprob: -8.643993377685547
    10. 'indexes' → logprob: -8.893993377685547

Token 378: ' index' (ID: 3472)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.75270676612854
    2. '.' → logprob: -1.62770676612854
    3. ',' → logprob: -2.12770676612854
    4. '   ' → logprob: -3.00270676612854
    5. '#' → logprob: -3.12770676612854
    6. 's' → logprob: -3.87770676612854
    7. ':' → logprob: -3.87770676612854
    8. '_' → logprob: -4.002706527709961
    9. '...' → logprob: -5.002706527709961
    10. '<|end|>' → logprob: -5.127706527709961

Token 379: ' ascending' (ID: 75564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1702648550271988
    2. '
' → logprob: -2.545264959335327
    3. '<|end|>' → logprob: -3.170264959335327
    4. '        
' → logprob: -3.670264959335327
    5. '<|end|>' → logprob: -6.045264720916748
    6. '#' → logprob: -6.295264720916748
    7. ',' → logprob: -6.670264720916748
    8. '.' → logprob: -7.170264720916748
    9. ' ' → logprob: -7.795264720916748
    10. ',
' → logprob: -7.920264720916748

Token 380: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038123082369565964
    2. '#' → logprob: -3.91312313079834
    3. '
' → logprob: -5.28812313079834
    4. 'called' → logprob: -5.78812313079834
    5. '        
' → logprob: -5.91312313079834
    6. ' called' → logprob: -6.28812313079834
    7. 'from' → logprob: -6.78812313079834
    8. 'def' → logprob: -7.53812313079834
    9. ' #' → logprob: -7.91312313079834
    10. 'numbers' → logprob: -8.28812313079834

Token 381: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030578069388866425
    2. '#' → logprob: -4.655578136444092
    3. '        
' → logprob: -4.655578136444092
    4. '
' → logprob: -4.905578136444092
    5. '<|end|>' → logprob: -7.030578136444092
    6. ' #' → logprob: -8.155577659606934
    7. '   ' → logprob: -8.155577659606934
    8. ' 
' → logprob: -8.530577659606934
    9. '#
' → logprob: -8.780577659606934
    10. '        ' → logprob: -8.780577659606934

Token 382: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07054238766431808
    2. '#' → logprob: -3.570542335510254
    3. '        
' → logprob: -3.820542335510254
    4. '
' → logprob: -5.195542335510254
    5. 'called' → logprob: -5.320542335510254
    6. 'numbers' → logprob: -6.320542335510254
    7. 'from' → logprob: -6.820542335510254
    8. ' called' → logprob: -7.320542335510254
    9. '#
' (adapté à ' #
') → logprob: -7.570542335510254
    10. 'num' → logprob: -7.820542335510254

Token 383: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0834062248468399
    2. '#' → logprob: -2.8334062099456787
    3. ' called' → logprob: -5.333406448364258
    4. '
' → logprob: -5.583406448364258
    5. 'called' → logprob: -5.833406448364258
    6. ' #' → logprob: -5.958406448364258
    7. '        
' → logprob: -6.333406448364258
    8. 'numbers' → logprob: -6.708406448364258
    9. 'def' → logprob: -7.458406448364258
    10. 'from' → logprob: -7.458406448364258

Token 384: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.2747167944908142
    2. '       ' → logprob: -2.274716854095459
    3. 'from' → logprob: -2.899716854095459
    4. 'called' → logprob: -3.274716854095459
    5. 'def' → logprob: -5.274716854095459
    6. 'used' → logprob: -5.524716854095459
    7. 'min' → logprob: -5.649716854095459
    8. '
' → logprob: -5.649716854095459
    9. 'marked' → logprob: -5.649716854095459
    10. 'need' → logprob: -5.899716854095459

Token 385: ' We'll' (ID: 46830)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7992202043533325
    2. '#' → logprob: -1.0492202043533325
    3. 'called' → logprob: -2.924220085144043
    4. 'need' → logprob: -3.549220085144043
    5. 'def' → logprob: -4.049220085144043
    6. 'min' → logprob: -4.174220085144043
    7. 'used' → logprob: -4.424220085144043
    8. 'needed' → logprob: -4.674220085144043
    9. '       ' → logprob: -5.049220085144043
    10. 'dp' → logprob: -5.174220085144043

Token 386: ' try' (ID: 2075)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.39352187514305115
    2. 'use' → logprob: -1.6435219049453735
    3. 'import' → logprob: -3.268521785736084
    4. 'process' → logprob: -3.643521785736084
    5. 'need' → logprob: -4.643521785736084
    6. 'try' → logprob: -4.768521785736084
    7. 'implement' → logprob: -4.768521785736084
    8. 'define' → logprob: -4.893521785736084
    9. 'pro' → logprob: -5.393521785736084
    10. 'consider' → logprob: -5.518521785736084

Token 387: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.1555991172790527
    2. 'all' → logprob: -1.1555991172790527
    3. 'to' → logprob: -1.5305991172790527
    4. ' all' → logprob: -2.9055991172790527
    5. ' lines' → logprob: -3.6555991172790527
    6. '   ' → logprob: -4.655599117279053
    7. 'from' → logprob: -4.655599117279053
    8. 'binary' → logprob: -4.780599117279053
    9. 'for' → logprob: -5.030599117279053
    10. ' calling' → logprob: -5.280599117279053

Token 388: ' find' (ID: 1646)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -1.5172630548477173
    2. 'import' → logprob: -1.7672630548477173
    3. 'find' → logprob: -2.0172629356384277
    4. '
' → logprob: -2.3922629356384277
    5. 'from' → logprob: -2.5172629356384277
    6. 'binary' → logprob: -3.0172629356384277
    7. 'min' → logprob: -3.0172629356384277
    8. 'combine' → logprob: -4.142262935638428
    9. ' find' → logprob: -4.267262935638428
    10. '#' → logprob: -4.267262935638428

Token 389: ',' (ID: 11)
  Prédit: ' minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.7797657251358032
    2. ' a' → logprob: -2.1547656059265137
    3. 'the' → logprob: -2.2797656059265137
    4. ' the' → logprob: -2.2797656059265137
    5. 'minimal' → logprob: -2.4047656059265137
    6. 'def' → logprob: -3.2797656059265137
    7. 'a' → logprob: -4.654765605926514
    8. ' low' → logprob: -4.654765605926514
    9. 'min' → logprob: -4.779765605926514
    10. 'low' → logprob: -5.029765605926514

Token 390: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -2.000784158706665
    2. 'for' → logprob: -2.125784158706665
    3. 'def' → logprob: -2.125784158706665
    4. ' l' → logprob: -2.500784158706665
    5. 'from' → logprob: -2.500784158706665
    6. ' minimal' → logprob: -3.000784158706665
    7. ' left' → logprob: -3.125784158706665
    8. ' ans' → logprob: -3.500784158706665
    9. 'low' → logprob: -3.500784158706665
    10. ' from' → logprob: -3.625784158706665

Token 391: ' each' (ID: 2454)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.41399380564689636
    2. ' k' → logprob: -2.0389938354492188
    3. 'l' → logprob: -2.2889938354492188
    4. 'b' → logprob: -3.9139938354492188
    5. ' l' → logprob: -4.038993835449219
    6. 'length' → logprob: -4.288993835449219
    7. ' length' → logprob: -4.288993835449219
    8. 'L' → logprob: -4.663993835449219
    9. 'x' → logprob: -5.163993835449219
    10. 'K' → logprob: -5.788993835449219

Token 392: ' card' (ID: 4766)
  Prédit: ' card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.9245403409004211
    2. 'card' → logprob: -1.0495402812957764
    3. ' line' → logprob: -2.6745402812957764
    4. 'k' → logprob: -3.1745402812957764
    5. 'line' → logprob: -3.5495402812957764
    6. 'l' → logprob: -3.7995402812957764
    7. ' length' → logprob: -3.9245402812957764
    8. 'length' → logprob: -4.0495405197143555
    9. ' k' → logprob: -4.1745405197143555
    10. ' l' → logprob: -4.5495405197143555

Token 393: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2787054181098938
    2. ' a' → logprob: -2.903705358505249
    3. ' the' → logprob: -2.903705358505249
    4. ' minimal' → logprob: -3.278705358505249
    5. 'the' → logprob: -3.653705358505249
    6. 'k' → logprob: -3.903705358505249
    7. 'a' → logprob: -4.403705596923828
    8. 't' → logprob: -5.153705596923828
    9. ' k' → logprob: -5.153705596923828
    10. 'minimal' → logprob: -5.528705596923828

Token 394: ' a' (ID: 261)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5142503976821899
    2. ' a' → logprob: -1.63925039768219
    3. ' minimal' → logprob: -2.6392502784729004
    4. 'the' → logprob: -2.7642502784729004
    5. 'a' → logprob: -3.1392502784729004
    6. ' lines' → logprob: -5.0142502784729
    7. ' k' → logprob: -5.5142502784729
    8. ' for' → logprob: -6.1392502784729
    9. 'minimal' → logprob: -6.1392502784729
    10. 'k' → logprob: -6.1392502784729

Token 395: ' line' (ID: 2543)
  Prédit: ' minimal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimal' → logprob: -0.52580326795578
    2. ' line' → logprob: -1.5258033275604248
    3. 'line' → logprob: -2.650803327560425
    4. 'minimal' → logprob: -3.150803327560425
    5. 'min' → logprob: -3.900803327560425
    6. 'minimum' → logprob: -4.775803089141846
    7. ' minimum' → logprob: -5.025803089141846
    8. ' min' → logprob: -5.150803089141846
    9. ' set' → logprob: -5.150803089141846
    10. 'possible' → logprob: -5.525803089141846

Token 396: ' and' (ID: 326)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' with' → logprob: -1.4746829271316528
    2. ' that' → logprob: -1.5996829271316528
    3. 's' → logprob: -2.4746828079223633
    4. 'with' → logprob: -2.5996828079223633
    5. 'that' → logprob: -2.8496828079223633
    6. ' s' → logprob: -2.9746828079223633
    7. ',' → logprob: -3.2246828079223633
    8. '_lines' → logprob: -3.7246828079223633
    9. '_sets' → logprob: -3.8496828079223633
    10. ' of' → logprob: -3.9746828079223633

Token 397: ' assign' (ID: 14975)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5515614151954651
    2. ' a' → logprob: -1.5515613555908203
    3. 'for' → logprob: -3.4265613555908203
    4. 'numbers' → logprob: -3.5515613555908203
    5. ' its' → logprob: -4.17656135559082
    6. 'an' → logprob: -4.42656135559082
    7. ' an' → logprob: -4.42656135559082
    8. 'the' → logprob: -4.42656135559082
    9. ' numbers' → logprob: -4.55156135559082
    10. ' for' → logprob: -4.67656135559082

Token 398: ' finishing' (ID: 34631)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.8820220232009888
    2. ' numbers' → logprob: -1.8820220232009888
    3. ' minimal' → logprob: -2.132021903991699
    4. 'numbers' → logprob: -2.632021903991699
    5. 'called' → logprob: -2.882021903991699
    6. 'a' → logprob: -2.882021903991699
    7. ' the' → logprob: -3.757021903991699
    8. ' called' → logprob: -3.882021903991699
    9. ' its' → logprob: -4.132021903991699
    10. ' to' → logprob: -4.382021903991699

Token 399: ' times' (ID: 4238)
  Prédit: '_times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_times' → logprob: -0.5395333170890808
    2. '_time' → logprob: -1.6645333766937256
    3. 'times' → logprob: -2.1645333766937256
    4. 'time' → logprob: -2.6645333766937256
    5. '_numbers' → logprob: -4.0395331382751465
    6. ' times' → logprob: -4.6645331382751465
    7. '_sets' → logprob: -5.9145331382751465
    8. 'numbers' → logprob: -5.9145331382751465
    9. ' time' → logprob: -6.6645331382751465
    10. '_lines' → logprob: -6.6645331382751465

Token 400: ' (' (ID: 350)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.046900227665901184
    2. '=' → logprob: -4.421900272369385
    3. '       ' → logprob: -5.046900272369385
    4. ',' → logprob: -5.046900272369385
    5. ' for' → logprob: -5.171900272369385
    6. 'for' → logprob: -5.671900272369385
    7. '.' → logprob: -5.796900272369385
    8. '   ' → logprob: -6.171900272369385
    9. '#' → logprob: -6.796900272369385
    10. '...' → logprob: -7.296900272369385

Token 401: 'the' (ID: 3086)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.006093504372984171
    2. ' )' → logprob: -6.506093502044678
    3. '),' → logprob: -6.506093502044678
    4. '=' → logprob: -7.381093502044678
    5. ' =' → logprob: -8.006093978881836
    6. ').' → logprob: -8.756093978881836
    7. ')
' → logprob: -8.881093978881836
    8. 'cards' → logprob: -8.881093978881836
    9. '[' → logprob: -9.131093978881836
    10. ',' → logprob: -9.131093978881836

Token 402: ' max' (ID: 2999)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5590063333511353
    2. ' )' → logprob: -2.0590062141418457
    3. ' numbers' → logprob: -2.4340062141418457
    4. ' =' → logprob: -2.5590062141418457
    5. ' minimal' → logprob: -2.6840062141418457
    6. ' calls' → logprob: -3.5590062141418457
    7. ' sets' → logprob: -3.6840062141418457
    8. ' called' → logprob: -3.6840062141418457
    9. ' call' → logprob: -3.8090062141418457
    10. ' lines' → logprob: -3.8090062141418457

Token 403: ' called' (ID: 4358)
  Prédit: '_called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_called' → logprob: -1.0049004554748535
    2. 'called' → logprob: -1.6299004554748535
    3. ' called' → logprob: -2.0049004554748535
    4. '_' → logprob: -2.7549004554748535
    5. '_call' → logprob: -2.8799004554748535
    6. '_number' → logprob: -3.3799004554748535
    7. ' number' → logprob: -3.7549004554748535
    8. 'call' → logprob: -4.2549004554748535
    9. ')' → logprob: -4.3799004554748535
    10. '_numbers' → logprob: -4.5049004554748535

Token 404: ' number' (ID: 2086)
  Prédit: ' number'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' number' → logprob: -1.2163699865341187
    2. ' numbers' → logprob: -1.2163699865341187
    3. '_numbers' → logprob: -1.9663699865341187
    4. 'number' → logprob: -2.591370105743408
    5. 'numbers' → logprob: -2.716370105743408
    6. ')' → logprob: -3.091370105743408
    7. '_number' → logprob: -3.341370105743408
    8. '_' → logprob: -4.841370105743408
    9. ' line' → logprob: -5.216370105743408
    10. '   ' → logprob: -5.341370105743408

Token 405: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11271005868911743
    2. 's' → logprob: -2.6127099990844727
    3. ' for' → logprob: -4.737709999084473
    4. ' )' → logprob: -4.737709999084473
    5. 'for' → logprob: -5.987709999084473
    6. ' needed' → logprob: -6.237709999084473
    7. ' =' → logprob: -6.362709999084473
    8. ' required' → logprob: -6.487709999084473
    9. ' per' → logprob: -7.112709999084473
    10. ' of' → logprob: -7.112709999084473

Token 406: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.33935946226119995
    2. ' that' → logprob: -1.8393595218658447
    3. 'the' → logprob: -2.5893595218658447
    4. 'line' → logprob: -4.089359283447266
    5. ' the' → logprob: -4.589359283447266
    6. 'its' → logprob: -4.714359283447266
    7. ' line' → logprob: -5.089359283447266
    8. ' its' → logprob: -5.714359283447266
    9. ' lines' → logprob: -6.089359283447266
    10. 'cl' → logprob: -6.214359283447266

Token 407: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.5251408219337463
    2. ' line' → logprob: -0.9001408219337463
    3. ' set' → logprob: -7.275140762329102
    4. 'set' → logprob: -7.400140762329102
    5. ')' → logprob: -8.900140762329102
    6. 'card' → logprob: -9.150140762329102
    7. ' card' → logprob: -9.775140762329102
    8. '
' → logprob: -10.025140762329102
    9. ' chosen' → logprob: -10.025140762329102
    10. ' sequence' → logprob: -10.275140762329102

Token 408: '),
' (ID: 2313)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01251812744885683
    2. ' )' → logprob: -5.137517929077148
    3. 's' → logprob: -5.887517929077148
    4. '),' → logprob: -7.012517929077148
    5. '   ' → logprob: -7.637517929077148
    6. ').' → logprob: -7.762517929077148
    7. '       ' → logprob: -7.887517929077148
    8. '#' → logprob: -8.512517929077148
    9. ' for' → logprob: -8.512517929077148
    10. ')
' → logprob: -8.512517929077148

Token 409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12588240206241608
    2. '        ' → logprob: -2.875882387161255
    3. '#' → logprob: -3.875882387161255
    4. '           ' → logprob: -4.625882625579834
    5. ' ' → logprob: -4.750882625579834
    6. ' and' → logprob: -4.875882625579834
    7. ' but' → logprob: -5.625882625579834
    8. '        
' → logprob: -6.000882625579834
    9. ' #' → logprob: -6.500882625579834
    10. ' which' → logprob: -6.625882625579834

Token 410: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20562151074409485
    2. '#' (adapté à ' #') → logprob: -1.7056214809417725
    3. '
' → logprob: -6.455621719360352
    4. '           ' → logprob: -6.955621719360352
    5. '        ' → logprob: -7.830621719360352
    6. ' and' → logprob: -8.580621719360352
    7. ' #' → logprob: -8.705621719360352
    8. ' but' → logprob: -8.955621719360352
    9. '        
' → logprob: -8.955621719360352
    10. 'and' → logprob: -9.205621719360352

Token 411: ' such' (ID: 2238)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.10609886050224304
    2. '       ' → logprob: -2.3560988903045654
    3. 'and' → logprob: -5.606098651885986
    4. ' and' → logprob: -7.481098651885986
    5. ' #' → logprob: -8.231099128723145
    6. 'which' → logprob: -8.481099128723145
    7. ' ensuring' → logprob: -8.856099128723145
    8. ' then' → logprob: -9.106099128723145
    9. 'with' → logprob: -9.106099128723145
    10. ' but' → logprob: -9.106099128723145

Token 412: ' that' (ID: 484)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.3803843855857849
    2. ' that' → logprob: -1.2553844451904297
    3. 'at' → logprob: -4.50538444519043
    4. '#' → logprob: -4.50538444519043
    5. '_that' → logprob: -4.88038444519043
    6. 'That' → logprob: -7.50538444519043
    7. 'hat' → logprob: -8.00538444519043
    8. '=' → logprob: -8.38038444519043
    9. ' is' → logprob: -9.63038444519043
    10. '       ' → logprob: -9.63038444519043

Token 413: ' finishing' (ID: 34631)
  Prédit: ' all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.5988335013389587
    2. ' finishing' → logprob: -2.0988335609436035
    3. ' card' → logprob: -2.2238335609436035
    4. ' for' → logprob: -2.2238335609436035
    5. 'for' → logprob: -2.9738335609436035
    6. 'all' → logprob: -4.4738335609436035
    7. ' times' → logprob: -4.7238335609436035
    8. 'card' → logprob: -4.8488335609436035
    9. 'fin' → logprob: -5.3488335609436035
    10. ' the' → logprob: -5.4738335609436035

Token 414: ' times' (ID: 4238)
  Prédit: '_times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_times' → logprob: -0.06842988729476929
    2. 'times' → logprob: -2.943429946899414
    3. '_time' → logprob: -5.068429946899414
    4. '_' → logprob: -5.818429946899414
    5. ' times' → logprob: -7.068429946899414
    6. ' =' → logprob: -7.068429946899414
    7. '       ' → logprob: -7.443429946899414
    8. '_t' → logprob: -7.693429946899414
    9. 'time' → logprob: -7.818429946899414
    10. '   ' → logprob: -8.193429946899414

Token 415: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.7768900990486145
    2. '[i' → logprob: -1.2768900394439697
    3. '[' → logprob: -1.9018900394439697
    4. '[c' → logprob: -2.5268900394439697
    5. ' for' → logprob: -4.776890277862549
    6. 'for' → logprob: -5.026890277862549
    7. 's' → logprob: -5.526890277862549
    8. ' of' → logprob: -5.651890277862549
    9. 'are' → logprob: -5.901890277862549
    10. '```' → logprob: -6.276890277862549

Token 416: ' non' (ID: 2893)
  Prédit: ' non'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' non' → logprob: -0.537628173828125
    2. 'non' → logprob: -0.912628173828125
    3. ' strictly' → logprob: -5.037628173828125
    4. 'strict' → logprob: -5.162628173828125
    5. 'in' → logprob: -6.912628173828125
    6. ' in' → logprob: -7.537628173828125
    7. ' increasing' → logprob: -8.287628173828125
    8. '<=' → logprob: -9.287628173828125
    9. '   ' → logprob: -9.662628173828125
    10. ' ' → logprob: -10.162628173828125

Token 417: 'de' (ID: 613)
  Prédit: 'de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'de' → logprob: -4.787507714354433e-05
    2. '-de' → logprob: -10.62504768371582
    3. '_de' → logprob: -11.62504768371582
    4. ' decreasing' → logprob: -11.75004768371582
    5. '   ' → logprob: -12.12504768371582
    6. 'strict' → logprob: -14.37504768371582
    7. 'dec' → logprob: -15.00004768371582
    8. 'De' → logprob: -17.00004768371582
    9. 'descending' → logprob: -17.00004768371582
    10. 'in' → logprob: -17.25004768371582

Token 418: 'creasing' (ID: 57252)
  Prédit: 'creasing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'creasing' → logprob: -4.320199877838604e-07
    2. 'crement' → logprob: -15.625
    3. 'cre' → logprob: -16.0
    4. 'creased' → logprob: -17.0
    5. '   ' → logprob: -17.25
    6. 'crease' → logprob: -17.375
    7. '
' → logprob: -17.625
    8. 'cr' → logprob: -18.625
    9. '```' → logprob: -18.625
    10. 'c' → logprob: -18.75

Token 419: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.093695044517517
    2. '       ' → logprob: -1.093695044517517
    3. '.' → logprob: -1.468695044517517
    4. ',
' → logprob: -3.7186951637268066
    5. ' and' → logprob: -3.8436951637268066
    6. ' ,' → logprob: -4.093695163726807
    7. ':' → logprob: -4.968695163726807
    8. '<|end|>' → logprob: -5.343695163726807
    9. 'def' → logprob: -5.593695163726807
    10. '        ' → logprob: -6.093695163726807

Token 420: ' card' (ID: 4766)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.24911285936832428
    2. ' range' → logprob: -1.874112844467163
    3. 'c' → logprob: -2.874112844467163
    4. 'card' → logprob: -4.749113082885742
    5. ' c' → logprob: -6.749113082885742
    6. ' card' → logprob: -8.249113082885742
    7. '[c' → logprob: -8.999113082885742
    8. 'cards' → logprob: -9.124113082885742
    9. '[' → logprob: -9.499113082885742
    10. '(range' → logprob: -9.874113082885742

Token 421: ' order' (ID: 2569)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.48023083806037903
    2. 'indices' → logprob: -1.8552308082580566
    3. '_indices' → logprob: -2.2302308082580566
    4. ' index' → logprob: -3.2302308082580566
    5. '_index' → logprob: -3.9802308082580566
    6. 's' → logprob: -3.9802308082580566
    7. '   ' → logprob: -4.355230808258057
    8. ' indices' → logprob: -4.730230808258057
    9. 'dex' → logprob: -6.230230808258057
    10. '       ' → logprob: -6.230230808258057

Token 422: ',
' (ID: 412)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36729303002357483
    2. '
' → logprob: -1.2422930002212524
    3. '<|end|>' → logprob: -4.492292881011963
    4. '        
' → logprob: -5.867292881011963
    5. ',' → logprob: -6.867292881011963
    6. ',
' → logprob: -6.992292881011963
    7. '#' → logprob: -7.492292881011963
    8. '<|end|>' → logprob: -7.617292881011963
    9. '.' → logprob: -8.117293357849121
    10. 'def' → logprob: -8.492293357849121

Token 423: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17307548224925995
    2. ' and' → logprob: -1.9230754375457764
    3. '
' → logprob: -5.0480756759643555
    4. '        ' → logprob: -6.5480756759643555
    5. '        
' → logprob: -6.6730756759643555
    6. '#' → logprob: -6.9230756759643555
    7. 'and' → logprob: -7.5480756759643555
    8. '           ' → logprob: -7.6730756759643555
    9. ' ' → logprob: -7.7980756759643555
    10. '<|end|>' → logprob: -8.173075675964355

Token 424: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23555679619312286
    2. ' and' → logprob: -1.6105568408966064
    3. 'and' → logprob: -4.985556602478027
    4. '#' (adapté à ' #') → logprob: -6.735556602478027
    5. '
' → logprob: -6.860556602478027
    6. '        
' → logprob: -8.610556602478027
    7. '        ' → logprob: -9.110556602478027
    8. '           ' → logprob: -9.110556602478027
    9. ' but' → logprob: -9.235556602478027
    10. ' while' → logprob: -9.360556602478027

Token 425: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07165154814720154
    2. '#' → logprob: -3.0716514587402344
    3. ' and' → logprob: -4.571651458740234
    4. '
' → logprob: -4.821651458740234
    5. 'and' → logprob: -6.571651458740234
    6. '        
' → logprob: -6.696651458740234
    7. ' #' → logprob: -7.696651458740234
    8. '           ' → logprob: -7.696651458740234
    9. '        ' → logprob: -8.946651458740234
    10. '   ' → logprob: -9.196651458740234

Token 426: ' total' (ID: 3609)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0702831745147705
    2. '#' → logprob: -1.4452831745147705
    3. ' lines' → logprob: -2.1952831745147705
    4. ' numbers' → logprob: -2.6952831745147705
    5. ' #' → logprob: -2.8202831745147705
    6. ' all' → logprob: -3.0702831745147705
    7. ' called' → logprob: -3.4452831745147705
    8. ' the' → logprob: -4.070282936096191
    9. 'def' → logprob: -4.445282936096191
    10. ' for' → logprob: -4.445282936096191

Token 427: ' unique' (ID: 5746)
  Prédit: '_length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.9557362198829651
    2. '_called' → logprob: -1.4557361602783203
    3. '_numbers' → logprob: -1.7057361602783203
    4. ' =' → logprob: -2.9557361602783203
    5. '_calls' → logprob: -3.0807361602783203
    6. '_len' → logprob: -4.20573616027832
    7. '_time' → logprob: -4.20573616027832
    8. 'called' → logprob: -4.20573616027832
    9. '_cards' → logprob: -4.58073616027832
    10. ' called' → logprob: -4.70573616027832

Token 428: ' numbers' (ID: 8663)
  Prédit: '_numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.07605785131454468
    2. '_called' → logprob: -3.7010579109191895
    3. 'numbers' → logprob: -3.9510579109191895
    4. ' numbers' → logprob: -4.3260579109191895
    5. '_' → logprob: -5.2010579109191895
    6. '_calls' → logprob: -5.9510579109191895
    7. '_lines' → logprob: -6.3260579109191895
    8. '_cards' → logprob: -6.7010579109191895
    9. 'called' → logprob: -6.8260579109191895
    10. ' called' → logprob: -7.2010579109191895

Token 429: ' used' (ID: 2061)
  Prédit: 'called'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'called' → logprob: -0.8956794738769531
    2. ' =' → logprob: -2.395679473876953
    3. ' called' → logprob: -2.520679473876953
    4. ')' → logprob: -2.520679473876953
    5. '_called' → logprob: -3.145679473876953
    6. 'used' → logprob: -3.395679473876953
    7. 'needed' → logprob: -3.520679473876953
    8. ' used' → logprob: -3.520679473876953
    9. '_used' → logprob: -3.770679473876953
    10. '=' → logprob: -4.020679473876953

Token 430: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22569403052330017
    2. '=' → logprob: -2.975693941116333
    3. ' is' → logprob: -3.225693941116333
    4. '<|end|>' → logprob: -3.350693941116333
    5. '.' → logprob: -4.725694179534912
    6. ' are' → logprob: -4.725694179534912
    7. ')' → logprob: -4.725694179534912
    8. ',' → logprob: -4.850694179534912
    9. ' to' → logprob: -5.475694179534912
    10. '#' → logprob: -5.475694179534912

Token 431: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.3626523017883301
    2. ' all' → logprob: -2.23765230178833
    3. 'called' → logprob: -2.48765230178833
    4. 'the' → logprob: -2.61265230178833
    5. ' the' → logprob: -4.73765230178833
    6. ' lines' → logprob: -4.86265230178833
    7. ' called' → logprob: -5.36265230178833
    8. 'call' → logprob: -5.48765230178833
    9. 'calling' → logprob: -5.73765230178833
    10. 'chosen' → logprob: -5.86265230178833

Token 432: ' chosen' (ID: 16180)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.7994270920753479
    2. 'lines' → logprob: -1.1744270324707031
    3. ' lines' → logprob: -1.5494270324707031
    4. 'card' → logprob: -4.549427032470703
    5. 'cards' → logprob: -4.674427032470703
    6. 'chosen' → logprob: -6.049427032470703
    7. 'assigned' → logprob: -6.674427032470703
    8. '[' → logprob: -7.424427032470703
    9. 'cl' → logprob: -7.674427032470703
    10. ' card' → logprob: -7.674427032470703

Token 433: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.44039684534072876
    2. '_lines' → logprob: -1.315396785736084
    3. 'lines' → logprob: -2.440396785736084
    4. '_' → logprob: -8.065397262573242
    5. '   ' → logprob: -8.940397262573242
    6. ' sets' → logprob: -10.065397262573242
    7. '_line' → logprob: -10.190397262573242
    8. ' ' → logprob: -10.690397262573242
    9. 'sets' → logprob: -10.690397262573242
    10. '[' → logprob: -10.940397262573242

Token 434: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19429990649223328
    2. '<|end|>' → logprob: -1.9442999362945557
    3. '
' → logprob: -4.694299697875977
    4. '<|end|>' → logprob: -4.944299697875977
    5. '        ' → logprob: -5.569299697875977
    6. '.' → logprob: -5.944299697875977
    7. ' is' → logprob: -5.944299697875977
    8. '#' → logprob: -6.194299697875977
    9. '        
' → logprob: -6.319299697875977
    10. ',' → logprob: -6.569299697875977

Token 435: ' minimal' (ID: 19957)
  Prédit: ' minimized'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' minimized' → logprob: -0.5453483462333679
    2. 'min' → logprob: -1.0453484058380127
    3. 'minimal' → logprob: -2.9203484058380127
    4. ' minimal' → logprob: -4.670348167419434
    5. 'len' → logprob: -6.045348167419434
    6. 'sum' → logprob: -6.295348167419434
    7. ' min' → logprob: -8.670348167419434
    8. '<=' → logprob: -9.295348167419434
    9. 'minimum' → logprob: -9.295348167419434
    10. ' ' → logprob: -9.420348167419434

Token 436: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19161085784435272
    2. '        
' → logprob: -2.191610813140869
    3. '
' → logprob: -3.191610813140869
    4. '<|end|>' → logprob: -4.316610813140869
    5. '#' → logprob: -5.816610813140869
    6. '        ' → logprob: -6.441610813140869
    7. 'def' → logprob: -6.816610813140869
    8. '        

' → logprob: -7.691610813140869
    9. '<|end|>' → logprob: -7.816610813140869
    10. 'import' → logprob: -8.066611289978027

Token 437: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9012649655342102
    2. '       ' → logprob: -1.1512649059295654
    3. '<|end|>' → logprob: -1.5262649059295654
    4. '#' → logprob: -3.4012649059295654
    5. '        
' → logprob: -4.7762651443481445
    6. 'def' → logprob: -5.4012651443481445
    7. ' ' → logprob: -5.5262651443481445
    8. '<|end|>' → logprob: -6.0262651443481445
    9. ' 
' → logprob: -6.2762651443481445
    10. '        ' → logprob: -6.6512651443481445

Token 438: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34563517570495605
    2. '
' → logprob: -2.095635175704956
    3. '<|end|>' → logprob: -2.595635175704956
    4. '#' → logprob: -3.345635175704956
    5. '        
' → logprob: -3.470635175704956
    6. '        ' → logprob: -4.595635414123535
    7. 'from' → logprob: -5.095635414123535
    8. '<|end|>' → logprob: -5.845635414123535
    9. ' ' → logprob: -6.220635414123535
    10. 'import' → logprob: -6.595635414123535

Token 439: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12366517633199692
    2. '#' → logprob: -2.7486650943756104
    3. '        
' → logprob: -3.8736650943756104
    4. '
' → logprob: -3.9986650943756104
    5. 'def' → logprob: -5.4986653327941895
    6. 'from' → logprob: -6.2486653327941895
    7. ' 
' → logprob: -6.7486653327941895
    8. 'import' → logprob: -6.7486653327941895
    9. '        ' → logprob: -7.1236653327941895
    10. ' #' → logprob: -7.2486653327941895

Token 440: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.43700918555259705
    2. 'from' → logprob: -1.3120092153549194
    3. '       ' → logprob: -2.81200909614563
    4. 'def' → logprob: -4.562009334564209
    5. 'import' → logprob: -5.187009334564209
    6. '
' → logprob: -5.437009334564209
    7. '#
' → logprob: -7.187009334564209
    8. 'used' → logprob: -7.312009334564209
    9. ' from' → logprob: -7.562009334564209
    10. '        
' → logprob: -7.562009334564209

Token 441: ' To' (ID: 2514)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8046205043792725
    2. '#' → logprob: -1.0546205043792725
    3. 'def' → logprob: -2.8046205043792725
    4. 'used' → logprob: -2.9296205043792725
    5. 'import' → logprob: -3.5546205043792725
    6. 'dp' → logprob: -4.304620742797852
    7. '       ' → logprob: -5.179620742797852
    8. 'min' → logprob: -5.554620742797852
    9. 'n' → logprob: -5.679620742797852
    10. 'chosen' → logprob: -5.679620742797852

Token 442: ' model' (ID: 2359)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.5076640248298645
    2. 'implement' → logprob: -2.0076639652252197
    3. 'ach' → logprob: -2.3826639652252197
    4. 'do' → logprob: -2.8826639652252197
    5. '#' → logprob: -3.0076639652252197
    6. ' implement' → logprob: -4.007664203643799
    7. ' solve' → logprob: -4.257664203643799
    8. 'find' → logprob: -4.632664203643799
    9. 'min' → logprob: -5.382664203643799
    10. '       ' → logprob: -5.507664203643799

Token 443: ' that' (ID: 484)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9799267053604126
    2. 'from' → logprob: -1.8549267053604126
    3. ' lines' → logprob: -2.104926586151123
    4. ' the' → logprob: -2.229926586151123
    5. 'import' → logprob: -3.354926586151123
    6. 'the' → logprob: -3.479926586151123
    7. ' subsets' → logprob: -3.604926586151123
    8. ' as' → logprob: -3.979926586151123
    9. ' from' → logprob: -4.229926586151123
    10. ' sets' → logprob: -4.479926586151123

Token 444: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2153920978307724
    2. ':' → logprob: -2.2153921127319336
    3. '<|end|>' → logprob: -3.4653921127319336
    4. '#' → logprob: -3.9653921127319336
    5. '<|end|>' → logprob: -4.715392112731934
    6. ',
' → logprob: -4.965392112731934
    7. 'import' → logprob: -5.340392112731934
    8. ' =' → logprob: -6.215392112731934
    9. '   ' → logprob: -6.215392112731934
    10. ':
' → logprob: -6.340392112731934

Token 445: ' build' (ID: 3024)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.30099961161613464
    2. 'from' → logprob: -2.300999641418457
    3. ' from' → logprob: -3.050999641418457
    4. 'import' → logprob: -3.675999641418457
    5. ' pass' → logprob: -3.675999641418457
    6. ' #' → logprob: -3.800999641418457
    7. ' lines' → logprob: -4.675999641418457
    8. '
' → logprob: -4.925999641418457
    9. 'pass' → logprob: -5.050999641418457
    10. 'dp' → logprob: -5.175999641418457

Token 446: ' all' (ID: 722)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5984475016593933
    2. ' an' → logprob: -1.973447561264038
    3. 'from' → logprob: -1.973447561264038
    4. 'a' → logprob: -3.223447561264038
    5. ' sets' → logprob: -3.348447561264038
    6. ' from' → logprob: -3.598447561264038
    7. 'import' → logprob: -3.598447561264038
    8. ' edges' → logprob: -4.223447322845459
    9. ' graph' → logprob: -5.098447322845459
    10. 'sets' → logprob: -5.723447322845459

Token 447: ' combinations' (ID: 43835)
  Prédit: '_lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.6578478813171387
    2. ' subsets' → logprob: -1.9078478813171387
    3. '_sets' → logprob: -2.4078478813171387
    4. ' lines' → logprob: -2.6578478813171387
    5. 'sub' → logprob: -3.5328478813171387
    6. 'possible' → logprob: -3.7828478813171387
    7. '_edges' → logprob: -4.157847881317139
    8. '_sub' → logprob: -4.282847881317139
    9. '_possible' → logprob: -4.282847881317139
    10. '_numbers' → logprob: -4.532847881317139

Token 448: ' candidate' (ID: 17098)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.4506750106811523
    2. ' of' → logprob: -1.9506750106811523
    3. '<|end|>' → logprob: -1.9506750106811523
    4. ' =' → logprob: -2.2006750106811523
    5. '(card' → logprob: -2.7006750106811523
    6. 'import' → logprob: -3.3256750106811523
    7. ' from' → logprob: -3.5756750106811523
    8. 'of' → logprob: -3.7006750106811523
    9. '<|end|>' → logprob: -3.8256750106811523
    10. 'for' → logprob: -3.8256750106811523

Token 449: ' finishing' (ID: 34631)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6808693408966064
    2. '_lines' → logprob: -0.9308693408966064
    3. ' =' → logprob: -3.0558693408966064
    4. '_sets' → logprob: -3.3058693408966064
    5. '_numbers' → logprob: -5.930869102478027
    6. 'sets' → logprob: -5.930869102478027
    7. '=[]' → logprob: -6.305869102478027
    8. '_lists' → logprob: -6.555869102478027
    9. '_cards' → logprob: -7.055869102478027
    10. '=' → logprob: -7.180869102478027

Token 450: ' times' (ID: 4238)
  Prédit: '_times'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_times' → logprob: -0.08508901298046112
    2. 'times' → logprob: -2.5850889682769775
    3. '_time' → logprob: -5.710089206695557
    4. ' times' → logprob: -6.335089206695557
    5. '_lines' → logprob: -7.460089206695557
    6. '_' → logprob: -8.710088729858398
    7. '_sets' → logprob: -8.835088729858398
    8. 'time' → logprob: -9.335088729858398
    9. '_set' → logprob: -11.335088729858398
    10. '   ' → logprob: -11.460088729858398

Token 451: ' by' (ID: 656)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3014862537384033
    2. '=' → logprob: -1.9264862537384033
    3. 's' → logprob: -3.6764862537384033
    4. ':' → logprob: -3.6764862537384033
    5. ',' → logprob: -4.551486015319824
    6. '=[]' → logprob: -4.676486015319824
    7. 'for' → logprob: -4.676486015319824
    8. '[' → logprob: -5.301486015319824
    9. '.' → logprob: -5.676486015319824
    10. '   ' → logprob: -5.801486015319824

Token 452: ' choosing' (ID: 20296)
  Prédit: 'back'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'back' → logprob: -1.9636595249176025
    2. 'card' → logprob: -1.9636595249176025
    3. 'enumer' → logprob: -1.9636595249176025
    4. 'iter' → logprob: -2.4636595249176025
    5. 'dfs' → logprob: -2.4636595249176025
    6. 'cards' → logprob: -2.8386595249176025
    7. 'product' → logprob: -2.8386595249176025
    8. 'it' → logprob: -2.9636595249176025
    9. 'search' → logprob: -3.3386595249176025
    10. 'cho' → logprob: -3.3386595249176025

Token 453: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.5682867169380188
    2. ' lines' → logprob: -1.568286657333374
    3. ' a' → logprob: -2.693286657333374
    4. 'lines' → logprob: -2.818286657333374
    5. 'one' → logprob: -2.943286657333374
    6. 'a' → logprob: -3.943286657333374
    7. ' line' → logprob: -5.068286895751953
    8. 'each' → logprob: -5.568286895751953
    9. ' each' → logprob: -5.818286895751953
    10. ' the' → logprob: -6.068286895751953

Token 454: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.6437075734138489
    2. 'line' → logprob: -0.7687075734138489
    3. 'cl' → logprob: -5.268707752227783
    4. ' of' → logprob: -5.768707752227783
    5. 'of' → logprob: -7.643707752227783
    6. ' cl' → logprob: -8.018707275390625
    7. '   ' → logprob: -8.393707275390625
    8. 'set' → logprob: -8.518707275390625
    9. ' set' → logprob: -8.518707275390625
    10. '[line' → logprob: -8.518707275390625

Token 455: ' per' (ID: 777)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.944701611995697
    2. '_' → logprob: -1.9447016716003418
    3. 'for' → logprob: -2.069701671600342
    4. ' and' → logprob: -2.194701671600342
    5. ',' → logprob: -2.444701671600342
    6. '<|end|>' → logprob: -3.194701671600342
    7. 'from' → logprob: -3.569701671600342
    8. ' from' → logprob: -4.194701671600342
    9. '=' → logprob: -4.819701671600342
    10. ')' → logprob: -4.944701671600342

Token 456: ' card' (ID: 4766)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.38687947392463684
    2. ' card' → logprob: -1.1368794441223145
    3. 'cards' → logprob: -13.011879920959473
    4. '	card' → logprob: -13.136879920959473
    5. ' cards' → logprob: -13.761879920959473
    6. '(card' → logprob: -14.386879920959473
    7. 'c' → logprob: -14.761879920959473
    8. 'range' → logprob: -14.761879920959473
    9. '_card' → logprob: -14.761879920959473
    10. ' ' → logprob: -14.761879920959473

Token 457: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 458: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9554855227470398
    2. '<|end|>' → logprob: -1.0804855823516846
    3. '
' → logprob: -1.7054855823516846
    4. 'from' → logprob: -3.7054855823516846
    5. ' from' → logprob: -4.0804853439331055
    6. '<|end|>' → logprob: -4.3304853439331055
    7. '#' → logprob: -4.5804853439331055
    8. '        
' → logprob: -4.5804853439331055
    9. '        ' → logprob: -5.4554853439331055
    10. 'import' → logprob: -5.5804853439331055

Token 459: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32440608739852905
    2. '<|end|>' → logprob: -1.8244061470031738
    3. '
' → logprob: -2.824406147003174
    4. '#' → logprob: -3.949406147003174
    5. 'from' → logprob: -4.449406147003174
    6. 'import' → logprob: -5.074406147003174
    7. '        
' → logprob: -5.324406147003174
    8. '<|end|>' → logprob: -5.449406147003174
    9. '        ' → logprob: -6.199406147003174
    10. ' from' → logprob: -6.199406147003174

Token 460: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3279084265232086
    2. '<|end|>' → logprob: -1.4529083967208862
    3. '
' → logprob: -4.327908515930176
    4. '#' → logprob: -4.452908515930176
    5. '<|end|>' → logprob: -4.952908515930176
    6. 'from' → logprob: -5.327908515930176
    7. 'import' → logprob: -5.952908515930176
    8. '        ' → logprob: -6.327908515930176
    9. '        
' → logprob: -6.452908515930176
    10. '```' → logprob: -6.952908515930176

Token 461: ' #' (ID: 1069)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.7916848659515381
    2. '#' (adapté à ' #') → logprob: -1.416684865951538
    3. '       ' → logprob: -1.916684865951538
    4. ' from' → logprob: -2.791684865951538
    5. 'import' → logprob: -3.166684865951538
    6. '
' → logprob: -3.916684865951538
    7. '        
' → logprob: -5.291685104370117
    8. 'min' → logprob: -5.541685104370117
    9. 'for' → logprob: -5.666685104370117
    10. ' #' → logprob: -5.666685104370117

Token 462: ' But' (ID: 3072)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.06932321190834045
    2. 'import' → logprob: -3.0693233013153076
    3. '#' → logprob: -4.6943230628967285
    4. ' from' → logprob: -5.1943230628967285
    5. 'for' → logprob: -6.3193230628967285
    6. 'min' → logprob: -6.9443230628967285
    7. '       ' → logprob: -6.9443230628967285
    8. 'n' → logprob: -7.9443230628967285
    9. 'def' → logprob: -8.069323539733887
    10. 'best' → logprob: -8.069323539733887

Token 463: ' possibly' (ID: 14836)
  Prédit: ' P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' P' → logprob: -0.2737014889717102
    2. ' M' → logprob: -2.5237014293670654
    3. 'P' → logprob: -2.7737014293670654
    4. ' len' → logprob: -4.0237016677856445
    5. ' True' → logprob: -4.3987016677856445
    6. 'M' → logprob: -4.3987016677856445
    7. 'import' → logprob: -4.5237016677856445
    8. '#' → logprob: -4.5237016677856445
    9. 'len' → logprob: -4.8987016677856445
    10. ' not' → logprob: -5.3987016677856445

Token 464: ' huge' (ID: 9560)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.0991923809051514
    2. '       ' → logprob: -1.2241923809051514
    3. ',' → logprob: -2.8491923809051514
    4. 'the' → logprob: -2.8491923809051514
    5. 'from' → logprob: -3.3491923809051514
    6. 'import' → logprob: -3.3491923809051514
    7. ' from' → logprob: -3.4741923809051514
    8. '   ' → logprob: -3.5991923809051514
    9. ' for' → logprob: -3.7241923809051514
    10. ' too' → logprob: -4.0991926193237305

Token 465: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 466: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 467: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.404069721698761
    2. '<|end|>' → logprob: -1.2790696620941162
    3. '
' → logprob: -3.529069662094116
    4. '#' (adapté à ' #') → logprob: -4.154069900512695
    5. '<|end|>' → logprob: -5.529069900512695
    6. '        
' → logprob: -6.279069900512695
    7. ' ' → logprob: -6.779069900512695
    8. '        ' → logprob: -7.279069900512695
    9. '...' → logprob: -7.654069900512695
    10. ' 
' → logprob: -8.779069900512695

Token 468: ' Because' (ID: 13602)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16477888822555542
    2. '#' → logprob: -2.1647789478302
    3. 'from' → logprob: -5.039778709411621
    4. '
' → logprob: -5.289778709411621
    5. 'for' → logprob: -5.664778709411621
    6. '        
' → logprob: -5.789778709411621
    7. '   ' → logprob: -6.164778709411621
    8. ' for' → logprob: -6.289778709411621
    9. 'def' → logprob: -6.289778709411621
    10. '        ' → logprob: -6.414778709411621

Token 469: ' P' (ID: 398)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.7370818257331848
    2. ' M' → logprob: -1.48708176612854
    3. ' each' → logprob: -2.73708176612854
    4. 'each' → logprob: -2.86208176612854
    5. ' lines' → logprob: -3.48708176612854
    6. ' the' → logprob: -3.86208176612854
    7. ' of' → logprob: -4.237082004547119
    8. 'the' → logprob: -4.237082004547119
    9. ' numbers' → logprob: -4.487082004547119
    10. ' for' → logprob: -4.487082004547119

Token 470: '<=' (ID: 16672)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.8152766823768616
    2. '<|end|>' → logprob: -1.1902766227722168
    3. ' can' → logprob: -2.190276622772217
    4. '=' → logprob: -3.815276622772217
    5. ' >' → logprob: -3.815276622772217
    6. '>' → logprob: -4.065276622772217
    7. ' and' → logprob: -4.815276622772217
    8. '
' → logprob: -4.815276622772217
    9. ',' → logprob: -4.940276622772217
    10. ' may' → logprob: -5.315276622772217

Token 471: '4' (ID: 19)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.9119181632995605
    2. '100' → logprob: -1.4119181632995605
    3. '50' → logprob: -1.6619181632995605
    4. '20' → logprob: -2.9119181632995605
    5. '5' → logprob: -3.5369181632995605
    6. '30' → logprob: -4.4119181632995605
    7. '15' → logprob: -4.4119181632995605
    8. '25' → logprob: -4.4119181632995605
    9. '7' → logprob: -4.9119181632995605
    10. '9' → logprob: -5.0369181632995605

Token 472: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5829479694366455
    2. '       ' → logprob: -1.0829479694366455
    3. '<|end|>' → logprob: -2.4579479694366455
    4. '        
' → logprob: -4.957947731018066
    5. '<|end|>' → logprob: -5.707947731018066
    6. ',' → logprob: -6.332947731018066
    7. '#' → logprob: -6.457947731018066
    8. ',
' → logprob: -6.957947731018066
    9. '   ' → logprob: -7.457947731018066
    10. '        ' → logprob: -8.457947731018066

Token 473: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.45182204246520996
    2. ' M' → logprob: -2.70182204246521
    3. ' and' → logprob: -2.70182204246521
    4. ' continue' → logprob: -2.95182204246521
    5. 'and' → logprob: -3.20182204246521
    6. 'we' → logprob: -3.45182204246521
    7. 'continue' → logprob: -3.70182204246521
    8. ' we' → logprob: -3.95182204246521
    9. '#' → logprob: -4.451822280883789
    10. ' lines' → logprob: -4.576822280883789

Token 474: '<=' (ID: 16672)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -1.0203969478607178
    2. '<=' → logprob: -1.5203969478607178
    3. '<|end|>' → logprob: -1.7703969478607178
    4. '=' → logprob: -2.7703969478607178
    5. '+' → logprob: -2.8953969478607178
    6. '   ' → logprob: -3.1453969478607178
    7. ' <=' → logprob: -3.5203969478607178
    8. '       ' → logprob: -4.770397186279297
    9. ')' → logprob: -5.145397186279297
    10. '<' → logprob: -5.270397186279297

Token 475: '4' (ID: 19)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.8359968662261963
    2. '5' → logprob: -1.7109968662261963
    3. '7' → logprob: -2.2109968662261963
    4. '8' → logprob: -2.3359968662261963
    5. '6' → logprob: -2.4609968662261963
    6. '4' → logprob: -3.2109968662261963
    7. '9' → logprob: -3.8359968662261963
    8. '20' → logprob: -4.335996627807617
    9. '15' → logprob: -4.835996627807617
    10. '12' → logprob: -5.335996627807617

Token 476: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4624468684196472
    2. '
' → logprob: -1.587446928024292
    3. '<|end|>' → logprob: -2.462446928024292
    4. '#' → logprob: -3.337446928024292
    5. ',' → logprob: -4.212446689605713
    6. '<|end|>' → logprob: -4.587446689605713
    7. '        
' → logprob: -4.962446689605713
    8. ',
' → logprob: -6.087446689605713
    9. 'def' → logprob: -6.337446689605713
    10. '   ' → logprob: -6.462446689605713

Token 477: ' total' (ID: 3609)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.3384751081466675
    2. 'continue' → logprob: -1.5884751081466675
    3. 'pass' → logprob: -2.463475227355957
    4. 'we' → logprob: -2.463475227355957
    5. ' continue' → logprob: -2.588475227355957
    6. ' we' → logprob: -3.088475227355957
    7. ' pass' → logprob: -3.213475227355957
    8. '       ' → logprob: -3.588475227355957
    9. 'import' → logprob: -3.838475227355957
    10. ' lines' → logprob: -4.088475227355957

Token 478: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.4966420829296112
    2. 'lines' → logprob: -1.3716421127319336
    3. '_lines' → logprob: -2.7466421127319336
    4. 'tokens' → logprob: -3.4966421127319336
    5. '   ' → logprob: -4.996642112731934
    6. 'number' → logprob: -5.621642112731934
    7. 'possible' → logprob: -5.621642112731934
    8. 'cards' → logprob: -5.746642112731934
    9. ' tokens' → logprob: -5.871642112731934
    10. '```' → logprob: -5.871642112731934

Token 479: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18212999403476715
    2. '=' → logprob: -1.807129979133606
    3. ' <=' → logprob: -7.557129859924316
    4. ' is' → logprob: -7.682129859924316
    5. ')' → logprob: -7.932129859924316
    6. '<=' → logprob: -8.182129859924316
    7. ':' → logprob: -9.557129859924316
    8. '   ' → logprob: -10.057129859924316
    9. '_count' → logprob: -10.057129859924316
    10. 'max' → logprob: -10.057129859924316

Token 480: ' max' (ID: 2999)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10327613353729248
    2. '(' → logprob: -3.103276252746582
    3. '10' → logprob: -3.103276252746582
    4. ' ' → logprob: -4.978276252746582
    5. ' (' → logprob: -7.853276252746582
    6. '=' → logprob: -8.353276252746582
    7. '4' → logprob: -8.728276252746582
    8. '   ' → logprob: -9.103276252746582
    9. '18' → logprob: -9.603276252746582
    10. 'M' → logprob: -9.728276252746582

Token 481: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2456263303756714
    2. ' =' → logprob: -1.6206263303756714
    3. '20' → logprob: -4.745626449584961
    4. '   ' → logprob: -5.495626449584961
    5. ' ' → logprob: -6.245626449584961
    6. '(' → logprob: -6.745626449584961
    7. '16' → logprob: -6.870626449584961
    8. '24' → logprob: -7.370626449584961
    9. '8' → logprob: -7.745626449584961
    10. '       ' → logprob: -7.870626449584961

Token 482: '2' (ID: 17)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '20' → logprob: -0.21645940840244293
    2. '26' → logprob: -2.3414595127105713
    3. '=' → logprob: -3.2164595127105713
    4. '(' → logprob: -3.5914595127105713
    5. '24' → logprob: -4.841459274291992
    6. '16' → logprob: -5.466459274291992
    7. ' ' → logprob: -5.466459274291992
    8. '10' → logprob: -5.841459274291992
    9. '18' → logprob: -5.966459274291992
    10. ' =' → logprob: -6.341459274291992

Token 483: '*M' (ID: 151552)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.41092923283576965
    2. '*M' → logprob: -1.1609292030334473
    3. ' *' → logprob: -4.535929203033447
    4. '*m' → logprob: -4.660929203033447
    5. '*(' → logprob: -5.785929203033447
    6. '*C' → logprob: -9.785929679870605
    7. '*A' → logprob: -9.910929679870605
    8. '0' → logprob: -9.910929679870605
    9. '**' → logprob: -10.035929679870605
    10. '+' → logprob: -10.285929679870605

Token 484: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.0974169969558716
    2. '       ' → logprob: -1.2224169969558716
    3. '*' → logprob: -2.097416877746582
    4. ')' → logprob: -3.097416877746582
    5. '**' → logprob: -3.222416877746582
    6. '
' → logprob: -3.347416877746582
    7. '   ' → logprob: -3.472416877746582
    8. ' lines' → logprob: -4.222416877746582
    9. ' +' → logprob: -4.472416877746582
    10. 'import' → logprob: -4.597416877746582

Token 485: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00013011827832087874
    2. '4' → logprob: -9.750129699707031
    3. ' ' → logprob: -10.125129699707031
    4. '
' → logprob: -11.000129699707031
    5. '6' → logprob: -12.625129699707031
    6. '1' → logprob: -12.625129699707031
    7. '3' → logprob: -13.125129699707031
    8. '8' → logprob: -13.750129699707031
    9. '```' → logprob: -14.000129699707031
    10. '(' → logprob: -14.375129699707031

Token 486: '=' (ID: 28)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 487: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -13.87500286102295
    3. ' ' → logprob: -14.12500286102295
    4. '```' → logprob: -15.12500286102295
    5. '0' → logprob: -15.62500286102295
    6. '=' → logprob: -16.250001907348633
    7. '6' → logprob: -16.375001907348633
    8. '8' → logprob: -17.125001907348633
    9. '   ' → logprob: -17.250001907348633
    10. '2' → logprob: -17.375001907348633

Token 488: '.
' (ID: 558)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49158912897109985
    2. ',' → logprob: -1.866589069366455
    3. '<|end|>' → logprob: -2.991589069366455
    4. ' lines' → logprob: -3.116589069366455
    5. '.' → logprob: -3.241589069366455
    6. '#' → logprob: -3.491589069366455
    7. ',
' → logprob: -3.616589069366455
    8. '       ' → logprob: -3.991589069366455
    9. 'import' → logprob: -5.616589069366455
    10. '<|end|>' → logprob: -5.866589069366455

Token 489: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3619441092014313
    2. '<|end|>' → logprob: -1.3619440793991089
    3. '#' → logprob: -3.7369441986083984
    4. '<|end|>' → logprob: -4.486944198608398
    5. '
' → logprob: -5.111944198608398
    6. '...' → logprob: -6.361944198608398
    7. ',' → logprob: -6.736944198608398
    8. '        
' → logprob: -6.861944198608398
    9. '.' → logprob: -7.236944198608398
    10. ' ' → logprob: -8.486944198608398

Token 490: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08182242512702942
    2. '<|end|>' → logprob: -2.831822395324707
    3. '#' → logprob: -4.831822395324707
    4. '
' → logprob: -5.456822395324707
    5. '<|end|>' → logprob: -5.456822395324707
    6. ')' → logprob: -7.331822395324707
    7. '...' → logprob: -7.456822395324707
    8. ',' → logprob: -7.706822395324707
    9. '        
' → logprob: -8.081822395324707
    10. ' ' → logprob: -8.206822395324707

Token 491: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0578957200050354
    2. '<|end|>' → logprob: -3.5578956604003906
    3. '
' → logprob: -4.307895660400391
    4. '#' → logprob: -4.557895660400391
    5. '        
' → logprob: -6.432895660400391
    6. '<|end|>' → logprob: -6.557895660400391
    7. '   ' → logprob: -8.80789566040039
    8. '...' → logprob: -9.05789566040039
    9. '```' → logprob: -9.30789566040039
    10. '           ' → logprob: -10.05789566040039

Token 492: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10246822237968445
    2. '#' (adapté à ' #') → logprob: -2.602468252182007
    3. '
' → logprob: -4.477468013763428
    4. '        
' → logprob: -5.352468013763428
    5. ' #' → logprob: -6.477468013763428
    6. 'from' → logprob: -7.102468013763428
    7. 'for' → logprob: -7.477468013763428
    8. 'import' → logprob: -7.727468013763428
    9. '<|end|>' → logprob: -7.727468013763428
    10. '   ' → logprob: -7.852468013763428

Token 493: ' We'll' (ID: 46830)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.622109055519104
    2. '#' → logprob: -1.247109055519104
    3. 'dp' → logprob: -3.4971089363098145
    4. 'import' → logprob: -3.7471089363098145
    5. 'best' → logprob: -3.7471089363098145
    6. 'min' → logprob: -3.8721089363098145
    7. 'for' → logprob: -4.1221089363098145
    8. '       ' → logprob: -4.2471089363098145
    9. 'used' → logprob: -4.7471089363098145
    10. 'def' → logprob: -4.8721089363098145

Token 494: ' proceed' (ID: 18988)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.1977609395980835
    2. 'from' → logprob: -1.9477609395980835
    3. 'continue' → logprob: -3.947761058807373
    4. 'try' → logprob: -5.072761058807373
    5. 'use' → logprob: -5.947761058807373
    6. '       ' → logprob: -6.447761058807373
    7. 'def' → logprob: -6.697761058807373
    8. ' from' → logprob: -6.822761058807373
    9. '   ' → logprob: -6.947761058807373
    10. ' import' → logprob: -7.197761058807373

Token 495: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -1.1200926303863525
    2. 'from' → logprob: -1.9950926303863525
    3. ' with' → logprob: -2.1200926303863525
    4. 'def' → logprob: -2.3700926303863525
    5. ' by' → logprob: -2.3700926303863525
    6. ' to' → logprob: -2.4950926303863525
    7. 'import' → logprob: -2.9950926303863525
    8. 'to' → logprob: -3.2450926303863525
    9. 'by' → logprob: -3.3700926303863525
    10. '   ' → logprob: -4.620092391967773

Token 496: ' a' (ID: 261)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.3237508535385132
    2. 'from' → logprob: -1.3237508535385132
    3. 'back' → logprob: -4.948750972747803
    4. 'bit' → logprob: -6.823750972747803
    5. 'dfs' → logprob: -6.823750972747803
    6. 'dp' → logprob: -7.448750972747803
    7. ' import' → logprob: -8.823750495910645
    8. 'a' → logprob: -9.073750495910645
    9. 'def' → logprob: -9.823750495910645
    10. ' from' → logprob: -10.073750495910645

Token 497: ' branch' (ID: 14338)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5912294387817383
    2. 'from' → logprob: -1.3412294387817383
    3. 'bit' → logprob: -3.0912294387817383
    4. 'back' → logprob: -3.3412294387817383
    5. 'dfs' → logprob: -3.5912294387817383
    6. 'b' → logprob: -3.8412294387817383
    7. 'import' → logprob: -3.9662294387817383
    8. 'def' → logprob: -4.341229438781738
    9. 'bottom' → logprob: -5.716229438781738
    10. ' bit' → logprob: -6.091229438781738

Token 498: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.30490610003471375
    2. ' and' → logprob: -1.5549061298370361
    3. '   ' → logprob: -3.929906129837036
    4. '_and' → logprob: -4.679905891418457
    5. '       ' → logprob: -4.929905891418457
    6. '    ' → logprob: -4.929905891418457
    7. '_' → logprob: -6.179905891418457
    8. ' _' → logprob: -6.554905891418457
    9. '           ' → logprob: -7.304905891418457
    10. '        ' → logprob: -7.429905891418457

Token 499: ' bound' (ID: 11608)
  Prédit: 'bound'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bound' → logprob: -1.747814349073451e-05
    2. ' bound' → logprob: -12.000017166137695
    3. '_bound' → logprob: -12.500017166137695
    4. '-bound' → logprob: -12.750017166137695
    5. 'branch' → logprob: -13.000017166137695
    6. 'cut' → logprob: -13.375017166137695
    7. 'back' → logprob: -15.000017166137695
    8. 'bind' → logprob: -15.625017166137695
    9. 'Bound' → logprob: -16.000017166137695
    10. 'bounds' → logprob: -16.125017166137695

Token 500: ' search' (ID: 3684)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21171705424785614
    2. '   ' → logprob: -2.586717128753662
    3. ' ' → logprob: -3.211717128753662
    4. 'def' → logprob: -4.211717128753662
    5. '(' → logprob: -4.461717128753662
    6. ' :' → logprob: -4.711717128753662
    7. '       ' → logprob: -4.711717128753662
    8. '    ' → logprob: -4.836717128753662
    9. '():' → logprob: -5.586717128753662
    10. ',' → logprob: -5.961717128753662

Token 501: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4825461804866791
    2. '
' → logprob: -1.2325462102890015
    3. '   ' → logprob: -3.232546091079712
    4. 'def' → logprob: -3.732546091079712
    5. '        
' → logprob: -4.607546329498291
    6. 'import' → logprob: -4.982546329498291
    7. ',' → logprob: -5.357546329498291
    8. 'from' → logprob: -6.607546329498291
    9. '    
' → logprob: -6.857546329498291
    10. ':' → logprob: -6.857546329498291

Token 502: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06732414662837982
    2. '
' → logprob: -3.317324161529541
    3. 'def' → logprob: -4.317324161529541
    4. '        
' → logprob: -4.692324161529541
    5. '<|end|>' → logprob: -6.067324161529541
    6. 'import' → logprob: -6.817324161529541
    7. '        ' → logprob: -6.817324161529541
    8. '   ' → logprob: -7.067324161529541
    9. 'from' → logprob: -8.567323684692383
    10. '    ' → logprob: -8.567323684692383

Token 503: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18059362471103668
    2. 'def' → logprob: -2.180593729019165
    3. '
' → logprob: -3.555593729019165
    4. 'from' → logprob: -4.555593490600586
    5. '   ' → logprob: -5.805593490600586
    6. '        
' → logprob: -5.805593490600586
    7. 'visited' → logprob: -6.305593490600586
    8. ' from' → logprob: -6.805593490600586
    9. 'import' → logprob: -7.180593490600586
    10. 'max' → logprob: -7.430593490600586

Token 504: ' For' (ID: 2214)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.21360449492931366
    2. ' def' → logprob: -2.83860445022583
    3. '       ' → logprob: -2.96360445022583
    4. ' used' → logprob: -3.83860445022583
    5. 'from' → logprob: -3.96360445022583
    6. '   ' → logprob: -4.08860445022583
    7. ' from' → logprob: -4.96360445022583
    8. '
' → logprob: -5.46360445022583
    9. 'visited' → logprob: -5.71360445022583
    10. 'import' → logprob: -5.83860445022583

Token 505: ' each' (ID: 2454)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.24049437046051025
    2. ' card' → logprob: -1.7404943704605103
    3. 'c' → logprob: -3.6154942512512207
    4. 'card' → logprob: -4.990494251251221
    5. ' ' → logprob: -6.615494251251221
    6. ' p' → logprob: -6.740494251251221
    7. ' depth' → logprob: -7.865494251251221
    8. ' _' → logprob: -8.490494728088379
    9. ' idx' → logprob: -8.490494728088379
    10. '   ' → logprob: -8.615494728088379

Token 506: ' card' (ID: 4766)
  Prédit: ' card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' card' → logprob: -0.0781182199716568
    2. 'card' → logprob: -2.828118324279785
    3. ' c' → logprob: -4.203118324279785
    4. 'c' → logprob: -7.453118324279785
    5. ' next' → logprob: -8.328118324279785
    6. '_card' → logprob: -9.953118324279785
    7. '_' → logprob: -10.703118324279785
    8. ' depth' → logprob: -10.828118324279785
    9. ' line' → logprob: -11.078118324279785
    10. ' candidate' → logprob: -11.078118324279785

Token 507: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6454769968986511
    2. ',' → logprob: -1.145477056503296
    3. '   ' → logprob: -2.520477056503296
    4. ' in' → logprob: -2.895477056503296
    5. ' ,' → logprob: -5.520476818084717
    6. '<|end|>' → logprob: -5.895476818084717
    7. ' ' → logprob: -6.145476818084717
    8. '       ' → logprob: -6.270476818084717
    9. ' =' → logprob: -6.270476818084717
    10. ' c' → logprob: -6.520476818084717

Token 508: ' try' (ID: 2075)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.057437725365161896
    2. 'for' → logprob: -3.1824376583099365
    3. ' lines' → logprob: -4.307437896728516
    4. '   ' → logprob: -8.557437896728516
    5. ' line' → logprob: -8.682437896728516
    6. '       ' → logprob: -9.182437896728516
    7. '           ' → logprob: -9.182437896728516
    8. ' select' → logprob: -9.807437896728516
    9. ' choose' → logprob: -9.932437896728516
    10. 'lines' → logprob: -10.307437896728516

Token 509: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.9282256364822388
    2. '   ' → logprob: -1.5532256364822388
    3. ' each' → logprob: -1.6782256364822388
    4. 'all' → logprob: -2.303225517272949
    5. 'each' → logprob: -2.303225517272949
    6. ' lines' → logprob: -5.803225517272949
    7. ' every' → logprob: -7.178225517272949
    8. 'lines' → logprob: -7.178225517272949
    9. '           ' → logprob: -7.678225517272949
    10. '       ' → logprob: -7.803225517272949

Token 510: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.022531254217028618
    2. ' lines' → logprob: -3.897531270980835
    3. 'possible' → logprob: -6.397531032562256
    4. 'line' → logprob: -9.272531509399414
    5. '   ' → logprob: -9.397531509399414
    6. 'candidate' → logprob: -9.647531509399414
    7. ' possible' → logprob: -10.022531509399414
    8. '	lines' → logprob: -11.772531509399414
    9. '       ' → logprob: -12.397531509399414
    10. '(lines' → logprob: -12.522531509399414

Token 511: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16556057333946228
    2. ':' → logprob: -2.290560483932495
    3. ',' → logprob: -3.540560483932495
    4. '           ' → logprob: -5.290560722351074
    5. '<|end|>' → logprob: -5.290560722351074
    6. '[' → logprob: -5.915560722351074
    7. '.' → logprob: -5.915560722351074
    8. '   ' → logprob: -6.290560722351074
    9. '<|end|>' → logprob: -6.790560722351074
    10. '):' → logprob: -7.165560722351074

Token 512: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0059014190919697285
    2. '<|end|>' → logprob: -5.505901336669922
    3. ',' → logprob: -6.630901336669922
    4. '           ' → logprob: -9.380901336669922
    5. '```' → logprob: -9.505901336669922
    6. '   ' → logprob: -9.630901336669922
    7. ' for' → logprob: -9.755901336669922
    8. ')' → logprob: -9.755901336669922
    9. '<|end|>' → logprob: -10.005901336669922
    10. '        
' → logprob: -10.630901336669922

Token 513: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009839429520070553
    2. '<|end|>' → logprob: -4.7598395347595215
    3. '<|end|>' → logprob: -7.7598395347595215
    4. ',' → logprob: -8.134839057922363
    5. '           ' → logprob: -8.759839057922363
    6. '
' → logprob: -9.509839057922363
    7. ' for' → logprob: -9.634839057922363
    8. '        
' → logprob: -10.009839057922363
    9. '```' → logprob: -10.259839057922363
    10. '        ' → logprob: -10.634839057922363

Token 514: ' Determine' (ID: 57076)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003018353134393692
    2. ' for' → logprob: -7.003018379211426
    3. '
' → logprob: -7.503018379211426
    4. 'for' → logprob: -7.878018379211426
    5. '   ' → logprob: -8.628018379211426
    6. '<|end|>' → logprob: -8.753018379211426
    7. '```' → logprob: -8.878018379211426
    8. '           ' → logprob: -8.878018379211426
    9. '#' → logprob: -9.128018379211426
    10. '        
' → logprob: -9.128018379211426

Token 515: ' finish' (ID: 9115)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.404459834098816
    2. 'if' → logprob: -1.654459834098816
    3. ' the' → logprob: -1.779459834098816
    4. ' minimal' → logprob: -2.4044599533081055
    5. 'possible' → logprob: -2.9044599533081055
    6. 'the' → logprob: -2.9044599533081055
    7. ' finishing' → logprob: -3.6544599533081055
    8. 'minimal' → logprob: -3.6544599533081055
    9. 'called' → logprob: -4.1544599533081055
    10. ' next' → logprob: -4.4044599533081055

Token 516: '_time' (ID: 6425)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -0.029731975868344307
    2. '_times' → logprob: -3.9047319889068604
    3. '_time' → logprob: -4.779731750488281
    4. '_' → logprob: -8.279731750488281
    5. ' times' → logprob: -8.529731750488281
    6. 'times' → logprob: -9.529731750488281
    7. 'time' → logprob: -9.654731750488281
    8. '   ' → logprob: -9.904731750488281
    9. '```' → logprob: -10.279731750488281
    10. '_t' → logprob: -10.779731750488281

Token 517: ' (' (ID: 350)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.037450406700372696
    2. '=' → logprob: -3.9124503135681152
    3. ' =' → logprob: -4.162450313568115
    4. '=[]' → logprob: -7.412450313568115
    5. ']' → logprob: -9.162450790405273
    6. ',' → logprob: -9.412450790405273
    7. ')' → logprob: -9.662450790405273
    8. '=[' → logprob: -9.662450790405273
    9. '[s' → logprob: -10.412450790405273
    10. '   ' → logprob: -10.537450790405273

Token 518: 'max' (ID: 3228)
  Prédit: 'max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -1.0298783779144287
    2. 'len' → logprob: -1.7798783779144287
    3. '=' → logprob: -2.0298783779144287
    4. '=max' → logprob: -2.0298783779144287
    5. ')' → logprob: -2.9048783779144287
    6. ' =' → logprob: -3.1548783779144287
    7. 'min' → logprob: -3.9048783779144287
    8. 'cards' → logprob: -4.154878616333008
    9. '=len' → logprob: -4.154878616333008
    10. ' max' → logprob: -4.404878616333008

Token 519: ' number' (ID: 2086)
  Prédit: '(cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(cards' → logprob: -0.7429630756378174
    2. '_called' → logprob: -1.1179630756378174
    3. '_number' → logprob: -3.2429630756378174
    4. '_num' → logprob: -3.2429630756378174
    5. 'called' → logprob: -3.7429630756378174
    6. '(c' → logprob: -3.9929630756378174
    7. '(' → logprob: -4.367962837219238
    8. '_call' → logprob: -4.742962837219238
    9. '(numbers' → logprob: -4.742962837219238
    10. '_' → logprob: -4.992962837219238

Token 520: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13820955157279968
    2. '=' → logprob: -3.263209581375122
    3. '=max' → logprob: -3.263209581375122
    4. ' in' → logprob: -3.513209581375122
    5. ')' → logprob: -5.013209342956543
    6. '=set' → logprob: -5.513209342956543
    7. ' for' → logprob: -5.763209342956543
    8. '_tokens' → logprob: -6.763209342956543
    9. '_in' → logprob: -7.138209342956543
    10. '=min' → logprob: -7.138209342956543

Token 521: ' line' (ID: 2543)
  Prédit: 'cl'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cl' → logprob: -0.7826894521713257
    2. 'card' → logprob: -0.7826894521713257
    3. 'the' → logprob: -3.1576895713806152
    4. 'line' → logprob: -4.032689571380615
    5. 'cards' → logprob: -4.782689571380615
    6. 'that' → logprob: -5.282689571380615
    7. 'lines' → logprob: -5.657689571380615
    8. ' the' → logprob: -6.407689571380615
    9. '   ' → logprob: -6.532689571380615
    10. ' lines' → logprob: -6.657689571380615

Token 522: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1911553591489792
    2. '[c' → logprob: -3.191155433654785
    3. '       ' → logprob: -3.691155433654785
    4. 's' → logprob: -3.816155433654785
    5. '           ' → logprob: -4.316155433654785
    6. ')
' → logprob: -4.316155433654785
    7. 'set' → logprob: -4.691155433654785
    8. ' =' → logprob: -5.191155433654785
    9. '])' → logprob: -5.191155433654785
    10. '   ' → logprob: -5.191155433654785

Token 523: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0846916139125824
    2. '           ' → logprob: -3.9596915245056152
    3. ')' → logprob: -4.209691524505615
    4. ',' → logprob: -4.459691524505615
    5. ':' → logprob: -4.709691524505615
    6. '
' → logprob: -5.334691524505615
    7. '=' → logprob: -5.459691524505615
    8. '               ' → logprob: -5.584691524505615
    9. ' =' → logprob: -5.709691524505615
    10. '<|end|>' → logprob: -5.834691524505615

Token 524: ' that' (ID: 484)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -1.6544077396392822
    2. 'that' → logprob: -1.6544077396392822
    3. ' line' → logprob: -2.0294077396392822
    4. ' that' → logprob: -2.1544077396392822
    5. 'the' → logprob: -2.4044077396392822
    6. 'cl' → logprob: -2.4044077396392822
    7. ' lines' → logprob: -3.1544077396392822
    8. ' the' → logprob: -3.5294077396392822
    9. 'lines' → logprob: -3.5294077396392822
    10. 'card' → logprob: -4.154407501220703

Token 525: ' card' (ID: 4766)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.1806747317314148
    2. ' line' → logprob: -1.9306747913360596
    3. 'card' → logprob: -4.0556745529174805
    4. ' card' → logprob: -5.9306745529174805
    5. 'token' → logprob: -10.30567455291748
    6. 'chosen' → logprob: -10.30567455291748
    7. 'choice' → logprob: -10.30567455291748
    8. 'ln' → logprob: -10.68067455291748
    9. ' chosen' → logprob: -10.93067455291748
    10. '   ' → logprob: -11.30567455291748

Token 526: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03829646483063698
    2. '           ' → logprob: -4.288296699523926
    3. '<|end|>' → logprob: -4.288296699523926
    4. ',' → logprob: -5.288296699523926
    5. ')' → logprob: -6.413296699523926
    6. '<|end|>' → logprob: -6.788296699523926
    7. '.' → logprob: -7.788296699523926
    8. '               ' → logprob: -7.913296699523926
    9. ' and' → logprob: -7.913296699523926
    10. '#' → logprob: -7.913296699523926

Token 527: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033856455702334642
    2. '
' → logprob: -6.628385543823242
    3. '<|end|>' → logprob: -7.003385543823242
    4. '        
' → logprob: -7.878385543823242
    5. ',' → logprob: -8.253385543823242
    6. '           ' → logprob: -8.878385543823242
    7. '        ' → logprob: -9.628385543823242
    8. '<|end|>' → logprob: -9.753385543823242
    9. ' for' → logprob: -10.128385543823242
    10. '   ' → logprob: -10.378385543823242

Token 528: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004639334045350552
    2. '<|end|>' → logprob: -5.629639148712158
    3. '#' (adapté à ' #') → logprob: -7.879639148712158
    4. '
' → logprob: -8.754639625549316
    5. '           ' → logprob: -9.004639625549316
    6. ',' → logprob: -9.004639625549316
    7. '<|end|>' → logprob: -9.379639625549316
    8. '```' → logprob: -10.254639625549316
    9. '        
' → logprob: -10.629639625549316
    10. ' for' → logprob: -10.629639625549316

Token 529: ' En' (ID: 2130)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02380916103720665
    2. ' for' → logprob: -4.52380895614624
    3. 'for' → logprob: -4.64880895614624
    4. '
' → logprob: -6.89880895614624
    5. '   ' → logprob: -7.52380895614624
    6. ' if' → logprob: -8.023809432983398
    7. 'if' → logprob: -8.148809432983398
    8. '           ' → logprob: -8.648809432983398
    9. '        
' → logprob: -8.648809432983398
    10. 'from' → logprob: -8.773809432983398

Token 530: 'force' (ID: 13687)
  Prédit: 'sure'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sure' → logprob: -0.48771071434020996
    2. 'force' → logprob: -1.23771071434021
    3. 'umer' → logprob: -3.48771071434021
    4. 'ter' → logprob: -3.73771071434021
    5. 'for' → logprob: -4.237710952758789
    6. 'd' → logprob: -4.612710952758789
    7. 'queue' → logprob: -4.737710952758789
    8. 't' → logprob: -5.237710952758789
    9. 'um' → logprob: -7.612710952758789
    10. 'try' → logprob: -7.862710952758789

Token 531: ' finish' (ID: 9115)
  Prédit: ' finish'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' finish' → logprob: -0.36410588026046753
    2. 'finish' → logprob: -1.2391059398651123
    3. ' that' → logprob: -5.364105701446533
    4. ' finishing' → logprob: -5.489105701446533
    5. 'that' → logprob: -5.739105701446533
    6. ' the' → logprob: -6.864105701446533
    7. 'the' → logprob: -8.489106178283691
    8. '        ' → logprob: -8.614106178283691
    9. ' constraints' → logprob: -8.864106178283691
    10. ' previous' → logprob: -8.864106178283691

Token 532: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0359959602355957
    2. '_times' → logprob: -3.5359959602355957
    3. '_' → logprob: -5.160995960235596
    4. '_t' → logprob: -8.285995483398438
    5. '       ' → logprob: -10.285995483398438
    6. '```' → logprob: -10.285995483398438
    7. '   ' → logprob: -10.535995483398438
    8. ' _' → logprob: -10.910995483398438
    9. '_tim' → logprob: -10.910995483398438
    10. '_Time' → logprob: -11.535995483398438

Token 533: '[i' (ID: 1768)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.557440459728241
    2. ' >=' → logprob: -1.1824405193328857
    3. 's' → logprob: -2.3074405193328857
    4. '>=' → logprob: -4.557440280914307
    5. '<=' → logprob: -4.807440280914307
    6. ' constraints' → logprob: -7.182440280914307
    7. '_constraints' → logprob: -7.307440280914307
    8. '_' → logprob: -8.432440757751465
    9. ' for' → logprob: -9.182440757751465
    10. '   ' → logprob: -9.307440757751465

Token 534: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.39633142948150635
    2. ' <=' → logprob: -1.5213314294815063
    3. '<=' → logprob: -2.771331310272217
    4. ']<=' → logprob: -3.521331310272217
    5. ' ]' → logprob: -5.771331310272217
    6. 's' → logprob: -5.896331310272217
    7. '=' → logprob: -6.021331310272217
    8. '+' → logprob: -6.521331310272217
    9. '[' → logprob: -7.021331310272217
    10. ']>=' → logprob: -7.396331310272217

Token 535: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.11397717893123627
    2. '<=' → logprob: -2.4889771938323975
    3. ' >=' → logprob: -4.363976955413818
    4. 's' → logprob: -5.363976955413818
    5. '[i' → logprob: -5.613976955413818
    6. '>=' → logprob: -5.863976955413818
    7. '[' → logprob: -8.488977432250977
    8. '   ' → logprob: -9.113977432250977
    9. '[j' → logprob: -9.613977432250977
    10. ' ≤' → logprob: -9.738977432250977

Token 536: ' finish' (ID: 9115)
  Prédit: 'finish'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'finish' → logprob: -0.011060204356908798
    2. ' finish' → logprob: -4.5110602378845215
    3. '   ' → logprob: -12.511059761047363
    4. ' ' → logprob: -12.761059761047363
    5. '  ' → logprob: -13.511059761047363
    6. ' ' → logprob: -13.636059761047363
    7. 'fin' → logprob: -13.636059761047363
    8. '    ' → logprob: -15.011059761047363
    9. 'finished' → logprob: -15.261059761047363
    10. '
' → logprob: -15.511059761047363

Token 537: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -6.360996485454962e-05
    2. '_times' → logprob: -10.0000638961792
    3. '_' → logprob: -11.3750638961792
    4. '_t' → logprob: -13.0000638961792
    5. ' _' → logprob: -14.0000638961792
    6. 'time' → logprob: -14.2500638961792
    7. '   ' → logprob: -14.6250638961792
    8. '_tim' → logprob: -14.6250638961792
    9. '[_' → logprob: -15.1250638961792
    10. 'ime' → logprob: -15.1250638961792

Token 538: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.05780920013785362
    2. '[j' → logprob: -2.9328091144561768
    3. '[' → logprob: -6.057809352874756
    4. '[s' → logprob: -8.307808876037598
    5. '[f' → logprob: -9.432808876037598
    6. '[next' → logprob: -9.557808876037598
    7. 'for' → logprob: -9.932808876037598
    8. '[n' → logprob: -10.932808876037598
    9. '[c' → logprob: -10.932808876037598
    10. 's' → logprob: -10.932808876037598

Token 539: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.1356111466884613
    2. ']' → logprob: -2.135611057281494
    3. '[' → logprob: -5.385611057281494
    4. '[j' → logprob: -6.510611057281494
    5. ']+' → logprob: -7.010611057281494
    6. '[i' → logprob: -7.010611057281494
    7. '+]' → logprob: -8.385611534118652
    8. '1' → logprob: -9.010611534118652
    9. ' +' → logprob: -9.385611534118652
    10. '][' → logprob: -10.135611534118652

Token 540: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000915039679966867
    2. ']' → logprob: -7.000915050506592
    3. '+' → logprob: -13.125914573669434
    4. ' ' → logprob: -13.750914573669434
    5. '
' → logprob: -15.750914573669434
    6. '```' → logprob: -15.750914573669434
    7. ']
' → logprob: -16.75091552734375
    8. '   ' → logprob: -16.87591552734375
    9. ']+' → logprob: -18.00091552734375
    10. 'i' → logprob: -18.25091552734375

Token 541: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0036195507273077965
    2. '[i' → logprob: -6.50361967086792
    3. 'for' → logprob: -7.62861967086792
    4. ']
' → logprob: -8.003619194030762
    5. '   ' → logprob: -8.628619194030762
    6. '[' → logprob: -8.753619194030762
    7. ' ]' → logprob: -8.878619194030762
    8. '       ' → logprob: -8.878619194030762
    9. '],' → logprob: -8.878619194030762
    10. ' for' → logprob: -9.378619194030762

Token 542: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005326604936271906
    2. '
' → logprob: -6.130326747894287
    3. '<|end|>' → logprob: -6.755326747894287
    4. '        
' → logprob: -7.755326747894287
    5. ',' → logprob: -7.880326747894287
    6. '           ' → logprob: -8.380326271057129
    7. ' for' → logprob: -8.630326271057129
    8. '.' → logprob: -9.005326271057129
    9. '        ' → logprob: -9.505326271057129
    10. '   ' → logprob: -9.505326271057129

Token 543: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007872306741774082
    2. '<|end|>' → logprob: -5.132872104644775
    3. '
' → logprob: -7.507872104644775
    4. ',' → logprob: -7.757872104644775
    5. '        
' → logprob: -8.507872581481934
    6. '<|end|>' → logprob: -8.632872581481934
    7. '#' → logprob: -8.632872581481934
    8. '           ' → logprob: -9.382872581481934
    9. ')' → logprob: -9.632872581481934
    10. ' for' → logprob: -10.257872581481934

Token 544: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016632776241749525
    2. '
' → logprob: -7.2516632080078125
    3. '        
' → logprob: -7.7516632080078125
    4. '<|end|>' → logprob: -7.7516632080078125
    5. '<|end|>' → logprob: -10.376663208007812
    6. '           ' → logprob: -11.001663208007812
    7. '        ' → logprob: -11.126663208007812
    8. '   ' → logprob: -11.626663208007812
    9. ',' → logprob: -12.126663208007812
    10. '```' → logprob: -12.876663208007812

Token 545: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006949203554540873
    2. '
' → logprob: -5.631949424743652
    3. '   ' → logprob: -6.631949424743652
    4. 'for' → logprob: -6.881949424743652
    5. ' for' → logprob: -7.631949424743652
    6. 'from' → logprob: -8.131949424743652
    7. '        
' → logprob: -9.631949424743652
    8. 'import' → logprob: -9.881949424743652
    9. ' from' → logprob: -10.631949424743652
    10. ' ' → logprob: -11.506949424743652

Token 546: ' To' (ID: 2514)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26286396384239197
    2. 'from' → logprob: -1.8878639936447144
    3. '       ' → logprob: -3.262863874435425
    4. 'def' → logprob: -4.387864112854004
    5. 'import' → logprob: -4.387864112854004
    6. 'best' → logprob: -4.887864112854004
    7. '
' → logprob: -5.512864112854004
    8. '   ' → logprob: -6.262864112854004
    9. 'used' → logprob: -6.512864112854004
    10. 'visited' → logprob: -7.762864112854004

Token 547: ' minimize' (ID: 41776)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.1951544284820557
    2. '       ' → logprob: -1.6951544284820557
    3. 'avoid' → logprob: -2.4451544284820557
    4. '   ' → logprob: -2.5701544284820557
    5. ' continue' → logprob: -2.9451544284820557
    6. ' avoid' → logprob: -3.5701544284820557
    7. 'for' → logprob: -3.6951544284820557
    8. 'en' → logprob: -3.8201544284820557
    9. 'implement' → logprob: -3.8201544284820557
    10. 'ach' → logprob: -3.9451544284820557

Token 548: ' total' (ID: 3609)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.6895538568496704
    2. 'unique' → logprob: -1.8145538568496704
    3. ' used' → logprob: -2.189553737640381
    4. 'total' → logprob: -2.439553737640381
    5. ' total' → logprob: -3.189553737640381
    6. 'the' → logprob: -3.564553737640381
    7. ' unique' → logprob: -3.939553737640381
    8. 'tokens' → logprob: -4.439553737640381
    9. ' tokens' → logprob: -5.064553737640381
    10. ' the' → logprob: -5.314553737640381

Token 549: ' unique' (ID: 5746)
  Prédit: '_unique'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_unique' → logprob: -1.3006752729415894
    2. '_numbers' → logprob: -1.3006752729415894
    3. '_used' → logprob: -1.9256752729415894
    4. '_called' → logprob: -2.175675392150879
    5. '_' → logprob: -2.425675392150879
    6. 'used' → logprob: -3.175675392150879
    7. 'called' → logprob: -3.550675392150879
    8. 'numbers' → logprob: -4.675675392150879
    9. 'unique' → logprob: -4.800675392150879
    10. '_calls' → logprob: -4.800675392150879

Token 550: ' numbers' (ID: 8663)
  Prédit: '_numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.0765867754817009
    2. '_' → logprob: -3.4515867233276367
    3. '_called' → logprob: -4.076586723327637
    4. '_used' → logprob: -5.076586723327637
    5. '_cards' → logprob: -5.326586723327637
    6. '_calls' → logprob: -5.451586723327637
    7. '_tokens' → logprob: -5.576586723327637
    8. '_nums' → logprob: -6.701586723327637
    9. 'numbers' → logprob: -6.951586723327637
    10. '_set' → logprob: -7.201586723327637

Token 551: ' selected' (ID: 6386)
  Prédit: '_used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_used' → logprob: -1.3136022090911865
    2. '   ' → logprob: -1.4386022090911865
    3. ',' → logprob: -2.1886022090911865
    4. '_called' → logprob: -2.6886022090911865
    5. 'called' → logprob: -3.0636022090911865
    6. ' used' → logprob: -3.1886022090911865
    7. 'used' → logprob: -3.1886022090911865
    8. '  ' → logprob: -3.6886022090911865
    9. ' called' → logprob: -3.6886022090911865
    10. '_' → logprob: -3.8136022090911865

Token 552: ',' (ID: 11)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9997916221618652
    2. ':' → logprob: -1.3747916221618652
    3. '       ' → logprob: -2.3747916221618652
    4. ',' → logprob: -2.6247916221618652
    5. 'for' → logprob: -2.7497916221618652
    6. '):' → logprob: -3.9997916221618652
    7. ' for' → logprob: -4.124791622161865
    8. '_used' → logprob: -4.499791622161865
    9. 'used' → logprob: -4.624791622161865
    10. ')' → logprob: -4.624791622161865

Token 553: ' accumulate' (ID: 74226)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49854472279548645
    2. ' used' → logprob: -2.123544692993164
    3. 'used' → logprob: -3.248544692993164
    4. '#' → logprob: -3.623544692993164
    5. 'import' → logprob: -3.748544692993164
    6. 'selected' → logprob: -3.748544692993164
    7. 'for' → logprob: -3.873544692993164
    8. ' for' → logprob: -3.873544692993164
    9. 'def' → logprob: -3.998544692993164
    10. ' unique' → logprob: -4.498544692993164

Token 554: ' the' (ID: 290)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -1.376322627067566
    2. ' sets' → logprob: -1.626322627067566
    3. 'selected' → logprob: -2.3763227462768555
    4. ' used' → logprob: -2.5013227462768555
    5. 'called' → logprob: -2.7513227462768555
    6. 'numbers' → logprob: -3.0013227462768555
    7. 'sets' → logprob: -3.3763227462768555
    8. ' the' → logprob: -3.5013227462768555
    9. 'the' → logprob: -3.7513227462768555
    10. ' numbers' → logprob: -4.0013227462768555

Token 555: ' union' (ID: 22208)
  Prédit: ' used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' used' → logprob: -1.0891538858413696
    2. ' numbers' → logprob: -1.7141538858413696
    3. ' unique' → logprob: -2.08915376663208
    4. ' selected' → logprob: -2.83915376663208
    5. ' lines' → logprob: -2.96415376663208
    6. ' sets' → logprob: -2.96415376663208
    7. 'numbers' → logprob: -3.46415376663208
    8. ' called' → logprob: -3.58915376663208
    9. ' set' → logprob: -3.96415376663208
    10. 'used' → logprob: -3.96415376663208

Token 556: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.26831239461898804
    2. 'of' → logprob: -1.7683124542236328
    3. ' =' → logprob: -3.893312454223633
    4. ' |=' → logprob: -5.018312454223633
    5. '   ' → logprob: -5.143312454223633
    6. '=set' → logprob: -5.268312454223633
    7. '_of' → logprob: -5.393312454223633
    8. '_set' → logprob: -5.518312454223633
    9. '_' → logprob: -5.518312454223633
    10. ' sets' → logprob: -6.143312454223633

Token 557: ' sets' (ID: 11982)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -1.2855476140975952
    2. 'sets' → logprob: -1.4105476140975952
    3. ' sets' → logprob: -2.4105477333068848
    4. 'cl' → logprob: -2.4105477333068848
    5. 'lines' → logprob: -2.5355477333068848
    6. 'all' → logprob: -2.9105477333068848
    7. 'the' → logprob: -3.0355477333068848
    8. 'selected' → logprob: -4.035547733306885
    9. ' lines' → logprob: -4.160547733306885
    10. 'used' → logprob: -4.410547733306885

Token 558: '.
' (ID: 558)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.214540719985962
    2. ',' → logprob: -2.089540719985962
    3. '   ' → logprob: -2.089540719985962
    4. '    ' → logprob: -2.714540719985962
    5. ' for' → logprob: -2.964540719985962
    6. '       ' → logprob: -3.089540719985962
    7. '<|end|>' → logprob: -3.464540719985962
    8. ' ,' → logprob: -3.589540719985962
    9. ' of' → logprob: -3.589540719985962
    10. ')' → logprob: -3.714540719985962

Token 559: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00437125563621521
    2. ',' → logprob: -6.879371166229248
    3. '   ' → logprob: -6.879371166229248
    4. '        
' → logprob: -7.379371166229248
    5. ' for' → logprob: -7.879371166229248
    6. '
' → logprob: -8.004371643066406
    7. '           ' → logprob: -8.504371643066406
    8. '<|end|>' → logprob: -8.879371643066406
    9. '        ' → logprob: -9.004371643066406
    10. ')' → logprob: -9.504371643066406

Token 560: ' #
' (ID: 21888)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020974453072994947
    2. ' for' → logprob: -7.1270976066589355
    3. ',' → logprob: -8.127097129821777
    4. 'for' → logprob: -8.627097129821777
    5. '   ' → logprob: -8.752097129821777
    6. '        
' → logprob: -8.752097129821777
    7. '           ' → logprob: -9.002097129821777
    8. '
' → logprob: -9.252097129821777
    9. '        ' → logprob: -9.502097129821777
    10. '<|end|>' → logprob: -9.752097129821777

Token 561: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.029518460854887962
    2. '
' → logprob: -4.0295186042785645
    3. '   ' → logprob: -4.9045186042785645
    4. '        
' → logprob: -5.6545186042785645
    5. '    
' → logprob: -8.779518127441406
    6. ' for' → logprob: -10.154518127441406
    7. '           ' → logprob: -10.404518127441406
    8. '  
' → logprob: -10.654518127441406
    9. '        ' → logprob: -10.779518127441406
    10. '<|end|>' → logprob: -10.779518127441406

Token 562: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08859652280807495
    2. '   ' → logprob: -3.3385965824127197
    3. '
' → logprob: -3.8385965824127197
    4. ' for' → logprob: -4.213596343994141
    5. 'for' → logprob: -4.463596343994141
    6. '        
' → logprob: -7.713596343994141
    7. 'from' → logprob: -7.963596343994141
    8. '    
' → logprob: -8.71359634399414
    9. 'def' → logprob: -9.08859634399414
    10. ' from' → logprob: -9.71359634399414

Token 563: ' We'll' (ID: 46830)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.06861623376607895
    2. '   ' → logprob: -3.8186161518096924
    3. 'from' → logprob: -3.9436161518096924
    4. 'best' → logprob: -4.5686163902282715
    5. 'visited' → logprob: -5.6936163902282715
    6. '       ' → logprob: -5.9436163902282715
    7. 'stack' → logprob: -6.1936163902282715
    8. 'import' → logprob: -6.3186163902282715
    9. '
' → logprob: -6.3186163902282715
    10. 'min' → logprob: -7.0686163902282715

Token 564: ' implement' (ID: 6365)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.26713690161705017
    2. ' import' → logprob: -2.392136812210083
    3. 'def' → logprob: -2.392136812210083
    4. '   ' → logprob: -3.267136812210083
    5. 'indent' → logprob: -5.267137050628662
    6. ' indent' → logprob: -5.642137050628662
    7. 'continue' → logprob: -6.392137050628662
    8. ' def' → logprob: -7.017137050628662
    9. '	import' → logprob: -7.767137050628662
    10. ' continue' → logprob: -8.142136573791504

Token 565: ' DFS' (ID: 115767)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.13408683240413666
    2. '   ' → logprob: -2.634086847305298
    3. 'from' → logprob: -4.009086608886719
    4. 'import' → logprob: -4.009086608886719
    5. '
' → logprob: -5.134086608886719
    6. ' a' → logprob: -6.009086608886719
    7. 'a' → logprob: -6.134086608886719
    8. 'dfs' → logprob: -6.384086608886719
    9. 'depth' → logprob: -6.509086608886719
    10. ' def' → logprob: -6.634086608886719

Token 566: ' with' (ID: 483)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.145854115486145
    2. '   ' → logprob: -1.395854115486145
    3. '(' → logprob: -1.645854115486145
    4. ':' → logprob: -2.7708539962768555
    5. '(c' → logprob: -2.8958539962768555
    6. '
' → logprob: -2.8958539962768555
    7. '(P' → logprob: -4.2708539962768555
    8. '(depth' → logprob: -4.3958539962768555
    9. '(n' → logprob: -4.7708539962768555
    10. '       ' → logprob: -5.2708539962768555

Token 567: ' pruning' (ID: 135775)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1694706380367279
    2. 'depth' → logprob: -2.7944705486297607
    3. ' def' → logprob: -3.2944705486297607
    4. 'memo' → logprob: -4.04447078704834
    5. 'params' → logprob: -4.79447078704834
    6. 'parameters' → logprob: -4.91947078704834
    7. 'cache' → logprob: -5.04447078704834
    8. 'card' → logprob: -6.04447078704834
    9. 'index' → logprob: -6.04447078704834
    10. ' parameters' → logprob: -6.16947078704834

Token 568: '.

' (ID: 364)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7969485521316528
    2. 'def' → logprob: -1.5469485521316528
    3. '(' → logprob: -1.9219485521316528
    4. '   ' → logprob: -2.4219484329223633
    5. ':' → logprob: -2.6719484329223633
    6. '(
' → logprob: -4.171948432922363
    7. '(n' → logprob: -5.171948432922363
    8. '(def' → logprob: -6.296948432922363
    9. ':
' → logprob: -6.421948432922363
    10. '```' → logprob: -6.546948432922363

Token 569: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5613223314285278
    2. '   ' → logprob: -1.0613223314285278
    3. '
' → logprob: -2.6863222122192383
    4. '    
' → logprob: -4.311322212219238
    5. '```' → logprob: -7.936322212219238
    6. '        
' → logprob: -8.061322212219238
    7. '  
' → logprob: -8.061322212219238
    8. 'stack' → logprob: -8.186322212219238
    9. '       ' → logprob: -8.936322212219238
    10. ':' → logprob: -8.936322212219238

Token 570: ' from' (ID: 591)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.676761269569397
    2. 'from' (adapté à ' from') → logprob: -1.676761269569397
    3. 'stack' → logprob: -2.9267611503601074
    4. 'min' → logprob: -2.9267611503601074
    5. 'used' → logprob: -3.5517611503601074
    6. '   ' → logprob: -3.5517611503601074
    7. 'visited' → logprob: -3.6767611503601074
    8. '
' → logprob: -3.8017611503601074
    9. '       ' → logprob: -4.176761150360107
    10. 'n' → logprob: -4.176761150360107

Token 571: ' functools' (ID: 142636)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.01993967592716217
    2. 'it' → logprob: -4.76993989944458
    3. 'math' → logprob: -5.26993989944458
    4. 'copy' → logprob: -5.51993989944458
    5. 'heap' → logprob: -6.26993989944458
    6. 'sys' → logprob: -8.769939422607422
    7. 'fun' → logprob: -10.769939422607422
    8. ' itertools' → logprob: -11.019939422607422
    9. 'bis' → logprob: -11.769939422607422
    10. 'operator' → logprob: -11.769939422607422

Token 572: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.04788466915488243
    2. '_import' → logprob: -3.547884702682495
    3. ' import' → logprob: -4.047884464263916
    4. '_' → logprob: -8.422884941101074
    5. '<|end|>' → logprob: -9.047884941101074
    6. '	import' → logprob: -9.672884941101074
    7. '```' → logprob: -10.922884941101074
    8. ' _' → logprob: -11.547884941101074
    9. '`' → logprob: -11.672884941101074
    10. '_counter' → logprob: -11.672884941101074

Token 573: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.0004891689168289304
    2. 'cache' → logprob: -7.750489234924316
    3. 'reduce' → logprob: -9.875489234924316
    4. ' l' → logprob: -12.625489234924316
    5. 'cmp' → logprob: -13.000489234924316
    6. 'cached' → logprob: -14.750489234924316
    7. '```' → logprob: -14.750489234924316
    8. 'import' → logprob: -15.625489234924316
    9. 'wrap' → logprob: -16.00048828125
    10. 'partial' → logprob: -16.37548828125

Token 574: 'ru' (ID: 1942)
  Prédit: 'ru'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ru' → logprob: -1.0280383548888494e-06
    2. 'RU' → logprob: -14.000000953674316
    3. '_ru' → logprob: -16.000001907348633
    4. 'ruz' → logprob: -17.125001907348633
    5. 'ruff' → logprob: -18.125001907348633
    6. 'Ru' → logprob: -18.125001907348633
    7. 'import' → logprob: -18.500001907348633
    8. 'r' → logprob: -18.500001907348633
    9. ' ru' → logprob: -19.250001907348633
    10. 'wr' → logprob: -19.750001907348633

Token 575: '_cache' (ID: 27045)
  Prédit: '_cache'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cache' → logprob: -0.02991686388850212
    2. 'cache' → logprob: -3.529916763305664
    3. '_cached' → logprob: -10.029916763305664
    4. 'max' → logprob: -10.529916763305664
    5. 'cached' → logprob: -10.654916763305664
    6. 'c' → logprob: -11.154916763305664
    7. 'import' → logprob: -11.654916763305664
    8. '_wrap' → logprob: -11.654916763305664
    9. 'wrap' → logprob: -11.654916763305664
    10. '_wrapper' → logprob: -11.904916763305664

Token 576: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.34727540612220764
    2. '       ' → logprob: -1.4722753763198853
    3. '        
' → logprob: -3.597275495529175
    4. 'def' → logprob: -3.847275495529175
    5. '<|end|>' → logprob: -4.597275257110596
    6. '   ' → logprob: -6.722275257110596
    7. '    
' → logprob: -6.722275257110596
    8. '```' → logprob: -6.972275257110596
    9. '@' → logprob: -8.097275733947754
    10. '<|end|>' → logprob: -8.472275733947754

Token 577: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.44929376244544983
    2. 'def' → logprob: -1.3242937326431274
    3. '   ' → logprob: -2.699293851852417
    4. '       ' → logprob: -4.574293613433838
    5. '    
' → logprob: -4.824293613433838
    6. '        
' → logprob: -5.324293613433838
    7. '@' → logprob: -5.699293613433838
    8. '```' → logprob: -7.199293613433838
    9. ' 
' → logprob: -8.199294090270996
    10. '  
' → logprob: -8.574294090270996

Token 578: ' cards' (ID: 10541)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.004188213497400284
    2. 'sys' → logprob: -6.754188060760498
    3. '   ' → logprob: -7.754188060760498
    4. '@' → logprob: -8.004188537597656
    5. '       ' → logprob: -8.004188537597656
    6. 'INF' → logprob: -8.004188537597656
    7. 'stack' → logprob: -8.254188537597656
    8. 'dp' → logprob: -8.254188537597656
    9. 'memo' → logprob: -8.379188537597656
    10. 'visited' → logprob: -8.504188537597656

Token 579: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.03407290577888489
    2. '_sets' → logprob: -4.6590728759765625
    3. '_cards' → logprob: -5.1590728759765625
    4. ' =' → logprob: -5.2840728759765625
    5. '_numbers' → logprob: -5.7840728759765625
    6. '_unique' → logprob: -6.4090728759765625
    7. '_card' → logprob: -6.6590728759765625
    8. '_selected' → logprob: -6.6590728759765625
    9. '<|end|>' → logprob: -6.6590728759765625
    10. '_num' → logprob: -7.1590728759765625

Token 580: '_sets' (ID: 56707)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9446443915367126
    2. '_lines' → logprob: -1.4446444511413574
    3. '_sets' → logprob: -1.5696444511413574
    4. '=' → logprob: -1.9446444511413574
    5. '=[]' → logprob: -4.944644451141357
    6. '<|end|>' → logprob: -5.694644451141357
    7. '[' → logprob: -6.694644451141357
    8. '_selected' → logprob: -6.694644451141357
    9. '=set' → logprob: -6.694644451141357
    10. '=[' → logprob: -6.819644451141357

Token 581: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18045368790626526
    2. '=' → logprob: -1.8054536581039429
    3. '=[]' → logprob: -8.430453300476074
    4. '=[' → logprob: -8.680453300476074
    5. ')' → logprob: -9.930453300476074
    6. '   ' → logprob: -10.180453300476074
    7. ',' → logprob: -10.430453300476074
    8. '       ' → logprob: -10.680453300476074
    9. '=[[' → logprob: -10.680453300476074
    10. '=c' → logprob: -10.930453300476074

Token 582: ' card' (ID: 4766)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.6944218873977661
    2. '[' → logprob: -1.4444218873977661
    3. 'tuple' → logprob: -1.4444218873977661
    4. '[[' → logprob: -4.194421768188477
    5. '[]
' → logprob: -5.444421768188477
    6. ' tuple' → logprob: -5.694421768188477
    7. ' [' → logprob: -6.069421768188477
    8. ' card' → logprob: -6.694421768188477
    9. '[]' → logprob: -7.069421768188477
    10. '   ' → logprob: -7.319421768188477

Token 583: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.011584009043872356
    2. '[c' → logprob: -4.6365838050842285
    3. 's' → logprob: -7.6365838050842285
    4. 'lines' → logprob: -7.7615838050842285
    5. '[' → logprob: -7.8865838050842285
    6. '       ' → logprob: -9.386584281921387
    7. 'ines' → logprob: -9.761584281921387
    8. '[_' → logprob: -9.761584281921387
    9. '_cards' → logprob: -10.511584281921387
    10. 'Lines' → logprob: -10.511584281921387

Token 584: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6616378426551819
    2. '<|end|>' → logprob: -0.7866378426551819
    3. '<|end|>' → logprob: -4.286637783050537
    4. '

' → logprob: -5.161637783050537
    5. '[' → logprob: -5.536637783050537
    6. '       ' → logprob: -6.286637783050537
    7. '        
' → logprob: -7.036637783050537
    8. ',' → logprob: -7.411637783050537
    9. 'def' → logprob: -7.911637783050537
    10. ')' → logprob: -8.036638259887695

Token 585: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15603680908679962
    2. '
' → logprob: -2.031036853790283
    3. '        
' → logprob: -5.156036853790283
    4. 'def' → logprob: -5.781036853790283
    5. '```' → logprob: -6.531036853790283
    6. '   ' → logprob: -6.656036853790283
    7. 'n' → logprob: -8.156036376953125
    8. '    
' → logprob: -8.156036376953125
    9. ',
' → logprob: -8.406036376953125
    10. ',' → logprob: -8.531036376953125

Token 586: ' P' (ID: 398)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1303843259811401
    2. '
' → logprob: -1.5053843259811401
    3. 'def' → logprob: -1.7553843259811401
    4. 'min' → logprob: -2.0053844451904297
    5. 'n' → logprob: -2.6303844451904297
    6. 'best' → logprob: -3.5053844451904297
    7. 'P' (adapté à ' P') → logprob: -4.38038444519043
    8. 'N' → logprob: -4.50538444519043
    9. '   ' → logprob: -5.00538444519043
    10. '        
' → logprob: -5.63038444519043

Token 587: '_lines' (ID: 42980)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1089110374450684
    2. ' =' → logprob: -1.2339110374450684
    3. ',' → logprob: -1.8589110374450684
    4. '<|end|>' → logprob: -1.9839110374450684
    5. 'tokens' → logprob: -4.108911037445068
    6. ')' → logprob: -4.108911037445068
    7. '<|end|>' → logprob: -4.483911037445068
    8. '
' → logprob: -4.483911037445068
    9. '-' → logprob: -5.608911037445068
    10. '_tokens' → logprob: -5.608911037445068

Token 588: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31413552165031433
    2. '=' → logprob: -1.3141355514526367
    3. ')' → logprob: -8.439135551452637
    4. '   ' → logprob: -8.689135551452637
    5. ']' → logprob: -9.689135551452637
    6. ',' → logprob: -9.689135551452637
    7. '=[]' → logprob: -10.064135551452637
    8. '=len' → logprob: -10.189135551452637
    9. '[' → logprob: -10.314135551452637
    10. '=[' → logprob: -10.689135551452637

Token 589: ' [' (ID: 723)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5027826428413391
    2. '[' → logprob: -1.1277825832366943
    3. '[len' → logprob: -2.8777825832366943
    4. 'lines' → logprob: -5.752782821655273
    5. ' [' → logprob: -6.002782821655273
    6. '10' → logprob: -6.502782821655273
    7. '[P' → logprob: -6.627782821655273
    8. '2' → logprob: -6.627782821655273
    9. 'P' → logprob: -6.877782821655273
    10. '[]' → logprob: -7.002782821655273

Token 590: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.12663932144641876
    2. 'range' → logprob: -2.2516393661499023
    3. 'list' → logprob: -4.501639366149902
    4. 'lines' → logprob: -6.501639366149902
    5. 'set' → logprob: -8.001639366149902
    6. 'cards' → logprob: -8.251639366149902
    7. '10' → logprob: -8.626639366149902
    8. 'card' → logprob: -8.751639366149902
    9. '[len' → logprob: -10.251639366149902
    10. 'line' → logprob: -10.501639366149902

Token 591: '(card' (ID: 51112)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.16351544857025146
    2. '(cards' → logprob: -1.9135154485702515
    3. 'lines' → logprob: -6.038515567779541
    4. '(card' → logprob: -7.663515567779541
    5. 'cards' → logprob: -7.913515567779541
    6. '(' → logprob: -10.413515090942383
    7. '(c' → logprob: -11.788515090942383
    8. ')' → logprob: -12.288515090942383
    9. ' lines' → logprob: -13.163515090942383
    10. '	lines' → logprob: -13.163515090942383

Token 592: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.00022761584841646254
    2. 'lines' → logprob: -8.750227928161621
    3. '_cards' → logprob: -10.000227928161621
    4. '(lines' → logprob: -11.375227928161621
    5. '[' → logprob: -12.500227928161621
    6. '(card' → logprob: -13.250227928161621
    7. 's' → logprob: -13.750227928161621
    8. 'Lines' → logprob: -14.125227928161621
    9. '_line' → logprob: -14.500227928161621
    10. 'card' → logprob: -14.625227928161621

Token 593: '[i' (ID: 1768)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0077253952622413635
    2. '[P' → logprob: -5.007725238800049
    3. '[c' → logprob: -7.257725238800049
    4. ')' → logprob: -8.382725715637207
    5. '[p' → logprob: -10.507725715637207
    6. ')]' → logprob: -11.507725715637207
    7. '0' → logprob: -11.632725715637207
    8. '[i' → logprob: -12.007725715637207
    9. ' [' → logprob: -12.257725715637207
    10. '   ' → logprob: -12.632725715637207

Token 594: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.003947198390960693
    2. '[i' → logprob: -6.0039472579956055
    3. '[' → logprob: -7.1289472579956055
    4. '])]' → logprob: -7.8789472579956055
    5. '])
' → logprob: -9.628947257995605
    6. '[P' → logprob: -9.753947257995605
    7. '])]
' → logprob: -10.003947257995605
    8. ')' → logprob: -10.253947257995605
    9. '[c' → logprob: -11.128947257995605
    10. '][' → logprob: -11.378947257995605

Token 595: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2536890506744385
    2. ']' → logprob: -1.7536890506744385
    3. 'for' → logprob: -3.7536890506744385
    4. ' for' → logprob: -4.003688812255859
    5. ')]' → logprob: -5.378688812255859
    6. '   ' → logprob: -6.503688812255859
    7. '
' → logprob: -6.628688812255859
    8. '       ' → logprob: -8.00368881225586
    9. ']
' → logprob: -8.00368881225586
    10. '```' → logprob: -8.62868881225586

Token 596: ' i' (ID: 575)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.312100350856781
    2. 'i' → logprob: -1.8121004104614258
    3. ' range' → logprob: -2.312100410461426
    4. ' i' → logprob: -5.187100410461426
    5. 'card' → logprob: -10.187100410461426
    6. 'in' → logprob: -10.187100410461426
    7. ' ' → logprob: -10.437100410461426
    8. ' in' → logprob: -12.062100410461426
    9. 'cards' → logprob: -12.312100410461426
    10. '
' → logprob: -12.437100410461426

Token 597: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5235783457756042
    2. ' in' → logprob: -0.8985783457756042
    3. 'import' → logprob: -8.648578643798828
    4. 'range' → logprob: -8.773578643798828
    5. ']' → logprob: -9.523578643798828
    6. ')' → logprob: -11.648578643798828
    7. ' range' → logprob: -11.773578643798828
    8. ' ' → logprob: -12.398578643798828
    9. '
' → logprob: -12.773578643798828
    10. 'P' → logprob: -12.773578643798828

Token 598: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001584850688232109
    2. ' range' → logprob: -8.750158309936523
    3. '(range' → logprob: -18.625158309936523
    4. '
' → logprob: -19.750158309936523
    5. '   ' → logprob: -19.750158309936523
    6. ' ' → logprob: -20.375158309936523
    7. '[' → logprob: -21.375158309936523
    8. '  ' → logprob: -21.500158309936523
    9. 'P' → logprob: -21.750158309936523
    10. '	range' → logprob: -22.250158309936523

Token 599: '(P' (ID: 8952)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.00011772842844948173
    2. '(P' → logprob: -9.375117301940918
    3. ' P' → logprob: -10.625117301940918
    4. 'len' → logprob: -13.625117301940918
    5. '   ' → logprob: -13.625117301940918
    6. '       ' → logprob: -13.625117301940918
    7. ')' → logprob: -13.625117301940918
    8. '
' → logprob: -13.875117301940918
    9. '(' → logprob: -14.250117301940918
    10. 'p' → logprob: -14.500117301940918

Token 600: ')]' (ID: 15710)
  Prédit: ')]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.001969673437997699
    2. ')]
' → logprob: -6.376969814300537
    3. ')' → logprob: -9.376969337463379
    4. '       ' → logprob: -9.376969337463379
    5. ']' → logprob: -9.876969337463379
    6. ')]
' → logprob: -10.876969337463379
    7. ')])' → logprob: -12.001969337463379
    8. ')][' → logprob: -12.251969337463379
    9. ')]

' → logprob: -12.501969337463379
    10. ')],' → logprob: -12.876969337463379

Token 601: ' ' (ID: 220)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08662587404251099
    2. '       ' → logprob: -2.586625814437866
    3. '        
' → logprob: -6.086626052856445
    4. 'def' → logprob: -6.211626052856445
    5. '   ' → logprob: -7.086626052856445
    6. '<|end|>' → logprob: -7.461626052856445
    7. '```' → logprob: -7.836626052856445
    8. '
' → logprob: -8.336626052856445
    9. ',' → logprob: -8.711626052856445
    10. '    
' → logprob: -8.711626052856445

Token 602: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.01397144328802824
    2. 'def' → logprob: -5.388971328735352
    3. '       ' → logprob: -5.763971328735352
    4. '   ' → logprob: -6.763971328735352
    5. 'stack' → logprob: -7.138971328735352
    6. 'min' → logprob: -7.263971328735352
    7. '
' → logprob: -7.513971328735352
    8. '        
' → logprob: -7.513971328735352
    9. 'selected' → logprob: -7.888971328735352
    10. '```' → logprob: -7.888971328735352

Token 603: ' number' (ID: 2086)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5333625674247742
    2. 'P' → logprob: -1.408362627029419
    3. '[P' → logprob: -2.908362627029419
    4. '[' → logprob: -3.408362627029419
    5. ' P' → logprob: -3.908362627029419
    6. '0' → logprob: -3.908362627029419
    7. '[i' → logprob: -4.15836238861084
    8. 'i' → logprob: -5.28336238861084
    9. ')' → logprob: -5.78336238861084
    10. ' [' → logprob: -5.90836238861084

Token 604: ' of' (ID: 328)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.16283567249774933
    2. '[' → logprob: -3.2878355979919434
    3. '_of' → logprob: -3.2878355979919434
    4. '       ' → logprob: -3.6628355979919434
    5. '   ' → logprob: -4.162835597991943
    6. '(' → logprob: -4.787835597991943
    7. 'of' → logprob: -5.162835597991943
    8. ')' → logprob: -5.662835597991943
    9. '(
' → logprob: -5.662835597991943
    10. ']' → logprob: -6.162835597991943

Token 605: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.07023818045854568
    2. ' lines' → logprob: -2.6952381134033203
    3. 'cards' → logprob: -8.44523811340332
    4. '_lines' → logprob: -10.44523811340332
    5. 'line' → logprob: -10.94523811340332
    6. ' cards' → logprob: -11.07023811340332
    7. ')' → logprob: -12.19523811340332
    8. '(lines' → logprob: -12.69523811340332
    9. '   ' → logprob: -13.07023811340332
    10. '	lines' → logprob: -13.19523811340332

Token 606: ' per' (ID: 777)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.008494485169649124
    2. '   ' → logprob: -6.3834943771362305
    3. '

' → logprob: -6.3834943771362305
    4. '       ' → logprob: -7.0084943771362305
    5. '```' → logprob: -7.2584943771362305
    6. 'selected' → logprob: -7.3834943771362305
    7. ',' → logprob: -7.8834943771362305
    8. '
' → logprob: -8.00849437713623
    9. 'def' → logprob: -8.25849437713623
    10. ',
' → logprob: -8.38349437713623

Token 607: ' card' (ID: 4766)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.38200077414512634
    2. 'card' → logprob: -1.2570008039474487
    3. ' i' → logprob: -4.007000923156738
    4. 'range' → logprob: -5.007000923156738
    5. ' card' → logprob: -5.257000923156738
    6. ' range' → logprob: -7.132000923156738
    7. '   ' → logprob: -8.007000923156738
    8. '0' → logprob: -8.007000923156738
    9. 'cards' → logprob: -8.132000923156738
    10. '[i' → logprob: -8.382000923156738

Token 608: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6554604768753052
    2. '       ' → logprob: -0.7804604768753052
    3. '   ' → logprob: -5.155460357666016
    4. '        
' → logprob: -5.655460357666016
    5. '```' → logprob: -5.780460357666016
    6. 'def' → logprob: -5.905460357666016
    7. 'selected' → logprob: -6.780460357666016
    8. 'best' → logprob: -7.030460357666016
    9. 'finish' → logprob: -7.530460357666016
    10. '    
' → logprob: -7.655460357666016

Token 609: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15053679049015045
    2. 'def' → logprob: -2.0255367755889893
    3. '```' → logprob: -5.150537014007568
    4. '   ' → logprob: -7.525537014007568
    5. '    
' → logprob: -8.02553653717041
    6. '        
' → logprob: -8.02553653717041
    7. '       ' → logprob: -8.77553653717041
    8. 'selected' → logprob: -8.77553653717041
    9. '``' → logprob: -8.77553653717041
    10. 'stack' → logprob: -9.02553653717041

Token 610: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.6482206583023071
    2. 'best' → logprob: -1.5232206583023071
    3. 'min' → logprob: -2.1482205390930176
    4. 'stack' → logprob: -3.0232205390930176
    5. 'dp' → logprob: -3.3982205390930176
    6. 'memo' → logprob: -3.6482205390930176
    7. 'selected' → logprob: -4.898220539093018
    8. 'ans' → logprob: -5.148220539093018
    9. 'answer' → logprob: -5.648220539093018
    10. '       ' → logprob: -5.773220539093018

Token 611: ' Pre' (ID: 4659)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.010151968337595463
    2. 'stack' → logprob: -5.1351518630981445
    3. '@' → logprob: -6.7601518630981445
    4. 'memo' → logprob: -7.1351518630981445
    5. 'visited' → logprob: -7.5101518630981445
    6. 'dp' → logprob: -7.8851518630981445
    7. 'cache' → logprob: -7.8851518630981445
    8. 'from' → logprob: -8.510151863098145
    9. '       ' → logprob: -8.510151863098145
    10. '   ' → logprob: -8.760151863098145

Token 612: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.17422883212566376
    2. 'v' → logprob: -2.7992289066314697
    3. 'sum' → logprob: -3.4242289066314697
    4. 'computed' → logprob: -4.174228668212891
    5. '_sum' → logprob: -4.299228668212891
    6. 'cache' → logprob: -4.674228668212891
    7. 'processed' → logprob: -5.174228668212891
    8. 'vious' → logprob: -5.424228668212891
    9. 'calculate' → logprob: -6.174228668212891
    10. 'pare' → logprob: -6.424228668212891

Token 613: ' for' (ID: 395)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.46598419547080994
    2. 'line' → logprob: -1.2159842252731323
    3. 'all' → logprob: -3.5909841060638428
    4. 'min' → logprob: -3.8409841060638428
    5. 'lines' → logprob: -4.215984344482422
    6. 'finish' → logprob: -5.590984344482422
    7. ' line' → logprob: -6.465984344482422
    8. 'unique' → logprob: -6.590984344482422
    9. 'card' → logprob: -6.715984344482422
    10. ' max' → logprob: -7.340984344482422

Token 614: ' each' (ID: 2454)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5448899865150452
    2. 'each' → logprob: -1.4198899269104004
    3. 'card' → logprob: -2.6698899269104004
    4. 'i' → logprob: -2.9198899269104004
    5. ' c' → logprob: -3.6698899269104004
    6. 'all' → logprob: -4.5448899269104
    7. ' each' → logprob: -5.4198899269104
    8. 'cards' → logprob: -5.6698899269104
    9. ' i' → logprob: -5.7948899269104
    10. ' card' → logprob: -5.9198899269104

Token 615: ' card' (ID: 4766)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.12887687981128693
    2. 'c' → logprob: -2.2538769245147705
    3. 'i' → logprob: -4.628876686096191
    4. ' card' → logprob: -5.628876686096191
    5. ' c' → logprob: -7.378876686096191
    6. 'line' → logprob: -7.378876686096191
    7. 'p' → logprob: -7.378876686096191
    8. ' i' → logprob: -8.378876686096191
    9. '   ' → logprob: -9.003876686096191
    10. 'cards' → logprob: -9.753876686096191

Token 616: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9597577452659607
    2. 'for' → logprob: -1.9597578048706055
    3. 'and' → logprob: -2.0847578048706055
    4. ' and' → logprob: -2.3347578048706055
    5. '   ' → logprob: -3.4597578048706055
    6. 'c' → logprob: -3.8347578048706055
    7. '_lines' → logprob: -3.9597578048706055
    8. ' for' → logprob: -4.0847578048706055
    9. '_line' → logprob: -4.0847578048706055
    10. '       ' → logprob: -4.2097578048706055

Token 617: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.024206729605793953
    2. 'each' → logprob: -4.399206638336182
    3. ' line' → logprob: -5.024206638336182
    4. 'for' → logprob: -5.399206638336182
    5. ' each' → logprob: -7.899206638336182
    6. ' for' → logprob: -9.89920711517334
    7. '
' → logprob: -10.39920711517334
    8. '   ' → logprob: -10.77420711517334
    9. '#line' → logprob: -11.27420711517334
    10. 'card' → logprob: -11.27420711517334

Token 618: ':
' (ID: 734)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.0989233255386353
    2. ',' → logprob: -2.3489232063293457
    3. 'line' → logprob: -2.3489232063293457
    4. ' line' → logprob: -2.4739232063293457
    5. 'max' → logprob: -2.5989232063293457
    6. 'the' → logprob: -2.7239232063293457
    7. ' the' → logprob: -3.3489232063293457
    8. ' min' → logprob: -3.5989232063293457
    9. ' minimal' → logprob: -3.8489232063293457
    10. 'lines' → logprob: -3.9739232063293457

Token 619: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30699247121810913
    2. 'max' → logprob: -2.306992530822754
    3. ' max' → logprob: -2.931992530822754
    4. 'min' → logprob: -3.181992530822754
    5. ' min' → logprob: -3.556992530822754
    6. ' line' → logprob: -4.181992530822754
    7. 'line' → logprob: -4.931992530822754
    8. 'pre' → logprob: -6.056992530822754
    9. ' lines' → logprob: -6.181992530822754
    10. ' pre' → logprob: -6.431992530822754

Token 620: ' #' (ID: 1069)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.8485623598098755
    2. 'max' → logprob: -1.0985623598098755
    3. 'min' → logprob: -1.7235623598098755
    4. '       ' → logprob: -4.473562240600586
    5. 'lines' → logprob: -4.723562240600586
    6. 'finish' → logprob: -4.723562240600586
    7. ' line' → logprob: -4.848562240600586
    8. 'card' → logprob: -5.348562240600586
    9. ' max' → logprob: -5.473562240600586
    10. '   ' → logprob: -5.723562240600586

Token 621: ' line' (ID: 2543)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.937354564666748
    2. 'max' → logprob: -1.312354564666748
    3. 'line' → logprob: -1.437354564666748
    4. ' line' → logprob: -3.812354564666748
    5. ' min' → logprob: -3.937354564666748
    6. 'lines' → logprob: -4.562354564666748
    7. ' max' → logprob: -4.562354564666748
    8. '#' → logprob: -4.812354564666748
    9. 'card' → logprob: -5.312354564666748
    10. 'finish' → logprob: -5.312354564666748

Token 622: '_set' (ID: 5451)
  Prédit: '_sets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sets' → logprob: -0.2746741473674774
    2. '_numbers' → logprob: -2.2746741771698
    3. '_nums' → logprob: -2.3996741771698
    4. 'sets' → logprob: -4.149673938751221
    5. '_max' → logprob: -4.149673938751221
    6. 'nums' → logprob: -5.899673938751221
    7. 'max' → logprob: -6.024673938751221
    8. '_lines' → logprob: -6.399673938751221
    9. '_min' → logprob: -6.649673938751221
    10. '_values' → logprob: -6.899673938751221

Token 623: ':' (ID: 25)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.39423584938049316
    2. ' =' → logprob: -1.2692358493804932
    3. '=' → logprob: -3.769235849380493
    4. '_sets' → logprob: -5.269235610961914
    5. '_sizes' → logprob: -5.644235610961914
    6. '   ' → logprob: -5.769235610961914
    7. 'for' → logprob: -6.644235610961914
    8. '_line' → logprob: -6.894235610961914
    9. '=line' → logprob: -7.019235610961914
    10. 'sets' → logprob: -7.019235610961914

Token 624: ' set' (ID: 920)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.7943199276924133
    2. 'line' → logprob: -1.4193198680877686
    3. 'card' → logprob: -2.2943198680877686
    4. ' line' → logprob: -2.5443198680877686
    5. ' cards' → logprob: -3.0443198680877686
    6. '       ' → logprob: -3.4193198680877686
    7. 'lines' → logprob: -4.294320106506348
    8. ' lines' → logprob: -4.669320106506348
    9. '[line' → logprob: -5.169320106506348
    10. 'set' → logprob: -5.669320106506348

Token 625: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9250474572181702
    2. '(cards' → logprob: -1.5500473976135254
    3. 's' → logprob: -2.4250473976135254
    4. '=' → logprob: -2.4250473976135254
    5. 'of' → logprob: -3.4250473976135254
    6. 'cards' → logprob: -3.8000473976135254
    7. '_cards' → logprob: -3.9250473976135254
    8. 'for' → logprob: -4.050047397613525
    9. 'numbers' → logprob: -4.175047397613525
    10. '       ' → logprob: -4.300047397613525

Token 626: ' numbers' (ID: 8663)
  Prédit: 'numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'numbers' → logprob: -0.19336695969104767
    2. 'cards' → logprob: -2.0683670043945312
    3. 'int' → logprob: -3.6933670043945312
    4. 'ints' → logprob: -4.068367004394531
    5. ' numbers' → logprob: -5.568367004394531
    6. 'nums' → logprob: -6.818367004394531
    7. 'card' → logprob: -7.318367004394531
    8. ' cards' → logprob: -7.693367004394531
    9. 'all' → logprob: -7.818367004394531
    10. 'inte' → logprob: -8.443367004394531

Token 627: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5399848222732544
    2. 's' → logprob: -1.5399848222732544
    3. '=' → logprob: -2.789984703063965
    4. 'cards' → logprob: -4.164984703063965
    5. '[line' → logprob: -4.164984703063965
    6. '   ' → logprob: -4.414984703063965
    7. '       ' → logprob: -4.414984703063965
    8. 'for' → logprob: -4.414984703063965
    9. ' for' → logprob: -5.039984703063965
    10. ' cards' → logprob: -5.039984703063965

Token 628: ' line' (ID: 2543)
  Prédit: 'cards'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cards' → logprob: -0.009459740482270718
    2. 'card' → logprob: -4.884459972381592
    3. ' cards' → logprob: -6.384459972381592
    4. '   ' → logprob: -9.884459495544434
    5. '(cards' → logprob: -10.759459495544434
    6. '           ' → logprob: -10.759459495544434
    7. 'lines' → logprob: -11.509459495544434
    8. '       ' → logprob: -11.634459495544434
    9. 'line' → logprob: -11.884459495544434
    10. ' card' → logprob: -12.009459495544434

Token 629: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05828186124563217
    2. '
' → logprob: -4.308281898498535
    3. 'line' → logprob: -4.433281898498535
    4. ',' → logprob: -4.808281898498535
    5. '#' → logprob: -5.183281898498535
    6. 'card' → logprob: -5.683281898498535
    7. ' line' → logprob: -6.183281898498535
    8. '        
' → logprob: -6.683281898498535
    9. ' lines' → logprob: -6.683281898498535
    10. '```' → logprob: -6.683281898498535

Token 630: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15921656787395477
    2. '#' → logprob: -2.2842166423797607
    3. '```' → logprob: -4.659216403961182
    4. 'line' → logprob: -4.784216403961182
    5. ',' → logprob: -4.909216403961182
    6. '
' → logprob: -5.034216403961182
    7. 'tokens' → logprob: -5.409216403961182
    8. 'lines' → logprob: -5.784216403961182
    9. ' lines' → logprob: -7.159216403961182
    10. ' line' → logprob: -7.534216403961182

Token 631: ' #' (ID: 1069)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.49684303998947144
    2. '       ' → logprob: -1.4968430995941162
    3. '#' (adapté à ' #') → logprob: -2.496843099594116
    4. '
' → logprob: -3.496843099594116
    5. ' line' → logprob: -4.246842861175537
    6. ',' → logprob: -4.621842861175537
    7. 'card' → logprob: -4.996842861175537
    8. '```' → logprob: -4.996842861175537
    9. 'lines' → logprob: -5.246842861175537
    10. ',
' → logprob: -5.621842861175537

Token 632: ' max' (ID: 2999)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.06471866369247437
    2. 'min' → logprob: -3.814718723297119
    3. '#' → logprob: -4.189718723297119
    4. 'finish' → logprob: -4.814718723297119
    5. 'max' → logprob: -5.064718723297119
    6. '       ' → logprob: -5.314718723297119
    7. 'lines' → logprob: -6.689718723297119
    8. 'fin' → logprob: -6.939718723297119
    9. 'card' → logprob: -7.314718723297119
    10. 'def' → logprob: -7.564718723297119

Token 633: '_num' (ID: 9834)
  Prédit: '_num'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.12138041853904724
    2. 'num' → logprob: -2.99638032913208
    3. '_number' → logprob: -3.24638032913208
    4. '_line' → logprob: -4.74638032913208
    5. '_val' → logprob: -5.62138032913208
    6. '_nums' → logprob: -5.62138032913208
    7. '_in' → logprob: -5.74638032913208
    8. '_numbers' → logprob: -5.87138032913208
    9. '_value' → logprob: -7.24638032913208
    10. '_set' → logprob: -7.37138032913208

Token 634: '_line' (ID: 14418)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5077434778213501
    2. '_in' → logprob: -1.50774347782135
    3. 's' → logprob: -2.7577433586120605
    4. '_per' → logprob: -3.0077433586120605
    5. ':' → logprob: -4.1327433586120605
    6. '_set' → logprob: -4.2577433586120605
    7. '_line' → logprob: -4.3827433586120605
    8. '=' → logprob: -4.6327433586120605
    9. 'in' → logprob: -6.1327433586120605
    10. '_lines' → logprob: -6.8827433586120605

Token 635: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12562789022922516
    2. 's' → logprob: -3.1256279945373535
    3. '_line' → logprob: -3.1256279945373535
    4. '=' → logprob: -4.3756279945373535
    5. '_in' → logprob: -4.8756279945373535
    6. '_per' → logprob: -6.3756279945373535
    7. '   ' → logprob: -6.5006279945373535
    8. ':' → logprob: -6.7506279945373535
    9. '_num' → logprob: -7.3756279945373535
    10. 'line' → logprob: -7.3756279945373535

Token 636: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.25697001814842224
    2. '[' → logprob: -2.256969928741455
    3. '[max' → logprob: -2.256969928741455
    4. '[[' → logprob: -4.631969928741455
    5. '[
' → logprob: -5.631969928741455
    6. ' max' → logprob: -6.756969928741455
    7. '[]
' → logprob: -7.381969928741455
    8. '[]' → logprob: -7.631969928741455
    9. 'cards' → logprob: -7.881969928741455
    10. '0' → logprob: -8.256970405578613

Token 637: ' number' (ID: 2086)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.24448835849761963
    2. '(cards' → logprob: -2.74448823928833
    3. 'num' → logprob: -3.11948823928833
    4. '_line' → logprob: -3.24448823928833
    5. '_number' → logprob: -4.61948823928833
    6. 'cards' → logprob: -4.74448823928833
    7. '_card' → logprob: -4.74448823928833
    8. '_set' → logprob: -5.11948823928833
    9. '_cards' → logprob: -5.24448823928833
    10. '_numbers' → logprob: -5.74448823928833

Token 638: ' in' (ID: 306)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -0.4054180383682251
    2. 's' → logprob: -1.780418038368225
    3. ' =' → logprob: -2.6554179191589355
    4. '_line' → logprob: -3.1554179191589355
    5. '_per' → logprob: -4.5304179191589355
    6. '=' → logprob: -4.7804179191589355
    7. ' in' → logprob: -4.9054179191589355
    8. 'in' → logprob: -5.2804179191589355
    9. '_set' → logprob: -5.5304179191589355
    10. 'for' → logprob: -5.5304179191589355

Token 639: ' line' (ID: 2543)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.8636952042579651
    2. 'line' → logprob: -0.9886952042579651
    3. 'cards' → logprob: -1.6136951446533203
    4. 'lines' → logprob: -5.73869514465332
    5. 'cl' → logprob: -6.61369514465332
    6. 'set' → logprob: -7.86369514465332
    7. 'max' → logprob: -7.98869514465332
    8. ' line' → logprob: -8.36369514465332
    9. '(card' → logprob: -8.36369514465332
    10. '(cards' → logprob: -8.48869514465332

Token 640: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8754462003707886
    2. '
' → logprob: -1.1254462003707886
    3. 'max' → logprob: -1.3754462003707886
    4. ' max' → logprob: -6.000446319580078
    5. '        
' → logprob: -6.375446319580078
    6. ',' → logprob: -7.875446319580078
    7. '

' → logprob: -8.125446319580078
    8. '#' → logprob: -8.375446319580078
    9. '_max' → logprob: -9.125446319580078
    10. ')
' → logprob: -9.250446319580078

Token 641: '       ' (ID: 309)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7643869519233704
    2. '       ' → logprob: -0.8893869519233704
    3. '
' → logprob: -2.7643868923187256
    4. '#' → logprob: -3.0143868923187256
    5. 'line' → logprob: -5.639387130737305
    6. '```' → logprob: -6.139387130737305
    7. ' max' → logprob: -6.764387130737305
    8. 'lines' → logprob: -7.139387130737305
    9. '        
' → logprob: -7.764387130737305
    10. '#
' → logprob: -7.764387130737305

Token 642: ' line' (ID: 2543)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.32747822999954224
    2. '       ' → logprob: -1.3274781703948975
    3. '
' → logprob: -4.952478408813477
    4. ' max' → logprob: -5.952478408813477
    5. '#' → logprob: -6.202478408813477
    6. 'line' (adapté à ' line') → logprob: -6.702478408813477
    7. '```' → logprob: -8.077478408813477
    8. 'card' → logprob: -8.702478408813477
    9. '        
' → logprob: -8.827478408813477
    10. '_max' → logprob: -9.577478408813477

Token 643: '_info' (ID: 6744)
  Prédit: '_sets'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sets' → logprob: -0.3298049867153168
    2. '_set' → logprob: -1.4548050165176392
    3. '_max' → logprob: -3.2048048973083496
    4. 's' → logprob: -5.32980489730835
    5. '_' → logprob: -7.20480489730835
    6. '_s' → logprob: -7.82980489730835
    7. '_line' → logprob: -8.329805374145508
    8. 'max' → logprob: -8.454805374145508
    9. '_nums' → logprob: -8.704805374145508
    10. 'set' → logprob: -9.454805374145508

Token 644: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03018304333090782
    2. ' =' → logprob: -3.5301830768585205
    3. 's' → logprob: -7.780182838439941
    4. '=[]' → logprob: -12.280182838439941
    5. '=[' → logprob: -13.030182838439941
    6. '   ' → logprob: -13.030182838439941
    7. '[' → logprob: -13.405182838439941
    8. '_' → logprob: -13.530182838439941
    9. ' ' → logprob: -14.780182838439941
    10. '=
' → logprob: -14.905182838439941

Token 645: ' []
' (ID: 8911)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.2957066595554352
    2. '[]
' → logprob: -1.5457066297531128
    3. '[' → logprob: -3.2957067489624023
    4. '[
' → logprob: -5.545706748962402
    5. '[]' → logprob: -6.295706748962402
    6. '[]

' → logprob: -10.795706748962402
    7. ' [[' → logprob: -12.045706748962402
    8. '[{' → logprob: -12.295706748962402
    9. '[][]' → logprob: -12.670706748962402
    10. '[(' → logprob: -12.670706748962402

Token 646: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24987080693244934
    2. 'for' → logprob: -1.874870777130127
    3. ' for' → logprob: -3.124870777130127
    4. '[' → logprob: -4.999870777130127
    5. '[
' → logprob: -5.124870777130127
    6. '[]' → logprob: -5.624870777130127
    7. ' =' → logprob: -5.624870777130127
    8. '   ' → logprob: -6.749870777130127
    9. '=' → logprob: -7.499870777130127
    10. ',' → logprob: -7.749870777130127

Token 647: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.018440689891576767
    2. ' for' → logprob: -4.2684407234191895
    3. '       ' → logprob: -5.7684407234191895
    4. '[
' → logprob: -7.3934407234191895
    5. '   ' → logprob: -8.393440246582031
    6. '[' → logprob: -8.518440246582031
    7. '[]
' → logprob: -9.643440246582031
    8. '[]' → logprob: -10.768440246582031
    9. '
' → logprob: -11.518440246582031
    10. '	for' → logprob: -13.518440246582031

Token 648: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -7.123899558791891e-05
    2. 'i' → logprob: -10.00007152557373
    3. 'card' → logprob: -10.75007152557373
    4. ' c' → logprob: -12.62507152557373
    5. '_c' → logprob: -14.75007152557373
    6. 'p' → logprob: -15.62507152557373
    7. 'cards' → logprob: -15.75007152557373
    8. '   ' → logprob: -16.125070571899414
    9. '```' → logprob: -16.125070571899414
    10. '	c' → logprob: -17.250070571899414

Token 649: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018166683614253998
    2. 'in' → logprob: -4.018166542053223
    3. ' ' → logprob: -12.018166542053223
    4. ',' → logprob: -12.268166542053223
    5. '   ' → logprob: -12.643166542053223
    6. 'n' → logprob: -14.518166542053223
    7. 'import' → logprob: -15.018166542053223
    8. '  ' → logprob: -15.018166542053223
    9. '_' → logprob: -15.143166542053223
    10. 's' → logprob: -15.268166542053223

Token 650: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020354038861114532
    2. ' range' → logprob: -8.500203132629395
    3. ' ' → logprob: -18.37520408630371
    4. '   ' → logprob: -18.37520408630371
    5. 'P' → logprob: -19.87520408630371
    6. '  ' → logprob: -20.25020408630371
    7. '
' → logprob: -21.12520408630371
    8. 'cards' → logprob: -21.37520408630371
    9. 'card' → logprob: -21.62520408630371
    10. '    ' → logprob: -21.75020408630371

Token 651: '(P' (ID: 8952)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -7.226628895296017e-06
    2. '(P' → logprob: -12.375007629394531
    3. '       ' → logprob: -13.000007629394531
    4. ' P' → logprob: -14.250007629394531
    5. '   ' → logprob: -16.37500762939453
    6. '           ' → logprob: -18.62500762939453
    7. '
' → logprob: -19.87500762939453
    8. 'len' → logprob: -19.87500762939453
    9. 'range' → logprob: -20.37500762939453
    10. ',P' → logprob: -20.37500762939453

Token 652: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.023539412766695023
    2. '):' → logprob: -3.7735393047332764
    3. '   ' → logprob: -8.773539543151855
    4. '):
' → logprob: -9.273539543151855
    5. '       ' → logprob: -10.273539543151855
    6. ':' → logprob: -12.398539543151855
    7. ':
' → logprob: -12.898539543151855
    8. ')' → logprob: -14.023539543151855
    9. '):

' → logprob: -14.148539543151855
    10. '           ' → logprob: -14.398539543151855

Token 653: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0049495818093419075
    2. '           ' → logprob: -5.629949569702148
    3. '       ' → logprob: -6.629949569702148
    4. ' line' → logprob: -12.004949569702148
    5. '```' → logprob: -12.129949569702148
    6. ',' → logprob: -12.504949569702148
    7. '[line' → logprob: -12.754949569702148
    8. ' lines' → logprob: -13.254949569702148
    9. ':' → logprob: -13.629949569702148
    10. '
' → logprob: -13.754949569702148

Token 654: ' info' (ID: 5377)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32138171792030334
    2. 'info' (adapté à ' info') → logprob: -2.0713818073272705
    3. 'card' → logprob: -2.6963818073272705
    4. 'line' → logprob: -3.3213818073272705
    5. 'tmp' → logprob: -4.696381568908691
    6. 'c' → logprob: -4.821381568908691
    7. 'temp' → logprob: -4.821381568908691
    8. 'lst' → logprob: -5.196381568908691
    9. 'li' → logprob: -5.321381568908691
    10. '       ' → logprob: -5.696381568908691

Token 655: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.716407060623169
    2. '.append' → logprob: -0.841407060623169
    3. ' =' → logprob: -2.841407060623169
    4. '=[]' → logprob: -4.09140682220459
    5. '.' → logprob: -6.09140682220459
    6. '_line' → logprob: -6.96640682220459
    7. 'append' → logprob: -7.21640682220459
    8. '_append' → logprob: -7.96640682220459
    9. '=[]
' → logprob: -8.09140682220459
    10. '_c' → logprob: -8.46640682220459

Token 656: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.04860111325979233
    2. '[]' → logprob: -3.0486011505126953
    3. '[(' → logprob: -11.548601150512695
    4. '[' → logprob: -13.298601150512695
    5. ' []
' → logprob: -13.548601150512695
    6. '[
' → logprob: -14.548601150512695
    7. '[]

' → logprob: -14.798601150512695
    8. ' []' → logprob: -15.548601150512695
    9. '[])
' → logprob: -17.173601150512695
    10. '   ' → logprob: -18.548601150512695

Token 657: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01442744955420494
    2. ' for' → logprob: -4.514427661895752
    3. '       ' → logprob: -7.139427661895752
    4. '   ' → logprob: -7.639427661895752
    5. '               ' → logprob: -7.639427661895752
    6. 'for' → logprob: -7.764427661895752
    7. '[' → logprob: -8.264427185058594
    8. ',' → logprob: -8.639427185058594
    9. '	       ' → logprob: -8.764427185058594
    10. ' ' → logprob: -9.639427185058594

Token 658: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.24663028120994568
    2. '           ' → logprob: -1.621630311012268
    3. ' for' → logprob: -3.8716301918029785
    4. '   ' → logprob: -9.121630668640137
    5. '       ' → logprob: -9.996630668640137
    6. '               ' → logprob: -11.621630668640137
    7. ' ' → logprob: -12.996630668640137
    8. '	for' → logprob: -14.121630668640137
    9. '                   ' → logprob: -14.621630668640137
    10. '
' → logprob: -14.996630668640137

Token 659: ' s' (ID: 265)
  Prédit: 'ln'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ln' → logprob: -0.030623164027929306
    2. 'line' → logprob: -3.780623197555542
    3. 'l' → logprob: -5.905622959136963
    4. ' ln' → logprob: -5.905622959136963
    5. 'cl' → logprob: -7.280622959136963
    6. 's' → logprob: -7.780622959136963
    7. 'lines' → logprob: -8.030623435974121
    8. ' line' → logprob: -8.780623435974121
    9. '   ' → logprob: -9.155623435974121
    10. 'ls' → logprob: -10.030623435974121

Token 660: ' in' (ID: 306)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -0.8801939487457275
    2. ' in' → logprob: -1.0051939487457275
    3. 'ets' → logprob: -1.8801939487457275
    4. 'in' → logprob: -2.7551939487457275
    5. 's' → logprob: -6.130193710327148
    6. 'n' → logprob: -7.880193710327148
    7. 'ett' → logprob: -8.755193710327148
    8. 'idx' → logprob: -9.630193710327148
    9. 'i' → logprob: -10.130193710327148
    10. 'e' → logprob: -10.255193710327148

Token 661: ' cards' (ID: 10541)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2571942210197449
    2. 'card' → logprob: -2.0071942806243896
    3. 'cards' → logprob: -2.3821942806243896
    4. ' range' → logprob: -10.632194519042969
    5. '[c' → logprob: -11.382194519042969
    6. 'c' → logprob: -11.507194519042969
    7. '[' → logprob: -11.882194519042969
    8. 'lines' → logprob: -12.507194519042969
    9. 'car' → logprob: -13.007194519042969
    10. '(card' → logprob: -13.257194519042969

Token 662: '_lines' (ID: 42980)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.030423827469348907
    2. '_lines' → logprob: -3.530423879623413
    3. 'lines' → logprob: -7.655423641204834
    4. '           ' → logprob: -8.780424118041992
    5. 'Lines' → logprob: -11.155424118041992
    6. '       ' → logprob: -11.905424118041992
    7. '][' → logprob: -12.405424118041992
    8. '[' → logprob: -12.530424118041992
    9. '   ' → logprob: -12.905424118041992
    10. '_LINES' → logprob: -13.280424118041992

Token 663: '_sets' (ID: 56707)
  Prédit: '[c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.09525813907384872
    2. 'ets' → logprob: -2.5952582359313965
    3. '_sets' → logprob: -4.4702582359313965
    4. 'sets' → logprob: -5.4702582359313965
    5. 'et' → logprob: -7.5952582359313965
    6. 'set' → logprob: -10.470257759094238
    7. '[' → logprob: -11.220257759094238
    8. 'c' → logprob: -12.095257759094238
    9. 'Sets' → logprob: -12.220257759094238
    10. 's' → logprob: -12.220257759094238

Token 664: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.3856492842023727e-06
    2. '(c' → logprob: -15.000000953674316
    3. '][' → logprob: -15.250000953674316
    4. '           ' → logprob: -15.375000953674316
    5. '[' → logprob: -15.750000953674316
    6. ' [' → logprob: -16.625001907348633
    7. '   ' → logprob: -16.750001907348633
    8. 'c' → logprob: -17.000001907348633
    9. '       ' → logprob: -17.125001907348633
    10. '[
' → logprob: -17.250001907348633

Token 665: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.02672148309648037
    2. ']:' → logprob: -3.901721477508545
    3. '):
' → logprob: -5.651721477508545
    4. '][' → logprob: -7.026721477508545
    5. ']):
' → logprob: -7.651721477508545
    6. '           ' → logprob: -7.901721477508545
    7. '[s' → logprob: -8.901721954345703
    8. ']' → logprob: -9.151721954345703
    9. 's' → logprob: -9.151721954345703
    10. '[' → logprob: -9.151721954345703

Token 666: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004521222144830972
    2. ':' → logprob: -8.500452041625977
    3. ':
' → logprob: -9.875452041625977
    4. 'info' → logprob: -10.375452041625977
    5. '           ' → logprob: -10.500452041625977
    6. ' line' → logprob: -10.500452041625977
    7. ',' → logprob: -11.125452041625977
    8. '
' → logprob: -11.250452041625977
    9. '):
' → logprob: -11.250452041625977
    10. '.append' → logprob: -11.500452041625977

Token 667: ' mx' (ID: 28004)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.4874225854873657
    2. '                   ' → logprob: -1.4874225854873657
    3. '               ' → logprob: -1.4874225854873657
    4. '           ' → logprob: -2.362422466278076
    5. 'info' → logprob: -2.487422466278076
    6. 'max' → logprob: -2.612422466278076
    7. ' max' → logprob: -3.237422466278076
    8. ' info' → logprob: -3.737422466278076
    9. 'line' → logprob: -5.737422466278076
    10. '       ' → logprob: -5.987422466278076

Token 668: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5044388175010681
    2. '=' → logprob: -1.504438877105713
    3. '=max' → logprob: -1.754438877105713
    4. 'x' → logprob: -7.879438877105713
    5. '_num' → logprob: -8.754438400268555
    6. '=set' → logprob: -9.004438400268555
    7. '=s' → logprob: -10.004438400268555
    8. 'ax' → logprob: -10.004438400268555
    9. '=int' → logprob: -10.004438400268555
    10. 'max' → logprob: -10.379438400268555

Token 669: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.0009115827269852161
    2. ' max' → logprob: -7.000911712646484
    3. '(max' → logprob: -16.250911712646484
    4. '=max' → logprob: -17.625911712646484
    5. 's' → logprob: -17.750911712646484
    6. '   ' → logprob: -18.250911712646484
    7. '0' → logprob: -18.625911712646484
    8. '	max' → logprob: -18.875911712646484
    9. '[max' → logprob: -19.500911712646484
    10. ',max' → logprob: -19.625911712646484

Token 670: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0007157695363275707
    2. 's' → logprob: -7.250715732574463
    3. '(' → logprob: -12.625716209411621
    4. '(_)' → logprob: -13.250716209411621
    5. '(
' → logprob: -15.000716209411621
    6. '_' → logprob: -16.250715255737305
    7. '
' → logprob: -16.875715255737305
    8. '(list' → logprob: -17.250715255737305
    9. '((' → logprob: -17.375715255737305
    10. ')' → logprob: -17.375715255737305

Token 671: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5762313008308411
    2. ')' → logprob: -0.8262313008308411
    3. '               ' → logprob: -8.701231002807617
    4. ')
' → logprob: -9.326231002807617
    5. ' )
' → logprob: -11.201231002807617
    6. '),' → logprob: -12.576231002807617
    7. ');' → logprob: -12.701231002807617
    8. ' )' → logprob: -12.826231002807617
    9. ')`
' → logprob: -12.951231002807617
    10. '       ' → logprob: -13.076231002807617

Token 672: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001507405104348436
    2. ',' → logprob: -9.125150680541992
    3. '
' → logprob: -11.875150680541992
    4. ')' → logprob: -12.125150680541992
    5. '<|end|>' → logprob: -12.125150680541992
    6. '<|end|>' → logprob: -12.250150680541992
    7. ',
' → logprob: -12.625150680541992
    8. '                
' → logprob: -12.750150680541992
    9. '			' → logprob: -13.375150680541992
    10. '```' → logprob: -13.500150680541992

Token 673: ' info' (ID: 5377)
  Prédit: 'info'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'info' (adapté à ' info') → logprob: -0.02137143723666668
    2. '               ' → logprob: -4.021371364593506
    3. ' info' → logprob: -5.771371364593506
    4. '           ' → logprob: -9.646371841430664
    5. 'line' → logprob: -10.646371841430664
    6. '                   ' → logprob: -12.396371841430664
    7. '   ' → logprob: -13.021371841430664
    8. 'inf' → logprob: -13.521371841430664
    9. '	info' → logprob: -14.271371841430664
    10. 't' → logprob: -14.646371841430664

Token 674: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.003186267102137208
    2. '=' → logprob: -6.503186225891113
    3. ' =' → logprob: -7.253186225891113
    4. '.' → logprob: -7.753186225891113
    5. ',' → logprob: -7.878186225891113
    6. 'append' → logprob: -9.503186225891113
    7. ')' → logprob: -10.878186225891113
    8. '               ' → logprob: -11.128186225891113
    9. ' .' → logprob: -11.628186225891113
    10. '           ' → logprob: -11.628186225891113

Token 675: '((' (ID: 2054)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.18339425325393677
    2. '(' → logprob: -1.933394193649292
    3. ' (' → logprob: -4.433394432067871
    4. '((' → logprob: -4.558394432067871
    5. '({'' → logprob: -7.558394432067871
    6. '   ' → logprob: -11.308394432067871
    7. '{'' → logprob: -12.433394432067871
    8. '({"' → logprob: -12.933394432067871
    9. '(x' → logprob: -13.683394432067871
    10. '(m' → logprob: -13.683394432067871

Token 676: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -2.5776860184123507e-06
    2. 'mx' → logprob: -13.37500286102295
    3. 'len' → logprob: -14.75000286102295
    4. ' s' → logprob: -15.50000286102295
    5. '{s' → logprob: -15.75000286102295
    6. '_,' → logprob: -15.87500286102295
    7. '(s' → logprob: -16.625001907348633
    8. ',' → logprob: -16.875001907348633
    9. 'fro' → logprob: -17.500001907348633
    10. '   ' → logprob: -17.625001907348633

Token 677: ',m' (ID: 26648)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004718126263469458
    2. ',)' → logprob: -6.00471830368042
    3. ',len' → logprob: -7.12971830368042
    4. ',m' → logprob: -7.75471830368042
    5. ',max' → logprob: -8.254717826843262
    6. ',
' → logprob: -8.379717826843262
    7. ')' → logprob: -8.504717826843262
    8. ' ,' → logprob: -9.379717826843262
    9. ',size' → logprob: -10.004717826843262
    10. ',length' → logprob: -10.504717826843262

Token 678: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0009165783412754536
    2. 'ax' → logprob: -7.000916481018066
    3. 'a' → logprob: -12.500916481018066
    4. 'len' → logprob: -14.750916481018066
    5. '[' → logprob: -15.875916481018066
    6. ')' → logprob: -16.125917434692383
    7. '```' → logprob: -16.250917434692383
    8. '
' → logprob: -16.750917434692383
    9. '))' → logprob: -16.813417434692383
    10. 'm' → logprob: -16.938417434692383

Token 679: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.01852155290544033
    2. ')' → logprob: -4.018521785736084
    3. '))
' → logprob: -8.768521308898926
    4. ',' → logprob: -9.018521308898926
    5. '),' → logprob: -9.393521308898926
    6. ')
' → logprob: -12.643521308898926
    7. ')),' → logprob: -13.518521308898926
    8. ')))' → logprob: -13.768521308898926
    9. ' ))' → logprob: -13.768521308898926
    10. '));' → logprob: -13.893521308898926

Token 680: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13749925792217255
    2. '           ' → logprob: -2.6374993324279785
    3. ')' → logprob: -3.7624993324279785
    4. '<|end|>' → logprob: -4.3874993324279785
    5. '        
' → logprob: -4.8874993324279785
    6. 'def' → logprob: -5.1374993324279785
    7. '```' → logprob: -6.2624993324279785
    8. '<|end|>' → logprob: -6.5124993324279785
    9. '
' → logprob: -6.6374993324279785
    10. '	       ' → logprob: -8.13749885559082

Token 681: ' line' (ID: 2543)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2577808201313019
    2. '           ' → logprob: -2.3827807903289795
    3. 'def' → logprob: -2.7577807903289795
    4. 'line' (adapté à ' line') → logprob: -3.6327807903289795
    5. ' line' → logprob: -4.007781028747559
    6. '   ' → logprob: -4.632781028747559
    7. '
' → logprob: -5.007781028747559
    8. ')' → logprob: -5.507781028747559
    9. '[line' → logprob: -6.882781028747559
    10. '        
' → logprob: -7.257781028747559

Token 682: '_info' (ID: 6744)
  Prédit: '_info'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_info' → logprob: -0.002889990573748946
    2. 'info' → logprob: -6.002890110015869
    3. 's' → logprob: -8.752889633178711
    4. '_' → logprob: -9.377889633178711
    5. '.append' → logprob: -9.752889633178711
    6. ')' → logprob: -10.877889633178711
    7. '=' → logprob: -11.002889633178711
    8. 'for' → logprob: -11.377889633178711
    9. '_infos' → logprob: -11.877889633178711
    10. ' =' → logprob: -12.127889633178711

Token 683: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006726975552737713
    2. '.' → logprob: -5.0067267417907715
    3. 'append' → logprob: -12.13172721862793
    4. '.app' → logprob: -12.75672721862793
    5. '.extend' → logprob: -13.63172721862793
    6. ' .' → logprob: -14.25672721862793
    7. ').' → logprob: -15.00672721862793
    8. '=' → logprob: -15.25672721862793
    9. '.ap' → logprob: -15.25672721862793
    10. '.setdefault' → logprob: -15.75672721862793

Token 684: '(info' (ID: 28422)
  Prédit: '(info'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(info' → logprob: -0.04188704118132591
    2. '((' → logprob: -4.041886806488037
    3. '(' → logprob: -4.916886806488037
    4. '(s' → logprob: -5.041886806488037
    5. 'info' → logprob: -5.541886806488037
    6. ')' → logprob: -6.166886806488037
    7. '([]' → logprob: -7.416886806488037
    8. '[(' → logprob: -7.416886806488037
    9. '([' → logprob: -7.416886806488037
    10. '([(' → logprob: -8.291887283325195

Token 685: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.635164754698053e-05
    2. ')
' → logprob: -9.750066757202148
    3. '       ' → logprob: -12.000066757202148
    4. '   ' → logprob: -13.500066757202148
    5. ' )' → logprob: -15.750066757202148
    6. ']' → logprob: -16.37506675720215
    7. '
' → logprob: -16.75006675720215
    8. ' ' → logprob: -16.75006675720215
    9. ')}' → logprob: -16.87506675720215
    10. ')
' → logprob: -17.25006675720215

Token 686: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.05368191376328468
    2. 'def' → logprob: -3.1786818504333496
    3. '   ' → logprob: -4.92868185043335
    4. '```' → logprob: -6.17868185043335
    5. '    
' → logprob: -7.55368185043335
    6. '       ' → logprob: -7.55368185043335
    7. '        
' → logprob: -8.428682327270508
    8. '

' → logprob: -11.053682327270508
    9. '
' → logprob: -11.803682327270508
    10. '``' → logprob: -12.053682327270508

Token 687: ' min' (ID: 1349)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.014707528986036777
    2. '
' → logprob: -4.889707565307617
    3. '       ' → logprob: -5.639707565307617
    4. '   ' → logprob: -6.014707565307617
    5. '        
' → logprob: -8.389707565307617
    6. '    
' → logprob: -8.639707565307617
    7. 'memo' → logprob: -9.014707565307617
    8. 'best' → logprob: -9.139707565307617
    9. '```' → logprob: -9.514707565307617
    10. 'visited' → logprob: -9.764707565307617

Token 688: '_length' (ID: 11514)
  Prédit: '_total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_total' → logprob: -0.2361328899860382
    2. '_unique' → logprob: -2.111132860183716
    3. '_cost' → logprob: -2.986132860183716
    4. '_time' → logprob: -4.986133098602295
    5. '_count' → logprob: -4.986133098602295
    6. '_result' → logprob: -5.486133098602295
    7. '_used' → logprob: -5.611133098602295
    8. '_' → logprob: -5.611133098602295
    9. '_ans' → logprob: -5.861133098602295
    10. '_finish' → logprob: -6.111133098602295

Token 689: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141538977622986
    2. '=' → logprob: -1.7014154195785522
    3. '   ' → logprob: -14.701415061950684
    4. ' ' → logprob: -14.701415061950684
    5. ')' → logprob: -15.451415061950684
    6. '=float' → logprob: -15.576415061950684
    7. '_' → logprob: -15.826415061950684
    8. '=[]' → logprob: -15.951415061950684
    9. ',' → logprob: -16.076416015625
    10. '=None' → logprob: -16.701416015625

Token 690: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.04861347749829292
    2. '10' → logprob: -3.0486135482788086
    3. 'sum' → logprob: -10.923613548278809
    4. ' float' → logprob: -12.298613548278809
    5. 'int' → logprob: -12.923613548278809
    6. 'sys' → logprob: -14.423613548278809
    7. '1' → logprob: -15.173613548278809
    8. '100' → logprob: -16.423612594604492
    9. 'None' → logprob: -16.673612594604492
    10. 'Float' → logprob: -17.548612594604492

Token 691: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.03554542362689972
    2. ''in' → logprob: -3.6605453491210938
    3. ''' → logprob: -4.910545349121094
    4. ''s' → logprob: -8.160545349121094
    5. ''inc' → logprob: -8.660545349121094
    6. ''import' → logprob: -9.160545349121094
    7. ''a' → logprob: -9.285545349121094
    8. ''ex' → logprob: -9.660545349121094
    9. 'inf' → logprob: -9.660545349121094
    10. ''op' → logprob: -9.910545349121094

Token 692: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -3.128163257315464e-07
    2. ''' → logprob: -15.75
    3. 'in' → logprob: -17.125
    4. 'info' → logprob: -17.5
    5. 'pos' → logprob: -17.75
    6. 'INF' → logprob: -17.75
    7. ' inf' → logprob: -18.5
    8. '_inf' → logprob: -19.0
    9. 'opt' → logprob: -19.25
    10. 'Inf' → logprob: -20.0

Token 693: '')

' (ID: 9735)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001561009994475171
    2. '       ' → logprob: -9.50015640258789
    3. ')
' → logprob: -10.50015640258789
    4. '   ' → logprob: -11.12515640258789
    5. '')' → logprob: -11.12515640258789
    6. 'def' → logprob: -11.75015640258789
    7. ' )' → logprob: -12.62515640258789
    8. ',' → logprob: -12.87515640258789
    9. '
' → logprob: -12.87515640258789
    10. '<|end|>' → logprob: -13.37515640258789

Token 694: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16364723443984985
    2. 'def' → logprob: -1.913647174835205
    3. '   ' → logprob: -6.538647174835205
    4. '       ' → logprob: -7.288647174835205
    5. '    
' → logprob: -7.288647174835205
    6. '        
' → logprob: -7.788647174835205
    7. '
' → logprob: -9.663647651672363
    8. '```' → logprob: -9.913647651672363
    9. 'stack' → logprob: -10.163647651672363
    10. '

' → logprob: -11.788647651672363

Token 695: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0008583390736021101
    2. 'stack' → logprob: -7.250858306884766
    3. '
' → logprob: -9.375858306884766
    4. 'visited' → logprob: -10.625858306884766
    5. '       ' → logprob: -11.125858306884766
    6. 'from' → logprob: -11.375858306884766
    7. 'selected' → logprob: -12.125858306884766
    8. '   ' → logprob: -12.500858306884766
    9. '        
' → logprob: -13.750858306884766
    10. ' def' → logprob: -13.875858306884766

Token 696: ' Order' (ID: 10735)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0003989720717072487
    2. 'stack' → logprob: -8.000398635864258
    3. '       ' → logprob: -10.625398635864258
    4. '   ' → logprob: -11.125398635864258
    5. 'from' → logprob: -11.625398635864258
    6. '
' → logprob: -11.625398635864258
    7. 'visited' → logprob: -12.875398635864258
    8. 'indent' → logprob: -13.125398635864258
    9. 'import' → logprob: -14.000398635864258
    10. ' def' → logprob: -14.375398635864258

Token 697: ' lines' (ID: 8698)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0758151039481163
    2. 'import' → logprob: -3.575815200805664
    3. ' =' → logprob: -4.325815200805664
    4. '_' → logprob: -5.075815200805664
    5. '   ' → logprob: -5.325815200805664
    6. '    ' → logprob: -5.575815200805664
    7. '=' → logprob: -5.700815200805664
    8. ':' → logprob: -6.075815200805664
    9. '       ' → logprob: -6.075815200805664
    10. 'from' → logprob: -6.075815200805664

Token 698: ' for' (ID: 395)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7116402387619019
    2. 'for' → logprob: -1.5866402387619019
    3. ' =' → logprob: -1.5866402387619019
    4. '_order' → logprob: -3.5866403579711914
    5. 'def' → logprob: -3.8366403579711914
    6. '0' → logprob: -4.086640357971191
    7. 'per' → logprob: -4.586640357971191
    8. 'order' → logprob: -5.211640357971191
    9. 'indices' → logprob: -6.211640357971191
    10. 'c' → logprob: -6.336640357971191

Token 699: ' efficiency' (ID: 17456)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.32307562232017517
    2. 'each' → logprob: -1.8230756521224976
    3. 'card' → logprob: -2.573075532913208
    4. ' c' → logprob: -4.073075771331787
    5. ' each' → logprob: -4.823075771331787
    6. 'cards' → logprob: -5.698075771331787
    7. ' card' → logprob: -6.198075771331787
    8. 'i' → logprob: -6.323075771331787
    9. '_' → logprob: -6.948075771331787
    10. '0' → logprob: -7.073075771331787

Token 700: ':' (ID: 25)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.060641881078481674
    2. 'line' → logprob: -4.185641765594482
    3. 'card' → logprob: -4.310641765594482
    4. 'order' → logprob: -4.435641765594482
    5. 'def' → logprob: -5.435641765594482
    6. ' for' → logprob: -5.435641765594482
    7. 'lines' → logprob: -5.810641765594482
    8. '[line' → logprob: -6.435641765594482
    9. 'cards' → logprob: -6.810641765594482
    10. ' line' → logprob: -6.810641765594482

Token 701: ' sort' (ID: 4506)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10448107868432999
    2. 'order' → logprob: -2.4794809818267822
    3. 'def' → logprob: -5.354481220245361
    4. 'line' → logprob: -5.479481220245361
    5. ' for' → logprob: -6.479481220245361
    6. '       ' → logprob: -6.729481220245361
    7. 'card' → logprob: -6.729481220245361
    8. 'cards' → logprob: -6.979481220245361
    9. 'lines' → logprob: -7.479481220245361
    10. ' order' → logprob: -8.604480743408203

Token 702: ' by' (ID: 656)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15600325167179108
    2. 'line' → logprob: -2.53100323677063
    3. '(line' → logprob: -3.15600323677063
    4. '[line' → logprob: -4.406003475189209
    5. 'key' → logprob: -5.656003475189209
    6. 'each' → logprob: -6.156003475189209
    7. 'range' → logprob: -7.281003475189209
    8. ' for' → logprob: -7.406003475189209
    9. 'lines' → logprob: -7.656003475189209
    10. '_line' → logprob: -7.781003475189209

Token 703: ' max' (ID: 2999)
  Prédit: 'lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lambda' → logprob: -0.2623215615749359
    2. 'len' → logprob: -1.5123215913772583
    3. 'max' → logprob: -5.512321472167969
    4. 'mx' → logprob: -6.012321472167969
    5. 'min' → logprob: -6.137321472167969
    6. ' lambda' → logprob: -7.637321472167969
    7. '(lambda' → logprob: -7.637321472167969
    8. '=lambda' → logprob: -7.637321472167969
    9. 'key' → logprob: -9.637321472167969
    10. 'length' → logprob: -10.137321472167969

Token 704: ' number' (ID: 2086)
  Prédit: '_num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_num' → logprob: -0.0206445399671793
    2. '_line' → logprob: -5.395644664764404
    3. 'num' → logprob: -5.770644664764404
    4. '_' → logprob: -5.770644664764404
    5. 's' → logprob: -6.020644664764404
    6. '_nums' → logprob: -6.520644664764404
    7. '_val' → logprob: -6.770644664764404
    8. '_number' → logprob: -6.895644664764404
    9. ')' → logprob: -7.645644664764404
    10. '(s' → logprob: -7.895644664764404

Token 705: ' ascending' (ID: 75564)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -1.5362576246261597
    2. 'for' → logprob: -2.036257743835449
    3. ',' → logprob: -2.161257743835449
    4. 's' → logprob: -2.161257743835449
    5. ' =' → logprob: -2.536257743835449
    6. '=' → logprob: -2.911257743835449
    7. ')' → logprob: -3.036257743835449
    8. '_' → logprob: -3.786257743835449
    9. ' in' → logprob: -4.036257743835449
    10. ' for' → logprob: -4.036257743835449

Token 706: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.14658886194229126
    2. '       ' → logprob: -2.1465888023376465
    3. '
' → logprob: -4.2715888023376465
    4. ' for' → logprob: -5.6465888023376465
    5. '        
' → logprob: -7.5215888023376465
    6. ',
' → logprob: -7.5215888023376465
    7. '[line' → logprob: -8.396589279174805
    8. ',' → logprob: -8.646589279174805
    9. '   ' → logprob: -8.771589279174805
    10. '           ' → logprob: -9.771589279174805

Token 707: 'to' (ID: 935)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09432097524404526
    2. ')' → logprob: -2.7193210124969482
    3. ')
' → logprob: -4.719320774078369
    4. ' for' → logprob: -4.844320774078369
    5. 'key' → logprob: -6.344320774078369
    6. '),' → logprob: -6.844320774078369
    7. ',' → logprob: -7.219320774078369
    8. 'lambda' → logprob: -7.219320774078369
    9. 'def' → logprob: -7.344320774078369
    10. 'c' → logprob: -7.594320774078369

Token 708: ' get' (ID: 717)
  Prédit: 'pr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pr' → logprob: -0.7040534019470215
    2. ')' → logprob: -2.0790534019470215
    3. 'reduce' → logprob: -2.7040534019470215
    4. 'min' → logprob: -2.8290534019470215
    5. 'help' → logprob: -2.9540534019470215
    6. 'card' → logprob: -3.5790534019470215
    7. 'allow' → logprob: -3.5790534019470215
    8. 'def' → logprob: -3.5790534019470215
    9. 'opt' → logprob: -4.3290534019470215
    10. 's' → logprob: -4.8290534019470215

Token 709: ' smaller' (ID: 13679)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -1.5189703702926636
    2. ')' → logprob: -1.6439703702926636
    3. 'the' → logprob: -2.643970489501953
    4. 'line' → logprob: -2.893970489501953
    5. 'lines' → logprob: -2.893970489501953
    6. 's' → logprob: -3.018970489501953
    7. 'better' → logprob: -3.268970489501953
    8. 'sm' → logprob: -3.393970489501953
    9. 'len' → logprob: -3.518970489501953
    10. '0' → logprob: -3.518970489501953

Token 710: ' finishing' (ID: 34631)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0416706800460815
    2. ' sets' → logprob: -1.6666706800460815
    3. 'max' → logprob: -2.666670799255371
    4. 'sets' → logprob: -2.666670799255371
    5. 'numbers' → logprob: -2.916670799255371
    6. ' numbers' → logprob: -3.791670799255371
    7. ' first' → logprob: -3.916670799255371
    8. 'first' → logprob: -4.041670799255371
    9. 's' → logprob: -4.041670799255371
    10. 'line' → logprob: -4.166670799255371

Token 711: ' times' (ID: 4238)
  Prédit: '_time'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.3643932044506073
    2. '_times' → logprob: -1.3643932342529297
    3. 'times' → logprob: -3.6143932342529297
    4. ' times' → logprob: -4.48939323425293
    5. '_' → logprob: -5.23939323425293
    6. 'time' → logprob: -5.61439323425293
    7. ')' → logprob: -6.61439323425293
    8. ' time' → logprob: -7.36439323425293
    9. '   ' → logprob: -7.86439323425293
    10. ' _' → logprob: -9.23939323425293

Token 712: ' first' (ID: 1577)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01331622339785099
    2. ',' → logprob: -4.3883161544799805
    3. ')
' → logprob: -8.51331615447998
    4. 'for' → logprob: -8.63831615447998
    5. ',)' → logprob: -9.63831615447998
    6. '),' → logprob: -9.88831615447998
    7. ' )' → logprob: -10.26331615447998
    8. ',
' → logprob: -10.38831615447998
    9. '`)' → logprob: -10.63831615447998
    10. '[' → logprob: -11.01331615447998

Token 713: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.13104978203773499
    2. '       ' → logprob: -2.131049871444702
    3. ')
' → logprob: -5.881049633026123
    4. ',' → logprob: -7.381049633026123
    5. 'for' → logprob: -8.381050109863281
    6. ' for' → logprob: -8.756050109863281
    7. ').' → logprob: -9.756050109863281
    8. '           ' → logprob: -9.756050109863281
    9. '   ' → logprob: -9.881050109863281
    10. '),' → logprob: -10.256050109863281

Token 714: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09382575750350952
    2. 'for' → logprob: -3.0938258171081543
    3. '
' → logprob: -3.5938258171081543
    4. ' for' → logprob: -4.843825817108154
    5. 'def' → logprob: -4.968825817108154
    6. '        
' → logprob: -7.093825817108154
    7. '```' → logprob: -7.968825817108154
    8. 'import' → logprob: -8.593825340270996
    9. '   ' → logprob: -8.718825340270996
    10. ' lines' → logprob: -8.843825340270996

Token 715: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0025583035312592983
    2. '       ' → logprob: -6.00255823135376
    3. ' for' → logprob: -9.502558708190918
    4. '   ' → logprob: -12.252558708190918
    5. 'line' → logprob: -13.252558708190918
    6. '```' → logprob: -14.252558708190918
    7. '           ' → logprob: -15.252558708190918
    8. 'lines' → logprob: -15.752558708190918
    9. 'import' → logprob: -16.1275577545166
    10. 'def' → logprob: -16.5025577545166

Token 716: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.038276951760053635
    2. ' c' → logprob: -3.2882769107818604
    3. 'i' → logprob: -9.413276672363281
    4. '_c' → logprob: -9.663276672363281
    5. 'card' → logprob: -10.288276672363281
    6. 'p' → logprob: -10.788276672363281
    7. ' card' → logprob: -12.038276672363281
    8. ' i' → logprob: -12.038276672363281
    9. '_' → logprob: -12.788276672363281
    10. 'cards' → logprob: -13.038276672363281

Token 717: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20172488689422607
    2. 'in' → logprob: -1.701724886894226
    3. '_in' → logprob: -9.326725006103516
    4. '_' → logprob: -9.451725006103516
    5. ' ' → logprob: -10.201725006103516
    6. ',' → logprob: -10.201725006103516
    7. '_lines' → logprob: -11.076725006103516
    8. ' i' → logprob: -11.201725006103516
    9. 'i' → logprob: -11.701725006103516
    10. ')' → logprob: -12.326725006103516

Token 718: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0010336418636143208
    2. ' range' → logprob: -6.876033782958984
    3. 'line' → logprob: -15.251033782958984
    4. 'card' → logprob: -15.501033782958984
    5. 'r' → logprob: -16.251033782958984
    6. 'c' → logprob: -16.501033782958984
    7. 'in' → logprob: -17.126033782958984
    8. ' ' → logprob: -17.251033782958984
    9. '   ' → logprob: -17.376033782958984
    10. 'P' → logprob: -17.751033782958984

Token 719: '(P' (ID: 8952)
  Prédit: 'P'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -0.003249008674174547
    2. 'range' → logprob: -5.753249168395996
    3. '(P' → logprob: -10.003249168395996
    4. ' range' → logprob: -11.003249168395996
    5. ' P' → logprob: -11.753249168395996
    6. '   ' → logprob: -14.753249168395996
    7. ' ' → logprob: -15.003249168395996
    8. '(' → logprob: -15.878249168395996
    9. ')' → logprob: -16.12824821472168
    10. '
' → logprob: -16.37824821472168

Token 720: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2833850085735321
    2. '):
' → logprob: -1.4083850383758545
    3. ']:' → logprob: -7.658384799957275
    4. '):
' → logprob: -7.908384799957275
    5. ')' → logprob: -8.158385276794434
    6. ']):' → logprob: -8.283385276794434
    7. ' ):' → logprob: -8.408385276794434
    8. ',' → logprob: -8.533385276794434
    9. '   ' → logprob: -9.033385276794434
    10. '       ' → logprob: -9.283385276794434

Token 721: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.22053399682044983
    2. '       ' → logprob: -1.7205339670181274
    3. '           ' → logprob: -4.220533847808838
    4. 'line' → logprob: -6.095533847808838
    5. ' line' → logprob: -6.220533847808838
    6. '	line' → logprob: -12.845534324645996
    7. '[line' → logprob: -13.470534324645996
    8. ',line' → logprob: -14.345534324645996
    9. '   ' → logprob: -14.970534324645996
    10. '               ' → logprob: -15.095534324645996

Token 722: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.0003954033018089831
    2. '   ' → logprob: -8.000395774841309
    3. ' line' → logprob: -9.750395774841309
    4. '           ' → logprob: -13.375395774841309
    5. '       ' → logprob: -17.000394821166992
    6. '	line' → logprob: -17.375394821166992
    7. '  ' → logprob: -17.875394821166992
    8. ' ' → logprob: -18.250394821166992
    9. '#line' → logprob: -19.375394821166992
    10. 'Line' → logprob: -21.125394821166992

Token 723: '_info' (ID: 6744)
  Prédit: '_info'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_info' → logprob: -7.226628895296017e-06
    2. 'info' → logprob: -12.125007629394531
    3. '   ' → logprob: -14.500007629394531
    4. '=' → logprob: -15.125007629394531
    5. 's' → logprob: -15.250007629394531
    6. '_line' → logprob: -16.25000762939453
    7. ' =' → logprob: -16.25000762939453
    8. '_INFO' → logprob: -16.50000762939453
    9. 'Info' → logprob: -16.50000762939453
    10. '           ' → logprob: -16.75000762939453

Token 724: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -1.5048530030981055e-06
    2. '.sort' → logprob: -13.750001907348633
    3. 'sort' → logprob: -15.750001907348633
    4. '=c' → logprob: -16.250001907348633
    5. '```' → logprob: -17.250001907348633
    6. ' [' → logprob: -18.125001907348633
    7. '=' → logprob: -18.375001907348633
    8. '][' → logprob: -18.750001907348633
    9. 'c' → logprob: -18.875001907348633
    10. '[' → logprob: -19.000001907348633

Token 725: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.003290471388027072
    2. ']' → logprob: -6.37829065322876
    3. ']=' → logprob: -6.50329065322876
    4. 'sort' → logprob: -10.128290176391602
    5. '.sort' → logprob: -10.253290176391602
    6. ').' → logprob: -12.503290176391602
    7. '.' → logprob: -12.503290176391602
    8. '=' → logprob: -13.128290176391602
    9. ' ].' → logprob: -13.878290176391602
    10. ' sort' → logprob: -14.128290176391602

Token 726: 'sort' (ID: 13373)
  Prédit: 'sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sort' → logprob: -1.1472419600977446e-06
    2. ' sort' → logprob: -13.750000953674316
    3. '.sort' → logprob: -16.750001907348633
    4. '	sort' → logprob: -19.625001907348633
    5. ' ' → logprob: -20.125001907348633
    6. '   ' → logprob: -20.625001907348633
    7. '```' → logprob: -22.375001907348633
    8. '  ' → logprob: -22.625001907348633
    9. '
' → logprob: -22.875001907348633
    10. 's' → logprob: -22.875001907348633

Token 727: '(key' (ID: 8932)
  Prédit: '(key'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(key' → logprob: -6.790129555156454e-05
    2. '()' → logprob: -10.000067710876465
    3. 'key' → logprob: -10.750067710876465
    4. '()
' → logprob: -14.250067710876465
    5. '(' → logprob: -15.500067710876465
    6. '(reverse' → logprob: -16.00006866455078
    7. ' key' → logprob: -17.37506866455078
    8. '(
' → logprob: -17.50006866455078
    9. ',key' → logprob: -17.75006866455078
    10. '   ' → logprob: -18.37506866455078

Token 728: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0005974736995995045
    2. 'lambda' → logprob: -8.00059700012207
    3. '=' → logprob: -8.25059700012207
    4. '(lambda' → logprob: -14.00059700012207
    5. ' lambda' → logprob: -16.12559700012207
    6. '   ' → logprob: -18.12559700012207
    7. '_lambda' → logprob: -19.37559700012207
    8. 'operator' → logprob: -20.12559700012207
    9. '=item' → logprob: -20.25059700012207
    10. '```' → logprob: -20.50059700012207

Token 729: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.004099773708730936
    2. ' x' → logprob: -5.5040998458862305
    3. 'lambda' → logprob: -11.37909984588623
    4. 't' → logprob: -11.75409984588623
    5. 'line' → logprob: -13.75409984588623
    6. '   ' → logprob: -14.62909984588623
    7. ' lambda' → logprob: -15.50409984588623
    8. 'tpl' → logprob: -15.50409984588623
    9. ' ' → logprob: -15.75409984588623
    10. 'kv' → logprob: -16.754098892211914

Token 730: ':x' (ID: 73587)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16381260752677917
    2. ':x' → logprob: -1.9138126373291016
    3. 'x' → logprob: -5.663812637329102
    4. ' :' → logprob: -9.413812637329102
    5. ':(' → logprob: -11.163812637329102
    6. ' x' → logprob: -11.288812637329102
    7. '(x' → logprob: -12.913812637329102
    8. '=x' → logprob: -15.163812637329102
    9. ':
' → logprob: -15.288812637329102
    10. '	x' → logprob: -15.413812637329102

Token 731: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.022037280723452568
    2. 'x' → logprob: -4.272037506103516
    3. ' x' → logprob: -5.022037506103516
    4. '(' → logprob: -7.397037506103516
    5. '(x' → logprob: -8.397037506103516
    6. ' ' → logprob: -9.147037506103516
    7. '0' → logprob: -9.397037506103516
    8. ':' → logprob: -9.897037506103516
    9. ' (' → logprob: -10.022037506103516
    10. '1' → logprob: -10.272037506103516

Token 732: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.017083745449781418
    2. '[' → logprob: -4.392083644866943
    3. 'x' → logprob: -5.392083644866943
    4. ' x' → logprob: -12.767084121704102
    5. ' ' → logprob: -12.892084121704102
    6. '(' → logprob: -12.892084121704102
    7. '0' → logprob: -14.392084121704102
    8. '[x' → logprob: -14.392084121704102
    9. '   ' → logprob: -15.142084121704102
    10. '(x' → logprob: -15.204584121704102

Token 733: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001561009994475171
    2. ' )' → logprob: -8.87515640258789
    3. '))' → logprob: -12.37515640258789
    4. '})' → logprob: -12.75015640258789
    5. '])' → logprob: -13.12515640258789
    6. ')
' → logprob: -13.12515640258789
    7. ')#' → logprob: -14.25015640258789
    8. '<|end|>' → logprob: -14.50015640258789
    9. ')return' → logprob: -14.75015640258789
    10. ',' → logprob: -14.87515640258789

Token 734: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7300899028778076
    2. '
' → logprob: -0.8550899028778076
    3. '   ' → logprob: -2.4800899028778076
    4. '       ' → logprob: -5.605090141296387
    5. '    
' → logprob: -6.105090141296387
    6. '```' → logprob: -6.230090141296387
    7. '        
' → logprob: -7.105090141296387
    8. ' def' → logprob: -8.230090141296387
    9. 'import' → logprob: -9.480090141296387
    10. '
' → logprob: -10.605090141296387

Token 735: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00041613372741267085
    2. 'stack' → logprob: -8.500415802001953
    3. '
' → logprob: -9.125415802001953
    4. '   ' → logprob: -9.625415802001953
    5. '       ' → logprob: -10.500415802001953
    6. 'visited' → logprob: -12.875415802001953
    7. '```' → logprob: -13.000415802001953
    8. '        
' → logprob: -13.250415802001953
    9. 'indent' → logprob: -13.625415802001953
    10. '    
' → logprob: -14.125415802001953

Token 736: ' DFS' (ID: 115767)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0031162763480097055
    2. '   ' → logprob: -6.003116130828857
    3. '       ' → logprob: -7.503116130828857
    4. '
' → logprob: -10.253116607666016
    5. ' def' → logprob: -10.253116607666016
    6. 'stack' → logprob: -11.128116607666016
    7. '        
' → logprob: -13.753116607666016
    8. '    
' → logprob: -14.253116607666016
    9. 'indent' → logprob: -14.628116607666016
    10. 'from' → logprob: -14.753116607666016

Token 737: ':
' (ID: 734)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.07012738287448883
    2. '       ' → logprob: -3.570127487182617
    3. '   ' → logprob: -3.945127487182617
    4. '
' → logprob: -3.945127487182617
    5. 'import' → logprob: -7.945127487182617
    6. 'from' → logprob: -8.445127487182617
    7. '        
' → logprob: -8.820127487182617
    8. ' def' → logprob: -10.070127487182617
    9. '    
' → logprob: -10.195127487182617
    10. ':' → logprob: -11.195127487182617

Token 738: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.011553841643035412
    2. '
' → logprob: -4.761553764343262
    3. '   ' → logprob: -6.011553764343262
    4. '       ' → logprob: -8.136553764343262
    5. 'stack' → logprob: -9.011553764343262
    6. 'from' → logprob: -9.886553764343262
    7. '    
' → logprob: -11.886553764343262
    8. '        
' → logprob: -12.136553764343262
    9. 'import' → logprob: -12.886553764343262
    10. ' def' → logprob: -12.886553764343262

Token 739: ' #' (ID: 1069)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01537285652011633
    2. '   ' → logprob: -4.7653727531433105
    3. 'stack' → logprob: -5.5153727531433105
    4. ' def' → logprob: -6.8903727531433105
    5. 'from' → logprob: -7.3903727531433105
    6. '
' → logprob: -7.3903727531433105
    7. '       ' → logprob: -8.515373229980469
    8. 'import' → logprob: -8.890373229980469
    9. ' stack' → logprob: -9.515373229980469
    10. 'indent' → logprob: -10.765373229980469

Token 740: ' idx' (ID: 14016)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007291411980986595
    2. 'from' → logprob: -5.507291316986084
    3. 'stack' → logprob: -5.882291316986084
    4. 'import' → logprob: -8.882291793823242
    5. '   ' → logprob: -9.257291793823242
    6. 'visited' → logprob: -9.757291793823242
    7. ' def' → logprob: -10.132291793823242
    8. '
' → logprob: -10.132291793823242
    9. 'indent' → logprob: -10.757291793823242
    10. 'cache' → logprob: -11.382291793823242

Token 741: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22228242456912994
    2. '=' → logprob: -1.8472824096679688
    3. ',' → logprob: -4.097282409667969
    4. '<|end|>' → logprob: -4.347282409667969
    5. ')' → logprob: -5.597282409667969
    6. '   ' → logprob: -5.722282409667969
    7. '<|end|>' → logprob: -6.222282409667969
    8. 'def' → logprob: -6.847282409667969
    9. ' ' → logprob: -7.472282409667969
    10. '    ' → logprob: -7.722282409667969

Token 742: ' current' (ID: 2208)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.028828181326389313
    2. 'idx' → logprob: -4.403828144073486
    3. ' ' → logprob: -4.528828144073486
    4. ' idx' → logprob: -6.028828144073486
    5. '=' → logprob: -6.403828144073486
    6. ' =' → logprob: -7.403828144073486
    7. 'def' → logprob: -8.153828620910645
    8. 'int' → logprob: -9.403828620910645
    9. '(idx' → logprob: -9.653828620910645
    10. '+' → logprob: -10.028828620910645

Token 743: ' card' (ID: 4766)
  Prédit: 'card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -1.0869734287261963
    2. '_card' → logprob: -1.3369734287261963
    3. ' card' → logprob: -1.8369734287261963
    4. 'idx' → logprob: -2.3369734287261963
    5. '_idx' → logprob: -2.4619734287261963
    6. ' idx' → logprob: -3.7119734287261963
    7. '_' → logprob: -4.586973190307617
    8. ' =' → logprob: -4.961973190307617
    9. '=' → logprob: -5.211973190307617
    10. '_cards' → logprob: -5.961973190307617

Token 744: ' index' (ID: 3472)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05006908252835274
    2. 'def' → logprob: -4.3000688552856445
    3. ',
' → logprob: -4.4250688552856445
    4. '
' → logprob: -4.6750688552856445
    5. ')' → logprob: -5.5500688552856445
    6. '       ' → logprob: -6.1750688552856445
    7. 'idx' → logprob: -6.3000688552856445
    8. '   ' → logprob: -6.4250688552856445
    9. ':' → logprob: -6.8000688552856445
    10. ' ,' → logprob: -7.5500688552856445

Token 745: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6952096819877625
    2. 'def' → logprob: -0.9452096819877625
    3. '       ' → logprob: -3.8202097415924072
    4. '   ' → logprob: -4.070209503173828
    5. '
' → logprob: -4.195209503173828
    6. ' =' → logprob: -4.195209503173828
    7. '=' → logprob: -4.445209503173828
    8. ')' → logprob: -4.695209503173828
    9. ',
' → logprob: -4.695209503173828
    10. 'idx' → logprob: -5.445209503173828

Token 746: '       ' (ID: 309)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.110852912068367
    2. 'def' → logprob: -2.9858529567718506
    3. '       ' → logprob: -3.8608529567718506
    4. '
' → logprob: -4.4858527183532715
    5. ',
' → logprob: -4.7358527183532715
    6. '#' → logprob: -4.8608527183532715
    7. '   ' → logprob: -5.8608527183532715
    8. '```' → logprob: -7.4858527183532715
    9. 'idx' → logprob: -7.4858527183532715
    10. ':' → logprob: -7.8608527183532715

Token 747: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08798724412918091
    2. ',
' → logprob: -3.212987184524536
    3. '
' → logprob: -4.087987422943115
    4. '       ' → logprob: -4.462987422943115
    5. '   ' → logprob: -5.462987422943115
    6. 'def' → logprob: -6.087987422943115
    7. ' ,' → logprob: -6.212987422943115
    8. ')' → logprob: -6.337987422943115
    9. 'idx' → logprob: -6.712987422943115
    10. ':' → logprob: -6.837987422943115

Token 748: ' last' (ID: 2174)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prev' → logprob: -0.320716917514801
    2. 'finish' → logprob: -1.5707168579101562
    3. 'last' → logprob: -3.5707168579101562
    4. 'fin' → logprob: -3.8207168579101562
    5. 'min' → logprob: -5.820716857910156
    6. 'def' → logprob: -5.945716857910156
    7. 'chosen' → logprob: -6.320716857910156
    8. 'max' → logprob: -6.570716857910156
    9. 'called' → logprob: -6.570716857910156
    10. ' prev' → logprob: -6.695716857910156

Token 749: '_finish' (ID: 109520)
  Prédit: '_finish'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_finish' → logprob: -0.1527123898267746
    2. '_time' → logprob: -2.027712345123291
    3. '_fin' → logprob: -4.902712345123291
    4. '_called' → logprob: -7.152712345123291
    5. '_finished' → logprob: -7.152712345123291
    6. '_call' → logprob: -8.02771282196045
    7. 'finish' → logprob: -8.40271282196045
    8. '_max' → logprob: -8.90271282196045
    9. '_f' → logprob: -9.77771282196045
    10. 'time' → logprob: -10.02771282196045

Token 750: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -5.44312788406387e-05
    2. '_token' → logprob: -10.875054359436035
    3. '_' → logprob: -11.250054359436035
    4. '_times' → logprob: -11.625054359436035
    5. '=' → logprob: -12.000054359436035
    6. 'time' → logprob: -12.750054359436035
    7. 'Time' → logprob: -13.375054359436035
    8. ' =' → logprob: -14.500054359436035
    9. '_TIME' → logprob: -14.750054359436035
    10. '=_' → logprob: -15.250054359436035

Token 751: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2248857319355011
    2. '=' → logprob: -1.9748857021331787
    3. ' =' → logprob: -2.9748857021331787
    4. '=None' → logprob: -4.974885940551758
    5. ' ,' → logprob: -6.599885940551758
    6. '<|end|>' → logprob: -6.974885940551758
    7. ':' → logprob: -7.099885940551758
    8. '   ' → logprob: -7.599885940551758
    9. '<|end|>' → logprob: -8.099885940551758
    10. '):' → logprob: -8.349885940551758

Token 752: ' finish' (ID: 9115)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.07161381840705872
    2. '0' → logprob: -2.6966137886047363
    3. ' -' → logprob: -6.571613788604736
    4. ' ' → logprob: -8.571614265441895
    5. 'float' → logprob: -10.821614265441895
    6. '-f' → logprob: -11.571614265441895
    7. '-line' → logprob: -11.946614265441895
    8. '-inf' → logprob: -11.946614265441895
    9. '-l' → logprob: -12.071614265441895
    10. 'None' → logprob: -12.321614265441895

Token 753: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.0007817533914931118
    2. '_' → logprob: -7.375781536102295
    3. '_idx' → logprob: -9.750782012939453
    4. 'ed' → logprob: -10.375782012939453
    5. '_times' → logprob: -10.625782012939453
    6. ' _' → logprob: -11.625782012939453
    7. '```' → logprob: -12.250782012939453
    8. '_t' → logprob: -12.375782012939453
    9. '_token' → logprob: -12.500782012939453
    10. 'd' → logprob: -12.625782012939453

Token 754: ' of' (ID: 328)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.09931376576423645
    2. '):' → logprob: -3.599313735961914
    3. '=' → logprob: -4.099313735961914
    4. ':' → logprob: -4.599313735961914
    5. ',
' → logprob: -4.599313735961914
    6. ')' → logprob: -4.724313735961914
    7. '_idx' → logprob: -4.974313735961914
    8. '   ' → logprob: -5.599313735961914
    9. '<|end|>' → logprob: -6.224313735961914
    10. '):
' → logprob: -6.349313735961914

Token 755: ' previous' (ID: 5880)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.09784125536680222
    2. 'previous' → logprob: -3.097841262817383
    3. ' idx' → logprob: -3.847841262817383
    4. 'the' → logprob: -4.222841262817383
    5. 'prev' → logprob: -5.472841262817383
    6. 'last' → logprob: -5.847841262817383
    7. 'cards' → logprob: -5.847841262817383
    8. ' previous' → logprob: -6.972841262817383
    9. ' the' → logprob: -7.597841262817383
    10. '(idx' → logprob: -8.097841262817383

Token 756: ' card' (ID: 4766)
  Prédit: '_card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_card' → logprob: -0.7350858449935913
    2. '_idx' → logprob: -1.1100858449935913
    3. 'card' → logprob: -1.8600858449935913
    4. 'idx' → logprob: -4.110085964202881
    5. ' card' → logprob: -4.860085964202881
    6. ',' → logprob: -5.360085964202881
    7. '_time' → logprob: -6.360085964202881
    8. '_' → logprob: -6.860085964202881
    9. '   ' → logprob: -7.735085964202881
    10. ')' → logprob: -7.735085964202881

Token 757: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.2594187259674072
    2. ',' → logprob: -2.0094187259674072
    3. '
' → logprob: -3.0094187259674072
    4. ')' → logprob: -4.134418487548828
    5. '   ' → logprob: -4.634418487548828
    6. ',
' → logprob: -5.009418487548828
    7. '       ' → logprob: -5.259418487548828
    8. ':' → logprob: -5.884418487548828
    9. ')
' → logprob: -7.009418487548828
    10. ' def' → logprob: -7.259418487548828

Token 758: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.40970611572265625
    2. ',' → logprob: -1.2847061157226562
    3. '   ' → logprob: -3.7847061157226562
    4. '
' → logprob: -4.784706115722656
    5. '```' → logprob: -4.909706115722656
    6. '#' → logprob: -5.159706115722656
    7. ',
' → logprob: -5.534706115722656
    8. ')' → logprob: -5.534706115722656
    9. '       ' → logprob: -6.034706115722656
    10. 'idx' → logprob: -6.909706115722656

Token 759: ' #' (ID: 1069)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1330797672271729
    2. '
' → logprob: -1.1330797672271729
    3. 'def' → logprob: -1.5080797672271729
    4. '```' → logprob: -2.883079767227173
    5. ',
' → logprob: -3.508079767227173
    6. '   ' → logprob: -4.258079528808594
    7. 'idx' → logprob: -4.508079528808594
    8. '       ' → logprob: -4.883079528808594
    9. '#' (adapté à ' #') → logprob: -5.133079528808594
    10. ')' → logprob: -6.133079528808594

Token 760: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.2388642579317093
    2. 'def' → logprob: -2.7388641834259033
    3. 'chosen' → logprob: -2.7388641834259033
    4. 'unique' → logprob: -2.8638641834259033
    5. 'selected' → logprob: -4.613864421844482
    6. 'called' → logprob: -5.488864421844482
    7. ' used' → logprob: -5.863864421844482
    8. 'lines' → logprob: -6.238864421844482
    9. 'numbers' → logprob: -6.863864421844482
    10. '   ' → logprob: -6.988864421844482

Token 761: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.41825705766677856
    2. ',' → logprob: -2.668256998062134
    3. '_nums' → logprob: -2.793256998062134
    4. ' =' → logprob: -2.793256998062134
    5. '_sets' → logprob: -2.918256998062134
    6. '=set' → logprob: -3.793256998062134
    7. '_tokens' → logprob: -4.043257236480713
    8. '_set' → logprob: -4.168257236480713
    9. '=' → logprob: -4.918257236480713
    10. '_' → logprob: -5.293257236480713

Token 762: ':set' (ID: 49036)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007306430023163557
    2. ' =' → logprob: -5.6323065757751465
    3. ' ,' → logprob: -7.3823065757751465
    4. '=set' → logprob: -7.6323065757751465
    5. '.union' → logprob: -7.7573065757751465
    6. ')' → logprob: -7.7573065757751465
    7. '=' → logprob: -8.132306098937988
    8. ',
' → logprob: -8.507306098937988
    9. '.add' → logprob: -8.757306098937988
    10. '   ' → logprob: -8.757306098937988

Token 763: ' of' (ID: 328)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5675363540649414
    2. '=' → logprob: -1.5675363540649414
    3. ')' → logprob: -2.8175363540649414
    4. '(' → logprob: -2.8175363540649414
    5. '):' → logprob: -2.8175363540649414
    6. ':' → logprob: -3.6925363540649414
    7. ' =' → logprob: -4.567536354064941
    8. '   ' → logprob: -6.567536354064941
    9. '<|end|>' → logprob: -6.942536354064941
    10. 'def' → logprob: -7.067536354064941

Token 764: ' numbers' (ID: 8663)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.033430714160203934
    2. 'numbers' → logprob: -3.533430814743042
    3. 'ints' → logprob: -6.408430576324463
    4. 'inte' → logprob: -7.033430576324463
    5. '[int' → logprob: -7.533430576324463
    6. 'tokens' → logprob: -8.408431053161621
    7. ')' → logprob: -8.783431053161621
    8. 's' → logprob: -10.158431053161621
    9. 'used' → logprob: -10.158431053161621
    10. '(int' → logprob: -10.283431053161621

Token 765: ' used' (ID: 2061)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.45862409472465515
    2. ')' → logprob: -1.2086241245269775
    3. 'def' → logprob: -3.7086241245269775
    4. '):
' → logprob: -4.083623886108398
    5. '):' → logprob: -4.708623886108398
    6. '   ' → logprob: -5.083623886108398
    7. '       ' → logprob: -5.083623886108398
    8. ',
' → logprob: -6.458623886108398
    9. ' =' → logprob: -6.958623886108398
    10. '
' → logprob: -7.333623886108398

Token 766: ' so' (ID: 813)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4449414610862732
    2. ',' → logprob: -1.694941520690918
    3. '):' → logprob: -2.569941520690918
    4. '):
' → logprob: -3.444941520690918
    5. 'def' → logprob: -3.694941520690918
    6. '       ' → logprob: -3.944941520690918
    7. '   ' → logprob: -4.569941520690918
    8. ':' → logprob: -5.569941520690918
    9. '=' → logprob: -5.944941520690918
    10. ')
' → logprob: -6.944941520690918

Token 767: ' far' (ID: 4150)
  Prédit: 'far'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'far' → logprob: -7.707997428951785e-05
    2. '_far' → logprob: -9.625077247619629
    3. ' far' → logprob: -12.250077247619629
    4. 'Far' → logprob: -12.875077247619629
    5. '       ' → logprob: -13.375077247619629
    6. '   ' → logprob: -13.750077247619629
    7. '           ' → logprob: -15.125077247619629
    8. 'for' → logprob: -15.500077247619629
    9. '
' → logprob: -16.125076293945312
    10. '         ' → logprob: -16.250076293945312

Token 768: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.017082571983337402
    2. '   ' → logprob: -5.142082691192627
    3. '
' → logprob: -5.267082691192627
    4. '       ' → logprob: -6.392082691192627
    5. ',' → logprob: -6.517082691192627
    6. ' def' → logprob: -7.392082691192627
    7. '    
' → logprob: -7.517082691192627
    8. '        
' → logprob: -7.642082691192627
    9. ')' → logprob: -7.892082691192627
    10. '```' → logprob: -8.892082214355469

Token 769: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4110364019870758
    2. '
' → logprob: -1.6610363721847534
    3. '   ' → logprob: -2.161036491394043
    4. '```' → logprob: -4.036036491394043
    5. '    
' → logprob: -5.786036491394043
    6. ' def' → logprob: -5.911036491394043
    7. ',' → logprob: -6.161036491394043
    8. '       ' → logprob: -6.161036491394043
    9. ')' → logprob: -6.786036491394043
    10. '``' → logprob: -7.161036491394043

Token 770: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0549723319709301
    2. '   ' → logprob: -3.5549724102020264
    3. '
' → logprob: -5.179972171783447
    4. '       ' → logprob: -5.554972171783447
    5. '```' → logprob: -5.929972171783447
    6. ' def' → logprob: -6.054972171783447
    7. '    
' → logprob: -6.054972171783447
    8. '\' → logprob: -6.429972171783447
    9. ',' → logprob: -6.429972171783447
    10. '<|end|>' → logprob: -6.804972171783447

Token 771: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.00020807012333534658
    2. ' dfs' → logprob: -8.500207901000977
    3. 'search' → logprob: -12.500207901000977
    4. 'DFS' → logprob: -14.625207901000977
    5. 'df' → logprob: -16.125207901000977
    6. '```' → logprob: -16.625207901000977
    7. 'dp' → logprob: -17.125207901000977
    8. ' DFS' → logprob: -18.375207901000977
    9. 'solve' → logprob: -18.375207901000977
    10. '
' → logprob: -18.875207901000977

Token 772: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -0.001760029001161456
    2. '(' → logprob: -6.376760005950928
    3. '(index' → logprob: -10.876760482788086
    4. ' (' → logprob: -11.376760482788086
    5. '(i' → logprob: -12.126760482788086
    6. '(
' → logprob: -12.251760482788086
    7. '(depth' → logprob: -12.501760482788086
    8. '(id' → logprob: -12.876760482788086
    9. '   ' → logprob: -13.001760482788086
    10. '	idx' → logprob: -13.751760482788086

Token 773: ',last' (ID: 184134)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.872261317563243e-05
    2. ' ,' → logprob: -10.750059127807617
    3. ',int' → logprob: -11.250059127807617
    4. ',last' → logprob: -11.625059127807617
    5. ',
' → logprob: -12.750059127807617
    6. '‌,' → logprob: -13.375059127807617
    7. '   ' → logprob: -13.500059127807617
    8. ',index' → logprob: -13.625059127807617
    9. ',length' → logprob: -13.625059127807617
    10. ',n' → logprob: -13.750059127807617

Token 774: '_finish' (ID: 109520)
  Prédit: '_finish'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_finish' → logprob: -0.00011510594777064398
    2. 'finish' → logprob: -10.375115394592285
    3. '_fin' → logprob: -10.625115394592285
    4. '_' → logprob: -11.250115394592285
    5. ')' → logprob: -11.500115394592285
    6. '_finished' → logprob: -11.625115394592285
    7. ')_' → logprob: -12.250115394592285
    8. ',' → logprob: -12.375115394592285
    9. '_token' → logprob: -12.750115394592285
    10. '_f' → logprob: -13.125115394592285

Token 775: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -7.822646693966817e-06
    2. 'time' → logprob: -13.000007629394531
    3. '_' → logprob: -13.125007629394531
    4. '_times' → logprob: -13.625007629394531
    5. '_token' → logprob: -13.750007629394531
    6. 'Time' → logprob: -14.375007629394531
    7. '   ' → logprob: -15.500007629394531
    8. '_t' → logprob: -15.750007629394531
    9. '_TIME' → logprob: -16.12500762939453
    10. '```' → logprob: -16.37500762939453

Token 776: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1050889864563942
    2. ',n' → logprob: -2.730088949203491
    3. ',num' → logprob: -3.480088949203491
    4. ',line' → logprob: -6.73008918762207
    5. ',k' → logprob: -7.60508918762207
    6. ',new' → logprob: -7.98008918762207
    7. ',max' → logprob: -8.23008918762207
    8. ',min' → logprob: -8.23008918762207
    9. ',int' → logprob: -8.35508918762207
    10. ',set' → logprob: -8.48008918762207

Token 777: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.00038658222183585167
    2. ' used' → logprob: -7.875386714935303
    3. '   ' → logprob: -12.250386238098145
    4. ' ' → logprob: -15.625386238098145
    5. '       ' → logprob: -15.625386238098145
    6. 'Used' → logprob: -15.625386238098145
    7. '_used' → logprob: -15.750386238098145
    8. 'chosen' → logprob: -16.25038719177246
    9. '```' → logprob: -16.25038719177246
    10. 'visited' → logprob: -16.50038719177246

Token 778: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -1.6047699318733066e-05
    2. ')_' → logprob: -12.000016212463379
    3. '```' → logprob: -13.000016212463379
    4. '_' → logprob: -13.125016212463379
    5. '_set' → logprob: -14.250016212463379
    6. ')' → logprob: -14.250016212463379
    7. 'numbers' → logprob: -14.375016212463379
    8. '):
' → logprob: -14.500016212463379
    9. '
' → logprob: -14.750016212463379
    10. ',_' → logprob: -14.875016212463379

Token 779: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5239224433898926
    2. ',' → logprob: -0.8989224433898926
    3. '):
' → logprob: -8.398921966552734
    4. ',n' → logprob: -9.398921966552734
    5. ',b' → logprob: -9.398921966552734
    6. ',set' → logprob: -9.648921966552734
    7. ',d' → logprob: -10.273921966552734
    8. ',s' → logprob: -10.523921966552734
    9. ',c' → logprob: -10.523921966552734
    10. ',p' → logprob: -10.523921966552734

Token 780: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.24182356894016266
    2. '<|end|>' → logprob: -2.241823673248291
    3. '       ' → logprob: -2.491823673248291
    4. ':' → logprob: -5.116823673248291
    5. '```' → logprob: -5.116823673248291
    6. '    ' → logprob: -6.241823673248291
    7. '<|end|>' → logprob: -6.616823673248291
    8. '    
' → logprob: -6.866823673248291
    9. ' if' → logprob: -6.866823673248291
    10. ')' → logprob: -7.116823673248291

Token 781: ' non' (ID: 2893)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2613474130630493
    2. 'if' → logprob: -1.5113474130630493
    3. '   ' → logprob: -5.01134729385376
    4. '       ' → logprob: -6.01134729385376
    5. '	if' → logprob: -8.761347770690918
    6. '\t' → logprob: -10.886347770690918
    7. ':' → logprob: -11.011347770690918
    8. '    ' → logprob: -11.136347770690918
    9. ' for' → logprob: -11.386347770690918
    10. 'for' → logprob: -11.761347770690918

Token 782: 'local' (ID: 5818)
  Prédit: 'local'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'local' → logprob: -0.02518821507692337
    2. 'def' → logprob: -4.650188446044922
    3. '<|end|>' → logprob: -5.025188446044922
    4. '   ' → logprob: -6.650188446044922
    5. 'space' → logprob: -6.650188446044922
    6. '=' → logprob: -6.900188446044922
    7. ',' → logprob: -7.400188446044922
    8. ')' → logprob: -7.400188446044922
    9. ' ' → logprob: -7.525188446044922
    10. ' local' → logprob: -8.025188446044922

Token 783: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -2.935296834039036e-06
    2. ' min' → logprob: -12.75000286102295
    3. '_min' → logprob: -19.125003814697266
    4. '(min' → logprob: -20.500003814697266
    5. '           ' → logprob: -21.000003814697266
    6. '	min' → logprob: -21.000003814697266
    7. 'minimum' → logprob: -21.625003814697266
    8. '`' → logprob: -22.625003814697266
    9. 'minimal' → logprob: -23.000003814697266
    10. '[min' → logprob: -23.375003814697266

Token 784: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -1.3902033970225602e-05
    2. 'length' → logprob: -11.250014305114746
    3. '_' → logprob: -14.125014305114746
    4. 'ength' → logprob: -17.12501335144043
    5. '_LENGTH' → logprob: -17.50001335144043
    6. '_l' → logprob: -17.62501335144043
    7. '_depth' → logprob: -18.25001335144043
    8. 'Length' → logprob: -18.37501335144043
    9. '_le' → logprob: -19.37501335144043
    10. '_lengths' → logprob: -19.37501335144043

Token 785: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05655345320701599
    2. '       ' → logprob: -4.431553363800049
    3. '   ' → logprob: -4.681553363800049
    4. '<|end|>' → logprob: -4.681553363800049
    5. '
' → logprob: -4.806553363800049
    6. ',' → logprob: -4.806553363800049
    7. '):
' → logprob: -6.681553363800049
    8. ':
' → logprob: -6.806553363800049
    9. ' if' → logprob: -6.931553363800049
    10. 'if' → logprob: -6.931553363800049

Token 786: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18912076950073242
    2. '   ' → logprob: -2.1891207695007324
    3. '    
' → logprob: -3.5641207695007324
    4. '       ' → logprob: -4.064120769500732
    5. '            
' → logprob: -5.939120769500732
    6. '```' → logprob: -5.939120769500732
    7. ' if' → logprob: -6.314120769500732
    8. '        
' → logprob: -6.564120769500732
    9. '<|end|>' → logprob: -6.564120769500732
    10. 'if' → logprob: -6.814120769500732

Token 787: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.04845825210213661
    2. 'for' → logprob: -3.2984583377838135
    3. '           ' → logprob: -4.798458099365234
    4. ' if' → logprob: -6.423458099365234
    5. '   ' → logprob: -8.298458099365234
    6. '       ' → logprob: -8.548458099365234
    7. ' for' → logprob: -9.923458099365234
    8. '```' → logprob: -12.673458099365234
    9. '	if' → logprob: -14.173458099365234
    10. 'i' → logprob: -14.298458099365234

Token 788: ' idx' (ID: 14016)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.38691702485084534
    2. ' idx' → logprob: -1.136916995048523
    3. '	idx' → logprob: -10.511917114257812
    4. '           ' → logprob: -11.386917114257812
    5. '(idx' → logprob: -12.011917114257812
    6. '_idx' → logprob: -14.386917114257812
    7. '=' → logprob: -15.511917114257812
    8. '[idx' → logprob: -15.511917114257812
    9. '==' → logprob: -16.136917114257812
    10. '   ' → logprob: -16.511917114257812

Token 789: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.34910714626312256
    2. ' ==' → logprob: -1.2241071462631226
    3. ')==' → logprob: -8.724106788635254
    4. ')' → logprob: -9.349106788635254
    5. '>=' → logprob: -9.599106788635254
    6. '<=' → logprob: -10.224106788635254
    7. '=' → logprob: -10.349106788635254
    8. '{' → logprob: -10.474106788635254
    9. '===' → logprob: -10.474106788635254
    10. ']==' → logprob: -10.474106788635254

Token 790: 'P' (ID: 47)
  Prédit: 'P'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'P' → logprob: -2.45848218582978e-06
    2. ' P' → logprob: -13.75000286102295
    3. '           ' → logprob: -13.87500286102295
    4. '       ' → logprob: -15.12500286102295
    5. '               ' → logprob: -16.250001907348633
    6. '   ' → logprob: -16.875001907348633
    7. '(P' → logprob: -18.375001907348633
    8. '                   ' → logprob: -19.625001907348633
    9. '.P' → logprob: -19.625001907348633
    10. ')' → logprob: -20.250001907348633

Token 791: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007857399992644787
    2. ':
' → logprob: -4.882857322692871
    3. ':return' → logprob: -8.882857322692871
    4. '):' → logprob: -9.632857322692871
    5. '           ' → logprob: -11.132857322692871
    6. '       ' → logprob: -11.757857322692871
    7. '<|end|>' → logprob: -12.007857322692871
    8. '):
' → logprob: -12.257857322692871
    9. ')' → logprob: -12.382857322692871
    10. '{' → logprob: -13.007857322692871

Token 792: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007295201066881418
    2. '       ' → logprob: -5.75729513168335
    3. '           ' → logprob: -6.13229513168335
    4. '<|end|>' → logprob: -7.50729513168335
    5. ':
' → logprob: -7.75729513168335
    6. '   ' → logprob: -8.132295608520508
    7. ':' → logprob: -8.382295608520508
    8. ':return' → logprob: -9.757295608520508
    9. ',' → logprob: -9.882295608520508
    10. '```' → logprob: -10.007295608520508

Token 793: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' (adapté à ' min') → logprob: -0.8659065365791321
    2. '               ' → logprob: -0.9909065365791321
    3. 'if' → logprob: -1.8659064769744873
    4. ' if' → logprob: -3.8659064769744873
    5. '           ' → logprob: -3.8659064769744873
    6. ' min' → logprob: -4.740906715393066
    7. '       ' → logprob: -6.240906715393066
    8. '   ' → logprob: -7.615906715393066
    9. '	min' → logprob: -9.365906715393066
    10. '[min' → logprob: -9.990906715393066

Token 794: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.00046296243090182543
    2. 'length' → logprob: -8.250462532043457
    3. '(min' → logprob: -9.000462532043457
    4. '_' → logprob: -9.875462532043457
    5. 'min' → logprob: -11.625462532043457
    6. 'Length' → logprob: -12.250462532043457
    7. 'ength' → logprob: -12.500462532043457
    8. '(' → logprob: -12.750462532043457
    9. '(length' → logprob: -13.000462532043457
    10. '_lengths' → logprob: -14.375462532043457

Token 795: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002511808415874839
    2. ' =' → logprob: -6.002511978149414
    3. '=min' → logprob: -10.252511978149414
    4. '   ' → logprob: -14.252511978149414
    5. '<=' → logprob: -16.627511978149414
    6. 'min' → logprob: -17.002511978149414
    7. '           ' → logprob: -17.252511978149414
    8. '=
' → logprob: -17.752511978149414
    9. '>' → logprob: -18.502511978149414
    10. '=max' → logprob: -18.627511978149414

Token 796: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -5.5577775128767826e-06
    2. ' min' → logprob: -12.500005722045898
    3. 'len' → logprob: -13.250005722045898
    4. '	min' → logprob: -17.2500057220459
    5. '=min' → logprob: -18.6250057220459
    6. '   ' → logprob: -18.7500057220459
    7. 'max' → logprob: -19.2500057220459
    8. '(min' → logprob: -19.5000057220459
    9. '           ' → logprob: -20.0000057220459
    10. '       ' → logprob: -20.8750057220459

Token 797: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -0.006830932572484016
    2. '(len' → logprob: -5.006831169128418
    3. '(' → logprob: -9.256831169128418
    4. 'min' → logprob: -11.006831169128418
    5. 'len' → logprob: -12.756831169128418
    6. '(
' → logprob: -16.0068302154541
    7. '	min' → logprob: -16.1318302154541
    8. ' min' → logprob: -16.1318302154541
    9. '=min' → logprob: -17.1318302154541
    10. '(max' → logprob: -17.6318302154541

Token 798: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.001985971350222826
    2. 'length' → logprob: -6.376986026763916
    3. 'ength' → logprob: -8.626985549926758
    4. 'min' → logprob: -10.876985549926758
    5. 'used' → logprob: -11.126985549926758
    6. '(min' → logprob: -11.501985549926758
    7. 'idx' → logprob: -11.501985549926758
    8. 'len' → logprob: -11.751985549926758
    9. '_' → logprob: -12.126985549926758
    10. '(idx' → logprob: -12.126985549926758

Token 799: ',len' (ID: 73338)
  Prédit: ',len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',len' → logprob: -0.38755786418914795
    2. ',' → logprob: -1.387557864189148
    3. ',min' → logprob: -2.6375579833984375
    4. 'len' → logprob: -10.762557983398438
    5. ' ,' → logprob: -11.262557983398438
    6. ',max' → logprob: -11.387557983398438
    7. ',length' → logprob: -12.512557983398438
    8. ',last' → logprob: -12.887557983398438
    9. 'used' → logprob: -13.387557983398438
    10. '           ' → logprob: -13.387557983398438

Token 800: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3306015716807451e-05
    2. 'used' → logprob: -11.25001335144043
    3. ')' → logprob: -16.62501335144043
    4. '```' → logprob: -17.25001335144043
    5. ' (' → logprob: -17.37501335144043
    6. '(
' → logprob: -18.37501335144043
    7. '(use' → logprob: -19.00001335144043
    8. ' used' → logprob: -19.12501335144043
    9. 'Used' → logprob: -19.50001335144043
    10. '((' → logprob: -20.50001335144043

Token 801: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -3.7146746763028204e-05
    2. '(' → logprob: -10.50003719329834
    3. ' used' → logprob: -11.62503719329834
    4. ')' → logprob: -14.62503719329834
    5. '```' → logprob: -16.250036239624023
    6. '{' → logprob: -16.750036239624023
    7. '_used' → logprob: -17.250036239624023
    8. 'Used' → logprob: -18.125036239624023
    9. '.used' → logprob: -18.250036239624023
    10. '   ' → logprob: -18.250036239624023

Token 802: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -3.130576806142926e-05
    2. ')' → logprob: -11.625031471252441
    3. 'numbers' → logprob: -12.000031471252441
    4. '(numbers' → logprob: -12.125031471252441
    5. '```' → logprob: -13.000031471252441
    6. '_used' → logprob: -13.375031471252441
    7. ')_' → logprob: -13.625031471252441
    8. '(' → logprob: -13.875031471252441
    9. '_' → logprob: -14.250031471252441
    10. '{' → logprob: -14.375031471252441

Token 803: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.10625098645687103
    2. '))
' → logprob: -2.3562510013580322
    3. ')' → logprob: -5.231250762939453
    4. '           ' → logprob: -7.481250762939453
    5. ')
' → logprob: -9.606250762939453
    6. '               ' → logprob: -10.356250762939453
    7. ')))' → logprob: -12.981250762939453
    8. '       ' → logprob: -13.231250762939453
    9. '))
' → logprob: -13.231250762939453
    10. '                   ' → logprob: -13.356250762939453

Token 804: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.011584833264350891
    2. '           ' → logprob: -4.511584758758545
    3. '   ' → logprob: -8.511585235595703
    4. '       ' → logprob: -8.761585235595703
    5. '<|end|>' → logprob: -9.011585235595703
    6. '```' → logprob: -10.761585235595703
    7. '                   ' → logprob: -11.886585235595703
    8. '	           ' → logprob: -12.136585235595703
    9. ' return' → logprob: -12.511585235595703
    10. 'return' → logprob: -12.886585235595703

Token 805: ' return' (ID: 622)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13546030223369598
    2. 'return' (adapté à ' return') → logprob: -2.135460376739502
    3. '           ' → logprob: -4.885460376739502
    4. ' return' → logprob: -7.010460376739502
    5. '   ' → logprob: -10.635459899902344
    6. '       ' → logprob: -11.510459899902344
    7. '	return' → logprob: -13.760459899902344
    8. '                   ' → logprob: -13.760459899902344
    9. ' ' → logprob: -14.385459899902344
    10. '              ' → logprob: -15.385459899902344

Token 806: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3042911887168884
    2. '       ' → logprob: -1.4292912483215332
    3. 'for' → logprob: -5.054291248321533
    4. '   ' → logprob: -5.179291248321533
    5. ' for' → logprob: -5.429291248321533
    6. '
' → logprob: -5.679291248321533
    7. '    
' → logprob: -6.804291248321533
    8. '        
' → logprob: -6.929291248321533
    9. '            
' → logprob: -8.304290771484375
    10. '<|end|>' → logprob: -8.429290771484375

Token 807: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8500372767448425
    2. '
' → logprob: -1.4750373363494873
    3. '           ' → logprob: -1.6000373363494873
    4. '       ' → logprob: -2.6000373363494873
    5. ' for' → logprob: -3.9750373363494873
    6. '    
' → logprob: -3.9750373363494873
    7. '```' → logprob: -4.475037097930908
    8. 'for' → logprob: -4.725037097930908
    9. '<|end|>' → logprob: -5.475037097930908
    10. '        
' → logprob: -6.725037097930908

Token 808: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.49662941694259644
    2. '           ' → logprob: -1.3716294765472412
    3. '       ' → logprob: -2.621629476547241
    4. ' for' → logprob: -2.871629476547241
    5. '   ' → logprob: -4.871629238128662
    6. '<|end|>' → logprob: -8.37162971496582
    7. '```' → logprob: -8.49662971496582
    8. 'line' → logprob: -9.74662971496582
    9. ' ' → logprob: -10.37162971496582
    10. 'lines' → logprob: -10.49662971496582

Token 809: ' bound' (ID: 11608)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.470901229884475e-05
    2. 'info' → logprob: -10.62508487701416
    3. ' for' → logprob: -10.75008487701416
    4. '       ' → logprob: -11.50008487701416
    5. 'line' → logprob: -11.62508487701416
    6. 'c' → logprob: -12.25008487701416
    7. '           ' → logprob: -12.25008487701416
    8. 's' → logprob: -12.62508487701416
    9. 'lines' → logprob: -12.87508487701416
    10. '   ' → logprob: -13.00008487701416

Token 810: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009237228892743587
    2. ' =' → logprob: -5.634237289428711
    3. '       ' → logprob: -6.384237289428711
    4. ' if' → logprob: -7.009237289428711
    5. ',' → logprob: -7.259237289428711
    6. '
' → logprob: -7.759237289428711
    7. '=' → logprob: -8.134237289428711
    8. '   ' → logprob: -8.634237289428711
    9. ':' → logprob: -8.634237289428711
    10. '            ' → logprob: -8.759237289428711

Token 811: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.40349921584129333
    2. 'if' → logprob: -1.5284992456436157
    3. '           ' → logprob: -2.278499126434326
    4. 'for' → logprob: -5.028499126434326
    5. ' for' → logprob: -5.403499126434326
    6. '```' → logprob: -7.403499126434326
    7. '       ' → logprob: -7.778499126434326
    8. '   ' → logprob: -8.153499603271484
    9. 'max' → logprob: -8.903499603271484
    10. ' max' → logprob: -10.028499603271484

Token 812: ' used' (ID: 2061)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.001515100128017366
    2. 'min' → logprob: -6.501514911651611
    3. 'used' → logprob: -12.25151538848877
    4. '   ' → logprob: -13.12651538848877
    5. ' len' → logprob: -13.12651538848877
    6. 'length' → logprob: -13.25151538848877
    7. '
' → logprob: -14.12651538848877
    8. '(len' → logprob: -14.37651538848877
    9. '  ' → logprob: -15.12651538848877
    10. '```' → logprob: -15.62651538848877

Token 813: ' numbers' (ID: 8663)
  Prédit: '_numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.0007431607809849083
    2. '_' → logprob: -8.00074291229248
    3. '```' → logprob: -8.12574291229248
    4. '_tokens' → logprob: -10.25074291229248
    5. 'numbers' → logprob: -10.62574291229248
    6. '           ' → logprob: -11.25074291229248
    7. '   ' → logprob: -12.12574291229248
    8. 'Numbers' → logprob: -12.62574291229248
    9. '
' → logprob: -12.62574291229248
    10. 'len' → logprob: -13.00074291229248

Token 814: ' already' (ID: 4279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.21437570452690125
    2. '>' → logprob: -2.5893757343292236
    3. '|' → logprob: -3.0893757343292236
    4. '>=' → logprob: -3.0893757343292236
    5. 'len' → logprob: -4.5893754959106445
    6. '.union' → logprob: -5.4643754959106445
    7. 'and' → logprob: -5.8393754959106445
    8. '>.' → logprob: -6.4643754959106445
    9. '```' → logprob: -6.9643754959106445
    10. ' >=' → logprob: -6.9643754959106445

Token 815: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.6391531229019165
    2. '>' → logprob: -1.0141531229019165
    3. '|' → logprob: -2.889153003692627
    4. ')' → logprob: -4.139153003692627
    5. 'len' → logprob: -4.764153003692627
    6. ' >=' → logprob: -4.764153003692627
    7. '   ' → logprob: -5.139153003692627
    8. ')>=' → logprob: -5.264153003692627
    9. ')>' → logprob: -6.264153003692627
    10. 'and' → logprob: -6.514153003692627

Token 816: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -3.5716304410016164e-05
    2. ' min' → logprob: -10.250035285949707
    3. '   ' → logprob: -15.875035285949707
    4. '```' → logprob: -16.000036239624023
    5. '	min' → logprob: -18.375036239624023
    6. '
' → logprob: -18.500036239624023
    7. '`' → logprob: -18.500036239624023
    8. '           ' → logprob: -18.625036239624023
    9. '(min' → logprob: -18.875036239624023
    10. '       ' → logprob: -19.000036239624023

Token 817: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.0003862245939671993
    2. 'length' → logprob: -8.500386238098145
    3. 'used' → logprob: -9.625386238098145
    4. '_used' → logprob: -9.625386238098145
    5. '           ' → logprob: -10.875386238098145
    6. '   ' → logprob: -12.000386238098145
    7. 'len' → logprob: -12.375386238098145
    8. '(length' → logprob: -12.625386238098145
    9. '       ' → logprob: -12.750386238098145
    10. '```' → logprob: -12.875386238098145

Token 818: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2418302297592163
    2. '           ' → logprob: -1.2418302297592163
    3. '               ' → logprob: -1.7418302297592163
    4. ' and' → logprob: -2.116830348968506
    5. ':
' → logprob: -2.491830348968506
    6. 'and' → logprob: -3.241830348968506
    7. ':return' → logprob: -6.491830348968506
    8. ' or' → logprob: -7.241830348968506
    9. ',' → logprob: -7.366830348968506
    10. '       ' → logprob: -7.866830348968506

Token 819: ' prune' (ID: 140388)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.062462907284498215
    2. 'return' → logprob: -2.81246280670166
    3. ' return' → logprob: -7.68746280670166
    4. '   ' → logprob: -10.81246280670166
    5. '           ' → logprob: -11.56246280670166
    6. ' ' → logprob: -13.81246280670166
    7. '                   ' → logprob: -14.06246280670166
    8. '       ' → logprob: -14.06246280670166
    9. '{return' → logprob: -14.18746280670166
    10. ':return' → logprob: -14.18746280670166

Token 820: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00012678056373260915
    2. 'if' → logprob: -10.125126838684082
    3. '       ' → logprob: -10.500126838684082
    4. '   ' → logprob: -11.125126838684082
    5. ' if' → logprob: -11.250126838684082
    6. '```' → logprob: -11.375126838684082
    7. '               ' → logprob: -12.000126838684082
    8. '
' → logprob: -12.000126838684082
    9. '<|end|>' → logprob: -13.125126838684082
    10. '		' → logprob: -13.500126838684082

Token 821: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006744279526174068
    2. 'if' → logprob: -8.1256742477417
    3. '       ' → logprob: -8.3756742477417
    4. ' if' → logprob: -9.3756742477417
    5. '   ' → logprob: -10.1256742477417
    6. 'for' → logprob: -11.5006742477417
    7. '```' → logprob: -11.8756742477417
    8. '               ' → logprob: -12.7506742477417
    9. ' for' → logprob: -13.3756742477417
    10. ' ' → logprob: -14.8756742477417

Token 822: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.48106783628463745
    2. '           ' → logprob: -0.9810678362846375
    3. ' if' → logprob: -4.981067657470703
    4. '   ' → logprob: -9.856067657470703
    5. '       ' → logprob: -10.106067657470703
    6. '```' → logprob: -12.231067657470703
    7. ' ' → logprob: -14.731067657470703
    8. '               ' → logprob: -15.106067657470703
    9. '          ' → logprob: -15.481067657470703
    10. '	if' → logprob: -15.606067657470703

Token 823: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.000432695698691532
    2. ' len' → logprob: -7.75043249130249
    3. '(len' → logprob: -14.000432968139648
    4. '   ' → logprob: -14.125432968139648
    5. '           ' → logprob: -15.125432968139648
    6. '  ' → logprob: -16.37543296813965
    7. '	len' → logprob: -16.50043296813965
    8. '    ' → logprob: -17.62543296813965
    9. ' ' → logprob: -17.75043296813965
    10. '       ' → logprob: -18.62543296813965

Token 824: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.107425062713446e-06
    2. ' (' → logprob: -12.125006675720215
    3. '_used' → logprob: -14.125006675720215
    4. 'used' → logprob: -14.375006675720215
    5. '(_' → logprob: -16.00000762939453
    6. '_' → logprob: -16.00000762939453
    7. '_(' → logprob: -17.37500762939453
    8. '   ' → logprob: -18.00000762939453
    9. '```' → logprob: -18.62500762939453
    10. ' used' → logprob: -18.62500762939453

Token 825: 'used' (ID: 4943)
  Prédit: 'used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -1.5048530030981055e-06
    2. ' used' → logprob: -13.500001907348633
    3. '_used' → logprob: -18.625001907348633
    4. '-used' → logprob: -19.375001907348633
    5. '.used' → logprob: -20.750001907348633
    6. 'Used' → logprob: -21.000001907348633
    7. '   ' → logprob: -22.000001907348633
    8. '(' → logprob: -22.250001907348633
    9. ' ' → logprob: -22.375001907348633
    10. '```' → logprob: -22.500001907348633

Token 826: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -9.491498531133402e-06
    2. '_' → logprob: -11.875009536743164
    3. '(numbers' → logprob: -13.625009536743164
    4. '```' → logprob: -14.875009536743164
    5. ' _' → logprob: -15.375009536743164
    6. '(_' → logprob: -15.750009536743164
    7. '_used' → logprob: -16.125009536743164
    8. ')' → logprob: -16.625009536743164
    9. '_)' → logprob: -16.750009536743164
    10. '_n' → logprob: -16.750009536743164

Token 827: ')>=' (ID: 173043)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.051417719572782516
    2. ' >=' → logprob: -3.051417827606201
    3. ')>=' → logprob: -6.051417827606201
    4. '           ' → logprob: -8.676417350769043
    5. ']>=' → logprob: -9.051417350769043
    6. '>' → logprob: -9.551417350769043
    7. ')' → logprob: -9.676417350769043
    8. '   ' → logprob: -10.551417350769043
    9. '       ' → logprob: -11.676417350769043
    10. '≥' → logprob: -12.926417350769043

Token 828: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -2.935296834039036e-06
    2. ' min' → logprob: -12.75000286102295
    3. '   ' → logprob: -19.750003814697266
    4. '	min' → logprob: -21.625003814697266
    5. '```' → logprob: -22.500003814697266
    6. '_min' → logprob: -22.750003814697266
    7. 'max' → logprob: -23.375003814697266
    8. '           ' → logprob: -23.375003814697266
    9. '(min' → logprob: -23.625003814697266
    10. '[min' → logprob: -24.250003814697266

Token 829: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -7.64839569455944e-05
    2. 'length' → logprob: -9.500076293945312
    3. 'Length' → logprob: -14.125076293945312
    4. 'ength' → logprob: -14.875076293945312
    5. 'min' → logprob: -15.000076293945312
    6. '_l' → logprob: -17.375076293945312
    7. '_LENGTH' → logprob: -17.500076293945312
    8. 'th' → logprob: -17.500076293945312
    9. '   ' → logprob: -17.625076293945312
    10. '           ' → logprob: -17.875076293945312

Token 830: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20948347449302673
    2. '               ' → logprob: -2.4594833850860596
    3. ':' → logprob: -2.5844833850860596
    4. ':return' → logprob: -3.5844833850860596
    5. '           ' → logprob: -8.45948314666748
    6. 'return' → logprob: -9.58448314666748
    7. ':
' → logprob: -10.95948314666748
    8. '):
' → logprob: -11.33448314666748
    9. '       ' → logprob: -11.70948314666748
    10. '   ' → logprob: -12.70948314666748

Token 831: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00020699729793705046
    2. 'return' → logprob: -8.62520694732666
    3. '           ' → logprob: -11.87520694732666
    4. ':return' → logprob: -11.87520694732666
    5. ' return' → logprob: -12.00020694732666
    6. '       ' → logprob: -12.25020694732666
    7. '   ' → logprob: -14.00020694732666
    8. '                   ' → logprob: -14.62520694732666
    9. '{return' → logprob: -15.00020694732666
    10. '<|end|>' → logprob: -15.62520694732666

Token 832: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0032534082420170307
    2. '               ' → logprob: -5.75325345993042
    3. ' return' → logprob: -9.503252983093262
    4. ':return' → logprob: -14.503252983093262
    5. '{return' → logprob: -15.253252983093262
    6. '	return' → logprob: -16.003253936767578
    7. '           ' → logprob: -16.128253936767578
    8. '                   ' → logprob: -17.128253936767578
    9. '   ' → logprob: -17.378253936767578
    10. ')return' → logprob: -17.878253936767578

Token 833: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0872611328959465
    2. '       ' → logprob: -3.337261199951172
    3. 'for' → logprob: -3.712261199951172
    4. ' for' → logprob: -4.712261199951172
    5. '
' → logprob: -5.212261199951172
    6. '<|end|>' → logprob: -6.087261199951172
    7. '        
' → logprob: -6.462261199951172
    8. '   ' → logprob: -6.587261199951172
    9. '            
' → logprob: -6.712261199951172
    10. '    
' → logprob: -6.962261199951172

Token 834: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.549770712852478
    2. '   ' → logprob: -2.0497708320617676
    3. '       ' → logprob: -2.1747708320617676
    4. 'for' → logprob: -2.1747708320617676
    5. ' for' → logprob: -3.5497708320617676
    6. '```' → logprob: -3.5497708320617676
    7. '    
' → logprob: -5.549770832061768
    8. '
' → logprob: -6.174770832061768
    9. '        
' → logprob: -7.174770832061768
    10. '<|end|>' → logprob: -7.424770832061768

Token 835: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.23765408992767334
    2. '           ' → logprob: -1.7376540899276733
    3. ' for' → logprob: -3.362654209136963
    4. '       ' → logprob: -7.362654209136963
    5. '   ' → logprob: -8.487653732299805
    6. '```' → logprob: -9.487653732299805
    7. 'def' → logprob: -11.737653732299805
    8. '	for' → logprob: -11.862653732299805
    9. '            
' → logprob: -12.487653732299805
    10. '
' → logprob: -13.612653732299805

Token 836: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.6254361867904663
    2. 'line' → logprob: -1.0004361867904663
    3. '(s' → logprob: -2.625436305999756
    4. 'i' → logprob: -4.875436305999756
    5. 'lines' → logprob: -5.625436305999756
    6. '(line' → logprob: -5.750436305999756
    7. '(' → logprob: -5.875436305999756
    8. 'l' → logprob: -6.375436305999756
    9. ' s' → logprob: -6.375436305999756
    10. '(i' → logprob: -7.000436305999756

Token 837: ',m' (ID: 26648)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.214166522026062
    2. ',(' → logprob: -2.5891666412353516
    3. ',line' → logprob: -2.8391666412353516
    4. ',s' → logprob: -3.0891666412353516
    5. ',c' → logprob: -5.464166641235352
    6. 'in' → logprob: -5.839166641235352
    7. ',_' → logprob: -6.089166641235352
    8. ',n' → logprob: -7.214166641235352
    9. ',l' → logprob: -7.464166641235352
    10. ',m' → logprob: -7.714166641235352

Token 838: 'x' (ID: 87)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7112898230552673
    2. 'in' → logprob: -1.336289882659912
    3. 'x' → logprob: -2.211289882659912
    4. ',' → logprob: -2.586289882659912
    5. 's' → logprob: -3.586289882659912
    6. 'ax' → logprob: -3.836289882659912
    7. ',m' → logprob: -6.461289882659912
    8. ',_' → logprob: -6.461289882659912
    9. ',x' → logprob: -6.586289882659912
    10. ',s' → logprob: -6.836289882659912

Token 839: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14409376680850983
    2. 'in' → logprob: -2.0190937519073486
    3. ',' → logprob: -6.644093990325928
    4. 's' → logprob: -9.51909351348877
    5. ',s' → logprob: -11.64409351348877
    6. ',in' → logprob: -11.64409351348877
    7. ' ,' → logprob: -12.01909351348877
    8. ')' → logprob: -12.39409351348877
    9. ' ' → logprob: -12.89409351348877
    10. ',m' → logprob: -13.14409351348877

Token 840: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -9.014684110297821e-06
    2. ' line' → logprob: -11.875008583068848
    3. '(line' → logprob: -13.250008583068848
    4. '[line' → logprob: -15.625008583068848
    5. '   ' → logprob: -17.625009536743164
    6. '#line' → logprob: -18.375009536743164
    7. '=line' → logprob: -18.875009536743164
    8. '	line' → logprob: -18.875009536743164
    9. 'range' → logprob: -19.000009536743164
    10. ' ' → logprob: -20.000009536743164

Token 841: '_info' (ID: 6744)
  Prédit: '_info'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_info' → logprob: -0.0008350008283741772
    2. 'info' → logprob: -7.750834941864014
    3. '_lines' → logprob: -9.250835418701172
    4. 's' → logprob: -9.375835418701172
    5. '           ' → logprob: -9.625835418701172
    6. '_sets' → logprob: -10.375835418701172
    7. '[' → logprob: -10.625835418701172
    8. 'sets' → logprob: -10.625835418701172
    9. '       ' → logprob: -11.500835418701172
    10. '   ' → logprob: -11.500835418701172

Token 842: '[idx' (ID: 25582)
  Prédit: '[idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[idx' → logprob: -0.0009594622533768415
    2. '[c' → logprob: -7.000959396362305
    3. '[' → logprob: -10.375959396362305
    4. '           ' → logprob: -12.750959396362305
    5. '[cur' → logprob: -13.625959396362305
    6. '[src' → logprob: -13.625959396362305
    7. '[id' → logprob: -13.750959396362305
    8. '[cnt' → logprob: -13.750959396362305
    9. '```' → logprob: -13.750959396362305
    10. '       ' → logprob: -14.000959396362305

Token 843: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5877076983451843
    2. '):' → logprob: -1.837707757949829
    3. '):
' → logprob: -2.087707757949829
    4. '           ' → logprob: -2.212707757949829
    5. ':
' → logprob: -3.212707757949829
    6. ']:' → logprob: -5.96270751953125
    7. '               ' → logprob: -6.08770751953125
    8. ']:
' → logprob: -6.46270751953125
    9. '[' → logprob: -6.58770751953125
    10. '       ' → logprob: -6.83770751953125

Token 844: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0016175732016563416
    2. '<|end|>' → logprob: -7.001617431640625
    3. '           ' → logprob: -8.001617431640625
    4. '              ' → logprob: -9.501617431640625
    5. '                
' → logprob: -9.751617431640625
    6. '       ' → logprob: -9.876617431640625
    7. '                ' → logprob: -10.001617431640625
    8. '```' → logprob: -10.251617431640625
    9. '             ' → logprob: -11.001617431640625
    10. '            ' → logprob: -11.001617431640625

Token 845: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06371865421533585
    2. ' if' → logprob: -3.188718557357788
    3. 'if' → logprob: -3.938718557357788
    4. '           ' → logprob: -7.813718795776367
    5. '                   ' → logprob: -8.813718795776367
    6. '   ' → logprob: -8.938718795776367
    7. '<|end|>' → logprob: -9.063718795776367
    8. '```' → logprob: -9.438718795776367
    9. '                ' → logprob: -9.688718795776367
    10. '              ' → logprob: -10.813718795776367

Token 846: ' enforce' (ID: 57352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0003643058007583022
    2. '               ' → logprob: -8.500364303588867
    3. ' if' → logprob: -8.750364303588867
    4. '```' → logprob: -13.375364303588867
    5. 'If' → logprob: -15.250364303588867
    6. '                
' → logprob: -15.500364303588867
    7. '                   ' → logprob: -16.250364303588867
    8. '@if' → logprob: -16.625364303588867
    9. ';if' → logprob: -16.750364303588867
    10. '                ' → logprob: -16.875364303588867

Token 847: ' condition' (ID: 7060)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.12839144468307495
    2. ' mx' → logprob: -2.1283915042877197
    3. '(mx' → logprob: -6.628391265869141
    4. 'last' → logprob: -9.87839126586914
    5. '   ' → logprob: -10.37839126586914
    6. ' last' → logprob: -10.37839126586914
    7. ' ' → logprob: -12.00339126586914
    8. '.mx' → logprob: -12.50339126586914
    9. '
' → logprob: -12.62839126586914
    10. '  ' → logprob: -13.12839126586914

Token 848: ':' (ID: 25)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6637945771217346
    2. 'if' → logprob: -1.0387945175170898
    3. '               ' → logprob: -2.03879451751709
    4. '                   ' → logprob: -7.28879451751709
    5. 'mx' → logprob: -9.16379451751709
    6. '                ' → logprob: -9.91379451751709
    7. ' mx' → logprob: -10.16379451751709
    8. '(mx' → logprob: -10.28879451751709
    9. ':' → logprob: -10.78879451751709
    10. ',' → logprob: -11.03879451751709

Token 849: ' finish' (ID: 9115)
  Prédit: ' mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mx' → logprob: -0.4404972791671753
    2. 'mx' → logprob: -1.1904972791671753
    3. ' if' → logprob: -3.315497398376465
    4. 'if' → logprob: -4.190497398376465
    5. '(mx' → logprob: -7.440497398376465
    6. '               ' → logprob: -9.440497398376465
    7. '
' → logprob: -9.690497398376465
    8. '                   ' → logprob: -12.190497398376465
    9. '.mx' → logprob: -12.315497398376465
    10. ' ' → logprob: -12.440497398376465

Token 850: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -0.00017231269157491624
    2. '               ' → logprob: -8.87517261505127
    3. '_times' → logprob: -10.50017261505127
    4. '                   ' → logprob: -13.25017261505127
    5. 'time' → logprob: -13.87517261505127
    6. '_token' → logprob: -14.12517261505127
    7. '           ' → logprob: -14.75017261505127
    8. 'Time' → logprob: -15.62517261505127
    9. '```' → logprob: -15.62517261505127
    10. '=' → logprob: -16.000171661376953

Token 851: ' of' (ID: 328)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.04990476742386818
    2. '<=' → logprob: -3.2999048233032227
    3. ' >=' → logprob: -4.674904823303223
    4. '[idx' → logprob: -6.174904823303223
    5. ' <=' → logprob: -8.424904823303223
    6. '>' → logprob: -9.674904823303223
    7. '≥' → logprob: -10.424904823303223
    8. '```' → logprob: -10.799904823303223
    9. ']>=' → logprob: -11.424904823303223
    10. 'idx' → logprob: -11.549904823303223

Token 852: ' current' (ID: 2208)
  Prédit: 'idx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.09833849966526031
    2. 'current' → logprob: -3.4733386039733887
    3. ' idx' → logprob: -3.9733386039733887
    4. 'last' → logprob: -4.348338603973389
    5. 'mx' → logprob: -4.473338603973389
    6. 's' → logprob: -4.973338603973389
    7. ' current' → logprob: -5.848338603973389
    8. 'cards' → logprob: -5.973338603973389
    9. 'card' → logprob: -6.973338603973389
    10. 'the' → logprob: -6.973338603973389

Token 853: ' line' (ID: 2543)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.5768963694572449
    2. ' <=' → logprob: -0.8268963694572449
    3. 'idx' → logprob: -7.8268961906433105
    4. '[idx' → logprob: -7.9518961906433105
    5. '```' → logprob: -9.576896667480469
    6. ' ' → logprob: -10.451896667480469
    7. ')<=' → logprob: -10.451896667480469
    8. ' idx' → logprob: -10.826896667480469
    9. '>=' → logprob: -11.076896667480469
    10. '(idx' → logprob: -12.076896667480469

Token 854: ' >=' (ID: 5064)
  Prédit: ' >='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >=' → logprob: -0.5833698511123657
    2. '>=' → logprob: -1.0833698511123657
    3. ' <=' → logprob: -2.583369731903076
    4. '<=' → logprob: -3.583369731903076
    5. '>' → logprob: -9.208370208740234
    6. '```' → logprob: -10.208370208740234
    7. '               ' → logprob: -10.958370208740234
    8. ' >' → logprob: -11.208370208740234
    9. ')>=' → logprob: -11.208370208740234
    10. ']>=' → logprob: -11.458370208740234

Token 855: ' last' (ID: 2174)
  Prédit: 'last'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -0.0005530327325686812
    2. ' last' → logprob: -7.500553131103516
    3. '_last' → logprob: -16.875553131103516
    4. '               ' → logprob: -17.375553131103516
    5. '`' → logprob: -18.000553131103516
    6. '           ' → logprob: -18.125553131103516
    7. '```' → logprob: -18.875553131103516
    8. '(last' → logprob: -19.000553131103516
    9. '	last' → logprob: -19.375553131103516
    10. '
' → logprob: -19.500553131103516

Token 856: '_finish' (ID: 109520)
  Prédit: '_finish'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_finish' → logprob: -6.704273118884885e-07
    2. 'finish' → logprob: -15.125000953674316
    3. 'Finish' → logprob: -16.0
    4. '_' → logprob: -16.75
    5. '```' → logprob: -16.875
    6. '_finished' → logprob: -17.25
    7. '_continue' → logprob: -18.25
    8. '\' → logprob: -18.5
    9. '_fin' → logprob: -18.625
    10. '_fill' → logprob: -18.75

Token 857: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -16.125
    3. '_times' → logprob: -17.625
    4. '_TIME' → logprob: -18.0
    5. 'time' → logprob: -18.125
    6. 'Time' → logprob: -18.75
    7. '   ' → logprob: -18.875
    8. '_token' → logprob: -19.5
    9. ' time' → logprob: -19.625
    10. '_Time' → logprob: -19.875

Token 858: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00020592445798683912
    2. ' if' → logprob: -9.500205993652344
    3. '<|end|>' → logprob: -9.500205993652344
    4. 'if' → logprob: -10.625205993652344
    5. '                
' → logprob: -11.750205993652344
    6. ',' → logprob: -12.500205993652344
    7. ' and' → logprob: -12.750205993652344
    8. 'and' → logprob: -12.875205993652344
    9. '```' → logprob: -12.875205993652344
    10. '<|end|>' → logprob: -13.125205993652344

Token 859: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001483564410591498
    2. '<|end|>' → logprob: -9.50014877319336
    3. '                ' → logprob: -10.62514877319336
    4. '                
' → logprob: -11.12514877319336
    5. '              ' → logprob: -11.50014877319336
    6. '```' → logprob: -11.87514877319336
    7. '           ' → logprob: -12.37514877319336
    8. ' if' → logprob: -12.50014877319336
    9. '                   ' → logprob: -13.25014877319336
    10. '<|end|>' → logprob: -14.00014877319336

Token 860: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018476733937859535
    2. 'if' (adapté à ' if') → logprob: -4.143476963043213
    3. ' if' → logprob: -6.018476963043213
    4. '           ' → logprob: -13.018476486206055
    5. '<|end|>' → logprob: -14.018476486206055
    6. '   ' → logprob: -14.643476486206055
    7. '```' → logprob: -14.643476486206055
    8. '              ' → logprob: -14.768476486206055
    9. ' ' → logprob: -14.893476486206055
    10. '                   ' → logprob: -15.393476486206055

Token 861: ' mx' (ID: 28004)
  Prédit: 'mx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mx' → logprob: -0.10023093223571777
    2. ' mx' → logprob: -2.3502309322357178
    3. '(mx' → logprob: -10.850231170654297
    4. 'm' → logprob: -13.600231170654297
    5. '   ' → logprob: -13.725231170654297
    6. '               ' → logprob: -13.850231170654297
    7. '.mx' → logprob: -14.475231170654297
    8. ' ' → logprob: -14.975231170654297
    9. '	m' → logprob: -15.225231170654297
    10. '                   ' → logprob: -15.725231170654297

Token 862: '>=' (ID: 20974)
  Prédit: '>='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.009977057576179504
    2. '<' → logprob: -5.259976863861084
    3. ' >=' → logprob: -5.384976863861084
    4. ']>=' → logprob: -10.509977340698242
    5. ')>=' → logprob: -10.509977340698242
    6. ' <' → logprob: -10.634977340698242
    7. '>' → logprob: -11.009977340698242
    8. '<int' → logprob: -11.509977340698242
    9. '<m' → logprob: -11.509977340698242
    10. '<s' → logprob: -11.884977340698242

Token 863: 'last' (ID: 6684)
  Prédit: 'last'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'last' → logprob: -7.493430894101039e-05
    2. ' last' → logprob: -9.500075340270996
    3. '_last' → logprob: -20.12507438659668
    4. '	last' → logprob: -20.50007438659668
    5. '           ' → logprob: -21.00007438659668
    6. '(last' → logprob: -21.12507438659668
    7. '   ' → logprob: -21.62507438659668
    8. '
' → logprob: -22.00007438659668
    9. '[last' → logprob: -22.25007438659668
    10. '`' → logprob: -22.87507438659668

Token 864: '_finish' (ID: 109520)
  Prédit: '_finish'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_finish' → logprob: -1.981667537620524e-06
    2. '_time' → logprob: -14.125001907348633
    3. 'finish' → logprob: -14.375001907348633
    4. '```' → logprob: -15.250001907348633
    5. '           ' → logprob: -16.875001907348633
    6. '_finished' → logprob: -17.125001907348633
    7. '   ' → logprob: -17.250001907348633
    8. '_continue' → logprob: -17.250001907348633
    9. '               ' → logprob: -17.500001907348633
    10. 'Finish' → logprob: -17.500001907348633

Token 865: '_time' (ID: 6425)
  Prédit: '_time'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_time' → logprob: -1.8624639324116288e-06
    2. 'time' → logprob: -13.625001907348633
    3. 'ime' → logprob: -14.375001907348633
    4. '_times' → logprob: -17.375001907348633
    5. 'Time' → logprob: -18.000001907348633
    6. '_TIME' → logprob: -18.000001907348633
    7. ' time' → logprob: -18.625001907348633
    8. '_t' → logprob: -18.750001907348633
    9. '_tim' → logprob: -18.875001907348633
    10. '   ' → logprob: -19.000001907348633

Token 866: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6231840252876282
    2. ':' → logprob: -0.9981840252876282
    3. '                   ' → logprob: -2.7481839656829834
    4. '               ' → logprob: -3.7481839656829834
    5. '<|end|>' → logprob: -5.7481842041015625
    6. '):
' → logprob: -6.6231842041015625
    7. '                       ' → logprob: -7.2481842041015625
    8. ' and' → logprob: -7.3731842041015625
    9. ',' → logprob: -7.9981842041015625
    10. '<|end|>' → logprob: -8.248184204101562

Token 867: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.038843799382448196
    2. '               ' → logprob: -3.288843870162964
    3. '                ' → logprob: -8.038844108581543
    4. '                       ' → logprob: -8.913844108581543
    5. '           ' → logprob: -9.538844108581543
    6. '                    
' → logprob: -9.913844108581543
    7. '                  ' → logprob: -10.038844108581543
    8. '                    ' → logprob: -10.288844108581543
    9. '```' → logprob: -10.413844108581543
    10. '   ' → logprob: -10.538844108581543

Token 868: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.9470392465591431
    2. ' new' → logprob: -1.072039246559143
    3. 'dfs' → logprob: -2.0720391273498535
    4. '                   ' → logprob: -2.3220391273498535
    5. '               ' → logprob: -3.5720391273498535
    6. ' dfs' → logprob: -4.1970391273498535
    7. 'next' → logprob: -6.4470391273498535
    8. ' next' → logprob: -7.9470391273498535
    9. '   ' → logprob: -8.697039604187012
    10. '```' → logprob: -9.072039604187012

Token 869: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.0300813727080822
    2. '_numbers' → logprob: -3.530081272125244
    3. 'used' → logprob: -8.155081748962402
    4. '_set' → logprob: -11.280081748962402
    5. '_nums' → logprob: -11.530081748962402
    6. '_users' → logprob: -12.280081748962402
    7. '```' → logprob: -12.780081748962402
    8. '_usage' → logprob: -12.780081748962402
    9. '_' → logprob: -13.030081748962402
    10. '_use' → logprob: -13.030081748962402

Token 870: ' =' (ID: 314)
  Prédit: '_numbers'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -0.0041548567824065685
    2. '=' → logprob: -5.629154682159424
    3. '=_' → logprob: -8.004155158996582
    4. ' =' → logprob: -9.129155158996582
    5. 'numbers' → logprob: -9.754155158996582
    6. '```' → logprob: -11.129155158996582
    7. '_tokens' → logprob: -12.129155158996582
    8. '=set' → logprob: -12.379155158996582
    9. '_sets' → logprob: -12.629155158996582
    10. '_=' → logprob: -12.629155158996582

Token 871: ' used' (ID: 2061)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.0019287518225610256
    2. ' used' → logprob: -6.251928806304932
    3. '   ' → logprob: -15.876928329467773
    4. '           ' → logprob: -17.751928329467773
    5. '  ' → logprob: -18.376928329467773
    6. '               ' → logprob: -18.501928329467773
    7. '```' → logprob: -19.501928329467773
    8. '                   ' → logprob: -19.626928329467773
    9. '              ' → logprob: -19.876928329467773
    10. ' ' → logprob: -19.876928329467773

Token 872: '_numbers' (ID: 76842)
  Prédit: '_numbers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_numbers' → logprob: -2.4391956685576588e-05
    2. 'numbers' → logprob: -10.875024795532227
    3. '```' → logprob: -13.625024795532227
    4. '{' → logprob: -14.250024795532227
    5. '_sets' → logprob: -14.250024795532227
    6. 'set' → logprob: -14.375024795532227
    7. '_tokens' → logprob: -14.625024795532227
    8. '(numbers' → logprob: -14.875024795532227
    9. '|' → logprob: -15.500024795532227
    10. '_set' → logprob: -15.625024795532227

Token 873: ' |' (ID: 1022)
  Prédit: '.union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.union' → logprob: -0.6692184209823608
    2. '|' → logprob: -0.9192184209823608
    3. ' |' → logprob: -2.4192185401916504
    4. 'union' → logprob: -10.294218063354492
    5. '.' → logprob: -10.419218063354492
    6. '.copy' → logprob: -13.419218063354492
    7. '.|' → logprob: -13.794218063354492
    8. ' union' → logprob: -14.419218063354492
    9. '   ' → logprob: -14.544218063354492
    10. '|get' → logprob: -14.794218063354492

Token 874: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005929154809564352
    2. ' s' → logprob: -5.130928993225098
    3. '{s' → logprob: -15.130928993225098
    4. 'set' → logprob: -15.505928993225098
    5. '`s' → logprob: -16.755929946899414
    6. '```' → logprob: -17.755929946899414
    7. ' set' → logprob: -18.005929946899414
    8. '(s' → logprob: -18.755929946899414
    9. '{' → logprob: -19.005929946899414
    10. '	s' → logprob: -19.380929946899414

Token 875: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02867899276316166
    2. '<|end|>' → logprob: -3.7786788940429688
    3. '               ' → logprob: -5.778678894042969
    4. ')' → logprob: -7.278678894042969
    5. '
' → logprob: -7.653678894042969
    6. '                    
' → logprob: -8.278678894042969
    7. '                  ' → logprob: -8.528678894042969
    8. '<|end|>' → logprob: -9.028678894042969
    9. '```' → logprob: -9.528678894042969
    10. '           ' → logprob: -9.653678894042969

Token 876: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0003673940955195576
    2. '               ' → logprob: -8.500367164611816
    3. '<|end|>' → logprob: -9.250367164611816
    4. '           ' → logprob: -11.000367164611816
    5. '                    
' → logprob: -11.250367164611816
    6. '                  ' → logprob: -11.375367164611816
    7. '       ' → logprob: -12.125367164611816
    8. '<|end|>' → logprob: -12.375367164611816
    9. '
' → logprob: -12.875367164611816
    10. '```' → logprob: -12.875367164611816

Token 877: ' if' (ID: 538)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' → logprob: -0.08006303757429123
    2. '                   ' → logprob: -2.9550631046295166
    3. 'if' (adapté à ' if') → logprob: -3.7050631046295166
    4. ' dfs' → logprob: -9.080062866210938
    5. '               ' → logprob: -9.830062866210938
    6. '                       ' → logprob: -9.955062866210938
    7. '```' → logprob: -10.830062866210938
    8. ' if' → logprob: -11.330062866210938
    9. 'df' → logprob: -11.580062866210938
    10. '           ' → logprob: -12.080062866210938

Token 878: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.8444881536415778e-05
    2. ' len' → logprob: -10.625028610229492
    3. '(len' → logprob: -12.750028610229492
    4. '   ' → logprob: -15.000028610229492
    5. '                   ' → logprob: -15.000028610229492
    6. 'mx' → logprob: -16.125028610229492
    7. 'new' → logprob: -16.625028610229492
    8. '           ' → logprob: -16.750028610229492
    9. '               ' → logprob: -17.000028610229492
    10. '
' → logprob: -17.000028610229492

Token 879: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -4.723352049040841e-06
    2. 'new' → logprob: -12.375004768371582
    3. '(' → logprob: -14.875004768371582
    4. '[new' → logprob: -16.625003814697266
    5. '=new' → logprob: -18.000003814697266
    6. ')new' → logprob: -18.000003814697266
    7. '```' → logprob: -18.375003814697266
    8. ' (' → logprob: -18.750003814697266
    9. ' new' → logprob: -18.875003814697266
    10. '(
' → logprob: -19.125003814697266

Token 880: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -0.0006396461394615471
    2. '_new' → logprob: -7.87563943862915
    3. '(new' → logprob: -8.875639915466309
    4. 'new' → logprob: -9.250639915466309
    5. 'used' → logprob: -11.500639915466309
    6. '[new' → logprob: -12.500639915466309
    7. 'Used' → logprob: -12.625639915466309
    8. '{' → logprob: -12.875639915466309
    9. '(' → logprob: -14.250639915466309
    10. '```' → logprob: -14.625639915466309

Token 881: ')>=' (ID: 173043)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.30417922139167786
    2. ' <' → logprob: -2.3041791915893555
    3. '<=' → logprob: -2.3041791915893555
    4. '>=' → logprob: -3.6791791915893555
    5. '>' → logprob: -3.8041791915893555
    6. ' <=' → logprob: -4.8041791915893555
    7. ' >=' → logprob: -6.1791791915893555
    8. '<len' → logprob: -6.3041791915893555
    9. ')' → logprob: -6.8041791915893555
    10. ' >' → logprob: -7.1791791915893555

Token 882: 'min' (ID: 1493)
  Prédit: 'min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -5.512236498361744e-07
    2. ' min' → logprob: -14.625000953674316
    3. '   ' → logprob: -18.25
    4. '```' → logprob: -21.0
    5. '	min' → logprob: -22.0
    6. 'm' → logprob: -22.875
    7. 'max' → logprob: -23.0
    8. 'len' → logprob: -23.5
    9. '`' → logprob: -23.625
    10. '=min' → logprob: -23.625

Token 883: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -2.7968066206085496e-05
    2. 'length' → logprob: -10.500027656555176
    3. 'ength' → logprob: -15.250027656555176
    4. 'min' → logprob: -16.375028610229492
    5. 'Length' → logprob: -17.125028610229492
    6. '_LENGTH' → logprob: -18.375028610229492
    7. 'th' → logprob: -18.375028610229492
    8. ' length' → logprob: -21.125028610229492
    9. '	length' → logprob: -21.125028610229492
    10. '(length' → logprob: -21.875028610229492

Token 884: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7932302951812744
    2. ':' → logprob: -0.9182302951812744
    3. ':
' → logprob: -1.9182302951812744
    4. '                   ' → logprob: -6.918230056762695
    5. ':return' → logprob: -8.418230056762695
    6. 'continue' → logprob: -8.918230056762695
    7. ':
' → logprob: -9.543230056762695
    8. '):
' → logprob: -10.918230056762695
    9. '```' → logprob: -11.543230056762695
    10. '():
' → logprob: -11.543230056762695

Token 885: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.000513952283654362
    2. '                   ' → logprob: -8.125514030456543
    3. ':' → logprob: -8.875514030456543
    4. 'continue' → logprob: -9.625514030456543
    5. ':
' → logprob: -12.125514030456543
    6. ' continue' → logprob: -13.000514030456543
    7. '                           ' → logprob: -13.625514030456543
    8. '               ' → logprob: -14.375514030456543
    9. '					' → logprob: -14.375514030456543
    10. '                      ' → logprob: -14.500514030456543

Token 886: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.06206167861819267
    2. '                       ' → logprob: -2.8120617866516113
    3. '                   ' → logprob: -9.812061309814453
    4. '                           ' → logprob: -11.187061309814453
    5. ' continue' → logprob: -11.187061309814453
    6. 'break' → logprob: -12.312061309814453
    7. '   ' → logprob: -12.937061309814453
    8. '	continue' → logprob: -13.062061309814453
    9. 'return' → logprob: -13.312061309814453
    10. '```' → logprob: -15.062061309814453

Token 887: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0017396744806319475
    2. '               ' → logprob: -6.751739501953125
    3. 'dfs' → logprob: -7.626739501953125
    4. ' dfs' → logprob: -10.626739501953125
    5. '                       ' → logprob: -11.126739501953125
    6. '                    
' → logprob: -11.126739501953125
    7. '```' → logprob: -11.751739501953125
    8. '           ' → logprob: -11.876739501953125
    9. '
' → logprob: -12.626739501953125
    10. '                  ' → logprob: -12.626739501953125

Token 888: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003246039617806673
    2. '               ' → logprob: -5.753245830535889
    3. 'dfs' → logprob: -9.878246307373047
    4. '                       ' → logprob: -12.128246307373047
    5. '           ' → logprob: -12.503246307373047
    6. '```' → logprob: -12.628246307373047
    7. ' dfs' → logprob: -13.003246307373047
    8. '       ' → logprob: -14.378246307373047
    9. '   ' → logprob: -14.628246307373047
    10. '                  ' → logprob: -15.003246307373047

Token 889: ' dfs' (ID: 51252)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.39509081840515137
    2. 'dfs' (adapté à ' dfs') → logprob: -1.1450908184051514
    3. '               ' → logprob: -5.0200910568237305
    4. ' dfs' → logprob: -6.5200910568237305
    5. '                       ' → logprob: -9.39509105682373
    6. '           ' → logprob: -11.77009105682373
    7. 'df' → logprob: -12.52009105682373
    8. '                  ' → logprob: -12.52009105682373
    9. '   ' → logprob: -13.27009105682373
    10. '                    ' → logprob: -13.39509105682373

Token 890: '(idx' (ID: 42793)
  Prédit: '(idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(idx' → logprob: -1.688212614681106e-05
    2. 'idx' → logprob: -11.000017166137695
    3. '(' → logprob: -16.875017166137695
    4. '(index' → logprob: -16.875017166137695
    5. '[idx' → logprob: -17.125017166137695
    6. ' (' → logprob: -17.500017166137695
    7. ' idx' → logprob: -18.000017166137695
    8. '	idx' → logprob: -18.125017166137695
    9. '(
' → logprob: -18.250017166137695
    10. '```' → logprob: -18.750017166137695

Token 891: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.576873758807778e-05
    2. ' +' → logprob: -9.500075340270996
    3. '(idx' → logprob: -15.125075340270996
    4. '+,' → logprob: -15.750075340270996
    5. '()+' → logprob: -15.750075340270996
    6. ',' → logprob: -16.625076293945312
    7. '(+' → logprob: -16.875076293945312
    8. '+
' → logprob: -17.125076293945312
    9. '＋' → logprob: -17.125076293945312
    10. 'idx' → logprob: -18.000076293945312

Token 892: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.3451433409936726e-05
    2. 'idx' → logprob: -10.375033378601074
    3. ' ' → logprob: -14.125033378601074
    4. '```' → logprob: -14.500033378601074
    5. 'last' → logprob: -15.000033378601074
    6. '(' → logprob: -15.250033378601074
    7. '(idx' → logprob: -15.375033378601074
    8. ',' → logprob: -16.87503433227539
    9. '+' → logprob: -17.37503433227539
    10. ' idx' → logprob: -17.75003433227539

Token 893: ',m' (ID: 26648)
  Prédit: ',m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',m' → logprob: -0.008626513183116913
    2. ',' → logprob: -4.758626461029053
    3. ',max' → logprob: -11.758626937866211
    4. ' ,' → logprob: -12.883626937866211
    5. '(mx' → logprob: -14.633626937866211
    6. 'mx' → logprob: -15.133626937866211
    7. '   ' → logprob: -16.00862693786621
    8. ',
' → logprob: -16.00862693786621
    9. '```' → logprob: -16.13362693786621
    10. '.mx' → logprob: -16.38362693786621

Token 894: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -3.531315314830863e-06
    2. 'ax' → logprob: -12.750003814697266
    3. '_x' → logprob: -15.750003814697266
    4. '```' → logprob: -16.375003814697266
    5. 'm' → logprob: -16.625003814697266
    6. 'mx' → logprob: -17.000003814697266
    7. '
' → logprob: -17.625003814697266
    8. ' x' → logprob: -17.750003814697266
    9. '{x' → logprob: -17.937503814697266
    10. '(mx' → logprob: -18.125003814697266

Token 895: ',new' (ID: 60564)
  Prédit: ',new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',new' → logprob: -0.0009155054576694965
    2. ',' → logprob: -7.00091552734375
    3. 'new' → logprob: -13.00091552734375
    4. ' ,' → logprob: -13.37591552734375
    5. '   ' → logprob: -16.87591552734375
    6. '  ' → logprob: -17.37591552734375
    7. ' new' → logprob: -17.37591552734375
    8. ',current' → logprob: -17.50091552734375
    9. ',set' → logprob: -17.62591552734375
    10. ',user' → logprob: -18.00091552734375

Token 896: '_used' (ID: 67016)
  Prédit: '_used'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_used' → logprob: -6.034592388459714e-06
    2. 'used' → logprob: -12.125005722045898
    3. '_USED' → logprob: -15.750005722045898
    4. '_called' → logprob: -16.0000057220459
    5. 'Used' → logprob: -16.1250057220459
    6. '```' → logprob: -16.8750057220459
    7. '.used' → logprob: -17.8750057220459
    8. 'ed' → logprob: -18.3750057220459
    9. '-used' → logprob: -19.0000057220459
    10. 's' → logprob: -19.1250057220459

Token 897: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. ')
' → logprob: -13.50000286102295
    3. ')return' → logprob: -14.50000286102295
    4. ' )' → logprob: -15.00000286102295
    5. '       ' → logprob: -15.25000286102295
    6. ')}}' → logprob: -15.50000286102295
    7. '())' → logprob: -15.62500286102295
    8. '<|end|>' → logprob: -16.125003814697266
    9. '           ' → logprob: -16.375003814697266
    10. '))' → logprob: -16.875003814697266

Token 898: '       ' (ID: 309)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.837822437286377
    2. '       ' → logprob: -1.337822437286377
    3. 'def' → logprob: -2.462822437286377
    4. 'dfs' → logprob: -2.837822437286377
    5. ')' → logprob: -3.337822437286377
    6. '
' → logprob: -3.587822437286377
    7. '<|end|>' → logprob: -3.587822437286377
    8. 'return' → logprob: -3.712822437286377
    9. '   ' → logprob: -3.837822437286377
    10. '```' → logprob: -4.712822437286377

Token 899: ' dfs' (ID: 51252)
  Prédit: 'dfs'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dfs' (adapté à ' dfs') → logprob: -0.004163164179772139
    2. '   ' → logprob: -5.6291632652282715
    3. '       ' → logprob: -7.7541632652282715
    4. ' dfs' → logprob: -10.004162788391113
    5. '
' → logprob: -10.504162788391113
    6. 'def' → logprob: -10.629162788391113
    7. '    
' → logprob: -11.004162788391113
    8. '        
' → logprob: -11.629162788391113
    9. '```' → logprob: -12.254162788391113
    10. 'df' → logprob: -13.129162788391113

Token 900: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.3856492842023727e-06
    2. ' (' → logprob: -13.750000953674316
    3. '0' → logprob: -15.375000953674316
    4. '(
' → logprob: -17.875001907348633
    5. 'def' → logprob: -19.375001907348633
    6. '```' → logprob: -19.500001907348633
    7. '((' → logprob: -21.125001907348633
    8. '<|end|>' → logprob: -21.500001907348633
    9. '}(' → logprob: -21.750001907348633
    10. '
' → logprob: -22.375001907348633

Token 901: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. '(' → logprob: -17.75
    3. ' ' → logprob: -19.125
    4. ')' → logprob: -20.625
    5. '   ' → logprob: -22.625
    6. '۰' → logprob: -22.625
    7. '０' → logprob: -23.5
    8. '00' → logprob: -23.625
    9. '```' → logprob: -23.875
    10. '=' → logprob: -24.5

Token 902: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00022964231902733445
    2. '0' → logprob: -8.500229835510254
    3. '(' → logprob: -11.500229835510254
    4. ',-' → logprob: -11.625229835510254
    5. ' ,' → logprob: -12.625229835510254
    6. ',float' → logprob: -12.750229835510254
    7. ',
' → logprob: -15.250229835510254
    8. ',(' → logprob: -15.875229835510254
    9. ')' → logprob: -16.000228881835938
    10. '(-' → logprob: -16.625228881835938

Token 903: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0067154900170862675
    2. '-' → logprob: -5.006715297698975
    3. '-f' → logprob: -17.256715774536133
    4. '-s' → logprob: -17.881715774536133
    5. ' -' → logprob: -18.506715774536133
    6. '-min' → logprob: -18.506715774536133
    7. '1' → logprob: -18.631715774536133
    8. ' ' → logprob: -18.756715774536133
    9. '-zero' → logprob: -18.881715774536133
    10. 'float' → logprob: -19.131715774536133

Token 904: ',set' (ID: 95771)
  Prédit: ',set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',set' → logprob: -0.005047556012868881
    2. ',' → logprob: -5.38004732131958
    3. ',{' → logprob: -7.88004732131958
    4. 'set' → logprob: -10.130047798156738
    5. '(set' → logprob: -12.505047798156738
    6. ' set' → logprob: -13.380047798156738
    7. ')set' → logprob: -13.630047798156738
    8. '=set' → logprob: -13.880047798156738
    9. ':set' → logprob: -14.380047798156738
    10. ' ,' → logprob: -14.755047798156738

Token 905: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0006050990778021514
    2. '())
' → logprob: -7.50060510635376
    3. '())

' → logprob: -10.000604629516602
    4. '())
' → logprob: -12.500604629516602
    5. '()' → logprob: -12.875604629516602
    6. ' ())' → logprob: -15.875604629516602
    7. ')' → logprob: -16.6256046295166
    8. '());' → logprob: -16.8756046295166
    9. '())


' → logprob: -17.2506046295166
    10. '();)' → logprob: -17.3756046295166

Token 906: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5761371850967407
    2. '       ' → logprob: -0.8261371850967407
    3. '   ' → logprob: -8.70113754272461
    4. ' print' → logprob: -11.20113754272461
    5. '```' → logprob: -11.20113754272461
    6. '           ' → logprob: -13.70113754272461
    7. '        
' → logprob: -13.95113754272461
    8. '	print' → logprob: -14.45113754272461
    9. '<|end|>' → logprob: -14.70113754272461
    10. 'import' → logprob: -14.82613754272461

Token 907: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.03816187009215355
    2. '       ' → logprob: -3.2881617546081543
    3. '   ' → logprob: -9.413162231445312
    4. '```' → logprob: -10.288162231445312
    5. ' print' → logprob: -12.913162231445312
    6. '
' → logprob: -13.288162231445312
    7. '        
' → logprob: -15.288162231445312
    8. '``' → logprob: -15.788162231445312
    9. '	print' → logprob: -16.788162231445312
    10. '`' → logprob: -17.288162231445312

Token 908: '(min' (ID: 26035)
  Prédit: '(min'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(min' → logprob: -3.128163257315464e-07
    2. 'min' → logprob: -16.25
    3. '(' → logprob: -16.375
    4. '(f' → logprob: -17.375
    5. '(max' → logprob: -19.375
    6. ' (' → logprob: -20.0
    7. '(m' → logprob: -20.5
    8. '(len' → logprob: -20.5
    9. '[min' → logprob: -20.75
    10. '((' → logprob: -21.25

Token 909: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -5.438573680294212e-06
    2. 'length' → logprob: -12.750005722045898
    3. '(min' → logprob: -13.000005722045898
    4. 'min' → logprob: -15.875005722045898
    5. '(length' → logprob: -16.2500057220459
    6. 'ength' → logprob: -17.3750057220459
    7. '{' → logprob: -17.7500057220459
    8. 'Length' → logprob: -18.3750057220459
    9. '_LENGTH' → logprob: -18.3750057220459
    10. '_l' → logprob: -18.8750057220459

Token 910: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 911: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -2.339278580620885e-06
    2. ' min' → logprob: -13.000001907348633
    3. '(min' → logprob: -19.375001907348633
    4. '	min' → logprob: -20.750001907348633
    5. '=min' → logprob: -21.000001907348633
    6. '   ' → logprob: -22.625001907348633
    7. '[min' → logprob: -22.750001907348633
    8. '  ' → logprob: -23.375001907348633
    9. 'minimal' → logprob: -23.625001907348633
    10. 'minimum' → logprob: -23.625001907348633

Token 912: '_length' (ID: 11514)
  Prédit: '_length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_length' → logprob: -0.00022070204431656748
    2. '(min' → logprob: -8.62522029876709
    3. 'in' → logprob: -11.25022029876709
    4. 'min' → logprob: -12.00022029876709
    5. '_LENGTH' → logprob: -12.12522029876709
    6. '=min' → logprob: -12.37522029876709
    7. '<' → logprob: -13.62522029876709
    8. '>' → logprob: -13.75022029876709
    9. '!=' → logprob: -13.87522029876709
    10. 'ength' → logprob: -14.00022029876709

Token 913: '!=' (ID: 11408)
  Prédit: '!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.004958593752235174
    2. '<' → logprob: -5.379958629608154
    3. ' !=' → logprob: -8.254958152770996
    4. '!==' → logprob: -11.379958152770996
    5. '<int' → logprob: -11.504958152770996
    6. '()!=' → logprob: -11.629958152770996
    7. '<>' → logprob: -12.004958152770996
    8. '!=-' → logprob: -12.004958152770996
    9. 'else' → logprob: -12.254958152770996
    10. '<len' → logprob: -12.504958152770996

Token 914: 'float' (ID: 7829)
  Prédit: 'float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -1.9361264946837764e-07
    2. ' float' → logprob: -16.25
    3. '	float' → logprob: -20.25
    4. '```' → logprob: -20.25
    5. '   ' → logprob: -20.5
    6. '
' → logprob: -20.875
    7. '(float' → logprob: -21.0
    8. '=float' → logprob: -21.0
    9. 'flo' → logprob: -22.875
    10. '<float' → logprob: -23.5

Token 915: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -2.339278580620885e-06
    2. '('-' → logprob: -13.250001907348633
    3. '("' → logprob: -15.000001907348633
    4. '('+' → logprob: -16.125001907348633
    5. '(' → logprob: -17.000001907348633
    6. '('_' → logprob: -17.500001907348633
    7. ''s' → logprob: -17.750001907348633
    8. '('.' → logprob: -18.250001907348633
    9. ''' → logprob: -18.375001907348633
    10. ' ('' → logprob: -19.000001907348633

Token 916: 'inf' (ID: 22226)
  Prédit: ''in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''in' → logprob: -0.05128783732652664
    2. 'inf' → logprob: -3.801287889480591
    3. ''' → logprob: -4.176287651062012
    4. ''ex' → logprob: -5.051287651062012
    5. ''ins' → logprob: -7.176287651062012
    6. ''s' → logprob: -7.426287651062012
    7. ''information' → logprob: -7.676287651062012
    8. ''ap' → logprob: -7.926287651062012
    9. ''import' → logprob: -8.176287651062012
    10. '('' → logprob: -8.426287651062012

Token 917: '')' (ID: 1542)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.4129047691822052
    2. ')' → logprob: -1.1629047393798828
    3. ' else' → logprob: -3.662904739379883
    4. '')' → logprob: -10.537904739379883
    5. '```' → logprob: -12.162904739379883
    6. ' )' → logprob: -12.662904739379883
    7. ' ' → logprob: -14.037904739379883
    8. '   ' → logprob: -14.162904739379883
    9. '``' → logprob: -14.287904739379883
    10. '
' → logprob: -14.412904739379883

Token 918: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3132629096508026
    2. ' else' → logprob: -1.313262939453125
    3. '```' → logprob: -14.313262939453125
    4. ')' → logprob: -14.813262939453125
    5. 'and' → logprob: -16.938262939453125
    6. '	else' → logprob: -17.063262939453125
    7. '_else' → logprob: -17.563262939453125
    8. '
' → logprob: -17.813262939453125
    9. '   ' → logprob: -17.938262939453125
    10. ' ' → logprob: -18.063262939453125

Token 919: ' ' (ID: 220)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.1517670452594757
    2. '0' → logprob: -2.4017670154571533
    3. '"' → logprob: -3.6517670154571533
    4. ''' → logprob: -3.7767670154571533
    5. ''-' → logprob: -7.526767253875732
    6. '"No' → logprob: -8.276766777038574
    7. '"-' → logprob: -8.276766777038574
    8. ' -' → logprob: -9.401766777038574
    9. ''M' → logprob: -9.776766777038574
    10. ''N' → logprob: -10.151766777038574

Token 920: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.16055424511432648
    2. '0' → logprob: -2.1605541706085205
    3. ''' → logprob: -4.0355544090271
    4. '"' → logprob: -4.2855544090271
    5. ''-' → logprob: -7.1605544090271
    6. '"No' → logprob: -7.6605544090271
    7. '"-' → logprob: -8.160553932189941
    8. ''N' → logprob: -11.035553932189941
    9. ''M' → logprob: -11.535553932189941
    10. ' -' → logprob: -11.660553932189941

Token 921: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00035357745946384966
    2. '())' → logprob: -8.000353813171387
    3. ' )' → logprob: -11.750353813171387
    4. '()' → logprob: -12.750353813171387
    5. '<|end|>' → logprob: -12.750353813171387
    6. ')
' → logprob: -13.250353813171387
    7. '))' → logprob: -14.000353813171387
    8. ')}' → logprob: -14.500353813171387
    9. '```' → logprob: -14.750353813171387
    10. '`)' → logprob: -15.500353813171387

Token 922: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 923: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.20170928537845612
    2. '__' → logprob: -1.701709270477295
    3. '___' → logprob: -8.701709747314453
    4. '_' → logprob: -9.451709747314453
    5. '_name' → logprob: -10.451709747314453
    6. 'name' → logprob: -11.326709747314453
    7. '____' → logprob: -11.826709747314453
    8. '_____' → logprob: -14.451709747314453
    9. ' ___' → logprob: -14.576709747314453
    10. '/__' → logprob: -15.451709747314453

Token 924: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05021817609667778
    2. ' ==' → logprob: -3.675218105316162
    3. 'name' → logprob: -4.050218105316162
    4. '==' → logprob: -5.300218105316162
    5. ' __' → logprob: -7.300218105316162
    6. '=="' → logprob: -8.55021858215332
    7. '__.__' → logprob: -9.67521858215332
    8. 'main' → logprob: -9.92521858215332
    9. '```' → logprob: -10.05021858215332
    10. '__.' → logprob: -10.05021858215332

Token 925: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0005188359646126628
    2. '__.__' → logprob: -7.625518798828125
    3. '==' → logprob: -11.500518798828125
    4. '__.' → logprob: -11.625518798828125
    5. '=="' → logprob: -12.500518798828125
    6. '__('' → logprob: -13.125518798828125
    7. '__["' → logprob: -13.375518798828125
    8. '____' → logprob: -13.625518798828125
    9. '___' → logprob: -14.250518798828125
    10. '__("' → logprob: -14.375518798828125

Token 926: '=="' (ID: 24027)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.22910785675048828
    2. '==' → logprob: -1.9791078567504883
    3. ' ==' → logprob: -3.3541078567504883
    4. '=="' → logprob: -3.4791078567504883
    5. '=='' → logprob: -7.354107856750488
    6. '__.__' → logprob: -9.479107856750488
    7. '==
' → logprob: -11.104107856750488
    8. '__":
' → logprob: -11.229107856750488
    9. '__["' → logprob: -11.854107856750488
    10. '()==' → logprob: -11.979107856750488

Token 927: '__' (ID: 771)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3063583970069885
    2. '__' → logprob: -1.8063583374023438
    3. ''' → logprob: -2.3063583374023438
    4. ' "__' → logprob: -13.806358337402344
    5. 'main' → logprob: -14.681358337402344
    6. '   ' → logprob: -15.306358337402344
    7. '___' → logprob: -15.431358337402344
    8. '/__' → logprob: -15.556358337402344
    9. ' __' → logprob: -15.806358337402344
    10. ' '__' → logprob: -16.306358337402344

Token 928: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.0206720617134124e-05
    2. 'name' → logprob: -11.50001049041748
    3. ' main' → logprob: -18.250009536743164
    4. '"' → logprob: -20.875009536743164
    5. '_main' → logprob: -20.875009536743164
    6. '__' → logprob: -21.125009536743164
    7. 'built' → logprob: -21.625009536743164
    8. '(main' → logprob: -22.000009536743164
    9. '	main' → logprob: -22.500009536743164
    10. '-main' → logprob: -23.375009536743164

Token 929: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.11397089809179306
    2. '__' → logprob: -2.238970994949341
    3. '__':
' → logprob: -6.988970756530762
    4. '__:' → logprob: -9.113970756530762
    5. ':' → logprob: -10.738970756530762
    6. '():
' → logprob: -10.863970756530762
    7. '__["' → logprob: -11.113970756530762
    8. ':
' → logprob: -11.238970756530762
    9. '__.__' → logprob: -11.363970756530762
    10. '__.' → logprob: -11.488970756530762

Token 930: '   ' (ID: 271)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' → logprob: -0.5764856338500977
    2. '   ' → logprob: -0.8264856338500977
    3. ' solve' → logprob: -7.576485633850098
    4. '```' → logprob: -10.701485633850098
    5. '.solve' → logprob: -11.576485633850098
    6. 'main' → logprob: -14.451485633850098
    7. '    
' → logprob: -15.201485633850098
    8. '   ' → logprob: -15.576485633850098
    9. '``' → logprob: -15.826485633850098
    10. 'import' → logprob: -15.951485633850098

Token 931: ' solve' (ID: 17722)
  Prédit: 'solve'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solve' (adapté à ' solve') → logprob: -3.128163257315464e-07
    2. ' solve' → logprob: -15.25
    3. '   ' → logprob: -17.375
    4. '.solve' → logprob: -19.375
    5. 'resolve' → logprob: -19.875
    6. 'save' → logprob: -21.625
    7. 'import' → logprob: -21.875
    8. 'for' → logprob: -24.5
    9. 'validate' → logprob: -24.5
    10. 'simulate' → logprob: -24.75

Token 932: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 930
Tokens correctement prédits (1ère position, stricte): 312
Tokens correctement prédits (1ère position, avec adaptation): 341
Tokens correctement prédits (top 10): 639
Précision stricte (1ère position): 33.55%
Précision adaptée (1ère position): 36.67%
Précision (top 10): 68.71%
================================================================================
