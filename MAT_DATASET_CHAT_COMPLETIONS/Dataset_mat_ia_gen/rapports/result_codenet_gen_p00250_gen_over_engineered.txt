================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:21:17
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class SconeDelivery:
    class SubsetSelector:
        def __init__(self, scones, m):
            self.scones = scones
            self.m = m

        def max_remainder_in_subrange(self):
            # Precompute prefix sums for efficient range sum queries
            prefix_sums = SconeDelivery.PrefixSum(self.scones)

            max_remainder = 0
            n = len(self.scones)
            start = 0
            end = 0

            # Sliding window to examine all contiguous subranges
            while start < n:
                # We will move 'end' to cover [start, end) subranges
                while end < n:
                    total = prefix_sums.sum_range(start, end)
                    remainder = total % self.m
                    if remainder > max_remainder:
                        max_remainder = remainder
                    # If adding more trays can only increase total, keep expanding
                    end += 1
                start += 1
                # Reset end to start for next subrange
                end = start
            return max_remainder

    class PrefixSum:
        def __init__(self, array):
            self.prefix = self._make_prefix(array)

        def _make_prefix(self, array):
            prefix = [0]
            for num in array:
                prefix.append(prefix[-1] + num)
            return prefix

        def sum_range(self, left, right):
            # sum of array[left:right+1]
            # Because prefix array length is n+1, and prefix[i] is sum up to i-1
            return self.prefix[right + 1] - self.prefix[left]

    class InputParser:
        def __init__(self):
            pass

        def parse(self):
            while True:
                line = input().strip()
                if not line:
                    continue
                n_m = line.split()
                if len(n_m) != 2:
                    continue
                n, m = map(int, n_m)
                if n == 0 and m == 0:
                    break
                scones_line = input().strip()
                while not scones_line:
                    scones_line = input().strip()
                scones = list(map(int, scones_line.split()))
                yield n, m, scones

    class OutputFormatter:
        def __init__(self):
            pass

        def print_result(self, result):
            print(result)

    def __init__(self):
        self.parser = self.InputParser()
        self.outputter = self.OutputFormatter()

    def solve_dataset(self, n, m, scones):
        selector = self.SubsetSelector(scones, m)
        max_remainder = selector.max_remainder_in_subrange()
        return max_remainder

    def run(self):
        for n, m, scones in self.parser.parse():
            result = self.solve_dataset(n, m, scones)
            self.outputter.print_result(result)


if __name__ == "__main__":
    # Using the above unnecessarily complex abstraction to solve
    solver = SconeDelivery()
    solver.run()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' S' (ID: 336)
  → Token d'amorce (pas de prédiction)

Token 2: 'cone' (ID: 80469)
  → Token d'amorce (pas de prédiction)

Token 3: 'Delivery' (ID: 28728)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10776446759700775
    2. '(' → logprob: -2.607764482498169
    3. '{' → logprob: -3.732764482498169
    4. '.' → logprob: -5.73276424407959
    5. ' {' → logprob: -7.35776424407959
    6. '```' → logprob: -8.35776424407959
    7. ' :' → logprob: -8.73276424407959
    8. '(:' → logprob: -9.23276424407959
    9. ' ' → logprob: -10.85776424407959
    10. '():' → logprob: -10.98276424407959

Token 4: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.550388514995575
    2. '{' → logprob: -1.3003885746002197
    3. '(' → logprob: -1.9253885746002197
    4. '.' → logprob: -6.050388336181641
    5. ' {' → logprob: -6.050388336181641
    6. '(:' → logprob: -9.42538833618164
    7. ' ' → logprob: -10.05038833618164
    8. ' :' → logprob: -10.30038833618164
    9. '```' → logprob: -10.30038833618164
    10. ';' → logprob: -10.42538833618164

Token 5: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0577545203268528
    2. '   ' → logprob: -3.3077545166015625
    3. '(' → logprob: -4.5577545166015625
    4. '```' → logprob: -5.1827545166015625
    5. ':
' → logprob: -6.3077545166015625
    6. '.' → logprob: -7.3077545166015625
    7. '():' → logprob: -7.9327545166015625
    8. ''' → logprob: -8.682754516601562
    9. '(
' → logprob: -9.557754516601562
    10. '    
' → logprob: -9.932754516601562

Token 6: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3611089587211609
    2. ' ' → logprob: -1.9861090183258057
    3. ' def' → logprob: -2.6111090183258057
    4. '_' → logprob: -3.6111090183258057
    5. 'def' → logprob: -3.8611090183258057
    6. ''' → logprob: -4.486108779907227
    7. '(' → logprob: -4.736108779907227
    8. '    ' → logprob: -4.861108779907227
    9. '```' → logprob: -5.361108779907227
    10. 's' → logprob: -6.236108779907227

Token 7: ' Sub' (ID: 5934)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5996542572975159
    2. ' S' → logprob: -1.224654197692871
    3. '    ' → logprob: -3.099654197692871
    4. '   ' → logprob: -3.224654197692871
    5. '_' → logprob: -4.349654197692871
    6. ' Delivery' → logprob: -4.474654197692871
    7. ' Meta' → logprob: -4.974654197692871
    8. ' Product' → logprob: -5.349654197692871
    9. ' Variable' → logprob: -5.599654197692871
    10. '  ' → logprob: -5.974654197692871

Token 8: 'set' (ID: 977)
  Prédit: 'class'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'class' → logprob: -0.5927631258964539
    2. 'lass' → logprob: -1.5927631855010986
    3. '   ' → logprob: -2.3427631855010986
    4. 'Class' → logprob: -3.2177631855010986
    5. '```' → logprob: -3.8427631855010986
    6. ' class' → logprob: -4.2177629470825195
    7. ':' → logprob: -4.4677629470825195
    8. 'ject' → logprob: -4.8427629470825195
    9. 'l' → logprob: -4.9677629470825195
    10. '       ' → logprob: -5.2177629470825195

Token 9: 'Selector' (ID: 8011)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02118319272994995
    2. '(' → logprob: -4.021183013916016
    3. '[' → logprob: -6.396183013916016
    4. ',' → logprob: -8.146183013916016
    5. ' :' → logprob: -8.146183013916016
    6. '.' → logprob: -8.646183013916016
    7. '(S' → logprob: -9.396183013916016
    8. ':
' → logprob: -9.521183013916016
    9. '{' → logprob: -9.521183013916016
    10. '```' → logprob: -9.646183013916016

Token 10: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00992159266024828
    2. '(' → logprob: -4.634921550750732
    3. ':
' → logprob: -9.50992202758789
    4. '[' → logprob: -11.13492202758789
    5. '(S' → logprob: -11.25992202758789
    6. ' :' → logprob: -11.38492202758789
    7. '.' → logprob: -11.38492202758789
    8. '```' → logprob: -12.13492202758789
    9. '<|end|>' → logprob: -12.25992202758789
    10. '(
' → logprob: -12.25992202758789

Token 11: '       ' (ID: 309)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6874282360076904
    2. '       ' → logprob: -1.1874282360076904
    3. '   ' → logprob: -2.5624282360076904
    4. '    ' → logprob: -3.5624282360076904
    5. '\' → logprob: -3.9374282360076904
    6. '(n' → logprob: -4.6874284744262695
    7. '_' → logprob: -4.6874284744262695
    8. ':' → logprob: -5.0624284744262695
    9. '(
' → logprob: -5.3124284744262695
    10. '(space' → logprob: -5.5624284744262695

Token 12: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.0489262342453003
    2. '       ' → logprob: -1.4239262342453003
    3. '(' → logprob: -1.6739262342453003
    4. '\' → logprob: -3.42392635345459
    5. '   ' → logprob: -3.42392635345459
    6. '\n' → logprob: -4.04892635345459
    7. '_' → logprob: -4.29892635345459
    8. '        ' → logprob: -4.29892635345459
    9. '           ' → logprob: -4.42392635345459
    10. '    ' → logprob: -4.54892635345459

Token 13: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2753502428531647
    2. ' ' → logprob: -1.7753502130508423
    3. ' select' → logprob: -4.150350093841553
    4. ' _' → logprob: -4.400350093841553
    5. ' get' → logprob: -4.775350093841553
    6. '_' → logprob: -4.900350093841553
    7. '__' → logprob: -4.900350093841553
    8. ' ' → logprob: -5.400350093841553
    9. ' calculate' → logprob: -5.900350093841553
    10. ' process' → logprob: -6.150350093841553

Token 14: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -3.3213025744771585e-05
    2. '_init' → logprob: -11.375033378601074
    3. 'ini' → logprob: -11.375033378601074
    4. ' init' → logprob: -11.875033378601074
    5. 'in' → logprob: -13.875033378601074
    6. 'i' → logprob: -14.250033378601074
    7. 'innit' → logprob: -14.500033378601074
    8. '	init' → logprob: -15.375033378601074
    9. '_' → logprob: -15.625033378601074
    10. 'inite' → logprob: -15.875033378601074

Token 15: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.15687192976474762
    2. '(' → logprob: -2.281872034072876
    3. '__' → logprob: -3.281872034072876
    4. '(self' → logprob: -6.156871795654297
    5. ' (' → logprob: -6.656871795654297
    6. '__(
' → logprob: -6.656871795654297
    7. '__((' → logprob: -8.531871795654297
    8. '_' → logprob: -8.531871795654297
    9. '_(' → logprob: -8.906871795654297
    10. '__('' → logprob: -9.906871795654297

Token 16: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.033682696521282196
    2. ' self' → logprob: -3.4086825847625732
    3. ')' → logprob: -11.033682823181152
    4. '(self' → logprob: -11.908682823181152
    5. 's' → logprob: -12.408682823181152
    6. ' )' → logprob: -13.408682823181152
    7. '       ' → logprob: -13.533682823181152
    8. ' ' → logprob: -14.033682823181152
    9. ',self' → logprob: -14.033682823181152
    10. ',' → logprob: -14.158682823181152

Token 17: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.18083640933036804
    2. 'self' → logprob: -2.3058364391326904
    3. ' ,' → logprob: -3.1808364391326904
    4. ' self' → logprob: -4.055836200714111
    5. '(self' → logprob: -6.555836200714111
    6. ' ' → logprob: -6.555836200714111
    7. ',self' → logprob: -6.680836200714111
    8. ')' → logprob: -6.805836200714111
    9. ' )' → logprob: -7.180836200714111
    10. 's' → logprob: -7.805836200714111

Token 18: ' s' (ID: 265)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.0820782333612442
    2. 'self' → logprob: -2.582078218460083
    3. ' selected' → logprob: -7.707078456878662
    4. ' capacity' → logprob: -7.957078456878662
    5. ' items' → logprob: -7.957078456878662
    6. ' data' → logprob: -8.207077980041504
    7. ' batch' → logprob: -8.457077980041504
    8. ' subset' → logprob: -8.457077980041504
    9. ' s' → logprob: -8.707077980041504
    10. ' n' → logprob: -8.957077980041504

Token 19: 'cones' (ID: 98588)
  Prédit: 'elf'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elf' → logprob: -0.3035871088504791
    2. 'ub' → logprob: -2.1785871982574463
    3. 'e' → logprob: -2.9285871982574463
    4. 'cones' → logprob: -3.8035871982574463
    5. 'cone' → logprob: -4.053586959838867
    6. 'self' → logprob: -4.178586959838867
    7. 'subset' → logprob: -4.678586959838867
    8. 'et' → logprob: -5.428586959838867
    9. 'el' → logprob: -6.178586959838867
    10. 'selected' → logprob: -6.303586959838867

Token 20: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6374232172966003
    2. ',' → logprob: -1.0124232769012451
    3. ':' → logprob: -2.762423276901245
    4. ' ):' → logprob: -4.012423038482666
    5. ' ,' → logprob: -4.387423038482666
    6. '_subset' → logprob: -6.137423038482666
    7. '       ' → logprob: -6.262423038482666
    8. '_ids' → logprob: -6.387423038482666
    9. '):
' → logprob: -6.387423038482666
    10. 's' → logprob: -6.762423038482666

Token 21: ' m' (ID: 284)
  Prédit: ' subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' subset' → logprob: -0.1647576540708542
    2. ' subsets' → logprob: -2.66475772857666
    3. ' selected' → logprob: -2.91475772857666
    4. ' s' → logprob: -5.28975772857666
    5. 'subset' → logprob: -5.53975772857666
    6. ' target' → logprob: -5.66475772857666
    7. ' indices' → logprob: -5.91475772857666
    8. ' max' → logprob: -6.03975772857666
    9. ' desired' → logprob: -6.41475772857666
    10. ' start' → logprob: -6.66475772857666

Token 22: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.7562969923019409
    2. 'ax' → logprob: -1.006296992301941
    3. '=' → logprob: -3.0062971115112305
    4. 'a' → logprob: -3.0062971115112305
    5. 'ethod' → logprob: -4.0062971115112305
    6. 'e' → logprob: -4.8812971115112305
    7. ',' → logprob: -4.8812971115112305
    8. ' ):' → logprob: -4.8812971115112305
    9. 'ean' → logprob: -5.1312971115112305
    10. ')' → logprob: -5.7562971115112305

Token 23: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5474686026573181
    2. '):' → logprob: -1.047468662261963
    3. '       ' → logprob: -3.172468662261963
    4. ',' → logprob: -3.797468662261963
    5. ')' → logprob: -6.672468662261963
    6. ' :' → logprob: -7.172468662261963
    7. '():' → logprob: -7.297468662261963
    8. '   ' → logprob: -7.547468662261963
    9. '):
' → logprob: -7.672468662261963
    10. '```' → logprob: -8.047468185424805

Token 24: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6174914240837097
    2. ' self' → logprob: -1.3674914836883545
    3. ' ' → logprob: -2.2424914836883545
    4. '       ' → logprob: -2.8674914836883545
    5. 's' → logprob: -4.617491245269775
    6. '        ' → logprob: -4.742491245269775
    7. ' s' → logprob: -4.867491245269775
    8. ' ' → logprob: -5.242491245269775
    9. '               ' → logprob: -5.617491245269775
    10. '    ' → logprob: -6.492491245269775

Token 25: '.s' (ID: 640)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.04391617327928543
    2. '.s' → logprob: -3.4189162254333496
    3. ' .' → logprob: -4.66891622543335
    4. '.m' → logprob: -8.543915748596191
    5. ',' → logprob: -8.668915748596191
    6. '.selected' → logprob: -9.668915748596191
    7. 's' → logprob: -9.793915748596191
    8. ')' → logprob: -10.043915748596191
    9. ' ' → logprob: -10.293915748596191
    10. '.token' → logprob: -10.543915748596191

Token 26: 'cones' (ID: 98588)
  Prédit: 'cones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cones' → logprob: -0.007404535077512264
    2. 'con' → logprob: -5.882404327392578
    3. 'c' → logprob: -6.132404327392578
    4. '.con' → logprob: -7.382404327392578
    5. 'cone' → logprob: -7.632404327392578
    6. '_' → logprob: -8.132404327392578
    7. 's' → logprob: -8.382404327392578
    8. '.' → logprob: -8.882404327392578
    9. '_con' → logprob: -9.007404327392578
    10. '```' → logprob: -9.007404327392578

Token 27: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.601579487323761
    2. '.' → logprob: -1.7265794277191162
    3. '[' → logprob: -1.7265794277191162
    4. ' =' → logprob: -3.601579427719116
    5. '<|end|>' → logprob: -3.601579427719116
    6. ' ,' → logprob: -3.726579427719116
    7. ' ' → logprob: -5.351579666137695
    8. '=' → logprob: -5.351579666137695
    9. '<|end|>' → logprob: -6.726579666137695
    10. '[:]' → logprob: -6.976579666137695

Token 28: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.009809213690459728
    2. 's' → logprob: -4.6348090171813965
    3. ' ' → logprob: -9.884809494018555
    4. '_s' → logprob: -13.759809494018555
    5. '	s' → logprob: -14.759809494018555
    6. '  ' → logprob: -15.384809494018555
    7. ' ' → logprob: -15.884809494018555
    8. '{s' → logprob: -16.634809494018555
    9. '<s' → logprob: -16.634809494018555
    10. '```' → logprob: -16.947309494018555

Token 29: 'cones' (ID: 98588)
  Prédit: 'cones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cones' → logprob: -0.0005073997308500111
    2. ' cones' → logprob: -8.500507354736328
    3. 'con' → logprob: -9.500507354736328
    4. 'c' → logprob: -9.625507354736328
    5. 's' → logprob: -10.000507354736328
    6. 'cone' → logprob: -10.375507354736328
    7. 'ones' → logprob: -10.625507354736328
    8. ' ' → logprob: -10.875507354736328
    9. '   ' → logprob: -11.625507354736328
    10. '```' → logprob: -12.250507354736328

Token 30: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6580947041511536
    2. '.' → logprob: -1.7830946445465088
    3. '<|end|>' → logprob: -2.158094644546509
    4. '           ' → logprob: -2.783094644546509
    5. '       ' → logprob: -3.283094644546509
    6. '
' → logprob: -3.533094644546509
    7. '            
' → logprob: -4.533094882965088
    8. ',' → logprob: -5.033094882965088
    9. '[
' → logprob: -5.158094882965088
    10. '_' → logprob: -5.158094882965088

Token 31: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6048800945281982
    2. '           ' → logprob: -1.4798800945281982
    3. '[' → logprob: -1.7298800945281982
    4. '
' → logprob: -3.9798800945281982
    5. '.' → logprob: -4.479880332946777
    6. '   ' → logprob: -6.479880332946777
    7. '```' → logprob: -6.479880332946777
    8. '[
' → logprob: -6.604880332946777
    9. '[line' → logprob: -6.729880332946777
    10. '        
' → logprob: -6.854880332946777

Token 32: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006114717107266188
    2. '               ' → logprob: -6.256114482879639
    3. '       ' → logprob: -6.631114482879639
    4. '
' → logprob: -6.756114482879639
    5. '   ' → logprob: -7.631114482879639
    6. '            ' → logprob: -8.131114959716797
    7. ' ' → logprob: -8.381114959716797
    8. ' self' → logprob: -8.506114959716797
    9. 'self' (adapté à ' self') → logprob: -9.131114959716797
    10. 'm' → logprob: -10.131114959716797

Token 33: '.m' (ID: 1021)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.01349865272641182
    2. '.m' → logprob: -4.513498783111572
    3. '.s' → logprob: -6.388498783111572
    4. ' .' → logprob: -7.513498783111572
    5. 'm' → logprob: -10.513498306274414
    6. '[' → logprob: -10.513498306274414
    7. '.selected' → logprob: -10.763498306274414
    8. ').' → logprob: -11.263498306274414
    9. '.sub' → logprob: -11.263498306274414
    10. '.count' → logprob: -11.638498306274414

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18023839592933655
    2. '=' → logprob: -1.8052383661270142
    3. '<|end|>' → logprob: -8.180238723754883
    4. ' ' → logprob: -9.305238723754883
    5. '.' → logprob: -9.805238723754883
    6. ')' → logprob: -10.430238723754883
    7. '<|end|>' → logprob: -11.805238723754883
    8. ' =
' → logprob: -11.930238723754883
    9. '   ' → logprob: -12.680238723754883
    10. '    ' → logprob: -12.680238723754883

Token 35: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.04858918860554695
    2. 'm' → logprob: -3.0485892295837402
    3. ' ' → logprob: -13.798588752746582
    4. ' ' → logprob: -14.173588752746582
    5. '	m' → logprob: -17.1735897064209
    6. '<|end|>' → logprob: -18.6735897064209
    7. '_m' → logprob: -19.0485897064209
    8. '    ' → logprob: -19.4860897064209
    9. ' m'm' → logprob: -19.6735897064209
    10. '<|end|>' → logprob: -19.6735897064209

Token 36: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.08575359731912613
    2. '       ' → logprob: -3.8357536792755127
    3. '\' → logprob: -3.9607536792755127
    4. '<|end|>' → logprob: -4.335753440856934
    5. '\n' → logprob: -4.585753440856934
    6. '_' → logprob: -5.960753440856934
    7. '```' → logprob: -6.460753440856934
    8. '.' → logprob: -6.460753440856934
    9. '    
' → logprob: -6.585753440856934
    10. '        
' → logprob: -6.710753440856934

Token 37: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0028859488666057587
    2. '       ' → logprob: -6.127885818481445
    3. '        
' → logprob: -8.502885818481445
    4. '    
' → logprob: -9.002885818481445
    5. '\n' → logprob: -9.002885818481445
    6. '<|end|>' → logprob: -9.502885818481445
    7. '   ' → logprob: -10.502885818481445
    8. '
' → logprob: -10.627885818481445
    9. ' 
' → logprob: -10.752885818481445
    10. '\' → logprob: -10.752885818481445

Token 38: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4598027765750885
    2. 'def' (adapté à ' def') → logprob: -1.2098027467727661
    3. '       ' → logprob: -3.0848028659820557
    4. '    
' → logprob: -4.959802627563477
    5. '   ' → logprob: -5.209802627563477
    6. ' def' → logprob: -5.209802627563477
    7. '        
' → logprob: -5.584802627563477
    8. '\' → logprob: -7.584802627563477
    9. '\n' → logprob: -7.709802627563477
    10. '<|end|>' → logprob: -7.834802627563477

Token 39: ' max' (ID: 2999)
  Prédit: ' select'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' select' → logprob: -0.014489133842289448
    2. ' ' → logprob: -4.76448917388916
    3. ' s' → logprob: -6.63948917388916
    4. '_' → logprob: -7.01448917388916
    5. ' get' → logprob: -7.01448917388916
    6. ' _' → logprob: -7.38948917388916
    7. ' choose' → logprob: -7.63948917388916
    8. '_select' → logprob: -8.26448917388916
    9. ' subset' → logprob: -8.38948917388916
    10. ' sele' → logprob: -8.38948917388916

Token 40: '_re' (ID: 3067)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4029843509197235
    2. '_subset' → logprob: -1.152984380722046
    3. 'imize' → logprob: -5.652984142303467
    4. '_sum' → logprob: -5.902984142303467
    5. '_select' → logprob: -6.027984142303467
    6. '_sub' → logprob: -6.527984142303467
    7. '_size' → logprob: -6.902984142303467
    8. '_selection' → logprob: -7.152984142303467
    9. '_selected' → logprob: -7.402984142303467
    10. '_s' → logprob: -7.652984142303467

Token 41: 'mainder' (ID: 40886)
  Prédit: 'ward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ward' → logprob: -0.6024941205978394
    2. 'm' → logprob: -1.4774941205978394
    3. 'venue' → logprob: -1.9774941205978394
    4. 'achable' → logprob: -3.727494239807129
    5. 'turn' → logprob: -4.352494239807129
    6. 'mainder' → logprob: -4.602494239807129
    7. 'move' → logprob: -4.852494239807129
    8. 'main' → logprob: -4.852494239807129
    9. 'ach' → logprob: -5.102494239807129
    10. 'member' → logprob: -5.227494239807129

Token 42: '_in' (ID: 2267)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.18079254031181335
    2. '(' → logprob: -1.8057925701141357
    3. '_' → logprob: -7.930792331695557
    4. '_sum' → logprob: -8.055792808532715
    5. '_count' → logprob: -9.930792808532715
    6. '_value' → logprob: -10.055792808532715
    7. '_difference' → logprob: -10.055792808532715
    8. 'self' → logprob: -10.305792808532715
    9. '_self' → logprob: -10.305792808532715
    10. 's' → logprob: -10.430792808532715

Token 43: '_sub' (ID: 11572)
  Prédit: '_subset'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_subset' → logprob: -0.11737502366304398
    2. 'dex' → logprob: -3.117375135421753
    3. '_sub' → logprob: -3.992375135421753
    4. '_' → logprob: -4.617374897003174
    5. '_range' → logprob: -4.742374897003174
    6. '(self' → logprob: -5.492374897003174
    7. 'ter' → logprob: -5.742374897003174
    8. 't' → logprob: -5.867374897003174
    9. '_group' → logprob: -6.117374897003174
    10. 'subset' → logprob: -6.367374897003174

Token 44: 'range' (ID: 20967)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.2846457064151764
    2. 'sets' → logprob: -1.909645676612854
    3. 'array' → logprob: -2.5346457958221436
    4. 'sequence' → logprob: -4.0346455574035645
    5. 'string' → logprob: -6.7846455574035645
    6. 'et' → logprob: -7.4096455574035645
    7. 'arrays' → logprob: -8.284646034240723
    8. 'range' → logprob: -9.409646034240723
    9. 's' → logprob: -9.409646034240723
    10. '```' → logprob: -9.784646034240723

Token 45: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.127466082572937
    2. '(' → logprob: -2.1274662017822266
    3. ' (' → logprob: -7.627466201782227
    4. '(
' → logprob: -10.502466201782227
    5. 'self' → logprob: -12.002466201782227
    6. '(s' → logprob: -12.127466201782227
    7. ' self' → logprob: -12.502466201782227
    8. '   ' → logprob: -13.627466201782227
    9. '       ' → logprob: -13.627466201782227
    10. '(

' → logprob: -13.752466201782227

Token 46: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.027384931221604347
    2. ' ,' → logprob: -3.9023849964141846
    3. '):' → logprob: -5.0273847579956055
    4. ' ):' → logprob: -8.652384757995605
    5. ')' → logprob: -10.027384757995605
    6. 'self' → logprob: -10.902384757995605
    7. 's' → logprob: -11.777384757995605
    8. ',s' → logprob: -12.402384757995605
    9. ' )' → logprob: -13.027384757995605
    10. ',self' → logprob: -13.152384757995605

Token 47: '           ' (ID: 352)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.1862143278121948
    2. '(' → logprob: -1.3112143278121948
    3. '       ' → logprob: -1.3112143278121948
    4. ':' → logprob: -2.1862144470214844
    5. '           ' → logprob: -3.5612144470214844
    6. '(
' → logprob: -4.936214447021484
    7. ':
' → logprob: -6.186214447021484
    8. '               ' → logprob: -6.311214447021484
    9. '   ' → logprob: -7.561214447021484
    10. ',' → logprob: -7.936214447021484

Token 48: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3520607054233551
    2. '       ' → logprob: -2.1020607948303223
    3. 'n' → logprob: -3.3520607948303223
    4. ' ' → logprob: -3.4770607948303223
    5. '        ' → logprob: -3.8520607948303223
    6. '               ' → logprob: -4.102060794830322
    7. '   ' → logprob: -4.602060794830322
    8. ' 
' → logprob: -4.852060794830322
    9. ' max' → logprob: -4.977060794830322
    10. '            ' → logprob: -4.977060794830322

Token 49: ' Pre' (ID: 4659)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7891918420791626
    2. ' max' → logprob: -1.7891918420791626
    3. ' pass' → logprob: -1.9141918420791626
    4. 'max' → logprob: -2.289191722869873
    5. 'pass' → logprob: -4.039191722869873
    6. '            ' → logprob: -4.539191722869873
    7. ' if' → logprob: -4.539191722869873
    8. ' #' → logprob: -4.789191722869873
    9. '        ' → logprob: -5.039191722869873
    10. '    ' → logprob: -5.039191722869873

Token 50: 'compute' (ID: 54521)
  Prédit: 'compute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.0966535210609436
    2. 'd' → logprob: -3.596653461456299
    3. 'process' → logprob: -4.221653461456299
    4. '       ' → logprob: -4.471653461456299
    5. 'sum' → logprob: -4.721653461456299
    6. 'pare' → logprob: -5.096653461456299
    7. 'fix' → logprob: -5.721653461456299
    8. 'comput' → logprob: -5.846653461456299
    9. ' compute' → logprob: -5.971653461456299
    10. 'dict' → logprob: -5.971653461456299

Token 51: ' prefix' (ID: 18633)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.8211268782615662
    2. ' prefix' → logprob: -1.196126937866211
    3. '           ' → logprob: -2.196126937866211
    4. ' the' → logprob: -3.196126937866211
    5. 'prefix' → logprob: -3.196126937866211
    6. '            ' → logprob: -4.446126937866211
    7. ' suffix' → logprob: -4.696126937866211
    8. ' remainder' → logprob: -4.696126937866211
    9. 'max' → logprob: -5.071126937866211
    10. ' all' → logprob: -5.821126937866211

Token 52: ' sums' (ID: 73121)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.5262017846107483
    2. '_' → logprob: -1.5262017250061035
    3. '_max' → logprob: -1.7762017250061035
    4. '_re' → logprob: -4.9012017250061035
    5. ' sums' → logprob: -5.1512017250061035
    6. '_sum' → logprob: -5.7762017250061035
    7. ' _' → logprob: -6.5262017250061035
    8. '_mod' → logprob: -6.7762017250061035
    9. ' ' → logprob: -7.2762017250061035
    10. 's' → logprob: -7.5262017250061035

Token 53: ' for' (ID: 395)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5540245771408081
    2. '       ' → logprob: -1.554024577140808
    3. '[' → logprob: -3.3040246963500977
    4. '   ' → logprob: -3.3040246963500977
    5. '_' → logprob: -3.8040246963500977
    6. ' ' → logprob: -4.179024696350098
    7. 'n' → logprob: -4.554024696350098
    8. '    ' → logprob: -4.679024696350098
    9. '<|end|>' → logprob: -4.679024696350098
    10. ',' → logprob: -4.929024696350098

Token 54: ' efficient' (ID: 12430)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.16561856865882874
    2. ' s' → logprob: -2.290618658065796
    3. ' the' → logprob: -3.915618658065796
    4. 'self' → logprob: -4.290618419647217
    5. 's' → logprob: -4.665618419647217
    6. ' range' → logprob: -5.915618419647217
    7. ' prefix' → logprob: -6.540618419647217
    8. ' ' → logprob: -7.415618419647217
    9. ' i' → logprob: -7.540618419647217
    10. ' len' → logprob: -7.665618419647217

Token 55: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5456181168556213
    2. ' remainder' → logprob: -1.5456180572509766
    3. ' access' → logprob: -3.0456180572509766
    4. ' sum' → logprob: -3.5456180572509766
    5. ' lookup' → logprob: -3.6706180572509766
    6. ' queries' → logprob: -4.045618057250977
    7. ' calculation' → logprob: -4.045618057250977
    8. ' retrieval' → logprob: -4.045618057250977
    9. ' querying' → logprob: -4.295618057250977
    10. ' query' → logprob: -4.545618057250977

Token 56: ' sum' (ID: 4215)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6600016355514526
    2. ' sums' → logprob: -1.2850016355514526
    3. ' queries' → logprob: -2.410001754760742
    4. ' sum' → logprob: -2.785001754760742
    5. '_sum' → logprob: -3.660001754760742
    6. ' query' → logprob: -4.410001754760742
    7. 'sum' → logprob: -4.910001754760742
    8. '   ' → logprob: -6.285001754760742
    9. '       ' → logprob: -6.410001754760742
    10. '_' → logprob: -6.535001754760742

Token 57: ' queries' (ID: 32122)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.23595844209194183
    2. '           ' → logprob: -2.2359583377838135
    3. ' s' → logprob: -2.6109583377838135
    4. '       ' → logprob: -4.235958576202393
    5. 'es' → logprob: -5.110958576202393
    6. '   ' → logprob: -5.360958576202393
    7. '[' → logprob: -6.485958576202393
    8. '[]' → logprob: -7.610958576202393
    9. '()' → logprob: -7.860958576202393
    10. 'ing' → logprob: -8.235958099365234

Token 58: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.34608015418052673
    2. '<|end|>' → logprob: -1.8460801839828491
    3. '       ' → logprob: -2.5960800647735596
    4. '\' → logprob: -4.846080303192139
    5. ' ' → logprob: -4.971080303192139
    6. '    ' → logprob: -5.346080303192139
    7. '<|end|>' → logprob: -5.346080303192139
    8. '        
' → logprob: -5.471080303192139
    9. '\n' → logprob: -5.471080303192139
    10. '            
' → logprob: -5.471080303192139

Token 59: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22986264526844025
    2. '       ' → logprob: -2.354862689971924
    3. '\n' → logprob: -2.979862689971924
    4. '<|end|>' → logprob: -3.854862689971924
    5. '            
' → logprob: -4.979862689971924
    6. '        
' → logprob: -5.104862689971924
    7. '    
' → logprob: -5.354862689971924
    8. '\' → logprob: -5.354862689971924
    9. '
' → logprob: -5.604862689971924
    10. '```' → logprob: -5.854862689971924

Token 60: ' prefix' (ID: 18633)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05561031401157379
    2. '
' → logprob: -4.055610179901123
    3. 'prefix' (adapté à ' prefix') → logprob: -4.305610179901123
    4. '\n' → logprob: -5.305610179901123
    5. ' prefix' → logprob: -5.305610179901123
    6. '```' → logprob: -5.680610179901123
    7. 'n' → logprob: -6.180610179901123
    8. '\' → logprob: -6.305610179901123
    9. '       ' → logprob: -7.180610179901123
    10. 's' → logprob: -7.180610179901123

Token 61: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.21221841871738434
    2. '_' → logprob: -1.8372184038162231
    3. '_sum' → logprob: -3.5872185230255127
    4. ' _' → logprob: -6.087218284606934
    5. 's' → logprob: -6.587218284606934
    6. '_lengths' → logprob: -8.837218284606934
    7. ' =' → logprob: -8.962218284606934
    8. 'es' → logprob: -9.087218284606934
    9. 'sum' → logprob: -9.837218284606934
    10. '_counts' → logprob: -9.962218284606934

Token 62: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.009202509187161922
    2. 'um' → logprob: -4.759202480316162
    3. '_' → logprob: -7.509202480316162
    4. 's' → logprob: -11.38420295715332
    5. '_s' → logprob: -11.63420295715332
    6. '_sum' → logprob: -11.88420295715332
    7. 'u' → logprob: -13.13420295715332
    8. '```' → logprob: -13.25920295715332
    9. 'umsum' → logprob: -13.38420295715332
    10. ' =' → logprob: -13.50920295715332

Token 63: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.006886815652251244
    2. '=' → logprob: -5.006886959075928
    3. '[' → logprob: -9.25688648223877
    4. '<|end|>' → logprob: -10.38188648223877
    5. ' ' → logprob: -11.38188648223877
    6. '   ' → logprob: -11.75688648223877
    7. ')' → logprob: -12.50688648223877
    8. ',' → logprob: -12.63188648223877
    9. '=[]' → logprob: -12.63188648223877
    10. '       ' → logprob: -12.75688648223877

Token 64: ' S' (ID: 336)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.005936028435826302
    2. '[' → logprob: -5.130936145782471
    3. '[self' → logprob: -12.255935668945312
    4. ' ' → logprob: -13.755935668945312
    5. ' self' → logprob: -14.005935668945312
    6. ' ' → logprob: -14.880935668945312
    7. 'self' → logprob: -15.880935668945312
    8. '0' → logprob: -16.130935668945312
    9. '[len' → logprob: -16.380935668945312
    10. '   ' → logprob: -17.130935668945312

Token 65: 'cone' (ID: 80469)
  Prédit: 'cone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cone' → logprob: -0.02183365449309349
    2. 'elf' → logprob: -4.646833419799805
    3. '   ' → logprob: -5.521833419799805
    4. '       ' → logprob: -5.521833419799805
    5. 'con' → logprob: -6.771833419799805
    6. '```' → logprob: -7.646833419799805
    7. '           ' → logprob: -7.771833419799805
    8. '     ' → logprob: -8.146833419799805
    9. 'um' → logprob: -8.146833419799805
    10. 'Cone' → logprob: -8.396833419799805

Token 66: 'Delivery' (ID: 28728)
  Prédit: 'Delivery'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Delivery' → logprob: -0.016109442338347435
    2. 'elivery' → logprob: -4.141109466552734
    3. ' Delivery' → logprob: -10.766109466552734
    4. '_delivery' → logprob: -11.141109466552734
    5. '           ' → logprob: -11.266109466552734
    6. '   ' → logprob: -12.016109466552734
    7. 'self' → logprob: -12.266109466552734
    8. '       ' → logprob: -12.391109466552734
    9. 'odel' → logprob: -12.516109466552734
    10. 'delivery' → logprob: -13.516109466552734

Token 67: '.P' (ID: 2007)
  Prédit: '.Sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.Sub' → logprob: -0.664620041847229
    2. '.' → logprob: -0.789620041847229
    3. '.S' → logprob: -3.5396199226379395
    4. ' .' → logprob: -7.2896199226379395
    5. '.Sum' → logprob: -7.9146199226379395
    6. '.Substring' → logprob: -8.039620399475098
    7. '.numpy' → logprob: -9.039620399475098
    8. '.List' → logprob: -9.289620399475098
    9. '.Array' → logprob: -9.289620399475098
    10. '.Range' → logprob: -9.414620399475098

Token 68: 'refix' (ID: 8902)
  Prédit: 'refix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'refix' → logprob: -0.04565807059407234
    2. 're' → logprob: -3.7956581115722656
    3. 'REFIX' → logprob: -5.170658111572266
    4. 'ref' → logprob: -5.545658111572266
    5. 'S' → logprob: -5.670658111572266
    6. 'r' → logprob: -6.045658111572266
    7. 'ro' → logprob: -7.233158111572266
    8. 'ython' → logprob: -7.670658111572266
    9. 'res' → logprob: -8.358158111572266
    10. '

' → logprob: -8.358158111572266

Token 69: 'Sum' (ID: 17434)
  Prédit: 'Sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -0.026255834847688675
    2. 'S' → logprob: -4.0262556076049805
    3. '           ' → logprob: -5.2762556076049805
    4. 'sum' → logprob: -6.1512556076049805
    5. ' sums' → logprob: -8.15125560760498
    6. '.sum' → logprob: -8.77625560760498
    7. '_sum' → logprob: -10.02625560760498
    8. '       ' → logprob: -10.27625560760498
    9. ')' → logprob: -10.27625560760498
    10. 'Summ' → logprob: -10.40125560760498

Token 70: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.025810398161411285
    2. '(' → logprob: -4.150810241699219
    3. 'Calculator' → logprob: -5.900810241699219
    4. 's' → logprob: -6.525810241699219
    5. '[' → logprob: -7.150810241699219
    6. '[self' → logprob: -7.275810241699219
    7. '           ' → logprob: -7.275810241699219
    8. '(s' → logprob: -7.400810241699219
    9. '([' → logprob: -7.900810241699219
    10. '       ' → logprob: -7.900810241699219

Token 71: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.009689034894108772
    2. 's' → logprob: -4.884688854217529
    3. '.' → logprob: -6.259688854217529
    4. ').' → logprob: -9.009689331054688
    5. ' .' → logprob: -11.134689331054688
    6. '.
' → logprob: -11.634689331054688
    7. '           ' → logprob: -11.759689331054688
    8. ')' → logprob: -12.884689331054688
    9. '       ' → logprob: -13.134689331054688
    10. ',' → logprob: -13.509689331054688

Token 72: 'cones' (ID: 98588)
  Prédit: 'cones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cones' → logprob: -0.02386818267405033
    2. 'ones' → logprob: -4.523868083953857
    3. '.s' → logprob: -5.148868083953857
    4. 's' → logprob: -5.398868083953857
    5. '.con' → logprob: -6.898868083953857
    6. '.c' → logprob: -7.648868083953857
    7. '```' → logprob: -8.398868560791016
    8. 'con' → logprob: -8.898868560791016
    9. 'c' → logprob: -9.523868560791016
    10. '.ones' → logprob: -9.648868560791016

Token 73: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009959601797163486
    2. ',' → logprob: -5.509959697723389
    3. '           ' → logprob: -6.259959697723389
    4. ').' → logprob: -6.634959697723389
    5. ' )' → logprob: -6.759959697723389
    6. ')
' → logprob: -6.759959697723389
    7. '               ' → logprob: -9.50995922088623
    8. '[' → logprob: -10.38495922088623
    9. '       ' → logprob: -10.63495922088623
    10. '),' → logprob: -10.75995922088623

Token 74: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31365153193473816
    2. '
' → logprob: -1.5636515617370605
    3. '.' → logprob: -4.4386515617370605
    4. '.get' → logprob: -4.6886515617370605
    5. 'def' → logprob: -5.1886515617370605
    6. '()' → logprob: -5.3136515617370605
    7. ')' → logprob: -5.4386515617370605
    8. '            
' → logprob: -5.4386515617370605
    9. ',' → logprob: -5.9386515617370605
    10. '()
' → logprob: -6.3136515617370605

Token 75: ' max' (ID: 2999)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4623802602291107
    2. '
' → logprob: -1.837380290031433
    3. 'max' (adapté à ' max') → logprob: -2.3373801708221436
    4. ' max' → logprob: -3.2123801708221436
    5. 'result' → logprob: -4.212380409240723
    6. '   ' → logprob: -4.837380409240723
    7. 'n' → logprob: -4.837380409240723
    8. '       ' → logprob: -5.212380409240723
    9. 'return' → logprob: -5.712380409240723
    10. ',' → logprob: -5.712380409240723

Token 76: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.14000563323497772
    2. '_' → logprob: -2.265005588531494
    3. '_sum' → logprob: -4.515005588531494
    4. '_rem' → logprob: -4.890005588531494
    5. '_mod' → logprob: -5.515005588531494
    6. '_val' → logprob: -6.390005588531494
    7. '_r' → logprob: -7.140005588531494
    8. '_value' → logprob: -7.140005588531494
    9. '_res' → logprob: -8.515006065368652
    10. '_rest' → logprob: -8.640006065368652

Token 77: 'mainder' (ID: 40886)
  Prédit: 'mainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mainder' → logprob: -0.003320068819448352
    2. 'ma' → logprob: -5.753320217132568
    3. 'm' → logprob: -9.00331974029541
    4. ' ma' → logprob: -11.75331974029541
    5. '_ma' → logprob: -12.25331974029541
    6. 'main' → logprob: -13.12831974029541
    7. '```' → logprob: -13.37831974029541
    8. 'st' → logprob: -14.37831974029541
    9. 'a' → logprob: -14.87831974029541
    10. '_' → logprob: -15.12831974029541

Token 78: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0003781224077101797
    2. '=' → logprob: -8.000377655029297
    3. ' ' → logprob: -10.250377655029297
    4. ',' → logprob: -12.875377655029297
    5. 's' → logprob: -13.000377655029297
    6. ')' → logprob: -14.250377655029297
    7. ' =
' → logprob: -14.250377655029297
    8. '_' → logprob: -14.500377655029297
    9. ' ,' → logprob: -15.500377655029297
    10. '  ' → logprob: -15.875377655029297

Token 79: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06276411563158035
    2. '0' → logprob: -2.8127641677856445
    3. ' -' → logprob: -7.3127641677856445
    4. ' ' → logprob: -9.562764167785645
    5. '-' → logprob: -10.312764167785645
    6. ' self' → logprob: -11.687764167785645
    7. ' None' → logprob: -12.437764167785645
    8. ' (' → logprob: -12.437764167785645
    9. ' max' → logprob: -12.437764167785645
    10. '            ' → logprob: -13.562764167785645

Token 80: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09725107252597809
    2. '-' → logprob: -2.5972511768341064
    3. ' ' → logprob: -4.097250938415527
    4. ' -' → logprob: -6.472250938415527
    5. '-m' → logprob: -12.222250938415527
    6. '   ' → logprob: -12.722250938415527
    7. '-s' → logprob: -12.722250938415527
    8. ' float' → logprob: -13.097250938415527
    9. 'float' → logprob: -13.097250938415527
    10. '-max' → logprob: -13.347250938415527

Token 81: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.313478946685791
    2. '           ' → logprob: -1.938478946685791
    3. ' 
' → logprob: -2.938478946685791
    4. '<|end|>' → logprob: -3.313478946685791
    5. '    
' → logprob: -4.813478946685791
    6. ' ' → logprob: -5.063478946685791
    7. ',' → logprob: -5.313478946685791
    8. '            
' → logprob: -5.688478946685791
    9. '\n' → logprob: -5.813478946685791
    10. '<|end|>' → logprob: -6.063478946685791

Token 82: '           ' (ID: 352)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.9057283997535706
    2. '
' → logprob: -1.2807283401489258
    3. '           ' → logprob: -2.280728340148926
    4. ' ' → logprob: -2.530728340148926
    5. '<|end|>' → logprob: -2.780728340148926
    6. '            
' → logprob: -3.780728340148926
    7. '    
' → logprob: -3.780728340148926
    8. '  
' → logprob: -5.405728340148926
    9. '            ' → logprob: -5.655728340148926
    10. '        
' → logprob: -5.780728340148926

Token 83: ' n' (ID: 297)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5929741859436035
    2. ' for' → logprob: -1.2179741859436035
    3. ' n' → logprob: -2.3429741859436035
    4. 'n' (adapté à ' n') → logprob: -3.2179741859436035
    5. 'for' → logprob: -4.2179741859436035
    6. '       ' → logprob: -8.967973709106445
    7. '   ' → logprob: -9.717973709106445
    8. '            ' → logprob: -9.842973709106445
    9. '```' → logprob: -9.842973709106445
    10. ' ' → logprob: -9.967973709106445

Token 84: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009238175116479397
    2. '<|end|>' → logprob: -5.134238243103027
    3. ' ' → logprob: -6.009238243103027
    4. '=' → logprob: -7.384238243103027
    5. '<|end|>' → logprob: -9.259238243103027
    6. ',' → logprob: -11.009238243103027
    7. ' >' → logprob: -11.009238243103027
    8. ')' → logprob: -11.134238243103027
    9. ' >=' → logprob: -11.634238243103027
    10. '  ' → logprob: -11.759238243103027

Token 85: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.0003362966235727072
    2. 'len' → logprob: -8.000336647033691
    3. ' self' → logprob: -14.250336647033691
    4. '	len' → logprob: -16.000335693359375
    5. '(len' → logprob: -16.750335693359375
    6. '=len' → logprob: -17.125335693359375
    7. '[len' → logprob: -17.500335693359375
    8. ' ' → logprob: -17.875335693359375
    9. ',len' → logprob: -18.875335693359375
    10. ' ' → logprob: -18.875335693359375

Token 86: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004082554951310158
    2. '(' → logprob: -5.504082679748535
    3. '(this' → logprob: -13.504082679748535
    4. ' (' → logprob: -13.504082679748535
    5. '(s' → logprob: -14.129082679748535
    6. ' self' → logprob: -15.004082679748535
    7. 'self' → logprob: -15.504082679748535
    8. '(
' → logprob: -17.37908172607422
    9. '(prefix' → logprob: -18.12908172607422
    10. '(S' → logprob: -19.37908172607422

Token 87: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.0012194052105769515
    2. '.' → logprob: -7.251219272613525
    3. ' .' → logprob: -7.626219272613525
    4. 's' → logprob: -10.876219749450684
    5. ').' → logprob: -14.126219749450684
    6. '   ' → logprob: -14.626219749450684
    7. '.m' → logprob: -14.751219749450684
    8. ' ' → logprob: -15.376219749450684
    9. '           ' → logprob: -15.626219749450684
    10. '       ' → logprob: -16.376218795776367

Token 88: 'cones' (ID: 98588)
  Prédit: 'cones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cones' → logprob: -0.00010282796574756503
    2. ' cones' → logprob: -10.750102996826172
    3. 'con' → logprob: -10.875102996826172
    4. 's' → logprob: -11.250102996826172
    5. '``' → logprob: -11.375102996826172
    6. '```' → logprob: -11.500102996826172
    7. 'cone' → logprob: -11.500102996826172
    8. 'ones' → logprob: -12.125102996826172
    9. '[]' → logprob: -13.500102996826172
    10. '>' → logprob: -13.875102996826172

Token 89: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009906127117574215
    2. ')
' → logprob: -4.63490629196167
    3. '           ' → logprob: -9.009905815124512
    4. ' )' → logprob: -11.009905815124512
    5. ')

' → logprob: -12.759905815124512
    6. '<|end|>' → logprob: -13.134905815124512
    7. ')
' → logprob: -13.384905815124512
    8. '       ' → logprob: -13.634905815124512
    9. '
' → logprob: -13.884905815124512
    10. ' )
' → logprob: -14.259905815124512

Token 90: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4135538339614868
    2. '<|end|>' → logprob: -1.9135538339614868
    3. '           ' → logprob: -2.0385537147521973
    4. ' 
' → logprob: -4.163553714752197
    5. '    
' → logprob: -4.663553714752197
    6. '            
' → logprob: -4.913553714752197
    7. '       ' → logprob: -5.163553714752197
    8. '<|end|>' → logprob: -5.413553714752197
    9. '        
' → logprob: -5.538553714752197
    10. ' ' → logprob: -5.788553714752197

Token 91: ' start' (ID: 1604)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24287398159503937
    2. '           ' → logprob: -2.4928739070892334
    3. 'for' → logprob: -2.7428739070892334
    4. '
' → logprob: -3.2428739070892334
    5. '       ' → logprob: -4.4928741455078125
    6. '   ' → logprob: -5.1178741455078125
    7. ' 
' → logprob: -5.7428741455078125
    8. '    
' → logprob: -5.9928741455078125
    9. ' ' → logprob: -6.4928741455078125
    10. '	for' → logprob: -6.7428741455078125

Token 92: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08196478337049484
    2. '=' → logprob: -2.5819647312164307
    3. '_' → logprob: -6.08196496963501
    4. ' ' → logprob: -7.95696496963501
    5. ',' → logprob: -8.706964492797852
    6. 's' → logprob: -9.581964492797852
    7. '_idx' → logprob: -9.956964492797852
    8. '<|end|>' → logprob: -10.206964492797852
    9. ' in' → logprob: -10.331964492797852
    10. ')' → logprob: -10.706964492797852

Token 93: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5760049819946289
    2. ' ' → logprob: -0.8260049819946289
    3. ' n' → logprob: -9.826004981994629
    4. 'n' → logprob: -11.951004981994629
    5. '1' → logprob: -13.201004981994629
    6. '<|end|>' → logprob: -14.076004981994629
    7. ' ' → logprob: -14.201004981994629
    8. '[' → logprob: -15.201004981994629
    9. '           ' → logprob: -15.701004981994629
    10. '   ' → logprob: -15.701004981994629

Token 94: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013711919309571385
    2. ' ' → logprob: -6.626371383666992
    3. 'n' → logprob: -10.501371383666992
    4. '1' → logprob: -11.751371383666992
    5. ' n' → logprob: -13.001371383666992
    6. '   ' → logprob: -13.126371383666992
    7. '           ' → logprob: -13.626371383666992
    8. 'max' → logprob: -13.626371383666992
    9. '       ' → logprob: -14.376371383666992
    10. '[' → logprob: -15.126371383666992

Token 95: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 96: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 97: ' end' (ID: 1268)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.878573477268219
    2. '
' → logprob: -1.8785734176635742
    3. '            ' → logprob: -2.378573417663574
    4. ' 
' → logprob: -2.503573417663574
    5. '        ' → logprob: -3.003573417663574
    6. ' ' → logprob: -3.128573417663574
    7. '           ' → logprob: -3.503573417663574
    8. ' while' → logprob: -3.753573417663574
    9. 'for' → logprob: -4.003573417663574
    10. ' end' → logprob: -4.003573417663574

Token 98: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.007975910790264606
    2. '=' → logprob: -5.007976055145264
    3. ' +' → logprob: -7.507976055145264
    4. '+' → logprob: -7.882976055145264
    5. ' ' → logprob: -9.257975578308105
    6. '<|end|>' → logprob: -9.632975578308105
    7. ' in' → logprob: -10.132975578308105
    8. '   ' → logprob: -10.507975578308105
    9. ' <=' → logprob: -11.132975578308105
    10. '<|end|>' → logprob: -11.132975578308105

Token 99: ' ' (ID: 220)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.18460243940353394
    2. ' ' → logprob: -2.4346024990081787
    3. '0' → logprob: -2.8096024990081787
    4. 'n' → logprob: -4.4346022605896
    5. ' start' → logprob: -5.0596022605896
    6. 'start' → logprob: -7.1846022605896
    7. ' s' → logprob: -7.8096022605896
    8. ' len' → logprob: -7.9346022605896
    9. ' m' → logprob: -8.059602737426758
    10. '1' → logprob: -8.684602737426758

Token 100: '0' (ID: 15)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.45710688829421997
    2. '0' → logprob: -1.0821068286895752
    3. 'start' → logprob: -4.207107067108154
    4. 'm' → logprob: -5.082107067108154
    5. 'len' → logprob: -5.957107067108154
    6. ' n' → logprob: -6.832107067108154
    7. 's' → logprob: -6.957107067108154
    8. '1' → logprob: -6.957107067108154
    9. ' ' → logprob: -7.707107067108154
    10. 'self' → logprob: -8.332106590270996

Token 101: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3502154052257538
    2. '           ' → logprob: -1.4752154350280762
    3. '<|end|>' → logprob: -2.975215435028076
    4. '<|end|>' → logprob: -5.225215435028076
    5. ' 
' → logprob: -5.475215435028076
    6. '            ' → logprob: -6.475215435028076
    7. ' ' → logprob: -6.850215435028076
    8. '            
' → logprob: -7.225215435028076
    9. ' while' → logprob: -7.350215435028076
    10. '       ' → logprob: -7.725215435028076

Token 102: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26688361167907715
    2. '<|end|>' → logprob: -2.766883611679077
    3. '
' → logprob: -2.891883611679077
    4. ' 
' → logprob: -3.016883611679077
    5. ' ' → logprob: -3.266883611679077
    6. '            ' → logprob: -4.766883850097656
    7. '            
' → logprob: -5.141883850097656
    8. '<|end|>' → logprob: -5.766883850097656
    9. ' while' → logprob: -6.141883850097656
    10. '       ' → logprob: -6.516883850097656

Token 103: ' #' (ID: 1069)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.8422818183898926
    2. 'while' → logprob: -1.2172818183898926
    3. '           ' → logprob: -1.4672818183898926
    4. ' for' → logprob: -3.9672818183898926
    5. 'for' → logprob: -5.092281818389893
    6. ' remainder' → logprob: -5.467281818389893
    7. ' n' → logprob: -5.842281818389893
    8. '
' → logprob: -5.842281818389893
    9. '       ' → logprob: -6.217281818389893
    10. '   ' → logprob: -6.342281818389893

Token 104: ' Sliding' (ID: 158421)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.5885515809059143
    2. ' for' → logprob: -1.3385515213012695
    3. 'while' → logprob: -1.8385515213012695
    4. 'for' → logprob: -3.9635515213012695
    5. '           ' → logprob: -5.7135515213012695
    6. ' n' → logprob: -7.7135515213012695
    7. 'While' → logprob: -8.08855152130127
    8. ' from' → logprob: -8.71355152130127
    9. 'from' → logprob: -9.21355152130127
    10. '   ' → logprob: -9.71355152130127

Token 105: ' window' (ID: 5734)
  Prédit: ' window'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' window' → logprob: -0.23466357588768005
    2. 'window' → logprob: -1.6096636056900024
    3. '           ' → logprob: -5.359663486480713
    4. '_window' → logprob: -6.359663486480713
    5. '   ' → logprob: -6.734663486480713
    6. '       ' → logprob: -7.734663486480713
    7. '-window' → logprob: -8.109663963317871
    8. ' ' → logprob: -8.484663963317871
    9. 'Window' → logprob: -8.984663963317871
    10. '            ' → logprob: -9.359663963317871

Token 106: ' to' (ID: 316)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.8644564151763916
    2. '<|end|>' → logprob: -1.3644564151763916
    3. 'while' → logprob: -1.9894564151763916
    4. '<|end|>' → logprob: -2.3644564151763916
    5. '           ' → logprob: -2.8644564151763916
    6. '
' → logprob: -4.7394561767578125
    7. ' for' → logprob: -4.7394561767578125
    8. '            ' → logprob: -5.4894561767578125
    9. ' ' → logprob: -5.7394561767578125
    10. '            
' → logprob: -6.4894561767578125

Token 107: ' examine' (ID: 28035)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.0888800248503685
    2. ' while' → logprob: -3.4638800621032715
    3. 'find' → logprob: -3.8388800621032715
    4. 'while' → logprob: -4.8388800621032715
    5. 'maximize' → logprob: -4.8388800621032715
    6. ' maximize' → logprob: -4.9638800621032715
    7. ' ' → logprob: -6.3388800621032715
    8. ' expand' → logprob: -6.3388800621032715
    9. 'expand' → logprob: -6.4638800621032715
    10. '           ' → logprob: -6.7138800621032715

Token 108: ' all' (ID: 722)
  Prédit: ' all'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' all' → logprob: -0.6049110293388367
    2. ' ranges' → logprob: -2.1049110889434814
    3. ' the' → logprob: -2.7299110889434814
    4. ' subsets' → logprob: -2.9799110889434814
    5. 's' → logprob: -3.1049110889434814
    6. ' sub' → logprob: -3.2299110889434814
    7. ' s' → logprob: -3.6049110889434814
    8. 'all' → logprob: -4.229910850524902
    9. ' while' → logprob: -4.354910850524902
    10. ' possible' → logprob: -4.604910850524902

Token 109: ' contiguous' (ID: 130997)
  Prédit: ' sub'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sub' → logprob: -0.3642239272594452
    2. 'sub' → logprob: -1.2392239570617676
    3. ' possible' → logprob: -5.614223957061768
    4. 's' → logprob: -6.114223957061768
    5. ' contiguous' → logprob: -6.114223957061768
    6. 'possible' → logprob: -6.739223957061768
    7. ' windows' → logprob: -6.864223957061768
    8. '_sub' → logprob: -6.989223957061768
    9. ' subsets' → logprob: -7.114223957061768
    10. ' valid' → logprob: -7.489223957061768

Token 110: ' sub' (ID: 1543)
  Prédit: ' sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sub' → logprob: -0.7854043245315552
    2. 'sub' → logprob: -1.6604043245315552
    3. ' subsets' → logprob: -2.0354042053222656
    4. 's' → logprob: -2.5354042053222656
    5. '<|end|>' → logprob: -2.9104042053222656
    6. ' ranges' → logprob: -3.9104042053222656
    7. 'ranges' → logprob: -4.035404205322266
    8. 'segments' → logprob: -4.285404205322266
    9. ' subv' → logprob: -4.910404205322266
    10. ' segments' → logprob: -4.910404205322266

Token 111: 'ranges' (ID: 175054)
  Prédit: 'arrays'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arrays' → logprob: -0.6713034510612488
    2. 'sets' → logprob: -1.7963035106658936
    3. 'ranges' → logprob: -1.7963035106658936
    4. '           ' → logprob: -2.0463035106658936
    5. 'array' → logprob: -4.2963032722473145
    6. 'strings' → logprob: -5.4213032722473145
    7. '       ' → logprob: -5.9213032722473145
    8. 'arr' → logprob: -6.5463032722473145
    9. '               ' → logprob: -7.0463032722473145
    10. 's' → logprob: -7.0463032722473145

Token 112: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.038055144250392914
    2. '<|end|>' → logprob: -4.788054943084717
    3. ' while' → logprob: -5.163054943084717
    4. '            ' → logprob: -5.288054943084717
    5. ' ' → logprob: -5.413054943084717
    6. '       ' → logprob: -5.538054943084717
    7. '            
' → logprob: -6.038054943084717
    8. ' for' → logprob: -6.538054943084717
    9. '<|end|>' → logprob: -6.663054943084717
    10. 'while' → logprob: -7.038054943084717

Token 114: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.28393781185150146
    2. '           ' → logprob: -2.158937931060791
    3. 'while' (adapté à ' while') → logprob: -2.533937931060791
    4. ' for' → logprob: -3.158937931060791
    5. ' n' → logprob: -5.283937931060791
    6. '            ' → logprob: -6.658937931060791
    7. 'for' → logprob: -6.908937931060791
    8. 'n' → logprob: -6.908937931060791
    9. '       ' → logprob: -7.783937931060791
    10. '   ' → logprob: -8.408937454223633

Token 115: ' start' (ID: 1604)
  Prédit: ' end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.003972135949879885
    2. 'end' → logprob: -5.628972053527832
    3. ' start' → logprob: -8.128972053527832
    4. '(end' → logprob: -9.878972053527832
    5. '	end' → logprob: -11.753972053527832
    6. ' ' → logprob: -12.003972053527832
    7. 'start' → logprob: -12.253972053527832
    8. '[end' → logprob: -13.503972053527832
    9. '   ' → logprob: -13.628972053527832
    10. '_end' → logprob: -13.878972053527832

Token 116: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.011728458106517792
    2. '<' → logprob: -4.511728286743164
    3. ' <=' → logprob: -7.761728286743164
    4. '<n' → logprob: -8.636728286743164
    5. ' ' → logprob: -10.386728286743164
    6. '<=' → logprob: -10.636728286743164
    7. '<len' → logprob: -11.136728286743164
    8. '<w' → logprob: -13.636728286743164
    9. '<size' → logprob: -13.636728286743164
    10. '<num' → logprob: -14.011728286743164

Token 117: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.023247458040714264
    2. ' n' → logprob: -3.773247480392456
    3. '           ' → logprob: -13.773247718811035
    4. '	n' → logprob: -14.773247718811035
    5. 'len' → logprob: -14.898247718811035
    6. '
' → logprob: -15.773247718811035
    7. '   ' → logprob: -16.52324676513672
    8. ' ' → logprob: -18.27324676513672
    9. ' len' → logprob: -18.39824676513672
    10. ')n' → logprob: -18.52324676513672

Token 118: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3177659213542938
    2. ':' → logprob: -1.4427659511566162
    3. ':
' → logprob: -3.442765951156616
    4. 'and' → logprob: -5.567765712738037
    5. '           ' → logprob: -9.067766189575195
    6. ':

' → logprob: -11.192766189575195
    7. ' or' → logprob: -11.692766189575195
    8. '   ' → logprob: -12.067766189575195
    9. ' ' → logprob: -12.817766189575195
    10. '<|end|>' → logprob: -13.067766189575195

Token 119: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.017057735472917557
    2. '                
' → logprob: -5.0170578956604
    3. ' 
' → logprob: -5.6420578956604
    4. '
' → logprob: -6.7670578956604
    5. '           ' → logprob: -6.8920578956604
    6. '<|end|>' → logprob: -6.8920578956604
    7. '            
' → logprob: -7.1420578956604
    8. '    
' → logprob: -7.3920578956604
    9. ' if' → logprob: -7.3920578956604
    10. '                ' → logprob: -8.017057418823242

Token 120: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8338944315910339
    2. 'while' → logprob: -1.3338944911956787
    3. '               ' → logprob: -1.9588944911956787
    4. ' if' → logprob: -2.0838944911956787
    5. ' while' → logprob: -3.3338944911956787
    6. '   ' → logprob: -7.7088942527771
    7. '           ' → logprob: -8.208894729614258
    8. '                
' → logprob: -9.333894729614258
    9. ' ' → logprob: -10.083894729614258
    10. '	while' → logprob: -10.208894729614258

Token 121: ' We' (ID: 1416)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.412023663520813
    2. 'if' → logprob: -1.412023663520813
    3. ' while' → logprob: -3.4120235443115234
    4. '               ' → logprob: -3.4120235443115234
    5. ' if' → logprob: -3.6620235443115234
    6. '           ' → logprob: -6.787023544311523
    7. 'current' → logprob: -8.037023544311523
    8. '   ' → logprob: -8.162023544311523
    9. 'sum' → logprob: -8.287023544311523
    10. 'While' → logprob: -9.412023544311523

Token 122: ' will' (ID: 738)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.9326748847961426
    2. '               ' → logprob: -1.4326748847961426
    3. 'while' → logprob: -1.9326748847961426
    4. ' can' → logprob: -2.3076748847961426
    5. '                   ' → logprob: -3.6826748847961426
    6. ' should' → logprob: -4.432674884796143
    7. ' have' → logprob: -4.432674884796143
    8. '                ' → logprob: -4.432674884796143
    9. 'hile' → logprob: -4.432674884796143
    10. ' continue' → logprob: -4.557674884796143

Token 123: ' move' (ID: 5275)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.6924082040786743
    2. 'expand' → logprob: -2.0674080848693848
    3. '               ' → logprob: -2.3174080848693848
    4. 'try' → logprob: -2.6924080848693848
    5. 'increment' → logprob: -2.9424080848693848
    6. ' while' → logprob: -3.3174080848693848
    7. 'increase' → logprob: -3.4424080848693848
    8. ' try' → logprob: -3.9424080848693848
    9. 'advance' → logprob: -4.317408084869385
    10. 'check' → logprob: -4.942408084869385

Token 124: ' '' (ID: 461)
  Prédit: ' end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.36053934693336487
    2. 'end' → logprob: -1.2355393171310425
    3. ' the' → logprob: -4.485539436340332
    4. '               ' → logprob: -8.235539436340332
    5. 'the' → logprob: -8.485539436340332
    6. ' ' → logprob: -8.985539436340332
    7. '                   ' → logprob: -10.610539436340332
    8. ' right' → logprob: -10.735539436340332
    9. 'right' → logprob: -10.860539436340332
    10. ' while' → logprob: -11.110539436340332

Token 125: 'end' (ID: 419)
  Prédit: 'end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0006358316168189049
    2. ' end' → logprob: -7.375635623931885
    3. ''end' → logprob: -13.250636100769043
    4. '[end' → logprob: -13.625636100769043
    5. '=end' → logprob: -13.750636100769043
    6. '_end' → logprob: -13.750636100769043
    7. '	end' → logprob: -13.875636100769043
    8. '>end' → logprob: -14.250636100769043
    9. '   ' → logprob: -14.375636100769043
    10. '(end' → logprob: -14.500636100769043

Token 126: ''' (ID: 6)
  Prédit: ' forward'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' forward' → logprob: -0.6219496130943298
    2. ' while' → logprob: -1.6219496726989746
    3. ' to' → logprob: -1.7469496726989746
    4. '               ' → logprob: -3.8719496726989746
    5. ' until' → logprob: -3.9969496726989746
    6. 'while' → logprob: -4.371949672698975
    7. ' ' → logprob: -4.871949672698975
    8. 'to' → logprob: -4.996949672698975
    9. ' up' → logprob: -5.496949672698975
    10. ''' → logprob: -6.121949672698975

Token 127: ' to' (ID: 316)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.7608111500740051
    2. ' to' → logprob: -2.2608110904693604
    3. 'while' → logprob: -2.2608110904693604
    4. ' +=' → logprob: -2.3858110904693604
    5. ' forward' → logprob: -2.8858110904693604
    6. '               ' → logprob: -3.1358110904693604
    7. ' ' → logprob: -3.6358110904693604
    8. '                ' → logprob: -4.2608113288879395
    9. '            ' → logprob: -4.5108113288879395
    10. ' and' → logprob: -4.7608113288879395

Token 128: ' cover' (ID: 4321)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -1.2147469520568848
    2. ' n' → logprob: -1.3397469520568848
    3. 'min' → logprob: -2.0897469520568848
    4. ' the' → logprob: -2.7147469520568848
    5. ' find' → logprob: -2.9647469520568848
    6. 'n' → logprob: -3.2147469520568848
    7. ' maximize' → logprob: -3.3397469520568848
    8. 'max' → logprob: -3.5897469520568848
    9. ' max' → logprob: -3.5897469520568848
    10. ' at' → logprob: -4.339746952056885

Token 129: ' [' (ID: 723)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5556103587150574
    2. ' as' → logprob: -1.9306104183197021
    3. ' all' → logprob: -2.680610418319702
    4. ' more' → logprob: -3.055610418319702
    5. ' ranges' → logprob: -3.430610418319702
    6. 'the' → logprob: -3.555610418319702
    7. ' a' → logprob: -3.680610418319702
    8. ' sub' → logprob: -4.305610179901123
    9. ' at' → logprob: -4.680610179901123
    10. 's' → logprob: -4.805610179901123

Token 130: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.1003446951508522
    2. ' start' → logprob: -2.350344657897949
    3. 'end' → logprob: -9.97534465789795
    4. ',' → logprob: -10.97534465789795
    5. '               ' → logprob: -11.22534465789795
    6. ' end' → logprob: -11.85034465789795
    7. '[start' → logprob: -11.85034465789795
    8. '           ' → logprob: -11.97534465789795
    9. ' ' → logprob: -12.10034465789795
    10. '   ' → logprob: -12.10034465789795

Token 131: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01487924437969923
    2. ':end' → logprob: -5.26487922668457
    3. ',end' → logprob: -5.26487922668457
    4. ' ,' → logprob: -5.63987922668457
    5. ':' → logprob: -8.51487922668457
    6. '...' → logprob: -9.01487922668457
    7. ' :' → logprob: -9.26487922668457
    8. '..' → logprob: -9.51487922668457
    9. ' <=' → logprob: -9.63987922668457
    10. '   ' → logprob: -10.01487922668457

Token 132: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.309723436832428
    2. ' end' → logprob: -1.6847233772277832
    3. 'n' → logprob: -3.184723377227783
    4. ' n' → logprob: -3.934723377227783
    5. ']' → logprob: -5.434723377227783
    6. 'start' → logprob: -5.434723377227783
    7. '               ' → logprob: -5.684723377227783
    8. ')' → logprob: -5.809723377227783
    9. '           ' → logprob: -7.059723377227783
    10. ' start' → logprob: -7.184723377227783

Token 133: ')' (ID: 8)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06253189593553543
    2. '+' → logprob: -3.3125319480895996
    3. ' +' → logprob: -3.9375319480895996
    4. ')' → logprob: -5.4375319480896
    5. ']
' → logprob: -9.437531471252441
    6. ' ]' → logprob: -9.812531471252441
    7. '']' → logprob: -9.937531471252441
    8. '           ' → logprob: -10.062531471252441
    9. '[' → logprob: -10.937531471252441
    10. '               ' → logprob: -10.937531471252441

Token 134: ' sub' (ID: 1543)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11370770633220673
    2. '<|end|>' → logprob: -2.4887077808380127
    3. ' while' → logprob: -4.488707542419434
    4. '<|end|>' → logprob: -5.363707542419434
    5. '
' → logprob: -5.613707542419434
    6. ' if' → logprob: -6.738707542419434
    7. ',' → logprob: -7.238707542419434
    8. '                
' → logprob: -7.363707542419434
    9. ' and' → logprob: -7.613707542419434
    10. 'while' → logprob: -7.738707542419434

Token 135: 'ranges' (ID: 175054)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.23263846337795258
    2. 'range' → logprob: -2.607638359069824
    3. '+' → logprob: -2.732638359069824
    4. ' +' → logprob: -4.107638359069824
    5. '           ' → logprob: -4.232638359069824
    6. ']' → logprob: -4.982638359069824
    7. 'ranges' → logprob: -5.107638359069824
    8. '                ' → logprob: -5.732638359069824
    9. ')' → logprob: -5.732638359069824
    10. '                   ' → logprob: -5.982638359069824

Token 136: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.047326911240816116
    2. '<|end|>' → logprob: -3.2973268032073975
    3. '<|end|>' → logprob: -5.422327041625977
    4. '                ' → logprob: -6.047327041625977
    5. ' ' → logprob: -7.547327041625977
    6. '                
' → logprob: -7.547327041625977
    7. ' if' → logprob: -7.672327041625977
    8. ' while' → logprob: -8.297327041625977
    9. ',' → logprob: -9.172327041625977
    10. '           ' → logprob: -9.297327041625977

Token 137: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.030539099127054214
    2. '<|end|>' → logprob: -3.780539035797119
    3. ' while' → logprob: -6.030539035797119
    4. '
' → logprob: -6.280539035797119
    5. '                
' → logprob: -6.530539035797119
    6. '<|end|>' → logprob: -7.030539035797119
    7. '           ' → logprob: -9.280539512634277
    8. '                ' → logprob: -9.405539512634277
    9. ' and' → logprob: -9.780539512634277
    10. ',' → logprob: -9.905539512634277

Token 138: ' while' (ID: 2049)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.427023321390152
    2. ' while' → logprob: -1.8020232915878296
    3. '               ' → logprob: -2.052023410797119
    4. 'if' → logprob: -3.677023410797119
    5. 'while' (adapté à ' while') → logprob: -3.677023410797119
    6. ' ' → logprob: -6.802023410797119
    7. '                ' → logprob: -7.302023410797119
    8. '<|end|>' → logprob: -8.177022933959961
    9. '                
' → logprob: -8.802022933959961
    10. ' 
' → logprob: -8.927022933959961

Token 139: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.018192434683442116
    2. 'end' → logprob: -4.018192291259766
    3. '(end' → logprob: -10.143192291259766
    4. '
' → logprob: -14.018192291259766
    5. '	end' → logprob: -14.768192291259766
    6. ' ' → logprob: -15.018192291259766
    7. '[end' → logprob: -15.018192291259766
    8. ''end' → logprob: -15.768192291259766
    9. '=end' → logprob: -15.768192291259766
    10. '           ' → logprob: -15.893192291259766

Token 140: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.00027099132421426475
    2. '<' → logprob: -8.37527084350586
    3. ' <=' → logprob: -10.50027084350586
    4. '<n' → logprob: -12.50027084350586
    5. ' ' → logprob: -12.75027084350586
    6. '<len' → logprob: -13.00027084350586
    7. '<size' → logprob: -13.62527084350586
    8. ' +' → logprob: -14.00027084350586
    9. '<|end|>' → logprob: -15.00027084350586
    10. '[' → logprob: -15.87527084350586

Token 141: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.012514711357653141
    2. 'n' → logprob: -4.387514591217041
    3. ' ' → logprob: -13.8875150680542
    4. '	n' → logprob: -14.2625150680542
    5. ' len' → logprob: -14.2625150680542
    6. ')n' → logprob: -14.6375150680542
    7. '   ' → logprob: -14.8875150680542
    8. '
' → logprob: -15.0750150680542
    9. '<n' → logprob: -15.3875150680542
    10. '_n' → logprob: -15.4500150680542

Token 142: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.020678170025348663
    2. 'and' → logprob: -3.8956782817840576
    3. '               ' → logprob: -10.020678520202637
    4. ' ' → logprob: -10.395678520202637
    5. '           ' → logprob: -10.770678520202637
    6. '            ' → logprob: -11.520678520202637
    7. '                ' → logprob: -11.520678520202637
    8. '                   ' → logprob: -11.895678520202637
    9. '              ' → logprob: -12.645678520202637
    10. '   ' → logprob: -12.895678520202637

Token 143: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0959351658821106
    2. '               ' → logprob: -3.220935106277466
    3. ' if' → logprob: -3.595935106277466
    4. '                    
' → logprob: -4.845935344696045
    5. ':
' → logprob: -6.095935344696045
    6. ' and' → logprob: -6.095935344696045
    7. '   ' → logprob: -6.595935344696045
    8. '           ' → logprob: -6.845935344696045
    9. '<|end|>' → logprob: -6.845935344696045
    10. ',' → logprob: -7.095935344696045

Token 144: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.5964266657829285
    2. ' current' → logprob: -1.4714267253875732
    3. '                   ' → logprob: -2.7214267253875732
    4. ' sum' → logprob: -2.8464267253875732
    5. '                       ' → logprob: -3.7214267253875732
    6. ' remainder' → logprob: -4.221426486968994
    7. 'total' (adapté à ' total') → logprob: -4.471426486968994
    8. ' if' → logprob: -4.721426486968994
    9. 'sum' → logprob: -4.971426486968994
    10. '               ' → logprob: -4.971426486968994

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.048482101410627365
    2. '_sum' → logprob: -3.2984821796417236
    3. '=' → logprob: -4.7984819412231445
    4. '_s' → logprob: -7.2984819412231445
    5. 'sum' → logprob: -7.6734819412231445
    6. '_' → logprob: -7.7984819412231445
    7. '=sum' → logprob: -8.798481941223145
    8. '_length' → logprob: -8.923481941223145
    9. 's' → logprob: -9.798481941223145
    10. '_re' → logprob: -10.048481941223145

Token 146: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.014376794919371605
    2. 'prefix' → logprob: -5.014376640319824
    3. ' (' → logprob: -5.264376640319824
    4. '(prefix' → logprob: -6.014376640319824
    5. '           ' → logprob: -12.264376640319824
    6. '            ' → logprob: -12.639376640319824
    7. '(' → logprob: -13.264376640319824
    8. ' ' → logprob: -13.889376640319824
    9. '_prefix' → logprob: -14.014376640319824
    10. '(p' → logprob: -14.014376640319824

Token 147: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.9361264946837764e-07
    2. '_sum' → logprob: -16.625
    3. 's' → logprob: -17.75
    4. '_' → logprob: -18.25
    5. ' _' → logprob: -19.75
    6. '\' → logprob: -19.875
    7. ')' → logprob: -20.25
    8. ' sums' → logprob: -20.5
    9. 'summ' → logprob: -21.125
    10. '   ' → logprob: -21.25

Token 148: 'ums' (ID: 6162)
  Prédit: 'ums'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ums' → logprob: -0.0026772029232233763
    2. 's' → logprob: -6.5026774406433105
    3. '_s' → logprob: -7.1276774406433105
    4. 'um' → logprob: -8.752676963806152
    5. '_' → logprob: -9.752676963806152
    6. 'umsum' → logprob: -10.127676963806152
    7. '[' → logprob: -10.752676963806152
    8. 'umps' → logprob: -11.752676963806152
    9. '```' → logprob: -12.002676963806152
    10. 'ms' → logprob: -12.127676963806152

Token 149: '.sum' (ID: 35381)
  Prédit: '.get'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.get' → logprob: -0.8000577092170715
    2. '.sum' → logprob: -1.0500576496124268
    3. '.query' → logprob: -1.6750576496124268
    4. ' .' → logprob: -4.800057888031006
    5. '.' → logprob: -6.300057888031006
    6. '.prefix' → logprob: -6.550057888031006
    7. '.range' → logprob: -6.800057888031006
    8. '.value' → logprob: -8.425057411193848
    9. '.calculate' → logprob: -9.175057411193848
    10. '.s' → logprob: -9.175057411193848

Token 150: '_range' (ID: 22022)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.489412784576416
    2. '(end' → logprob: -0.989412784576416
    3. '_range' → logprob: -4.614412784576416
    4. '(' → logprob: -5.489412784576416
    5. 'range' → logprob: -8.364412307739258
    6. 's' → logprob: -8.864412307739258
    7. '_(' → logprob: -8.989412307739258
    8. '_between' → logprob: -9.364412307739258
    9. '(prefix' → logprob: -9.489412307739258
    10. ' (' → logprob: -9.489412307739258

Token 151: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.003667533164843917
    2. '(' → logprob: -5.62866735458374
    3. '(end' → logprob: -10.878667831420898
    4. '(
' → logprob: -11.003667831420898
    5. ' (' → logprob: -11.003667831420898
    6. '[start' → logprob: -11.378667831420898
    7. ')' → logprob: -13.628667831420898
    8. 'start' → logprob: -14.253667831420898
    9. '(s' → logprob: -14.378667831420898
    10. '<|end|>' → logprob: -15.253667831420898

Token 152: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0031157992780208588
    2. ',end' → logprob: -5.878115653991699
    3. ' ,' → logprob: -8.1281156539917
    4. ')' → logprob: -12.5031156539917
    5. 'end' → logprob: -12.5031156539917
    6. ',
' → logprob: -12.8781156539917
    7. '   ' → logprob: -14.1281156539917
    8. '<|end|>' → logprob: -14.1281156539917
    9. '[end' → logprob: -14.1281156539917
    10. '<|end|>' → logprob: -14.3781156539917

Token 153: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0889447033405304
    2. ' end' → logprob: -2.463944673538208
    3. ')' → logprob: -13.838944435119629
    4. '
' → logprob: -14.338944435119629
    5. '   ' → logprob: -14.463944435119629
    6. '(end' → logprob: -14.463944435119629
    7. '                   ' → logprob: -14.588944435119629
    8. ' ' → logprob: -14.588944435119629
    9. '                       ' → logprob: -15.088944435119629
    10. '	end' → logprob: -15.213944435119629

Token 154: ')
' (ID: 446)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3573739528656006
    2. '+' → logprob: -1.7323739528656006
    3. ')' → logprob: -2.1073739528656006
    4. ' )' → logprob: -6.23237419128418
    5. ')
' → logprob: -10.10737419128418
    6. '+)' → logprob: -10.73237419128418
    7. '           ' → logprob: -12.48237419128418
    8. ' -' → logprob: -12.48237419128418
    9. '-' → logprob: -12.48237419128418
    10. '               ' → logprob: -12.60737419128418

Token 155: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4926142394542694
    2. ' %' → logprob: -1.4926142692565918
    3. '%' → logprob: -2.492614269256592
    4. ')' → logprob: -2.867614269256592
    5. '                    ' → logprob: -4.992614269256592
    6. '
' → logprob: -5.242614269256592
    7. '                    
' → logprob: -5.867614269256592
    8. '<|end|>' → logprob: -5.992614269256592
    9. '               ' → logprob: -6.992614269256592
    10. ' ' → logprob: -7.492614269256592

Token 156: ' remainder' (ID: 47056)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7037375569343567
    2. ' %' → logprob: -1.203737497329712
    3. '                   ' → logprob: -1.828737497329712
    4. '%' → logprob: -4.703737735748291
    5. 'if' → logprob: -4.703737735748291
    6. ' ' → logprob: -5.078737735748291
    7. ')' → logprob: -5.453737735748291
    8. '                    ' → logprob: -5.578737735748291
    9. '
' → logprob: -6.078737735748291
    10. '                    
' → logprob: -6.203737735748291

Token 157: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011377190239727497
    2. '=' → logprob: -4.511377334594727
    3. ' ' → logprob: -9.011377334594727
    4. '%' → logprob: -9.636377334594727
    5. ' %' → logprob: -9.636377334594727
    6. 's' → logprob: -10.761377334594727
    7. ' ==' → logprob: -11.386377334594727
    8. ')' → logprob: -11.511377334594727
    9. ' %=' → logprob: -11.886377334594727
    10. '(' → logprob: -12.011377334594727

Token 158: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.00371979596093297
    2. 'total' → logprob: -5.628719806671143
    3. '(total' → logprob: -9.253719329833984
    4. ' (' → logprob: -11.003719329833984
    5. ' ' → logprob: -13.128719329833984
    6. ' ' → logprob: -14.253719329833984
    7. ' tot' → logprob: -14.253719329833984
    8. ' self' → logprob: -14.378719329833984
    9. '$total' → logprob: -14.503719329833984
    10. ' tota' → logprob: -14.628719329833984

Token 159: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.006776119116693735
    2. '%' → logprob: -5.006776332855225
    3. ' ' → logprob: -9.881775856018066
    4. ' %
' → logprob: -12.131775856018066
    5. ' ' → logprob: -13.256775856018066
    6. ')' → logprob: -13.881775856018066
    7. ' %

' → logprob: -15.256775856018066
    8. '[' → logprob: -15.381775856018066
    9. ' %)' → logprob: -16.006776809692383
    10. '1' → logprob: -16.131776809692383

Token 160: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.016200000420212746
    2. ' self' → logprob: -4.141200065612793
    3. '           ' → logprob: -9.266200065612793
    4. '                   ' → logprob: -10.141200065612793
    5. '               ' → logprob: -10.766200065612793
    6. '(self' → logprob: -13.016200065612793
    7. ' ' → logprob: -13.266200065612793
    8. '                       ' → logprob: -13.766200065612793
    9. '                           ' → logprob: -14.516200065612793
    10. '7' → logprob: -14.766200065612793

Token 161: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -1.5332478142227046e-05
    2. '.' → logprob: -11.250015258789062
    3. ' .' → logprob: -13.375015258789062
    4. '           ' → logprob: -14.625015258789062
    5. 'self' → logprob: -15.875015258789062
    6. '.self' → logprob: -16.750015258789062
    7. 'm' → logprob: -16.875015258789062
    8. '.м' → logprob: -16.875015258789062
    9. '.s' → logprob: -17.250015258789062
    10. '               ' → logprob: -18.250015258789062

Token 162: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.003144681453704834
    2. '
' → logprob: -6.75314474105835
    3. '<|end|>' → logprob: -7.25314474105835
    4. '                    
' → logprob: -7.37814474105835
    5. '                    ' → logprob: -8.628144264221191
    6. '               ' → logprob: -8.878144264221191
    7. ',' → logprob: -9.253144264221191
    8. '<|end|>' → logprob: -10.128144264221191
    9. '                       ' → logprob: -10.503144264221191
    10. '                  ' → logprob: -10.753144264221191

Token 163: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07957005500793457
    2. '
' → logprob: -2.9545700550079346
    3. '                    
' → logprob: -4.5795698165893555
    4. '<|end|>' → logprob: -4.5795698165893555
    5. '                    ' → logprob: -6.9545698165893555
    6. '<|end|>' → logprob: -7.2045698165893555
    7. ' 
' → logprob: -7.7045698165893555
    8. '               ' → logprob: -7.7045698165893555
    9. ',' → logprob: -9.079569816589355
    10. '                
' → logprob: -9.204569816589355

Token 164: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.26777079701423645
    2. 'if' (adapté à ' if') → logprob: -1.892770767211914
    3. ' if' → logprob: -2.517770767211914
    4. '               ' → logprob: -6.892770767211914
    5. '                       ' → logprob: -7.142770767211914
    6. '                    ' → logprob: -7.267770767211914
    7. '           ' → logprob: -8.017770767211914
    8. '
' → logprob: -8.392770767211914
    9. '   ' → logprob: -8.892770767211914
    10. '       ' → logprob: -9.267770767211914

Token 165: ' remainder' (ID: 47056)
  Prédit: ' remainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.048683542758226395
    2. 're' → logprob: -3.0486836433410645
    3. ' total' → logprob: -10.423683166503906
    4. '(re' → logprob: -10.673683166503906
    5. 'total' → logprob: -11.423683166503906
    6. '	re' → logprob: -11.673683166503906
    7. ' ' → logprob: -11.923683166503906
    8. 'max' → logprob: -12.548683166503906
    9. ' re' → logprob: -12.548683166503906
    10. ' max' → logprob: -12.923683166503906

Token 166: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.16646058857440948
    2. '>' → logprob: -2.2914605140686035
    3. ' <=' → logprob: -3.4164605140686035
    4. ' ==' → logprob: -5.0414605140686035
    5. ' >=' → logprob: -5.1664605140686035
    6. ' <' → logprob: -5.4164605140686035
    7. '==' → logprob: -6.5414605140686035
    8. '<=' → logprob: -7.2914605140686035
    9. '>=' → logprob: -8.416460990905762
    10. ' ' → logprob: -8.541460990905762

Token 167: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.2519567906856537
    2. 'max' → logprob: -1.501956820487976
    3. '	max' → logprob: -11.501956939697266
    4. '=max' → logprob: -12.251956939697266
    5. '           ' → logprob: -12.626956939697266
    6. ' ' → logprob: -12.751956939697266
    7. '               ' → logprob: -13.251956939697266
    8. '
' → logprob: -14.001956939697266
    9. '(max' → logprob: -14.126956939697266
    10. '   ' → logprob: -14.251956939697266

Token 168: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -7.465036105713807e-06
    2. '_' → logprob: -12.250007629394531
    3. 're' → logprob: -14.125007629394531
    4. '_max' → logprob: -14.250007629394531
    5. ' _' → logprob: -14.625007629394531
    6. '_r' → logprob: -15.250007629394531
    7. '\' → logprob: -16.25000762939453
    8. ')' → logprob: -16.25000762939453
    9. 'max' → logprob: -16.62500762939453
    10. '_RE' → logprob: -16.75000762939453

Token 169: 'mainder' (ID: 40886)
  Prédit: 'mainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mainder' → logprob: -0.001080206478945911
    2. 'ma' → logprob: -6.87608003616333
    3. 'm' → logprob: -10.126080513000488
    4. ' ma' → logprob: -13.001080513000488
    5. 'main' → logprob: -13.001080513000488
    6. 'a' → logprob: -14.126080513000488
    7. 'mand' → logprob: -14.126080513000488
    8. 'inder' → logprob: -15.126080513000488
    9. '
' → logprob: -15.376080513000488
    10. 'st' → logprob: -15.876080513000488

Token 170: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20863136649131775
    2. ':' → logprob: -1.7086313962936401
    3. '                       ' → logprob: -5.45863151550293
    4. '                   ' → logprob: -6.08363151550293
    5. '):
' → logprob: -7.83363151550293
    6. ' :
' → logprob: -9.58363151550293
    7. ' and' → logprob: -9.70863151550293
    8. '               ' → logprob: -10.33363151550293
    9. ':
' → logprob: -10.95863151550293
    10. ' or' → logprob: -10.95863151550293

Token 171: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0005877026706002653
    2. '                        
' → logprob: -8.625587463378906
    3. ' break' → logprob: -8.750587463378906
    4. '                        ' → logprob: -9.375587463378906
    5. '                   ' → logprob: -9.625587463378906
    6. '                           ' → logprob: -10.375587463378906
    7. 'break' → logprob: -11.625587463378906
    8. '                    ' → logprob: -11.750587463378906
    9. '
' → logprob: -11.875587463378906
    10. ' return' → logprob: -12.125587463378906

Token 172: ' max' (ID: 2999)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.7282097339630127
    2. '                           ' → logprob: -0.7282097339630127
    3. ' max' → logprob: -3.4782097339630127
    4. 'max' (adapté à ' max') → logprob: -6.103209495544434
    5. '                               ' → logprob: -7.603209495544434
    6. '                   ' → logprob: -7.853209495544434
    7. '
' → logprob: -8.353209495544434
    8. '           ' → logprob: -9.478209495544434
    9. '               ' → logprob: -9.853209495544434
    10. '                        ' → logprob: -10.353209495544434

Token 173: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -1.5451681974809617e-05
    2. '_' → logprob: -11.250015258789062
    3. '_r' → logprob: -14.125015258789062
    4. ' _' → logprob: -15.000015258789062
    5. '_return' → logprob: -15.000015258789062
    6. '_rem' → logprob: -15.375015258789062
    7. '_remaining' → logprob: -15.625015258789062
    8. 're' → logprob: -16.000015258789062
    9. '_s' → logprob: -16.750015258789062
    10. '\' → logprob: -16.875015258789062

Token 174: 'mainder' (ID: 40886)
  Prédit: 'mainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mainder' → logprob: -0.0005150251090526581
    2. 'ma' → logprob: -7.750514984130859
    3. '_ma' → logprob: -10.25051498413086
    4. 'm' → logprob: -11.00051498413086
    5. 'main' → logprob: -11.87551498413086
    6. 'ema' → logprob: -12.12551498413086
    7. '_' → logprob: -12.25051498413086
    8. 're' → logprob: -12.62551498413086
    9. ' remainder' → logprob: -12.62551498413086
    10. 'em' → logprob: -12.75051498413086

Token 175: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687264919281006
    2. '=' → logprob: -1.13687264919281
    3. ' =
' → logprob: -14.511872291564941
    4. '=

' → logprob: -14.886872291564941
    5. '                        ' → logprob: -15.386872291564941
    6. ' ' → logprob: -15.386872291564941
    7. '                       ' → logprob: -16.011873245239258
    8. '                           ' → logprob: -16.511873245239258
    9. ',' → logprob: -16.886873245239258
    10. '=
' → logprob: -17.011873245239258

Token 176: ' remainder' (ID: 47056)
  Prédit: ' remainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.018152983859181404
    2. 're' → logprob: -4.018153190612793
    3. ' re' → logprob: -13.768153190612793
    4. '	re' → logprob: -13.893153190612793
    5. ' ' → logprob: -15.018153190612793
    6. 'rest' → logprob: -15.643153190612793
    7. 'rem' → logprob: -15.643153190612793
    8. ' ' → logprob: -16.518152236938477
    9. ' rest' → logprob: -16.643152236938477
    10. '   ' → logprob: -16.893152236938477

Token 177: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5507932901382446
    2. '
' → logprob: -0.9257932901382446
    3. '                    
' → logprob: -4.050793170928955
    4. '                        
' → logprob: -5.550793170928955
    5. '                       ' → logprob: -6.175793170928955
    6. ' 
' → logprob: -6.800793170928955
    7. '    
' → logprob: -7.050793170928955
    8. '                
' → logprob: -7.550793170928955
    9. '               ' → logprob: -7.925793170928955
    10. '                    ' → logprob: -8.675793647766113

Token 178: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00640922412276268
    2. '                       ' → logprob: -5.381409168243408
    3. '
' → logprob: -7.256409168243408
    4. '               ' → logprob: -7.381409168243408
    5. '                    
' → logprob: -8.381409645080566
    6. '                        
' → logprob: -9.006409645080566
    7. '                    ' → logprob: -10.381409645080566
    8. ',' → logprob: -10.881409645080566
    9. '```' → logprob: -11.756409645080566
    10. '                
' → logprob: -12.006409645080566

Token 179: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.44426390528678894
    2. 'if' → logprob: -1.1942639350891113
    3. ' if' → logprob: -3.3192639350891113
    4. '               ' → logprob: -4.194263935089111
    5. '
' → logprob: -6.444263935089111
    6. '                    
' → logprob: -7.069263935089111
    7. 'end' → logprob: -7.319263935089111
    8. '           ' → logprob: -7.819263935089111
    9. '                       ' → logprob: -7.944263935089111
    10. '   ' → logprob: -8.694263458251953

Token 180: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09672906994819641
    2. ' if' → logprob: -2.596729040145874
    3. 'end' → logprob: -4.346729278564453
    4. '                   ' → logprob: -5.471729278564453
    5. ' end' → logprob: -8.846729278564453
    6. 'break' → logprob: -9.346729278564453
    7. '               ' → logprob: -10.096729278564453
    8. 'If' → logprob: -10.221729278564453
    9. '                    ' → logprob: -10.346729278564453
    10. '   ' → logprob: -10.596729278564453

Token 181: ' adding' (ID: 12673)
  Prédit: ' remainder'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' remainder' → logprob: -0.03418407216668129
    2. 're' → logprob: -3.409183979034424
    3. ' total' → logprob: -7.784183979034424
    4. ' max' → logprob: -9.784184455871582
    5. 'total' → logprob: -11.159184455871582
    6. '   ' → logprob: -11.409184455871582
    7. 'max' → logprob: -11.534184455871582
    8. ' ' → logprob: -11.659184455871582
    9. ' re' → logprob: -11.784184455871582
    10. '	re' → logprob: -13.034184455871582

Token 182: ' more' (ID: 945)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7754114866256714
    2. '1' → logprob: -1.6504114866256714
    3. ' s' → logprob: -1.7754114866256714
    4. 's' → logprob: -2.150411605834961
    5. ' +' → logprob: -4.275411605834961
    6. ' self' → logprob: -4.650411605834961
    7. 'self' → logprob: -4.900411605834961
    8. ' a' → logprob: -5.650411605834961
    9. '+' → logprob: -5.650411605834961
    10. '_s' → logprob: -5.775411605834961

Token 183: ' trays' (ID: 122113)
  Prédit: ' s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.5806045532226562
    2. 's' → logprob: -2.4556045532226562
    3. ' ' → logprob: -2.9556045532226562
    4. '<|end|>' → logprob: -3.2056045532226562
    5. ' tokens' → logprob: -3.2056045532226562
    6. ' would' → logprob: -3.3306045532226562
    7. ' will' → logprob: -3.3306045532226562
    8. ' elements' → logprob: -3.8306045532226562
    9. '+' → logprob: -4.205604553222656
    10. ' to' → logprob: -4.330604553222656

Token 184: ' can' (ID: 665)
  Prédit: ' will'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' will' → logprob: -0.6633758544921875
    2. ' would' → logprob: -1.7883758544921875
    3. 'would' → logprob: -3.1633758544921875
    4. ' at' → logprob: -3.2883758544921875
    5. 'will' → logprob: -3.2883758544921875
    6. ' increases' → logprob: -3.6633758544921875
    7. ' doesn't' → logprob: -3.6633758544921875
    8. 'does' → logprob: -3.7883758544921875
    9. ' of' → logprob: -3.9133758544921875
    10. ' causes' → logprob: -4.1633758544921875

Token 185: ' only' (ID: 1606)
  Prédit: ' increase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' increase' → logprob: -0.41529959440231323
    2. 'increase' → logprob: -1.290299654006958
    3. ' yield' → logprob: -4.165299415588379
    4. ' only' → logprob: -5.540299415588379
    5. 'yield' → logprob: -5.665299415588379
    6. ' produce' → logprob: -5.665299415588379
    7. ' exceed' → logprob: -5.790299415588379
    8. '   ' → logprob: -5.915299415588379
    9. ' not' → logprob: -6.040299415588379
    10. ' ' → logprob: -6.040299415588379

Token 186: ' increase' (ID: 7064)
  Prédit: 'increase'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'increase' → logprob: -0.30294734239578247
    2. 'de' → logprob: -1.9279472827911377
    3. ' increase' → logprob: -2.4279472827911377
    4. ' decrease' → logprob: -3.9279472827911377
    5. 'im' → logprob: -5.552947521209717
    6. 'reduce' → logprob: -5.802947521209717
    7. ' improve' → logprob: -8.427947044372559
    8. ' reduce' → logprob: -8.427947044372559
    9. 'lower' → logprob: -8.927947044372559
    10. 'maint' → logprob: -9.677947044372559

Token 187: ' total' (ID: 3609)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -1.1090306043624878
    2. ' remainder' → logprob: -1.1090306043624878
    3. ' total' → logprob: -2.1090307235717773
    4. ' end' → logprob: -2.4840307235717773
    5. 'end' → logprob: -3.1090307235717773
    6. 'total' → logprob: -3.1090307235717773
    7. 'the' → logprob: -3.7340307235717773
    8. 're' → logprob: -4.234030723571777
    9. 'max' → logprob: -6.359030723571777
    10. ',' → logprob: -6.484030723571777

Token 188: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12480917572975159
    2. ' by' → logprob: -2.9998092651367188
    3. ' ,' → logprob: -3.7498092651367188
    4. 'by' → logprob: -4.499809265136719
    5. '                   ' → logprob: -5.124809265136719
    6. ' but' → logprob: -5.249809265136719
    7. '               ' → logprob: -5.249809265136719
    8. ' and' → logprob: -5.499809265136719
    9. ' or' → logprob: -5.749809265136719
    10. 'and' → logprob: -6.124809265136719

Token 189: ' keep' (ID: 3357)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.1006650924682617
    2. ' break' → logprob: -1.7256650924682617
    3. ' if' → logprob: -1.7256650924682617
    4. '                       ' → logprob: -1.8506650924682617
    5. ' end' → logprob: -3.1006650924682617
    6. 'end' → logprob: -3.9756650924682617
    7. '                    ' → logprob: -4.100665092468262
    8. 'break' → logprob: -4.100665092468262
    9. 'if' → logprob: -4.225665092468262
    10. '   ' → logprob: -4.725665092468262

Token 190: ' expanding' (ID: 35479)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.7405453324317932
    2. ' end' → logprob: -0.9905453324317932
    3. ' going' → logprob: -2.7405452728271484
    4. ' increasing' → logprob: -3.6155452728271484
    5. ' moving' → logprob: -4.240545272827148
    6. ' expanding' → logprob: -4.615545272827148
    7. 'going' → logprob: -4.615545272827148
    8. 'moving' → logprob: -5.115545272827148
    9. 'increment' → logprob: -5.365545272827148
    10. 'in' → logprob: -5.740545272827148

Token 191: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2701646387577057
    2. ' end' → logprob: -2.145164728164673
    3. '                    
' → logprob: -3.270164728164673
    4. 'end' → logprob: -3.520164728164673
    5. '                    ' → logprob: -3.770164728164673
    6. '               ' → logprob: -5.270164489746094
    7. '                ' → logprob: -5.520164489746094
    8. ' ' → logprob: -6.020164489746094
    9. '                     
' → logprob: -6.395164489746094
    10. ',' → logprob: -6.520164489746094

Token 192: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00920486357063055
    2. ' end' → logprob: -5.884204864501953
    3. '               ' → logprob: -6.134204864501953
    4. '                    
' → logprob: -6.384204864501953
    5. ',' → logprob: -7.634204864501953
    6. '   ' → logprob: -7.759204864501953
    7. '                    ' → logprob: -8.134204864501953
    8. '    ' → logprob: -8.759204864501953
    9. '                       ' → logprob: -8.884204864501953
    10. '           ' → logprob: -9.134204864501953

Token 193: ' end' (ID: 1268)
  Prédit: ' end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.5337068438529968
    2. ' if' → logprob: -1.9087069034576416
    3. 'end' (adapté à ' end') → logprob: -2.0337069034576416
    4. '                   ' → logprob: -2.1587069034576416
    5. 'if' → logprob: -4.2837066650390625
    6. '                    
' → logprob: -7.0337066650390625
    7. '                    ' → logprob: -7.1587066650390625
    8. '
' → logprob: -7.5337066650390625
    9. '   ' → logprob: -7.9087066650390625
    10. '               ' → logprob: -7.9087066650390625

Token 194: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.04741320013999939
    2. '+=' → logprob: -3.1724131107330322
    3. '+' → logprob: -5.797413349151611
    4. ' +' → logprob: -6.672413349151611
    5. '<|end|>' → logprob: -10.547412872314453
    6. '    ' → logprob: -11.172412872314453
    7. '   ' → logprob: -11.547412872314453
    8. '            ' → logprob: -11.797412872314453
    9. '=' → logprob: -11.797412872314453
    10. ' ' → logprob: -12.172412872314453

Token 195: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00043102685594931245
    2. ' ' → logprob: -7.750431060791016
    3. '   ' → logprob: -14.875431060791016
    4. '```' → logprob: -17.625431060791016
    5. '  ' → logprob: -18.000431060791016
    6. '<|end|>' → logprob: -18.125431060791016
    7. '           ' → logprob: -19.312931060791016
    8. '0' → logprob: -19.625431060791016
    9. '                   ' → logprob: -19.687931060791016
    10. '
' → logprob: -19.812931060791016

Token 196: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.56102097814437e-05
    2. ' ' → logprob: -10.000045776367188
    3. '```' → logprob: -16.625045776367188
    4. '   ' → logprob: -17.000045776367188
    5. '0' → logprob: -17.562545776367188
    6. '<|end|>' → logprob: -19.312545776367188
    7. '  ' → logprob: -19.375045776367188
    8. '
' → logprob: -19.437545776367188
    9. 's' → logprob: -19.875045776367188
    10. '           ' → logprob: -19.875045776367188

Token 197: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010532231070101261
    2. '
' → logprob: -4.635532379150391
    3. '<|end|>' → logprob: -7.260532379150391
    4. '                
' → logprob: -10.88553237915039
    5. ' else' → logprob: -11.38553237915039
    6. '                ' → logprob: -11.63553237915039
    7. ' 
' → logprob: -12.01053237915039
    8. '           ' → logprob: -12.63553237915039
    9. '```' → logprob: -12.88553237915039
    10. '<|end|>' → logprob: -12.88553237915039

Token 198: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009433844243176281
    2. '
' → logprob: -7.125943183898926
    3. '<|end|>' → logprob: -9.750943183898926
    4. '                
' → logprob: -10.875943183898926
    5. ' else' → logprob: -11.000943183898926
    6. '                   ' → logprob: -11.500943183898926
    7. '           ' → logprob: -11.750943183898926
    8. '                ' → logprob: -12.625943183898926
    9. 'else' → logprob: -13.000943183898926
    10. '  
' → logprob: -13.125943183898926

Token 199: ' start' (ID: 1604)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10422806441783905
    2. '       ' → logprob: -2.9792280197143555
    3. '           ' → logprob: -3.6042280197143555
    4. '
' → logprob: -3.9792280197143555
    5. '   ' → logprob: -6.7292280197143555
    6. 'start' (adapté à ' start') → logprob: -8.104228019714355
    7. '                
' → logprob: -8.979228019714355
    8. '            
' → logprob: -9.104228019714355
    9. '```' → logprob: -9.229228019714355
    10. '
' → logprob: -10.229228019714355

Token 200: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.02390810288488865
    2. '+=' → logprob: -3.7739081382751465
    3. '+' → logprob: -7.6489081382751465
    4. ' ' → logprob: -9.398907661437988
    5. ' +' → logprob: -9.898907661437988
    6. '   ' → logprob: -10.773907661437988
    7. '<|end|>' → logprob: -11.148907661437988
    8. ']+=' → logprob: -12.273907661437988
    9. '    ' → logprob: -12.773907661437988
    10. '<|end|>' → logprob: -13.273907661437988

Token 201: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. ' ' → logprob: -12.125005722045898
    3. '   ' → logprob: -16.8750057220459
    4. '```' → logprob: -18.5000057220459
    5. '<|end|>' → logprob: -18.8750057220459
    6. '0' → logprob: -19.1250057220459
    7. '           ' → logprob: -19.7500057220459
    8. '       ' → logprob: -20.1250057220459
    9. '۱' → logprob: -20.2500057220459
    10. '  ' → logprob: -20.8750057220459

Token 202: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.125001907348633
    3. '```' → logprob: -19.625001907348633
    4. '   ' → logprob: -20.250001907348633
    5. '0' → logprob: -20.750001907348633
    6. '۱' → logprob: -21.250001907348633
    7. '<|end|>' → logprob: -21.250001907348633
    8. '１' → logprob: -21.375001907348633
    9. '
' → logprob: -21.500001907348633
    10. '१' → logprob: -21.937501907348633

Token 203: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08312323689460754
    2. '<|end|>' → logprob: -2.583123207092285
    3. '           ' → logprob: -5.958123207092285
    4. '<|end|>' → logprob: -6.708123207092285
    5. '
' → logprob: -8.333123207092285
    6. '       ' → logprob: -10.583123207092285
    7. '	           ' → logprob: -10.583123207092285
    8. '            
' → logprob: -10.833123207092285
    9. '                
' → logprob: -11.208123207092285
    10. '                   ' → logprob: -11.333123207092285

Token 204: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.026101605966687202
    2. '<|end|>' → logprob: -4.151101589202881
    3. '           ' → logprob: -4.651101589202881
    4. '<|end|>' → logprob: -9.026102066040039
    5. '       ' → logprob: -9.651102066040039
    6. '	       ' → logprob: -10.276102066040039
    7. '```' → logprob: -10.401102066040039
    8. '	           ' → logprob: -10.401102066040039
    9. '            
' → logprob: -10.526102066040039
    10. '                   ' → logprob: -10.526102066040039

Token 205: ' #' (ID: 1069)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.0033655737061053514
    2. 'if' → logprob: -5.878365516662598
    3. '           ' → logprob: -8.378365516662598
    4. ' end' → logprob: -8.503365516662598
    5. '               ' → logprob: -9.378365516662598
    6. ' if' → logprob: -10.878365516662598
    7. '   ' → logprob: -10.878365516662598
    8. '       ' → logprob: -12.878365516662598
    9. ' ' → logprob: -14.503365516662598
    10. '#' (adapté à ' #') → logprob: -14.753365516662598

Token 206: ' Reset' (ID: 31369)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.1917875111103058
    2. 'if' → logprob: -1.8167874813079834
    3. ' if' → logprob: -5.0667877197265625
    4. ' end' → logprob: -5.3167877197265625
    5. '           ' → logprob: -7.5667877197265625
    6. '               ' → logprob: -9.441787719726562
    7. '   ' → logprob: -9.691787719726562
    8. '#' → logprob: -10.316787719726562
    9. '       ' → logprob: -10.816787719726562
    10. 'If' → logprob: -11.441787719726562

Token 207: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.002814624458551407
    2. ' end' → logprob: -5.877814769744873
    3. '           ' → logprob: -12.252814292907715
    4. '	end' → logprob: -13.502814292907715
    5. '(end' → logprob: -14.252814292907715
    6. '       ' → logprob: -14.502814292907715
    7. '=end' → logprob: -14.502814292907715
    8. '   ' → logprob: -15.002814292907715
    9. ':end' → logprob: -15.002814292907715
    10. '               ' → logprob: -15.127814292907715

Token 208: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5763033628463745
    2. ' =' → logprob: -0.8263033628463745
    3. '=start' → logprob: -8.076303482055664
    4. 'start' → logprob: -10.701303482055664
    5. '=end' → logprob: -10.701303482055664
    6. '=max' → logprob: -13.076303482055664
    7. '           ' → logprob: -13.701303482055664
    8. 's' → logprob: -14.201303482055664
    9. '<|end|>' → logprob: -14.576303482055664
    10. ' start' → logprob: -14.826303482055664

Token 209: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0002015139180002734
    2. 'max' → logprob: -8.625201225280762
    3. ' start' → logprob: -10.750201225280762
    4. '[start' → logprob: -15.250201225280762
    5. '   ' → logprob: -16.500202178955078
    6. ' max' → logprob: -16.625202178955078
    7. 'star' → logprob: -16.875202178955078
    8. '	start' → logprob: -17.125202178955078
    9. '=start' → logprob: -17.375202178955078
    10. ' ' → logprob: -17.625202178955078

Token 210: ' for' (ID: 395)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 211: ' next' (ID: 2613)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.7984795570373535
    2. 'each' → logprob: -1.9234795570373535
    3. ' each' → logprob: -1.9234795570373535
    4. ' the' → logprob: -2.2984795570373535
    5. 'end' → logprob: -2.7984795570373535
    6. 'the' → logprob: -3.2984795570373535
    7. ' start' → logprob: -3.4234795570373535
    8. ' end' → logprob: -4.2984795570373535
    9. 'next' → logprob: -5.0484795570373535
    10. ' next' → logprob: -6.0484795570373535

Token 212: ' sub' (ID: 1543)
  Prédit: ' iteration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' iteration' → logprob: -0.1862277090549469
    2. 'iteration' → logprob: -2.811227798461914
    3. 'start' → logprob: -3.061227798461914
    4. 'range' → logprob: -4.186227798461914
    5. ' loop' → logprob: -4.311227798461914
    6. ' start' → logprob: -4.311227798461914
    7. 'sub' → logprob: -5.186227798461914
    8. ' range' → logprob: -5.311227798461914
    9. 'line' → logprob: -6.311227798461914
    10. ' line' → logprob: -6.436227798461914

Token 213: 'range' (ID: 20967)
  Prédit: 'range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004987424239516258
    2. 'ranges' → logprob: -5.6299872398376465
    3. '               ' → logprob: -7.6299872398376465
    4. '       ' → logprob: -7.7549872398376465
    5. '_range' → logprob: -8.629987716674805
    6. '           ' → logprob: -9.379987716674805
    7. 'start' → logprob: -9.754987716674805
    8. ' range' → logprob: -9.754987716674805
    9. 'set' → logprob: -10.379987716674805
    10. 'rang' → logprob: -11.129987716674805

Token 214: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03881387040019035
    2. '<|end|>' → logprob: -3.413813829421997
    3. ' =' → logprob: -6.288814067840576
    4. '	       ' → logprob: -7.163814067840576
    5. '<|end|>' → logprob: -7.163814067840576
    6. '           ' → logprob: -7.788814067840576
    7. '=' → logprob: -8.288813591003418
    8. '		       ' → logprob: -8.288813591003418
    9. '       ' → logprob: -8.663813591003418
    10. '[end' → logprob: -9.038813591003418

Token 215: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012934788130223751
    2. '<|end|>' → logprob: -4.387934684753418
    3. '<|end|>' → logprob: -8.512934684753418
    4. '           ' → logprob: -9.887934684753418
    5. '       ' → logprob: -10.137934684753418
    6. '	       ' → logprob: -10.762934684753418
    7. '                ' → logprob: -10.762934684753418
    8. '		       ' → logprob: -10.887934684753418
    9. '                
' → logprob: -11.262934684753418
    10. '              ' → logprob: -11.262934684753418

Token 216: ' end' (ID: 1268)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' (adapté à ' end') → logprob: -0.008616461418569088
    2. ' end' → logprob: -4.7586164474487305
    3. '=end' → logprob: -13.50861644744873
    4. '	end' → logprob: -15.88361644744873
    5. '(end' → logprob: -16.133617401123047
    6. '[end' → logprob: -16.383617401123047
    7. '   ' → logprob: -16.508617401123047
    8. '
' → logprob: -16.633617401123047
    9. 'endon' → logprob: -17.258617401123047
    10. '```' → logprob: -17.383617401123047

Token 217: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0380457378923893
    2. ' =' → logprob: -3.288045644760132
    3. '=start' → logprob: -12.413045883178711
    4. '=end' → logprob: -16.03804588317871
    5. '=s' → logprob: -17.03804588317871
    6. '＝' → logprob: -17.03804588317871
    7. '=
' → logprob: -17.66304588317871
    8. ' ' → logprob: -18.66304588317871
    9. '=int' → logprob: -19.28804588317871
    10. '.=' → logprob: -19.66304588317871

Token 218: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.000158842682139948
    2. ' start' → logprob: -8.75015926361084
    3. '[start' → logprob: -15.25015926361084
    4. '<|end|>' → logprob: -17.250158309936523
    5. '=start' → logprob: -17.250158309936523
    6. '0' → logprob: -17.500158309936523
    7. '(start' → logprob: -18.500158309936523
    8. 'star' → logprob: -18.500158309936523
    9. '	start' → logprob: -18.625158309936523
    10. ':start' → logprob: -18.750158309936523

Token 219: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.042338836938142776
    2. '
' → logprob: -3.2923388481140137
    3. 'return' → logprob: -6.042338848114014
    4. '       ' → logprob: -7.417338848114014
    5. '            
' → logprob: -7.667338848114014
    6. ' return' → logprob: -8.042338371276855
    7. '<|end|>' → logprob: -8.417338371276855
    8. '        
' → logprob: -9.667338371276855
    9. '    
' → logprob: -10.167338371276855
    10. '	       ' → logprob: -10.292338371276855

Token 220: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010203057900071144
    2. 'return' → logprob: -7.501020431518555
    3. '       ' → logprob: -7.751020431518555
    4. ' return' → logprob: -10.751020431518555
    5. '   ' → logprob: -11.501020431518555
    6. '```' → logprob: -13.251020431518555
    7. '               ' → logprob: -13.751020431518555
    8. '	       ' → logprob: -14.126020431518555
    9. '<|end|>' → logprob: -14.251020431518555
    10. '	return' → logprob: -15.251020431518555

Token 221: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009257194586098194
    2. 'return' (adapté à ' return') → logprob: -5.0092573165893555
    3. '       ' → logprob: -6.0092573165893555
    4. ' return' → logprob: -10.009257316589355
    5. '   ' → logprob: -10.259257316589355
    6. '	return' → logprob: -14.134257316589355
    7. '	       ' → logprob: -14.759257316589355
    8. '		' → logprob: -15.134257316589355
    9. '          ' → logprob: -15.259257316589355
    10. '               ' → logprob: -15.384257316589355

Token 222: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6931476593017578
    2. 'max' → logprob: -0.6931476593017578
    3. '(max' → logprob: -15.443147659301758
    4. '	max' → logprob: -16.068147659301758
    5. '[max' → logprob: -16.193147659301758
    6. '           ' → logprob: -17.318147659301758
    7. ',max' → logprob: -17.693147659301758
    8. '_max' → logprob: -18.068147659301758
    9. ' ' → logprob: -18.318147659301758
    10. '=max' → logprob: -18.818147659301758

Token 223: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -1.4974866644479334e-05
    2. '_remaining' → logprob: -12.250015258789062
    3. '_max' → logprob: -12.625015258789062
    4. '_' → logprob: -13.000015258789062
    5. '_return' → logprob: -13.250015258789062
    6. '_r' → logprob: -14.625015258789062
    7. '_rem' → logprob: -14.750015258789062
    8. 're' → logprob: -15.000015258789062
    9. '_rest' → logprob: -15.375015258789062
    10. '_possible' → logprob: -15.375015258789062

Token 224: 'mainder' (ID: 40886)
  Prédit: 'mainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mainder' → logprob: -0.0036929550115019083
    2. 'ma' → logprob: -5.628693103790283
    3. 'a' → logprob: -9.503692626953125
    4. ' ma' → logprob: -11.878692626953125
    5. '_ma' → logprob: -12.128692626953125
    6. 'm' → logprob: -12.878692626953125
    7. 'inder' → logprob: -14.003692626953125
    8. 'ema' → logprob: -14.753692626953125
    9. 'mand' → logprob: -14.878692626953125
    10. '
' → logprob: -14.878692626953125

Token 225: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 226: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 227: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4280116856098175
    2. '<|end|>' → logprob: -1.8030116558074951
    3. 'class' (adapté à ' class') → logprob: -2.428011655807495
    4. '
' → logprob: -2.678011655807495
    5. ' class' → logprob: -4.303011894226074
    6. '    
' → logprob: -5.803011894226074
    7. ' ' → logprob: -6.178011894226074
    8. '```' → logprob: -6.303011894226074
    9. '       ' → logprob: -7.053011894226074
    10. '<|end|>' → logprob: -7.178011894226074

Token 228: ' Prefix' (ID: 121368)
  Prédit: ' Prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Prefix' → logprob: -0.17983485758304596
    2. 'Prefix' → logprob: -1.8048348426818848
    3. '_prefix' → logprob: -10.554835319519043
    4. ' ' → logprob: -11.429835319519043
    5. ' S' → logprob: -11.429835319519043
    6. ' Pref' → logprob: -11.804835319519043
    7. 'Prefixes' → logprob: -11.929835319519043
    8. 'prefix' → logprob: -12.554835319519043
    9. 'Suffix' → logprob: -12.867335319519043
    10. 'PREFIX' → logprob: -12.992335319519043

Token 229: 'Sum' (ID: 17434)
  Prédit: 'Sum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Sum' → logprob: -5.9153885558771435e-06
    2. '_sum' → logprob: -12.250005722045898
    3. ' Sum' → logprob: -14.625005722045898
    4. 'sum' → logprob: -14.875005722045898
    5. 'S' → logprob: -16.0000057220459
    6. '_S' → logprob: -16.6250057220459
    7. '   ' → logprob: -17.1250057220459
    8. ' sum' → logprob: -18.3750057220459
    9. 'Summ' → logprob: -18.6250057220459
    10. ' ' → logprob: -19.8750057220459

Token 230: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0031986311078071594
    2. ':
' → logprob: -5.753198623657227
    3. '(object' → logprob: -11.628198623657227
    4. '(' → logprob: -12.378198623657227
    5. ':def' → logprob: -12.378198623657227
    6. '   ' → logprob: -13.878198623657227
    7. ' :' → logprob: -14.253198623657227
    8. '():' → logprob: -14.628198623657227
    9. '```' → logprob: -15.253198623657227
    10. 'def' → logprob: -15.253198623657227

Token 231: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002079716883599758
    2. ' def' → logprob: -7.002079486846924
    3. 'def' → logprob: -7.377079486846924
    4. '       ' → logprob: -7.752079486846924
    5. ':' → logprob: -9.752079963684082
    6. ':
' → logprob: -10.627079963684082
    7. '	def' → logprob: -11.502079963684082
    8. '```' → logprob: -11.502079963684082
    9. '    
' → logprob: -13.252079963684082
    10. ':def' → logprob: -13.377079963684082

Token 232: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.07893738150596619
    2. ' def' → logprob: -2.578937292098999
    3. '   ' → logprob: -10.078937530517578
    4. 'class' → logprob: -12.203937530517578
    5. '	def' → logprob: -14.328937530517578
    6. '```' → logprob: -16.703937530517578
    7. ' ' → logprob: -16.828937530517578
    8. '__' → logprob: -18.203937530517578
    9. '       ' → logprob: -19.203937530517578
    10. '  ' → logprob: -19.203937530517578

Token 233: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.35426387190818787
    2. ' __' → logprob: -1.3542639017105103
    3. 'def' → logprob: -3.6042637825012207
    4. ' def' → logprob: -4.354263782501221
    5. 'init' → logprob: -9.729264259338379
    6. '_init' → logprob: -10.104264259338379
    7. ' ' → logprob: -12.354264259338379
    8. '___' → logprob: -12.479264259338379
    9. '```' → logprob: -13.354264259338379
    10. 'staticmethod' → logprob: -13.479264259338379

Token 234: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. ' init' → logprob: -16.125
    3. '_init' → logprob: -19.25
    4. '	init' → logprob: -20.625
    5. '```' → logprob: -20.75
    6. '(init' → logprob: -21.875
    7. 'int' → logprob: -22.375
    8. '__' → logprob: -22.625
    9. 'inite' → logprob: -22.75
    10. '`' → logprob: -23.125

Token 235: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.014181148260831833
    2. '(self' → logprob: -4.264181137084961
    3. '__' → logprob: -11.889181137084961
    4. '__(
' → logprob: -12.264181137084961
    5. '__((' → logprob: -12.889181137084961
    6. '_(' → logprob: -13.514181137084961
    7. ' (' → logprob: -14.264181137084961
    8. 'self' → logprob: -14.264181137084961
    9. '(' → logprob: -15.139181137084961
    10. '   ' → logprob: -15.514181137084961

Token 236: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -8.673547563375905e-05
    2. ' self' → logprob: -9.375086784362793
    3. '(self' → logprob: -14.000086784362793
    4. '       ' → logprob: -14.500086784362793
    5. '   ' → logprob: -15.500086784362793
    6. ',' → logprob: -15.750086784362793
    7. ',self' → logprob: -16.125085830688477
    8. '	self' → logprob: -17.625085830688477
    9. 'def' → logprob: -18.750085830688477
    10. '           ' → logprob: -18.875085830688477

Token 237: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001499864156357944
    2. 'self' → logprob: -6.751499652862549
    3. ' ,' → logprob: -8.251500129699707
    4. ',self' → logprob: -10.126500129699707
    5. '(self' → logprob: -11.001500129699707
    6. ',s' → logprob: -12.251500129699707
    7. '_,' → logprob: -12.876500129699707
    8. ' self' → logprob: -13.376500129699707
    9. '__,' → logprob: -13.501500129699707
    10. '   ' → logprob: -14.376500129699707

Token 238: ' array' (ID: 2644)
  Prédit: 'arr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'arr' → logprob: -0.3713984489440918
    2. 'nums' → logprob: -1.3713984489440918
    3. ' arr' → logprob: -3.371398448944092
    4. ' nums' → logprob: -4.121398448944092
    5. 'lst' → logprob: -5.496398448944092
    6. 'data' → logprob: -6.871398448944092
    7. 'array' → logprob: -8.37139892578125
    8. ' lst' → logprob: -8.49639892578125
    9. 'numbers' → logprob: -8.87139892578125
    10. ' data' → logprob: -9.37139892578125

Token 239: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.05002167820930481
    2. '):' → logprob: -3.0500216484069824
    3. ',' → logprob: -6.925021648406982
    4. '       ' → logprob: -8.42502212524414
    5. '):
' → logprob: -8.92502212524414
    6. ' ):
' → logprob: -10.17502212524414
    7. '   ' → logprob: -10.30002212524414
    8. ' ):' → logprob: -11.30002212524414
    9. '):

' → logprob: -13.05002212524414
    10. 'self' → logprob: -13.05002212524414

Token 240: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0024494959507137537
    2. 'self' → logprob: -6.5024495124816895
    3. '       ' → logprob: -7.2524495124816895
    4. ' self' → logprob: -8.627449035644531
    5. '	       ' → logprob: -10.502449035644531
    6. ':' → logprob: -12.002449035644531
    7. '(self' → logprob: -12.127449035644531
    8. ':
' → logprob: -12.752449035644531
    9. '):
' → logprob: -12.877449035644531
    10. '   ' → logprob: -12.877449035644531

Token 241: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2844710946083069
    2. ' self' → logprob: -1.409471035003662
    3. '           ' → logprob: -5.784471035003662
    4. '   ' → logprob: -9.40947151184082
    5. '[self' → logprob: -9.90947151184082
    6. '	self' → logprob: -10.15947151184082
    7. '       ' → logprob: -10.40947151184082
    8. ' ' → logprob: -10.78447151184082
    9. '[' → logprob: -11.90947151184082
    10. '(self' → logprob: -13.15947151184082

Token 242: '.prefix' (ID: 84410)
  Prédit: '.prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.prefix' → logprob: -0.04044478014111519
    2. '.arr' → logprob: -4.165444850921631
    3. '.array' → logprob: -4.790444850921631
    4. '.' → logprob: -5.540444850921631
    5. 'prefix' → logprob: -5.790444850921631
    6. '.data' → logprob: -6.290444850921631
    7. ' .' → logprob: -6.415444850921631
    8. 'arr' → logprob: -6.665444850921631
    9. '.n' → logprob: -6.790444850921631
    10. '.pres' → logprob: -7.540444850921631

Token 243: ' =' (ID: 314)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.3313138782978058
    2. ' =' → logprob: -1.5813138484954834
    3. 's' → logprob: -3.0813138484954834
    4. '=' → logprob: -3.5813138484954834
    5. '_sum' → logprob: -6.9563140869140625
    6. '=[' → logprob: -8.206314086914062
    7. '_' → logprob: -8.331314086914062
    8. '   ' → logprob: -8.456314086914062
    9. '=[]' → logprob: -8.706314086914062
    10. '=[]
' → logprob: -8.956314086914062

Token 244: ' self' (ID: 1051)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006734438240528107
    2. ' [' → logprob: -5.006734371185303
    3. '[array' → logprob: -10.881734848022461
    4. '0' → logprob: -15.756734848022461
    5. 'array' → logprob: -16.00673484802246
    6. '[self' → logprob: -17.25673484802246
    7. '[a' → logprob: -17.75673484802246
    8. '[int' → logprob: -18.63173484802246
    9. '[len' → logprob: -18.88173484802246
    10. ' ' → logprob: -18.88173484802246

Token 245: '._' (ID: 2697)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01434671226888895
    2. '.prefix' → logprob: -5.389346599578857
    3. 'prefix' → logprob: -5.764346599578857
    4. '.append' → logprob: -6.764346599578857
    5. '=[' → logprob: -6.889346599578857
    6. ' [' → logprob: -7.139346599578857
    7. ' =' → logprob: -7.264346599578857
    8. '.array' → logprob: -7.264346599578857
    9. 's' → logprob: -8.014347076416016
    10. '=' → logprob: -8.014347076416016

Token 246: 'make' (ID: 14172)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'build' → logprob: -0.5905921459197998
    2. 'compute' → logprob: -0.8405921459197998
    3. 'prefix' → logprob: -4.590592384338379
    4. 'calculate' → logprob: -6.090592384338379
    5. 'acc' → logprob: -6.340592384338379
    6. 'init' → logprob: -9.465592384338379
    7. 'generate' → logprob: -9.465592384338379
    8. 'calc' → logprob: -10.090592384338379
    9. 'partial' → logprob: -10.590592384338379
    10. 'compile' → logprob: -10.840592384338379

Token 247: '_prefix' (ID: 33197)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07012126594781876
    2. 'array' → logprob: -3.8201212882995605
    3. '[array' → logprob: -3.8201212882995605
    4. ' [' → logprob: -4.0701212882995605
    5. '_prefix' → logprob: -5.4451212882995605
    6. 'prefix' → logprob: -6.4451212882995605
    7. ' array' → logprob: -7.9451212882995605
    8. '_array' → logprob: -8.445120811462402
    9. '[len' → logprob: -9.695120811462402
    10. '_[' → logprob: -10.695120811462402

Token 248: '(array' (ID: 13176)
  Prédit: '_array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_array' → logprob: -1.281819462776184
    2. '_sum' → logprob: -1.531819462776184
    3. '(array' → logprob: -1.531819462776184
    4. 'array' → logprob: -1.656819462776184
    5. 'sum' → logprob: -2.5318193435668945
    6. 's' → logprob: -4.2818193435668945
    7. '_s' → logprob: -5.2818193435668945
    8. '=array' → logprob: -8.031819343566895
    9. '_' → logprob: -8.156819343566895
    10. '[array' → logprob: -10.031819343566895

Token 249: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003637097543105483
    2. ' )' → logprob: -8.50036334991455
    3. ')
' → logprob: -8.87536334991455
    4. '       ' → logprob: -11.75036334991455
    5. '[' → logprob: -13.00036334991455
    6. '   ' → logprob: -13.37536334991455
    7. '<|end|>' → logprob: -13.37536334991455
    8. '           ' → logprob: -13.50036334991455
    9. ')

' → logprob: -13.87536334991455
    10. '+' → logprob: -14.37536334991455

Token 250: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8274385929107666
    2. '<|end|>' → logprob: -1.3274385929107666
    3. '       ' → logprob: -2.2024385929107666
    4. '[' → logprob: -2.8274385929107666
    5. 'def' → logprob: -3.3274385929107666
    6. '```' → logprob: -3.7024385929107666
    7. '(' → logprob: -4.5774383544921875
    8. '<|end|>' → logprob: -4.5774383544921875
    9. '_' → logprob: -4.7024383544921875
    10. '[
' → logprob: -5.0774383544921875

Token 251: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.14439283311367035
    2. '   ' → logprob: -2.519392728805542
    3. ' def' → logprob: -3.394392728805542
    4. '       ' → logprob: -5.269392967224121
    5. '[' → logprob: -5.519392967224121
    6. '[
' → logprob: -5.644392967224121
    7. 'array' → logprob: -6.269392967224121
    8. '
' → logprob: -6.644392967224121
    9. '(array' → logprob: -6.894392967224121
    10. '```' → logprob: -7.644392967224121

Token 252: ' _' (ID: 1175)
  Prédit: '_make'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_make' → logprob: -7.465036105713807e-06
    2. ' _' → logprob: -12.500007629394531
    3. 'make' → logprob: -12.750007629394531
    4. '_m' → logprob: -15.625007629394531
    5. '_sum' → logprob: -15.875007629394531
    6. 'def' → logprob: -16.00000762939453
    7. '_' → logprob: -16.00000762939453
    8. 'Make' → logprob: -16.50000762939453
    9. '_get' → logprob: -16.75000762939453
    10. '_find' → logprob: -17.75000762939453

Token 253: 'make' (ID: 14172)
  Prédit: 'make'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'make' → logprob: -4.320199877838604e-07
    2. ' make' → logprob: -15.0
    3. '	make' → logprob: -17.75
    4. '(make' → logprob: -18.0
    5. '_make' → logprob: -18.625
    6. 'def' → logprob: -19.5
    7. '.make' → logprob: -19.875
    8. '```' → logprob: -20.75
    9. '[' → logprob: -21.5
    10. 'init' → logprob: -21.75

Token 254: '_prefix' (ID: 33197)
  Prédit: '_prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_prefix' → logprob: -3.786196975852363e-05
    2. '_array' → logprob: -10.625038146972656
    3. 'prefix' → logprob: -11.500038146972656
    4. '_' → logprob: -13.000038146972656
    5. '_list' → logprob: -15.250038146972656
    6. '_sum' → logprob: -15.625038146972656
    7. 'array' → logprob: -15.750038146972656
    8. '_pref' → logprob: -16.125038146972656
    9. '_suffix' → logprob: -16.625038146972656
    10. '```' → logprob: -16.625038146972656

Token 255: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0058254641480743885
    2. '(' → logprob: -5.255825519561768
    3. '(
' → logprob: -8.13082504272461
    4. '<|end|>' → logprob: -8.75582504272461
    5. 'self' → logprob: -9.38082504272461
    6. '(array' → logprob: -10.88082504272461
    7. '[' → logprob: -11.75582504272461
    8. 'def' → logprob: -12.00582504272461
    9. ' (' → logprob: -12.25582504272461
    10. '[self' → logprob: -12.50582504272461

Token 256: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01292702741920948
    2. ',array' → logprob: -4.387927055358887
    3. ' ,' → logprob: -8.012927055358887
    4. '(self' → logprob: -10.637927055358887
    5. ',self' → logprob: -10.637927055358887
    6. 'self' → logprob: -11.137927055358887
    7. '(array' → logprob: -11.887927055358887
    8. '):
' → logprob: -12.012927055358887
    9. ',
' → logprob: -12.012927055358887
    10. '<|end|>' → logprob: -13.887927055358887

Token 257: ' array' (ID: 2644)
  Prédit: 'array'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'array' → logprob: -0.29289403557777405
    2. 'self' → logprob: -1.5428940057754517
    3. ' array' → logprob: -3.792894124984741
    4. 'lambda' → logprob: -4.417893886566162
    5. ' self' → logprob: -6.167893886566162
    6. '[' → logprob: -6.667893886566162
    7. '[array' → logprob: -6.917893886566162
    8. ' lambda' → logprob: -7.292893886566162
    9. '[
' → logprob: -9.29289436340332
    10. '[self' → logprob: -9.41789436340332

Token 258: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.12719760835170746
    2. '):' → logprob: -2.127197504043579
    3. '):
' → logprob: -8.377197265625
    4. ' ):
' → logprob: -11.502197265625
    5. ':' → logprob: -11.752197265625
    6. '       ' → logprob: -12.127197265625
    7. '):

' → logprob: -12.502197265625
    8. ':
' → logprob: -13.002197265625
    9. ' ):' → logprob: -13.127197265625
    10. '   ' → logprob: -13.252197265625

Token 259: '           ' (ID: 352)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24148999154567719
    2. '[]' → logprob: -2.741489887237549
    3. ' [' → logprob: -3.241489887237549
    4. '       ' → logprob: -3.366489887237549
    5. '           ' → logprob: -3.491489887237549
    6. '[]
' → logprob: -4.491489887237549
    7. '[array' → logprob: -4.491489887237549
    8. 'array' → logprob: -4.991489887237549
    9. ':
' → logprob: -5.116489887237549
    10. '[
' → logprob: -5.741489887237549

Token 260: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' (adapté à ' prefix') → logprob: -0.17189429700374603
    2. '[' → logprob: -2.1718943119049072
    3. ' prefix' → logprob: -3.2968943119049072
    4. ' [' → logprob: -5.421894073486328
    5. '[p' → logprob: -6.921894073486328
    6. '       ' → logprob: -7.171894073486328
    7. 'result' → logprob: -8.046894073486328
    8. '           ' → logprob: -8.421894073486328
    9. '(prefix' → logprob: -9.421894073486328
    10. '
' → logprob: -9.796894073486328

Token 261: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04340573772788048
    2. '=' → logprob: -3.168405771255493
    3. '_sum' → logprob: -9.043405532836914
    4. '=[]' → logprob: -9.418405532836914
    5. '=[]
' → logprob: -9.918405532836914
    6. '   ' → logprob: -10.418405532836914
    7. 's' → logprob: -10.543405532836914
    8. 'sum' → logprob: -10.543405532836914
    9. '_s' → logprob: -11.168405532836914
    10. '_' → logprob: -11.168405532836914

Token 262: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005234002135694027
    2. ' [' → logprob: -5.2552337646484375
    3. '0' → logprob: -16.630233764648438
    4. '[array' → logprob: -17.005233764648438
    5. '[]' → logprob: -17.505233764648438
    6. ' ' → logprob: -17.630233764648438
    7. '[len' → logprob: -18.255233764648438
    8. '[]
' → logprob: -18.380233764648438
    9. '   ' → logprob: -18.630233764648438
    10. '[self' → logprob: -19.630233764648438

Token 263: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '[' → logprob: -19.125001907348633
    4. '   ' → logprob: -20.000001907348633
    5. '۰' → logprob: -20.750001907348633
    6. '
' → logprob: -21.625001907348633
    7. '(' → logprob: -22.312501907348633
    8. '           ' → logprob: -22.375001907348633
    9. '00' → logprob: -22.437501907348633
    10. '000' → logprob: -22.500001907348633

Token 264: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.018195131793618202
    2. ']
' → logprob: -4.018195152282715
    3. ' ]' → logprob: -10.518195152282715
    4. ']+' → logprob: -12.518195152282715
    5. ']

' → logprob: -12.518195152282715
    6. ']
' → logprob: -12.893195152282715
    7. '0' → logprob: -13.143195152282715
    8. ' ]
' → logprob: -13.268195152282715
    9. ']int' → logprob: -13.768195152282715
    10. '
' → logprob: -14.518195152282715

Token 265: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014984237030148506
    2. ' for' → logprob: -4.389984130859375
    3. 'for' → logprob: -6.264984130859375
    4. '```' → logprob: -9.139984130859375
    5. '	       ' → logprob: -9.514984130859375
    6. '<|end|>' → logprob: -9.514984130859375
    7. '[' → logprob: -9.514984130859375
    8. '
' → logprob: -9.639984130859375
    9. '       ' → logprob: -10.264984130859375
    10. '+' → logprob: -10.264984130859375

Token 266: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3162733018398285
    2. ' for' → logprob: -1.3162733316421509
    3. '           ' → logprob: -5.816273212432861
    4. '   ' → logprob: -10.94127368927002
    5. '```' → logprob: -12.19127368927002
    6. '	for' → logprob: -12.56627368927002
    7. '               ' → logprob: -14.31627368927002
    8. '       ' → logprob: -15.31627368927002
    9. 'total' → logprob: -15.31627368927002
    10. 'acc' → logprob: -15.44127368927002

Token 267: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.6048678159713745
    2. ' num' → logprob: -1.3548678159713745
    3. 'x' → logprob: -2.104867935180664
    4. ' x' → logprob: -2.604867935180664
    5. ' val' → logprob: -9.979867935180664
    6. 'value' → logprob: -10.479867935180664
    7. 'val' → logprob: -11.479867935180664
    8. ' value' → logprob: -12.104867935180664
    9. 'i' → logprob: -12.729867935180664
    10. 'v' → logprob: -14.229867935180664

Token 268: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0004895264864899218
    2. 'in' → logprob: -7.625489711761475
    3. ' ' → logprob: -14.875489234924316
    4. ' ' → logprob: -14.875489234924316
    5. ',' → logprob: -15.625489234924316
    6. '	in' → logprob: -15.625489234924316
    7. 's' → logprob: -15.875489234924316
    8. ' i' → logprob: -16.500490188598633
    9. 'import' → logprob: -16.500490188598633
    10. '<|end|>' → logprob: -17.125490188598633

Token 269: ' array' (ID: 2644)
  Prédit: ' array'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' array' → logprob: -0.20142386853694916
    2. 'array' → logprob: -1.7014238834381104
    3. ' ' → logprob: -11.701423645019531
    4. '   ' → logprob: -13.701423645019531
    5. '	array' → logprob: -14.576423645019531
    6. '(array' → logprob: -15.951423645019531
    7. '  ' → logprob: -16.07642364501953
    8. ' prefix' → logprob: -16.07642364501953
    9. '[array' → logprob: -16.07642364501953
    10. 'prefix' → logprob: -16.57642364501953

Token 270: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18380606174468994
    2. ':
' → logprob: -1.80880606174469
    3. '               ' → logprob: -5.8088059425354
    4. ' in' → logprob: -7.4338059425354
    5. ',' → logprob: -8.183806419372559
    6. '           ' → logprob: -9.183806419372559
    7. ':
' → logprob: -11.058806419372559
    8. '            ' → logprob: -11.433806419372559
    9. '.append' → logprob: -11.433806419372559
    10. 'in' → logprob: -12.183806419372559

Token 271: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.6951200366020203
    2. ' prefix' → logprob: -0.6951200366020203
    3. 'prefix' → logprob: -6.320119857788086
    4. '(prefix' → logprob: -9.945119857788086
    5. '   ' → logprob: -10.070119857788086
    6. '           ' → logprob: -10.570119857788086
    7. '            ' → logprob: -11.195119857788086
    8. '                ' → logprob: -11.445119857788086
    9. '
' → logprob: -11.820119857788086
    10. ' ' → logprob: -12.570119857788086

Token 272: ' prefix' (ID: 18633)
  Prédit: ' prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prefix' → logprob: -0.11387217789888382
    2. 'prefix' (adapté à ' prefix') → logprob: -2.2388722896575928
    3. '               ' → logprob: -6.988872051239014
    4. '   ' → logprob: -9.238872528076172
    5. '                   ' → logprob: -10.988872528076172
    6. '(prefix' → logprob: -12.488872528076172
    7. '           ' → logprob: -12.863872528076172
    8. '```' → logprob: -13.113872528076172
    9. '                ' → logprob: -13.363872528076172
    10. ' ' → logprob: -14.488872528076172

Token 273: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0001923352392623201
    2. '.' → logprob: -8.625192642211914
    3. ' .' → logprob: -12.000192642211914
    4. 'append' → logprob: -13.125192642211914
    5. '[-' → logprob: -13.250192642211914
    6. '.app' → logprob: -14.000192642211914
    7. '.extend' → logprob: -14.500192642211914
    8. ' append' → logprob: -14.875192642211914
    9. 'Append' → logprob: -15.000192642211914
    10. '_append' → logprob: -15.375192642211914

Token 274: '(prefix' (ID: 59324)
  Prédit: '(prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(prefix' → logprob: -0.42012932896614075
    2. ' prefix' → logprob: -1.1701292991638184
    3. 'prefix' → logprob: -3.4201292991638184
    4. '(' → logprob: -12.795129776000977
    5. '_prefix' → logprob: -15.295129776000977
    6. '.prefix' → logprob: -16.795129776000977
    7. '               ' → logprob: -17.670129776000977
    8. 'Prefix' → logprob: -18.170129776000977
    9. '                   ' → logprob: -18.295129776000977
    10. 'PREFIX' → logprob: -18.670129776000977

Token 275: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: 0.0
    2. ' [-' → logprob: -19.75
    3. '[' → logprob: -21.75
    4. '+' → logprob: -22.25
    5. '   ' → logprob: -22.375
    6. '
' → logprob: -22.5
    7. '[len' → logprob: -22.875
    8. '[
' → logprob: -23.125
    9. '][-' → logprob: -24.25
    10. '[:-' → logprob: -24.25

Token 276: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08450529724359512
    2. 'num' → logprob: -2.584505319595337
    3. ' ' → logprob: -5.959505081176758
    4. '   ' → logprob: -6.584505081176758
    5. ' num' → logprob: -7.334505081176758
    6. ' +' → logprob: -8.209505081176758
    7. 'token' → logprob: -8.959505081176758
    8. 's' → logprob: -9.084505081176758
    9. '       ' → logprob: -9.209505081176758
    10. '+' → logprob: -9.209505081176758

Token 277: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.01814994215965271
    2. '+' → logprob: -4.0181498527526855
    3. ' ' → logprob: -17.643150329589844
    4. ' ' → logprob: -17.768150329589844
    5. '   ' → logprob: -18.768150329589844
    6. '               ' → logprob: -18.893150329589844
    7. ' +
' → logprob: -19.518150329589844
    8. ' plus' → logprob: -20.018150329589844
    9. '    ' → logprob: -20.393150329589844
    10. '                ' → logprob: -20.393150329589844

Token 278: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12692810595035553
    2. '+' → logprob: -2.1269280910491943
    3. ' ' → logprob: -17.126928329467773
    4. ' ' → logprob: -17.876928329467773
    5. '+
' → logprob: -18.126928329467773
    6. ' +
' → logprob: -18.251928329467773
    7. ' plus' → logprob: -18.876928329467773
    8. '               ' → logprob: -19.251928329467773
    9. '＋' → logprob: -19.501928329467773
    10. '   ' → logprob: -20.251928329467773

Token 279: ' num' (ID: 2269)
  Prédit: 'num'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'num' → logprob: -0.0040785204619169235
    2. ' num' → logprob: -5.504078388214111
    3. '	num' → logprob: -18.004077911376953
    4. '   ' → logprob: -18.504077911376953
    5. ' ' → logprob: -19.254077911376953
    6. '(num' → logprob: -19.504077911376953
    7. '               ' → logprob: -20.379077911376953
    8. '           ' → logprob: -20.504077911376953
    9. '_num' → logprob: -20.504077911376953
    10. 'int' → logprob: -21.004077911376953

Token 280: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0036056553944945335
    2. ')
' → logprob: -5.628605842590332
    3. '           ' → logprob: -12.878605842590332
    4. ' )' → logprob: -13.503605842590332
    5. ')return' → logprob: -14.253605842590332
    6. '               ' → logprob: -14.503605842590332
    7. ')

' → logprob: -15.753605842590332
    8. ')
' → logprob: -16.503604888916016
    9. '
' → logprob: -17.003604888916016
    10. '),' → logprob: -17.128604888916016

Token 281: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007710146252065897
    2. ' return' → logprob: -5.507709980010986
    3. '       ' → logprob: -6.132709980010986
    4. 'return' → logprob: -6.882709980010986
    5. '<|end|>' → logprob: -9.257710456848145
    6. '
' → logprob: -9.382710456848145
    7. '		' → logprob: -9.507710456848145
    8. '   ' → logprob: -9.882710456848145
    9. '	return' → logprob: -9.882710456848145
    10. '```' → logprob: -11.007710456848145

Token 282: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6911078095436096
    2. ' return' → logprob: -0.9411078095436096
    3. 'return' (adapté à ' return') → logprob: -2.316107749938965
    4. '       ' → logprob: -4.941107749938965
    5. '
' → logprob: -6.816107749938965
    6. '   ' → logprob: -6.941107749938965
    7. '	return' → logprob: -7.191107749938965
    8. '		' → logprob: -9.566107749938965
    9. '               ' → logprob: -9.941107749938965
    10. ' ' → logprob: -11.066107749938965

Token 283: ' prefix' (ID: 18633)
  Prédit: 'prefix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prefix' → logprob: -0.02324547804892063
    2. ' prefix' → logprob: -3.7732455730438232
    3. '(prefix' → logprob: -17.523244857788086
    4. ' ' → logprob: -19.648244857788086
    5. '_prefix' → logprob: -20.148244857788086
    6. '   ' → logprob: -20.523244857788086
    7. '.prefix' → logprob: -21.148244857788086
    8. 'refix' → logprob: -21.273244857788086
    9. '  ' → logprob: -21.648244857788086
    10. '
' → logprob: -22.398244857788086

Token 284: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4786381125450134
    2. '
' → logprob: -0.9786381125450134
    3. '        
' → logprob: -5.978638172149658
    4. 'def' → logprob: -7.353638172149658
    5. '   ' → logprob: -7.728638172149658
    6. '    
' → logprob: -8.2286376953125
    7. '```' → logprob: -8.2286376953125
    8. '

' → logprob: -8.9786376953125
    9. '
' → logprob: -9.2286376953125
    10. '<|end|>' → logprob: -9.6036376953125

Token 285: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009710181504487991
    2. '
' → logprob: -5.634710311889648
    3. '        
' → logprob: -5.634710311889648
    4. 'def' → logprob: -6.259710311889648
    5. '   ' → logprob: -8.009710311889648
    6. '    
' → logprob: -9.259710311889648
    7. ' def' → logprob: -9.884710311889648
    8. '<|end|>' → logprob: -10.384710311889648
    9. ' 
' → logprob: -10.509710311889648
    10. '            
' → logprob: -11.384710311889648

Token 286: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.03880561143159866
    2. '       ' → logprob: -3.2888057231903076
    3. ' def' → logprob: -7.5388054847717285
    4. '   ' → logprob: -8.413805961608887
    5. '
' → logprob: -11.788805961608887
    6. ' ' → logprob: -13.413805961608887
    7. '        
' → logprob: -14.538805961608887
    8. '	def' → logprob: -15.413805961608887
    9. '     ' → logprob: -16.16380500793457
    10. '  ' → logprob: -16.53880500793457

Token 287: ' sum' (ID: 4215)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.3132637143135071
    2. ' sum' → logprob: -1.3132636547088623
    3. ' ' → logprob: -14.313263893127441
    4. '.sum' → logprob: -14.313263893127441
    5. '_sum' → logprob: -15.313263893127441
    6. '	sum' → logprob: -15.813263893127441
    7. 's' → logprob: -15.938263893127441
    8. '(sum' → logprob: -16.063262939453125
    9. '=sum' → logprob: -16.938262939453125
    10. 'def' → logprob: -16.938262939453125

Token 288: '_range' (ID: 22022)
  Prédit: '_range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_range' → logprob: -1.3306015716807451e-05
    2. '_' → logprob: -11.37501335144043
    3. '_ranges' → logprob: -13.75001335144043
    4. ' _' → logprob: -15.37501335144043
    5. '_RANGE' → logprob: -15.50001335144043
    6. 'range' → logprob: -16.25001335144043
    7. '_r' → logprob: -16.87501335144043
    8. '_interval' → logprob: -17.12501335144043
    9. '	range' → logprob: -17.75001335144043
    10. ')_' → logprob: -17.87501335144043

Token 289: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.023642346262931824
    2. '(' → logprob: -3.7736423015594482
    3. '(start' → logprob: -8.398642539978027
    4. ' (' → logprob: -8.898642539978027
    5. '(s' → logprob: -10.523642539978027
    6. '(
' → logprob: -12.148642539978027
    7. '(sel' → logprob: -14.773642539978027
    8. '<|end|>' → logprob: -14.773642539978027
    9. '(end' → logprob: -15.023642539978027
    10. '(Self' → logprob: -15.148642539978027

Token 290: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.011232078075408936
    2. '(start' → logprob: -4.636231899261475
    3. ' (' → logprob: -7.011231899261475
    4. '(' → logprob: -7.761231899261475
    5. ',' → logprob: -9.886232376098633
    6. ')' → logprob: -10.136232376098633
    7. ')(' → logprob: -10.386232376098633
    8. '(s' → logprob: -11.636232376098633
    9. '(i' → logprob: -12.511232376098633
    10. '       ' → logprob: -13.011232376098633

Token 291: ' left' (ID: 3561)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.7131264209747314
    2. 'i' → logprob: -1.4631264209747314
    3. 'left' → logprob: -1.9631264209747314
    4. ' start' → logprob: -2.9631264209747314
    5. ' left' → logprob: -3.0881264209747314
    6. ' i' → logprob: -3.4631264209747314
    7. 'l' → logprob: -4.838126182556152
    8. 'self' → logprob: -7.088126182556152
    9. ' l' → logprob: -8.213126182556152
    10. 'a' → logprob: -8.463126182556152

Token 292: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012797261297237128
    2. ' ,' → logprob: -9.000127792358398
    3. ',right' → logprob: -12.875127792358398
    4. ',end' → logprob: -14.000127792358398
    5. ',left' → logprob: -14.375127792358398
    6. ',
' → logprob: -15.000127792358398
    7. ',int' → logprob: -15.500127792358398
    8. ',index' → logprob: -17.6251277923584
    9. ',to' → logprob: -18.6251277923584
    10. '   ' → logprob: -18.7501277923584

Token 293: ' right' (ID: 1849)
  Prédit: ' right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.4740908145904541
    2. 'right' → logprob: -0.9740908145904541
    3. '	right' → logprob: -11.599090576171875
    4. '   ' → logprob: -13.724090576171875
    5. '[right' → logprob: -14.224090576171875
    6. ',right' → logprob: -14.724090576171875
    7. '_right' → logprob: -14.974090576171875
    8. 'end' → logprob: -14.974090576171875
    9. ' ' → logprob: -15.099090576171875
    10. '(right' → logprob: -15.099090576171875

Token 294: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20143896341323853
    2. '):
' → logprob: -1.7014389038085938
    3. ')' → logprob: -11.826438903808594
    4. ' ):' → logprob: -11.826438903808594
    5. '):
' → logprob: -11.951438903808594
    6. '):

' → logprob: -13.201438903808594
    7. '       ' → logprob: -13.951438903808594
    8. ' ):
' → logprob: -14.076438903808594
    9. '+' → logprob: -14.326438903808594
    10. '   ' → logprob: -15.201438903808594

Token 295: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4010540544986725
    2. '):' → logprob: -2.0260541439056396
    3. ')' → logprob: -2.7760541439056396
    4. '<|end|>' → logprob: -3.2760541439056396
    5. '       ' → logprob: -3.6510541439056396
    6. '[' → logprob: -3.6510541439056396
    7. '(' → logprob: -4.5260539054870605
    8. '           ' → logprob: -5.0260539054870605
    9. ':return' → logprob: -5.6510539054870605
    10. ' (' → logprob: -6.0260539054870605

Token 296: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.026375075802206993
    2. 'return' → logprob: -3.6513750553131104
    3. '           ' → logprob: -10.651374816894531
    4. ' 
' → logprob: -10.776374816894531
    5. '
' → logprob: -11.901374816894531
    6. '	return' → logprob: -12.151374816894531
    7. '       ' → logprob: -12.901374816894531
    8. ' ' → logprob: -12.901374816894531
    9. ':return' → logprob: -12.901374816894531
    10. '    ' → logprob: -13.526374816894531

Token 297: ' sum' (ID: 4215)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2519330680370331
    2. ' return' → logprob: -1.5019330978393555
    3. '	return' → logprob: -13.126933097839355
    4. 'if' → logprob: -14.751933097839355
    5. '           ' → logprob: -14.876933097839355
    6. '   ' → logprob: -15.001933097839355
    7. '       ' → logprob: -15.251933097839355
    8. 'Return' → logprob: -15.626933097839355
    9. ' if' → logprob: -15.626933097839355
    10. ' ' → logprob: -16.25193214416504

Token 298: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2558101713657379
    2. '(prefix' → logprob: -2.255810260772705
    3. '=' → logprob: -2.880810260772705
    4. '(self' → logprob: -3.755810260772705
    5. 'prefix' → logprob: -4.130810260772705
    6. 's' → logprob: -4.880810260772705
    7. '_prefix' → logprob: -5.380810260772705
    8. ' prefix' → logprob: -6.130810260772705
    9. '           ' → logprob: -6.255810260772705
    10. ')' → logprob: -6.755810260772705

Token 299: ' array' (ID: 2644)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.0714847594499588
    2. 'self' → logprob: -2.6964848041534424
    3. ' prefix' → logprob: -6.571484565734863
    4. 'prefix' → logprob: -8.946484565734863
    5. ' range' → logprob: -12.696484565734863
    6. '(self' → logprob: -12.696484565734863
    7. ' right' → logprob: -12.946484565734863
    8. '	self' → logprob: -13.196484565734863
    9. ' ' → logprob: -13.571484565734863
    10. '[self' → logprob: -13.696484565734863

Token 300: '[left' (ID: 98859)
  Prédit: '[right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -0.07942891120910645
    2. '[left' → logprob: -2.8294289112091064
    3. '[' → logprob: -4.079428672790527
    4. 'right' → logprob: -8.829428672790527
    5. '[:' → logprob: -10.204428672790527
    6. 's' → logprob: -10.454428672790527
    7. '=' → logprob: -10.829428672790527
    8. ')' → logprob: -11.329428672790527
    9. '[self' → logprob: -11.329428672790527
    10. ' right' → logprob: -11.454428672790527

Token 301: ':right' (ID: 107608)
  Prédit: ':right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':right' → logprob: -0.0006944431224837899
    2. ':' → logprob: -7.500694274902344
    3. 'right' → logprob: -10.125694274902344
    4. ',right' → logprob: -10.375694274902344
    5. ' :' → logprob: -10.750694274902344
    6. '[right' → logprob: -10.875694274902344
    7. '+' → logprob: -11.250694274902344
    8. ',' → logprob: -12.250694274902344
    9. ':left' → logprob: -12.250694274902344
    10. ' right' → logprob: -13.125694274902344

Token 302: '+' (ID: 10)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.07994496077299118
    2. '])' → logprob: -2.5799448490142822
    3. ')' → logprob: -6.954945087432861
    4. ' ]' → logprob: -9.829944610595703
    5. '+' → logprob: -10.704944610595703
    6. ')]' → logprob: -11.829944610595703
    7. ' ])' → logprob: -12.079944610595703
    8. ']
' → logprob: -12.454944610595703
    9. '[' → logprob: -13.704944610595703
    10. ' )' → logprob: -13.829944610595703

Token 303: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007466176757588983
    2. ']' → logprob: -7.250746726989746
    3. ' ' → logprob: -10.750746726989746
    4. '+' → logprob: -12.125746726989746
    5. '])' → logprob: -12.250746726989746
    6. ')' → logprob: -12.500746726989746
    7. '-' → logprob: -14.875746726989746
    8. 'right' → logprob: -15.625746726989746
    9. '   ' → logprob: -15.875746726989746
    10. '```' → logprob: -15.875746726989746

Token 304: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5655877590179443
    2. '+' → logprob: -1.4405877590179443
    3. ' +' → logprob: -2.3155877590179443
    4. ')' → logprob: -3.0655877590179443
    5. '])' → logprob: -3.1905877590179443
    6. ' ]' → logprob: -5.065587997436523
    7. ' )' → logprob: -6.565587997436523
    8. ' ])' → logprob: -7.440587997436523
    9. '<|end|>' → logprob: -8.690587997436523
    10. ')]' → logprob: -9.065587997436523

Token 305: '           ' (ID: 352)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.3747175931930542
    2. '+' → logprob: -2.2497177124023438
    3. '<|end|>' → logprob: -2.2497177124023438
    4. '           ' → logprob: -3.7497177124023438
    5. '[' → logprob: -3.7497177124023438
    6. ' =' → logprob: -4.374717712402344
    7. ')' → logprob: -4.499717712402344
    8. ' ' → logprob: -4.874717712402344
    9. '       ' → logprob: -4.999717712402344
    10. ' return' → logprob: -5.624717712402344

Token 306: ' #' (ID: 1069)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.01663985848426819
    2. 'return' → logprob: -4.266639709472656
    3. ' right' → logprob: -6.391639709472656
    4. ' left' → logprob: -7.641639709472656
    5. 'right' → logprob: -9.516639709472656
    6. ' ' → logprob: -9.641639709472656
    7. ')' → logprob: -10.141639709472656
    8. 'left' → logprob: -10.141639709472656
    9. '           ' → logprob: -10.516639709472656
    10. '<|end|>' → logprob: -10.891639709472656

Token 307: ' Because' (ID: 13602)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.04871942475438118
    2. 'return' → logprob: -3.0487194061279297
    3. '           ' → logprob: -10.29871940612793
    4. '       ' → logprob: -10.42371940612793
    5. '	return' → logprob: -10.54871940612793
    6. '<|end|>' → logprob: -12.04871940612793
    7. ')' → logprob: -12.29871940612793
    8. '        ' → logprob: -12.42371940612793
    9. '            ' → logprob: -12.67371940612793
    10. '   ' → logprob: -12.67371940612793

Token 308: ' prefix' (ID: 18633)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.2546699643135071
    2. 'right' → logprob: -1.5046699047088623
    3. ' self' → logprob: -6.254670143127441
    4. ' prefix' → logprob: -8.004670143127441
    5. 'self' → logprob: -8.504670143127441
    6. ' left' → logprob: -9.379670143127441
    7. 'prefix' → logprob: -9.629670143127441
    8. 'left' → logprob: -9.879670143127441
    9. ' the' → logprob: -10.879670143127441
    10. '	right' → logprob: -11.004670143127441

Token 309: ' array' (ID: 2644)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.7368700504302979
    2. '[right' → logprob: -1.4868700504302979
    3. '[' → logprob: -1.9868700504302979
    4. '[-' → logprob: -2.486870050430298
    5. 's' → logprob: -2.861870050430298
    6. '[self' → logprob: -5.361869812011719
    7. '[left' → logprob: -5.486869812011719
    8. '[end' → logprob: -6.361869812011719
    9. '[_' → logprob: -6.486869812011719
    10. '       ' → logprob: -7.111869812011719

Token 310: ' length' (ID: 5517)
  Prédit: '[right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[right' → logprob: -0.012729541398584843
    2. ' is' → logprob: -5.387729644775391
    3. ' has' → logprob: -5.512729644775391
    4. '[end' → logprob: -6.637729644775391
    5. 'right' → logprob: -7.012729644775391
    6. ' right' → logprob: -7.012729644775391
    7. ' uses' → logprob: -8.88772964477539
    8. '[left' → logprob: -8.88772964477539
    9. '[' → logprob: -9.01272964477539
    10. '```' → logprob: -9.26272964477539

Token 311: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.9458134174346924
    2. ' >' → logprob: -1.0708134174346924
    3. ' -' → logprob: -2.3208134174346924
    4. '>' → logprob: -2.4458134174346924
    5. ' ==' → logprob: -3.1958134174346924
    6. '-' → logprob: -4.820813179016113
    7. ' >=' → logprob: -5.195813179016113
    8. '==' → logprob: -5.695813179016113
    9. '```' → logprob: -6.070813179016113
    10. '[right' → logprob: -6.070813179016113

Token 312: ' n' (ID: 297)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.09352191537618637
    2. ' right' → logprob: -2.7185218334198
    3. 'len' → logprob: -4.218522071838379
    4. '1' → logprob: -5.843522071838379
    5. '[right' → logprob: -6.468522071838379
    6. ' len' → logprob: -6.593522071838379
    7. ' one' → logprob: -6.718522071838379
    8. 'one' → logprob: -7.718522071838379
    9. '(right' → logprob: -8.718522071838379
    10. 'greater' → logprob: -8.843522071838379

Token 313: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.691417932510376
    2. ' +' → logprob: -0.816417932510376
    3. '[right' → logprob: -3.566417932510376
    4. ' -' → logprob: -4.441417694091797
    5. '-' → logprob: -4.941417694091797
    6. ' ' → logprob: -6.191417694091797
    7. '[left' → logprob: -6.191417694091797
    8. 'right' → logprob: -6.566417694091797
    9. '   ' → logprob: -6.691417694091797
    10. ' right' → logprob: -7.816417694091797

Token 314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.578184497309849e-05
    2. ' ' → logprob: -9.375085830688477
    3. '   ' → logprob: -14.625085830688477
    4. '2' → logprob: -16.375085830688477
    5. '       ' → logprob: -16.625085830688477
    6. '```' → logprob: -16.875085830688477
    7. '0' → logprob: -17.000085830688477
    8. '           ' → logprob: -17.250085830688477
    9. '
' → logprob: -17.250085830688477
    10. '+' → logprob: -17.875085830688477

Token 315: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.700379490852356
    2. '           ' → logprob: -1.450379490852356
    3. ' and' → logprob: -2.5753793716430664
    4. ')' → logprob: -3.8253793716430664
    5. ' -' → logprob: -3.8253793716430664
    6. '
' → logprob: -3.9503793716430664
    7. '[left' → logprob: -3.9503793716430664
    8. '       ' → logprob: -4.200379371643066
    9. ' return' → logprob: -4.325379371643066
    10. '[' → logprob: -4.575379371643066

Token 316: ' and' (ID: 326)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.11221351474523544
    2. 'right' → logprob: -2.612213611602783
    3. ' return' → logprob: -3.487213611602783
    4. 'return' → logprob: -6.362213611602783
    5. '[right' → logprob: -7.987213611602783
    6. ')' → logprob: -10.862213134765625
    7. '            ' → logprob: -10.862213134765625
    8. '           ' → logprob: -11.362213134765625
    9. '	right' → logprob: -11.362213134765625
    10. '(right' → logprob: -11.487213134765625

Token 317: ' prefix' (ID: 18633)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.6327308416366577
    2. ' right' → logprob: -0.7577308416366577
    3. '	right' → logprob: -10.257730484008789
    4. 'left' → logprob: -10.507730484008789
    5. '(right' → logprob: -11.257730484008789
    6. '[right' → logprob: -11.257730484008789
    7. ' the' → logprob: -11.507730484008789
    8. ' left' → logprob: -11.632730484008789
    9. 'the' → logprob: -12.382730484008789
    10. '_right' → logprob: -12.382730484008789

Token 318: '[i' (ID: 1768)
  Prédit: '[right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[right' → logprob: -0.004287096206098795
    2. '[left' → logprob: -6.754287242889404
    3. '[' → logprob: -6.879287242889404
    4. '_s' → logprob: -7.004287242889404
    5. 's' → logprob: -7.129287242889404
    6. 'right' → logprob: -9.004286766052246
    7. '[end' → logprob: -10.129286766052246
    8. '_sum' → logprob: -10.629286766052246
    9. ')' → logprob: -10.629286766052246
    10. '   ' → logprob: -10.879286766052246

Token 319: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.34551140666007996
    2. 's' → logprob: -1.9705114364624023
    3. '+' → logprob: -2.5955114364624023
    4. '[right' → logprob: -2.9705114364624023
    5. '[left' → logprob: -4.345511436462402
    6. '[' → logprob: -5.970511436462402
    7. ' is' → logprob: -6.470511436462402
    8. '-' → logprob: -6.720511436462402
    9. ' +' → logprob: -6.845511436462402
    10. '[start' → logprob: -7.220511436462402

Token 320: ' is' (ID: 382)
  Prédit: '[right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -0.1241569072008133
    2. 's' → logprob: -2.999156951904297
    3. ' is' → logprob: -3.624156951904297
    4. '[left' → logprob: -4.499156951904297
    5. 'right' → logprob: -5.124156951904297
    6. ']' → logprob: -5.124156951904297
    7. ' represents' → logprob: -5.499156951904297
    8. '[end' → logprob: -5.624156951904297
    9. '```' → logprob: -6.624156951904297
    10. ')' → logprob: -6.874156951904297

Token 321: ' sum' (ID: 4215)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6591838598251343
    2. 'prefix' → logprob: -1.7841838598251343
    3. ' sum' → logprob: -2.034183979034424
    4. 'the' → logprob: -2.534183979034424
    5. 'sum' → logprob: -2.909183979034424
    6. ' prefix' → logprob: -3.034183979034424
    7. ' cumulative' → logprob: -6.534183979034424
    8. ' total' → logprob: -8.659183502197266
    9. ' sums' → logprob: -9.159183502197266
    10. '   ' → logprob: -9.284183502197266

Token 322: ' up' (ID: 869)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.4371268153190613
    2. 's' → logprob: -3.062126874923706
    3. ' between' → logprob: -3.062126874923706
    4. 'prefix' → logprob: -3.062126874923706
    5. '[right' → logprob: -3.312126874923706
    6. '(prefix' → logprob: -3.562126874923706
    7. ' from' → logprob: -3.687126874923706
    8. '   ' → logprob: -4.062126636505127
    9. ' prefix' → logprob: -4.187126636505127
    10. '       ' → logprob: -4.187126636505127

Token 323: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.015295258723199368
    2. ' to' → logprob: -4.390295028686523
    3. '_to' → logprob: -6.140295028686523
    4. '   ' → logprob: -7.890295028686523
    5. '           ' → logprob: -10.015295028686523
    6. '       ' → logprob: -10.140295028686523
    7. 'd' → logprob: -10.265295028686523
    8. '  ' → logprob: -10.765295028686523
    9. '          ' → logprob: -10.890295028686523
    10. ' ' → logprob: -11.265295028686523

Token 324: ' i' (ID: 575)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.6424480676651001
    2. 'right' → logprob: -0.7674480676651001
    3. ' i' → logprob: -5.1424479484558105
    4. 'i' → logprob: -5.7674479484558105
    5. ' index' → logprob: -7.5174479484558105
    6. 'index' → logprob: -8.517448425292969
    7. 'left' → logprob: -10.267448425292969
    8. '[right' → logprob: -11.392448425292969
    9. '	right' → logprob: -11.517448425292969
    10. ' left' → logprob: -11.767448425292969

Token 325: '-' (ID: 12)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6083992123603821
    2. ']' → logprob: -1.1083991527557373
    3. 'right' → logprob: -3.1083991527557373
    4. ' +' → logprob: -3.4833991527557373
    5. '-' → logprob: -4.358399391174316
    6. '],' → logprob: -4.483399391174316
    7. ' ]' → logprob: -5.358399391174316
    8. ' right' → logprob: -5.733399391174316
    9. ' -' → logprob: -5.858399391174316
    10. ')' → logprob: -5.858399391174316

Token 326: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7874031662940979
    2. 'left' → logprob: -0.9124031662940979
    3. 'right' → logprob: -2.412403106689453
    4. 'index' → logprob: -3.537403106689453
    5. ' left' → logprob: -4.787403106689453
    6. 'i' → logprob: -5.162403106689453
    7. ' right' → logprob: -5.412403106689453
    8. 'idx' → logprob: -6.537403106689453
    9. 'token' → logprob: -6.787403106689453
    10. ' ' → logprob: -6.912403106689453

Token 327: '
' (ID: 198)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.7052552103996277
    2. ' +' → logprob: -1.2052552700042725
    3. '+' → logprob: -2.2052552700042725
    4. ' ]' → logprob: -3.8302552700042725
    5. ':' → logprob: -4.205255031585693
    6. '           ' → logprob: -4.455255031585693
    7. ']:' → logprob: -4.455255031585693
    8. '],' → logprob: -5.330255031585693
    9. ')' → logprob: -5.455255031585693
    10. '   ' → logprob: -5.580255031585693

Token 328: '           ' (ID: 352)
  Prédit: '[left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -0.24134767055511475
    2. '           ' → logprob: -2.1163477897644043
    3. '[right' → logprob: -2.9913477897644043
    4. '[start' → logprob: -4.866347789764404
    5. ' +' → logprob: -4.866347789764404
    6. '       ' → logprob: -4.991347789764404
    7. ')' → logprob: -5.366347789764404
    8. '   ' → logprob: -5.616347789764404
    9. ' [' → logprob: -6.116347789764404
    10. '[' → logprob: -6.491347789764404

Token 329: ' return' (ID: 622)
  Prédit: ' right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' right' → logprob: -0.33014413714408875
    2. 'right' → logprob: -1.9551441669464111
    3. ' return' → logprob: -2.080144166946411
    4. 'return' (adapté à ' return') → logprob: -4.455143928527832
    5. '[right' → logprob: -6.455143928527832
    6. ')' → logprob: -7.455143928527832
    7. '(right' → logprob: -8.330143928527832
    8. '   ' → logprob: -9.080143928527832
    9. ' ' → logprob: -9.330143928527832
    10. '       ' → logprob: -9.580143928527832

Token 330: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.07889121770858765
    2. 'self' → logprob: -2.5788912773132324
    3. '           ' → logprob: -14.203890800476074
    4. '(self' → logprob: -14.578890800476074
    5. ' prefix' → logprob: -15.703890800476074
    6. '	self' → logprob: -16.57889175415039
    7. '   ' → logprob: -16.95389175415039
    8. 'prefix' → logprob: -17.20389175415039
    9. '[self' → logprob: -17.45389175415039
    10. ' ' → logprob: -17.45389175415039

Token 331: '.prefix' (ID: 84410)
  Prédit: '.prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.prefix' → logprob: -0.0007410150719806552
    2. '.' → logprob: -7.750741004943848
    3. ' .' → logprob: -8.125741004943848
    4. 'prefix' → logprob: -11.500741004943848
    5. ' prefix' → logprob: -13.375741004943848
    6. '.sum' → logprob: -13.625741004943848
    7. '.prec' → logprob: -15.000741004943848
    8. '.period' → logprob: -15.125741004943848
    9. '.p' → logprob: -15.375741004943848
    10. '
' → logprob: -16.125741958618164

Token 332: '[right' (ID: 112866)
  Prédit: '[right'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[right' → logprob: -5.3954463510308415e-05
    2. 'right' → logprob: -10.125054359436035
    3. '[left' → logprob: -11.500054359436035
    4. ' right' → logprob: -13.500054359436035
    5. '[' → logprob: -13.750054359436035
    6. ' [' → logprob: -14.125054359436035
    7. '   ' → logprob: -16.00005340576172
    8. ',right' → logprob: -16.50005340576172
    9. '	right' → logprob: -16.75005340576172
    10. '[end' → logprob: -17.12505340576172

Token 333: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.10093637555837631
    2. ' +' → logprob: -2.3509364128112793
    3. ']' → logprob: -7.225936412811279
    4. ']+' → logprob: -14.100935935974121
    5. ' ]' → logprob: -15.100935935974121
    6. '+]' → logprob: -15.100935935974121
    7. '   ' → logprob: -15.350935935974121
    8. '[' → logprob: -15.475935935974121
    9. '1' → logprob: -16.725936889648438
    10. ')' → logprob: -17.225936889648438

Token 334: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00033558503491804004
    2. ' ' → logprob: -8.000335693359375
    3. '<|end|>' → logprob: -16.625335693359375
    4. '   ' → logprob: -17.500335693359375
    5. '
' → logprob: -17.625335693359375
    6. ']' → logprob: -17.625335693359375
    7. '```' → logprob: -18.375335693359375
    8. '+' → logprob: -18.500335693359375
    9. '0' → logprob: -18.625335693359375
    10. '  ' → logprob: -19.125335693359375

Token 335: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '<|end|>' → logprob: -16.625001907348633
    4. '```' → logprob: -20.125001907348633
    5. '   ' → logprob: -20.500001907348633
    6. '0' → logprob: -21.000001907348633
    7. '[' → logprob: -21.500001907348633
    8. '  ' → logprob: -21.625001907348633
    9. ']' → logprob: -21.875001907348633
    10. '<|end|>' → logprob: -22.000001907348633

Token 336: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0006058142753317952
    2. ' ]' → logprob: -8.000605583190918
    3. ' -' → logprob: -8.250605583190918
    4. '-' → logprob: -12.375605583190918
    5. ']-' → logprob: -12.500605583190918
    6. ')' → logprob: -14.375605583190918
    7. '[' → logprob: -15.500605583190918
    8. ' ' → logprob: -16.125606536865234
    9. '   ' → logprob: -16.125606536865234
    10. '        ' → logprob: -16.250606536865234

Token 337: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0025244110729545355
    2. '-' → logprob: -6.002524375915527
    3. ' ' → logprob: -10.752524375915527
    4. ' ' → logprob: -11.377524375915527
    5. '   ' → logprob: -12.002524375915527
    6. '        ' → logprob: -13.252524375915527
    7. '    ' → logprob: -13.377524375915527
    8. '       ' → logprob: -13.877524375915527
    9. '           ' → logprob: -14.127524375915527
    10. '  ' → logprob: -14.127524375915527

Token 338: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04858805239200592
    2. ' self' → logprob: -3.0485880374908447
    3. '	self' → logprob: -15.048587799072266
    4. '           ' → logprob: -15.548587799072266
    5. '[self' → logprob: -16.298587799072266
    6. '(self' → logprob: -16.423587799072266
    7. ' ' → logprob: -17.048587799072266
    8. '   ' → logprob: -17.173587799072266
    9. '  ' → logprob: -17.798587799072266
    10. '=self' → logprob: -17.923587799072266

Token 339: '.prefix' (ID: 84410)
  Prédit: '.prefix'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.prefix' → logprob: -0.00010664248111424968
    2. 'prefix' → logprob: -9.250106811523438
    3. 'refix' → logprob: -11.500106811523438
    4. '.' → logprob: -15.750106811523438
    5. ' .' → logprob: -16.250106811523438
    6. ' prefix' → logprob: -17.125106811523438
    7. '(prefix' → logprob: -18.875106811523438
    8. 'REFIX' → logprob: -19.125106811523438
    9. '_prefix' → logprob: -19.125106811523438
    10. '.prec' → logprob: -20.125106811523438

Token 340: '[left' (ID: 98859)
  Prédit: '[left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[left' → logprob: -0.0001358400477329269
    2. '[right' → logprob: -9.00013542175293
    3. 'left' → logprob: -11.37513542175293
    4. '[' → logprob: -14.00013542175293
    5. ' left' → logprob: -18.00013542175293
    6. '	left' → logprob: -18.50013542175293
    7. '[
' → logprob: -19.00013542175293
    8. '(left' → logprob: -19.25013542175293
    9. 'right' → logprob: -19.75013542175293
    10. '[start' → logprob: -19.75013542175293

Token 341: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.06113944575190544
    2. '<|end|>' → logprob: -2.9361393451690674
    3. ')' → logprob: -5.5611395835876465
    4. ' ]' → logprob: -6.5611395835876465
    5. '}' → logprob: -7.1861395835876465
    6. '<|end|>' → logprob: -8.686139106750488
    7. '[' → logprob: -11.186139106750488
    8. '']' → logprob: -11.436139106750488
    9. ' )' → logprob: -12.061139106750488
    10. ' }' → logprob: -12.311139106750488

Token 342: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 343: ' class' (ID: 744)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 344: ' Input' (ID: 10090)
  Prédit: ' Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Solution' → logprob: -1.3137767314910889
    2. ' Delivery' → logprob: -1.5637767314910889
    3. ' S' → logprob: -2.313776731491089
    4. ' Order' → logprob: -2.938776731491089
    5. ' Sub' → logprob: -3.188776731491089
    6. 'Solution' → logprob: -3.438776731491089
    7. 'Delivery' → logprob: -3.688776731491089
    8. 'Order' → logprob: -3.938776731491089
    9. 'S' → logprob: -4.063776969909668
    10. ' Customer' → logprob: -4.563776969909668

Token 345: 'Parser' (ID: 9231)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.050175659358501434
    2. ':
' → logprob: -3.175175666809082
    3. 'Reader' → logprob: -5.800175666809082
    4. 'Handler' → logprob: -6.425175666809082
    5. '):' → logprob: -7.175175666809082
    6. 'Parser' → logprob: -7.175175666809082
    7. 'Processor' → logprob: -7.800175666809082
    8. '   ' → logprob: -9.050175666809082
    9. '():' → logprob: -9.175175666809082
    10. '_reader' → logprob: -9.300175666809082

Token 346: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008647071197628975
    2. ':
' → logprob: -4.7586469650268555
    3. ':def' → logprob: -11.508646965026855
    4. '   ' → logprob: -11.758646965026855
    5. '):' → logprob: -12.633646965026855
    6. '(object' → logprob: -12.758646965026855
    7. '(' → logprob: -12.883646965026855
    8. 'def' → logprob: -13.633646965026855
    9. '<|end|>' → logprob: -13.883646965026855
    10. '():' → logprob: -14.258646965026855

Token 347: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20555396378040314
    2. '<|end|>' → logprob: -1.9555540084838867
    3. '   ' → logprob: -3.5805540084838867
    4. 'def' → logprob: -5.080554008483887
    5. ' def' → logprob: -5.705554008483887
    6. '<|end|>' → logprob: -6.080554008483887
    7. '	def' → logprob: -6.330554008483887
    8. ':' → logprob: -7.330554008483887
    9. '    
' → logprob: -8.080554008483887
    10. '	   ' → logprob: -8.205554008483887

Token 348: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.6163991093635559
    2. ' def' → logprob: -0.8663991093635559
    3. '   ' → logprob: -3.616399049758911
    4. '       ' → logprob: -4.36639928817749
    5. '    ' → logprob: -10.491398811340332
    6. '	def' → logprob: -10.491398811340332
    7. ' ' → logprob: -11.616398811340332
    8. '     ' → logprob: -12.991398811340332
    9. ' @' → logprob: -12.991398811340332
    10. '           ' → logprob: -13.116398811340332

Token 349: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.14773088693618774
    2. ' parse' → logprob: -2.647730827331543
    3. '__' → logprob: -3.147730827331543
    4. ' def' → logprob: -3.897730827331543
    5. 'parse' → logprob: -7.022730827331543
    6. ' read' → logprob: -7.022730827331543
    7. 'def' → logprob: -7.522730827331543
    8. ' init' → logprob: -8.147730827331543
    9. ' _' → logprob: -8.897730827331543
    10. '_init' → logprob: -8.897730827331543

Token 350: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -9.088346359931165e-07
    2. 'call' → logprob: -14.250000953674316
    3. ' init' → logprob: -15.625000953674316
    4. '_init' → logprob: -16.25
    5. '_' → logprob: -18.875
    6. 'next' → logprob: -19.25
    7. '   ' → logprob: -19.375
    8. 'def' → logprob: -19.5
    9. '(init' → logprob: -19.875
    10. 'inite' → logprob: -20.375

Token 351: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.014071709476411343
    2. '(self' → logprob: -4.389071941375732
    3. '__' → logprob: -6.764071941375732
    4. '__(
' → logprob: -8.764071464538574
    5. ' (' → logprob: -9.264071464538574
    6. '(' → logprob: -9.639071464538574
    7. '__((' → logprob: -10.639071464538574
    8. ',' → logprob: -11.014071464538574
    9. 'self' → logprob: -11.014071464538574
    10. '_(' → logprob: -11.514071464538574

Token 352: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0014871240127831697
    2. ' self' → logprob: -7.2514872550964355
    3. ')' → logprob: -7.3764872550964355
    4. '):
' → logprob: -9.001486778259277
    5. '(self' → logprob: -11.626486778259277
    6. '):' → logprob: -11.751486778259277
    7. '<|end|>' → logprob: -13.001486778259277
    8. ',' → logprob: -13.376486778259277
    9. '   ' → logprob: -14.001486778259277
    10. '	self' → logprob: -14.251486778259277

Token 353: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001966223819181323
    2. '):' → logprob: -7.2519659996032715
    3. '):
' → logprob: -7.3769659996032715
    4. ',self' → logprob: -7.7519659996032715
    5. 'self' → logprob: -9.12696647644043
    6. ',input' → logprob: -9.87696647644043
    7. '(self' → logprob: -10.87696647644043
    8. ',
' → logprob: -12.00196647644043
    9. '       ' → logprob: -12.87696647644043
    10. '<|end|>' → logprob: -13.25196647644043

Token 354: '           ' (ID: 352)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06704883277416229
    2. '           ' → logprob: -2.8170487880706787
    3. '       ' → logprob: -5.442049026489258
    4. ' self' → logprob: -8.067049026489258
    5. 's' → logprob: -8.442049026489258
    6. '(self' → logprob: -8.942049026489258
    7. 'data' → logprob: -10.942049026489258
    8. ',' → logprob: -11.567049026489258
    9. '               ' → logprob: -11.692049026489258
    10. '   ' → logprob: -11.692049026489258

Token 355: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.11072295159101486
    2. ' pass' → logprob: -3.1107230186462402
    3. '       ' → logprob: -3.4857230186462402
    4. 'self' → logprob: -3.6107230186462402
    5. '           ' → logprob: -6.98572301864624
    6. 'def' → logprob: -7.11072301864624
    7. ' self' → logprob: -8.235722541809082
    8. 'import' → logprob: -8.235722541809082
    9. '   ' → logprob: -8.610722541809082
    10. '               ' → logprob: -9.735722541809082

Token 356: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 357: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19498778879642487
    2. '<|end|>' → logprob: -2.3199877738952637
    3. '   ' → logprob: -3.4449877738952637
    4. '
' → logprob: -3.8199877738952637
    5. 'def' → logprob: -3.8199877738952637
    6. ' def' → logprob: -6.444987773895264
    7. '        
' → logprob: -6.944987773895264
    8. '<|end|>' → logprob: -8.319988250732422
    9. '    
' → logprob: -8.944988250732422
    10. ' ' → logprob: -10.069988250732422

Token 358: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00046260483213700354
    2. '   ' → logprob: -8.000462532043457
    3. ' def' → logprob: -9.000462532043457
    4. '       ' → logprob: -12.500462532043457
    5. '@' → logprob: -17.000463485717773
    6. '	def' → logprob: -17.500463485717773
    7. '
' → logprob: -17.625463485717773
    8. ' ' → logprob: -19.500463485717773
    9. 'import' → logprob: -20.375463485717773
    10. '@property' → logprob: -20.750463485717773

Token 359: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.053200628608465195
    2. 'read' → logprob: -3.5532007217407227
    3. ' parse' → logprob: -3.8032007217407227
    4. ' read' → logprob: -7.053200721740723
    5. 'get' → logprob: -12.178200721740723
    6. 'def' → logprob: -13.053200721740723
    7. ' readline' → logprob: -13.178200721740723
    8. 'next' → logprob: -13.428200721740723
    9. 'input' → logprob: -14.303200721740723
    10. ' get' → logprob: -14.803200721740723

Token 360: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0003049570368602872
    2. '_input' → logprob: -9.00030517578125
    3. '(' → logprob: -9.37530517578125
    4. 'self' → logprob: -9.62530517578125
    5. '_line' → logprob: -11.12530517578125
    6. '_self' → logprob: -12.12530517578125
    7. '(s' → logprob: -12.75030517578125
    8. ' self' → logprob: -13.25030517578125
    9. ' (' → logprob: -13.62530517578125
    10. 's' → logprob: -14.25030517578125

Token 361: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016128160059452057
    2. ',input' → logprob: -7.251612663269043
    3. 'self' → logprob: -8.001612663269043
    4. '):' → logprob: -8.251612663269043
    5. '):
' → logprob: -8.501612663269043
    6. ',line' → logprob: -10.251612663269043
    7. ' ,' → logprob: -10.501612663269043
    8. ',self' → logprob: -11.501612663269043
    9. ',s' → logprob: -11.626612663269043
    10. 's' → logprob: -12.001612663269043

Token 362: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04744480177760124
    2. '       ' → logprob: -3.6724448204040527
    3. 'return' → logprob: -4.297444820404053
    4. '               ' → logprob: -6.547444820404053
    5. ' return' → logprob: -6.797444820404053
    6. '```' → logprob: -6.797444820404053
    7. '()' → logprob: -7.172444820404053
    8. 'import' → logprob: -7.922444820404053
    9. 'input' → logprob: -8.047444343566895
    10. ',' → logprob: -8.047444343566895

Token 363: ' while' (ID: 2049)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.8554927706718445
    2. 'n' → logprob: -1.1054928302764893
    3. 'import' → logprob: -1.7304928302764893
    4. '           ' → logprob: -2.9804928302764893
    5. ' import' → logprob: -4.98049259185791
    6. '               ' → logprob: -5.60549259185791
    7. 'return' → logprob: -6.60549259185791
    8. ' return' → logprob: -7.10549259185791
    9. 'num' → logprob: -7.23049259185791
    10. 'input' → logprob: -7.35549259185791

Token 364: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.048757683485746384
    2. 'True' → logprob: -3.048757791519165
    3. '(True' → logprob: -8.798757553100586
    4. ' not' → logprob: -11.423757553100586
    5. '=True' → logprob: -12.923757553100586
    6. '1' → logprob: -13.923757553100586
    7. '   ' → logprob: -13.923757553100586
    8. 'true' → logprob: -14.173757553100586
    9. ' line' → logprob: -14.173757553100586
    10. ' ' → logprob: -14.673757553100586

Token 365: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004956224001944065
    2. ':' → logprob: -5.504956245422363
    3. ',' → logprob: -8.129956245422363
    4. ':
' → logprob: -8.254956245422363
    5. '<|end|>' → logprob: -9.629956245422363
    6. ' and' → logprob: -10.379956245422363
    7. '                   ' → logprob: -10.504956245422363
    8. '	           ' → logprob: -10.629956245422363
    9. '<|end|>' → logprob: -10.754956245422363
    10. '           ' → logprob: -10.879956245422363

Token 366: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005697453860193491
    2. 'try' → logprob: -5.755697250366211
    3. ' try' → logprob: -6.505697250366211
    4. ' line' → logprob: -7.630697250366211
    5. '```' → logprob: -9.005697250366211
    6. 'input' → logprob: -9.380697250366211
    7. '                   ' → logprob: -9.755697250366211
    8. '           ' → logprob: -10.005697250366211
    9. ' input' → logprob: -10.005697250366211
    10. '	           ' → logprob: -10.380697250366211

Token 367: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.7888298630714417
    2. 'try' → logprob: -0.9138298630714417
    3. ' line' → logprob: -2.413829803466797
    4. ' try' → logprob: -3.163829803466797
    5. '                   ' → logprob: -5.288829803466797
    6. '               ' → logprob: -5.413829803466797
    7. '   ' → logprob: -5.788829803466797
    8. 'input' → logprob: -9.288829803466797
    9. '           ' → logprob: -9.538829803466797
    10. 'import' → logprob: -10.038829803466797

Token 368: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.009766122326254845
    2. '=' → logprob: -4.634766101837158
    3. '=line' → logprob: -12.009766578674316
    4. 's' → logprob: -13.009766578674316
    5. '           ' → logprob: -14.009766578674316
    6. '.' → logprob: -15.634766578674316
    7. '   ' → logprob: -15.634766578674316
    8. '=input' → logprob: -16.009765625
    9. '               ' → logprob: -16.509765625
    10. '                   ' → logprob: -16.759765625

Token 369: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.048587486147880554
    2. ' input' → logprob: -3.0485875606536865
    3. '(input' → logprob: -17.298587799072266
    4. 'self' → logprob: -17.673587799072266
    5. 'sys' → logprob: -17.923587799072266
    6. '=input' → logprob: -18.423587799072266
    7. ' ' → logprob: -18.673587799072266
    8. '
' → logprob: -18.673587799072266
    9. '   ' → logprob: -19.173587799072266
    10. '<input' → logprob: -19.423587799072266

Token 370: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5768540501594543
    2. '()
' → logprob: -1.0768539905548096
    3. '().' → logprob: -2.3268539905548096
    4. '.strip' → logprob: -10.70185375213623
    5. '()

' → logprob: -11.07685375213623
    6. '()
' → logprob: -11.07685375213623
    7. '               ' → logprob: -12.82685375213623
    8. '())' → logprob: -13.32685375213623
    9. 'strip' → logprob: -13.32685375213623
    10. '().
' → logprob: -13.45185375213623

Token 371: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.5048530030981055e-06
    2. 'rstrip' → logprob: -13.500001907348633
    3. 'split' → logprob: -17.750001907348633
    4. ' strip' → logprob: -19.875001907348633
    5. '.strip' → logprob: -21.125001907348633
    6. '_strip' → logprob: -22.000001907348633
    7. 'startswith' → logprob: -23.375001907348633
    8. '(strip' → logprob: -23.625001907348633
    9. 'isdigit' → logprob: -24.000001907348633
    10. 'str' → logprob: -24.125001907348633

Token 372: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.4741104245185852
    2. '()' → logprob: -0.9741104245185852
    3. '()
' → logprob: -11.47411060333252
    4. '           ' → logprob: -11.47411060333252
    5. '())' → logprob: -12.34911060333252
    6. '               ' → logprob: -12.97411060333252
    7. '())
' → logprob: -13.34911060333252
    8. '()

' → logprob: -13.59911060333252
    9. '():
' → logprob: -13.84911060333252
    10. '()\' → logprob: -14.22411060333252

Token 373: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004707799293100834
    2. '<|end|>' → logprob: -5.5047078132629395
    3. '<|end|>' → logprob: -8.379707336425781
    4. '           ' → logprob: -8.504707336425781
    5. '                   ' → logprob: -9.129707336425781
    6. '	           ' → logprob: -10.629707336425781
    7. ' if' → logprob: -11.504707336425781
    8. 'if' → logprob: -11.629707336425781
    9. '                
' → logprob: -11.754707336425781
    10. '			' → logprob: -11.754707336425781

Token 374: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0032973706256598234
    2. '               ' → logprob: -6.003297328948975
    3. ' if' → logprob: -7.128297328948975
    4. '           ' → logprob: -10.878297805786133
    5. '	if' → logprob: -15.503297805786133
    6. '                   ' → logprob: -15.878297805786133
    7. '	           ' → logprob: -17.378297805786133
    8. '   ' → logprob: -17.503297805786133
    9. 'If' → logprob: -18.003297805786133
    10. ';if' → logprob: -18.753297805786133

Token 375: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.5857961773872375
    2. 'line' → logprob: -1.4607961177825928
    3. 'not' → logprob: -1.8357961177825928
    4. ' line' → logprob: -2.9607961177825928
    5. ' ' → logprob: -11.835796356201172
    6. '#line' → logprob: -12.710796356201172
    7. '	line' → logprob: -12.835796356201172
    8. '(line' → logprob: -13.335796356201172
    9. 'len' → logprob: -13.585796356201172
    10. '   ' → logprob: -13.710796356201172

Token 376: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.061973731964826584
    2. ' line' → logprob: -2.811973810195923
    3. '	line' → logprob: -12.811973571777344
    4. '(line' → logprob: -13.061973571777344
    5. '#line' → logprob: -14.186973571777344
    6. '_line' → logprob: -15.686973571777344
    7. '[line' → logprob: -16.061973571777344
    8. '
' → logprob: -16.186973571777344
    9. '=line' → logprob: -16.686973571777344
    10. '.line' → logprob: -17.811973571777344

Token 377: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04154803603887558
    2. ':
' → logprob: -3.291548013687134
    3. ' or' → logprob: -6.166548252105713
    4. '<|end|>' → logprob: -7.541548252105713
    5. ':return' → logprob: -8.166547775268555
    6. '<|end|>' → logprob: -8.916547775268555
    7. '):' → logprob: -9.041547775268555
    8. ')' → logprob: -9.291547775268555
    9. '):
' → logprob: -9.416547775268555
    10. '.' → logprob: -10.541547775268555

Token 378: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.018914667889475822
    2. '               ' → logprob: -4.643914699554443
    3. ':' → logprob: -4.893914699554443
    4. '                       ' → logprob: -6.893914699554443
    5. ':
' → logprob: -8.393914222717285
    6. 'break' → logprob: -9.268914222717285
    7. '.' → logprob: -9.768914222717285
    8. ',' → logprob: -9.893914222717285
    9. ':return' → logprob: -9.893914222717285
    10. '           ' → logprob: -10.893914222717285

Token 379: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.20179004967212677
    2. '                   ' → logprob: -1.9517900943756104
    3. ' break' → logprob: -3.7017900943756104
    4. 'return' → logprob: -4.201789855957031
    5. '                       ' → logprob: -7.701789855957031
    6. '               ' → logprob: -7.701789855957031
    7. ' return' → logprob: -9.201789855957031
    8. '	break' → logprob: -10.826789855957031
    9. '   ' → logprob: -11.076789855957031
    10. '
' → logprob: -11.201789855957031

Token 380: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004235243541188538
    2. '<|end|>' → logprob: -8.000423431396484
    3. '                
' → logprob: -10.125423431396484
    4. '           ' → logprob: -11.375423431396484
    5. '                   ' → logprob: -11.625423431396484
    6. '<|end|>' → logprob: -11.875423431396484
    7. 'return' → logprob: -12.125423431396484
    8. '
' → logprob: -13.125423431396484
    9. 'import' → logprob: -13.250423431396484
    10. '```' → logprob: -13.375423431396484

Token 381: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001109851524233818
    2. '<|end|>' → logprob: -6.876110076904297
    3. '<|end|>' → logprob: -10.626110076904297
    4. '                
' → logprob: -11.376110076904297
    5. ',' → logprob: -11.501110076904297
    6. '           ' → logprob: -12.001110076904297
    7. '                   ' → logprob: -12.126110076904297
    8. '```' → logprob: -12.251110076904297
    9. 'return' → logprob: -12.626110076904297
    10. 'import' → logprob: -13.126110076904297

Token 382: ' n' (ID: 297)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014849414117634296
    2. 'tokens' → logprob: -4.5148491859436035
    3. 'try' → logprob: -6.3898491859436035
    4. 'num' → logprob: -7.6398491859436035
    5. 'parts' → logprob: -8.014849662780762
    6. 'return' → logprob: -8.764849662780762
    7. ' tokens' → logprob: -8.889849662780762
    8. 'break' → logprob: -8.889849662780762
    9. 'token' → logprob: -8.889849662780762
    10. 's' → logprob: -8.889849662780762

Token 383: '_m' (ID: 1285)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02056162618100643
    2. ',m' → logprob: -3.895561695098877
    3. ' ,' → logprob: -12.145561218261719
    4. 'm' → logprob: -12.645561218261719
    5. ',is' → logprob: -13.770561218261719
    6. ',d' → logprob: -14.145561218261719
    7. ',n' → logprob: -14.145561218261719
    8. ',b' → logprob: -14.270561218261719
    9. ',M' → logprob: -14.270561218261719
    10. ',int' → logprob: -14.395561218261719

Token 384: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2016742080450058
    2. ' =' → logprob: -1.701674222946167
    3. ',' → logprob: -8.326674461364746
    4. '=line' → logprob: -11.951674461364746
    5. '=int' → logprob: -12.451674461364746
    6. '=input' → logprob: -13.326674461364746
    7. '   ' → logprob: -13.576674461364746
    8. 's' → logprob: -13.826674461364746
    9. '_str' → logprob: -14.201674461364746
    10. ' ' → logprob: -14.326674461364746

Token 385: ' line' (ID: 2543)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.31476902961730957
    2. 'line' → logprob: -1.3147690296173096
    3. ' list' → logprob: -6.6897687911987305
    4. ' line' → logprob: -8.68976879119873
    5. '[line' → logprob: -9.31476879119873
    6. '[list' → logprob: -13.31476879119873
    7. 'tuple' → logprob: -14.06476879119873
    8. '[' → logprob: -14.18976879119873
    9. 'map' → logprob: -14.68976879119873
    10. '(line' → logprob: -15.56476879119873

Token 386: '.split' (ID: 10347)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7326565980911255
    2. '.split' → logprob: -0.7326565980911255
    3. ' =' → logprob: -3.732656478881836
    4. '.' → logprob: -4.232656478881836
    5. '.strip' → logprob: -8.732656478881836
    6. 'split' → logprob: -8.982656478881836
    7. '.=' → logprob: -12.357656478881836
    8. ' .' → logprob: -12.607656478881836
    9. 'spl' → logprob: -14.357656478881836
    10. '   ' → logprob: -14.982656478881836

Token 387: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0001867326645879075
    2. '(' → logprob: -9.125186920166016
    3. '('' → logprob: -9.625186920166016
    4. '()
' → logprob: -11.875186920166016
    5. '("' → logprob: -13.750186920166016
    6. '())' → logprob: -14.000186920166016
    7. '()]' → logprob: -14.000186920166016
    8. '(max' → logprob: -14.750186920166016
    9. '(None' → logprob: -14.875186920166016
    10. '()

' → logprob: -15.000186920166016

Token 388: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07026062905788422
    2. '           ' → logprob: -2.945260524749756
    3. '<|end|>' → logprob: -5.320260524749756
    4. ',' → logprob: -5.570260524749756
    5. '[' → logprob: -6.070260524749756
    6. 'return' → logprob: -6.945260524749756
    7. '            
' → logprob: -7.195260524749756
    8. '                
' → logprob: -7.695260524749756
    9. '<|end|>' → logprob: -7.945260524749756
    10. ')' → logprob: -8.070261001586914

Token 389: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4963979721069336
    2. 'n' → logprob: -0.9963979721069336
    3. ' if' → logprob: -4.496397972106934
    4. '           ' → logprob: -4.996397972106934
    5. '               ' → logprob: -5.746397972106934
    6. 'return' → logprob: -7.121397972106934
    7. ' n' → logprob: -8.871397972106934
    8. 'yield' → logprob: -11.746397972106934
    9. 'self' → logprob: -13.121397972106934
    10. '                   ' → logprob: -13.246397972106934

Token 390: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.006729576736688614
    2. ' len' → logprob: -5.006729602813721
    3. 'n' → logprob: -12.256729125976562
    4. 'not' → logprob: -12.256729125976562
    5. ' not' → logprob: -12.381729125976562
    6. ' n' → logprob: -15.131729125976562
    7. '(len' → logprob: -15.506729125976562
    8. '   ' → logprob: -16.256729125976562
    9. '	len' → logprob: -17.256729125976562
    10. '           ' → logprob: -18.131729125976562

Token 391: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002146226615877822
    2. 'n' → logprob: -8.625214576721191
    3. '<n' → logprob: -10.750214576721191
    4. '(' → logprob: -11.875214576721191
    5. ' n' → logprob: -12.750214576721191
    6. '(line' → logprob: -13.875214576721191
    7. '==' → logprob: -14.125214576721191
    8. '	n' → logprob: -14.375214576721191
    9. ')n' → logprob: -15.250214576721191
    10. '=n' → logprob: -15.500214576721191

Token 392: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -1.2664456789934775e-06
    2. '==' → logprob: -15.000000953674316
    3. ')' → logprob: -15.500000953674316
    4. ' _' → logprob: -15.875000953674316
    5. 'm' → logprob: -16.250001907348633
    6. '   ' → logprob: -16.375001907348633
    7. ' ==' → logprob: -16.625001907348633
    8. '>' → logprob: -17.000001907348633
    9. '_n' → logprob: -17.375001907348633
    10. '<' → logprob: -17.625001907348633

Token 393: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5974650382995605
    2. '<' → logprob: -1.4724650382995605
    3. ' ==' → logprob: -1.8474650382995605
    4. '!=' → logprob: -3.8474650382995605
    5. ' !=' → logprob: -3.9724650382995605
    6. ' <' → logprob: -4.0974650382995605
    7. '>=' → logprob: -5.8474650382995605
    8. ')' → logprob: -5.9724650382995605
    9. ' >=' → logprob: -7.9724650382995605
    10. '=' → logprob: -9.972465515136719

Token 394: ' !=' (ID: 1666)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3533759117126465
    2. '==' → logprob: -1.7283759117126465
    3. ' ==' → logprob: -3.1033759117126465
    4. ' <' → logprob: -3.1033759117126465
    5. '!=' → logprob: -4.1033759117126465
    6. ' !=' → logprob: -4.3533759117126465
    7. '>=' → logprob: -7.6033759117126465
    8. '<n' → logprob: -8.978376388549805
    9. '   ' → logprob: -10.103376388549805
    10. ' >=' → logprob: -10.228376388549805

Token 395: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.7968066206085496e-05
    2. ' ' → logprob: -10.500027656555176
    3. '1' → logprob: -16.187528610229492
    4. '0' → logprob: -16.312528610229492
    5. '   ' → logprob: -17.375028610229492
    6. '۲' → logprob: -17.812528610229492
    7. '２' → logprob: -17.875028610229492
    8. '```' → logprob: -17.937528610229492
    9. '3' → logprob: -18.187528610229492
    10. '=' → logprob: -18.562528610229492

Token 396: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '1' → logprob: -16.87501335144043
    4. '0' → logprob: -17.56251335144043
    5. '２' → logprob: -18.12501335144043
    6. '   ' → logprob: -18.12501335144043
    7. '۲' → logprob: -18.12501335144043
    8. '২' → logprob: -19.06251335144043
    9. '3' → logprob: -19.12501335144043
    10. '  ' → logprob: -19.56251335144043

Token 397: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4077944755554199
    2. ':' → logprob: -1.28279447555542
    3. ' or' → logprob: -3.03279447555542
    4. '                   ' → logprob: -5.03279447555542
    5. '               ' → logprob: -6.03279447555542
    6. ':return' → logprob: -8.282794952392578
    7. '                       ' → logprob: -9.657794952392578
    8. '           ' → logprob: -9.782794952392578
    9. 'and' → logprob: -9.907794952392578
    10. ' and' → logprob: -10.282794952392578

Token 398: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.013177523389458656
    2. '               ' → logprob: -4.513177394866943
    3. ':' → logprob: -7.013177394866943
    4. '                       ' → logprob: -7.638177394866943
    5. ' or' → logprob: -8.263177871704102
    6. ':
' → logprob: -8.388177871704102
    7. 'continue' → logprob: -9.138177871704102
    8. 'return' → logprob: -9.513177871704102
    9. ':return' → logprob: -10.388177871704102
    10. '           ' → logprob: -11.138177871704102

Token 399: ' continue' (ID: 4901)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' → logprob: -0.23947212100028992
    2. 'return' → logprob: -1.9894721508026123
    3. 'continue' (adapté à ' continue') → logprob: -2.9894721508026123
    4. '                   ' → logprob: -4.364471912384033
    5. ' break' → logprob: -4.739471912384033
    6. '               ' → logprob: -5.739471912384033
    7. ' return' → logprob: -7.364471912384033
    8. ' continue' → logprob: -7.614471912384033
    9. '                       ' → logprob: -9.989472389221191
    10. '```' → logprob: -12.114472389221191

Token 400: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.621933451038785e-05
    2. '           ' → logprob: -11.125056266784668
    3. '                
' → logprob: -11.125056266784668
    4. '                   ' → logprob: -11.375056266784668
    5. '
' → logprob: -12.375056266784668
    6. ',' → logprob: -12.625056266784668
    7. '```' → logprob: -12.875056266784668
    8. 'return' → logprob: -13.125056266784668
    9. ' return' → logprob: -15.125056266784668
    10. '<|end|>' → logprob: -15.250056266784668

Token 401: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00019579214858822525
    2. '           ' → logprob: -8.875195503234863
    3. 'return' → logprob: -10.875195503234863
    4. '```' → logprob: -11.000195503234863
    5. '                
' → logprob: -12.000195503234863
    6. '                   ' → logprob: -12.375195503234863
    7. ' return' → logprob: -13.250195503234863
    8. 'continue' → logprob: -13.250195503234863
    9. '       ' → logprob: -13.375195503234863
    10. 'n' → logprob: -13.625195503234863

Token 402: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.2236318290233612
    2. '               ' → logprob: -1.7236318588256836
    3. 'return' → logprob: -4.223631858825684
    4. 'try' → logprob: -5.223631858825684
    5. ' n' → logprob: -7.098631858825684
    6. '           ' → logprob: -8.098631858825684
    7. ' return' → logprob: -8.473631858825684
    8. '                   ' → logprob: -8.723631858825684
    9. '```' → logprob: -8.723631858825684
    10. ' try' → logprob: -9.223631858825684

Token 403: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006765736034139991
    2. ',m' → logprob: -7.37567663192749
    3. ' ,' → logprob: -10.625676155090332
    4. ',
' → logprob: -11.875676155090332
    5. ',int' → logprob: -12.250676155090332
    6. '=' → logprob: -12.500676155090332
    7. ',n' → logprob: -12.875676155090332
    8. ' =' → logprob: -13.375676155090332
    9. '_,' → logprob: -13.375676155090332
    10. 'm' → logprob: -13.875676155090332

Token 404: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.06199177727103233
    2. ' m' → logprob: -2.8119916915893555
    3. 'int' → logprob: -10.811991691589355
    4. ' int' → logprob: -14.186991691589355
    5. 'self' → logprob: -14.186991691589355
    6. ' ' → logprob: -14.436991691589355
    7. ' =' → logprob: -14.811991691589355
    8. ' ' → logprob: -15.186991691589355
    9. '               ' → logprob: -15.311991691589355
    10. '           ' → logprob: -15.436991691589355

Token 405: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141734182834625
    2. ' =' → logprob: -1.701417326927185
    3. '=int' → logprob: -12.701416969299316
    4. ',' → logprob: -14.576416969299316
    5. '=
' → logprob: -15.951416969299316
    6. ' ' → logprob: -16.076417922973633
    7. ')' → logprob: -16.451417922973633
    8. 'int' → logprob: -16.576417922973633
    9. '=

' → logprob: -17.326417922973633
    10. ' =
' → logprob: -17.701417922973633

Token 406: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.1007080078125
    2. 'int' → logprob: -2.6007080078125
    3. ' map' → logprob: -3.8507080078125
    4. ' int' → logprob: -8.1007080078125
    5. '[int' → logprob: -11.4757080078125
    6. '   ' → logprob: -13.7257080078125
    7. '(map' → logprob: -14.2257080078125
    8. 'list' → logprob: -14.3507080078125
    9. '(int' → logprob: -14.9757080078125
    10. '
' → logprob: -15.6007080078125

Token 407: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.47407862544059753
    2. 'int' → logprob: -0.9740786552429199
    3. ' int' → logprob: -13.974078178405762
    4. '[int' → logprob: -14.724078178405762
    5. '```' → logprob: -15.974078178405762
    6. '=int' → logprob: -16.349079132080078
    7. ',int' → logprob: -16.599079132080078
    8. '
' → logprob: -17.474079132080078
    9. '   ' → logprob: -17.599079132080078
    10. 'str' → logprob: -17.724079132080078

Token 408: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30358296632766724
    2. '(n' → logprob: -1.5535829067230225
    3. ',n' → logprob: -3.3035829067230225
    4. 'n' → logprob: -4.303583145141602
    5. ' n' → logprob: -10.678583145141602
    6. ' ,' → logprob: -10.678583145141602
    7. '(' → logprob: -11.803583145141602
    8. ')n' → logprob: -12.303583145141602
    9. ')' → logprob: -12.678583145141602
    10. '(line' → logprob: -13.428583145141602

Token 409: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.001170225441455841
    2. ' n' → logprob: -6.7511701583862305
    3. '	n' → logprob: -17.251171112060547
    4. ')n' → logprob: -20.251171112060547
    5. '
' → logprob: -20.501171112060547
    6. '(n' → logprob: -20.626171112060547
    7. '   ' → logprob: -21.001171112060547
    8. '_n' → logprob: -21.376171112060547
    9. '$n' → logprob: -21.751171112060547
    10. ',n' → logprob: -22.126171112060547

Token 410: '_m' (ID: 1285)
  Prédit: '_m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_m' → logprob: -0.019186602905392647
    2. '_n' → logprob: -4.394186496734619
    3. '(n' → logprob: -6.019186496734619
    4. 'm' → logprob: -6.519186496734619
    5. ' n' → logprob: -6.894186496734619
    6. 'n' → logprob: -7.519186496734619
    7. ')' → logprob: -7.769186496734619
    8. ' m' → logprob: -8.269186973571777
    9. '(m' → logprob: -9.019186973571777
    10. ',' → logprob: -9.269186973571777

Token 411: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014178205281496048
    2. ')
' → logprob: -4.264178276062012
    3. ')return' → logprob: -11.889178276062012
    4. ')
' → logprob: -12.639178276062012
    5. ')

' → logprob: -13.139178276062012
    6. '<|end|>' → logprob: -14.389178276062012
    7. ' )' → logprob: -14.639178276062012
    8. ')`' → logprob: -14.764178276062012
    9. '),' → logprob: -15.639178276062012
    10. '[' → logprob: -15.764178276062012

Token 412: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00030614540446549654
    2. '           ' → logprob: -8.750306129455566
    3. '<|end|>' → logprob: -9.500306129455566
    4. '                   ' → logprob: -10.500306129455566
    5. 'return' → logprob: -11.625306129455566
    6. '              ' → logprob: -11.875306129455566
    7. '                
' → logprob: -11.875306129455566
    8. '			' → logprob: -12.750306129455566
    9. ' return' → logprob: -12.875306129455566
    10. '<|end|>' → logprob: -12.875306129455566

Token 413: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022729020565748215
    2. 'return' → logprob: -4.02272891998291
    3. 's' → logprob: -5.52272891998291
    4. 'if' (adapté à ' if') → logprob: -8.14772891998291
    5. ' return' → logprob: -9.14772891998291
    6. 'break' → logprob: -9.14772891998291
    7. '                   ' → logprob: -10.27272891998291
    8. '           ' → logprob: -11.14772891998291
    9. ' if' → logprob: -11.52272891998291
    10. ' s' → logprob: -12.02272891998291

Token 414: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0044313049875199795
    2. ' n' → logprob: -6.004431247711182
    3. 'not' → logprob: -6.754431247711182
    4. 'm' → logprob: -7.629431247711182
    5. ' not' → logprob: -8.87943172454834
    6. '   ' → logprob: -9.87943172454834
    7. '(n' → logprob: -10.25443172454834
    8. '0' → logprob: -10.37943172454834
    9. '1' → logprob: -10.62943172454834
    10. '       ' → logprob: -12.37943172454834

Token 415: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.18314164876937866
    2. '==' → logprob: -1.8081417083740234
    3. ' <=' → logprob: -6.058141708374023
    4. '<=' → logprob: -7.058141708374023
    5. ' >' → logprob: -9.183141708374023
    6. '>' → logprob: -10.433141708374023
    7. ' <' → logprob: -10.558141708374023
    8. '<' → logprob: -11.433141708374023
    9. '=' → logprob: -12.308141708374023
    10. '===' → logprob: -12.308141708374023

Token 416: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0046264105476439
    2. ' ' → logprob: -5.379626274108887
    3. '-' → logprob: -12.629626274108887
    4. ' -' → logprob: -14.379626274108887
    5. '   ' → logprob: -14.817126274108887
    6. '  ' → logprob: -15.379626274108887
    7. '
' → logprob: -15.442126274108887
    8. '۰' → logprob: -15.629626274108887
    9. ' ' → logprob: -15.754626274108887
    10. '```' → logprob: -16.067127227783203

Token 417: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.710618905955926e-05
    2. ' ' → logprob: -9.625097274780273
    3. '-' → logprob: -10.625097274780273
    4. 'm' → logprob: -13.437597274780273
    5. 's' → logprob: -13.812597274780273
    6. ' -' → logprob: -14.062597274780273
    7. '```' → logprob: -14.625097274780273
    8. 'and' → logprob: -14.750097274780273
    9. 'n' → logprob: -15.250097274780273
    10. '۰' → logprob: -15.437597274780273

Token 418: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.25193315744400024
    2. ' and' → logprob: -1.5019330978393555
    3. '           ' → logprob: -13.126933097839355
    4. '   ' → logprob: -13.876933097839355
    5. '               ' → logprob: -14.501933097839355
    6. '                   ' → logprob: -14.876933097839355
    7. ' ' → logprob: -16.126934051513672
    8. '	and' → logprob: -16.126934051513672
    9. ':' → logprob: -17.626934051513672
    10. '                       ' → logprob: -17.876934051513672

Token 419: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.000553151941858232
    2. ' m' → logprob: -7.500553131103516
    3. '   ' → logprob: -16.375553131103516
    4. '	m' → logprob: -17.000553131103516
    5. '                   ' → logprob: -17.500553131103516
    6. '               ' → logprob: -17.875553131103516
    7. '  ' → logprob: -18.250553131103516
    8. '           ' → logprob: -18.375553131103516
    9. '    ' → logprob: -19.000553131103516
    10. ' ' → logprob: -19.750553131103516

Token 420: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.030617956072092056
    2. ' ==' → logprob: -3.6556179523468018
    3. '0' → logprob: -5.530618190765381
    4. '=' → logprob: -8.030617713928223
    5. '<|end|>' → logprob: -12.280617713928223
    6. '===' → logprob: -12.780617713928223
    7. ' ' → logprob: -13.155617713928223
    8. ')' → logprob: -13.280617713928223
    9. '[' → logprob: -13.280617713928223
    10. ')==' → logprob: -13.530617713928223

Token 421: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -18.375085830688477
    4. '  ' → logprob: -18.500085830688477
    5. '۰' → logprob: -18.750085830688477
    6. '00' → logprob: -20.750085830688477
    7. '    ' → logprob: -21.062585830688477
    8. '```' → logprob: -21.062585830688477
    9. '000' → logprob: -21.125085830688477
    10. '০' → logprob: -21.187585830688477

Token 422: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '۰' → logprob: -18.125001907348633
    4. '<|end|>' → logprob: -18.500001907348633
    5. '<|end|>' → logprob: -19.437501907348633
    6. '০' → logprob: -19.750001907348633
    7. '   ' → logprob: -20.000001907348633
    8. '  ' → logprob: -20.125001907348633
    9. '०' → logprob: -20.187501907348633
    10. '٠' → logprob: -20.562501907348633

Token 423: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.26264068484306335
    2. ':' → logprob: -1.6376407146453857
    3. '                   ' → logprob: -3.3876407146453857
    4. '               ' → logprob: -6.012640476226807
    5. '           ' → logprob: -8.262640953063965
    6. '                       ' → logprob: -11.512640953063965
    7. ':return' → logprob: -11.512640953063965
    8. ',' → logprob: -11.637640953063965
    9. ':
' → logprob: -12.262640953063965
    10. '):
' → logprob: -12.387640953063965

Token 424: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -7.040457421680912e-05
    2. '               ' → logprob: -9.750070571899414
    3. '                       ' → logprob: -11.500070571899414
    4. '           ' → logprob: -13.875070571899414
    5. '                  ' → logprob: -15.000070571899414
    6. '
' → logprob: -15.750070571899414
    7. 'break' → logprob: -16.125070571899414
    8. '   ' → logprob: -16.125070571899414
    9. ',' → logprob: -16.500070571899414
    10. ' break' → logprob: -16.625070571899414

Token 425: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.7087588906288147
    2. 'break' (adapté à ' break') → logprob: -0.7087588906288147
    3. '                       ' → logprob: -4.70875883102417
    4. 'return' → logprob: -5.58375883102417
    5. ' break' → logprob: -6.08375883102417
    6. '               ' → logprob: -8.083759307861328
    7. '	break' → logprob: -9.208759307861328
    8. '   ' → logprob: -11.583759307861328
    9. ' return' → logprob: -12.333759307861328
    10. '           ' → logprob: -12.458759307861328

Token 426: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004279615823179483
    2. '           ' → logprob: -5.504279613494873
    3. '<|end|>' → logprob: -9.129280090332031
    4. 's' → logprob: -10.254280090332031
    5. 'return' → logprob: -10.504280090332031
    6. '                
' → logprob: -12.129280090332031
    7. '              ' → logprob: -12.129280090332031
    8. '       ' → logprob: -12.504280090332031
    9. '                   ' → logprob: -12.629280090332031
    10. '```' → logprob: -13.004280090332031

Token 427: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08020519465208054
    2. '           ' → logprob: -2.580205202102661
    3. 's' → logprob: -6.830204963684082
    4. 'return' → logprob: -8.705204963684082
    5. '       ' → logprob: -10.455204963684082
    6. '```' → logprob: -11.330204963684082
    7. '<|end|>' → logprob: -12.205204963684082
    8. '                   ' → logprob: -12.705204963684082
    9. '              ' → logprob: -12.830204963684082
    10. '   ' → logprob: -13.080204963684082

Token 428: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.058282312005758286
    2. '               ' → logprob: -2.9332823753356934
    3. '           ' → logprob: -6.433282375335693
    4. ' s' → logprob: -6.558282375335693
    5. 'n' → logprob: -9.183281898498535
    6. 'nums' → logprob: -10.058281898498535
    7. 'numbers' → logprob: -10.183281898498535
    8. 'arr' → logprob: -10.308281898498535
    9. 'tr' → logprob: -10.683281898498535
    10. '_s' → logprob: -11.433281898498535

Token 429: 'cones' (ID: 98588)
  Prédit: 'cones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cones' → logprob: -0.0015528327785432339
    2. ' =' → logprob: -7.376553058624268
    3. 'con' → logprob: -7.876553058624268
    4. ' cones' → logprob: -8.62655258178711
    5. '_con' → logprob: -9.12655258178711
    6. '_' → logprob: -9.37655258178711
    7. '   ' → logprob: -10.37655258178711
    8. 'cone' → logprob: -10.50155258178711
    9. '=' → logprob: -11.25155258178711
    10. 'c' → logprob: -11.62655258178711

Token 430: '_line' (ID: 14418)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36748623847961426
    2. '=' → logprob: -1.3674862384796143
    3. ',' → logprob: -2.9924862384796143
    4. '_line' → logprob: -6.492486000061035
    5. '           ' → logprob: -7.992486000061035
    6. '   ' → logprob: -8.367486000061035
    7. '=line' → logprob: -8.367486000061035
    8. ',line' → logprob: -9.492486000061035
    9. '               ' → logprob: -10.242486000061035
    10. '       ' → logprob: -10.367486000061035

Token 431: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02069696970283985
    2. '=' → logprob: -3.8956968784332275
    3. '           ' → logprob: -8.895696640014648
    4. 's' → logprob: -11.520696640014648
    5. '               ' → logprob: -12.770696640014648
    6. '       ' → logprob: -13.145696640014648
    7. '   ' → logprob: -13.520696640014648
    8. '=line' → logprob: -14.645696640014648
    9. '=input' → logprob: -14.895696640014648
    10. ' ' → logprob: -15.020696640014648

Token 432: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.251930832862854
    2. ' input' → logprob: -1.501930832862854
    3. '	input' → logprob: -14.501931190490723
    4. '               ' → logprob: -14.751931190490723
    5. '                   ' → logprob: -15.376931190490723
    6. 'self' → logprob: -15.626931190490723
    7. '=input' → logprob: -15.751931190490723
    8. '[input' → logprob: -16.001930236816406
    9. '           ' → logprob: -16.126930236816406
    10. 'list' → logprob: -17.001930236816406

Token 433: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.07009471207857132
    2. '()' → logprob: -2.6950948238372803
    3. 's' → logprob: -9.32009506225586
    4. '.' → logprob: -10.69509506225586
    5. ')' → logprob: -11.69509506225586
    6. '.strip' → logprob: -11.69509506225586
    7. '.readline' → logprob: -12.07009506225586
    8. '())' → logprob: -12.57009506225586
    9. ' =' → logprob: -12.69509506225586
    10. '=' → logprob: -12.82009506225586

Token 434: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -1.1637164789135568e-05
    2. 'rstrip' → logprob: -11.750011444091797
    3. 'split' → logprob: -12.500011444091797
    4. ' strip' → logprob: -18.250011444091797
    5. '.strip' → logprob: -20.125011444091797
    6. '_strip' → logprob: -20.375011444091797
    7. '(strip' → logprob: -21.500011444091797
    8. '-strip' → logprob: -22.750011444091797
    9. 'stripe' → logprob: -23.375011444091797
    10. '```' → logprob: -24.500011444091797

Token 435: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08752743154764175
    2. '<|end|>' → logprob: -2.7125275135040283
    3. '<|end|>' → logprob: -5.462527275085449
    4. '           ' → logprob: -5.462527275085449
    5. '()' → logprob: -5.587527275085449
    6. 's' → logprob: -5.837527275085449
    7. ',' → logprob: -7.212527275085449
    8. ' s' → logprob: -7.587527275085449
    9. ')' → logprob: -8.58752727508545
    10. '(s' → logprob: -8.96252727508545

Token 436: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.73446003627032e-05
    2. '<|end|>' → logprob: -9.625097274780273
    3. 's' → logprob: -10.500097274780273
    4. '           ' → logprob: -14.125097274780273
    5. '<|end|>' → logprob: -14.375097274780273
    6. '                   ' → logprob: -14.750097274780273
    7. '                
' → logprob: -14.875097274780273
    8. '		       ' → logprob: -15.125097274780273
    9. '       ' → logprob: -15.250097274780273
    10. ' s' → logprob: -15.375097274780273

Token 437: ' while' (ID: 2049)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.17104649543762207
    2. '               ' → logprob: -1.921046495437622
    3. ' s' → logprob: -4.546046257019043
    4. 'self' → logprob: -9.421046257019043
    5. '           ' → logprob: -9.671046257019043
    6. '                   ' → logprob: -12.796046257019043
    7. '       ' → logprob: -13.546046257019043
    8. '   ' → logprob: -13.546046257019043
    9. '_s' → logprob: -13.546046257019043
    10. ' self' → logprob: -14.046046257019043

Token 438: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.0806984081864357
    2. ' not' → logprob: -2.5806984901428223
    3. 'len' → logprob: -6.330698490142822
    4. 's' → logprob: -11.205698013305664
    5. ' len' → logprob: -11.330698013305664
    6. '(not' → logprob: -14.955698013305664
    7. '	not' → logprob: -15.705698013305664
    8. ' s' → logprob: -16.330698013305664
    9. '(len' → logprob: -17.455698013305664
    10. ' ' → logprob: -17.955698013305664

Token 439: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.842555426876061e-06
    2. ' s' → logprob: -12.375004768371582
    3. '_s' → logprob: -14.625004768371582
    4. '{s' → logprob: -18.5000057220459
    5. '	s' → logprob: -18.6250057220459
    6. '(s' → logprob: -19.0000057220459
    7. '$s' → logprob: -19.3750057220459
    8. '
' → logprob: -19.6250057220459
    9. '*s' → logprob: -20.1250057220459
    10. '<s' → logprob: -20.6250057220459

Token 440: 'cones' (ID: 98588)
  Prédit: 'cones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cones' → logprob: -0.001936485292389989
    2. 's' → logprob: -6.251936435699463
    3. 'cone' → logprob: -12.876936912536621
    4. 'tones' → logprob: -13.751936912536621
    5. 'e' → logprob: -14.001936912536621
    6. ' s' → logprob: -14.126936912536621
    7. 'con' → logprob: -14.751936912536621
    8. 'bones' → logprob: -15.001936912536621
    9. '_s' → logprob: -15.251936912536621
    10. 'c' → logprob: -15.376936912536621

Token 441: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -2.463036435074173e-05
    2. 'line' → logprob: -10.625024795532227
    3. 's' → logprob: -16.000024795532227
    4. 'Line' → logprob: -17.625024795532227
    5. '
' → logprob: -17.875024795532227
    6. '   ' → logprob: -18.000024795532227
    7. ' line' → logprob: -18.375024795532227
    8. '	line' → logprob: -18.500024795532227
    9. '_LINE' → logprob: -18.750024795532227
    10. 'len' → logprob: -18.875024795532227

Token 442: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12272211909294128
    2. ':
' → logprob: -2.3727221488952637
    3. '<|end|>' → logprob: -4.497722148895264
    4. ' or' → logprob: -6.622722148895264
    5. 's' → logprob: -6.872722148895264
    6. '               ' → logprob: -6.872722148895264
    7. '.strip' → logprob: -6.872722148895264
    8. '                   ' → logprob: -7.247722148895264
    9. '.split' → logprob: -7.247722148895264
    10. ')' → logprob: -7.372722148895264

Token 443: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1706974059343338
    2. 's' → logprob: -1.9206974506378174
    3. ' s' → logprob: -5.420697212219238
    4. ':' → logprob: -6.170697212219238
    5. '               ' → logprob: -6.170697212219238
    6. ':
' → logprob: -7.545697212219238
    7. '           ' → logprob: -7.920697212219238
    8. '<|end|>' → logprob: -7.920697212219238
    9. '   ' → logprob: -8.920697212219238
    10. '<|end|>' → logprob: -9.170697212219238

Token 444: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.1276852786540985
    2. ' s' → logprob: -2.127685308456421
    3. '                   ' → logprob: -7.502685070037842
    4. '               ' → logprob: -8.627685546875
    5. '   ' → logprob: -11.252685546875
    6. '                       ' → logprob: -12.127685546875
    7. '       ' → logprob: -12.877685546875
    8. '           ' → logprob: -12.877685546875
    9. ' ' → logprob: -14.127685546875
    10. '	s' → logprob: -14.627685546875

Token 445: 'cones' (ID: 98588)
  Prédit: 'cones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cones' → logprob: -1.5928495486150496e-05
    2. 'tones' → logprob: -11.625016212463379
    3. 'cone' → logprob: -12.875016212463379
    4. 's' → logprob: -13.375016212463379
    5. 'comes' → logprob: -14.250016212463379
    6. 'cons' → logprob: -15.125016212463379
    7. 'ones' → logprob: -15.125016212463379
    8. 'con' → logprob: -15.250016212463379
    9. 'bones' → logprob: -15.500016212463379
    10. ' cones' → logprob: -15.750016212463379

Token 446: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -2.3795937522663735e-05
    2. '=' → logprob: -10.87502384185791
    3. ' =' → logprob: -12.62502384185791
    4. 'line' → logprob: -14.25002384185791
    5. '=line' → logprob: -14.87502384185791
    6. '_lines' → logprob: -16.000022888183594
    7. '_' → logprob: -16.000022888183594
    8. '=_' → logprob: -16.750022888183594
    9. 'Line' → logprob: -17.125022888183594
    10. '_LINE' → logprob: -17.250022888183594

Token 447: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38687485456466675
    2. ' =' → logprob: -1.1368749141693115
    3. '=line' → logprob: -12.63687515258789
    4. '=input' → logprob: -14.63687515258789
    5. '           ' → logprob: -17.26187515258789
    6. '.=' → logprob: -17.51187515258789
    7. '               ' → logprob: -18.13687515258789
    8. '   ' → logprob: -18.13687515258789
    9. '+=' → logprob: -18.13687515258789
    10. ' ' → logprob: -18.38687515258789

Token 448: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.048587486147880554
    2. ' input' → logprob: -3.0485875606536865
    3. '=input' → logprob: -16.298587799072266
    4. '(input' → logprob: -17.923587799072266
    5. 's' → logprob: -18.173587799072266
    6. '	input' → logprob: -18.298587799072266
    7. '<input' → logprob: -18.673587799072266
    8. '[input' → logprob: -19.423587799072266
    9. 'output' → logprob: -19.548587799072266
    10. ',input' → logprob: -19.548587799072266

Token 449: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.4121114822482923e-06
    2. '()' → logprob: -12.750003814697266
    3. '()).' → logprob: -15.500003814697266
    4. '>().' → logprob: -15.875003814697266
    5. '()].' → logprob: -17.250003814697266
    6. '()
' → logprob: -17.625003814697266
    7. ' ().' → logprob: -18.250003814697266
    8. ').' → logprob: -18.500003814697266
    9. '.' → logprob: -20.250003814697266
    10. '.strip' → logprob: -20.750003814697266

Token 450: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: 0.0
    2. '.strip' → logprob: -17.875
    3. ' strip' → logprob: -18.5
    4. 'rstrip' → logprob: -19.25
    5. '_strip' → logprob: -20.0
    6. 'stripe' → logprob: -21.625
    7. '(strip' → logprob: -21.875
    8. 'Strip' → logprob: -22.5
    9. 'str' → logprob: -23.0
    10. '-strip' → logprob: -23.75

Token 451: '()
' (ID: 1234)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005927092279307544
    2. 's' → logprob: -7.6255927085876465
    3. '<|end|>' → logprob: -10.125593185424805
    4. ' s' → logprob: -11.000593185424805
    5. '           ' → logprob: -11.375593185424805
    6. ',' → logprob: -11.500593185424805
    7. '<|end|>' → logprob: -12.250593185424805
    8. ')' → logprob: -12.875593185424805
    9. '
' → logprob: -13.125593185424805
    10. '			' → logprob: -13.250593185424805

Token 452: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0009181279456242919
    2. 's' → logprob: -7.000917911529541
    3. '           ' → logprob: -12.8759183883667
    4. ' s' → logprob: -14.1259183883667
    5. '                   ' → logprob: -14.1259183883667
    6. '
' → logprob: -14.5009183883667
    7. '       ' → logprob: -14.5009183883667
    8. '```' → logprob: -15.0009183883667
    9. ',' → logprob: -15.1259183883667
    10. '<|end|>' → logprob: -15.5009183883667

Token 453: ' s' (ID: 265)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3920624852180481
    2. 's' (adapté à ' s') → logprob: -1.1420624256134033
    3. 'self' → logprob: -5.767062664031982
    4. ' s' → logprob: -6.267062664031982
    5. 'return' → logprob: -9.767062187194824
    6. '           ' → logprob: -9.892062187194824
    7. ' self' → logprob: -11.392062187194824
    8. 'S' → logprob: -11.642062187194824
    9. '                   ' → logprob: -12.017062187194824
    10. 'tokens' → logprob: -12.017062187194824

Token 454: 'cones' (ID: 98588)
  Prédit: 'cones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cones' → logprob: -2.4987974029500037e-05
    2. 's' → logprob: -11.250024795532227
    3. 'cone' → logprob: -12.250024795532227
    4. 'con' → logprob: -12.500024795532227
    5. ' cones' → logprob: -13.750024795532227
    6. 'comes' → logprob: -14.750024795532227
    7. ' s' → logprob: -15.375024795532227
    8. ' =' → logprob: -15.500024795532227
    9. '```' → logprob: -15.500024795532227
    10. '=' → logprob: -15.875024795532227

Token 455: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889242470264435
    2. '=' → logprob: -2.578892469406128
    3. 's' → logprob: -14.328892707824707
    4. ' ' → logprob: -14.703892707824707
    5. '           ' → logprob: -15.078892707824707
    6. '	' → logprob: -15.453892707824707
    7. '            ' → logprob: -15.953892707824707
    8. '_values' → logprob: -16.45389175415039
    9. '        ' → logprob: -16.57889175415039
    10. '   ' → logprob: -16.57889175415039

Token 456: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.16022422909736633
    2. ' list' → logprob: -1.910224199295044
    3. '[list' → logprob: -16.41022491455078
    4. '[' → logprob: -17.53522491455078
    5. 'List' → logprob: -19.53522491455078
    6. '	list' → logprob: -20.03522491455078
    7. '               ' → logprob: -20.41022491455078
    8. ' [' → logprob: -20.78522491455078
    9. '   ' → logprob: -20.78522491455078
    10. '                   ' → logprob: -21.16022491455078

Token 457: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -4.453737710718997e-05
    2. '(' → logprob: -10.125044822692871
    3. 'map' → logprob: -12.625044822692871
    4. '(
' → logprob: -15.000044822692871
    5. '	map' → logprob: -15.250044822692871
    6. '(int' → logprob: -15.500044822692871
    7. '.map' → logprob: -16.375043869018555
    8. '()' → logprob: -16.625043869018555
    9. ',map' → logprob: -16.625043869018555
    10. '(range' → logprob: -18.000043869018555

Token 458: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.023260388523340225
    2. 'int' → logprob: -3.7732603549957275
    3. '[int' → logprob: -12.023260116577148
    4. '(' → logprob: -12.398260116577148
    5. '=int' → logprob: -13.648260116577148
    6. ' int' → logprob: -14.148260116577148
    7. ']int' → logprob: -14.273260116577148
    8. '<int' → logprob: -14.273260116577148
    9. ',int' → logprob: -14.398260116577148
    10. '```' → logprob: -14.523260116577148

Token 459: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.046019796282052994
    2. '(s' → logprob: -3.1710197925567627
    3. 's' → logprob: -6.171020030975342
    4. ',s' → logprob: -7.171020030975342
    5. ' ,' → logprob: -9.171019554138184
    6. ' (' → logprob: -10.171019554138184
    7. '(' → logprob: -11.546019554138184
    8. ')' → logprob: -13.671019554138184
    9. ',(' → logprob: -13.671019554138184
    10. ',
' → logprob: -13.796019554138184

Token 460: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.009757270105183125
    2. ' s' → logprob: -4.634757041931152
    3. '(s' → logprob: -14.884757041931152
    4. '   ' → logprob: -15.634757041931152
    5. '	s' → logprob: -15.759757041931152
    6. '_s' → logprob: -16.38475799560547
    7. ' ' → logprob: -16.44725799560547
    8. '`s' → logprob: -16.69725799560547
    9. ')s' → logprob: -16.69725799560547
    10. ')' → logprob: -16.82225799560547

Token 461: 'cones' (ID: 98588)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.06276333332061768
    2. 'cones' → logprob: -3.062763214111328
    3. '(s' → logprob: -4.312763214111328
    4. ')s' → logprob: -8.562763214111328
    5. 'c' → logprob: -8.937763214111328
    6. ' s' → logprob: -10.187763214111328
    7. 'coles' → logprob: -10.187763214111328
    8. 'con' → logprob: -10.312763214111328
    9. 'lines' → logprob: -10.312763214111328
    10. ')' → logprob: -10.937763214111328

Token 462: '_line' (ID: 14418)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.05579071491956711
    2. 'split' → logprob: -3.305790662765503
    3. '(s' → logprob: -4.430790901184082
    4. '.split' → logprob: -6.305790901184082
    5. '_line' → logprob: -6.680790901184082
    6. '.readline' → logprob: -7.430790901184082
    7. '().' → logprob: -7.430790901184082
    8. '(split' → logprob: -8.680790901184082
    9. '   ' → logprob: -8.805790901184082
    10. '       ' → logprob: -9.180790901184082

Token 463: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.06597672402858734
    2. '().' → logprob: -3.065976619720459
    3. '.strip' → logprob: -4.065976619720459
    4. '.readline' → logprob: -9.815977096557617
    5. '.' → logprob: -10.940977096557617
    6. ' .' → logprob: -11.065977096557617
    7. 'split' → logprob: -13.315977096557617
    8. '.rstrip' → logprob: -13.315977096557617
    9. '))' → logprob: -14.940977096557617
    10. '.Split' → logprob: -15.190977096557617

Token 464: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.013922899030148983
    2. '()))
' → logprob: -4.513922691345215
    3. '))' → logprob: -6.138922691345215
    4. '()' → logprob: -7.263922691345215
    5. '))
' → logprob: -12.638922691345215
    6. '()))

' → logprob: -12.638922691345215
    7. '(' → logprob: -12.638922691345215
    8. '())' → logprob: -13.763922691345215
    9. '()))
' → logprob: -13.888922691345215
    10. '()
' → logprob: -14.513922691345215

Token 465: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000273971410933882
    2. 'return' → logprob: -8.625273704528809
    3. ' return' → logprob: -9.875273704528809
    4. '
' → logprob: -10.375273704528809
    5. '                
' → logprob: -12.250273704528809
    6. '           ' → logprob: -12.250273704528809
    7. '                   ' → logprob: -14.000273704528809
    8. '```' → logprob: -14.125273704528809
    9. '<|end|>' → logprob: -15.750273704528809
    10. '              ' → logprob: -16.125274658203125

Token 466: ' yield' (ID: 14376)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005719862412661314
    2. 'return' → logprob: -5.3807196617126465
    3. 'yield' (adapté à ' yield') → logprob: -7.6307196617126465
    4. '           ' → logprob: -8.130720138549805
    5. 's' → logprob: -8.505720138549805
    6. ' return' → logprob: -9.880720138549805
    7. 'result' → logprob: -10.880720138549805
    8. ' yield' → logprob: -11.005720138549805
    9. '
' → logprob: -11.255720138549805
    10. '```' → logprob: -11.755720138549805

Token 467: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.05089126527309418
    2. '(n' → logprob: -3.300891160964966
    3. ' n' → logprob: -4.550891399383545
    4. ' (' → logprob: -6.800891399383545
    5. 'S' → logprob: -6.925891399383545
    6. '(S' → logprob: -10.300890922546387
    7. ' S' → logprob: -10.550890922546387
    8. '   ' → logprob: -10.925890922546387
    9. '               ' → logprob: -11.675890922546387
    10. '           ' → logprob: -11.925890922546387

Token 468: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00935156550258398
    2. ',m' → logprob: -4.75935173034668
    3. ' ,' → logprob: -7.25935173034668
    4. '               ' → logprob: -11.25935173034668
    5. 'm' → logprob: -11.88435173034668
    6. 's' → logprob: -12.13435173034668
    7. ',s' → logprob: -12.25935173034668
    8. ',
' → logprob: -14.13435173034668
    9. ',n' → logprob: -14.13435173034668
    10. '‌,' → logprob: -14.50935173034668

Token 469: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.002483149990439415
    2. ' m' → logprob: -6.002483367919922
    3. 's' → logprob: -11.877483367919922
    4. '   ' → logprob: -15.752483367919922
    5. ' s' → logprob: -16.252483367919922
    6. '           ' → logprob: -16.377483367919922
    7. '	m' → logprob: -16.752483367919922
    8. '       ' → logprob: -17.127483367919922
    9. '<|end|>' → logprob: -17.127483367919922
    10. ' ' → logprob: -17.627483367919922

Token 470: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024167513474822044
    2. '               ' → logprob: -4.024167537689209
    3. '<|end|>' → logprob: -5.899167537689209
    4. ',s' → logprob: -6.149167537689209
    5. ' ,' → logprob: -7.649167537689209
    6. 's' → logprob: -7.649167537689209
    7. '           ' → logprob: -10.14916706085205
    8. '<|end|>' → logprob: -10.27416706085205
    9. ' s' → logprob: -11.14916706085205
    10. '```' → logprob: -11.52416706085205

Token 471: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -4.572941179503687e-05
    2. ' s' → logprob: -10.000045776367188
    3. 'self' → logprob: -15.500045776367188
    4. 'S' → logprob: -18.250045776367188
    5. '               ' → logprob: -19.000045776367188
    6. '           ' → logprob: -19.750045776367188
    7. '   ' → logprob: -20.000045776367188
    8. '	s' → logprob: -20.125045776367188
    9. '_s' → logprob: -20.250045776367188
    10. '`s' → logprob: -20.625045776367188

Token 472: 'cones' (ID: 98588)
  Prédit: 'cones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cones' → logprob: -0.00015586259542033076
    2. 'ones' → logprob: -9.125155448913574
    3. 's' → logprob: -10.125155448913574
    4. 'con' → logprob: -12.875155448913574
    5. 'cone' → logprob: -13.500155448913574
    6. ' cones' → logprob: -13.750155448913574
    7. 'c' → logprob: -15.250155448913574
    8. '
' → logprob: -15.500155448913574
    9. 'cons' → logprob: -15.625155448913574
    10. 'comes' → logprob: -15.625155448913574

Token 473: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06167598441243172
    2. '<|end|>' → logprob: -3.436676025390625
    3. 'def' → logprob: -3.936676025390625
    4. '       ' → logprob: -4.936676025390625
    5. '
' → logprob: -7.561676025390625
    6. '<|end|>' → logprob: -8.436676025390625
    7. '    
' → logprob: -9.186676025390625
    8. '        
' → logprob: -10.811676025390625
    9. '```' → logprob: -11.186676025390625
    10. 'class' → logprob: -11.311676025390625

Token 474: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12696266174316406
    2. '   ' → logprob: -2.126962661743164
    3. '       ' → logprob: -11.626962661743164
    4. ' def' → logprob: -11.751962661743164
    5. '<|end|>' → logprob: -11.876962661743164
    6. 'if' → logprob: -12.001962661743164
    7. '```' → logprob: -13.001962661743164
    8. '	def' → logprob: -13.751962661743164
    9. '    
' → logprob: -14.251962661743164
    10. '
' → logprob: -15.626962661743164

Token 475: ' class' (ID: 744)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0014407115522772074
    2. '   ' → logprob: -6.751440525054932
    3. 'if' → logprob: -8.25144100189209
    4. ' def' → logprob: -11.75144100189209
    5. '@' → logprob: -13.37644100189209
    6. '```' → logprob: -16.501440048217773
    7. '	def' → logprob: -16.626440048217773
    8. 'class' (adapté à ' class') → logprob: -17.001440048217773
    9. '    
' → logprob: -17.751440048217773
    10. '       ' → logprob: -18.001440048217773

Token 476: ' Output' (ID: 18315)
  Prédit: 'Solution'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Solution' → logprob: -1.1159846782684326
    2. 'Solver' → logprob: -1.1159846782684326
    3. 'Runner' → logprob: -1.2409846782684326
    4. 'S' → logprob: -4.490984916687012
    5. ' Runner' → logprob: -4.615984916687012
    6. 'Processor' → logprob: -4.615984916687012
    7. 'Executor' → logprob: -4.990984916687012
    8. ' Solver' → logprob: -5.240984916687012
    9. ' Solution' → logprob: -5.490984916687012
    10. 'Output' → logprob: -6.115984916687012

Token 477: 'Formatter' (ID: 22956)
  Prédit: 'Writer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -0.0930970162153244
    2. ':' → logprob: -3.343096971511841
    3. 'ter' → logprob: -3.593096971511841
    4. 'Handler' → logprob: -4.46809720993042
    5. 'Printer' → logprob: -4.96809720993042
    6. ':
' → logprob: -5.71809720993042
    7. 'Generator' → logprob: -6.34309720993042
    8. 'Formatter' → logprob: -6.71809720993042
    9. 'Manager' → logprob: -7.96809720993042
    10. 'er' → logprob: -8.218096733093262

Token 478: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11283998191356659
    2. ':
' → logprob: -2.237839937210083
    3. ':def' → logprob: -11.737839698791504
    4. '   ' → logprob: -12.112839698791504
    5. '       ' → logprob: -13.987839698791504
    6. ':

' → logprob: -14.112839698791504
    7. 'def' → logprob: -14.737839698791504
    8. ':
' → logprob: -14.862839698791504
    9. '(object' → logprob: -14.862839698791504
    10. '):' → logprob: -15.237839698791504

Token 479: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.029982350766658783
    2. '       ' → logprob: -3.529982328414917
    3. 'def' → logprob: -8.904982566833496
    4. ' def' → logprob: -10.404982566833496
    5. '    ' → logprob: -11.029982566833496
    6. '	def' → logprob: -11.029982566833496
    7. '     ' → logprob: -11.529982566833496
    8. '```' → logprob: -11.779982566833496
    9. '	   ' → logprob: -12.404982566833496
    10. '           ' → logprob: -13.029982566833496

Token 480: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.24654605984687805
    2. '   ' → logprob: -1.9965460300445557
    3. '@' → logprob: -2.4965460300445557
    4. ' def' → logprob: -8.621545791625977
    5. '       ' → logprob: -9.121545791625977
    6. ' @' → logprob: -10.121545791625977
    7. 'staticmethod' → logprob: -14.121545791625977
    8. '	def' → logprob: -14.496545791625977
    9. '```' → logprob: -14.871545791625977
    10. 'static' → logprob: -14.996545791625977

Token 481: ' __' (ID: 2516)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -1.0419262647628784
    2. 'format' → logprob: -1.0419262647628784
    3. ' format' → logprob: -1.7919262647628784
    4. 'def' → logprob: -2.166926383972168
    5. 'staticmethod' → logprob: -5.041926383972168
    6. ' __' → logprob: -5.541926383972168
    7. ' static' → logprob: -6.416926383972168
    8. ' print' → logprob: -7.666926383972168
    9. '__' → logprob: -8.166926383972168
    10. ' write' → logprob: -9.166926383972168

Token 482: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.03810448944568634
    2. 'call' → logprob: -3.28810453414917
    3. 'format' → logprob: -10.663104057312012
    4. 'new' → logprob: -11.538104057312012
    5. 'iter' → logprob: -11.788104057312012
    6. 'append' → logprob: -11.913104057312012
    7. 'next' → logprob: -12.038104057312012
    8. 'def' → logprob: -13.038104057312012
    9. 'write' → logprob: -13.288104057312012
    10. 'str' → logprob: -14.038104057312012

Token 483: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.019190583378076553
    2. '(' → logprob: -4.144190788269043
    3. '__(' → logprob: -6.394190788269043
    4. '       ' → logprob: -7.519190788269043
    5. ' (' → logprob: -7.894190788269043
    6. '   ' → logprob: -8.769190788269043
    7. ' ' → logprob: -9.394190788269043
    8. 'self' → logprob: -9.519190788269043
    9. '           ' → logprob: -10.019190788269043
    10. '```' → logprob: -10.394190788269043

Token 484: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00017648482753429562
    2. '):
' → logprob: -9.250176429748535
    3. ')' → logprob: -9.500176429748535
    4. ')(' → logprob: -13.625176429748535
    5. '):' → logprob: -13.875176429748535
    6. ' self' → logprob: -13.875176429748535
    7. '       ' → logprob: -14.125176429748535
    8. '   ' → logprob: -14.375176429748535
    9. '(self' → logprob: -15.125176429748535
    10. '):

' → logprob: -15.375176429748535

Token 485: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5763245820999146
    2. '):' → logprob: -0.8263245820999146
    3. 'self' → logprob: -8.076324462890625
    4. ',' → logprob: -10.326324462890625
    5. '   ' → logprob: -11.451324462890625
    6. '(self' → logprob: -11.576324462890625
    7. ')' → logprob: -11.701324462890625
    8. '):
' → logprob: -12.076324462890625
    9. '       ' → logprob: -13.201324462890625
    10. '):

' → logprob: -13.201324462890625

Token 486: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09351497888565063
    2. 'def' → logprob: -3.093514919281006
    3. '   ' → logprob: -3.218514919281006
    4. ' def' → logprob: -6.468514919281006
    5. ')' → logprob: -6.968514919281006
    6. 'self' → logprob: -7.343514919281006
    7. '
' → logprob: -7.968514919281006
    8. '```' → logprob: -8.843515396118164
    9. ' ' → logprob: -9.468515396118164
    10. '):
' → logprob: -9.593515396118164

Token 487: ' pass' (ID: 1853)
  Prédit: 'pass'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pass' (adapté à ' pass') → logprob: -0.27906134724617004
    2. '       ' → logprob: -1.5290613174438477
    3. 'def' → logprob: -4.029061317443848
    4. '   ' → logprob: -4.779061317443848
    5. ' pass' → logprob: -7.654061317443848
    6. '
' → logprob: -9.779061317443848
    7. '	pass' → logprob: -10.654061317443848
    8. '           ' → logprob: -11.404061317443848
    9. ' def' → logprob: -12.404061317443848
    10. 'self' → logprob: -14.154061317443848

Token 488: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7330581545829773
    2. '       ' → logprob: -1.233058214187622
    3. '
' → logprob: -1.483058214187622
    4. '    
' → logprob: -7.608057975769043
    5. '        
' → logprob: -7.733057975769043
    6. 'def' → logprob: -8.233057975769043
    7. '```' → logprob: -11.983057975769043
    8. ' def' → logprob: -13.108057975769043
    9. '            
' → logprob: -13.233057975769043
    10. '<|end|>' → logprob: -13.483057975769043

Token 489: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33224523067474365
    2. '       ' → logprob: -1.3322452306747437
    3. 'def' → logprob: -4.207245349884033
    4. '
' → logprob: -5.582245349884033
    5. '    
' → logprob: -9.707244873046875
    6. ' def' → logprob: -10.207244873046875
    7. '	def' → logprob: -10.582244873046875
    8. '        
' → logprob: -10.957244873046875
    9. '```' → logprob: -12.457244873046875
    10. '           ' → logprob: -12.957244873046875

Token 490: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -2.1008713702030946e-06
    2. '   ' → logprob: -13.500001907348633
    3. ' def' → logprob: -14.250001907348633
    4. '       ' → logprob: -17.250001907348633
    5. '@' → logprob: -19.250001907348633
    6. '
' → logprob: -20.125001907348633
    7. '	def' → logprob: -20.500001907348633
    8. ' ' → logprob: -22.125001907348633
    9. '```' → logprob: -24.375001907348633
    10. '  ' → logprob: -24.750001907348633

Token 491: ' print' (ID: 2123)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.0006614457233808935
    2. 'print' → logprob: -7.500661373138428
    3. ' format' → logprob: -9.250661849975586
    4. 'write' → logprob: -11.625661849975586
    5. 'max' → logprob: -13.625661849975586
    6. 'output' → logprob: -13.750661849975586
    7. 'display' → logprob: -14.625661849975586
    8. 'formatted' → logprob: -15.875661849975586
    9. 'result' → logprob: -16.250661849975586
    10. 'prepare' → logprob: -16.625661849975586

Token 492: '_result' (ID: 11623)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10702569037675858
    2. '_result' → logprob: -3.232025623321533
    3. '_max' → logprob: -3.357025623321533
    4. 'max' → logprob: -4.232025623321533
    5. '_results' → logprob: -5.357025623321533
    6. '_range' → logprob: -5.732025623321533
    7. '_' → logprob: -6.732025623321533
    8. 'result' → logprob: -7.107025623321533
    9. '(max' → logprob: -7.482025623321533
    10. '_ranges' → logprob: -7.857025623321533

Token 493: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06199435144662857
    2. '(' → logprob: -2.8119943141937256
    3. '(
' → logprob: -11.436994552612305
    4. ' (' → logprob: -11.436994552612305
    5. '(s' → logprob: -12.936994552612305
    6. 'self' → logprob: -13.436994552612305
    7. '   ' → logprob: -14.686994552612305
    8. 's' → logprob: -15.061994552612305
    9. '       ' → logprob: -15.561994552612305
    10. ' ' → logprob: -16.686994552612305

Token 494: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.1041145626222715e-05
    2. ',n' → logprob: -12.500011444091797
    3. ' ,' → logprob: -13.000011444091797
    4. ',result' → logprob: -13.000011444091797
    5. ',line' → logprob: -14.250011444091797
    6. '):' → logprob: -14.500011444091797
    7. ',value' → logprob: -14.875011444091797
    8. ',s' → logprob: -15.125011444091797
    9. ',max' → logprob: -15.250011444091797
    10. ',out' → logprob: -16.000011444091797

Token 495: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.07747536897659302
    2. ' result' → logprob: -2.8274753093719482
    3. 'max' → logprob: -4.577475547790527
    4. 'case' → logprob: -6.077475547790527
    5. ' max' → logprob: -6.952475547790527
    6. 'index' → logprob: -7.202475547790527
    7. 'value' → logprob: -7.702475547790527
    8. 'res' → logprob: -8.952475547790527
    9. ' case' → logprob: -9.077475547790527
    10. 'm' → logprob: -9.452475547790527

Token 496: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17334653437137604
    2. '):' → logprob: -1.9233465194702148
    3. '):
' → logprob: -4.673346519470215
    4. 'self' → logprob: -5.673346519470215
    5. '       ' → logprob: -9.548346519470215
    6. '(self' → logprob: -9.798346519470215
    7. '   ' → logprob: -10.298346519470215
    8. ')' → logprob: -10.548346519470215
    9. ' ,' → logprob: -10.798346519470215
    10. ',self' → logprob: -10.923346519470215

Token 497: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018442784203216434
    2. '       ' → logprob: -6.37684440612793
    3. 'print' → logprob: -9.00184440612793
    4. '               ' → logprob: -11.37684440612793
    5. ' print' → logprob: -12.00184440612793
    6. '```' → logprob: -14.25184440612793
    7. '          ' → logprob: -15.37684440612793
    8. '         ' → logprob: -15.62684440612793
    9. '		' → logprob: -16.12684440612793
    10. '	       ' → logprob: -16.62684440612793

Token 498: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.001035191467963159
    2. '           ' → logprob: -7.001035213470459
    3. ' print' → logprob: -9.0010347366333
    4. '               ' → logprob: -15.2510347366333
    5. '```' → logprob: -16.376035690307617
    6. '       ' → logprob: -16.751035690307617
    7. '   ' → logprob: -17.876035690307617
    8. '	print' → logprob: -19.626035690307617
    9. '``' → logprob: -21.751035690307617
    10. '                   ' → logprob: -21.751035690307617

Token 499: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0005442153196781874
    2. '(f' → logprob: -7.87554407119751
    3. 'result' → logprob: -9.250544548034668
    4. '(' → logprob: -9.625544548034668
    5. '(max' → logprob: -13.875544548034668
    6. '("' → logprob: -14.625544548034668
    7. '()' → logprob: -15.000544548034668
    8. 'f' → logprob: -16.12554359436035
    9. '{' → logprob: -17.25054359436035
    10. ' result' → logprob: -17.62554359436035

Token 500: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.128163257315464e-07
    2. ')
' → logprob: -15.5
    3. '       ' → logprob: -17.5
    4. ' )' → logprob: -17.625
    5. ')`' → logprob: -17.75
    6. '())' → logprob: -18.375
    7. '   ' → logprob: -18.5
    8. '()' → logprob: -18.625
    9. '))' → logprob: -19.0
    10. '`)' → logprob: -20.25

Token 501: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.10158942639827728
    2. '   ' → logprob: -2.3515894412994385
    3. 'if' → logprob: -6.601589202880859
    4. ' def' → logprob: -11.47658920288086
    5. 'class' → logprob: -12.85158920288086
    6. '<|end|>' → logprob: -12.85158920288086
    7. '```' → logprob: -12.85158920288086
    8. '       ' → logprob: -13.22658920288086
    9. '	def' → logprob: -13.97658920288086
    10. '<|end|>' → logprob: -14.60158920288086

Token 502: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0009710140293464065
    2. '   ' → logprob: -7.000970840454102
    3. 'if' → logprob: -10.000970840454102
    4. '@' → logprob: -12.125970840454102
    5. 'class' → logprob: -12.250970840454102
    6. ' def' → logprob: -12.500970840454102
    7. '
' → logprob: -16.6259708404541
    8. '	def' → logprob: -16.6259708404541
    9. '    
' → logprob: -16.8759708404541
    10. '```' → logprob: -17.7509708404541

Token 503: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.6311792135238647
    2. ' __' → logprob: -1.7561792135238647
    3. 'run' → logprob: -2.0061793327331543
    4. ' run' → logprob: -2.2561793327331543
    5. 'solve' → logprob: -3.6311793327331543
    6. ' solve' → logprob: -3.7561793327331543
    7. 'main' → logprob: -6.256179332733154
    8. ' main' → logprob: -6.381179332733154
    9. 'process' → logprob: -6.881179332733154
    10. 'def' → logprob: -7.256179332733154

Token 504: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. '_init' → logprob: -17.25
    3. ' init' → logprob: -18.5
    4. 'ini' → logprob: -21.25
    5. 'def' → logprob: -22.625
    6. 'i' → logprob: -23.625
    7. '   ' → logprob: -23.625
    8. '	init' → logprob: -23.625
    9. 'inite' → logprob: -23.75
    10. 'new' → logprob: -23.75

Token 505: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0006156971794553101
    2. '__' → logprob: -7.62561559677124
    3. '(self' → logprob: -9.625616073608398
    4. '__(
' → logprob: -9.875616073608398
    5. '(' → logprob: -12.000616073608398
    6. '_(' → logprob: -13.500616073608398
    7. '__((' → logprob: -14.375616073608398
    8. 'self' → logprob: -14.625616073608398
    9. ')(' → logprob: -15.000616073608398
    10. '__(*' → logprob: -15.000616073608398

Token 506: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.7610454708337784e-05
    2. ' self' → logprob: -10.625027656555176
    3. '
' → logprob: -13.250027656555176
    4. '   ' → logprob: -14.500027656555176
    5. ')' → logprob: -14.625027656555176
    6. '       ' → logprob: -15.625027656555176
    7. ',' → logprob: -15.875027656555176
    8. ' ' → logprob: -16.00002670288086
    9. '0' → logprob: -16.25002670288086
    10. '  ' → logprob: -17.87502670288086

Token 507: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001052934443578124
    2. 'self' → logprob: -7.2510528564453125
    3. '):' → logprob: -8.876052856445312
    4. ',self' → logprob: -8.876052856445312
    5. ' ,' → logprob: -10.126052856445312
    6. '):
' → logprob: -12.001052856445312
    7. '(self' → logprob: -12.126052856445312
    8. ')' → logprob: -12.251052856445312
    9. '   ' → logprob: -13.001052856445312
    10. ' self' → logprob: -13.376052856445312

Token 508: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0003733542689587921
    2. '       ' → logprob: -8.125372886657715
    3. '   ' → logprob: -9.750372886657715
    4. ' self' → logprob: -11.000372886657715
    5. '
' → logprob: -13.625372886657715
    6. '           ' → logprob: -14.875372886657715
    7. '(self' → logprob: -15.125372886657715
    8. ' ' → logprob: -16.12537384033203
    9. '     ' → logprob: -16.87537384033203
    10. ',' → logprob: -17.00037384033203

Token 509: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.047405242919921875
    2. '       ' → logprob: -3.922405242919922
    3. 'pass' → logprob: -4.047405242919922
    4. ' self' → logprob: -5.297405242919922
    5. '   ' → logprob: -5.672405242919922
    6. ' pass' → logprob: -7.797405242919922
    7. 'def' → logprob: -9.797405242919922
    8. '
' → logprob: -10.422405242919922
    9. '0' → logprob: -10.797405242919922
    10. 'None' → logprob: -11.047405242919922

Token 510: '.parser' (ID: 50244)
  Prédit: '.parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parser' → logprob: -0.7657948732376099
    2. '.input' → logprob: -1.3907948732376099
    3. '.selector' → logprob: -1.7657948732376099
    4. '.Input' → logprob: -3.0157947540283203
    5. '.Select' → logprob: -4.26579475402832
    6. '.Parser' → logprob: -4.39079475402832
    7. '.sub' → logprob: -4.89079475402832
    8. '.S' → logprob: -5.01579475402832
    9. '.Sub' → logprob: -5.64079475402832
    10. '.Selected' → logprob: -5.76579475402832

Token 511: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868735730648041
    2. ' =' → logprob: -1.1368736028671265
    3. '=self' → logprob: -13.761873245239258
    4. '   ' → logprob: -14.886873245239258
    5. '       ' → logprob: -15.011873245239258
    6. '=
' → logprob: -15.886873245239258
    7. ' ' → logprob: -15.886873245239258
    8. ' =
' → logprob: -16.011873245239258
    9. ',' → logprob: -16.511873245239258
    10. 'self' → logprob: -16.511873245239258

Token 512: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1270257532596588
    2. 'S' → logprob: -2.127025842666626
    3. ' self' → logprob: -9.252025604248047
    4. ' S' → logprob: -13.627025604248047
    5. 'Self' → logprob: -15.502025604248047
    6. '(self' → logprob: -16.127025604248047
    7. '   ' → logprob: -16.252025604248047
    8. '=self' → logprob: -17.502025604248047
    9. '\S' → logprob: -17.752025604248047
    10. '       ' → logprob: -18.252025604248047

Token 513: '.Input' (ID: 22638)
  Prédit: '.Input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Input' → logprob: -0.0003055493871215731
    2. '.Parser' → logprob: -8.62530517578125
    3. '.S' → logprob: -10.12530517578125
    4. '.Sub' → logprob: -10.25030517578125
    5. 'Parser' → logprob: -11.25030517578125
    6. 'Input' → logprob: -11.37530517578125
    7. '.Output' → logprob: -11.62530517578125
    8. '.Code' → logprob: -11.87530517578125
    9. 'parser' → logprob: -12.75030517578125
    10. '.' → logprob: -13.00030517578125

Token 514: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -1.9361264946837764e-07
    2. '_parser' → logprob: -16.625
    3. 'parser' → logprob: -16.875
    4. '.Parser' → logprob: -18.625
    5. '(Parser' → logprob: -19.5
    6. 'Parse' → logprob: -19.75
    7. ' Parser' → logprob: -20.25
    8. 'Parsed' → logprob: -20.375
    9. 'Processor' → logprob: -20.5
    10. ' parser' → logprob: -20.625

Token 515: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011910604080185294
    2. 'self' → logprob: -7.251191139221191
    3. '
' → logprob: -8.126191139221191
    4. '<|end|>' → logprob: -9.501191139221191
    5. ' self' → logprob: -9.876191139221191
    6. '   ' → logprob: -10.126191139221191
    7. '           ' → logprob: -12.126191139221191
    8. 'def' → logprob: -12.376191139221191
    9. ',' → logprob: -12.751191139221191
    10. '(self' → logprob: -13.126191139221191

Token 516: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.13816438615322113
    2. '       ' → logprob: -2.1381642818450928
    3. 'def' → logprob: -5.138164520263672
    4. ' self' → logprob: -5.638164520263672
    5. '   ' → logprob: -6.388164520263672
    6. '<|end|>' → logprob: -10.388164520263672
    7. '	self' → logprob: -11.638164520263672
    8. '           ' → logprob: -12.013164520263672
    9. ' ' → logprob: -12.263164520263672
    10. '
' → logprob: -12.763164520263672

Token 517: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0022946596145629883
    2. ' self' → logprob: -6.877294540405273
    3. 'def' → logprob: -7.002294540405273
    4. '       ' → logprob: -8.127294540405273
    5. '   ' → logprob: -11.002294540405273
    6. '
' → logprob: -11.252294540405273
    7. '<|end|>' → logprob: -11.252294540405273
    8. 'for' → logprob: -12.877294540405273
    9. '	self' → logprob: -13.002294540405273
    10. '           ' → logprob: -13.502294540405273

Token 518: '.output' (ID: 27521)
  Prédit: '.format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.format' → logprob: -0.01912064105272293
    2. 'formatter' → logprob: -5.144120693206787
    3. '.selector' → logprob: -5.269120693206787
    4. '.output' → logprob: -5.394120693206787
    5. '.results' → logprob: -6.019120693206787
    6. '.outputs' → logprob: -8.144120216369629
    7. '.form' → logprob: -8.769120216369629
    8. '.processor' → logprob: -8.894120216369629
    9. '.runner' → logprob: -10.144120216369629
    10. '.setter' → logprob: -10.394120216369629

Token 519: 'ter' (ID: 399)
  Prédit: '_formatter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_formatter' → logprob: -0.033662643283605576
    2. 'Formatter' → logprob: -4.158662796020508
    3. '=' → logprob: -4.783662796020508
    4. 'formatter' → logprob: -5.283662796020508
    5. ' =' → logprob: -5.658662796020508
    6. 'ter' → logprob: -7.783662796020508
    7. '_format' → logprob: -9.783662796020508
    8. 'format' → logprob: -10.658662796020508
    9. 'er' → logprob: -10.783662796020508
    10. '   ' → logprob: -11.033662796020508

Token 520: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868778347969055
    2. ' =' → logprob: -1.1368777751922607
    3. '   ' → logprob: -12.51187801361084
    4. '.' → logprob: -13.51187801361084
    5. ' ' → logprob: -14.13687801361084
    6. '=self' → logprob: -14.76187801361084
    7. '.=' → logprob: -14.88687801361084
    8. 's' → logprob: -16.636877059936523
    9. '  ' → logprob: -16.636877059936523
    10. '       ' → logprob: -17.511877059936523

Token 521: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007101670489646494
    2. ' self' → logprob: -7.2507100105285645
    3. '       ' → logprob: -15.875710487365723
    4. 'S' → logprob: -16.625709533691406
    5. '
' → logprob: -17.000709533691406
    6. '   ' → logprob: -18.500709533691406
    7. '(self' → logprob: -18.750709533691406
    8. '           ' → logprob: -19.750709533691406
    9. '=self' → logprob: -20.250709533691406
    10. '	self' → logprob: -20.750709533691406

Token 522: '.Output' (ID: 52068)
  Prédit: '.Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Output' → logprob: -6.704273118884885e-07
    2. '.' → logprob: -14.875000953674316
    3. 'Output' → logprob: -15.500000953674316
    4. ' .' → logprob: -18.5
    5. '.Input' → logprob: -18.875
    6. '.Out' → logprob: -19.625
    7. '.output' → logprob: -19.625
    8. '(Output' → logprob: -20.75
    9. '.O' → logprob: -20.875
    10. '	Output' → logprob: -21.375

Token 523: 'Formatter' (ID: 22956)
  Prédit: 'Formatter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Formatter' → logprob: -8.41866585687967e-06
    2. 'formatter' → logprob: -12.000008583068848
    3. '_formatter' → logprob: -13.625008583068848
    4. 'ter' → logprob: -14.000008583068848
    5. 'Format' → logprob: -17.00000762939453
    6. 'Output' → logprob: -17.37500762939453
    7. 'Printer' → logprob: -17.62500762939453
    8. 'Renderer' → logprob: -18.00000762939453
    9. 'er' → logprob: -18.12500762939453
    10. 'Appender' → logprob: -18.75000762939453

Token 524: '()

' (ID: 5874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1973235160112381
    2. '
' → logprob: -2.3223235607147217
    3. 'def' → logprob: -3.1973235607147217
    4. '<|end|>' → logprob: -3.3223235607147217
    5. '    
' → logprob: -5.947323322296143
    6. '<|end|>' → logprob: -7.822323322296143
    7. '        
' → logprob: -7.947323322296143
    8. ' def' → logprob: -8.0723237991333
    9. '       ' → logprob: -8.3223237991333
    10. '

' → logprob: -9.1973237991333

Token 525: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5760282278060913
    2. '   ' → logprob: -0.8260282278060913
    3. ' def' → logprob: -9.451027870178223
    4. '       ' → logprob: -12.326027870178223
    5. '
' → logprob: -12.451027870178223
    6. '    
' → logprob: -14.076027870178223
    7. '	def' → logprob: -15.076027870178223
    8. '<|end|>' → logprob: -15.076027870178223
    9. '```' → logprob: -15.701027870178223
    10. '        
' → logprob: -16.07602882385254

Token 526: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -7.3458322731312364e-06
    2. ' def' → logprob: -12.000007629394531
    3. '   ' → logprob: -13.875007629394531
    4. '
' → logprob: -15.625007629394531
    5. '        
' → logprob: -18.00000762939453
    6. '    
' → logprob: -18.12500762939453
    7. '       ' → logprob: -18.62500762939453
    8. '	def' → logprob: -18.62500762939453
    9. '```' → logprob: -20.00000762939453
    10. ' ' → logprob: -21.25000762939453

Token 527: ' solve' (ID: 17722)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.4077535569667816
    2. 'solve' → logprob: -1.407753586769104
    3. 'process' → logprob: -2.4077534675598145
    4. 'compute' → logprob: -10.157753944396973
    5. 'main' → logprob: -10.157753944396973
    6. 'execute' → logprob: -10.407753944396973
    7. ' run' → logprob: -11.407753944396973
    8. ' solve' → logprob: -11.407753944396973
    9. 'calculate' → logprob: -11.657753944396973
    10. 'handle' → logprob: -12.907753944396973

Token 528: '_dataset' (ID: 40568)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.004091697279363871
    2. '(' → logprob: -5.504091739654541
    3. 'self' → logprob: -11.754091262817383
    4. '   ' → logprob: -13.254091262817383
    5. '       ' → logprob: -13.754091262817383
    6. ' (' → logprob: -14.004091262817383
    7. '(
' → logprob: -14.129091262817383
    8. '_(' → logprob: -14.504091262817383
    9. '(Self' → logprob: -16.129091262817383
    10. '(s' → logprob: -16.254091262817383

Token 529: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001596771035110578
    2. '(' → logprob: -8.75015926361084
    3. ' (' → logprob: -14.37515926361084
    4. '(
' → logprob: -15.25015926361084
    5. 'self' → logprob: -15.75015926361084
    6. '   ' → logprob: -16.000160217285156
    7. '       ' → logprob: -17.375160217285156
    8. '(Self' → logprob: -17.875160217285156
    9. '(this' → logprob: -19.375160217285156
    10. '	self' → logprob: -19.500160217285156

Token 530: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0020339188631623983
    2. '):' → logprob: -6.502033710479736
    3. '):
' → logprob: -8.377034187316895
    4. 'self' → logprob: -8.627034187316895
    5. '       ' → logprob: -9.877034187316895
    6. ',self' → logprob: -11.002034187316895
    7. ' ,' → logprob: -11.002034187316895
    8. '   ' → logprob: -11.377034187316895
    9. ',n' → logprob: -11.377034187316895
    10. '(self' → logprob: -12.752034187316895

Token 531: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.004096093121916056
    2. ' n' → logprob: -6.004096031188965
    3. 'self' → logprob: -7.129096031188965
    4. '):
' → logprob: -8.004096031188965
    5. '   ' → logprob: -8.879096031188965
    6. '):' → logprob: -9.129096031188965
    7. 'dataset' → logprob: -9.379096031188965
    8. ')' → logprob: -10.004096031188965
    9. '
' → logprob: -10.629096031188965
    10. 'data' → logprob: -11.004096031188965

Token 532: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.85104202805087e-05
    2. ' ,' → logprob: -10.000078201293945
    3. ',self' → logprob: -11.250078201293945
    4. 'self' → logprob: -11.500078201293945
    5. ',m' → logprob: -12.375078201293945
    6. ',
' → logprob: -12.500078201293945
    7. '       ' → logprob: -14.625078201293945
    8. '   ' → logprob: -15.000078201293945
    9. ',s' → logprob: -15.250078201293945
    10. ' self' → logprob: -15.500078201293945

Token 533: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.033703334629535675
    2. ' m' → logprob: -3.408703327178955
    3. '   ' → logprob: -10.783703804016113
    4. '       ' → logprob: -11.033703804016113
    5. '           ' → logprob: -11.408703804016113
    6. 'self' → logprob: -13.158703804016113
    7. '    ' → logprob: -13.533703804016113
    8. ' ' → logprob: -13.658703804016113
    9. '               ' → logprob: -13.908703804016113
    10. '     ' → logprob: -14.408703804016113

Token 534: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.935296834039036e-06
    2. ' ,' → logprob: -13.50000286102295
    3. ',s' → logprob: -15.00000286102295
    4. ',self' → logprob: -15.00000286102295
    5. 'self' → logprob: -15.25000286102295
    6. '       ' → logprob: -15.50000286102295
    7. ',
' → logprob: -15.62500286102295
    8. '):' → logprob: -16.125003814697266
    9. '   ' → logprob: -17.000003814697266
    10. '):
' → logprob: -17.125003814697266

Token 535: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.002821635687723756
    2. ' s' → logprob: -5.877821445465088
    3. '   ' → logprob: -11.252821922302246
    4. '       ' → logprob: -13.502821922302246
    5. '           ' → logprob: -14.627821922302246
    6. ' ' → logprob: -14.877821922302246
    7. '     ' → logprob: -15.002821922302246
    8. '    ' → logprob: -15.377821922302246
    9. '  ' → logprob: -15.627821922302246
    10. '```' → logprob: -15.752821922302246

Token 536: 'cones' (ID: 98588)
  Prédit: 'cones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cones' → logprob: -1.3306015716807451e-05
    2. 'con' → logprob: -12.50001335144043
    3. ' cones' → logprob: -12.62501335144043
    4. '```' → logprob: -13.00001335144043
    5. ',' → logprob: -14.25001335144043
    6. 'cone' → logprob: -14.62501335144043
    7. 'comes' → logprob: -14.62501335144043
    8. '``' → logprob: -14.75001335144043
    9. '   ' → logprob: -15.00001335144043
    10. 's' → logprob: -15.12501335144043

Token 537: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.16036304831504822
    2. '):
' → logprob: -1.9103630781173706
    3. '):
' → logprob: -9.91036319732666
    4. '   ' → logprob: -10.16036319732666
    5. ',' → logprob: -10.41036319732666
    6. '       ' → logprob: -11.16036319732666
    7. ' ):' → logprob: -12.66036319732666
    8. '):

' → logprob: -13.28536319732666
    9. ':' → logprob: -14.78536319732666
    10. ')' → logprob: -15.66036319732666

Token 538: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011127522215247154
    2. ':' → logprob: -4.636127471923828
    3. ',' → logprob: -7.511127471923828
    4. ':
' → logprob: -8.511127471923828
    5. '<|end|>' → logprob: -8.511127471923828
    6. '):
' → logprob: -8.761127471923828
    7. '.' → logprob: -10.011127471923828
    8. '   ' → logprob: -10.136127471923828
    9. '```' → logprob: -10.386127471923828
    10. '<|end|>' → logprob: -10.511127471923828

Token 539: ' selector' (ID: 19970)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39235493540763855
    2. 'selector' (adapté à ' selector') → logprob: -1.517354965209961
    3. 'subset' → logprob: -2.767354965209961
    4. ' selector' → logprob: -3.517354965209961
    5. ' subset' → logprob: -4.642354965209961
    6. 'return' → logprob: -6.892354965209961
    7. 'max' → logprob: -7.142354965209961
    8. '   ' → logprob: -7.892354965209961
    9. ' max' → logprob: -8.017354965209961
    10. ' return' → logprob: -8.642354965209961

Token 540: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740854501724243
    2. '=' → logprob: -0.9740854501724243
    3. '   ' → logprob: -12.099085807800293
    4. '       ' → logprob: -14.099085807800293
    5. '.' → logprob: -14.599085807800293
    6. ' ' → logprob: -14.724085807800293
    7. '    ' → logprob: -15.349085807800293
    8. '  ' → logprob: -15.474085807800293
    9. '=
' → logprob: -15.599085807800293
    10. '        ' → logprob: -15.849085807800293

Token 541: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.019174672663211823
    2. ' self' → logprob: -4.019174575805664
    3. 'S' → logprob: -6.894174575805664
    4. ' S' → logprob: -11.519174575805664
    5. '       ' → logprob: -15.269174575805664
    6. '(self' → logprob: -16.019174575805664
    7. '   ' → logprob: -16.394174575805664
    8. '=self' → logprob: -16.644174575805664
    9. 'Self' → logprob: -16.769174575805664
    10. '	self' → logprob: -17.144174575805664

Token 542: '.Sub' (ID: 24953)
  Prédit: '.Sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Sub' → logprob: -0.06686532497406006
    2. 'Subset' → logprob: -3.3168654441833496
    3. '.S' → logprob: -3.5668654441833496
    4. '.' → logprob: -9.066864967346191
    5. '.Substring' → logprob: -11.316864967346191
    6. '.Select' → logprob: -11.441864967346191
    7. ' .' → logprob: -11.691864967346191
    8. 'S' → logprob: -11.816864967346191
    9. 'subset' → logprob: -12.316864967346191
    10. '   ' → logprob: -13.566864967346191

Token 543: 'set' (ID: 977)
  Prédit: 'set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -3.7697225252486533e-06
    2. 'et' → logprob: -12.500003814697266
    3. 'Set' → logprob: -18.500003814697266
    4. 'est' → logprob: -18.625003814697266
    5. 'subset' → logprob: -19.750003814697266
    6. '```' → logprob: -19.875003814697266
    7. 'aset' → logprob: -20.000003814697266
    8. 'sect' → logprob: -20.625003814697266
    9. ' set' → logprob: -21.000003814697266
    10. 's' → logprob: -21.000003814697266

Token 544: 'Selector' (ID: 8011)
  Prédit: 'Selector'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Selector' → logprob: -1.2664456789934775e-06
    2. 'selector' → logprob: -13.625000953674316
    3. ' Selector' → logprob: -18.500001907348633
    4. '   ' → logprob: -19.000001907348633
    5. '       ' → logprob: -19.000001907348633
    6. '_selector' → logprob: -19.250001907348633
    7. 'Select' → logprob: -20.000001907348633
    8. 'Selectors' → logprob: -20.250001907348633
    9. '_SELECTOR' → logprob: -21.125001907348633
    10. 'Sele' → logprob: -21.250001907348633

Token 545: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.5107177862082608e-05
    2. 's' → logprob: -10.750024795532227
    3. '       ' → logprob: -13.375024795532227
    4. '   ' → logprob: -14.500024795532227
    5. ' (' → logprob: -14.875024795532227
    6. '           ' → logprob: -15.000024795532227
    7. '(
' → logprob: -15.000024795532227
    8. '(' → logprob: -15.375024795532227
    9. '(self' → logprob: -15.375024795532227
    10. '```' → logprob: -16.625024795532227

Token 546: 'cones' (ID: 98588)
  Prédit: 'cones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cones' → logprob: -2.546478935983032e-05
    2. 's' → logprob: -11.750025749206543
    3. ',' → logprob: -12.250025749206543
    4. 'cone' → logprob: -12.625025749206543
    5. 'con' → logprob: -12.875025749206543
    6. 'tones' → logprob: -13.750025749206543
    7. '(con' → logprob: -14.375025749206543
    8. '.s' → logprob: -14.500025749206543
    9. 'comes' → logprob: -14.500025749206543
    10. '[]' → logprob: -14.625025749206543

Token 547: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020580526324920356
    2. ',m' → logprob: -8.500205993652344
    3. ' ,' → logprob: -13.500205993652344
    4. 'm' → logprob: -14.125205993652344
    5. ',
' → logprob: -16.125205993652344
    6. '       ' → logprob: -17.125205993652344
    7. '   ' → logprob: -17.250205993652344
    8. '           ' → logprob: -18.500205993652344
    9. '[m' → logprob: -19.375205993652344
    10. ')' → logprob: -20.000205993652344

Token 548: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.2519291639328003
    2. 'm' → logprob: -1.5019291639328003
    3. '	m' → logprob: -17.751928329467773
    4. '```' → logprob: -18.001928329467773
    5. ' ' → logprob: -18.001928329467773
    6. ')' → logprob: -18.126928329467773
    7. ')m' → logprob: -18.251928329467773
    8. '           ' → logprob: -18.626928329467773
    9. '   ' → logprob: -18.751928329467773
    10. '       ' → logprob: -19.876928329467773

Token 549: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0620848722755909
    2. ')' → logprob: -2.812084913253784
    3. ')
' → logprob: -9.312085151672363
    4. '       ' → logprob: -10.562085151672363
    5. ' )
' → logprob: -14.437085151672363
    6. ')

' → logprob: -15.437085151672363
    7. '   ' → logprob: -15.812085151672363
    8. '           ' → logprob: -16.062084197998047
    9. ')`
' → logprob: -17.812084197998047
    10. ' )' → logprob: -18.062084197998047

Token 550: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025386622175574303
    2. 'result' → logprob: -4.025386810302734
    3. 'return' → logprob: -5.275386810302734
    4. ' result' → logprob: -6.650386810302734
    5. ' return' → logprob: -7.275386810302734
    6. 'max' → logprob: -10.650386810302734
    7. '           ' → logprob: -10.775386810302734
    8. '   ' → logprob: -10.900386810302734
    9. '
' → logprob: -11.275386810302734
    10. '```' → logprob: -11.525386810302734

Token 551: ' max' (ID: 2999)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.2728733718395233
    2. 'result' → logprob: -1.5228734016418457
    3. '       ' → logprob: -4.272873401641846
    4. 'max' (adapté à ' max') → logprob: -5.022873401641846
    5. '           ' → logprob: -9.272872924804688
    6. ' return' → logprob: -9.647872924804688
    7. ' result' → logprob: -11.147872924804688
    8. 'res' → logprob: -11.647872924804688
    9. 'print' → logprob: -12.147872924804688
    10. '   ' → logprob: -12.522872924804688

Token 552: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -0.003528444329276681
    2. '_result' → logprob: -5.753528594970703
    3. '_rem' → logprob: -9.253528594970703
    4. '_max' → logprob: -9.503528594970703
    5. '_' → logprob: -9.628528594970703
    6. 're' → logprob: -9.753528594970703
    7. 'result' → logprob: -11.378528594970703
    8. 'max' → logprob: -11.378528594970703
    9. '_remaining' → logprob: -11.503528594970703
    10. '_value' → logprob: -11.753528594970703

Token 553: 'mainder' (ID: 40886)
  Prédit: 'mainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mainder' → logprob: -0.0010665126610547304
    2. 'ma' → logprob: -6.8760666847229
    3. 'm' → logprob: -10.376066207885742
    4. '_ma' → logprob: -14.001066207885742
    5. 'main' → logprob: -14.376066207885742
    6. '```' → logprob: -15.126066207885742
    7. ' ma' → logprob: -15.501066207885742
    8. 'mand' → logprob: -15.751066207885742
    9. 'a' → logprob: -16.251066207885742
    10. '[' → logprob: -16.751066207885742

Token 554: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141558349132538
    2. '=' → logprob: -1.7014155387878418
    3. '   ' → logprob: -13.701416015625
    4. '       ' → logprob: -14.201416015625
    5. ' ' → logprob: -15.951416015625
    6. ',' → logprob: -16.326416015625
    7. '    ' → logprob: -16.826416015625
    8. '        ' → logprob: -17.076416015625
    9. '           ' → logprob: -17.201416015625
    10. '=self' → logprob: -17.326416015625

Token 555: ' selector' (ID: 19970)
  Prédit: 'selector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'selector' → logprob: -0.3132641315460205
    2. ' selector' → logprob: -1.3132641315460205
    3. '(selector' → logprob: -13.688263893127441
    4. '       ' → logprob: -14.063263893127441
    5. 'Selector' → logprob: -15.688263893127441
    6. '.selector' → logprob: -16.188264846801758
    7. '           ' → logprob: -16.688264846801758
    8. '_selector' → logprob: -16.813264846801758
    9. '   ' → logprob: -17.438264846801758
    10. 'select' → logprob: -17.438264846801758

Token 556: '.max' (ID: 11883)
  Prédit: '.max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.max' → logprob: -0.00010127831774298102
    2. 'max' → logprob: -9.250101089477539
    3. '.' → logprob: -12.250101089477539
    4. ' .' → logprob: -15.750101089477539
    5. ' max' → logprob: -15.875101089477539
    6. '=max' → logprob: -17.37510108947754
    7. '_max' → logprob: -18.25010108947754
    8. '.min' → logprob: -18.75010108947754
    9. ',max' → logprob: -18.75010108947754
    10. '	max' → logprob: -19.00010108947754

Token 557: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -1.3902033970225602e-05
    2. '_' → logprob: -11.250014305114746
    3. '_remaining' → logprob: -15.500014305114746
    4. '_sub' → logprob: -15.875014305114746
    5. 're' → logprob: -16.00001335144043
    6. '_return' → logprob: -16.25001335144043
    7. '\' → logprob: -17.00001335144043
    8. '_rest' → logprob: -17.25001335144043
    9. '_rem' → logprob: -17.37501335144043
    10. ' _' → logprob: -17.75001335144043

Token 558: 'mainder' (ID: 40886)
  Prédit: 'mainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mainder' → logprob: -0.0006041454034857452
    2. 're' → logprob: -7.875604152679443
    3. 'ma' → logprob: -8.625603675842285
    4. 'm' → logprob: -10.625603675842285
    5. 'a' → logprob: -11.750603675842285
    6. '_re' → logprob: -12.500603675842285
    7. 'main' → logprob: -13.375603675842285
    8. '_ma' → logprob: -13.500603675842285
    9. '```' → logprob: -13.625603675842285
    10. 'inder' → logprob: -13.750603675842285

Token 559: '_in' (ID: 2267)
  Prédit: '_in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_in' → logprob: -3.292907877039397e-06
    2. 'in' → logprob: -13.00000286102295
    3. 'In' → logprob: -14.37500286102295
    4. '```' → logprob: -16.000003814697266
    5. '   ' → logprob: -16.750003814697266
    6. '
' → logprob: -17.000003814697266
    7. '_sub' → logprob: -17.500003814697266
    8. '=' → logprob: -17.625003814697266
    9. '_' → logprob: -17.750003814697266
    10. 's' → logprob: -17.875003814697266

Token 560: '_sub' (ID: 11572)
  Prédit: '_sub'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sub' → logprob: -2.176947600673884e-05
    2. 'sub' → logprob: -10.875021934509277
    3. '_s' → logprob: -13.375021934509277
    4. 's' → logprob: -14.375021934509277
    5. 'range' → logprob: -15.625021934509277
    6. '_range' → logprob: -16.12502098083496
    7. '_re' → logprob: -16.37502098083496
    8. '_' → logprob: -17.75002098083496
    9. '	sub' → logprob: -17.87502098083496
    10. '```' → logprob: -18.00002098083496

Token 561: 'range' (ID: 20967)
  Prédit: 'range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -5.5861724831629544e-05
    2. 'ranges' → logprob: -10.000056266784668
    3. '_range' → logprob: -11.875056266784668
    4. 'ange' → logprob: -14.500056266784668
    5. 'rage' → logprob: -14.875056266784668
    6. 'r' → logprob: -14.875056266784668
    7. '   ' → logprob: -15.250056266784668
    8. 'rang' → logprob: -15.375056266784668
    9. 'array' → logprob: -15.375056266784668
    10. '```' → logprob: -15.500056266784668

Token 562: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.23792201280593872
    2. '()
' → logprob: -1.737921953201294
    3. '       ' → logprob: -3.487921953201294
    4. '<|end|>' → logprob: -6.112922191619873
    5. 'return' → logprob: -7.237922191619873
    6. '(' → logprob: -7.362922191619873
    7. '
' → logprob: -7.362922191619873
    8. '           ' → logprob: -8.987921714782715
    9. '(
' → logprob: -9.112921714782715
    10. ' return' → logprob: -9.112921714782715

Token 563: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021629150433000177
    2. 'return' → logprob: -8.750216484069824
    3. 'self' → logprob: -10.125216484069824
    4. ' return' → logprob: -12.000216484069824
    5. '
' → logprob: -12.250216484069824
    6. '   ' → logprob: -12.750216484069824
    7. '           ' → logprob: -14.000216484069824
    8. '	' → logprob: -14.125216484069824
    9. '        
' → logprob: -14.250216484069824
    10. ' self' → logprob: -14.625216484069824

Token 564: ' return' (ID: 622)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001157366088591516
    2. '       ' → logprob: -7.251157283782959
    3. ' self' → logprob: -8.001157760620117
    4. 'return' (adapté à ' return') → logprob: -9.126157760620117
    5. '
' → logprob: -13.126157760620117
    6. '```' → logprob: -14.751157760620117
    7. '   ' → logprob: -15.001157760620117
    8. '	self' → logprob: -15.001157760620117
    9. '(self' → logprob: -16.001157760620117
    10. ' return' → logprob: -16.501157760620117

Token 565: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.47407710552215576
    2. 'max' → logprob: -0.9740771055221558
    3. '(max' → logprob: -16.724077224731445
    4. '	max' → logprob: -18.474077224731445
    5. '[max' → logprob: -19.099077224731445
    6. '_max' → logprob: -20.224077224731445
    7. '   ' → logprob: -20.724077224731445
    8. ' ' → logprob: -20.849077224731445
    9. ',max' → logprob: -20.974077224731445
    10. ' ' → logprob: -21.224077224731445

Token 566: '_re' (ID: 3067)
  Prédit: '_re'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_re' → logprob: -5.080963092041202e-06
    2. 're' → logprob: -12.375004768371582
    3. 'max' → logprob: -14.875004768371582
    4. '_' → logprob: -15.750004768371582
    5. '_remaining' → logprob: -16.1250057220459
    6. ' remainder' → logprob: -16.5000057220459
    7. ' _' → logprob: -17.1250057220459
    8. '   ' → logprob: -17.1250057220459
    9. '_max' → logprob: -17.2500057220459
    10. '_rem' → logprob: -17.7500057220459

Token 567: 'mainder' (ID: 40886)
  Prédit: 'mainder'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mainder' → logprob: -0.00043496055877767503
    2. 'ma' → logprob: -7.750434875488281
    3. '_ma' → logprob: -13.375434875488281
    4. 'm' → logprob: -13.750434875488281
    5. 'ema' → logprob: -13.750434875488281
    6. 'a' → logprob: -15.625434875488281
    7. 'main' → logprob: -15.750434875488281
    8. 'em' → logprob: -16.87543487548828
    9. 're' → logprob: -17.75043487548828
    10. ' ma' → logprob: -17.75043487548828

Token 568: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 569: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.12694543600082397
    2. '   ' → logprob: -2.1269454956054688
    3. ' def' → logprob: -11.751945495605469
    4. '	def' → logprob: -12.001945495605469
    5. '```' → logprob: -13.501945495605469
    6. 's' → logprob: -13.876945495605469
    7. '    
' → logprob: -15.126945495605469
    8. '       ' → logprob: -15.501945495605469
    9. '  ' → logprob: -15.626945495605469
    10. '<|end|>' → logprob: -15.751945495605469

Token 570: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.128163257315464e-07
    2. ' def' → logprob: -15.375
    3. '   ' → logprob: -16.75
    4. '	def' → logprob: -20.0
    5. '    
' → logprob: -21.5
    6. '```' → logprob: -21.875
    7. '#' → logprob: -22.0
    8. 'Def' → logprob: -22.875
    9. 'if' → logprob: -23.375
    10. '       ' → logprob: -23.5

Token 571: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.02713807299733162
    2. 'solve' → logprob: -3.7771379947662354
    3. 'main' → logprob: -6.0271382331848145
    4. 'process' → logprob: -6.5271382331848145
    5. 'execute' → logprob: -12.402137756347656
    6. ' run' → logprob: -12.902137756347656
    7. 'def' → logprob: -13.777137756347656
    8. 'handle' → logprob: -14.402137756347656
    9. 'read' → logprob: -14.902137756347656
    10. ' solve' → logprob: -15.152137756347656

Token 572: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004419935867190361
    2. '(' → logprob: -7.750442028045654
    3. 'self' → logprob: -11.875441551208496
    4. '   ' → logprob: -13.625441551208496
    5. '(
' → logprob: -13.625441551208496
    6. '():' → logprob: -14.625441551208496
    7. '       ' → logprob: -15.000441551208496
    8. '(s' → logprob: -15.250441551208496
    9. '()' → logprob: -15.375441551208496
    10. ' (' → logprob: -15.625441551208496

Token 573: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4296483099460602
    2. '):' → logprob: -1.0546482801437378
    3. '():
' → logprob: -8.054648399353027
    4. 'self' → logprob: -8.429648399353027
    5. ')' → logprob: -8.679648399353027
    6. '():' → logprob: -9.429648399353027
    7. '(self' → logprob: -9.554648399353027
    8. '()):
' → logprob: -10.554648399353027
    9. '   ' → logprob: -11.179648399353027
    10. '       ' → logprob: -11.179648399353027

Token 574: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0002383441897109151
    2. '(self' → logprob: -9.500238418579102
    3. '   ' → logprob: -9.875238418579102
    4. 'self' → logprob: -10.625238418579102
    5. '
' → logprob: -10.875238418579102
    6. '(' → logprob: -11.000238418579102
    7. 'for' → logprob: -11.375238418579102
    8. '```' → logprob: -11.625238418579102
    9. ' for' → logprob: -11.875238418579102
    10. '           ' → logprob: -12.125238418579102

Token 575: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.014210288412868977
    2. '       ' → logprob: -4.514210224151611
    3. ' for' → logprob: -5.764210224151611
    4. '   ' → logprob: -10.88921070098877
    5. 'while' → logprob: -15.13921070098877
    6. '           ' → logprob: -15.26421070098877
    7. '```' → logprob: -15.63921070098877
    8. '	for' → logprob: -16.139209747314453
    9. '
' → logprob: -16.764209747314453
    10. ' ' → logprob: -17.389209747314453

Token 576: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.03820833936333656
    2. ' n' → logprob: -3.288208246231079
    3. '(n' → logprob: -8.7882080078125
    4. '           ' → logprob: -12.5382080078125
    5. ' (' → logprob: -13.0382080078125
    6. '_n' → logprob: -13.1632080078125
    7. '   ' → logprob: -13.5382080078125
    8. '(' → logprob: -13.6632080078125
    9. '       ' → logprob: -13.7882080078125
    10. 'dataset' → logprob: -13.7882080078125

Token 577: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005579164135269821
    2. ',m' → logprob: -7.500557899475098
    3. ' ,' → logprob: -12.625557899475098
    4. 'm' → logprob: -13.375557899475098
    5. ',
' → logprob: -17.250558853149414
    6. '_,' → logprob: -17.875558853149414
    7. 'in' → logprob: -19.000558853149414
    8. '```' → logprob: -19.250558853149414
    9. '،' → logprob: -19.625558853149414
    10. '，' → logprob: -19.625558853149414

Token 578: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.0002615742268972099
    2. ' m' → logprob: -8.250261306762695
    3. 'self' → logprob: -15.625261306762695
    4. ',' → logprob: -16.375261306762695
    5. ',m' → logprob: -17.375261306762695
    6. ' self' → logprob: -19.250261306762695
    7. '       ' → logprob: -19.500261306762695
    8. '           ' → logprob: -19.500261306762695
    9. '<|end|>' → logprob: -19.625261306762695
    10. ' ' → logprob: -20.000261306762695

Token 579: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6166903151315637e-05
    2. ' ,' → logprob: -11.250016212463379
    3. ',s' → logprob: -13.500016212463379
    4. ',self' → logprob: -13.750016212463379
    5. 's' → logprob: -15.500016212463379
    6. '_,' → logprob: -16.000015258789062
    7. ',
' → logprob: -16.500015258789062
    8. 'self' → logprob: -16.500015258789062
    9. ' in' → logprob: -17.250015258789062
    10. ',user' → logprob: -17.500015258789062

Token 580: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00982255581766367
    2. ' s' → logprob: -4.634822368621826
    3. 'self' → logprob: -9.759822845458984
    4. '       ' → logprob: -12.259822845458984
    5. ' self' → logprob: -13.509822845458984
    6. '   ' → logprob: -13.634822845458984
    7. '           ' → logprob: -14.509822845458984
    8. '        ' → logprob: -16.009822845458984
    9. ' ' → logprob: -16.009822845458984
    10. '_s' → logprob: -16.134822845458984

Token 581: 'cones' (ID: 98588)
  Prédit: 'cones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cones' → logprob: -4.0484450437361374e-05
    2. 'con' → logprob: -11.500040054321289
    3. '   ' → logprob: -12.250040054321289
    4. '```' → logprob: -12.375040054321289
    5. 'cone' → logprob: -12.500040054321289
    6. '_con' → logprob: -12.625040054321289
    7. 'comes' → logprob: -12.750040054321289
    8. ' cones' → logprob: -13.125040054321289
    9. '_' → logprob: -13.750040054321289
    10. '{"' → logprob: -13.875040054321289

Token 582: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0021918986458331347
    2. 'in' → logprob: -6.12719202041626
    3. '       ' → logprob: -12.252191543579102
    4. '           ' → logprob: -14.252191543579102
    5. '	in' → logprob: -14.252191543579102
    6. '        ' → logprob: -15.127191543579102
    7. '   ' → logprob: -15.127191543579102
    8. 'self' → logprob: -17.0021915435791
    9. ',' → logprob: -17.2521915435791
    10. '          ' → logprob: -17.5021915435791

Token 583: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.01815134845674038
    2. ' self' → logprob: -4.01815128326416
    3. '(self' → logprob: -13.64315128326416
    4. '	self' → logprob: -15.89315128326416
    5. '[self' → logprob: -16.393152236938477
    6. '       ' → logprob: -17.768152236938477
    7. '   ' → logprob: -18.393152236938477
    8. 's' → logprob: -18.518152236938477
    9. 'Self' → logprob: -18.893152236938477
    10. '=self' → logprob: -19.143152236938477

Token 584: '.parser' (ID: 50244)
  Prédit: '.parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parser' → logprob: -4.990154047845863e-05
    2. 'parser' → logprob: -10.125049591064453
    3. '.Input' → logprob: -12.500049591064453
    4. '.parse' → logprob: -12.750049591064453
    5. '.Parser' → logprob: -14.125049591064453
    6. '.input' → logprob: -14.375049591064453
    7. '	parser' → logprob: -14.625049591064453
    8. '.s' → logprob: -15.250049591064453
    9. '.' → logprob: -15.375049591064453
    10. '(parser' → logprob: -15.875049591064453

Token 585: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.000693016336299479
    2. '.solve' → logprob: -8.000693321228027
    3. '.' → logprob: -8.875693321228027
    4. '.run' → logprob: -9.500693321228027
    5. 'parse' → logprob: -10.375693321228027
    6. '           ' → logprob: -10.500693321228027
    7. ':' → logprob: -10.500693321228027
    8. '       ' → logprob: -11.250693321228027
    9. '   ' → logprob: -11.375693321228027
    10. ':
' → logprob: -12.000693321228027

Token 586: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.001526644453406334
    2. '():
' → logprob: -6.501526832580566
    3. '()' → logprob: -11.376526832580566
    4. ' ():' → logprob: -11.876526832580566
    5. ':' → logprob: -12.251526832580566
    6. '():
' → logprob: -13.876526832580566
    7. '(' → logprob: -17.12652587890625
    8. '():

' → logprob: -18.00152587890625
    9. '();' → logprob: -18.50152587890625
    10. '(),' → logprob: -18.50152587890625

Token 587: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001515576965175569
    2. ':' → logprob: -7.1265153884887695
    3. '       ' → logprob: -8.50151538848877
    4. '```' → logprob: -8.50151538848877
    5. 'result' → logprob: -9.25151538848877
    6. ':
' → logprob: -9.37651538848877
    7. '<|end|>' → logprob: -10.12651538848877
    8. 'self' → logprob: -11.00151538848877
    9. '<|end|>' → logprob: -11.12651538848877
    10. ',' → logprob: -11.50151538848877

Token 588: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.10023212432861328
    2. ' result' → logprob: -2.3502321243286133
    3. '               ' → logprob: -11.225232124328613
    4. '           ' → logprob: -12.100232124328613
    5. 'res' → logprob: -12.350232124328613
    6. '	result' → logprob: -13.850232124328613
    7. 'max' → logprob: -14.600232124328613
    8. '   ' → logprob: -15.225232124328613
    9. 'answer' → logprob: -15.850232124328613
    10. ' max' → logprob: -16.350231170654297

Token 589: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04300342872738838
    2. '=' → logprob: -3.1680033206939697
    3. ')' → logprob: -13.04300308227539
    4. '=self' → logprob: -13.91800308227539
    5. '<|end|>' → logprob: -14.66800308227539
    6. ' ' → logprob: -14.91800308227539
    7. ',' → logprob: -16.41800308227539
    8. ' =
' → logprob: -16.41800308227539
    9. '<|end|>' → logprob: -16.41800308227539
    10. ' =)' → logprob: -16.79300308227539

Token 590: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023269588127732277
    2. ' self' → logprob: -3.7732696533203125
    3. '           ' → logprob: -10.648269653320312
    4. '               ' → logprob: -15.273269653320312
    5. '(self' → logprob: -16.148269653320312
    6. '	self' → logprob: -17.273269653320312
    7. '                   ' → logprob: -18.023269653320312
    8. '[self' → logprob: -18.523269653320312
    9. '=self' → logprob: -18.648269653320312
    10. '   ' → logprob: -18.773269653320312

Token 591: '.solve' (ID: 151960)
  Prédit: '.solve'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.solve' → logprob: -1.4736459888808895e-05
    2. '.' → logprob: -11.375014305114746
    3. 'solve' → logprob: -13.875014305114746
    4. ' .' → logprob: -13.875014305114746
    5. '.run' → logprob: -14.000014305114746
    6. '.sol' → logprob: -14.875014305114746
    7. '.s' → logprob: -16.000015258789062
    8. '       ' → logprob: -18.000015258789062
    9. '   ' → logprob: -18.000015258789062
    10. '.solution' → logprob: -18.250015258789062

Token 592: '_dataset' (ID: 40568)
  Prédit: '_dataset'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dataset' → logprob: -2.816093228830141e-06
    2. 'dataset' → logprob: -13.00000286102295
    3. '_' → logprob: -15.37500286102295
    4. '(dataset' → logprob: -16.000001907348633
    5. 'ataset' → logprob: -17.250001907348633
    6. '(n' → logprob: -17.500001907348633
    7. 'Dataset' → logprob: -17.750001907348633
    8. '_data' → logprob: -18.000001907348633
    9. '_d' → logprob: -18.000001907348633
    10. '_(' → logprob: -18.625001907348633

Token 593: '(n' (ID: 2406)
  Prédit: '(result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.008701082319021225
    2. '           ' → logprob: -5.008700847625732
    3. 'result' → logprob: -6.258700847625732
    4. ' result' → logprob: -10.00870132446289
    5. '(' → logprob: -11.13370132446289
    6. '[result' → logprob: -12.88370132446289
    7. '               ' → logprob: -13.00870132446289
    8. ',result' → logprob: -13.13370132446289
    9. '   ' → logprob: -13.88370132446289
    10. '(n' → logprob: -13.88370132446289

Token 594: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003418991982471198
    2. ',m' → logprob: -8.00034236907959
    3. ' ,' → logprob: -12.12534236907959
    4. ',
' → logprob: -14.25034236907959
    5. '           ' → logprob: -15.75034236907959
    6. 'm' → logprob: -16.125341415405273
    7. '   ' → logprob: -17.250341415405273
    8. '       ' → logprob: -17.875341415405273
    9. '```' → logprob: -17.875341415405273
    10. '‌,' → logprob: -18.000341415405273

Token 595: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.474077433347702
    2. ' m' → logprob: -0.9740774631500244
    3. '           ' → logprob: -14.974077224731445
    4. ' ' → logprob: -16.474077224731445
    5. '            ' → logprob: -17.349077224731445
    6. ' ' → logprob: -17.599077224731445
    7. '
' → logprob: -18.099077224731445
    8. '    ' → logprob: -18.474077224731445
    9. ')m' → logprob: -18.849077224731445
    10. '               ' → logprob: -19.099077224731445

Token 596: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2352385965641588e-05
    2. '           ' → logprob: -11.750012397766113
    3. ',s' → logprob: -13.250012397766113
    4. ' ,' → logprob: -13.500012397766113
    5. ')' → logprob: -14.750012397766113
    6. ',
' → logprob: -14.875012397766113
    7. '               ' → logprob: -15.750012397766113
    8. '   ' → logprob: -15.875012397766113
    9. '       ' → logprob: -16.750011444091797
    10. ',result' → logprob: -16.750011444091797

Token 597: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.026322366669774055
    2. ' s' → logprob: -3.651322364807129
    3. '   ' → logprob: -11.776322364807129
    4. '       ' → logprob: -13.026322364807129
    5. ')' → logprob: -13.151322364807129
    6. '	s' → logprob: -13.651322364807129
    7. ')s' → logprob: -13.651322364807129
    8. '
' → logprob: -13.963822364807129
    9. ' ' → logprob: -14.151322364807129
    10. '           ' → logprob: -14.213822364807129

Token 598: 'cones' (ID: 98588)
  Prédit: 'cones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cones' → logprob: -0.00017922651022672653
    2. 'ones' → logprob: -8.750179290771484
    3. 'tones' → logprob: -11.875179290771484
    4. ' cones' → logprob: -12.750179290771484
    5. '```' → logprob: -13.125179290771484
    6. '``' → logprob: -13.125179290771484
    7. 'con' → logprob: -13.750179290771484
    8. 'cores' → logprob: -13.875179290771484
    9. 's' → logprob: -14.000179290771484
    10. 'cone' → logprob: -14.375179290771484

Token 599: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.029069865122437477
    2. ')' → logprob: -3.7790699005126953
    3. '           ' → logprob: -5.154069900512695
    4. ')
' → logprob: -10.529069900512695
    5. '               ' → logprob: -13.029069900512695
    6. ')

' → logprob: -14.029069900512695
    7. ' )
' → logprob: -14.529069900512695
    8. '
' → logprob: -15.529069900512695
    9. '       ' → logprob: -15.779069900512695
    10. '          ' → logprob: -15.904069900512695

Token 600: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.816093228830141e-06
    2. 'self' → logprob: -13.37500286102295
    3. '
' → logprob: -14.25000286102295
    4. ' self' → logprob: -15.25000286102295
    5. '            
' → logprob: -16.125001907348633
    6. '               ' → logprob: -16.375001907348633
    7. '       ' → logprob: -16.875001907348633
    8. '		' → logprob: -16.875001907348633
    9. '   ' → logprob: -17.625001907348633
    10. '          ' → logprob: -18.500001907348633

Token 601: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2051989585161209
    2. '           ' → logprob: -1.7051990032196045
    3. ' self' → logprob: -5.580198764801025
    4. '		' → logprob: -13.330199241638184
    5. '	self' → logprob: -13.330199241638184
    6. '   ' → logprob: -14.080199241638184
    7. '               ' → logprob: -14.080199241638184
    8. '       ' → logprob: -14.705199241638184
    9. '(self' → logprob: -14.955199241638184
    10. '
' → logprob: -14.955199241638184

Token 602: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -9.088346359931165e-07
    2. 'output' → logprob: -14.250000953674316
    3. '.' → logprob: -15.375000953674316
    4. ' .' → logprob: -17.625
    5. '.input' → logprob: -21.25
    6. '	output' → logprob: -21.25
    7. ' output' → logprob: -21.375
    8. '
' → logprob: -21.625
    9. '.stdout' → logprob: -21.75
    10. '$output' → logprob: -21.75

Token 603: 'ter' (ID: 399)
  Prédit: 'ter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ter' → logprob: -1.0280383548888494e-06
    2. 'tter' → logprob: -13.875000953674316
    3. '```' → logprob: -18.000001907348633
    4. 'тер' → logprob: -18.000001907348633
    5. 'er' → logprob: -18.375001907348633
    6. 't' → logprob: -19.125001907348633
    7. 'utter' → logprob: -19.625001907348633
    8. 'TER' → logprob: -19.625001907348633
    9. '().' → logprob: -19.625001907348633
    10. '_result' → logprob: -19.625001907348633

Token 604: '.print' (ID: 2853)
  Prédit: '.print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.print' → logprob: -5.080963092041202e-06
    2. '.' → logprob: -12.250004768371582
    3. ' .' → logprob: -15.625004768371582
    4. 'print' → logprob: -16.3750057220459
    5. '.println' → logprob: -19.1250057220459
    6. '.save' → logprob: -21.3750057220459
    7. '.Print' → logprob: -21.5000057220459
    8. '.show' → logprob: -21.6250057220459
    9. '.pr' → logprob: -21.8750057220459
    10. ' print' → logprob: -21.8750057220459

Token 605: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.7432603272027336e-06
    2. '_' → logprob: -13.750001907348633
    3. 's' → logprob: -16.000001907348633
    4. '__' → logprob: -16.250001907348633
    5. '_results' → logprob: -16.375001907348633
    6. ' _' → logprob: -16.375001907348633
    7. '_res' → logprob: -16.875001907348633
    8. 'result' → logprob: -17.125001907348633
    9. '_RESULT' → logprob: -17.750001907348633
    10. '"_' → logprob: -17.750001907348633

Token 606: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -1.1398757123970427e-05
    2. '(' → logprob: -11.500011444091797
    3. 'result' → logprob: -13.625011444091797
    4. '(results' → logprob: -17.500011444091797
    5. '=result' → logprob: -19.625011444091797
    6. ' (' → logprob: -20.125011444091797
    7. ',result' → logprob: -20.625011444091797
    8. ' result' → logprob: -20.625011444091797
    9. '(resultado' → logprob: -20.750011444091797
    10. '[result' → logprob: -21.000011444091797

Token 607: ')


' (ID: 7861)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.6955040097236633
    2. ')' → logprob: -0.9455040097236633
    3. '()' → logprob: -2.1955039501190186
    4. '()
' → logprob: -6.695504188537598
    5. '(' → logprob: -9.820504188537598
    6. '())
' → logprob: -10.195504188537598
    7. ')
' → logprob: -10.820504188537598
    8. ' )' → logprob: -10.945504188537598
    9. ' ())' → logprob: -11.820504188537598
    10. '(
' → logprob: -12.695504188537598

Token 608: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.35702764987945557
    2. 's' → logprob: -1.2320276498794556
    3. '#' → logprob: -5.357027530670166
    4. 'S' → logprob: -6.607027530670166
    5. '```' → logprob: -6.607027530670166
    6. 'i' → logprob: -7.982027530670166
    7. ' if' → logprob: -7.982027530670166
    8. 'd' → logprob: -8.857028007507324
    9. '
' → logprob: -9.607028007507324
    10. 'n' → logprob: -10.107028007507324

Token 609: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.2519405782222748
    2. '__' → logprob: -1.5019406080245972
    3. 'name' → logprob: -11.751940727233887
    4. '_name' → logprob: -13.751940727233887
    5. ' ' → logprob: -14.001940727233887
    6. 'Name' → logprob: -14.251940727233887
    7. ' ' → logprob: -14.626940727233887
    8. '___' → logprob: -16.12693977355957
    9. '```' → logprob: -16.50193977355957
    10. '/__' → logprob: -16.50193977355957

Token 610: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.12939158082008362
    2. ' ==' → logprob: -2.754391670227051
    3. ' __' → logprob: -3.004391670227051
    4. '__.__' → logprob: -6.004391670227051
    5. '.__' → logprob: -6.129391670227051
    6. '==' → logprob: -7.129391670227051
    7. '.' → logprob: -7.754391670227051
    8. '__.' → logprob: -7.754391670227051
    9. 'name' → logprob: -8.00439167022705
    10. '.py' → logprob: -8.37939167022705

Token 611: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -1.2233183042553719e-05
    2. '__.__' → logprob: -11.500012397766113
    3. '==' → logprob: -13.375012397766113
    4. '__.' → logprob: -15.250012397766113
    5. '__('' → logprob: -16.250011444091797
    6. ' ==' → logprob: -16.375011444091797
    7. '____' → logprob: -18.625011444091797
    8. '=="' → logprob: -18.875011444091797
    9. '__("' → logprob: -19.375011444091797
    10. ' __' → logprob: -19.500011444091797

Token 612: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.06780249625444412
    2. ' ==' → logprob: -3.3178024291992188
    3. '==' → logprob: -3.5678024291992188
    4. '=="' → logprob: -7.067802429199219
    5. '__.__' → logprob: -8.567802429199219
    6. '=='' → logprob: -11.192802429199219
    7. '__":
' → logprob: -11.817802429199219
    8. '___' → logprob: -12.442802429199219
    9. '   ' → logprob: -12.567802429199219
    10. '____' → logprob: -12.692802429199219

Token 613: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.004106542561203241
    2. ''' → logprob: -5.504106521606445
    3. ' "__' → logprob: -10.629106521606445
    4. '__' → logprob: -12.629106521606445
    5. '"class' → logprob: -15.379106521606445
    6. '"user' → logprob: -16.129106521606445
    7. '"name' → logprob: -16.129106521606445
    8. ' '__' → logprob: -16.504106521606445
    9. '("__' → logprob: -17.629106521606445
    10. '"http' → logprob: -18.004106521606445

Token 614: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.004081247374415398
    2. '__' → logprob: -5.5040812492370605
    3. '"' → logprob: -13.629080772399902
    4. 'name' → logprob: -14.004080772399902
    5. 'python' → logprob: -14.754080772399902
    6. '_main' → logprob: -14.879080772399902
    7. 'module' → logprob: -16.75408172607422
    8. ' main' → logprob: -17.12908172607422
    9. '__":
' → logprob: -17.62908172607422
    10. 'built' → logprob: -18.00408172607422

Token 615: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.01844840869307518
    2. '__' → logprob: -4.018448352813721
    3. '__':
' → logprob: -8.518448829650879
    4. '__:' → logprob: -9.268448829650879
    5. '__.' → logprob: -12.893448829650879
    6. '__.__' → logprob: -14.268448829650879
    7. ':' → logprob: -14.518448829650879
    8. '__["' → logprob: -14.768448829650879
    9. '__
' → logprob: -16.643447875976562
    10. '```' → logprob: -16.893447875976562

Token 616: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011493867496028543
    2. ' s' → logprob: -7.2511491775512695
    3. 'S' → logprob: -8.62614917755127
    4. 's' → logprob: -9.00114917755127
    5. ' S' → logprob: -9.12614917755127
    6. '   ' → logprob: -10.87614917755127
    7. '_s' → logprob: -13.50114917755127
    8. '    
' → logprob: -13.87614917755127
    9. '```' → logprob: -14.00114917755127
    10. '_S' → logprob: -14.00114917755127

Token 617: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.9548178315162659
    2. 'S' → logprob: -1.204817771911621
    3. 's' → logprob: -1.954817771911621
    4. 'delivery' → logprob: -1.954817771911621
    5. '   ' → logprob: -3.954817771911621
    6. 'sd' → logprob: -4.829817771911621
    7. ' delivery' → logprob: -6.829817771911621
    8. ' import' → logprob: -6.954817771911621
    9. 'app' → logprob: -7.204817771911621
    10. ' s' → logprob: -7.704817771911621

Token 618: ' Using' (ID: 17511)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5042051672935486
    2. 'delivery' → logprob: -1.5042052268981934
    3. 's' → logprob: -2.3792052268981934
    4. 'S' → logprob: -3.0042052268981934
    5. 'sd' → logprob: -4.754205226898193
    6. ' import' → logprob: -4.879205226898193
    7. ' delivery' → logprob: -5.004205226898193
    8. ' s' → logprob: -5.879205226898193
    9. 'app' → logprob: -6.129205226898193
    10. 'solution' → logprob: -6.629205226898193

Token 619: ' the' (ID: 290)
  Prédit: ' S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.2575317919254303
    2. 'S' → logprob: -1.757531762123108
    3. ' s' → logprob: -3.0075318813323975
    4. 's' → logprob: -5.632531642913818
    5. '__' → logprob: -7.382531642913818
    6. 'import' → logprob: -7.757531642913818
    7. ' delivery' → logprob: -8.882532119750977
    8. '   ' → logprob: -9.007532119750977
    9. '_s' → logprob: -9.882532119750977
    10. ' import' → logprob: -10.007532119750977

Token 620: ' above' (ID: 5151)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.006366459187120199
    2. ' S' → logprob: -5.13136625289917
    3. '__' → logprob: -8.756366729736328
    4. 'if' → logprob: -8.881366729736328
    5. 'import' → logprob: -9.881366729736328
    6. 'sys' → logprob: -10.006366729736328
    7. 's' → logprob: -11.256366729736328
    8. 'class' → logprob: -12.006366729736328
    9. ' sys' → logprob: -12.131366729736328
    10. 'thread' → logprob: -12.756366729736328

Token 621: ' unnecessarily' (ID: 169842)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.8058799505233765
    2. ' S' → logprob: -1.4308799505233765
    3. ' code' → logprob: -1.9308799505233765
    4. ' s' → logprob: -2.680880069732666
    5. ' delivery' → logprob: -2.930880069732666
    6. 's' → logprob: -3.555880069732666
    7. 'delivery' → logprob: -5.180880069732666
    8. 'code' → logprob: -5.430880069732666
    9. 'import' → logprob: -6.305880069732666
    10. ' if' → logprob: -6.805880069732666

Token 622: ' complex' (ID: 8012)
  Prédit: 'complex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'complex' → logprob: -0.9107739329338074
    2. 'S' → logprob: -1.6607739925384521
    3. 's' → logprob: -1.7857739925384521
    4. 'import' → logprob: -2.660773992538452
    5. 'code' → logprob: -3.035773992538452
    6. 'long' → logprob: -3.535773992538452
    7. ' complex' → logprob: -3.785773992538452
    8. 'if' → logprob: -3.785773992538452
    9. 'comp' → logprob: -4.285773754119873
    10. '   ' → logprob: -5.160773754119873

Token 623: ' abstraction' (ID: 129564)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.706426739692688
    2. 'class' → logprob: -1.581426739692688
    3. ' code' → logprob: -2.4564266204833984
    4. 'code' → logprob: -2.7064266204833984
    5. 'import' → logprob: -3.3314266204833984
    6. ' class' → logprob: -3.7064266204833984
    7. 'appro' → logprob: -4.206426620483398
    8. 's' → logprob: -4.331426620483398
    9. ' approach' → logprob: -4.331426620483398
    10. ' S' → logprob: -4.706426620483398

Token 624: ' to' (ID: 316)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03674810379743576
    2. 's' → logprob: -4.286747932434082
    3. ' s' → logprob: -4.911747932434082
    4. ',' → logprob: -5.286747932434082
    5. 'import' → logprob: -5.411747932434082
    6. 'delivery' → logprob: -6.036747932434082
    7. ' delivery' → logprob: -7.536747932434082
    8. '
' → logprob: -7.661747932434082
    9. '    
' → logprob: -8.036747932434082
    10. 'def' → logprob: -8.036747932434082

Token 625: ' solve' (ID: 17722)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.09686820954084396
    2. 'run' → logprob: -2.8468682765960693
    3. 'import' → logprob: -4.09686803817749
    4. 's' → logprob: -4.72186803817749
    5. 'solve' → logprob: -5.72186803817749
    6. 'main' → logprob: -6.34686803817749
    7. 'deliver' → logprob: -6.84686803817749
    8. 'code' → logprob: -7.59686803817749
    9. ' run' → logprob: -8.096868515014648
    10. 'process' → logprob: -8.096868515014648

Token 626: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4388815760612488
    2. 'S' → logprob: -1.8138816356658936
    3. ' the' → logprob: -2.4388816356658936
    4. 'the' → logprob: -2.6888816356658936
    5. 's' → logprob: -4.6888813972473145
    6. ' problem' → logprob: -4.8138813972473145
    7. ' S' → logprob: -5.0638813972473145
    8. ' s' → logprob: -5.6888813972473145
    9. 'problem' → logprob: -5.8138813972473145
    10. 'a' → logprob: -5.9388813972473145

Token 627: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3486635684967041
    2. 'S' → logprob: -2.473663568496704
    3. 'import' → logprob: -2.723663568496704
    4. 's' → logprob: -2.848663568496704
    5. 'delivery' → logprob: -2.848663568496704
    6. ' delivery' → logprob: -4.223663330078125
    7. ' s' → logprob: -4.848663330078125
    8. ' S' → logprob: -6.098663330078125
    9. ' import' → logprob: -6.723663330078125
    10. 'problem' → logprob: -7.723663330078125

Token 628: ' solver' (ID: 63271)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.9272992610931396
    2. 'import' → logprob: -1.0522992610931396
    3. 's' → logprob: -1.8022992610931396
    4. 'delivery' → logprob: -2.6772992610931396
    5. 'sd' → logprob: -4.927299499511719
    6. ' s' → logprob: -5.927299499511719
    7. ' import' → logprob: -6.052299499511719
    8. ' S' → logprob: -6.302299499511719
    9. ' delivery' → logprob: -6.302299499511719
    10. 'solver' (adapté à ' solver') → logprob: -6.427299499511719

Token 629: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026667742058634758
    2. '=' → logprob: -3.651667833328247
    3. '.run' → logprob: -8.526667594909668
    4. '.' → logprob: -8.776667594909668
    5. '   ' → logprob: -12.151667594909668
    6. '().' → logprob: -12.776667594909668
    7. ' ' → logprob: -13.151667594909668
    8. '.=' → logprob: -14.026667594909668
    9. ' =
' → logprob: -14.276667594909668
    10. '  ' → logprob: -14.401667594909668

Token 630: ' S' (ID: 336)
  Prédit: 'S'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'S' → logprob: -0.16022412478923798
    2. ' S' → logprob: -1.9102240800857544
    3. '_S' → logprob: -20.03522491455078
    4. '	S' → logprob: -20.03522491455078
    5. ' ' → logprob: -20.53522491455078
    6. '```' → logprob: -22.03522491455078
    7. '=S' → logprob: -22.03522491455078
    8. '   ' → logprob: -22.28522491455078
    9. 's' → logprob: -22.41022491455078
    10. '>S' → logprob: -22.78522491455078

Token 631: 'cone' (ID: 80469)
  Prédit: 'cone'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cone' → logprob: -0.00021486106561496854
    2. 'Cone' → logprob: -8.500214576721191
    3. 'S' → logprob: -12.000214576721191
    4. 'con' → logprob: -12.875214576721191
    5. 'one' → logprob: -14.750214576721191
    6. 'cones' → logprob: -14.875214576721191
    7. 's' → logprob: -14.875214576721191
    8. ' cone' → logprob: -14.875214576721191
    9. 'olver' → logprob: -15.375214576721191
    10. 'conce' → logprob: -15.500214576721191

Token 632: 'Delivery' (ID: 28728)
  Prédit: 'Delivery'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Delivery' → logprob: -1.9361264946837764e-07
    2. 'Deliver' → logprob: -16.625
    3. ' Delivery' → logprob: -17.125
    4. '_delivery' → logprob: -18.75
    5. 'elivery' → logprob: -19.0
    6. 'delivery' → logprob: -19.5
    7. ' delivery' → logprob: -20.625
    8. 'Del' → logprob: -21.75
    9. 'Delivered' → logprob: -22.625
    10. '   ' → logprob: -22.75

Token 633: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.06798604875802994
    2. '()
' → logprob: -2.817986011505127
    3. '.S' → logprob: -6.192986011505127
    4. '.run' → logprob: -6.317986011505127
    5. '(' → logprob: -7.567986011505127
    6. '(
' → logprob: -8.067986488342285
    7. 'Solver' → logprob: -8.442986488342285
    8. '.' → logprob: -8.692986488342285
    9. '.Run' → logprob: -8.692986488342285
    10. '()

' → logprob: -8.817986488342285

Token 634: '   ' (ID: 271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' → logprob: -0.004757511429488659
    2. ' solver' → logprob: -5.379757404327393
    3. '
' → logprob: -9.62975788116455
    4. '   ' → logprob: -9.75475788116455
    5. '_solver' → logprob: -12.37975788116455
    6. '```' → logprob: -12.50475788116455
    7. 's' → logprob: -13.00475788116455
    8. 'sol' → logprob: -14.25475788116455
    9. '	s' → logprob: -14.37975788116455
    10. '    
' → logprob: -14.75475788116455

Token 635: ' solver' (ID: 63271)
  Prédit: 'solver'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'solver' (adapté à ' solver') → logprob: -1.9361264946837764e-07
    2. ' solver' → logprob: -16.625
    3. 'scheduler' → logprob: -18.875
    4. '   ' → logprob: -19.125
    5. 's' → logprob: -19.375
    6. 'resolver' → logprob: -20.75
    7. 'sol' → logprob: -21.25
    8. 'solve' → logprob: -21.25
    9. '
' → logprob: -22.5
    10. '```' → logprob: -22.75

Token 636: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -6.76628842484206e-05
    2. '.' → logprob: -9.625067710876465
    3. ' .' → logprob: -13.500067710876465
    4. 'run' → logprob: -17.50006675720215
    5. '.Run' → logprob: -17.87506675720215
    6. '```' → logprob: -18.00006675720215
    7. '.start' → logprob: -18.87506675720215
    8. '\.' → logprob: -18.87506675720215
    9. '.
' → logprob: -19.00006675720215
    10. '   ' → logprob: -19.62506675720215

Token 637: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 635
Tokens correctement prédits (1ère position, stricte): 279
Tokens correctement prédits (1ère position, avec adaptation): 310
Tokens correctement prédits (top 10): 523
Précision stricte (1ère position): 43.94%
Précision adaptée (1ère position): 48.82%
Précision (top 10): 82.36%
================================================================================
