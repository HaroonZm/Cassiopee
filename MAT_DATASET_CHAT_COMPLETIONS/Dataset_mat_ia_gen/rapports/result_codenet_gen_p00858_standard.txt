================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:04:39
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
from collections import defaultdict, deque

def length(p1, p2):
    return math.hypot(p1[0]-p2[0], p1[1]-p2[1])

def dot(u,v):
    return u[0]*v[0]+u[1]*v[1]

def vec(a,b):
    return (b[0]-a[0], b[1]-a[1])

def angle_cos(a,b,c): # cos angle at b between ba and bc
    ba = vec(b,a)
    bc = vec(b,c)
    n1 = math.hypot(*ba)
    n2 = math.hypot(*bc)
    if n1==0 or n2==0:
        return 1
    return dot(ba,bc)/(n1*n2)

def readints():
    return map(int,sys.stdin.readline().split())

def main():
    while True:
        line = sys.stdin.readline()
        if not line:
            break
        n=line.strip()
        if n=='0': break
        n=int(n)
        xs,ys= map(int,sys.stdin.readline().split())
        xg,yg= map(int,sys.stdin.readline().split())
        segs=[]
        for _ in range(n):
            x1,y1,x2,y2 = map(int,sys.stdin.readline().split())
            segs.append(((x1,y1),(x2,y2)))
        points = set()
        for s in segs:
            points.add(s[0])
            points.add(s[1])
        # identify street segments: those connected to multiple segments at endpoints
        adjacency_count=defaultdict(int)
        for s in segs:
            adjacency_count[s[0]]+=1
            adjacency_count[s[1]]+=1
        # categorize edges as street or sign:
        # streets: endpoints have adjacency_count>=1 (all have at least 1)
        # signs: one endpoint touches exactly one street, other is open.
        # We can define that a street segment is one where both endpoints connect at least 1 segment
        # Signs connect to a node of degree 1 only at one endpoint, other is unique to signs
        
        # Determine which segments are streets by grouping connected graphs without considering signs
        # Actually, problem states streets are the segments that connect point to point with possibly multiple connections
        # Signs have one endpoint that touches one and only one line segment representing a street, other open.

        # Build maps of endpoints to segments
        endpoint_seg = defaultdict(list)
        for i,(p1,p2) in enumerate(segs):
            endpoint_seg[p1].append(i)
            endpoint_seg[p2].append(i)
        # Build street graph:
        # street segments are those where both endpoints have degree>1 or connected to more than one segment (means intersection)
        # signs are those attached to endpoint with degree==1 at one side and open other endpoint (degree==0 or no connection)
        
        # Determine which segments are signs: if one endpoint is attached to exactly one street, other endpoint only connected to this segment
        # But to know street segments we need to exclude signs.
        # We'll assume streets form a graph with nodes at intersection points where a point connects 2 or more street segments
        # Signs connect to exactly one street segment endpoint and one open endpoint.

        # Build initial graph ignoring directions
        graph = defaultdict(list)
        # We'll label each segment as street or sign:
        street_segments = set()
        sign_segments = set()
        point_degree = defaultdict(int)

        # First, count how many segments per point
        seg_count_per_point=defaultdict(int)
        for p in points:
            seg_count_per_point[p]=len(endpoint_seg[p])
        # From problem: signs touch only one street, other end open
        # So signs are segments with one endpoint degree =1 and other endpoint degree=0 or no connections
        # Actually degree=0 impossible, as they are endpoints so unreachable? But problem says
        for i,(p1,p2) in enumerate(segs):
            d1 = seg_count_per_point[p1]
            d2 = seg_count_per_point[p2]
            # Condition for sign:
            # one endpoint touches only one street segment (=1)
            # other endpoint touches no street (0) or unique to this sign segment only (likely 1 too but only for this sign)
            # So sign segments have one endpoint with degree=1 and other endpoint with degree=1 but connected only to the sign
            # To find this, we check if one endpoint appears only once in all segments (only this sign)
            # count number of segments involving p1 and p2
            # If one endpoint connected to one segment (the sign itself), and the other endpoint connected to another segment (street)
            # Then it's sign
            if d1==1 and d2==1:
                # Check how many segments each endpoint involved: if endpoint involved in only this segment?
                # Both 1 here, but maybe one is sign, other street
                # We check if either endpoint involved in multiple segments is street
                # Let's count how many segments each endpoint connected to, and which segments
                # The other endpoint connected to at least one street segment.
                # We'll defer this, so far treat as sign candidate.
                sign_segments.add(i)
            else:
                street_segments.add(i)
        # There could be signs with endpoints both degree=1, but then to identify which is hanging endpoint:
        # Reassign sign segments correctly:
        # Actually, problem says: end point of a sign touches one and only one street segment and other endpoint is open.
        # So in sign segment: exactly one endpoint p has degree>1 or connected to a street segment, the other endpoint connected to no other segments besides the sign itself.

        def is_sign(i):
            p1,p2=segs[i]
            d1 = seg_count_per_point[p1]
            d2 = seg_count_per_point[p2]
            # Count how many street segments connected to p1 and p2
            street_p1 = 0
            for sidx in endpoint_seg[p1]:
                if sidx==i:continue
                if sidx in street_segments:
                    street_p1+=1
            street_p2 = 0
            for sidx in endpoint_seg[p2]:
                if sidx==i:continue
                if sidx in street_segments:
                    street_p2+=1
            # One endpoint must touch exactly one street segment (street count=1), other None
            if (street_p1==1 and street_p2==0) or (street_p2==1 and street_p1==0):
                return True
            return False

        # Refine sign/street sets
        street_segments = set()
        for i in range(n):
            if is_sign(i):
                sign_segments.add(i)
            else:
                street_segments.add(i)

        # Build graph over points (intersection of streets) with edges oriented according to street direction rules
        # Construct undirected graph of streets first
        graph_undirected=defaultdict(set)
        for i in street_segments:
            p1,p2=segs[i]
            graph_undirected[p1].add(p2)
            graph_undirected[p2].add(p1)

        # Intersection points: points with degree >=2 in street graph
        intersection_points = set()
        deg_street = defaultdict(int)
        for p in graph_undirected:
            deg_street[p]=len(graph_undirected[p])
            if deg_street[p]>=2:
                intersection_points.add(p)

        # We need to make a directed graph considering signs' forbidden directions.
        # Signs restrict movement from obtuse side to acute side at a point where a sign touches a street.
        # At the endpoint where sign touches a street, label angles between sign and street.
        # Cars may not move from the obtuse angle side to acute side.
        # Special rectangular (right angle) => no movement either direction.

        # For each sign:
        # Let sign endpoints be (S,E), S connected to street node P, E open
        # The point where sign touches street is S (or E), find which is connected to exactly one street segment.

        # For each sign, determine orientation:
        # Calculate the angles between sign (segment) and adjacent street (segment) at the touching point
        # Then restrict direction accordingly.

        # We build an initial directed graph allowing all edges both directions between street nodes:
        graph_directed=defaultdict(list)
        edge_len = dict()
        for i in street_segments:
            p1,p2=segs[i]
            d=length(p1,p2)
            graph_directed[p1].append((p2,d))
            graph_directed[p2].append((p1,d))
            edge_len[(p1,p2)]=d
            edge_len[(p2,p1)]=d

        # For each sign, impose restrictions
        # find touching point = endpoint connected to street
        for i in sign_segments:
            s,e = segs[i]
            # determine touching endpoint:
            # the endpoint that connects to a street
            # The other endpoint is open (connected only to this sign)
            # check connections in street_segments involving s and e
            s_street_count=0
            e_street_count=0
            for si in endpoint_seg[s]:
                if si in street_segments:
                    s_street_count+=1
            for si in endpoint_seg[e]:
                if si in street_segments:
                    e_street_count+=1
            if s_street_count==1 and e_street_count==0:
                touch = s
                open_end = e
            elif e_street_count==1 and s_street_count==0:
                touch = e
                open_end = s
            else:
                # not matching problem condition
                continue
            # The unique street segment attached at touch is:
            street_seg_idx = -1
            for si in endpoint_seg[touch]:
                if si in street_segments:
                    street_seg_idx=si
                    break
            if street_seg_idx==-1:
                continue
            # The street segment:
            sp1,sp2=segs[street_seg_idx]
            # At touch point, find other endpoint of street segment: opposite point
            if sp1==touch:
                street_other = sp2
            else:
                street_other = sp1
            # Calculate angle at touch between sign and street
            # vectors: sign from touch to open_end, street from touch to street_other
            v_sign = vec(touch, open_end)
            v_street = vec(touch, street_other)
            # angle cosine:
            c = dot(v_sign, v_street)/(math.hypot(*v_sign)*math.hypot(*v_street))
            # Due to float precision, clip c to [-1,1]
            c=max(-1,min(1,c))
            # angle = arccos(c)
            # Determine sign constraints:
            # If angle is right approx cos=0 => no movement either direction
            # If angle < 90 (cos>0) acute angle
            # If angle >90 (cos<0) obtuse angle
            # Movement forbids from obtuse to acute side at point. 
            # So from side formed by street at obtuse angle to side of acute angle is forbidden.
            # The obtuse side is on side with angle >90.
            # The acute side is with angle <90.
            # Because sign touches street at a point, a node, we see street/node edges and limit edges accordingly.
            # This is local direction restriction between node touch and street_other node(s)
            
            # Interpret:
            # For the node touch, the car cannot move from side of obtuse angle to side of acute angle
            # The two street edges adjacent at touch: only one street edge or possibly multiple, how to handle?
            # As per problem, at a point where sign touches street, movement from obtuse angle side to acute angle side is forbidden.
            # There is only one street segment connected at touch in the sign's touching segment,
            # so the forbidden movement is depending on direction between touch and street_other nodes.

            # To find orientation of allowed and forbidden direction:
            # We consider that "the obtuse side" is corresponding to the direction vertex oppsite to the acute side
            # The direction from the sign point towards the street_other is on one side, direction from street_other to touch is opposite side
            # So direction from obtuse to acute side means: moving from which node to which node
            # The obtuse side is from the other endpoint of street segment to touch or from touch to other endpoint?

            # Actually, problem example "BF" - car cannot move from obtuse angle side to acute angle side at the node B
            # So forbidden direction is from node on obtuse side to node on acute side

            # So we consider the edge between touch and street_other, orient:
            # Determine position of obtuse and acute side around the node
            # The edge between touch and street_other in both directions possibly allowed, restrict direction depending on sign

            # We thus forbid movement from obtuse angle side to acute angle side of the point touch on street edge between touch and street_other
            
            # We distinguish the two ends of the edge (touch and street_other):
            # At node touch, angle is obtuse or acute between sign and street edge
            # From obtuse side to acute side is forbidden => must remove directed edge from node on obtuse side to node on acute side

            # We need to decide which node correspond to the obtuse side and which to acute side.
            # By default, direction from touch to street_other is out from touch, from street_other to touch is in opposite direction.
            # Angle computed at touch.
            # So angle between sign and street at touch is c.
            # If c>0, angle acute, obtuse side is opposite direction (street_other)
            # If c<0, angle obtuse, obtuse side is touch

            # So if angle is acute(c>0), forbidden movement is from street_other (obtuse side) to touch (acute side)
            # If angle is obtuse(c<0), forbidden movement is from touch (obtuse side) to street_other (acute side)
            # If angle right (~0), forbidden both directions

            # Implement accordingly
            eps = 1e-14
            if abs(c)<eps:
                # right angle
                # forbid both directions between touch and street_other
                if (touch,street_other) in edge_len:
                    graph_directed[touch] = [(w,d) for w,d in graph_directed[touch] if w!=street_other]
                if (street_other,touch) in edge_len:
                    graph_directed[street_other] = [(w,d) for w,d in graph_directed[street_other] if w!=touch]
            elif c>0:
                # acute
                # forbid movement from obtuse side to acute side
                # obtuse side is street_other, acute side touch
                # forbid street_other->touch
                if street_other in [w for w,d in graph_directed]:
                    graph_directed[street_other] = [(w,d) for w,d in graph_directed[street_other] if w!=touch]
            else:
                # obtuse
                # forbid touch->street_other
                graph_directed[touch] = [(w,d) for w,d in graph_directed[touch] if w!=street_other]

        # Some points have only one street or are endpoints, to allow movement:
        # but problem states cars may not move from P to M or M to P in map where signs N,O forbid passing through them; this is modeled.
        # After applying all sign restrictions, graph_directed is ready.

        # Start and Goal points:
        start = (xs,ys)
        goal = (xg,yg)

        # If start or goal not in points or not on street
        if start not in points or goal not in points:
            print(-1)
            print(0)
            continue

        # Dijkstra on graph_directed
        dist = {p:math.inf for p in points}
        prev = {}
        dist[start]=0
        import heapq
        heap = [(0,start)]
        while heap:
            cd,u = heapq.heappop(heap)
            if cd>dist[u]:
                continue
            if u==goal:
                break
            for w,dw in graph_directed.get(u,[]):
                nd = cd+dw
                if nd<dist[w]:
                    dist[w]=nd
                    prev[w]=u
                    heapq.heappush(heap,(nd,w))
        if dist[goal]==math.inf:
            print(-1)
            print(0)
            continue

        # reconstruct path
        path=[]
        cur=goal
        while cur!=start:
            path.append(cur)
            cur=prev[cur]
        path.append(start)
        path.reverse()

        # print intersection points on path:
        # street intersection point: point where at least two street segments meet
        # these are points with degree >=2 in street graph
        for p in path:
            if p in intersection_points:
                print(p[0],p[1])
        print(0)

if __name__=="__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20064200460910797
    2. '.' → logprob: -2.4506421089172363
    3. '<|end|>' → logprob: -2.8256421089172363
    4. '\' → logprob: -4.700642108917236
    5. 'newline' → logprob: -5.075642108917236
    6. 'import' → logprob: -5.075642108917236
    7. '
' → logprob: -5.700642108917236
    8. '' → logprob: -5.825642108917236
    9. '<|end|>' → logprob: -5.825642108917236
    10. '\r' → logprob: -6.200642108917236

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00020497082732617855
    2. 'os' → logprob: -8.500205039978027
    3. '"os' → logprob: -14.875205039978027
    4. ' math' → logprob: -15.000205039978027
    5. ' re' → logprob: -15.125205039978027
    6. '_os' → logprob: -15.750205039978027
    7. ' json' → logprob: -16.12520408630371
    8. '	os' → logprob: -16.37520408630371
    9. ' ' → logprob: -17.50020408630371
    10. ' ' → logprob: -17.50020408630371

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.10131704062223434
    2. '\' → logprob: -3.6013169288635254
    3. '\n' → logprob: -3.9763169288635254
    4. 'import' → logprob: -4.351316928863525
    5. '<|end|>' → logprob: -4.601316928863525
    6. '```' → logprob: -4.726316928863525
    7. '
' → logprob: -4.976316928863525
    8. '

' → logprob: -5.476316928863525
    9. '<|end|>' → logprob: -6.601316928863525
    10. '' → logprob: -6.601316928863525

Token 6: 'from' (ID: 2845)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.8090347051620483
    2. '\n' → logprob: -1.5590347051620483
    3. 'import' → logprob: -2.309034824371338
    4. '
' → logprob: -2.434034824371338
    5. '```' → logprob: -3.059034824371338
    6. '\' → logprob: -3.309034824371338
    7. '

' → logprob: -3.309034824371338
    8. '<|end|>' → logprob: -4.059034824371338
    9. ',' → logprob: -5.059034824371338
    10. '' → logprob: -5.934034824371338

Token 7: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -0.6536301970481873
    2. ' os' → logprob: -0.7786301970481873
    3. 'collections' → logprob: -4.903630256652832
    4. 'os' → logprob: -5.278630256652832
    5. ' datetime' → logprob: -5.778630256652832
    6. ' itertools' → logprob: -6.653630256652832
    7. ' typing' → logprob: -6.778630256652832
    8. ' numpy' → logprob: -7.528630256652832
    9. ' statistics' → logprob: -7.653630256652832
    10. ' math' → logprob: -7.778630256652832

Token 8: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.4421836733818054
    2. ' import' → logprob: -1.1921837329864502
    3. '.' → logprob: -2.94218373298645
    4. ' ' → logprob: -7.942183494567871
    5. '<|end|>' → logprob: -7.942183494567871
    6. '.import' → logprob: -9.692183494567871
    7. '.Counter' → logprob: -9.942183494567871
    8. '_' → logprob: -9.942183494567871
    9. '```' → logprob: -10.442183494567871
    10. ' defaultdict' → logprob: -10.567183494567871

Token 9: ' defaultdict' (ID: 107098)
  Prédit: ' defaultdict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' defaultdict' → logprob: -0.4495455026626587
    2. ' deque' → logprob: -1.5745455026626587
    3. ' abc' → logprob: -2.449545383453369
    4. 'deque' → logprob: -2.824545383453369
    5. 'abc' → logprob: -4.824545383453369
    6. ' named' → logprob: -7.449545383453369
    7. ' import' → logprob: -8.824545860290527
    8. ' Counter' → logprob: -8.949545860290527
    9. 'import' → logprob: -9.074545860290527
    10. 'default' → logprob: -9.074545860290527

Token 10: ',' (ID: 11)
  Prédit: '

'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.35624319314956665
    2. 'import' → logprob: -1.9812431335449219
    3. '
' → logprob: -2.231243133544922
    4. '\n' → logprob: -4.356243133544922
    5. ',' → logprob: -4.606243133544922
    6. ' 

' → logprob: -4.731243133544922
    7. '```' → logprob: -4.981243133544922
    8. '<|end|>' → logprob: -5.356243133544922
    9. '\' → logprob: -6.106243133544922
    10. '' → logprob: -6.356243133544922

Token 11: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.5740534663200378
    2. ' deque' → logprob: -1.0740535259246826
    3. 'Counter' → logprob: -2.6990535259246826
    4. ' Counter' → logprob: -3.8240535259246826
    5. 'Ordered' → logprob: -5.8240532875061035
    6. 'named' → logprob: -6.5740532875061035
    7. ' Ordered' → logprob: -6.8240532875061035
    8. ' named' → logprob: -7.5740532875061035
    9. 'Deque' → logprob: -10.199053764343262
    10. 'de' → logprob: -11.574053764343262

Token 12: '

' (ID: 279)
  Prédit: '

'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '

' → logprob: -0.6267297863960266
    2. '
' → logprob: -1.2517297267913818
    3. '```' → logprob: -2.376729726791382
    4. '\n' → logprob: -3.001729726791382
    5. 'import' → logprob: -4.126729965209961
    6. '\' → logprob: -4.876729965209961
    7. ',' → logprob: -5.376729965209961
    8. '<|end|>' → logprob: -6.126729965209961
    9. '.' → logprob: -6.876729965209961
    10. '' → logprob: -6.876729965209961

Token 13: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7129349708557129
    2. 'import' → logprob: -1.337934970855713
    3. 'class' → logprob: -1.712934970855713
    4. '```' → logprob: -3.462934970855713
    5. '#' → logprob: -4.212934970855713
    6. '`' → logprob: -4.837934970855713
    7. '\' → logprob: -5.837934970855713
    8. ',' → logprob: -5.962934970855713
    9. 'from' → logprob: -6.087934970855713
    10. '\n' → logprob: -6.587934970855713

Token 14: ' length' (ID: 5517)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.038498930633068085
    2. ' calculate' → logprob: -4.538498878479004
    3. '_' → logprob: -5.038498878479004
    4. ' factorial' → logprob: -5.038498878479004
    5. ' main' → logprob: -5.163498878479004
    6. ' compute' → logprob: -6.663498878479004
    7. ' _' → logprob: -6.663498878479004
    8. ' my' → logprob: -7.038498878479004
    9. ' process' → logprob: -7.163498878479004
    10. ' space' → logprob: -7.413498878479004

Token 15: '(p' (ID: 2407)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0815298780798912
    2. '_' → logprob: -2.5815298557281494
    3. ' (' → logprob: -6.3315300941467285
    4. '_length' → logprob: -7.7065300941467285
    5. '(length' → logprob: -9.83152961730957
    6. 's' → logprob: -9.83152961730957
    7. '_of' → logprob: -9.95652961730957
    8. '_(' → logprob: -10.33152961730957
    9. '-length' → logprob: -10.45652961730957
    10. 'of' → logprob: -11.20652961730957

Token 16: '1' (ID: 16)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18480907380580902
    2. 'a' → logprob: -2.3098089694976807
    3. ')' → logprob: -3.1848089694976807
    4. 'e' → logprob: -4.80980920791626
    5. 'r' → logprob: -4.93480920791626
    6. 'oint' → logprob: -5.68480920791626
    7. '[' → logprob: -6.05980920791626
    8. 'oints' → logprob: -6.80980920791626
    9. 'os' → logprob: -6.93480920791626
    10. 'osition' → logprob: -7.30980920791626

Token 17: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00829304102808237
    2. '):' → logprob: -5.133293151855469
    3. ')' → logprob: -6.133293151855469
    4. ',p' → logprob: -9.258293151855469
    5. ' ,' → logprob: -10.258293151855469
    6. '[' → logprob: -10.883293151855469
    7. ':' → logprob: -11.633293151855469
    8. '1' → logprob: -12.383293151855469
    9. '_token' → logprob: -12.633293151855469
    10. '.' → logprob: -12.758293151855469

Token 18: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.008220690302550793
    2. 'p' → logprob: -4.883220672607422
    3. ')' → logprob: -8.008220672607422
    4. ' )' → logprob: -9.008220672607422
    5. ' ' → logprob: -9.758220672607422
    6. '<|end|>' → logprob: -10.883220672607422
    7. ' ' → logprob: -11.008220672607422
    8. ',' → logprob: -11.008220672607422
    9. ' ,' → logprob: -11.133220672607422
    10. 'a' → logprob: -11.883220672607422

Token 19: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.09011542052030563
    2. '1' → logprob: -2.7151153087615967
    3. ',' → logprob: -4.215115547180176
    4. 'oint' → logprob: -5.715115547180176
    5. 'oints' → logprob: -6.715115547180176
    6. '):' → logprob: -7.840115547180176
    7. ')' → logprob: -8.590115547180176
    8. '3' → logprob: -10.840115547180176
    9. ',p' → logprob: -11.090115547180176
    10. ' ,' → logprob: -11.090115547180176

Token 20: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00038419815246015787
    2. ')' → logprob: -7.875384330749512
    3. '):
' → logprob: -13.375384330749512
    4. ':' → logprob: -13.875384330749512
    5. ' ):' → logprob: -14.125384330749512
    6. ',' → logprob: -15.375384330749512
    7. '):
' → logprob: -15.750384330749512
    8. ''):' → logprob: -15.875384330749512
    9. ' ' → logprob: -16.625383377075195
    10. '}:' → logprob: -17.125383377075195

Token 21: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3331538140773773
    2. '(' → logprob: -2.08315372467041
    3. '(p' → logprob: -2.70815372467041
    4. ' return' → logprob: -3.08315372467041
    5. ':' → logprob: -4.45815372467041
    6. ' (' → logprob: -4.70815372467041
    7. '):' → logprob: -4.95815372467041
    8. '    ' → logprob: -4.95815372467041
    9. 'return' → logprob: -6.08315372467041
    10. '    
' → logprob: -6.70815372467041

Token 22: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.7330312132835388
    2. '    ' → logprob: -1.4830312728881836
    3. '   ' → logprob: -1.4830312728881836
    4. 'return' (adapté à ' return') → logprob: -3.4830312728881836
    5. ' ' → logprob: -3.6080312728881836
    6. ''' → logprob: -5.733031272888184
    7. '       ' → logprob: -7.358031272888184
    8. '"' → logprob: -7.608031272888184
    9. ')' → logprob: -7.733031272888184
    10. ' math' → logprob: -7.733031272888184

Token 23: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.02183307334780693
    2. ' ' → logprob: -4.7718329429626465
    3. ' ((' → logprob: -5.0218329429626465
    4. ' int' → logprob: -5.8968329429626465
    5. ' (' → logprob: -6.1468329429626465
    6. '(math' → logprob: -7.1468329429626465
    7. 'math' → logprob: -7.1468329429626465
    8. '(' → logprob: -10.896833419799805
    9. '((' → logprob: -11.271833419799805
    10. 'int' → logprob: -11.271833419799805

Token 24: '.h' (ID: 1508)
  Prédit: '.sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.31819984316825867
    2. '.' → logprob: -1.318199872970581
    3. '.dist' → logprob: -5.443199634552002
    4. '.h' → logprob: -8.06820011138916
    5. '.s' → logprob: -8.44320011138916
    6. '.atan' → logprob: -10.31820011138916
    7. '.pow' → logprob: -11.81820011138916
    8. '.pi' → logprob: -11.94320011138916
    9. '.Sqrt' → logprob: -12.06820011138916
    10. '.f' → logprob: -12.56820011138916

Token 25: 'yp' (ID: 1785)
  Prédit: 'yp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yp' → logprob: -5.438573680294212e-06
    2. 'hyp' → logprob: -12.625005722045898
    3. 'y' → logprob: -13.125005722045898
    4. 'sqrt' → logprob: -16.6250057220459
    5. 'a' → logprob: -17.2500057220459
    6. 'e' → logprob: -17.6250057220459
    7. 'ype' → logprob: -18.2500057220459
    8. ' hypot' → logprob: -19.1250057220459
    9. 'yper' → logprob: -19.2500057220459
    10. 'eu' → logprob: -19.3750057220459

Token 26: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -1.3902033970225602e-05
    2. 'otl' → logprob: -11.375014305114746
    3. 'otp' → logprob: -14.625014305114746
    4. 'o' → logprob: -14.625014305114746
    5. 'от' → logprob: -15.125014305114746
    6. 'at' → logprob: -15.125014305114746
    7. ' ot' → logprob: -15.250014305114746
    8. 'otlin' → logprob: -15.750014305114746
    9. '2' → logprob: -15.875014305114746
    10. 'ots' → logprob: -16.25001335144043

Token 27: '(p' (ID: 2407)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.38697585463523865
    2. '(p' → logprob: -1.136975884437561
    3. '((' → logprob: -9.63697624206543
    4. '(
' → logprob: -10.51197624206543
    5. ' (' → logprob: -12.38697624206543
    6. '(

' → logprob: -12.76197624206543
    7. '('' → logprob: -13.26197624206543
    8. 'p' → logprob: -13.88697624206543
    9. '(`' → logprob: -14.26197624206543
    10. '(*' → logprob: -15.26197624206543

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012511883862316608
    2. '2' → logprob: -4.387511730194092
    3. '[' → logprob: -13.26251220703125
    4. 'oint' → logprob: -15.38751220703125
    5. '_' → logprob: -16.13751220703125
    6. 'x' → logprob: -16.88751220703125
    7. 't' → logprob: -17.51251220703125
    8. 'l' → logprob: -17.51251220703125
    9. 'r' → logprob: -17.63751220703125
    10. '```' → logprob: -17.76251220703125

Token 29: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '.' → logprob: -16.625
    3. '0' → logprob: -19.0
    4. '   ' → logprob: -19.625
    5. '.x' → logprob: -19.625
    6. ' [' → logprob: -19.75
    7. ',' → logprob: -20.25
    8. ' ' → logprob: -20.625
    9. '[
' → logprob: -21.0
    10. 'x' → logprob: -21.25

Token 30: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.2200749754119897e-06
    2. '1' → logprob: -13.750001907348633
    3. ' ' → logprob: -14.000001907348633
    4. '   ' → logprob: -15.500001907348633
    5. '-' → logprob: -17.437501907348633
    6. '[' → logprob: -17.437501907348633
    7. '  ' → logprob: -17.500001907348633
    8. '    ' → logprob: -18.000001907348633
    9. '```' → logprob: -18.125001907348633
    10. '

' → logprob: -18.187501907348633

Token 31: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.4292711317539215
    2. '-' → logprob: -1.0542711019515991
    3. '-p' → logprob: -7.554271221160889
    4. '[' → logprob: -11.05427074432373
    5. ' ' → logprob: -11.42927074432373
    6. ' p' → logprob: -11.92927074432373
    7. 'p' → logprob: -12.42927074432373
    8. ',' → logprob: -12.80427074432373
    9. ' ' → logprob: -13.67927074432373
    10. '‌' → logprob: -14.17927074432373

Token 32: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6931481957435608
    2. ' p' → logprob: -0.6931481957435608
    3. '	p' → logprob: -14.693148612976074
    4. '<|end|>' → logprob: -15.318148612976074
    5. ' ' → logprob: -15.818148612976074
    6. ' п' → logprob: -16.193147659301758
    7. ')p' → logprob: -16.943147659301758
    8. ',p' → logprob: -18.068147659301758
    9. '?p' → logprob: -18.193147659301758
    10. '2' → logprob: -18.193147659301758

Token 33: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0019473218126222491
    2. '1' → logprob: -6.251947402954102
    3. '[' → logprob: -11.251947402954102
    4. '0' → logprob: -13.376947402954102
    5. 'ython' → logprob: -13.501947402954102
    6. ' ' → logprob: -13.751947402954102
    7. 'r' → logprob: -15.001947402954102
    8. '```' → logprob: -15.251947402954102
    9. 'oints' → logprob: -16.4394474029541
    10. 'p' → logprob: -16.6269474029541

Token 34: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1008713702030946e-06
    2. '][' → logprob: -14.000001907348633
    3. ' [' → logprob: -14.625001907348633
    4. '1' → logprob: -15.625001907348633
    5. '0' → logprob: -15.875001907348633
    6. ']' → logprob: -16.375001907348633
    7. 'x' → logprob: -16.562501907348633
    8. '[
' → logprob: -17.000001907348633
    9. ''[' → logprob: -17.375001907348633
    10. ' ' → logprob: -17.562501907348633

Token 35: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -14.000000953674316
    3. '[' → logprob: -16.125001907348633
    4. '1' → logprob: -18.625001907348633
    5. '۰' → logprob: -19.625001907348633
    6. '```' → logprob: -20.000001907348633
    7. ']' → logprob: -20.125001907348633
    8. '   ' → logprob: -20.625001907348633
    9. '])' → logprob: -21.062501907348633
    10. '０' → logprob: -21.500001907348633

Token 36: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005511255003511906
    2. ' ,' → logprob: -7.625551223754883
    3. ',p' → logprob: -10.000551223754883
    4. '),' → logprob: -11.750551223754883
    5. ',
' → logprob: -12.000551223754883
    6. '],' → logprob: -13.500551223754883
    7. ')' → logprob: -14.500551223754883
    8. '   ' → logprob: -14.625551223754883
    9. ',

' → logprob: -15.000551223754883
    10. ',)' → logprob: -15.250551223754883

Token 37: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.004604572430253029
    2. 'p' → logprob: -5.504604339599609
    3. ' ' → logprob: -7.629604339599609
    4. ' ' → logprob: -10.25460433959961
    5. ' )' → logprob: -12.87960433959961
    6. ' ​' → logprob: -14.62960433959961
    7. ' (' → logprob: -14.62960433959961
    8. ' ‌' → logprob: -14.62960433959961
    9. '	p' → logprob: -15.50460433959961
    10. ' ﻿' → logprob: -16.12960433959961

Token 38: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006265374249778688
    2. '[' → logprob: -7.375626564025879
    3. ' ' → logprob: -18.375625610351562
    4. '' → logprob: -18.625625610351562
    5. '```' → logprob: -18.625625610351562
    6. '
' → logprob: -18.875625610351562
    7. '2' → logprob: -19.000625610351562
    8. '.' → logprob: -19.000625610351562
    9. '_' → logprob: -19.500625610351562
    10. '#' → logprob: -20.125625610351562

Token 39: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.320199877838604e-07
    2. '][' → logprob: -16.625
    3. ''[' → logprob: -16.625
    4. ' [' → logprob: -16.875
    5. ')[' → logprob: -16.875
    6. '1' → logprob: -16.875
    7. '[
' → logprob: -17.0
    8. ')' → logprob: -17.75
    9. '```' → logprob: -18.625
    10. '>[' → logprob: -18.875

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010401944164186716
    2. '[' → logprob: -6.876039981842041
    3. ' ' → logprob: -12.0010404586792
    4. '0' → logprob: -13.8760404586792
    5. '
' → logprob: -16.251039505004883
    6. '```' → logprob: -16.501039505004883
    7. '   ' → logprob: -16.688539505004883
    8. ']' → logprob: -17.563539505004883
    9. ')' → logprob: -17.626039505004883
    10. '-' → logprob: -17.813539505004883

Token 41: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.919073224067688
    2. ']-' → logprob: -1.169073224067688
    3. ']' → logprob: -1.419073224067688
    4. '[' → logprob: -3.4190731048583984
    5. '])' → logprob: -4.794073104858398
    6. ')' → logprob: -5.669073104858398
    7. '][' → logprob: -6.044073104858398
    8. '1' → logprob: -7.794073104858398
    9. ')-' → logprob: -8.169073104858398
    10. ' -' → logprob: -8.294073104858398

Token 42: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0001398929744027555
    2. ' p' → logprob: -8.875140190124512
    3. ' ' → logprob: -20.125139236450195
    4. ')p' → logprob: -20.750139236450195
    5. '	p' → logprob: -20.875139236450195
    6. ')' → logprob: -21.875139236450195
    7. '```' → logprob: -22.625139236450195
    8. '<p' → logprob: -22.750139236450195
    9. ''p' → logprob: -22.750139236450195
    10. 'q' → logprob: -22.875139236450195

Token 43: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003806257154792547
    2. '[' → logprob: -7.875380516052246
    3. ' ' → logprob: -15.125380516052246
    4. '-' → logprob: -16.250381469726562
    5. '2' → logprob: -16.250381469726562
    6. '```' → logprob: -17.375381469726562
    7. ']' → logprob: -17.750381469726562
    8. '
' → logprob: -18.187881469726562
    9. '１' → logprob: -18.187881469726562
    10. '   ' → logprob: -18.625381469726562

Token 44: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.79811754100956e-05
    2. '-' → logprob: -10.375038146972656
    3. '])' → logprob: -12.500038146972656
    4. '1' → logprob: -13.500038146972656
    5. '2' → logprob: -14.625038146972656
    6. '-[' → logprob: -15.125038146972656
    7. '][' → logprob: -15.125038146972656
    8. ']' → logprob: -15.250038146972656
    9. '0' → logprob: -16.625038146972656
    10. '.' → logprob: -17.125038146972656

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.100059156073257e-05
    2. '[' → logprob: -9.625070571899414
    3. '0' → logprob: -12.500070571899414
    4. ' ' → logprob: -14.375070571899414
    5. '])' → logprob: -15.000070571899414
    6. ']' → logprob: -16.625070571899414
    7. '-' → logprob: -17.750070571899414
    8. '   ' → logprob: -17.750070571899414
    9. '```' → logprob: -17.750070571899414
    10. '	' → logprob: -19.000070571899414

Token 46: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.6312321753939614e-05
    2. '))' → logprob: -10.250036239624023
    3. ' )' → logprob: -14.875036239624023
    4. '])' → logprob: -15.250036239624023
    5. ')
' → logprob: -16.000036239624023
    6. '})' → logprob: -16.125036239624023
    7. '),' → logprob: -17.125036239624023
    8. ')**' → logprob: -17.875036239624023
    9. ')])' → logprob: -18.000036239624023
    10. ')")' → logprob: -18.125036239624023

Token 47: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4445229470729828
    2. 'def' → logprob: -1.0695229768753052
    3. '

' → logprob: -4.569522857666016
    4. '\n' → logprob: -6.694522857666016
    5. '```' → logprob: -6.819522857666016
    6. '\' → logprob: -7.069522857666016
    7. 'newline' → logprob: -7.819522857666016
    8. ':' → logprob: -7.944522857666016
    9. '#' → logprob: -8.194522857666016
    10. '' → logprob: -8.444522857666016

Token 48: ' dot' (ID: 16579)
  Prédit: ' shortest'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' shortest' → logprob: -1.004204273223877
    2. ' bfs' → logprob: -1.504204273223877
    3. ' solve' → logprob: -2.254204273223877
    4. ' find' → logprob: -2.379204273223877
    5. ' main' → logprob: -2.504204273223877
    6. ' dfs' → logprob: -2.754204273223877
    7. ' closest' → logprob: -3.754204273223877
    8. ' build' → logprob: -4.754204273223877
    9. ' calculate' → logprob: -5.254204273223877
    10. ' get' → logprob: -5.504204273223877

Token 49: '(u' (ID: 17057)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0011125932214781642
    2. ' (' → logprob: -7.126112461090088
    3. '<|end|>' → logprob: -8.501112937927246
    4. '(p' → logprob: -9.501112937927246
    5. '<|end|>' → logprob: -11.626112937927246
    6. ' ' → logprob: -12.126112937927246
    7. '_' → logprob: -13.501112937927246
    8. '('' → logprob: -13.626112937927246
    9. '((' → logprob: -14.063612937927246
    10. '(space' → logprob: -14.188612937927246

Token 50: ',v' (ID: 30680)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.008751180954277515
    2. ')' → logprob: -5.758751392364502
    3. ' ,' → logprob: -6.133751392364502
    4. '<|end|>' → logprob: -6.258751392364502
    5. ',u' → logprob: -6.758751392364502
    6. '(' → logprob: -9.258750915527344
    7. '<|end|>' → logprob: -9.633750915527344
    8. '(u' → logprob: -10.008750915527344
    9. '[' → logprob: -10.633750915527344
    10. ' ' → logprob: -11.008750915527344

Token 51: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07021529227495193
    2. '):' → logprob: -2.6952152252197266
    3. ',' → logprob: -9.070215225219727
    4. ' )' → logprob: -9.195215225219727
    5. ' ):' → logprob: -10.695215225219727
    6. 'u' → logprob: -11.695215225219727
    7. '(u' → logprob: -12.195215225219727
    8. '(' → logprob: -12.195215225219727
    9. '):
' → logprob: -12.445215225219727
    10. ',u' → logprob: -12.445215225219727

Token 52: '   ' (ID: 271)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.6600475311279297
    2. '(u' → logprob: -1.0350475311279297
    3. 'u' → logprob: -2.6600475311279297
    4. '(' → logprob: -2.9100475311279297
    5. ' (' → logprob: -5.78504753112793
    6. ' return' → logprob: -8.16004753112793
    7. '   ' → logprob: -10.03504753112793
    8. ' =' → logprob: -10.16004753112793
    9. ',' → logprob: -10.28504753112793
    10. '=' → logprob: -10.78504753112793

Token 53: ' return' (ID: 622)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.12863634526729584
    2. 'u' → logprob: -2.253636360168457
    3. ' return' → logprob: -4.253636360168457
    4. ' ' → logprob: -6.878636360168457
    5. 'return' (adapté à ' return') → logprob: -8.003636360168457
    6. '(u' → logprob: -10.753636360168457
    7. '(' → logprob: -10.878636360168457
    8. '   ' → logprob: -10.878636360168457
    9. '    ' → logprob: -11.253636360168457
    10. ' (' → logprob: -11.503636360168457

Token 54: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.3132665753364563
    2. ' u' → logprob: -1.3132665157318115
    3. ' sum' → logprob: -12.68826675415039
    4. 'sum' → logprob: -13.43826675415039
    5. '(u' → logprob: -15.56326675415039
    6. ' ' → logprob: -16.81326675415039
    7. '	u' → logprob: -17.06326675415039
    8. '[u' → logprob: -18.81326675415039
    9. ' (' → logprob: -19.43826675415039
    10. '(' → logprob: -19.43826675415039

Token 55: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.624555291840807e-05
    2. ' [' → logprob: -9.500076293945312
    3. '.' → logprob: -14.875076293945312
    4. '[
' → logprob: -15.125076293945312
    5. ' ' → logprob: -15.875076293945312
    6. '[u' → logprob: -15.875076293945312
    7. '1' → logprob: -16.750076293945312
    8. '0' → logprob: -16.875076293945312
    9. ' [
' → logprob: -17.250076293945312
    10. ''' → logprob: -17.625076293945312

Token 56: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.750000953674316
    3. '[' → logprob: -16.75
    4. '1' → logprob: -17.125
    5. '   ' → logprob: -19.4375
    6. ']' → logprob: -19.8125
    7. ')' → logprob: -20.5625
    8. '
' → logprob: -20.5625
    9. '۰' → logprob: -20.5625
    10. ' ' → logprob: -20.6875

Token 57: ']*' (ID: 18579)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.25878965854644775
    2. ' *' → logprob: -1.5087896585464478
    3. '*u' → logprob: -5.008789539337158
    4. '*v' → logprob: -9.883790016174316
    5. ']*' → logprob: -10.008790016174316
    6. ')*' → logprob: -10.758790016174316
    7. ')' → logprob: -11.508790016174316
    8. ']' → logprob: -12.008790016174316
    9. '**' → logprob: -12.133790016174316
    10. '*)' → logprob: -12.258790016174316

Token 58: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.4391956685576588e-05
    2. ' v' → logprob: -10.625024795532227
    3. 'u' → logprob: -17.125024795532227
    4. '	v' → logprob: -18.125024795532227
    5. ')v' → logprob: -19.500024795532227
    6. ' ' → logprob: -19.625024795532227
    7. '1' → logprob: -19.875024795532227
    8. 'vq' → logprob: -21.375024795532227
    9. 'vj' → logprob: -21.375024795532227
    10. '
' → logprob: -22.000024795532227

Token 59: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.423219696851447e-05
    2. '0' → logprob: -9.500083923339844
    3. '[
' → logprob: -12.125083923339844
    4. ' [' → logprob: -12.750083923339844
    5. '
' → logprob: -14.750083923339844
    6. ' ' → logprob: -15.500083923339844
    7. '```' → logprob: -15.875083923339844
    8. '1' → logprob: -16.125083923339844
    9. '][' → logprob: -16.750083923339844
    10. ']' → logprob: -16.875083923339844

Token 60: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.875
    3. '1' → logprob: -19.375
    4. '[' → logprob: -21.125
    5. '   ' → logprob: -21.75
    6. ']' → logprob: -22.125
    7. '```' → logprob: -22.125
    8. '۰' → logprob: -22.25
    9. '  ' → logprob: -23.1875
    10. '
' → logprob: -23.1875

Token 61: ']+' (ID: 15344)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.6936395168304443
    2. ' +' → logprob: -0.6936395168304443
    3. '<|end|>' → logprob: -7.943639755249023
    4. ' ' → logprob: -9.193639755249023
    5. ')' → logprob: -11.068639755249023
    6. '<|end|>' → logprob: -11.693639755249023
    7. ' +
' → logprob: -12.568639755249023
    8. ' )' → logprob: -13.443639755249023
    9. '}' → logprob: -13.568639755249023
    10. '+)' → logprob: -14.443639755249023

Token 62: 'u' (ID: 84)
  Prédit: ' u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' u' → logprob: -0.5759806036949158
    2. 'u' → logprob: -0.8259806036949158
    3. 'v' → logprob: -10.700980186462402
    4. ' ' → logprob: -11.325980186462402
    5. ' v' → logprob: -12.075980186462402
    6. '	u' → logprob: -15.075980186462402
    7. ' ' → logprob: -15.700980186462402
    8. '(u' → logprob: -16.07598114013672
    9. ' uv' → logprob: -16.70098114013672
    10. 'uv' → logprob: -17.32598114013672

Token 63: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3663626305060461e-05
    2. '1' → logprob: -11.87501335144043
    3. ' [' → logprob: -12.25001335144043
    4. '0' → logprob: -14.00001335144043
    5. ' ' → logprob: -14.25001335144043
    6. '[
' → logprob: -15.75001335144043
    7. '.' → logprob: -16.00001335144043
    8. '   ' → logprob: -16.75001335144043
    9. '```' → logprob: -16.75001335144043
    10. '<|end|>' → logprob: -17.75001335144043

Token 64: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011289366520941257
    2. '0' → logprob: -4.511289596557617
    3. ' ' → logprob: -8.511289596557617
    4. '[' → logprob: -10.136289596557617
    5. '   ' → logprob: -15.761289596557617
    6. ']' → logprob: -15.761289596557617
    7. '```' → logprob: -16.136289596557617
    8. '  ' → logprob: -16.511289596557617
    9. ')' → logprob: -17.136289596557617
    10. '(' → logprob: -17.261289596557617

Token 65: ']*' (ID: 18579)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6003188490867615
    2. ']*' → logprob: -1.1003189086914062
    3. '[' → logprob: -2.6003189086914062
    4. '*' → logprob: -3.4753189086914062
    5. '][' → logprob: -5.100318908691406
    6. ' ]' → logprob: -5.850318908691406
    7. '<|end|>' → logprob: -6.350318908691406
    8. '*[' → logprob: -6.600318908691406
    9. '*v' → logprob: -7.100318908691406
    10. '*u' → logprob: -9.225318908691406

Token 66: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -2.451116051815916e-05
    2. ' v' → logprob: -10.625024795532227
    3. '<|end|>' → logprob: -16.125024795532227
    4. 'u' → logprob: -16.875024795532227
    5. ')v' → logprob: -17.625024795532227
    6. '	v' → logprob: -19.125024795532227
    7. ' ' → logprob: -19.250024795532227
    8. '*v' → logprob: -20.250024795532227
    9. '[v' → logprob: -21.000024795532227
    10. '?v' → logprob: -21.125024795532227

Token 67: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001705771079286933
    2. '1' → logprob: -6.376705646514893
    3. ']' → logprob: -13.25170612335205
    4. '[
' → logprob: -14.12670612335205
    5. '][' → logprob: -14.25170612335205
    6. ' ' → logprob: -15.75170612335205
    7. ' [' → logprob: -16.126705169677734
    8. '{' → logprob: -17.376705169677734
    9. ')' → logprob: -17.501705169677734
    10. '0' → logprob: -18.126705169677734

Token 68: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.500004768371582
    3. ']' → logprob: -15.000004768371582
    4. '0' → logprob: -15.625004768371582
    5. '   ' → logprob: -17.000003814697266
    6. '  ' → logprob: -18.125003814697266
    7. '[' → logprob: -18.375003814697266
    8. '-' → logprob: -18.625003814697266
    9. '' → logprob: -18.937503814697266
    10. '```' → logprob: -18.937503814697266

Token 69: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.682846287731081e-05
    2. '}' → logprob: -9.750066757202148
    3. '<|end|>' → logprob: -12.000066757202148
    4. ')
' → logprob: -14.000066757202148
    5. ' )' → logprob: -14.875066757202148
    6. ']' → logprob: -15.000066757202148
    7. '<|end|>' → logprob: -15.375066757202148
    8. ')}' → logprob: -15.375066757202148
    9. ')return' → logprob: -16.00006675720215
    10. '),' → logprob: -16.50006675720215

Token 70: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0444636195898056
    2. '
' → logprob: -3.169463634490967
    3. '

' → logprob: -7.419463634490967
    4. '\' → logprob: -7.794463634490967
    5. '#' → logprob: -8.419463157653809
    6. ' def' → logprob: -9.294463157653809
    7. '\n' → logprob: -10.044463157653809
    8. '```' → logprob: -10.419463157653809
    9. 'd' → logprob: -11.169463157653809
    10. '<|end|>' → logprob: -11.419463157653809

Token 71: ' vec' (ID: 10563)
  Prédit: ' cross'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cross' → logprob: -0.006334479432553053
    2. 'cross' → logprob: -5.38133430480957
    3. ' vector' → logprob: -7.25633430480957
    4. ' def' → logprob: -8.13133430480957
    5. '_cross' → logprob: -8.63133430480957
    6. 'subtract' → logprob: -8.88133430480957
    7. ' subtract' → logprob: -9.00633430480957
    8. ' norm' → logprob: -9.50633430480957
    9. ' sub' → logprob: -10.00633430480957
    10. 'sub' → logprob: -10.25633430480957

Token 72: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6526203751564026
    2. '(a' → logprob: -1.4026203155517578
    3. '(u' → logprob: -1.9026203155517578
    4. '(p' → logprob: -2.527620315551758
    5. 'ector' → logprob: -6.277620315551758
    6. '(x' → logprob: -8.402620315551758
    7. 'ect' → logprob: -8.402620315551758
    8. 'uct' → logprob: -8.527620315551758
    9. '((' → logprob: -8.527620315551758
    10. '(v' → logprob: -8.777620315551758

Token 73: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4304731786251068
    2. ',b' → logprob: -1.0554732084274292
    3. ',p' → logprob: -6.805473327636719
    4. ' ,' → logprob: -8.305473327636719
    5. ',a' → logprob: -8.430473327636719
    6. 'b' → logprob: -9.555473327636719
    7. ',v' → logprob: -9.805473327636719
    8. ',u' → logprob: -11.680473327636719
    9. ',q' → logprob: -11.805473327636719
    10. '(' → logprob: -12.180473327636719

Token 74: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004702226258814335
    2. '):
' → logprob: -5.379702091217041
    3. ')' → logprob: -9.6297025680542
    4. '):
' → logprob: -11.3797025680542
    5. ' ):' → logprob: -12.6297025680542
    6. '):

' → logprob: -14.8797025680542
    7. '):(' → logprob: -15.0047025680542
    8. ')=' → logprob: -15.2547025680542
    9. ')：' → logprob: -16.129701614379883
    10. '   ' → logprob: -16.254701614379883

Token 75: '   ' (ID: 271)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.5824314951896667
    2. '[b' → logprob: -1.8324315547943115
    3. ' [' → logprob: -2.2074315547943115
    4. '   ' → logprob: -2.9574315547943115
    5. '(b' → logprob: -3.3324315547943115
    6. 'b' → logprob: -3.4574315547943115
    7. ' (' → logprob: -3.8324315547943115
    8. '(' → logprob: -4.082431316375732
    9. '[a' → logprob: -5.457431316375732
    10. ' return' → logprob: -5.832431316375732

Token 76: ' return' (ID: 622)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.20892266929149628
    2. ' (' → logprob: -2.7089226245880127
    3. '[b' → logprob: -2.8339226245880127
    4. 'b' → logprob: -3.7089226245880127
    5. '(' → logprob: -4.083922863006592
    6. '[' → logprob: -4.333922863006592
    7. '   ' → logprob: -5.583922863006592
    8. ' [' → logprob: -6.333922863006592
    9. ' b' → logprob: -6.583922863006592
    10. ' return' → logprob: -6.833922863006592

Token 77: ' (' (ID: 350)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0012739235535264015
    2. ' (' → logprob: -6.876274108886719
    3. '[b' → logprob: -8.376274108886719
    4. '(' → logprob: -11.876274108886719
    5. 'b' → logprob: -13.001274108886719
    6. ' b' → logprob: -14.751274108886719
    7. '[' → logprob: -14.751274108886719
    8. '   ' → logprob: -15.126274108886719
    9. '(a' → logprob: -15.376274108886719
    10. ' ' → logprob: -15.626274108886719

Token 78: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.00010950337309623137
    2. ' b' → logprob: -9.125109672546387
    3. 'a' → logprob: -15.125109672546387
    4. ')b' → logprob: -15.500109672546387
    5. '(b' → logprob: -17.00010871887207
    6. '	b' → logprob: -18.62510871887207
    7. ' б' → logprob: -19.25010871887207
    8. '   ' → logprob: -19.75010871887207
    9. ')' → logprob: -21.12510871887207
    10. '>b' → logprob: -21.25010871887207

Token 79: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: 0.0
    2. '[
' → logprob: -19.625
    3. '0' → logprob: -19.75
    4. ' [' → logprob: -22.875
    5. '1' → logprob: -23.375
    6. '
' → logprob: -24.0
    7. '```' → logprob: -24.0
    8. ')' → logprob: -24.875
    9. '   ' → logprob: -25.0
    10. ' ' → logprob: -25.0

Token 80: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -13.625000953674316
    3. ' ' → logprob: -15.875000953674316
    4. '۰' → logprob: -19.125001907348633
    5. '   ' → logprob: -19.875001907348633
    6. '  ' → logprob: -20.750001907348633
    7. '```' → logprob: -21.000001907348633
    8. '
' → logprob: -21.000001907348633
    9. '

' → logprob: -21.125001907348633
    10. '٠' → logprob: -21.500001907348633

Token 81: ']-' (ID: 27107)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.31676703691482544
    2. '-' → logprob: -1.3167669773101807
    3. '-a' → logprob: -5.69176721572876
    4. '[' → logprob: -9.316766738891602
    5. ' ' → logprob: -10.941766738891602
    6. 'a' → logprob: -12.066766738891602
    7. ' a' → logprob: -12.441766738891602
    8. ')' → logprob: -13.316766738891602
    9. '-[' → logprob: -13.441766738891602
    10. ')-(' → logprob: -14.191766738891602

Token 82: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.0009119403548538685
    2. ' a' → logprob: -7.000911712646484
    3. '<|end|>' → logprob: -15.125911712646484
    4. '	a' → logprob: -16.250911712646484
    5. ')a' → logprob: -16.750911712646484
    6. ' ' → logprob: -16.875911712646484
    7. ')' → logprob: -18.125911712646484
    8. '   ' → logprob: -18.375911712646484
    9. '  ' → logprob: -18.625911712646484
    10. ',a' → logprob: -20.250911712646484

Token 83: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.292907877039397e-06
    2. '0' → logprob: -12.75000286102295
    3. '1' → logprob: -15.50000286102295
    4. ' [' → logprob: -16.125003814697266
    5. ' ' → logprob: -17.125003814697266
    6. '[
' → logprob: -17.375003814697266
    7. ')' → logprob: -17.375003814697266
    8. '][' → logprob: -17.875003814697266
    9. ',' → logprob: -18.625003814697266
    10. '<|end|>' → logprob: -18.625003814697266

Token 84: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.875004768371582
    3. '[' → logprob: -13.250004768371582
    4. ']' → logprob: -15.500004768371582
    5. '<|end|>' → logprob: -16.6250057220459
    6. ')' → logprob: -16.7500057220459
    7. '۰' → logprob: -17.6250057220459
    8. '<|end|>' → logprob: -17.7500057220459
    9. '   ' → logprob: -18.5000057220459
    10. '])' → logprob: -18.5625057220459

Token 85: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008804962271824479
    2. ')' → logprob: -7.375880718231201
    3. '),' → logprob: -8.750880241394043
    4. ',)' → logprob: -9.375880241394043
    5. ' ,' → logprob: -13.000880241394043
    6. ',b' → logprob: -13.125880241394043
    7. '],' → logprob: -13.625880241394043
    8. '),(' → logprob: -13.875880241394043
    9. '<|end|>' → logprob: -13.875880241394043
    10. ',

' → logprob: -14.125880241394043

Token 86: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.03555796295404434
    2. 'b' → logprob: -3.410557985305786
    3. ' ' → logprob: -6.285557746887207
    4. ' )' → logprob: -10.285557746887207
    5. ')' → logprob: -12.535557746887207
    6. ')b' → logprob: -12.785557746887207
    7. ' ' → logprob: -12.910557746887207
    8. ' (' → logprob: -13.660557746887207
    9. ' 
' → logprob: -14.410557746887207
    10. ' б' → logprob: -14.410557746887207

Token 87: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -15.875
    3. '[
' → logprob: -17.25
    4. ')' → logprob: -17.5
    5. ' ' → logprob: -18.625
    6. '   ' → logprob: -18.625
    7. '<|end|>' → logprob: -18.75
    8. ')[' → logprob: -18.75
    9. '<|end|>' → logprob: -18.75
    10. '][' → logprob: -19.125

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00027301779482513666
    2. '[' → logprob: -8.250272750854492
    3. ' ' → logprob: -11.750272750854492
    4. ']' → logprob: -13.625272750854492
    5. '0' → logprob: -13.625272750854492
    6. '-' → logprob: -14.625272750854492
    7. ')' → logprob: -14.875272750854492
    8. '<|end|>' → logprob: -15.375272750854492
    9. '<|end|>' → logprob: -15.625272750854492
    10. '   ' → logprob: -15.750272750854492

Token 89: ']-' (ID: 27107)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03696812316775322
    2. '[' → logprob: -3.536968231201172
    3. ')' → logprob: -5.161968231201172
    4. ' -' → logprob: -7.411968231201172
    5. '-)' → logprob: -8.036968231201172
    6. ']' → logprob: -8.536968231201172
    7. '<|end|>' → logprob: -9.286968231201172
    8. '-[' → logprob: -9.411968231201172
    9. ')-' → logprob: -9.536968231201172
    10. ']-' → logprob: -9.786968231201172

Token 90: 'a' (ID: 64)
  Prédit: 'a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.3856492842023727e-06
    2. ' a' → logprob: -13.875000953674316
    3. '<|end|>' → logprob: -15.000000953674316
    4. '[' → logprob: -17.000001907348633
    5. ')' → logprob: -17.750001907348633
    6. ')a' → logprob: -18.250001907348633
    7. '	a' → logprob: -18.750001907348633
    8. ' ' → logprob: -18.750001907348633
    9. 'а' → logprob: -19.125001907348633
    10. 'b' → logprob: -20.250001907348633

Token 91: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.186122770188376e-05
    2. ')' → logprob: -10.000091552734375
    3. '1' → logprob: -10.375091552734375
    4. '])' → logprob: -11.750091552734375
    5. ']' → logprob: -12.375091552734375
    6. '-' → logprob: -13.000091552734375
    7. '][' → logprob: -14.750091552734375
    8. ' [' → logprob: -15.875091552734375
    9. '[
' → logprob: -16.500091552734375
    10. ' ' → logprob: -17.125091552734375

Token 92: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018744789122138172
    2. '])' → logprob: -9.500187873840332
    3. ' ' → logprob: -9.500187873840332
    4. ']' → logprob: -10.875187873840332
    5. '0' → logprob: -11.250187873840332
    6. '[' → logprob: -12.625187873840332
    7. ')' → logprob: -13.750187873840332
    8. '-' → logprob: -15.000187873840332
    9. '   ' → logprob: -15.250187873840332
    10. '' → logprob: -16.250186920166016

Token 93: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.5048530030981055e-06
    2. ' )' → logprob: -13.875001907348633
    3. ')
' → logprob: -15.625001907348633
    4. '))' → logprob: -15.750001907348633
    5. '')' → logprob: -16.125001907348633
    6. '`)' → logprob: -17.750001907348633
    7. ')

' → logprob: -18.125001907348633
    8. ')return' → logprob: -18.125001907348633
    9. '）' → logprob: -18.375001907348633
    10. ')`' → logprob: -18.375001907348633

Token 94: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.019649123772978783
    2. 'd' → logprob: -4.394649028778076
    3. '
' → logprob: -5.894649028778076
    4. '\' → logprob: -5.894649028778076
    5. '#' → logprob: -7.394649028778076
    6. 'class' → logprob: -7.519649028778076
    7. '```' → logprob: -9.144649505615234
    8. '

' → logprob: -9.269649505615234
    9. '\n' → logprob: -9.644649505615234
    10. '' → logprob: -10.144649505615234

Token 95: ' angle' (ID: 16538)
  Prédit: ' angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' angle' → logprob: -0.4769347310066223
    2. ' is' → logprob: -1.8519346714019775
    3. ' cross' → logprob: -2.6019346714019775
    4. 'angle' → logprob: -2.8519346714019775
    5. ' main' → logprob: -2.9769346714019775
    6. ' perpendicular' → logprob: -4.726934909820557
    7. ' intersect' → logprob: -5.351934909820557
    8. ' convex' → logprob: -6.101934909820557
    9. ' perp' → logprob: -6.226934909820557
    10. 'per' → logprob: -6.351934909820557

Token 96: '_cos' (ID: 152313)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002129683503881097
    2. '_' → logprob: -6.627129554748535
    3. '(p' → logprob: -8.127129554748535
    4. '_parent' → logprob: -9.252129554748535
    5. '<|end|>' → logprob: -9.252129554748535
    6. '(a' → logprob: -9.377129554748535
    7. ' (' → logprob: -10.877129554748535
    8. 's' → logprob: -11.127129554748535
    9. '(parent' → logprob: -11.252129554748535
    10. '_(' → logprob: -11.252129554748535

Token 97: '(a' (ID: 6271)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0021656060125678778
    2. ')' → logprob: -7.377165794372559
    3. '(p' → logprob: -7.752165794372559
    4. '(a' → logprob: -7.752165794372559
    5. '_' → logprob: -9.002165794372559
    6. '<|end|>' → logprob: -9.127165794372559
    7. '(u' → logprob: -9.627165794372559
    8. '(angle' → logprob: -9.877165794372559
    9. ' (' → logprob: -9.877165794372559
    10. '((' → logprob: -10.252165794372559

Token 98: ',b' (ID: 17568)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03270481526851654
    2. ')' → logprob: -4.907704830169678
    3. ',a' → logprob: -4.907704830169678
    4. ',)' → logprob: -5.282704830169678
    5. ',p' → logprob: -5.532704830169678
    6. '(' → logprob: -5.782704830169678
    7. ',(' → logprob: -6.032704830169678
    8. ',b' → logprob: -7.032704830169678
    9. ' ,' → logprob: -7.407704830169678
    10. '(a' → logprob: -7.532704830169678

Token 99: ',c' (ID: 22261)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016870327293872833
    2. ')' → logprob: -4.141870498657227
    3. ',' → logprob: -7.141870498657227
    4. '):
' → logprob: -10.766870498657227
    5. ':' → logprob: -11.516870498657227
    6. ' ):' → logprob: -12.141870498657227
    7. '),' → logprob: -13.391870498657227
    8. 's' → logprob: -13.641870498657227
    9. '[' → logprob: -14.141870498657227
    10. ')=' → logprob: -14.266870498657227

Token 100: '):' (ID: 3127)
  Prédit: '):'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02977629378437996
    2. ')' → logprob: -3.5297763347625732
    3. ' ):' → logprob: -11.154776573181152
    4. ',' → logprob: -12.029776573181152
    5. '):
' → logprob: -12.654776573181152
    6. ':' → logprob: -13.904776573181152
    7. '),' → logprob: -15.154776573181152
    8. ' )' → logprob: -15.529776573181152
    9. ')：' → logprob: -15.779776573181152
    10. ' ' → logprob: -16.029775619506836

Token 101: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 102: ' cos' (ID: 8974)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9774590730667114
    2. ' u' → logprob: -1.4774590730667114
    3. '   ' → logprob: -1.4774590730667114
    4. '    ' → logprob: -2.852458953857422
    5. ' p' → logprob: -3.352458953857422
    6. ' return' → logprob: -3.727458953857422
    7. ')' → logprob: -3.977458953857422
    8. ' #' → logprob: -4.977458953857422
    9. ' a' → logprob: -5.227458953857422
    10. 'u' → logprob: -5.227458953857422

Token 103: ' angle' (ID: 16538)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.21864090859889984
    2. ' ' → logprob: -2.7186408042907715
    3. ')' → logprob: -2.8436408042907715
    4. '   ' → logprob: -3.5936408042907715
    5. '  ' → logprob: -4.4686408042907715
    6. ' (' → logprob: -4.7186408042907715
    7. '<|end|>' → logprob: -5.0936408042907715
    8. '_' → logprob: -5.7186408042907715
    9. '<|end|>' → logprob: -5.9686408042907715
    10. '=' → logprob: -5.9686408042907715

Token 104: ' at' (ID: 540)
  Prédit: ' between'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' between' → logprob: -0.920450747013092
    2. ')' → logprob: -1.1704506874084473
    3. ' =' → logprob: -2.4204506874084473
    4. '(' → logprob: -3.2954506874084473
    5. '   ' → logprob: -3.2954506874084473
    6. '=' → logprob: -3.6704506874084473
    7. '<|end|>' → logprob: -3.9204506874084473
    8. ' at' → logprob: -4.045450687408447
    9. ' ' → logprob: -4.045450687408447
    10. ':' → logprob: -4.795450687408447

Token 105: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.6936235427856445
    2. ' b' → logprob: -0.6936235427856445
    3. 'a' → logprob: -8.443623542785645
    4. '<|end|>' → logprob: -9.318623542785645
    5. ' ' → logprob: -9.568623542785645
    6. ' a' → logprob: -9.818623542785645
    7. '	b' → logprob: -11.568623542785645
    8. 'B' → logprob: -11.568623542785645
    9. ')b' → logprob: -12.068623542785645
    10. '[' → logprob: -12.568623542785645

Token 106: ' between' (ID: 2870)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.0267726182937622
    2. '(' → logprob: -1.1517726182937622
    3. '   ' → logprob: -2.5267724990844727
    4. '(a' → logprob: -2.5267724990844727
    5. ':' → logprob: -3.0267724990844727
    6. '):' → logprob: -3.7767724990844727
    7. ' (' → logprob: -3.7767724990844727
    8. ',' → logprob: -3.9017724990844727
    9. ')' → logprob: -4.276772499084473
    10. ' =' → logprob: -4.401772499084473

Token 107: ' ba' (ID: 3079)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.036276862025260925
    2. ' a' → logprob: -3.5362768173217773
    3. ' (' → logprob: -5.911276817321777
    4. '(a' → logprob: -6.536276817321777
    5. ')' → logprob: -7.286276817321777
    6. ' vectors' → logprob: -7.911276817321777
    7. '(' → logprob: -8.036276817321777
    8. ' ' → logprob: -8.536276817321777
    9. ' points' → logprob: -8.911276817321777
    10. '<|end|>' → logprob: -8.911276817321777

Token 108: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.024104218930006027
    2. ')' → logprob: -4.274104118347168
    3. ' and' → logprob: -5.774104118347168
    4. ' ,' → logprob: -5.899104118347168
    5. ',b' → logprob: -6.399104118347168
    6. ' ' → logprob: -7.149104118347168
    7. '),' → logprob: -7.524104118347168
    8. 'b' → logprob: -7.649104118347168
    9. '-' → logprob: -8.774104118347168
    10. '[' → logprob: -9.774104118347168

Token 109: ' bc' (ID: 51743)
  Prédit: 'bc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bc' → logprob: -0.004636368714272976
    2. ' bc' → logprob: -5.379636287689209
    3. '_bc' → logprob: -11.629636764526367
    4. 'cb' → logprob: -12.504636764526367
    5. '.bc' → logprob: -12.879636764526367
    6. 'b' → logprob: -14.754636764526367
    7. ' ' → logprob: -14.754636764526367
    8. 'bm' → logprob: -16.754636764526367
    9. ' BC' → logprob: -17.254636764526367
    10. '```' → logprob: -17.504636764526367

Token 110: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7209389805793762
    2. '   ' → logprob: -0.7209389805793762
    3. '):' → logprob: -4.2209391593933105
    4. ':
' → logprob: -4.5959391593933105
    5. ')' → logprob: -7.2209391593933105
    6. '):
' → logprob: -7.3459391593933105
    7. ' :' → logprob: -8.095938682556152
    8. ',' → logprob: -8.220938682556152
    9. '(' → logprob: -9.220938682556152
    10. '(p' → logprob: -9.595938682556152

Token 111: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007693932857364416
    2. ' ' → logprob: -6.632693767547607
    3. '
' → logprob: -6.757693767547607
    4. '    
' → logprob: -7.132693767547607
    5. '<|end|>' → logprob: -7.132693767547607
    6. ')' → logprob: -7.257693767547607
    7. ' 
' → logprob: -7.382693767547607
    8. '  ' → logprob: -7.632693767547607
    9. ':' → logprob: -7.757693767547607
    10. '    ' → logprob: -8.007694244384766

Token 112: ' ba' (ID: 3079)
  Prédit: ' ba'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ba' → logprob: -0.9783676266670227
    2. 'ba' (adapté à ' ba') → logprob: -1.228367567062378
    3. 'u' → logprob: -1.478367567062378
    4. ' u' → logprob: -2.728367567062378
    5. '   ' → logprob: -3.478367567062378
    6. 'ab' → logprob: -5.353367805480957
    7. ' ab' → logprob: -6.853367805480957
    8. 'v' → logprob: -7.353367805480957
    9. 'BA' → logprob: -8.353367805480957
    10. ' v' → logprob: -9.228367805480957

Token 113: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4290996789932251
    2. '=' → logprob: -1.054099678993225
    3. ',' → logprob: -8.929100036621094
    4. '_vec' → logprob: -9.304100036621094
    5. ' ' → logprob: -9.679100036621094
    6. ')' → logprob: -9.679100036621094
    7. ')=' → logprob: -11.304100036621094
    8. '_' → logprob: -11.304100036621094
    9. ' =(' → logprob: -12.304100036621094
    10. '=(' → logprob: -12.929100036621094

Token 114: ' vec' (ID: 10563)
  Prédit: ' vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vec' → logprob: -0.14292307198047638
    2. 'vec' → logprob: -2.01792311668396
    3. '(vec' → logprob: -8.767923355102539
    4. '	vec' → logprob: -9.517923355102539
    5. ' Vec' → logprob: -12.017923355102539
    6. ' (' → logprob: -12.142923355102539
    7. '(' → logprob: -13.017923355102539
    8. '.vec' → logprob: -13.517923355102539
    9. ' ' → logprob: -13.767923355102539
    10. '_vec' → logprob: -14.017923355102539

Token 115: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00022594700567424297
    2. '(' → logprob: -8.875226020812988
    3. '(a' → logprob: -9.750226020812988
    4. '((' → logprob: -11.000226020812988
    5. '(c' → logprob: -11.500226020812988
    6. 'b' → logprob: -14.500226020812988
    7. ' (' → logprob: -15.000226020812988
    8. '(
' → logprob: -18.250225067138672
    9. '(s' → logprob: -18.500225067138672
    10. ')(' → logprob: -18.750225067138672

Token 116: ',a' (ID: 26776)
  Prédit: ',a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',a' → logprob: -0.04885077849030495
    2. ',' → logprob: -3.0488507747650146
    3. 'a' → logprob: -8.798851013183594
    4. ' ,' → logprob: -9.173851013183594
    5. ' a' → logprob: -12.423851013183594
    6. '),' → logprob: -13.798851013183594
    7. ',b' → logprob: -13.923851013183594
    8. ',c' → logprob: -14.298851013183594
    9. ')' → logprob: -14.673851013183594
    10. ')a' → logprob: -14.923851013183594

Token 117: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.387458365177736e-05
    2. ',' → logprob: -10.000083923339844
    3. ')
' → logprob: -11.000083923339844
    4. '),' → logprob: -11.250083923339844
    5. ')b' → logprob: -12.125083923339844
    6. ' )' → logprob: -13.625083923339844
    7. ')c' → logprob: -14.750083923339844
    8. ',)' → logprob: -15.125083923339844
    9. ')

' → logprob: -15.125083923339844
    10. ',b' → logprob: -15.875083923339844

Token 118: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06028158590197563
    2. '
' → logprob: -2.93528151512146
    3. '    
' → logprob: -5.935281753540039
    4. ' 
' → logprob: -7.310281753540039
    5. '  ' → logprob: -7.560281753540039
    6. '    ' → logprob: -7.810281753540039
    7. ' ' → logprob: -8.185281753540039
    8. '<|end|>' → logprob: -8.560281753540039
    9. '   
' → logprob: -8.810281753540039
    10. '  
' → logprob: -9.185281753540039

Token 119: ' bc' (ID: 51743)
  Prédit: 'bc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bc' (adapté à ' bc') → logprob: -0.00869209598749876
    2. ' bc' → logprob: -5.008692264556885
    3. 'vec' → logprob: -6.258692264556885
    4. ' vec' → logprob: -10.758691787719727
    5. ' ' → logprob: -11.133691787719727
    6. 'cb' → logprob: -11.383691787719727
    7. 'bb' → logprob: -12.258691787719727
    8. 'b' → logprob: -12.383691787719727
    9. '_bc' → logprob: -13.133691787719727
    10. '   ' → logprob: -13.758691787719727

Token 120: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22343526780605316
    2. '=' → logprob: -1.7234352827072144
    3. '[' → logprob: -4.223435401916504
    4. ')' → logprob: -5.223435401916504
    5. ' ' → logprob: -7.723435401916504
    6. '(' → logprob: -7.848435401916504
    7. ' =(' → logprob: -8.473435401916504
    8. ']' → logprob: -8.848435401916504
    9. ' (' → logprob: -9.098435401916504
    10. '   ' → logprob: -9.223435401916504

Token 121: ' vec' (ID: 10563)
  Prédit: ' vec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vec' → logprob: -0.04933224245905876
    2. 'vec' → logprob: -3.0493321418762207
    3. '(vec' → logprob: -7.674332141876221
    4. ' (' → logprob: -8.549332618713379
    5. 'c' → logprob: -10.674332618713379
    6. ' c' → logprob: -11.174332618713379
    7. '(' → logprob: -11.174332618713379
    8. ' ' → logprob: -11.424332618713379
    9. ' ' → logprob: -11.799332618713379
    10. '	vec' → logprob: -12.049332618713379

Token 122: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0002637199067976326
    2. '(' → logprob: -8.250264167785645
    3. '(
' → logprob: -13.500264167785645
    4. 'b' → logprob: -14.625264167785645
    5. ' (' → logprob: -15.000264167785645
    6. '(c' → logprob: -16.125263214111328
    7. ' b' → logprob: -17.000263214111328
    8. ')b' → logprob: -17.750263214111328
    9. '(B' → logprob: -18.750263214111328
    10. ')' → logprob: -18.750263214111328

Token 123: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.004522211849689484
    2. ',' → logprob: -5.504522323608398
    3. 'c' → logprob: -7.754522323608398
    4. ' ,' → logprob: -12.254522323608398
    5. ')c' → logprob: -13.004522323608398
    6. '[' → logprob: -13.629522323608398
    7. '

' → logprob: -14.004522323608398
    8. '[c' → logprob: -14.004522323608398
    9. '	c' → logprob: -14.254522323608398
    10. ',
' → logprob: -14.629522323608398

Token 124: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2471589798224159e-05
    2. ')
' → logprob: -11.375012397766113
    3. ' )' → logprob: -14.625012397766113
    4. '   ' → logprob: -15.375012397766113
    5. ')#' → logprob: -16.00001335144043
    6. ')return' → logprob: -16.62501335144043
    7. ')

' → logprob: -16.87501335144043
    8. '),' → logprob: -17.62501335144043
    9. ').' → logprob: -17.87501335144043
    10. ')`' → logprob: -18.00001335144043

Token 125: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.021771369501948357
    2. '
' → logprob: -4.271771430969238
    3. '    
' → logprob: -6.271771430969238
    4. '    ' → logprob: -6.271771430969238
    5. ' return' → logprob: -7.021771430969238
    6. ' 
' → logprob: -7.146771430969238
    7. ')' → logprob: -7.896771430969238
    8. '   
' → logprob: -8.271771430969238
    9. ' ' → logprob: -8.396771430969238
    10. '  ' → logprob: -8.521771430969238

Token 126: ' n' (ID: 297)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -1.2177845239639282
    2. '   ' → logprob: -1.4677845239639282
    3. 'd' → logprob: -1.8427845239639282
    4. 'cos' → logprob: -1.9677845239639282
    5. 'den' → logprob: -2.4677844047546387
    6. 'dot' → logprob: -3.3427844047546387
    7. ' return' → logprob: -4.342784404754639
    8. 'dc' → logprob: -4.342784404754639
    9. 'dp' → logprob: -5.092784404754639
    10. ' denom' → logprob: -5.467784404754639

Token 127: '1' (ID: 16)
  Prédit: 'um'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'um' → logprob: -0.7226133346557617
    2. 'umerator' → logprob: -0.8476133346557617
    3. 'u' → logprob: -3.8476133346557617
    4. '=' → logprob: -3.9726133346557617
    5. ' =' → logprob: -4.472613334655762
    6. 'umer' → logprob: -4.722613334655762
    7. 'o' → logprob: -4.847613334655762
    8. 'om' → logprob: -5.097613334655762
    9. '1' → logprob: -5.347613334655762
    10. 'orm' → logprob: -6.597613334655762

Token 128: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.039891671389341354
    2. ' =' → logprob: -3.2898917198181152
    3. 'orm' → logprob: -6.664891719818115
    4. '.' → logprob: -8.414891242980957
    5. ',' → logprob: -9.664891242980957
    6. 'um' → logprob: -9.789891242980957
    7. 'o' → logprob: -9.789891242980957
    8. 'u' → logprob: -10.289891242980957
    9. 'umerator' → logprob: -10.664891242980957
    10. ')' → logprob: -10.914891242980957

Token 129: ' math' (ID: 13324)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.7980895638465881
    2. ' dot' → logprob: -1.2980895042419434
    3. 'math' → logprob: -1.9230895042419434
    4. ' math' → logprob: -2.1730895042419434
    5. '(dot' → logprob: -4.423089504241943
    6. '(math' → logprob: -6.048089504241943
    7. 'ba' → logprob: -6.798089504241943
    8. 'length' → logprob: -7.673089504241943
    9. ' (' → logprob: -8.298089981079102
    10. ' length' → logprob: -8.798089981079102

Token 130: '.h' (ID: 1508)
  Prédit: '.sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.01740889810025692
    2. '.' → logprob: -4.142408847808838
    3. '.h' → logprob: -7.017408847808838
    4. '.ac' → logprob: -8.642409324645996
    5. '.cos' → logprob: -8.767409324645996
    6. '.f' → logprob: -9.892409324645996
    7. '.dist' → logprob: -10.267409324645996
    8. '.dot' → logprob: -10.767409324645996
    9. '.pow' → logprob: -11.767409324645996
    10. '.atan' → logprob: -11.767409324645996

Token 131: 'yp' (ID: 1785)
  Prédit: 'ot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.024509217590093613
    2. 'at' → logprob: -4.774509429931641
    3. 'yp' → logprob: -4.899509429931641
    4. 'otp' → logprob: -5.649509429931641
    5. 'sqrt' → logprob: -6.524509429931641
    6. '.sqrt' → logprob: -6.524509429931641
    7. 'op' → logprob: -7.024509429931641
    8. 'ut' → logprob: -8.27450942993164
    9. 'hyp' → logprob: -9.14950942993164
    10. '```' → logprob: -9.14950942993164

Token 132: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.0008143932209350169
    2. 'at' → logprob: -7.125814437866211
    3. 't' → logprob: -12.875814437866211
    4. 'o' → logprob: -13.125814437866211
    5. 'otp' → logprob: -13.500814437866211
    6. '[' → logprob: -14.625814437866211
    7. ' ot' → logprob: -14.875814437866211
    8. '0' → logprob: -15.000814437866211
    9. 'ots' → logprob: -15.125814437866211
    10. 's' → logprob: -15.250814437866211

Token 133: '(*' (ID: 9000)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.004627598915249109
    2. '(*' → logprob: -5.379627704620361
    3. '(*(' → logprob: -12.254627227783203
    4. '(
' → logprob: -13.879627227783203
    5. '(b' → logprob: -14.629627227783203
    6. '(len' → logprob: -15.129627227783203
    7. '*' → logprob: -15.254627227783203
    8. ' (' → logprob: -15.254627227783203
    9. '((' → logprob: -15.504627227783203
    10. '((*' → logprob: -16.254627227783203

Token 134: 'ba' (ID: 3103)
  Prédit: 'ba'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ba' → logprob: -0.0017108784522861242
    2. ' ba' → logprob: -6.376710891723633
    3. ' ' → logprob: -12.376710891723633
    4. '(' → logprob: -13.751710891723633
    5. 'b' → logprob: -13.751710891723633
    6. '   ' → logprob: -13.876710891723633
    7. ')' → logprob: -14.626710891723633
    8. 'bc' → logprob: -14.876710891723633
    9. '  ' → logprob: -15.751710891723633
    10. '
' → logprob: -16.251710891723633

Token 135: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009704149328172207
    2. ')
' → logprob: -4.759704113006592
    3. ' )' → logprob: -7.134704113006592
    4. ')n' → logprob: -8.75970458984375
    5. ' )
' → logprob: -9.50970458984375
    6. ',' → logprob: -10.63470458984375
    7. ')*' → logprob: -11.50970458984375
    8. ')

' → logprob: -11.50970458984375
    9. '),' → logprob: -12.50970458984375
    10. ')
' → logprob: -12.75970458984375

Token 136: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35446417331695557
    2. 'n' → logprob: -2.354464054107666
    3. ' ' → logprob: -2.604464054107666
    4. '*' → logprob: -3.104464054107666
    5. ')' → logprob: -3.729464054107666
    6. '    ' → logprob: -4.229464054107666
    7. '*n' → logprob: -4.479464054107666
    8. ' n' → logprob: -5.229464054107666
    9. '    
' → logprob: -5.229464054107666
    10. '<|end|>' → logprob: -5.354464054107666

Token 137: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.2945266664028168
    2. 'n' (adapté à ' n') → logprob: -1.4195266962051392
    3. '   ' → logprob: -5.16952657699585
    4. ' ' → logprob: -5.66952657699585
    5. ' math' → logprob: -6.16952657699585
    6. '    ' → logprob: -7.91952657699585
    7. '    
' → logprob: -8.544527053833008
    8. ' 
' → logprob: -8.669527053833008
    9. 'math' → logprob: -8.669527053833008
    10. '1' → logprob: -8.794527053833008

Token 138: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0032478237990289927
    2. '1' → logprob: -6.1282477378845215
    3. ' ' → logprob: -7.8782477378845215
    4. '=' → logprob: -8.37824821472168
    5. '0' → logprob: -9.50324821472168
    6. ',' → logprob: -9.62824821472168
    7. '[' → logprob: -9.75324821472168
    8. '_' → logprob: -10.00324821472168
    9. '<|end|>' → logprob: -10.00324821472168
    10. '.' → logprob: -10.50324821472168

Token 139: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1385594755411148
    2. '=' → logprob: -2.763559579849243
    3. '<|end|>' → logprob: -2.888559579849243
    4. ' ' → logprob: -5.638559341430664
    5. ')' → logprob: -5.763559341430664
    6. '(' → logprob: -5.763559341430664
    7. '[' → logprob: -8.263559341430664
    8. '<|end|>' → logprob: -9.013559341430664
    9. ' (' → logprob: -9.263559341430664
    10. '=(' → logprob: -10.013559341430664

Token 140: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.018213391304016113
    2. 'math' → logprob: -4.018213272094727
    3. '(math' → logprob: -9.768213272094727
    4. 'Math' → logprob: -13.143213272094727
    5. '<|end|>' → logprob: -13.768213272094727
    6. '.math' → logprob: -14.143213272094727
    7. '_math' → logprob: -14.518213272094727
    8. 'length' → logprob: -14.643213272094727
    9. ' ' → logprob: -14.768213272094727
    10. ' Math' → logprob: -14.893213272094727

Token 141: '.h' (ID: 1508)
  Prédit: '.h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -0.0002394170151092112
    2. '.' → logprob: -8.500239372253418
    3. '.sqrt' → logprob: -11.250239372253418
    4. 'hyp' → logprob: -12.250239372253418
    5. '‌.' → logprob: -12.500239372253418
    6. ' .' → logprob: -12.875239372253418
    7. ' hypot' → logprob: -13.625239372253418
    8. '```' → logprob: -13.625239372253418
    9. '[' → logprob: -13.875239372253418
    10. '	h' → logprob: -14.125239372253418

Token 142: 'yp' (ID: 1785)
  Prédit: 'yp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yp' → logprob: -0.0005668530357070267
    2. 'pot' → logprob: -8.500566482543945
    3. 'ot' → logprob: -8.875566482543945
    4. 'hyp' → logprob: -8.875566482543945
    5. 'y' → logprob: -9.500566482543945
    6. 'otp' → logprob: -12.875566482543945
    7. 'p' → logprob: -13.000566482543945
    8. '```' → logprob: -14.000566482543945
    9. '   ' → logprob: -14.875566482543945
    10. 'op' → logprob: -15.125566482543945

Token 143: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -1.3663626305060461e-05
    2. 'yp' → logprob: -12.25001335144043
    3. '[' → logprob: -12.50001335144043
    4. 's' → logprob: -13.62501335144043
    5. 't' → logprob: -13.87501335144043
    6. 'otp' → logprob: -14.37501335144043
    7. 'of' → logprob: -14.50001335144043
    8. 'op' → logprob: -14.62501335144043
    9. 'pt' → logprob: -15.12501335144043
    10. '*' → logprob: -15.87501335144043

Token 144: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.0004348413785919547
    2. '*' → logprob: -7.750434875488281
    3. '(' → logprob: -13.375434875488281
    4. '<|end|>' → logprob: -13.750434875488281
    5. '(*(' → logprob: -14.500434875488281
    6. '__(*' → logprob: -15.500434875488281
    7. '
' → logprob: -15.625434875488281
    8. ' (*' → logprob: -16.25043487548828
    9. ' *' → logprob: -16.37543487548828
    10. '*(' → logprob: -16.50043487548828

Token 145: 'bc' (ID: 16715)
  Prédit: 'bc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bc' → logprob: -0.0024924222379922867
    2. ' bc' → logprob: -6.002492427825928
    3. '*' → logprob: -11.25249195098877
    4. '_bc' → logprob: -12.87749195098877
    5. 'b' → logprob: -14.62749195098877
    6. '.bc' → logprob: -15.25249195098877
    7. ' ' → logprob: -15.62749195098877
    8. '<|end|>' → logprob: -16.252492904663086
    9. 'xbc' → logprob: -16.377492904663086
    10. '
' → logprob: -16.627492904663086

Token 146: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1160349458805285e-05
    2. ' )' → logprob: -12.000011444091797
    3. ')
' → logprob: -13.375011444091797
    4. ')*' → logprob: -14.125011444091797
    5. '   ' → logprob: -14.875011444091797
    6. ')return' → logprob: -15.000011444091797
    7. ' ' → logprob: -15.250011444091797
    8. '))' → logprob: -15.375011444091797
    9. '),' → logprob: -15.375011444091797
    10. ')**' → logprob: -15.625011444091797

Token 147: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0004510493890848011
    2. '
' → logprob: -8.50045108795166
    3. '    
' → logprob: -9.75045108795166
    4. ')' → logprob: -10.50045108795166
    5. ' return' → logprob: -10.50045108795166
    6. ' ' → logprob: -10.75045108795166
    7. ' if' → logprob: -10.87545108795166
    8. '<|end|>' → logprob: -10.87545108795166
    9. '  ' → logprob: -11.25045108795166
    10. ' 
' → logprob: -11.50045108795166

Token 148: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09299589693546295
    2. ' if' → logprob: -2.5929958820343018
    3. ' return' → logprob: -5.342996120452881
    4. 'return' → logprob: -5.467996120452881
    5. 'if' (adapté à ' if') → logprob: -5.592996120452881
    6. '    ' → logprob: -8.092995643615723
    7. ' ' → logprob: -8.592995643615723
    8. ' 
' → logprob: -8.592995643615723
    9. '    
' → logprob: -8.717995643615723
    10. '
' → logprob: -9.342995643615723

Token 149: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.026453331112861633
    2. 'n' → logprob: -3.6514532566070557
    3. ' min' → logprob: -9.151453018188477
    4. 'min' → logprob: -10.901453018188477
    5. ' not' → logprob: -11.151453018188477
    6. ' ' → logprob: -12.276453018188477
    7. '   ' → logprob: -12.651453018188477
    8. ' max' → logprob: -13.526453018188477
    9. ' (' → logprob: -14.026453018188477
    10. '	n' → logprob: -14.026453018188477

Token 150: '1' (ID: 16)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6932165622711182
    2. ' ' → logprob: -1.8182165622711182
    3. '==' → logprob: -2.318216562271118
    4. '0' → logprob: -2.443216562271118
    5. '_' → logprob: -2.943216562271118
    6. '1' → logprob: -3.318216562271118
    7. ' <' → logprob: -3.693216562271118
    8. '2' → logprob: -4.193216323852539
    9. '<' → logprob: -4.568216323852539
    10. '=' → logprob: -4.693216323852539

Token 151: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.43408456444740295
    2. '==' → logprob: -1.0590845346450806
    3. ' <' → logprob: -5.434084415435791
    4. ' ' → logprob: -7.684084415435791
    5. '<' → logprob: -7.934084415435791
    6. '0' → logprob: -9.30908489227295
    7. '=' → logprob: -10.05908489227295
    8. ' >' → logprob: -11.43408489227295
    9. ' =' → logprob: -12.43408489227295
    10. ' *' → logprob: -12.55908489227295

Token 152: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004620472434908152
    2. ' ' → logprob: -5.379620552062988
    3. '<|end|>' → logprob: -16.504619598388672
    4. '۰' → logprob: -16.879619598388672
    5. '  ' → logprob: -17.379619598388672
    6. '０' → logprob: -18.192119598388672
    7. '-' → logprob: -18.692119598388672
    8. '   ' → logprob: -18.817119598388672
    9. '045' → logprob: -19.067119598388672
    10. '```' → logprob: -19.254619598388672

Token 153: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.004133491776883602
    2. 'or' → logprob: -5.504133701324463
    3. ' ' → logprob: -10.879133224487305
    4. ':' → logprob: -11.129133224487305
    5. '<|end|>' → logprob: -11.379133224487305
    6. '	or' → logprob: -11.754133224487305
    7. ':return' → logprob: -14.504133224487305
    8. ' and' → logprob: -14.879133224487305
    9. '  ' → logprob: -15.379133224487305
    10. ':
' → logprob: -15.629133224487305

Token 154: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.061973292380571365
    2. 'n' → logprob: -2.8119733333587646
    3. '	n' → logprob: -12.436973571777344
    4. ' ' → logprob: -14.186973571777344
    5. ' ' → logprob: -15.061973571777344
    6. '
' → logprob: -15.436973571777344
    7. '    ' → logprob: -16.061973571777344
    8. '(n' → logprob: -16.311973571777344
    9. ' 
' → logprob: -16.561973571777344
    10. '   ' → logprob: -16.561973571777344

Token 155: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.4021237802808173e-05
    2. ' ' → logprob: -12.125014305114746
    3. '1' → logprob: -13.125014305114746
    4. '[' → logprob: -13.750014305114746
    5. '```' → logprob: -14.000014305114746
    6. '.' → logprob: -14.250014305114746
    7. '<|end|>' → logprob: -14.437514305114746
    8. '=' → logprob: -14.625014305114746
    9. '_' → logprob: -14.687514305114746
    10. '₂' → logprob: -15.250014305114746

Token 156: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.013086820021271706
    2. ' ==' → logprob: -4.388086795806885
    3. '<|end|>' → logprob: -7.763086795806885
    4. ')==' → logprob: -9.513087272644043
    5. ']==' → logprob: -10.388087272644043
    6. '==
' → logprob: -11.138087272644043
    7. '=' → logprob: -11.388087272644043
    8. '()==' → logprob: -11.513087272644043
    9. '<|end|>' → logprob: -12.888087272644043
    10. ' ' → logprob: -13.388087272644043

Token 157: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.2855416066013277e-05
    2. ' ' → logprob: -10.375032424926758
    3. '<|end|>' → logprob: -13.500032424926758
    4. '   ' → logprob: -16.500032424926758
    5. '```' → logprob: -17.000032424926758
    6. '  ' → logprob: -17.375032424926758
    7. '۰' → logprob: -17.500032424926758
    8. '<|end|>' → logprob: -18.312532424926758
    9. '
' → logprob: -18.375032424926758
    10. '０' → logprob: -18.812532424926758

Token 158: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006447961553931236
    2. ':return' → logprob: -5.131447792053223
    3. ':
' → logprob: -7.881447792053223
    4. '):' → logprob: -9.881447792053223
    5. ' :' → logprob: -10.006447792053223
    6. '   ' → logprob: -10.756447792053223
    7. '<|end|>' → logprob: -11.381447792053223
    8. ',' → logprob: -12.631447792053223
    9. ')' → logprob: -12.631447792053223
    10. ' ' → logprob: -13.881447792053223

Token 159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020638354122638702
    2. '   ' → logprob: -4.145638465881348
    3. '1' → logprob: -6.145638465881348
    4. '0' → logprob: -6.395638465881348
    5. ' ' → logprob: -8.145638465881348
    6. '4' → logprob: -8.770638465881348
    7. '    ' → logprob: -9.020638465881348
    8. ' return' → logprob: -9.645638465881348
    9. '     ' → logprob: -10.645638465881348
    10. ':' → logprob: -10.770638465881348

Token 160: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.21814580261707306
    2. 'return' (adapté à ' return') → logprob: -2.2181458473205566
    3. '   ' → logprob: -2.4681458473205566
    4. '       ' → logprob: -7.093145847320557
    5. '1' → logprob: -7.593145847320557
    6. '    ' → logprob: -7.968145847320557
    7. ' ' → logprob: -8.218145370483398
    8. '
' → logprob: -8.968145370483398
    9. '0' → logprob: -9.093145370483398
    10. '	return' → logprob: -9.468145370483398

Token 161: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1733955591917038
    2. ' ' → logprob: -2.1733956336975098
    3. ' None' → logprob: -3.2983956336975098
    4. 'None' → logprob: -4.92339563369751
    5. '0' → logprob: -6.79839563369751
    6. '-' → logprob: -10.173395156860352
    7. ' -' → logprob: -10.548395156860352
    8. ' float' → logprob: -13.298395156860352
    9. 'float' → logprob: -13.798395156860352
    10. ' ' → logprob: -13.923395156860352

Token 162: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01501336321234703
    2. '-' → logprob: -4.515013217926025
    3. '0' → logprob: -5.890013217926025
    4. 'None' → logprob: -6.890013217926025
    5. '2' → logprob: -9.390013694763184
    6. ' ' → logprob: -9.890013694763184
    7. 'float' → logprob: -10.890013694763184
    8. ' None' → logprob: -11.515013694763184
    9. ' -' → logprob: -11.640013694763184
    10. 'none' → logprob: -15.390013694763184

Token 163: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005778646096587181
    2. '    
' → logprob: -5.505778789520264
    3. '
' → logprob: -6.880778789520264
    4. '<|end|>' → logprob: -8.380778312683105
    5. '   
' → logprob: -8.630778312683105
    6. '  ' → logprob: -9.880778312683105
    7. ' ' → logprob: -10.005778312683105
    8. '.' → logprob: -10.755778312683105
    9. '0' → logprob: -10.880778312683105
    10. '  
' → logprob: -11.005778312683105

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06263154745101929
    2. '    
' → logprob: -3.062631607055664
    3. '   
' → logprob: -4.937631607055664
    4. ' ' → logprob: -6.062631607055664
    5. '<|end|>' → logprob: -6.687631607055664
    6. '
' → logprob: -7.187631607055664
    7. '  
' → logprob: -7.562631607055664
    8. '     
' → logprob: -7.812631607055664
    9. '0' → logprob: -8.062631607055664
    10. '  ' → logprob: -8.187631607055664

Token 165: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.155238538980484
    2. ' return' → logprob: -2.405238628387451
    3. '    
' → logprob: -4.030238628387451
    4. ' 
' → logprob: -4.280238628387451
    5. '
' → logprob: -4.780238628387451
    6. '   
' → logprob: -5.030238628387451
    7. 'return' (adapté à ' return') → logprob: -6.030238628387451
    8. '  ' → logprob: -6.405238628387451
    9. '  
' → logprob: -7.405238628387451
    10. ' ' → logprob: -7.530238628387451

Token 166: ' dot' (ID: 16579)
  Prédit: ' dot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dot' → logprob: -0.029093950986862183
    2. 'dot' → logprob: -3.9040939807891846
    3. '(dot' → logprob: -4.7790937423706055
    4. ' (' → logprob: -9.154093742370605
    5. '.dot' → logprob: -13.529093742370605
    6. '(' → logprob: -13.529093742370605
    7. ' ' → logprob: -13.779093742370605
    8. '-dot' → logprob: -14.154093742370605
    9. '(d' → logprob: -14.779093742370605
    10. ' max' → logprob: -15.404093742370605

Token 167: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002569289645180106
    2. '((' → logprob: -8.500256538391113
    3. ' (' → logprob: -9.875256538391113
    4. '(
' → logprob: -14.625256538391113
    5. '<|end|>' → logprob: -15.125256538391113
    6. '(b' → logprob: -15.625256538391113
    7. ' ' → logprob: -15.750256538391113
    8. '(vec' → logprob: -15.875256538391113
    9. '(u' → logprob: -16.00025749206543
    10. ')(' → logprob: -16.12525749206543

Token 168: 'ba' (ID: 3103)
  Prédit: 'ba'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ba' → logprob: -0.00012856863031629473
    2. '(' → logprob: -9.250128746032715
    3. ' ba' → logprob: -10.375128746032715
    4. ')' → logprob: -13.875128746032715
    5. 'b' → logprob: -16.5001277923584
    6. 'BA' → logprob: -17.3751277923584
    7. ' ' → logprob: -17.3751277923584
    8. ')(' → logprob: -17.6251277923584
    9. '-ba' → logprob: -18.1251277923584
    10. '.ba' → logprob: -18.7501277923584

Token 169: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004676113894674927
    2. ' ,' → logprob: -7.750467777252197
    3. ',b' → logprob: -10.375467300415039
    4. ',

' → logprob: -13.125467300415039
    5. ' ' → logprob: -13.625467300415039
    6. ',
' → logprob: -13.750467300415039
    7. '‌,' → logprob: -15.250467300415039
    8. '

' → logprob: -16.12546730041504
    9. ',v' → logprob: -16.37546730041504
    10. ',",' → logprob: -16.37546730041504

Token 170: 'bc' (ID: 16715)
  Prédit: 'bc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bc' → logprob: -0.001171056181192398
    2. ' bc' → logprob: -6.751171112060547
    3. '_bc' → logprob: -14.251171112060547
    4. '.bc' → logprob: -16.376171112060547
    5. 'b' → logprob: -17.001171112060547
    6. 'Bc' → logprob: -17.751171112060547
    7. 'xbc' → logprob: -18.876171112060547
    8. 'bcc' → logprob: -19.251171112060547
    9. 'BC' → logprob: -19.626171112060547
    10. 'bac' → logprob: -20.126171112060547

Token 171: ')/(' (ID: 60504)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17491862177848816
    2. ')/(' → logprob: -1.9249186515808105
    3. ' )' → logprob: -4.2999186515808105
    4. ')/' → logprob: -6.9249186515808105
    5. '/(' → logprob: -10.549918174743652
    6. ' /' → logprob: -12.799918174743652
    7. ' ' → logprob: -13.549918174743652
    8. ')
' → logprob: -13.674918174743652
    9. '   ' → logprob: -14.549918174743652
    10. ' )
' → logprob: -14.924918174743652

Token 172: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014248599298298359
    2. ' n' → logprob: -4.264248371124268
    3. '(n' → logprob: -9.514248847961426
    4. ' (' → logprob: -12.389248847961426
    5. '(' → logprob: -12.514248847961426
    6. ')n' → logprob: -13.139248847961426
    7. '	n' → logprob: -14.139248847961426
    8. '   ' → logprob: -15.139248847961426
    9. '
' → logprob: -15.889248847961426
    10. '_n' → logprob: -16.76424789428711

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '_' → logprob: -17.25
    3. '[' → logprob: -20.0
    4. '*' → logprob: -20.375
    5. ' ' → logprob: -21.0
    6. '```' → logprob: -21.25
    7. '2' → logprob: -21.375
    8. '１' → logprob: -21.5625
    9. '' → logprob: -22.0625
    10. '.' → logprob: -22.125

Token 174: '*n' (ID: 58470)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.10021809488534927
    2. '*n' → logprob: -2.3502180576324463
    3. ' *' → logprob: -12.100217819213867
    4. '*
' → logprob: -13.100217819213867
    5. '*

' → logprob: -13.600217819213867
    6. '*)' → logprob: -13.725217819213867
    7. '**' → logprob: -14.100217819213867
    8. '*N' → logprob: -15.850217819213867
    9. '*object' → logprob: -15.975217819213867
    10. '*np' → logprob: -16.225217819213867

Token 175: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -16.25
    3. ')' → logprob: -16.625
    4. '₂' → logprob: -17.0
    5. 'n' → logprob: -17.375
    6. '[' → logprob: -17.5
    7. '۲' → logprob: -17.6875
    8. '1' → logprob: -18.0
    9. '```' → logprob: -18.1875
    10. '২' → logprob: -18.375

Token 176: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.630610641877865e-06
    2. ' )' → logprob: -12.125006675720215
    3. ')
' → logprob: -13.625006675720215
    4. ')

' → logprob: -17.8750057220459
    5. '}' → logprob: -18.1250057220459
    6. ')return' → logprob: -18.5000057220459
    7. ')}' → logprob: -18.8750057220459
    8. ')#' → logprob: -19.3750057220459
    9. '))' → logprob: -19.6250057220459
    10. ' ' → logprob: -19.6250057220459

Token 177: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.23891156911849976
    2. '
' → logprob: -1.6139116287231445
    3. '\' → logprob: -4.8639116287231445
    4. '\n' → logprob: -6.2389116287231445
    5. '#' → logprob: -7.4889116287231445
    6. 'd' → logprob: -7.6139116287231445
    7. ' 
' → logprob: -7.7389116287231445
    8. 'newline' → logprob: -7.8639116287231445
    9. ':' → logprob: -8.113911628723145
    10. '

' → logprob: -8.363911628723145

Token 178: ' read' (ID: 1729)
  Prédit: ' convex'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' convex' → logprob: -0.4011501371860504
    2. ' is' → logprob: -2.2761502265930176
    3. ' main' → logprob: -2.5261502265930176
    4. ' find' → logprob: -2.6511502265930176
    5. ' solve' → logprob: -4.276150226593018
    6. ' bfs' → logprob: -4.901150226593018
    7. ' polygon' → logprob: -5.401150226593018
    8. ' orientation' → logprob: -5.776150226593018
    9. ' dfs' → logprob: -6.026150226593018
    10. ' perimeter' → logprob: -6.151150226593018

Token 179: 'ints' (ID: 20448)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.17356643080711365
    2. 'line' → logprob: -2.4235663414001465
    3. '()' → logprob: -3.2985663414001465
    4. '_input' → logprob: -3.7985663414001465
    5. '_' → logprob: -5.1735663414001465
    6. '_points' → logprob: -6.4235663414001465
    7. '_lines' → logprob: -6.6735663414001465
    8. '_point' → logprob: -6.9235663414001465
    9. 'lines' → logprob: -8.923566818237305
    10. 's' → logprob: -9.048566818237305

Token 180: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.002292875200510025
    2. '()' → logprob: -6.252293109893799
    3. '():
' → logprob: -8.12729263305664
    4. ' ():' → logprob: -9.87729263305664
    5. ' ()' → logprob: -11.50229263305664
    6. '():

' → logprob: -13.00229263305664
    7. '(' → logprob: -13.37729263305664
    8. '()*' → logprob: -13.37729263305664
    9. '()>' → logprob: -14.37729263305664
    10. '().' → logprob: -15.25229263305664

Token 181: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.2958202362060547
    2. '   ' → logprob: -2.6708202362060547
    3. '():' → logprob: -2.6708202362060547
    4. ' return' → logprob: -3.1708202362060547
    5. 'return' → logprob: -3.1708202362060547
    6. '():
' → logprob: -3.9208202362060547
    7. ' ()' → logprob: -5.045820236206055
    8. '[]' → logprob: -5.670820236206055
    9. '()[' → logprob: -6.920820236206055
    10. '()
' → logprob: -7.295820236206055

Token 182: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5672069191932678
    2. 'map' → logprob: -1.317206859588623
    3. 'list' → logprob: -1.817206859588623
    4. ' list' → logprob: -6.567206859588623
    5. ' return' → logprob: -7.567206859588623
    6. ' map' → logprob: -7.692206859588623
    7. 'sys' → logprob: -9.192207336425781
    8. 'tuple' → logprob: -10.067207336425781
    9. '   ' → logprob: -12.067207336425781
    10. 'set' → logprob: -14.817207336425781

Token 183: ' map' (ID: 4014)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.25206130743026733
    2. ' list' → logprob: -1.502061367034912
    3. 'map' → logprob: -9.002060890197754
    4. ' map' → logprob: -11.752060890197754
    5. '[list' → logprob: -14.002060890197754
    6. 'tuple' → logprob: -16.00206184387207
    7. '	list' → logprob: -16.37706184387207
    8. '[' → logprob: -16.37706184387207
    9. ' tuple' → logprob: -17.37706184387207
    10. '[]' → logprob: -18.37706184387207

Token 184: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00015205175441224128
    2. '(' → logprob: -9.375151634216309
    3. 'int' → logprob: -9.625151634216309
    4. '<int' → logprob: -14.375151634216309
    5. '[int' → logprob: -15.250151634216309
    6. ' (' → logprob: -16.500152587890625
    7. ' int' → logprob: -16.875152587890625
    8. ',int' → logprob: -17.250152587890625
    9. '=int' → logprob: -17.500152587890625
    10. '	int' → logprob: -17.500152587890625

Token 185: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02176191844046116
    2. '(sys' → logprob: -3.896761894226074
    3. ',input' → logprob: -7.271761894226074
    4. 'sys' → logprob: -7.771761894226074
    5. ' sys' → logprob: -10.271761894226074
    6. ' ,' → logprob: -10.646761894226074
    7. '=sys' → logprob: -11.146761894226074
    8. '	sys' → logprob: -11.396761894226074
    9. '(' → logprob: -12.021761894226074
    10. ',System' → logprob: -12.521761894226074

Token 186: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.07900898158550262
    2. ' sys' → logprob: -2.5790090560913086
    3. ')' → logprob: -9.579009056091309
    4. 'input' → logprob: -10.829009056091309
    5. '=sys' → logprob: -11.329009056091309
    6. '(sys' → logprob: -11.829009056091309
    7. '	sys' → logprob: -12.079009056091309
    8. ' ' → logprob: -12.954009056091309
    9. ' input' → logprob: -13.579009056091309
    10. '   ' → logprob: -13.954009056091309

Token 187: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -4.4849443838757e-06
    2. '.' → logprob: -13.000004768371582
    3. '.argv' → logprob: -13.500004768371582
    4. '.std' → logprob: -14.500004768371582
    5. 'stdin' → logprob: -15.500004768371582
    6. '.stdout' → logprob: -15.875004768371582
    7. '.st' → logprob: -17.875003814697266
    8. ' stdin' → logprob: -18.125003814697266
    9. '.readline' → logprob: -18.625003814697266
    10. ' .' → logprob: -18.875003814697266

Token 188: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.000585918256547302
    2. '.' → logprob: -7.500586032867432
    3. '.stdin' → logprob: -11.000585556030273
    4. '.read' → logprob: -11.625585556030273
    5. '.readlines' → logprob: -12.750585556030273
    6. ' .' → logprob: -12.875585556030273
    7. ').' → logprob: -14.125585556030273
    8. '.buffer' → logprob: -14.625585556030273
    9. ')' → logprob: -14.750585556030273
    10. '.stdout' → logprob: -17.000585556030273

Token 189: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0005363515811040998
    2. '()' → logprob: -8.25053596496582
    3. '())' → logprob: -8.25053596496582
    4. ' ().' → logprob: -12.00053596496582
    5. ')' → logprob: -12.25053596496582
    6. '(' → logprob: -13.37553596496582
    7. ' ()' → logprob: -14.87553596496582
    8. ' ())' → logprob: -15.12553596496582
    9. '()`' → logprob: -16.12553596496582
    10. '()
' → logprob: -16.12553596496582

Token 190: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.2023933380842209
    2. 'split' → logprob: -1.7023932933807373
    3. 'rstrip' → logprob: -6.952393531799316
    4. ' strip' → logprob: -11.452393531799316
    5. ')' → logprob: -11.952393531799316
    6. 'read' → logprob: -12.327393531799316
    7. ' split' → logprob: -14.077393531799316
    8. '(strip' → logprob: -15.077393531799316
    9. '(split' → logprob: -15.327393531799316
    10. '-strip' → logprob: -15.827393531799316

Token 191: '())

' (ID: 27654)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())' → logprob: -0.06593029201030731
    2. ')' → logprob: -3.0659303665161133
    3. '()' → logprob: -4.065930366516113
    4. '())
' → logprob: -10.815930366516113
    5. '(' → logprob: -11.815930366516113
    6. '))' → logprob: -11.940930366516113
    7. '()))' → logprob: -12.190930366516113
    8. ' ())' → logprob: -12.815930366516113
    9. '()
' → logprob: -12.940930366516113
    10. '()]' → logprob: -14.690930366516113

Token 192: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.25545403361320496
    2. 'n' → logprob: -1.5054540634155273
    3. 'class' → logprob: -6.005454063415527
    4. 'N' → logprob: -7.755454063415527
    5. 'ndef' → logprob: -8.005454063415527
    6. 'd' → logprob: -9.005454063415527
    7. 't' → logprob: -10.005454063415527
    8. 'Q' → logprob: -10.255454063415527
    9. 'q' → logprob: -10.630454063415527
    10. '\' → logprob: -11.255454063415527

Token 193: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.02760690450668335
    2. 'main' → logprob: -3.652606964111328
    3. ' solve' → logprob: -7.152606964111328
    4. 'solve' → logprob: -7.652606964111328
    5. '_main' → logprob: -10.777606964111328
    6. '	main' → logprob: -11.402606964111328
    7. ' process' → logprob: -12.027606964111328
    8. 'process' → logprob: -13.152606964111328
    9. ' bfs' → logprob: -13.777606964111328
    10. ' ' → logprob: -14.277606964111328

Token 194: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -2.8325677703833207e-05
    2. ' ():' → logprob: -10.750028610229492
    3. '():
' → logprob: -12.000028610229492
    4. '()' → logprob: -14.750028610229492
    5. '(' → logprob: -15.625028610229492
    6. ':' → logprob: -18.000028610229492
    7. '():
' → logprob: -19.000028610229492
    8. '()>' → logprob: -19.375028610229492
    9. '():

' → logprob: -19.750028610229492
    10. '()*' → logprob: -20.125028610229492

Token 195: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1459617018699646
    2. 'n' → logprob: -2.5209617614746094
    3. ' n' → logprob: -3.0209617614746094
    4. '    ' → logprob: -5.270961761474609
    5. '	n' → logprob: -7.270961761474609
    6. '    
' → logprob: -8.64596176147461
    7. '(n' → logprob: -8.64596176147461
    8. 'input' → logprob: -9.77096176147461
    9. ' input' → logprob: -10.39596176147461
    10. ' (' → logprob: -10.39596176147461

Token 196: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.06326409429311752
    2. ' n' → logprob: -2.8132641315460205
    3. '   ' → logprob: -7.313263893127441
    4. 'N' → logprob: -7.438263893127441
    5. 't' → logprob: -10.938263893127441
    6. ' N' → logprob: -11.188263893127441
    7. '	n' → logprob: -12.563263893127441
    8. 'T' → logprob: -13.063263893127441
    9. ' t' → logprob: -13.813263893127441
    10. ' ' → logprob: -13.938263893127441

Token 197: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.014344371855258942
    2. 'True' → logprob: -4.264344215393066
    3. '(True' → logprob: -8.639344215393066
    4. '1' → logprob: -13.264344215393066
    5. ' Tru' → logprob: -14.014344215393066
    6. ' ' → logprob: -14.014344215393066
    7. '=True' → logprob: -14.764344215393066
    8. '_true' → logprob: -17.139345169067383
    9. '  ' → logprob: -17.764345169067383
    10. ' ' → logprob: -17.889345169067383

Token 198: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001239196863025427
    2. '):' → logprob: -10.250123977661133
    3. ':
' → logprob: -10.375123977661133
    4. '():' → logprob: -10.625123977661133
    5. ',' → logprob: -11.125123977661133
    6. ' :' → logprob: -11.625123977661133
    7. ':**' → logprob: -12.125123977661133
    8. '   ' → logprob: -13.625123977661133
    9. '<|end|>' → logprob: -13.750123977661133
    10. '.' → logprob: -15.000123977661133

Token 199: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08173399418592453
    2. '   ' → logprob: -2.8317339420318604
    3. ' try' → logprob: -4.2067341804504395
    4. 'try' → logprob: -6.4567341804504395
    5. ' ' → logprob: -6.8317341804504395
    6. '<|end|>' → logprob: -7.0817341804504395
    7. '    ' → logprob: -7.4567341804504395
    8. '    
' → logprob: -9.456733703613281
    9. ' line' → logprob: -9.581733703613281
    10. ',' → logprob: -9.706733703613281

Token 200: ' line' (ID: 2543)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6766915917396545
    2. 'try' → logprob: -1.5516915321350098
    3. '   ' → logprob: -1.6766915321350098
    4. 'line' (adapté à ' line') → logprob: -3.4266915321350098
    5. ' try' → logprob: -4.05169153213501
    6. ' n' → logprob: -4.05169153213501
    7. ' line' → logprob: -4.55169153213501
    8. 'data' → logprob: -5.05169153213501
    9. 'l' → logprob: -5.17669153213501
    10. ' data' → logprob: -7.17669153213501

Token 201: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142415165901184
    2. ' =' → logprob: -1.7014241218566895
    3. '=line' → logprob: -11.451424598693848
    4. '=sys' → logprob: -16.07642364501953
    5. '＝' → logprob: -16.82642364501953
    6. '=
' → logprob: -17.45142364501953
    7. '=input' → logprob: -17.57642364501953
    8. '.=' → logprob: -18.20142364501953
    9. '=

' → logprob: -18.57642364501953
    10. '_=' → logprob: -18.57642364501953

Token 202: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.4740796387195587
    2. ' sys' → logprob: -0.9740796089172363
    3. 'input' → logprob: -14.099080085754395
    4. '=sys' → logprob: -14.224080085754395
    5. '	sys' → logprob: -14.349080085754395
    6. '(sys' → logprob: -14.599080085754395
    7. ' input' → logprob: -16.599079132080078
    8. ' ' → logprob: -17.099079132080078
    9. '_sys' → logprob: -17.349079132080078
    10. 'Sys' → logprob: -17.974079132080078

Token 203: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.02419346198439598
    2. '.readline' → logprob: -3.774193525314331
    3. '.' → logprob: -7.274193286895752
    4. '.stdout' → logprob: -8.77419376373291
    5. 'stdin' → logprob: -9.39919376373291
    6. '.argv' → logprob: -11.77419376373291
    7. '.std' → logprob: -13.02419376373291
    8. 'in' → logprob: -13.52419376373291
    9. '.stderr' → logprob: -14.02419376373291
    10. '(stdin' → logprob: -14.27419376373291

Token 204: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -3.309382373117842e-05
    2. '.stdin' → logprob: -10.750033378601074
    3. '.' → logprob: -11.375033378601074
    4. '.stdout' → logprob: -16.875032424926758
    5. ' readline' → logprob: -18.250032424926758
    6. 'stdin' → logprob: -18.500032424926758
    7. '.buffer' → logprob: -19.875032424926758
    8. '.stderr' → logprob: -20.125032424926758
    9. '.readlines' → logprob: -20.375032424926758
    10. ' .' → logprob: -20.875032424926758

Token 205: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.018578778952360153
    2. '().' → logprob: -4.018579006195068
    3. '()
' → logprob: -7.768579006195068
    4. '(' → logprob: -13.39357852935791
    5. '()

' → logprob: -13.39357852935791
    6. ' ()' → logprob: -13.64357852935791
    7. '()`' → logprob: -14.51857852935791
    8. '()
' → logprob: -15.14357852935791
    9. '()\' → logprob: -15.14357852935791
    10. '（）' → logprob: -16.143579483032227

Token 206: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5243571996688843
    2. '.strip' → logprob: -1.0243571996688843
    3. '<|end|>' → logprob: -3.399357318878174
    4. '.rstrip' → logprob: -5.149357318878174
    5. ' ' → logprob: -6.024357318878174
    6. '   ' → logprob: -6.274357318878174
    7. 'rstrip' → logprob: -7.149357318878174
    8. '().' → logprob: -7.274357318878174
    9. 'strip' → logprob: -7.399357318878174
    10. ' if' → logprob: -7.524357318878174

Token 207: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.287071168422699
    2. 'if' (adapté à ' if') → logprob: -1.7870712280273438
    3. '.strip' → logprob: -2.6620712280273438
    4. 'strip' → logprob: -4.662071228027344
    5. ' strip' → logprob: -6.537071228027344
    6. 'rstrip' → logprob: -7.537071228027344
    7. '.rstrip' → logprob: -8.537071228027344
    8. '<|end|>' → logprob: -8.787071228027344
    9. ' ' → logprob: -8.912071228027344
    10. '	if' → logprob: -9.412071228027344

Token 208: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.003450041403993964
    2. 'not' → logprob: -6.2534499168396
    3. ' line' → logprob: -6.5034499168396
    4. 'line' → logprob: -10.753450393676758
    5. ' ' → logprob: -14.503450393676758
    6. '	not' → logprob: -16.753450393676758
    7. '#line' → logprob: -17.503450393676758
    8. '	line' → logprob: -17.503450393676758
    9. '=line' → logprob: -18.628450393676758
    10. '(line' → logprob: -18.878450393676758

Token 209: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.011047814972698689
    2. 'line' → logprob: -4.511047840118408
    3. '	line' → logprob: -17.63604736328125
    4. '#line' → logprob: -18.51104736328125
    5. '(line' → logprob: -18.88604736328125
    6. '=line' → logprob: -19.26104736328125
    7. ' ' → logprob: -19.88604736328125
    8. '[line' → logprob: -19.88604736328125
    9. ' lin' → logprob: -23.26104736328125
    10. ' linha' → logprob: -23.38604736328125

Token 210: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016764242202043533
    2. '.strip' → logprob: -4.266764163970947
    3. ':
' → logprob: -6.141764163970947
    4. '.' → logprob: -8.016764640808105
    5. ' :' → logprob: -9.891764640808105
    6. ' or' → logprob: -10.516764640808105
    7. '.rstrip' → logprob: -11.016764640808105
    8. ':return' → logprob: -11.266764640808105
    9. '.startswith' → logprob: -12.891764640808105
    10. ')' → logprob: -13.641764640808105

Token 211: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006159977987408638
    2. '       ' → logprob: -5.131159782409668
    3. ':' → logprob: -9.506159782409668
    4. '   ' → logprob: -9.756159782409668
    5. ',' → logprob: -10.881159782409668
    6. ':
' → logprob: -11.131159782409668
    7. '               ' → logprob: -11.381159782409668
    8. '
' → logprob: -11.506159782409668
    9. '		' → logprob: -12.256159782409668
    10. '          ' → logprob: -12.256159782409668

Token 212: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.31016039848327637
    2. '           ' → logprob: -2.0601603984832764
    3. ' break' → logprob: -2.0601603984832764
    4. 'return' → logprob: -4.5601606369018555
    5. '               ' → logprob: -7.0601606369018555
    6. ' return' → logprob: -8.435160636901855
    7. '	break' → logprob: -9.185160636901855
    8. '
' → logprob: -9.310160636901855
    9. '       ' → logprob: -10.060160636901855
    10. '   ' → logprob: -11.310160636901855

Token 213: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02736509032547474
    2. '
' → logprob: -4.277365207672119
    3. '<|end|>' → logprob: -4.902365207672119
    4. '        
' → logprob: -5.402365207672119
    5. ',' → logprob: -7.402365207672119
    6. '   ' → logprob: -9.277364730834961
    7. '    
' → logprob: -9.527364730834961
    8. '  
' → logprob: -9.652364730834961
    9. '<|end|>' → logprob: -9.777364730834961
    10. '#' → logprob: -10.277364730834961

Token 214: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016436419682577252
    2. '        
' → logprob: -6.501643657684326
    3. '<|end|>' → logprob: -9.626643180847168
    4. '   ' → logprob: -11.126643180847168
    5. '        ' → logprob: -11.126643180847168
    6. '
' → logprob: -11.751643180847168
    7. ',' → logprob: -11.876643180847168
    8. '  
' → logprob: -12.376643180847168
    9. '      ' → logprob: -12.376643180847168
    10. '            
' → logprob: -12.501643180847168

Token 215: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.11580481380224228
    2. 'n' (adapté à ' n') → logprob: -2.24080491065979
    3. '       ' → logprob: -6.490804672241211
    4. ' parts' → logprob: -7.240804672241211
    5. ' N' → logprob: -8.865804672241211
    6. ' x' → logprob: -9.115804672241211
    7. '   ' → logprob: -9.240804672241211
    8. 'x' → logprob: -9.615804672241211
    9. 'N' → logprob: -9.740804672241211
    10. ' data' → logprob: -9.865804672241211

Token 216: '=line' (ID: 192488)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18229344487190247
    2. '=' → logprob: -1.93229341506958
    3. ',' → logprob: -4.05729341506958
    4. ' ' → logprob: -5.55729341506958
    5. ' ,' → logprob: -7.80729341506958
    6. '=int' → logprob: -8.682293891906738
    7. ' =
' → logprob: -10.182293891906738
    8. ')' → logprob: -10.307293891906738
    9. ' =)' → logprob: -12.432293891906738
    10. ',n' → logprob: -12.807293891906738

Token 217: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.15601977705955505
    2. '.' → logprob: -2.156019687652588
    3. '=' → logprob: -4.156019687652588
    4. ' =' → logprob: -5.531019687652588
    5. '.split' → logprob: -6.031019687652588
    6. '.readline' → logprob: -6.281019687652588
    7. '().' → logprob: -6.531019687652588
    8. '.rstrip' → logprob: -6.781019687652588
    9. ' .' → logprob: -7.156019687652588
    10. '=int' → logprob: -7.781019687652588

Token 218: '()
' (ID: 1234)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3873838782310486
    2. '()' → logprob: -1.1373839378356934
    3. '()==' → logprob: -9.512383460998535
    4. '()='' → logprob: -9.637383460998535
    5. '()<' → logprob: -10.012383460998535
    6. '(' → logprob: -10.012383460998535
    7. '())' → logprob: -10.012383460998535
    8. '().'' → logprob: -10.137383460998535
    9. '()>' → logprob: -10.387383460998535
    10. ')' → logprob: -10.512383460998535

Token 219: '       ' (ID: 309)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.011501669883728
    2. ' =' → logprob: -1.261501669883728
    3. '       ' → logprob: -1.511501669883728
    4. '==' → logprob: -2.5115017890930176
    5. ' ==' → logprob: -3.7615017890930176
    6. '()' → logprob: -4.761501789093018
    7. ' if' → logprob: -5.386501789093018
    8. 'if' → logprob: -5.761501789093018
    9. '()==' → logprob: -6.511501789093018
    10. '=
' → logprob: -6.636501789093018

Token 220: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6385742425918579
    2. ' if' → logprob: -0.7635742425918579
    3. ' ' → logprob: -5.888574123382568
    4. '=' → logprob: -6.638574123382568
    5. ' =' → logprob: -7.138574123382568
    6. '<|end|>' → logprob: -7.638574123382568
    7. '
' → logprob: -8.888574600219727
    8. ';if' → logprob: -9.138574600219727
    9. ' 
' → logprob: -9.263574600219727
    10. '	if' → logprob: -10.263574600219727

Token 221: ' n' (ID: 297)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.006858397275209427
    2. ' n' → logprob: -5.0068583488464355
    3. 'not' → logprob: -8.881858825683594
    4. 'n' → logprob: -12.506858825683594
    5. ' ' → logprob: -14.756858825683594
    6. ' ' → logprob: -17.131858825683594
    7. '	not' → logprob: -17.506858825683594
    8. ' n't' → logprob: -18.006858825683594
    9. ' no' → logprob: -19.006858825683594
    10. 'n't' → logprob: -19.006858825683594

Token 222: '=='' (ID: 20651)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.47525936365127563
    2. '==' → logprob: -0.9752593636512756
    3. ' =' → logprob: -7.600259304046631
    4. '=' → logprob: -7.600259304046631
    5. '()==' → logprob: -9.975259780883789
    6. '=='' → logprob: -10.475259780883789
    7. ')==' → logprob: -10.975259780883789
    8. ' =='' → logprob: -11.475259780883789
    9. ' ' → logprob: -11.600259780883789
    10. ' ===' → logprob: -11.600259780883789

Token 223: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4791973829269409
    2. '':' → logprob: -1.604197382926941
    3. '0' → logprob: -1.979197382926941
    4. '''' → logprob: -3.2291975021362305
    5. ''):' → logprob: -7.8541975021362305
    6. '':
' → logprob: -7.8541975021362305
    7. '"":' → logprob: -8.22919750213623
    8. ''''' → logprob: -9.10419750213623
    9. '"' → logprob: -9.22919750213623
    10. ' '':
' → logprob: -9.35419750213623

Token 224: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.3241584300994873
    2. ':' → logprob: -1.8241584300994873
    3. '':
' → logprob: -2.6991584300994873
    4. ':
' → logprob: -3.0741584300994873
    5. '<|end|>' → logprob: -7.824158668518066
    6. '':
' → logprob: -7.949158668518066
    7. '":' → logprob: -7.949158668518066
    8. ''' → logprob: -8.074158668518066
    9. ':return' → logprob: -8.449158668518066
    10. '\n' → logprob: -8.824158668518066

Token 225: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003222342347726226
    2. ' break' → logprob: -8.125322341918945
    3. '		' → logprob: -11.625322341918945
    4. 'break' → logprob: -12.500322341918945
    5. '          ' → logprob: -12.625322341918945
    6. '       ' → logprob: -13.250322341918945
    7. '\n' → logprob: -13.250322341918945
    8. '	break' → logprob: -13.375322341918945
    9. '	       ' → logprob: -14.000322341918945
    10. '               ' → logprob: -14.000322341918945

Token 226: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001178439473733306
    2. '
' → logprob: -7.37617826461792
    3. '<|end|>' → logprob: -8.126178741455078
    4. '        
' → logprob: -8.376178741455078
    5. 'n' → logprob: -11.626178741455078
    6. '	' → logprob: -12.626178741455078
    7. '<|end|>' → logprob: -12.751178741455078
    8. ',' → logprob: -13.501178741455078
    9. '        ' → logprob: -13.501178741455078
    10. '	n' → logprob: -13.876178741455078

Token 227: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004889196716248989
    2. '
' → logprob: -5.629889011383057
    3. '        
' → logprob: -7.129889011383057
    4. '<|end|>' → logprob: -7.754889011383057
    5. '	' → logprob: -11.004889488220215
    6. '        ' → logprob: -12.129889488220215
    7. 'n' → logprob: -12.379889488220215
    8. '		
' → logprob: -12.504889488220215
    9. '<|end|>' → logprob: -12.629889488220215
    10. '  
' → logprob: -12.629889488220215

Token 228: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.06197160854935646
    2. ' n' → logprob: -2.811971664428711
    3. '       ' → logprob: -12.686971664428711
    4. 'N' → logprob: -14.686971664428711
    5. ' ' → logprob: -15.311971664428711
    6. '	n' → logprob: -16.06197166442871
    7. '        
' → logprob: -17.31197166442871
    8. '   ' → logprob: -17.56197166442871
    9. 'points' → logprob: -17.68697166442871
    10. ' N' → logprob: -17.93697166442871

Token 229: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.014228851534426212
    2. ' =' → logprob: -4.264228820800781
    3. '=int' → logprob: -9.639228820800781
    4. '=n' → logprob: -15.514228820800781
    5. '=
' → logprob: -16.76422882080078
    6. '=

' → logprob: -17.13922882080078
    7. ',' → logprob: -18.51422882080078
    8. '＝' → logprob: -18.63922882080078
    9. '=}' → logprob: -19.63922882080078
    10. ' ' → logprob: -19.88922882080078

Token 230: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.006717147771269083
    2. '(' → logprob: -5.006717205047607
    3. '(
' → logprob: -14.25671672821045
    4. ' (' → logprob: -14.25671672821045
    5. '(line' → logprob: -15.38171672821045
    6. 'n' → logprob: -16.006717681884766
    7. '()' → logprob: -16.881717681884766
    8. ')n' → logprob: -17.881717681884766
    9. '(

' → logprob: -18.131717681884766
    10. ')' → logprob: -18.381717681884766

Token 231: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.061054359131958e-06
    2. '[' → logprob: -12.500007629394531
    3. ' )' → logprob: -13.000007629394531
    4. ')
' → logprob: -13.375007629394531
    5. ')n' → logprob: -16.12500762939453
    6. '`)' → logprob: -16.75000762939453
    7. '')' → logprob: -17.00000762939453
    8. ')>' → logprob: -17.12500762939453
    9. ')return' → logprob: -17.25000762939453
    10. '))' → logprob: -17.25000762939453

Token 232: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6629325747489929
    2. ' points' → logprob: -1.1629326343536377
    3. 'points' → logprob: -1.9129326343536377
    4. '	points' → logprob: -4.037932395935059
    5. '_points' → logprob: -5.912932395935059
    6. '        
' → logprob: -6.912932395935059
    7. '(points' → logprob: -7.037932395935059
    8. '<|end|>' → logprob: -7.662932395935059
    9. 'p' → logprob: -7.912932395935059
    10. '	' → logprob: -8.662932395935059

Token 233: ' xs' (ID: 26642)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.07107769697904587
    2. 'pts' → logprob: -2.696077585220337
    3. ' points' → logprob: -7.571077823638916
    4. 'p' → logprob: -8.196077346801758
    5. ' pts' → logprob: -9.321077346801758
    6. 'P' → logprob: -9.446077346801758
    7. 'poly' → logprob: -9.446077346801758
    8. 'coords' → logprob: -10.821077346801758
    9. '```' → logprob: -10.946077346801758
    10. 'polygon' → logprob: -11.571077346801758

Token 234: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6173796057701111
    2. ' =' → logprob: -0.8673796057701111
    3. '=[]' → logprob: -3.492379665374756
    4. ',' → logprob: -4.617379665374756
    5. '=[' → logprob: -9.492379188537598
    6. 's' → logprob: -9.992379188537598
    7. ' =[' → logprob: -9.992379188537598
    8. '=[],' → logprob: -10.117379188537598
    9. '=[]
' → logprob: -11.367379188537598
    10. '[:]' → logprob: -11.367379188537598

Token 235: 'ys' (ID: 1371)
  Prédit: 'ys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -3.547789674485102e-05
    2. ' ys' → logprob: -10.250035285949707
    3. '_' → logprob: -17.875036239624023
    4. '=' → logprob: -18.000036239624023
    5. 'hs' → logprob: -18.625036239624023
    6. '[]' → logprob: -18.750036239624023
    7. 'Ys' → logprob: -19.000036239624023
    8. ' =' → logprob: -19.500036239624023
    9. 'xs' → logprob: -19.500036239624023
    10. 'ws' → logprob: -19.625036239624023

Token 236: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03888898342847824
    2. ' =' → logprob: -3.288888931274414
    3. '=[],' → logprob: -7.288888931274414
    4. '=[]' → logprob: -8.913888931274414
    5. '=[' → logprob: -10.538888931274414
    6. '=list' → logprob: -13.163888931274414
    7. ',' → logprob: -15.163888931274414
    8. ' =[' → logprob: -15.163888931274414
    9. '=[]
' → logprob: -15.288888931274414
    10. '[]=' → logprob: -16.538888931274414

Token 237: ' map' (ID: 4014)
  Prédit: '[],'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[],' → logprob: -0.053716935217380524
    2. 'zip' → logprob: -3.0537168979644775
    3. ' [],' → logprob: -5.928717136383057
    4. ' zip' → logprob: -6.428717136383057
    5. '[' → logprob: -7.678717136383057
    6. '([],' → logprob: -8.428716659545898
    7. '[]' → logprob: -8.803716659545898
    8. 'list' → logprob: -13.178716659545898
    9. '(zip' → logprob: -13.178716659545898
    10. '[]
' → logprob: -13.428716659545898

Token 238: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.014208757318556309
    2. '(list' → logprob: -4.264208793640137
    3. 'list' → logprob: -10.889208793640137
    4. '(float' → logprob: -11.264208793640137
    5. '(str' → logprob: -12.139208793640137
    6. '(' → logprob: -12.139208793640137
    7. '(lambda' → logprob: -13.764208793640137
    8. 'int' → logprob: -14.264208793640137
    9. '(tuple' → logprob: -14.264208793640137
    10. '(next' → logprob: -15.139208793640137

Token 239: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0021775043569505215
    2. '(sys' → logprob: -6.377177715301514
    3. ',(' → logprob: -8.502177238464355
    4. 'sys' → logprob: -8.752177238464355
    5. ',System' → logprob: -10.252177238464355
    6. ',input' → logprob: -11.127177238464355
    7. '=sys' → logprob: -11.127177238464355
    8. ',s' → logprob: -11.627177238464355
    9. '(),' → logprob: -11.752177238464355
    10. ' ,' → logprob: -11.877177238464355

Token 240: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.0005667338264174759
    2. ' sys' → logprob: -7.8755669593811035
    3. '(sys' → logprob: -8.875566482543945
    4. ')' → logprob: -10.250566482543945
    5. 'range' → logprob: -12.375566482543945
    6. '
' → logprob: -12.625566482543945
    7. '=sys' → logprob: -13.375566482543945
    8. '[' → logprob: -14.250566482543945
    9. '	sys' → logprob: -14.500566482543945
    10. ',' → logprob: -14.875566482543945

Token 241: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.00016861737822182477
    2. 'stdin' → logprob: -8.750168800354004
    3. '.readline' → logprob: -11.625168800354004
    4. '(stdin' → logprob: -14.500168800354004
    5. '.stdout' → logprob: -14.625168800354004
    6. '.' → logprob: -16.625167846679688
    7. '   ' → logprob: -17.625167846679688
    8. '```' → logprob: -17.750167846679688
    9. ')' → logprob: -18.000167846679688
    10. 'in' → logprob: -18.000167846679688

Token 242: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.47609996795654297
    2. '.stdin' → logprob: -0.976099967956543
    3. 'stdin' → logprob: -6.226099967956543
    4. '.stdout' → logprob: -10.726099967956543
    5. '(stdin' → logprob: -11.851099967956543
    6. '.' → logprob: -12.101099967956543
    7. ')' → logprob: -12.976099967956543
    8. '.argv' → logprob: -13.476099967956543
    9. ').' → logprob: -13.851099967956543
    10. '```' → logprob: -13.851099967956543

Token 243: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.9385402993066236e-05
    2. '()' → logprob: -10.875019073486328
    3. ' ().' → logprob: -15.125019073486328
    4. '(' → logprob: -16.000019073486328
    5. '())' → logprob: -17.625019073486328
    6. '()
' → logprob: -17.750019073486328
    7. '.readline' → logprob: -18.500019073486328
    8. '().__' → logprob: -19.875019073486328
    9. ')' → logprob: -20.000019073486328
    10. '   ' → logprob: -20.375019073486328

Token 244: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -4.620622712536715e-05
    2. 'strip' → logprob: -10.000045776367188
    3. ' split' → logprob: -14.375045776367188
    4. 'rstrip' → logprob: -16.875045776367188
    5. '(split' → logprob: -18.375045776367188
    6. '.split' → logprob: -19.125045776367188
    7. 'spl' → logprob: -19.750045776367188
    8. 's' → logprob: -20.250045776367188
    9. ')' → logprob: -21.000045776367188
    10. ' strip' → logprob: -21.625045776367188

Token 245: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.007166897412389517
    2. '()' → logprob: -5.257166862487793
    3. ')' → logprob: -6.257166862487793
    4. ' ())' → logprob: -12.257166862487793
    5. '(),' → logprob: -12.382166862487793
    6. '(' → logprob: -13.257166862487793
    7. '()))' → logprob: -13.632166862487793
    8. '())
' → logprob: -13.757166862487793
    9. '();)' → logprob: -14.632166862487793
    10. '());' → logprob: -15.257166862487793

Token 246: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42248639464378357
    2. '<|end|>' → logprob: -1.172486424446106
    3. 'points' → logprob: -4.547486305236816
    4. ' points' → logprob: -4.797486305236816
    5. '(points' → logprob: -5.922486305236816
    6. ')' → logprob: -5.922486305236816
    7. '        
' → logprob: -6.297486305236816
    8. '	points' → logprob: -6.672486305236816
    9. 'newline' → logprob: -6.797486305236816
    10. '<|end|>' → logprob: -6.922486305236816

Token 247: ' x' (ID: 1215)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.26630067825317383
    2. 'pts' → logprob: -1.6413006782531738
    3. '       ' → logprob: -4.391300678253174
    4. 'poly' → logprob: -4.391300678253174
    5. 'p' → logprob: -6.141300678253174
    6. 'graph' → logprob: -6.266300678253174
    7. 'pol' → logprob: -6.391300678253174
    8. 'ps' → logprob: -6.641300678253174
    9. 'polygon' → logprob: -7.016300678253174
    10. '   ' → logprob: -7.516300678253174

Token 248: 'g' (ID: 70)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0017560989363119006
    2. ',' → logprob: -6.751756191253662
    3. ',y' → logprob: -8.126755714416504
    4. 'y' → logprob: -8.876755714416504
    5. 'ys' → logprob: -9.126755714416504
    6. ',s' → logprob: -10.251755714416504
    7. ' ,' → logprob: -13.626755714416504
    8. 'es' → logprob: -14.251755714416504
    9. '_,' → logprob: -14.251755714416504
    10. '_s' → logprob: -14.501755714416504

Token 249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.048655036836862564
    2. ',y' → logprob: -3.0486550331115723
    3. ' ,' → logprob: -9.67365550994873
    4. ',Y' → logprob: -12.54865550994873
    5. 'y' → logprob: -15.04865550994873
    6. 's' → logprob: -15.54865550994873
    7. ',s' → logprob: -15.92365550994873
    8. ',g' → logprob: -15.92365550994873
    9. ',
' → logprob: -16.923654556274414
    10. '_,' → logprob: -17.298654556274414

Token 250: 'yg' (ID: 8408)
  Prédit: 'yg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yg' → logprob: -0.2962314784526825
    2. 'ys' → logprob: -1.4212315082550049
    3. 'y' → logprob: -4.546231269836426
    4. 'ysg' → logprob: -5.796231269836426
    5. ' yg' → logprob: -7.296231269836426
    6. ' y' → logprob: -7.796231269836426
    7. 'ysig' → logprob: -9.171231269836426
    8. ' ys' → logprob: -9.546231269836426
    9. 'ygy' → logprob: -11.546231269836426
    10. 'ysin' → logprob: -11.546231269836426

Token 251: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -5.860340752406046e-05
    2. ' =' → logprob: -9.7500581741333
    3. ',' → logprob: -16.125059127807617
    4. '=
' → logprob: -16.625059127807617
    5. ')=' → logprob: -16.875059127807617
    6. '=

' → logprob: -17.250059127807617
    7. ')' → logprob: -18.125059127807617
    8. '=line' → logprob: -18.250059127807617
    9. '=sys' → logprob: -18.375059127807617
    10. '=int' → logprob: -19.000059127807617

Token 252: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.06196768581867218
    2. 'map' → logprob: -2.811967611312866
    3. '(map' → logprob: -17.186967849731445
    4. ' ' → logprob: -17.686967849731445
    5. '	map' → logprob: -17.686967849731445
    6. '   ' → logprob: -19.186967849731445
    7. '_map' → logprob: -19.936967849731445
    8. '    ' → logprob: -20.186967849731445
    9. 'm' → logprob: -20.311967849731445
    10. '.map' → logprob: -21.061967849731445

Token 253: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -2.5941604690160602e-05
    2. '=int' → logprob: -11.250025749206543
    3. ',int' → logprob: -12.375025749206543
    4. 'int' → logprob: -13.000025749206543
    5. '[int' → logprob: -13.000025749206543
    6. '<int' → logprob: -13.125025749206543
    7. ']int' → logprob: -13.625025749206543
    8. ' (' → logprob: -14.500025749206543
    9. ':int' → logprob: -14.750025749206543
    10. '(' → logprob: -17.12502670288086

Token 254: ',' (ID: 11)
  Prédit: ',int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',int' → logprob: -0.049195729196071625
    2. ',' → logprob: -3.0491957664489746
    3. '(int' → logprob: -7.674195766448975
    4. '(sys' → logprob: -9.674195289611816
    5. ' ,' → logprob: -10.549195289611816
    6. '(),' → logprob: -11.174195289611816
    7. '=sys' → logprob: -11.674195289611816
    8. 'int' → logprob: -12.049195289611816
    9. '=int' → logprob: -12.049195289611816
    10. ',System' → logprob: -12.174195289611816

Token 255: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -9.29340603761375e-05
    2. ' sys' → logprob: -9.875092506408691
    3. 'int' → logprob: -10.125092506408691
    4. 'map' → logprob: -13.875092506408691
    5. '(sys' → logprob: -15.750092506408691
    6. '=sys' → logprob: -16.125093460083008
    7. ')' → logprob: -16.750093460083008
    8. '
' → logprob: -17.250093460083008
    9. 's' → logprob: -17.750093460083008
    10. '   ' → logprob: -17.875093460083008

Token 256: '.stdin' (ID: 93480)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.3897256553173065
    2. '.stdin' → logprob: -1.139725685119629
    3. 'stdin' → logprob: -5.889725685119629
    4. '```' → logprob: -10.139725685119629
    5. '.stdout' → logprob: -10.764725685119629
    6. '.' → logprob: -11.639725685119629
    7. '(stdin' → logprob: -12.264725685119629
    8. '   ' → logprob: -13.514725685119629
    9. '().' → logprob: -13.639725685119629
    10. '=sys' → logprob: -14.139725685119629

Token 257: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.005246918182820082
    2. '().' → logprob: -5.255247116088867
    3. '.' → logprob: -12.755247116088867
    4. '.split' → logprob: -12.755247116088867
    5. ').' → logprob: -12.880247116088867
    6. '       ' → logprob: -13.380247116088867
    7. '.readlines' → logprob: -14.005247116088867
    8. '```' → logprob: -14.130247116088867
    9. '.stdin' → logprob: -15.130247116088867
    10. ' .' → logprob: -15.380247116088867

Token 258: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -5.4192871175473556e-05
    2. '.split' → logprob: -10.125054359436035
    3. ').' → logprob: -11.250054359436035
    4. '()' → logprob: -14.500054359436035
    5. '.' → logprob: -15.125054359436035
    6. '()).' → logprob: -15.750054359436035
    7. '()[' → logprob: -17.37505340576172
    8. ')' → logprob: -17.50005340576172
    9. ' .' → logprob: -17.75005340576172
    10. '.s' → logprob: -17.87505340576172

Token 259: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -1.9361264946837764e-07
    2. 'strip' → logprob: -16.125
    3. ' split' → logprob: -17.125
    4. '.split' → logprob: -18.75
    5. ')' → logprob: -20.125
    6. 's' → logprob: -20.25
    7. ').' → logprob: -20.375
    8. 'skip' → logprob: -20.5
    9. 'spl' → logprob: -20.75
    10. 'plit' → logprob: -21.125

Token 260: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.05171424522995949
    2. '()' → logprob: -3.3017141819000244
    3. ')' → logprob: -4.3017144203186035
    4. '())
' → logprob: -10.551713943481445
    5. '()
' → logprob: -12.926713943481445
    6. '();)' → logprob: -13.551713943481445
    7. ' ())' → logprob: -13.551713943481445
    8. '(' → logprob: -13.801713943481445
    9. '());' → logprob: -14.426713943481445
    10. '`)' → logprob: -15.301713943481445

Token 261: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30710670351982117
    2. 'points' → logprob: -1.6821067333221436
    3. ' points' → logprob: -3.6821067333221436
    4. 'p' → logprob: -3.9321067333221436
    5. '<|end|>' → logprob: -4.8071064949035645
    6. '	points' → logprob: -5.5571064949035645
    7. 'n' → logprob: -5.8071064949035645
    8. 'graph' → logprob: -5.8071064949035645
    9. 's' → logprob: -5.9321064949035645
    10. ' obstacles' → logprob: -6.4321064949035645

Token 262: ' seg' (ID: 3055)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.5128881931304932
    2. 'pts' → logprob: -1.3878881931304932
    3. 'obs' → logprob: -2.512888193130493
    4. 'ob' → logprob: -4.387887954711914
    5. 'walls' → logprob: -4.387887954711914
    6. '       ' → logprob: -4.512887954711914
    7. 'p' → logprob: -4.887887954711914
    8. 'poly' → logprob: -5.012887954711914
    9. 'pol' → logprob: -5.762887954711914
    10. 'graph' → logprob: -6.512887954711914

Token 263: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07956851273775101
    2. 'ments' → logprob: -2.57956862449646
    3. '=' → logprob: -7.954568386077881
    4. 'm' → logprob: -8.204568862915039
    5. ' =' → logprob: -11.204568862915039
    6. 'ment' → logprob: -11.704568862915039
    7. '=[]
' → logprob: -11.954568862915039
    8. '=[]' → logprob: -11.954568862915039
    9. 'ements' → logprob: -12.454568862915039
    10. 'ms' → logprob: -12.454568862915039

Token 264: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5301535725593567
    2. ' =' → logprob: -0.9051535725593567
    3. '=[]' → logprob: -5.030153751373291
    4. '={}' → logprob: -8.030153274536133
    5. ',' → logprob: -9.655153274536133
    6. 's' → logprob: -10.655153274536133
    7. '[' → logprob: -11.030153274536133
    8. '=[' → logprob: -11.655153274536133
    9. '_' → logprob: -11.905153274536133
    10. ' =[' → logprob: -12.530153274536133

Token 265: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09081748127937317
    2. ' for' → logprob: -3.215817451477051
    3. '<|end|>' → logprob: -3.840817451477051
    4. '	' → logprob: -4.590817451477051
    5. 'for' → logprob: -4.840817451477051
    6. '	for' → logprob: -5.215817451477051
    7. '	   ' → logprob: -7.340817451477051
    8. '   ' → logprob: -8.34081745147705
    9. '<|end|>' → logprob: -8.59081745147705
    10. ' ' → logprob: -9.09081745147705

Token 266: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.008615399710834026
    2. ' for' → logprob: -4.758615493774414
    3. '	for' → logprob: -14.758615493774414
    4. '_' → logprob: -15.758615493774414
    5. '[]' → logprob: -16.008615493774414
    6. '       ' → logprob: -16.258615493774414
    7. '   ' → logprob: -16.258615493774414
    8. '[' → logprob: -16.758615493774414
    9. 'True' → logprob: -18.258615493774414
    10. '_for' → logprob: -18.258615493774414

Token 267: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.00675775995478034
    2. '_' → logprob: -5.006757736206055
    3. ' i' → logprob: -10.131757736206055
    4. '_i' → logprob: -13.131757736206055
    5. ' ' → logprob: -15.131757736206055
    6. 'i' → logprob: -15.131757736206055
    7. ' ' → logprob: -17.006757736206055
    8. ' _
' → logprob: -17.631757736206055
    9. '_=' → logprob: -19.506757736206055
    10. ' ‌' → logprob: -19.756757736206055

Token 268: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.20181676745414734
    2. ' in' → logprob: -1.7018167972564697
    3. 'i' → logprob: -8.82681655883789
    4. 'n' → logprob: -9.45181655883789
    5. '_' → logprob: -9.70181655883789
    6. ' ' → logprob: -9.82681655883789
    7. 'range' → logprob: -10.45181655883789
    8. 'se' → logprob: -11.95181655883789
    9. '  ' → logprob: -12.07681655883789
    10. ' _' → logprob: -12.70181655883789

Token 269: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00020401719666551799
    2. ' range' → logprob: -8.500204086303711
    3. '(range' → logprob: -14.875204086303711
    4. '	range' → logprob: -17.62520408630371
    5. 'ange' → logprob: -17.75020408630371
    6. ' ' → logprob: -17.75020408630371
    7. 'x' → logprob: -18.75020408630371
    8. '(' → logprob: -18.87520408630371
    9. '   ' → logprob: -18.87520408630371
    10. '```' → logprob: -19.00020408630371

Token 270: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.629921436891891e-05
    2. '(' → logprob: -10.62502670288086
    3. ' (' → logprob: -13.25002670288086
    4. 'n' → logprob: -16.62502670288086
    5. '	n' → logprob: -17.62502670288086
    6. '(
' → logprob: -17.75002670288086
    7. ' n' → logprob: -17.75002670288086
    8. '(N' → logprob: -18.25002670288086
    9. '   ' → logprob: -18.62502670288086
    10. '((' → logprob: -18.87502670288086

Token 271: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004197355825453997
    2. '):
' → logprob: -5.504197120666504
    3. ')' → logprob: -9.504197120666504
    4. ':' → logprob: -10.629197120666504
    5. ' ):' → logprob: -11.504197120666504
    6. ',' → logprob: -12.754197120666504
    7. '):
' → logprob: -13.254197120666504
    8. '   ' → logprob: -13.754197120666504
    9. ']:' → logprob: -13.879197120666504
    10. '}:' → logprob: -14.379197120666504

Token 272: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04702692851424217
    2. '           ' → logprob: -3.2970268726348877
    3. '       ' → logprob: -5.297027111053467
    4. '	   ' → logprob: -6.172027111053467
    5. '    
' → logprob: -8.172026634216309
    6. '	       ' → logprob: -8.547026634216309
    7. '    	   ' → logprob: -8.672026634216309
    8. '<|end|>' → logprob: -8.672026634216309
    9. '		   ' → logprob: -8.922026634216309
    10. ' s' → logprob: -8.922026634216309

Token 273: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.011404176242649555
    2. 'a' → logprob: -5.011404037475586
    3. 'se' → logprob: -6.386404037475586
    4. '   ' → logprob: -7.011404037475586
    5. 'ax' → logprob: -7.261404037475586
    6. 'seg' → logprob: -7.761404037475586
    7. ' x' → logprob: -8.386404037475586
    8. 's' → logprob: -8.511404037475586
    9. 'segments' → logprob: -8.761404037475586
    10. 'xi' → logprob: -9.386404037475586

Token 274: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0032549542374908924
    2. ',y' → logprob: -6.3782548904418945
    3. 's' → logprob: -7.1282548904418945
    4. ',' → logprob: -7.7532548904418945
    5. 'y' → logprob: -8.503254890441895
    6. '0' → logprob: -9.253254890441895
    7. 'a' → logprob: -11.003254890441895
    8. 'ys' → logprob: -13.253254890441895
    9. 'start' → logprob: -14.628254890441895
    10. 'l' → logprob: -14.753254890441895

Token 275: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.12695109844207764
    2. ',' → logprob: -2.126951217651367
    3. ' ,' → logprob: -10.876951217651367
    4. 'y' → logprob: -13.376951217651367
    5. ',x' → logprob: -13.501951217651367
    6. ',int' → logprob: -15.126951217651367
    7. ',Y' → logprob: -15.251951217651367
    8. '_,' → logprob: -15.626951217651367
    9. ',\
' → logprob: -15.876951217651367
    10. '1' → logprob: -16.501951217651367

Token 276: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.014684110297821e-06
    2. ',' → logprob: -11.750008583068848
    3. ' ' → logprob: -14.750008583068848
    4. '<|end|>' → logprob: -14.750008583068848
    5. ',x' → logprob: -15.875008583068848
    6. 's' → logprob: -16.875009536743164
    7. '0' → logprob: -17.375009536743164
    8. '   ' → logprob: -17.500009536743164
    9. '  ' → logprob: -18.250009536743164
    10. ')' → logprob: -18.375009536743164

Token 277: ',x' (ID: 29748)
  Prédit: ',x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',x' → logprob: -0.07099631428718567
    2. ',' → logprob: -2.8209962844848633
    3. ',y' → logprob: -4.820996284484863
    4. '=' → logprob: -7.570996284484863
    5. ',w' → logprob: -8.195996284484863
    6. ' ,' → logprob: -9.945996284484863
    7. 'x' → logprob: -11.195996284484863
    8. ',k' → logprob: -11.320996284484863
    9. ',v' → logprob: -11.445996284484863
    10. ',i' → logprob: -11.570996284484863

Token 278: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011093381908722222
    2. ',' → logprob: -9.875110626220703
    3. ',y' → logprob: -10.375110626220703
    4. '2' → logprob: -10.750110626220703
    5. '<|end|>' → logprob: -12.750110626220703
    6. ',x' → logprob: -13.500110626220703
    7. 'y' → logprob: -14.250110626220703
    8. '<|end|>' → logprob: -14.750110626220703
    9. 's' → logprob: -15.000110626220703
    10. '_' → logprob: -15.000110626220703

Token 279: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.1270766705274582
    2. ',' → logprob: -2.1270766258239746
    3. ',x' → logprob: -8.877077102661133
    4. ',user' → logprob: -12.877077102661133
    5. '<|end|>' → logprob: -13.502077102661133
    6. ' ,' → logprob: -13.752077102661133
    7. 'y' → logprob: -14.127077102661133
    8. ',w' → logprob: -15.002077102661133
    9. ',num' → logprob: -15.127077102661133
    10. ',z' → logprob: -15.127077102661133

Token 280: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.015638019889593124
    2. '2' → logprob: -4.3906378746032715
    3. '<|end|>' → logprob: -6.2656378746032715
    4. '=' → logprob: -7.0156378746032715
    5. ',' → logprob: -9.51563835144043
    6. 's' → logprob: -9.64063835144043
    7. '<|end|>' → logprob: -9.89063835144043
    8. '=sys' → logprob: -10.26563835144043
    9. '```' → logprob: -10.39063835144043
    10. ' ' → logprob: -11.01563835144043

Token 281: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1002139002084732
    2. ' =' → logprob: -2.3502140045166016
    3. '=line' → logprob: -12.475214004516602
    4. '=list' → logprob: -13.600214004516602
    5. '=sys' → logprob: -14.725214004516602
    6. '=int' → logprob: -14.725214004516602
    7. '=
' → logprob: -14.725214004516602
    8. '=input' → logprob: -15.225214004516602
    9. ' =
' → logprob: -15.850214004516602
    10. ',' → logprob: -15.850214004516602

Token 282: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.3175111711025238
    2. ' read' → logprob: -1.3175112009048462
    3. 'map' → logprob: -5.692511081695557
    4. 'read' → logprob: -7.067511081695557
    5. ' list' → logprob: -11.192511558532715
    6. ' ' → logprob: -13.192511558532715
    7. '	map' → logprob: -15.317511558532715
    8. '	read' → logprob: -15.317511558532715
    9. ' reads' → logprob: -15.692511558532715
    10. ' tuple' → logprob: -15.817511558532715

Token 283: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -4.429896944202483e-05
    2. '(' → logprob: -10.625043869018555
    3. 'int' → logprob: -11.125043869018555
    4. '<int' → logprob: -13.500043869018555
    5. '[int' → logprob: -13.500043869018555
    6. ',int' → logprob: -14.250043869018555
    7. '<|end|>' → logprob: -14.500043869018555
    8. '=int' → logprob: -14.625043869018555
    9. ']int' → logprob: -14.750043869018555
    10. ' (' → logprob: -15.625043869018555

Token 284: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010055904276669025
    2. '(sys' → logprob: -4.635056018829346
    3. 'sys' → logprob: -8.635055541992188
    4. ',s' → logprob: -10.260055541992188
    5. '=sys' → logprob: -10.260055541992188
    6. ',System' → logprob: -11.135055541992188
    7. '(' → logprob: -11.885055541992188
    8. ' sys' → logprob: -12.010055541992188
    9. '	sys' → logprob: -12.135055541992188
    10. ')' → logprob: -12.385055541992188

Token 285: 'sys' (ID: 17324)
  Prédit: 'sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -1.1637164789135568e-05
    2. ' sys' → logprob: -11.375011444091797
    3. '(sys' → logprob: -16.125011444091797
    4. '=sys' → logprob: -17.625011444091797
    5. ')' → logprob: -18.125011444091797
    6. '	sys' → logprob: -18.250011444091797
    7. '   ' → logprob: -19.500011444091797
    8. 'input' → logprob: -19.875011444091797
    9. '```' → logprob: -20.000011444091797
    10. '
' → logprob: -20.625011444091797

Token 286: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.02151390165090561
    2. '.readline' → logprob: -3.8965139389038086
    3. '=sys' → logprob: -7.896513938903809
    4. '().' → logprob: -8.021513938903809
    5. '(stdin' → logprob: -8.896513938903809
    6. 'stdin' → logprob: -9.146513938903809
    7. '.stdout' → logprob: -11.396513938903809
    8. '.' → logprob: -12.271513938903809
    9. '```' → logprob: -12.896513938903809
    10. '(sys' → logprob: -13.646513938903809

Token 287: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.000583653396461159
    2. '.stdin' → logprob: -8.12558364868164
    3. '().' → logprob: -8.25058364868164
    4. '=sys' → logprob: -11.75058364868164
    5. 'sys' → logprob: -12.00058364868164
    6. 'stdin' → logprob: -12.50058364868164
    7. '.split' → logprob: -12.50058364868164
    8. '(stdin' → logprob: -13.62558364868164
    9. '.' → logprob: -14.25058364868164
    10. '(sys' → logprob: -14.25058364868164

Token 288: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.2664456789934775e-06
    2. '()' → logprob: -13.750000953674316
    3. ' ().' → logprob: -16.250001907348633
    4. '.split' → logprob: -17.250001907348633
    5. '.' → logprob: -17.625001907348633
    6. '.readline' → logprob: -18.625001907348633
    7. '()).' → logprob: -18.875001907348633
    8. ').' → logprob: -19.000001907348633
    9. '   ' → logprob: -19.125001907348633
    10. '>().' → logprob: -19.250001907348633

Token 289: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -6.704273118884885e-07
    2. ' split' → logprob: -14.500000953674316
    3. 'strip' → logprob: -15.625000953674316
    4. '.split' → logprob: -17.0
    5. '(split' → logprob: -18.875
    6. 'spl' → logprob: -19.5
    7. '
' → logprob: -20.75
    8. ')' → logprob: -20.75
    9. 'rstrip' → logprob: -20.75
    10. '```' → logprob: -21.75

Token 290: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.08811167627573013
    2. ')' → logprob: -2.588111639022827
    3. '()' → logprob: -4.713111877441406
    4. '())
' → logprob: -8.588111877441406
    5. ')
' → logprob: -12.463111877441406
    6. '()
' → logprob: -12.588111877441406
    7. '   ' → logprob: -13.088111877441406
    8. ' ())' → logprob: -13.213111877441406
    9. '();)' → logprob: -13.463111877441406
    10. ' )' → logprob: -13.588111877441406

Token 291: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001455236109904945
    2. '       ' → logprob: -6.876455307006836
    3. '	se' → logprob: -9.001455307006836
    4. '   ' → logprob: -9.126455307006836
    5. 'se' → logprob: -9.501455307006836
    6. ',se' → logprob: -9.876455307006836
    7. '<|end|>' → logprob: -11.376455307006836
    8. '               ' → logprob: -11.626455307006836
    9. '(se' → logprob: -11.751455307006836
    10. '	       ' → logprob: -11.876455307006836

Token 292: ' seg' (ID: 3055)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35253286361694336
    2. 'se' → logprob: -1.2275328636169434
    3. ' seg' → logprob: -6.352532863616943
    4. ' se' → logprob: -6.602532863616943
    5. '	se' → logprob: -8.102533340454102
    6. '   ' → logprob: -8.352533340454102
    7. '       ' → logprob: -8.477533340454102
    8. 'seg' (adapté à ' seg') → logprob: -9.602533340454102
    9. 'segments' → logprob: -9.977533340454102
    10. ',se' → logprob: -10.477533340454102

Token 293: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: 0.0
    2. '=' → logprob: -16.875
    3. '.append' → logprob: -18.5
    4. '[' → logprob: -19.0
    5. ' =' → logprob: -19.0
    6. '```' → logprob: -19.25
    7. 'segments' → logprob: -19.375
    8. '=s' → logprob: -19.375
    9. '_s' → logprob: -19.625
    10. 'sx' → logprob: -19.75

Token 294: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.001556282164528966
    2. '.' → logprob: -6.501556396484375
    3. '.ap' → logprob: -10.376556396484375
    4. ' .' → logprob: -11.251556396484375
    5. '.app' → logprob: -11.751556396484375
    6. 'append' → logprob: -14.251556396484375
    7. ').' → logprob: -14.376556396484375
    8. '.Append' → logprob: -15.376556396484375
    9. '​.' → logprob: -15.751556396484375
    10. '].' → logprob: -16.376556396484375

Token 295: '(((' (ID: 13163)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.062228381633758545
    2. '(((' → logprob: -2.8122284412384033
    3. '(' → logprob: -8.312228202819824
    4. ' ((' → logprob: -11.187228202819824
    5. '([(' → logprob: -14.312228202819824
    6. '   ' → logprob: -14.812228202819824
    7. '[((' → logprob: -16.06222915649414
    8. '(({' → logprob: -16.43722915649414
    9. '(([' → logprob: -17.06222915649414
    10. ' ' → logprob: -17.18722915649414

Token 296: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: 0.0
    2. ' x' → logprob: -17.5
    3. ')x' → logprob: -18.0
    4. '(x' → logprob: -18.75
    5. ',x' → logprob: -21.0
    6. '"x' → logprob: -21.625
    7. '	x' → logprob: -22.0
    8. '{x' → logprob: -22.375
    9. '
' → logprob: -22.875
    10. 'xref' → logprob: -22.875

Token 297: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. 's' → logprob: -12.500003814697266
    3. ',' → logprob: -16.000003814697266
    4. '[' → logprob: -17.625003814697266
    5. ' ' → logprob: -17.875003814697266
    6. '_' → logprob: -19.000003814697266
    7. '
' → logprob: -19.375003814697266
    8. ')' → logprob: -19.500003814697266
    9. 'x' → logprob: -19.500003814697266
    10. '   ' → logprob: -19.875003814697266

Token 298: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -0.005251068156212568
    2. ',' → logprob: -5.255250930786133
    3. ' ,' → logprob: -11.005250930786133
    4. ',
' → logprob: -15.005250930786133
    5. ',x' → logprob: -15.255250930786133
    6. 'y' → logprob: -16.255250930786133
    7. ',Y' → logprob: -16.755250930786133
    8. '[' → logprob: -18.380250930786133
    9. ' y' → logprob: -18.630250930786133
    10. ',user' → logprob: -18.755250930786133

Token 299: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. 'y' → logprob: -12.000006675720215
    3. ' ' → logprob: -16.0000057220459
    4. '
' → logprob: -16.1250057220459
    5. '   ' → logprob: -16.7500057220459
    6. ')' → logprob: -16.8750057220459
    7. '

' → logprob: -17.2500057220459
    8. ' y' → logprob: -17.7500057220459
    9. ',' → logprob: -18.2500057220459
    10. '```' → logprob: -18.2500057220459

Token 300: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.21258977055549622
    2. '),' → logprob: -2.087589740753174
    3. ',(' → logprob: -3.337589740753174
    4. ',' → logprob: -3.462589740753174
    5. '),
' → logprob: -7.712589740753174
    6. ' ),' → logprob: -9.587590217590332
    7. ',x' → logprob: -10.087590217590332
    8. ' ,' → logprob: -10.212590217590332
    9. ',y' → logprob: -10.712590217590332
    10. ',
' → logprob: -11.087590217590332

Token 301: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -5.676981345459353e-06
    2. ' x' → logprob: -12.125005722045898
    3. '(x' → logprob: -15.875005722045898
    4. ')x' → logprob: -17.0000057220459
    5. '	x' → logprob: -17.8750057220459
    6. ' ' → logprob: -18.6250057220459
    7. '   ' → logprob: -19.1250057220459
    8. '
' → logprob: -19.7500057220459
    9. '"x' → logprob: -19.7500057220459
    10. ',x' → logprob: -20.1250057220459

Token 302: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -7.226628895296017e-06
    2. '1' → logprob: -12.000007629394531
    3. '[' → logprob: -14.625007629394531
    4. '```' → logprob: -15.125007629394531
    5. ' ' → logprob: -16.12500762939453
    6. '
' → logprob: -17.62500762939453
    7. '   ' → logprob: -17.75000762939453
    8. '``' → logprob: -18.18750762939453
    9. ',' → logprob: -18.56250762939453
    10. 'x' → logprob: -18.62500762939453

Token 303: ',y' (ID: 16103)
  Prédit: ',y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',y' → logprob: -6.992775888647884e-05
    2. ',' → logprob: -9.625069618225098
    3. 'y' → logprob: -12.625069618225098
    4. ' ,' → logprob: -14.875069618225098
    5. ',
' → logprob: -16.625070571899414
    6. '<|end|>' → logprob: -16.750070571899414
    7. '```' → logprob: -17.000070571899414
    8. '1' → logprob: -17.375070571899414
    9. '
' → logprob: -18.250070571899414
    10. ',user' → logprob: -19.000070571899414

Token 304: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00034142236108891666
    2. '1' → logprob: -8.000341415405273
    3. ' ' → logprob: -13.000341415405273
    4. ')' → logprob: -13.750341415405273
    5. '[' → logprob: -14.125341415405273
    6. 'y' → logprob: -14.375341415405273
    7. '```' → logprob: -14.625341415405273
    8. '))' → logprob: -15.125341415405273
    9. '   ' → logprob: -15.625341415405273
    10. '-' → logprob: -16.125341415405273

Token 305: ')))
' (ID: 12562)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0011079480173066258
    2. ')))' → logprob: -7.001108169555664
    3. ')' → logprob: -8.876108169555664
    4. '))
' → logprob: -9.876108169555664
    5. ' ))' → logprob: -12.501108169555664
    6. ''))' → logprob: -14.626108169555664
    7. '))

' → logprob: -15.501108169555664
    8. '),' → logprob: -15.751108169555664
    9. ' ' → logprob: -15.751108169555664
    10. ')))
' → logprob: -16.501108169555664

Token 306: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2286207228899002
    2. '   ' → logprob: -2.478620767593384
    3. 'graph' → logprob: -3.853620767593384
    4. '        
' → logprob: -4.353620529174805
    5. 'adj' → logprob: -4.478620529174805
    6. 'points' → logprob: -4.603620529174805
    7. ' graph' → logprob: -4.853620529174805
    8. 'edges' → logprob: -5.103620529174805
    9. ' points' → logprob: -5.228620529174805
    10. ' edges' → logprob: -5.603620529174805

Token 307: ' points' (ID: 5571)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.1760095357894897
    2. 'visited' → logprob: -1.9260095357894897
    3. 'dist' → logprob: -2.3010096549987793
    4. 'dp' → logprob: -2.3010096549987793
    5. '#' → logprob: -2.5510096549987793
    6. 'adj' → logprob: -2.8010096549987793
    7. 'points' (adapté à ' points') → logprob: -3.0510096549987793
    8. 'q' → logprob: -3.6760096549987793
    9. '       ' → logprob: -4.176009654998779
    10. ' graph' → logprob: -4.176009654998779

Token 308: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21318192780017853
    2. ' =' → logprob: -1.713181972503662
    3. '=set' → logprob: -4.463181972503662
    4. '={}' → logprob: -8.838181495666504
    5. '=[]' → logprob: -10.963181495666504
    6. '_set' → logprob: -12.088181495666504
    7. '={' → logprob: -13.713181495666504
    8. ',' → logprob: -14.213181495666504
    9. 'set' → logprob: -14.338181495666504
    10. ' ' → logprob: -14.463181495666504

Token 309: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.12789300084114075
    2. ' set' → logprob: -2.5028929710388184
    3. '[]' → logprob: -3.7528929710388184
    4. '{}' → logprob: -4.627892971038818
    5. '{' → logprob: -6.127892971038818
    6. ' []' → logprob: -6.377892971038818
    7. ' defaultdict' → logprob: -7.377892971038818
    8. 'default' → logprob: -8.877893447875977
    9. 'deque' → logprob: -9.752893447875977
    10. ' {}' → logprob: -9.752893447875977

Token 310: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004176933318376541
    2. '()
' → logprob: -5.504177093505859
    3. '(points' → logprob: -9.87917709350586
    4. '([' → logprob: -10.87917709350586
    5. '((' → logprob: -11.87917709350586
    6. '([(' → logprob: -12.25417709350586
    7. '()

' → logprob: -12.62917709350586
    8. '(x' → logprob: -12.87917709350586
    9. '(' → logprob: -13.00417709350586
    10. ' ()' → logprob: -13.25417709350586

Token 311: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.38199207186698914
    2. ' for' → logprob: -2.3819921016693115
    3. 'for' → logprob: -2.3819921016693115
    4. 'points' → logprob: -3.3819921016693115
    5. '        
' → logprob: -3.7569921016693115
    6. ' 
' → logprob: -4.006991863250732
    7. '
' → logprob: -4.256991863250732
    8. '<|end|>' → logprob: -4.381991863250732
    9. '  
' → logprob: -4.506991863250732
    10. ' points' → logprob: -4.631991863250732

Token 312: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.026637211441993713
    2. ' for' → logprob: -3.651637315750122
    3. 'points' → logprob: -8.651637077331543
    4. '       ' → logprob: -8.776637077331543
    5. ' points' → logprob: -12.151637077331543
    6. '	for' → logprob: -13.276637077331543
    7. '   ' → logprob: -15.901637077331543
    8. '
' → logprob: -16.40163803100586
    9. '```' → logprob: -16.52663803100586
    10. '#' → logprob: -16.77663803100586

Token 313: ' s' (ID: 265)
  Prédit: ' seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seg' → logprob: -0.42167413234710693
    2. 'seg' → logprob: -2.0466742515563965
    3. ' s' → logprob: -2.1716742515563965
    4. 's' → logprob: -2.5466742515563965
    5. ' (' → logprob: -5.0466742515563965
    6. 'p' → logprob: -5.6716742515563965
    7. '(seg' → logprob: -5.6716742515563965
    8. ' p' → logprob: -5.6716742515563965
    9. '((' → logprob: -6.1716742515563965
    10. ' ((' → logprob: -6.6716742515563965

Token 314: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.022387417033314705
    2. 'in' → logprob: -4.897387504577637
    3. 'i' → logprob: -5.397387504577637
    4. 's' → logprob: -5.397387504577637
    5. 'p' → logprob: -6.272387504577637
    6. '1' → logprob: -6.772387504577637
    7. 'e' → logprob: -7.522387504577637
    8. '0' → logprob: -7.522387504577637
    9. 't' → logprob: -7.897387504577637
    10. ' i' → logprob: -7.897387504577637

Token 315: ' seg' (ID: 3055)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.0006762159755453467
    2. ' seg' → logprob: -7.500676155090332
    3. 'seg' → logprob: -9.125676155090332
    4. 's' → logprob: -13.000676155090332
    5. '[' → logprob: -13.125676155090332
    6. '(se' → logprob: -13.125676155090332
    7. '	se' → logprob: -13.125676155090332
    8. ' se' → logprob: -14.000676155090332
    9. '_se' → logprob: -14.375676155090332
    10. '   ' → logprob: -14.375676155090332

Token 316: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2664456789934775e-06
    2. 'ments' → logprob: -14.625000953674316
    3. 'points' → logprob: -15.500000953674316
    4. '[' → logprob: -15.625000953674316
    5. 'segments' → logprob: -15.875000953674316
    6. 'gs' → logprob: -16.375001907348633
    7. '[]' → logprob: -17.125001907348633
    8. 'ms' → logprob: -17.625001907348633
    9. 'seg' → logprob: -18.000001907348633
    10. 'se' → logprob: -18.625001907348633

Token 317: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05497165769338608
    2. ':
' → logprob: -2.929971694946289
    3. '   ' → logprob: -10.179971694946289
    4. ' in' → logprob: -10.304971694946289
    5. ' :' → logprob: -12.554971694946289
    6. '[' → logprob: -12.554971694946289
    7. 'in' → logprob: -13.554971694946289
    8. ':

' → logprob: -13.679971694946289
    9. '           ' → logprob: -13.804971694946289
    10. '=' → logprob: -13.929971694946289

Token 318: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011351839639246464
    2. '   ' → logprob: -5.261352062225342
    3. 'points' → logprob: -6.011352062225342
    4. ' points' → logprob: -6.261352062225342
    5. '       ' → logprob: -7.136352062225342
    6. ' for' → logprob: -7.761352062225342
    7. '(points' → logprob: -8.261351585388184
    8. '	points' → logprob: -8.511351585388184
    9. 'for' → logprob: -11.261351585388184
    10. '```' → logprob: -11.386351585388184

Token 319: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.31516367197036743
    2. 'points' (adapté à ' points') → logprob: -1.3151636123657227
    3. ' for' → logprob: -7.440163612365723
    4. '   ' → logprob: -7.690163612365723
    5. '       ' → logprob: -7.690163612365723
    6. '           ' → logprob: -8.190163612365723
    7. '	points' → logprob: -9.565163612365723
    8. 'for' → logprob: -10.065163612365723
    9. '(points' → logprob: -12.315163612365723
    10. '_points' → logprob: -13.440163612365723

Token 320: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.018171129748225212
    2. '.update' → logprob: -4.018171310424805
    3. '.' → logprob: -10.768171310424805
    4. ' .' → logprob: -16.393171310424805
    5. '|' → logprob: -18.893171310424805
    6. 'add' → logprob: -19.018171310424805
    7. ' |=' → logprob: -19.018171310424805
    8. '.dis' → logprob: -19.518171310424805
    9. '.ad' → logprob: -19.518171310424805
    10. 'update' → logprob: -20.268171310424805

Token 321: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00013166792632546276
    2. 's' → logprob: -9.125131607055664
    3. '(' → logprob: -10.750131607055664
    4. ' (' → logprob: -14.250131607055664
    5. ' s' → logprob: -14.625131607055664
    6. '((' → logprob: -16.125131607055664
    7. '(*' → logprob: -18.500131607055664
    8. '(se' → logprob: -18.625131607055664
    9. '{s' → logprob: -18.625131607055664
    10. '(
' → logprob: -18.750131607055664

Token 322: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.054500666621607e-06
    2. ' [' → logprob: -13.37500286102295
    3. '[
' → logprob: -14.75000286102295
    4. '][' → logprob: -15.12500286102295
    5. ''[' → logprob: -15.62500286102295
    6. ')[' → logprob: -16.250003814697266
    7. 's' → logprob: -16.250003814697266
    8. ')' → logprob: -16.375003814697266
    9. '
' → logprob: -16.625003814697266
    10. '0' → logprob: -16.875003814697266

Token 323: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8312570318812504e-05
    2. '[' → logprob: -11.375018119812012
    3. ' ' → logprob: -12.875018119812012
    4. '1' → logprob: -13.000018119812012
    5. '][' → logprob: -14.625018119812012
    6. '
' → logprob: -15.187518119812012
    7. '   ' → logprob: -15.437518119812012
    8. '-' → logprob: -16.000019073486328
    9. '#' → logprob: -16.250019073486328
    10. '(' → logprob: -16.312519073486328

Token 324: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002481842413544655
    2. ')
' → logprob: -6.002481937408447
    3. ' )' → logprob: -12.627481460571289
    4. ')}' → logprob: -14.252481460571289
    5. ')

' → logprob: -15.002481460571289
    6. '))' → logprob: -15.002481460571289
    7. ')#' → logprob: -15.002481460571289
    8. ')\
' → logprob: -15.002481460571289
    9. ');' → logprob: -15.627481460571289
    10. ' )
' → logprob: -16.00248146057129

Token 325: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12183348089456558
    2. ' points' → logprob: -2.996833562850952
    3. '<|end|>' → logprob: -3.371833562850952
    4. '       ' → logprob: -4.121833324432373
    5. '   ' → logprob: -5.246833324432373
    6. 'points' → logprob: -5.746833324432373
    7. '
' → logprob: -6.246833324432373
    8. ')' → logprob: -7.246833324432373
    9. ' ' → logprob: -7.371833324432373
    10. '(points' → logprob: -7.621833324432373

Token 326: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' (adapté à ' points') → logprob: -0.10020861029624939
    2. ' points' → logprob: -2.3502085208892822
    3. '	points' → logprob: -14.225208282470703
    4. 's' → logprob: -15.225208282470703
    5. '.points' → logprob: -15.350208282470703
    6. '
' → logprob: -15.475208282470703
    7. '           ' → logprob: -15.850208282470703
    8. '(points' → logprob: -15.975208282470703
    9. '       ' → logprob: -16.100208282470703
    10. 'point' → logprob: -16.600208282470703

Token 327: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0031857939902693033
    2. '.' → logprob: -5.753185749053955
    3. '.update' → logprob: -11.878186225891113
    4. 'add' → logprob: -14.253186225891113
    5. '.Add' → logprob: -15.503186225891113
    6. ' .' → logprob: -16.253185272216797
    7. '.remove' → logprob: -16.503185272216797
    8. '.append' → logprob: -16.753185272216797
    9. '.setdefault' → logprob: -16.753185272216797
    10. '<|end|>' → logprob: -17.753185272216797

Token 328: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -5.080963092041202e-06
    2. '(' → logprob: -12.250004768371582
    3. ' (' → logprob: -15.500004768371582
    4. 's' → logprob: -17.7500057220459
    5. '(
' → logprob: -18.0000057220459
    6. '(se' → logprob: -19.8750057220459
    7. ' s' → logprob: -20.1250057220459
    8. '((' → logprob: -20.5000057220459
    9. '('' → logprob: -24.1250057220459
    10. '(

' → logprob: -24.1250057220459

Token 329: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.8624639324116288e-06
    2. '[
' → logprob: -14.000001907348633
    3. 's' → logprob: -14.750001907348633
    4. ' [' → logprob: -15.375001907348633
    5. '1' → logprob: -15.875001907348633
    6. ')[' → logprob: -16.625001907348633
    7. ')' → logprob: -16.625001907348633
    8. '][' → logprob: -17.000001907348633
    9. '(' → logprob: -17.375001907348633
    10. '<|end|>' → logprob: -17.375001907348633

Token 330: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5048530030981055e-06
    2. '[' → logprob: -14.000001907348633
    3. '0' → logprob: -15.375001907348633
    4. ' ' → logprob: -16.125001907348633
    5. '
' → logprob: -16.625001907348633
    6. '```' → logprob: -16.875001907348633
    7. ']' → logprob: -17.750001907348633
    8. ')' → logprob: -18.250001907348633
    9. '   ' → logprob: -18.250001907348633
    10. '4' → logprob: -18.625001907348633

Token 331: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.282920129597187e-05
    2. ')
' → logprob: -11.750012397766113
    3. '])' → logprob: -13.125012397766113
    4. '))' → logprob: -13.500012397766113
    5. ' )' → logprob: -14.125012397766113
    6. '})' → logprob: -15.625012397766113
    7. '())' → logprob: -15.875012397766113
    8. '),' → logprob: -16.62501335144043
    9. ')}' → logprob: -16.62501335144043
    10. ']' → logprob: -16.75001335144043

Token 332: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28714436292648315
    2. '
' → logprob: -1.912144422531128
    3. '<|end|>' → logprob: -3.412144422531128
    4. ' for' → logprob: -3.912144422531128
    5. '   ' → logprob: -4.287144184112549
    6. ')' → logprob: -4.912144184112549
    7. '```' → logprob: -5.162144184112549
    8. ' points' → logprob: -5.162144184112549
    9. '        
' → logprob: -5.787144184112549
    10. ',' → logprob: -6.037144184112549

Token 333: ' #' (ID: 1069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.7119904160499573
    2. 'graph' → logprob: -1.0869903564453125
    3. 'points' → logprob: -2.7119903564453125
    4. '#' (adapté à ' #') → logprob: -3.4619903564453125
    5. '       ' → logprob: -3.4619903564453125
    6. 'edges' → logprob: -4.3369903564453125
    7. 'pts' → logprob: -4.9619903564453125
    8. ' graph' → logprob: -5.7119903564453125
    9. 'for' → logprob: -5.7119903564453125
    10. 'from' → logprob: -6.2119903564453125

Token 334: ' identify' (ID: 11410)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.6414722800254822
    2. 'adj' → logprob: -1.016472339630127
    3. 'points' → logprob: -2.766472339630127
    4. '#' → logprob: -4.266472339630127
    5. 'pts' → logprob: -4.766472339630127
    6. 'point' → logprob: -5.141472339630127
    7. 'for' → logprob: -5.391472339630127
    8. 'edges' → logprob: -5.516472339630127
    9. 'g' → logprob: -5.766472339630127
    10. 'pt' → logprob: -6.016472339630127

Token 335: ' street' (ID: 12901)
  Prédit: ' intersections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' intersections' → logprob: -1.1331067085266113
    2. 'inter' → logprob: -1.3831067085266113
    3. 'adj' → logprob: -2.2581067085266113
    4. 'edges' → logprob: -2.7581067085266113
    5. 'intersection' → logprob: -3.1331067085266113
    6. 'vertices' → logprob: -3.1331067085266113
    7. 'points' → logprob: -3.3831067085266113
    8. 'segments' → logprob: -3.6331067085266113
    9. 'neighbors' → logprob: -3.6331067085266113
    10. 'junction' → logprob: -4.133106708526611

Token 336: ' segments' (ID: 33749)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04742173105478287
    2. '_map' → logprob: -3.54742169380188
    3. '_points' → logprob: -4.672421932220459
    4. '_end' → logprob: -6.672421932220459
    5. '_graph' → logprob: -6.922421932220459
    6. 'ends' → logprob: -6.922421932220459
    7. '_names' → logprob: -7.047421932220459
    8. '_' → logprob: -7.422421932220459
    9. '_segments' → logprob: -7.422421932220459
    10. '_ids' → logprob: -7.922421932220459

Token 337: ':' (ID: 25)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.125811219215393
    2. '       ' → logprob: -1.250811219215393
    3. '#' → logprob: -2.2508111000061035
    4. '        
' → logprob: -2.8758111000061035
    5. ' edges' → logprob: -3.0008111000061035
    6. ',' → logprob: -3.2508111000061035
    7. 'edges' → logprob: -3.5008111000061035
    8. ' =' → logprob: -4.2508111000061035
    9. ' and' → logprob: -4.2508111000061035
    10. ' for' → logprob: -4.3758111000061035

Token 338: ' those' (ID: 2617)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.19614577293396
    2. 'adj' → logprob: -1.57114577293396
    3. 'edges' → logprob: -1.57114577293396
    4. ' adj' → logprob: -2.32114577293396
    5. ' graph' → logprob: -2.82114577293396
    6. 'points' → logprob: -3.07114577293396
    7. ' edges' → logprob: -3.69614577293396
    8. '#' → logprob: -4.446146011352539
    9. 'g' → logprob: -4.946146011352539
    10. 'for' → logprob: -5.321146011352539

Token 339: ' connected' (ID: 12079)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.29069751501083374
    2. 'that' → logprob: -1.6656975746154785
    3. ' connected' → logprob: -4.5406975746154785
    4. ' on' → logprob: -4.5406975746154785
    5. ' in' → logprob: -4.9156975746154785
    6. 'connected' → logprob: -5.6656975746154785
    7. ' lying' → logprob: -5.6656975746154785
    8. '   ' → logprob: -5.7906975746154785
    9. 'in' → logprob: -5.9156975746154785
    10. 'on' → logprob: -6.1656975746154785

Token 340: ' to' (ID: 316)
  Prédit: ' by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.6458238363265991
    2. 'by' → logprob: -1.6458238363265991
    3. ' to' → logprob: -2.6458239555358887
    4. 'points' → logprob: -2.6458239555358887
    5. 'to' → logprob: -3.0208239555358887
    6. ',' → logprob: -3.8958239555358887
    7. ' points' → logprob: -4.520823955535889
    8. ' at' → logprob: -4.895823955535889
    9. '_points' → logprob: -4.895823955535889
    10. 'segments' → logprob: -4.895823955535889

Token 341: ' multiple' (ID: 7598)
  Prédit: ' points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' points' → logprob: -1.3258646726608276
    2. 'points' → logprob: -1.5758646726608276
    3. ' intersections' → logprob: -2.325864791870117
    4. ' at' → logprob: -2.450864791870117
    5. 'each' → logprob: -2.700864791870117
    6. 'the' → logprob: -3.575864791870117
    7. 's' → logprob: -3.825864791870117
    8. 'a' → logprob: -3.825864791870117
    9. 'at' → logprob: -3.950864791870117
    10. ' endpoints' → logprob: -3.950864791870117

Token 342: ' segments' (ID: 33749)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.12869398295879364
    2. ' points' → logprob: -2.7536940574645996
    3. '<|end|>' → logprob: -3.3786940574645996
    4. 'segments' → logprob: -4.7536940574646
    5. 'se' → logprob: -5.1286940574646
    6. 'stre' → logprob: -5.7536940574646
    7. ' streets' → logprob: -7.0036940574646
    8. 'nodes' → logprob: -7.1286940574646
    9. 'edges' → logprob: -7.3786940574646
    10. 'lines' → logprob: -7.6286940574646

Token 343: ' at' (ID: 540)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.5358701348304749
    2. '
' → logprob: -1.78587007522583
    3. 'point' → logprob: -2.66087007522583
    4. ' points' → logprob: -3.28587007522583
    5. 'count' → logprob: -3.91087007522583
    6. '       ' → logprob: -4.03587007522583
    7. 'counts' → logprob: -4.03587007522583
    8. 'pts' → logprob: -4.41087007522583
    9. 'adj' → logprob: -5.03587007522583
    10. 'segments' → logprob: -5.28587007522583

Token 344: ' endpoints' (ID: 76454)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.9719821810722351
    2. 'a' → logprob: -1.5969822406768799
    3. ' points' → logprob: -1.8469822406768799
    4. ' a' → logprob: -1.9719822406768799
    5. 'each' → logprob: -2.97198224067688
    6. 'least' → logprob: -4.221982002258301
    7. ' each' → logprob: -4.596982002258301
    8. 'the' → logprob: -4.596982002258301
    9. 'point' → logprob: -5.221982002258301
    10. ' the' → logprob: -5.221982002258301

Token 345: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8386081457138062
    2. 'points' → logprob: -1.2136081457138062
    3. '       ' → logprob: -2.3386082649230957
    4. '#' → logprob: -3.2136082649230957
    5. '        
' → logprob: -3.8386082649230957
    6. 'adj' → logprob: -4.463608264923096
    7. ' endpoints' → logprob: -4.713608264923096
    8. 'edges' → logprob: -4.713608264923096
    9. ' points' → logprob: -4.713608264923096
    10. 'connections' → logprob: -4.713608264923096

Token 346: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5591902732849121
    2. 'points' → logprob: -1.434190273284912
    3. '
' → logprob: -2.184190273284912
    4. '        
' → logprob: -4.059190273284912
    5. 'counts' → logprob: -4.684190273284912
    6. 'adj' → logprob: -4.809190273284912
    7. '#' → logprob: -5.309190273284912
    8. 'connections' → logprob: -5.434190273284912
    9. ' points' → logprob: -5.809190273284912
    10. 'count' → logprob: -5.809190273284912

Token 347: ' adjacency' (ID: 177015)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -1.3609086275100708
    2. 'adj' → logprob: -1.9859086275100708
    3. 'points' → logprob: -2.1109085083007812
    4. 'deg' → logprob: -2.3609085083007812
    5. 'point' → logprob: -2.4859085083007812
    6. 'end' → logprob: -2.6109085083007812
    7. 'pt' → logprob: -3.2359085083007812
    8. 'degree' → logprob: -3.2359085083007812
    9. 'ends' → logprob: -3.3609085083007812
    10. 'conn' → logprob: -3.6109085083007812

Token 348: '_count' (ID: 7536)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023405270650982857
    2. ' =' → logprob: -3.7734053134918213
    3. '={}' → logprob: -8.773405075073242
    4. '={' → logprob: -12.773405075073242
    5. '=[]' → logprob: -14.148405075073242
    6. '[' → logprob: -14.898405075073242
    7. 's' → logprob: -15.273405075073242
    8. '.setdefault' → logprob: -16.023405075073242
    9. '_' → logprob: -16.148405075073242
    10. '={}
' → logprob: -16.148405075073242

Token 349: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07897207885980606
    2. ' =' → logprob: -2.578972101211548
    3. '={}' → logprob: -9.453971862792969
    4. '={' → logprob: -12.703971862792969
    5. '={}
' → logprob: -14.953971862792969
    6. ' ={' → logprob: -15.578971862792969
    7. '=dict' → logprob: -16.57897186279297
    8. '=[' → logprob: -16.95397186279297
    9. ' ' → logprob: -17.07897186279297
    10. '[' → logprob: -17.20397186279297

Token 350: 'default' (ID: 4211)
  Prédit: 'default'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -1.5048530030981055e-06
    2. ' defaultdict' → logprob: -13.875001907348633
    3. '{' → logprob: -15.750001907348633
    4. '{}' → logprob: -15.875001907348633
    5. '(default' → logprob: -16.000001907348633
    6. '"default' → logprob: -17.000001907348633
    7. '.default' → logprob: -17.500001907348633
    8. 'def' → logprob: -17.625001907348633
    9. ''default' → logprob: -18.875001907348633
    10. ' default' → logprob: -19.750001907348633

Token 351: 'dict' (ID: 20993)
  Prédit: 'dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -3.128163257315464e-07
    2. ' dict' → logprob: -15.25
    3. 'Dict' → logprob: -20.5
    4. '_dict' → logprob: -20.875
    5. 'list' → logprob: -22.125
    6. 'default' → logprob: -22.875
    7. '(dict' → logprob: -23.375
    8. 'def' → logprob: -24.875
    9. '   ' → logprob: -25.125
    10. 'dist' → logprob: -25.375

Token 352: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0009519561426714063
    2. 'int' → logprob: -7.000951766967773
    3. '(lambda' → logprob: -10.500951766967773
    4. '<int' → logprob: -12.000951766967773
    5. '[int' → logprob: -12.500951766967773
    6. '(' → logprob: -13.500951766967773
    7. ' (' → logprob: -14.500951766967773
    8. ',int' → logprob: -14.625951766967773
    9. 'lambda' → logprob: -15.000951766967773
    10. '=int' → logprob: -15.875951766967773

Token 353: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0789717435836792
    2. ')' → logprob: -2.5789718627929688
    3. ')
' → logprob: -10.078971862792969
    4. ')

' → logprob: -10.328971862792969
    5. ' )
' → logprob: -12.703971862792969
    6. '   ' → logprob: -13.828971862792969
    7. 'for' → logprob: -14.328971862792969
    8. '
' → logprob: -14.703971862792969
    9. '[' → logprob: -14.703971862792969
    10. '       ' → logprob: -14.953971862792969

Token 354: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1783878654241562
    2. ' for' → logprob: -1.9283878803253174
    3. '       ' → logprob: -4.053387641906738
    4. '<|end|>' → logprob: -7.553387641906738
    5. '   ' → logprob: -9.678387641906738
    6. '```' → logprob: -10.928387641906738
    7. '	for' → logprob: -12.053387641906738
    8. ')' → logprob: -12.053387641906738
    9. '        
' → logprob: -12.428387641906738
    10. ',' → logprob: -12.928387641906738

Token 355: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004629838280379772
    2. ' for' → logprob: -5.629629611968994
    3. '       ' → logprob: -6.879629611968994
    4. '   ' → logprob: -15.129630088806152
    5. '	for' → logprob: -15.504630088806152
    6. '```' → logprob: -17.004629135131836
    7. '        
' → logprob: -17.379629135131836
    8. '
' → logprob: -17.504629135131836
    9. '<|end|>' → logprob: -17.629629135131836
    10. 'For' → logprob: -17.879629135131836

Token 356: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.31413108110427856
    2. ' s' → logprob: -1.3141310214996338
    3. 'p' → logprob: -7.814131259918213
    4. ' p' → logprob: -8.314130783081055
    5. ' seg' → logprob: -8.814130783081055
    6. 'seg' → logprob: -9.689130783081055
    7. 'segment' → logprob: -12.439130783081055
    8. 'e' → logprob: -13.189130783081055
    9. ' segment' → logprob: -13.439130783081055
    10. ' e' → logprob: -14.314130783081055

Token 357: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023271916434168816
    2. 'in' → logprob: -3.7732717990875244
    3. 's' → logprob: -11.523271560668945
    4. ' ' → logprob: -11.648271560668945
    5. '   ' → logprob: -12.898271560668945
    6. 'import' → logprob: -13.648271560668945
    7. '	in' → logprob: -14.273271560668945
    8. '[' → logprob: -14.398271560668945
    9. 'In' → logprob: -14.398271560668945
    10. '_in' → logprob: -14.523271560668945

Token 358: ' seg' (ID: 3055)
  Prédit: ' seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' seg' → logprob: -0.4752613306045532
    2. 'se' → logprob: -0.9752613306045532
    3. 'seg' → logprob: -6.850261211395264
    4. ' se' → logprob: -9.725261688232422
    5. 's' → logprob: -10.225261688232422
    6. '(se' → logprob: -10.975261688232422
    7. '[' → logprob: -12.225261688232422
    8. '	se' → logprob: -13.100261688232422
    9. '(seg' → logprob: -13.350261688232422
    10. 'segments' → logprob: -14.600261688232422

Token 359: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -5.080963092041202e-06
    2. 'gs' → logprob: -13.250004768371582
    3. '[' → logprob: -14.750004768371582
    4. '{
' → logprob: -14.875004768371582
    5. 'ments' → logprob: -14.875004768371582
    6. 'ms' → logprob: -15.000004768371582
    7. '{' → logprob: -15.375004768371582
    8. '{s' → logprob: -15.875004768371582
    9. '[]' → logprob: -16.0000057220459
    10. ' s' → logprob: -16.2500057220459

Token 360: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2777888774871826
    2. ':' → logprob: -1.9027888774871826
    3. ' as' → logprob: -2.7777888774871826
    4. ' in' → logprob: -3.7777888774871826
    5. '[' → logprob: -5.527789115905762
    6. '   ' → logprob: -6.152789115905762
    7. 'in' → logprob: -7.152789115905762
    8. ' s' → logprob: -8.027789115905762
    9. 'as' → logprob: -8.402789115905762
    10. ',' → logprob: -8.652789115905762

Token 361: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08560160547494888
    2. '           ' → logprob: -2.585601568222046
    3. '       ' → logprob: -5.085601806640625
    4. ' for' → logprob: -8.085601806640625
    5. '```' → logprob: -9.085601806640625
    6. ' ' → logprob: -10.710601806640625
    7. 'for' → logprob: -10.960601806640625
    8. ' adjacency' → logprob: -11.335601806640625
    9. '[' → logprob: -12.210601806640625
    10. '``' → logprob: -12.585601806640625

Token 362: ' adjacency' (ID: 177015)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.000681457226164639
    2. ' adjacency' → logprob: -7.375681400299072
    3. '           ' → logprob: -10.87568187713623
    4. 'for' → logprob: -11.00068187713623
    5. '   ' → logprob: -11.12568187713623
    6. 'a' → logprob: -13.00068187713623
    7. '       ' → logprob: -13.12568187713623
    8. 'x' → logprob: -16.125680923461914
    9. ' for' → logprob: -16.625680923461914
    10. '```' → logprob: -17.125680923461914

Token 363: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.625000953674316
    3. '[_' → logprob: -16.125
    4. 'count' → logprob: -16.875
    5. '_COUNT' → logprob: -17.375
    6. '   ' → logprob: -17.5
    7. '[count' → logprob: -17.625
    8. '_counts' → logprob: -17.875
    9. '[s' → logprob: -18.0
    10. 'Count' → logprob: -18.125

Token 364: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -1.1875571544806007e-05
    2. '[' → logprob: -12.125011444091797
    3. 's' → logprob: -12.125011444091797
    4. '
' → logprob: -15.500011444091797
    5. ' [' → logprob: -15.625011444091797
    6. '[(' → logprob: -15.875011444091797
    7. '[S' → logprob: -16.500011444091797
    8. '

' → logprob: -16.625011444091797
    9. '[
' → logprob: -17.375011444091797
    10. '}[' → logprob: -18.000011444091797

Token 365: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.7994282795116305e-05
    2. ' [' → logprob: -10.62504768371582
    3. '][' → logprob: -11.50004768371582
    4. ']' → logprob: -12.25004768371582
    5. '0' → logprob: -12.87504768371582
    6. '[
' → logprob: -13.00004768371582
    7. '1' → logprob: -14.00004768371582
    8. '
' → logprob: -14.12504768371582
    9. '```' → logprob: -14.62504768371582
    10. 's' → logprob: -15.18754768371582

Token 366: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002398938377154991
    2. '[' → logprob: -8.500240325927734
    3. '(' → logprob: -11.125240325927734
    4. '1' → logprob: -11.750240325927734
    5. ' ' → logprob: -11.875240325927734
    6. '   ' → logprob: -13.562740325927734
    7. '{' → logprob: -13.687740325927734
    8. '```' → logprob: -14.625240325927734
    9. ']' → logprob: -14.812740325927734
    10. '#' → logprob: -15.000240325927734

Token 367: ']]' (ID: 8928)
  Prédit: ']+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.16024728119373322
    2. ']' → logprob: -1.9102473258972168
    3. ']+' → logprob: -10.910246849060059
    4. ' ]' → logprob: -12.785246849060059
    5. ']]' → logprob: -13.660246849060059
    6. '[' → logprob: -15.660246849060059
    7. '+=' → logprob: -16.160247802734375
    8. '   ' → logprob: -16.285247802734375
    9. ']=' → logprob: -16.410247802734375
    10. ']>=' → logprob: -16.535247802734375

Token 368: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.006774465087801218
    2. ' +=' → logprob: -5.006774425506592
    3. ']+=' → logprob: -9.75677490234375
    4. '   ' → logprob: -13.75677490234375
    5. '+' → logprob: -16.63177490234375
    6. '[' → logprob: -17.13177490234375
    7. '+='' → logprob: -17.50677490234375
    8. '=' → logprob: -17.63177490234375
    9. '+=(' → logprob: -18.00677490234375
    10. '```' → logprob: -18.50677490234375

Token 369: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.6240566083070007e-06
    2. ' ' → logprob: -13.375001907348633
    3. '   ' → logprob: -21.500001907348633
    4. '１' → logprob: -22.312501907348633
    5. '۱' → logprob: -22.437501907348633
    6. 's' → logprob: -22.562501907348633
    7. '2' → logprob: -22.750001907348633
    8. '
' → logprob: -22.875001907348633
    9. '```' → logprob: -23.187501907348633
    10. 'se' → logprob: -23.187501907348633

Token 370: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00025394887779839337
    2. '       ' → logprob: -8.500253677368164
    3. '   ' → logprob: -10.125253677368164
    4. '<|end|>' → logprob: -12.500253677368164
    5. '
' → logprob: -13.000253677368164
    6. ' ' → logprob: -13.750253677368164
    7. 'se' → logprob: -14.250253677368164
    8. '               ' → logprob: -14.500253677368164
    9. '          ' → logprob: -15.250253677368164
    10. 's' → logprob: -15.375253677368164

Token 371: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002604075940325856
    2. '       ' → logprob: -6.377604007720947
    3. '   ' → logprob: -7.127604007720947
    4. '
' → logprob: -10.502604484558105
    5. '          ' → logprob: -11.252604484558105
    6. 'se' → logprob: -11.377604484558105
    7. '         ' → logprob: -11.752604484558105
    8. 'adj' → logprob: -11.877604484558105
    9. 'for' → logprob: -12.002604484558105
    10. ',' → logprob: -12.127604484558105

Token 372: ' adjacency' (ID: 177015)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.018370002508163452
    2. ' adjacency' → logprob: -4.143370151519775
    3. '           ' → logprob: -6.393370151519775
    4. 's' → logprob: -7.518370151519775
    5. '   ' → logprob: -9.518369674682617
    6. 'se' → logprob: -10.893369674682617
    7. '       ' → logprob: -11.018369674682617
    8. ' s' → logprob: -12.143369674682617
    9. '               ' → logprob: -14.393369674682617
    10. ' adj' → logprob: -14.393369674682617

Token 373: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.0280383548888494e-06
    2. '[s' → logprob: -14.500000953674316
    3. '[' → logprob: -15.500000953674316
    4. '_' → logprob: -16.375001907348633
    5. '_counts' → logprob: -16.500001907348633
    6. 'count' → logprob: -16.625001907348633
    7. 'Count' → logprob: -17.250001907348633
    8. '_COUNT' → logprob: -17.875001907348633
    9. '
' → logprob: -18.750001907348633
    10. '[_' → logprob: -19.125001907348633

Token 374: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -9.372294698550832e-06
    2. '[' → logprob: -11.625009536743164
    3. '[
' → logprob: -15.875009536743164
    4. 's' → logprob: -16.250009536743164
    5. '(s' → logprob: -17.000009536743164
    6. ' [' → logprob: -17.750009536743164
    7. '   ' → logprob: -18.250009536743164
    8. ' s' → logprob: -18.875009536743164
    9. '<s' → logprob: -19.250009536743164
    10. '	s' → logprob: -19.375009536743164

Token 375: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.008129963040119e-06
    2. '1' → logprob: -12.625003814697266
    3. ' [' → logprob: -15.250003814697266
    4. '[
' → logprob: -15.625003814697266
    5. '```' → logprob: -16.625003814697266
    6. ']' → logprob: -16.750003814697266
    7. '][' → logprob: -16.875003814697266
    8. '{' → logprob: -17.625003814697266
    9. ' ' → logprob: -17.750003814697266
    10. '   ' → logprob: -18.000003814697266

Token 376: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -15.000000953674316
    3. '
' → logprob: -15.750000953674316
    4. '```' → logprob: -16.5
    5. '   ' → logprob: -16.875
    6. '0' → logprob: -16.875
    7. ']' → logprob: -17.5
    8. '[' → logprob: -17.5
    9. '' → logprob: -17.8125
    10. '۱' → logprob: -19.125

Token 377: ']]' (ID: 8928)
  Prédit: ']+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']+=' → logprob: -0.47487568855285645
    2. ']' → logprob: -0.9748756885528564
    3. ']+' → logprob: -7.224875450134277
    4. ' ]' → logprob: -9.724875450134277
    5. ']]' → logprob: -12.349875450134277
    6. ')' → logprob: -13.849875450134277
    7. '']' → logprob: -13.974875450134277
    8. ')]' → logprob: -14.474875450134277
    9. ']>=' → logprob: -14.724875450134277
    10. '   ' → logprob: -14.849875450134277

Token 378: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0003472633252386004
    2. ' +=' → logprob: -8.000347137451172
    3. ']+=' → logprob: -11.375347137451172
    4. '+' → logprob: -15.750347137451172
    5. '   ' → logprob: -17.250347137451172
    6. '=' → logprob: -17.375347137451172
    7. '+=(' → logprob: -17.875347137451172
    8. '+='' → logprob: -18.000347137451172
    9. '+="' → logprob: -19.000347137451172
    10. '1' → logprob: -19.125347137451172

Token 379: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. '<|end|>' → logprob: -15.750001907348633
    4. '```' → logprob: -17.875001907348633
    5. '>' → logprob: -18.125001907348633
    6. 's' → logprob: -19.375001907348633
    7. ')' → logprob: -19.875001907348633
    8. '   ' → logprob: -19.875001907348633
    9. '+' → logprob: -20.000001907348633
    10. '
' → logprob: -20.125001907348633

Token 380: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1716659814119339
    2. '<|end|>' → logprob: -2.171665906906128
    3. '
' → logprob: -3.296665906906128
    4. '        
' → logprob: -5.296666145324707
    5. '<|end|>' → logprob: -7.421666145324707
    6. ' points' → logprob: -8.046666145324707
    7. ',' → logprob: -8.421666145324707
    8. '  
' → logprob: -9.046666145324707
    9. '#' → logprob: -9.296666145324707
    10. ' edges' → logprob: -10.296666145324707

Token 381: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0920967310667038
    2. '<|end|>' → logprob: -2.5920968055725098
    3. '
' → logprob: -4.46709680557251
    4. '        
' → logprob: -7.46709680557251
    5. '<|end|>' → logprob: -7.84209680557251
    6. '```' → logprob: -8.967096328735352
    7. ' for' → logprob: -8.967096328735352
    8. '   ' → logprob: -9.467096328735352
    9. '#' → logprob: -9.842096328735352
    10. 'for' → logprob: -10.342096328735352

Token 382: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25402355194091797
    2. 'graph' → logprob: -2.129023551940918
    3. ' graph' → logprob: -3.754023551940918
    4. 'adj' → logprob: -3.754023551940918
    5. 'edges' → logprob: -4.379023551940918
    6. '
' → logprob: -4.379023551940918
    7. '#' (adapté à ' #') → logprob: -4.754023551940918
    8. ' edges' → logprob: -5.004023551940918
    9. '        
' → logprob: -5.879023551940918
    10. 'points' → logprob: -6.004023551940918

Token 383: ' categorize' (ID: 197421)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.3172975778579712
    2. 'junction' → logprob: -2.3172974586486816
    3. 'adj' → logprob: -3.1922974586486816
    4. '#' → logprob: -3.4422974586486816
    5. 'inter' → logprob: -3.5672974586486816
    6. 'nodes' → logprob: -4.567297458648682
    7. 'points' → logprob: -4.567297458648682
    8. 'vertices' → logprob: -4.817297458648682
    9. ' graph' → logprob: -5.192297458648682
    10. 'g' → logprob: -5.442297458648682

Token 384: ' edges' (ID: 22569)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.8711740970611572
    2. 'junction' → logprob: -1.1211740970611572
    3. 'inter' → logprob: -2.4961740970611572
    4. 'intersection' → logprob: -3.8711740970611572
    5. 'end' → logprob: -3.9961740970611572
    6. 'nodes' → logprob: -4.371173858642578
    7. ' junction' → logprob: -4.496173858642578
    8. 'important' → logprob: -4.496173858642578
    9. 'segments' → logprob: -4.621173858642578
    10. 'vertices' → logprob: -5.121173858642578

Token 385: ' as' (ID: 472)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.18969744443893433
    2. ' edges' → logprob: -2.064697504043579
    3. '       ' → logprob: -3.189697504043579
    4. 'edge' → logprob: -6.939697265625
    5. '
' → logprob: -7.439697265625
    6. '=' → logprob: -7.439697265625
    7. ' =' → logprob: -7.689697265625
    8. ',' → logprob: -7.814697265625
    9. 'graph' → logprob: -7.814697265625
    10. '_edges' → logprob: -8.189697265625

Token 386: ' street' (ID: 12901)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6208901405334473
    2. '"' → logprob: -1.3708901405334473
    3. 'straight' → logprob: -2.4958901405334473
    4. 'street' → logprob: -4.120890140533447
    5. 'either' → logprob: -4.245890140533447
    6. ' either' → logprob: -4.620890140533447
    7. 'junction' → logprob: -4.745890140533447
    8. ' straight' → logprob: -4.870890140533447
    9. 'important' → logprob: -4.995890140533447
    10. ' '' → logprob: -5.370890140533447

Token 387: ' or' (ID: 503)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.6197734475135803
    2. 's' → logprob: -0.8697734475135803
    3. ' =' → logprob: -3.9947733879089355
    4. '=' → logprob: -4.3697733879089355
    5. '_' → logprob: -5.4947733879089355
    6. '_segments' → logprob: -5.8697733879089355
    7. ',' → logprob: -6.4947733879089355
    8. 'edges' → logprob: -6.7447733879089355
    9. '_or' → logprob: -7.6197733879089355
    10. '_s' → logprob: -7.6197733879089355

Token 388: ' sign' (ID: 2232)
  Prédit: ' alley'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' alley' → logprob: -0.8686046600341797
    2. 'path' → logprob: -2.1186046600341797
    3. ' path' → logprob: -2.6186046600341797
    4. 'al' → logprob: -2.9936046600341797
    5. 'non' → logprob: -3.1186046600341797
    6. ' highway' → logprob: -3.7436046600341797
    7. 'foot' → logprob: -3.9936046600341797
    8. ' non' → logprob: -3.9936046600341797
    9. 'connector' → logprob: -3.9936046600341797
    10. ' corridor' → logprob: -4.36860466003418

Token 389: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.325708270072937
    2. ' edges' → logprob: -1.950708270072937
    3. 'edges' → logprob: -2.0757083892822266
    4. ',' → logprob: -5.075708389282227
    5. '_edges' → logprob: -6.450708389282227
    6. 's' → logprob: -7.200708389282227
    7. ':' → logprob: -7.575708389282227
    8. '(edges' → logprob: -8.325708389282227
    9. '.edges' → logprob: -8.825708389282227
    10. '
' → logprob: -9.075708389282227

Token 390: '       ' (ID: 309)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.20756807923316956
    2. ' street' → logprob: -2.3325681686401367
    3. 'edges' → logprob: -3.3325681686401367
    4. ' for' → logprob: -3.4575681686401367
    5. '       ' → logprob: -4.457568168640137
    6. ' streets' → logprob: -5.707568168640137
    7. ' graph' → logprob: -6.332568168640137
    8. 'street' → logprob: -6.707568168640137
    9. ' sign' → logprob: -6.832568168640137
    10. 'for' → logprob: -6.832568168640137

Token 391: ' #' (ID: 1069)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.05764435604214668
    2. 'graph' → logprob: -2.9326443672180176
    3. 'adj' → logprob: -7.057644367218018
    4. ' edges' → logprob: -7.557644367218018
    5. 'sign' → logprob: -7.807644367218018
    6. 'g' → logprob: -8.30764389038086
    7. 'street' → logprob: -8.30764389038086
    8. 'edge' → logprob: -8.43264389038086
    9. 'stre' → logprob: -9.68264389038086
    10. 'for' → logprob: -9.93264389038086

Token 392: ' streets' (ID: 25360)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.10149594396352768
    2. 'graph' → logprob: -2.8514959812164307
    3. ' edges' → logprob: -3.7264959812164307
    4. 'street' → logprob: -5.851495742797852
    5. '#' → logprob: -5.976495742797852
    6. 'sign' → logprob: -6.101495742797852
    7. 'edge' → logprob: -6.226495742797852
    8. ' graph' → logprob: -6.601495742797852
    9. 'adj' → logprob: -6.601495742797852
    10. ' street' → logprob: -7.351495742797852

Token 393: ':' (ID: 25)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.18649226427078247
    2. '=' → logprob: -2.4364922046661377
    3. '_st' → logprob: -2.8114922046661377
    4. '_edges' → logprob: -4.186492443084717
    5. ',' → logprob: -5.811492443084717
    6. 'stre' → logprob: -6.811492443084717
    7. 'edges' → logprob: -7.311492443084717
    8. ':' → logprob: -8.061491966247559
    9. '=[]' → logprob: -8.061491966247559
    10. '_' → logprob: -8.061491966247559

Token 394: ' endpoints' (ID: 76454)
  Prédit: ' street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' street' → logprob: -0.5322920680046082
    2. 'street' → logprob: -2.032292127609253
    3. ' edges' → logprob: -2.282292127609253
    4. '[]' → logprob: -3.032292127609253
    5. ' streets' → logprob: -3.282292127609253
    6. 'edges' → logprob: -3.782292127609253
    7. ' [' → logprob: -3.907292127609253
    8. 'for' → logprob: -4.407291889190674
    9. ' for' → logprob: -4.532291889190674
    10. '[' → logprob: -4.657291889190674

Token 395: ' have' (ID: 679)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.3866080343723297
    2. ' with' → logprob: -1.5116080045700073
    3. 'connected' → logprob: -3.386608123779297
    4. ' connected' → logprob: -3.886608123779297
    5. ' that' → logprob: -4.386608123779297
    6. 'if' → logprob: -4.511608123779297
    7. 'that' → logprob: -4.761608123779297
    8. 'where' → logprob: -5.886608123779297
    9. ')' → logprob: -5.886608123779297
    10. ' if' → logprob: -5.886608123779297

Token 396: ' adjacency' (ID: 177015)
  Prédit: ' adjacency'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adjacency' → logprob: -0.5231693387031555
    2. 'adj' → logprob: -0.8981693387031555
    3. ' adj' → logprob: -10.89816951751709
    4. '>' → logprob: -10.89816951751709
    5. ' ' → logprob: -13.64816951751709
    6. '   ' → logprob: -13.64816951751709
    7. 'Adj' → logprob: -13.89816951751709
    8. 'degree' → logprob: -14.02316951751709
    9. ' >' → logprob: -14.77316951751709
    10. '>=' → logprob: -14.89816951751709

Token 397: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0047516957856714725
    2. 'count' → logprob: -5.379751682281494
    3. '>' → logprob: -9.504752159118652
    4. ' count' → logprob: -10.754752159118652
    5. '_counts' → logprob: -11.004752159118652
    6. '>=' → logprob: -12.004752159118652
    7. 's' → logprob: -12.754752159118652
    8. 'counts' → logprob: -12.879752159118652
    9. '   ' → logprob: -13.254752159118652
    10. ' counts' → logprob: -13.754752159118652

Token 398: '>=' (ID: 20974)
  Prédit: '[s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.3755075931549072
    2. '>' → logprob: -1.3755075931549072
    3. '>=' → logprob: -2.8755075931549072
    4. ' >' → logprob: -6.500507354736328
    5. '[' → logprob: -7.000507354736328
    6. ' >=' → logprob: -7.125507354736328
    7. '>s' → logprob: -7.750507354736328
    8. 's' → logprob: -8.625507354736328
    9. 'greater' → logprob: -10.250507354736328
    10. '≥' → logprob: -10.625507354736328

Token 399: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.65707261255011e-06
    2. ' ' → logprob: -12.125008583068848
    3. '3' → logprob: -13.250008583068848
    4. '1' → logprob: -13.750008583068848
    5. '
' → logprob: -15.625008583068848
    6. '>' → logprob: -16.250009536743164
    7. '   ' → logprob: -16.500009536743164
    8. '```' → logprob: -16.875009536743164
    9. '[' → logprob: -18.000009536743164
    10. '

' → logprob: -18.062509536743164

Token 400: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22778336703777313
    2. '
' → logprob: -2.727783441543579
    3. ',' → logprob: -3.102783441543579
    4. '<|end|>' → logprob: -3.352783441543579
    5. ' and' → logprob: -3.477783441543579
    6. ' for' → logprob: -4.227783203125
    7. ' (' → logprob: -5.727783203125
    8. 's' → logprob: -5.977783203125
    9. 'for' → logprob: -6.727783203125
    10. '<|end|>' → logprob: -6.852783203125

Token 401: 'all' (ID: 586)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07679291069507599
    2. 'and' → logprob: -3.4517929553985596
    3. ' and' → logprob: -3.7017929553985596
    4. ')
' → logprob: -4.7017927169799805
    5. ' )' → logprob: -5.0767927169799805
    6. '2' → logprob: -7.3267927169799805
    7. '),' → logprob: -7.5767927169799805
    8. '1' → logprob: -8.07679271697998
    9. '<|end|>' → logprob: -8.32679271697998
    10. ' )
' → logprob: -8.82679271697998

Token 402: ' have' (ID: 679)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02596467360854149
    2. '),' → logprob: -3.9009647369384766
    3. ' )' → logprob: -5.650964736938477
    4. ')
' → logprob: -7.525964736938477
    5. ' for' → logprob: -8.525964736938477
    6. ' edges' → logprob: -8.525964736938477
    7. '       ' → logprob: -9.025964736938477
    8. ',' → logprob: -9.275964736938477
    9. ' ),' → logprob: -9.275964736938477
    10. ' points' → logprob: -9.400964736938477

Token 403: ' at' (ID: 540)
  Prédit: ' at'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' at' → logprob: -0.6169945597648621
    2. 'at' → logprob: -1.4919946193695068
    3. ' adjacency' → logprob: -2.616994619369507
    4. '1' → logprob: -3.116994619369507
    5. 'adj' → logprob: -3.116994619369507
    6. ')' → logprob: -3.491994619369507
    7. '>=' → logprob: -3.991994619369507
    8. ' ' → logprob: -5.741994380950928
    9. ' >=' → logprob: -6.116994380950928
    10. '),' → logprob: -6.241994380950928

Token 404: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.04744004085659981
    2. ' least' → logprob: -3.4224400520324707
    3. '1' → logprob: -4.297440052032471
    4. 'lease' → logprob: -10.422439575195312
    5. '2' → logprob: -10.422439575195312
    6. 'Least' → logprob: -10.547439575195312
    7. '```' → logprob: -13.172439575195312
    8. '0' → logprob: -13.297439575195312
    9. 'lest' → logprob: -13.547439575195312
    10. 'le' → logprob: -13.922439575195312

Token 405: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01001589372754097
    2. ' ' → logprob: -4.760015964508057
    3. '2' → logprob: -6.760015964508057
    4. ' one' → logprob: -8.635015487670898
    5. 'one' → logprob: -10.760015487670898
    6. ')' → logprob: -11.135015487670898
    7. '```' → logprob: -11.760015487670898
    8. '   ' → logprob: -12.510015487670898
    9. '0' → logprob: -12.635015487670898
    10. '),' → logprob: -13.260015487670898

Token 406: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016606207937002182
    2. '2' → logprob: -4.141606330871582
    3. ' ' → logprob: -7.516606330871582
    4. '```' → logprob: -12.016606330871582
    5. '0' → logprob: -12.141606330871582
    6. '   ' → logprob: -12.641606330871582
    7. '
' → logprob: -12.641606330871582
    8. '>' → logprob: -13.016606330871582
    9. ' one' → logprob: -13.704106330871582
    10. 'one' → logprob: -13.891606330871582

Token 407: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05489650368690491
    2. '),' → logprob: -3.054896593093872
    3. ',' → logprob: -5.179896354675293
    4. ' )' → logprob: -7.929896354675293
    5. ' but' → logprob: -9.679896354675293
    6. ' anyway' → logprob: -9.804896354675293
    7. ' by' → logprob: -10.304896354675293
    8. ' for' → logprob: -10.429896354675293
    9. ')
' → logprob: -10.679896354675293
    10. ' ),' → logprob: -11.554896354675293

Token 408: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05789177864789963
    2. '<|end|>' → logprob: -3.307891845703125
    3. ' for' → logprob: -4.682891845703125
    4. ',' → logprob: -5.557891845703125
    5. '#' → logprob: -6.182891845703125
    6. 'edges' → logprob: -6.807891845703125
    7. ' edges' → logprob: -7.057891845703125
    8. 'for' → logprob: -7.307891845703125
    9. ' and' → logprob: -8.057891845703125
    10. 's' → logprob: -8.182891845703125

Token 409: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2946552038192749
    2. '#' (adapté à ' #') → logprob: -2.2946553230285645
    3. 'edges' → logprob: -2.6696553230285645
    4. ' edges' → logprob: -3.5446553230285645
    5. '
' → logprob: -3.7946553230285645
    6. '<|end|>' → logprob: -3.9196553230285645
    7. ' for' → logprob: -5.9196553230285645
    8. ',' → logprob: -5.9196553230285645
    9. 'sign' → logprob: -6.2946553230285645
    10. '        
' → logprob: -6.4196553230285645

Token 410: ' signs' (ID: 17424)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.25535115599632263
    2. '#' → logprob: -1.630351185798645
    3. ' signs' → logprob: -3.6303510665893555
    4. '
' → logprob: -7.3803510665893555
    5. 'for' → logprob: -7.6303510665893555
    6. ' #' → logprob: -8.005351066589355
    7. '       ' → logprob: -8.130351066589355
    8. 'edges' → logprob: -8.255351066589355
    9. 'stre' → logprob: -8.380351066589355
    10. ' sign' → logprob: -8.380351066589355

Token 411: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022821201011538506
    2. ' =' → logprob: -4.272821426391602
    3. '=' → logprob: -5.022821426391602
    4. 's' → logprob: -7.647821426391602
    5. '_points' → logprob: -8.022821426391602
    6. ' endpoints' → logprob: -8.147821426391602
    7. '_end' → logprob: -8.522821426391602
    8. '=[]' → logprob: -9.022821426391602
    9. '_edges' → logprob: -9.022821426391602
    10. 'points' → logprob: -9.147821426391602

Token 412: ' one' (ID: 1001)
  Prédit: ' endpoints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' endpoints' → logprob: -0.15044817328453064
    2. ' for' → logprob: -3.0254480838775635
    3. ' points' → logprob: -3.4004480838775635
    4. 'for' → logprob: -3.9004480838775635
    5. ' adjacency' → logprob: -5.025448322296143
    6. 'points' → logprob: -5.025448322296143
    7. 'end' → logprob: -5.400448322296143
    8. ' those' → logprob: -5.525448322296143
    9. ' edges' → logprob: -5.900448322296143
    10. '#' → logprob: -6.025448322296143

Token 413: ' endpoint' (ID: 29703)
  Prédit: ' endpoint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' endpoint' → logprob: -0.2348247617483139
    2. 'endpoint' → logprob: -1.609824776649475
    3. ' of' → logprob: -5.7348246574401855
    4. '_endpoint' → logprob: -6.2348246574401855
    5. ' or' → logprob: -6.7348246574401855
    6. ' end' → logprob: -7.3598246574401855
    7. 'end' → logprob: -7.8598246574401855
    8. ' endpoints' → logprob: -7.8598246574401855
    9. 'point' → logprob: -8.484825134277344
    10. ' with' → logprob: -8.484825134277344

Token 414: ' touches' (ID: 45060)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.9777286052703857
    2. 'with' → logprob: -1.8527286052703857
    3. ' has' → logprob: -1.8527286052703857
    4. 's' → logprob: -2.3527286052703857
    5. 'has' → logprob: -2.7277286052703857
    6. ' having' → logprob: -3.4777286052703857
    7. '_count' → logprob: -3.9777286052703857
    8. '   ' → logprob: -4.477728843688965
    9. 'have' → logprob: -4.477728843688965
    10. 'count' → logprob: -4.852728843688965

Token 415: ' exactly' (ID: 9707)
  Prédit: ' adjacency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adjacency' → logprob: -1.316367506980896
    2. ' only' → logprob: -1.441367506980896
    3. ' points' → logprob: -2.6913676261901855
    4. ' an' → logprob: -2.9413676261901855
    5. ' with' → logprob: -3.0663676261901855
    6. 's' → logprob: -3.0663676261901855
    7. ' a' → logprob: -3.3163676261901855
    8. '0' → logprob: -3.3163676261901855
    9. ' another' → logprob: -3.5663676261901855
    10. 'a' → logprob: -3.8163676261901855

Token 416: ' one' (ID: 1001)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014994099736213684
    2. '2' → logprob: -4.889994144439697
    3. ' ' → logprob: -5.139994144439697
    4. '0' → logprob: -6.639994144439697
    5. 'one' → logprob: -9.514993667602539
    6. '=' → logprob: -9.889993667602539
    7. ' one' → logprob: -10.139993667602539
    8. '   ' → logprob: -11.264993667602539
    9. '==' → logprob: -12.389993667602539
    10. '>' → logprob: -13.014993667602539

Token 417: ' street' (ID: 12901)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 418: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3187386095523834
    2. 'edges' → logprob: -1.818738579750061
    3. ' edges' → logprob: -2.3187386989593506
    4. '<|end|>' → logprob: -5.5687384605407715
    5. ',' → logprob: -6.6937384605407715
    6. '#' → logprob: -6.6937384605407715
    7. '        
' → logprob: -6.8187384605407715
    8. '_edges' → logprob: -7.3187384605407715
    9. '(edges' → logprob: -7.3187384605407715
    10. '
' → logprob: -7.4437384605407715

Token 419: ' other' (ID: 1273)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6440625786781311
    2. '<|end|>' → logprob: -1.2690625190734863
    3. '       ' → logprob: -3.2690625190734863
    4. ' and' → logprob: -3.2690625190734863
    5. ' #' → logprob: -3.3940625190734863
    6. 'and' → logprob: -3.5190625190734863
    7. ' but' → logprob: -3.6440625190734863
    8. ' ' → logprob: -5.269062519073486
    9. '<|end|>' → logprob: -5.769062519073486
    10. 'but' → logprob: -5.894062519073486

Token 420: ' is' (ID: 382)
  Prédit: ' endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' endpoint' → logprob: -0.3508715331554413
    2. 'endpoint' → logprob: -1.2258715629577637
    3. '_endpoint' → logprob: -6.600871562957764
    4. ' touches' → logprob: -7.850871562957764
    5. ' has' → logprob: -8.225871086120605
    6. ' ' → logprob: -9.600871086120605
    7. ' is' → logprob: -9.850871086120605
    8. ' endpoints' → logprob: -9.975871086120605
    9. ' end' → logprob: -10.350871086120605
    10. 'end' → logprob: -10.350871086120605

Token 421: ' open' (ID: 2494)
  Prédit: ' exactly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' exactly' → logprob: -0.6375278830528259
    2. ' not' → logprob: -2.1375279426574707
    3. 'exact' → logprob: -2.1375279426574707
    4. 'adj' → logprob: -3.0125279426574707
    5. 'not' → logprob: -3.2625279426574707
    6. ' a' → logprob: -3.7625279426574707
    7. ' adjacency' → logprob: -4.137527942657471
    8. ' ' → logprob: -4.262527942657471
    9. 'a' → logprob: -4.387527942657471
    10. '1' → logprob: -4.762527942657471

Token 422: '.
' (ID: 558)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 423: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5775045156478882
    2. '<|end|>' → logprob: -1.7025045156478882
    3. ' for' → logprob: -1.8275045156478882
    4. 'edges' → logprob: -3.2025046348571777
    5. ' edges' → logprob: -3.8275046348571777
    6. 'for' → logprob: -3.8275046348571777
    7. '#' → logprob: -5.327504634857178
    8. 'sign' → logprob: -7.202504634857178
    9. '<|end|>' → logprob: -7.202504634857178
    10. '        
' → logprob: -7.452504634857178

Token 424: ' #' (ID: 1069)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -0.8662158250808716
    2. 'edges' → logprob: -0.9912158250808716
    3. '       ' → logprob: -2.116215705871582
    4. 'graph' → logprob: -3.491215705871582
    5. ' graph' → logprob: -3.616215705871582
    6. '#' (adapté à ' #') → logprob: -4.366215705871582
    7. ' for' → logprob: -4.616215705871582
    8. 'for' → logprob: -5.866215705871582
    9. '        
' → logprob: -6.741215705871582
    10. 'sign' → logprob: -7.491215705871582

Token 425: ' We' (ID: 1416)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.6855984330177307
    2. ' edges' → logprob: -1.560598373413086
    3. ' for' → logprob: -2.185598373413086
    4. 'for' → logprob: -3.060598373413086
    5. '       ' → logprob: -3.185598373413086
    6. 'graph' → logprob: -3.435598373413086
    7. '#' → logprob: -3.435598373413086
    8. ' graph' → logprob: -4.685598373413086
    9. 'sign' → logprob: -6.060598373413086
    10. 'adj' → logprob: -6.310598373413086

Token 426: ' can' (ID: 665)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6474292278289795
    2. ' continue' → logprob: -0.8974292278289795
    3. ' need' → logprob: -3.7724292278289795
    4. 'need' → logprob: -3.8974292278289795
    5. ''ll' → logprob: -4.397429466247559
    6. 'll' → logprob: -5.522429466247559
    7. 're' → logprob: -5.647429466247559
    8. ' can' → logprob: -6.772429466247559
    9. '#' → logprob: -7.147429466247559
    10. 'can' → logprob: -7.647429466247559

Token 427: ' define' (ID: 13174)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.017303572967648506
    2. ' continue' → logprob: -4.517303466796875
    3. 'for' → logprob: -6.392303466796875
    4. '#' → logprob: -6.767303466796875
    5. 'process' → logprob: -6.767303466796875
    6. 'def' → logprob: -8.017303466796875
    7. 'use' → logprob: -8.517303466796875
    8. 'skip' → logprob: -8.892303466796875
    9. 'consider' → logprob: -9.017303466796875
    10. 'build' → logprob: -9.267303466796875

Token 428: ' that' (ID: 484)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.12012849003076553
    2. 'graph' → logprob: -3.2451283931732178
    3. 'street' → logprob: -3.3701283931732178
    4. 'stre' → logprob: -4.620128631591797
    5. 'sign' → logprob: -4.620128631591797
    6. 'edge' → logprob: -5.120128631591797
    7. 'def' → logprob: -5.245128631591797
    8. ' edges' → logprob: -5.495128631591797
    9. '#' → logprob: -6.995128631591797
    10. ' streets' → logprob: -7.245128631591797

Token 429: ' a' (ID: 261)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0117946863174438
    2. ' edges' → logprob: -1.5117946863174438
    3. ' for' → logprob: -2.0117945671081543
    4. 'edges' → logprob: -2.7617945671081543
    5. '
' → logprob: -3.1367945671081543
    6. '<|end|>' → logprob: -3.1367945671081543
    7. '       ' → logprob: -3.3867945671081543
    8. ' #' → logprob: -3.7617945671081543
    9. ' streets' → logprob: -3.7617945671081543
    10. 'for' → logprob: -4.136794567108154

Token 430: ' street' (ID: 12901)
  Prédit: 'll'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'll' → logprob: -0.6083545684814453
    2. 'sign' → logprob: -1.4833545684814453
    3. 'def' → logprob: -3.1083545684814453
    4. ' street' → logprob: -3.2333545684814453
    5. 'street' → logprob: -3.3583545684814453
    6. 's' → logprob: -3.4833545684814453
    7. 't' → logprob: -3.7333545684814453
    8. 'for' → logprob: -4.608354568481445
    9. '#' → logprob: -4.858354568481445
    10. ' sign' → logprob: -5.483354568481445

Token 431: ' segment' (ID: 14806)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7162396907806396
    2. 'segment' → logprob: -1.7162396907806396
    3. 'edge' → logprob: -2.2162396907806396
    4. ' edge' → logprob: -2.9662396907806396
    5. 'is' → logprob: -3.5912396907806396
    6. ' segment' → logprob: -3.5912396907806396
    7. 's' → logprob: -3.5912396907806396
    8. 'endpoint' → logprob: -3.7162396907806396
    9. '<|end|>' → logprob: -4.216239929199219
    10. ' endpoint' → logprob: -5.216239929199219

Token 432: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.541682779788971
    2. 's' → logprob: -1.9166827201843262
    3. '<|end|>' → logprob: -1.9166827201843262
    4. ' with' → logprob: -3.791682720184326
    5. ' that' → logprob: -3.916682720184326
    6. ' must' → logprob: -4.166682720184326
    7. ' can' → logprob: -4.791682720184326
    8. ' has' → logprob: -4.916682720184326
    9. '<|end|>' → logprob: -5.166682720184326
    10. ' continues' → logprob: -5.291682720184326

Token 433: ' one' (ID: 1001)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.886624276638031
    2. 'se' → logprob: -2.011624336242676
    3. ' True' → logprob: -2.261624336242676
    4. 'any' → logprob: -2.636624336242676
    5. 's' → logprob: -2.761624336242676
    6. '[s' → logprob: -2.761624336242676
    7. ' all' → logprob: -3.761624336242676
    8. 'all' → logprob: -3.886624336242676
    9. '[' → logprob: -4.011624336242676
    10. '[(' → logprob: -4.136624336242676

Token 434: ' where' (ID: 1919)
  Prédit: ' where'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' where' → logprob: -0.5781712532043457
    2. 'where' → logprob: -1.7031712532043457
    3. ' whose' → logprob: -1.8281712532043457
    4. ' for' → logprob: -3.2031712532043457
    5. 'for' → logprob: -3.7031712532043457
    6. 'whose' → logprob: -4.578171253204346
    7. ' that' → logprob: -4.828171253204346
    8. 'with' → logprob: -5.578171253204346
    9. 'that' → logprob: -5.953171253204346
    10. ' with' → logprob: -5.953171253204346

Token 435: ' both' (ID: 2973)
  Prédit: ' adjacency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adjacency' → logprob: -0.4748679995536804
    2. 'adj' → logprob: -0.9748679995536804
    3. 'all' → logprob: -7.474867820739746
    4. ' all' → logprob: -8.724867820739746
    5. 'se' → logprob: -10.849867820739746
    6. 'min' → logprob: -11.349867820739746
    7. ' True' → logprob: -11.724867820739746
    8. ' min' → logprob: -12.224867820739746
    9. 'both' → logprob: -12.224867820739746
    10. 'max' → logprob: -12.474867820739746

Token 436: ' endpoints' (ID: 76454)
  Prédit: ' endpoints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' endpoints' → logprob: -0.05588936060667038
    2. 'end' → logprob: -2.930889368057251
    3. ' ends' → logprob: -7.430889129638672
    4. 'ends' → logprob: -8.930889129638672
    5. 'adj' → logprob: -9.305889129638672
    6. 'endpoint' → logprob: -9.430889129638672
    7. 'points' → logprob: -10.055889129638672
    8. ' end' → logprob: -10.180889129638672
    9. '_end' → logprob: -11.930889129638672
    10. 's' → logprob: -12.305889129638672

Token 437: ' connect' (ID: 4837)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.080022431910038
    2. 'have' → logprob: -2.5800223350524902
    3. '<|end|>' → logprob: -7.45502233505249
    4. ')' → logprob: -8.955022811889648
    5. ' ' → logprob: -9.205022811889648
    6. '_have' → logprob: -9.205022811889648
    7. ' has' → logprob: -9.830022811889648
    8. '   ' → logprob: -10.330022811889648
    9. '[' → logprob: -10.705022811889648
    10. '>=' → logprob: -10.705022811889648

Token 438: ' at' (ID: 540)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.13738508522510529
    2. 'to' → logprob: -2.137385129928589
    3. '           ' → logprob: -5.01238489151001
    4. ' with' → logprob: -6.26238489151001
    5. '>=' → logprob: -7.63738489151001
    6. 's' → logprob: -8.262385368347168
    7. 'with' → logprob: -8.262385368347168
    8. '   ' → logprob: -8.762385368347168
    9. 'se' → logprob: -8.887385368347168
    10. ' at' → logprob: -9.012385368347168

Token 439: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.038333967328071594
    2. ' least' → logprob: -3.2883338928222656
    3. '>=' → logprob: -8.913333892822266
    4. 'at' → logprob: -9.913333892822266
    5. '2' → logprob: -10.413333892822266
    6. '1' → logprob: -10.538333892822266
    7. 'le' → logprob: -11.413333892822266
    8. 'lease' → logprob: -11.913333892822266
    9. '>' → logprob: -12.038333892822266
    10. '_le' → logprob: -12.538333892822266

Token 440: ' ' (ID: 220)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.34959957003593445
    2. '2' → logprob: -1.8495995998382568
    3. ' to' → logprob: -2.349599599838257
    4. '1' → logprob: -3.724599599838257
    5. ' ' → logprob: -4.099599361419678
    6. ' two' → logprob: -7.349599361419678
    7. '   ' → logprob: -8.099599838256836
    8. 'two' → logprob: -8.099599838256836
    9. '>=' → logprob: -8.599599838256836
    10. '```' → logprob: -10.349599838256836

Token 441: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.25640958547592163
    2. '1' → logprob: -1.7564096450805664
    3. 'to' → logprob: -3.0064096450805664
    4. ' ' → logprob: -6.131409645080566
    5. ' to' → logprob: -6.756409645080566
    6. 'two' → logprob: -7.756409645080566
    7. ' two' → logprob: -8.756409645080566
    8. '   ' → logprob: -10.506409645080566
    9. '>' → logprob: -10.756409645080566
    10. '>=' → logprob: -10.881409645080566

Token 442: ' segment' (ID: 14806)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 443: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09049814939498901
    2. ',' → logprob: -3.465498208999634
    3. '<|end|>' → logprob: -3.590498208999634
    4. ' and' → logprob: -3.965498208999634
    5. '.' → logprob: -5.715497970581055
    6. '<|end|>' → logprob: -6.840497970581055
    7. '
' → logprob: -7.215497970581055
    8. ' for' → logprob: -7.340497970581055
    9. ' (' → logprob: -7.465497970581055
    10. ' or' → logprob: -7.840497970581055

Token 444: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 445: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09324362128973007
    2. ' for' → logprob: -3.3432435989379883
    3. '
' → logprob: -3.8432435989379883
    4. '<|end|>' → logprob: -3.8432435989379883
    5. 'for' → logprob: -5.718243598937988
    6. ',' → logprob: -6.093243598937988
    7. '        
' → logprob: -6.843243598937988
    8. ' and' → logprob: -6.968243598937988
    9. '<|end|>' → logprob: -7.218243598937988
    10. ' ' → logprob: -7.968243598937988

Token 446: ' Signs' (ID: 92744)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.281010389328003
    2. 'edges' → logprob: -1.406010389328003
    3. ' for' → logprob: -1.531010389328003
    4. 'for' → logprob: -2.031010389328003
    5. ' edges' → logprob: -2.531010389328003
    6. 'stre' → logprob: -5.031010627746582
    7. '#' → logprob: -5.031010627746582
    8. ' street' → logprob: -5.031010627746582
    9. 'street' → logprob: -5.156010627746582
    10. 'graph' → logprob: -5.156010627746582

Token 447: ' connect' (ID: 4837)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8968027234077454
    2. '=' → logprob: -1.0218026638031006
    3. ':' → logprob: -1.6468026638031006
    4. '=[]' → logprob: -3.6468026638031006
    5. '_segments' → logprob: -4.89680290222168
    6. 's' → logprob: -6.14680290222168
    7. ' are' → logprob: -6.39680290222168
    8. '_edges' → logprob: -7.77180290222168
    9. '_se' → logprob: -8.14680290222168
    10. 'segments' → logprob: -8.27180290222168

Token 448: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.2528398036956787
    2. 'to' → logprob: -1.8778398036956787
    3. ' exactly' → logprob: -2.1278398036956787
    4. 'one' → logprob: -2.5028398036956787
    5. ' one' → logprob: -2.5028398036956787
    6. ' a' → logprob: -3.0028398036956787
    7. ' endpoints' → logprob: -3.0028398036956787
    8. ' at' → logprob: -3.3778398036956787
    9. 'a' → logprob: -3.5028398036956787
    10. 'points' → logprob: -4.002840042114258

Token 449: ' a' (ID: 261)
  Prédit: ' exactly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exactly' → logprob: -0.11061163991689682
    2. 'a' → logprob: -3.1106116771698
    3. ' a' → logprob: -3.8606116771698
    4. 'exact' → logprob: -4.610611438751221
    5. ' points' → logprob: -4.985611438751221
    6. ' one' → logprob: -4.985611438751221
    7. 'one' → logprob: -5.360611438751221
    8. 'points' → logprob: -5.360611438751221
    9. ' only' → logprob: -6.610611438751221
    10. ' an' → logprob: -6.860611438751221

Token 450: ' node' (ID: 4596)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.7395010590553284
    2. ' point' → logprob: -1.7395009994506836
    3. ' street' → logprob: -1.7395009994506836
    4. 'street' → logprob: -2.7395009994506836
    5. 'endpoint' → logprob: -3.3645009994506836
    6. 'segment' → logprob: -3.9895009994506836
    7. ' node' → logprob: -4.114500999450684
    8. 'node' → logprob: -4.739500999450684
    9. ' endpoint' → logprob: -4.864500999450684
    10. 'n' → logprob: -5.114500999450684

Token 451: ' of' (ID: 328)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.24981798231601715
    2. ' that' → logprob: -2.4998180866241455
    3. 'with' → logprob: -2.8748180866241455
    4. ' where' → logprob: -3.1248180866241455
    5. 's' → logprob: -3.6248180866241455
    6. ' which' → logprob: -6.374817848205566
    7. 'that' → logprob: -6.624817848205566
    8. ',' → logprob: -6.749817848205566
    9. 'where' → logprob: -6.874817848205566
    10. ' if' → logprob: -6.999817848205566

Token 452: ' degree' (ID: 9882)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.3880562484264374
    2. 'degree' → logprob: -1.1380562782287598
    3. 'count' → logprob: -7.63805627822876
    4. ' adjacency' → logprob: -8.263055801391602
    5. 'exact' → logprob: -8.763055801391602
    6. ' degree' → logprob: -9.388055801391602
    7. 'street' → logprob: -9.888055801391602
    8. 'stre' → logprob: -10.638055801391602
    9. 'se' → logprob: -10.638055801391602
    10. '1' → logprob: -10.763055801391602

Token 453: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004933447111397982
    2. ' ' → logprob: -5.5049333572387695
    3. '2' → logprob: -7.8799333572387695
    4. '==' → logprob: -8.37993335723877
    5. '=' → logprob: -8.50493335723877
    6. '>' → logprob: -11.12993335723877
    7. '>=' → logprob: -12.00493335723877
    8. '```' → logprob: -12.25493335723877
    9. 'exact' → logprob: -12.62993335723877
    10. ' exactly' → logprob: -12.87993335723877

Token 454: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000797119690105319
    2. '2' → logprob: -7.500797271728516
    3. '>' → logprob: -9.125797271728516
    4. '=' → logprob: -9.875797271728516
    5. ' ' → logprob: -10.500797271728516
    6. '==' → logprob: -10.750797271728516
    7. 'exact' → logprob: -11.500797271728516
    8. '>=' → logprob: -12.000797271728516
    9. '```' → logprob: -12.375797271728516
    10. 'one' → logprob: -12.750797271728516

Token 455: ' only' (ID: 1606)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08269716799259186
    2. '
' → logprob: -2.8326971530914307
    3. '<|end|>' → logprob: -4.70769739151001
    4. '        
' → logprob: -5.45769739151001
    5. ',' → logprob: -5.83269739151001
    6. 'def' → logprob: -6.83269739151001
    7. ' for' → logprob: -7.20769739151001
    8. '<|end|>' → logprob: -7.33269739151001
    9. ' and' → logprob: -7.70769739151001
    10. '  
' → logprob: -8.332696914672852

Token 456: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22537703812122345
    2. '#' → logprob: -2.600377082824707
    3. ' edges' → logprob: -2.600377082824707
    4. 'edges' → logprob: -3.600377082824707
    5. '
' → logprob: -4.725377082824707
    6. ',' → logprob: -5.850377082824707
    7. 'graph' → logprob: -6.100377082824707
    8. '        
' → logprob: -6.225377082824707
    9. '<|end|>' → logprob: -6.475377082824707
    10. 'def' → logprob: -7.100377082824707

Token 457: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.02471846714615822
    2. ' one' → logprob: -3.7747185230255127
    3. 'least' → logprob: -7.274718284606934
    4. 'that' → logprob: -8.024718284606934
    5. 'exact' → logprob: -9.024718284606934
    6. 'this' → logprob: -9.774718284606934
    7. 'the' → logprob: -9.899718284606934
    8. 'endpoint' → logprob: -10.274718284606934
    9. 'either' → logprob: -10.399718284606934
    10. 'most' → logprob: -10.649718284606934

Token 458: ' endpoint' (ID: 29703)
  Prédit: ' endpoint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' endpoint' → logprob: -0.5520031452178955
    2. 'endpoint' → logprob: -0.9270031452178955
    3. ' end' → logprob: -3.8020031452178955
    4. 'end' → logprob: -5.927002906799316
    5. ' of' → logprob: -6.552002906799316
    6. ' side' → logprob: -6.677002906799316
    7. '_endpoint' → logprob: -8.552002906799316
    8. '<|end|>' → logprob: -8.802002906799316
    9. ' endpoints' → logprob: -9.177002906799316
    10. ')' → logprob: -9.802002906799316

Token 459: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038190897554159164
    2. '#' → logprob: -4.413190841674805
    3. '<|end|>' → logprob: -4.788190841674805
    4. 'edges' → logprob: -5.038190841674805
    5. '        
' → logprob: -5.788190841674805
    6. ',' → logprob: -6.413190841674805
    7. ' edges' → logprob: -6.538190841674805
    8. ' for' → logprob: -7.288190841674805
    9. 'for' → logprob: -7.413190841674805
    10. 'def' → logprob: -7.538190841674805

Token 460: ' other' (ID: 1273)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49308791756629944
    2. '#' → logprob: -1.743087887763977
    3. ' and' → logprob: -1.868087887763977
    4. 'and' → logprob: -3.6180880069732666
    5. '<|end|>' → logprob: -4.1180877685546875
    6. 'segments' → logprob: -6.1180877685546875
    7. ' #' → logprob: -6.1180877685546875
    8. 'sign' → logprob: -6.9930877685546875
    9. 's' → logprob: -7.1180877685546875
    10. ' while' → logprob: -7.1180877685546875

Token 461: ' is' (ID: 382)
  Prédit: ' endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' endpoint' → logprob: -0.3511798679828644
    2. 'endpoint' → logprob: -1.226179838180542
    3. '_endpoint' → logprob: -6.476180076599121
    4. '[' → logprob: -7.101180076599121
    5. ' end' → logprob: -9.101180076599121
    6. ' endpoints' → logprob: -9.476180076599121
    7. 'end' → logprob: -10.351180076599121
    8. '[end' → logprob: -10.601180076599121
    9. '(endpoint' → logprob: -10.976180076599121
    10. '	end' → logprob: -10.976180076599121

Token 462: ' unique' (ID: 5746)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.30022600293159485
    2. 'open' → logprob: -2.3002259731292725
    3. 'not' → logprob: -3.9252259731292725
    4. 'a' → logprob: -3.9252259731292725
    5. '1' → logprob: -4.050226211547852
    6. ' not' → logprob: -4.175226211547852
    7. ' ' → logprob: -4.300226211547852
    8. 'an' → logprob: -4.425226211547852
    9. ' open' → logprob: -4.425226211547852
    10. ' a' → logprob: -4.925226211547852

Token 463: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05611388757824898
    2. 'edges' → logprob: -4.4311137199401855
    3. '<|end|>' → logprob: -4.6811137199401855
    4. ' edges' → logprob: -4.9311137199401855
    5. ',' → logprob: -5.0561137199401855
    6. '#' → logprob: -5.0561137199401855
    7. 'def' → logprob: -5.3061137199401855
    8. '
' → logprob: -6.1811137199401855
    9. 's' → logprob: -6.3061137199401855
    10. '        
' → logprob: -6.6811137199401855

Token 464: ' signs' (ID: 17424)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -0.9169729351997375
    2. ' the' → logprob: -1.1669728755950928
    3. 'the' → logprob: -2.0419728755950928
    4. 'that' → logprob: -2.2919728755950928
    5. 'sign' → logprob: -3.7919728755950928
    6. 'segment' → logprob: -4.791973114013672
    7. ' a' → logprob: -5.166973114013672
    8. ' this' → logprob: -5.291973114013672
    9. ' itself' → logprob: -6.166973114013672
    10. ' segment' → logprob: -6.291973114013672

Token 465: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06957565993070602
    2. '<|end|>' → logprob: -2.819575548171997
    3. '<|end|>' → logprob: -6.194575786590576
    4. '
' → logprob: -6.194575786590576
    5. ',' → logprob: -6.694575786590576
    6. 'def' → logprob: -7.194575786590576
    7. '#' → logprob: -7.569575786590576
    8. '        
' → logprob: -7.819575786590576
    9. '.' → logprob: -8.819575309753418
    10. 's' → logprob: -9.069575309753418

Token 466: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06559653580188751
    2. '<|end|>' → logprob: -3.565596580505371
    3. '#' → logprob: -4.065596580505371
    4. 'edges' → logprob: -4.690596580505371
    5. ' edges' → logprob: -5.815596580505371
    6. '        
' → logprob: -6.565596580505371
    7. 'graph' → logprob: -6.940596580505371
    8. 'for' → logprob: -7.065596580505371
    9. ' for' → logprob: -7.440596580505371
    10. '<|end|>' → logprob: -7.940596580505371

Token 467: ' #' (ID: 1069)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.31124740839004517
    2. 'graph' → logprob: -1.5612473487854004
    3. 'stre' → logprob: -3.6862473487854004
    4. 'street' → logprob: -4.4362473487854
    5. '#' (adapté à ' #') → logprob: -4.6862473487854
    6. '       ' → logprob: -5.5612473487854
    7. 'for' → logprob: -6.5612473487854
    8. 'sign' → logprob: -6.6862473487854
    9. ' edges' → logprob: -6.9362473487854
    10. 'adj' → logprob: -7.0612473487854

Token 468: ' Determine' (ID: 57076)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.1086309403181076
    2. 'edges' → logprob: -2.483630895614624
    3. '#' → logprob: -4.233631134033203
    4. 'adj' → logprob: -6.608631134033203
    5. 'g' → logprob: -7.233631134033203
    6. 'street' → logprob: -7.358631134033203
    7. 'G' → logprob: -7.983631134033203
    8. ' graph' → logprob: -8.108631134033203
    9. 'stre' → logprob: -8.233631134033203
    10. 'graphs' → logprob: -8.233631134033203

Token 469: ' which' (ID: 1118)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.79189133644104
    2. 'stre' → logprob: -1.41689133644104
    3. 'edge' → logprob: -2.29189133644104
    4. 'edges' → logprob: -2.54189133644104
    5. ' street' → logprob: -3.16689133644104
    6. 'sign' → logprob: -3.66689133644104
    7. 'types' → logprob: -4.041891098022461
    8. 'node' → logprob: -4.791891098022461
    9. ' streets' → logprob: -5.416891098022461
    10. '#' → logprob: -5.541891098022461

Token 470: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.757623016834259
    2. ' segments' → logprob: -1.5076229572296143
    3. 'se' → logprob: -1.6326229572296143
    4. 'edges' → logprob: -3.3826229572296143
    5. 's' → logprob: -3.5076229572296143
    6. ' edges' → logprob: -3.6326229572296143
    7. 'points' → logprob: -4.757623195648193
    8. ' points' → logprob: -5.257623195648193
    9. ' endpoints' → logprob: -5.382623195648193
    10. 'tokens' → logprob: -6.757623195648193

Token 471: ' are' (ID: 553)
  Prédit: '_are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_are' → logprob: -0.15826396644115448
    2. 'are' → logprob: -2.408263921737671
    3. ' are' → logprob: -3.658263921737671
    4. ' =' → logprob: -4.03326416015625
    5. '_st' → logprob: -5.15826416015625
    6. '_is' → logprob: -6.15826416015625
    7. '=' → logprob: -6.53326416015625
    8. '_se' → logprob: -6.90826416015625
    9. '_s' → logprob: -7.78326416015625
    10. 'is' → logprob: -7.90826416015625

Token 472: ' streets' (ID: 25360)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.010872608050704002
    2. ' streets' → logprob: -4.635872840881348
    3. 'street' → logprob: -6.885872840881348
    4. 'st' → logprob: -10.260872840881348
    5. '"' → logprob: -10.885872840881348
    6. 'sign' → logprob: -11.135872840881348
    7. ' street' → logprob: -11.385872840881348
    8. '_st' → logprob: -11.885872840881348
    9. '```' → logprob: -13.510872840881348
    10. 'sts' → logprob: -13.885872840881348

Token 473: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49034979939460754
    2. 'stre' → logprob: -1.7403497695922852
    3. ' street' → logprob: -1.9903497695922852
    4. 'street' → logprob: -3.365349769592285
    5. ' streets' → logprob: -3.740349769592285
    6. ' =' → logprob: -4.615349769592285
    7. ',' → logprob: -6.240349769592285
    8. ':' → logprob: -6.615349769592285
    9. ' and' → logprob: -6.865349769592285
    10. '=' → logprob: -7.240349769592285

Token 474: ' grouping' (ID: 97243)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7276796698570251
    2. '[]' → logprob: -2.35267972946167
    3. 's' → logprob: -2.47767972946167
    4. 'se' → logprob: -2.85267972946167
    5. ' [' → logprob: -2.85267972946167
    6. '[s' → logprob: -3.47767972946167
    7. 'len' → logprob: -3.85267972946167
    8. 'set' → logprob: -3.85267972946167
    9. ' s' → logprob: -3.97767972946167
    10. 'lambda' → logprob: -4.10267972946167

Token 475: ' connected' (ID: 12079)
  Prédit: 'by'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'by' → logprob: -0.3794936239719391
    2. ' by' → logprob: -1.6294935941696167
    3. 'segments' → logprob: -2.8794937133789062
    4. ' segments' → logprob: -4.129493713378906
    5. 'se' → logprob: -5.004493713378906
    6. 's' → logprob: -5.254493713378906
    7. 'points' → logprob: -5.629493713378906
    8. 'with' → logprob: -5.754493713378906
    9. ' into' → logprob: -5.754493713378906
    10. ' edges' → logprob: -5.879493713378906

Token 476: ' graphs' (ID: 73392)
  Prédit: 'components'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'components' → logprob: -0.20579776167869568
    2. ' components' → logprob: -1.955797791481018
    3. 'segments' → logprob: -3.5807976722717285
    4. 'points' → logprob: -4.8307976722717285
    5. '_components' → logprob: -5.5807976722717285
    6. ' points' → logprob: -6.4557976722717285
    7. ' segments' → logprob: -6.5807976722717285
    8. ' endpoints' → logprob: -6.9557976722717285
    9. 'nodes' → logprob: -8.080798149108887
    10. '_segments' → logprob: -8.830798149108887

Token 477: ' without' (ID: 2935)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7030848860740662
    2. '#' → logprob: -2.703084945678711
    3. ',' → logprob: -2.703084945678711
    4. ' from' → logprob: -2.703084945678711
    5. 'from' → logprob: -3.078084945678711
    6. 'def' → logprob: -3.453084945678711
    7. ' and' → logprob: -3.828084945678711
    8. '.' → logprob: -3.953084945678711
    9. '        
' → logprob: -3.953084945678711
    10. ' with' → logprob: -4.078084945678711

Token 478: ' considering' (ID: 17227)
  Prédit: ' signs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' signs' → logprob: -1.020204782485962
    2. 'sign' → logprob: -1.770204782485962
    3. ' any' → logprob: -2.270204782485962
    4. ' intersections' → logprob: -2.770204782485962
    5. ' using' → logprob: -3.270204782485962
    6. ' intermediate' → logprob: -3.395204782485962
    7. 'inter' → logprob: -3.645204782485962
    8. ' including' → logprob: -3.895204782485962
    9. ' endpoints' → logprob: -4.020204544067383
    10. ' branching' → logprob: -4.145204544067383

Token 479: ' signs' (ID: 17424)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.10167836397886276
    2. ' signs' → logprob: -2.4766783714294434
    3. ' sign' → logprob: -4.476678371429443
    4. 'the' → logprob: -8.351677894592285
    5. '"' → logprob: -8.476677894592285
    6. ' the' → logprob: -8.726677894592285
    7. ' endpoints' → logprob: -9.101677894592285
    8. 'points' → logprob: -9.476677894592285
    9. 'segments' → logprob: -9.726677894592285
    10. 'degree' → logprob: -10.351677894592285

Token 480: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4857514798641205
    2. 'graph' → logprob: -2.6107513904571533
    3. 'visited' → logprob: -2.7357513904571533
    4. ' graph' → logprob: -2.8607513904571533
    5. '        
' → logprob: -2.9857513904571533
    6. '
' → logprob: -3.6107513904571533
    7. '#' → logprob: -3.8607513904571533
    8. ',' → logprob: -3.9857513904571533
    9. ' visited' → logprob: -4.360751628875732
    10. 'def' → logprob: -4.735751628875732

Token 481: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1336243748664856
    2. '<|end|>' → logprob: -2.883624315261841
    3. '        
' → logprob: -3.508624315261841
    4. ',' → logprob: -4.50862455368042
    5. '#' → logprob: -5.13362455368042
    6. '
' → logprob: -5.63362455368042
    7. 'def' → logprob: -6.25862455368042
    8. ' graph' → logprob: -6.50862455368042
    9. 'from' → logprob: -6.63362455368042
    10. ')' → logprob: -6.75862455368042

Token 482: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.057077597826719284
    2. 'visited' → logprob: -3.807077646255493
    3. '#' (adapté à ' #') → logprob: -4.057077407836914
    4. 'from' → logprob: -4.932077407836914
    5. ' graph' → logprob: -6.557077407836914
    6. 'edges' → logprob: -6.807077407836914
    7. 'import' → logprob: -6.807077407836914
    8. 'components' → logprob: -7.057077407836914
    9. '       ' → logprob: -7.182077407836914
    10. 'uf' → logprob: -7.682077407836914

Token 483: ' Actually' (ID: 50557)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.8610162138938904
    2. '       ' → logprob: -1.6110162734985352
    3. 'graph' → logprob: -1.6110162734985352
    4. 'visited' → logprob: -3.486016273498535
    5. 'from' → logprob: -3.736016273498535
    6. 'import' → logprob: -3.986016273498535
    7. '#' → logprob: -4.111016273498535
    8. ' visited' → logprob: -4.111016273498535
    9. '
' → logprob: -4.236016273498535
    10. '        
' → logprob: -4.486016273498535

Token 484: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4117960035800934
    2. 'graph' → logprob: -1.911795973777771
    3. 'from' → logprob: -2.7867960929870605
    4. 'visited' → logprob: -2.9117960929870605
    5. 'adj' → logprob: -3.9117960929870605
    6. ' #' → logprob: -5.0367960929870605
    7. ' from' → logprob: -5.0367960929870605
    8. ' graph' → logprob: -5.1617960929870605
    9. 'import' → logprob: -5.2867960929870605
    10. '       ' → logprob: -5.4117960929870605

Token 485: ' problem' (ID: 4792)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.01718733087182045
    2. 'from' → logprob: -4.892187118530273
    3. 'we' → logprob: -5.892187118530273
    4. 'adj' → logprob: -6.642187118530273
    5. 'continue' → logprob: -7.142187118530273
    6. ' #' → logprob: -7.642187118530273
    7. 'pass' → logprob: -7.892187118530273
    8. 'graph' → logprob: -8.017187118530273
    9. 'street' → logprob: -8.017187118530273
    10. 'for' → logprob: -8.142187118530273

Token 486: ' states' (ID: 9407)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 487: ' streets' (ID: 25360)
  Prédit: ' that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' that' → logprob: -1.0959450006484985
    2. 'that' → logprob: -1.3459450006484985
    3. '#' → logprob: -1.7209450006484985
    4. '<|end|>' → logprob: -2.845944881439209
    5. 'the' → logprob: -3.095944881439209
    6. ':' → logprob: -4.220944881439209
    7. 'segments' → logprob: -4.345944881439209
    8. ' the' → logprob: -4.470944881439209
    9. '<|end|>' → logprob: -4.470944881439209
    10. ' to' → logprob: -4.970944881439209

Token 488: ' are' (ID: 553)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 489: ' the' (ID: 290)
  Prédit: 'those'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'those' → logprob: -1.1839851140975952
    2. 'segments' → logprob: -1.1839851140975952
    3. 'edges' → logprob: -2.5589852333068848
    4. 'all' → logprob: -2.8089852333068848
    5. 'connected' → logprob: -3.1839852333068848
    6. 'defined' → logprob: -3.1839852333068848
    7. ' those' → logprob: -3.3089852333068848
    8. 'se' → logprob: -3.8089852333068848
    9. 'the' → logprob: -4.308985233306885
    10. ' segments' → logprob: -4.433985233306885

Token 490: ' segments' (ID: 33749)
  Prédit: ' ones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ones' → logprob: -0.6220350861549377
    2. 'edges' → logprob: -2.247035026550293
    3. 'segments' → logprob: -2.247035026550293
    4. ' segments' → logprob: -2.622035026550293
    5. ' edges' → logprob: -2.997035026550293
    6. 'ones' → logprob: -4.122035026550293
    7. 'se' → logprob: -4.497035026550293
    8. ' next' → logprob: -4.622035026550293
    9. 'same' → logprob: -4.622035026550293
    10. ' same' → logprob: -4.747035026550293

Token 491: ' that' (ID: 484)
  Prédit: ' where'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' where' → logprob: -0.793830931186676
    2. 'with' → logprob: -1.9188308715820312
    3. 'where' → logprob: -1.9188308715820312
    4. ' that' → logprob: -2.6688308715820312
    5. ' with' → logprob: -2.7938308715820312
    6. '<|end|>' → logprob: -2.7938308715820312
    7. 'that' → logprob: -3.6688308715820312
    8. ' all' → logprob: -4.918830871582031
    9. ' as' → logprob: -5.293830871582031
    10. 'all' → logprob: -5.543830871582031

Token 492: ' connect' (ID: 4837)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.8417708873748779
    2. 'connect' → logprob: -1.091770887374878
    3. ' have' → logprob: -2.091770887374878
    4. 'both' → logprob: -3.466770887374878
    5. ' connect' → logprob: -4.091771125793457
    6. 'form' → logprob: -4.091771125793457
    7. 'are' → logprob: -4.216771125793457
    8. ' both' → logprob: -4.591771125793457
    9. ' form' → logprob: -4.591771125793457
    10. ' are' → logprob: -5.841771125793457

Token 493: ' point' (ID: 2438)
  Prédit: ' endpoints'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' endpoints' → logprob: -0.4542039930820465
    2. ' at' → logprob: -1.9542039632797241
    3. '<|end|>' → logprob: -2.4542040824890137
    4. ' both' → logprob: -3.0792040824890137
    5. ' nodes' → logprob: -4.079204082489014
    6. ' points' → logprob: -4.079204082489014
    7. 'points' → logprob: -4.204204082489014
    8. 'both' → logprob: -4.204204082489014
    9. ' to' → logprob: -5.079204082489014
    10. 'at' → logprob: -5.204204082489014

Token 494: ' to' (ID: 316)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.00033665422233752906
    2. ' s' → logprob: -9.125336647033691
    3. '<|end|>' → logprob: -9.125336647033691
    4. ' to' → logprob: -10.625336647033691
    5. ')' → logprob: -11.125336647033691
    6. 'with' → logprob: -11.500336647033691
    7. '       ' → logprob: -11.750336647033691
    8. '           ' → logprob: -11.875336647033691
    9. ')s' → logprob: -12.000336647033691
    10. 'to' → logprob: -12.000336647033691

Token 495: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.018009578809142113
    2. ' point' → logprob: -4.643009662628174
    3. 'points' → logprob: -5.268009662628174
    4. 'another' → logprob: -6.518009662628174
    5. 'at' → logprob: -7.643009662628174
    6. 'a' → logprob: -8.143009185791016
    7. 'multiple' → logprob: -8.143009185791016
    8. 'other' → logprob: -8.518009185791016
    9. ' at' → logprob: -9.018009185791016
    10. ' points' → logprob: -9.393009185791016

Token 496: ' with' (ID: 483)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 497: ' possibly' (ID: 14836)
  Prédit: ' adjacency'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adjacency' → logprob: -0.764076828956604
    2. 'adj' → logprob: -0.889076828956604
    3. 'both' → logprob: -3.1390767097473145
    4. 'degree' → logprob: -3.2640767097473145
    5. ' both' → logprob: -3.8890767097473145
    6. ' degree' → logprob: -5.2640767097473145
    7. ' at' → logprob: -5.5140767097473145
    8. ' endpoints' → logprob: -5.7640767097473145
    9. 'at' → logprob: -6.2640767097473145
    10. 'no' → logprob: -7.1390767097473145

Token 498: ' multiple' (ID: 7598)
  Prédit: ' other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -1.3710169792175293
    2. ' multiple' → logprob: -1.4960169792175293
    3. ' more' → logprob: -1.8710169792175293
    4. 'other' → logprob: -3.1210169792175293
    5. ' at' → logprob: -3.2460169792175293
    6. 'multiple' → logprob: -3.2460169792175293
    7. ' intersections' → logprob: -3.3710169792175293
    8. 'more' → logprob: -3.3710169792175293
    9. ' intermediate' → logprob: -3.6210169792175293
    10. ' no' → logprob: -3.7460169792175293

Token 499: ' connections' (ID: 21069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 500: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5087812542915344
    2. '<|end|>' → logprob: -1.5087811946868896
    3. '#' → logprob: -2.0087811946868896
    4. '        
' → logprob: -4.133781433105469
    5. ',' → logprob: -4.883781433105469
    6. '
' → logprob: -5.258781433105469
    7. '<|end|>' → logprob: -5.383781433105469
    8. 's' → logprob: -6.383781433105469
    9. '.' → logprob: -6.758781433105469
    10. ' #' → logprob: -6.883781433105469

Token 501: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5217303037643433
    2. '<|end|>' → logprob: -1.0217303037643433
    3. '#' → logprob: -3.521730422973633
    4. '
' → logprob: -5.521730422973633
    5. ',' → logprob: -5.896730422973633
    6. '        
' → logprob: -6.021730422973633
    7. '<|end|>' → logprob: -6.021730422973633
    8. ' and' → logprob: -6.771730422973633
    9. ')' → logprob: -6.771730422973633
    10. '...' → logprob: -7.271730422973633

Token 502: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.871475875377655
    2. '<|end|>' → logprob: -1.1214759349822998
    3. '       ' → logprob: -1.4964759349822998
    4. 'stre' → logprob: -4.871475696563721
    5. 'edges' → logprob: -5.871475696563721
    6. ' #' → logprob: -6.121475696563721
    7. 'se' → logprob: -6.246475696563721
    8. '        
' → logprob: -6.246475696563721
    9. 's' → logprob: -6.246475696563721
    10. 'continue' → logprob: -6.371475696563721

Token 503: ' Signs' (ID: 92744)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.4726123511791229
    2. '#' → logprob: -1.8476123809814453
    3. 'street' → logprob: -2.0976123809814453
    4. 'edges' → logprob: -2.8476123809814453
    5. 'graph' → logprob: -3.9726123809814453
    6. '       ' → logprob: -4.347612380981445
    7. ' streets' → logprob: -6.722612380981445
    8. 'is' → logprob: -6.847612380981445
    9. 'st' → logprob: -7.472612380981445
    10. '        
' → logprob: -7.722612380981445

Token 504: ' have' (ID: 679)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9678788185119629
    2. ' =' → logprob: -1.342878818511963
    3. ' are' → logprob: -1.717878818511963
    4. '=[]' → logprob: -2.842878818511963
    5. 'are' → logprob: -3.217878818511963
    6. '_segments' → logprob: -3.467878818511963
    7. ':' → logprob: -4.717878818511963
    8. '#' → logprob: -5.092878818511963
    9. 'continue' → logprob: -5.467878818511963
    10. 'connect' → logprob: -5.592878818511963

Token 505: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.22131849825382233
    2. ' exactly' → logprob: -2.596318483352661
    3. ' one' → logprob: -3.096318483352661
    4. ' endpoints' → logprob: -3.596318483352661
    5. 'exact' → logprob: -3.721318483352661
    6. 'an' → logprob: -4.09631872177124
    7. ' at' → logprob: -5.72131872177124
    8. ' an' → logprob: -6.34631872177124
    9. 'only' → logprob: -6.47131872177124
    10. 'at' → logprob: -6.47131872177124

Token 506: ' endpoint' (ID: 29703)
  Prédit: ' endpoint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' endpoint' → logprob: -0.5820174813270569
    2. 'endpoint' → logprob: -0.8320174813270569
    3. '_endpoint' → logprob: -6.207017421722412
    4. ' of' → logprob: -6.957017421722412
    5. ')' → logprob: -7.707017421722412
    6. 'end' → logprob: -7.957017421722412
    7. ' endpoints' → logprob: -8.33201789855957
    8. '
' → logprob: -8.33201789855957
    9. ' or' → logprob: -8.33201789855957
    10. '(endpoint' → logprob: -8.33201789855957

Token 507: ' that' (ID: 484)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.6021206378936768
    2. ' and' → logprob: -1.8521206378936768
    3. '<|end|>' → logprob: -1.8521206378936768
    4. '=' → logprob: -2.6021206378936768
    5. '       ' → logprob: -2.7271206378936768
    6. ' that' → logprob: -3.1021206378936768
    7. ',' → logprob: -3.1021206378936768
    8. ' for' → logprob: -3.6021206378936768
    9. ' only' → logprob: -3.7271206378936768
    10. ' ' → logprob: -3.7271206378936768

Token 508: ' touches' (ID: 45060)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.07857521623373032
    2. 'has' → logprob: -2.7035751342773438
    3. ' is' → logprob: -5.828575134277344
    4. 'adj' → logprob: -7.078575134277344
    5. 'connect' → logprob: -7.203575134277344
    6. ' have' → logprob: -7.328575134277344
    7. ' only' → logprob: -7.328575134277344
    8. ' adjacency' → logprob: -7.578575134277344
    9. 'is' → logprob: -7.703575134277344
    10. '   ' → logprob: -8.078575134277344

Token 509: ' one' (ID: 1001)
  Prédit: 'exact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exact' → logprob: -0.2766211926937103
    2. 'only' → logprob: -1.6516212224960327
    3. ' exactly' → logprob: -3.026621103286743
    4. ' only' → logprob: -7.026621341705322
    5. '1' → logprob: -8.526620864868164
    6. '```' → logprob: -9.151620864868164
    7. 'degree' → logprob: -10.151620864868164
    8. 'a' → logprob: -10.276620864868164
    9. 'no' → logprob: -10.401620864868164
    10. '<|end|>' → logprob: -10.776620864868164

Token 510: ' and' (ID: 326)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 511: ' only' (ID: 1606)
  Prédit: 'only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'only' → logprob: -0.012245678342878819
    2. ' only' → logprob: -4.5122456550598145
    3. 'other' → logprob: -7.8872456550598145
    4. 'no' → logprob: -8.387246131896973
    5. 'more' → logprob: -8.387246131896973
    6. '0' → logprob: -9.387246131896973
    7. 'exact' → logprob: -9.637246131896973
    8. 'none' → logprob: -10.387246131896973
    9. 'adj' → logprob: -10.512246131896973
    10. 'others' → logprob: -10.637246131896973

Token 512: ' one' (ID: 1001)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.36756348609924316
    2. 'se' → logprob: -2.117563486099243
    3. 'one' → logprob: -2.367563486099243
    4. 'segment' → logprob: -3.117563486099243
    5. ' ' → logprob: -4.242563247680664
    6. 'other' → logprob: -4.367563247680664
    7. ' one' → logprob: -4.492563247680664
    8. 'sign' → logprob: -5.742563247680664
    9. 's' → logprob: -6.367563247680664
    10. ' segment' → logprob: -6.867563247680664

Token 513: ' line' (ID: 2543)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 514: ' segment' (ID: 14806)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15383286774158478
    2. '#' → logprob: -2.2788329124450684
    3. '<|end|>' → logprob: -4.028832912445068
    4. 's' → logprob: -5.403832912445068
    5. ',' → logprob: -5.528832912445068
    6. '        
' → logprob: -5.778832912445068
    7. 'def' → logprob: -6.528832912445068
    8. '
' → logprob: -6.528832912445068
    9. ' edges' → logprob: -6.903832912445068
    10. ')' → logprob: -6.903832912445068

Token 515: ' representing' (ID: 25389)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5167428255081177
    2. '<|end|>' → logprob: -1.0167428255081177
    3. '
' → logprob: -4.516742706298828
    4. '#' → logprob: -4.766742706298828
    5. '        
' → logprob: -5.141742706298828
    6. '<|end|>' → logprob: -5.391742706298828
    7. ',' → logprob: -5.641742706298828
    8. ')' → logprob: -6.641742706298828
    9. 'def' → logprob: -6.766742706298828
    10. 's' → logprob: -6.891742706298828

Token 516: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06284461170434952
    2. ' a' → logprob: -2.9378445148468018
    3. 'the' → logprob: -5.062844753265381
    4. ' the' → logprob: -7.187844753265381
    5. 'street' → logprob: -8.312844276428223
    6. 'an' → logprob: -8.812844276428223
    7. 'stre' → logprob: -9.187844276428223
    8. ' streets' → logprob: -9.312844276428223
    9. 'sign' → logprob: -9.937844276428223
    10. ' an' → logprob: -10.062844276428223

Token 517: ' street' (ID: 12901)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.4274292290210724
    2. 'street' → logprob: -1.42742919921875
    3. ' street' → logprob: -3.05242919921875
    4. ' sign' → logprob: -3.55242919921875
    5. '"' → logprob: -4.67742919921875
    6. 'traffic' → logprob: -5.80242919921875
    7. 'dead' → logprob: -5.92742919921875
    8. 'stop' → logprob: -6.05242919921875
    9. 'node' → logprob: -6.17742919921875
    10. 'house' → logprob: -6.61492919921875

Token 518: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24052219092845917
    2. '<|end|>' → logprob: -1.8655221462249756
    3. '#' → logprob: -3.4905221462249756
    4. '        
' → logprob: -4.740522384643555
    5. 's' → logprob: -5.365522384643555
    6. 'def' → logprob: -5.490522384643555
    7. ' #' → logprob: -5.615522384643555
    8. '<|end|>' → logprob: -6.490522384643555
    9. ',' → logprob: -6.740522384643555
    10. 'edges' → logprob: -6.865522384643555

Token 519: ' other' (ID: 1273)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.44703713059425354
    2. '#' → logprob: -1.3220371007919312
    3. '<|end|>' → logprob: -3.1970372200012207
    4. '        
' → logprob: -3.9470372200012207
    5. ' #' → logprob: -4.447037220001221
    6. '
' → logprob: -4.822037220001221
    7. ' and' → logprob: -5.447037220001221
    8. '.' → logprob: -6.447037220001221
    9. ')' → logprob: -7.072037220001221
    10. ',' → logprob: -7.197037220001221

Token 520: ' open' (ID: 2494)
  Prédit: ' endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' endpoint' → logprob: -0.2099488526582718
    2. 'endpoint' → logprob: -2.459948778152466
    3. ' is' → logprob: -3.084948778152466
    4. '_endpoint' → logprob: -3.709948778152466
    5. ')' → logprob: -4.084949016571045
    6. '<|end|>' → logprob: -5.459949016571045
    7. ' endpoints' → logprob: -5.709949016571045
    8. '[' → logprob: -5.959949016571045
    9. '=' → logprob: -6.334949016571045
    10. '_end' → logprob: -7.584949016571045

Token 521: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08431816101074219
    2. '<|end|>' → logprob: -3.084318161010742
    3. '#' → logprob: -3.834318161010742
    4. '        
' → logprob: -5.709318161010742
    5. ',' → logprob: -5.959318161010742
    6. 's' → logprob: -6.209318161010742
    7. 'def' → logprob: -6.459318161010742
    8. '
' → logprob: -6.959318161010742
    9. '<|end|>' → logprob: -6.959318161010742
    10. '.' → logprob: -7.334318161010742

Token 522: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09115978330373764
    2. '#' → logprob: -2.8411598205566406
    3. '        
' → logprob: -4.591159820556641
    4. '<|end|>' → logprob: -4.841159820556641
    5. '
' → logprob: -5.216159820556641
    6. 'edges' → logprob: -7.216159820556641
    7. ' #' → logprob: -7.591159820556641
    8. '   ' → logprob: -7.591159820556641
    9. ',' → logprob: -7.966159820556641
    10. ' for' → logprob: -7.966159820556641

Token 523: ' #' (ID: 1069)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.8248610496520996
    2. '#' (adapté à ' #') → logprob: -0.9498610496520996
    3. '       ' → logprob: -2.0748610496520996
    4. 'street' → logprob: -4.0748610496521
    5. 'se' → logprob: -5.0748610496521
    6. ' streets' → logprob: -5.5748610496521
    7. '        
' → logprob: -5.5748610496521
    8. ' #' → logprob: -5.8248610496521
    9. ' street' → logprob: -6.0748610496521
    10. '
' → logprob: -6.3248610496521

Token 524: ' Build' (ID: 10885)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.8210118412971497
    2. '#' → logprob: -1.3210117816925049
    3. 'stre' → logprob: -1.5710117816925049
    4. 'graph' → logprob: -3.696011781692505
    5. '       ' → logprob: -3.696011781692505
    6. 'edges' → logprob: -3.821011781692505
    7. 'is' → logprob: -5.321012020111084
    8. ' street' → logprob: -5.821012020111084
    9. 'sign' → logprob: -6.571012020111084
    10. ' streets' → logprob: -7.196012020111084

Token 525: ' maps' (ID: 24267)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5214682221412659
    2. ' graph' → logprob: -1.021468162536621
    3. 'adj' → logprob: -3.771468162536621
    4. ' adjacency' → logprob: -4.146468162536621
    5. ' adj' → logprob: -5.021468162536621
    6. 'g' → logprob: -7.396468162536621
    7. '_graph' → logprob: -9.896468162536621
    8. ' edges' → logprob: -9.896468162536621
    9. 'point' → logprob: -10.896468162536621
    10. 'edges' → logprob: -11.021468162536621

Token 526: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5067958831787109
    2. 'from' → logprob: -1.256795883178711
    3. '=' → logprob: -2.381795883178711
    4. 'point' → logprob: -5.631795883178711
    5. 's' → logprob: -5.756795883178711
    6. 'points' → logprob: -5.881795883178711
    7. ',' → logprob: -6.006795883178711
    8. ' from' → logprob: -6.506795883178711
    9. 'adj' → logprob: -6.756795883178711
    10. '_from' → logprob: -7.131795883178711

Token 527: ' endpoints' (ID: 76454)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.3915809690952301
    2. ' endpoints' → logprob: -1.8915809392929077
    3. 'endpoint' → logprob: -2.8915810585021973
    4. ' point' → logprob: -3.0165810585021973
    5. 'points' → logprob: -3.1415810585021973
    6. ' endpoint' → logprob: -4.641581058502197
    7. ' points' → logprob: -5.641581058502197
    8. 'se' → logprob: -6.016581058502197
    9. 'adj' → logprob: -6.141581058502197
    10. 'segment' → logprob: -6.391581058502197

Token 528: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05583423003554344
    2. ' =' → logprob: -3.1808342933654785
    3. 'to' → logprob: -5.0558342933654785
    4. '_to' → logprob: -5.1808342933654785
    5. ' to' → logprob: -9.18083381652832
    6. 'points' → logprob: -9.18083381652832
    7. ',' → logprob: -9.43083381652832
    8. 'from' → logprob: -9.55583381652832
    9. '_points' → logprob: -9.80583381652832
    10. ' endpoints' → logprob: -10.30583381652832

Token 529: ' segments' (ID: 33749)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.34480053186416626
    2. 'se' → logprob: -1.5948004722595215
    3. 'segments' → logprob: -3.2198004722595215
    4. '[' → logprob: -3.8448004722595215
    5. ' segments' → logprob: -4.0948004722595215
    6. 'set' → logprob: -5.3448004722595215
    7. ' se' → logprob: -6.0948004722595215
    8. ' seg' → logprob: -6.5948004722595215
    9. 'seg' → logprob: -7.5948004722595215
    10. 'list' → logprob: -7.8448004722595215

Token 530: '
' (ID: 198)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.38155198097229004
    2. 'points' → logprob: -1.50655198097229
    3. 'point' → logprob: -2.88155198097229
    4. 'end' → logprob: -4.256551742553711
    5. '       ' → logprob: -4.881551742553711
    6. 'ep' → logprob: -5.006551742553711
    7. 'pts' → logprob: -6.256551742553711
    8. ' endpoints' → logprob: -6.381551742553711
    9. 'node' → logprob: -6.756551742553711
    10. 'from' → logprob: -6.881551742553711

Token 531: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01715136505663395
    2. '<|end|>' → logprob: -5.017151355743408
    3. 'points' → logprob: -6.017151355743408
    4. ',' → logprob: -6.517151355743408
    5. ' for' → logprob: -7.017151355743408
    6. 'for' → logprob: -7.017151355743408
    7. '        
' → logprob: -7.017151355743408
    8. ' and' → logprob: -7.267151355743408
    9. 'from' → logprob: -7.267151355743408
    10. ':' → logprob: -7.642151355743408

Token 532: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' (adapté à ' endpoint') → logprob: -0.21244333684444427
    2. 'point' → logprob: -2.9624433517456055
    3. 'points' → logprob: -3.2124433517456055
    4. 'end' → logprob: -3.3374433517456055
    5. ' endpoints' → logprob: -3.9624433517456055
    6. 'ep' → logprob: -4.0874433517456055
    7. ' endpoint' → logprob: -4.7124433517456055
    8. 'adj' → logprob: -4.9624433517456055
    9. 'from' → logprob: -5.8374433517456055
    10. 'pt' → logprob: -6.4624433517456055

Token 533: '_seg' (ID: 78972)
  Prédit: '_to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_to' → logprob: -0.4510282576084137
    2. '_map' → logprob: -1.2010282278060913
    3. '_segments' → logprob: -2.951028347015381
    4. 's' → logprob: -4.701028347015381
    5. '_maps' → logprob: -8.076027870178223
    6. '_edges' → logprob: -8.076027870178223
    7. '_s' → logprob: -10.451027870178223
    8. '_se' → logprob: -10.701027870178223
    9. '_lines' → logprob: -11.201027870178223
    10. '_points' → logprob: -11.201027870178223

Token 534: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.16176500916481018
    2. 'ments' → logprob: -1.9117649793624878
    3. '=' → logprob: -7.036765098571777
    4. '_map' → logprob: -8.036765098571777
    5. 'map' → logprob: -8.536765098571777
    6. 'ment' → logprob: -9.536765098571777
    7. 'maps' → logprob: -10.286765098571777
    8. ' =' → logprob: -11.286765098571777
    9. 'ms' → logprob: -12.036765098571777
    10. 'ts' → logprob: -12.286765098571777

Token 535: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -3.7697225252486533e-06
    2. ' defaultdict' → logprob: -12.500003814697266
    3. '"default' → logprob: -18.500003814697266
    4. '(default' → logprob: -18.625003814697266
    5. '.default' → logprob: -18.750003814697266
    6. ' default' → logprob: -18.750003814697266
    7. '{}' → logprob: -20.625003814697266
    8. ''default' → logprob: -21.125003814697266
    9. '{' → logprob: -21.250003814697266
    10. 'Default' → logprob: -21.375003814697266

Token 536: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.2058452069759369
    2. '(set' → logprob: -2.2058451175689697
    3. 'list' → logprob: -2.7058451175689697
    4. 'set' → logprob: -5.080845355987549
    5. ':list' → logprob: -6.455845355987549
    6. '=list' → logprob: -7.455845355987549
    7. 's' → logprob: -7.830845355987549
    8. ':' → logprob: -9.20584487915039
    9. ':set' → logprob: -9.70584487915039
    10. '[list' → logprob: -9.83084487915039

Token 537: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011050998233258724
    2. ')
' → logprob: -4.511051177978516
    3. ')

' → logprob: -13.761051177978516
    4. ')
' → logprob: -14.011051177978516
    5. ' )' → logprob: -14.636051177978516
    6. '[' → logprob: -15.636051177978516
    7. '   ' → logprob: -15.886051177978516
    8. '<|end|>' → logprob: -16.386051177978516
    9. ')s' → logprob: -16.886051177978516
    10. ')#' → logprob: -16.886051177978516

Token 538: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6523347496986389
    2. 'for' → logprob: -0.7773347496986389
    3. ' for' → logprob: -4.027334690093994
    4. '<|end|>' → logprob: -6.402334690093994
    5. '<|end|>' → logprob: -10.777335166931152
    6. ')' → logprob: -11.652335166931152
    7. '   ' → logprob: -11.652335166931152
    8. '	for' → logprob: -12.027335166931152
    9. '```' → logprob: -12.652335166931152
    10. 'se' → logprob: -13.402335166931152

Token 539: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.004253388848155737
    2. ' for' → logprob: -5.629253387451172
    3. '       ' → logprob: -7.379253387451172
    4. 's' → logprob: -11.004253387451172
    5. '   ' → logprob: -11.879253387451172
    6. '	for' → logprob: -13.379253387451172
    7. 'se' → logprob: -14.254253387451172
    8. '<|end|>' → logprob: -14.629253387451172
    9. '
' → logprob: -14.754253387451172
    10. ')' → logprob: -14.754253387451172

Token 540: ' i' (ID: 575)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.25824224948883057
    2. 'p' → logprob: -2.133242130279541
    3. ' s' → logprob: -2.758242130279541
    4. 'pt' → logprob: -4.008242130279541
    5. 'seg' → logprob: -4.383242130279541
    6. ' p' → logprob: -4.508242130279541
    7. ' seg' → logprob: -6.258242130279541
    8. 'point' → logprob: -7.008242130279541
    9. ' pt' → logprob: -7.133242130279541
    10. 'e' → logprob: -9.0082426071167

Token 541: ',(' (ID: 27243)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10038038343191147
    2. ' in' → logprob: -2.8503804206848145
    3. 'in' → logprob: -3.6003804206848145
    4. ',s' → logprob: -5.1003804206848145
    5. ' ,' → logprob: -6.3503804206848145
    6. 's' → logprob: -6.3503804206848145
    7. ',se' → logprob: -7.4753804206848145
    8. ',in' → logprob: -9.100379943847656
    9. ' s' → logprob: -11.350379943847656
    10. ',v' → logprob: -11.475379943847656

Token 542: 'p' (ID: 79)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07626452296972275
    2. 'se' → logprob: -2.8262646198272705
    3. 'seg' → logprob: -5.451264381408691
    4. 'p' → logprob: -5.576264381408691
    5. '((' → logprob: -6.576264381408691
    6. 'x' → logprob: -6.576264381408691
    7. '(' → logprob: -7.076264381408691
    8. '(s' → logprob: -7.701264381408691
    9. ')' → logprob: -8.201264381408691
    10. '*' → logprob: -8.326264381408691

Token 543: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6558866500854492
    2. '0' → logprob: -1.2808866500854492
    3. ')' → logprob: -2.155886650085449
    4. ',' → logprob: -3.405886650085449
    5. 's' → logprob: -4.030886650085449
    6. 'oints' → logprob: -4.155886650085449
    7. 'oint' → logprob: -4.280886650085449
    8. ',)' → logprob: -6.030886650085449
    9. '[' → logprob: -6.405886650085449
    10. ')s' → logprob: -7.155886650085449

Token 544: ',p' (ID: 14835)
  Prédit: ',p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.16051676869392395
    2. ',' → logprob: -1.9105167388916016
    3. ',s' → logprob: -8.910516738891602
    4. ',v' → logprob: -10.285516738891602
    5. ',q' → logprob: -10.410516738891602
    6. ',)' → logprob: -10.910516738891602
    7. ' ,' → logprob: -11.035516738891602
    8. ',y' → logprob: -11.785516738891602
    9. ',a' → logprob: -12.160516738891602
    10. ',l' → logprob: -12.285516738891602

Token 545: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.48966142535209656
    2. '1' → logprob: -1.239661455154419
    3. ')' → logprob: -2.364661455154419
    4. '[' → logprob: -5.86466121673584
    5. 'oints' → logprob: -7.86466121673584
    6. '0' → logprob: -8.36466121673584
    7. ')[' → logprob: -9.73966121673584
    8. ')p' → logprob: -10.11466121673584
    9. '```' → logprob: -10.73966121673584
    10. 'oint' → logprob: -11.23966121673584

Token 546: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022320532298181206
    2. ' )' → logprob: -9.250223159790039
    3. 'in' → logprob: -9.625223159790039
    4. ' in' → logprob: -9.750223159790039
    5. ')
' → logprob: -14.000223159790039
    6. '),' → logprob: -15.000223159790039
    7. '   ' → logprob: -15.250223159790039
    8. ')p' → logprob: -15.875223159790039
    9. ')=' → logprob: -16.00022315979004
    10. ' ' → logprob: -16.37522315979004

Token 547: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5495478510856628
    2. ' in' → logprob: -1.1745479106903076
    3. ')' → logprob: -2.1745479106903076
    4. '   ' → logprob: -9.799548149108887
    5. ' )' → logprob: -10.424548149108887
    6. '):
' → logprob: -10.674548149108887
    7. '
' → logprob: -11.424548149108887
    8. ' ' → logprob: -11.549548149108887
    9. '	in' → logprob: -11.799548149108887
    10. ').' → logprob: -11.924548149108887

Token 548: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.10515262186527252
    2. ' enumerate' → logprob: -2.3551526069641113
    3. 'se' → logprob: -5.355152606964111
    4. 'seg' → logprob: -8.73015308380127
    5. '(se' → logprob: -10.73015308380127
    6. 'en' → logprob: -11.98015308380127
    7. ' seg' → logprob: -12.23015308380127
    8. 'segments' → logprob: -12.48015308380127
    9. 'enum' → logprob: -12.60515308380127
    10. '(en' → logprob: -12.60515308380127

Token 549: '(se' (ID: 19430)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.0010598446242511272
    2. '(se' → logprob: -7.6260600090026855
    3. ' seg' → logprob: -7.7510600090026855
    4. 'seg' → logprob: -9.501059532165527
    5. 'segments' → logprob: -11.001059532165527
    6. 's' → logprob: -11.876059532165527
    7. ',se' → logprob: -11.876059532165527
    8. '	se' → logprob: -12.251059532165527
    9. '_se' → logprob: -12.626059532165527
    10. ' se' → logprob: -12.751059532165527

Token 550: 'gs' (ID: 9233)
  Prédit: 'gs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gs' → logprob: -8.180258191714529e-06
    2. '[(' → logprob: -13.375008583068848
    3. 'qs' → logprob: -13.625008583068848
    4. '{"' → logprob: -14.000008583068848
    5. '(gs' → logprob: -14.500008583068848
    6. '[' → logprob: -14.875008583068848
    7. ' gs' → logprob: -14.875008583068848
    8. '#' → logprob: -15.000008583068848
    9. 'ps' → logprob: -15.000008583068848
    10. '[[' → logprob: -15.125008583068848

Token 551: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.020611027255654335
    2. '):
' → logprob: -3.895611047744751
    3. ')' → logprob: -10.145610809326172
    4. '):
' → logprob: -10.770610809326172
    5. ':' → logprob: -11.770610809326172
    6. ' ):' → logprob: -15.020610809326172
    7. ']:' → logprob: -15.270610809326172
    8. '):(' → logprob: -16.270610809326172
    9. '):

' → logprob: -16.395610809326172
    10. ':
' → logprob: -16.395610809326172

Token 552: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005823325831443071
    2. ' endpoint' → logprob: -5.755823135375977
    3. 'endpoint' → logprob: -6.005823135375977
    4. '           ' → logprob: -9.380823135375977
    5. '       ' → logprob: -10.755823135375977
    6. '[' → logprob: -11.130823135375977
    7. '```' → logprob: -11.130823135375977
    8. '(endpoint' → logprob: -11.255823135375977
    9. ' ' → logprob: -12.255823135375977
    10. '{
' → logprob: -12.505823135375977

Token 553: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' (adapté à ' endpoint') → logprob: -0.1523185521364212
    2. '   ' → logprob: -2.4023184776306152
    3. ' endpoint' → logprob: -3.0273184776306152
    4. '           ' → logprob: -6.152318477630615
    5. ' ' → logprob: -9.152318954467773
    6. '       ' → logprob: -9.652318954467773
    7. '(endpoint' → logprob: -11.527318954467773
    8. '               ' → logprob: -12.152318954467773
    9. '_endpoint' → logprob: -12.152318954467773
    10. 'Endpoint' → logprob: -12.527318954467773

Token 554: '_seg' (ID: 78972)
  Prédit: '_seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seg' → logprob: -1.3782830137643032e-05
    2. 'seg' → logprob: -12.75001335144043
    3. '_sep' → logprob: -12.75001335144043
    4. '_se' → logprob: -13.25001335144043
    5. '[_' → logprob: -13.87501335144043
    6. '[' → logprob: -13.87501335144043
    7. '_segments' → logprob: -14.25001335144043
    8. '_segment' → logprob: -14.62501335144043
    9. '_sig' → logprob: -14.75001335144043
    10. 's' → logprob: -15.00001335144043

Token 555: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.00034058792516589165
    2. 'p' → logprob: -8.000340461730957
    3. '[' → logprob: -12.750340461730957
    4. '
' → logprob: -13.875340461730957
    5. '[
' → logprob: -15.375340461730957
    6. 's' → logprob: -15.625340461730957
    7. '][' → logprob: -15.875340461730957
    8. ' [' → logprob: -16.000341415405273
    9. '

' → logprob: -16.125341415405273
    10. '	p' → logprob: -16.250341415405273

Token 556: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.221884101862088e-05
    2. '[' → logprob: -10.375092506408691
    3. '(' → logprob: -10.750092506408691
    4. 'oints' → logprob: -11.500092506408691
    5. '(p' → logprob: -12.000092506408691
    6. 's' → logprob: -12.250092506408691
    7. 'p' → logprob: -12.625092506408691
    8. 'oint' → logprob: -12.937592506408691
    9. ']' → logprob: -13.937592506408691
    10. 'r' → logprob: -14.125092506408691

Token 557: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -7.97024549683556e-05
    2. ').' → logprob: -9.750080108642578
    3. ' ].' → logprob: -11.750080108642578
    4. ']' → logprob: -12.000080108642578
    5. '.append' → logprob: -12.375080108642578
    6. '.' → logprob: -12.875080108642578
    7. '   ' → logprob: -15.125080108642578
    8. ']).' → logprob: -16.000080108642578
    9. ' ' → logprob: -17.375080108642578
    10. ')].' → logprob: -17.500080108642578

Token 558: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.981667537620524e-06
    2. ' append' → logprob: -13.750001907348633
    3. '.append' → logprob: -14.000001907348633
    4. '_append' → logprob: -17.125001907348633
    5. 'Append' → logprob: -18.375001907348633
    6. 'appen' → logprob: -18.500001907348633
    7. 'app' → logprob: -18.625001907348633
    8. 'pend' → logprob: -20.625001907348633
    9. '	append' → logprob: -20.625001907348633
    10. 'ap' → logprob: -21.375001907348633

Token 559: '(i' (ID: 3649)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10024183988571167
    2. '(i' → logprob: -2.3502418994903564
    3. '((' → logprob: -10.850241661071777
    4. ' i' → logprob: -11.225241661071777
    5. '(' → logprob: -13.475241661071777
    6. '(p' → logprob: -14.475241661071777
    7. '	i' → logprob: -15.725241661071777
    8. 'p' → logprob: -16.225242614746094
    9. ' (' → logprob: -16.725242614746094
    10. '   ' → logprob: -16.850242614746094

Token 560: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00672211404889822
    2. ')
' → logprob: -5.0067219734191895
    3. ')
' → logprob: -12.631722450256348
    4. ')p' → logprob: -12.881722450256348
    5. ' )' → logprob: -15.006722450256348
    6. '           ' → logprob: -15.506722450256348
    7. ')

' → logprob: -16.38172149658203
    8. '       ' → logprob: -16.38172149658203
    9. '),' → logprob: -16.50672149658203
    10. '   ' → logprob: -16.88172149658203

Token 561: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002469113329425454
    2. '       ' → logprob: -6.752469062805176
    3. '   ' → logprob: -7.252469062805176
    4. 'endpoint' → logprob: -8.752469062805176
    5. '<|end|>' → logprob: -8.877469062805176
    6. ' for' → logprob: -9.127469062805176
    7. 'for' → logprob: -9.377469062805176
    8. ' ' → logprob: -10.377469062805176
    9. '          ' → logprob: -10.752469062805176
    10. ' endpoint' → logprob: -11.252469062805176

Token 562: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' (adapté à ' endpoint') → logprob: -0.006254634819924831
    2. 'p' → logprob: -5.25625467300415
    3. ' endpoint' → logprob: -7.13125467300415
    4. '           ' → logprob: -8.756254196166992
    5. ' p' → logprob: -9.881254196166992
    6. '   ' → logprob: -12.006254196166992
    7. '       ' → logprob: -12.631254196166992
    8. '
' → logprob: -14.881254196166992
    9. '_endpoint' → logprob: -14.881254196166992
    10. '.endpoint' → logprob: -15.006254196166992

Token 563: '_seg' (ID: 78972)
  Prédit: '_seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seg' → logprob: -7.226628895296017e-06
    2. '_sep' → logprob: -12.625007629394531
    3. 'seg' → logprob: -13.000007629394531
    4. '_sec' → logprob: -14.875007629394531
    5. '[' → logprob: -15.500007629394531
    6. 'Seg' → logprob: -16.00000762939453
    7. '_' → logprob: -16.12500762939453
    8. '_sig' → logprob: -16.12500762939453
    9. '[p' → logprob: -16.25000762939453
    10. '_seq' → logprob: -16.37500762939453

Token 564: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.0001314295077463612
    2. 'p' → logprob: -9.375131607055664
    3. '[' → logprob: -10.250131607055664
    4. '[
' → logprob: -12.375131607055664
    5. '(p' → logprob: -12.875131607055664
    6. '[s' → logprob: -13.625131607055664
    7. 's' → logprob: -14.250131607055664
    8. '
' → logprob: -14.500131607055664
    9. ' [' → logprob: -14.625131607055664
    10. '   ' → logprob: -14.875131607055664

Token 565: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00019460011390037835
    2. 'p' → logprob: -8.625194549560547
    3. 's' → logprob: -11.625194549560547
    4. '1' → logprob: -12.625194549560547
    5. '[' → logprob: -13.500194549560547
    6. '(p' → logprob: -14.750194549560547
    7. '[p' → logprob: -15.125194549560547
    8. '(' → logprob: -16.000194549560547
    9. ' ' → logprob: -16.687694549560547
    10. '```' → logprob: -16.875194549560547

Token 566: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.00047094907495193183
    2. '.append' → logprob: -8.250471115112305
    3. ').' → logprob: -8.875471115112305
    4. ']' → logprob: -9.750471115112305
    5. ' ].' → logprob: -12.125471115112305
    6. '.' → logprob: -12.875471115112305
    7. ''].' → logprob: -13.875471115112305
    8. '}.' → logprob: -14.000471115112305
    9. '<|end|>' → logprob: -14.250471115112305
    10. ' .' → logprob: -15.125471115112305

Token 567: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -6.704273118884885e-07
    2. '.append' → logprob: -14.500000953674316
    3. ' append' → logprob: -16.375
    4. 'appen' → logprob: -16.625
    5. 'add' → logprob: -18.0
    6. '	append' → logprob: -18.125
    7. 'app' → logprob: -19.875
    8. 'Append' → logprob: -20.625
    9. '_append' → logprob: -21.75
    10. '```' → logprob: -22.375

Token 568: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0007104054093360901
    2. 'i' → logprob: -7.250710487365723
    3. 's' → logprob: -15.625710487365723
    4. ' i' → logprob: -15.750710487365723
    5. '[i' → logprob: -16.375709533691406
    6. '(' → logprob: -16.500709533691406
    7. '	i' → logprob: -18.750709533691406
    8. '(s' → logprob: -19.125709533691406
    9. ' (' → logprob: -19.375709533691406
    10. ',i' → logprob: -19.375709533691406

Token 569: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ')
' → logprob: -12.750003814697266
    3. '<|end|>' → logprob: -15.250003814697266
    4. ' )' → logprob: -16.375003814697266
    5. ')return' → logprob: -16.875003814697266
    6. '       ' → logprob: -17.250003814697266
    7. ')

' → logprob: -17.875003814697266
    8. ')#' → logprob: -18.000003814697266
    9. '),' → logprob: -18.125003814697266
    10. ')}' → logprob: -18.250003814697266

Token 570: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20780043303966522
    2. '<|end|>' → logprob: -1.7078003883361816
    3. '<|end|>' → logprob: -6.582800388336182
    4. ' for' → logprob: -6.582800388336182
    5. '
' → logprob: -7.207800388336182
    6. 'for' → logprob: -7.332800388336182
    7. '        
' → logprob: -7.457800388336182
    8. '           ' → logprob: -7.582800388336182
    9. '   ' → logprob: -7.707800388336182
    10. '	for' → logprob: -9.08280086517334

Token 571: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5782480239868164
    2. 'for' → logprob: -2.4532480239868164
    3. 'visited' → logprob: -2.4532480239868164
    4. '#' (adapté à ' #') → logprob: -3.0782480239868164
    5. 'sign' → logprob: -3.0782480239868164
    6. 'edges' → logprob: -3.5782480239868164
    7. 'stre' → logprob: -3.9532480239868164
    8. 'graph' → logprob: -4.078248023986816
    9. ' for' → logprob: -4.203248023986816
    10. 'street' → logprob: -4.703248023986816

Token 572: ' Build' (ID: 10885)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -1.0136427879333496
    2. '#' → logprob: -1.8886427879333496
    3. 'sign' → logprob: -1.8886427879333496
    4. 'graph' → logprob: -2.2636427879333496
    5. '       ' → logprob: -2.5136427879333496
    6. 'stre' → logprob: -2.6386427879333496
    7. 'edges' → logprob: -3.5136427879333496
    8. 'visited' → logprob: -4.26364278793335
    9. 'is' → logprob: -4.63864278793335
    10. 'adj' → logprob: -5.76364278793335

Token 573: ' street' (ID: 12901)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.03926706314086914
    2. ' graph' → logprob: -3.289267063140869
    3. 'adj' → logprob: -7.039267063140869
    4. 'g' → logprob: -9.289266586303711
    5. ' adjacency' → logprob: -9.414266586303711
    6. 'edges' → logprob: -9.914266586303711
    7. ' adj' → logprob: -10.164266586303711
    8. 'graphs' → logprob: -10.664266586303711
    9. 'neighbors' → logprob: -11.539266586303711
    10. ' edges' → logprob: -11.664266586303711

Token 574: ' graph' (ID: 7465)
  Prédit: '_graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.14178545773029327
    2. 'graph' → logprob: -2.6417853832244873
    3. '_segments' → logprob: -3.7667853832244873
    4. '_edges' → logprob: -4.266785621643066
    5. '_se' → logprob: -4.766785621643066
    6. 's' → logprob: -5.766785621643066
    7. '_map' → logprob: -5.891785621643066
    8. '_adj' → logprob: -5.891785621643066
    9. '_nodes' → logprob: -6.141785621643066
    10. '_points' → logprob: -7.391785621643066

Token 575: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26498347520828247
    2. ' street' → logprob: -2.5149834156036377
    3. 'graph' → logprob: -3.0149834156036377
    4. ' graph' → logprob: -3.2649834156036377
    5. ',' → logprob: -3.6399834156036377
    6. 'street' → logprob: -4.264983654022217
    7. ' =' → logprob: -4.514983654022217
    8. '=' → logprob: -5.639983654022217
    9. 'stre' → logprob: -5.764983654022217
    10. ':' → logprob: -5.764983654022217

Token 576: '       ' (ID: 309)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.8405903577804565
    2. ' street' → logprob: -1.3405903577804565
    3. 'graph' → logprob: -1.9655903577804565
    4. '       ' → logprob: -2.090590476989746
    5. ' graph' → logprob: -3.590590476989746
    6. 'stre' → logprob: -4.465590476989746
    7. 'import' → logprob: -6.965590476989746
    8. 'G' → logprob: -6.965590476989746
    9. 'from' → logprob: -7.715590476989746
    10. ' streets' → logprob: -8.090590476989746

Token 577: ' #' (ID: 1069)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.40834665298461914
    2. 'graph' → logprob: -1.2833466529846191
    3. ' street' → logprob: -3.283346652984619
    4. 'import' → logprob: -4.533346652984619
    5. ' graph' → logprob: -5.408346652984619
    6. '       ' → logprob: -6.658346652984619
    7. '   ' → logprob: -6.908346652984619
    8. 'stre' → logprob: -7.033346652984619
    9. 'from' → logprob: -7.158346652984619
    10. 'G' → logprob: -7.283346652984619

Token 578: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.18761257827281952
    2. 'graph' → logprob: -1.937612533569336
    3. ' street' → logprob: -4.062612533569336
    4. 'stre' → logprob: -5.812612533569336
    5. ' graph' → logprob: -6.437612533569336
    6. 'import' → logprob: -6.437612533569336
    7. 'from' → logprob: -6.937612533569336
    8. 'G' → logprob: -7.062612533569336
    9. '       ' → logprob: -7.187612533569336
    10. 'g' → logprob: -7.562612533569336

Token 579: ' segments' (ID: 33749)
  Prédit: '_graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_graph' → logprob: -0.31868278980255127
    2. '_nodes' → logprob: -2.3186826705932617
    3. 'graph' → logprob: -2.5686826705932617
    4. '_edges' → logprob: -2.8186826705932617
    5. '_points' → logprob: -3.5686826705932617
    6. '_segments' → logprob: -5.693682670593262
    7. '_se' → logprob: -6.318682670593262
    8. '_adj' → logprob: -6.818682670593262
    9. ' =' → logprob: -7.068682670593262
    10. '_pts' → logprob: -7.568682670593262

Token 580: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5051761865615845
    2. '_st' → logprob: -1.6301761865615845
    3. '=' → logprob: -1.7551761865615845
    4. '_' → logprob: -4.380176067352295
    5. '_edges' → logprob: -5.005176067352295
    6. 's' → logprob: -5.880176067352295
    7. '=[]' → logprob: -6.380176067352295
    8. '_s' → logprob: -6.880176067352295
    9. '_indices' → logprob: -7.005176067352295
    10. ',' → logprob: -7.880176067352295

Token 581: ' those' (ID: 2617)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.21400485932826996
    2. '[s' → logprob: -1.9640048742294312
    3. '[p' → logprob: -3.2140047550201416
    4. '[' → logprob: -5.589004993438721
    5. ' [' → logprob: -5.714004993438721
    6. '[]' → logprob: -6.339004993438721
    7. '[]
' → logprob: -6.589004993438721
    8. '[(' → logprob: -6.964004993438721
    9. '[x' → logprob: -8.089004516601562
    10. '[e' → logprob: -8.464004516601562

Token 582: ' where' (ID: 1919)
  Prédit: ' where'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' where' → logprob: -0.37262848019599915
    2. ' for' → logprob: -1.9976284503936768
    3. 'for' → logprob: -2.6226284503936768
    4. 'where' → logprob: -2.9976284503936768
    5. ' with' → logprob: -3.6226284503936768
    6. 'with' → logprob: -3.8726284503936768
    7. '[i' → logprob: -6.497628688812256
    8. ' whose' → logprob: -6.622628688812256
    9. ' that' → logprob: -6.872628688812256
    10. ' i' → logprob: -8.247628211975098

Token 583: ' both' (ID: 2973)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.02979203499853611
    2. ' adjacency' → logprob: -3.529792070388794
    3. 'all' → logprob: -10.529791831970215
    4. 'se' → logprob: -12.279791831970215
    5. 'both' → logprob: -12.279791831970215
    6. 'min' → logprob: -12.779791831970215
    7. '(ad' → logprob: -13.779791831970215
    8. 'max' → logprob: -15.029791831970215
    9. '(' → logprob: -15.154791831970215
    10. 'seg' → logprob: -15.654791831970215

Token 584: ' endpoints' (ID: 76454)
  Prédit: 'end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'end' → logprob: -0.46585965156555176
    2. ' endpoints' → logprob: -1.4658596515655518
    3. 'endpoint' → logprob: -2.8408596515655518
    4. 'points' → logprob: -3.2158596515655518
    5. 'adj' → logprob: -3.3408596515655518
    6. 'se' → logprob: -6.090859413146973
    7. 'p' → logprob: -6.590859413146973
    8. ' adjacency' → logprob: -6.840859413146973
    9. 'ends' → logprob: -7.090859413146973
    10. ' points' → logprob: -7.215859413146973

Token 585: ' have' (ID: 679)
  Prédit: 'have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'have' → logprob: -0.09155940264463425
    2. ' have' → logprob: -2.466559410095215
    3. 'in' → logprob: -6.966559410095215
    4. ')' → logprob: -7.466559410095215
    5. ' in' → logprob: -7.841559410095215
    6. '[' → logprob: -9.216559410095215
    7. '_have' → logprob: -9.216559410095215
    8. ',' → logprob: -9.466559410095215
    9. '   ' → logprob: -9.966559410095215
    10. 'are' → logprob: -10.091559410095215

Token 586: ' degree' (ID: 9882)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.023251185193657875
    2. ' adjacency' → logprob: -3.7732512950897217
    3. '>' → logprob: -13.1482515335083
    4. '>=' → logprob: -13.6482515335083
    5. ' adj' → logprob: -13.7732515335083
    6. '   ' → logprob: -14.7732515335083
    7. '1' → logprob: -14.8982515335083
    8. '```' → logprob: -15.1482515335083
    9. 'Adj' → logprob: -15.5232515335083
    10. ' ' → logprob: -16.148250579833984

Token 587: '>' (ID: 29)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.05049747973680496
    2. ' >=' → logprob: -3.425497531890869
    3. '>' → logprob: -4.300497531890869
    4. '[' → logprob: -6.175497531890869
    5. 'se' → logprob: -8.300497055053711
    6. ']>=' → logprob: -8.550497055053711
    7. ')>=' → logprob: -8.675497055053711
    8. '≥' → logprob: -8.800497055053711
    9. 's' → logprob: -9.175497055053711
    10. ' >' → logprob: -9.550497055053711

Token 588: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.37559404969215393
    2. '1' → logprob: -1.2505940198898315
    3. '0' → logprob: -3.625594139099121
    4. ' ' → logprob: -9.625594139099121
    5. '=
' → logprob: -10.125594139099121
    6. '>' → logprob: -10.750594139099121
    7. ' =' → logprob: -12.000594139099121
    8. '
' → logprob: -12.250594139099121
    9. '>=' → logprob: -12.750594139099121
    10. '```' → logprob: -13.563094139099121

Token 589: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02671021968126297
    2. ' and' → logprob: -4.151710033416748
    3. '<|end|>' → logprob: -5.151710033416748
    4. '
' → logprob: -6.651710033416748
    5. ',' → logprob: -6.776710033416748
    6. ' =' → logprob: -8.276710510253906
    7. '   ' → logprob: -8.276710510253906
    8. ' or' → logprob: -8.276710510253906
    9. '        
' → logprob: -8.526710510253906
    10. 's' → logprob: -8.651710510253906

Token 590: ' connected' (ID: 12079)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.7195408344268799
    2. '>=' → logprob: -1.0945408344268799
    3. 'True' → logprob: -2.71954083442688
    4. '==' → logprob: -3.59454083442688
    5. ' adjacency' → logprob: -4.094540596008301
    6. '>' → logprob: -4.219540596008301
    7. '=' → logprob: -4.469540596008301
    8. 'endpoint' → logprob: -4.469540596008301
    9. ' True' → logprob: -4.969540596008301
    10. '(True' → logprob: -5.719540596008301

Token 591: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2624509632587433
    2. 'and' → logprob: -2.762450933456421
    3. ' and' → logprob: -2.887450933456421
    4. 'for' → logprob: -3.887450933456421
    5. 'def' → logprob: -4.012451171875
    6. 's' → logprob: -4.262451171875
    7. '<|end|>' → logprob: -4.512451171875
    8. ',' → logprob: -4.637451171875
    9. ' for' → logprob: -5.012451171875
    10. '=' → logprob: -5.512451171875

Token 592: ' more' (ID: 945)
  Prédit: 'more'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'more' → logprob: -1.4283074140548706
    2. '>' → logprob: -1.5533074140548706
    3. 'se' → logprob: -2.05330753326416
    4. ' at' → logprob: -2.42830753326416
    5. '2' → logprob: -2.42830753326416
    6. '1' → logprob: -2.92830753326416
    7. 'at' → logprob: -3.30330753326416
    8. 'another' → logprob: -3.42830753326416
    9. 'multiple' → logprob: -3.42830753326416
    10. ' more' → logprob: -3.67830753326416

Token 593: ' than' (ID: 1572)
  Prédit: 'than'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'than' → logprob: -0.03844054043292999
    2. ' than' → logprob: -3.288440465927124
    3. 'se' → logprob: -8.538440704345703
    4. 'segments' → logprob: -9.413440704345703
    5. 'or' → logprob: -10.538440704345703
    6. '_than' → logprob: -10.663440704345703
    7. '       ' → logprob: -11.163440704345703
    8. '           ' → logprob: -11.663440704345703
    9. '<|end|>' → logprob: -11.788440704345703
    10. '1' → logprob: -12.163440704345703

Token 594: ' one' (ID: 1001)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0006902746972627938
    2. 'one' → logprob: -8.250690460205078
    3. ' ' → logprob: -8.375690460205078
    4. '=' → logprob: -9.000690460205078
    5. ' one' → logprob: -10.000690460205078
    6. '0' → logprob: -11.625690460205078
    7. '```' → logprob: -12.250690460205078
    8. '[' → logprob: -12.375690460205078
    9. 'se' → logprob: -13.000690460205078
    10. '2' → logprob: -13.125690460205078

Token 595: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.8796218037605286
    2. 'se' → logprob: -1.0046217441558838
    3. '<|end|>' → logprob: -2.629621744155884
    4. ' segment' → logprob: -3.754621744155884
    5. 'segments' → logprob: -4.004621982574463
    6. ',' → logprob: -4.254621982574463
    7. ')' → logprob: -4.379621982574463
    8. 'seg' → logprob: -4.504621982574463
    9. ' in' → logprob: -4.629621982574463
    10. '.' → logprob: -4.629621982574463

Token 596: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015154840424656868
    2. '<|end|>' → logprob: -4.640154838562012
    3. 'def' → logprob: -6.640154838562012
    4. ',' → logprob: -7.265154838562012
    5. ' =' → logprob: -7.515154838562012
    6. 's' → logprob: -7.515154838562012
    7. '<|end|>' → logprob: -7.765154838562012
    8. '.' → logprob: -7.890154838562012
    9. '        
' → logprob: -8.515154838562012
    10. ')' → logprob: -8.890154838562012

Token 597: 'means' (ID: 100359)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009210065007209778
    2. ' )' → logprob: -5.509210109710693
    3. ' or' → logprob: -7.134210109710693
    4. '),' → logprob: -7.259210109710693
    5. ').' → logprob: -7.509210109710693
    6. ')
' → logprob: -7.509210109710693
    7. '<|end|>' → logprob: -7.759210109710693
    8. '>' → logprob: -7.884210109710693
    9. ' and' → logprob: -8.009209632873535
    10. 's' → logprob: -8.134209632873535

Token 598: ' intersection' (ID: 42002)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.38839104771614075
    2. ' adjacency' → logprob: -1.2633910179138184
    3. ' True' → logprob: -4.888391017913818
    4. 'se' → logprob: -5.138391017913818
    5. 'True' → logprob: -5.388391017913818
    6. 'len' → logprob: -5.513391017913818
    7. 'both' → logprob: -5.513391017913818
    8. 'they' → logprob: -6.138391017913818
    9. ' both' → logprob: -6.263391017913818
    10. '1' → logprob: -6.388391017913818

Token 599: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.118807353079319
    2. 's' → logprob: -2.868807315826416
    3. ' or' → logprob: -3.618807315826416
    4. '<|end|>' → logprob: -4.868807315826416
    5. '>' → logprob: -5.243807315826416
    6. ']' → logprob: -5.493807315826416
    7. ')>' → logprob: -5.618807315826416
    8. '[' → logprob: -6.493807315826416
    9. ',' → logprob: -7.243807315826416
    10. '>=' → logprob: -7.743807315826416

Token 600: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11165830492973328
    2. '<|end|>' → logprob: -2.4866583347320557
    3. ' or' → logprob: -5.111658096313477
    4. ')' → logprob: -5.736658096313477
    5. ' for' → logprob: -5.986658096313477
    6. '
' → logprob: -6.111658096313477
    7. ' and' → logprob: -6.236658096313477
    8. '<|end|>' → logprob: -6.361658096313477
    9. ',' → logprob: -6.736658096313477
    10. '        
' → logprob: -7.361658096313477

Token 601: ' #' (ID: 1069)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.4478277564048767
    2. ' street' → logprob: -2.0728278160095215
    3. 'street' → logprob: -2.1978278160095215
    4. '       ' → logprob: -2.3228278160095215
    5. ' streets' → logprob: -4.4478278160095215
    6. 'st' → logprob: -5.9478278160095215
    7. 's' → logprob: -6.1978278160095215
    8. 'edges' → logprob: -6.3228278160095215
    9. ' for' → logprob: -6.8228278160095215
    10. ')' → logprob: -7.3228278160095215

Token 602: ' signs' (ID: 17424)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.12661032378673553
    2. 'street' → logprob: -2.251610279083252
    3. '       ' → logprob: -4.501610279083252
    4. ' streets' → logprob: -7.251610279083252
    5. 'for' → logprob: -7.876610279083252
    6. ' street' → logprob: -8.00161075592041
    7. 'st' → logprob: -8.12661075592041
    8. '   ' → logprob: -8.37661075592041
    9. '#' → logprob: -8.87661075592041
    10. 'is' → logprob: -9.00161075592041

Token 603: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47651976346969604
    2. '=' → logprob: -1.7265198230743408
    3. ':' → logprob: -2.476519823074341
    4. '_segments' → logprob: -2.851519823074341
    5. '_sign' → logprob: -3.976519823074341
    6. 's' → logprob: -4.476519584655762
    7. '=[]' → logprob: -4.851519584655762
    8. '_are' → logprob: -5.226519584655762
    9. '_s' → logprob: -5.476519584655762
    10. '_st' → logprob: -5.476519584655762

Token 604: ' those' (ID: 2617)
  Prédit: ' ['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -1.3358328342437744
    2. ' those' → logprob: -1.8358328342437744
    3. '[p' → logprob: -2.0858328342437744
    4. 'those' → logprob: -2.0858328342437744
    5. '[i' → logprob: -2.2108328342437744
    6. '[' → logprob: -2.5858328342437744
    7. '[(' → logprob: -3.3358328342437744
    8. '[s' → logprob: -3.7108328342437744
    9. 'segments' → logprob: -3.8358328342437744
    10. '[]' → logprob: -4.085832595825195

Token 605: ' attached' (ID: 18618)
  Prédit: ' where'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' where' → logprob: -0.25300246477127075
    2. 'where' → logprob: -1.503002405166626
    3. 'with' → logprob: -7.253002643585205
    4. ' with' → logprob: -8.003002166748047
    5. '       ' → logprob: -12.003002166748047
    6. 'segments' → logprob: -12.128002166748047
    7. '   ' → logprob: -12.628002166748047
    8. 'for' → logprob: -12.628002166748047
    9. ' for' → logprob: -13.503002166748047
    10. '#' → logprob: -13.628002166748047

Token 606: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5313568711280823
    2. 'to' → logprob: -0.9063568711280823
    3. ' at' → logprob: -5.6563568115234375
    4. ' only' → logprob: -6.1563568115234375
    5. 'only' → logprob: -6.4063568115234375
    6. 'at' → logprob: -8.531356811523438
    7. 'where' → logprob: -8.531356811523438
    8. ' where' → logprob: -8.656356811523438
    9. ' exactly' → logprob: -9.656356811523438
    10. '   ' → logprob: -9.656356811523438

Token 607: ' endpoint' (ID: 29703)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6008263230323792
    2. 'points' → logprob: -1.7258262634277344
    3. 'an' → logprob: -1.9758262634277344
    4. 'endpoint' → logprob: -2.7258262634277344
    5. 'nodes' → logprob: -3.2258262634277344
    6. 'one' → logprob: -4.475826263427734
    7. 'point' → logprob: -5.725826263427734
    8. 'exact' → logprob: -5.975826263427734
    9. ' endpoints' → logprob: -6.100826263427734
    10. ' a' → logprob: -6.350826263427734

Token 608: ' with' (ID: 483)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.01619894430041313
    2. 'with' → logprob: -5.141199111938477
    3. ' with' → logprob: -5.266199111938477
    4. ' where' → logprob: -5.891199111938477
    5. ',' → logprob: -7.266199111938477
    6. 'where' → logprob: -7.516199111938477
    7. ' s' → logprob: -8.141199111938477
    8. ' of' → logprob: -8.266199111938477
    9. ' that' → logprob: -9.266199111938477
    10. '       ' → logprob: -9.766199111938477

Token 609: ' degree' (ID: 9882)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.03729433938860893
    2. 'degree' → logprob: -4.037294387817383
    3. '1' → logprob: -4.287294387817383
    4. 'default' → logprob: -5.787294387817383
    5. ' adjacency' → logprob: -6.287294387817383
    6. 'exact' → logprob: -8.537294387817383
    7. '=' → logprob: -10.662294387817383
    8. ' degree' → logprob: -11.662294387817383
    9. 'only' → logprob: -11.662294387817383
    10. 'count' → logprob: -11.787294387817383

Token 610: '==' (ID: 560)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1895737648010254
    2. '==' → logprob: -1.8145737648010254
    3. '>' → logprob: -5.564573764801025
    4. ' ' → logprob: -6.064573764801025
    5. '=' → logprob: -6.189573764801025
    6. ' ==' → logprob: -7.439573764801025
    7. '```' → logprob: -8.439573287963867
    8. 's' → logprob: -8.689573287963867
    9. '>=' → logprob: -9.064573287963867
    10. '[' → logprob: -9.189573287963867

Token 611: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.3319124011322856e-05
    2. ' ' → logprob: -11.875022888183594
    3. '=' → logprob: -12.125022888183594
    4. '0' → logprob: -12.750022888183594
    5. '2' → logprob: -13.125022888183594
    6. '```' → logprob: -13.375022888183594
    7. '>' → logprob: -13.500022888183594
    8. '!' → logprob: -14.500022888183594
    9. '
' → logprob: -15.500022888183594
    10. '==' → logprob: -15.875022888183594

Token 612: ' at' (ID: 540)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.09817392379045486
    2. '       ' → logprob: -3.2231738567352295
    3. '<|end|>' → logprob: -3.3481738567352295
    4. '        
' → logprob: -5.973174095153809
    5. ':' → logprob: -6.348174095153809
    6. '  
' → logprob: -6.473174095153809
    7. ',' → logprob: -6.598174095153809
    8. 's' → logprob: -6.848174095153809
    9. '=' → logprob: -6.973174095153809
    10. ' for' → logprob: -6.973174095153809

Token 613: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.04563494399189949
    2. 'least' → logprob: -3.9206349849700928
    3. 'either' → logprob: -4.545634746551514
    4. 'exact' → logprob: -5.045634746551514
    5. 'that' → logprob: -5.795634746551514
    6. 'p' → logprob: -7.045634746551514
    7. 'endpoint' → logprob: -7.170634746551514
    8. 'se' → logprob: -7.170634746551514
    9. '1' → logprob: -7.295634746551514
    10. 'the' → logprob: -7.545634746551514

Token 614: ' side' (ID: 4307)
  Prédit: ' endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' endpoint' → logprob: -0.9796698093414307
    2. 'endpoint' → logprob: -1.3546698093414307
    3. ')' → logprob: -2.1046698093414307
    4. ' end' → logprob: -2.7296698093414307
    5. ' of' → logprob: -2.8546698093414307
    6. ']' → logprob: -3.6046698093414307
    7. '[' → logprob: -4.104669570922852
    8. '.' → logprob: -4.104669570922852
    9. ' ' → logprob: -4.229669570922852
    10. 'of' → logprob: -4.854669570922852

Token 615: ' and' (ID: 326)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.14988547563552856
    2. '       ' → logprob: -2.774885416030884
    3. '<|end|>' → logprob: -3.024885416030884
    4. ',' → logprob: -5.649885654449463
    5. ':' → logprob: -5.899885654449463
    6. '        
' → logprob: -6.024885654449463
    7. '#' → logprob: -6.149885654449463
    8. 'def' → logprob: -6.149885654449463
    9. '=' → logprob: -6.274885654449463
    10. 's' → logprob: -6.274885654449463

Token 616: ' open' (ID: 2494)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'degree' → logprob: -0.6010763049125671
    2. '1' → logprob: -1.726076364517212
    3. ' degree' → logprob: -1.976076364517212
    4. 'the' → logprob: -3.351076364517212
    5. 'other' → logprob: -3.976076364517212
    6. ' the' → logprob: -3.976076364517212
    7. ' other' → logprob: -4.101076126098633
    8. ' ' → logprob: -4.601076126098633
    9. 'endpoint' → logprob: -5.101076126098633
    10. 'one' → logprob: -5.601076126098633

Token 617: ' other' (ID: 1273)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03618086129426956
    2. '.' → logprob: -4.7861809730529785
    3. ',' → logprob: -4.9111809730529785
    4. '<|end|>' → logprob: -5.1611809730529785
    5. 'for' → logprob: -5.9111809730529785
    6. 's' → logprob: -6.4111809730529785
    7. '
' → logprob: -6.4111809730529785
    8. '<|end|>' → logprob: -6.6611809730529785
    9. ' for' → logprob: -6.7861809730529785
    10. '#' → logprob: -7.0361809730529785

Token 618: ' endpoint' (ID: 29703)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.18076537549495697
    2. '<|end|>' → logprob: -2.430765390396118
    3. '       ' → logprob: -2.930765390396118
    4. 'def' → logprob: -5.430765151977539
    5. 's' → logprob: -5.930765151977539
    6. ',' → logprob: -5.930765151977539
    7. '<|end|>' → logprob: -6.055765151977539
    8. '        
' → logprob: -6.180765151977539
    9. '.' → logprob: -6.305765151977539
    10. '#' → logprob: -6.805765151977539

Token 619: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12975956499576569
    2. 'stre' → logprob: -2.8797595500946045
    3. '<|end|>' → logprob: -4.254759788513184
    4. '#' → logprob: -4.504759788513184
    5. 's' → logprob: -5.004759788513184
    6. 'edges' → logprob: -5.129759788513184
    7. ',' → logprob: -5.254759788513184
    8. ' for' → logprob: -6.004759788513184
    9. 'def' → logprob: -6.004759788513184
    10. 'sign' → logprob: -6.254759788513184

Token 620: 'degree' (ID: 98659)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007775885751470923
    2. ' )' → logprob: -7.625777721405029
    3. ').' → logprob: -8.625777244567871
    4. '<|end|>' → logprob: -10.875777244567871
    5. ')
' → logprob: -11.000777244567871
    6. '       ' → logprob: -11.750777244567871
    7. '1' → logprob: -11.750777244567871
    8. '0' → logprob: -12.000777244567871
    9. '   ' → logprob: -12.125777244567871
    10. '),' → logprob: -12.125777244567871

Token 621: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.006545081734657288
    2. ' ==' → logprob: -5.881545066833496
    3. '>' → logprob: -7.006545066833496
    4. ']==' → logprob: -7.256545066833496
    5. '!=' → logprob: -7.256545066833496
    6. ')==' → logprob: -7.631545066833496
    7. '<=' → logprob: -8.256545066833496
    8. ')' → logprob: -8.631545066833496
    9. '<' → logprob: -9.131545066833496
    10. '=' → logprob: -9.756545066833496

Token 622: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2813703715801239
    2. '1' → logprob: -1.4063704013824463
    3. '=' → logprob: -9.031370162963867
    4. ' ' → logprob: -9.656370162963867
    5. '==' → logprob: -11.531370162963867
    6. '```' → logprob: -11.781370162963867
    7. ')' → logprob: -12.406370162963867
    8. '{' → logprob: -13.656370162963867
    9. '[' → logprob: -13.843870162963867
    10. '   ' → logprob: -13.843870162963867

Token 623: ' or' (ID: 503)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006130746915005147
    2. ' )' → logprob: -8.00061321258545
    3. ' or' → logprob: -8.50061321258545
    4. ')
' → logprob: -10.25061321258545
    5. '<|end|>' → logprob: -10.87561321258545
    6. ').' → logprob: -11.50061321258545
    7. '       ' → logprob: -12.62561321258545
    8. '   ' → logprob: -13.62561321258545
    9. '
' → logprob: -13.87561321258545
    10. '),' → logprob: -13.87561321258545

Token 624: ' no' (ID: 860)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.21697138249874115
    2. 'not' → logprob: -2.4669713973999023
    3. ' not' → logprob: -3.2169713973999023
    4. ')' → logprob: -4.091971397399902
    5. 'none' → logprob: -4.716971397399902
    6. 'unknown' → logprob: -4.841971397399902
    7. 'abs' → logprob: -5.466971397399902
    8. 'None' → logprob: -5.591971397399902
    9. 'missing' → logprob: -5.966971397399902
    10. ' ' → logprob: -6.216971397399902

Token 625: ' connection' (ID: 6703)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6177529096603394
    2. 't' → logprob: -1.6177529096603394
    3. 's' → logprob: -2.992753028869629
    4. ' connection' → logprob: -2.992753028869629
    5. ' )' → logprob: -3.867753028869629
    6. 'neighbors' → logprob: -4.117753028869629
    7. 'n' → logprob: -4.242753028869629
    8. 'connection' → logprob: -4.492753028869629
    9. ' other' → logprob: -4.492753028869629
    10. 'segment' → logprob: -4.992753028869629

Token 626: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.506661833962426e-05
    2. '[' → logprob: -10.62508487701416
    3. ' )' → logprob: -10.75008487701416
    4. ').' → logprob: -10.87508487701416
    5. 's' → logprob: -11.87508487701416
    6. ')
' → logprob: -12.87508487701416
    7. ' at' → logprob: -12.87508487701416
    8. '),' → logprob: -13.62508487701416
    9. ')...' → logprob: -14.00008487701416
    10. '<|end|>' → logprob: -14.37508487701416

Token 627: '        
' (ID: 3564)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8591766953468323
    2. '
' → logprob: -0.9841766953468323
    3. '<|end|>' → logprob: -1.9841766357421875
    4. '        
' → logprob: -3.6091766357421875
    5. 'def' → logprob: -5.3591766357421875
    6. ' for' → logprob: -5.8591766357421875
    7. ',' → logprob: -5.8591766357421875
    8. ')' → logprob: -5.8591766357421875
    9. '  
' → logprob: -5.8591766357421875
    10. '   ' → logprob: -6.2341766357421875

Token 628: '       ' (ID: 309)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.4938022494316101
    2. '       ' → logprob: -1.2438023090362549
    3. 'street' → logprob: -3.243802309036255
    4. ' street' → logprob: -4.118802070617676
    5. 'edges' → logprob: -4.493802070617676
    6. '#' → logprob: -4.743802070617676
    7. 'sign' → logprob: -5.243802070617676
    8. ' streets' → logprob: -5.493802070617676
    9. '        
' → logprob: -5.993802070617676
    10. 'def' → logprob: -6.118802070617676

Token 629: ' #' (ID: 1069)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.3074324131011963
    2. 'street' → logprob: -1.9324324131011963
    3. ' street' → logprob: -2.8074324131011963
    4. '#' (adapté à ' #') → logprob: -4.682432174682617
    5. '       ' → logprob: -4.682432174682617
    6. ' for' → logprob: -5.057432174682617
    7. ' streets' → logprob: -5.057432174682617
    8. 'sign' → logprob: -5.307432174682617
    9. 'for' → logprob: -5.432432174682617
    10. 'is' → logprob: -5.432432174682617

Token 630: ' Determine' (ID: 57076)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.5251954793930054
    2. 'is' → logprob: -1.2751954793930054
    3. 'stre' → logprob: -2.275195598602295
    4. 'segment' → logprob: -5.150195598602295
    5. '#' → logprob: -5.275195598602295
    6. ' street' → logprob: -5.775195598602295
    7. 'edge' → logprob: -6.025195598602295
    8. 'edges' → logprob: -6.025195598602295
    9. 'for' → logprob: -6.650195598602295
    10. 'st' → logprob: -6.775195598602295

Token 631: ' which' (ID: 1118)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.305223286151886
    2. 'stre' → logprob: -1.4302232265472412
    3. 'segment' → logprob: -4.55522346496582
    4. 'is' → logprob: -5.05522346496582
    5. ' street' → logprob: -5.80522346496582
    6. 'edge' → logprob: -7.30522346496582
    7. 'for' → logprob: -7.43022346496582
    8. 'st' → logprob: -7.43022346496582
    9. 'types' → logprob: -7.93022346496582
    10. '#' → logprob: -8.18022346496582

Token 632: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.3480313718318939
    2. ' segments' → logprob: -2.4730312824249268
    3. 'se' → logprob: -2.5980312824249268
    4. 's' → logprob: -2.8480312824249268
    5. 'seg' → logprob: -3.7230312824249268
    6. '_segments' → logprob: -4.348031520843506
    7. ' seg' → logprob: -4.848031520843506
    8. 'i' → logprob: -5.223031520843506
    9. 'segment' → logprob: -5.473031520843506
    10. ' endpoints' → logprob: -5.598031520843506

Token 633: ' are' (ID: 553)
  Prédit: '_are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_are' → logprob: -0.7287988662719727
    2. 'are' → logprob: -0.8537988662719727
    3. ' are' → logprob: -2.8537988662719727
    4. '_have' → logprob: -3.9787988662719727
    5. 'have' → logprob: -4.728798866271973
    6. '_is' → logprob: -6.228798866271973
    7. 'is' → logprob: -6.353798866271973
    8. ' have' → logprob: -7.228798866271973
    9. ' =' → logprob: -7.228798866271973
    10. '_' → logprob: -8.853798866271973

Token 634: ' signs' (ID: 17424)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.012822993099689484
    2. ' streets' → logprob: -5.012823104858398
    3. 'street' → logprob: -5.262823104858398
    4. 'st' → logprob: -7.137823104858398
    5. ' street' → logprob: -9.387823104858398
    6. '"' → logprob: -11.512823104858398
    7. '_st' → logprob: -11.887823104858398
    8. 'sign' → logprob: -12.887823104858398
    9. '[' → logprob: -13.762823104858398
    10. '['' → logprob: -13.762823104858398

Token 635: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36658841371536255
    2. 'sign' → logprob: -1.2415883541107178
    3. 'is' → logprob: -5.241588592529297
    4. '
' → logprob: -5.241588592529297
    5. ' signs' → logprob: -5.991588592529297
    6. '_sign' → logprob: -7.116588592529297
    7. ':' → logprob: -7.116588592529297
    8. ',' → logprob: -7.491588592529297
    9. '        
' → logprob: -8.116588592529297
    10. ' =' → logprob: -8.366588592529297

Token 636: ' if' (ID: 538)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.011973733082413673
    2. ' signs' → logprob: -5.011973857879639
    3. '       ' → logprob: -5.636973857879639
    4. 'is' → logprob: -6.761973857879639
    5. ' sign' → logprob: -8.38697338104248
    6. 'for' → logprob: -9.38697338104248
    7. 'se' → logprob: -9.76197338104248
    8. 'street' → logprob: -10.38697338104248
    9. '        
' → logprob: -10.51197338104248
    10. '   ' → logprob: -10.76197338104248

Token 637: ' one' (ID: 1001)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.36658766865730286
    2. ' adjacency' → logprob: -1.3665876388549805
    3. '(ad' → logprob: -3.1165876388549805
    4. ' (' → logprob: -5.7415876388549805
    5. '(se' → logprob: -5.8665876388549805
    6. '(adj' → logprob: -7.7415876388549805
    7. '(len' → logprob: -7.9915876388549805
    8. 'len' → logprob: -8.49158763885498
    9. '(' → logprob: -8.86658763885498
    10. '(min' → logprob: -9.61658763885498

Token 638: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.48245686292648315
    2. ' endpoint' → logprob: -1.982456922531128
    3. ' of' → logprob: -2.107456922531128
    4. ' in' → logprob: -3.107456922531128
    5. '_endpoint' → logprob: -3.857456922531128
    6. '_seg' → logprob: -3.982456922531128
    7. 'of' → logprob: -4.857456684112549
    8. 'seg' → logprob: -5.607456684112549
    9. ' for' → logprob: -5.607456684112549
    10. '[' → logprob: -6.357456684112549

Token 639: ' is' (ID: 382)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.536788284778595
    2. ' has' → logprob: -1.0367882251739502
    3. '_seg' → logprob: -3.78678822517395
    4. ')' → logprob: -4.536788463592529
    5. 's' → logprob: -5.661788463592529
    6. '       ' → logprob: -5.911788463592529
    7. '   ' → logprob: -6.286788463592529
    8. '_has' → logprob: -6.286788463592529
    9. ',' → logprob: -6.661788463592529
    10. 'degree' → logprob: -6.786788463592529

Token 640: ' attached' (ID: 18618)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.22424712777137756
    2. ' adjacency' → logprob: -2.3492472171783447
    3. 'endpoint' → logprob: -3.4742472171783447
    4. '1' → logprob: -4.724246978759766
    5. '[' → logprob: -5.349246978759766
    6. 'connected' → logprob: -5.474246978759766
    7. 'points' → logprob: -5.599246978759766
    8. 'in' → logprob: -5.599246978759766
    9. 'se' → logprob: -5.599246978759766
    10. 'degree' → logprob: -5.724246978759766

Token 641: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.1207270696759224
    2. ' to' → logprob: -2.245727062225342
    3. 'only' → logprob: -5.370727062225342
    4. ' only' → logprob: -5.870727062225342
    5. '   ' → logprob: -8.4957275390625
    6. '==' → logprob: -9.9957275390625
    7. ' exactly' → logprob: -9.9957275390625
    8. 'exact' → logprob: -10.1207275390625
    9. '_to' → logprob: -11.6207275390625
    10. '```' → logprob: -11.7457275390625

Token 642: ' exactly' (ID: 9707)
  Prédit: 'only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'only' → logprob: -1.134007215499878
    2. 'endpoint' → logprob: -1.634007215499878
    3. 'exact' → logprob: -1.759007215499878
    4. '1' → logprob: -2.009007215499878
    5. 'a' → logprob: -2.634007215499878
    6. 'se' → logprob: -3.759007215499878
    7. ' exactly' → logprob: -3.884007215499878
    8. 'points' → logprob: -4.509007453918457
    9. ' only' → logprob: -4.634007453918457
    10. 'one' → logprob: -5.134007453918457

Token 643: ' one' (ID: 1001)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.006116967182606459
    2. 'one' → logprob: -5.13111686706543
    3. ' one' → logprob: -9.00611686706543
    4. ' ' → logprob: -9.75611686706543
    5. 'only' → logprob: -12.63111686706543
    6. '   ' → logprob: -14.00611686706543
    7. '_one' → logprob: -14.00611686706543
    8. '```' → logprob: -14.00611686706543
    9. 'a' → logprob: -14.75611686706543
    10. 'exact' → logprob: -15.00611686706543

Token 644: ' street' (ID: 12901)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.1717730015516281
    2. ' segment' → logprob: -2.1717729568481445
    3. 'se' → logprob: -3.5467729568481445
    4. 'endpoint' → logprob: -5.2967729568481445
    5. ' street' → logprob: -6.0467729568481445
    6. ' endpoint' → logprob: -6.2967729568481445
    7. 'seg' → logprob: -6.2967729568481445
    8. ' seg' → logprob: -6.7967729568481445
    9. 'street' → logprob: -7.4217729568481445
    10. ' se' → logprob: -8.046772956848145

Token 645: ',' (ID: 11)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.37945154309272766
    2. 'and' → logprob: -2.0044515132904053
    3. ',' → logprob: -2.1294515132904053
    4. 'segment' → logprob: -3.5044515132904053
    5. '<|end|>' → logprob: -4.254451751708984
    6. ' segment' → logprob: -5.254451751708984
    7. ' ,' → logprob: -6.254451751708984
    8. '
' → logprob: -6.629451751708984
    9. 's' → logprob: -6.754451751708984
    10. 'segments' → logprob: -7.004451751708984

Token 646: ' other' (ID: 1273)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.05981672927737236
    2. 'and' → logprob: -2.934816837310791
    3. ' while' → logprob: -5.684816837310791
    4. ' other' → logprob: -7.684816837310791
    5. 'while' → logprob: -7.934816837310791
    6. ' ' → logprob: -8.934816360473633
    7. ' if' → logprob: -9.059816360473633
    8. ' another' → logprob: -9.684816360473633
    9. ',' → logprob: -9.809816360473633
    10. ' the' → logprob: -9.934816360473633

Token 647: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.19932019710540771
    2. ' endpoint' → logprob: -1.8243201971054077
    3. ' is' → logprob: -4.574320316314697
    4. 'is' → logprob: -5.324320316314697
    5. ' has' → logprob: -6.324320316314697
    6. 'has' → logprob: -7.074320316314697
    7. '_endpoint' → logprob: -7.449320316314697
    8. ' not' → logprob: -8.324319839477539
    9. 'point' → logprob: -8.824319839477539
    10. 'not' → logprob: -9.199319839477539

Token 648: ' only' (ID: 1606)
  Prédit: 'has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'has' → logprob: -0.776606023311615
    2. ' has' → logprob: -1.5266060829162598
    3. 'is' → logprob: -1.9016060829162598
    4. ' is' → logprob: -2.6516060829162598
    5. ' not' → logprob: -3.0266060829162598
    6. 'not' → logprob: -3.1516060829162598
    7. 'attached' → logprob: -4.77660608291626
    8. ' attached' → logprob: -6.90160608291626
    9. 's' → logprob: -8.026605606079102
    10. ')' → logprob: -8.401605606079102

Token 649: ' connected' (ID: 12079)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 650: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.2020130455493927
    2. ' to' → logprob: -1.7020130157470703
    3. '0' → logprob: -8.70201301574707
    4. '   ' → logprob: -8.70201301574707
    5. '1' → logprob: -8.95201301574707
    6. '_to' → logprob: -10.82701301574707
    7. ' ' → logprob: -10.82701301574707
    8. '=' → logprob: -11.20201301574707
    9. '           ' → logprob: -11.32701301574707
    10. '```' → logprob: -11.45201301574707

Token 651: ' this' (ID: 495)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'one' → logprob: -1.077628254890442
    2. 'that' → logprob: -1.077628254890442
    3. '1' → logprob: -1.952628254890442
    4. 'this' → logprob: -3.0776281356811523
    5. '0' → logprob: -3.2026281356811523
    6. 'se' → logprob: -3.3276281356811523
    7. 'sign' → logprob: -3.9526281356811523
    8. ' that' → logprob: -5.077628135681152
    9. 'segments' → logprob: -5.327628135681152
    10. 'the' → logprob: -5.452628135681152

Token 652: ' segment' (ID: 14806)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 653: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9204712510108948
    2. ',' → logprob: -2.17047119140625
    3. '
' → logprob: -2.17047119140625
    4. '<|end|>' → logprob: -2.17047119140625
    5. ':' → logprob: -2.54547119140625
    6. ' and' → logprob: -3.04547119140625
    7. '.' → logprob: -3.17047119140625
    8. ':
' → logprob: -3.29547119140625
    9. ' for' → logprob: -4.54547119140625
    10. ')' → logprob: -5.04547119140625

Token 654: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006679255980998278
    2. ',' → logprob: -6.256679058074951
    3. '<|end|>' → logprob: -6.756679058074951
    4. '        
' → logprob: -6.881679058074951
    5. '
' → logprob: -7.256679058074951
    6. ' for' → logprob: -7.381679058074951
    7. ' and' → logprob: -8.13167953491211
    8. 'def' → logprob: -8.38167953491211
    9. '.' → logprob: -9.13167953491211
    10. 's' → logprob: -9.13167953491211

Token 655: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8024609088897705
    2. 'sign' → logprob: -1.9274609088897705
    3. ' for' → logprob: -1.9274609088897705
    4. 'for' → logprob: -2.0524609088897705
    5. '
' → logprob: -2.8024609088897705
    6. 'street' → logprob: -4.052460670471191
    7. '#' (adapté à ' #') → logprob: -4.177460670471191
    8. ' street' → logprob: -4.552460670471191
    9. '        
' → logprob: -5.177460670471191
    10. 'stre' → logprob: -5.802460670471191

Token 656: ' But' (ID: 3072)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.8983446359634399
    2. 'street' → logprob: -1.02334463596344
    3. 'stre' → logprob: -2.1483445167541504
    4. 'is' → logprob: -3.3983445167541504
    5. ' street' → logprob: -3.3983445167541504
    6. '       ' → logprob: -3.8983445167541504
    7. 'for' → logprob: -4.64834451675415
    8. '#' → logprob: -5.52334451675415
    9. ' streets' → logprob: -5.64834451675415
    10. ' signs' → logprob: -5.89834451675415

Token 657: ' to' (ID: 316)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.480016827583313
    2. 'for' → logprob: -1.730016827583313
    3. ' for' → logprob: -2.2300167083740234
    4. 'continue' → logprob: -3.2300167083740234
    5. '       ' → logprob: -3.6050167083740234
    6. ' continue' → logprob: -4.605016708374023
    7. ' #' → logprob: -5.105016708374023
    8. 'pass' → logprob: -6.230016708374023
    9. '        
' → logprob: -6.355016708374023
    10. '
' → logprob: -6.355016708374023

Token 658: ' know' (ID: 1761)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'det' → logprob: -0.8514462113380432
    2. 'do' → logprob: -1.9764461517333984
    3. ' continue' → logprob: -2.6014461517333984
    4. 'continue' → logprob: -2.7264461517333984
    5. 'identify' → logprob: -3.1014461517333984
    6. ' identify' → logprob: -3.2264461517333984
    7. ' check' → logprob: -3.7264461517333984
    8. ' do' → logprob: -3.7264461517333984
    9. 'complete' → logprob: -4.101446151733398
    10. '#' → logprob: -4.226446151733398

Token 659: ' street' (ID: 12901)
  Prédit: 'which'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'which' → logprob: -0.19054673612117767
    2. ' which' → logprob: -2.690546751022339
    3. 'if' → logprob: -3.565546751022339
    4. 'whether' → logprob: -3.565546751022339
    5. 'more' → logprob: -3.815546751022339
    6. 'sign' → logprob: -5.44054651260376
    7. '#' → logprob: -5.56554651260376
    8. 'for' → logprob: -5.69054651260376
    9. ' whether' → logprob: -6.06554651260376
    10. 'connections' → logprob: -6.19054651260376

Token 660: ' segments' (ID: 33749)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1091463640332222
    2. '_segments' → logprob: -2.6091463565826416
    3. '_' → logprob: -3.7341463565826416
    4. '_s' → logprob: -6.859146595001221
    5. '_type' → logprob: -6.984146595001221
    6. 'segments' → logprob: -7.234146595001221
    7. '
' → logprob: -7.734146595001221
    8. '_se' → logprob: -7.984146595001221
    9. '_set' → logprob: -7.984146595001221
    10. '_segment' → logprob: -8.109146118164062

Token 661: ' we' (ID: 581)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1601715236902237
    2. '       ' → logprob: -2.4101715087890625
    3. '#' → logprob: -3.4101715087890625
    4. ':' → logprob: -5.9101715087890625
    5. ',
' → logprob: -6.1601715087890625
    6. 'def' → logprob: -6.4101715087890625
    7. 'se' → logprob: -6.5351715087890625
    8. ' connected' → logprob: -6.5351715087890625
    9. 'degree' → logprob: -6.5351715087890625
    10. '<|end|>' → logprob: -6.5351715087890625

Token 662: ' need' (ID: 1309)
  Prédit: ' need'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.40406060218811035
    2. 'need' → logprob: -1.1540606021881104
    3. ' first' → logprob: -5.404060363769531
    4. ' must' → logprob: -5.529060363769531
    5. 'must' → logprob: -6.029060363769531
    6. 'first' → logprob: -7.154060363769531
    7. ' still' → logprob: -7.154060363769531
    8. 'still' → logprob: -7.279060363769531
    9. 'have' → logprob: -7.404060363769531
    10. 'already' → logprob: -7.529060363769531

Token 663: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.6095475554466248
    2. ' to' → logprob: -0.8595475554466248
    3. ' more' → logprob: -4.6095476150512695
    4. 'more' → logprob: -4.6095476150512695
    5. 'another' → logprob: -4.9845476150512695
    6. ' another' → logprob: -6.6095476150512695
    7. 'a' → logprob: -6.6095476150512695
    8. 'additional' → logprob: -6.8595476150512695
    9. ' a' → logprob: -7.3595476150512695
    10. 'first' → logprob: -7.7345476150512695

Token 664: ' exclude' (ID: 39566)
  Prédit: 'det'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'det' → logprob: -0.5932298898696899
    2. 'class' → logprob: -1.34322988986969
    3. 'identify' → logprob: -2.8432297706604004
    4. 'continue' → logprob: -3.7182297706604004
    5. 'mark' → logprob: -3.8432297706604004
    6. ' classify' → logprob: -3.9682297706604004
    7. 'find' → logprob: -4.2182297706604
    8. 'process' → logprob: -4.8432297706604
    9. 'first' → logprob: -5.3432297706604
    10. 'for' → logprob: -5.4682297706604

Token 665: ' signs' (ID: 17424)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.15773843228816986
    2. 'segments' → logprob: -2.157738447189331
    3. ' signs' → logprob: -3.782738447189331
    4. 'those' → logprob: -6.282738208770752
    5. 'the' → logprob: -6.532738208770752
    6. ' segments' → logprob: -6.532738208770752
    7. ' sign' → logprob: -7.032738208770752
    8. 'se' → logprob: -7.282738208770752
    9. '#' → logprob: -7.907738208770752
    10. ' those' → logprob: -8.40773868560791

Token 666: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8045274019241333
    2. '#' → logprob: -1.5545274019241333
    3. 'street' → logprob: -1.5545274019241333
    4. 'stre' → logprob: -2.3045272827148438
    5. '<|end|>' → logprob: -4.554527282714844
    6. 'def' → logprob: -5.179527282714844
    7. 'sign' → logprob: -5.679527282714844
    8. '        
' → logprob: -5.804527282714844
    9. ' street' → logprob: -5.929527282714844
    10. '
' → logprob: -6.929527282714844

Token 667: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43106651306152344
    2. '#' → logprob: -2.0560665130615234
    3. 'street' → logprob: -2.1810665130615234
    4. 'stre' → logprob: -2.8060665130615234
    5. 'sign' → logprob: -4.556066513061523
    6. 'def' → logprob: -4.931066513061523
    7. '        
' → logprob: -5.181066513061523
    8. ' street' → logprob: -5.306066513061523
    9. 'se' → logprob: -5.431066513061523
    10. '<|end|>' → logprob: -5.556066513061523

Token 668: ' #' (ID: 1069)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.8286951184272766
    2. '#' (adapté à ' #') → logprob: -1.4536950588226318
    3. 'stre' → logprob: -1.7036950588226318
    4. '       ' → logprob: -2.453695058822632
    5. ' street' → logprob: -3.453695058822632
    6. '
' → logprob: -4.828695297241211
    7. 'sign' → logprob: -5.078695297241211
    8. ' streets' → logprob: -5.203695297241211
    9. '        
' → logprob: -5.453695297241211
    10. 'def' → logprob: -6.578695297241211

Token 669: ' We'll' (ID: 46830)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.12870782613754272
    2. '#' → logprob: -2.7537078857421875
    3. 'stre' → logprob: -3.6287078857421875
    4. ' street' → logprob: -4.0037078857421875
    5. '       ' → logprob: -4.7537078857421875
    6. 'sign' → logprob: -6.2537078857421875
    7. 'is' → logprob: -7.3787078857421875
    8. ' streets' → logprob: -7.8787078857421875
    9. 'def' → logprob: -8.753707885742188
    10. 'degree' → logprob: -9.253707885742188

Token 670: ' assume' (ID: 19429)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'first' → logprob: -1.0960246324539185
    2. 'mark' → logprob: -2.096024513244629
    3. 'continue' → logprob: -2.221024513244629
    4. 'process' → logprob: -2.346024513244629
    5. 'class' → logprob: -2.471024513244629
    6. ' first' → logprob: -2.721024513244629
    7. 'use' → logprob: -3.096024513244629
    8. 'assign' → logprob: -3.596024513244629
    9. 'det' → logprob: -4.096024513244629
    10. 'consider' → logprob: -4.221024513244629

Token 671: ' streets' (ID: 25360)
  Prédit: 'that'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'that' → logprob: -0.5681183934211731
    2. 'all' → logprob: -1.1931183338165283
    3. ' all' → logprob: -2.4431183338165283
    4. ' that' → logprob: -3.9431183338165283
    5. 'both' → logprob: -5.318118572235107
    6. 'street' → logprob: -5.568118572235107
    7. 'segments' → logprob: -5.693118572235107
    8. 'for' → logprob: -5.818118572235107
    9. '#' → logprob: -5.943118572235107
    10. ' streets' → logprob: -6.068118572235107

Token 672: ' form' (ID: 1625)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44541245698928833
    2. '=' → logprob: -2.0704123973846436
    3. '_segments' → logprob: -2.1954123973846436
    4. '<|end|>' → logprob: -3.1954123973846436
    5. ' are' → logprob: -3.4454123973846436
    6. 'segments' → logprob: -4.695412635803223
    7. ':' → logprob: -4.945412635803223
    8. '=[]' → logprob: -5.195412635803223
    9. ' segments' → logprob: -5.570412635803223
    10. '.' → logprob: -5.570412635803223

Token 673: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12476319074630737
    2. ' a' → logprob: -2.374763250350952
    3. 'connected' → logprob: -4.249763011932373
    4. 'the' → logprob: -5.374763011932373
    5. 'an' → logprob: -6.124763011932373
    6. ' the' → logprob: -7.374763011932373
    7. ' an' → logprob: -7.499763011932373
    8. ' connected' → logprob: -7.749763011932373
    9. 'all' → logprob: -7.874763011932373
    10. 'und' → logprob: -8.249763488769531

Token 674: ' graph' (ID: 7465)
  Prédit: 'connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connected' → logprob: -0.09160106629133224
    2. 'graph' → logprob: -2.5916011333465576
    3. ' connected' → logprob: -4.7166008949279785
    4. ' graph' → logprob: -6.8416008949279785
    5. 'continuous' → logprob: -8.091601371765137
    6. 'larg' → logprob: -8.216601371765137
    7. 'continu' → logprob: -8.341601371765137
    8. 'complete' → logprob: -8.341601371765137
    9. '_connected' → logprob: -8.591601371765137
    10. 'loop' → logprob: -8.841601371765137

Token 675: ' with' (ID: 483)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35082563757896423
    2. '
' → logprob: -1.6008256673812866
    3. '<|end|>' → logprob: -2.850825548171997
    4. '#' → logprob: -4.100825786590576
    5. ',' → logprob: -5.100825786590576
    6. '        
' → logprob: -5.350825786590576
    7. '<|end|>' → logprob: -5.975825786590576
    8. '.' → logprob: -6.475825786590576
    9. '...' → logprob: -6.975825786590576
    10. '   ' → logprob: -7.475825786590576

Token 676: ' nodes' (ID: 15749)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -1.1389051675796509
    2. ' endpoints' → logprob: -1.3889051675796509
    3. 'adj' → logprob: -2.0139050483703613
    4. 'both' → logprob: -2.6389050483703613
    5. 'segments' → logprob: -3.1389050483703613
    6. 'no' → logprob: -3.3889050483703613
    7. 'at' → logprob: -3.5139050483703613
    8. 'nodes' → logprob: -4.013905048370361
    9. 'degree' → logprob: -4.263905048370361
    10. 'more' → logprob: -4.263905048370361

Token 677: ' at' (ID: 540)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'with' → logprob: -1.157701849937439
    2. ' of' → logprob: -1.282701849937439
    3. ' having' → logprob: -1.907701849937439
    4. ' with' → logprob: -2.1577019691467285
    5. ' that' → logprob: -3.4077019691467285
    6. 'having' → logprob: -3.5327019691467285
    7. 'that' → logprob: -3.6577019691467285
    8. 'of' → logprob: -3.9077019691467285
    9. ' where' → logprob: -4.2827019691467285
    10. 'where' → logprob: -4.5327019691467285

Token 678: ' intersection' (ID: 42002)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.859565258026123
    2. 'which' → logprob: -1.359565258026123
    3. 'points' → logprob: -1.734565258026123
    4. 'degree' → logprob: -2.359565258026123
    5. 'end' → logprob: -4.234565258026123
    6. 'adj' → logprob: -4.734565258026123
    7. ' which' → logprob: -5.109565258026123
    8. ' endpoints' → logprob: -5.109565258026123
    9. 'degrees' → logprob: -5.734565258026123
    10. 'intersection' → logprob: -5.984565258026123

Token 679: ' points' (ID: 5571)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3425034284591675
    2. '#' → logprob: -1.9675034284591675
    3. '
' → logprob: -3.467503547668457
    4. ',' → logprob: -3.842503547668457
    5. 's' → logprob: -3.842503547668457
    6. ' and' → logprob: -3.842503547668457
    7. '        
' → logprob: -4.217503547668457
    8. '<|end|>' → logprob: -4.342503547668457
    9. 'def' → logprob: -4.967503547668457
    10. 'points' → logprob: -5.342503547668457

Token 680: ' where' (ID: 1919)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.125524640083313
    2. '#' → logprob: -2.2505245208740234
    3. '        
' → logprob: -5.125524520874023
    4. '
' → logprob: -5.875524520874023
    5. '<|end|>' → logprob: -6.000524520874023
    6. ' #' → logprob: -8.000524520874023
    7. 'def' → logprob: -8.500524520874023
    8. 'se' → logprob: -9.125524520874023
    9. 's' → logprob: -9.250524520874023
    10. '...' → logprob: -9.625524520874023

Token 681: ' a' (ID: 261)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.031126338988542557
    2. ' adjacency' → logprob: -3.6561262607574463
    3. 'se' → logprob: -6.281126499176025
    4. 'len' → logprob: -6.406126499176025
    5. 'endpoint' → logprob: -6.906126499176025
    6. 'segments' → logprob: -9.781126022338867
    7. 'any' → logprob: -10.281126022338867
    8. 'the' → logprob: -10.531126022338867
    9. ' len' → logprob: -10.906126022338867
    10. ' endpoints' → logprob: -11.031126022338867

Token 682: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.46848735213279724
    2. 'endpoint' → logprob: -1.9684873819351196
    3. 'adj' → logprob: -2.71848726272583
    4. 'p' → logprob: -2.84348726272583
    5. 'segment' → logprob: -3.96848726272583
    6. 'node' → logprob: -4.09348726272583
    7. 'd' → logprob: -4.09348726272583
    8. 't' → logprob: -4.34348726272583
    9. 'pp' → logprob: -4.84348726272583
    10. 're' → logprob: -5.09348726272583

Token 683: ' connects' (ID: 47599)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.7234942317008972
    2. 'has' → logprob: -1.723494291305542
    3. 's' → logprob: -2.223494291305542
    4. ' in' → logprob: -2.723494291305542
    5. 'in' → logprob: -3.223494291305542
    6. ' is' → logprob: -3.723494291305542
    7. 'is' → logprob: -4.098494052886963
    8. 'connect' → logprob: -4.098494052886963
    9. ')' → logprob: -4.473494052886963
    10. ' connects' → logprob: -4.848494052886963

Token 684: ' ' (ID: 220)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5495962500572205
    2. ' to' → logprob: -0.9245962500572205
    3. 'at' → logprob: -4.299596309661865
    4. '           ' → logprob: -5.174596309661865
    5. ' at' → logprob: -5.299596309661865
    6. '>=' → logprob: -7.674596309661865
    7. '>' → logprob: -7.799596309661865
    8. '```' → logprob: -8.674595832824707
    9. 'only' → logprob: -9.174595832824707
    10. ')' → logprob: -9.424595832824707

Token 685: '2' (ID: 17)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.04234214872121811
    2. ' to' → logprob: -3.917342185974121
    3. '>=' → logprob: -4.542342185974121
    4. 'se' → logprob: -5.292342185974121
    5. '           ' → logprob: -6.167342185974121
    6. '>' → logprob: -6.292342185974121
    7. 'at' → logprob: -7.042342185974121
    8. 'more' → logprob: -7.542342185974121
    9. ' >=' → logprob: -9.167342185974121
    10. 'multiple' → logprob: -9.792342185974121

Token 686: ' or' (ID: 503)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.161614328622818
    2. ' or' → logprob: -1.9116142988204956
    3. 'se' → logprob: -8.286614418029785
    4. '+' → logprob: -8.536614418029785
    5. '<|end|>' → logprob: -8.536614418029785
    6. ')' → logprob: -8.786614418029785
    7. ',' → logprob: -9.411614418029785
    8. '>' → logprob: -9.536614418029785
    9. '```' → logprob: -9.536614418029785
    10. 's' → logprob: -9.661614418029785

Token 687: ' more' (ID: 945)
  Prédit: 'more'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'more' → logprob: -0.04312000051140785
    2. ' more' → logprob: -3.1681199073791504
    3. 'se' → logprob: -9.918120384216309
    4. '>' → logprob: -10.168120384216309
    5. '_more' → logprob: -11.543120384216309
    6. ' ' → logprob: -12.168120384216309
    7. '   ' → logprob: -12.418120384216309
    8. 'More' → logprob: -12.793120384216309
    9. '```' → logprob: -13.668120384216309
    10. '3' → logprob: -13.793120384216309

Token 688: ' street' (ID: 12901)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.4364511966705322
    2. ' segments' → logprob: -1.1864511966705322
    3. 'se' → logprob: -3.0614511966705322
    4. ' seg' → logprob: -7.686450958251953
    5. ' edges' → logprob: -7.811450958251953
    6. ' or' → logprob: -8.811450958251953
    7. 'edges' → logprob: -9.186450958251953
    8. 'seg' → logprob: -9.686450958251953
    9. ' lines' → logprob: -9.936450958251953
    10. ',' → logprob: -10.436450958251953

Token 689: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.10359679162502289
    2. ' segments' → logprob: -2.7285966873168945
    3. 's' → logprob: -3.7285966873168945
    4. 'nodes' → logprob: -5.9785966873168945
    5. 'points' → logprob: -6.7285966873168945
    6. 'se' → logprob: -6.7285966873168945
    7. '       ' → logprob: -6.8535966873168945
    8. ' nodes' → logprob: -6.9785966873168945
    9. '<|end|>' → logprob: -7.9785966873168945
    10. 'tokens' → logprob: -8.228596687316895

Token 690: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06683622300624847
    2. '#' → logprob: -3.69183611869812
    3. '<|end|>' → logprob: -3.94183611869812
    4. 'def' → logprob: -5.441836357116699
    5. '        
' → logprob: -5.691836357116699
    6. 's' → logprob: -6.316836357116699
    7. '
' → logprob: -6.441836357116699
    8. ',' → logprob: -6.441836357116699
    9. 'se' → logprob: -6.566836357116699
    10. ' #' → logprob: -7.316836357116699

Token 691: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49993669986724854
    2. '<|end|>' → logprob: -0.9999366998672485
    3. '#' → logprob: -4.124936580657959
    4. '<|end|>' → logprob: -5.749936580657959
    5. ')' → logprob: -6.624936580657959
    6. '
' → logprob: -6.749936580657959
    7. ',' → logprob: -6.999936580657959
    8. 's' → logprob: -7.749936580657959
    9. '...' → logprob: -7.749936580657959
    10. '        
' → logprob: -8.374937057495117

Token 692: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.194337397813797
    2. '#' (adapté à ' #') → logprob: -2.0693373680114746
    3. '<|end|>' → logprob: -4.694337368011475
    4. ',' → logprob: -4.819337368011475
    5. '        
' → logprob: -4.944337368011475
    6. 's' → logprob: -5.569337368011475
    7. '
' → logprob: -5.569337368011475
    8. ')' → logprob: -5.944337368011475
    9. '.' → logprob: -6.194337368011475
    10. 'points' → logprob: -6.444337368011475

Token 693: ' Signs' (ID: 92744)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.5316951274871826
    2. 'stre' → logprob: -1.2816951274871826
    3. '       ' → logprob: -2.5316951274871826
    4. '#' → logprob: -3.1566951274871826
    5. ' street' → logprob: -5.406695365905762
    6. 'sign' → logprob: -6.406695365905762
    7. 'degree' → logprob: -6.531695365905762
    8. 'st' → logprob: -7.156695365905762
    9. 'degrees' → logprob: -7.156695365905762
    10. '        
' → logprob: -7.406695365905762

Token 694: ' connect' (ID: 4837)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.45504048466682434
    2. 'are' → logprob: -1.955040454864502
    3. ' =' → logprob: -2.830040454864502
    4. ' endpoints' → logprob: -3.955040454864502
    5. ' have' → logprob: -4.205040454864502
    6. '_segments' → logprob: -4.330040454864502
    7. ':' → logprob: -4.455040454864502
    8. 'have' → logprob: -4.580040454864502
    9. 'connect' → logprob: -4.580040454864502
    10. '=' → logprob: -4.830040454864502

Token 695: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.7459810376167297
    2. 'to' → logprob: -1.245980978012085
    3. 'only' → logprob: -2.120980978012085
    4. ' only' → logprob: -2.495980978012085
    5. ' at' → logprob: -3.870980978012085
    6. 'at' → logprob: -4.745981216430664
    7. ' endpoints' → logprob: -6.620981216430664
    8. ' exclusively' → logprob: -6.620981216430664
    9. '_to' → logprob: -7.495981216430664
    10. 'either' → logprob: -7.745981216430664

Token 696: ' exactly' (ID: 9707)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3253340423107147
    2. 'points' → logprob: -2.200334072113037
    3. 'endpoint' → logprob: -3.075334072113037
    4. 'nodes' → logprob: -3.075334072113037
    5. 'street' → logprob: -4.075334072113037
    6. 'an' → logprob: -4.325334072113037
    7. 'exact' → logprob: -4.325334072113037
    8. 'one' → logprob: -4.825334072113037
    9. 'stre' → logprob: -4.825334072113037
    10. ' exactly' → logprob: -5.575334072113037

Token 697: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.007668610196560621
    2. '1' → logprob: -5.132668495178223
    3. ' one' → logprob: -7.007668495178223
    4. 'points' → logprob: -7.632668495178223
    5. 'a' → logprob: -8.382668495178223
    6. 'nodes' → logprob: -9.882668495178223
    7. 'degree' → logprob: -10.507668495178223
    8. '```' → logprob: -11.382668495178223
    9. 'point' → logprob: -12.132668495178223
    10. 'endpoint' → logprob: -12.757668495178223

Token 698: ' street' (ID: 12901)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -1.2901911735534668
    2. 'segment' → logprob: -1.4151911735534668
    3. ' endpoint' → logprob: -1.6651911735534668
    4. ' street' → logprob: -1.7901911735534668
    5. ' segment' → logprob: -2.540191173553467
    6. 'street' → logprob: -3.540191173553467
    7. 'se' → logprob: -5.415191173553467
    8. ' node' → logprob: -6.040191173553467
    9. 'adj' → logprob: -6.415191173553467
    10. 'segments' → logprob: -6.665191173553467

Token 699: ' segment' (ID: 14806)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.191782608628273
    2. '<|end|>' → logprob: -1.9417825937271118
    3. ',' → logprob: -4.691782474517822
    4. '<|end|>' → logprob: -4.816782474517822
    5. '#' → logprob: -5.816782474517822
    6. '.' → logprob: -5.941782474517822
    7. 's' → logprob: -6.316782474517822
    8. '
' → logprob: -6.566782474517822
    9. '...' → logprob: -7.066782474517822
    10. '        
' → logprob: -7.191782474517822

Token 700: ' endpoint' (ID: 29703)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0004533529281616
    2. '#' → logprob: -1.1254533529281616
    3. '
' → logprob: -1.5004533529281616
    4. 'def' → logprob: -3.750453472137451
    5. '<|end|>' → logprob: -3.750453472137451
    6. ',' → logprob: -4.500453472137451
    7. 's' → logprob: -4.875453472137451
    8. '        
' → logprob: -5.750453472137451
    9. '<|end|>' → logprob: -6.375453472137451
    10. '.' → logprob: -6.500453472137451

Token 701: ' and' (ID: 326)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18463078141212463
    2. '<|end|>' → logprob: -2.059630870819092
    3. '
' → logprob: -3.809630870819092
    4. '<|end|>' → logprob: -4.684630870819092
    5. '        
' → logprob: -6.059630870819092
    6. ',' → logprob: -6.059630870819092
    7. '#' → logprob: -6.434630870819092
    8. ')' → logprob: -7.184630870819092
    9. 'def' → logprob: -7.559630870819092
    10. 's' → logprob: -7.934630870819092

Token 702: ' one' (ID: 1001)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.8102772831916809
    2. ' one' → logprob: -1.4352772235870361
    3. 'have' → logprob: -2.435277223587036
    4. 'one' → logprob: -3.060277223587036
    5. ' no' → logprob: -3.435277223587036
    6. ' other' → logprob: -3.560277223587036
    7. ' the' → logprob: -3.810277223587036
    8. ' are' → logprob: -4.560277462005615
    9. 'the' → logprob: -4.685277462005615
    10. 'no' → logprob: -4.935277462005615

Token 703: ' open' (ID: 2494)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.5205036401748657
    2. 'open' → logprob: -1.1455036401748657
    3. 'other' → logprob: -3.395503520965576
    4. ' endpoint' → logprob: -3.770503520965576
    5. ' open' → logprob: -4.270503520965576
    6. 'unique' → logprob: -5.270503520965576
    7. 'point' → logprob: -5.645503520965576
    8. ' other' → logprob: -6.020503520965576
    9. ' unique' → logprob: -6.895503520965576
    10. 'more' → logprob: -7.395503520965576

Token 704: ' endpoint' (ID: 29703)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12855300307273865
    2. '
' → logprob: -2.3785529136657715
    3. '<|end|>' → logprob: -4.2535529136657715
    4. '        
' → logprob: -5.0035529136657715
    5. ')' → logprob: -6.3785529136657715
    6. '<|end|>' → logprob: -6.7535529136657715
    7. 's' → logprob: -7.2535529136657715
    8. '.' → logprob: -7.7535529136657715
    9. '   ' → logprob: -8.25355339050293
    10. '#' → logprob: -8.25355339050293

Token 705: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41720813512802124
    2. '#' → logprob: -1.167208194732666
    3. '
' → logprob: -4.792208194732666
    4. '        
' → logprob: -5.292208194732666
    5. 'def' → logprob: -5.417208194732666
    6. '<|end|>' → logprob: -5.667208194732666
    7. ' #' → logprob: -6.667208194732666
    8. 'segments' → logprob: -6.917208194732666
    9. 'stre' → logprob: -6.917208194732666
    10. 's' → logprob: -7.042208194732666

Token 706: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.019961761310696602
    2. '#' → logprob: -4.644961833953857
    3. '        
' → logprob: -5.644961833953857
    4. '<|end|>' → logprob: -6.144961833953857
    5. '
' → logprob: -6.644961833953857
    6. 'def' → logprob: -7.269961833953857
    7. '```' → logprob: -7.644961833953857
    8. 's' → logprob: -7.769961833953857
    9. '   ' → logprob: -8.3949613571167
    10. ',' → logprob: -8.5199613571167

Token 707: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19908489286899567
    2. '#' (adapté à ' #') → logprob: -2.199084997177124
    3. 'stre' → logprob: -3.574084997177124
    4. '
' → logprob: -4.574084758758545
    5. '        
' → logprob: -4.574084758758545
    6. ' streets' → logprob: -5.074084758758545
    7. 'street' → logprob: -5.199084758758545
    8. ' street' → logprob: -6.199084758758545
    9. ' #' → logprob: -6.199084758758545
    10. '   ' → logprob: -7.699084758758545

Token 708: ' Build' (ID: 10885)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.3730008602142334
    2. '#' → logprob: -2.4980008602142334
    3. ' street' → logprob: -2.8730008602142334
    4. 'stre' → logprob: -2.9980008602142334
    5. 'deg' → logprob: -3.2480008602142334
    6. '       ' → logprob: -3.8730008602142334
    7. 'degrees' → logprob: -4.1230010986328125
    8. 'degree' → logprob: -4.2480010986328125
    9. 'is' → logprob: -4.4980010986328125
    10. ' streets' → logprob: -5.4980010986328125

Token 709: ' initial' (ID: 4871)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.3388897180557251
    2. 'graph' → logprob: -2.2138895988464355
    3. 'point' → logprob: -2.3388895988464355
    4. 'degree' → logprob: -3.3388895988464355
    5. '#' → logprob: -4.5888895988464355
    6. 'segment' → logprob: -4.8388895988464355
    7. 'stre' → logprob: -4.8388895988464355
    8. 'deg' → logprob: -4.8388895988464355
    9. 'endpoint' → logprob: -5.4638895988464355
    10. 'adj' → logprob: -6.0888895988464355

Token 710: ' graph' (ID: 7465)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.14525723457336426
    2. 'stre' → logprob: -3.2702572345733643
    3. 'graph' → logprob: -3.3952572345733643
    4. 'degree' → logprob: -3.8952572345733643
    5. 'segments' → logprob: -4.270256996154785
    6. 'degrees' → logprob: -5.020256996154785
    7. ' street' → logprob: -5.395256996154785
    8. 'st' → logprob: -5.520256996154785
    9. 'segment' → logprob: -5.895256996154785
    10. '#' → logprob: -6.270256996154785

Token 711: ' ignoring' (ID: 68244)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.18027512729167938
    2. ' graph' → logprob: -2.0552752017974854
    3. '       ' → logprob: -4.930274963378906
    4. 'G' → logprob: -5.180274963378906
    5. 'street' → logprob: -5.180274963378906
    6. ' street' → logprob: -5.180274963378906
    7. '
' → logprob: -5.680274963378906
    8. 'edges' → logprob: -6.430274963378906
    9. 'stre' → logprob: -6.805274963378906
    10. '	graph' → logprob: -6.805274963378906

Token 712: ' directions' (ID: 24921)
  Prédit: ' signs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' signs' → logprob: -0.3888905942440033
    2. 'sign' → logprob: -1.1388906240463257
    3. ' sign' → logprob: -6.388890743255615
    4. 'se' → logprob: -9.013890266418457
    5. 'segments' → logprob: -9.513890266418457
    6. '_sign' → logprob: -10.138890266418457
    7. ' segments' → logprob: -10.513890266418457
    8. '	sign' → logprob: -11.263890266418457
    9. '(sign' → logprob: -11.763890266418457
    10. 's' → logprob: -12.013890266418457

Token 713: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40786367654800415
    2. '#' → logprob: -2.2828636169433594
    3. 'graph' → logprob: -2.5328636169433594
    4. '
' → logprob: -2.6578636169433594
    5. ',' → logprob: -4.532863616943359
    6. ' graph' → logprob: -4.782863616943359
    7. '        
' → logprob: -4.907863616943359
    8. ' for' → logprob: -5.032863616943359
    9. ' edges' → logprob: -5.282863616943359
    10. '.' → logprob: -5.407863616943359

Token 714: '       ' (ID: 309)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.6758884191513062
    2. '       ' → logprob: -2.1758885383605957
    3. '<|end|>' → logprob: -2.1758885383605957
    4. ' graph' → logprob: -2.4258885383605957
    5. 'edges' → logprob: -2.6758885383605957
    6. ' edges' → logprob: -3.9258885383605957
    7. '#' → logprob: -4.050888538360596
    8. ' adjacency' → logprob: -4.300888538360596
    9. '
' → logprob: -4.425888538360596
    10. ' for' → logprob: -4.550888538360596

Token 715: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.0011248565278947353
    2. ' graph' → logprob: -7.626124858856201
    3. 'G' → logprob: -8.126124382019043
    4. 'g' → logprob: -9.126124382019043
    5. '       ' → logprob: -9.501124382019043
    6. 'edges' → logprob: -9.876124382019043
    7. 'street' → logprob: -11.001124382019043
    8. 'import' → logprob: -11.376124382019043
    9. 'gra' → logprob: -11.376124382019043
    10. 'adj' → logprob: -11.376124382019043

Token 716: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.523305356502533
    2. ' =' → logprob: -0.898305356502533
    3. '={}' → logprob: -8.89830493927002
    4. '[' → logprob: -11.14830493927002
    5. '={' → logprob: -11.89830493927002
    6. '=[]' → logprob: -12.27330493927002
    7. ' ={' → logprob: -12.52330493927002
    8. ',' → logprob: -12.52330493927002
    9. ' ' → logprob: -13.27330493927002
    10. '{' → logprob: -13.77330493927002

Token 717: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -1.9361264946837764e-07
    2. '(default' → logprob: -16.25
    3. ' defaultdict' → logprob: -17.625
    4. '"default' → logprob: -17.75
    5. '.default' → logprob: -18.25
    6. '{' → logprob: -19.125
    7. 'def' → logprob: -20.0
    8. '{}' → logprob: -20.375
    9. ''default' → logprob: -20.75
    10. '[]' → logprob: -22.875

Token 718: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.08206142485141754
    2. '(set' → logprob: -3.207061529159546
    3. 'list' → logprob: -3.332061529159546
    4. 'set' → logprob: -6.457061290740967
    5. ':list' → logprob: -7.957061290740967
    6. '(' → logprob: -8.332061767578125
    7. ' list' → logprob: -8.832061767578125
    8. '[list' → logprob: -9.582061767578125
    9. '(
' → logprob: -9.707061767578125
    10. '=list' → logprob: -9.957061767578125

Token 719: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024865958839654922
    2. ')
' → logprob: -6.002486705780029
    3. ')
' → logprob: -12.627486228942871
    4. '   ' → logprob: -12.627486228942871
    5. ',' → logprob: -13.627486228942871
    6. ')

' → logprob: -13.752486228942871
    7. ' )' → logprob: -13.752486228942871
    8. '       ' → logprob: -14.877486228942871
    9. '[' → logprob: -15.127486228942871
    10. ',)' → logprob: -16.252487182617188

Token 720: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32065221667289734
    2. ' for' → logprob: -2.0706522464752197
    3. 'for' → logprob: -2.1956522464752197
    4. '<|end|>' → logprob: -3.3206522464752197
    5. '	for' → logprob: -7.820652008056641
    6. '<|end|>' → logprob: -8.32065200805664
    7. '   ' → logprob: -9.44565200805664
    8. ')' → logprob: -10.69565200805664
    9. '	' → logprob: -11.32065200805664
    10. ' ' → logprob: -11.94565200805664

Token 721: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00597572373226285
    2. ' for' → logprob: -5.255975723266602
    3. '       ' → logprob: -7.380975723266602
    4. '<|end|>' → logprob: -9.380975723266602
    5. '	for' → logprob: -10.505975723266602
    6. '#' (adapté à ' #') → logprob: -13.255975723266602
    7. ')' → logprob: -13.630975723266602
    8. '```' → logprob: -14.005975723266602
    9. '   ' → logprob: -14.755975723266602
    10. '<|end|>' → logprob: -14.755975723266602

Token 722: ' We'll' (ID: 46830)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0391903892159462
    2. ' for' → logprob: -3.2891902923583984
    3. '       ' → logprob: -6.789190292358398
    4. '	for' → logprob: -11.039190292358398
    5. '   ' → logprob: -13.164190292358398
    6. '<|end|>' → logprob: -13.789190292358398
    7. ')' → logprob: -14.164190292358398
    8. '        
' → logprob: -14.539190292358398
    9. '#' → logprob: -14.539190292358398
    10. 'For' → logprob: -15.289190292358398

Token 723: ' label' (ID: 4208)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6996286511421204
    2. 'continue' → logprob: -0.9496286511421204
    3. ' for' → logprob: -2.6996285915374756
    4. ' continue' → logprob: -3.6996285915374756
    5. 'process' → logprob: -4.199628829956055
    6. ' process' → logprob: -5.074628829956055
    7. 'add' → logprob: -7.324628829956055
    8. '   ' → logprob: -7.324628829956055
    9. ' add' → logprob: -7.449628829956055
    10. '       ' → logprob: -9.199628829956055

Token 724: ' each' (ID: 2454)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.9031493663787842
    2. 'edges' → logprob: -1.7781493663787842
    3. 'se' → logprob: -1.9031493663787842
    4. 'each' → logprob: -2.528149366378784
    5. ' segments' → logprob: -2.778149366378784
    6. ' edges' → logprob: -3.028149366378784
    7. ' each' → logprob: -3.528149366378784
    8. 'segment' → logprob: -3.903149366378784
    9. 'for' → logprob: -4.528149604797363
    10. 'sign' → logprob: -4.903149604797363

Token 725: ' segment' (ID: 14806)
  Prédit: ' segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.7637354731559753
    2. 'segment' → logprob: -0.7637354731559753
    3. 'seg' → logprob: -3.63873553276062
    4. 'se' → logprob: -3.76373553276062
    5. ' seg' → logprob: -4.388735294342041
    6. ' edge' → logprob: -6.263735294342041
    7. 's' → logprob: -6.638735294342041
    8. 'edge' → logprob: -6.763735294342041
    9. ' s' → logprob: -7.638735294342041
    10. ' se' → logprob: -8.2637357711792

Token 726: ' as' (ID: 472)
  Prédit: '_id'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.6788438558578491
    2. '_' → logprob: -1.9288438558578491
    3. ' with' → logprob: -2.8038439750671387
    4. ' as' → logprob: -2.9288439750671387
    5. '_type' → logprob: -2.9288439750671387
    6. ' =' → logprob: -3.0538439750671387
    7. '_idx' → logprob: -3.4288439750671387
    8. '_se' → logprob: -3.9288439750671387
    9. 'with' → logprob: -4.553843975067139
    10. '[' → logprob: -4.803843975067139

Token 727: ' street' (ID: 12901)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4360573887825012
    2. '"' → logprob: -1.9360573291778564
    3. 'street' → logprob: -2.5610573291778564
    4. ''s' → logprob: -2.6860573291778564
    5. 'None' → logprob: -3.6860573291778564
    6. ' '' → logprob: -4.4360575675964355
    7. 'either' → logprob: -4.5610575675964355
    8. ' street' → logprob: -5.0610575675964355
    9. ' either' → logprob: -5.9360575675964355
    10. ' None' → logprob: -5.9360575675964355

Token 728: ' or' (ID: 503)
  Prédit: '_type'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_type' → logprob: -0.10685590654611588
    2. '_label' → logprob: -3.106855869293213
    3. '_' → logprob: -4.481855869293213
    4. '_segment' → logprob: -4.731855869293213
    5. '_st' → logprob: -4.856855869293213
    6. '_or' → logprob: -5.106855869293213
    7. '_labels' → logprob: -5.356855869293213
    8. '_status' → logprob: -5.481855869293213
    9. ' =' → logprob: -5.481855869293213
    10. '_flag' → logprob: -6.356855869293213

Token 729: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.16056042909622192
    2. ' sign' → logprob: -1.9105603694915771
    3. ''' → logprob: -9.035560607910156
    4. ' None' → logprob: -9.785560607910156
    5. 'None' → logprob: -10.285560607910156
    6. ' ' → logprob: -10.535560607910156
    7. ' not' → logprob: -10.910560607910156
    8. ''s' → logprob: -11.035560607910156
    9. '	sign' → logprob: -11.285560607910156
    10. ' street' → logprob: -11.410560607910156

Token 730: ':
' (ID: 734)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segment' → logprob: -1.1965551376342773
    2. ' for' → logprob: -2.4465551376342773
    3. 'seg' → logprob: -2.4465551376342773
    4. 'for' → logprob: -2.5715551376342773
    5. 'labels' → logprob: -2.9465551376342773
    6. '       ' → logprob: -2.9465551376342773
    7. 'is' → logprob: -3.3215551376342773
    8. ':' → logprob: -3.3215551376342773
    9. 'street' → logprob: -3.4465551376342773
    10. 'type' → logprob: -3.5715551376342773

Token 731: '       ' (ID: 309)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.7634814977645874
    2. '       ' → logprob: -2.013481616973877
    3. 'street' → logprob: -2.138481616973877
    4. 'seg' → logprob: -2.638481616973877
    5. 'labels' → logprob: -2.888481616973877
    6. ' street' → logprob: -3.263481616973877
    7. 'is' → logprob: -3.388481616973877
    8. 'stre' → logprob: -3.638481616973877
    9. 'types' → logprob: -3.888481616973877
    10. ' segment' → logprob: -4.513481616973877

Token 732: ' street' (ID: 12901)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.7823839783668518
    2. 'street' (adapté à ' street') → logprob: -1.782383918762207
    3. 'seg' → logprob: -2.157383918762207
    4. ' street' → logprob: -2.532383918762207
    5. 'is' → logprob: -2.657383918762207
    6. 'types' → logprob: -3.532383918762207
    7. 'labels' → logprob: -3.657383918762207
    8. ' seg' → logprob: -4.157383918762207
    9. ' segment' → logprob: -4.407383918762207
    10. ' is' → logprob: -4.907383918762207

Token 733: '_segments' (ID: 142925)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1109824180603027
    2. '_type' → logprob: -1.2359824180603027
    3. '_segments' → logprob: -1.4859824180603027
    4. '_seg' → logprob: -3.1109824180603027
    5. '_types' → logprob: -3.2359824180603027
    6. 's' → logprob: -3.8609824180603027
    7. '_se' → logprob: -4.235982418060303
    8. '[' → logprob: -4.485982418060303
    9. '_segment' → logprob: -4.610982418060303
    10. '_status' → logprob: -5.985982418060303

Token 734: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005241937469691038
    2. ' =' → logprob: -5.255241870880127
    3. '=[]' → logprob: -12.255242347717285
    4. '=set' → logprob: -13.130242347717285
    5. '={}' → logprob: -13.755242347717285
    6. '=[' → logprob: -16.25524139404297
    7. ',' → logprob: -16.88024139404297
    8. '[' → logprob: -18.00524139404297
    9. ' ' → logprob: -18.75524139404297
    10. '＝' → logprob: -19.00524139404297

Token 735: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.048921506851911545
    2. '[]' → logprob: -3.298921585083008
    3. ' set' → logprob: -4.798921585083008
    4. '[' → logprob: -6.673921585083008
    5. '{' → logprob: -7.298921585083008
    6. '{}' → logprob: -8.048921585083008
    7. ' []' → logprob: -8.173921585083008
    8. ' [' → logprob: -10.923921585083008
    9. '[]
' → logprob: -11.048921585083008
    10. '[s' → logprob: -13.673921585083008

Token 736: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.02264232374727726
    2. '()
' → logprob: -4.147642135620117
    3. '<|end|>' → logprob: -5.647642135620117
    4. '(' → logprob: -6.022642135620117
    5. '(
' → logprob: -8.397642135620117
    6. ')' → logprob: -9.147642135620117
    7. '<|end|>' → logprob: -9.647642135620117
    8. '()

' → logprob: -10.022642135620117
    9. ',' → logprob: -10.272642135620117
    10. '   ' → logprob: -10.897642135620117

Token 737: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6007083058357239
    2. ' for' → logprob: -1.100708246231079
    3. 'for' → logprob: -2.225708246231079
    4. '
' → logprob: -5.475708484649658
    5. '        
' → logprob: -5.850708484649658
    6. '	for' → logprob: -6.725708484649658
    7. '<|end|>' → logprob: -6.725708484649658
    8. '   ' → logprob: -8.3507080078125
    9. '#' → logprob: -8.6007080078125
    10. ' 
' → logprob: -8.7257080078125

Token 738: ' sign' (ID: 2232)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0448388047516346
    2. 'degree' → logprob: -3.9198389053344727
    3. 'deg' → logprob: -4.419838905334473
    4. '       ' → logprob: -5.419838905334473
    5. ' for' → logprob: -6.044838905334473
    6. '#' → logprob: -6.169838905334473
    7. 'degrees' → logprob: -6.419838905334473
    8. 'queue' → logprob: -7.419838905334473
    9. 'sign' (adapté à ' sign') → logprob: -8.294838905334473
    10. '   ' → logprob: -9.419838905334473

Token 739: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.010191740468144417
    2. 's' → logprob: -4.635191917419434
    3. '_s' → logprob: -7.885191917419434
    4. '_' → logprob: -10.385191917419434
    5. 'segments' → logprob: -11.760191917419434
    6. '_edges' → logprob: -11.760191917419434
    7. '_points' → logprob: -12.135191917419434
    8. '_se' → logprob: -13.885191917419434
    9. '_segment' → logprob: -14.260191917419434
    10. '_nodes' → logprob: -14.260191917419434

Token 740: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759562253952026
    2. ' =' → logprob: -0.8259562253952026
    3. '=[]' → logprob: -12.075956344604492
    4. '=set' → logprob: -12.950956344604492
    5. ')' → logprob: -13.325956344604492
    6. '<|end|>' → logprob: -13.575956344604492
    7. '[' → logprob: -13.825956344604492
    8. '.' → logprob: -14.200956344604492
    9. '={}' → logprob: -14.200956344604492
    10. 's' → logprob: -14.575956344604492

Token 741: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.00015955790877342224
    2. ' set' → logprob: -8.75015926361084
    3. '{}' → logprob: -14.12515926361084
    4. '[]' → logprob: -15.37515926361084
    5. '{' → logprob: -16.875160217285156
    6. '	set' → logprob: -18.125160217285156
    7. '=set' → logprob: -18.125160217285156
    8. '(set' → logprob: -19.500160217285156
    9. ' ' → logprob: -19.625160217285156
    10. '   ' → logprob: -20.250160217285156

Token 742: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4129736125469208
    2. '
' → logprob: -1.1629736423492432
    3. '<|end|>' → logprob: -4.162973403930664
    4. '        
' → logprob: -5.912973403930664
    5. '<|end|>' → logprob: -6.037973403930664
    6. ' for' → logprob: -6.162973403930664
    7. 'for' → logprob: -7.037973403930664
    8. ')' → logprob: -7.912973403930664
    9. ',' → logprob: -8.162973403930664
    10. '		
' → logprob: -8.287973403930664

Token 743: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28825730085372925
    2. 'for' → logprob: -1.538257360458374
    3. ' for' → logprob: -3.413257360458374
    4. '
' → logprob: -6.663257122039795
    5. '        
' → logprob: -6.788257122039795
    6. '   ' → logprob: -9.163257598876953
    7. '#' → logprob: -9.288257598876953
    8. '```' → logprob: -10.288257598876953
    9. '<|end|>' → logprob: -10.538257598876953
    10. 'def' → logprob: -11.038257598876953

Token 744: ' point' (ID: 2438)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.020444953814148903
    2. ' for' → logprob: -4.020444869995117
    3. '       ' → logprob: -6.770444869995117
    4. 'degree' → logprob: -7.770444869995117
    5. '#' → logprob: -8.395444869995117
    6. '        
' → logprob: -8.770444869995117
    7. '
' → logprob: -8.895444869995117
    8. ')' → logprob: -10.020444869995117
    9. 'deg' → logprob: -10.395444869995117
    10. 'def' → logprob: -10.895444869995117

Token 745: '_degree' (ID: 128654)
  Prédit: '_de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_de' → logprob: -0.7081263661384583
    2. '_degree' → logprob: -0.8331263661384583
    3. '_deg' → logprob: -2.7081263065338135
    4. 'degrees' → logprob: -5.958126544952393
    5. 'degree' → logprob: -6.708126544952393
    6. 'deg' → logprob: -7.083126544952393
    7. '_counts' → logprob: -7.333126544952393
    8. 's' → logprob: -7.583126544952393
    9. '_count' → logprob: -9.833126068115234
    10. 'de' → logprob: -9.958126068115234

Token 746: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.007672052830457687
    2. ' =' → logprob: -4.88267183303833
    3. 's' → logprob: -9.757672309875488
    4. '[' → logprob: -12.132672309875488
    5. '=[]' → logprob: -14.632672309875488
    6. '={}' → logprob: -14.882672309875488
    7. ')' → logprob: -15.257672309875488
    8. '=
' → logprob: -15.507672309875488
    9. ' ' → logprob: -15.632672309875488
    10. 'default' → logprob: -15.882672309875488

Token 747: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -1.4259644558478612e-05
    2. '{' → logprob: -11.625014305114746
    3. 'adj' → logprob: -12.750014305114746
    4. ' defaultdict' → logprob: -13.125014305114746
    5. '(default' → logprob: -16.25001335144043
    6. ' default' → logprob: -16.75001335144043
    7. 'Default' → logprob: -17.12501335144043
    8. '"default' → logprob: -17.25001335144043
    9. '{}
' → logprob: -17.37501335144043
    10. '   ' → logprob: -17.50001335144043

Token 748: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.00026419671485200524
    2. '(int' → logprob: -8.250264167785645
    3. 'lambda' → logprob: -13.500264167785645
    4. '[int' → logprob: -14.250264167785645
    5. ':int' → logprob: -15.000264167785645
    6. '<int' → logprob: -15.500264167785645
    7. '(lambda' → logprob: -15.875264167785645
    8. '=int' → logprob: -16.50026512145996
    9. ' int' → logprob: -16.87526512145996
    10. '	int' → logprob: -18.00026512145996

Token 749: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3869762718677521
    2. ')
' → logprob: -1.1369762420654297
    3. ')

' → logprob: -9.63697624206543
    4. ')
' → logprob: -10.26197624206543
    5. '       ' → logprob: -12.88697624206543
    6. '   ' → logprob: -13.88697624206543
    7. ' )' → logprob: -15.51197624206543
    8. ' )
' → logprob: -15.63697624206543
    9. '()' → logprob: -15.76197624206543
    10. '[' → logprob: -15.88697624206543

Token 750: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5260856747627258
    2. ' for' → logprob: -1.151085615158081
    3. '       ' → logprob: -2.526085615158081
    4. '<|end|>' → logprob: -5.15108585357666
    5. '
' → logprob: -5.52608585357666
    6. '        
' → logprob: -6.27608585357666
    7. '```' → logprob: -8.15108585357666
    8. '	for' → logprob: -8.65108585357666
    9. ')' → logprob: -8.65108585357666
    10. '<|end|>' → logprob: -8.90108585357666

Token 751: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04112172871828079
    2. ' for' → logprob: -3.2911217212677
    3. '       ' → logprob: -5.791121959686279
    4. '#' (adapté à ' #') → logprob: -12.541121482849121
    5. '```' → logprob: -12.541121482849121
    6. 'For' → logprob: -12.916121482849121
    7. '	for' → logprob: -12.916121482849121
    8. '<|end|>' → logprob: -13.166121482849121
    9. ')' → logprob: -13.416121482849121
    10. 'se' → logprob: -13.541121482849121

Token 752: ' First' (ID: 8338)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00025323365116491914
    2. ' for' → logprob: -9.000253677368164
    3. '#' → logprob: -9.125253677368164
    4. 'degree' → logprob: -11.500253677368164
    5. '       ' → logprob: -12.250253677368164
    6. 'deg' → logprob: -12.750253677368164
    7. 'degrees' → logprob: -13.750253677368164
    8. 'count' → logprob: -14.500253677368164
    9. 'counts' → logprob: -14.875253677368164
    10. 'cnt' → logprob: -15.250253677368164

Token 753: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5297108888626099
    2. ' for' → logprob: -0.9047108888626099
    3. '       ' → logprob: -5.40471076965332
    4. ',' → logprob: -6.52971076965332
    5. 'pass' → logprob: -8.52971076965332
    6. ' pass' → logprob: -8.65471076965332
    7. 'count' → logprob: -8.90471076965332
    8. ':' → logprob: -10.77971076965332
    9. ')' → logprob: -11.02971076965332
    10. '   ' → logprob: -11.40471076965332

Token 754: ' count' (ID: 3605)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0003457136917859316
    2. ' for' → logprob: -8.000346183776855
    3. '#' → logprob: -11.625346183776855
    4. '       ' → logprob: -13.625346183776855
    5. '   ' → logprob: -17.25034523010254
    6. '
' → logprob: -17.37534523010254
    7. '	for' → logprob: -18.75034523010254
    8. 'count' → logprob: -19.37534523010254
    9. '        
' → logprob: -19.75034523010254
    10. '```' → logprob: -20.00034523010254

Token 755: ' how' (ID: 1495)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5364649891853333
    2. ' for' → logprob: -0.9114649891853333
    3. 'point' → logprob: -5.161465167999268
    4. ' point' → logprob: -6.661465167999268
    5. ' endpoints' → logprob: -7.036465167999268
    6. 's' → logprob: -7.411465167999268
    7. 'segment' → logprob: -7.411465167999268
    8. 'the' → logprob: -7.661465167999268
    9. 'points' → logprob: -7.786465167999268
    10. ' the' → logprob: -7.911465167999268

Token 756: ' many' (ID: 1991)
  Prédit: ' many'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' many' → logprob: -0.6800429224967957
    2. 'many' → logprob: -0.9300429224967957
    3. 'for' → logprob: -3.3050429821014404
    4. ' for' → logprob: -3.9300429821014404
    5. '   ' → logprob: -4.555042743682861
    6. '       ' → logprob: -5.180042743682861
    7. '[' → logprob: -5.430042743682861
    8. 'segments' → logprob: -5.555042743682861
    9. ')' → logprob: -5.680042743682861
    10. '           ' → logprob: -5.805042743682861

Token 757: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.3208640515804291
    2. 'se' → logprob: -1.9458640813827515
    3. ' segments' → logprob: -2.945863962173462
    4. 'for' → logprob: -3.070863962173462
    5. 'endpoint' → logprob: -5.195864200592041
    6. 'graph' → logprob: -5.320864200592041
    7. 'times' → logprob: -5.445864200592041
    8. 'segment' → logprob: -5.820864200592041
    9. ' for' → logprob: -5.945864200592041
    10. ' times' → logprob: -6.070864200592041

Token 758: ' per' (ID: 777)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'each' → logprob: -0.2007921189069748
    2. ' each' → logprob: -1.8257920742034912
    3. 'connect' → logprob: -4.20079231262207
    4. 'attach' → logprob: -6.20079231262207
    5. 'touch' → logprob: -6.95079231262207
    6. ' connect' → logprob: -7.20079231262207
    7. 'point' → logprob: -8.07579231262207
    8. ' at' → logprob: -8.20079231262207
    9. ' touch' → logprob: -8.57579231262207
    10. 'incident' → logprob: -8.57579231262207

Token 759: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.021845906972885132
    2. ' point' → logprob: -3.896845817565918
    3. 'endpoint' → logprob: -6.771845817565918
    4. ' endpoint' → logprob: -8.896845817565918
    5. 'points' → logprob: -12.271845817565918
    6. 'p' → logprob: -12.396845817565918
    7. 'each' → logprob: -12.396845817565918
    8. ' each' → logprob: -12.896845817565918
    9. '<|end|>' → logprob: -13.771845817565918
    10. '	point' → logprob: -14.146845817565918

Token 760: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9166465997695923
    2. ' =' → logprob: -1.5416465997695923
    3. '=' → logprob: -1.7916465997695923
    4. ' for' → logprob: -2.2916464805603027
    5. '       ' → logprob: -2.7916464805603027
    6. '<|end|>' → logprob: -3.7916464805603027
    7. '
' → logprob: -4.041646480560303
    8. ':' → logprob: -5.416646480560303
    9. '<|end|>' → logprob: -6.416646480560303
    10. '        
' → logprob: -6.541646480560303

Token 761: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023384422063827515
    2. 'for' → logprob: -4.0233845710754395
    3. ' for' → logprob: -5.3983845710754395
    4. '<|end|>' → logprob: -7.3983845710754395
    5. ',' → logprob: -11.148384094238281
    6. '.' → logprob: -11.273384094238281
    7. 'from' → logprob: -11.273384094238281
    8. '<|end|>' → logprob: -11.398384094238281
    9. ':' → logprob: -12.148384094238281
    10. '   ' → logprob: -12.398384094238281

Token 762: ' seg' (ID: 3055)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00033677343162707984
    2. '       ' → logprob: -8.125336647033691
    3. 'point' → logprob: -10.500336647033691
    4. ' for' → logprob: -11.500336647033691
    5. '   ' → logprob: -13.750336647033691
    6. 'count' → logprob: -14.625336647033691
    7. 'points' → logprob: -14.875336647033691
    8. 'from' → logprob: -14.875336647033691
    9. 'counts' → logprob: -15.500336647033691
    10. '        
' → logprob: -15.750336647033691

Token 763: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.8126453161239624
    2. 'ments' → logprob: -1.4376453161239624
    3. 'ment' → logprob: -1.6876453161239624
    4. '_count' → logprob: -2.812645435333252
    5. '_counts' → logprob: -2.937645435333252
    6. 'count' → logprob: -4.187645435333252
    7. 'm' → logprob: -6.062645435333252
    8. 'counts' → logprob: -6.562645435333252
    9. '_cnt' → logprob: -8.187644958496094
    10. 'point' → logprob: -8.312644958496094

Token 764: '_per' (ID: 10938)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07002135366201401
    2. ' =' → logprob: -2.695021390914917
    3. '[' → logprob: -10.195021629333496
    4. 's' → logprob: -10.945021629333496
    5. '=[' → logprob: -11.570021629333496
    6. '=s' → logprob: -12.320021629333496
    7. 'default' → logprob: -12.570021629333496
    8. '   ' → logprob: -13.070021629333496
    9. '=p' → logprob: -13.195021629333496
    10. '[p' → logprob: -13.820021629333496

Token 765: '_point' (ID: 15466)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -5.288163083605468e-05
    2. ' point' → logprob: -10.125052452087402
    3. 'p' → logprob: -12.500052452087402
    4. '_point' → logprob: -12.625052452087402
    5. 'points' → logprob: -12.625052452087402
    6. 'endpoint' → logprob: -14.375052452087402
    7. '	point' → logprob: -14.750052452087402
    8. '=' → logprob: -15.500052452087402
    9. '-point' → logprob: -15.500052452087402
    10. 'pt' → logprob: -15.625052452087402

Token 766: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.05762140080332756
    2. ' =' → logprob: -3.057621479034424
    3. '[' → logprob: -4.932621479034424
    4. '[p' → logprob: -6.932621479034424
    5. '=[' → logprob: -7.182621479034424
    6. '=p' → logprob: -11.182621002197266
    7. '[s' → logprob: -11.932621002197266
    8. ' =[' → logprob: -12.182621002197266
    9. '   ' → logprob: -12.432621002197266
    10. '=[]' → logprob: -12.807621002197266

Token 767: 'default' (ID: 4211)
  Prédit: 'default'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -1.0280383548888494e-06
    2. '{' → logprob: -14.250000953674316
    3. ' defaultdict' → logprob: -15.500000953674316
    4. '(default' → logprob: -17.000001907348633
    5. '"default' → logprob: -17.750001907348633
    6. '   ' → logprob: -19.125001907348633
    7. '.default' → logprob: -19.125001907348633
    8. ''default' → logprob: -19.375001907348633
    9. 'Default' → logprob: -19.500001907348633
    10. ' default' → logprob: -20.000001907348633

Token 768: 'dict' (ID: 20993)
  Prédit: 'dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: 0.0
    2. ' dict' → logprob: -18.0
    3. 'Dict' → logprob: -21.875
    4. 'dist' → logprob: -23.0
    5. 'def' → logprob: -24.0
    6. '(dict' → logprob: -24.25
    7. 'default' → logprob: -24.375
    8. 'list' → logprob: -24.625
    9. '_dict' → logprob: -24.875
    10. 'ict' → logprob: -25.375

Token 769: '(int' (ID: 2742)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.006725906860083342
    2. '(int' → logprob: -5.006725788116455
    3. 'lambda' → logprob: -11.881726264953613
    4. '(lambda' → logprob: -13.756726264953613
    5. ' int' → logprob: -14.256726264953613
    6. ':int' → logprob: -14.631726264953613
    7. 'list' → logprob: -14.631726264953613
    8. '=int' → logprob: -14.756726264953613
    9. '<int' → logprob: -15.006726264953613
    10. '[int' → logprob: -15.131726264953613

Token 770: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2256610244512558
    2. ')
' → logprob: -1.600661039352417
    3. ')
' → logprob: -9.350661277770996
    4. ')+' → logprob: -9.850661277770996
    5. '[' → logprob: -10.100661277770996
    6. ')

' → logprob: -10.350661277770996
    7. '+=' → logprob: -11.975661277770996
    8. 'for' → logprob: -12.225661277770996
    9. '[p' → logprob: -12.725661277770996
    10. ',' → logprob: -13.350661277770996

Token 771: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.028874056413769722
    2. '       ' → logprob: -4.153873920440674
    3. ' for' → logprob: -4.403873920440674
    4. '
' → logprob: -8.778874397277832
    5. ')' → logprob: -9.028874397277832
    6. '<|end|>' → logprob: -9.028874397277832
    7. '```' → logprob: -9.903874397277832
    8. '        
' → logprob: -11.278874397277832
    9. ')
' → logprob: -11.278874397277832
    10. '   ' → logprob: -11.528874397277832

Token 772: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0015315281925722957
    2. ' for' → logprob: -6.626531600952148
    3. '       ' → logprob: -8.751531600952148
    4. '
' → logprob: -11.126531600952148
    5. '<|end|>' → logprob: -11.751531600952148
    6. ')' → logprob: -12.001531600952148
    7. '	for' → logprob: -12.251531600952148
    8. '   ' → logprob: -12.751531600952148
    9. '```' → logprob: -13.126531600952148
    10. 's' → logprob: -13.376531600952148

Token 773: ' p' (ID: 275)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5487655997276306
    2. 'p' → logprob: -1.0487656593322754
    3. ' s' → logprob: -2.9237656593322754
    4. ' p' → logprob: -4.173765659332275
    5. 'i' → logprob: -6.548765659332275
    6. 'seg' → logprob: -7.423765659332275
    7. ' seg' → logprob: -8.548765182495117
    8. '(p' → logprob: -8.673765182495117
    9. 'pt' → logprob: -9.173765182495117
    10. ' i' → logprob: -9.173765182495117

Token 774: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3918972909450531
    2. 'in' → logprob: -1.1418973207473755
    3. '1' → logprob: -5.891897201538086
    4. 'oint' → logprob: -6.141897201538086
    5. 'oints' → logprob: -10.391897201538086
    6. ',' → logprob: -11.141897201538086
    7. 't' → logprob: -11.266897201538086
    8. ' ' → logprob: -11.766897201538086
    9. '   ' → logprob: -11.891897201538086
    10. '_in' → logprob: -12.141897201538086

Token 775: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00775533402338624
    2. ' points' → logprob: -4.882755279541016
    3. '(points' → logprob: -9.507755279541016
    4. 'se' → logprob: -9.882755279541016
    5. 'point' → logprob: -11.007755279541016
    6. '[' → logprob: -13.632755279541016
    7. '	points' → logprob: -13.757755279541016
    8. 'p' → logprob: -13.757755279541016
    9. 'segments' → logprob: -13.882755279541016
    10. '(se' → logprob: -14.382755279541016

Token 776: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3894263207912445
    2. ':' → logprob: -1.139426350593567
    3. '   ' → logprob: -6.139426231384277
    4. '+=' → logprob: -8.764426231384277
    5. '           ' → logprob: -9.514426231384277
    6. '=' → logprob: -9.764426231384277
    7. ' +=' → logprob: -10.264426231384277
    8. '[' → logprob: -11.264426231384277
    9. ':
' → logprob: -11.264426231384277
    10. '):
' → logprob: -11.264426231384277

Token 777: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0006913475226610899
    2. 'seg' → logprob: -8.625691413879395
    3. ' seg' → logprob: -8.875691413879395
    4. ':
' → logprob: -9.000691413879395
    5. ':' → logprob: -9.250691413879395
    6. ' for' → logprob: -9.750691413879395
    7. 'for' → logprob: -10.000691413879395
    8. 'se' → logprob: -11.500691413879395
    9. '           ' → logprob: -11.625691413879395
    10. '       ' → logprob: -11.625691413879395

Token 778: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' (adapté à ' seg') → logprob: -0.0005544631858356297
    2. 'for' → logprob: -8.125554084777832
    3. ' seg' → logprob: -8.750554084777832
    4. '   ' → logprob: -9.250554084777832
    5. 'se' → logprob: -13.875554084777832
    6. '(seg' → logprob: -14.000554084777832
    7. 'segments' → logprob: -14.500554084777832
    8. ' for' → logprob: -14.625554084777832
    9. '           ' → logprob: -14.875554084777832
    10. '       ' → logprob: -15.375554084777832

Token 779: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -3.173704271830502e-06
    2. ' _' → logprob: -14.25000286102295
    3. 's' → logprob: -14.50000286102295
    4. 'count' → logprob: -15.00000286102295
    5. '_' → logprob: -15.12500286102295
    6. '_counts' → logprob: -15.25000286102295
    7. '_c' → logprob: -15.50000286102295
    8. '\' → logprob: -15.50000286102295
    9. '_segments' → logprob: -16.625003814697266
    10. '=_' → logprob: -16.625003814697266

Token 780: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.30656635761260986
    2. '[p' → logprob: -1.4315663576126099
    3. 'per' → logprob: -3.8065662384033203
    4. 'p' → logprob: -6.55656623840332
    5. 's' → logprob: -6.80656623840332
    6. '_p' → logprob: -9.05656623840332
    7. '[' → logprob: -9.68156623840332
    8. '
' → logprob: -10.55656623840332
    9. '(p' → logprob: -10.55656623840332
    10. '=' → logprob: -11.18156623840332

Token 781: '_point' (ID: 15466)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.0030259599443525076
    2. 'p' → logprob: -6.253026008605957
    3. 'points' → logprob: -7.128026008605957
    4. '_point' → logprob: -9.128026008605957
    5. 'default' → logprob: -9.253026008605957
    6. 'int' → logprob: -10.253026008605957
    7. 'def' → logprob: -11.378026008605957
    8. 'oint' → logprob: -11.503026008605957
    9. 'endpoint' → logprob: -12.253026008605957
    10. ' point' → logprob: -12.878026008605957

Token 782: '[p' (ID: 23234)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7451346516609192
    2. '[p' → logprob: -0.8701346516609192
    3. '=p' → logprob: -2.6201345920562744
    4. ' =' → logprob: -3.9951345920562744
    5. '=len' → logprob: -4.6201348304748535
    6. 'p' → logprob: -6.3701348304748535
    7. '+=' → logprob: -6.7451348304748535
    8. 'len' → logprob: -6.9951348304748535
    9. '[len' → logprob: -7.3701348304748535
    10. '[' → logprob: -7.6201348304748535

Token 783: ']=' (ID: 9539)
  Prédit: '=len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=len' → logprob: -0.6049010753631592
    2. '=' → logprob: -0.8549010753631592
    3. ' =' → logprob: -3.729901075363159
    4. '+=' → logprob: -5.479901313781738
    5. '=int' → logprob: -8.854901313781738
    6. ' +=' → logprob: -9.104901313781738
    7. '=sum' → logprob: -10.604901313781738
    8. '=p' → logprob: -11.229901313781738
    9. 'len' → logprob: -11.354901313781738
    10. ']=' → logprob: -11.354901313781738

Token 784: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -2.069664333248511e-05
    2. '0' → logprob: -10.875020980834961
    3. ' len' → logprob: -13.375020980834961
    4. 'sum' → logprob: -15.750020980834961
    5. '(len' → logprob: -18.00002098083496
    6. 'endpoint' → logprob: -18.25002098083496
    7. '	len' → logprob: -19.62502098083496
    8. 'length' → logprob: -20.25002098083496
    9. '[len' → logprob: -20.62502098083496
    10. 'adj' → logprob: -21.00002098083496

Token 785: '(endpoint' (ID: 116946)
  Prédit: '(endpoint'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(endpoint' → logprob: -4.5491004129871726e-05
    2. 'endpoint' → logprob: -10.000045776367188
    3. ' endpoint' → logprob: -17.750045776367188
    4. '(' → logprob: -18.500045776367188
    5. '([' → logprob: -19.875045776367188
    6. '(end' → logprob: -19.875045776367188
    7. '(
' → logprob: -19.875045776367188
    8. '((' → logprob: -20.125045776367188
    9. '(event' → logprob: -20.250045776367188
    10. '(edge' → logprob: -20.500045776367188

Token 786: '_seg' (ID: 78972)
  Prédit: '_seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seg' → logprob: -0.00467861071228981
    2. 'seg' → logprob: -5.629678726196289
    3. '[p' → logprob: -7.004678726196289
    4. 's' → logprob: -9.504678726196289
    5. '_se' → logprob: -10.754678726196289
    6. '[' → logprob: -10.879678726196289
    7. 'se' → logprob: -11.879678726196289
    8. '[s' → logprob: -11.879678726196289
    9. 'p' → logprob: -12.004678726196289
    10. '_s' → logprob: -12.004678726196289

Token 787: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.00021509946964215487
    2. 'p' → logprob: -8.500215530395508
    3. '(p' → logprob: -11.625215530395508
    4. ')' → logprob: -13.750215530395508
    5. ')p' → logprob: -14.625215530395508
    6. 's' → logprob: -15.125215530395508
    7. '[
' → logprob: -15.250215530395508
    8. '[' → logprob: -15.375215530395508
    9. '<p' → logprob: -16.000215530395508
    10. ')[' → logprob: -16.125215530395508

Token 788: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0019486293895170093
    2. ')' → logprob: -6.251948833465576
    3. '])
' → logprob: -11.626948356628418
    4. ']' → logprob: -12.501948356628418
    5. ' ])' → logprob: -13.626948356628418
    6. '))' → logprob: -13.751948356628418
    7. ')])' → logprob: -13.751948356628418
    8. ')]' → logprob: -13.876948356628418
    9. '])

' → logprob: -14.001948356628418
    10. ''])' → logprob: -14.251948356628418

Token 789: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23983637988567352
    2. 'for' → logprob: -2.1148364543914795
    3. ' for' → logprob: -2.4898364543914795
    4. '
' → logprob: -4.9898362159729
    5. '        
' → logprob: -6.4898362159729
    6. '```' → logprob: -7.6148362159729
    7. '<|end|>' → logprob: -8.489836692810059
    8. '   ' → logprob: -8.614836692810059
    9. ',' → logprob: -9.114836692810059
    10. ')' → logprob: -9.239836692810059

Token 790: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12970492243766785
    2. ' for' → logprob: -2.5047049522399902
    3. '       ' → logprob: -3.2547049522399902
    4. '```' → logprob: -7.50470495223999
    5. '#' (adapté à ' #') → logprob: -8.254704475402832
    6. '        
' → logprob: -9.129704475402832
    7. '
' → logprob: -9.129704475402832
    8. ')' → logprob: -9.254704475402832
    9. ',' → logprob: -10.129704475402832
    10. 'def' → logprob: -10.629704475402832

Token 791: ' From' (ID: 7217)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0024291672743856907
    2. '#' → logprob: -6.752429008483887
    3. 'street' → logprob: -6.877429008483887
    4. 'queue' → logprob: -9.877429008483887
    5. 'def' → logprob: -9.877429008483887
    6. 'visited' → logprob: -10.502429008483887
    7. ' for' → logprob: -10.627429008483887
    8. 'stre' → logprob: -10.627429008483887
    9. '       ' → logprob: -11.002429008483887
    10. 'threshold' → logprob: -11.627429008483887

Token 792: ' problem' (ID: 4792)
  Prédit: ' here'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' here' → logprob: -0.4036186933517456
    2. 'for' → logprob: -2.278618812561035
    3. 'here' → logprob: -2.278618812561035
    4. 'se' → logprob: -3.528618812561035
    5. 'seg' → logprob: -3.528618812561035
    6. ' for' → logprob: -4.278618812561035
    7. 'p' → logprob: -4.653618812561035
    8. 'segments' → logprob: -4.653618812561035
    9. ' seg' → logprob: -5.028618812561035
    10. '#' → logprob: -5.153618812561035

Token 793: ':' (ID: 25)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8735657930374146
    2. 'for' → logprob: -1.2485657930374146
    3. '       ' → logprob: -1.6235657930374146
    4. '#' → logprob: -2.498565673828125
    5. '
' → logprob: -5.248565673828125
    6. ',' → logprob: -5.748565673828125
    7. '```' → logprob: -6.748565673828125
    8. '   ' → logprob: -6.873565673828125
    9. ' segments' → logprob: -7.248565673828125
    10. 'segments' → logprob: -7.248565673828125

Token 794: ' signs' (ID: 17424)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6497036218643188
    2. ' for' → logprob: -0.7747036218643188
    3. '#' → logprob: -4.149703502655029
    4. '       ' → logprob: -7.524703502655029
    5. ' #' → logprob: -8.024703979492188
    6. 'def' → logprob: -9.524703979492188
    7. ' street' → logprob: -10.149703979492188
    8. ' streets' → logprob: -10.399703979492188
    9. '```' → logprob: -10.649703979492188
    10. 'For' → logprob: -10.649703979492188

Token 795: ' touch' (ID: 7381)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9458981156349182
    2. ' are' → logprob: -1.0708980560302734
    3. '#' → logprob: -3.1958980560302734
    4. 'are' → logprob: -3.8208980560302734
    5. '_segments' → logprob: -3.8208980560302734
    6. '=' → logprob: -3.9458980560302734
    7. '<|end|>' → logprob: -4.070898056030273
    8. ' have' → logprob: -4.320898056030273
    9. 'for' → logprob: -4.445898056030273
    10. ' endpoints' → logprob: -4.695898056030273

Token 796: ' only' (ID: 1606)
  Prédit: 'exact'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'exact' → logprob: -0.6347312331199646
    2. ' exactly' → logprob: -0.8847312331199646
    3. 'a' → logprob: -3.7597312927246094
    4. 'one' → logprob: -3.8847312927246094
    5. 'stre' → logprob: -5.759731292724609
    6. 'only' → logprob: -5.884731292724609
    7. 'points' → logprob: -6.134731292724609
    8. 'street' → logprob: -6.259731292724609
    9. ' a' → logprob: -7.259731292724609
    10. ' one' → logprob: -7.509731292724609

Token 797: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.10972176492214203
    2. ' one' → logprob: -2.3597216606140137
    3. 'points' → logprob: -5.609721660614014
    4. 'exact' → logprob: -5.859721660614014
    5. ' exactly' → logprob: -6.734721660614014
    6. ' endpoints' → logprob: -7.234721660614014
    7. '1' → logprob: -7.984721660614014
    8. ' ' → logprob: -8.359722137451172
    9. 'once' → logprob: -8.984722137451172
    10. 'a' → logprob: -9.484722137451172

Token 798: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.7007905840873718
    2. ' street' → logprob: -0.9507905840873718
    3. 'segment' → logprob: -2.3257906436920166
    4. ' segment' → logprob: -4.7007904052734375
    5. 'sign' → logprob: -6.2007904052734375
    6. 'segments' → logprob: -6.4507904052734375
    7. 'stre' → logprob: -6.5757904052734375
    8. 'endpoint' → logprob: -7.0757904052734375
    9. 'point' → logprob: -7.7007904052734375
    10. 'more' → logprob: -7.7007904052734375

Token 799: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6735141277313232
    2. ' for' → logprob: -1.1735141277313232
    3. 'for' → logprob: -2.7985141277313232
    4. '#' → logprob: -3.1735141277313232
    5. ',' → logprob: -3.9235141277313232
    6. ' and' → logprob: -4.048514366149902
    7. '<|end|>' → logprob: -4.298514366149902
    8. 's' → logprob: -5.048514366149902
    9. 'segments' → logprob: -5.298514366149902
    10. '.' → logprob: -5.548514366149902

Token 800: ' other' (ID: 1273)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.881317138671875
    2. ' and' → logprob: -1.131317138671875
    3. 'and' → logprob: -1.881317138671875
    4. '       ' → logprob: -3.131317138671875
    5. ' for' → logprob: -4.006317138671875
    6. 'for' → logprob: -4.256317138671875
    7. ' so' → logprob: -4.381317138671875
    8. ' #' → logprob: -5.381317138671875
    9. 'continue' → logprob: -5.506317138671875
    10. '...' → logprob: -6.131317138671875

Token 801: ' end' (ID: 1268)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.4031158685684204
    2. ' endpoint' → logprob: -1.1531158685684204
    3. '_endpoint' → logprob: -4.528115749359131
    4. 'point' → logprob: -6.278115749359131
    5. 'end' → logprob: -7.778115749359131
    6. 'p' → logprob: -7.903115749359131
    7. ')' → logprob: -8.153116226196289
    8. '   ' → logprob: -8.403116226196289
    9. ' endpoints' → logprob: -8.528116226196289
    10. ' side' → logprob: -8.778116226196289

Token 802: ' open' (ID: 2494)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.9238153696060181
    2. ' is' → logprob: -2.4238152503967285
    3. '=' → logprob: -2.7988152503967285
    4. 's' → logprob: -2.9238152503967285
    5. 'has' → logprob: -3.1738152503967285
    6. ' with' → logprob: -3.4238152503967285
    7. '       ' → logprob: -3.5488152503967285
    8. '.' → logprob: -3.7988152503967285
    9. ':' → logprob: -4.0488152503967285
    10. ')' → logprob: -4.0488152503967285

Token 803: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08307726681232452
    2. ' for' → logprob: -3.0830771923065186
    3. '
' → logprob: -4.333077430725098
    4. '<|end|>' → logprob: -4.708077430725098
    5. 'for' → logprob: -5.208077430725098
    6. ',' → logprob: -6.333077430725098
    7. '        
' → logprob: -6.458077430725098
    8. '#' → logprob: -6.708077430725098
    9. '<|end|>' → logprob: -6.708077430725098
    10. 'def' → logprob: -9.333077430725098

Token 804: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11609387397766113
    2. ' for' → logprob: -2.741093873977661
    3. 'for' → logprob: -3.116093873977661
    4. '#' → logprob: -8.366093635559082
    5. '```' → logprob: -8.991093635559082
    6. '<|end|>' → logprob: -8.991093635559082
    7. '        
' → logprob: -9.116093635559082
    8. ',' → logprob: -9.866093635559082
    9. ')' → logprob: -10.616093635559082
    10. '
' → logprob: -10.741093635559082

Token 805: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5199617147445679
    2. ' for' → logprob: -1.5199617147445679
    3. '       ' → logprob: -2.2699618339538574
    4. '#' (adapté à ' #') → logprob: -2.6449618339538574
    5. 'street' → logprob: -5.019961833953857
    6. ' street' → logprob: -6.269961833953857
    7. ' #' → logprob: -6.769961833953857
    8. 'def' → logprob: -6.894961833953857
    9. 'stre' → logprob: -7.019961833953857
    10. ' streets' → logprob: -8.2699613571167

Token 806: ' So' (ID: 2632)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.027573969215154648
    2. ' for' → logprob: -4.027574062347412
    3. '#' → logprob: -4.902574062347412
    4. '       ' → logprob: -6.777574062347412
    5. 'street' → logprob: -7.652574062347412
    6. 'visited' → logprob: -8.652573585510254
    7. ' #' → logprob: -10.277573585510254
    8. 'def' → logprob: -10.402573585510254
    9. ' street' → logprob: -10.902573585510254
    10. 'queue' → logprob: -11.277573585510254

Token 807: ' signs' (ID: 17424)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2529411017894745
    2. ' for' → logprob: -1.5029411315917969
    3. '#' → logprob: -7.502941131591797
    4. ' street' → logprob: -8.877941131591797
    5. 'street' → logprob: -9.252941131591797
    6. '       ' → logprob: -9.377941131591797
    7. ' streets' → logprob: -10.127941131591797
    8. ' #' → logprob: -10.377941131591797
    9. '
' → logprob: -10.752941131591797
    10. 'def' → logprob: -10.877941131591797

Token 808: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -1.3545488119125366
    2. ' =' → logprob: -1.4795488119125366
    3. 'connect' → logprob: -2.229548931121826
    4. '_touch' → logprob: -2.229548931121826
    5. 'touch' → logprob: -2.354548931121826
    6. '=' → logprob: -2.479548931121826
    7. '_segments' → logprob: -3.729548931121826
    8. ' touch' → logprob: -3.979548931121826
    9. 'are' → logprob: -4.229548931121826
    10. ' connect' → logprob: -4.854548931121826

Token 809: ' segments' (ID: 33749)
  Prédit: ' segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -1.0527410507202148
    2. ' those' → logprob: -1.4277410507202148
    3. 'segments' → logprob: -1.4277410507202148
    4. 'those' → logprob: -2.802741050720215
    5. ' [' → logprob: -3.177741050720215
    6. '[' → logprob: -4.052741050720215
    7. '[i' → logprob: -4.677741050720215
    8. '[s' → logprob: -5.177741050720215
    9. '   ' → logprob: -5.427741050720215
    10. ' next' → logprob: -5.427741050720215

Token 810: ' with' (ID: 483)
  Prédit: ' where'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' where' → logprob: -0.05208616703748703
    2. 'where' → logprob: -3.927086114883423
    3. ' that' → logprob: -4.552086353302002
    4. ' for' → logprob: -4.802086353302002
    5. 'for' → logprob: -5.177086353302002
    6. ' with' → logprob: -5.427086353302002
    7. 'with' → logprob: -6.552086353302002
    8. 'that' → logprob: -7.302086353302002
    9. ' whose' → logprob: -9.677085876464844
    10. '   ' → logprob: -10.677085876464844

Token 811: ' one' (ID: 1001)
  Prédit: '(seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(seg' → logprob: -0.08894525468349457
    2. 'seg' → logprob: -2.713945150375366
    3. 'one' → logprob: -4.338945388793945
    4. 'exact' → logprob: -6.463945388793945
    5. '(one' → logprob: -6.838945388793945
    6. ' (' → logprob: -7.838945388793945
    7. '(' → logprob: -7.838945388793945
    8. ' seg' → logprob: -8.088945388793945
    9. 'any' → logprob: -8.088945388793945
    10. '(se' → logprob: -8.588945388793945

Token 812: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.38738057017326355
    2. ' endpoint' → logprob: -1.137380599975586
    3. 'end' → logprob: -8.012380599975586
    4. '_endpoint' → logprob: -9.512380599975586
    5. ' end' → logprob: -9.762380599975586
    6. ' endpoints' → logprob: -10.887380599975586
    7. '(endpoint' → logprob: -11.262380599975586
    8. ' of' → logprob: -12.387380599975586
    9. 'segment' → logprob: -13.137380599975586
    10. 'Endpoint' → logprob: -13.887380599975586

Token 813: ' degree' (ID: 9882)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' with' → logprob: -1.061920166015625
    2. 'with' → logprob: -1.186920166015625
    3. ' having' → logprob: -2.686920166015625
    4. ' that' → logprob: -2.686920166015625
    5. ' where' → logprob: -2.811920166015625
    6. 'that' → logprob: -2.936920166015625
    7. 'where' → logprob: -3.561920166015625
    8. 'degree' → logprob: -4.186920166015625
    9. 'having' → logprob: -4.436920166015625
    10. ' has' → logprob: -4.686920166015625

Token 814: ' =' (ID: 314)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.020959431305527687
    2. ' ==' → logprob: -4.145959377288818
    3. '>=' → logprob: -6.645959377288818
    4. '>' → logprob: -6.770959377288818
    5. '=' → logprob: -7.270959377288818
    6. '()==' → logprob: -7.270959377288818
    7. '1' → logprob: -8.145959854125977
    8. '<=' → logprob: -8.520959854125977
    9. ')==' → logprob: -8.770959854125977
    10. ')' → logprob: -9.020959854125977

Token 815: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8074162653647363e-05
    2. ' ' → logprob: -11.125018119812012
    3. '0' → logprob: -13.375018119812012
    4. '=' → logprob: -13.625018119812012
    5. '2' → logprob: -16.062517166137695
    6. 'exact' → logprob: -16.125017166137695
    7. '```' → logprob: -16.687517166137695
    8. '
' → logprob: -16.875017166137695
    9. '   ' → logprob: -17.875017166137695
    10. '==' → logprob: -17.875017166137695

Token 816: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10874643176794052
    2. 'and' → logprob: -2.7337465286254883
    3. ',' → logprob: -3.3587465286254883
    4. '<|end|>' → logprob: -6.108746528625488
    5. ' or' → logprob: -7.858746528625488
    6. ' ,' → logprob: -8.608746528625488
    7. ')' → logprob: -8.858746528625488
    8. ' ' → logprob: -9.733746528625488
    9. '<|end|>' → logprob: -9.733746528625488
    10. '.' → logprob: -10.358746528625488

Token 817: ' other' (ID: 1273)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -1.042868971824646
    2. 'the' → logprob: -1.667868971824646
    3. 'other' → logprob: -1.792868971824646
    4. ' seg' → logprob: -2.2928690910339355
    5. 'one' → logprob: -2.7928690910339355
    6. ' the' → logprob: -3.0428690910339355
    7. ' other' → logprob: -3.7928690910339355
    8. 'another' → logprob: -3.9178690910339355
    9. 'len' → logprob: -4.0428690910339355
    10. '(seg' → logprob: -4.7928690910339355

Token 818: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.11652801185846329
    2. ' endpoint' → logprob: -2.616528034210205
    3. 'degree' → logprob: -3.991528034210205
    4. 'point' → logprob: -4.741528034210205
    5. '_endpoint' → logprob: -5.616528034210205
    6. '_degree' → logprob: -5.991528034210205
    7. ' degree' → logprob: -6.116528034210205
    8. 'end' → logprob: -7.616528034210205
    9. ' not' → logprob: -8.741527557373047
    10. '==' → logprob: -9.241527557373047

Token 819: ' degree' (ID: 9882)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degree' → logprob: -0.06645581126213074
    2. ' degree' → logprob: -2.816455841064453
    3. '_degree' → logprob: -5.941455841064453
    4. ' with' → logprob: -8.316455841064453
    5. '=' → logprob: -8.441455841064453
    6. 'has' → logprob: -8.566455841064453
    7. ' has' → logprob: -8.691455841064453
    8. ' having' → logprob: -8.691455841064453
    9. 'with' → logprob: -8.941455841064453
    10. ' not' → logprob: -9.191455841064453

Token 820: '=' (ID: 28)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.301442414522171
    2. ' ==' → logprob: -1.5514423847198486
    3. '=' → logprob: -3.1764423847198486
    4. ' =' → logprob: -5.301442623138428
    5. '<=' → logprob: -7.301442623138428
    6. ' <=' → logprob: -8.42644214630127
    7. '>' → logprob: -8.67644214630127
    8. '>=' → logprob: -8.80144214630127
    9. ' ' → logprob: -9.17644214630127
    10. '<' → logprob: -9.80144214630127

Token 821: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5763698220252991
    2. '0' → logprob: -0.8263698220252991
    3. '=' → logprob: -8.076370239257812
    4. '==' → logprob: -10.451370239257812
    5. ' ' → logprob: -10.451370239257812
    6. 'exact' → logprob: -11.638870239257812
    7. 'either' → logprob: -11.951370239257812
    8. '```' → logprob: -12.138870239257812
    9. '2' → logprob: -12.326370239257812
    10. '>' → logprob: -12.388870239257812

Token 822: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5562924742698669
    2. '
' → logprob: -1.0562925338745117
    3. ',' → logprob: -4.181292533874512
    4. '<|end|>' → logprob: -4.181292533874512
    5. ' for' → logprob: -4.306292533874512
    6. ' and' → logprob: -4.681292533874512
    7. '.' → logprob: -5.306292533874512
    8. '        
' → logprob: -5.556292533874512
    9. ')' → logprob: -5.931292533874512
    10. ' or' → logprob: -6.556292533874512

Token 823: ' no' (ID: 860)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009775921702384949
    2. 'not' → logprob: -5.1347761154174805
    3. '0' → logprob: -7.0097761154174805
    4. 'sign' → logprob: -7.2597761154174805
    5. '=' → logprob: -7.3847761154174805
    6. '==' → logprob: -7.8847761154174805
    7. 'does' → logprob: -8.88477611541748
    8. ' not' → logprob: -9.13477611541748
    9. 'unique' → logprob: -9.13477611541748
    10. '>' → logprob: -9.25977611541748

Token 824: ' connections' (ID: 21069)
  Prédit: 'connection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connection' → logprob: -0.8816404938697815
    2. ' connection' → logprob: -1.2566404342651367
    3. 'connections' → logprob: -2.3816404342651367
    4. 'seg' → logprob: -3.2566404342651367
    5. 's' → logprob: -3.6316404342651367
    6. ')' → logprob: -3.6316404342651367
    7. '
' → logprob: -3.7566404342651367
    8. ' connections' → logprob: -3.8816404342651367
    9. 't' → logprob: -4.381640434265137
    10. '_connection' → logprob: -5.006640434265137

Token 825: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.530401349067688
    2. '       ' → logprob: -1.155401349067688
    3. ' for' → logprob: -2.7804012298583984
    4. 'for' → logprob: -4.155401229858398
    5. '        
' → logprob: -4.780401229858398
    6. ',' → logprob: -5.655401229858398
    7. '<|end|>' → logprob: -6.030401229858398
    8. ' 
' → logprob: -7.280401229858398
    9. ',
' → logprob: -7.655401229858398
    10. '<|end|>' → logprob: -7.655401229858398

Token 826: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6074090600013733
    2. ' for' → logprob: -0.9824090600013733
    3. 'for' → logprob: -2.7324090003967285
    4. '<|end|>' → logprob: -4.7324090003967285
    5. '
' → logprob: -6.1074090003967285
    6. ',' → logprob: -6.7324090003967285
    7. ')' → logprob: -7.1074090003967285
    8. '        
' → logprob: -7.3574090003967285
    9. '<|end|>' → logprob: -7.4824090003967285
    10. ' and' → logprob: -8.357409477233887

Token 827: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.01774423196911812
    2. ' for' → logprob: -4.142744064331055
    3. '       ' → logprob: -6.892744064331055
    4. '
' → logprob: -7.892744064331055
    5. '#' (adapté à ' #') → logprob: -8.892744064331055
    6. '```' → logprob: -9.017744064331055
    7. '        
' → logprob: -10.892744064331055
    8. ')' → logprob: -11.517744064331055
    9. 'For' → logprob: -12.267744064331055
    10. '   ' → logprob: -13.017744064331055

Token 828: ' Actually' (ID: 50557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0045159198343753815
    2. ' for' → logprob: -5.504516124725342
    3. '       ' → logprob: -8.254515647888184
    4. '#' → logprob: -9.004515647888184
    5. '```' → logprob: -10.254515647888184
    6. '
' → logprob: -12.379515647888184
    7. 'For' → logprob: -12.504515647888184
    8. 'def' → logprob: -12.879515647888184
    9. '        
' → logprob: -13.379515647888184
    10. '   ' → logprob: -13.504515647888184

Token 829: ' degree' (ID: 9882)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09169373661279678
    2. 'for' → logprob: -2.591693639755249
    3. '       ' → logprob: -4.591693878173828
    4. '#' → logprob: -7.341693878173828
    5. ' continue' → logprob: -7.466693878173828
    6. '
' → logprob: -7.591693878173828
    7. ',' → logprob: -7.841693878173828
    8. 'continue' → logprob: -8.591693878173828
    9. ' #' → logprob: -9.091693878173828
    10. '   ' → logprob: -10.966693878173828

Token 830: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4734945297241211
    2. ' =' → logprob: -1.723494529724121
    3. 's' → logprob: -2.098494529724121
    4. '==' → logprob: -3.348494529724121
    5. ' ==' → logprob: -5.598494529724121
    6. ')' → logprob: -5.723494529724121
    7. '(s' → logprob: -5.723494529724121
    8. '(p' → logprob: -5.723494529724121
    9. ' ' → logprob: -5.973494529724121
    10. 'def' → logprob: -6.223494529724121

Token 831: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.047929778695106506
    2. '0' → logprob: -3.7979297637939453
    3. 'default' → logprob: -3.9229297637939453
    4. '2' → logprob: -5.797929763793945
    5. ' ' → logprob: -7.297929763793945
    6. '=' → logprob: -8.797929763793945
    7. '
' → logprob: -8.922929763793945
    8. '>' → logprob: -9.297929763793945
    9. '```' → logprob: -9.422929763793945
    10. 'None' → logprob: -9.922929763793945

Token 832: ' impossible' (ID: 19786)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -1.24158775806427
    2. '<|end|>' → logprob: -1.36658775806427
    3. ' and' → logprob: -1.74158775806427
    4. '       ' → logprob: -2.2415876388549805
    5. ' for' → logprob: -2.7415876388549805
    6. '
' → logprob: -3.4915876388549805
    7. ',' → logprob: -3.6165876388549805
    8. '<|end|>' → logprob: -3.8665876388549805
    9. ')' → logprob: -4.2415876388549805
    10. ' if' → logprob: -6.2415876388549805

Token 833: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2781408131122589
    2. ' for' → logprob: -1.9031407833099365
    3. 'for' → logprob: -3.1531407833099365
    4. '
' → logprob: -3.2781407833099365
    5. '<|end|>' → logprob: -5.153141021728516
    6. '        
' → logprob: -5.778141021728516
    7. '#' → logprob: -6.653141021728516
    8. ',' → logprob: -7.153141021728516
    9. '<|end|>' → logprob: -7.278141021728516
    10. ')' → logprob: -7.903141021728516

Token 834: ' as' (ID: 472)
  Prédit: ' so'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' so' → logprob: -0.2000158280134201
    2. ' but' → logprob: -2.8250157833099365
    3. ' because' → logprob: -3.5750157833099365
    4. ' since' → logprob: -3.5750157833099365
    5. ' as' → logprob: -3.8250157833099365
    6. ' for' → logprob: -4.575016021728516
    7. ' continue' → logprob: -4.575016021728516
    8. 'so' → logprob: -5.450016021728516
    9. 'since' → logprob: -5.825016021728516
    10. 'but' → logprob: -6.325016021728516

Token 835: ' they' (ID: 1023)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.6449041366577148
    2. ' all' → logprob: -1.2699041366577148
    3. 'segments' → logprob: -2.644904136657715
    4. 'each' → logprob: -3.644904136657715
    5. 'every' → logprob: -4.019904136657715
    6. 'points' → logprob: -4.519904136657715
    7. ' segments' → logprob: -4.894904136657715
    8. 'segment' → logprob: -4.894904136657715
    9. ' each' → logprob: -5.019904136657715
    10. ' every' → logprob: -5.144904136657715

Token 836: ' are' (ID: 553)
  Prédit: ' are'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.45911914110183716
    2. 'are' → logprob: -2.2091190814971924
    3. ' appear' → logprob: -2.5841190814971924
    4. ' must' → logprob: -3.3341190814971924
    5. ' always' → logprob: -3.8341190814971924
    6. 'must' → logprob: -3.9591190814971924
    7. 'appear' → logprob: -4.2091193199157715
    8. ' both' → logprob: -4.5841193199157715
    9. ' connect' → logprob: -4.7091193199157715
    10. ' have' → logprob: -4.7091193199157715

Token 837: ' endpoints' (ID: 76454)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -1.563022494316101
    2. ' endpoints' → logprob: -1.688022494316101
    3. ' in' → logprob: -2.0630226135253906
    4. ' part' → logprob: -2.4380226135253906
    5. 'part' → logprob: -2.8130226135253906
    6. 'all' → logprob: -3.0630226135253906
    7. ' on' → logprob: -3.3130226135253906
    8. 'in' → logprob: -3.4380226135253906
    9. 'connected' → logprob: -3.6880226135253906
    10. ' all' → logprob: -3.8130226135253906

Token 838: ' so' (ID: 813)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4021362066268921
    2. ' for' → logprob: -1.652136206626892
    3. '
' → logprob: -2.9021363258361816
    4. 'for' → logprob: -3.5271363258361816
    5. '<|end|>' → logprob: -3.5271363258361816
    6. ',' → logprob: -4.652136325836182
    7. '        
' → logprob: -5.402136325836182
    8. '#' → logprob: -6.277136325836182
    9. '<|end|>' → logprob: -6.277136325836182
    10. ')' → logprob: -6.527136325836182

Token 839: ' unreachable' (ID: 171303)
  Prédit: ' connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' connected' → logprob: -0.9460480213165283
    2. 'connected' → logprob: -1.4460480213165283
    3. ' both' → logprob: -1.8210480213165283
    4. 'both' → logprob: -2.1960480213165283
    5. ' at' → logprob: -4.071047782897949
    6. 'they' → logprob: -4.696047782897949
    7. ' must' → logprob: -4.821047782897949
    8. '   ' → logprob: -5.071047782897949
    9. 'must' → logprob: -5.071047782897949
    10. ' they' → logprob: -5.321047782897949

Token 840: '?' (ID: 30)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11812489479780197
    2. ' for' → logprob: -2.6181249618530273
    3. '
' → logprob: -4.118124961853027
    4. 'for' → logprob: -4.493124961853027
    5. '<|end|>' → logprob: -5.368124961853027
    6. ',' → logprob: -5.743124961853027
    7. '<|end|>' → logprob: -7.243124961853027
    8. 's' → logprob: -7.493124961853027
    9. '#' → logprob: -7.868124961853027
    10. '        
' → logprob: -7.868124961853027

Token 841: ' But' (ID: 3072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8872382640838623
    2. 'for' → logprob: -1.3872382640838623
    3. ' for' → logprob: -1.7622382640838623
    4. '
' → logprob: -2.3872382640838623
    5. '#' → logprob: -2.8872382640838623
    6. '        
' → logprob: -5.387238502502441
    7. ',' → logprob: -6.637238502502441
    8. ')' → logprob: -6.637238502502441
    9. '<|end|>' → logprob: -6.637238502502441
    10. '   ' → logprob: -6.762238502502441

Token 842: ' problem' (ID: 4792)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.5497428178787231
    2. '#' → logprob: -2.1747426986694336
    3. ' continue' → logprob: -2.2997426986694336
    4. 'for' → logprob: -2.4247426986694336
    5. ' signs' → logprob: -2.5497426986694336
    6. 'continue' → logprob: -2.6747426986694336
    7. ' we' → logprob: -3.1747426986694336
    8. 'we' → logprob: -3.4247426986694336
    9. ' code' → logprob: -3.4247426986694336
    10. ' let's' → logprob: -3.4247426986694336

Token 843: ' says' (ID: 5003)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.024598479270935
    2. '   ' → logprob: -2.3995985984802246
    3. ' segments' → logprob: -2.5245985984802246
    4. ':' → logprob: -2.6495985984802246
    5. 'segments' → logprob: -2.8995985984802246
    6. ' continues' → logprob: -3.1495985984802246
    7. ' has' → logprob: -3.2745985984802246
    8. '_segments' → logprob: -3.2745985984802246
    9. '.' → logprob: -3.8995985984802246
    10. '       ' → logprob: -4.399598598480225

Token 844: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7583679556846619
    2. '       ' → logprob: -0.8833679556846619
    3. 'for' → logprob: -3.7583680152893066
    4. '#' → logprob: -4.258368015289307
    5. ' continue' → logprob: -4.383368015289307
    6. ' both' → logprob: -4.383368015289307
    7. 'continue' → logprob: -4.758368015289307
    8. ' one' → logprob: -4.883368015289307
    9. ' #' → logprob: -5.258368015289307
    10. '...' → logprob: -5.383368015289307

Token 845: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5712412595748901
    2. '       ' → logprob: -0.9462412595748901
    3. 'for' → logprob: -3.3212413787841797
    4. '
' → logprob: -5.94624137878418
    5. '#' → logprob: -6.94624137878418
    6. '   ' → logprob: -7.07124137878418
    7. '        
' → logprob: -7.32124137878418
    8. '<|end|>' → logprob: -7.32124137878418
    9. ',' → logprob: -7.57124137878418
    10. ')' → logprob: -7.69624137878418

Token 846: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.48158326745033264
    2. 'for' (adapté à ' for') → logprob: -1.6065832376480103
    3. '       ' → logprob: -1.7315832376480103
    4. '
' → logprob: -6.856583118438721
    5. '#' → logprob: -7.356583118438721
    6. '```' → logprob: -7.606583118438721
    7. 's' → logprob: -7.981583118438721
    8. '   ' → logprob: -8.231583595275879
    9. ')' → logprob: -8.356583595275879
    10. 'For' → logprob: -8.481583595275879

Token 847: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.26630139350891113
    2. ' i' → logprob: -2.266301393508911
    3. 'p' → logprob: -2.766301393508911
    4. 's' → logprob: -3.391301393508911
    5. ' s' → logprob: -4.141301155090332
    6. ' p' → logprob: -4.641301155090332
    7. ' (' → logprob: -5.766301155090332
    8. '(i' → logprob: -7.141301155090332
    9. ' seg' → logprob: -7.141301155090332
    10. 'seg' → logprob: -7.266301155090332

Token 848: ',(' (ID: 27243)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11094211041927338
    2. ',(' → logprob: -2.9859421253204346
    3. ',p' → logprob: -3.6109421253204346
    4. 'in' → logprob: -4.2359418869018555
    5. ' in' → logprob: -4.9859418869018555
    6. ',s' → logprob: -5.9859418869018555
    7. ' ,' → logprob: -5.9859418869018555
    8. ',se' → logprob: -7.6109418869018555
    9. ',in' → logprob: -8.235941886901855
    10. '(p' → logprob: -9.485941886901855

Token 849: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.008458074182271957
    2. 's' → logprob: -4.883458137512207
    3. '(p' → logprob: -7.633458137512207
    4. 'se' → logprob: -8.383458137512207
    5. '(s' → logprob: -10.758458137512207
    6. '    
' → logprob: -10.883458137512207
    7. '*p' → logprob: -10.883458137512207
    8. '*' → logprob: -11.383458137512207
    9. 'seg' → logprob: -11.633458137512207
    10. '
' → logprob: -12.008458137512207

Token 850: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03157631307840347
    2. '1' → logprob: -3.65657639503479
    3. ',' → logprob: -5.906576156616211
    4. '[' → logprob: -6.031576156616211
    5. ')' → logprob: -10.156576156616211
    6. '
' → logprob: -10.531576156616211
    7. '<|end|>' → logprob: -11.031576156616211
    8. ' ' → logprob: -12.156576156616211
    9. '   ' → logprob: -12.156576156616211
    10. ')[' → logprob: -12.406576156616211

Token 851: ',p' (ID: 14835)
  Prédit: ',p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.038221877068281174
    2. ',' → logprob: -3.288221836090088
    3. ' ,' → logprob: -9.288222312927246
    4. ',y' → logprob: -9.538222312927246
    5. ',v' → logprob: -12.913222312927246
    6. ',q' → logprob: -12.913222312927246
    7. ',s' → logprob: -13.538222312927246
    8. ',x' → logprob: -13.538222312927246
    9. ',t' → logprob: -13.788222312927246
    10. ',
' → logprob: -13.913222312927246

Token 852: '2' (ID: 17)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43826156854629517
    2. '2' → logprob: -1.5632615089416504
    3. '1' → logprob: -2.1882615089416504
    4. '[' → logprob: -3.9382615089416504
    5. ')' → logprob: -5.06326150894165
    6. '0' → logprob: -6.06326150894165
    7. ',p' → logprob: -6.68826150894165
    8. ')[' → logprob: -7.18826150894165
    9. '),' → logprob: -7.31326150894165
    10. 'oints' → logprob: -7.81326150894165

Token 853: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.600714161526412e-05
    2. ' )' → logprob: -9.625076293945312
    3. ',)' → logprob: -11.875076293945312
    4. 'in' → logprob: -14.000076293945312
    5. ' in' → logprob: -14.625076293945312
    6. '),' → logprob: -14.875076293945312
    7. '   ' → logprob: -15.000076293945312
    8. ')=' → logprob: -15.250076293945312
    9. ')
' → logprob: -15.375076293945312
    10. '):' → logprob: -15.875076293945312

Token 854: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2548014521598816
    2. 'in' → logprob: -1.5048015117645264
    3. ':' → logprob: -6.004801273345947
    4. '   ' → logprob: -8.504801750183105
    5. ':
' → logprob: -9.254801750183105
    6. ',' → logprob: -10.254801750183105
    7. ')' → logprob: -10.379801750183105
    8. '	in' → logprob: -11.629801750183105
    9. '=' → logprob: -11.879801750183105
    10. ' ' → logprob: -12.754801750183105

Token 855: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.4382769763469696
    2. 'se' → logprob: -1.563277006149292
    3. ' enumerate' → logprob: -2.563277006149292
    4. ' seg' → logprob: -3.188277006149292
    5. 'seg' → logprob: -3.688277006149292
    6. '(se' → logprob: -6.563276767730713
    7. ' se' → logprob: -8.313277244567871
    8. 'range' → logprob: -8.313277244567871
    9. ' range' → logprob: -10.188277244567871
    10. '(seg' → logprob: -10.313277244567871

Token 856: '(se' (ID: 19430)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.3133082389831543
    2. '(se' → logprob: -1.3133082389831543
    3. ',se' → logprob: -10.688308715820312
    4. '	se' → logprob: -11.688308715820312
    5. '_se' → logprob: -11.938308715820312
    6. ')' → logprob: -12.563308715820312
    7. '   ' → logprob: -13.313308715820312
    8. '.se' → logprob: -14.063308715820312
    9. ',' → logprob: -14.313308715820312
    10. '
' → logprob: -14.438308715820312

Token 857: 'gs' (ID: 9233)
  Prédit: 'gs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gs' → logprob: -2.339278580620885e-06
    2. 's' → logprob: -13.875001907348633
    3. ' gs' → logprob: -14.375001907348633
    4. 'qs' → logprob: -15.375001907348633
    5. 'g' → logprob: -15.625001907348633
    6. 'ps' → logprob: -16.875001907348633
    7. '
' → logprob: -17.250001907348633
    8. 'cs' → logprob: -17.375001907348633
    9. '(gs' → logprob: -17.500001907348633
    10. 'ds' → logprob: -17.750001907348633

Token 858: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.25209012627601624
    2. '):' → logprob: -1.5020900964736938
    3. ':' → logprob: -9.377090454101562
    4. '):
' → logprob: -9.627090454101562
    5. ':
' → logprob: -12.127090454101562
    6. '       ' → logprob: -13.002090454101562
    7. '   ' → logprob: -13.502090454101562
    8. '):

' → logprob: -14.127090454101562
    9. ')' → logprob: -14.877090454101562
    10. '():
' → logprob: -16.252090454101562

Token 859: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.32404300570487976
    2. '       ' → logprob: -1.3240430355072021
    3. ':' → logprob: -5.449042797088623
    4. ',' → logprob: -6.199042797088623
    5. '    
' → logprob: -6.824042797088623
    6. '<|end|>' → logprob: -7.199042797088623
    7. '           ' → logprob: -7.449042797088623
    8. ' if' → logprob: -7.824042797088623
    9. '
' → logprob: -8.449043273925781
    10. '        
' → logprob: -8.574043273925781

Token 860: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.6125805377960205
    2. 'deg' → logprob: -1.2375805377960205
    3. 'if' → logprob: -2.7375805377960205
    4. ' deg' → logprob: -3.2375805377960205
    5. 'dp' → logprob: -3.4875805377960205
    6. ' d' → logprob: -3.8625805377960205
    7. ' if' → logprob: -4.737580299377441
    8. 'c' → logprob: -6.487580299377441
    9. ' dp' → logprob: -6.612580299377441
    10. '   ' → logprob: -8.237580299377441

Token 861: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3835843801498413
    2. 'p' → logprob: -1.5085843801498413
    3. '_p' → logprob: -2.383584499359131
    4. 'f' → logprob: -6.008584499359131
    5. '=' → logprob: -6.258584499359131
    6. '=p' → logprob: -8.633584022521973
    7. 'eg' → logprob: -8.883584022521973
    8. ' =' → logprob: -9.008584022521973
    9. 'ef' → logprob: -9.133584022521973
    10. 'e' → logprob: -9.883584022521973

Token 862: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07130283862352371
    2. ' =' → logprob: -2.696302890777588
    3. '=p' → logprob: -7.071302890777588
    4. '=len' → logprob: -8.44630241394043
    5. '=
' → logprob: -9.44630241394043
    6. '=d' → logprob: -9.57130241394043
    7. '=int' → logprob: -9.57130241394043
    8. ',' → logprob: -10.44630241394043
    9. ',p' → logprob: -11.32130241394043
    10. 'p' → logprob: -11.57130241394043

Token 863: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -3.47626737493556e-05
    2. ' seg' → logprob: -10.62503433227539
    3. 'len' → logprob: -11.50003433227539
    4. 'segment' → logprob: -15.87503433227539
    5. '(seg' → logprob: -16.12503433227539
    6. 'deg' → logprob: -17.50003433227539
    7. 'seq' → logprob: -17.62503433227539
    8. '   ' → logprob: -18.75003433227539
    9. 'se' → logprob: -19.12503433227539
    10. 'segments' → logprob: -19.37503433227539

Token 864: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.8351892473874614e-05
    2. 's' → logprob: -10.500048637390137
    3. 'p' → logprob: -11.875048637390137
    4. 'count' → logprob: -12.625048637390137
    5. 't' → logprob: -13.375048637390137
    6. 'egree' → logprob: -13.500048637390137
    7. '[p' → logprob: -13.750048637390137
    8. 'eg' → logprob: -13.750048637390137
    9. '_COUNT' → logprob: -13.875048637390137
    10. 'Count' → logprob: -14.250048637390137

Token 865: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -0.0069395024329423904
    2. '[p' → logprob: -5.00693941116333
    3. 'per' → logprob: -9.131939888000488
    4. '_p' → logprob: -9.506939888000488
    5. 'p' → logprob: -11.006939888000488
    6. 's' → logprob: -11.506939888000488
    7. '(p' → logprob: -12.006939888000488
    8. '[i' → logprob: -12.881939888000488
    9. '   ' → logprob: -13.631939888000488
    10. '[' → logprob: -14.256939888000488

Token 866: '_point' (ID: 15466)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.7888152003288269
    2. 'oint' → logprob: -1.1638152599334717
    3. 'p' → logprob: -1.5388152599334717
    4. '_point' → logprob: -4.163815021514893
    5. 'int' → logprob: -6.788815021514893
    6. '(p' → logprob: -7.413815021514893
    7. '[p' → logprob: -7.663815021514893
    8. '1' → logprob: -8.28881549835205
    9. 'oints' → logprob: -9.28881549835205
    10. 'f' → logprob: -9.53881549835205

Token 867: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -3.666993507067673e-05
    2. '(p' → logprob: -10.500036239624023
    3. 'p' → logprob: -11.625036239624023
    4. '[' → logprob: -16.375036239624023
    5. '=p' → logprob: -17.000036239624023
    6. ' [' → logprob: -17.250036239624023
    7. '[
' → logprob: -17.500036239624023
    8. 's' → logprob: -17.875036239624023
    9. '
' → logprob: -18.375036239624023
    10. '=' → logprob: -18.375036239624023

Token 868: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -14.500000953674316
    3. '[p' → logprob: -15.000000953674316
    4. '(p' → logprob: -15.500000953674316
    5. '```' → logprob: -16.625001907348633
    6. '
' → logprob: -16.625001907348633
    7. '[i' → logprob: -17.125001907348633
    8. '(' → logprob: -17.500001907348633
    9. 'p' → logprob: -17.875001907348633
    10. 's' → logprob: -18.000001907348633

Token 869: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3678884208202362
    2. '>' → logprob: -1.3678884506225586
    3. ']' → logprob: -3.4928884506225586
    4. ')
' → logprob: -5.117888450622559
    5. '==' → logprob: -5.242888450622559
    6. '>=' → logprob: -5.242888450622559
    7. '>
' → logprob: -6.242888450622559
    8. ')>' → logprob: -6.992888450622559
    9. '<=' → logprob: -7.617888450622559
    10. '<|end|>' → logprob: -8.117888450622559

Token 870: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.072624571621418
    2. '<|end|>' → logprob: -3.697624683380127
    3. '       ' → logprob: -4.322624683380127
    4. ' ' → logprob: -4.822624683380127
    5. '
' → logprob: -5.322624683380127
    6. '   ' → logprob: -5.447624683380127
    7. ' 
' → logprob: -5.947624683380127
    8. '<|end|>' → logprob: -6.197624683380127
    9. ',' → logprob: -6.322624683380127
    10. '    
' → logprob: -6.697624683380127

Token 871: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.5251307487487793
    2. 'd' (adapté à ' d') → logprob: -0.9001307487487793
    3. '           ' → logprob: -6.275130748748779
    4. '	d' → logprob: -10.150131225585938
    5. ' ' → logprob: -10.400131225585938
    6. '   ' → logprob: -11.400131225585938
    7. '       ' → logprob: -11.650131225585938
    8. '            ' → logprob: -12.150131225585938
    9. ',d' → logprob: -12.525131225585938
    10. '    ' → logprob: -12.775131225585938

Token 872: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.002759345108643174
    2. '1' → logprob: -6.0027594566345215
    3. '_' → logprob: -8.502758979797363
    4. '[' → logprob: -10.002758979797363
    5. '=' → logprob: -11.377758979797363
    6. ' ' → logprob: -11.752758979797363
    7. 's' → logprob: -12.502758979797363
    8. '_count' → logprob: -13.002758979797363
    9. '_
' → logprob: -13.252758979797363
    10. '==' → logprob: -13.377758979797363

Token 873: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868789076805115
    2. '=' → logprob: -1.1368789672851562
    3. ' =
' → logprob: -13.136878967285156
    4. '=int' → logprob: -13.136878967285156
    5. '=
' → logprob: -13.511878967285156
    6. ' ' → logprob: -13.761878967285156
    7. '=len' → logprob: -15.011878967285156
    8. '=p' → logprob: -15.261878967285156
    9. '=d' → logprob: -15.761878967285156
    10. '=s' → logprob: -16.136878967285156

Token 874: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.10021152347326279
    2. ' seg' → logprob: -2.3502116203308105
    3. '(seg' → logprob: -12.350211143493652
    4. 'se' → logprob: -15.350211143493652
    5. '   ' → logprob: -16.22521209716797
    6. 'sig' → logprob: -16.85021209716797
    7. '_seg' → logprob: -16.97521209716797
    8. ' ' → logprob: -16.97521209716797
    9. 'segment' → logprob: -17.22521209716797
    10. 'seq' → logprob: -17.47521209716797

Token 875: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00016206118743866682
    2. '_per' → logprob: -8.750162124633789
    3. 'count' → logprob: -12.875162124633789
    4. 'Count' → logprob: -14.875162124633789
    5. '_of' → logprob: -16.37516212463379
    6. '[' → logprob: -16.50016212463379
    7. 'p' → logprob: -16.87516212463379
    8. '_COUNT' → logprob: -17.00016212463379
    9. '_point' → logprob: -17.50016212463379
    10. 'per' → logprob: -17.50016212463379

Token 876: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -5.943783253314905e-05
    2. 'per' → logprob: -9.875059127807617
    3. '_se' → logprob: -13.000059127807617
    4. '_seg' → logprob: -13.125059127807617
    5. '_of' → logprob: -14.000059127807617
    6. 'p' → logprob: -14.000059127807617
    7. '_count' → logprob: -14.375059127807617
    8. '_p' → logprob: -14.500059127807617
    9. 'Per' → logprob: -15.375059127807617
    10. '_point' → logprob: -15.500059127807617

Token 877: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.001922087394632399
    2. 'oint' → logprob: -6.501922130584717
    3. 'point' → logprob: -7.876922130584717
    4. 'int' → logprob: -10.376921653747559
    5. 'p' → logprob: -12.126921653747559
    6. '_count' → logprob: -13.126921653747559
    7. 'endpoint' → logprob: -14.251921653747559
    8. 'Point' → logprob: -15.376921653747559
    9. 'pont' → logprob: -16.251922607421875
    10. '_POINT' → logprob: -16.376922607421875

Token 878: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.00010413920972496271
    2. 'p' → logprob: -9.250103950500488
    3. '(p' → logprob: -11.875103950500488
    4. '[' → logprob: -13.875103950500488
    5. ' p' → logprob: -17.250104904174805
    6. '[
' → logprob: -18.625104904174805
    7. '	p' → logprob: -18.625104904174805
    8. ' [' → logprob: -19.125104904174805
    9. '<p' → logprob: -19.750104904174805
    10. '   ' → logprob: -19.750104904174805

Token 879: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. 'p' → logprob: -15.0
    3. '[' → logprob: -17.0
    4. '[p' → logprob: -18.5
    5. '```' → logprob: -18.625
    6. '1' → logprob: -19.625
    7. '
' → logprob: -19.75
    8. ' ' → logprob: -19.875
    9. '_' → logprob: -20.0
    10. '(p' → logprob: -20.0

Token 880: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5779907703399658
    2. ')
' → logprob: -0.8279907703399658
    3. ']' → logprob: -6.577990531921387
    4. ']
' → logprob: -7.827990531921387
    5. '   ' → logprob: -8.952990531921387
    6. '           ' → logprob: -10.077990531921387
    7. ')
' → logprob: -10.952990531921387
    8. '       ' → logprob: -11.077990531921387
    9. '==' → logprob: -11.702990531921387
    10. ')>' → logprob: -11.702990531921387

Token 881: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32499971985816956
    2. '   ' → logprob: -1.6999996900558472
    3. '           ' → logprob: -2.6999998092651367
    4. ' if' → logprob: -4.074999809265137
    5. '
' → logprob: -5.074999809265137
    6. '	if' → logprob: -6.574999809265137
    7. 'if' → logprob: -7.449999809265137
    8. '```' → logprob: -7.574999809265137
    9. '    
' → logprob: -7.824999809265137
    10. ' ' → logprob: -8.199999809265137

Token 882: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1979469507932663
    2. 'if' → logprob: -2.1979470252990723
    3. '   ' → logprob: -2.6979470252990723
    4. '	if' → logprob: -7.447947025299072
    5. '
' → logprob: -8.322946548461914
    6. '       ' → logprob: -8.697946548461914
    7. '           ' → logprob: -9.072946548461914
    8. ' ' → logprob: -9.447946548461914
    9. '    ' → logprob: -11.822946548461914
    10. '  ' → logprob: -12.072946548461914

Token 883: ' Condition' (ID: 30255)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005256645381450653
    2. ' if' → logprob: -5.255256652832031
    3. '   ' → logprob: -10.755256652832031
    4. '           ' → logprob: -13.880256652832031
    5. '       ' → logprob: -14.755256652832031
    6. '#' → logprob: -16.13025665283203
    7. '	if' → logprob: -17.25525665283203
    8. 'If' → logprob: -17.38025665283203
    9. ' ' → logprob: -18.63025665283203
    10. '
' → logprob: -19.00525665283203

Token 884: ' for' (ID: 395)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9035510420799255
    2. ':' → logprob: -1.2785511016845703
    3. ' =' → logprob: -1.2785511016845703
    4. '=' → logprob: -4.02855110168457
    5. 'if' → logprob: -4.27855110168457
    6. '           ' → logprob: -5.65355110168457
    7. '   ' → logprob: -6.65355110168457
    8. ' ==' → logprob: -7.77855110168457
    9. '       ' → logprob: -8.52855110168457
    10. '```' → logprob: -8.65355110168457

Token 885: ' sign' (ID: 2232)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.1619633436203003
    2. '(d' → logprob: -1.2869633436203003
    3. ' d' → logprob: -2.03696346282959
    4. 'd' → logprob: -2.16196346282959
    5. 'sign' → logprob: -2.66196346282959
    6. ' sign' → logprob: -3.41196346282959
    7. '(' → logprob: -3.41196346282959
    8. '((' → logprob: -4.41196346282959
    9. ' street' → logprob: -5.03696346282959
    10. '(sign' → logprob: -5.66196346282959

Token 886: ':
' (ID: 734)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13581369817256927
    2. ' ==' → logprob: -2.7608137130737305
    3. 'if' → logprob: -3.6358137130737305
    4. ':' → logprob: -4.1358137130737305
    5. ' =' → logprob: -4.2608137130737305
    6. '==' → logprob: -5.3858137130737305
    7. '   ' → logprob: -6.6358137130737305
    8. '=' → logprob: -7.0108137130737305
    9. ':
' → logprob: -8.88581371307373
    10. '           ' → logprob: -9.26081371307373

Token 887: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.06787166744470596
    2. '           ' → logprob: -2.817871570587158
    3. '   ' → logprob: -6.067871570587158
    4. '       ' → logprob: -6.192871570587158
    5. 'if' → logprob: -7.442871570587158
    6. ' ' → logprob: -7.817871570587158
    7. '    ' → logprob: -8.692872047424316
    8. ' (' → logprob: -9.317872047424316
    9. '	if' → logprob: -9.942872047424316
    10. '            ' → logprob: -10.942872047424316

Token 888: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.02081221714615822
    2. 'if' → logprob: -3.8958122730255127
    3. '   ' → logprob: -9.020812034606934
    4. '           ' → logprob: -9.770812034606934
    5. ' (' → logprob: -9.895812034606934
    6. ' d' → logprob: -10.395812034606934
    7. ' ' → logprob: -12.895812034606934
    8. 'd' → logprob: -13.145812034606934
    9. '	if' → logprob: -13.145812034606934
    10. '       ' → logprob: -13.895812034606934

Token 889: ' one' (ID: 1001)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6263863444328308
    2. 'if' → logprob: -0.8763863444328308
    3. ' (' → logprob: -3.5013864040374756
    4. '((' → logprob: -4.8763861656188965
    5. '(d' → logprob: -5.1263861656188965
    6. ' ((' → logprob: -6.0013861656188965
    7. '(p' → logprob: -6.2513861656188965
    8. '   ' → logprob: -7.0013861656188965
    9. '(sign' → logprob: -10.626386642456055
    10. '(' → logprob: -10.626386642456055

Token 890: ' endpoint' (ID: 29703)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.6069129109382629
    2. 'endpoint' → logprob: -1.7319128513336182
    3. ' endpoint' → logprob: -2.731912851333618
    4. 'of' → logprob: -2.981912851333618
    5. '_endpoint' → logprob: -2.981912851333618
    6. '(p' → logprob: -3.606912851333618
    7. '==' → logprob: -3.731912851333618
    8. ' (' → logprob: -4.231913089752197
    9. ' ==' → logprob: -4.481913089752197
    10. ' if' → logprob: -5.106913089752197

Token 891: ' touches' (ID: 45060)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.16109827160835266
    2. ' ==' → logprob: -1.9110982418060303
    3. '<=' → logprob: -8.03609848022461
    4. 'd' → logprob: -8.41109848022461
    5. ' <=' → logprob: -9.03609848022461
    6. ' is' → logprob: -10.16109848022461
    7. 'has' → logprob: -10.53609848022461
    8. ' has' → logprob: -10.78609848022461
    9. '>=' → logprob: -10.78609848022461
    10. ' with' → logprob: -11.28609848022461

Token 892: ' only' (ID: 1606)
  Prédit: ' exactly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' exactly' → logprob: -0.4781147539615631
    2. 'exact' → logprob: -1.3531147241592407
    3. '1' → logprob: -2.6031148433685303
    4. '==' → logprob: -3.4781148433685303
    5. '=' → logprob: -4.728114604949951
    6. ' ' → logprob: -5.853114604949951
    7. 'only' → logprob: -6.103114604949951
    8. ' ==' → logprob: -6.853114604949951
    9. 'sign' → logprob: -7.853114604949951
    10. 'd' → logprob: -8.10311508178711

Token 893: ' one' (ID: 1001)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10976023226976395
    2. ' ' → logprob: -2.359760284423828
    3. ' one' → logprob: -5.234760284423828
    4. 'one' → logprob: -5.484760284423828
    5. '   ' → logprob: -11.734760284423828
    6. 'sign' → logprob: -12.109760284423828
    7. '```' → logprob: -12.984760284423828
    8. ' exactly' → logprob: -13.109760284423828
    9. '[' → logprob: -13.234760284423828
    10. '
' → logprob: -13.359760284423828

Token 894: ' street' (ID: 12901)
  Prédit: ' segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.2800464332103729
    2. ' street' → logprob: -2.0300464630126953
    3. 'segment' → logprob: -3.0300464630126953
    4. ' seg' → logprob: -3.1550464630126953
    5. ' ' → logprob: -4.780046463012695
    6. '(segment' → logprob: -6.030046463012695
    7. ' line' → logprob: -6.530046463012695
    8. 'seg' → logprob: -6.530046463012695
    9. ' graph' → logprob: -6.655046463012695
    10. ' space' → logprob: -6.780046463012695

Token 895: ' segment' (ID: 14806)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.022105619311332703
    2. 'and' → logprob: -4.647105693817139
    3. ' if' → logprob: -4.897105693817139
    4. ' or' → logprob: -6.022105693817139
    5. ',' → logprob: -6.397105693817139
    6. 'if' → logprob: -9.14710521697998
    7. ' ==' → logprob: -9.27210521697998
    8. '   ' → logprob: -9.64710521697998
    9. '<|end|>' → logprob: -9.64710521697998
    10. ' ' → logprob: -9.77210521697998

Token 896: ' (=' (ID: 72569)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16837088763713837
    2. ' if' → logprob: -2.2933709621429443
    3. '           ' → logprob: -3.7933709621429443
    4. 'and' → logprob: -4.168370723724365
    5. ',' → logprob: -4.918370723724365
    6. '=' → logprob: -6.293370723724365
    7. '<|end|>' → logprob: -6.293370723724365
    8. ' ' → logprob: -6.918370723724365
    9. ' =' → logprob: -7.043370723724365
    10. ' (' → logprob: -7.293370723724365

Token 897: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011117222311440855
    2. 'd' → logprob: -10.25011157989502
    3. 'sign' → logprob: -11.12511157989502
    4. ' ' → logprob: -11.37511157989502
    5. '
' → logprob: -11.37511157989502
    6. '0' → logprob: -12.00011157989502
    7. ')' → logprob: -12.00011157989502
    8. '   ' → logprob: -12.12511157989502
    9. 'p' → logprob: -12.31261157989502
    10. '2' → logprob: -12.43761157989502

Token 898: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5524412989616394
    2. ' and' → logprob: -0.9274412989616394
    3. 'and' → logprob: -3.677441358566284
    4. ' )' → logprob: -6.302441120147705
    5. ' or' → logprob: -6.927441120147705
    6. '),' → logprob: -7.302441120147705
    7. 'or' → logprob: -10.052441596984863
    8. ',' → logprob: -10.052441596984863
    9. ')
' → logprob: -12.052441596984863
    10. '
' → logprob: -12.302441596984863

Token 899: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5941994190216064
    2. ' and' → logprob: -0.8441994190216064
    3. 'and' → logprob: -4.719199180603027
    4. ' if' → logprob: -5.594199180603027
    5. '   ' → logprob: -6.344199180603027
    6. ',' → logprob: -7.094199180603027
    7. '       ' → logprob: -7.094199180603027
    8. '<|end|>' → logprob: -7.094199180603027
    9. ' ' → logprob: -7.719199180603027
    10. '          ' → logprob: -8.719199180603027

Token 900: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3590911030769348
    2. ' if' → logprob: -1.73409104347229
    3. ' and' → logprob: -2.10909104347229
    4. '       ' → logprob: -6.609091281890869
    5. 'and' → logprob: -7.109091281890869
    6. '   ' → logprob: -7.484091281890869
    7. 'if' → logprob: -8.234090805053711
    8. ' ' → logprob: -8.734090805053711
    9. ',' → logprob: -8.984090805053711
    10. '          ' → logprob: -9.859090805053711

Token 901: ' other' (ID: 1273)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5455958843231201
    2. ' one' → logprob: -1.5455958843231201
    3. ' other' → logprob: -2.17059588432312
    4. ' and' → logprob: -3.17059588432312
    5. 'if' → logprob: -3.67059588432312
    6. '           ' → logprob: -4.545596122741699
    7. 'other' → logprob: -5.045596122741699
    8. 'and' → logprob: -5.170596122741699
    9. 'one' → logprob: -7.170596122741699
    10. '#' → logprob: -7.920596122741699

Token 902: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.5707361102104187
    2. '_endpoint' → logprob: -1.1957361698150635
    3. ' endpoint' → logprob: -2.1957361698150635
    4. '==' → logprob: -4.070735931396484
    5. ' ==' → logprob: -6.320735931396484
    6. 'd' → logprob: -7.320735931396484
    7. ')' → logprob: -8.320735931396484
    8. ' is' → logprob: -8.695735931396484
    9. ' d' → logprob: -8.945735931396484
    10. '(endpoint' → logprob: -9.320735931396484

Token 903: ' touches' (ID: 45060)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6340958476066589
    2. ' ==' → logprob: -0.8840958476066589
    3. ' touches' → logprob: -3.2590959072113037
    4. ' is' → logprob: -6.009095668792725
    5. '!=' → logprob: -6.009095668792725
    6. ' ' → logprob: -6.259095668792725
    7. 'touch' → logprob: -6.384095668792725
    8. ' !=' → logprob: -6.634095668792725
    9. ' has' → logprob: -6.759095668792725
    10. '<|end|>' → logprob: -7.384095668792725

Token 904: ' no' (ID: 860)
  Prédit: 'only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'only' → logprob: -0.05090746656060219
    2. ' only' → logprob: -3.8009073734283447
    3. '0' → logprob: -3.9259073734283447
    4. '=' → logprob: -5.425907611846924
    5. '1' → logprob: -6.675907611846924
    6. 'exact' → logprob: -7.425907611846924
    7. 'no' → logprob: -8.175907135009766
    8. '==' → logprob: -8.175907135009766
    9. ' exactly' → logprob: -8.550907135009766
    10. ' ' → logprob: -8.800907135009766

Token 905: ' street' (ID: 12901)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.7116562724113464
    2. ' segments' → logprob: -1.5866563320159912
    3. 'connections' → logprob: -2.336656332015991
    4. ' connections' → logprob: -2.586656332015991
    5. ' connection' → logprob: -3.086656332015991
    6. 'segment' → logprob: -4.211656093597412
    7. 'se' → logprob: -4.586656093597412
    8. 'connection' → logprob: -4.586656093597412
    9. ' segment' → logprob: -4.711656093597412
    10. 's' → logprob: -4.961656093597412

Token 906: ' (' (ID: 350)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segments' → logprob: -1.0461273193359375
    2. ' or' → logprob: -1.1711273193359375
    3. ' and' → logprob: -1.6711273193359375
    4. '_segment' → logprob: -3.0461273193359375
    5. 'segments' → logprob: -4.1711273193359375
    6. 's' → logprob: -4.4211273193359375
    7. ' if' → logprob: -4.5461273193359375
    8. '   ' → logprob: -5.0461273193359375
    9. ':' → logprob: -5.0461273193359375
    10. ')' → logprob: -5.0461273193359375

Token 907: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5705205798149109
    2. '==' → logprob: -1.5705206394195557
    3. ')' → logprob: -2.1955206394195557
    4. '1' → logprob: -3.3205206394195557
    5. '=' → logprob: -3.5705206394195557
    6. ' ' → logprob: -4.195520401000977
    7. ' ==' → logprob: -4.195520401000977
    8. ' or' → logprob: -4.320520401000977
    9. ' )' → logprob: -6.195520401000977
    10. '>' → logprob: -6.820520401000977

Token 908: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.013573103584349155
    2. ' or' → logprob: -4.513573169708252
    3. ')
' → logprob: -6.388573169708252
    4. ' )' → logprob: -7.138573169708252
    5. '),' → logprob: -11.263572692871094
    6. 'or' → logprob: -11.388572692871094
    7. ' )
' → logprob: -11.763572692871094
    8. '           ' → logprob: -12.513572692871094
    9. ')

' → logprob: -12.763572692871094
    10. '):
' → logprob: -13.888572692871094

Token 909: ' or' (ID: 503)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009782418608665466
    2. ' if' → logprob: -5.509782314300537
    3. ',' → logprob: -6.384782314300537
    4. '       ' → logprob: -6.384782314300537
    5. '<|end|>' → logprob: -7.759782314300537
    6. ' ' → logprob: -8.009782791137695
    7. '   ' → logprob: -8.134782791137695
    8. '            
' → logprob: -8.884782791137695
    9. ' and' → logprob: -9.009782791137695
    10. ':' → logprob: -9.259782791137695

Token 910: ' unique' (ID: 5746)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3848011791706085
    2. 'only' → logprob: -3.009801149368286
    3. 'd' → logprob: -3.134801149368286
    4. 'sign' → logprob: -3.384801149368286
    5. '0' → logprob: -3.509801149368286
    6. 'not' → logprob: -3.634801149368286
    7. 'one' → logprob: -3.634801149368286
    8. 'degree' → logprob: -4.384801387786865
    9. 'is' → logprob: -4.509801387786865
    10. 'exact' → logprob: -5.009801387786865

Token 911: ' to' (ID: 316)
  Prédit: ' segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segment' → logprob: -1.216151237487793
    2. ' to' → logprob: -1.591151237487793
    3. 'segment' → logprob: -2.091151237487793
    4. '<|end|>' → logprob: -2.341151237487793
    5. ' street' → logprob: -2.716151237487793
    6. '           ' → logprob: -3.466151237487793
    7. ' or' → logprob: -3.716151237487793
    8. 'to' → logprob: -4.091151237487793
    9. '(segment' → logprob: -4.216151237487793
    10. ')' → logprob: -4.466151237487793

Token 912: ' this' (ID: 495)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.3877182900905609
    2. 'this' → logprob: -2.8877182006835938
    3. ' this' → logprob: -3.1377182006835938
    4. ' that' → logprob: -3.2627182006835938
    5. 'that' → logprob: -3.2627182006835938
    6. 'the' → logprob: -3.3877182006835938
    7. 'se' → logprob: -3.6377182006835938
    8. 'segment' → logprob: -3.6377182006835938
    9. ' sign' → logprob: -4.387718200683594
    10. ' signs' → logprob: -4.512718200683594

Token 913: ' sign' (ID: 2232)
  Prédit: ' segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.7053972482681274
    2. 'segment' → logprob: -0.7053972482681274
    3. 'seg' → logprob: -5.080397129058838
    4. 'sign' → logprob: -6.330397129058838
    5. ' seg' → logprob: -6.830397129058838
    6. 'se' → logprob: -7.705397129058838
    7. '_segment' → logprob: -7.830397129058838
    8. ' line' → logprob: -7.830397129058838
    9. 's' → logprob: -8.080397605895996
    10. 'segments' → logprob: -8.830397605895996

Token 914: ' segment' (ID: 14806)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5443478226661682
    2. ':' → logprob: -1.9193477630615234
    3. '           ' → logprob: -2.1693477630615234
    4. '       ' → logprob: -2.9193477630615234
    5. ':
' → logprob: -3.2943477630615234
    6. '   ' → logprob: -3.6693477630615234
    7. 'if' → logprob: -4.419347763061523
    8. ' and' → logprob: -4.544347763061523
    9. ',' → logprob: -5.669347763061523
    10. '.' → logprob: -5.794347763061523

Token 915: ' only' (ID: 1606)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024636821821331978
    2. ' if' → logprob: -4.524636745452881
    3. '       ' → logprob: -4.899636745452881
    4. ',' → logprob: -6.774636745452881
    5. '   ' → logprob: -6.899636745452881
    6. '
' → logprob: -7.274636745452881
    7. '            
' → logprob: -7.774636745452881
    8. 'if' → logprob: -8.149637222290039
    9. ' 
' → logprob: -8.399637222290039
    10. '    
' → logprob: -8.399637222290039

Token 916: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.27983570098876953
    2. ' if' → logprob: -2.0298357009887695
    3. '       ' → logprob: -3.0298357009887695
    4. ':' → logprob: -4.4048357009887695
    5. '   ' → logprob: -4.4048357009887695
    6. ',' → logprob: -4.6548357009887695
    7. ' ' → logprob: -5.1548357009887695
    8. ' and' → logprob: -5.5298357009887695
    9. '
' → logprob: -6.1548357009887695
    10. ')' → logprob: -6.1548357009887695

Token 917: 'likely' (ID: 30641)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018341444432735443
    2. ' ' → logprob: -4.268341541290283
    3. '0' → logprob: -6.393341541290283
    4. '==' → logprob: -7.518341541290283
    5. 'd' → logprob: -7.893341541290283
    6. ')' → logprob: -7.893341541290283
    7. '=' → logprob: -8.268341064453125
    8. ' d' → logprob: -8.393341064453125
    9. 'True' → logprob: -8.768341064453125
    10. ' True' → logprob: -9.268341064453125

Token 918: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2904759645462036
    2. ' ' → logprob: -1.5404759645462036
    3. '==' → logprob: -4.165475845336914
    4. '=' → logprob: -5.040475845336914
    5. ' ==' → logprob: -5.165475845336914
    6. ' =' → logprob: -5.665475845336914
    7. ')' → logprob: -5.915475845336914
    8. '0' → logprob: -6.540475845336914
    9. ' )' → logprob: -7.540475845336914
    10. ' d' → logprob: -7.540475845336914

Token 919: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.023390013724565506
    2. 'd' → logprob: -4.77338981628418
    3. '0' → logprob: -5.39838981628418
    4. ' ' → logprob: -6.14838981628418
    5. '=' → logprob: -6.52338981628418
    6. '==' → logprob: -6.77338981628418
    7. 'sign' → logprob: -6.89838981628418
    8. ' d' → logprob: -7.89838981628418
    9. 'exact' → logprob: -8.02338981628418
    10. 'True' → logprob: -8.27338981628418

Token 920: ' too' (ID: 3101)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011963956989347935
    2. '):' → logprob: -5.136963844299316
    3. ' )' → logprob: -5.886963844299316
    4. ')
' → logprob: -6.761963844299316
    5. ' and' → logprob: -7.136963844299316
    6. '):
' → logprob: -7.261963844299316
    7. ' or' → logprob: -8.011963844299316
    8. '           ' → logprob: -9.636963844299316
    9. '       ' → logprob: -10.511963844299316
    10. '
' → logprob: -10.636963844299316

Token 921: ' but' (ID: 889)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05015842244029045
    2. '):' → logprob: -3.8001585006713867
    3. ')
' → logprob: -4.300158500671387
    4. '):
' → logprob: -4.675158500671387
    5. ' )' → logprob: -6.550158500671387
    6. ' if' → logprob: -7.425158500671387
    7. '           ' → logprob: -8.300158500671387
    8. ':' → logprob: -8.300158500671387
    9. ' or' → logprob: -8.300158500671387
    10. ' and' → logprob: -8.675158500671387

Token 922: ' only' (ID: 1606)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.40894731879234314
    2. ' p' → logprob: -1.7839473485946655
    3. ' d' → logprob: -2.908947229385376
    4. 'not' → logprob: -3.783947229385376
    5. 'p' → logprob: -3.908947229385376
    6. ' no' → logprob: -4.033947467803955
    7. 'd' → logprob: -4.408947467803955
    8. ' different' → logprob: -5.158947467803955
    9. ')' → logprob: -5.533947467803955
    10. ' connected' → logprob: -5.908947467803955

Token 923: ' for' (ID: 395)
  Prédit: ' connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' connected' → logprob: -0.6112176775932312
    2. 'connected' → logprob: -1.611217737197876
    3. ' for' → logprob: -2.236217737197876
    4. 'for' → logprob: -2.861217737197876
    5. ' this' → logprob: -4.111217498779297
    6. ' in' → logprob: -4.111217498779297
    7. 'this' → logprob: -4.736217498779297
    8. 'in' → logprob: -4.861217498779297
    9. ' one' → logprob: -4.986217498779297
    10. ' used' → logprob: -4.986217498779297

Token 924: ' this' (ID: 495)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.7877432703971863
    2. 'this' → logprob: -1.912743330001831
    3. ' this' → logprob: -2.412743330001831
    4. ' that' → logprob: -2.537743330001831
    5. 'that' → logprob: -2.662743330001831
    6. 'the' → logprob: -3.537743330001831
    7. ' sign' → logprob: -3.537743330001831
    8. ' p' → logprob: -4.037743091583252
    9. 'p' → logprob: -4.037743091583252
    10. 'i' → logprob: -4.287743091583252

Token 925: ' sign' (ID: 2232)
  Prédit: ' segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' segment' → logprob: -0.5412331223487854
    2. 'segment' → logprob: -1.0412330627441406
    3. ')' → logprob: -3.5412330627441406
    4. ' )' → logprob: -4.041233062744141
    5. 'seg' → logprob: -6.291233062744141
    6. 'sign' → logprob: -6.291233062744141
    7. ' code' → logprob: -6.291233062744141
    8. 'i' → logprob: -6.416233062744141
    9. ' )
' → logprob: -6.416233062744141
    10. 'se' → logprob: -6.541233062744141

Token 926: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023852473124861717
    2. ' )' → logprob: -5.148852348327637
    3. ' segment' → logprob: -5.148852348327637
    4. '):' → logprob: -5.523852348327637
    5. 'segment' → logprob: -5.773852348327637
    6. ')
' → logprob: -5.898852348327637
    7. '):
' → logprob: -7.648852348327637
    8. '           ' → logprob: -8.148852348327637
    9. '1' → logprob: -8.273852348327637
    10. '   ' → logprob: -9.023852348327637

Token 927: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0951700285077095
    2. ' if' → logprob: -3.220170021057129
    3. ' ' → logprob: -4.095170021057129
    4. '       ' → logprob: -4.595170021057129
    5. '   ' → logprob: -4.595170021057129
    6. ' 
' → logprob: -6.345170021057129
    7. ' and' → logprob: -6.470170021057129
    8. ')' → logprob: -6.470170021057129
    9. '            
' → logprob: -6.595170021057129
    10. ',' → logprob: -6.970170021057129

Token 928: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.34155791997909546
    2. '           ' → logprob: -1.7165579795837402
    3. 'if' → logprob: -2.8415579795837402
    4. '   ' → logprob: -3.7165579795837402
    5. '       ' → logprob: -3.9665579795837402
    6. '	if' → logprob: -5.34155797958374
    7. '
' → logprob: -6.34155797958374
    8. ' ' → logprob: -7.71655797958374
    9. '	       ' → logprob: -8.716557502746582
    10. '	' → logprob: -9.091557502746582

Token 929: ' So' (ID: 2632)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2155521959066391
    2. '           ' → logprob: -2.3405520915985107
    3. 'if' → logprob: -2.9655520915985107
    4. '   ' → logprob: -3.3405520915985107
    5. '       ' → logprob: -5.09055233001709
    6. '	if' → logprob: -5.71555233001709
    7. ' ' → logprob: -8.09055233001709
    8. '
' → logprob: -8.34055233001709
    9. '    ' → logprob: -9.21555233001709
    10. '```' → logprob: -9.34055233001709

Token 930: ' sign' (ID: 2232)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.019695300608873367
    2. 'if' → logprob: -4.019695281982422
    3. '           ' → logprob: -6.769695281982422
    4. '   ' → logprob: -8.519695281982422
    5. '    ' → logprob: -9.519695281982422
    6. '	if' → logprob: -10.144695281982422
    7. ' ' → logprob: -10.894695281982422
    8. '
' → logprob: -11.394695281982422
    9. ' for' → logprob: -11.394695281982422
    10. '       ' → logprob: -11.519695281982422

Token 931: ' segments' (ID: 33749)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.20052789151668549
    2. ' if' → logprob: -2.4505279064178467
    3. 's' → logprob: -3.7005279064178467
    4. ':' → logprob: -3.7005279064178467
    5. '_' → logprob: -3.9505279064178467
    6. ' ' → logprob: -5.450527667999268
    7. 'if' → logprob: -5.700527667999268
    8. ' _' → logprob: -6.075527667999268
    9. ')' → logprob: -6.200527667999268
    10. ' =' → logprob: -6.450527667999268

Token 932: ' have' (ID: 679)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4033369719982147
    2. ':' → logprob: -1.653337001800537
    3. 'if' → logprob: -2.903337001800537
    4. '=' → logprob: -3.278337001800537
    5. ' =' → logprob: -4.403337001800537
    6. '.' → logprob: -4.778337001800537
    7. '   ' → logprob: -5.153337001800537
    8. ' continue' → logprob: -5.903337001800537
    9. ' are' → logprob: -6.028337001800537
    10. 'continue' → logprob: -6.153337001800537

Token 933: ' one' (ID: 1001)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.2276652604341507
    2. ' (' → logprob: -1.6026653051376343
    3. '(' → logprob: -6.477665424346924
    4. '((' → logprob: -7.852665424346924
    5. ' d' → logprob: -8.727664947509766
    6. 'd' → logprob: -9.602664947509766
    7. '(p' → logprob: -10.852664947509766
    8. ' ((' → logprob: -11.102664947509766
    9. '(
' → logprob: -11.352664947509766
    10. '(min' → logprob: -11.477664947509766

Token 934: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.6270408630371094
    2. ' endpoint' → logprob: -2.1270408630371094
    3. ' d' → logprob: -2.2520408630371094
    4. ' of' → logprob: -2.5020408630371094
    5. 'd' → logprob: -3.5020408630371094
    6. ' p' → logprob: -3.7520408630371094
    7. ' (' → logprob: -3.8770408630371094
    8. ' ' → logprob: -3.8770408630371094
    9. '_endpoint' → logprob: -3.8770408630371094
    10. 'p' → logprob: -5.127040863037109

Token 935: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.9025497436523438
    2. '_degree' → logprob: -1.7775497436523438
    3. 'degree' → logprob: -2.2775497436523438
    4. 'd' → logprob: -2.5275497436523438
    5. ' that' → logprob: -2.9025497436523438
    6. ' degree' → logprob: -3.0275497436523438
    7. 'with' → logprob: -3.1525497436523438
    8. '==' → logprob: -3.4025497436523438
    9. ')' → logprob: -4.902549743652344
    10. ' ==' → logprob: -5.027549743652344

Token 936: ' degree' (ID: 9882)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.36882784962654114
    2. '1' → logprob: -1.4938278198242188
    3. ' d' → logprob: -3.2438278198242188
    4. 'seg' → logprob: -3.6188278198242188
    5. 'degree' → logprob: -4.743827819824219
    6. ' seg' → logprob: -5.493827819824219
    7. ' ' → logprob: -5.868827819824219
    8. 'deg' → logprob: -7.493827819824219
    9. ' degree' → logprob: -7.618827819824219
    10. '(seg' → logprob: -7.743827819824219

Token 937: '=' (ID: 28)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4359758198261261
    2. ' ==' → logprob: -1.0609757900238037
    3. '=' → logprob: -5.685976028442383
    4. '1' → logprob: -6.435976028442383
    5. ' ' → logprob: -6.435976028442383
    6. ' =' → logprob: -8.185976028442383
    7. ' <=' → logprob: -9.310976028442383
    8. '<=' → logprob: -9.435976028442383
    9. '==
' → logprob: -10.685976028442383
    10. ')' → logprob: -10.810976028442383

Token 938: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.074907287256792e-05
    2. ' ' → logprob: -9.75006103515625
    3. '=' → logprob: -13.50006103515625
    4. '0' → logprob: -14.50006103515625
    5. '```' → logprob: -16.37506103515625
    6. '
' → logprob: -16.87506103515625
    7. '   ' → logprob: -17.06256103515625
    8. 's' → logprob: -17.37506103515625
    9. 'one' → logprob: -17.43756103515625
    10. '"' → logprob: -17.62506103515625

Token 939: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02301519177854061
    2. 'and' → logprob: -4.523015022277832
    3. ' if' → logprob: -5.023015022277832
    4. ' or' → logprob: -6.398015022277832
    5. '           ' → logprob: -6.648015022277832
    6. '   ' → logprob: -6.773015022277832
    7. ',' → logprob: -7.148015022277832
    8. '       ' → logprob: -9.148015022277832
    9. '<|end|>' → logprob: -9.398015022277832
    10. ' ' → logprob: -9.898015022277832

Token 940: ' other' (ID: 1273)
  Prédit: ' one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.8870383501052856
    2. ' d' → logprob: -1.6370383501052856
    3. ' (' → logprob: -1.7620383501052856
    4. 'one' → logprob: -2.887038230895996
    5. ' another' → logprob: -3.387038230895996
    6. ' other' → logprob: -3.637038230895996
    7. 'd' → logprob: -3.637038230895996
    8. ' the' → logprob: -3.762038230895996
    9. '(' → logprob: -4.512038230895996
    10. ' ' → logprob: -4.637038230895996

Token 941: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.6378663182258606
    2. ' with' → logprob: -1.5128662586212158
    3. ' endpoint' → logprob: -1.5128662586212158
    4. '==' → logprob: -4.387866497039795
    5. 'with' → logprob: -5.012866497039795
    6. '_endpoint' → logprob: -5.137866497039795
    7. ' ==' → logprob: -5.887866497039795
    8. ' is' → logprob: -7.012866497039795
    9. ' ' → logprob: -7.887866497039795
    10. 'p' → logprob: -8.387866020202637

Token 942: ' with' (ID: 483)
  Prédit: ' with'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' with' → logprob: -0.09183578193187714
    2. 'with' → logprob: -2.4668357372283936
    3. '==' → logprob: -6.591835975646973
    4. ' ==' → logprob: -6.966835975646973
    5. ' ' → logprob: -8.466835975646973
    6. 'd' → logprob: -9.591835975646973
    7. '>=' → logprob: -10.091835975646973
    8. ' d' → logprob: -10.341835975646973
    9. ' not' → logprob: -10.966835975646973
    10. '<|end|>' → logprob: -11.091835975646973

Token 943: ' degree' (ID: 9882)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'degree' → logprob: -0.4802926182746887
    2. '0' → logprob: -1.730292558670044
    3. '1' → logprob: -1.730292558670044
    4. ' degree' → logprob: -4.105292797088623
    5. 'd' → logprob: -5.105292797088623
    6. ' ' → logprob: -5.855292797088623
    7. 'seg' → logprob: -7.855292797088623
    8. 'deg' → logprob: -7.980292797088623
    9. 'segment' → logprob: -8.480292320251465
    10. '```' → logprob: -8.855292320251465

Token 944: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03172944858670235
    2. '==' → logprob: -3.5317294597625732
    3. '0' → logprob: -6.656729221343994
    4. '1' → logprob: -7.906729221343994
    5. '<=' → logprob: -9.031729698181152
    6. ' ' → logprob: -9.656729698181152
    7. ' =' → logprob: -9.781729698181152
    8. ' ==' → logprob: -10.281729698181152
    9. '```' → logprob: -11.781729698181152
    10. '!=' → logprob: -11.906729698181152

Token 945: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.313328355550766
    2. '0' → logprob: -1.3133283853530884
    3. ' ' → logprob: -9.938328742980957
    4. '=' → logprob: -12.063328742980957
    5. '```' → logprob: -13.000828742980957
    6. '   ' → logprob: -13.875828742980957
    7. '>' → logprob: -13.938328742980957
    8. 'only' → logprob: -14.125828742980957
    9. '<=' → logprob: -14.250828742980957
    10. '`' → logprob: -14.500828742980957

Token 946: ' but' (ID: 889)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09943314641714096
    2. ':
' → logprob: -2.849433183670044
    3. '   ' → logprob: -3.724433183670044
    4. ' if' → logprob: -5.474432945251465
    5. ',' → logprob: -6.224432945251465
    6. '       ' → logprob: -6.349432945251465
    7. ' and' → logprob: -6.474432945251465
    8. '):' → logprob: -7.349432945251465
    9. ')' → logprob: -7.849432945251465
    10. '.' → logprob: -7.974432945251465

Token 947: ' connected' (ID: 12079)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' p' → logprob: -1.5222927331924438
    2. 'p' → logprob: -2.0222926139831543
    3. ' d' → logprob: -2.1472926139831543
    4. ' (' → logprob: -2.2722926139831543
    5. 'd' → logprob: -2.3972926139831543
    6. ' not' → logprob: -2.3972926139831543
    7. ' abs' → logprob: -2.6472926139831543
    8. '((' → logprob: -3.1472926139831543
    9. 'abs' → logprob: -3.5222926139831543
    10. '(' → logprob: -3.6472926139831543

Token 948: ' only' (ID: 1606)
  Prédit: ' only'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' only' → logprob: -0.39105284214019775
    2. ' to' → logprob: -2.016052722930908
    3. 'only' → logprob: -2.016052722930908
    4. 'to' → logprob: -3.016052722930908
    5. '_only' → logprob: -6.016052722930908
    6. ')' → logprob: -6.641052722930908
    7. '_to' → logprob: -7.016052722930908
    8. ' exclusively' → logprob: -7.391052722930908
    9. '   ' → logprob: -7.516052722930908
    10. '<|end|>' → logprob: -7.891052722930908

Token 949: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.4287581443786621
    2. 'to' → logprob: -1.053758144378662
    3. '_to' → logprob: -10.42875862121582
    4. ' ' → logprob: -12.30375862121582
    5. ' through' → logprob: -12.80375862121582
    6. 'To' → logprob: -13.17875862121582
    7. '	to' → logprob: -13.42875862121582
    8. '   ' → logprob: -13.42875862121582
    9. ' with' → logprob: -13.55375862121582
    10. '```' → logprob: -13.67875862121582

Token 950: ' the' (ID: 290)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.8917651772499084
    2. '[' → logprob: -1.1417651176452637
    3. 'se' → logprob: -2.1417651176452637
    4. 'this' → logprob: -3.2667651176452637
    5. 'i' → logprob: -3.5167651176452637
    6. 'that' → logprob: -3.7667651176452637
    7. 'sign' → logprob: -3.8917651176452637
    8. '{i' → logprob: -4.391765117645264
    9. 'the' → logprob: -5.016765117645264
    10. '{' → logprob: -5.141765117645264

Token 951: ' sign' (ID: 2232)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2079344540834427
    2. 'sign' → logprob: -2.4579343795776367
    3. 'segment' → logprob: -2.9579343795776367
    4. 'se' → logprob: -3.7079343795776367
    5. 'current' → logprob: -4.332934379577637
    6. '[i' → logprob: -5.332934379577637
    7. 'seg' → logprob: -5.582934379577637
    8. 'single' → logprob: -6.957934379577637
    9. '[
' → logprob: -7.207934379577637
    10. '[' → logprob: -7.707934379577637

Token 952: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.3504679203033447
    2. ':' → logprob: -1.8504679203033447
    3. ' if' → logprob: -1.9754679203033447
    4. '       ' → logprob: -1.9754679203033447
    5. '           ' → logprob: -2.1004679203033447
    6. ' and' → logprob: -3.1004679203033447
    7. ':
' → logprob: -3.7254679203033447
    8. '
' → logprob: -3.9754679203033447
    9. ',' → logprob: -4.100467681884766
    10. ' ' → logprob: -4.225467681884766

Token 953: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8163141012191772
    2. '   ' → logprob: -1.8163141012191772
    3. ' if' → logprob: -2.066314220428467
    4. '       ' → logprob: -2.691314220428467
    5. ' ' → logprob: -3.191314220428467
    6. ':' → logprob: -3.691314220428467
    7. ')' → logprob: -3.941314220428467
    8. '<|end|>' → logprob: -4.066314220428467
    9. '    
' → logprob: -4.191314220428467
    10. '[' → logprob: -4.441314220428467

Token 954: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20569653809070587
    2. ' if' → logprob: -2.2056965827941895
    3. '   ' → logprob: -3.4556965827941895
    4. '
' → logprob: -4.2056965827941895
    5. '       ' → logprob: -5.0806965827941895
    6. ' 
' → logprob: -5.2056965827941895
    7. ' ' → logprob: -5.3306965827941895
    8. '    
' → logprob: -6.3306965827941895
    9. 'if' → logprob: -6.7056965827941895
    10. '    ' → logprob: -6.8306965827941895

Token 955: ' To' (ID: 2514)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.05874677374958992
    2. 'if' → logprob: -3.683746814727783
    3. '   ' → logprob: -4.183746814727783
    4. '           ' → logprob: -4.933746814727783
    5. ' for' → logprob: -6.058746814727783
    6. '       ' → logprob: -6.183746814727783
    7. '
' → logprob: -6.308746814727783
    8. ' ' → logprob: -7.183746814727783
    9. ' 
' → logprob: -7.308746814727783
    10. 'for' → logprob: -7.808746814727783

Token 956: ' find' (ID: 1646)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6729702949523926
    2. ' continue' → logprob: -0.7979702949523926
    3. ' if' → logprob: -4.922970294952393
    4. '           ' → logprob: -4.922970294952393
    5. 'if' → logprob: -5.047970294952393
    6. '       ' → logprob: -5.547970294952393
    7. ' check' → logprob: -6.172970294952393
    8. 'for' → logprob: -6.672970294952393
    9. '_continue' → logprob: -6.922970294952393
    10. '#' → logprob: -7.047970294952393

Token 957: ' this' (ID: 495)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9043066501617432
    2. 'if' → logprob: -1.5293066501617432
    3. ' connected' → logprob: -2.029306650161743
    4. 'connected' → logprob: -3.154306650161743
    5. 'i' → logprob: -3.654306650161743
    6. ' the' → logprob: -3.904306650161743
    7. 'sign' → logprob: -4.029306411743164
    8. ' i' → logprob: -4.404306411743164
    9. ' continue' → logprob: -4.654306411743164
    10. 'continue' → logprob: -4.654306411743164

Token 958: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9378671646118164
    2. ' if' → logprob: -1.0628671646118164
    3. '
' → logprob: -3.0628671646118164
    4. '   ' → logprob: -3.0628671646118164
    5. ' for' → logprob: -3.1878671646118164
    6. 'if' → logprob: -3.5628671646118164
    7. ',' → logprob: -3.5628671646118164
    8. '       ' → logprob: -4.312867164611816
    9. ':' → logprob: -5.062867164611816
    10. 'for' → logprob: -5.437867164611816

Token 959: ' we' (ID: 581)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2773168683052063
    2. 'if' → logprob: -2.2773168087005615
    3. '   ' → logprob: -2.4023168087005615
    4. ' for' → logprob: -4.652317047119141
    5. ' continue' → logprob: -4.777317047119141
    6. ' connected' → logprob: -5.152317047119141
    7. '#' → logprob: -5.277317047119141
    8. ' #' → logprob: -5.402317047119141
    9. '           ' → logprob: -5.777317047119141
    10. 'for' → logprob: -5.902317047119141

Token 960: ' check' (ID: 2371)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' need' → logprob: -0.36416876316070557
    2. 'need' → logprob: -1.8641687631607056
    3. ' continue' → logprob: -2.989168643951416
    4. 'continue' → logprob: -3.114168643951416
    5. '           ' → logprob: -3.739168643951416
    6. ' can' → logprob: -4.364168643951416
    7. 'for' → logprob: -5.364168643951416
    8. ' for' → logprob: -5.739168643951416
    9. 'if' → logprob: -6.364168643951416
    10. 'can' → logprob: -6.364168643951416

Token 961: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.597872257232666
    2. ' d' → logprob: -0.847872257232666
    3. 'if' → logprob: -4.472872257232666
    4. ' (' → logprob: -5.472872257232666
    5. 'd' → logprob: -5.972872257232666
    6. '   ' → logprob: -6.972872257232666
    7. ' not' → logprob: -7.222872257232666
    8. '(d' → logprob: -8.222871780395508
    9. '           ' → logprob: -8.472871780395508
    10. ' p' → logprob: -8.472871780395508

Token 962: ' one' (ID: 1001)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.9953728914260864
    2. '(d' → logprob: -1.2453728914260864
    3. ' d' → logprob: -2.120372772216797
    4. ' (' → logprob: -2.245372772216797
    5. '(seg' → logprob: -2.620372772216797
    6. '(se' → logprob: -4.745372772216797
    7. '((' → logprob: -4.745372772216797
    8. ' seg' → logprob: -5.370372772216797
    9. 'seg' → logprob: -5.620372772216797
    10. '(' → logprob: -6.245372772216797

Token 963: ' endpoint' (ID: 29703)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.1631096452474594
    2. 'd' → logprob: -2.913109540939331
    3. 'of' → logprob: -3.413109540939331
    4. 'p' → logprob: -4.28810977935791
    5. ' d' → logprob: -4.66310977935791
    6. 'endpoint' → logprob: -5.03810977935791
    7. '(p' → logprob: -5.41310977935791
    8. ' p' → logprob: -5.53810977935791
    9. '_endpoint' → logprob: -5.66310977935791
    10. ' (' → logprob: -5.78810977935791

Token 964: ' appears' (ID: 14518)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.19483718276023865
    2. 'has' → logprob: -2.0698370933532715
    3. '==' → logprob: -4.1948370933532715
    4. 's' → logprob: -4.6948370933532715
    5. ' is' → logprob: -4.8198370933532715
    6. ' ==' → logprob: -6.0698370933532715
    7. ' in' → logprob: -6.5698370933532715
    8. 'seg' → logprob: -6.5698370933532715
    9. ' connects' → logprob: -6.6948370933532715
    10. ' with' → logprob: -6.8198370933532715

Token 965: ' only' (ID: 1606)
  Prédit: 'only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'only' → logprob: -0.7339419722557068
    2. 'in' → logprob: -1.3589420318603516
    3. ' only' → logprob: -1.8589420318603516
    4. ' in' → logprob: -2.6089420318603516
    5. ' exactly' → logprob: -4.358942031860352
    6. 'seg' → logprob: -5.233942031860352
    7. 'exact' → logprob: -5.358942031860352
    8. 'once' → logprob: -5.858942031860352
    9. '(seg' → logprob: -6.483942031860352
    10. 'se' → logprob: -6.858942031860352

Token 966: ' once' (ID: 4730)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.09321744740009308
    2. 'once' → logprob: -3.218217372894287
    3. ' in' → logprob: -3.343217372894287
    4. ' once' → logprob: -4.468217372894287
    5. '1' → logprob: -6.468217372894287
    6. 'se' → logprob: -7.843217372894287
    7. ' ' → logprob: -10.093217849731445
    8. 's' → logprob: -10.593217849731445
    9. '```' → logprob: -10.968217849731445
    10. '
' → logprob: -10.968217849731445

Token 967: ' in' (ID: 306)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.109192855656147
    2. 'and' → logprob: -2.8591928482055664
    3. ',' → logprob: -3.4841928482055664
    4. ' in' → logprob: -5.234192848205566
    5. ':' → logprob: -6.234192848205566
    6. ')' → logprob: -6.234192848205566
    7. ' if' → logprob: -6.359192848205566
    8. '<|end|>' → logprob: -7.109192848205566
    9. ' ' → logprob: -7.359192848205566
    10. ' ,' → logprob: -7.609192848205566

Token 968: ' all' (ID: 722)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.01954602263867855
    2. 'se' → logprob: -4.019546031951904
    3. 'point' → logprob: -7.644546031951904
    4. 'segment' → logprob: -8.019545555114746
    5. '[' → logprob: -8.894545555114746
    6. 'sign' → logprob: -9.019545555114746
    7. 'seg' → logprob: -9.144545555114746
    8. 'end' → logprob: -9.894545555114746
    9. 'segments' → logprob: -9.894545555114746
    10. 'points' → logprob: -10.019545555114746

Token 969: ' segments' (ID: 33749)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.7143738865852356
    2. 'segments' → logprob: -1.3393738269805908
    3. 'se' → logprob: -1.5893738269805908
    4. 'segment' → logprob: -3.714373826980591
    5. ' endpoint' → logprob: -5.21437406539917
    6. 'seg' → logprob: -5.33937406539917
    7. ' segments' → logprob: -5.71437406539917
    8. 'sign' → logprob: -6.58937406539917
    9. ' seg' → logprob: -6.58937406539917
    10. 'points' → logprob: -7.21437406539917

Token 970: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1552746593952179
    2. '       ' → logprob: -3.2802746295928955
    3. '<|end|>' → logprob: -3.4052746295928955
    4. ' and' → logprob: -3.9052746295928955
    5. ',' → logprob: -4.405274868011475
    6. '
' → logprob: -4.655274868011475
    7. '   ' → logprob: -5.030274868011475
    8. '<|end|>' → logprob: -5.155274868011475
    9. ')' → logprob: -5.280274868011475
    10. ' if' → logprob: -5.780274868011475

Token 971: 'only' (ID: 7393)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2247432917356491
    2. 'and' → logprob: -2.474743366241455
    3. ' and' → logprob: -2.599743366241455
    4. '           ' → logprob: -5.099743366241455
    5. 'p' → logprob: -5.224743366241455
    6. '),' → logprob: -5.349743366241455
    7. ' or' → logprob: -5.599743366241455
    8. 'points' → logprob: -5.724743366241455
    9. 's' → logprob: -5.974743366241455
    10. 'or' → logprob: -6.099743366241455

Token 972: ' this' (ID: 495)
  Prédit: ' connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' connected' → logprob: -1.1010416746139526
    2. ' in' → logprob: -2.226041793823242
    3. 'connected' → logprob: -2.226041793823242
    4. ' one' → logprob: -2.351041793823242
    5. 'in' → logprob: -2.851041793823242
    6. 'se' → logprob: -2.976041793823242
    7. ')' → logprob: -2.976041793823242
    8. 'endpoint' → logprob: -3.351041793823242
    9. 'one' → logprob: -3.601041793823242
    10. ' p' → logprob: -4.101041793823242

Token 973: ' sign' (ID: 2232)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20845553278923035
    2. ' )' → logprob: -2.3334555625915527
    3. ' segment' → logprob: -3.3334555625915527
    4. 'segment' → logprob: -3.4584555625915527
    5. '),' → logprob: -4.958455562591553
    6. ' and' → logprob: -5.333455562591553
    7. '[i' → logprob: -6.208455562591553
    8. ')
' → logprob: -6.333455562591553
    9. ',' → logprob: -6.708455562591553
    10. ' )
' → logprob: -7.083455562591553

Token 974: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01526920311152935
    2. ' and' → logprob: -5.2652692794799805
    3. '_segments' → logprob: -6.0152692794799805
    4. ' )' → logprob: -6.3902692794799805
    5. 'and' → logprob: -6.7652692794799805
    6. '_segment' → logprob: -7.1402692794799805
    7. 's' → logprob: -7.3902692794799805
    8. '[' → logprob: -7.6402692794799805
    9. 'segment' → logprob: -7.6402692794799805
    10. ',' → logprob: -7.7652692794799805

Token 975: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18358851969242096
    2. '<|end|>' → logprob: -2.6835885047912598
    3. ' and' → logprob: -2.9335885047912598
    4. ' if' → logprob: -4.43358850479126
    5. ')' → logprob: -4.93358850479126
    6. ' ' → logprob: -5.30858850479126
    7. '<|end|>' → logprob: -5.30858850479126
    8. 'and' → logprob: -5.55858850479126
    9. ',' → logprob: -5.93358850479126
    10. '            ' → logprob: -6.30858850479126

Token 976: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.294443815946579
    2. '           ' → logprob: -1.6694438457489014
    3. 'if' → logprob: -3.5444438457489014
    4. ' for' → logprob: -4.294443607330322
    5. '   ' → logprob: -5.544443607330322
    6. '
' → logprob: -5.794443607330322
    7. ')' → logprob: -5.919443607330322
    8. '       ' → logprob: -6.294443607330322
    9. ' ' → logprob: -6.419443607330322
    10. ',' → logprob: -6.419443607330322

Token 977: ' count' (ID: 3605)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5769380331039429
    2. '           ' → logprob: -0.9519380331039429
    3. 'if' → logprob: -3.4519381523132324
    4. '   ' → logprob: -5.451938152313232
    5. ' for' → logprob: -5.451938152313232
    6. '<|end|>' → logprob: -6.701938152313232
    7. ' connected' → logprob: -7.076938152313232
    8. 'for' → logprob: -7.201938152313232
    9. ' endpoints' → logprob: -7.201938152313232
    10. '       ' → logprob: -7.326938152313232

Token 978: ' number' (ID: 2086)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3267616033554077
    2. ' =' → logprob: -1.7017616033554077
    3. 'd' → logprob: -2.0767617225646973
    4. '=' → logprob: -2.5767617225646973
    5. 'p' → logprob: -2.5767617225646973
    6. 'inue' → logprob: -2.8267617225646973
    7. '_count' → logprob: -3.4517617225646973
    8. 'ed' → logprob: -3.7017617225646973
    9. '1' → logprob: -3.7017617225646973
    10. 'if' → logprob: -3.8267617225646973

Token 979: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8533523082733154
    2. 's' → logprob: -1.4783523082733154
    3. '(p' → logprob: -1.8533523082733154
    4. 'of' → logprob: -1.9783523082733154
    5. ')' → logprob: -4.4783525466918945
    6. 'p' → logprob: -5.3533525466918945
    7. '(s' → logprob: -5.4783525466918945
    8. '(
' → logprob: -5.8533525466918945
    9. '=' → logprob: -5.8533525466918945
    10. '_' → logprob: -5.9783525466918945

Token 980: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.6107397675514221
    2. 'se' → logprob: -1.7357397079467773
    3. 'endpoint' → logprob: -2.1107397079467773
    4. '(se' → logprob: -3.7357397079467773
    5. 'seg' → logprob: -3.9857397079467773
    6. 's' → logprob: -4.110739707946777
    7. 'p' → logprob: -4.485739707946777
    8. 'segment' → logprob: -4.610739707946777
    9. '[' → logprob: -4.860739707946777
    10. '_segments' → logprob: -4.860739707946777

Token 981: ' involving' (ID: 26065)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2954055070877075
    2. 'p' → logprob: -1.4204055070877075
    3. 'for' → logprob: -2.420405387878418
    4. 'per' → logprob: -3.045405387878418
    5. '[p' → logprob: -3.045405387878418
    6. ' =' → logprob: -3.170405387878418
    7. 's' → logprob: -3.295405387878418
    8. '(p' → logprob: -3.670405387878418
    9. ' at' → logprob: -3.920405387878418
    10. 'with' → logprob: -4.045405387878418

Token 982: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.010064048692584038
    2. ' p' → logprob: -4.885064125061035
    3. '(p' → logprob: -7.260064125061035
    4. 'points' → logprob: -8.260064125061035
    5. 'se' → logprob: -8.385064125061035
    6. '
' → logprob: -8.385064125061035
    7. 's' → logprob: -8.510064125061035
    8. 'endpoint' → logprob: -8.885064125061035
    9. 'each' → logprob: -9.135064125061035
    10. 'the' → logprob: -10.135064125061035

Token 983: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2265443652868271
    2. 'oint' → logprob: -1.7265443801879883
    3. 'oints' → logprob: -3.8515443801879883
    4. '[p' → logprob: -6.726544380187988
    5. '_count' → logprob: -7.226544380187988
    6. 'for' → logprob: -8.226544380187988
    7. 's' → logprob: -8.851544380187988
    8. 'p' → logprob: -8.851544380187988
    9. '```' → logprob: -9.351544380187988
    10. 'count' → logprob: -9.476544380187988

Token 984: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2305985689163208
    2. '<|end|>' → logprob: -1.2305985689163208
    3. ' if' → logprob: -1.8555985689163208
    4. ' and' → logprob: -2.8555984497070312
    5. ' for' → logprob: -2.9805984497070312
    6. ',' → logprob: -3.6055984497070312
    7. ')' → logprob: -3.9805984497070312
    8. 'for' → logprob: -4.230598449707031
    9. '<|end|>' → logprob: -4.230598449707031
    10. '[' → logprob: -4.230598449707031

Token 985: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.02094740979373455
    2. ' p' → logprob: -3.8959474563598633
    3. 'count' → logprob: -8.270947456359863
    4. 'd' → logprob: -10.145947456359863
    5. 'se' → logprob: -11.020947456359863
    6. ' not' → logprob: -11.145947456359863
    7. 'not' → logprob: -11.270947456359863
    8. 'point' → logprob: -11.395947456359863
    9. 'seg' → logprob: -11.895947456359863
    10. 'segments' → logprob: -12.020947456359863

Token 986: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2200749754119897e-06
    2. 'oints' → logprob: -13.750001907348633
    3. '1' → logprob: -14.000001907348633
    4. 'oint' → logprob: -15.500001907348633
    5. 'p' → logprob: -17.000001907348633
    6. '[' → logprob: -19.375001907348633
    7. 'oin' → logprob: -19.750001907348633
    8. ' p' → logprob: -19.750001907348633
    9. '0' → logprob: -20.000001907348633
    10. 'ython' → logprob: -20.875001907348633

Token 987: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7626753449440002
    2. ' if' → logprob: -1.8876752853393555
    3. '<|end|>' → logprob: -2.1376752853393555
    4. '
' → logprob: -2.7626752853393555
    5. '   ' → logprob: -3.1376752853393555
    6. ')' → logprob: -3.5126752853393555
    7. '<|end|>' → logprob: -4.0126752853393555
    8. ' ' → logprob: -4.0126752853393555
    9. ' for' → logprob: -4.1376752853393555
    10. ',' → logprob: -4.6376752853393555

Token 988: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1418362408876419
    2. ' if' → logprob: -3.516836166381836
    3. '   ' → logprob: -3.641836166381836
    4. '<|end|>' → logprob: -4.141836166381836
    5. ')' → logprob: -4.391836166381836
    6. '
' → logprob: -4.641836166381836
    7. '       ' → logprob: -4.766836166381836
    8. ',' → logprob: -5.016836166381836
    9. ' and' → logprob: -5.641836166381836
    10. ' ' → logprob: -5.766836166381836

Token 989: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08846702426671982
    2. ' if' → logprob: -2.9634671211242676
    3. '<|end|>' → logprob: -4.338467121124268
    4. '   ' → logprob: -4.963467121124268
    5. '<|end|>' → logprob: -6.213467121124268
    6. '       ' → logprob: -6.713467121124268
    7. ' tokens' → logprob: -6.838467121124268
    8. ' for' → logprob: -6.838467121124268
    9. ')' → logprob: -6.963467121124268
    10. ' and' → logprob: -7.088467121124268

Token 990: ' If' (ID: 1843)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3617691695690155
    2. ' if' → logprob: -1.486769199371338
    3. 'if' → logprob: -2.861769199371338
    4. '   ' → logprob: -4.236769199371338
    5. '       ' → logprob: -5.861769199371338
    6. '<|end|>' → logprob: -7.236769199371338
    7. 'for' → logprob: -7.736769199371338
    8. ' for' → logprob: -7.861769199371338
    9. ' ' → logprob: -8.23676872253418
    10. '          ' → logprob: -9.11176872253418

Token 991: ' one' (ID: 1001)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4275594651699066
    2. ' d' → logprob: -1.177559494972229
    3. '(d' → logprob: -3.9275593757629395
    4. ' (' → logprob: -4.4275593757629395
    5. '(' → logprob: -5.5525593757629395
    6. '((' → logprob: -7.1775593757629395
    7. 'abs' → logprob: -7.4275593757629395
    8. '   ' → logprob: -7.8025593757629395
    9. '(p' → logprob: -8.052559852600098
    10. 'p' → logprob: -8.177559852600098

Token 992: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.898827075958252
    2. 'p' → logprob: -1.773827075958252
    3. ' of' → logprob: -1.898827075958252
    4. ' endpoint' → logprob: -2.523827075958252
    5. 'of' → logprob: -3.148827075958252
    6. '_endpoint' → logprob: -3.148827075958252
    7. ' p' → logprob: -4.273827075958252
    8. 'point' → logprob: -4.398827075958252
    9. ')' → logprob: -5.023827075958252
    10. ' in' → logprob: -5.148827075958252

Token 993: ' connected' (ID: 12079)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -1.261217474937439
    2. ' ==' → logprob: -1.636217474937439
    3. ' has' → logprob: -2.7612175941467285
    4. ' ' → logprob: -2.8862175941467285
    5. ' appears' → logprob: -2.8862175941467285
    6. ' in' → logprob: -3.3862175941467285
    7. ' is' → logprob: -3.5112175941467285
    8. '_counts' → logprob: -3.5112175941467285
    9. '_count' → logprob: -3.6362175941467285
    10. 's' → logprob: -3.6362175941467285

Token 994: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.2988743782043457
    2. 'to' → logprob: -1.5488743782043457
    3. 'only' → logprob: -2.0488743782043457
    4. ' only' → logprob: -2.1738743782043457
    5. '==' → logprob: -2.5488743782043457
    6. 's' → logprob: -2.9238743782043457
    7. '_to' → logprob: -3.7988743782043457
    8. ' ==' → logprob: -3.9238743782043457
    9. '_only' → logprob: -4.048874378204346
    10. ')' → logprob: -4.173874378204346

Token 995: ' one' (ID: 1001)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1399763971567154
    2. 'se' → logprob: -3.0149765014648438
    3. 'only' → logprob: -3.6399765014648438
    4. 'sign' → logprob: -3.6399765014648438
    5. ' ' → logprob: -4.514976501464844
    6. ' only' → logprob: -5.014976501464844
    7. 'segments' → logprob: -5.639976501464844
    8. ' seg' → logprob: -6.264976501464844
    9. 'seg' → logprob: -6.889976501464844
    10. 'exact' → logprob: -7.264976501464844

Token 996: ' segment' (ID: 14806)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2258458137512207
    2. 'se' → logprob: -2.1008458137512207
    3. ' ' → logprob: -2.1008458137512207
    4. '[' → logprob: -2.8508458137512207
    5. ' )' → logprob: -3.1008458137512207
    6. '(segment' → logprob: -3.2258458137512207
    7. ',' → logprob: -3.3508458137512207
    8. 'segment' → logprob: -3.4758458137512207
    9. ' and' → logprob: -3.6008458137512207
    10. '(seg' → logprob: -3.8508458137512207

Token 997: ' (' (ID: 350)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04983161389827728
    2. 'and' → logprob: -3.6748316287994385
    3. ':' → logprob: -4.549831390380859
    4. ':
' → logprob: -5.049831390380859
    5. ',' → logprob: -5.799831390380859
    6. ')' → logprob: -7.049831390380859
    7. ' or' → logprob: -7.924831390380859
    8. '   ' → logprob: -7.924831390380859
    9. ' if' → logprob: -7.924831390380859
    10. '           ' → logprob: -8.04983139038086

Token 998: 'the' (ID: 3086)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3912074863910675
    2. ' and' → logprob: -1.7662074565887451
    3. ' )' → logprob: -2.766207456588745
    4. 'and' → logprob: -3.391207456588745
    5. 's' → logprob: -4.766207695007324
    6. '1' → logprob: -5.016207695007324
    7. '=' → logprob: -5.141207695007324
    8. '),' → logprob: -5.266207695007324
    9. 'p' → logprob: -5.516207695007324
    10. 'se' → logprob: -5.516207695007324

Token 999: ' sign' (ID: 2232)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.8247984051704407
    2. ')' → logprob: -1.449798345565796
    3. ' )' → logprob: -2.574798345565796
    4. ' current' → logprob: -2.574798345565796
    5. 'segment' → logprob: -3.199798345565796
    6. ' i' → logprob: -3.449798345565796
    7. ' segment' → logprob: -4.324798583984375
    8. 'sign' → logprob: -4.449798583984375
    9. 'se' → logprob: -4.574798583984375
    10. 'current' → logprob: -4.574798583984375

Token 1000: ' itself' (ID: 8807)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0701131671667099
    2. ' and' → logprob: -3.070113182067871
    3. '),' → logprob: -4.570113182067871
    4. 'and' → logprob: -5.195113182067871
    5. ' )' → logprob: -6.695113182067871
    6. '[' → logprob: -7.070113182067871
    7. ',' → logprob: -7.445113182067871
    8. 'segment' → logprob: -7.445113182067871
    9. '):
' → logprob: -8.195113182067871
    10. '):' → logprob: -8.445113182067871

Token 1001: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.035521261394023895
    2. ' and' → logprob: -3.7855212688446045
    3. '):' → logprob: -5.035521030426025
    4. '):
' → logprob: -6.160521030426025
    5. 'and' → logprob: -6.785521030426025
    6. ' )' → logprob: -7.035521030426025
    7. '),' → logprob: -7.035521030426025
    8. '           ' → logprob: -7.785521030426025
    9. ',' → logprob: -9.285521507263184
    10. ':' → logprob: -9.660521507263184

Token 1002: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.10803361237049103
    2. ' if' → logprob: -2.8580336570739746
    3. 'and' → logprob: -3.7330336570739746
    4. ' continue' → logprob: -4.733033657073975
    5. '           ' → logprob: -4.983033657073975
    6. ' continues' → logprob: -6.733033657073975
    7. ' ' → logprob: -7.108033657073975
    8. 'continue' → logprob: -7.233033657073975
    9. '   ' → logprob: -7.483033657073975
    10. ' one' → logprob: -7.608033657073975

Token 1003: ' the' (ID: 290)
  Prédit: ' the'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.42258527874946594
    2. ' other' → logprob: -1.7975852489471436
    3. 'the' → logprob: -2.6725852489471436
    4. 'other' → logprob: -3.1725852489471436
    5. ' one' → logprob: -3.4225852489471436
    6. ' another' → logprob: -3.9225852489471436
    7. 'another' → logprob: -5.047585487365723
    8. 'one' → logprob: -5.297585487365723
    9. ' not' → logprob: -6.547585487365723
    10. ' (' → logprob: -7.547585487365723

Token 1004: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.2520241439342499
    2. ' other' → logprob: -1.5020241737365723
    3. '#' → logprob: -11.377023696899414
    4. '```' → logprob: -11.627023696899414
    5. '(other' → logprob: -11.877023696899414
    6. 'segment' → logprob: -11.877023696899414
    7. ' ' → logprob: -12.502023696899414
    8. 'import' → logprob: -12.627023696899414
    9. '.other' → logprob: -12.877023696899414
    10. '``' → logprob: -12.939523696899414

Token 1005: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.47180208563804626
    2. ' endpoint' → logprob: -1.0968021154403687
    3. '_endpoint' → logprob: -3.596801996231079
    4. ' is' → logprob: -5.846802234649658
    5. ' connected' → logprob: -6.471802234649658
    6. ' in' → logprob: -6.471802234649658
    7. ')' → logprob: -6.721802234649658
    8. '[' → logprob: -6.721802234649658
    9. '1' → logprob: -7.471802234649658
    10. 'connected' → logprob: -7.596802234649658

Token 1006: ' connected' (ID: 12079)
  Prédit: ' connected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' connected' → logprob: -0.7130065560340881
    2. 'connected' → logprob: -0.8380065560340881
    3. ' has' → logprob: -2.9630064964294434
    4. ' is' → logprob: -4.963006496429443
    5. 'has' → logprob: -4.963006496429443
    6. ' also' → logprob: -5.588006496429443
    7. 'also' → logprob: -6.588006496429443
    8. ' only' → logprob: -6.838006496429443
    9. ')' → logprob: -7.213006496429443
    10. 'is' → logprob: -7.463006496429443

Token 1007: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.908412754535675
    2. 'only' → logprob: -1.4084126949310303
    3. ' only' → logprob: -1.5334126949310303
    4. ' to' → logprob: -2.0334126949310303
    5. '==' → logprob: -6.158412933349609
    6. '_only' → logprob: -6.533412933349609
    7. '_to' → logprob: -6.658412933349609
    8. '   ' → logprob: -8.15841293334961
    9. ' ==' → logprob: -9.53341293334961
    10. ' ' → logprob: -9.65841293334961

Token 1008: ' another' (ID: 3613)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.6029514074325562
    2. '1' → logprob: -1.3529514074325562
    3. 'only' → logprob: -2.2279515266418457
    4. 'exact' → logprob: -2.6029515266418457
    5. 'more' → logprob: -5.477951526641846
    6. 'se' → logprob: -5.977951526641846
    7. 'at' → logprob: -6.227951526641846
    8. ' exactly' → logprob: -6.727951526641846
    9. '2' → logprob: -7.727951526641846
    10. '>' → logprob: -7.977951526641846

Token 1009: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -1.0974043607711792
    2. ' segment' → logprob: -1.7224043607711792
    3. '[' → logprob: -1.8474043607711792
    4. ')' → logprob: -2.3474044799804688
    5. '_segment' → logprob: -3.4724044799804688
    6. '1' → logprob: -3.8474044799804688
    7. 'segments' → logprob: -3.8474044799804688
    8. 'seg' → logprob: -4.222404479980469
    9. ' ' → logprob: -4.347404479980469
    10. '.' → logprob: -4.472404479980469

Token 1010: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43118712306022644
    2. ',' → logprob: -1.3061871528625488
    3. ':
' → logprob: -3.681187152862549
    4. ' and' → logprob: -4.181187152862549
    5. '[' → logprob: -5.056187152862549
    6. '.' → logprob: -5.056187152862549
    7. '           ' → logprob: -5.431187152862549
    8. 'and' → logprob: -5.931187152862549
    9. ' or' → logprob: -6.056187152862549
    10. ',
' → logprob: -6.056187152862549

Token 1011: 'street' (ID: 55690)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7831685543060303
    2. '1' → logprob: -0.9081685543060303
    3. ' )' → logprob: -2.6581685543060303
    4. ' ' → logprob: -3.7831685543060303
    5. 'sign' → logprob: -5.033168792724609
    6. 'se' → logprob: -5.158168792724609
    7. ' only' → logprob: -5.283168792724609
    8. 's' → logprob: -5.408168792724609
    9. '=' → logprob: -5.658168792724609
    10. ',' → logprob: -6.033168792724609

Token 1012: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05598393827676773
    2. '):' → logprob: -3.4309840202331543
    3. '):
' → logprob: -4.555984020233154
    4. ' or' → logprob: -5.305984020233154
    5. '),' → logprob: -6.555984020233154
    6. '1' → logprob: -6.805984020233154
    7. ')
' → logprob: -7.180984020233154
    8. 'segment' → logprob: -7.430984020233154
    9. ' and' → logprob: -7.805984020233154
    10. ',' → logprob: -7.930984020233154

Token 1013: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41223394870758057
    2. ':' → logprob: -2.162233829498291
    3. ' and' → logprob: -2.287233829498291
    4. '   ' → logprob: -3.037233829498291
    5. ':
' → logprob: -3.537233829498291
    6. ',' → logprob: -4.412233829498291
    7. '       ' → logprob: -4.787233829498291
    8. ')' → logprob: -5.287233829498291
    9. ' if' → logprob: -5.412233829498291
    10. 'and' → logprob: -6.162233829498291

Token 1014: ' #' (ID: 1069)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.384722113609314
    2. ':
' → logprob: -2.1347222328186035
    3. '           ' → logprob: -2.2597222328186035
    4. ' if' → logprob: -2.5097222328186035
    5. ' 
' → logprob: -2.6347222328186035
    6. ')' → logprob: -2.6347222328186035
    7. '   ' → logprob: -2.7597222328186035
    8. '    
' → logprob: -3.1347222328186035
    9. ' ' → logprob: -3.2597222328186035
    10. '
' → logprob: -3.6347222328186035

Token 1015: ' Then' (ID: 7801)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7593610882759094
    2. ' if' → logprob: -0.7593610882759094
    3. '   ' → logprob: -3.1343610286712646
    4. 'if' → logprob: -4.634361267089844
    5. '       ' → logprob: -5.509361267089844
    6. '
' → logprob: -6.009361267089844
    7. ' for' → logprob: -6.884361267089844
    8. ')' → logprob: -7.384361267089844
    9. ',' → logprob: -8.134361267089844
    10. ' and' → logprob: -8.509361267089844

Token 1016: ' it's' (ID: 4275)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.4660824239253998
    2. ' sign' → logprob: -2.2160823345184326
    3. 'if' → logprob: -2.5910823345184326
    4. '   ' → logprob: -2.9660823345184326
    5. ' if' → logprob: -2.9660823345184326
    6. '
' → logprob: -3.7160823345184326
    7. 'continue' → logprob: -4.216082572937012
    8. '       ' → logprob: -4.466082572937012
    9. 'graph' → logprob: -5.091082572937012
    10. ' continue' → logprob: -5.591082572937012

Token 1017: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.6195964217185974
    2. ' sign' → logprob: -1.1195964813232422
    3. 's' → logprob: -2.994596481323242
    4. ' a' → logprob: -3.494596481323242
    5. ' street' → logprob: -4.119596481323242
    6. 'street' → logprob: -4.494596481323242
    7. ' '' → logprob: -5.119596481323242
    8. ' s' → logprob: -5.494596481323242
    9. 'a' → logprob: -5.619596481323242
    10. '"' → logprob: -6.369596481323242

Token 1018: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.015528917312622
    2. '
' → logprob: -1.265528917312622
    3. '   ' → logprob: -2.015528917312622
    4. ' if' → logprob: -2.515528917312622
    5. '       ' → logprob: -2.640528917312622
    6. ':
' → logprob: -4.265528678894043
    7. ':' → logprob: -4.390528678894043
    8. '    
' → logprob: -4.390528678894043
    9. ' for' → logprob: -4.765528678894043
    10. ' 
' → logprob: -5.640528678894043

Token 1019: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18606826663017273
    2. '       ' → logprob: -2.561068296432495
    3. ' if' → logprob: -3.686068296432495
    4. '   ' → logprob: -3.811068296432495
    5. '<|end|>' → logprob: -4.686068058013916
    6. '
' → logprob: -5.061068058013916
    7. '    
' → logprob: -5.561068058013916
    8. ' for' → logprob: -5.811068058013916
    9. '	       ' → logprob: -5.936068058013916
    10. '        
' → logprob: -6.061068058013916

Token 1020: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21256913244724274
    2. ' if' → logprob: -1.9625691175460815
    3. ' 
' → logprob: -4.337569236755371
    4. '
' → logprob: -4.712569236755371
    5. '   ' → logprob: -4.837569236755371
    6. '       ' → logprob: -5.087569236755371
    7. ' ' → logprob: -6.087569236755371
    8. 'if' (adapté à ' if') → logprob: -6.337569236755371
    9. ' for' → logprob: -6.712569236755371
    10. '    
' → logprob: -6.837569236755371

Token 1021: ' d' (ID: 272)
  Prédit: '(d'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(d' → logprob: -0.007743505295366049
    2. ' (' → logprob: -5.0077433586120605
    3. 'd' → logprob: -7.5077433586120605
    4. '   ' → logprob: -8.507743835449219
    5. '((' → logprob: -8.632743835449219
    6. '(' → logprob: -10.507743835449219
    7. '(min' → logprob: -10.507743835449219
    8. ' d' → logprob: -11.382743835449219
    9. ' ' → logprob: -12.007743835449219
    10. '(
' → logprob: -12.257743835449219

Token 1022: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009334942442364991
    2. '==' → logprob: -7.750933647155762
    3. '_' → logprob: -7.875933647155762
    4. ' ==' → logprob: -9.250933647155762
    5. ' ' → logprob: -11.500933647155762
    6. '[' → logprob: -12.500933647155762
    7. '=' → logprob: -12.750933647155762
    8. '```' → logprob: -12.750933647155762
    9. '
' → logprob: -13.625933647155762
    10. '   ' → logprob: -14.000933647155762

Token 1023: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.018153101205825806
    2. ' ==' → logprob: -4.018153190612793
    3. '==
' → logprob: -13.143153190612793
    4. '=' → logprob: -14.768153190612793
    5. ']==' → logprob: -15.018153190612793
    6. ')==' → logprob: -15.643153190612793
    7. '1' → logprob: -15.893153190612793
    8. '()==' → logprob: -16.393152236938477
    9. '```' → logprob: -16.393152236938477
    10. '[' → logprob: -16.768152236938477

Token 1024: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.250001907348633
    3. '=' → logprob: -16.000001907348633
    4. '0' → logprob: -16.250001907348633
    5. '
' → logprob: -17.187501907348633
    6. '   ' → logprob: -18.812501907348633
    7. '۱' → logprob: -18.812501907348633
    8. '```' → logprob: -19.062501907348633
    9. '' → logprob: -19.125001907348633
    10. ')' → logprob: -19.500001907348633

Token 1025: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0737556591629982
    2. ' or' → logprob: -2.8237557411193848
    3. 'and' → logprob: -4.448755741119385
    4. 'or' → logprob: -11.323755264282227
    5. ' ' → logprob: -11.573755264282227
    6. '	and' → logprob: -13.323755264282227
    7. '<|end|>' → logprob: -13.948755264282227
    8. ')' → logprob: -14.448755264282227
    9. '	or' → logprob: -14.573755264282227
    10. '   ' → logprob: -15.198755264282227

Token 1026: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.1458003669977188
    2. ' d' → logprob: -2.0208003520965576
    3. '(d' → logprob: -6.520800590515137
    4. ' (' → logprob: -6.645800590515137
    5. '((' → logprob: -9.145800590515137
    6. '(' → logprob: -9.145800590515137
    7. '(p' → logprob: -9.895800590515137
    8. ' ((' → logprob: -11.270800590515137
    9. ' ' → logprob: -11.395800590515137
    10. '(seg' → logprob: -11.895800590515137

Token 1027: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. '1' → logprob: -15.75
    3. '0' → logprob: -16.25
    4. ' ' → logprob: -16.625
    5. '
' → logprob: -16.75
    6. '!=' → logprob: -17.125
    7. '==' → logprob: -17.125
    8. '```' → logprob: -18.0
    9. '[' → logprob: -18.375
    10. '   ' → logprob: -18.9375

Token 1028: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0002901757834479213
    2. '<=' → logprob: -8.250289916992188
    3. ' ==' → logprob: -11.250289916992188
    4. '1' → logprob: -11.500289916992188
    5. '==
' → logprob: -12.625289916992188
    6. '!=' → logprob: -14.125289916992188
    7. '0' → logprob: -14.500289916992188
    8. '>=' → logprob: -14.500289916992188
    9. '=' → logprob: -15.750289916992188
    10. '```' → logprob: -15.875289916992188

Token 1029: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6327282786369324
    2. '1' → logprob: -0.7577282786369324
    3. ' ' → logprob: -10.320228576660156
    4. '=' → logprob: -10.695228576660156
    5. '2' → logprob: -11.507728576660156
    6. '   ' → logprob: -11.757728576660156
    7. '```' → logprob: -12.257728576660156
    8. '==' → logprob: -12.632728576660156
    9. '(' → logprob: -12.757728576660156
    10. '
' → logprob: -12.882728576660156

Token 1030: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.027746053412556648
    2. ':
' → logprob: -4.402746200561523
    3. 'and' → logprob: -4.777746200561523
    4. ':' → logprob: -5.277746200561523
    5. '           ' → logprob: -7.277746200561523
    6. '   ' → logprob: -7.277746200561523
    7. '       ' → logprob: -9.402746200561523
    8. '	and' → logprob: -9.527746200561523
    9. ' or' → logprob: -11.152746200561523
    10. ' ' → logprob: -11.402746200561523

Token 1031: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8537546992301941
    2. ':
' → logprob: -1.7287547588348389
    3. ' and' → logprob: -1.8537547588348389
    4. ':' → logprob: -1.9787547588348389
    5. '               ' → logprob: -2.853754758834839
    6. '       ' → logprob: -3.728754758834839
    7. '   ' → logprob: -5.10375452041626
    8. ',' → logprob: -5.35375452041626
    9. 'and' → logprob: -5.47875452041626
    10. '	       ' → logprob: -6.97875452041626

Token 1032: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5771317481994629
    2. 'sign' → logprob: -0.9521317481994629
    3. '   ' → logprob: -3.577131748199463
    4. 'if' → logprob: -4.702131748199463
    5. ' sign' → logprob: -5.327131748199463
    6. '#' (adapté à ' #') → logprob: -5.577131748199463
    7. 'continue' → logprob: -6.202131748199463
    8. '       ' → logprob: -6.202131748199463
    9. ' if' → logprob: -6.327131748199463
    10. '               ' → logprob: -7.952131748199463

Token 1033: ' Check' (ID: 6208)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.5829029083251953
    2. '#' → logprob: -1.8329029083251953
    3. '           ' → logprob: -1.9579029083251953
    4. '   ' → logprob: -2.4579029083251953
    5. 'if' → logprob: -3.7079029083251953
    6. '       ' → logprob: -3.9579029083251953
    7. 'continue' → logprob: -5.957902908325195
    8. ' sign' → logprob: -6.082902908325195
    9. ' #' → logprob: -7.332902908325195
    10. 'is' → logprob: -7.457902908325195

Token 1034: ' how' (ID: 1495)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5597573518753052
    2. 'if' → logprob: -1.9347573518753052
    3. ' p' → logprob: -2.6847572326660156
    4. ' #' → logprob: -3.0597572326660156
    5. ' connected' → logprob: -3.4347572326660156
    6. 'p' → logprob: -3.5597572326660156
    7. '   ' → logprob: -3.6847572326660156
    8. 'continue' → logprob: -4.434757232666016
    9. '#' → logprob: -4.559757232666016
    10. ' continue' → logprob: -4.809757232666016

Token 1035: ' many' (ID: 1991)
  Prédit: 'many'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'many' → logprob: -0.18405798077583313
    2. ' many' → logprob: -1.8090579509735107
    3. '           ' → logprob: -6.30905818939209
    4. '_many' → logprob: -6.68405818939209
    5. '   ' → logprob: -8.43405818939209
    6. 'ever' → logprob: -8.80905818939209
    7. '#' → logprob: -9.05905818939209
    8. 'Many' → logprob: -9.05905818939209
    9. '               ' → logprob: -9.18405818939209
    10. 'connected' → logprob: -9.30905818939209

Token 1036: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.300883412361145
    2. 'se' → logprob: -2.3008832931518555
    3. 'endpoint' → logprob: -3.0508832931518555
    4. 'for' → logprob: -3.1758832931518555
    5. ' segments' → logprob: -4.3008832931518555
    6. '_segments' → logprob: -4.3008832931518555
    7. 'seg' → logprob: -4.6758832931518555
    8. 'segment' → logprob: -4.9258832931518555
    9. '_se' → logprob: -4.9258832931518555
    10. 's' → logprob: -4.9258832931518555

Token 1037: ' each' (ID: 2454)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8853834271430969
    2. 'in' → logprob: -1.8853833675384521
    3. 'for' → logprob: -1.8853833675384521
    4. 'endpoint' → logprob: -1.8853833675384521
    5. ' =' → logprob: -3.385383367538452
    6. 'p' → logprob: -4.010383605957031
    7. 'contain' → logprob: -4.135383605957031
    8. 'if' → logprob: -4.510383605957031
    9. '           ' → logprob: -5.135383605957031
    10. ' for' → logprob: -5.260383605957031

Token 1038: ' endpoint' (ID: 29703)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8005653023719788
    2. 'endpoint' → logprob: -0.8005653023719788
    3. 'point' → logprob: -2.800565242767334
    4. 'for' → logprob: -4.550565242767334
    5. '[p' → logprob: -5.550565242767334
    6. 'points' → logprob: -6.175565242767334
    7. 'segment' → logprob: -6.175565242767334
    8. '#' → logprob: -6.300565242767334
    9. ' endpoint' → logprob: -6.675565242767334
    10. ' for' → logprob: -6.675565242767334

Token 1039: ' involved' (ID: 9808)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1040: ':' (ID: 25)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07444846630096436
    2. 'for' → logprob: -4.324448585510254
    3. ':' → logprob: -4.824448585510254
    4. '           ' → logprob: -4.949448585510254
    5. 'in' → logprob: -5.199448585510254
    6. ',' → logprob: -5.449448585510254
    7. ' in' → logprob: -5.574448585510254
    8. '
' → logprob: -5.824448585510254
    9. '=' → logprob: -5.824448585510254
    10. ')' → logprob: -5.824448585510254

Token 1041: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7653127908706665
    2. 'continue' → logprob: -1.2653127908706665
    3. 'count' → logprob: -2.640312671661377
    4. 'cnt' → logprob: -3.015312671661377
    5. 'p' → logprob: -3.515312671661377
    6. '                   ' → logprob: -3.890312671661377
    7. 'counts' → logprob: -4.140312671661377
    8. 'c' → logprob: -4.515312671661377
    9. '               ' → logprob: -4.890312671661377
    10. 's' → logprob: -5.140312671661377

Token 1042: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.5717304944992065
    2. 'len' → logprob: -1.9467304944992065
    3. '(se' → logprob: -2.696730613708496
    4. 'p' → logprob: -2.946730613708496
    5. 'all' → logprob: -3.071730613708496
    6. 'se' → logprob: -3.196730613708496
    7. '(endpoint' → logprob: -3.571730613708496
    8. '(len' → logprob: -4.071730613708496
    9. '(p' → logprob: -4.946730613708496
    10. ' endpoint' → logprob: -5.321730613708496

Token 1043: ' involved' (ID: 9808)
  Prédit: '_seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_seg' → logprob: -0.06608976423740387
    2. 's' → logprob: -3.0660898685455322
    3. ' in' → logprob: -5.941089630126953
    4. 'seg' → logprob: -5.941089630126953
    5. '```' → logprob: -6.816089630126953
    6. ' appears' → logprob: -6.941089630126953
    7. '_segments' → logprob: -7.191089630126953
    8. '_segment' → logprob: -7.316089630126953
    9. '_s' → logprob: -7.441089630126953
    10. '
' → logprob: -7.566089630126953

Token 1044: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4035183787345886
    2. '==' → logprob: -2.1535184383392334
    3. 'only' → logprob: -2.4035184383392334
    4. ' in' → logprob: -2.5285184383392334
    5. ' only' → logprob: -4.153518199920654
    6. 's' → logprob: -4.528518199920654
    7. ' ==' → logprob: -5.403518199920654
    8. '<=' → logprob: -5.653518199920654
    9. 'se' → logprob: -6.028518199920654
    10. '+' → logprob: -6.403518199920654

Token 1045: ' only' (ID: 1606)
  Prédit: 'only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'only' → logprob: -0.3488490581512451
    2. '1' → logprob: -1.8488490581512451
    3. 'endpoint' → logprob: -2.473849058151245
    4. 'se' → logprob: -3.473849058151245
    5. 'exact' → logprob: -4.598849296569824
    6. 'one' → logprob: -5.723849296569824
    7. 'sign' → logprob: -5.723849296569824
    8. 'just' → logprob: -6.473849296569824
    9. ' only' → logprob: -6.848849296569824
    10. 'segment' → logprob: -7.723849296569824

Token 1046: ' this' (ID: 495)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.7891345024108887
    2. '1' → logprob: -1.4141345024108887
    3. ' one' → logprob: -2.5391345024108887
    4. 'se' → logprob: -2.5391345024108887
    5. '[' → logprob: -2.6641345024108887
    6. 'this' → logprob: -3.9141345024108887
    7. 'sign' → logprob: -4.539134502410889
    8. 'the' → logprob: -4.914134502410889
    9. 'that' → logprob: -5.039134502410889
    10. ' ' → logprob: -5.039134502410889

Token 1047: ' segment' (ID: 14806)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -1.139906883239746
    2. 'se' → logprob: -1.264906883239746
    3. 'seg' → logprob: -2.139906883239746
    4. 'segments' → logprob: -2.889906883239746
    5. ' seg' → logprob: -3.264906883239746
    6. '1' → logprob: -3.264906883239746
    7. 's' → logprob: -3.764906883239746
    8. ' segment' → logprob: -3.889906883239746
    9. ' ' → logprob: -3.889906883239746
    10. 'sign' → logprob: -4.139906883239746

Token 1048: '?
' (ID: 3901)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.0059587955474854
    2. ':' → logprob: -1.2559587955474854
    3. '               ' → logprob: -2.2559587955474854
    4. ',' → logprob: -2.5059587955474854
    5. 'and' → logprob: -2.6309587955474854
    6. '                   ' → logprob: -3.2559587955474854
    7. ':
' → logprob: -3.5059587955474854
    8. '           ' → logprob: -4.505958557128906
    9. ' or' → logprob: -6.130958557128906
    10. '<|end|>' → logprob: -6.130958557128906

Token 1049: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022547457367181778
    2. '           ' → logprob: -4.772547245025635
    3. '                   ' → logprob: -4.772547245025635
    4. ' continue' → logprob: -5.772547245025635
    5. ' if' → logprob: -7.397547245025635
    6. 'continue' → logprob: -7.647547245025635
    7. '   ' → logprob: -8.522547721862793
    8. ' for' → logprob: -8.647547721862793
    9. ' continues' → logprob: -8.647547721862793
    10. ',' → logprob: -9.147547721862793

Token 1050: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6445538997650146
    2. 'continue' → logprob: -1.3945538997650146
    3. '               ' → logprob: -3.0195538997650146
    4. 'p' → logprob: -3.1445538997650146
    5. '                   ' → logprob: -3.5195538997650146
    6. 'count' → logprob: -4.019554138183594
    7. ' if' → logprob: -4.019554138183594
    8. 'cnt' → logprob: -4.019554138183594
    9. ' continue' → logprob: -4.894554138183594
    10. '   ' → logprob: -5.019554138183594

Token 1051: ' Both' (ID: 17659)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6355865001678467
    2. 'if' → logprob: -1.7605865001678467
    3. ' continue' → logprob: -2.6355865001678467
    4. '           ' → logprob: -2.8855865001678467
    5. '               ' → logprob: -2.8855865001678467
    6. ' if' → logprob: -3.6355865001678467
    7. 'cnt' → logprob: -4.135586738586426
    8. '#' → logprob: -4.385586738586426
    9. 'count' → logprob: -4.385586738586426
    10. '   ' → logprob: -4.635586738586426

Token 1052: ' ' (ID: 220)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.2519125938415527
    2. ' endpoints' → logprob: -1.5019125938415527
    3. ' connected' → logprob: -2.2519125938415527
    4. 'p' → logprob: -2.5019125938415527
    5. 's' → logprob: -2.7519125938415527
    6. 'connected' → logprob: -3.0019125938415527
    7. ' in' → logprob: -3.1269125938415527
    8. 'points' → logprob: -3.6269125938415527
    9. ' are' → logprob: -3.8769125938415527
    10. '==' → logprob: -4.501912593841553

Token 1053: '1' (ID: 16)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.6606113910675049
    2. 'in' → logprob: -1.0356113910675049
    3. 'd' → logprob: -3.285611391067505
    4. 'not' → logprob: -3.910611391067505
    5. 'points' → logprob: -4.285611152648926
    6. 'endpoint' → logprob: -4.410611152648926
    7. 'end' → logprob: -4.785611152648926
    8. 'segments' → logprob: -5.035611152648926
    9. 'connected' → logprob: -5.160611152648926
    10. ' endpoints' → logprob: -5.285611152648926

Token 1054: ' here' (ID: 2105)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.2240923643112183
    2. ':' → logprob: -1.3490923643112183
    3. '           ' → logprob: -1.8490923643112183
    4. '<|end|>' → logprob: -2.099092483520508
    5. '<|end|>' → logprob: -2.724092483520508
    6. ':
' → logprob: -2.974092483520508
    7. 'and' → logprob: -4.474092483520508
    8. ',' → logprob: -4.474092483520508
    9. ')' → logprob: -5.599092483520508
    10. ' if' → logprob: -5.599092483520508

Token 1055: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2717351019382477
    2. '           ' → logprob: -1.7717350721359253
    3. ' and' → logprob: -3.771735191345215
    4. '<|end|>' → logprob: -4.646735191345215
    5. ' if' → logprob: -4.771735191345215
    6. ',' → logprob: -4.896735191345215
    7. '
' → logprob: -5.771735191345215
    8. ':
' → logprob: -5.896735191345215
    9. '<|end|>' → logprob: -6.146735191345215
    10. ' continue' → logprob: -6.146735191345215

Token 1056: ' but' (ID: 889)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8166942000389099
    2. ' continue' → logprob: -1.5666942596435547
    3. '           ' → logprob: -1.9416942596435547
    4. '               ' → logprob: -2.5666942596435547
    5. ' if' → logprob: -2.6916942596435547
    6. 'if' → logprob: -3.1916942596435547
    7. '#' → logprob: -4.441694259643555
    8. '                   ' → logprob: -6.441694259643555
    9. '   ' → logprob: -6.566694259643555
    10. 'sign' → logprob: -6.691694259643555

Token 1057: ' maybe' (ID: 10112)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.4772660732269287
    2. 'se' → logprob: -2.3522660732269287
    3. 'continue' → logprob: -2.6022660732269287
    4. 'if' → logprob: -2.8522660732269287
    5. '(se' → logprob: -2.8522660732269287
    6. 'endpoint' → logprob: -2.9772660732269287
    7. 'p' → logprob: -3.1022660732269287
    8. ' #' → logprob: -3.7272660732269287
    9. 'seg' → logprob: -3.7272660732269287
    10. 'the' → logprob: -3.8522660732269287

Token 1058: ' one' (ID: 1001)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.415597677230835
    2. ' and' → logprob: -2.040597677230835
    3. ' continue' → logprob: -2.040597677230835
    4. '           ' → logprob: -2.040597677230835
    5. ':' → logprob: -2.165597677230835
    6. ':
' → logprob: -2.665597677230835
    7. ' if' → logprob: -3.415597677230835
    8. '               ' → logprob: -3.665597677230835
    9. '   ' → logprob: -3.665597677230835
    10. 'and' → logprob: -3.790597677230835

Token 1059: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -1.4813904762268066
    2. '           ' → logprob: -1.6063904762268066
    3. ' is' → logprob: -1.9813904762268066
    4. 'connected' → logprob: -2.6063904762268066
    5. 'has' → logprob: -3.1063904762268066
    6. ' connected' → logprob: -3.3563904762268066
    7. ' has' → logprob: -3.4813904762268066
    8. ' of' → logprob: -3.8563904762268066
    9. 'more' → logprob: -3.8563904762268066
    10. 's' → logprob: -3.9813904762268066

Token 1060: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.8429765701293945
    2. 'only' → logprob: -1.8429765701293945
    3. 'a' → logprob: -2.2179765701293945
    4. 'se' → logprob: -2.2179765701293945
    5. 'connected' → logprob: -3.3429765701293945
    6. 'unique' → logprob: -3.4679765701293945
    7. 'not' → logprob: -3.5929765701293945
    8. 'the' → logprob: -4.3429765701293945
    9. 'in' → logprob: -4.4679765701293945
    10. ' sign' → logprob: -4.5929765701293945

Token 1061: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3309864401817322
    2. '               ' → logprob: -2.705986499786377
    3. ':' → logprob: -2.955986499786377
    4. ' and' → logprob: -3.330986499786377
    5. ' continue' → logprob: -3.830986499786377
    6. ' continues' → logprob: -4.205986499786377
    7. ':
' → logprob: -4.205986499786377
    8. ',' → logprob: -4.455986499786377
    9. '<|end|>' → logprob: -4.455986499786377
    10. '       ' → logprob: -4.580986499786377

Token 1062: ' other' (ID: 1273)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.16570241749286652
    2. 'continue' → logprob: -2.6657023429870605
    3. '               ' → logprob: -2.9157023429870605
    4. '                ' → logprob: -4.9157023429870605
    5. ' ' → logprob: -5.1657023429870605
    6. ' continues' → logprob: -5.6657023429870605
    7. ' else' → logprob: -6.2907023429870605
    8. ' not' → logprob: -6.2907023429870605
    9. '                   ' → logprob: -6.9157023429870605
    10. ' and' → logprob: -7.1657023429870605

Token 1063: ' street' (ID: 12901)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.3931525945663452
    2. 'is' → logprob: -1.3931525945663452
    3. ' is' → logprob: -1.3931525945663452
    4. '=' → logprob: -3.1431527137756348
    5. 'connected' → logprob: -3.5181527137756348
    6. ' connected' → logprob: -4.018152713775635
    7. '.' → logprob: -4.268152713775635
    8. ':' → logprob: -4.393152713775635
    9. 'endpoint' → logprob: -4.768152713775635
    10. '           ' → logprob: -4.893152713775635

Token 1064: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1311350017786026
    2. '               ' → logprob: -2.8811349868774414
    3. ' and' → logprob: -4.006134986877441
    4. ' continue' → logprob: -4.881134986877441
    5. ' if' → logprob: -4.881134986877441
    6. ',' → logprob: -5.131134986877441
    7. 'continue' → logprob: -5.381134986877441
    8. ' continues' → logprob: -5.631134986877441
    9. ':' → logprob: -5.756134986877441
    10. '
' → logprob: -6.006134986877441

Token 1065: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05565643310546875
    2. '           ' → logprob: -3.1806564331054688
    3. ' continue' → logprob: -6.055656433105469
    4. ',' → logprob: -6.305656433105469
    5. ' continues' → logprob: -6.430656433105469
    6. ' and' → logprob: -6.805656433105469
    7. 'continue' → logprob: -7.055656433105469
    8. '                   ' → logprob: -7.430656433105469
    9. ':' → logprob: -7.555656433105469
    10. ')' → logprob: -7.680656433105469

Token 1066: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9040558338165283
    2. ' continue' → logprob: -1.4040558338165283
    3. '               ' → logprob: -2.1540558338165283
    4. 'continue' → logprob: -2.1540558338165283
    5. ' if' → logprob: -2.5290558338165283
    6. 'if' → logprob: -4.029055595397949
    7. '   ' → logprob: -5.529055595397949
    8. '#' (adapté à ' #') → logprob: -6.029055595397949
    9. ' continues' → logprob: -6.029055595397949
    10. 'count' → logprob: -6.029055595397949

Token 1067: ' We' (ID: 1416)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8696081042289734
    2. ' if' → logprob: -0.9946081042289734
    3. ' continue' → logprob: -2.369608163833618
    4. 'continue' → logprob: -2.994608163833618
    5. 'if' → logprob: -3.244608163833618
    6. '   ' → logprob: -4.244607925415039
    7. '       ' → logprob: -5.119607925415039
    8. '#' → logprob: -6.369607925415039
    9. '               ' → logprob: -6.994607925415039
    10. ' continues' → logprob: -7.244607925415039

Token 1068: ' check' (ID: 2371)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.7662676572799683
    2. 'continue' → logprob: -0.7662676572799683
    3. ' need' → logprob: -3.266267776489258
    4. 'need' → logprob: -3.766267776489258
    5. ' can' → logprob: -5.266267776489258
    6. ''ll' → logprob: -7.516267776489258
    7. '           ' → logprob: -7.516267776489258
    8. '       ' → logprob: -8.016267776489258
    9. 'can' → logprob: -8.016267776489258
    10. 'cannot' → logprob: -8.266267776489258

Token 1069: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.241268515586853
    2. ' seg' → logprob: -1.616268515586853
    3. ' p' → logprob: -2.6162686347961426
    4. 'if' → logprob: -2.6162686347961426
    5. 'endpoint' → logprob: -2.7412686347961426
    6. ' for' → logprob: -3.2412686347961426
    7. ' len' → logprob: -3.3662686347961426
    8. ' endpoint' → logprob: -3.6162686347961426
    9. 'segments' → logprob: -3.6162686347961426
    10. 'len' → logprob: -3.6162686347961426

Token 1070: ' either' (ID: 4784)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.9412938952445984
    2. 'any' → logprob: -1.8162939548492432
    3. 'len' → logprob: -1.8162939548492432
    4. 'endpoint' → logprob: -1.9412939548492432
    5. 'all' → logprob: -3.066293954849243
    6. 'se' → logprob: -3.316293954849243
    7. '(se' → logprob: -3.816293954849243
    8. '(p' → logprob: -4.816293716430664
    9. '(len' → logprob: -5.316293716430664
    10. 'seg' → logprob: -5.816293716430664

Token 1071: ' endpoint' (ID: 29703)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8124281167984009
    2. 'endpoint' → logprob: -0.9374281167984009
    3. 'len' → logprob: -3.0624279975891113
    4. '(se' → logprob: -3.8124279975891113
    5. 'd' → logprob: -3.8124279975891113
    6. '(endpoint' → logprob: -3.9374279975891113
    7. 'se' → logprob: -4.562427997589111
    8. '(p' → logprob: -4.562427997589111
    9. 'seg' → logprob: -4.687427997589111
    10. '(len' → logprob: -5.312427997589111

Token 1072: ' involved' (ID: 9808)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -1.2575057744979858
    2. 'in' → logprob: -1.3825057744979858
    3. ' in' → logprob: -1.5075057744979858
    4. 's' → logprob: -2.3825058937072754
    5. 'p' → logprob: -3.0075058937072754
    6. ' p' → logprob: -3.7575058937072754
    7. 'not' → logprob: -3.8825058937072754
    8. '1' → logprob: -3.8825058937072754
    9. ' connected' → logprob: -5.132505893707275
    10. '==' → logprob: -5.257505893707275

Token 1073: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.22013863921165466
    2. ' in' → logprob: -2.5951385498046875
    3. 'only' → logprob: -2.5951385498046875
    4. ' only' → logprob: -4.0951385498046875
    5. 'not' → logprob: -5.4701385498046875
    6. '   ' → logprob: -5.4701385498046875
    7. 's' → logprob: -5.5951385498046875
    8. 'p' → logprob: -5.7201385498046875
    9. ' not' → logprob: -5.8451385498046875
    10. '           ' → logprob: -6.2201385498046875

Token 1074: ' multiple' (ID: 7598)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -1.0725502967834473
    2. 'endpoint' → logprob: -1.0725502967834473
    3. 'sign' → logprob: -2.1975502967834473
    4. 'len' → logprob: -2.5725502967834473
    5. '1' → logprob: -2.5725502967834473
    6. 'street' → logprob: -3.6975502967834473
    7. 'seg' → logprob: -4.572550296783447
    8. 'segment' → logprob: -5.572550296783447
    9. 'n' → logprob: -6.197550296783447
    10. ' endpoint' → logprob: -6.822550296783447

Token 1075: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.6581478118896484
    2. 'endpoint' → logprob: -1.5331478118896484
    3. ' segments' → logprob: -1.9081478118896484
    4. '_segments' → logprob: -3.2831478118896484
    5. ' endpoint' → logprob: -4.408147811889648
    6. 's' → logprob: -4.783147811889648
    7. ' for' → logprob: -4.908147811889648
    8. 'for' → logprob: -5.033147811889648
    9. 'segment' → logprob: -5.408147811889648
    10. '           ' → logprob: -5.533147811889648

Token 1076: ' is' (ID: 382)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8951127529144287
    2. '               ' → logprob: -0.8951127529144287
    3. ' and' → logprob: -2.8951127529144287
    4. ' or' → logprob: -3.3951127529144287
    5. ':' → logprob: -4.020112991333008
    6. ':
' → logprob: -4.020112991333008
    7. '<|end|>' → logprob: -4.520112991333008
    8. ')' → logprob: -4.895112991333008
    9. '<|end|>' → logprob: -5.020112991333008
    10. ',' → logprob: -5.145112991333008

Token 1077: ' street' (ID: 12901)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.5952529907226562
    2. 'se' → logprob: -1.8452529907226562
    3. 'any' → logprob: -2.2202529907226562
    4. 'endpoint' → logprob: -2.4702529907226562
    5. '0' → logprob: -2.5952529907226562
    6. ' any' → logprob: -2.9702529907226562
    7. 'sign' → logprob: -3.2202529907226562
    8. 'p' → logprob: -3.2202529907226562
    9. 'seg' → logprob: -3.4702529907226562
    10. ' seg' → logprob: -3.5952529907226562

Token 1078: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06342119723558426
    2. '<|end|>' → logprob: -3.9384212493896484
    3. '       ' → logprob: -4.563421249389648
    4. ' and' → logprob: -5.188421249389648
    5. ' continue' → logprob: -5.438421249389648
    6. ' or' → logprob: -5.938421249389648
    7. '<|end|>' → logprob: -5.938421249389648
    8. ':' → logprob: -6.063421249389648
    9. ' continues' → logprob: -6.188421249389648
    10. '               ' → logprob: -6.313421249389648

Token 1079: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03339727222919464
    2. '           ' → logprob: -4.283397197723389
    3. '                   ' → logprob: -5.533397197723389
    4. ' and' → logprob: -5.658397197723389
    5. '<|end|>' → logprob: -5.658397197723389
    6. '...' → logprob: -6.033397197723389
    7. 'continue' → logprob: -7.033397197723389
    8. ' or' → logprob: -7.283397197723389
    9. '<|end|>' → logprob: -7.283397197723389
    10. '.' → logprob: -7.783397197723389

Token 1080: ' #' (ID: 1069)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.1605770587921143
    2. '           ' → logprob: -1.5355770587921143
    3. 'continue' → logprob: -1.5355770587921143
    4. '               ' → logprob: -1.7855770587921143
    5. ' if' → logprob: -3.2855770587921143
    6. 'if' → logprob: -4.035576820373535
    7. '   ' → logprob: -4.035576820373535
    8. '#' (adapté à ' #') → logprob: -5.660576820373535
    9. ' continues' → logprob: -6.160576820373535
    10. 'count' → logprob: -6.410576820373535

Token 1081: ' Let's' (ID: 41021)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12895724177360535
    2. ' if' → logprob: -2.6289572715759277
    3. '   ' → logprob: -3.8789572715759277
    4. ' continue' → logprob: -5.003957271575928
    5. 'if' → logprob: -5.003957271575928
    6. 'continue' → logprob: -5.378957271575928
    7. '               ' → logprob: -5.503957271575928
    8. '       ' → logprob: -5.753957271575928
    9. ' for' → logprob: -7.253957271575928
    10. '#' → logprob: -7.503957271575928

Token 1082: ' count' (ID: 3605)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.2601339519023895
    2. ' continue' → logprob: -1.510133981704712
    3. '           ' → logprob: -5.260133743286133
    4. '   ' → logprob: -6.135133743286133
    5. '               ' → logprob: -8.385133743286133
    6. '       ' → logprob: -8.510133743286133
    7. '	continue' → logprob: -8.635133743286133
    8. '_continue' → logprob: -9.635133743286133
    9. 'contin' → logprob: -10.635133743286133
    10. 'for' → logprob: -10.885133743286133

Token 1083: ' how' (ID: 1495)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9011874198913574
    2. ' if' → logprob: -1.2761874198913574
    3. 'if' → logprob: -2.2761874198913574
    4. ' for' → logprob: -3.5261874198913574
    5. '   ' → logprob: -3.9011874198913574
    6. '#' → logprob: -4.026187419891357
    7. 'for' → logprob: -4.401187419891357
    8. 'segments' → logprob: -4.401187419891357
    9. ' connected' → logprob: -4.776187419891357
    10. 'count' → logprob: -4.776187419891357

Token 1084: ' many' (ID: 1991)
  Prédit: 'many'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'many' → logprob: -0.7790044546127319
    2. '1' → logprob: -1.029004454612732
    3. '           ' → logprob: -2.6540045738220215
    4. ' many' → logprob: -3.0290045738220215
    5. '   ' → logprob: -4.2790045738220215
    6. '       ' → logprob: -5.1540045738220215
    7. 'for' → logprob: -5.4040045738220215
    8. '            ' → logprob: -5.7790045738220215
    9. 'much' → logprob: -5.7790045738220215
    10. '=' → logprob: -5.7790045738220215

Token 1085: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -1.4717991352081299
    2. 'endpoint' → logprob: -1.8467991352081299
    3. 'for' → logprob: -1.9717991352081299
    4. ' for' → logprob: -2.22179913520813
    5. 'if' → logprob: -2.47179913520813
    6. 'p' → logprob: -2.97179913520813
    7. ' if' → logprob: -3.22179913520813
    8. ' segments' → logprob: -3.47179913520813
    9. ' p' → logprob: -3.97179913520813
    10. ' endpoint' → logprob: -4.096798896789551

Token 1086: ' each' (ID: 2454)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8521214723587036
    2. 'for' → logprob: -1.8521214723587036
    3. 's' → logprob: -2.352121353149414
    4. ' =' → logprob: -2.602121353149414
    5. '=' → logprob: -3.477121353149414
    6. 'endpoint' → logprob: -3.977121353149414
    7. '1' → logprob: -4.102121353149414
    8. ' for' → logprob: -4.102121353149414
    9. '[p' → logprob: -4.102121353149414
    10. 'in' → logprob: -4.227121353149414

Token 1087: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.9932502508163452
    2. 'p' → logprob: -1.9932502508163452
    3. '1' → logprob: -2.4932503700256348
    4. '_segments' → logprob: -2.6182503700256348
    5. 'segments' → logprob: -2.6182503700256348
    6. '_segment' → logprob: -3.8682503700256348
    7. 'segment' → logprob: -3.8682503700256348
    8. '[i' → logprob: -4.118250370025635
    9. 'for' → logprob: -4.118250370025635
    10. '_endpoint' → logprob: -4.243250370025635

Token 1088: ' connected' (ID: 12079)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1089: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5801427364349365
    2. 'for' → logprob: -2.3301427364349365
    3. '<|end|>' → logprob: -2.8301427364349365
    4. ')' → logprob: -2.9551427364349365
    5. 's' → logprob: -3.0801427364349365
    6. ' for' → logprob: -3.2051427364349365
    7. '<|end|>' → logprob: -3.7051427364349365
    8. '...' → logprob: -4.205142974853516
    9. 'p' → logprob: -4.330142974853516
    10. '#' → logprob: -4.705142974853516

Token 1090: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2488861083984375
    2. 'continue' → logprob: -1.6238861083984375
    3. '               ' → logprob: -2.7488861083984375
    4. '...' → logprob: -2.9988861083984375
    5. ' if' → logprob: -3.1238861083984375
    6. 'if' → logprob: -3.2488861083984375
    7. '#' → logprob: -3.3738861083984375
    8. ')' → logprob: -3.4988861083984375
    9. ' for' → logprob: -3.6238861083984375
    10. ' continue' → logprob: -3.8738861083984375

Token 1091: ' and' (ID: 326)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.832758903503418
    2. '           ' → logprob: -1.832758903503418
    3. ' if' → logprob: -1.957758903503418
    4. '<|end|>' → logprob: -2.207758903503418
    5. '<|end|>' → logprob: -2.582758903503418
    6. ' continue' → logprob: -2.707758903503418
    7. ' 
' → logprob: -3.457758903503418
    8. 'continue' → logprob: -3.457758903503418
    9. '...' → logprob: -3.832758903503418
    10. '.' → logprob: -3.957758903503418

Token 1092: ' which' (ID: 1118)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6150451898574829
    2. ' if' → logprob: -1.115045189857483
    3. '           ' → logprob: -3.2400450706481934
    4. ' how' → logprob: -3.9900450706481934
    5. 'continue' → logprob: -4.115045070648193
    6. '#' → logprob: -4.365045070648193
    7. 'for' → logprob: -5.240045070648193
    8. ' continue' → logprob: -5.240045070648193
    9. ' whether' → logprob: -5.365045070648193
    10. ' for' → logprob: -5.490045070648193

Token 1093: ' segments' (ID: 33749)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -1.8478772640228271
    2. '_segments' → logprob: -1.8478772640228271
    3. 's' → logprob: -2.347877264022827
    4. ' if' → logprob: -2.347877264022827
    5. 'if' → logprob: -2.472877264022827
    6. '           ' → logprob: -2.722877264022827
    7. ' segments' → logprob: -2.847877264022827
    8. ')' → logprob: -3.722877264022827
    9. '#' → logprob: -3.847877264022827
    10. '1' → logprob: -3.972877264022827

Token 1094: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.4745157957077026
    2. ':' → logprob: -1.7245157957077026
    3. ':
' → logprob: -1.9745157957077026
    4. ')' → logprob: -2.849515914916992
    5. '[' → logprob: -2.974515914916992
    6. '
' → logprob: -3.099515914916992
    7. ' if' → logprob: -3.224515914916992
    8. '<|end|>' → logprob: -3.849515914916992
    9. '[i' → logprob: -4.099515914916992
    10. ' for' → logprob: -4.099515914916992

Token 1095: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14663191139698029
    2. '               ' → logprob: -3.271631956100464
    3. '<|end|>' → logprob: -3.396631956100464
    4. ' for' → logprob: -4.771631717681885
    5. ' if' → logprob: -4.771631717681885
    6. ')' → logprob: -5.021631717681885
    7. '       ' → logprob: -5.396631717681885
    8. '            ' → logprob: -5.396631717681885
    9. '                   ' → logprob: -5.646631717681885
    10. '[' → logprob: -5.771631717681885

Token 1096: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6972286105155945
    2. '           ' → logprob: -1.1972286701202393
    3. '               ' → logprob: -2.3222286701202393
    4. 'if' → logprob: -3.5722286701202393
    5. ' continue' → logprob: -4.07222843170166
    6. ' for' → logprob: -4.82222843170166
    7. 'continue' → logprob: -4.82222843170166
    8. ' connected' → logprob: -5.69722843170166
    9. '   ' → logprob: -5.69722843170166
    10. ' continues' → logprob: -5.94722843170166

Token 1097: ' The' (ID: 623)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.793232262134552
    2. '           ' → logprob: -1.0432322025299072
    3. ' continue' → logprob: -2.7932322025299072
    4. 'if' → logprob: -2.9182322025299072
    5. 'continue' → logprob: -3.5432322025299072
    6. '   ' → logprob: -3.9182322025299072
    7. '       ' → logprob: -4.418232440948486
    8. ')' → logprob: -5.418232440948486
    9. ' for' → logprob: -5.418232440948486
    10. 'for' → logprob: -6.543232440948486

Token 1098: ' other' (ID: 1273)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.066765546798706
    2. ' if' → logprob: -1.191765546798706
    3. '1' → logprob: -3.191765546798706
    4. '[' → logprob: -3.191765546798706
    5. 'continue' → logprob: -3.316765546798706
    6. '           ' → logprob: -3.316765546798706
    7. ')' → logprob: -3.566765546798706
    8. 'for' → logprob: -4.066765785217285
    9. ' continue' → logprob: -4.441765785217285
    10. ' p' → logprob: -4.566765785217285

Token 1099: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.6339238882064819
    2. ':' → logprob: -1.758923888206482
    3. ' endpoint' → logprob: -2.8839240074157715
    4. '_endpoint' → logprob: -3.1339240074157715
    5. 'side' → logprob: -3.8839240074157715
    6. 'end' → logprob: -3.8839240074157715
    7. 's' → logprob: -4.0089240074157715
    8. '[' → logprob: -4.6339240074157715
    9. '_segments' → logprob: -4.7589240074157715
    10. '=' → logprob: -4.8839240074157715

Token 1100: ' connected' (ID: 12079)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.2281086444854736
    2. 's' → logprob: -1.9781086444854736
    3. ' if' → logprob: -1.9781086444854736
    4. ')' → logprob: -2.7281086444854736
    5. ' in' → logprob: -3.3531086444854736
    6. ',' → logprob: -3.3531086444854736
    7. ']' → logprob: -3.7281086444854736
    8. '[' → logprob: -3.7281086444854736
    9. ' for' → logprob: -3.8531086444854736
    10. 'if' → logprob: -3.8531086444854736

Token 1101: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5655929446220398
    2. 'only' → logprob: -1.5655930042266846
    3. ' to' → logprob: -2.1905930042266846
    4. ' only' → logprob: -3.0655930042266846
    5. 's' → logprob: -4.3155927658081055
    6. '_to' → logprob: -4.4405927658081055
    7. 'in' → logprob: -4.9405927658081055
    8. 'segments' → logprob: -5.3155927658081055
    9. '1' → logprob: -5.6905927658081055
    10. '=' → logprob: -6.0655927658081055

Token 1102: ' at' (ID: 540)
  Prédit: '...'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '...' → logprob: -1.3583176136016846
    2. '1' → logprob: -2.1083176136016846
    3. 'i' → logprob: -2.1083176136016846
    4. 'se' → logprob: -2.2333176136016846
    5. 'sign' → logprob: -2.6083176136016846
    6. 's' → logprob: -2.7333176136016846
    7. 'p' → logprob: -3.1083176136016846
    8. '[' → logprob: -3.2333176136016846
    9. ':' → logprob: -3.8583176136016846
    10. ']' → logprob: -3.8583176136016846

Token 1103: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.0256968941539526
    2. 'most' → logprob: -3.7756969928741455
    3. '1' → logprob: -6.650696754455566
    4. 'le' → logprob: -8.025696754455566
    5. 'i' → logprob: -8.525696754455566
    6. ' least' → logprob: -8.650696754455566
    7. '```' → logprob: -9.525696754455566
    8. 'se' → logprob: -9.775696754455566
    9. 'lease' → logprob: -9.900696754455566
    10. '_le' → logprob: -10.400696754455566

Token 1104: ' one' (ID: 1001)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.07760487496852875
    2. '1' → logprob: -3.4526047706604004
    3. ' least' → logprob: -3.4526047706604004
    4. 'len' → logprob: -5.9526047706604
    5. 'se' → logprob: -6.2026047706604
    6. '2' → logprob: -6.7026047706604
    7. 'le' → logprob: -7.0776047706604
    8. 'list' → logprob: -7.5776047706604
    9. '```' → logprob: -7.8276047706604
    10. '+' → logprob: -8.077605247497559

Token 1105: ' street' (ID: 12901)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6347200870513916
    2. '<|end|>' → logprob: -1.7597200870513916
    3. ' segments' → logprob: -3.0097200870513916
    4. ' connected' → logprob: -3.1347200870513916
    5. '<|end|>' → logprob: -3.1347200870513916
    6. ' )' → logprob: -3.7597200870513916
    7. 'segments' → logprob: -4.2597198486328125
    8. '...' → logprob: -4.3847198486328125
    9. 's' → logprob: -4.6347198486328125
    10. '.' → logprob: -4.7597198486328125

Token 1106: ' segment' (ID: 14806)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9649057388305664
    2. ' and' → logprob: -1.3399057388305664
    3. ':
' → logprob: -1.9649057388305664
    4. ':' → logprob: -2.3399057388305664
    5. ' if' → logprob: -2.9649057388305664
    6. '       ' → logprob: -4.214905738830566
    7. 'and' → logprob: -4.464905738830566
    8. '               ' → logprob: -5.089905738830566
    9. '
' → logprob: -5.214905738830566
    10. ')' → logprob: -5.339905738830566

Token 1107: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3522948920726776
    2. '<|end|>' → logprob: -1.477294921875
    3. '<|end|>' → logprob: -4.352294921875
    4. '       ' → logprob: -4.477294921875
    5. ' if' → logprob: -4.602294921875
    6. ')' → logprob: -4.727294921875
    7. '               ' → logprob: -5.477294921875
    8. ' and' → logprob: -5.727294921875
    9. ' continues' → logprob: -5.852294921875
    10. '...' → logprob: -6.102294921875

Token 1108: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2692430317401886
    2. '               ' → logprob: -2.269243001937866
    3. '<|end|>' → logprob: -2.394243001937866
    4. ' if' → logprob: -4.519243240356445
    5. '       ' → logprob: -5.019243240356445
    6. ' continue' → logprob: -5.394243240356445
    7. '<|end|>' → logprob: -5.644243240356445
    8. ')' → logprob: -5.769243240356445
    9. 'continue' → logprob: -6.019243240356445
    10. ' continues' → logprob: -6.269243240356445

Token 1109: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6800680160522461
    2. ' if' → logprob: -1.305068016052246
    3. ' continue' → logprob: -2.930068016052246
    4. 'if' → logprob: -3.055068016052246
    5. '       ' → logprob: -3.930068016052246
    6. 'continue' → logprob: -3.930068016052246
    7. ' connected' → logprob: -4.055068016052246
    8. ' for' → logprob: -4.555068016052246
    9. '#' (adapté à ' #') → logprob: -4.805068016052246
    10. '               ' → logprob: -4.930068016052246

Token 1110: ' We'll' (ID: 46830)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6973722577095032
    2. '           ' → logprob: -0.9473722577095032
    3. 'if' → logprob: -2.9473721981048584
    4. '       ' → logprob: -3.6973721981048584
    5. '   ' → logprob: -4.3223724365234375
    6. '
' → logprob: -5.1973724365234375
    7. ' continue' → logprob: -5.1973724365234375
    8. 'continue' → logprob: -5.8223724365234375
    9. '               ' → logprob: -6.1973724365234375
    10. ' ' → logprob: -6.9473724365234375

Token 1111: ' defer' (ID: 68973)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.14129497110843658
    2. ' continue' → logprob: -2.3912949562072754
    3. '           ' → logprob: -3.2662949562072754
    4. 'for' → logprob: -7.516294956207275
    5. '       ' → logprob: -8.016295433044434
    6. '   ' → logprob: -8.016295433044434
    7. '_continue' → logprob: -8.766295433044434
    8. ' for' → logprob: -9.016295433044434
    9. '#' → logprob: -9.266295433044434
    10. 'if' → logprob: -9.516295433044434

Token 1112: ' this' (ID: 495)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7412654757499695
    2. ' if' → logprob: -1.6162655353546143
    3. '       ' → logprob: -1.9912655353546143
    4. 'if' → logprob: -3.1162655353546143
    5. ' for' → logprob: -3.2412655353546143
    6. 'continue' → logprob: -3.2412655353546143
    7. ' continue' → logprob: -3.7412655353546143
    8. 'for' → logprob: -3.8662655353546143
    9. '#' → logprob: -4.991265296936035
    10. '...' → logprob: -6.241265296936035

Token 1113: ',' (ID: 11)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1114: ' so' (ID: 813)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5114259123802185
    2. 'continue' → logprob: -1.3864259719848633
    3. '           ' → logprob: -2.2614259719848633
    4. '       ' → logprob: -4.761425971984863
    5. ' ' → logprob: -5.511425971984863
    6. ' i' → logprob: -5.636425971984863
    7. '#' → logprob: -5.636425971984863
    8. '<|end|>' → logprob: -5.636425971984863
    9. '.' → logprob: -6.011425971984863
    10. ' 
' → logprob: -6.136425971984863

Token 1115: ' far' (ID: 4150)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6865561008453369
    2. 'continue' → logprob: -1.186556100845337
    3. '           ' → logprob: -1.686556100845337
    4. '       ' → logprob: -6.061555862426758
    5. ' if' → logprob: -6.811555862426758
    6. ' for' → logprob: -7.936555862426758
    7. '	continue' → logprob: -8.061555862426758
    8. '
' → logprob: -8.186555862426758
    9. 'for' → logprob: -8.561555862426758
    10. ' pass' → logprob: -8.686555862426758

Token 1116: ' treat' (ID: 4665)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.0038964748382568
    2. '<|end|>' → logprob: -1.2538964748382568
    3. ' continue' → logprob: -2.003896474838257
    4. '           ' → logprob: -2.503896474838257
    5. '
' → logprob: -3.253896474838257
    6. 'continue' → logprob: -3.253896474838257
    7. '<|end|>' → logprob: -4.628896713256836
    8. ' continues' → logprob: -4.753896713256836
    9. ' for' → logprob: -5.003896713256836
    10. ' ' → logprob: -5.253896713256836

Token 1117: ' as' (ID: 472)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1586187183856964
    2. 'continue' → logprob: -3.783618688583374
    3. 'd' → logprob: -4.158618927001953
    4. 'inue' → logprob: -4.408618927001953
    5. 'i' → logprob: -4.533618927001953
    6. ':' → logprob: -4.533618927001953
    7. ' ' → logprob: -4.783618927001953
    8. ')' → logprob: -4.908618927001953
    9. ' continue' → logprob: -4.908618927001953
    10. 'sign' → logprob: -5.158618927001953

Token 1118: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.465888649225235
    2. 'street' → logprob: -1.9658886194229126
    3. ' sign' → logprob: -2.215888738632202
    4. ' street' → logprob: -2.215888738632202
    5. 'stre' → logprob: -5.965888500213623
    6. ')' → logprob: -6.215888500213623
    7. ''' → logprob: -6.590888500213623
    8. '"' → logprob: -6.965888500213623
    9. ' ' → logprob: -6.965888500213623
    10. '```' → logprob: -7.465888500213623

Token 1119: ' candidate' (ID: 17098)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5350292325019836
    2. ':' → logprob: -1.2850291728973389
    3. '   ' → logprob: -3.535029172897339
    4. ':
' → logprob: -3.660029172897339
    5. '           ' → logprob: -3.660029172897339
    6. ')' → logprob: -3.785029172897339
    7. '<|end|>' → logprob: -4.535029411315918
    8. '):' → logprob: -5.410029411315918
    9. '
' → logprob: -5.785029411315918
    10. ' if' → logprob: -6.160029411315918

Token 1120: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6174744963645935
    2. '<|end|>' → logprob: -1.2424745559692383
    3. '       ' → logprob: -2.3674745559692383
    4. 'continue' → logprob: -4.117474555969238
    5. ' continue' → logprob: -4.242474555969238
    6. '<|end|>' → logprob: -4.367474555969238
    7. ' if' → logprob: -5.117474555969238
    8. ' continues' → logprob: -5.867474555969238
    9. ')' → logprob: -5.867474555969238
    10. ' ' → logprob: -5.992474555969238

Token 1121: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.043288394808769226
    2. '       ' → logprob: -4.043288230895996
    3. 'continue' → logprob: -4.668288230895996
    4. ' continue' → logprob: -4.793288230895996
    5. '<|end|>' → logprob: -6.418288230895996
    6. '   ' → logprob: -6.543288230895996
    7. ' if' → logprob: -6.793288230895996
    8. '               ' → logprob: -7.293288230895996
    9. '
' → logprob: -8.293288230895996
    10. 'Continue' → logprob: -8.418288230895996

Token 1122: ' sign' (ID: 2232)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5407502055168152
    2. ' continue' → logprob: -1.41575026512146
    3. 'continue' → logprob: -2.16575026512146
    4. ' if' → logprob: -3.29075026512146
    5. '       ' → logprob: -5.040750026702881
    6. '               ' → logprob: -5.290750026702881
    7. 'if' → logprob: -5.665750026702881
    8. '   ' → logprob: -6.040750026702881
    9. ' pass' → logprob: -6.915750026702881
    10. ' sign' → logprob: -6.915750026702881

Token 1123: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.0006729974993504584
    2. '_' → logprob: -7.375672817230225
    3. 'Segments' → logprob: -11.375673294067383
    4. 'segments' → logprob: -12.125673294067383
    5. '.' → logprob: -12.375673294067383
    6. 's' → logprob: -12.625673294067383
    7. ' _' → logprob: -12.750673294067383
    8. '```' → logprob: -12.875673294067383
    9. '_tokens' → logprob: -13.000673294067383
    10. ')_' → logprob: -13.125673294067383

Token 1124: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0004320996522437781
    2. '.' → logprob: -7.750432014465332
    3. ' .' → logprob: -14.750432014465332
    4. '.append' → logprob: -14.875432014465332
    5. '.update' → logprob: -15.375432014465332
    6. '.dis' → logprob: -16.87543296813965
    7. '.setdefault' → logprob: -16.87543296813965
    8. '.remove' → logprob: -17.25043296813965
    9. '.Add' → logprob: -17.37543296813965
    10. 'add' → logprob: -17.62543296813965

Token 1125: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.0280383548888494e-06
    2. '((' → logprob: -14.125000953674316
    3. '(' → logprob: -15.625000953674316
    4. 'i' → logprob: -18.000001907348633
    5. ' (' → logprob: -20.000001907348633
    6. '{i' → logprob: -20.500001907348633
    7. '(sign' → logprob: -20.625001907348633
    8. '(s' → logprob: -20.875001907348633
    9. '(
' → logprob: -21.000001907348633
    10. '(I' → logprob: -21.500001907348633

Token 1126: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.198043699143454e-05
    2. ')
' → logprob: -9.625091552734375
    3. ' )' → logprob: -11.125091552734375
    4. '<|end|>' → logprob: -12.250091552734375
    5. '       ' → logprob: -12.875091552734375
    6. '}' → logprob: -14.000091552734375
    7. ')}' → logprob: -14.250091552734375
    8. '           ' → logprob: -14.750091552734375
    9. '   ' → logprob: -15.125091552734375
    10. '
' → logprob: -15.250091552734375

Token 1127: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.489327609539032
    2. '<|end|>' → logprob: -1.7393276691436768
    3. 'else' → logprob: -1.9893276691436768
    4. ' else' → logprob: -3.4893276691436768
    5. 'continue' → logprob: -3.8643276691436768
    6. '           ' → logprob: -4.489327430725098
    7. '<|end|>' → logprob: -5.864327430725098
    8. ' continue' → logprob: -6.114327430725098
    9. '
' → logprob: -6.614327430725098
    10. 'elif' → logprob: -7.239327430725098

Token 1128: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.8998807072639465
    2. '       ' → logprob: -1.0248806476593018
    3. ' else' → logprob: -1.6498806476593018
    4. 'continue' → logprob: -4.024880886077881
    5. '           ' → logprob: -5.149880886077881
    6. ' continue' → logprob: -5.524880886077881
    7. ' ' → logprob: -5.899880886077881
    8. '        ' → logprob: -5.899880886077881
    9. '<|end|>' → logprob: -5.899880886077881
    10. 'elif' → logprob: -6.774880886077881

Token 1129: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20228232443332672
    2. ':
' → logprob: -1.7022823095321655
    3. 'if' → logprob: -8.702281951904297
    4. ' if' → logprob: -8.702281951904297
    5. '[' → logprob: -8.827281951904297
    6. '           ' → logprob: -9.077281951904297
    7. '{' → logprob: -9.327281951904297
    8. ',' → logprob: -9.952281951904297
    9. '       ' → logprob: -10.202281951904297
    10. '   ' → logprob: -10.202281951904297

Token 1130: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6079355478286743
    2. 'street' → logprob: -0.8579355478286743
    3. '       ' → logprob: -3.7329354286193848
    4. '               ' → logprob: -5.357935428619385
    5. '   ' → logprob: -6.482935428619385
    6. ' street' → logprob: -7.357935428619385
    7. 'stre' → logprob: -8.107935905456543
    8. 'if' → logprob: -9.482935905456543
    9. '```' → logprob: -9.482935905456543
    10. 'st' → logprob: -10.107935905456543

Token 1131: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' (adapté à ' street') → logprob: -0.00020115631923545152
    2. ' street' → logprob: -9.875201225280762
    3. '           ' → logprob: -10.000201225280762
    4. '   ' → logprob: -10.000201225280762
    5. '               ' → logprob: -10.500201225280762
    6. '       ' → logprob: -10.875201225280762
    7. 'stre' → logprob: -11.500201225280762
    8. 'st' → logprob: -14.375201225280762
    9. 'stroke' → logprob: -14.500201225280762
    10. ' ' → logprob: -14.750201225280762

Token 1132: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.0011746286181733012
    2. '_' → logprob: -6.751174449920654
    3. ' _' → logprob: -13.626174926757812
    4. '_
' → logprob: -13.876174926757812
    5. '```' → logprob: -14.501174926757812
    6. 's' → logprob: -14.626174926757812
    7. '
' → logprob: -15.626174926757812
    8. 'Segments' → logprob: -15.876174926757812
    9. '_s' → logprob: -16.001174926757812
    10. 'segments' → logprob: -16.126174926757812

Token 1133: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0019297054968774319
    2. '.' → logprob: -6.251929759979248
    3. ' .' → logprob: -14.12692928314209
    4. '.update' → logprob: -16.501930236816406
    5. '.Add' → logprob: -16.501930236816406
    6. '.append' → logprob: -17.126930236816406
    7. 'add' → logprob: -17.376930236816406
    8. '.dis' → logprob: -17.626930236816406
    9. '.remove' → logprob: -17.751930236816406
    10. '.
' → logprob: -18.251930236816406

Token 1134: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0007272057700902224
    2. 'i' → logprob: -7.25072717666626
    3. '(' → logprob: -11.000727653503418
    4. ' (' → logprob: -15.250727653503418
    5. '(
' → logprob: -15.375727653503418
    6. ' i' → logprob: -16.2507266998291
    7. '	i' → logprob: -19.5007266998291
    8. '((' → logprob: -21.8757266998291
    9. '{i' → logprob: -22.1257266998291
    10. 's' → logprob: -22.2507266998291

Token 1135: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9623810658231378e-05
    2. ')
' → logprob: -11.375020027160645
    3. ' )' → logprob: -12.000020027160645
    4. '<|end|>' → logprob: -13.875020027160645
    5. '),' → logprob: -15.625020027160645
    6. '   ' → logprob: -15.875020027160645
    7. '       ' → logprob: -16.375019073486328
    8. '}' → logprob: -16.375019073486328
    9. ')}' → logprob: -16.750019073486328
    10. '[' → logprob: -16.875019073486328

Token 1136: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1137: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12438609451055527
    2. '<|end|>' → logprob: -3.1243860721588135
    3. '       ' → logprob: -3.3743860721588135
    4. '\n' → logprob: -4.749386310577393
    5. '    
' → logprob: -4.999386310577393
    6. '        
' → logprob: -5.124386310577393
    7. ' 
' → logprob: -5.124386310577393
    8. '   ' → logprob: -5.749386310577393
    9. '<|end|>' → logprob: -6.374386310577393
    10. '  
' → logprob: -6.499386310577393

Token 1138: ' There' (ID: 3274)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07202266156673431
    2. '
' → logprob: -3.3220226764678955
    3. '        
' → logprob: -3.8220226764678955
    4. 'for' → logprob: -6.197022438049316
    5. ' for' → logprob: -6.322022438049316
    6. '  
' → logprob: -6.822022438049316
    7. '    
' → logprob: -6.822022438049316
    8. ' 
' → logprob: -6.947022438049316
    9. '   ' → logprob: -7.072022438049316
    10. '<|end|>' → logprob: -7.197022438049316

Token 1139: ' could' (ID: 2023)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.3135449886322021
    2. ''s' → logprob: -1.5635449886322021
    3. '.' → logprob: -1.6885449886322021
    4. ' is' → logprob: -1.8135449886322021
    5. ' =' → logprob: -3.063544988632202
    6. '[' → logprob: -3.438544988632202
    7. ''' → logprob: -3.813544988632202
    8. '_' → logprob: -4.063545227050781
    9. '```' → logprob: -5.063545227050781
    10. ' for' → logprob: -5.188545227050781

Token 1140: ' be' (ID: 413)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.7574894428253174
    2. 'continue' → logprob: -1.7574894428253174
    3. ' continue' → logprob: -1.8824894428253174
    4. ' be' → logprob: -2.0074894428253174
    5. ''s' → logprob: -2.8824894428253174
    6. '    ' → logprob: -3.0074894428253174
    7. '=' → logprob: -3.2574894428253174
    8. 'for' → logprob: -3.6324894428253174
    9. ' =' → logprob: -3.6324894428253174
    10. '  ' → logprob: -3.6324894428253174

Token 1141: ' signs' (ID: 17424)
  Prédit: 'more'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'more' → logprob: -0.3280714154243469
    2. ' more' → logprob: -1.9530713558197021
    3. 'some' → logprob: -3.328071355819702
    4. 'duplicates' → logprob: -3.578071355819702
    5. 'conf' → logprob: -4.828071594238281
    6. ' some' → logprob: -4.953071594238281
    7. 'a' → logprob: -5.078071594238281
    8. 'segments' → logprob: -5.453071594238281
    9. ' duplicates' → logprob: -5.453071594238281
    10. 'cases' → logprob: -5.703071594238281

Token 1142: ' with' (ID: 483)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1143: ' endpoints' (ID: 76454)
  Prédit: ' endpoints'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' endpoints' → logprob: -1.1312506198883057
    2. 'both' → logprob: -1.8812506198883057
    3. 'one' → logprob: -2.0062506198883057
    4. ' both' → logprob: -2.1312506198883057
    5. ' one' → logprob: -2.3812506198883057
    6. 'd' → logprob: -3.0062506198883057
    7. 'degree' → logprob: -3.7562506198883057
    8. ' more' → logprob: -4.631250381469727
    9. ' d' → logprob: -4.631250381469727
    10. ' exactly' → logprob: -4.756250381469727

Token 1144: ' both' (ID: 2973)
  Prédit: ' with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' with' → logprob: -1.159188985824585
    2. ' connected' → logprob: -1.784188985824585
    3. '<|end|>' → logprob: -1.909188985824585
    4. 'with' → logprob: -2.034188985824585
    5. ' that' → logprob: -3.034188985824585
    6. ',' → logprob: -3.284188985824585
    7. 'connected' → logprob: -3.409188985824585
    8. ' in' → logprob: -3.784188985824585
    9. '_connected' → logprob: -3.909188985824585
    10. ' =' → logprob: -4.659189224243164

Token 1145: ' degree' (ID: 9882)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.5474618673324585
    2. ' connected' → logprob: -1.6724618673324585
    3. 'connected' → logprob: -2.172461986541748
    4. '_connected' → logprob: -2.422461986541748
    5. ' with' → logprob: -2.547461986541748
    6. 'in' → logprob: -2.922461986541748
    7. ')' → logprob: -3.172461986541748
    8. 'with' → logprob: -3.422461986541748
    9. '_' → logprob: -3.672461986541748
    10. '[' → logprob: -3.797461986541748

Token 1146: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08617014437913895
    2. '==' → logprob: -2.961170196533203
    3. '1' → logprob: -4.461170196533203
    4. '>=' → logprob: -4.836170196533203
    5. '>' → logprob: -4.961170196533203
    6. ' =' → logprob: -6.336170196533203
    7. ' ' → logprob: -6.961170196533203
    8. '≥' → logprob: -7.711170196533203
    9. ' ==' → logprob: -8.086170196533203
    10. '0' → logprob: -9.086170196533203

Token 1147: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00030114251421764493
    2. ' ' → logprob: -8.500301361083984
    3. '0' → logprob: -10.125301361083984
    4. '2' → logprob: -10.625301361083984
    5. '>' → logprob: -10.875301361083984
    6. '```' → logprob: -12.375301361083984
    7. '=' → logprob: -12.500301361083984
    8. '
' → logprob: -13.687801361083984
    9. '<|end|>' → logprob: -14.437801361083984
    10. '==' → logprob: -14.875301361083984

Token 1148: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.06332889199256897
    2. '<|end|>' → logprob: -3.313328981399536
    3. '       ' → logprob: -3.938328981399536
    4. '        
' → logprob: -6.188328742980957
    5. '<|end|>' → logprob: -6.938328742980957
    6. '  
' → logprob: -7.563328742980957
    7. '    
' → logprob: -7.563328742980957
    8. '\n' → logprob: -7.688328742980957
    9. '   ' → logprob: -9.063328742980957
    10. '
' → logprob: -9.188328742980957

Token 1149: ' but' (ID: 889)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8357893824577332
    2. '       ' → logprob: -1.585789442062378
    3. ' but' → logprob: -2.835789442062378
    4. 'continue' → logprob: -2.835789442062378
    5. ' 
' → logprob: -2.960789442062378
    6. ' ' → logprob: -3.085789442062378
    7. '<|end|>' → logprob: -3.460789442062378
    8. '        
' → logprob: -3.710789442062378
    9. ':' → logprob: -4.085789203643799
    10. '        ' → logprob: -4.835789203643799

Token 1150: ' then' (ID: 1815)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6812176704406738
    2. '       ' → logprob: -1.3062176704406738
    3. 'continue' → logprob: -1.9312176704406738
    4. '#' → logprob: -4.306217670440674
    5. '   ' → logprob: -4.681217670440674
    6. ' #' → logprob: -4.806217670440674
    7. '           ' → logprob: -4.931217670440674
    8. ' ' → logprob: -5.056217670440674
    9. ' if' → logprob: -5.306217670440674
    10. ' continues' → logprob: -5.681217670440674

Token 1151: ' to' (ID: 316)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.3299928605556488
    2. '       ' → logprob: -3.0799927711486816
    3. 'continue' → logprob: -3.2049927711486816
    4. ' #' → logprob: -3.2049927711486816
    5. ' for' → logprob: -3.5799927711486816
    6. '#' → logprob: -3.7049927711486816
    7. ' if' → logprob: -3.8299927711486816
    8. '
' → logprob: -4.329992771148682
    9. ' ' → logprob: -4.329992771148682
    10. '   ' → logprob: -4.829992771148682

Token 1152: ' identify' (ID: 11410)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.21746563911437988
    2. ' continue' → logprob: -1.9674656391143799
    3. '
' → logprob: -3.96746563911438
    4. 'remove' → logprob: -4.842465400695801
    5. '#' → logprob: -5.342465400695801
    6. 'det' → logprob: -5.592465400695801
    7. 'check' → logprob: -6.467465400695801
    8. 'validate' → logprob: -6.592465400695801
    9. 'exclude' → logprob: -6.717465400695801
    10. '_continue' → logprob: -6.717465400695801

Token 1153: ' which' (ID: 1118)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5808807611465454
    2. 'street' → logprob: -1.8308807611465454
    3. 'which' → logprob: -2.330880641937256
    4. 'stre' → logprob: -2.455880641937256
    5. 'whether' → logprob: -3.080880641937256
    6. 'sign' → logprob: -3.830880641937256
    7. '#' → logprob: -4.330880641937256
    8. ' if' → logprob: -5.205880641937256
    9. ' which' → logprob: -6.330880641937256
    10. 'the' → logprob: -6.830880641937256

Token 1154: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1155: ' hanging' (ID: 30482)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.026953361928462982
    2. 'sign' → logprob: -4.026953220367432
    3. ' street' → logprob: -5.776953220367432
    4. 'a' → logprob: -6.026953220367432
    5. 'open' → logprob: -7.151953220367432
    6. '```' → logprob: -7.401953220367432
    7. '   ' → logprob: -7.651953220367432
    8. 'connected' → logprob: -8.15195369720459
    9. 'stre' → logprob: -8.65195369720459
    10. 'the' → logprob: -8.77695369720459

Token 1156: ' endpoint' (ID: 29703)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6105550527572632
    2. '       ' → logprob: -1.8605550527572632
    3. ':' → logprob: -2.8605551719665527
    4. ',
' → logprob: -3.1105551719665527
    5. ' and' → logprob: -3.2355551719665527
    6. ':
' → logprob: -3.4855551719665527
    7. '   ' → logprob: -3.4855551719665527
    8. 'else' → logprob: -3.6105551719665527
    9. ' else' → logprob: -4.735555171966553
    10. 'and' → logprob: -4.735555171966553

Token 1157: ':
' (ID: 734)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.22532831132411957
    2. '       ' → logprob: -1.7253283262252808
    3. '        
' → logprob: -4.97532844543457
    4. ' for' → logprob: -5.22532844543457
    5. '<|end|>' → logprob: -5.35032844543457
    6. 'for' → logprob: -5.97532844543457
    7. '#' → logprob: -7.10032844543457
    8. '    
' → logprob: -7.35032844543457
    9. '   ' → logprob: -7.85032844543457
    10. ' 
' → logprob: -7.97532844543457

Token 1158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2574264705181122
    2. ' for' → logprob: -1.7574265003204346
    3. ' continue' → logprob: -3.7574265003204346
    4. 'for' → logprob: -5.1324262619018555
    5. 'continue' → logprob: -5.2574262619018555
    6. '<|end|>' → logprob: -5.3824262619018555
    7. '        
' → logprob: -5.7574262619018555
    8. '#' → logprob: -6.0074262619018555
    9. ' if' → logprob: -6.1324262619018555
    10. '           ' → logprob: -6.2574262619018555

Token 1159: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022015010938048363
    2. ' for' → logprob: -4.27201509475708
    3. '#' (adapté à ' #') → logprob: -6.14701509475708
    4. '
' → logprob: -6.27201509475708
    5. 'for' → logprob: -6.77201509475708
    6. ' continue' → logprob: -7.27201509475708
    7. '        
' → logprob: -7.39701509475708
    8. 'continue' → logprob: -8.272014617919922
    9. '           ' → logprob: -8.397014617919922
    10. ' #' → logprob: -8.397014617919922

Token 1160: ' Re' (ID: 907)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3784262537956238
    2. 'for' → logprob: -2.0034263134002686
    3. ' for' → logprob: -2.1284263134002686
    4. '#' → logprob: -3.5034263134002686
    5. '
' → logprob: -4.0034260749816895
    6. '        
' → logprob: -5.3784260749816895
    7. ' #' → logprob: -5.8784260749816895
    8. '   ' → logprob: -6.5034260749816895
    9. 'continue' → logprob: -7.0034260749816895
    10. ' continue' → logprob: -7.3784260749816895

Token 1161: 'assign' (ID: 14297)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.711181640625
    2. 'm' → logprob: -1.211181640625
    3. 'st' → logprob: -2.711181640625
    4. 'mainder' → logprob: -2.711181640625
    5. 'turn' → logprob: -2.836181640625
    6. 'move' → logprob: -5.461181640625
    7. 'fine' → logprob: -5.836181640625
    8. '#' → logprob: -5.836181640625
    9. 'f' → logprob: -6.336181640625
    10. 'store' → logprob: -6.336181640625

Token 1162: ' sign' (ID: 2232)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8533058762550354
    2. 'for' → logprob: -1.3533058166503906
    3. '       ' → logprob: -1.8533058166503906
    4. '
' → logprob: -2.8533058166503906
    5. ' 
' → logprob: -3.7283058166503906
    6. '<|end|>' → logprob: -3.8533058166503906
    7. ' ' → logprob: -4.353305816650391
    8. '        
' → logprob: -4.353305816650391
    9. '        ' → logprob: -4.603305816650391
    10. '#' → logprob: -5.228305816650391

Token 1163: ' segments' (ID: 33749)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.14155834913253784
    2. 's' → logprob: -2.1415584087371826
    3. '_s' → logprob: -5.0165581703186035
    4. '_' → logprob: -5.1415581703186035
    5. 'ments' → logprob: -8.016558647155762
    6. '
' → logprob: -8.266558647155762
    7. '       ' → logprob: -8.641558647155762
    8. '```' → logprob: -8.766558647155762
    9. 'for' → logprob: -9.141558647155762
    10. 'Segments' → logprob: -9.266558647155762

Token 1164: ' correctly' (ID: 20323)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09699176996946335
    2. 'for' → logprob: -2.971991777420044
    3. ' for' → logprob: -3.221991777420044
    4. '
' → logprob: -7.846991539001465
    5. '        
' → logprob: -8.221991539001465
    6. '#' → logprob: -8.721991539001465
    7. '   ' → logprob: -8.846991539001465
    8. ',' → logprob: -9.096991539001465
    9. '           ' → logprob: -9.471991539001465
    10. '```' → logprob: -9.721991539001465

Token 1165: ':
' (ID: 734)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8464511036872864
    2. '       ' → logprob: -0.8464511036872864
    3. ' for' → logprob: -2.4714510440826416
    4. 'for' → logprob: -3.0964510440826416
    5. '        
' → logprob: -4.721451282501221
    6. '   ' → logprob: -6.971451282501221
    7. '#' → logprob: -7.346451282501221
    8. '```' → logprob: -7.846451282501221
    9. ' 
' → logprob: -8.096450805664062
    10. '    
' → logprob: -8.346450805664062

Token 1166: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0478188693523407
    2. ' for' → logprob: -3.172818899154663
    3. 'for' → logprob: -5.797818660736084
    4. '
' → logprob: -7.047818660736084
    5. '   ' → logprob: -7.422818660736084
    6. '        
' → logprob: -8.547819137573242
    7. '```' → logprob: -10.047819137573242
    8. '           ' → logprob: -10.797819137573242
    9. '    
' → logprob: -10.922819137573242
    10. ',' → logprob: -11.922819137573242

Token 1167: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.540669858455658
    2. '       ' → logprob: -0.915669858455658
    3. 'for' → logprob: -4.415669918060303
    4. '
' → logprob: -5.665669918060303
    5. '        
' → logprob: -6.790669918060303
    6. '   ' → logprob: -8.915669441223145
    7. '```' → logprob: -8.915669441223145
    8. '        ' → logprob: -9.165669441223145
    9. '           ' → logprob: -9.915669441223145
    10. '#' (adapté à ' #') → logprob: -10.040669441223145

Token 1168: ' Actually' (ID: 50557)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.21614186465740204
    2. ' for' → logprob: -2.091141939163208
    3. '       ' → logprob: -2.841141939163208
    4. '#' → logprob: -4.716141700744629
    5. ' #' → logprob: -6.716141700744629
    6. 'visited' → logprob: -7.216141700744629
    7. '   ' → logprob: -8.216141700744629
    8. 'used' → logprob: -9.091141700744629
    9. 'sign' → logprob: -9.341141700744629
    10. 'points' → logprob: -9.466141700744629

Token 1169: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.21982580423355103
    2. 'for' → logprob: -1.9698257446289062
    3. '       ' → logprob: -2.9698257446289062
    4. ' #' → logprob: -6.469825744628906
    5. ' street' → logprob: -6.719825744628906
    6. '
' → logprob: -6.844825744628906
    7. ' continue' → logprob: -6.969825744628906
    8. '#' → logprob: -7.469825744628906
    9. '        ' → logprob: -8.219825744628906
    10. 'continue' → logprob: -8.594825744628906

Token 1170: ' problem' (ID: 4792)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07541245967149734
    2. ' for' → logprob: -2.9504125118255615
    3. '#' → logprob: -4.075412273406982
    4. '       ' → logprob: -5.950412273406982
    5. '
' → logprob: -8.45041275024414
    6. 'street' → logprob: -8.45041275024414
    7. ' #' → logprob: -8.82541275024414
    8. ' street' → logprob: -9.82541275024414
    9. 'sign' → logprob: -10.32541275024414
    10. '           ' → logprob: -11.45041275024414

Token 1171: ' says' (ID: 5003)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -2.1369361877441406
    2. '   ' → logprob: -2.1369361877441406
    3. ':' → logprob: -2.2619361877441406
    4. '_segments' → logprob: -2.2619361877441406
    5. 'for' → logprob: -2.5119361877441406
    6. '[
' → logprob: -2.6369361877441406
    7. '
' → logprob: -3.0119361877441406
    8. '       ' → logprob: -3.0119361877441406
    9. ' for' → logprob: -3.1369361877441406
    10. '<|end|>' → logprob: -3.6369361877441406

Token 1172: ':' (ID: 25)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.766785740852356
    2. '       ' → logprob: -1.016785740852356
    3. 'for' → logprob: -2.0167856216430664
    4. '
' → logprob: -4.141785621643066
    5. ' if' → logprob: -5.266785621643066
    6. '           ' → logprob: -5.641785621643066
    7. '        
' → logprob: -5.766785621643066
    8. ' continue' → logprob: -6.141785621643066
    9. '#' → logprob: -6.266785621643066
    10. '        ' → logprob: -6.891785621643066

Token 1173: ' end' (ID: 1268)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.24067281186580658
    2. 'for' → logprob: -2.2406728267669678
    3. '       ' → logprob: -2.3656728267669678
    4. '#' → logprob: -5.490672588348389
    5. ' #' → logprob: -5.740672588348389
    6. '
' → logprob: -5.990672588348389
    7. ' continue' → logprob: -6.490672588348389
    8. '```' → logprob: -7.240672588348389
    9. 'continue' → logprob: -8.115673065185547
    10. ' if' → logprob: -8.365673065185547

Token 1174: ' point' (ID: 2438)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.6172164082527161
    2. 'point' → logprob: -1.2422163486480713
    3. 'p' → logprob: -2.4922163486480713
    4. 's' → logprob: -3.4922163486480713
    5. '#' → logprob: -3.7422163486480713
    6. '
' → logprob: -5.11721658706665
    7. 'if' → logprob: -5.49221658706665
    8. '.' → logprob: -5.49221658706665
    9. ')' → logprob: -5.61721658706665
    10. '_' → logprob: -5.74221658706665

Token 1175: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.1451116800308228
    2. '_segments' → logprob: -1.1451116800308228
    3. '<|end|>' → logprob: -2.895111560821533
    4. '_' → logprob: -2.895111560821533
    5. '=' → logprob: -3.145111560821533
    6. '#' → logprob: -3.395111560821533
    7. ':' → logprob: -3.770111560821533
    8. '[' → logprob: -4.270111560821533
    9. ')' → logprob: -4.270111560821533
    10. '
' → logprob: -4.395111560821533

Token 1176: ' a' (ID: 261)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.6164224147796631
    2. 'segment' → logprob: -1.991422414779663
    3. 'line' → logprob: -2.366422414779663
    4. 'a' → logprob: -2.741422414779663
    5. 'segments' → logprob: -3.616422414779663
    6. 'the' → logprob: -3.741422414779663
    7. 'street' → logprob: -3.866422414779663
    8. 'degree' → logprob: -3.991422414779663
    9. ' line' → logprob: -4.741422653198242
    10. ' a' → logprob: -4.866422653198242

Token 1177: ' sign' (ID: 2232)
  Prédit: 'segment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -0.8567334413528442
    2. 'sign' → logprob: -1.3567334413528442
    3. ' segment' → logprob: -2.3567333221435547
    4. 'line' → logprob: -2.9817333221435547
    5. ' line' → logprob: -3.1067333221435547
    6. ' sign' → logprob: -3.4817333221435547
    7. 's' → logprob: -3.8567333221435547
    8. 'street' → logprob: -4.356733322143555
    9. ' street' → logprob: -4.481733322143555
    10. '#' → logprob: -4.481733322143555

Token 1178: ' touches' (ID: 45060)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.6725174188613892
    2. '[' → logprob: -2.0475172996520996
    3. '       ' → logprob: -2.0475172996520996
    4. ':' → logprob: -2.1725172996520996
    5. '   ' → logprob: -2.5475172996520996
    6. ')' → logprob: -2.6725172996520996
    7. '[
' → logprob: -3.5475172996520996
    8. ',' → logprob: -3.9225172996520996
    9. ')
' → logprob: -4.0475172996521
    10. '[p' → logprob: -4.2975172996521

Token 1179: ' one' (ID: 1001)
  Prédit: ' exactly'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exactly' → logprob: -0.8618142604827881
    2. ' only' → logprob: -1.486814260482788
    3. ' a' → logprob: -2.361814260482788
    4. 'only' → logprob: -2.611814260482788
    5. ' the' → logprob: -2.986814260482788
    6. 'a' → logprob: -3.236814260482788
    7. 'the' → logprob: -3.361814260482788
    8. ' one' → logprob: -3.736814260482788
    9. 'exact' → logprob: -4.736814498901367
    10. 'one' → logprob: -5.236814498901367

Token 1180: ' and' (ID: 326)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8577959537506104
    2. ')' → logprob: -1.9827959537506104
    3. '_' → logprob: -2.6077959537506104
    4. ' ' → logprob: -3.2327959537506104
    5. '_segment' → logprob: -3.2327959537506104
    6. 'segment' → logprob: -3.4827959537506104
    7. ' segment' → logprob: -3.7327959537506104
    8. '   ' → logprob: -3.8577959537506104
    9. '       ' → logprob: -3.8577959537506104
    10. ',' → logprob: -4.107795715332031

Token 1181: ' only' (ID: 1606)
  Prédit: 'only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'only' → logprob: -0.22739169001579285
    2. ' only' → logprob: -1.6023917198181152
    3. 'one' → logprob: -6.977391719818115
    4. ' ' → logprob: -7.602391719818115
    5. ' one' → logprob: -8.977391242980957
    6. '
' → logprob: -8.977391242980957
    7. '_only' → logprob: -9.227391242980957
    8. '_' → logprob: -9.852391242980957
    9. ' ' → logprob: -10.852391242980957
    10. '   ' → logprob: -10.977391242980957

Token 1182: ' one' (ID: 1001)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.6964459419250488
    2. 'one' → logprob: -1.9464459419250488
    3. 'segment' → logprob: -1.9464459419250488
    4. 'sign' → logprob: -3.321445941925049
    5. '```' → logprob: -3.321445941925049
    6. ' street' → logprob: -3.446445941925049
    7. 'street' → logprob: -3.821445941925049
    8. ' ' → logprob: -3.821445941925049
    9. ' one' → logprob: -4.196445941925049
    10. 'exact' → logprob: -4.321445941925049

Token 1183: ' street' (ID: 12901)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3690305948257446
    2. '
' → logprob: -1.7440305948257446
    3. '_segments' → logprob: -1.9940305948257446
    4. ')' → logprob: -2.119030475616455
    5. '_segment' → logprob: -2.869030475616455
    6. ' ' → logprob: -3.494030475616455
    7. '_' → logprob: -3.744030475616455
    8. '_se' → logprob: -4.119030475616455
    9. 'segment' → logprob: -4.244030475616455
    10. '   ' → logprob: -4.244030475616455

Token 1184: ' segment' (ID: 14806)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40194031596183777
    2. '
' → logprob: -1.1519403457641602
    3. ' for' → logprob: -5.02694034576416
    4. '        
' → logprob: -5.52694034576416
    5. '<|end|>' → logprob: -6.02694034576416
    6. 'for' → logprob: -6.77694034576416
    7. '<|end|>' → logprob: -8.90194034576416
    8. '   ' → logprob: -8.90194034576416
    9. ',' → logprob: -9.40194034576416
    10. '#' → logprob: -9.65194034576416

Token 1185: ' and' (ID: 326)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3354518711566925
    2. '       ' → logprob: -1.3354518413543701
    3. ' for' → logprob: -5.085452079772949
    4. '        
' → logprob: -5.210452079772949
    5. '<|end|>' → logprob: -5.585452079772949
    6. 'for' → logprob: -5.960452079772949
    7. '  
' → logprob: -6.960452079772949
    8. ')
' → logprob: -7.835452079772949
    9. '   ' → logprob: -8.08545207977295
    10. ' 
' → logprob: -8.21045207977295

Token 1186: ' other' (ID: 1273)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.48614826798439026
    2. 'the' → logprob: -1.9861482381820679
    3. ' other' → logprob: -2.4861483573913574
    4. ' another' → logprob: -2.6111483573913574
    5. ' one' → logprob: -3.6111483573913574
    6. 'other' → logprob: -4.111148357391357
    7. 'another' → logprob: -4.236148357391357
    8. ' has' → logprob: -4.986148357391357
    9. ' both' → logprob: -5.486148357391357
    10. ' is' → logprob: -5.486148357391357

Token 1187: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.48667749762535095
    2. ' endpoint' → logprob: -1.3616775274276733
    3. '_endpoint' → logprob: -2.986677408218384
    4. ')' → logprob: -3.611677408218384
    5. 'end' → logprob: -4.861677646636963
    6. '<|end|>' → logprob: -4.986677646636963
    7. ':' → logprob: -5.611677646636963
    8. '_' → logprob: -5.611677646636963
    9. '_end' → logprob: -5.861677646636963
    10. '   ' → logprob: -6.111677646636963

Token 1188: ' is' (ID: 382)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22518137097358704
    2. '
' → logprob: -1.7251813411712646
    3. '        
' → logprob: -4.225181579589844
    4. ' for' → logprob: -6.225181579589844
    5. '<|end|>' → logprob: -6.225181579589844
    6. 'for' → logprob: -6.850181579589844
    7. ',' → logprob: -7.350181579589844
    8. '  
' → logprob: -7.475181579589844
    9. ')' → logprob: -7.600181579589844
    10. '#' → logprob: -8.475181579589844

Token 1189: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.607627809047699
    2. ' open' → logprob: -0.857627809047699
    3. ' unique' → logprob: -4.107627868652344
    4. 'unique' → logprob: -4.982627868652344
    5. '"' → logprob: -5.982627868652344
    6. ' an' → logprob: -7.607627868652344
    7. 'an' → logprob: -7.607627868652344
    8. ''' → logprob: -7.607627868652344
    9. ' hanging' → logprob: -7.607627868652344
    10. '0' → logprob: -8.107627868652344

Token 1190: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09293821454048157
    2. '
' → logprob: -2.467938184738159
    3. ' for' → logprob: -6.467938423156738
    4. 'for' → logprob: -6.592938423156738
    5. '        
' → logprob: -7.342938423156738
    6. '<|end|>' → logprob: -8.467938423156738
    7. '#' → logprob: -9.217938423156738
    8. ',' → logprob: -10.092938423156738
    9. '   ' → logprob: -11.592938423156738
    10. '```' → logprob: -11.717938423156738

Token 1191: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07880033552646637
    2. '
' → logprob: -3.9538004398345947
    3. '        
' → logprob: -3.9538004398345947
    4. '<|end|>' → logprob: -4.953800201416016
    5. ')' → logprob: -5.078800201416016
    6. ' 
' → logprob: -5.453800201416016
    7. '   ' → logprob: -5.578800201416016
    8. '\n' → logprob: -6.078800201416016
    9. '[' → logprob: -6.078800201416016
    10. '    
' → logprob: -6.328800201416016

Token 1192: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15696394443511963
    2. '
' → logprob: -2.40696382522583
    3. ' for' → logprob: -3.53196382522583
    4. 'for' → logprob: -3.78196382522583
    5. '        
' → logprob: -6.28196382522583
    6. '```' → logprob: -8.281964302062988
    7. '   ' → logprob: -8.406964302062988
    8. '#' (adapté à ' #') → logprob: -8.406964302062988
    9. '  
' → logprob: -9.281964302062988
    10. '           ' → logprob: -9.281964302062988

Token 1193: ' So' (ID: 2632)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5945702791213989
    2. '       ' → logprob: -1.344570279121399
    3. '#' → logprob: -1.844570279121399
    4. ' for' → logprob: -3.9695701599121094
    5. '
' → logprob: -4.969570159912109
    6. ' #' → logprob: -7.219570159912109
    7. '        
' → logprob: -7.469570159912109
    8. 'continue' → logprob: -7.469570159912109
    9. '```' → logprob: -7.969570159912109
    10. 'while' → logprob: -8.09457015991211

Token 1194: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5875675082206726
    2. '#' → logprob: -1.5875675678253174
    3. ' for' → logprob: -2.0875675678253174
    4. '       ' → logprob: -2.2125675678253174
    5. '
' → logprob: -6.337567329406738
    6. ' #' → logprob: -6.462567329406738
    7. 'street' → logprob: -7.087567329406738
    8. 'while' → logprob: -7.212567329406738
    9. 'continue' → logprob: -8.212567329406738
    10. '```' → logprob: -8.337567329406738

Token 1195: ' sign' (ID: 2232)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3547039330005646
    2. ' for' → logprob: -2.104703903198242
    3. '#' → logprob: -2.229703903198242
    4. 'se' → logprob: -4.354703903198242
    5. 'continue' → logprob: -4.604703903198242
    6. '       ' → logprob: -4.729703903198242
    7. ' the' → logprob: -5.104703903198242
    8. ' #' → logprob: -5.104703903198242
    9. '
' → logprob: -5.854703903198242
    10. 'the' → logprob: -5.979703903198242

Token 1196: ' segment' (ID: 14806)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.03925676271319389
    2. '_' → logprob: -3.7892568111419678
    3. 's' → logprob: -4.789256572723389
    4. ' _' → logprob: -6.789256572723389
    5. '_s' → logprob: -6.789256572723389
    6. '
' → logprob: -7.039256572723389
    7. 'segments' → logprob: -7.164256572723389
    8. ')' → logprob: -7.414256572723389
    9. '[' → logprob: -7.914256572723389
    10. 'Segments' → logprob: -7.914256572723389

Token 1197: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08543624728918076
    2. 's' → logprob: -4.3354363441467285
    3. ',' → logprob: -4.4604363441467285
    4. ' if' → logprob: -4.7104363441467285
    5. ':
' → logprob: -4.8354363441467285
    6. '_segments' → logprob: -5.0854363441467285
    7. '   ' → logprob: -5.4604363441467285
    8. ' continues' → logprob: -5.4604363441467285
    9. ' continue' → logprob: -5.5854363441467285
    10. ' for' → logprob: -6.3354363441467285

Token 1198: ' exactly' (ID: 9707)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7599805593490601
    2. '       ' → logprob: -1.50998055934906
    3. ' if' → logprob: -2.7599806785583496
    4. ' for' → logprob: -3.1349806785583496
    5. '        ' → logprob: -3.3849806785583496
    6. ' 
' → logprob: -3.3849806785583496
    7. ' continue' → logprob: -3.5099806785583496
    8. '        
' → logprob: -3.8849806785583496
    9. '<|end|>' → logprob: -4.25998067855835
    10. ' #' → logprob: -4.38498067855835

Token 1199: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.40007588267326355
    2. ' one' → logprob: -1.150075912475586
    3. '1' → logprob: -4.525075912475586
    4. ' ' → logprob: -7.275075912475586
    5. '(one' → logprob: -7.275075912475586
    6. ' (' → logprob: -9.150075912475586
    7. ' p' → logprob: -9.400075912475586
    8. '```' → logprob: -9.650075912475586
    9. 'len' → logprob: -9.900075912475586
    10. '(p' → logprob: -9.900075912475586

Token 1200: ' endpoint' (ID: 29703)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9664942622184753
    2. '_endpoint' → logprob: -1.8414943218231201
    3. '
' → logprob: -1.9664943218231201
    4. ' endpoint' → logprob: -2.59149432182312
    5. 'endpoint' → logprob: -2.84149432182312
    6. '_' → logprob: -3.21649432182312
    7. ' )' → logprob: -3.46649432182312
    8. ' _' → logprob: -4.216494083404541
    9. '_end' → logprob: -4.341494083404541
    10. '       ' → logprob: -4.591494083404541

Token 1201: ' p' (ID: 275)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.4233647584915161
    2. ')' → logprob: -1.7983647584915161
    3. ',' → logprob: -2.7983646392822266
    4. '==' → logprob: -2.9233646392822266
    5. ':' → logprob: -3.0483646392822266
    6. ' with' → logprob: -3.0483646392822266
    7. '=' → logprob: -3.0483646392822266
    8. ' ==' → logprob: -3.1733646392822266
    9. '<|end|>' → logprob: -3.4233646392822266
    10. ' =' → logprob: -3.5483646392822266

Token 1202: ' has' (ID: 853)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2615545690059662
    2. 'oint' → logprob: -2.011554479598999
    3. 'oints' → logprob: -2.511554479598999
    4. 'r' → logprob: -4.761554718017578
    5. '
' → logprob: -6.011554718017578
    6. '```' → logprob: -6.136554718017578
    7. '[' → logprob: -7.886554718017578
    8. 'air' → logprob: -8.261554718017578
    9. 's' → logprob: -8.636554718017578
    10. ')' → logprob: -8.636554718017578

Token 1203: ' degree' (ID: 9882)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.09165250509977341
    2. 'adj' → logprob: -3.0916523933410645
    3. 'degree' → logprob: -3.8416523933410645
    4. 'segment' → logprob: -4.8416523933410645
    5. ' seg' → logprob: -5.3416523933410645
    6. 'point' → logprob: -6.2166523933410645
    7. 'd' → logprob: -6.8416523933410645
    8. 'se' → logprob: -6.9666523933410645
    9. ' adjacency' → logprob: -6.9666523933410645
    10. 'graph' → logprob: -7.3416523933410645

Token 1204: '>' (ID: 29)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6059811115264893
    2. '=' → logprob: -0.9809811115264893
    3. ' ==' → logprob: -2.9809811115264893
    4. '>=' → logprob: -4.73098087310791
    5. ' =' → logprob: -5.48098087310791
    6. '1' → logprob: -5.60598087310791
    7. '>' → logprob: -6.10598087310791
    8. ' ' → logprob: -6.10598087310791
    9. ' >=' → logprob: -6.73098087310791
    10. ')' → logprob: -7.23098087310791

Token 1205: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003408263437449932
    2. '=' → logprob: -8.500340461730957
    3. '0' → logprob: -9.125340461730957
    4. ' ' → logprob: -11.000340461730957
    5. '```' → logprob: -12.250340461730957
    6. '>' → logprob: -12.500340461730957
    7. '<|end|>' → logprob: -14.125340461730957
    8. '2' → logprob: -14.125340461730957
    9. ' =' → logprob: -15.625340461730957
    10. '!' → logprob: -15.875340461730957

Token 1206: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.345157265663147
    2. '
' → logprob: -1.595157265663147
    3. '<|end|>' → logprob: -3.5951571464538574
    4. ' for' → logprob: -3.7201571464538574
    5. '        
' → logprob: -4.845157146453857
    6. ' if' → logprob: -5.095157146453857
    7. ')
' → logprob: -5.595157146453857
    8. 'for' → logprob: -5.595157146453857
    9. ')' → logprob: -6.095157146453857
    10. '[' → logprob: -6.095157146453857

Token 1207: ' connected' (ID: 12079)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5133048295974731
    2. '=' → logprob: -1.3883048295974731
    3. 'exact' → logprob: -3.2633047103881836
    4. '1' → logprob: -3.3883047103881836
    5. 'p' → logprob: -3.6383047103881836
    6. 'connected' → logprob: -4.263304710388184
    7. ' exactly' → logprob: -4.513304710388184
    8. '0' → logprob: -5.138304710388184
    9. '<=' → logprob: -5.388304710388184
    10. 'equal' → logprob: -6.138304710388184

Token 1208: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5765345096588135
    2. 'to' → logprob: -1.3265345096588135
    3. '_to' → logprob: -2.2015345096588135
    4. ' only' → logprob: -3.2015345096588135
    5. 'only' → logprob: -4.826534271240234
    6. '_' → logprob: -5.576534271240234
    7. '_only' → logprob: -6.076534271240234
    8. '   ' → logprob: -6.326534271240234
    9. ')' → logprob: -6.576534271240234
    10. ' exactly' → logprob: -7.201534271240234

Token 1209: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.33019930124282837
    2. 'one' → logprob: -2.2051992416381836
    3. 'street' → logprob: -3.0801992416381836
    4. 'at' → logprob: -3.4551992416381836
    5. 'sign' → logprob: -4.205199241638184
    6. 'another' → logprob: -4.330199241638184
    7. ' at' → logprob: -4.455199241638184
    8. ' a' → logprob: -4.455199241638184
    9. 'some' → logprob: -4.455199241638184
    10. 'exact' → logprob: -4.955199241638184

Token 1210: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.2045719027519226
    2. ' street' → logprob: -2.0795719623565674
    3. 'sign' → logprob: -3.8295719623565674
    4. 'segment' → logprob: -4.079571723937988
    5. 'stre' → logprob: -4.704571723937988
    6. 'st' → logprob: -5.454571723937988
    7. 's' → logprob: -5.954571723937988
    8. ' sign' → logprob: -6.579571723937988
    9. ' segment' → logprob: -6.579571723937988
    10. 't' → logprob: -7.704571723937988

Token 1211: ' segment' (ID: 14806)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5205146670341492
    2. '
' → logprob: -1.270514726638794
    3. ' for' → logprob: -2.895514726638794
    4. 'for' → logprob: -3.895514726638794
    5. '        
' → logprob: -4.520514488220215
    6. ')
' → logprob: -4.895514488220215
    7. '   ' → logprob: -5.520514488220215
    8. '           ' → logprob: -5.520514488220215
    9. ')' → logprob: -5.520514488220215
    10. '<|end|>' → logprob: -5.770514488220215

Token 1212: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23820538818836212
    2. '
' → logprob: -1.6132054328918457
    3. ' for' → logprob: -4.863205432891846
    4. '        
' → logprob: -6.613205432891846
    5. '<|end|>' → logprob: -6.613205432891846
    6. 'for' → logprob: -6.863205432891846
    7. '   ' → logprob: -8.238204956054688
    8. '```' → logprob: -8.613204956054688
    9. ',' → logprob: -9.113204956054688
    10. '           ' → logprob: -9.238204956054688

Token 1213: ' the' (ID: 290)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8227736353874207
    2. '       ' → logprob: -1.0727736949920654
    3. ' while' → logprob: -2.1977736949920654
    4. '        ' → logprob: -4.447773456573486
    5. ' if' → logprob: -4.447773456573486
    6. 'and' → logprob: -4.572773456573486
    7. ' p' → logprob: -4.697773456573486
    8. ' 
' → logprob: -4.697773456573486
    9. ' ' → logprob: -4.822773456573486
    10. ' for' → logprob: -4.947773456573486

Token 1214: ' other' (ID: 1273)
  Prédit: ' other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' other' → logprob: -0.5871824026107788
    2. 'other' → logprob: -0.8371824026107788
    3. ' rest' → logprob: -5.587182521820068
    4. '#' → logprob: -5.962182521820068
    5. ' opposite' → logprob: -6.587182521820068
    6. 'rest' → logprob: -7.587182521820068
    7. 're' → logprob: -8.08718204498291
    8. ' is' → logprob: -8.21218204498291
    9. ' ' → logprob: -8.46218204498291
    10. '```' → logprob: -8.58718204498291

Token 1215: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.6808732748031616
    2. ' endpoint' → logprob: -0.8058732748031616
    3. '_endpoint' → logprob: -3.430873394012451
    4. '<|end|>' → logprob: -6.055873394012451
    5. '[' → logprob: -6.180873394012451
    6. '
' → logprob: -6.305873394012451
    7. ' is' → logprob: -6.680873394012451
    8. ')' → logprob: -6.930873394012451
    9. '<|end|>' → logprob: -6.930873394012451
    10. ' p' → logprob: -7.180873394012451

Token 1216: ' connected' (ID: 12079)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.2855890393257141
    2. '[' → logprob: -2.2855889797210693
    3. '<|end|>' → logprob: -3.2855889797210693
    4. '==' → logprob: -3.9105889797210693
    5. ')' → logprob: -4.035589218139648
    6. ' with' → logprob: -4.160589218139648
    7. ' is' → logprob: -4.285589218139648
    8. 'has' → logprob: -4.285589218139648
    9. ' ==' → logprob: -4.785589218139648
    10. 'with' → logprob: -6.035589218139648

Token 1217: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.878189206123352
    2. 'to' → logprob: -1.003189206123352
    3. ' only' → logprob: -2.0031890869140625
    4. 'only' → logprob: -2.5031890869140625
    5. '   ' → logprob: -7.5031890869140625
    6. '0' → logprob: -9.378189086914062
    7. '_to' → logprob: -9.503189086914062
    8. ' ' → logprob: -9.878189086914062
    9. '```' → logprob: -10.128189086914062
    10. ')' → logprob: -10.253189086914062

Token 1218: ' no' (ID: 860)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.35714444518089294
    2. 'only' → logprob: -1.4821444749832153
    3. 'no' → logprob: -3.107144355773926
    4. ' only' → logprob: -4.857144355773926
    5. '1' → logprob: -5.607144355773926
    6. 'one' → logprob: -5.732144355773926
    7. ' ' → logprob: -5.982144355773926
    8. 'exact' → logprob: -6.107144355773926
    9. ' exactly' → logprob: -6.232144355773926
    10. ' no' → logprob: -6.357144355773926

Token 1219: ' other' (ID: 1273)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.2017206847667694
    2. ' segments' → logprob: -2.701720714569092
    3. 'connections' → logprob: -2.951720714569092
    4. 'se' → logprob: -4.326720714569092
    5. 'connection' → logprob: -4.576720714569092
    6. '
' → logprob: -4.951720714569092
    7. ' connections' → logprob: -5.201720714569092
    8. ' connection' → logprob: -5.326720714569092
    9. 'segment' → logprob: -5.576720714569092
    10. 's' → logprob: -5.701720714569092

Token 1220: ' segments' (ID: 33749)
  Prédit: ' segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' segments' → logprob: -1.0421329736709595
    2. 'segments' → logprob: -1.0421329736709595
    3. 'segment' → logprob: -1.9171329736709595
    4. ' segment' → logprob: -2.29213285446167
    5. ')' → logprob: -4.66713285446167
    6. 'seg' → logprob: -4.91713285446167
    7. '_segments' → logprob: -5.29213285446167
    8. 's' → logprob: -5.29213285446167
    9. 'se' → logprob: -5.91713285446167
    10. '
' → logprob: -6.16713285446167

Token 1221: ' besides' (ID: 43595)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.17431116104125977
    2. '       ' → logprob: -1.9243111610412598
    3. '        
' → logprob: -5.04931116104126
    4. ' for' → logprob: -5.92431116104126
    5. '<|end|>' → logprob: -6.29931116104126
    6. ' 
' → logprob: -7.04931116104126
    7. '    
' → logprob: -7.79931116104126
    8. '  
' → logprob: -8.174310684204102
    9. ')
' → logprob: -8.299310684204102
    10. '\n' → logprob: -8.299310684204102

Token 1222: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.2213776111602783
    2. ' this' → logprob: -1.5963776111602783
    3. 'sign' → logprob: -1.8463776111602783
    4. ' the' → logprob: -1.9713776111602783
    5. 'this' → logprob: -2.4713776111602783
    6. 'i' → logprob: -2.5963776111602783
    7. ' i' → logprob: -3.7213776111602783
    8. ' sign' → logprob: -4.971377372741699
    9. 's' → logprob: -5.096377372741699
    10. ' itself' → logprob: -5.346377372741699

Token 1223: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.10979900509119034
    2. 'segment' → logprob: -3.1097989082336426
    3. ' sign' → logprob: -3.2347989082336426
    4. 'current' → logprob: -4.484798908233643
    5. ' current' → logprob: -5.234798908233643
    6. 'seg' → logprob: -6.609798908233643
    7. ' segment' → logprob: -7.234798908233643
    8. '#' → logprob: -7.984798908233643
    9. 'se' → logprob: -7.984798908233643
    10. 'i' → logprob: -8.4847993850708

Token 1224: ' itself' (ID: 8807)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3004884123802185
    2. '
' → logprob: -1.6754884719848633
    3. ' for' → logprob: -2.9254884719848633
    4. 'for' → logprob: -4.550488471984863
    5. '        
' → logprob: -5.550488471984863
    6. '<|end|>' → logprob: -5.925488471984863
    7. ')
' → logprob: -7.800488471984863
    8. ')' → logprob: -8.550488471984863
    9. ',' → logprob: -8.800488471984863
    10. '<|end|>' → logprob: -9.175488471984863

Token 1225: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4925537109375
    2. '
' → logprob: -1.2425537109375
    3. ' for' → logprob: -2.8675537109375
    4. '        
' → logprob: -4.2425537109375
    5. 'for' → logprob: -4.6175537109375
    6. '<|end|>' → logprob: -4.9925537109375
    7. '  
' → logprob: -6.1175537109375
    8. ' 
' → logprob: -6.1175537109375
    9. '   ' → logprob: -6.3675537109375
    10. '    
' → logprob: -6.3675537109375

Token 1226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014234843663871288
    2. '<|end|>' → logprob: -4.764235019683838
    3. ' for' → logprob: -5.889235019683838
    4. 'for' → logprob: -6.639235019683838
    5. '
' → logprob: -7.639235019683838
    6. '#' → logprob: -8.01423454284668
    7. '        
' → logprob: -8.26423454284668
    8. '<|end|>' → logprob: -9.13923454284668
    9. '           ' → logprob: -9.26423454284668
    10. '```' → logprob: -9.38923454284668

Token 1227: ' def' (ID: 1056)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18564745783805847
    2. ' for' → logprob: -2.435647487640381
    3. 'for' → logprob: -2.560647487640381
    4. '
' → logprob: -6.060647487640381
    5. '        
' → logprob: -7.060647487640381
    6. '#' → logprob: -7.310647487640381
    7. '```' → logprob: -8.185647010803223
    8. ' #' → logprob: -8.435647010803223
    9. '   ' → logprob: -9.810647010803223
    10. 'from' → logprob: -10.435647010803223

Token 1228: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.208078995347023
    2. 'is' → logprob: -1.8330789804458618
    3. '_is' → logprob: -5.083078861236572
    4. 'def' → logprob: -5.833078861236572
    5. ' classify' → logprob: -6.083078861236572
    6. ' check' → logprob: -6.083078861236572
    7. 'validate' → logprob: -7.083078861236572
    8. ' refine' → logprob: -7.083078861236572
    9. 'sign' → logprob: -7.208078861236572
    10. ' validate' → logprob: -7.208078861236572

Token 1229: '_sign' (ID: 24730)
  Prédit: '_sign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sign' → logprob: -0.004419674631208181
    2. '_st' → logprob: -6.004419803619385
    3. 'sign' → logprob: -6.379419803619385
    4. '_' → logprob: -9.254419326782227
    5. '_s' → logprob: -10.004419326782227
    6. ' _' → logprob: -10.379419326782227
    7. ' sign' → logprob: -11.004419326782227
    8. '_segment' → logprob: -12.004419326782227
    9. '_signature' → logprob: -12.129419326782227
    10. '_str' → logprob: -12.129419326782227

Token 1230: '(i' (ID: 3649)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.01756199076771736
    2. '_' → logprob: -5.142561912536621
    3. '_segments' → logprob: -5.267561912536621
    4. '(
' → logprob: -6.142561912536621
    5. '(_' → logprob: -6.392561912536621
    6. 's' → logprob: -7.517561912536621
    7. '(i' → logprob: -7.892561912536621
    8. '_segment' → logprob: -8.267561912536621
    9. '_seg' → logprob: -8.517561912536621
    10. ':' → logprob: -9.017561912536621

Token 1231: '):
' (ID: 1883)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.8270946741104126
    2. '(' → logprob: -1.2020946741104126
    3. '):' → logprob: -2.202094554901123
    4. ',' → logprob: -2.327094554901123
    5. ')' → logprob: -4.202094554901123
    6. '):
' → logprob: -4.202094554901123
    7. '(p' → logprob: -4.577094554901123
    8. '(
' → logprob: -5.452094554901123
    9. '(s' → logprob: -6.202094554901123
    10. '(a' → logprob: -6.452094554901123

Token 1232: '           ' (ID: 352)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7385448813438416
    2. '(p' → logprob: -1.2385449409484863
    3. '   ' → logprob: -2.2385449409484863
    4. ' (' → logprob: -2.9885449409484863
    5. '(i' → logprob: -2.9885449409484863
    6. ':' → logprob: -5.238544940948486
    7. '):' → logprob: -5.613544940948486
    8. '(se' → logprob: -5.738544940948486
    9. '(seg' → logprob: -5.863544940948486
    10. '(
' → logprob: -6.363544940948486

Token 1233: ' p' (ID: 275)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7078936100006104
    2. '(p' → logprob: -1.8328936100006104
    3. ' (' → logprob: -2.3328936100006104
    4. ' p' → logprob: -2.9578936100006104
    5. 'p' (adapté à ' p') → logprob: -3.0828936100006104
    6. 'seg' → logprob: -3.0828936100006104
    7. ' i' → logprob: -3.3328936100006104
    8. 'i' → logprob: -3.7078936100006104
    9. ' seg' → logprob: -4.707893371582031
    10. ' ' → logprob: -4.957893371582031

Token 1234: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011321663856506348
    2. ' =' → logprob: -5.386321544647217
    3. '=' → logprob: -5.636321544647217
    4. '_' → logprob: -6.886321544647217
    5. 's' → logprob: -7.261321544647217
    6. 'def' → logprob: -7.386321544647217
    7. 'r' → logprob: -8.386322021484375
    8. ' ' → logprob: -9.511322021484375
    9. 'oints' → logprob: -9.636322021484375
    10. '=
' → logprob: -9.636322021484375

Token 1235: ',p' (ID: 14835)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3618229925632477
    2. ',' → logprob: -2.236823081970215
    3. '[' → logprob: -2.486823081970215
    4. ' =' → logprob: -3.611823081970215
    5. ')' → logprob: -3.861823081970215
    6. ',p' → logprob: -3.861823081970215
    7. '=p' → logprob: -4.361823081970215
    8. '[p' → logprob: -4.611823081970215
    9. '=
' → logprob: -5.361823081970215
    10. ')=' → logprob: -5.611823081970215

Token 1236: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005576779949478805
    2. '2' → logprob: -8.250557899475098
    3. '[' → logprob: -8.625557899475098
    4. '_' → logprob: -9.625557899475098
    5. ')' → logprob: -11.625557899475098
    6. '
' → logprob: -11.750557899475098
    7. 'r' → logprob: -12.375557899475098
    8. '[i' → logprob: -12.500557899475098
    9. '```' → logprob: -12.500557899475098
    10. 'i' → logprob: -12.875557899475098

Token 1237: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01804739236831665
    2. ' =' → logprob: -4.268047332763672
    3. ')=' → logprob: -5.893047332763672
    4. ')' → logprob: -7.268047332763672
    5. '=
' → logprob: -8.018047332763672
    6. '):
' → logprob: -11.143047332763672
    7. '   ' → logprob: -11.143047332763672
    8. ']=' → logprob: -11.268047332763672
    9. '):' → logprob: -11.643047332763672
    10. ' =
' → logprob: -11.893047332763672

Token 1238: 'se' (ID: 344)
  Prédit: 'se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.0016047211829572916
    2. ' seg' → logprob: -6.5016045570373535
    3. '(se' → logprob: -9.876605033874512
    4. 's' → logprob: -10.501605033874512
    5. 'seg' → logprob: -12.251605033874512
    6. '	se' → logprob: -12.251605033874512
    7. '   ' → logprob: -12.501605033874512
    8. ' se' → logprob: -12.501605033874512
    9. '_se' → logprob: -12.751605033874512
    10. 'segments' → logprob: -14.501605033874512

Token 1239: 'gs' (ID: 9233)
  Prédit: 'gs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gs' → logprob: -2.618001053633634e-05
    2. ' gs' → logprob: -11.750025749206543
    3. '(gs' → logprob: -11.875025749206543
    4. 'egs' → logprob: -12.625025749206543
    5. '[
' → logprob: -13.500025749206543
    6. 'gments' → logprob: -13.625025749206543
    7. '.gs' → logprob: -13.750025749206543
    8. '[' → logprob: -14.500025749206543
    9. '
' → logprob: -14.625025749206543
    10. 'g' → logprob: -14.750025749206543

Token 1240: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -8.180258191714529e-06
    2. '[' → logprob: -12.375008583068848
    3. '[
' → logprob: -13.875008583068848
    4. 'i' → logprob: -14.375008583068848
    5. '[s' → logprob: -14.500008583068848
    6. '[p' → logprob: -14.625008583068848
    7. ' [' → logprob: -15.250008583068848
    8. '
' → logprob: -15.625008583068848
    9. '```' → logprob: -15.625008583068848
    10. ')[' → logprob: -15.750008583068848

Token 1241: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6777762770652771
    2. ']' → logprob: -1.3027763366699219
    3. ')
' → logprob: -2.677776336669922
    4. ']
' → logprob: -3.052776336669922
    5. '][' → logprob: -3.052776336669922
    6. '[' → logprob: -3.677776336669922
    7. ')[' → logprob: -3.677776336669922
    8. '])' → logprob: -5.427776336669922
    9. '])
' → logprob: -7.802776336669922
    10. '[
' → logprob: -8.052776336669922

Token 1242: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5934705138206482
    2. '       ' → logprob: -1.093470573425293
    3. '           ' → logprob: -2.843470573425293
    4. '    
' → logprob: -3.468470573425293
    5. '
' → logprob: -4.718470573425293
    6. '               ' → logprob: -6.593470573425293
    7. '[' → logprob: -6.718470573425293
    8. ':' → logprob: -6.718470573425293
    9. '        
' → logprob: -6.718470573425293
    10. '    ' → logprob: -6.843470573425293

Token 1243: ' d' (ID: 272)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8831069469451904
    2. 'd' (adapté à ' d') → logprob: -1.0081069469451904
    3. ' d' → logprob: -1.7581069469451904
    4. ' for' → logprob: -4.7581071853637695
    5. ' p' → logprob: -5.1331071853637695
    6. 'deg' → logprob: -5.2581071853637695
    7. ' deg' → logprob: -5.2581071853637695
    8. '       ' → logprob: -5.5081071853637695
    9. 'for' → logprob: -5.7581071853637695
    10. ' return' → logprob: -5.7581071853637695

Token 1244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7729658540920354e-05
    2. '_' → logprob: -11.250027656555176
    3. '=' → logprob: -12.625027656555176
    4. 'f' → logprob: -12.750027656555176
    5. 'p' → logprob: -13.250027656555176
    6. ' =' → logprob: -13.375027656555176
    7. '[' → logprob: -14.000027656555176
    8. '```' → logprob: -14.500027656555176
    9. '
' → logprob: -14.625027656555176
    10. 's' → logprob: -14.750027656555176

Token 1245: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.51219242811203
    2. ' =' → logprob: -1.1371924877166748
    3. ' ==' → logprob: -3.262192487716675
    4. '==' → logprob: -3.262192487716675
    5. '=int' → logprob: -6.512192249298096
    6. '=len' → logprob: -7.887192249298096
    7. ')' → logprob: -8.512192726135254
    8. '=
' → logprob: -9.012192726135254
    9. '<|end|>' → logprob: -9.012192726135254
    10. '>=' → logprob: -9.012192726135254

Token 1246: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.0620296411216259
    2. ' seg' → logprob: -2.8120296001434326
    3. '(seg' → logprob: -11.187029838562012
    4. 'se' → logprob: -11.437029838562012
    5. 'len' → logprob: -11.687029838562012
    6. 'segment' → logprob: -11.937029838562012
    7. '   ' → logprob: -12.437029838562012
    8. 'point' → logprob: -12.687029838562012
    9. 'default' → logprob: -12.687029838562012
    10. '1' → logprob: -13.187029838562012

Token 1247: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.7954958821064793e-05
    2. 'count' → logprob: -11.000018119812012
    3. 't' → logprob: -15.250018119812012
    4. '1' → logprob: -15.625018119812012
    5. 'p' → logprob: -16.250017166137695
    6. 'Count' → logprob: -16.375017166137695
    7. '
' → logprob: -16.625017166137695
    8. '_counts' → logprob: -16.875017166137695
    9. '   ' → logprob: -17.000017166137695
    10. 'f' → logprob: -17.125017166137695

Token 1248: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -8.895480277715251e-06
    2. '_p' → logprob: -12.625008583068848
    3. 'per' → logprob: -12.750008583068848
    4. '_count' → logprob: -13.250008583068848
    5. '_se' → logprob: -14.250008583068848
    6. 'p' → logprob: -16.500009536743164
    7. '[p' → logprob: -16.625009536743164
    8. '_seg' → logprob: -17.375009536743164
    9. '```' → logprob: -17.500009536743164
    10. 'Per' → logprob: -17.875009536743164

Token 1249: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.029799317941069603
    2. 'point' → logprob: -3.529799222946167
    3. 'p' → logprob: -10.029799461364746
    4. ' point' → logprob: -13.529799461364746
    5. 'seg' → logprob: -14.029799461364746
    6. '_p' → logprob: -14.279799461364746
    7. 'se' → logprob: -14.654799461364746
    8. 'pont' → logprob: -15.404799461364746
    9. '```' → logprob: -15.654799461364746
    10. '_endpoint' → logprob: -15.904799461364746

Token 1250: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.0033741232473403215
    2. 'p' → logprob: -5.753374099731445
    3. '(p' → logprob: -8.628374099731445
    4. '[' → logprob: -11.753374099731445
    5. '1' → logprob: -13.003374099731445
    6. ' p' → logprob: -13.628374099731445
    7. '
' → logprob: -14.128374099731445
    8. 'se' → logprob: -14.128374099731445
    9. 's' → logprob: -14.253374099731445
    10. '```' → logprob: -14.378374099731445

Token 1251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.5577775128767826e-06
    2. 'p' → logprob: -12.625005722045898
    3. '[p' → logprob: -14.000005722045898
    4. '2' → logprob: -14.625005722045898
    5. '(p' → logprob: -15.500005722045898
    6. '```' → logprob: -15.750005722045898
    7. '[' → logprob: -16.5000057220459
    8. '
' → logprob: -16.5625057220459
    9. ']' → logprob: -16.7500057220459
    10. 's' → logprob: -16.9375057220459

Token 1252: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.44450047612190247
    2. ']
' → logprob: -1.06950044631958
    3. ']==' → logprob: -4.19450044631958
    4. '==' → logprob: -8.694500923156738
    5. ')
' → logprob: -9.194500923156738
    6. ')' → logprob: -9.194500923156738
    7. ']>' → logprob: -9.819500923156738
    8. ' ]
' → logprob: -10.444500923156738
    9. ']
' → logprob: -10.444500923156738
    10. ']<' → logprob: -10.694500923156738

Token 1253: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1922728419303894
    2. '<|end|>' → logprob: -2.567272901535034
    3. ' ' → logprob: -3.317272901535034
    4. '[' → logprob: -4.192272663116455
    5. '       ' → logprob: -4.817272663116455
    6. ',' → logprob: -5.192272663116455
    7. ')' → logprob: -5.442272663116455
    8. 'd' → logprob: -5.692272663116455
    9. '   ' → logprob: -5.817272663116455
    10. ' 
' → logprob: -6.067272663116455

Token 1254: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' (adapté à ' d') → logprob: -0.0620325542986393
    2. ' d' → logprob: -2.812032461166382
    3. '           ' → logprob: -10.062032699584961
    4. '   ' → logprob: -11.687032699584961
    5. '	d' → logprob: -12.187032699584961
    6. 'p' → logprob: -13.187032699584961
    7. '       ' → logprob: -13.812032699584961
    8. '_d' → logprob: -13.812032699584961
    9. ' 
' → logprob: -13.937032699584961
    10. ' p' → logprob: -14.437032699584961

Token 1255: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6400101184844971
    2. '2' → logprob: -0.7650101184844971
    3. '==' → logprob: -5.140009880065918
    4. '=' → logprob: -6.765009880065918
    5. 'f' → logprob: -8.890009880065918
    6. '```' → logprob: -9.390009880065918
    7. ' ==' → logprob: -9.890009880065918
    8. ' ' → logprob: -10.390009880065918
    9. '==
' → logprob: -10.640009880065918
    10. '[' → logprob: -11.015009880065918

Token 1256: ' =' (ID: 314)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09251239150762558
    2. ' ==' → logprob: -2.592512369155884
    3. '=' → logprob: -4.717512607574463
    4. ' =' → logprob: -6.092512607574463
    5. '==
' → logprob: -6.967512607574463
    6. '=int' → logprob: -7.467512607574463
    7. '=i' → logprob: -8.342512130737305
    8. ')==' → logprob: -9.342512130737305
    9. '==(' → logprob: -9.717512130737305
    10. '```' → logprob: -9.842512130737305

Token 1257: ' seg' (ID: 3055)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.07889287173748016
    2. ' seg' → logprob: -2.578892946243286
    3. '(seg' → logprob: -13.328892707824707
    4. 'sig' → logprob: -14.203892707824707
    5. 'se' → logprob: -14.953892707824707
    6. 'sign' → logprob: -15.703892707824707
    7. '1' → logprob: -15.828892707824707
    8. 'seq' → logprob: -16.703893661499023
    9. 'segment' → logprob: -16.953893661499023
    10. ' sig' → logprob: -17.828893661499023

Token 1258: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -4.36574100604048e-06
    2. 'count' → logprob: -12.500004768371582
    3. '_per' → logprob: -15.000004768371582
    4. 'Count' → logprob: -16.000003814697266
    5. '
' → logprob: -17.125003814697266
    6. '_code' → logprob: -17.375003814697266
    7. '1' → logprob: -17.625003814697266
    8. '_COUNT' → logprob: -17.625003814697266
    9. '```' → logprob: -18.000003814697266
    10. '_point' → logprob: -18.375003814697266

Token 1259: '_per' (ID: 10938)
  Prédit: '_per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_per' → logprob: -2.570319702499546e-05
    2. 'per' → logprob: -11.500025749206543
    3. '_for' → logprob: -12.250025749206543
    4. '_p' → logprob: -12.875025749206543
    5. '_count' → logprob: -12.875025749206543
    6. '_se' → logprob: -13.750025749206543
    7. '1' → logprob: -14.125025749206543
    8. 'Per' → logprob: -14.125025749206543
    9. '_Per' → logprob: -14.500025749206543
    10. '=' → logprob: -14.625025749206543

Token 1260: '_point' (ID: 15466)
  Prédit: '_point'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.011099581606686115
    2. 'point' → logprob: -4.511099815368652
    3. 'int' → logprob: -10.136099815368652
    4. '1' → logprob: -12.261099815368652
    5. 'oint' → logprob: -12.511099815368652
    6. 'Point' → logprob: -13.636099815368652
    7. '_points' → logprob: -14.261099815368652
    8. 'seg' → logprob: -14.386099815368652
    9. 'p' → logprob: -14.511099815368652
    10. '_count' → logprob: -15.261099815368652

Token 1261: '[p' (ID: 23234)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0883803740143776
    2. '[p' → logprob: -2.5883803367614746
    3. 'se' → logprob: -4.713380336761475
    4. '[' → logprob: -8.338380813598633
    5. '1' → logprob: -8.963380813598633
    6. 's' → logprob: -10.338380813598633
    7. ' p' → logprob: -10.588380813598633
    8. '(p' → logprob: -11.213380813598633
    9. '_se' → logprob: -11.588380813598633
    10. '{' → logprob: -12.713380813598633

Token 1262: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03810460492968559
    2. '1' → logprob: -3.28810453414917
    3. 'p' → logprob: -9.913105010986328
    4. '```' → logprob: -11.913105010986328
    5. ' ' → logprob: -13.663105010986328
    6. '[p' → logprob: -13.788105010986328
    7. ']' → logprob: -13.913105010986328
    8. '+' → logprob: -14.413105010986328
    9. '[' → logprob: -14.663105010986328
    10. 'i' → logprob: -15.038105010986328

Token 1263: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.0647628977894783
    2. ']' → logprob: -3.189762830734253
    3. ')
' → logprob: -4.064763069152832
    4. '           ' → logprob: -5.814763069152832
    5. ')' → logprob: -7.314763069152832
    6. ']==' → logprob: -7.814763069152832
    7. '       ' → logprob: -9.189763069152832
    8. '==' → logprob: -10.814763069152832
    9. '
' → logprob: -10.814763069152832
    10. ']:
' → logprob: -10.939763069152832

Token 1264: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6294212937355042
    2. '       ' → logprob: -1.5044212341308594
    3. '   ' → logprob: -1.7544212341308594
    4. ' if' → logprob: -3.8794212341308594
    5. ':
' → logprob: -4.379421234130859
    6. ':' → logprob: -4.754421234130859
    7. '               ' → logprob: -5.504421234130859
    8. '
' → logprob: -5.754421234130859
    9. ' 
' → logprob: -5.754421234130859
    10. '[' → logprob: -6.004421234130859

Token 1265: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1718643754720688
    2. '       ' → logprob: -2.1718642711639404
    3. ' if' → logprob: -4.1718645095825195
    4. '           ' → logprob: -4.4218645095825195
    5. ' return' → logprob: -4.9218645095825195
    6. '
' → logprob: -5.2968645095825195
    7. '    ' → logprob: -6.7968645095825195
    8. '    
' → logprob: -7.0468645095825195
    9. ' 
' → logprob: -7.4218645095825195
    10. ' ' → logprob: -7.5468645095825195

Token 1266: ' Count' (ID: 6789)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9380166530609131
    2. '   ' → logprob: -1.313016653060913
    3. 'if' → logprob: -1.563016653060913
    4. 'return' → logprob: -2.438016653060913
    5. ' return' → logprob: -3.188016653060913
    6. 'p' → logprob: -7.563016891479492
    7. ' p' → logprob: -8.563016891479492
    8. '#' → logprob: -8.688016891479492
    9. ' for' → logprob: -8.688016891479492
    10. 'for' → logprob: -8.813016891479492

Token 1267: ' how' (ID: 1495)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -1.3944824934005737
    2. ' p' → logprob: -1.5194824934005737
    3. ' segments' → logprob: -2.1444826126098633
    4. ' seg' → logprob: -2.2694826126098633
    5. ' =' → logprob: -3.1444826126098633
    6. '_segments' → logprob: -3.3944826126098633
    7. 'p' → logprob: -3.3944826126098633
    8. ' if' → logprob: -3.7694826126098633
    9. ' connected' → logprob: -3.7694826126098633
    10. 's' → logprob: -4.019482612609863

Token 1268: ' many' (ID: 1991)
  Prédit: 'many'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'many' → logprob: -0.02426118776202202
    2. ' many' → logprob: -3.774261236190796
    3. '1' → logprob: -7.774260997772217
    4. 'segments' → logprob: -8.274261474609375
    5. '_many' → logprob: -8.774261474609375
    6. '   ' → logprob: -9.649261474609375
    7. 'Many' → logprob: -9.899261474609375
    8. ' segments' → logprob: -10.774261474609375
    9. '_segments' → logprob: -12.024261474609375
    10. '           ' → logprob: -12.149261474609375

Token 1269: ' street' (ID: 12901)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.5603517889976501
    2. ' segments' → logprob: -1.060351848602295
    3. ' seg' → logprob: -3.560351848602295
    4. 'se' → logprob: -3.935351848602295
    5. '_segments' → logprob: -4.060351848602295
    6. '_se' → logprob: -5.185351848602295
    7. ' p' → logprob: -5.560351848602295
    8. 'seg' → logprob: -6.185351848602295
    9. 's' → logprob: -6.435351848602295
    10. ' s' → logprob: -6.810351848602295

Token 1270: ' segments' (ID: 33749)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.014911653473973274
    2. '_' → logprob: -4.764911651611328
    3. 's' → logprob: -5.764911651611328
    4. ' _' → logprob: -6.889911651611328
    5. 'segments' → logprob: -7.389911651611328
    6. ' segments' → logprob: -8.014911651611328
    7. '_segment' → logprob: -8.139911651611328
    8. '_s' → logprob: -8.764911651611328
    9. '_connections' → logprob: -8.889911651611328
    10. '```' → logprob: -9.389911651611328

Token 1271: ' connected' (ID: 12079)
  Prédit: '_in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_in' → logprob: -1.430247187614441
    2. '_connected' → logprob: -1.555247187614441
    3. 'p' → logprob: -2.3052473068237305
    4. '_at' → logprob: -2.6802473068237305
    5. '_p' → logprob: -2.8052473068237305
    6. 'in' → logprob: -3.1802473068237305
    7. '[p' → logprob: -3.1802473068237305
    8. '[i' → logprob: -3.3052473068237305
    9. 'connected' → logprob: -3.6802473068237305
    10. '_cont' → logprob: -3.9302473068237305

Token 1272: ' to' (ID: 316)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.40379002690315247
    2. '(p' → logprob: -2.40378999710083
    3. 'to' → logprob: -2.40378999710083
    4. '_to' → logprob: -3.40378999710083
    5. ' at' → logprob: -3.77878999710083
    6. 's' → logprob: -4.27878999710083
    7. ' =' → logprob: -4.27878999710083
    8. 'at' → logprob: -4.65378999710083
    9. ' to' → logprob: -4.90378999710083
    10. '=' → logprob: -5.02878999710083

Token 1273: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0005574395763687789
    2. 'se' → logprob: -8.125557899475098
    3. ' p' → logprob: -8.750557899475098
    4. 'i' → logprob: -9.375557899475098
    5. '1' → logprob: -12.500557899475098
    6. '
' → logprob: -13.375557899475098
    7. 'endpoint' → logprob: -13.500557899475098
    8. 's' → logprob: -13.625557899475098
    9. '   ' → logprob: -13.750557899475098
    10. 'seg' → logprob: -13.875557899475098

Token 1274: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.3782830137643032e-05
    2. 'oint' → logprob: -12.00001335144043
    3. 'oints' → logprob: -12.00001335144043
    4. '2' → logprob: -14.75001335144043
    5. '
' → logprob: -14.87501335144043
    6. '```' → logprob: -15.00001335144043
    7. 'r' → logprob: -16.25001335144043
    8. 'p' → logprob: -16.75001335144043
    9. 't' → logprob: -17.12501335144043
    10. 'seg' → logprob: -17.37501335144043

Token 1275: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24226078391075134
    2. ' =' → logprob: -2.992260694503784
    3. ',' → logprob: -3.242260694503784
    4. ')' → logprob: -3.492260694503784
    5. '=' → logprob: -4.367260932922363
    6. ' p' → logprob: -4.492260932922363
    7. ' for' → logprob: -4.492260932922363
    8. '1' → logprob: -4.617260932922363
    9. 'p' → logprob: -5.242260932922363
    10. '<|end|>' → logprob: -5.367260932922363

Token 1276: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.009818188846111298
    2. ' p' → logprob: -4.634818077087402
    3. 'd' → logprob: -10.009818077087402
    4. '
' → logprob: -12.509818077087402
    5. '2' → logprob: -12.634818077087402
    6. ' d' → logprob: -12.759818077087402
    7. 'points' → logprob: -13.384818077087402
    8. ' ' → logprob: -13.634818077087402
    9. 'point' → logprob: -14.384818077087402
    10. 'se' → logprob: -14.759818077087402

Token 1277: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10089424252510071
    2. '1' → logprob: -2.3508942127227783
    3. 'oint' → logprob: -7.725894451141357
    4. 'oints' → logprob: -8.4758939743042
    5. 'p' → logprob: -11.2258939743042
    6. '```' → logprob: -12.2258939743042
    7. '
' → logprob: -12.8508939743042
    8. 'seg' → logprob: -12.9758939743042
    9. 'r' → logprob: -13.1008939743042
    10. 'er' → logprob: -13.6008939743042

Token 1278: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8153461813926697
    2. '<|end|>' → logprob: -1.0653462409973145
    3. ')' → logprob: -3.0653462409973145
    4. '<|end|>' → logprob: -3.8153462409973145
    5. '            ' → logprob: -3.9403462409973145
    6. '...' → logprob: -4.4403462409973145
    7. ' for' → logprob: -4.4403462409973145
    8. '[' → logprob: -4.6903462409973145
    9. ' =' → logprob: -4.6903462409973145
    10. ',' → logprob: -4.8153462409973145

Token 1279: '           ' (ID: 352)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3254517316818237
    2. ')' → logprob: -1.7004517316818237
    3. '[
' → logprob: -2.3254518508911133
    4. '           ' → logprob: -2.7004518508911133
    5. ':' → logprob: -2.8254518508911133
    6. '.' → logprob: -3.3254518508911133
    7. ':
' → logprob: -3.5754518508911133
    8. ' =' → logprob: -3.7004518508911133
    9. '=' → logprob: -3.9504518508911133
    10. ' 
' → logprob: -3.9504518508911133

Token 1280: ' street' (ID: 12901)
  Prédit: ' street'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' street' → logprob: -1.017752766609192
    2. ' count' → logprob: -2.1427526473999023
    3. '           ' → logprob: -2.3927526473999023
    4. 'count' → logprob: -2.3927526473999023
    5. ' def' → logprob: -3.0177526473999023
    6. 'street' (adapté à ' street') → logprob: -3.0177526473999023
    7. 's' → logprob: -3.2677526473999023
    8. ' cnt' → logprob: -3.2677526473999023
    9. 'def' → logprob: -3.2677526473999023
    10. ' s' → logprob: -3.5177526473999023

Token 1281: '_p' (ID: 1359)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.20391082763671875
    2. '_' → logprob: -1.9539108276367188
    3. '_connected' → logprob: -4.578910827636719
    4. '_connections' → logprob: -4.578910827636719
    5. '_count' → logprob: -4.828910827636719
    6. '_counts' → logprob: -5.328910827636719
    7. 's' → logprob: -6.078910827636719
    8. '_seg' → logprob: -6.203910827636719
    9. '_s' → logprob: -6.328910827636719
    10. '_segment' → logprob: -6.953910827636719

Token 1282: '1' (ID: 16)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.0965932309627533
    2. '_connected' → logprob: -3.221593141555786
    3. 'segments' → logprob: -4.721593379974365
    4. '1' → logprob: -4.846593379974365
    5. 'oints' → logprob: -4.846593379974365
    6. '_count' → logprob: -5.221593379974365
    7. '_connections' → logprob: -5.471593379974365
    8. '_' → logprob: -5.846593379974365
    9. '_seg' → logprob: -6.221593379974365
    10. '_counts' → logprob: -6.346593379974365

Token 1283: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4130652844905853
    2. ' =' → logprob: -1.1630653142929077
    3. '_segments' → logprob: -4.538065433502197
    4. '_count' → logprob: -5.413065433502197
    5. 's' → logprob: -5.913065433502197
    6. '=
' → logprob: -6.413065433502197
    7. '_counts' → logprob: -6.913065433502197
    8. ')' → logprob: -7.288065433502197
    9. '=[]' → logprob: -7.288065433502197
    10. '_' → logprob: -7.413065433502197

Token 1284: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.28213024139404297
    2. 'sum' → logprob: -1.407130241394043
    3. 'len' → logprob: -7.657130241394043
    4. ' sum' → logprob: -7.657130241394043
    5. 'any' → logprob: -11.032130241394043
    6. ' ' → logprob: -11.657130241394043
    7. '[' → logprob: -12.907130241394043
    8. '
' → logprob: -13.032130241394043
    9. ' len' → logprob: -13.407130241394043
    10. 'False' → logprob: -14.407130241394043

Token 1285: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2522888481616974
    2. 'sum' → logprob: -1.502288818359375
    3. 'len' → logprob: -8.377288818359375
    4. 'any' → logprob: -9.252288818359375
    5. ' sum' → logprob: -11.127288818359375
    6. '
' → logprob: -12.252288818359375
    7. 'False' → logprob: -12.252288818359375
    8. '[' → logprob: -12.502288818359375
    9. '[
' → logprob: -14.002288818359375
    10. 'lambda' → logprob: -14.252288818359375

Token 1286: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1287: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8453608155250549
    2. '<|end|>' → logprob: -1.5953607559204102
    3. ' for' → logprob: -1.8453607559204102
    4. '
' → logprob: -2.09536075592041
    5. ')' → logprob: -3.72036075592041
    6. '[' → logprob: -4.84536075592041
    7. '           ' → logprob: -4.97036075592041
    8. ' ' → logprob: -5.09536075592041
    9. '   ' → logprob: -5.34536075592041
    10. '<|end|>' → logprob: -5.47036075592041

Token 1288: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.42946627736091614
    2. ' for' → logprob: -1.0544662475585938
    3. ')' → logprob: -9.179466247558594
    4. ' street' → logprob: -9.179466247558594
    5. 'p' → logprob: -9.429466247558594
    6. '	for' → logprob: -9.554466247558594
    7. ' p' → logprob: -9.804466247558594
    8. 'street' → logprob: -9.804466247558594
    9. '           ' → logprob: -10.304466247558594
    10. '       ' → logprob: -10.554466247558594

Token 1289: ' s' (ID: 265)
  Prédit: 'seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'seg' → logprob: -0.9336608052253723
    2. 'idx' → logprob: -1.1836607456207275
    3. 'j' → logprob: -1.4336607456207275
    4. 'si' → logprob: -3.5586607456207275
    5. 's' → logprob: -4.058660984039307
    6. 'sid' → logprob: -4.683660984039307
    7. ' seg' → logprob: -5.058660984039307
    8. 'e' → logprob: -8.683660507202148
    9. ' idx' → logprob: -8.808660507202148
    10. ' j' → logprob: -9.058660507202148

Token 1290: 'idx' (ID: 13196)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2537980079650879
    2. ' in' → logprob: -1.503798007965088
    3. '1' → logprob: -6.753798007965088
    4. 's' → logprob: -8.37879753112793
    5. 'i' → logprob: -8.75379753112793
    6. '
' → logprob: -9.62879753112793
    7. '_in' → logprob: -10.12879753112793
    8. '_index' → logprob: -10.12879753112793
    9. '_idx' → logprob: -10.12879753112793
    10. 'idx' → logprob: -10.75379753112793

Token 1291: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16053950786590576
    2. 'in' → logprob: -1.9105395078659058
    3. 's' → logprob: -9.785539627075195
    4. '[' → logprob: -10.160539627075195
    5. '	in' → logprob: -10.410539627075195
    6. '1' → logprob: -10.535539627075195
    7. '_in' → logprob: -10.660539627075195
    8. ',p' → logprob: -10.910539627075195
    9. ',' → logprob: -11.035539627075195
    10. '[p' → logprob: -11.160539627075195

Token 1292: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.0005071613122709095
    2. ' endpoint' → logprob: -7.625507354736328
    3. 'se' → logprob: -11.375507354736328
    4. '(endpoint' → logprob: -12.625507354736328
    5. '[' → logprob: -12.875507354736328
    6. 'end' → logprob: -14.250507354736328
    7. 'sign' → logprob: -14.375507354736328
    8. '[end' → logprob: -15.000507354736328
    9. ' se' → logprob: -16.750507354736328
    10. 'range' → logprob: -16.875507354736328

Token 1293: '_seg' (ID: 78972)
  Prédit: '_seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seg' → logprob: -0.037931084632873535
    2. 'seg' → logprob: -3.912930965423584
    3. '[p' → logprob: -4.537930965423584
    4. 'p' → logprob: -5.787930965423584
    5. 's' → logprob: -6.037930965423584
    6. '_se' → logprob: -7.787930965423584
    7. 'se' → logprob: -8.787931442260742
    8. '[s' → logprob: -9.287931442260742
    9. '_s' → logprob: -9.912931442260742
    10. '[' → logprob: -9.912931442260742

Token 1294: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.00320123927667737
    2. 'p' → logprob: -5.753201007843018
    3. '[' → logprob: -11.628201484680176
    4. '[
' → logprob: -12.003201484680176
    5. '(p' → logprob: -12.128201484680176
    6. ' p' → logprob: -14.128201484680176
    7. ' [' → logprob: -14.253201484680176
    8. 's' → logprob: -14.628201484680176
    9. '
' → logprob: -15.503201484680176
    10. '{' → logprob: -15.628201484680176

Token 1295: '1' (ID: 16)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.014511697925627232
    2. '1' → logprob: -4.264511585235596
    3. '[p' → logprob: -8.764512062072754
    4. 'se' → logprob: -8.889512062072754
    5. '[' → logprob: -11.264512062072754
    6. ' p' → logprob: -11.639512062072754
    7. '(p' → logprob: -11.889512062072754
    8. 'i' → logprob: -12.139512062072754
    9. 's' → logprob: -12.264512062072754
    10. '{' → logprob: -12.639512062072754

Token 1296: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.006445234641432762
    2. ']:' → logprob: -5.131445407867432
    3. '):
' → logprob: -8.256444931030273
    4. ':
' → logprob: -9.631444931030273
    5. ']:
' → logprob: -10.006444931030273
    6. ']' → logprob: -10.131444931030273
    7. ':' → logprob: -11.006444931030273
    8. ']==' → logprob: -11.131444931030273
    9. '           ' → logprob: -11.381444931030273
    10. '():
' → logprob: -11.756444931030273

Token 1297: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.033434052020311356
    2. '                               ' → logprob: -5.03343391418457
    3. '           ' → logprob: -5.28343391418457
    4. ' if' → logprob: -5.53343391418457
    5. '                   ' → logprob: -5.78343391418457
    6. ':
' → logprob: -6.03343391418457
    7. '                ' → logprob: -6.03343391418457
    8. '[' → logprob: -6.40843391418457
    9. '            ' → logprob: -7.03343391418457
    10. '):
' → logprob: -7.03343391418457

Token 1298: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5112996101379395
    2. ' if' → logprob: -1.2612996101379395
    3. 'if' (adapté à ' if') → logprob: -2.2612996101379395
    4. '                   ' → logprob: -5.1362996101379395
    5. '                ' → logprob: -6.5112996101379395
    6. '           ' → logprob: -6.7612996101379395
    7. ''' → logprob: -7.5112996101379395
    8. ' s' → logprob: -7.6362996101379395
    9. 's' → logprob: -7.6362996101379395
    10. ''s' → logprob: -8.261299133300781

Token 1299: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0010360259329900146
    2. ' s' → logprob: -6.876036167144775
    3. '   ' → logprob: -13.376035690307617
    4. '(s' → logprob: -15.001035690307617
    5. '
' → logprob: -15.376035690307617
    6. ' ' → logprob: -15.751035690307617
    7. '	s' → logprob: -16.126035690307617
    8. 'se' → logprob: -16.126035690307617
    9. 'segment' → logprob: -16.126035690307617
    10. '    ' → logprob: -16.376035690307617

Token 1300: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.01051925029605627
    2. 's' → logprob: -4.635519027709961
    3. '[idx' → logprob: -7.760519027709961
    4. '   ' → logprob: -9.885519027709961
    5. 'in' → logprob: -10.260519027709961
    6. '_idx' → logprob: -10.385519027709961
    7. '(idx' → logprob: -10.510519027709961
    8. ' idx' → logprob: -10.510519027709961
    9. 'p' → logprob: -11.385519027709961
    10. '	idx' → logprob: -11.385519027709961

Token 1301: '==' (ID: 560)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4380415380001068
    2. 'in' → logprob: -1.0630415678024292
    3. ' not' → logprob: -4.938041687011719
    4. 'not' → logprob: -6.188041687011719
    5. '<' → logprob: -10.438041687011719
    6. '<|end|>' → logprob: -11.438041687011719
    7. '!=' → logprob: -11.813041687011719
    8. ' !=' → logprob: -12.563041687011719
    9. '[' → logprob: -12.563041687011719
    10. ' <' → logprob: -12.813041687011719

Token 1302: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00012713817704934627
    2. '-' → logprob: -10.125126838684082
    3. 'p' → logprob: -11.375126838684082
    4. 'se' → logprob: -11.375126838684082
    5. 's' → logprob: -11.500126838684082
    6. ''i' → logprob: -11.750126838684082
    7. 'sign' → logprob: -12.000126838684082
    8. '   ' → logprob: -12.000126838684082
    9. ' i' → logprob: -12.125126838684082
    10. ''' → logprob: -12.625126838684082

Token 1303: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8165580034255981
    2. ':
' → logprob: -0.9415580034255981
    3. ' and' → logprob: -2.4415578842163086
    4. ' or' → logprob: -2.9415578842163086
    5. '               ' → logprob: -4.816557884216309
    6. '                           ' → logprob: -5.441557884216309
    7. '                   ' → logprob: -5.441557884216309
    8. 'and' → logprob: -5.816557884216309
    9. '           ' → logprob: -5.941557884216309
    10. '                       ' → logprob: -6.691557884216309

Token 1304: 'continue' (ID: 19452)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.15856492519378662
    2. 'continue' → logprob: -2.533565044403076
    3. ' continue' → logprob: -3.033565044403076
    4. '                       ' → logprob: -5.408565044403076
    5. ' and' → logprob: -5.533565044403076
    6. '               ' → logprob: -5.783565044403076
    7. ':
' → logprob: -6.158565044403076
    8. ':' → logprob: -6.783565044403076
    9. '   ' → logprob: -7.158565044403076
    10. '                           ' → logprob: -7.658565044403076

Token 1305: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.23255060613155365
    2. '               ' → logprob: -1.8575506210327148
    3. '
' → logprob: -3.857550621032715
    4. '           ' → logprob: -4.357550621032715
    5. ' and' → logprob: -5.232550621032715
    6. '   ' → logprob: -5.482550621032715
    7. ':
' → logprob: -5.607550621032715
    8. '                           ' → logprob: -7.482550621032715
    9. '                       ' → logprob: -7.607550621032715
    10. '                    
' → logprob: -7.607550621032715

Token 1306: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2386922389268875
    2. '                   ' → logprob: -1.613692283630371
    3. '           ' → logprob: -4.988692283630371
    4. '                               ' → logprob: -6.613692283630371
    5. '                ' → logprob: -7.238692283630371
    6. '                
' → logprob: -7.363692283630371
    7. '                       ' → logprob: -7.738692283630371
    8. '[' → logprob: -7.738692283630371
    9. '                           ' → logprob: -7.988692283630371
    10. '                    
' → logprob: -8.238692283630371

Token 1307: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5955941081047058
    2. '                   ' → logprob: -0.9705941081047058
    3. ' if' → logprob: -2.9705941677093506
    4. '           ' → logprob: -4.8455939292907715
    5. 'if' (adapté à ' if') → logprob: -5.4705939292907715
    6. '<|end|>' → logprob: -6.7205939292907715
    7. ' street' → logprob: -7.0955939292907715
    8. '                ' → logprob: -7.0955939292907715
    9. '                       ' → logprob: -8.09559440612793
    10. '                
' → logprob: -8.22059440612793

Token 1308: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.011451903730630875
    2. ' s' → logprob: -4.511451721191406
    3. 'se' → logprob: -8.636451721191406
    4. '   ' → logprob: -9.136451721191406
    5. 'seg' → logprob: -10.636451721191406
    6. 'i' → logprob: -11.386451721191406
    7. ' ' → logprob: -11.573951721191406
    8. '(s' → logprob: -11.886451721191406
    9. 'segments' → logprob: -11.886451721191406
    10. '    ' → logprob: -11.886451721191406

Token 1309: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.034826815128326416
    2. 'eg' → logprob: -3.5348267555236816
    3. 's' → logprob: -5.909826755523682
    4. 'e' → logprob: -7.034826755523682
    5. 't' → logprob: -8.15982723236084
    6. 'egs' → logprob: -8.40982723236084
    7. 'egment' → logprob: -8.65982723236084
    8. 'eq' → logprob: -8.78482723236084
    9. 'egd' → logprob: -8.90982723236084
    10. 'seg' → logprob: -10.03482723236084

Token 1310: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.3135949969291687
    2. ' in' → logprob: -1.3135950565338135
    3. 'not' → logprob: -8.563594818115234
    4. ' not' → logprob: -9.188594818115234
    5. '<|end|>' → logprob: -10.938594818115234
    6. ')' → logprob: -12.563594818115234
    7. '
' → logprob: -12.938594818115234
    8. ' ' → logprob: -12.938594818115234
    9. '	in' → logprob: -13.313594818115234
    10. 'import' → logprob: -13.438594818115234

Token 1311: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.00033593899570405483
    2. 'sign' → logprob: -8.625335693359375
    3. ' street' → logprob: -9.000335693359375
    4. 'stre' → logprob: -10.375335693359375
    5. 'st' → logprob: -13.375335693359375
    6. '   ' → logprob: -16.125335693359375
    7. 'stroke' → logprob: -17.750335693359375
    8. ' ' → logprob: -17.750335693359375
    9. '
' → logprob: -17.875335693359375
    10. ' sign' → logprob: -18.000335693359375

Token 1312: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -1.3782830137643032e-05
    2. 'segments' → logprob: -11.50001335144043
    3. '_' → logprob: -12.62501335144043
    4. 'Segments' → logprob: -16.37501335144043
    5. 's' → logprob: -16.62501335144043
    6. '_sequences' → logprob: -16.75001335144043
    7. '_
' → logprob: -16.75001335144043
    8. '```' → logprob: -17.50001335144043
    9. '_sign' → logprob: -17.87501335144043
    10. ' segments' → logprob: -18.37501335144043

Token 1313: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5508326292037964
    2. ':' → logprob: -0.9258326292037964
    3. '):
' → logprob: -4.300832748413086
    4. '):' → logprob: -5.425832748413086
    5. ')' → logprob: -6.050832748413086
    6. '+' → logprob: -6.425832748413086
    7. '           ' → logprob: -6.925832748413086
    8. '               ' → logprob: -6.925832748413086
    9. ']:
' → logprob: -7.550832748413086
    10. '                           ' → logprob: -7.925832748413086

Token 1314: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0031111687421798706
    2. '               ' → logprob: -6.253111362457275
    3. '                       ' → logprob: -8.378110885620117
    4. '	               ' → logprob: -9.003110885620117
    5. '                  ' → logprob: -9.003110885620117
    6. ':' → logprob: -9.253110885620117
    7. ':
' → logprob: -9.253110885620117
    8. '                           ' → logprob: -9.503110885620117
    9. '                ' → logprob: -9.878110885620117
    10. '		           ' → logprob: -10.128110885620117

Token 1315: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' (adapté à ' street') → logprob: -0.6689266562461853
    2. ' street' → logprob: -1.16892671585083
    3. '                   ' → logprob: -1.91892671585083
    4. '                       ' → logprob: -4.41892671585083
    5. '               ' → logprob: -5.29392671585083
    6. '                               ' → logprob: -5.66892671585083
    7. 'stre' → logprob: -6.04392671585083
    8. '                           ' → logprob: -6.29392671585083
    9. '   ' → logprob: -6.41892671585083
    10. '+' → logprob: -7.66892671585083

Token 1316: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.03450049087405205
    2. '_segments' → logprob: -3.4095005989074707
    3. '_' → logprob: -7.784500598907471
    4. '```' → logprob: -9.034500122070312
    5. 's' → logprob: -9.409500122070312
    6. '
' → logprob: -10.159500122070312
    7. ']_' → logprob: -10.909500122070312
    8. '\' → logprob: -11.034500122070312
    9. '_
' → logprob: -11.159500122070312
    10. '_s' → logprob: -11.284500122070312

Token 1317: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.306760805164231e-05
    2. 'segments' → logprob: -12.50001335144043
    3. '_segments' → logprob: -12.62501335144043
    4. 'oints' → logprob: -12.62501335144043
    5. '```' → logprob: -14.25001335144043
    6. 'r' → logprob: -15.12501335144043
    7. 's' → logprob: -15.50001335144043
    8. 'count' → logprob: -15.62501335144043
    9. 'ro' → logprob: -15.62501335144043
    10. '_count' → logprob: -15.87501335144043

Token 1318: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0067363339476287365
    2. ' +=' → logprob: -5.0067362785339355
    3. ']+=' → logprob: -11.506736755371094
    4. '+' → logprob: -11.756736755371094
    5. '>' → logprob: -13.506736755371094
    6. '   ' → logprob: -14.256736755371094
    7. '=' → logprob: -15.006736755371094
    8. '```' → logprob: -15.131736755371094
    9. '+="' → logprob: -16.256736755371094
    10. '       ' → logprob: -16.881736755371094

Token 1319: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '
' → logprob: -17.875
    4. '   ' → logprob: -18.9375
    5. '```' → logprob: -19.0
    6. '0' → logprob: -19.625
    7. '+' → logprob: -20.1875
    8. 's' → logprob: -20.1875
    9. '2' → logprob: -20.5
    10. '=' → logprob: -20.5

Token 1320: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5431395173072815
    2. '
' → logprob: -1.0431394577026367
    3. '\n' → logprob: -3.6681394577026367
    4. '               ' → logprob: -4.043139457702637
    5. '<|end|>' → logprob: -4.918139457702637
    6. '                   ' → logprob: -5.293139457702637
    7. ')' → logprob: -6.043139457702637
    8. '            
' → logprob: -6.668139457702637
    9. ' 
' → logprob: -6.793139457702637
    10. '  
' → logprob: -6.918139457702637

Token 1321: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12153604626655579
    2. '<|end|>' → logprob: -3.1215360164642334
    3. '
' → logprob: -3.4965360164642334
    4. '               ' → logprob: -4.3715362548828125
    5. ')' → logprob: -4.6215362548828125
    6. '\n' → logprob: -5.4965362548828125
    7. '[' → logprob: -5.9965362548828125
    8. ' 
' → logprob: -6.1215362548828125
    9. '                   ' → logprob: -6.4965362548828125
    10. '            
' → logprob: -7.1215362548828125

Token 1322: ' street' (ID: 12901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00943718571215868
    2. 'for' → logprob: -5.884437084197998
    3. 'if' → logprob: -6.259437084197998
    4. '
' → logprob: -6.884437084197998
    5. '       ' → logprob: -6.884437084197998
    6. ' for' → logprob: -7.384437084197998
    7. '               ' → logprob: -7.634437084197998
    8. '   ' → logprob: -8.009437561035156
    9. ' if' → logprob: -8.009437561035156
    10. ')' → logprob: -8.884437561035156

Token 1323: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0008783506345935166
    2. '_' → logprob: -7.75087833404541
    3. '_segments' → logprob: -7.75087833404541
    4. '```' → logprob: -12.37587833404541
    5. 'p' → logprob: -12.87587833404541
    6. '[' → logprob: -13.62587833404541
    7. 's' → logprob: -13.75087833404541
    8. 'segments' → logprob: -13.87587833404541
    9. '}_' → logprob: -14.00087833404541
    10. '_s' → logprob: -14.00087833404541

Token 1324: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00462771812453866
    2. '2' → logprob: -5.379627704620361
    3. '```' → logprob: -12.87962818145752
    4. '
' → logprob: -13.50462818145752
    5. '_' → logprob: -13.87962818145752
    6. 'p' → logprob: -14.37962818145752
    7. '=' → logprob: -14.87962818145752
    8. '_p' → logprob: -15.25462818145752
    9. '`' → logprob: -15.94212818145752
    10. 'oints' → logprob: -16.317127227783203

Token 1325: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.160552516579628
    2. ' =' → logprob: -1.9105525016784668
    3. ' +=' → logprob: -8.660552978515625
    4. '+=' → logprob: -8.785552978515625
    5. '```' → logprob: -14.910552978515625
    6. ')' → logprob: -15.160552978515625
    7. ' ' → logprob: -15.285552978515625
    8. '=int' → logprob: -15.660552978515625
    9. ',' → logprob: -16.035552978515625
    10. '>' → logprob: -16.285552978515625

Token 1326: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006265374249778688
    2. ' ' → logprob: -7.375626564025879
    3. 'sum' → logprob: -18.125625610351562
    4. '1' → logprob: -18.500625610351562
    5. '   ' → logprob: -19.000625610351562
    6. 'for' → logprob: -19.375625610351562
    7. '=' → logprob: -19.625625610351562
    8. ' sum' → logprob: -20.250625610351562
    9. '           ' → logprob: -20.375625610351562
    10. ' for' → logprob: -20.500625610351562

Token 1327: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '
' → logprob: -18.125001907348633
    4. 'for' → logprob: -19.000001907348633
    5. 'sum' → logprob: -19.250001907348633
    6. '   ' → logprob: -20.250001907348633
    7. '۰' → logprob: -20.625001907348633
    8. '=' → logprob: -20.875001907348633
    9. 'int' → logprob: -22.125001907348633
    10. '０' → logprob: -22.125001907348633

Token 1328: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.39447569847106934
    2. 'for' → logprob: -1.3944756984710693
    3. '           ' → logprob: -2.6444756984710693
    4. '
' → logprob: -5.144475936889648
    5. '	for' → logprob: -7.519475936889648
    6. '   ' → logprob: -8.769475936889648
    7. '       ' → logprob: -8.894475936889648
    8. '               ' → logprob: -9.394475936889648
    9. '```' → logprob: -10.144475936889648
    10. '		' → logprob: -10.644475936889648

Token 1329: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3058736324310303
    2. '           ' → logprob: -1.9308736324310303
    3. 'for' → logprob: -2.1808736324310303
    4. '	for' → logprob: -6.055873870849609
    5. '
' → logprob: -6.555873870849609
    6. '		' → logprob: -7.680873870849609
    7. '   ' → logprob: -7.680873870849609
    8. '       ' → logprob: -7.930873870849609
    9. '               ' → logprob: -9.05587387084961
    10. '	       ' → logprob: -9.30587387084961

Token 1330: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3871360123157501
    2. ' for' → logprob: -1.1371359825134277
    3. '           ' → logprob: -8.262136459350586
    4. '	for' → logprob: -12.762136459350586
    5. '       ' → logprob: -13.012136459350586
    6. '   ' → logprob: -14.512136459350586
    7. '```' → logprob: -14.887136459350586
    8. '               ' → logprob: -15.387136459350586
    9. ' ' → logprob: -15.887136459350586
    10. ' ' → logprob: -15.887136459350586

Token 1331: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.04858805239200592
    2. 's' → logprob: -3.0485880374908447
    3. 'idx' → logprob: -15.298587799072266
    4. '{s' → logprob: -16.173587799072266
    5. ' idx' → logprob: -16.548587799072266
    6. '(s' → logprob: -16.548587799072266
    7. '_s' → logprob: -16.673587799072266
    8. '	s' → logprob: -17.736087799072266
    9. '`s' → logprob: -18.236087799072266
    10. '   ' → logprob: -18.236087799072266

Token 1332: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -9.317247167928144e-05
    2. ' idx' → logprob: -10.125093460083008
    3. '_idx' → logprob: -11.375093460083008
    4. 'in' → logprob: -12.125093460083008
    5. 'dx' → logprob: -12.250093460083008
    6. '[idx' → logprob: -12.500093460083008
    7. 's' → logprob: -12.625093460083008
    8. 'x' → logprob: -12.750093460083008
    9. '```' → logprob: -12.750093460083008
    10. ' in' → logprob: -12.875093460083008

Token 1333: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03578837960958481
    2. 'in' → logprob: -3.4107882976531982
    3. '[p' → logprob: -6.160788536071777
    4. '[' → logprob: -11.535788536071777
    5. '
' → logprob: -12.035788536071777
    6. 'p' → logprob: -12.160788536071777
    7. '(p' → logprob: -13.285788536071777
    8. ' ' → logprob: -13.910788536071777
    9. '[in' → logprob: -14.035788536071777
    10. '[
' → logprob: -14.410788536071777

Token 1334: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.00035918003413826227
    2. 'p' → logprob: -8.125359535217285
    3. ' endpoint' → logprob: -9.750359535217285
    4. '(endpoint' → logprob: -13.250359535217285
    5. '[p' → logprob: -14.000359535217285
    6. 'se' → logprob: -14.500359535217285
    7. 'ep' → logprob: -14.875359535217285
    8. '
' → logprob: -15.000359535217285
    9. ' p' → logprob: -15.250359535217285
    10. '           ' → logprob: -15.250359535217285

Token 1335: '_seg' (ID: 78972)
  Prédit: '_seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seg' → logprob: -0.007230455055832863
    2. 'seg' → logprob: -5.007230281829834
    3. '[p' → logprob: -7.757230281829834
    4. 'p' → logprob: -9.757230758666992
    5. '_p' → logprob: -11.382230758666992
    6. '_sig' → logprob: -11.757230758666992
    7. '[' → logprob: -13.382230758666992
    8. '_sep' → logprob: -13.632230758666992
    9. '
' → logprob: -13.882230758666992
    10. 's' → logprob: -13.882230758666992

Token 1336: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -2.6895233531831764e-05
    2. 'p' → logprob: -10.75002670288086
    3. '[' → logprob: -12.62502670288086
    4. '[
' → logprob: -13.62502670288086
    5. '
' → logprob: -14.87502670288086
    6. '(p' → logprob: -16.25002670288086
    7. '   ' → logprob: -16.25002670288086
    8. '```' → logprob: -16.62502670288086
    9. '[[' → logprob: -16.87502670288086
    10. '<p' → logprob: -17.37502670288086

Token 1337: '2' (ID: 17)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0142537672072649
    2. '2' → logprob: -4.264253616333008
    3. '[p' → logprob: -9.889253616333008
    4. ' p' → logprob: -10.639253616333008
    5. '(p' → logprob: -11.639253616333008
    6. '1' → logprob: -12.514253616333008
    7. '[' → logprob: -14.139253616333008
    8. '{' → logprob: -14.514253616333008
    9. '_p' → logprob: -14.639253616333008
    10. '<p' → logprob: -15.514253616333008

Token 1338: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.2561303377151489
    2. ']:' → logprob: -1.506130337715149
    3. ':' → logprob: -5.631130218505859
    4. ']:
' → logprob: -8.75613021850586
    5. '[p' → logprob: -8.88113021850586
    6. ':
' → logprob: -9.13113021850586
    7. ']' → logprob: -9.63113021850586
    8. '):
' → logprob: -10.38113021850586
    9. '[' → logprob: -10.63113021850586
    10. ']:

' → logprob: -11.00613021850586

Token 1339: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.09372340887784958
    2. ' if' → logprob: -2.8437232971191406
    3. '           ' → logprob: -4.593723297119141
    4. ':' → logprob: -5.093723297119141
    5. '            ' → logprob: -5.218723297119141
    6. ' in' → logprob: -6.093723297119141
    7. '[' → logprob: -6.343723297119141
    8. 'if' → logprob: -6.468723297119141
    9. '   ' → logprob: -7.343723297119141
    10. '=' → logprob: -7.968723297119141

Token 1340: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.8078423142433167
    2. ' if' → logprob: -0.8078423142433167
    3. ' s' → logprob: -2.682842254638672
    4. 's' → logprob: -3.432842254638672
    5. '               ' → logprob: -5.807842254638672
    6. '           ' → logprob: -6.682842254638672
    7. '   ' → logprob: -6.807842254638672
    8. ' ' → logprob: -7.307842254638672
    9. '       ' → logprob: -8.182842254638672
    10. ' in' → logprob: -8.182842254638672

Token 1341: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3132818341255188
    2. 's' → logprob: -1.313281774520874
    3. '   ' → logprob: -11.688282012939453
    4. '       ' → logprob: -13.188282012939453
    5. '           ' → logprob: -13.188282012939453
    6. '    ' → logprob: -13.813282012939453
    7. 'i' → logprob: -14.188282012939453
    8. '#' → logprob: -14.438282012939453
    9. ' ' → logprob: -14.563282012939453
    10. '	s' → logprob: -14.563282012939453

Token 1342: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0015422382857650518
    2. '1' → logprob: -6.876542091369629
    3. '==' → logprob: -8.376542091369629
    4. 's' → logprob: -9.876542091369629
    5. 'p' → logprob: -10.126542091369629
    6. '2' → logprob: -10.251542091369629
    7. 'dx' → logprob: -10.251542091369629
    8. '!=' → logprob: -10.501542091369629
    9. ' idx' → logprob: -10.876542091369629
    10. '```' → logprob: -11.626542091369629

Token 1343: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00013238313840702176
    2. ' ==' → logprob: -9.00013256072998
    3. '!=' → logprob: -12.37513256072998
    4. '==
' → logprob: -12.87513256072998
    5. ']==' → logprob: -13.75013256072998
    6. 'in' → logprob: -14.50013256072998
    7. '=' → logprob: -14.75013256072998
    8. 'not' → logprob: -17.375131607055664
    9. '==(' → logprob: -17.375131607055664
    10. ')==' → logprob: -17.375131607055664

Token 1344: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.7120533811976202e-05
    2. ' i' → logprob: -11.125017166137695
    3. '   ' → logprob: -13.375017166137695
    4. ' ' → logprob: -15.625017166137695
    5. '           ' → logprob: -16.375017166137695
    6. 'sign' → logprob: -16.625017166137695
    7. '       ' → logprob: -16.750017166137695
    8. ')' → logprob: -17.125017166137695
    9. '	i' → logprob: -17.250017166137695
    10. '-' → logprob: -17.375017166137695

Token 1345: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10000724345445633
    2. 'continue' → logprob: -2.8500072956085205
    3. '               ' → logprob: -4.475007057189941
    4. ':
' → logprob: -4.475007057189941
    5. '                   ' → logprob: -4.850007057189941
    6. ' continue' → logprob: -5.100007057189941
    7. '           ' → logprob: -8.350007057189941
    8. 'Continue' → logprob: -9.475007057189941
    9. '	continue' → logprob: -9.600007057189941
    10. ' continues' → logprob: -9.725007057189941

Token 1346: 'continue' (ID: 19452)
  Prédit: 'continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -7.3458322731312364e-06
    2. ' continue' → logprob: -12.000007629394531
    3. '   ' → logprob: -14.500007629394531
    4. '       ' → logprob: -15.375007629394531
    5. '           ' → logprob: -16.12500762939453
    6. 'contin' → logprob: -16.25000762939453
    7. 'continu' → logprob: -16.87500762939453
    8. '               ' → logprob: -16.87500762939453
    9. '
' → logprob: -17.12500762939453
    10. '	continue' → logprob: -17.87500762939453

Token 1347: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.429987370967865
    2. '               ' → logprob: -1.0549874305725098
    3. ':
' → logprob: -8.054986953735352
    4. '           ' → logprob: -8.304986953735352
    5. '                       ' → logprob: -8.679986953735352
    6. '   ' → logprob: -8.929986953735352
    7. ' if' → logprob: -9.054986953735352
    8. '```' → logprob: -9.554986953735352
    9. '
' → logprob: -10.179986953735352
    10. ':' → logprob: -10.179986953735352

Token 1348: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1289418488740921
    2. '               ' → logprob: -2.128941774368286
    3. '           ' → logprob: -7.128942012786865
    4. '```' → logprob: -7.878942012786865
    5. '                       ' → logprob: -8.378941535949707
    6. '<|end|>' → logprob: -9.003941535949707
    7. ' for' → logprob: -9.128941535949707
    8. ' if' → logprob: -9.753941535949707
    9. '   ' → logprob: -9.753941535949707
    10. '[' → logprob: -10.378941535949707

Token 1349: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.11702154576778412
    2. 'if' (adapté à ' if') → logprob: -2.2420215606689453
    3. '               ' → logprob: -5.742021560668945
    4. '                   ' → logprob: -7.242021560668945
    5. '           ' → logprob: -8.492021560668945
    6. '   ' → logprob: -10.742021560668945
    7. '```' → logprob: -10.742021560668945
    8. ' ' → logprob: -12.617021560668945
    9. '
' → logprob: -12.992021560668945
    10. '       ' → logprob: -12.992021560668945

Token 1350: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2014363408088684
    2. ' s' → logprob: -1.7014362812042236
    3. '(s' → logprob: -11.576436042785645
    4. '{s' → logprob: -12.451436042785645
    5. '   ' → logprob: -13.201436042785645
    6. '	s' → logprob: -13.451436042785645
    7. '[s' → logprob: -13.951436042785645
    8. 'sign' → logprob: -14.513936042785645
    9. '<s' → logprob: -14.763936042785645
    10. '```' → logprob: -14.763936042785645

Token 1351: 'idx' (ID: 13196)
  Prédit: 'idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idx' → logprob: -0.0016993449535220861
    2. '_p' → logprob: -7.001699447631836
    3. 'p' → logprob: -8.001699447631836
    4. 'eg' → logprob: -8.876699447631836
    5. 's' → logprob: -9.126699447631836
    6. '_segments' → logprob: -10.126699447631836
    7. '[idx' → logprob: -10.376699447631836
    8. '_idx' → logprob: -10.876699447631836
    9. 'seg' → logprob: -11.251699447631836
    10. ' idx' → logprob: -11.251699447631836

Token 1352: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5759724378585815
    2. 'in' → logprob: -0.8259724378585815
    3. 's' → logprob: -10.825972557067871
    4. '[' → logprob: -11.825972557067871
    5. 'not' → logprob: -13.700972557067871
    6. '[in' → logprob: -14.075972557067871
    7. ' ' → logprob: -14.450972557067871
    8. ' not' → logprob: -14.450972557067871
    9. '
' → logprob: -14.450972557067871
    10. '[p' → logprob: -14.575972557067871

Token 1353: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.016039881855249405
    2. ' street' → logprob: -4.141039848327637
    3. 'stre' → logprob: -13.016039848327637
    4. 'sign' → logprob: -13.016039848327637
    5. 'stroke' → logprob: -15.516039848327637
    6. ' ' → logprob: -15.766039848327637
    7. '   ' → logprob: -15.766039848327637
    8. '.street' → logprob: -15.766039848327637
    9. '```' → logprob: -16.266040802001953
    10. '
' → logprob: -16.266040802001953

Token 1354: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.00023250321100931615
    2. 'segments' → logprob: -8.500232696533203
    3. '_p' → logprob: -10.625232696533203
    4. 'p' → logprob: -13.750232696533203
    5. '```' → logprob: -13.750232696533203
    6. '_' → logprob: -13.875232696533203
    7. 's' → logprob: -14.250232696533203
    8. '[
' → logprob: -15.750232696533203
    9. '_seg' → logprob: -16.125232696533203
    10. ']_' → logprob: -16.125232696533203

Token 1355: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4908077120780945
    2. ':
' → logprob: -0.9908077120780945
    3. '+=' → logprob: -5.24080753326416
    4. '                   ' → logprob: -6.11580753326416
    5. '>=' → logprob: -6.74080753326416
    6. '[' → logprob: -6.86580753326416
    7. '           ' → logprob: -7.11580753326416
    8. '):
' → logprob: -7.11580753326416
    9. '>' → logprob: -7.11580753326416
    10. '+' → logprob: -7.24080753326416

Token 1356: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.569845974445343
    2. ':
' → logprob: -2.0698459148406982
    3. '+=' → logprob: -2.5698459148406982
    4. '+' → logprob: -2.9448459148406982
    5. '               ' → logprob: -3.0698459148406982
    6. ':' → logprob: -3.1948459148406982
    7. '           ' → logprob: -3.4448459148406982
    8. '>' → logprob: -3.9448459148406982
    9. '>=' → logprob: -4.319846153259277
    10. '                       ' → logprob: -4.819846153259277

Token 1357: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' (adapté à ' street') → logprob: -0.019564727321267128
    2. ' street' → logprob: -4.269564628601074
    3. '1' → logprob: -5.394564628601074
    4. 'stre' → logprob: -8.269564628601074
    5. 'st' → logprob: -8.269564628601074
    6. 's' → logprob: -9.644564628601074
    7. '
' → logprob: -9.644564628601074
    8. '+' → logprob: -9.769564628601074
    9. '   ' → logprob: -10.144564628601074
    10. ' ' → logprob: -11.019564628601074

Token 1358: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.0005039428360760212
    2. '_segments' → logprob: -8.000503540039062
    3. 's' → logprob: -8.875503540039062
    4. 'segments' → logprob: -11.500503540039062
    5. 'p' → logprob: -12.250503540039062
    6. '_' → logprob: -12.250503540039062
    7. '```' → logprob: -13.250503540039062
    8. '_s' → logprob: -13.875503540039062
    9. '_seg' → logprob: -14.375503540039062
    10. '   ' → logprob: -14.875503540039062

Token 1359: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02054235339164734
    2. '2' → logprob: -3.8955423831939697
    3. '```' → logprob: -15.77054214477539
    4. 'r' → logprob: -16.89554214477539
    5. '[' → logprob: -17.02054214477539
    6. 'o' → logprob: -17.14554214477539
    7. '_idx' → logprob: -17.14554214477539
    8. '_' → logprob: -17.14554214477539
    9. 'l' → logprob: -17.27054214477539
    10. 'idx' → logprob: -17.52054214477539

Token 1360: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -4.727905979962088e-05
    2. ' +=' → logprob: -10.75004768371582
    3. ']+=' → logprob: -10.87504768371582
    4. '+' → logprob: -12.37504768371582
    5. '>' → logprob: -13.37504768371582
    6. '=' → logprob: -15.25004768371582
    7. '```' → logprob: -15.25004768371582
    8. '   ' → logprob: -15.62504768371582
    9. '>=' → logprob: -16.37504768371582
    10. '[' → logprob: -16.50004768371582

Token 1361: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.31327155232429504
    2. '0' → logprob: -1.3132715225219727
    3. ' ' → logprob: -11.563271522521973
    4. '```' → logprob: -16.68827247619629
    5. ')' → logprob: -16.81327247619629
    6. '
' → logprob: -17.31327247619629
    7. '-' → logprob: -17.31327247619629
    8. '2' → logprob: -18.06327247619629
    9. 'int' → logprob: -18.18827247619629
    10. 'len' → logprob: -18.18827247619629

Token 1362: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03991938754916191
    2. '
' → logprob: -4.414919376373291
    3. ')' → logprob: -4.539919376373291
    4. '               ' → logprob: -5.789919376373291
    5. ')
' → logprob: -5.914919376373291
    6. '       ' → logprob: -6.164919376373291
    7. '<|end|>' → logprob: -6.164919376373291
    8. '   ' → logprob: -6.539919376373291
    9. '```' → logprob: -7.164919376373291
    10. ':
' → logprob: -7.789919376373291

Token 1363: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06928595155477524
    2. '
' → logprob: -2.9442858695983887
    3. '               ' → logprob: -5.694285869598389
    4. '   ' → logprob: -6.569285869598389
    5. '       ' → logprob: -6.694285869598389
    6. '<|end|>' → logprob: -6.694285869598389
    7. ' if' → logprob: -6.819285869598389
    8. ')' → logprob: -6.944285869598389
    9. ':
' → logprob: -7.194285869598389
    10. ')
' → logprob: -7.194285869598389

Token 1364: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1941787749528885
    2. '   ' → logprob: -2.069178819656372
    3. ' if' → logprob: -3.694178819656372
    4. '       ' → logprob: -4.194178581237793
    5. 'if' → logprob: -5.069178581237793
    6. ' return' → logprob: -6.194178581237793
    7. 'return' → logprob: -6.819178581237793
    8. '
' → logprob: -7.694178581237793
    9. ' ' → logprob: -9.069178581237793
    10. '	if' → logprob: -9.944178581237793

Token 1365: ' One' (ID: 5108)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.475808322429657
    2. ' if' → logprob: -1.2258083820343018
    3. '       ' → logprob: -3.3508083820343018
    4. '   ' → logprob: -3.4758083820343018
    5. 'if' → logprob: -4.850808143615723
    6. ' return' → logprob: -4.975808143615723
    7. 'return' → logprob: -5.975808143615723
    8. '
' → logprob: -6.725808143615723
    9. ' ' → logprob: -8.600808143615723
    10. '               ' → logprob: -9.475808143615723

Token 1366: ' endpoint' (ID: 29703)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.25046488642692566
    2. ' ==' → logprob: -2.500464916229248
    3. '==' → logprob: -3.500464916229248
    4. ' of' → logprob: -4.000464916229248
    5. 'if' → logprob: -4.125464916229248
    6. '_endpoint' → logprob: -4.500464916229248
    7. ' endpoint' → logprob: -4.625464916229248
    8. 'endpoint' → logprob: -5.000464916229248
    9. ' ' → logprob: -5.250464916229248
    10. ')' → logprob: -5.250464916229248

Token 1367: ' must' (ID: 2804)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3060482442378998
    2. ' ==' → logprob: -1.9310482740402222
    3. ' has' → logprob: -3.0560481548309326
    4. ' if' → logprob: -3.9310481548309326
    5. ' connected' → logprob: -5.056048393249512
    6. 'has' → logprob: -5.056048393249512
    7. ' with' → logprob: -5.056048393249512
    8. ' is' → logprob: -5.431048393249512
    9. '```' → logprob: -5.681048393249512
    10. ' and' → logprob: -5.931048393249512

Token 1368: ' touch' (ID: 7381)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1324295848608017
    2. ' ==' → logprob: -2.257429599761963
    3. ' be' → logprob: -5.007429599761963
    4. ' have' → logprob: -5.257429599761963
    5. 'have' → logprob: -5.257429599761963
    6. 'be' → logprob: -7.132429599761963
    7. '>=' → logprob: -7.757429599761963
    8. '<=' → logprob: -8.382429122924805
    9. '```' → logprob: -8.757429122924805
    10. '_have' → logprob: -8.757429122924805

Token 1369: ' exactly' (ID: 9707)
  Prédit: ' exactly'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' exactly' → logprob: -0.2100602686405182
    2. 'only' → logprob: -2.9600603580474854
    3. '1' → logprob: -3.2100603580474854
    4. ' only' → logprob: -3.3350603580474854
    5. '=' → logprob: -3.5850603580474854
    6. '==' → logprob: -4.585060119628906
    7. 'exact' → logprob: -4.585060119628906
    8. '>' → logprob: -5.460060119628906
    9. 'sign' → logprob: -6.210060119628906
    10. ' ' → logprob: -6.460060119628906

Token 1370: ' one' (ID: 1001)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.027169859036803246
    2. ' ' → logprob: -3.652169942855835
    3. 'one' → logprob: -7.777169704437256
    4. ' one' → logprob: -7.902169704437256
    5. '```' → logprob: -10.777170181274414
    6. '0' → logprob: -11.027170181274414
    7. 'sign' → logprob: -11.152170181274414
    8. ' exactly' → logprob: -11.277170181274414
    9. '   ' → logprob: -12.277170181274414
    10. 'only' → logprob: -12.777170181274414

Token 1371: ' street' (ID: 12901)
  Prédit: ' street'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' street' → logprob: -0.0434025414288044
    2. 'street' → logprob: -3.5434024333953857
    3. 'sign' → logprob: -4.668402671813965
    4. ' sign' → logprob: -6.418402671813965
    5. ' segment' → logprob: -7.043402671813965
    6. 'segment' → logprob: -7.168402671813965
    7. 'stre' → logprob: -8.918402671813965
    8. '_sign' → logprob: -9.168402671813965
    9. '+' → logprob: -9.418402671813965
    10. ' of' → logprob: -9.543402671813965

Token 1372: ' segment' (ID: 14806)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.2165552377700806
    2. '           ' → logprob: -1.3415552377700806
    3. '_segment' → logprob: -1.8415552377700806
    4. 'segment' → logprob: -2.091555118560791
    5. 'and' → logprob: -2.716555118560791
    6. ' if' → logprob: -3.716555118560791
    7. '   ' → logprob: -3.966555118560791
    8. ' segment' → logprob: -4.216555118560791
    9. '_segments' → logprob: -4.591555118560791
    10. ',' → logprob: -5.341555118560791

Token 1373: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3952336013317108
    2. ' and' → logprob: -1.2702336311340332
    3. ' if' → logprob: -3.270233631134033
    4. ',' → logprob: -6.020233631134033
    5. 'and' → logprob: -6.020233631134033
    6. '   ' → logprob: -7.895233631134033
    7. ' (' → logprob: -7.895233631134033
    8. '       ' → logprob: -8.145233154296875
    9. ')' → logprob: -8.145233154296875
    10. '            ' → logprob: -8.145233154296875

Token 1374: 'street' (ID: 55690)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6299833059310913
    2. ')' → logprob: -1.0049833059310913
    3. ' and' → logprob: -3.504983425140381
    4. '==' → logprob: -3.504983425140381
    5. 'and' → logprob: -4.004983425140381
    6. '=' → logprob: -4.629983425140381
    7. ' ==' → logprob: -6.129983425140381
    8. '):
' → logprob: -6.129983425140381
    9. ' )' → logprob: -6.504983425140381
    10. ',' → logprob: -7.004983425140381

Token 1375: ' count' (ID: 3605)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.23774901032447815
    2. '_' → logprob: -2.2377490997314453
    3. '_segments' → logprob: -2.4877490997314453
    4. ')_' → logprob: -4.487749099731445
    5. ')' → logprob: -4.987749099731445
    6. '_segment' → logprob: -6.362749099731445
    7. '_)' → logprob: -6.612749099731445
    8. ' _' → logprob: -8.987749099731445
    9. '_
' → logprob: -9.362749099731445
    10. '_tokens' → logprob: -9.612749099731445

Token 1376: '=' (ID: 28)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.22340865433216095
    2. ')' → logprob: -2.0984086990356445
    3. ')==' → logprob: -3.3484086990356445
    4. '>=' → logprob: -4.2234086990356445
    5. ' ==' → logprob: -4.5984086990356445
    6. ' and' → logprob: -5.0984086990356445
    7. '=' → logprob: -5.2234086990356445
    8. 'and' → logprob: -6.4734086990356445
    9. ')>=' → logprob: -7.3484086990356445
    10. '),' → logprob: -7.4734086990356445

Token 1377: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009267069399356842
    2. '0' → logprob: -7.375926494598389
    3. '=' → logprob: -8.750926971435547
    4. ' ' → logprob: -9.750926971435547
    5. '==' → logprob: -10.375926971435547
    6. ')' → logprob: -10.750926971435547
    7. '```' → logprob: -10.750926971435547
    8. ')==' → logprob: -13.750926971435547
    9. ' =' → logprob: -13.875926971435547
    10. ' ==' → logprob: -13.875926971435547

Token 1378: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5454863905906677
    2. ' and' → logprob: -0.9204863905906677
    3. 'and' → logprob: -4.0454864501953125
    4. '           ' → logprob: -6.0454864501953125
    5. ',' → logprob: -6.7954864501953125
    6. '),' → logprob: -7.4204864501953125
    7. ')
' → logprob: -8.295486450195312
    8. ' )' → logprob: -9.045486450195312
    9. ' or' → logprob: -9.045486450195312
    10. '```' → logprob: -11.795486450195312

Token 1379: ' other' (ID: 1273)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7268437743186951
    2. ' and' → logprob: -0.9768437743186951
    3. ' one' → logprob: -2.35184383392334
    4. 'and' → logprob: -3.85184383392334
    5. '#' → logprob: -4.35184383392334
    6. ' ' → logprob: -5.97684383392334
    7. ' if' → logprob: -6.22684383392334
    8. ' #' → logprob: -6.22684383392334
    9. ' while' → logprob: -6.47684383392334
    10. '            ' → logprob: -6.97684383392334

Token 1380: ' None' (ID: 4662)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.051424965262413025
    2. ' endpoint' → logprob: -3.426424980163574
    3. '==' → logprob: -4.426424980163574
    4. '_endpoint' → logprob: -6.051424980163574
    5. 'must' → logprob: -6.676424980163574
    6. ' must' → logprob: -7.426424980163574
    7. 'count' → logprob: -7.551424980163574
    8. ' ==' → logprob: -8.676424980163574
    9. '=' → logprob: -8.926424980163574
    10. '(endpoint' → logprob: -9.051424980163574

Token 1381: '
' (ID: 198)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.33763429522514343
    2. '           ' → logprob: -1.3376343250274658
    3. '==' → logprob: -4.587634086608887
    4. 'or' → logprob: -5.087634086608887
    5. ' and' → logprob: -6.337634086608887
    6. '```' → logprob: -6.837634086608887
    7. ',' → logprob: -7.087634086608887
    8. ' (' → logprob: -7.212634086608887
    9. '               ' → logprob: -7.337634086608887
    10. ' ==' → logprob: -7.712634086608887

Token 1382: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08746365457773209
    2. '   ' → logprob: -2.962463617324829
    3. ' if' → logprob: -4.587463855743408
    4. '       ' → logprob: -5.212463855743408
    5. ')' → logprob: -5.837463855743408
    6. ',' → logprob: -6.462463855743408
    7. ':' → logprob: -6.837463855743408
    8. ' ' → logprob: -6.837463855743408
    9. ' and' → logprob: -6.962463855743408
    10. '\n' → logprob: -7.087463855743408

Token 1383: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016170088201761246
    2. ' if' → logprob: -4.766170024871826
    3. '       ' → logprob: -5.141170024871826
    4. '   ' → logprob: -6.891170024871826
    5. 'if' (adapté à ' if') → logprob: -9.141170501708984
    6. '		' → logprob: -9.516170501708984
    7. '\t' → logprob: -9.516170501708984
    8. ')' → logprob: -9.766170501708984
    9. '               ' → logprob: -9.891170501708984
    10. ' ' → logprob: -9.891170501708984

Token 1384: ' (' (ID: 350)
  Prédit: '(st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.12477350234985352
    2. ' (' → logprob: -2.2497735023498535
    3. '(' → logprob: -4.8747735023498535
    4. 'street' → logprob: -6.2497735023498535
    5. ' street' → logprob: -6.4997735023498535
    6. '((' → logprob: -7.8747735023498535
    7. '(abs' → logprob: -8.374773025512695
    8. 'stre' → logprob: -10.624773025512695
    9. '   ' → logprob: -10.624773025512695
    10. '(not' → logprob: -10.874773025512695

Token 1385: 'street' (ID: 55690)
  Prédit: 'street'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.22396691143512726
    2. '(st' → logprob: -1.7239669561386108
    3. ' street' → logprob: -3.8489668369293213
    4. ' (' → logprob: -7.8489670753479
    5. '(' → logprob: -7.9739670753479
    6. 'stre' → logprob: -8.848966598510742
    7. 'st' → logprob: -9.598966598510742
    8. '   ' → logprob: -10.473966598510742
    9. 'stroke' → logprob: -12.098966598510742
    10. '(s' → logprob: -12.348966598510742

Token 1386: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.00012035090912831947
    2. '_segments' → logprob: -9.125120162963867
    3. '_' → logprob: -13.375120162963867
    4. '
' → logprob: -13.625120162963867
    5. '```' → logprob: -13.750120162963867
    6. '\' → logprob: -13.875120162963867
    7. ')_' → logprob: -14.000120162963867
    8. 'segments' → logprob: -14.500120162963867
    9. '[' → logprob: -14.500120162963867
    10. '_i' → logprob: -14.625120162963867

Token 1387: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02136770263314247
    2. '_p' → logprob: -3.8963677883148193
    3. '_segments' → logprob: -7.77136754989624
    4. '_' → logprob: -8.021368026733398
    5. 'segments' → logprob: -10.646368026733398
    6. '```' → logprob: -11.396368026733398
    7. 'p' → logprob: -11.396368026733398
    8. 's' → logprob: -11.521368026733398
    9. '2' → logprob: -13.146368026733398
    10. '_s' → logprob: -13.521368026733398

Token 1388: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.03875447437167168
    2. ' ==' → logprob: -3.288754463195801
    3. ')==' → logprob: -7.788754463195801
    4. '==
' → logprob: -8.6637544631958
    5. ')' → logprob: -10.0387544631958
    6. ']==' → logprob: -10.2887544631958
    7. '[' → logprob: -11.0387544631958
    8. '!=' → logprob: -11.9137544631958
    9. '=' → logprob: -11.9137544631958
    10. '<=' → logprob: -12.0387544631958

Token 1389: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.630610641877865e-06
    2. '0' → logprob: -12.000006675720215
    3. ' ' → logprob: -15.000006675720215
    4. '
' → logprob: -17.1250057220459
    5. '   ' → logprob: -17.8750057220459
    6. '```' → logprob: -19.3750057220459
    7. '=' → logprob: -20.0000057220459
    8. ')' → logprob: -20.3750057220459
    9. 'exact' → logprob: -20.3750057220459
    10. '  ' → logprob: -21.3750057220459

Token 1390: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1634059101343155
    2. 'and' → logprob: -1.9134058952331543
    3. ' or' → logprob: -5.913405895233154
    4. ')' → logprob: -7.788405895233154
    5. 'or' → logprob: -9.788406372070312
    6. ' ' → logprob: -13.913406372070312
    7. ' )' → logprob: -14.038406372070312
    8. '           ' → logprob: -14.913406372070312
    9. '	and' → logprob: -15.038406372070312
    10. '   ' → logprob: -15.163406372070312

Token 1391: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -7.743758760625497e-05
    2. ' street' → logprob: -9.500077247619629
    3. 'stre' → logprob: -13.750077247619629
    4. '   ' → logprob: -14.250077247619629
    5. ' ' → logprob: -15.500077247619629
    6. 'stroke' → logprob: -15.625077247619629
    7. '(' → logprob: -15.750077247619629
    8. 'st' → logprob: -15.875077247619629
    9. '
' → logprob: -16.125078201293945
    10. '       ' → logprob: -17.000078201293945

Token 1392: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -5.512236498361744e-07
    2. 'p' → logprob: -15.625000953674316
    3. '
' → logprob: -15.625000953674316
    4. 's' → logprob: -16.75
    5. '```' → logprob: -17.25
    6. '\' → logprob: -17.625
    7. '[' → logprob: -18.0
    8. '_' → logprob: -18.0
    9. ')' → logprob: -18.125
    10. '   ' → logprob: -18.375

Token 1393: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.320199877838604e-07
    2. '1' → logprob: -15.125
    3. '_' → logprob: -16.75
    4. '```' → logprob: -17.5
    5. 'oints' → logprob: -19.125
    6. 'r' → logprob: -19.25
    7. 'er' → logprob: -19.375
    8. '₂' → logprob: -19.5
    9. ' ' → logprob: -19.625
    10. '_segments' → logprob: -20.125

Token 1394: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -4.008129963040119e-06
    2. '==
' → logprob: -12.875003814697266
    3. ' ==' → logprob: -13.500003814697266
    4. '=' → logprob: -17.375003814697266
    5. ']==' → logprob: -18.375003814697266
    6. ')==' → logprob: -19.250003814697266
    7. '==-' → logprob: -19.250003814697266
    8. '```' → logprob: -19.625003814697266
    9. '()==' → logprob: -19.750003814697266
    10. '==(' → logprob: -20.875003814697266

Token 1395: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3663626305060461e-05
    2. ' ' → logprob: -11.37501335144043
    3. '   ' → logprob: -14.68751335144043
    4. '-' → logprob: -14.93751335144043
    5. '1' → logprob: -15.00001335144043
    6. '```' → logprob: -15.31251335144043
    7. '
' → logprob: -15.37501335144043
    8. '=' → logprob: -16.06251335144043
    9. 'None' → logprob: -16.62501335144043
    10. '``' → logprob: -16.75001335144043

Token 1396: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033763842657208443
    2. '):' → logprob: -6.503376483917236
    3. ' and' → logprob: -7.003376483917236
    4. ' )' → logprob: -7.503376483917236
    5. '):
' → logprob: -7.878376483917236
    6. 'and' → logprob: -11.378376007080078
    7. ' or' → logprob: -11.503376007080078
    8. '   ' → logprob: -12.878376007080078
    9. ')==' → logprob: -13.003376007080078
    10. '       ' → logprob: -13.878376007080078

Token 1397: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.722015380859375
    2. ' and' → logprob: -0.847015380859375
    3. ':' → logprob: -2.722015380859375
    4. 'and' → logprob: -4.472015380859375
    5. '   ' → logprob: -6.222015380859375
    6. ')' → logprob: -6.222015380859375
    7. '       ' → logprob: -6.347015380859375
    8. 'or' → logprob: -6.847015380859375
    9. '           ' → logprob: -7.347015380859375
    10. ':
' → logprob: -8.097015380859375

Token 1398: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.04744776710867882
    2. '(st' → logprob: -3.297447681427002
    3. '(' → logprob: -4.672447681427002
    4. '   ' → logprob: -12.29744815826416
    5. '(space' → logprob: -12.67244815826416
    6. '(s' → logprob: -13.79744815826416
    7. ' ' → logprob: -13.92244815826416
    8. '  ' → logprob: -14.04744815826416
    9. ' ' → logprob: -14.67244815826416
    10. '    ' → logprob: -15.42244815826416

Token 1399: 'street' (ID: 55690)
  Prédit: 'street'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.007731672842055559
    2. ' street' → logprob: -5.0077314376831055
    3. '(st' → logprob: -7.0077314376831055
    4. 'stre' → logprob: -9.382731437683105
    5. 'st' → logprob: -11.132731437683105
    6. '(' → logprob: -13.132731437683105
    7. 'stroke' → logprob: -13.132731437683105
    8. ' (' → logprob: -13.257731437683105
    9. '   ' → logprob: -13.257731437683105
    10. '.street' → logprob: -13.382731437683105

Token 1400: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -6.704273118884885e-07
    2. 'p' → logprob: -15.750000953674316
    3. '_' → logprob: -16.25
    4. '```' → logprob: -16.5
    5. '==' → logprob: -16.625
    6. '=' → logprob: -17.0
    7. '
' → logprob: -17.375
    8. '+' → logprob: -17.625
    9. '   ' → logprob: -18.0
    10. '_s' → logprob: -18.125

Token 1401: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.4392307698726654
    2. '1' → logprob: -1.0642307996749878
    3. '_p' → logprob: -4.564230918884277
    4. '_' → logprob: -10.564230918884277
    5. '==' → logprob: -10.939230918884277
    6. 'p' → logprob: -12.314230918884277
    7. '=' → logprob: -13.189230918884277
    8. '```' → logprob: -13.814230918884277
    9. '
' → logprob: -14.189230918884277
    10. '[' → logprob: -14.439230918884277

Token 1402: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -6.034592388459714e-06
    2. ' ==' → logprob: -12.750005722045898
    3. '==
' → logprob: -12.875005722045898
    4. '=' → logprob: -15.500005722045898
    5. ']==' → logprob: -16.0000057220459
    6. ')==' → logprob: -16.6250057220459
    7. '()==' → logprob: -17.2500057220459
    8. '```' → logprob: -17.3750057220459
    9. '==-' → logprob: -17.3750057220459
    10. '===' → logprob: -18.0000057220459

Token 1403: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7835754988482222e-05
    2. ' ' → logprob: -11.375018119812012
    3. '0' → logprob: -12.250018119812012
    4. '
' → logprob: -14.250018119812012
    5. '```' → logprob: -14.875018119812012
    6. '   ' → logprob: -16.125017166137695
    7. '{
' → logprob: -17.062517166137695
    8. '=' → logprob: -17.500017166137695
    9. '-' → logprob: -17.812517166137695
    10. '{' → logprob: -17.937517166137695

Token 1404: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3133045732975006
    2. 'and' → logprob: -1.3133045434951782
    3. '==' → logprob: -10.688304901123047
    4. ')' → logprob: -10.938304901123047
    5. '0' → logprob: -14.813304901123047
    6. ' ' → logprob: -14.938304901123047
    7. '	and' → logprob: -14.938304901123047
    8. '):' → logprob: -15.313304901123047
    9. '):
' → logprob: -15.438304901123047
    10. ')==' → logprob: -15.563304901123047

Token 1405: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.03367866203188896
    2. ' street' → logprob: -3.4086787700653076
    3. 'stre' → logprob: -10.658679008483887
    4. 'st' → logprob: -12.533679008483887
    5. '0' → logprob: -12.658679008483887
    6. '   ' → logprob: -14.408679008483887
    7. 'stroke' → logprob: -14.408679008483887
    8. ' ' → logprob: -14.658679008483887
    9. '.street' → logprob: -15.533679008483887
    10. '
' → logprob: -16.03367805480957

Token 1406: '_p' (ID: 1359)
  Prédit: '_p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_p' → logprob: -2.463036435074173e-05
    2. '==' → logprob: -11.000024795532227
    3. '1' → logprob: -12.125024795532227
    4. '_' → logprob: -13.875024795532227
    5. '=' → logprob: -14.625024795532227
    6. '```' → logprob: -15.375024795532227
    7. '_i' → logprob: -15.625024795532227
    8. 'p' → logprob: -15.750024795532227
    9. 's' → logprob: -16.125024795532227
    10. '_segments' → logprob: -16.500024795532227

Token 1407: '1' (ID: 16)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.48153215646743774
    2. '1' → logprob: -0.9815321564674377
    3. '0' → logprob: -4.981532096862793
    4. '==' → logprob: -7.606532096862793
    5. '=' → logprob: -10.356532096862793
    6. '```' → logprob: -10.981532096862793
    7. ' ' → logprob: -12.606532096862793
    8. '_' → logprob: -13.106532096862793
    9. '_p' → logprob: -13.731532096862793
    10. '_segments' → logprob: -13.856532096862793

Token 1408: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -2.2200749754119897e-06
    2. '==
' → logprob: -13.375001907348633
    3. ' ==' → logprob: -14.750001907348633
    4. '=' → logprob: -16.000001907348633
    5. ']==' → logprob: -18.250001907348633
    6. '```' → logprob: -18.250001907348633
    7. '==-' → logprob: -18.250001907348633
    8. ')==' → logprob: -18.500001907348633
    9. '()==' → logprob: -18.750001907348633
    10. '==(' → logprob: -20.875001907348633

Token 1409: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.4849443838757e-06
    2. ' ' → logprob: -12.750004768371582
    3. '1' → logprob: -13.875004768371582
    4. '```' → logprob: -15.000004768371582
    5. '   ' → logprob: -16.000003814697266
    6. '``' → logprob: -16.500003814697266
    7. '`' → logprob: -17.375003814697266
    8. '
' → logprob: -18.125003814697266
    9. ')' → logprob: -18.687503814697266
    10. '{' → logprob: -19.000003814697266

Token 1410: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01769457757472992
    2. '):
' → logprob: -4.517694473266602
    3. ')' → logprob: -5.017694473266602
    4. ':' → logprob: -12.892694473266602
    5. '):

' → logprob: -13.892694473266602
    6. '):
' → logprob: -14.017694473266602
    7. '       ' → logprob: -15.517694473266602
    8. ' ):' → logprob: -15.517694473266602
    9. '           ' → logprob: -15.892694473266602
    10. '   ' → logprob: -16.6426944732666

Token 1411: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6155207753181458
    2. ':' → logprob: -1.490520715713501
    3. ':
' → logprob: -2.115520715713501
    4. '               ' → logprob: -2.240520715713501
    5. ':return' → logprob: -5.61552095413208
    6. '       ' → logprob: -6.36552095413208
    7. '	       ' → logprob: -7.86552095413208
    8. '):
' → logprob: -8.115520477294922
    9. ' return' → logprob: -8.240520477294922
    10. '):' → logprob: -8.615520477294922

Token 1412: ' return' (ID: 622)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8186493515968323
    2. ' return' → logprob: -0.9436493515968323
    3. 'return' (adapté à ' return') → logprob: -2.4436492919921875
    4. '               ' → logprob: -3.3186492919921875
    5. ':
' → logprob: -4.0686492919921875
    6. '
' → logprob: -4.9436492919921875
    7. '   ' → logprob: -5.0686492919921875
    8. '       ' → logprob: -5.3186492919921875
    9. ':' → logprob: -6.0686492919921875
    10. ' 
' → logprob: -6.0686492919921875

Token 1413: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.0206720617134124e-05
    2. ' True' → logprob: -11.50001049041748
    3. '(True' → logprob: -20.500009536743164
    4. '1' → logprob: -20.750009536743164
    5. '   ' → logprob: -20.750009536743164
    6. 'False' → logprob: -21.125009536743164
    7. '
' → logprob: -23.750009536743164
    8. 'true' → logprob: -24.000009536743164
    9. '=True' → logprob: -24.500009536743164
    10. 'Tr' → logprob: -25.375009536743164

Token 1414: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6795423626899719
    2. '   ' → logprob: -1.4295423030853271
    3. ':
' → logprob: -2.804542303085327
    4. ':' → logprob: -2.804542303085327
    5. '       ' → logprob: -2.804542303085327
    6. '
' → logprob: -3.554542303085327
    7. ')' → logprob: -4.679542541503906
    8. ':return' → logprob: -5.054542541503906
    9. 'return' → logprob: -5.429542541503906
    10. '<|end|>' → logprob: -5.679542541503906

Token 1415: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030977610498666763
    2. '   ' → logprob: -4.405977725982666
    3. '       ' → logprob: -4.530977725982666
    4. '
' → logprob: -6.030977725982666
    5. '    
' → logprob: -6.405977725982666
    6. 'return' → logprob: -7.155977725982666
    7. '\n' → logprob: -7.280977725982666
    8. ' return' → logprob: -7.280977725982666
    9. '	return' → logprob: -8.155977249145508
    10. ')' → logprob: -9.280977249145508

Token 1416: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.44592463970184326
    2. ' return' → logprob: -2.320924758911133
    3. '       ' → logprob: -2.445924758911133
    4. '           ' → logprob: -2.570924758911133
    5. 'return' (adapté à ' return') → logprob: -3.820924758911133
    6. ' else' → logprob: -3.820924758911133
    7. '	return' → logprob: -3.945924758911133
    8. '
' → logprob: -4.820924758911133
    9. '    
' → logprob: -4.820924758911133
    10. '\n' → logprob: -5.570924758911133

Token 1417: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0005530327325686812
    2. ' False' → logprob: -7.500553131103516
    3. '(False' → logprob: -19.500553131103516
    4. 'false' → logprob: -23.375553131103516
    5. 'True' → logprob: -24.000553131103516
    6. '=False' → logprob: -24.000553131103516
    7. '
' → logprob: -24.250553131103516
    8. '0' → logprob: -24.250553131103516
    9. '_false' → logprob: -24.375553131103516
    10. '   ' → logprob: -25.000553131103516

Token 1418: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6566344499588013
    2. '       ' → logprob: -1.2816344499588013
    3. ':
' → logprob: -2.6566343307495117
    4. ':' → logprob: -3.2816343307495117
    5. '   ' → logprob: -3.5316343307495117
    6. '    
' → logprob: -4.406634330749512
    7. '\n' → logprob: -4.531634330749512
    8. '        
' → logprob: -5.156634330749512
    9. ')' → logprob: -5.406634330749512
    10. '.' → logprob: -5.656634330749512

Token 1419: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.863422155380249
    2. ' for' → logprob: -1.363422155380249
    3. '   ' → logprob: -2.113422155380249
    4. 'for' → logprob: -2.363422155380249
    5. '
' → logprob: -3.238422155380249
    6. ':' → logprob: -4.113422393798828
    7. ':
' → logprob: -4.488422393798828
    8. ' 
' → logprob: -4.863422393798828
    9. '    
' → logprob: -5.113422393798828
    10. ')' → logprob: -5.238422393798828

Token 1420: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27508121728897095
    2. 'for' → logprob: -1.7750811576843262
    3. ' for' → logprob: -2.650081157684326
    4. '
' → logprob: -8.900081634521484
    5. '#' (adapté à ' #') → logprob: -9.650081634521484
    6. 'sign' → logprob: -9.650081634521484
    7. '        
' → logprob: -10.400081634521484
    8. '   ' → logprob: -10.525081634521484
    9. '           ' → logprob: -10.900081634521484
    10. '```' → logprob: -11.525081634521484

Token 1421: ' Ref' (ID: 14132)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07385154068470001
    2. ' for' → logprob: -2.8238515853881836
    3. '       ' → logprob: -4.448851585388184
    4. '#' → logprob: -9.323851585388184
    5. 'sign' → logprob: -11.323851585388184
    6. '   ' → logprob: -11.573851585388184
    7. 'while' → logprob: -11.948851585388184
    8. '           ' → logprob: -13.573851585388184
    9. '
' → logprob: -14.573851585388184
    10. '	for' → logprob: -14.698851585388184

Token 1422: 'ine' (ID: 514)
  Prédit: 'ine'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ine' → logprob: -0.09240392595529556
    2. 'or' → logprob: -2.4674038887023926
    3. 'resh' → logprob: -6.842403888702393
    4. 'orm' → logprob: -7.217403888702393
    5. 'actor' → logprob: -7.467403888702393
    6. 'ormat' → logprob: -8.09240436553955
    7. 'in' → logprob: -8.59240436553955
    8. 'ilter' → logprob: -8.59240436553955
    9. 'er' → logprob: -8.71740436553955
    10. 'lect' → logprob: -9.84240436553955

Token 1423: ' sign' (ID: 2232)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5844671130180359
    2. ' for' → logprob: -0.8344671130180359
    3. '       ' → logprob: -5.209466934204102
    4. 'sign' → logprob: -6.584466934204102
    5. ' sign' → logprob: -7.084466934204102
    6. ' to' → logprob: -7.834466934204102
    7. '   ' → logprob: -9.209466934204102
    8. ' new' → logprob: -9.709466934204102
    9. 'while' → logprob: -10.084466934204102
    10. 'to' → logprob: -10.084466934204102

Token 1424: '/st' (ID: 27309)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.002191660227254033
    2. 's' → logprob: -6.252191543579102
    3. 'segments' → logprob: -8.502191543579102
    4. '_' → logprob: -10.502191543579102
    5. '_indices' → logprob: -12.002191543579102
    6. 'for' → logprob: -12.002191543579102
    7. 'ments' → logprob: -12.377191543579102
    8. '```' → logprob: -12.627191543579102
    9. '_s' → logprob: -13.127191543579102
    10. 'Segments' → logprob: -13.127191543579102

Token 1425: 'reet' (ID: 5409)
  Prédit: 'reet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reet' → logprob: -0.00016361083544325083
    2. 're' → logprob: -9.625164031982422
    3. '_segments' → logprob: -9.750164031982422
    4. 'ree' → logprob: -10.500164031982422
    5. 'segments' → logprob: -12.500164031982422
    6. 'ream' → logprob: -12.625164031982422
    7. 'REET' → logprob: -13.250164031982422
    8. 'reat' → logprob: -14.000164031982422
    9. '#' → logprob: -14.125164031982422
    10. 'Segments' → logprob: -15.500164031982422

Token 1426: ' sets' (ID: 11982)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.012204575352370739
    2. 'for' → logprob: -4.762204647064209
    3. 's' → logprob: -6.137204647064209
    4. 'segments' → logprob: -8.01220417022705
    5. '_' → logprob: -8.13720417022705
    6. '       ' → logprob: -8.76220417022705
    7. ' for' → logprob: -8.76220417022705
    8. '
' → logprob: -9.38720417022705
    9. '   ' → logprob: -9.38720417022705
    10. '```' → logprob: -9.38720417022705

Token 1427: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05459912493824959
    2. 'for' → logprob: -3.4295990467071533
    3. ' for' → logprob: -4.179599285125732
    4. '
' → logprob: -5.304599285125732
    5. '        
' → logprob: -8.554598808288574
    6. 'sign' → logprob: -9.054598808288574
    7. '<|end|>' → logprob: -10.429598808288574
    8. '```' → logprob: -10.804598808288574
    9. '   ' → logprob: -11.429598808288574
    10. '           ' → logprob: -11.554598808288574

Token 1428: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023123843129724264
    2. '
' → logprob: -6.877312183380127
    3. ' for' → logprob: -7.252312183380127
    4. 'for' → logprob: -7.877312183380127
    5. '        
' → logprob: -9.002312660217285
    6. '<|end|>' → logprob: -10.002312660217285
    7. '   ' → logprob: -12.252312660217285
    8. ',' → logprob: -12.502312660217285
    9. '```' → logprob: -13.002312660217285
    10. 's' → logprob: -13.127312660217285

Token 1429: ' street' (ID: 12901)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33188596367836
    2. '       ' → logprob: -2.081886053085327
    3. 'changed' → logprob: -2.206886053085327
    4. 'sign' → logprob: -4.081885814666748
    5. 'new' → logprob: -4.331885814666748
    6. 'street' (adapté à ' street') → logprob: -5.081885814666748
    7. 'prev' → logprob: -5.831885814666748
    8. 'while' → logprob: -6.331885814666748
    9. ' for' → logprob: -6.456885814666748
    10. 'change' → logprob: -6.581885814666748

Token 1430: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.0010412635747343302
    2. '_' → logprob: -6.876041412353516
    3. '_tokens' → logprob: -12.626041412353516
    4. '_
' → logprob: -13.251041412353516
    5. '```' → logprob: -14.376041412353516
    6. ' _' → logprob: -14.626041412353516
    7. 'Segments' → logprob: -14.626041412353516
    8. 'segments' → logprob: -15.251041412353516
    9. 's' → logprob: -15.376041412353516
    10. '
' → logprob: -15.751041412353516

Token 1431: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1310291886329651
    2. '.clear' → logprob: -2.8810291290283203
    3. ' =' → logprob: -3.0060291290283203
    4. '.inter' → logprob: -4.25602912902832
    5. '.dis' → logprob: -6.50602912902832
    6. '.' → logprob: -7.50602912902832
    7. ' &=' → logprob: -8.50602912902832
    8. '.update' → logprob: -8.63102912902832
    9. '=set' → logprob: -8.63102912902832
    10. '-=' → logprob: -8.88102912902832

Token 1432: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.1628323197364807
    2. '{' → logprob: -1.912832260131836
    3. 'street' → logprob: -6.037832260131836
    4. '{i' → logprob: -9.287832260131836
    5. ' set' → logprob: -10.412832260131836
    6. 'sign' → logprob: -10.412832260131836
    7. '{s' → logprob: -10.662832260131836
    8. 'segment' → logprob: -11.412832260131836
    9. 'st' → logprob: -11.537832260131836
    10. ' {' → logprob: -12.662832260131836

Token 1433: '()
' (ID: 1234)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.46527692675590515
    2. '()
' → logprob: -1.3402769565582275
    3. '()' → logprob: -2.7152769565582275
    4. '(s' → logprob: -4.090276718139648
    5. '([' → logprob: -4.215276718139648
    6. '(range' → logprob: -5.090276718139648
    7. '(se' → logprob: -5.465276718139648
    8. '(seg' → logprob: -6.715276718139648
    9. '(
' → logprob: -8.090276718139648
    10. '(filter' → logprob: -8.340276718139648

Token 1434: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1738458126783371
    2. 'for' → logprob: -1.9238457679748535
    3. 'sign' → logprob: -4.4238457679748535
    4. ' for' → logprob: -6.5488457679748535
    5. '   ' → logprob: -10.423846244812012
    6. ' sign' → logprob: -10.798846244812012
    7. '
' → logprob: -10.923846244812012
    8. '	for' → logprob: -11.298846244812012
    9. '           ' → logprob: -11.923846244812012
    10. '	sign' → logprob: -12.173846244812012

Token 1435: ' for' (ID: 395)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.02325933612883091
    2. 'for' (adapté à ' for') → logprob: -3.773259401321411
    3. '       ' → logprob: -11.773259162902832
    4. ' for' → logprob: -12.898259162902832
    5. ' sign' → logprob: -12.898259162902832
    6. '
' → logprob: -14.023259162902832
    7. '           ' → logprob: -16.02326011657715
    8. '   ' → logprob: -16.27326011657715
    9. '        
' → logprob: -17.39826011657715
    10. 'while' → logprob: -17.39826011657715

Token 1436: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.25224676728248596
    2. ' i' → logprob: -1.5022467374801636
    3. 's' → logprob: -8.752246856689453
    4. ' s' → logprob: -9.002246856689453
    5. 'idx' → logprob: -11.377246856689453
    6. 'seg' → logprob: -12.002246856689453
    7. ' idx' → logprob: -12.127246856689453
    8. ' seg' → logprob: -12.377246856689453
    9. '   ' → logprob: -12.752246856689453
    10. '	i' → logprob: -13.627246856689453

Token 1437: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04860259220004082
    2. 'in' → logprob: -3.04860258102417
    3. '   ' → logprob: -12.298603057861328
    4. ' ' → logprob: -12.798603057861328
    5. ',' → logprob: -13.173603057861328
    6. '	in' → logprob: -13.173603057861328
    7. ')' → logprob: -14.423603057861328
    8. 'n' → logprob: -14.548603057861328
    9. '
' → logprob: -14.548603057861328
    10. '  ' → logprob: -14.673603057861328

Token 1438: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.45848218582978e-06
    2. ' range' → logprob: -13.00000286102295
    3. 'se' → logprob: -16.375001907348633
    4. '
' → logprob: -21.625001907348633
    5. '(range' → logprob: -22.750001907348633
    6. 'ran' → logprob: -23.000001907348633
    7. '   ' → logprob: -23.000001907348633
    8. ' ' → logprob: -23.000001907348633
    9. '```' → logprob: -23.000001907348633
    10. '	range' → logprob: -23.375001907348633

Token 1439: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00027456742827780545
    2. '(n' → logprob: -8.250274658203125
    3. ' n' → logprob: -11.250274658203125
    4. 'len' → logprob: -16.000274658203125
    5. ')n' → logprob: -16.500274658203125
    6. '	n' → logprob: -17.000274658203125
    7. '   ' → logprob: -17.125274658203125
    8. '
' → logprob: -17.250274658203125
    9. ',n' → logprob: -17.875274658203125
    10. '(len' → logprob: -18.125274658203125

Token 1440: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.7405096292495728
    2. '):' → logprob: -0.7405096292495728
    3. ')' → logprob: -3.115509510040283
    4. '       ' → logprob: -7.865509510040283
    5. '   ' → logprob: -7.865509510040283
    6. '+' → logprob: -8.365509986877441
    7. ':' → logprob: -8.490509986877441
    8. ',' → logprob: -8.615509986877441
    9. 'if' → logprob: -9.615509986877441
    10. '           ' → logprob: -9.990509986877441

Token 1441: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.35145124793052673
    2. '           ' → logprob: -2.1014511585235596
    3. ' if' → logprob: -2.7264511585235596
    4. '       ' → logprob: -2.7264511585235596
    5. '    
' → logprob: -4.601451396942139
    6. 'if' → logprob: -4.851451396942139
    7. ':' → logprob: -5.601451396942139
    8. '	if' → logprob: -5.726451396942139
    9. '	   ' → logprob: -5.851451396942139
    10. '
' → logprob: -6.101451396942139

Token 1442: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3183397948741913
    2. 'if' (adapté à ' if') → logprob: -1.3183398246765137
    3. '   ' → logprob: -5.318339824676514
    4. '
' → logprob: -10.193339347839355
    5. 's' → logprob: -10.693339347839355
    6. '	if' → logprob: -11.193339347839355
    7. '    
' → logprob: -11.318339347839355
    8. '           ' → logprob: -11.568339347839355
    9. 'print' → logprob: -11.568339347839355
    10. '       ' → logprob: -11.693339347839355

Token 1443: ' is' (ID: 382)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.593186616897583
    2. ' is' → logprob: -0.843186616897583
    3. ' not' → logprob: -4.593186378479004
    4. 'not' → logprob: -4.968186378479004
    5. '   ' → logprob: -10.968186378479004
    6. 'sign' → logprob: -12.843186378479004
    7. '           ' → logprob: -14.468186378479004
    8. ' ' → logprob: -14.593186378479004
    9. '(is' → logprob: -14.843186378479004
    10. ')is' → logprob: -14.968186378479004

Token 1444: '_sign' (ID: 24730)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.669659435749054
    2. '_sign' → logprob: -0.919659435749054
    3. '(i' → logprob: -2.419659376144409
    4. 'i' → logprob: -7.669659614562988
    5. 's' → logprob: -10.669659614562988
    6. ' i' → logprob: -12.169659614562988
    7. '(sign' → logprob: -12.419659614562988
    8. '
' → logprob: -13.169659614562988
    9. '[i' → logprob: -13.294659614562988
    10. '```' → logprob: -13.544659614562988

Token 1445: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -3.249780638725497e-05
    2. '(' → logprob: -10.375032424926758
    3. ' (' → logprob: -13.750032424926758
    4. '(
' → logprob: -16.000032424926758
    5. ')' → logprob: -17.375032424926758
    6. '[i' → logprob: -19.625032424926758
    7. '(I' → logprob: -19.875032424926758
    8. ')(' → logprob: -20.125032424926758
    9. '(ii' → logprob: -20.125032424926758
    10. '(int' → logprob: -20.500032424926758

Token 1446: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.4953754246234894
    2. '):
' → logprob: -0.995375394821167
    3. ')' → logprob: -3.995375394821167
    4. ')==' → logprob: -5.995375633239746
    5. '==' → logprob: -8.870375633239746
    6. ' ):' → logprob: -10.870375633239746
    7. ':' → logprob: -11.870375633239746
    8. ' ):
' → logprob: -12.370375633239746
    9. '):
' → logprob: -12.870375633239746
    10. ')=' → logprob: -13.245375633239746

Token 1447: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04217153787612915
    2. ':
' → logprob: -3.7921714782714844
    3. ':' → logprob: -4.167171478271484
    4. '       ' → logprob: -6.042171478271484
    5. ' continue' → logprob: -8.167171478271484
    6. '):
' → logprob: -9.167171478271484
    7. '   ' → logprob: -9.167171478271484
    8. 'continue' → logprob: -9.292171478271484
    9. '               ' → logprob: -9.542171478271484
    10. ',' → logprob: -10.042171478271484

Token 1448: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' (adapté à ' sign') → logprob: -0.018186818808317184
    2. ' sign' → logprob: -4.018187046051025
    3. '           ' → logprob: -10.643186569213867
    4. '   ' → logprob: -11.768186569213867
    5. '	sign' → logprob: -13.143186569213867
    6. '               ' → logprob: -13.393186569213867
    7. '
' → logprob: -13.768186569213867
    8. '(sign' → logprob: -15.018186569213867
    9. '                   ' → logprob: -15.768186569213867
    10. 'continue' → logprob: -16.018186569213867

Token 1449: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -2.5941604690160602e-05
    2. '_' → logprob: -10.875025749206543
    3. '_tokens' → logprob: -12.375025749206543
    4. 's' → logprob: -13.875025749206543
    5. '```' → logprob: -14.250025749206543
    6. 'Segments' → logprob: -15.750025749206543
    7. '_s' → logprob: -15.750025749206543
    8. ' _' → logprob: -15.875025749206543
    9. '_sequences' → logprob: -15.875025749206543
    10. ''_' → logprob: -16.12502670288086

Token 1450: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0031794982496649027
    2. '.' → logprob: -5.753179550170898
    3. ' .' → logprob: -13.878179550170898
    4. '.remove' → logprob: -14.628179550170898
    5. 'add' → logprob: -15.503179550170898
    6. ')add' → logprob: -16.3781795501709
    7. '.dis' → logprob: -16.6281795501709
    8. '.Add' → logprob: -17.2531795501709
    9. '.append' → logprob: -17.8781795501709
    10. '	add' → logprob: -18.0031795501709

Token 1451: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.165027217415627e-05
    2. 'i' → logprob: -10.750021934509277
    3. '(' → logprob: -16.12502098083496
    4. ' i' → logprob: -18.50002098083496
    5. ' (' → logprob: -19.25002098083496
    6. '(
' → logprob: -19.50002098083496
    7. '{i' → logprob: -19.50002098083496
    8. '	i' → logprob: -20.50002098083496
    9. '((' → logprob: -20.75002098083496
    10. '[i' → logprob: -21.50002098083496

Token 1452: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06200141832232475
    2. ')
' → logprob: -2.8120014667510986
    3. '       ' → logprob: -10.81200122833252
    4. '           ' → logprob: -12.43700122833252
    5. '):
' → logprob: -12.56200122833252
    6. '   ' → logprob: -14.06200122833252
    7. ')return' → logprob: -14.06200122833252
    8. ')
' → logprob: -14.18700122833252
    9. '               ' → logprob: -14.43700122833252
    10. ' )' → logprob: -14.68700122833252

Token 1453: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008390454575419426
    2. 'else' → logprob: -4.883390426635742
    3. '       ' → logprob: -7.758390426635742
    4. ' else' → logprob: -8.258390426635742
    5. 'continue' → logprob: -10.508390426635742
    6. '```' → logprob: -10.508390426635742
    7. '               ' → logprob: -11.258390426635742
    8. '          ' → logprob: -12.008390426635742
    9. '<|end|>' → logprob: -12.008390426635742
    10. '   ' → logprob: -12.133390426635742

Token 1454: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19096685945987701
    2. 'else' (adapté à ' else') → logprob: -1.8159668445587158
    3. ' else' → logprob: -4.815967082977295
    4. '       ' → logprob: -5.815967082977295
    5. '   ' → logprob: -10.190966606140137
    6. '               ' → logprob: -11.315966606140137
    7. '
' → logprob: -11.690966606140137
    8. '          ' → logprob: -11.690966606140137
    9. '         ' → logprob: -12.440966606140137
    10. ' ' → logprob: -13.190966606140137

Token 1455: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13226072490215302
    2. ':
' → logprob: -2.132260799407959
    3. '               ' → logprob: -5.257260799407959
    4. '           ' → logprob: -10.1322603225708
    5. '[' → logprob: -10.8822603225708
    6. 's' → logprob: -11.1322603225708
    7. '       ' → logprob: -12.3822603225708
    8. ',' → logprob: -12.3822603225708
    9. ' :' → logprob: -12.3822603225708
    10. '   ' → logprob: -12.8822603225708

Token 1456: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016158239915966988
    2. '   ' → logprob: -5.016158103942871
    3. '               ' → logprob: -5.141158103942871
    4. '       ' → logprob: -5.891158103942871
    5. 'street' → logprob: -8.141158103942871
    6. '	st' → logprob: -8.766158103942871
    7. '```' → logprob: -8.891158103942871
    8. '	       ' → logprob: -9.766158103942871
    9. 'stre' → logprob: -9.891158103942871
    10. '
' → logprob: -10.516158103942871

Token 1457: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' (adapté à ' street') → logprob: -0.0032913058530539274
    2. ' street' → logprob: -6.128291130065918
    3. 'stre' → logprob: -7.128291130065918
    4. '               ' → logprob: -8.503291130065918
    5. '
' → logprob: -9.878291130065918
    6. 'st' → logprob: -11.003291130065918
    7. '           ' → logprob: -11.378291130065918
    8. '   ' → logprob: -11.753291130065918
    9. '```' → logprob: -12.128291130065918
    10. 'stroke' → logprob: -12.628291130065918

Token 1458: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -8.685467764735222e-05
    2. '_' → logprob: -9.375086784362793
    3. ' _' → logprob: -13.875086784362793
    4. '_
' → logprob: -15.000086784362793
    5. '```' → logprob: -16.25008773803711
    6. '_s' → logprob: -16.37508773803711
    7. '_sequences' → logprob: -16.37508773803711
    8. 's' → logprob: -16.37508773803711
    9. '_segment' → logprob: -16.75008773803711
    10. ''_' → logprob: -16.75008773803711

Token 1459: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.011050417087972164
    2. '.' → logprob: -4.511050224304199
    3. ' .' → logprob: -14.1360502243042
    4. 'add' → logprob: -14.2610502243042
    5. '.Add' → logprob: -14.8860502243042
    6. '.dis' → logprob: -15.5110502243042
    7. '.remove' → logprob: -15.6360502243042
    8. ' add' → logprob: -16.011051177978516
    9. '_add' → logprob: -16.386051177978516
    10. '	add' → logprob: -16.761051177978516

Token 1460: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -8.590104698669165e-05
    2. 'i' → logprob: -9.375085830688477
    3. '(' → logprob: -14.125085830688477
    4. ' (' → logprob: -15.625085830688477
    5. ' i' → logprob: -15.875085830688477
    6. '(
' → logprob: -16.750085830688477
    7. '	i' → logprob: -19.875085830688477
    8. '{i' → logprob: -20.250085830688477
    9. '(int' → logprob: -20.375085830688477
    10. '[i' → logprob: -21.250085830688477

Token 1461: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.245724504580721e-05
    2. '(i' → logprob: -10.375092506408691
    3. '[i' → logprob: -10.875092506408691
    4. ')
' → logprob: -11.125092506408691
    5. ')i' → logprob: -11.250092506408691
    6. ' )' → logprob: -12.375092506408691
    7. '       ' → logprob: -13.250092506408691
    8. '           ' → logprob: -13.500092506408691
    9. '   ' → logprob: -13.625092506408691
    10. '())' → logprob: -13.750092506408691

Token 1462: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1463: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24595831334590912
    2. 'for' → logprob: -2.3709583282470703
    3. '
' → logprob: -2.4959583282470703
    4. '#' (adapté à ' #') → logprob: -3.9959583282470703
    5. ' for' → logprob: -4.24595832824707
    6. '<|end|>' → logprob: -5.74595832824707
    7. '   ' → logprob: -5.87095832824707
    8. '        
' → logprob: -6.87095832824707
    9. '```' → logprob: -6.87095832824707
    10. 'graph' → logprob: -7.49595832824707

Token 1464: ' Build' (ID: 10885)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1968640387058258
    2. 'for' → logprob: -2.196864128112793
    3. ' for' → logprob: -2.946864128112793
    4. '#' → logprob: -5.071864128112793
    5. '
' → logprob: -5.321864128112793
    6. 'graph' → logprob: -6.446864128112793
    7. '        
' → logprob: -6.696864128112793
    8. '   ' → logprob: -8.071864128112793
    9. ' graph' → logprob: -8.571864128112793
    10. '```' → logprob: -9.071864128112793

Token 1465: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.43110254406929016
    2. 'for' → logprob: -1.6811025142669678
    3. ' graph' → logprob: -2.3061025142669678
    4. ' for' → logprob: -3.3061025142669678
    5. 'street' → logprob: -4.181102752685547
    6. ' street' → logprob: -5.056102752685547
    7. '#' → logprob: -5.681102752685547
    8. '```' → logprob: -7.181102752685547
    9. ' adjacency' → logprob: -7.681102752685547
    10. ' streets' → logprob: -7.681102752685547

Token 1466: ' over' (ID: 1072)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014591661747545004
    2. 'for' → logprob: -7.001459121704102
    3. ' for' → logprob: -8.001459121704102
    4. '
' → logprob: -8.501459121704102
    5. '        
' → logprob: -12.001459121704102
    6. '   ' → logprob: -14.251459121704102
    7. ')' → logprob: -14.376459121704102
    8. '<|end|>' → logprob: -14.751459121704102
    9. ',' → logprob: -15.251459121704102
    10. ')
' → logprob: -15.751459121704102

Token 1467: ' points' (ID: 5571)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.10003411024808884
    2. ' street' → logprob: -2.72503399848938
    3. 'stre' → logprob: -4.225034236907959
    4. 'points' → logprob: -5.225034236907959
    5. ' streets' → logprob: -6.100034236907959
    6. 'st' → logprob: -6.475034236907959
    7. ' points' → logprob: -6.850034236907959
    8. '   ' → logprob: -7.100034236907959
    9. 'the' → logprob: -7.100034236907959
    10. '```' → logprob: -7.725034236907959

Token 1468: ' (' (ID: 350)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7164320945739746
    2. ' for' → logprob: -1.4664320945739746
    3. '       ' → logprob: -1.5914320945739746
    4. '
' → logprob: -2.5914320945739746
    5. '        
' → logprob: -7.341432094573975
    6. '```' → logprob: -7.841432094573975
    7. ',' → logprob: -8.216432571411133
    8. ':' → logprob: -8.466432571411133
    9. ':
' → logprob: -9.341432571411133
    10. ')' → logprob: -9.591432571411133

Token 1469: 'intersection' (ID: 170255)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')
' → logprob: -1.134372353553772
    2. ')' → logprob: -1.259372353553772
    3. 'for' → logprob: -1.759372353553772
    4. 'street' → logprob: -2.3843722343444824
    5. ' for' → logprob: -3.0093722343444824
    6. '
' → logprob: -3.5093722343444824
    7. '       ' → logprob: -4.134372234344482
    8. ' street' → logprob: -4.384372234344482
    9. '   ' → logprob: -5.884372234344482
    10. '#' → logprob: -5.884372234344482

Token 1470: ' of' (ID: 328)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.1874120533466339
    2. ')' → logprob: -2.0624120235443115
    3. '_points' → logprob: -4.187412261962891
    4. '
' → logprob: -4.937412261962891
    5. ')
' → logprob: -5.062412261962891
    6. 'points' → logprob: -5.812412261962891
    7. '_nodes' → logprob: -5.812412261962891
    8. ',' → logprob: -6.187412261962891
    9. '):
' → logprob: -6.562412261962891
    10. '):' → logprob: -6.562412261962891

Token 1471: ' streets' (ID: 25360)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.7051029205322266
    2. 'se' → logprob: -1.8301029205322266
    3. 'street' → logprob: -1.9551029205322266
    4. ' street' → logprob: -2.7051029205322266
    5. ' segments' → logprob: -2.9551029205322266
    6. 'stre' → logprob: -2.9551029205322266
    7. ' streets' → logprob: -4.705102920532227
    8. 'sign' → logprob: -4.705102920532227
    9. 'edges' → logprob: -6.205102920532227
    10. '```' → logprob: -6.205102920532227

Token 1472: ')' (ID: 8)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.3532049059867859
    2. ')' → logprob: -1.3532049655914307
    3. '):
' → logprob: -4.103204727172852
    4. ',' → logprob: -4.353204727172852
    5. '       ' → logprob: -5.728204727172852
    6. '):' → logprob: -6.103204727172852
    7. ',
' → logprob: -7.103204727172852
    8. 's' → logprob: -7.478204727172852
    9. ' and' → logprob: -7.728204727172852
    10. 'segments' → logprob: -7.853204727172852

Token 1473: ' with' (ID: 483)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.765754222869873
    2. ' for' → logprob: -0.890754222869873
    3. '       ' → logprob: -2.390754222869873
    4. '
' → logprob: -3.515754222869873
    5. '<|end|>' → logprob: -6.015754222869873
    6. '        
' → logprob: -7.515754222869873
    7. '```' → logprob: -9.265754699707031
    8. '	for' → logprob: -9.765754699707031
    9. '<|end|>' → logprob: -9.765754699707031
    10. ',' → logprob: -10.140754699707031

Token 1474: ' edges' (ID: 22569)
  Prédit: ' edges'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' edges' → logprob: -1.2469565868377686
    2. 'edges' → logprob: -2.1219565868377686
    3. 'sign' → logprob: -2.2469565868377686
    4. 'for' → logprob: -2.4969565868377686
    5. 'street' → logprob: -2.6219565868377686
    6. 'out' → logprob: -3.1219565868377686
    7. 'the' → logprob: -3.1219565868377686
    8. ' street' → logprob: -3.3719565868377686
    9. ' the' → logprob: -3.8719565868377686
    10. ' for' → logprob: -3.8719565868377686

Token 1475: ' oriented' (ID: 60203)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6868250966072083
    2. 'for' → logprob: -1.1868250370025635
    3. '       ' → logprob: -1.6868250370025635
    4. ',' → logprob: -6.561825275421143
    5. ' =' → logprob: -6.561825275421143
    6. ':
' → logprob: -7.186825275421143
    7. '
' → logprob: -7.186825275421143
    8. '        
' → logprob: -7.686825275421143
    9. ':' → logprob: -7.936825275421143
    10. ')' → logprob: -8.561824798583984

Token 1476: ' according' (ID: 7065)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8394757509231567
    2. ' for' → logprob: -1.3394757509231567
    3. 'from' → logprob: -2.339475631713867
    4. ':' → logprob: -3.589475631713867
    5. ' (' → logprob: -4.339475631713867
    6. ' at' → logprob: -4.464475631713867
    7. '=' → logprob: -4.589475631713867
    8. '   ' → logprob: -4.589475631713867
    9. ' toward' → logprob: -4.589475631713867
    10. ' to' → logprob: -4.589475631713867

Token 1477: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.00784297101199627
    2. ' to' → logprob: -4.882843017578125
    3. '_to' → logprob: -8.632843017578125
    4. '#' → logprob: -10.757843017578125
    5. 'To' → logprob: -11.257843017578125
    6. '<|end|>' → logprob: -12.132843017578125
    7. '=' → logprob: -12.382843017578125
    8. '(to' → logprob: -13.132843017578125
    9. '```' → logprob: -13.257843017578125
    10. '...' → logprob: -13.507843017578125

Token 1478: ' street' (ID: 12901)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -1.2066437005996704
    2. 'the' → logprob: -1.5816437005996704
    3. 'length' → logprob: -1.5816437005996704
    4. 'sign' → logprob: -1.8316437005996704
    5. 'their' → logprob: -3.831643581390381
    6. 'segment' → logprob: -3.956643581390381
    7. 'segments' → logprob: -4.206643581390381
    8. 'distance' → logprob: -4.456643581390381
    9. 'direction' → logprob: -4.581643581390381
    10. 'se' → logprob: -4.706643581390381

Token 1479: ' direction' (ID: 9262)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.50508052110672
    2. 'for' → logprob: -1.8800804615020752
    3. ' for' → logprob: -1.8800804615020752
    4. '<|end|>' → logprob: -3.380080461502075
    5. '        
' → logprob: -3.755080461502075
    6. '        ' → logprob: -5.380080699920654
    7. '
' → logprob: -5.505080699920654
    8. '   ' → logprob: -5.880080699920654
    9. '<|end|>' → logprob: -6.005080699920654
    10. 's' → logprob: -6.005080699920654

Token 1480: ' rules' (ID: 9607)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.055503860116004944
    2. '
' → logprob: -3.1805038452148438
    3. ' for' → logprob: -5.180503845214844
    4. '        
' → logprob: -5.805503845214844
    5. 'for' → logprob: -6.055503845214844
    6. ',' → logprob: -7.805503845214844
    7. ':' → logprob: -8.055503845214844
    8. 'points' → logprob: -9.430503845214844
    9. '#' → logprob: -9.680503845214844
    10. '   ' → logprob: -9.805503845214844

Token 1481: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0085215512663126
    2. '
' → logprob: -5.383521556854248
    3. '        
' → logprob: -6.633521556854248
    4. 'for' → logprob: -6.758521556854248
    5. ' for' → logprob: -6.883521556854248
    6. '   ' → logprob: -9.38352108001709
    7. '#' → logprob: -9.50852108001709
    8. ',' → logprob: -9.63352108001709
    9. '    
' → logprob: -10.50852108001709
    10. '<|end|>' → logprob: -10.88352108001709

Token 1482: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01128182839602232
    2. ' for' → logprob: -5.011281967163086
    3. 'for' → logprob: -6.011281967163086
    4. '
' → logprob: -6.636281967163086
    5. '   ' → logprob: -7.511281967163086
    6. '        
' → logprob: -8.886281967163086
    7. '	for' → logprob: -11.011281967163086
    8. '<|end|>' → logprob: -11.261281967163086
    9. '```' → logprob: -11.386281967163086
    10. '#' → logprob: -11.761281967163086

Token 1483: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4821776747703552
    2. ' for' → logprob: -1.357177734375
    3. 'for' → logprob: -2.107177734375
    4. '
' → logprob: -6.232177734375
    5. '   ' → logprob: -7.107177734375
    6. '        
' → logprob: -7.857177734375
    7. ' 
' → logprob: -9.357177734375
    8. '#' (adapté à ' #') → logprob: -9.482177734375
    9. '	for' → logprob: -10.107177734375
    10. ' ' → logprob: -10.982177734375

Token 1484: ' Construct' (ID: 36230)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7513598203659058
    2. ' for' → logprob: -1.0013598203659058
    3. '       ' → logprob: -1.8763598203659058
    4. '
' → logprob: -5.626359939575195
    5. '#' → logprob: -6.626359939575195
    6. '   ' → logprob: -6.751359939575195
    7. '        
' → logprob: -7.751359939575195
    8. ' #' → logprob: -8.751359939575195
    9. 'points' → logprob: -8.876359939575195
    10. ' 
' → logprob: -9.001359939575195

Token 1485: ' und' (ID: 844)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7877628207206726
    2. ' for' → logprob: -1.0377628803253174
    3. '#' → logprob: -2.6627628803253174
    4. 'street' → logprob: -4.037762641906738
    5. 'graph' → logprob: -4.162762641906738
    6. '       ' → logprob: -4.412762641906738
    7. ' street' → logprob: -4.662762641906738
    8. '   ' → logprob: -4.662762641906738
    9. 'point' → logprob: -4.662762641906738
    10. '```' → logprob: -5.287762641906738

Token 1486: 'irected' (ID: 149617)
  Prédit: 'irected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irected' → logprob: -0.023454055190086365
    2. 'er' → logprob: -3.898453950881958
    3. '       ' → logprob: -6.898454189300537
    4. 'graph' → logprob: -7.773454189300537
    5. 'irectional' → logprob: -8.148453712463379
    6. 'f' → logprob: -8.648453712463379
    7. '```' → logprob: -8.898453712463379
    8. 'raph' → logprob: -9.023453712463379
    9. '   ' → logprob: -9.398453712463379
    10. '[' → logprob: -9.523453712463379

Token 1487: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.41002118587493896
    2. 'graph' → logprob: -1.160021185874939
    3. '_graph' → logprob: -3.7850213050842285
    4. '_edges' → logprob: -9.66002082824707
    5. '
' → logprob: -10.16002082824707
    6. ' edges' → logprob: -11.03502082824707
    7. '	graph' → logprob: -11.41002082824707
    8. '```' → logprob: -11.53502082824707
    9. '(graph' → logprob: -12.03502082824707
    10. 'Graph' → logprob: -12.16002082824707

Token 1488: ' of' (ID: 328)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3594900369644165
    2. ' =' → logprob: -2.109489917755127
    3. '
' → logprob: -3.234489917755127
    4. ':' → logprob: -3.609489917755127
    5. '=' → logprob: -3.734489917755127
    6. ')' → logprob: -3.984489917755127
    7. 'for' → logprob: -4.359489917755127
    8. '<|end|>' → logprob: -4.734489917755127
    9. '(points' → logprob: -4.859489917755127
    10. ' for' → logprob: -4.859489917755127

Token 1489: ' streets' (ID: 25360)
  Prédit: 'stre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stre' → logprob: -0.3906843960285187
    2. 'street' → logprob: -1.2656843662261963
    3. 'points' → logprob: -3.8906843662261963
    4. ' streets' → logprob: -5.015684604644775
    5. 'se' → logprob: -5.265684604644775
    6. 'for' → logprob: -6.140684604644775
    7. ' street' → logprob: -6.265684604644775
    8. 'st' → logprob: -7.015684604644775
    9. '```' → logprob: -7.140684604644775
    10. 'segments' → logprob: -7.265684604644775

Token 1490: ' first' (ID: 1577)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5284026861190796
    2. '
' → logprob: -1.1534026861190796
    3. 'for' → logprob: -2.653402805328369
    4. ' for' → logprob: -3.903402805328369
    5. '<|end|>' → logprob: -6.528402805328369
    6. '        
' → logprob: -6.778402805328369
    7. ')' → logprob: -8.278402328491211
    8. '```' → logprob: -8.528402328491211
    9. ')
' → logprob: -8.653402328491211
    10. 'points' → logprob: -8.778402328491211

Token 1491: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06759728491306305
    2. '
' → logprob: -3.3175973892211914
    3. ' for' → logprob: -4.192597389221191
    4. 'for' → logprob: -4.442597389221191
    5. '<|end|>' → logprob: -6.942597389221191
    6. '        
' → logprob: -8.067597389221191
    7. '   ' → logprob: -8.067597389221191
    8. ')' → logprob: -8.317597389221191
    9. ',' → logprob: -9.067597389221191
    10. '.' → logprob: -10.317597389221191

Token 1492: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1925058215856552
    2. 'for' → logprob: -2.1925058364868164
    3. ' for' → logprob: -2.9425058364868164
    4. '
' → logprob: -4.567505836486816
    5. '        
' → logprob: -8.942505836486816
    6. '```' → logprob: -9.942505836486816
    7. '#' → logprob: -10.442505836486816
    8. ',' → logprob: -10.567505836486816
    9. '   ' → logprob: -10.692505836486816
    10. '<|end|>' → logprob: -11.067505836486816

Token 1493: ' graph' (ID: 7465)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10516711324453354
    2. ' for' → logprob: -2.8551671504974365
    3. '
' → logprob: -3.3551671504974365
    4. '       ' → logprob: -4.980166912078857
    5. ' 
' → logprob: -8.480167388916016
    6. '        
' → logprob: -8.855167388916016
    7. 'graph' (adapté à ' graph') → logprob: -9.355167388916016
    8. '```' → logprob: -10.480167388916016
    9. '  
' → logprob: -11.980167388916016
    10. '	for' → logprob: -12.105167388916016

Token 1494: '_' (ID: 62)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.17478501796722412
    2. '=' → logprob: -1.9247850179672241
    3. ' =' → logprob: -4.424785137176514
    4. '[
' → logprob: -7.549785137176514
    5. '[]' → logprob: -7.924785137176514
    6. '```' → logprob: -7.924785137176514
    7. '['' → logprob: -8.424784660339355
    8. '\[' → logprob: -8.799784660339355
    9. '[:]' → logprob: -8.924784660339355
    10. '=[' → logprob: -9.174784660339355

Token 1495: 'und' (ID: 980)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.046741992235183716
    2. ' =' → logprob: -3.6717419624328613
    3. '[' → logprob: -3.9217419624328613
    4. '_' → logprob: -8.92174243927002
    5. '[
' → logprob: -9.29674243927002
    6. '['' → logprob: -10.54674243927002
    7. '[]' → logprob: -10.54674243927002
    8. 'default' → logprob: -11.04674243927002
    9. ',' → logprob: -11.17174243927002
    10. '```' → logprob: -11.17174243927002

Token 1496: 'irected' (ID: 149617)
  Prédit: 'irected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irected' → logprob: -0.011459682136774063
    2. 'ir' → logprob: -4.761459827423096
    3. 'er' → logprob: -6.386459827423096
    4. '=' → logprob: -7.261459827423096
    5. '[' → logprob: -8.136459350585938
    6. '=
' → logprob: -10.511459350585938
    7. 'e' → logprob: -10.636459350585938
    8. '=[' → logprob: -10.886459350585938
    9. '```' → logprob: -11.261459350585938
    10. '={}
' → logprob: -11.386459350585938

Token 1497: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03079984150826931
    2. '[' → logprob: -3.7807998657226562
    3. ' =' → logprob: -4.905799865722656
    4. '[
' → logprob: -10.405799865722656
    5. ']' → logprob: -10.655799865722656
    6. '=[' → logprob: -11.155799865722656
    7. '```' → logprob: -11.405799865722656
    8. '[:]' → logprob: -12.155799865722656
    9. '.' → logprob: -12.405799865722656
    10. '['' → logprob: -12.405799865722656

Token 1498: 'default' (ID: 4211)
  Prédit: 'default'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -1.9361264946837764e-07
    2. ' defaultdict' → logprob: -16.375
    3. '"default' → logprob: -18.125
    4. '(default' → logprob: -18.5
    5. '.default' → logprob: -18.625
    6. '{}' → logprob: -19.625
    7. '{' → logprob: -19.625
    8. ''default' → logprob: -19.875
    9. '=' → logprob: -20.25
    10. 'Default' → logprob: -20.5

Token 1499: 'dict' (ID: 20993)
  Prédit: 'dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: 0.0
    2. ' dict' → logprob: -21.125
    3. 'default' → logprob: -21.125
    4. '(dict' → logprob: -23.125
    5. 'list' → logprob: -23.375
    6. 'def' → logprob: -23.375
    7. 'dic' → logprob: -23.75
    8. 'dist' → logprob: -24.0
    9. 'Dict' → logprob: -24.375
    10. 'd' → logprob: -27.0

Token 1500: '(set' (ID: 25904)
  Prédit: '(list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.0004137496289331466
    2. 'list' → logprob: -8.00041389465332
    3. '(' → logprob: -10.50041389465332
    4. '(set' → logprob: -11.00041389465332
    5. '(lambda' → logprob: -11.25041389465332
    6. '(
' → logprob: -11.37541389465332
    7. '(<' → logprob: -12.00041389465332
    8. '(dict' → logprob: -13.62541389465332
    9. '[list' → logprob: -13.75041389465332
    10. '=list' → logprob: -14.87541389465332

Token 1501: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5776901245117188
    2. ')
' → logprob: -0.8276901245117188
    3. '()' → logprob: -7.577690124511719
    4. ')
' → logprob: -7.702690124511719
    5. '())
' → logprob: -8.077690124511719
    6. '()
' → logprob: -8.577690124511719
    7. '())' → logprob: -8.952690124511719
    8. ')

' → logprob: -9.827690124511719
    9. '   ' → logprob: -10.327690124511719
    10. '[' → logprob: -10.452690124511719

Token 1502: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.09137947857379913
    2. ' for' → logprob: -3.091379404067993
    3. '       ' → logprob: -3.341379404067993
    4. '   ' → logprob: -5.341379642486572
    5. '
' → logprob: -6.466379642486572
    6. '	for' → logprob: -10.091379165649414
    7. '```' → logprob: -10.841379165649414
    8. ' ' → logprob: -11.091379165649414
    9. '    
' → logprob: -11.216379165649414
    10. '        
' → logprob: -11.341379165649414

Token 1503: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0004653465002775192
    2. ' for' → logprob: -8.000465393066406
    3. '       ' → logprob: -9.000465393066406
    4. '
' → logprob: -12.750465393066406
    5. '```' → logprob: -12.875465393066406
    6. '   ' → logprob: -14.000465393066406
    7. '	for' → logprob: -16.000465393066406
    8. '``' → logprob: -16.750465393066406
    9. '        
' → logprob: -16.875465393066406
    10. '           ' → logprob: -17.625465393066406

Token 1504: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10098896920681
    2. ' i' → logprob: -2.3509888648986816
    3. 's' → logprob: -7.600988864898682
    4. ' s' → logprob: -8.35098934173584
    5. '   ' → logprob: -11.22598934173584
    6. ' (' → logprob: -11.35098934173584
    7. 'idx' → logprob: -12.35098934173584
    8. '(i' → logprob: -12.47598934173584
    9. 'seg' → logprob: -12.97598934173584
    10. ' idx' → logprob: -13.22598934173584

Token 1505: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -1.0338479280471802
    2. 'in' → logprob: -1.2838479280471802
    3. ',' → logprob: -1.6588479280471802
    4. ',(' → logprob: -1.9088479280471802
    5. ',p' → logprob: -4.033847808837891
    6. ' ,' → logprob: -5.658847808837891
    7. ',s' → logprob: -5.908847808837891
    8. ',se' → logprob: -6.033847808837891
    9. '(p' → logprob: -6.908847808837891
    10. 's' → logprob: -7.908847808837891

Token 1506: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.015021582134068012
    2. 'range' → logprob: -4.265021800994873
    3. 'se' → logprob: -7.640021800994873
    4. ' street' → logprob: -8.515021324157715
    5. 'st' → logprob: -9.265021324157715
    6. 'stre' → logprob: -9.640021324157715
    7. ' range' → logprob: -11.140021324157715
    8. '(st' → logprob: -14.140021324157715
    9. 'sign' → logprob: -14.640021324157715
    10. '   ' → logprob: -15.515021324157715

Token 1507: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.00012558852904476225
    2. 's' → logprob: -9.625125885009766
    3. '_' → logprob: -10.250125885009766
    4. '
' → logprob: -11.875125885009766
    5. 'segments' → logprob: -12.250125885009766
    6. '_s' → logprob: -12.625125885009766
    7. '_
' → logprob: -13.625125885009766
    8. '```' → logprob: -13.750125885009766
    9. ']_' → logprob: -13.875125885009766
    10. 'Segments' → logprob: -14.000125885009766

Token 1508: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16031064093112946
    2. ':
' → logprob: -1.9103106260299683
    3. '   ' → logprob: -10.285310745239258
    4. ':
' → logprob: -11.285310745239258
    5. ':add' → logprob: -11.660310745239258
    6. '):' → logprob: -11.910310745239258
    7. '):
' → logprob: -12.160310745239258
    8. ' :' → logprob: -12.285310745239258
    9. ',' → logprob: -12.785310745239258
    10. '.add' → logprob: -13.035310745239258

Token 1509: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09465374052524567
    2. ' p' → logprob: -2.469653844833374
    3. 'p' → logprob: -5.844653606414795
    4. '(p' → logprob: -7.469653606414795
    5. '       ' → logprob: -7.594653606414795
    6. '           ' → logprob: -7.844653606414795
    7. ',p' → logprob: -7.844653606414795
    8. ' s' → logprob: -7.969653606414795
    9. ',' → logprob: -8.219654083251953
    10. 's' → logprob: -8.969654083251953

Token 1510: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.02335553802549839
    2. ' p' → logprob: -3.773355484008789
    3. '   ' → logprob: -9.398355484008789
    4. 's' → logprob: -10.898355484008789
    5. '(p' → logprob: -12.148355484008789
    6. 'a' → logprob: -14.023355484008789
    7. '    
' → logprob: -14.398355484008789
    8. ' s' → logprob: -14.773355484008789
    9. '       ' → logprob: -14.773355484008789
    10. 'for' → logprob: -14.773355484008789

Token 1511: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00371824624016881
    2. '=' → logprob: -6.378718376159668
    3. '[' → logprob: -7.003718376159668
    4. ' =' → logprob: -7.378718376159668
    5. '
' → logprob: -8.503718376159668
    6. '```' → logprob: -9.503718376159668
    7. 's' → logprob: -9.753718376159668
    8. 'oints' → logprob: -10.378718376159668
    9. '=
' → logprob: -11.003718376159668
    10. '=[' → logprob: -11.128718376159668

Token 1512: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.846687912940979
    2. '.' → logprob: -1.471687912940979
    3. ',p' → logprob: -1.721687912940979
    4. '=' → logprob: -2.8466877937316895
    5. '.add' → logprob: -3.3466877937316895
    6. ' =' → logprob: -3.4716877937316895
    7. ' ,' → logprob: -4.8466877937316895
    8. ' .' → logprob: -4.9716877937316895
    9. '.p' → logprob: -4.9716877937316895
    10. '[' → logprob: -5.5966877937316895

Token 1513: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09972881525754929
    2. '[' → logprob: -2.72472882270813
    3. 'se' → logprob: -4.474728584289551
    4. '=' → logprob: -5.099728584289551
    5. '_se' → logprob: -5.974728584289551
    6. 's' → logprob: -6.099728584289551
    7. '
' → logprob: -6.224728584289551
    8. ' =' → logprob: -6.599728584289551
    9. '0' → logprob: -6.724728584289551
    10. '2' → logprob: -6.724728584289551

Token 1514: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17671474814414978
    2. '.' → logprob: -2.5517146587371826
    3. '[' → logprob: -3.5517146587371826
    4. ' =' → logprob: -3.9267146587371826
    5. ')' → logprob: -4.801714897155762
    6. 'graph' → logprob: -5.301714897155762
    7. '   ' → logprob: -5.426714897155762
    8. ').' → logprob: -5.551714897155762
    9. '
' → logprob: -5.801714897155762
    10. '.add' → logprob: -6.051714897155762

Token 1515: 'se' (ID: 344)
  Prédit: 'se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.00031401283922605217
    2. ' seg' → logprob: -8.125313758850098
    3. '   ' → logprob: -11.875313758850098
    4. '(se' → logprob: -12.375313758850098
    5. 's' → logprob: -13.250313758850098
    6. '_se' → logprob: -13.375313758850098
    7. '	se' → logprob: -13.500313758850098
    8. 'seg' → logprob: -14.375313758850098
    9. '
' → logprob: -14.750313758850098
    10. ' se' → logprob: -15.000313758850098

Token 1516: 'gs' (ID: 9233)
  Prédit: 'gs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gs' → logprob: -0.004978762473911047
    2. 'egs' → logprob: -5.379978656768799
    3. 'se' → logprob: -8.129979133605957
    4. '_se' → logprob: -10.754979133605957
    5. 'igs' → logprob: -11.629979133605957
    6. '[' → logprob: -11.754979133605957
    7. '(se' → logprob: -12.379979133605957
    8. 'ge' → logprob: -12.879979133605957
    9. 'cs' → logprob: -12.879979133605957
    10. 's' → logprob: -12.879979133605957

Token 1517: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.064297824399546e-05
    2. '[p' → logprob: -10.000070571899414
    3. 'i' → logprob: -11.000070571899414
    4. '[' → logprob: -12.000070571899414
    5. 'p' → logprob: -13.500070571899414
    6. '
' → logprob: -15.000070571899414
    7. 's' → logprob: -15.500070571899414
    8. ' [' → logprob: -16.125070571899414
    9. '   ' → logprob: -16.250070571899414
    10. '[
' → logprob: -16.375070571899414

Token 1518: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.6560823321342468
    2. ']' → logprob: -1.5310823917388916
    3. ')
' → logprob: -1.9060823917388916
    4. '][' → logprob: -2.5310823917388916
    5. ')' → logprob: -3.7810823917388916
    6. '[' → logprob: -5.0310821533203125
    7. '
' → logprob: -5.9060821533203125
    8. ')[' → logprob: -6.6560821533203125
    9. '])
' → logprob: -6.7810821533203125
    10. '])' → logprob: -7.4060821533203125

Token 1519: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15414835512638092
    2. '           ' → logprob: -2.1541483402252197
    3. '       ' → logprob: -5.154148578643799
    4. '
' → logprob: -5.154148578643799
    5. ' graph' → logprob: -5.279148578643799
    6. '[' → logprob: -5.654148578643799
    7. 'graph' → logprob: -6.154148578643799
    8. '```' → logprob: -6.529148578643799
    9. '	graph' → logprob: -6.654148578643799
    10. '               ' → logprob: -7.404148578643799

Token 1520: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.11959099024534225
    2. ' graph' → logprob: -2.369590997695923
    3. '   ' → logprob: -3.994590997695923
    4. '
' → logprob: -8.244590759277344
    5. '	graph' → logprob: -8.244590759277344
    6. '           ' → logprob: -8.494590759277344
    7. '```' → logprob: -10.744590759277344
    8. '       ' → logprob: -11.119590759277344
    9. ' ' → logprob: -11.994590759277344
    10. '(graph' → logprob: -12.619590759277344

Token 1521: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.1160349458805285e-05
    2. '[' → logprob: -12.250011444091797
    3. '[p' → logprob: -13.250011444091797
    4. '[_' → logprob: -13.500011444091797
    5. '_[' → logprob: -13.625011444091797
    6. 'Und' → logprob: -14.625011444091797
    7. 'und' → logprob: -14.625011444091797
    8. '```' → logprob: -15.125011444091797
    9. '_
' → logprob: -15.875011444091797
    10. '_under' → logprob: -16.125011444091797

Token 1522: 'und' (ID: 980)
  Prédit: 'und'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'und' → logprob: -6.704273118884885e-07
    2. '_' → logprob: -14.750000953674316
    3. '[' → logprob: -16.5
    4. ' und' → logprob: -17.0
    5. 'Und' → logprob: -17.125
    6. 'under' → logprob: -17.5
    7. '
' → logprob: -18.125
    8. 'unders' → logprob: -18.375
    9. 'undir' → logprob: -18.5
    10. 'undi' → logprob: -18.5

Token 1523: 'irected' (ID: 149617)
  Prédit: 'irected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irected' → logprob: -3.7697225252486533e-06
    2. 'ir' → logprob: -13.500003814697266
    3. 'irect' → logprob: -13.875003814697266
    4. 'ired' → logprob: -14.375003814697266
    5. 'irectional' → logprob: -14.750003814697266
    6. 'r' → logprob: -15.875003814697266
    7. 'ire' → logprob: -16.125003814697266
    8. 'rect' → logprob: -16.625003814697266
    9. '[' → logprob: -17.125003814697266
    10. 'irst' → logprob: -17.250003814697266

Token 1524: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -13.750000953674316
    3. 'p' → logprob: -15.750000953674316
    4. ' [' → logprob: -16.875001907348633
    5. '
' → logprob: -17.625001907348633
    6. '\[' → logprob: -18.625001907348633
    7. '```' → logprob: -19.750001907348633
    8. '   ' → logprob: -20.000001907348633
    9. '][' → logprob: -20.000001907348633
    10. '[
' → logprob: -20.875001907348633

Token 1525: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.833878508885391e-05
    2. '[p' → logprob: -10.625038146972656
    3. '[' → logprob: -11.500038146972656
    4. '```' → logprob: -13.750038146972656
    5. 'graph' → logprob: -14.500038146972656
    6. ']' → logprob: -14.750038146972656
    7. '
' → logprob: -15.000038146972656
    8. 'p' → logprob: -15.375038146972656
    9. '2' → logprob: -15.875038146972656
    10. '{' → logprob: -16.000038146972656

Token 1526: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.015211788937449455
    2. '.' → logprob: -4.890211582183838
    3. '.add' → logprob: -4.890211582183838
    4. '   ' → logprob: -10.765212059020996
    5. ').' → logprob: -11.140212059020996
    6. '}.' → logprob: -11.890212059020996
    7. '           ' → logprob: -12.890212059020996
    8. ' .' → logprob: -13.015212059020996
    9. ']' → logprob: -13.140212059020996
    10. '[' → logprob: -13.515212059020996

Token 1527: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -1.306760805164231e-05
    2. '.add' → logprob: -11.25001335144043
    3. ' add' → logprob: -17.12501335144043
    4. 'update' → logprob: -18.75001335144043
    5. 'append' → logprob: -18.75001335144043
    6. ')add' → logprob: -18.75001335144043
    7. '_add' → logprob: -18.87501335144043
    8. '	add' → logprob: -19.00001335144043
    9. '
' → logprob: -20.87501335144043
    10. 'adde' → logprob: -21.00001335144043

Token 1528: '(p' (ID: 2407)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0040835049003362656
    2. '(p' → logprob: -5.504083633422852
    3. ' p' → logprob: -12.254083633422852
    4. '(
' → logprob: -16.12908363342285
    5. '(' → logprob: -16.25408363342285
    6. '	p' → logprob: -19.00408363342285
    7. ' (' → logprob: -19.00408363342285
    8. '   ' → logprob: -19.37908363342285
    9. ')p' → logprob: -19.62908363342285
    10. '<p' → logprob: -19.87908363342285

Token 1529: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0006258221692405641
    2. '1' → logprob: -8.000625610351562
    3. '[' → logprob: -8.625625610351562
    4. 'p' → logprob: -9.375625610351562
    5. '[p' → logprob: -11.375625610351562
    6. '(p' → logprob: -12.000625610351562
    7. 's' → logprob: -12.750625610351562
    8. '
' → logprob: -12.750625610351562
    9. '(' → logprob: -14.250625610351562
    10. ')' → logprob: -14.750625610351562

Token 1530: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0069892224855721
    2. ')
' → logprob: -5.006989002227783
    3. '           ' → logprob: -8.256989479064941
    4. '       ' → logprob: -12.506989479064941
    5. '<|end|>' → logprob: -12.756989479064941
    6. ' )' → logprob: -12.881989479064941
    7. ')p' → logprob: -14.006989479064941
    8. '   ' → logprob: -14.006989479064941
    9. '),' → logprob: -14.381989479064941
    10. ')#' → logprob: -14.631989479064941

Token 1531: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0012889248318970203
    2. '       ' → logprob: -7.876288890838623
    3. '   ' → logprob: -8.126289367675781
    4. '<|end|>' → logprob: -8.251289367675781
    5. ' graph' → logprob: -9.001289367675781
    6. 'graph' → logprob: -10.001289367675781
    7. '	graph' → logprob: -10.501289367675781
    8. '               ' → logprob: -10.626289367675781
    9. ',' → logprob: -10.626289367675781
    10. '
' → logprob: -10.751289367675781

Token 1532: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.029766689985990524
    2. ' graph' → logprob: -3.529766798019409
    3. '	graph' → logprob: -11.654767036437988
    4. '           ' → logprob: -11.904767036437988
    5. '(graph' → logprob: -14.904767036437988
    6. '.graph' → logprob: -16.029766082763672
    7. 'p' → logprob: -16.529766082763672
    8. '_graph' → logprob: -16.654766082763672
    9. 'graphs' → logprob: -17.279766082763672
    10. 'raph' → logprob: -17.279766082763672

Token 1533: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.869639476761222e-05
    2. '[p' → logprob: -10.750039100646973
    3. '[' → logprob: -11.250039100646973
    4. '_[' → logprob: -13.500039100646973
    5. 'Und' → logprob: -13.875039100646973
    6. 'und' → logprob: -14.375039100646973
    7. '```' → logprob: -14.500039100646973
    8. '[_' → logprob: -14.875039100646973
    9. '_under' → logprob: -16.125038146972656
    10. '_
' → logprob: -16.625038146972656

Token 1534: 'und' (ID: 980)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.5471606850624084
    2. 'und' → logprob: -0.9221606850624084
    3. '1' → logprob: -3.9221606254577637
    4. '[' → logprob: -6.297160625457764
    5. '[p' → logprob: -6.922160625457764
    6. '0' → logprob: -7.922160625457764
    7. 'Und' → logprob: -8.297161102294922
    8. 's' → logprob: -9.547161102294922
    9. '
' → logprob: -9.547161102294922
    10. 'unders' → logprob: -9.797161102294922

Token 1535: 'irected' (ID: 149617)
  Prédit: 'irected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irected' → logprob: -8.85235276655294e-05
    2. 'irect' → logprob: -9.500088691711426
    3. 'r' → logprob: -12.250088691711426
    4. 'ir' → logprob: -12.625088691711426
    5. 'ired' → logprob: -13.000088691711426
    6. 'irectional' → logprob: -13.500088691711426
    7. 'p' → logprob: -14.500088691711426
    8. 'icted' → logprob: -15.375088691711426
    9. 'rect' → logprob: -15.750088691711426
    10. 'er' → logprob: -15.750088691711426

Token 1536: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -1.1875571544806007e-05
    2. '[' → logprob: -11.875011444091797
    3. 'p' → logprob: -12.375011444091797
    4. '[s' → logprob: -15.125011444091797
    5. '[i' → logprob: -16.000011444091797
    6. '
' → logprob: -16.750011444091797
    7. '[
' → logprob: -17.000011444091797
    8. 's' → logprob: -17.000011444091797
    9. '(p' → logprob: -17.750011444091797
    10. '<p' → logprob: -18.625011444091797

Token 1537: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002313930308446288
    2. '2' → logprob: -6.50231409072876
    3. '[' → logprob: -8.127313613891602
    4. 'p' → logprob: -8.252313613891602
    5. '0' → logprob: -8.752313613891602
    6. '[p' → logprob: -10.377313613891602
    7. 's' → logprob: -10.752313613891602
    8. ']' → logprob: -10.752313613891602
    9. '
' → logprob: -11.377313613891602
    10. '][' → logprob: -13.127313613891602

Token 1538: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.18701495230197906
    2. '.add' → logprob: -2.4370150566101074
    3. ').' → logprob: -2.5620150566101074
    4. '.' → logprob: -5.812015056610107
    5. ')' → logprob: -6.562015056610107
    6. ']' → logprob: -7.312015056610107
    7. '}.' → logprob: -7.437015056610107
    8. ' .' → logprob: -9.31201457977295
    9. '[' → logprob: -9.81201457977295
    10. '   ' → logprob: -9.93701457977295

Token 1539: 'add' (ID: 964)
  Prédit: 'add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'add' → logprob: -3.128163257315464e-07
    2. ' add' → logprob: -16.25
    3. 'append' → logprob: -16.5
    4. '
' → logprob: -18.25
    5. '.add' → logprob: -19.0
    6. '	add' → logprob: -19.625
    7. '(add' → logprob: -20.5
    8. ')add' → logprob: -20.75
    9. '   ' → logprob: -21.375
    10. ' ' → logprob: -21.5

Token 1540: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -1.6240566083070007e-06
    2. '(' → logprob: -13.875001907348633
    3. '(
' → logprob: -15.125001907348633
    4. ' (' → logprob: -15.500001907348633
    5. 'p' → logprob: -16.125001907348633
    6. ' p' → logprob: -17.250001907348633
    7. ')' → logprob: -19.000001907348633
    8. '(s' → logprob: -19.000001907348633
    9. '[p' → logprob: -19.125001907348633
    10. '   ' → logprob: -19.875001907348633

Token 1541: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.704273118884885e-07
    2. 'p' → logprob: -14.375000953674316
    3. '[' → logprob: -16.75
    4. ')' → logprob: -17.625
    5. 's' → logprob: -18.5
    6. '```' → logprob: -19.25
    7. ' p' → logprob: -19.75
    8. ' ' → logprob: -19.875
    9. '   ' → logprob: -19.875
    10. '{' → logprob: -20.375

Token 1542: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009429076453670859
    2. '       ' → logprob: -7.000942707061768
    3. '<|end|>' → logprob: -11.125943183898926
    4. ')
' → logprob: -11.250943183898926
    5. ' )' → logprob: -13.875943183898926
    6. '   ' → logprob: -14.125943183898926
    7. ')#' → logprob: -14.875943183898926
    8. '),' → logprob: -15.500943183898926
    9. ').' → logprob: -15.500943183898926
    10. '#' → logprob: -16.00094223022461

Token 1543: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7996841669082642
    2. '
' → logprob: -1.0496841669082642
    3. '<|end|>' → logprob: -1.6746841669082642
    4. '        
' → logprob: -4.674684047698975
    5. '<|end|>' → logprob: -6.299684047698975
    6. ' for' → logprob: -7.549684047698975
    7. 'for' → logprob: -7.924684047698975
    8. '```' → logprob: -8.424684524536133
    9. '#' → logprob: -8.799684524536133
    10. '  
' → logprob: -8.799684524536133

Token 1544: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08102650940418243
    2. '#' (adapté à ' #') → logprob: -2.581026554107666
    3. 'for' → logprob: -6.956026554107666
    4. '   ' → logprob: -8.206026077270508
    5. '        
' → logprob: -8.331026077270508
    6. 'from' → logprob: -8.581026077270508
    7. 'visited' → logprob: -8.706026077270508
    8. 'def' → logprob: -9.956026077270508
    9. '
' → logprob: -10.081026077270508
    10. ' #' → logprob: -10.456026077270508

Token 1545: ' Intersection' (ID: 169293)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1518625020980835
    2. '#' → logprob: -2.401862621307373
    3. 'for' → logprob: -3.776862621307373
    4. 'visited' → logprob: -4.151862621307373
    5. ' for' → logprob: -6.026862621307373
    6. ' #' → logprob: -6.276862621307373
    7. 'from' → logprob: -6.651862621307373
    8. 'distance' → logprob: -6.901862621307373
    9. 'dist' → logprob: -7.151862621307373
    10. 'queue' → logprob: -7.276862621307373

Token 1546: ' points' (ID: 5571)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.13736741244792938
    2. '_points' → logprob: -2.1373674869537354
    3. '_nodes' → logprob: -4.762367248535156
    4. 'points' → logprob: -6.512367248535156
    5. 'nodes' → logprob: -8.637367248535156
    6. '_pts' → logprob: -9.887367248535156
    7. '=' → logprob: -10.387367248535156
    8. ' =' → logprob: -10.387367248535156
    9. '_sizes' → logprob: -10.512367248535156
    10. '
' → logprob: -11.637367248535156

Token 1547: ':' (ID: 25)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17286580801010132
    2. ' =' → logprob: -1.922865867614746
    3. '_points' → logprob: -5.672865867614746
    4. 'points' → logprob: -5.922865867614746
    5. '       ' → logprob: -6.172865867614746
    6. '=set' → logprob: -6.422865867614746
    7. '=
' → logprob: -7.297865867614746
    8. '
' → logprob: -8.047865867614746
    9. 's' → logprob: -8.297865867614746
    10. '_nodes' → logprob: -8.672865867614746

Token 1548: ' points' (ID: 5571)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.06599725782871246
    2. 'intersection' → logprob: -3.190997362136841
    3. 'for' → logprob: -4.940997123718262
    4. 'ints' → logprob: -5.065997123718262
    5. 'int' → logprob: -5.315997123718262
    6. 'important' → logprob: -6.690997123718262
    7. '       ' → logprob: -7.690997123718262
    8. 'in' → logprob: -7.815997123718262
    9. 'junction' → logprob: -7.940997123718262
    10. 'ip' → logprob: -8.190997123718262

Token 1549: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.812725305557251
    2. '=' → logprob: -1.187725305557251
    3. ' =' → logprob: -1.437725305557251
    4. ' with' → logprob: -4.937725067138672
    5. '_with' → logprob: -5.937725067138672
    6. 'that' → logprob: -5.937725067138672
    7. 'for' → logprob: -8.187725067138672
    8. ' that' → logprob: -8.187725067138672
    9. 'are' → logprob: -9.062725067138672
    10. 'of' → logprob: -9.187725067138672

Token 1550: ' degree' (ID: 9882)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.020933985710144
    2. 'adj' → logprob: -1.020933985710144
    3. ' adjacency' → logprob: -1.770933985710144
    4. 'seg' → logprob: -2.3959341049194336
    5. ' len' → logprob: -4.520934104919434
    6. ' seg' → logprob: -5.645934104919434
    7. 'degree' → logprob: -7.145934104919434
    8. 'deg' → logprob: -7.520934104919434
    9. '```' → logprob: -7.645934104919434
    10. 'sum' → logprob: -7.770934104919434

Token 1551: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.29822292923927307
    2. '>' → logprob: -1.4232228994369507
    3. ' >=' → logprob: -4.42322301864624
    4. '=' → logprob: -5.79822301864624
    5. '≥' → logprob: -7.42322301864624
    6. ' >' → logprob: -7.79822301864624
    7. ' =' → logprob: -8.423222541809082
    8. 'greater' → logprob: -8.548222541809082
    9. '
' → logprob: -9.548222541809082
    10. ']>=' → logprob: -9.673222541809082

Token 1552: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.637786231702194e-05
    2. ' ' → logprob: -9.750086784362793
    3. '3' → logprob: -11.375086784362793
    4. '   ' → logprob: -11.625086784362793
    5. '```' → logprob: -12.125086784362793
    6. '
' → logprob: -14.125086784362793
    7. '       ' → logprob: -14.625086784362793
    8. '>' → logprob: -15.875086784362793
    9. '``' → logprob: -16.000085830688477
    10. '=' → logprob: -16.000085830688477

Token 1553: ' in' (ID: 306)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5262197852134705
    2. '       ' → logprob: -1.9012198448181152
    3. 'points' → logprob: -2.0262198448181152
    4. 'for' → logprob: -2.4012198448181152
    5. 'and' → logprob: -5.401219844818115
    6. 'in' → logprob: -5.526219844818115
    7. ' =' → logprob: -5.651219844818115
    8. '```' → logprob: -5.776219844818115
    9. ' for' → logprob: -6.026219844818115
    10. 'with' → logprob: -6.276219844818115

Token 1554: ' street' (ID: 12901)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.00022940391500014812
    2. ' graph' → logprob: -8.625229835510254
    3. 'street' → logprob: -10.250229835510254
    4. 'the' → logprob: -12.000229835510254
    5. '```' → logprob: -12.125229835510254
    6. '	graph' → logprob: -14.000229835510254
    7. '`' → logprob: -14.500229835510254
    8. 'stre' → logprob: -14.750229835510254
    9. '(graph' → logprob: -15.125229835510254
    10. '   ' → logprob: -15.125229835510254

Token 1555: ' graph' (ID: 7465)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.06885217130184174
    2. '_' → logprob: -3.568852186203003
    3. '_points' → logprob: -4.068851947784424
    4. '_counts' → logprob: -5.443851947784424
    5. 'segments' → logprob: -5.568851947784424
    6. '_nodes' → logprob: -6.193851947784424
    7. 's' → logprob: -6.443851947784424
    8. '_graph' → logprob: -6.568851947784424
    9. '       ' → logprob: -6.943851947784424
    10. '_
' → logprob: -6.943851947784424

Token 1556: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16092564165592194
    2. '
' → logprob: -2.4109256267547607
    3. '<|end|>' → logprob: -3.6609256267547607
    4. 'points' → logprob: -3.9109256267547607
    5. ' points' → logprob: -5.03592586517334
    6. 'for' → logprob: -7.03592586517334
    7. '```' → logprob: -7.16092586517334
    8. '(points' → logprob: -7.28592586517334
    9. '_points' → logprob: -7.41092586517334
    10. ',' → logprob: -7.78592586517334

Token 1557: '       ' (ID: 309)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.7788591980934143
    2. '       ' → logprob: -0.9038591980934143
    3. 'for' → logprob: -2.9038591384887695
    4. 'inter' → logprob: -3.0288591384887695
    5. '
' → logprob: -3.9038591384887695
    6. 'intersection' → logprob: -4.9038591384887695
    7. 'pts' → logprob: -6.4038591384887695
    8. '#' → logprob: -7.5288591384887695
    9. ' for' → logprob: -7.5288591384887695
    10. 'point' → logprob: -7.6538591384887695

Token 1558: ' intersection' (ID: 42002)
  Prédit: 'inter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inter' → logprob: -0.22707097232341766
    2. 'intersection' (adapté à ' intersection') → logprob: -1.852070927619934
    3. '       ' → logprob: -3.9770710468292236
    4. 'points' → logprob: -4.7270708084106445
    5. 'int' → logprob: -5.2270708084106445
    6. 'ints' → logprob: -5.4770708084106445
    7. 'pts' → logprob: -5.9770708084106445
    8. 'for' → logprob: -6.4770708084106445
    9. 'street' → logprob: -6.7270708084106445
    10. ' intersections' → logprob: -6.8520708084106445

Token 1559: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.4011024236679077
    2. 's' → logprob: -1.1511024236679077
    3. '_pts' → logprob: -4.526102542877197
    4. '_nodes' → logprob: -6.651102542877197
    5. ' =' → logprob: -7.526102542877197
    6. '=' → logprob: -7.901102542877197
    7. '_s' → logprob: -8.151102066040039
    8. '_' → logprob: -8.151102066040039
    9. 'points' → logprob: -8.901102066040039
    10. '_p' → logprob: -9.526102066040039

Token 1560: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2014671415090561
    2. ' =' → logprob: -1.7014671564102173
    3. '=set' → logprob: -10.201467514038086
    4. '=[' → logprob: -11.826467514038086
    5. '=[]' → logprob: -12.576467514038086
    6. 's' → logprob: -13.826467514038086
    7. ' =[' → logprob: -14.326467514038086
    8. '=list' → logprob: -14.326467514038086
    9. '={' → logprob: -14.576467514038086
    10. '=[]
' → logprob: -14.951467514038086

Token 1561: ' set' (ID: 920)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.08412519097328186
    2. 'set' → logprob: -2.834125280380249
    3. '{k' → logprob: -4.08412504196167
    4. '{x' → logprob: -5.83412504196167
    5. '{i' → logprob: -6.58412504196167
    6. '{s' → logprob: -7.33412504196167
    7. '[p' → logprob: -9.834125518798828
    8. ' {' → logprob: -11.084125518798828
    9. '{name' → logprob: -11.209125518798828
    10. '[' → logprob: -11.334125518798828

Token 1562: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.25862786173820496
    2. '(p' → logprob: -1.5086278915405273
    3. '([' → logprob: -5.508627891540527
    4. '()' → logprob: -6.758627891540527
    5. '(
' → logprob: -7.508627891540527
    6. '(point' → logprob: -7.758627891540527
    7. 'p' → logprob: -8.883627891540527
    8. '   ' → logprob: -9.258627891540527
    9. ' =' → logprob: -9.883627891540527
    10. '(pt' → logprob: -10.008627891540527

Token 1563: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003300578100606799
    2. '       ' → logprob: -5.753300666809082
    3. ' for' → logprob: -9.128300666809082
    4. '
' → logprob: -11.503300666809082
    5. '```' → logprob: -12.753300666809082
    6. '   ' → logprob: -14.253300666809082
    7. '	for' → logprob: -15.128300666809082
    8. 'point' → logprob: -15.753300666809082
    9. '``' → logprob: -16.003299713134766
    10. '           ' → logprob: -17.253299713134766

Token 1564: ' deg' (ID: 5597)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -5.512236498361744e-07
    2. ' for' → logprob: -15.125000953674316
    3. '       ' → logprob: -16.0
    4. '```' → logprob: -17.375
    5. '
' → logprob: -18.625
    6. '   ' → logprob: -19.25
    7. 'intersection' → logprob: -19.25
    8. '	for' → logprob: -20.625
    9. '``' → logprob: -21.0
    10. 'inter' → logprob: -21.625

Token 1565: '_st' (ID: 2518)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4108904302120209
    2. ' =' → logprob: -2.0358903408050537
    3. '_count' → logprob: -2.5358903408050537
    4. '_points' → logprob: -3.4108903408050537
    5. '[p' → logprob: -3.6608903408050537
    6. 'p' → logprob: -4.035890579223633
    7. 's' → logprob: -4.660890579223633
    8. '[' → logprob: -5.035890579223633
    9. 'for' → logprob: -5.535890579223633
    10. 'count' → logprob: -5.785890579223633

Token 1566: 'reet' (ID: 5409)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.580050528049469
    2. 'reet' → logprob: -2.205050468444824
    3. 'ree' → logprob: -2.455050468444824
    4. ' =' → logprob: -2.580050468444824
    5. '_points' → logprob: -2.580050468444824
    6. 'rees' → logprob: -3.830050468444824
    7. 'ep' → logprob: -4.830050468444824
    8. 'intersection' → logprob: -4.955050468444824
    9. 'for' → logprob: -5.080050468444824
    10. 'egree' → logprob: -5.205050468444824

Token 1567: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.028549479320645332
    2. ' =' → logprob: -3.6535494327545166
    3. '_points' → logprob: -7.653549671173096
    4. 's' → logprob: -8.028549194335938
    5. '={}
' → logprob: -8.153549194335938
    6. '_st' → logprob: -8.278549194335938
    7. '=[' → logprob: -8.653549194335938
    8. '_count' → logprob: -9.028549194335938
    9. '={}' → logprob: -9.278549194335938
    10. '=[]
' → logprob: -9.403549194335938

Token 1568: ' defaultdict' (ID: 107098)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -9.865583706414327e-05
    2. '{' → logprob: -9.25009822845459
    3. '{}
' → logprob: -13.12509822845459
    4. ' defaultdict' → logprob: -15.50009822845459
    5. '{}' → logprob: -16.125099182128906
    6. '(default' → logprob: -17.000099182128906
    7. '"default' → logprob: -17.000099182128906
    8. '.default' → logprob: -17.875099182128906
    9. '{
' → logprob: -18.000099182128906
    10. '   ' → logprob: -18.875099182128906

Token 1569: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.3151935040950775
    2. 'int' → logprob: -1.3151935338974
    3. '(lambda' → logprob: -6.5651936531066895
    4. 'lambda' → logprob: -7.5651936531066895
    5. '[int' → logprob: -14.315193176269531
    6. 'list' → logprob: -14.565193176269531
    7. '=int' → logprob: -14.565193176269531
    8. '(' → logprob: -14.815193176269531
    9. '(
' → logprob: -14.940193176269531
    10. ':int' → logprob: -15.190193176269531

Token 1570: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.05395788699388504
    2. '()
' → logprob: -3.678957939147949
    3. ')' → logprob: -4.303957939147949
    4. '[' → logprob: -5.053957939147949
    5. '[p' → logprob: -5.553957939147949
    6. 'for' → logprob: -6.803957939147949
    7. '
' → logprob: -7.428957939147949
    8. '(p' → logprob: -7.428957939147949
    9. '[]
' → logprob: -7.928957939147949
    10. '   ' → logprob: -9.05395793914795

Token 1571: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.027599722146987915
    2. '       ' → logprob: -3.652599811553955
    3. ' for' → logprob: -6.652599811553955
    4. ')' → logprob: -12.777599334716797
    5. '   ' → logprob: -13.277599334716797
    6. 'For' → logprob: -13.777599334716797
    7. '```' → logprob: -14.402599334716797
    8. ')
' → logprob: -14.652599334716797
    9. '
' → logprob: -15.277599334716797
    10. '           ' → logprob: -15.527599334716797

Token 1572: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -1.1472419600977446e-06
    2. '       ' → logprob: -13.750000953674316
    3. ' for' → logprob: -17.250001907348633
    4. '   ' → logprob: -20.125001907348633
    5. '```' → logprob: -20.125001907348633
    6. '
' → logprob: -20.625001907348633
    7. '           ' → logprob: -22.125001907348633
    8. '	for' → logprob: -22.500001907348633
    9. '``' → logprob: -24.500001907348633
    10. '        
' → logprob: -25.000001907348633

Token 1573: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.004998805467039347
    2. 'pt' → logprob: -5.504998683929443
    3. 'point' → logprob: -7.754998683929443
    4. ' p' → logprob: -7.879998683929443
    5. 'u' → logprob: -9.379999160766602
    6. 'v' → logprob: -11.004999160766602
    7. ' pt' → logprob: -12.379999160766602
    8. 'i' → logprob: -12.879999160766602
    9. 'node' → logprob: -12.879999160766602
    10. ' point' → logprob: -13.754999160766602

Token 1574: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06200756877660751
    2. 'in' → logprob: -2.8120076656341553
    3. '   ' → logprob: -11.437007904052734
    4. ' ' → logprob: -12.062007904052734
    5. 's' → logprob: -12.312007904052734
    6. '
' → logprob: -12.812007904052734
    7. 'n' → logprob: -13.187007904052734
    8. ',' → logprob: -13.312007904052734
    9. 'i' → logprob: -13.312007904052734
    10. 'p' → logprob: -13.437007904052734

Token 1575: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.09602570533752441
    2. 'points' → logprob: -3.2210257053375244
    3. 'street' → logprob: -3.2210257053375244
    4. 'intersection' → logprob: -4.721025466918945
    5. 'point' → logprob: -6.471025466918945
    6. ' graph' → logprob: -7.346025466918945
    7. 'st' → logprob: -8.471025466918945
    8. ' street' → logprob: -8.596025466918945
    9. ' points' → logprob: -9.346025466918945
    10. 'stre' → logprob: -9.971025466918945

Token 1576: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -4.656383680412546e-05
    2. '_st' → logprob: -10.250046730041504
    3. '[' → logprob: -12.500046730041504
    4. '_inter' → logprob: -12.875046730041504
    5. 'und' → logprob: -13.000046730041504
    6. '[p' → logprob: -14.000046730041504
    7. '[_' → logprob: -15.125046730041504
    8. '\' → logprob: -15.250046730041504
    9. '   ' → logprob: -15.375046730041504
    10. '```' → logprob: -15.375046730041504

Token 1577: 'und' (ID: 980)
  Prédit: 'und'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'und' → logprob: -4.127333340875339e-06
    2. '_' → logprob: -13.375003814697266
    3. 'undir' → logprob: -14.500003814697266
    4. 'undi' → logprob: -14.875003814697266
    5. 'p' → logprob: -15.375003814697266
    6. ' und' → logprob: -15.500003814697266
    7. '
' → logprob: -15.500003814697266
    8. '```' → logprob: -15.875003814697266
    9. 'Und' → logprob: -16.125003814697266
    10. 'under' → logprob: -16.125003814697266

Token 1578: 'irected' (ID: 149617)
  Prédit: 'irected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irected' → logprob: -2.868328920158092e-05
    2. 'irect' → logprob: -11.000028610229492
    3. 'ired' → logprob: -12.375028610229492
    4. 'irectional' → logprob: -12.875028610229492
    5. 'rect' → logprob: -13.250028610229492
    6. 'ir' → logprob: -13.875028610229492
    7. 'p' → logprob: -14.375028610229492
    8. 'direct' → logprob: -14.875028610229492
    9. 'efined' → logprob: -15.000028610229492
    10. 'r' → logprob: -15.875028610229492

Token 1579: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7661420106887817
    2. ':' → logprob: -1.1411420106887817
    3. '[p' → logprob: -1.6411420106887817
    4. '[' → logprob: -3.891141891479492
    5. '.keys' → logprob: -7.266141891479492
    6. 'graph' → logprob: -8.391141891479492
    7. 'p' → logprob: -8.641141891479492
    8. '```' → logprob: -9.516141891479492
    9. '{
' → logprob: -9.641141891479492
    10. ':p' → logprob: -9.766141891479492

Token 1580: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04505270719528198
    2. '           ' → logprob: -3.9200527667999268
    3. ' deg' → logprob: -4.545052528381348
    4. '       ' → logprob: -4.795052528381348
    5. 'deg' → logprob: -5.295052528381348
    6. ' ' → logprob: -9.670052528381348
    7. '               ' → logprob: -10.170052528381348
    8. '    ' → logprob: -10.795052528381348
    9. '```' → logprob: -10.920052528381348
    10. '	de' → logprob: -10.920052528381348

Token 1581: ' deg' (ID: 5597)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' (adapté à ' deg') → logprob: -0.1522199660539627
    2. '   ' → logprob: -2.6522200107574463
    3. ' deg' → logprob: -2.6522200107574463
    4. '           ' → logprob: -9.777219772338867
    5. ' ' → logprob: -9.777219772338867
    6. '	de' → logprob: -9.902219772338867
    7. '       ' → logprob: -10.652219772338867
    8. 'de' → logprob: -12.027219772338867
    9. '  ' → logprob: -12.152219772338867
    10. 'for' → logprob: -12.527219772338867

Token 1582: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.16248847544193268
    2. '[p' → logprob: -1.9124884605407715
    3. 'st' → logprob: -7.7874884605407715
    4. 'p' → logprob: -7.9124884605407715
    5. ' =' → logprob: -8.41248893737793
    6. '_' → logprob: -8.41248893737793
    7. '_p' → logprob: -8.53748893737793
    8. '   ' → logprob: -8.66248893737793
    9. '[' → logprob: -8.78748893737793
    10. '=' → logprob: -9.28748893737793

Token 1583: 'reet' (ID: 5409)
  Prédit: 'reet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reet' → logprob: -0.00013333676906768233
    2. '[p' → logprob: -9.625133514404297
    3. 'ree' → logprob: -11.000133514404297
    4. 'p' → logprob: -11.250133514404297
    5. '[' → logprob: -11.375133514404297
    6. 're' → logprob: -11.750133514404297
    7. 'street' → logprob: -12.000133514404297
    8. 'REET' → logprob: -12.750133514404297
    9. 'reat' → logprob: -13.375133514404297
    10. 'ret' → logprob: -13.500133514404297

Token 1584: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.00010139751975657418
    2. '=' → logprob: -10.500101089477539
    3. 'p' → logprob: -10.500101089477539
    4. '=p' → logprob: -11.250101089477539
    5. '[' → logprob: -11.500101089477539
    6. ' =' → logprob: -11.500101089477539
    7. ' [' → logprob: -11.875101089477539
    8. '
' → logprob: -13.000101089477539
    9. '   ' → logprob: -14.125101089477539
    10. '[
' → logprob: -14.125101089477539

Token 1585: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09091218560934067
    2. '+=' → logprob: -2.965912103652954
    3. ']+=' → logprob: -4.215912342071533
    4. ' =' → logprob: -4.840912342071533
    5. ']=' → logprob: -5.215912342071533
    6. ' +=' → logprob: -5.840912342071533
    7. ')=' → logprob: -6.465912342071533
    8. ')' → logprob: -6.715912342071533
    9. ']' → logprob: -6.965912342071533
    10. '   ' → logprob: -8.465911865234375

Token 1586: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -4.5491004129871726e-05
    2. ' len' → logprob: -10.000045776367188
    3. '   ' → logprob: -20.625045776367188
    4. '(len' → logprob: -21.125045776367188
    5. '	len' → logprob: -23.375045776367188
    6. ' ' → logprob: -24.125045776367188
    7. '=len' → logprob: -24.375045776367188
    8. '0' → logprob: -24.500045776367188
    9. '       ' → logprob: -25.750045776367188
    10. '[len' → logprob: -26.000045776367188

Token 1587: '(graph' (ID: 51300)
  Prédit: '(graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(graph' → logprob: -1.7954958821064793e-05
    2. 'graph' → logprob: -11.000018119812012
    3. '(' → logprob: -13.750018119812012
    4. ' graph' → logprob: -16.875017166137695
    5. '	graph' → logprob: -17.375017166137695
    6. '(
' → logprob: -18.625017166137695
    7. ' (' → logprob: -19.750017166137695
    8. '(game' → logprob: -21.875017166137695
    9. '(Graph' → logprob: -21.875017166137695
    10. '.graph' → logprob: -22.750017166137695

Token 1588: '_' (ID: 62)
  Prédit: '_'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00016659092216286808
    2. '[p' → logprob: -8.875166893005371
    3. '[' → logprob: -10.875166893005371
    4. 'und' → logprob: -12.875166893005371
    5. '_[' → logprob: -13.000166893005371
    6. '[_' → logprob: -14.000166893005371
    7. '```' → logprob: -14.125166893005371
    8. 'Und' → logprob: -15.250166893005371
    9. '_under' → logprob: -15.625166893005371
    10. '_
' → logprob: -16.000165939331055

Token 1589: 'und' (ID: 980)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.1607608199119568
    2. 'und' → logprob: -1.9107608795166016
    3. '[p' → logprob: -7.660760879516602
    4. 'p' → logprob: -10.660760879516602
    5. '[' → logprob: -11.410760879516602
    6. 'Und' → logprob: -11.785760879516602
    7. 'undir' → logprob: -12.160760879516602
    8. ' p' → logprob: -12.410760879516602
    9. ' und' → logprob: -13.535760879516602
    10. '_[' → logprob: -13.660760879516602

Token 1590: 'irected' (ID: 149617)
  Prédit: 'irected'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irected' → logprob: -0.0008394040050916374
    2. '_' → logprob: -7.8758392333984375
    3. '[p' → logprob: -9.125839233398438
    4. 'ered' → logprob: -9.375839233398438
    5. 'irect' → logprob: -9.875839233398438
    6. 'ured' → logprob: -10.125839233398438
    7. 'p' → logprob: -10.250839233398438
    8. 'und' → logprob: -10.500839233398438
    9. '[' → logprob: -11.000839233398438
    10. 'ed' → logprob: -11.500839233398438

Token 1591: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -8.180258191714529e-06
    2. 'p' → logprob: -12.000008583068848
    3. '[' → logprob: -14.375008583068848
    4. ')' → logprob: -14.375008583068848
    5. '[
' → logprob: -14.625008583068848
    6. ')p' → logprob: -16.25000762939453
    7. ' [' → logprob: -16.75000762939453
    8. '<p' → logprob: -16.87500762939453
    9. '(p' → logprob: -17.00000762939453
    10. '
' → logprob: -17.12500762939453

Token 1592: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.5239007472991943
    2. ')' → logprob: -0.8989007472991943
    3. ')
' → logprob: -8.648900985717773
    4. ')])' → logprob: -8.773900985717773
    5. ')>' → logprob: -9.148900985717773
    6. ']' → logprob: -9.648900985717773
    7. ')]' → logprob: -9.648900985717773
    8. '])
' → logprob: -9.898900985717773
    9. ')p' → logprob: -10.148900985717773
    10. '[' → logprob: -10.523900985717773

Token 1593: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027226818725466728
    2. '
' → logprob: -4.52722692489624
    3. '           ' → logprob: -4.52722692489624
    4. '<|end|>' → logprob: -5.90222692489624
    5. 'for' → logprob: -6.40222692489624
    6. ' for' → logprob: -7.52722692489624
    7. '```' → logprob: -8.527226448059082
    8. '   ' → logprob: -10.152226448059082
    9. '        
' → logprob: -11.277226448059082
    10. '<|end|>' → logprob: -11.527226448059082

Token 1594: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04922625422477722
    2. '           ' → logprob: -3.1742262840270996
    3. 'for' → logprob: -5.1742262840271
    4. '   ' → logprob: -8.549225807189941
    5. ' for' → logprob: -8.674225807189941
    6. 'if' (adapté à ' if') → logprob: -8.924225807189941
    7. ' if' → logprob: -10.799225807189941
    8. '
' → logprob: -11.299225807189941
    9. ' ' → logprob: -12.299225807189941
    10. '<|end|>' → logprob: -12.549225807189941

Token 1595: ' deg' (ID: 5597)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.03364846482872963
    2. ' deg' → logprob: -3.4086484909057617
    3. 'len' → logprob: -13.783648490905762
    4. '   ' → logprob: -14.408648490905762
    5. '           ' → logprob: -14.408648490905762
    6. 'de' → logprob: -16.033647537231445
    7. '       ' → logprob: -16.408647537231445
    8. '_deg' → logprob: -17.158647537231445
    9. '	de' → logprob: -17.283647537231445
    10. ' ' → logprob: -17.408647537231445

Token 1596: '_st' (ID: 2518)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.18953274190425873
    2. '_st' → logprob: -1.81453275680542
    3. 'p' → logprob: -4.81453275680542
    4. '(p' → logprob: -7.81453275680542
    5. '>=' → logprob: -8.064532279968262
    6. ' p' → logprob: -8.314532279968262
    7. '[' → logprob: -8.939532279968262
    8. '   ' → logprob: -9.314532279968262
    9. 'st' → logprob: -9.689532279968262
    10. '>' → logprob: -9.689532279968262

Token 1597: 'reet' (ID: 5409)
  Prédit: 'reet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reet' → logprob: -0.12164118140935898
    2. 'p' → logprob: -2.871641159057617
    3. '[p' → logprob: -4.121641159057617
    4. ' p' → logprob: -4.621641159057617
    5. '(p' → logprob: -4.746641159057617
    6. '_st' → logprob: -4.871641159057617
    7. 're' → logprob: -5.496641159057617
    8. 'ree' → logprob: -5.496641159057617
    9. 'reat' → logprob: -6.621641159057617
    10. '       ' → logprob: -6.996641159057617

Token 1598: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -6.587483221665025e-05
    2. '[' → logprob: -10.125065803527832
    3. 'p' → logprob: -11.875065803527832
    4. ' [' → logprob: -12.000065803527832
    5. '>=' → logprob: -12.500065803527832
    6. '[
' → logprob: -13.000065803527832
    7. '>' → logprob: -13.250065803527832
    8. '
' → logprob: -13.750065803527832
    9. '(p' → logprob: -14.000065803527832
    10. '_[' → logprob: -15.000065803527832

Token 1599: ']>=' (ID: 185954)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.28070777654647827
    2. '[p' → logprob: -1.530707836151123
    3. ' >=' → logprob: -4.530707836151123
    4. ']>=' → logprob: -4.905707836151123
    5. '>' → logprob: -5.280707836151123
    6. ')>=' → logprob: -5.780707836151123
    7. '[' → logprob: -7.280707836151123
    8. ']' → logprob: -7.655707836151123
    9. 'p' → logprob: -7.655707836151123
    10. ' p' → logprob: -8.655707359313965

Token 1600: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.250006675720215
    3. '
' → logprob: -14.250006675720215
    4. '   ' → logprob: -14.750006675720215
    5. '1' → logprob: -15.250006675720215
    6. '>' → logprob: -16.2500057220459
    7. '```' → logprob: -16.8750057220459
    8. '  ' → logprob: -19.2500057220459
    9. '۲' → logprob: -19.2500057220459
    10. '3' → logprob: -19.2500057220459

Token 1601: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.48474884033203125
    2. ':' → logprob: -0.9847488403320312
    3. '           ' → logprob: -4.609748840332031
    4. '):
' → logprob: -8.109748840332031
    5. '               ' → logprob: -9.234748840332031
    6. '       ' → logprob: -9.609748840332031
    7. ' and' → logprob: -10.234748840332031
    8. ',' → logprob: -10.609748840332031
    9. '):' → logprob: -10.859748840332031
    10. ':
' → logprob: -11.109748840332031

Token 1602: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04938637092709541
    2. '               ' → logprob: -3.0493862628936768
    3. '   ' → logprob: -7.549386501312256
    4. '       ' → logprob: -8.799386024475098
    5. 'intersection' → logprob: -10.299386024475098
    6. '
' → logprob: -10.549386024475098
    7. 'inter' → logprob: -11.424386024475098
    8. ' intersection' → logprob: -11.799386024475098
    9. '```' → logprob: -11.799386024475098
    10. '(inter' → logprob: -12.049386024475098

Token 1603: ' intersection' (ID: 42002)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' (adapté à ' intersection') → logprob: -0.5793984532356262
    2. ' intersection' → logprob: -0.8293984532356262
    3. '               ' → logprob: -6.2043986320495605
    4. '   ' → logprob: -7.7043986320495605
    5. 'inter' → logprob: -7.8293986320495605
    6. '           ' → logprob: -7.8293986320495605
    7. '                   ' → logprob: -9.204398155212402
    8. '
' → logprob: -10.079398155212402
    9. '       ' → logprob: -11.954398155212402
    10. ' ' → logprob: -12.079398155212402

Token 1604: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -2.0100624169572257e-05
    2. '_p' → logprob: -11.500020027160645
    3. ' _' → logprob: -12.125020027160645
    4. '_' → logprob: -12.875020027160645
    5. 's' → logprob: -14.750020027160645
    6. ''_' → logprob: -15.125020027160645
    7. '```' → logprob: -15.375020027160645
    8. ')_' → logprob: -15.625020027160645
    9. '
' → logprob: -16.00002098083496
    10. '_
' → logprob: -16.37502098083496

Token 1605: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.00026264708139933646
    2. '.' → logprob: -8.250262260437012
    3. ' .' → logprob: -13.625262260437012
    4. '.Add' → logprob: -16.125263214111328
    5. ')add' → logprob: -17.500263214111328
    6. '.ad' → logprob: -18.125263214111328
    7. 'add' → logprob: -18.250263214111328
    8. ':add' → logprob: -18.375263214111328
    9. '.update' → logprob: -18.500263214111328
    10. '.remove' → logprob: -18.500263214111328

Token 1606: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.004176933318376541
    2. 'p' → logprob: -5.629177093505859
    3. '(' → logprob: -7.504177093505859
    4. ' p' → logprob: -11.00417709350586
    5. '(
' → logprob: -12.00417709350586
    6. ' (' → logprob: -12.75417709350586
    7. '((' → logprob: -16.12917709350586
    8. '('' → logprob: -17.12917709350586
    9. '()' → logprob: -17.25417709350586
    10. '	p' → logprob: -18.37917709350586

Token 1607: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -6.945094355614856e-05
    2. ')
' → logprob: -9.625069618225098
    3. '       ' → logprob: -13.500069618225098
    4. ' )' → logprob: -13.750069618225098
    5. '<|end|>' → logprob: -15.500069618225098
    6. ')

' → logprob: -16.37506866455078
    7. ')return' → logprob: -16.50006866455078
    8. '())' → logprob: -16.62506866455078
    9. '),' → logprob: -16.62506866455078
    10. '   ' → logprob: -16.75006866455078

Token 1608: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.37314900755882263
    2. '
' → logprob: -1.748149037361145
    3. '<|end|>' → logprob: -2.6231489181518555
    4. ' for' → logprob: -3.1231489181518555
    5. 'for' → logprob: -4.9981489181518555
    6. '        
' → logprob: -5.8731489181518555
    7. '   ' → logprob: -5.9981489181518555
    8. '#' → logprob: -5.9981489181518555
    9. ',' → logprob: -6.8731489181518555
    10. '```' → logprob: -6.9981489181518555

Token 1609: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3856513202190399
    2. '#' (adapté à ' #') → logprob: -1.2606513500213623
    3. 'for' → logprob: -3.8856513500213623
    4. '   ' → logprob: -5.385651111602783
    5. '
' → logprob: -5.635651111602783
    6. 'graph' → logprob: -6.135651111602783
    7. 'edges' → logprob: -6.385651111602783
    8. '        
' → logprob: -6.635651111602783
    9. 'next' → logprob: -7.260651111602783
    10. 'def' → logprob: -7.760651111602783

Token 1610: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9941076040267944
    2. '       ' → logprob: -1.1191076040267944
    3. ' for' → logprob: -1.6191076040267944
    4. '#' → logprob: -2.369107723236084
    5. ' #' → logprob: -5.369107723236084
    6. '   ' → logprob: -6.369107723236084
    7. 'def' → logprob: -6.369107723236084
    8. 'if' → logprob: -7.494107723236084
    9. ' if' → logprob: -7.619107723236084
    10. 'next' → logprob: -7.744107723236084

Token 1611: ' need' (ID: 1309)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.2169815301895142
    2. '#' → logprob: -1.5919815301895142
    3. ' =' → logprob: -2.2169814109802246
    4. ' need' → logprob: -2.8419814109802246
    5. 'continue' → logprob: -3.0919814109802246
    6. '
' → logprob: -3.0919814109802246
    7. '=' → logprob: -3.3419814109802246
    8. ''' → logprob: -3.7169814109802246
    9. ' 
' → logprob: -3.7169814109802246
    10. ''ll' → logprob: -3.8419814109802246

Token 1612: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.09581699967384338
    2. ' 
' → logprob: -3.4708170890808105
    3. '
' → logprob: -3.5958170890808105
    4. 'to' → logprob: -3.8458170890808105
    5. '   ' → logprob: -5.8458170890808105
    6. 'def' → logprob: -6.5958170890808105
    7. ' ' → logprob: -6.5958170890808105
    8. ' continue' → logprob: -7.0958170890808105
    9. '    
' → logprob: -7.3458170890808105
    10. ' #' → logprob: -7.5958170890808105

Token 1613: ' make' (ID: 1520)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.773508608341217
    2. 'build' → logprob: -1.7735085487365723
    3. 'continue' → logprob: -2.1485085487365723
    4. 'for' → logprob: -2.8985085487365723
    5. 'find' → logprob: -3.2735085487365723
    6. 'det' → logprob: -3.2735085487365723
    7. ' #' → logprob: -3.5235085487365723
    8. 'assign' → logprob: -4.023508548736572
    9. 'identify' → logprob: -4.523508548736572
    10. 'def' → logprob: -4.648508548736572

Token 1614: ' a' (ID: 261)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.551464319229126
    2. 'dire' → logprob: -1.801464319229126
    3. 'graph' → logprob: -1.926464319229126
    4. ' directions' → logprob: -1.926464319229126
    5. ' edges' → logprob: -2.676464319229126
    6. ' graph' → logprob: -2.676464319229126
    7. 'edges' → logprob: -3.051464319229126
    8. 'def' → logprob: -3.426464319229126
    9. 'direction' → logprob: -3.676464319229126
    10. ' a' → logprob: -4.051464080810547

Token 1615: ' directed' (ID: 23699)
  Prédit: 'direct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direct' → logprob: -0.21809816360473633
    2. 'graph' → logprob: -2.8430981636047363
    3. 'def' → logprob: -3.5930981636047363
    4. ' directed' → logprob: -3.5930981636047363
    5. 'direction' → logprob: -3.7180981636047363
    6. 'irected' → logprob: -3.7180981636047363
    7. 'dire' → logprob: -4.468098163604736
    8. '#' → logprob: -4.468098163604736
    9. 'dj' → logprob: -6.093098163604736
    10. 'dig' → logprob: -6.218098163604736

Token 1616: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.09623003751039505
    2. ' graph' → logprob: -2.4712300300598145
    3. '_graph' → logprob: -4.9712300300598145
    4. '
' → logprob: -8.346230506896973
    5. '_' → logprob: -9.721230506896973
    6. '	graph' → logprob: -12.221230506896973
    7. ' ' → logprob: -12.346230506896973
    8. 'raph' → logprob: -12.471230506896973
    9. 'Graph' → logprob: -12.596230506896973
    10. '#' → logprob: -12.721230506896973

Token 1617: ' considering' (ID: 17227)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.491250604391098
    2. '       ' → logprob: -1.1162506341934204
    3. 'graph' → logprob: -3.991250514984131
    4. ' for' → logprob: -4.241250514984131
    5. ' graph' → logprob: -4.241250514984131
    6. '.
' → logprob: -5.991250514984131
    7. ',' → logprob: -6.491250514984131
    8. ':
' → logprob: -6.491250514984131
    9. '        
' → logprob: -6.616250514984131
    10. 'for' → logprob: -6.616250514984131

Token 1618: ' signs' (ID: 17424)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.2732288837432861
    2. 'sign' → logprob: -1.3982288837432861
    3. 'turn' → logprob: -2.398228883743286
    4. 'street' → logprob: -2.398228883743286
    5. 'intersection' → logprob: -2.523228883743286
    6. 'angle' → logprob: -3.023228883743286
    7. 'angles' → logprob: -3.148228883743286
    8. 'dire' → logprob: -3.148228883743286
    9. 'direction' → logprob: -4.523228645324707
    10. 'stre' → logprob: -4.523228645324707

Token 1619: ''' (ID: 6)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.670777440071106
    2. '
' → logprob: -0.795777440071106
    3. '        
' → logprob: -3.9207773208618164
    4. '<|end|>' → logprob: -5.545777320861816
    5. '#' → logprob: -5.670777320861816
    6. ',' → logprob: -5.795777320861816
    7. '```' → logprob: -6.545777320861816
    8. ' for' → logprob: -6.545777320861816
    9. '.' → logprob: -7.420777320861816
    10. ' 
' → logprob: -7.545777320861816

Token 1620: ' forbidden' (ID: 74435)
  Prédit: ' edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' edges' → logprob: -1.2046955823898315
    2. 'connections' → logprob: -2.079695701599121
    3. ' connections' → logprob: -2.079695701599121
    4. 'edges' → logprob: -2.454695701599121
    5. ' endpoints' → logprob: -2.829695701599121
    6. '_edges' → logprob: -3.329695701599121
    7. '_connections' → logprob: -3.704695701599121
    8. ' for' → logprob: -3.829695701599121
    9. 'for' → logprob: -3.954695701599121
    10. ',' → logprob: -4.204695701599121

Token 1621: ' directions' (ID: 24921)
  Prédit: '_edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edges' → logprob: -0.031915828585624695
    2. 'edges' → logprob: -4.656915664672852
    3. '_segments' → logprob: -5.031915664672852
    4. '_' → logprob: -5.156915664672852
    5. '_connections' → logprob: -6.656915664672852
    6. ' edges' → logprob: -7.156915664672852
    7. 's' → logprob: -7.531915664672852
    8. ',' → logprob: -7.656915664672852
    9. ')' → logprob: -7.781915664672852
    10. '
' → logprob: -7.781915664672852

Token 1622: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.41850438714027405
    2. '
' → logprob: -1.1685043573379517
    3. '#' → logprob: -4.543504238128662
    4. ' for' → logprob: -5.293504238128662
    5. '        
' → logprob: -5.668504238128662
    6. ',' → logprob: -6.168504238128662
    7. '<|end|>' → logprob: -6.168504238128662
    8. 'for' → logprob: -6.418504238128662
    9. 'def' → logprob: -6.918504238128662
    10. '   ' → logprob: -6.918504238128662

Token 1623: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03595825284719467
    2. '
' → logprob: -4.285958290100098
    3. '        
' → logprob: -4.285958290100098
    4. ' for' → logprob: -6.535958290100098
    5. '   ' → logprob: -6.785958290100098
    6. '        ' → logprob: -6.910958290100098
    7. '<|end|>' → logprob: -7.160958290100098
    8. 'for' → logprob: -7.410958290100098
    9. ' 
' → logprob: -7.535958290100098
    10. '#' → logprob: -7.660958290100098

Token 1624: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24274607002735138
    2. '
' → logprob: -2.867746114730835
    3. '#' (adapté à ' #') → logprob: -2.992746114730835
    4. ' for' → logprob: -2.992746114730835
    5. 'for' → logprob: -3.117746114730835
    6. '        
' → logprob: -5.492745876312256
    7. 'sign' → logprob: -6.242745876312256
    8. '   ' → logprob: -6.492745876312256
    9. 'graph' → logprob: -6.867745876312256
    10. ' #' → logprob: -6.867745876312256

Token 1625: ' Signs' (ID: 92744)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7890068292617798
    2. '#' → logprob: -1.5390068292617798
    3. '       ' → logprob: -1.7890068292617798
    4. 'graph' → logprob: -3.1640067100524902
    5. '   ' → logprob: -3.2890067100524902
    6. ' for' → logprob: -4.03900671005249
    7. 'dire' → logprob: -4.28900671005249
    8. 'visited' → logprob: -4.41400671005249
    9. 'd' → logprob: -4.78900671005249
    10. 'direct' → logprob: -5.28900671005249

Token 1626: ' restrict' (ID: 33293)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4873180091381073
    2. '_segments' → logprob: -1.2373180389404297
    3. ' =' → logprob: -3.3623180389404297
    4. ':' → logprob: -4.61231803894043
    5. '=' → logprob: -4.98731803894043
    6. ',' → logprob: -4.98731803894043
    7. 's' → logprob: -5.23731803894043
    8. '[' → logprob: -5.48731803894043
    9. '#' → logprob: -5.48731803894043
    10. 'for' → logprob: -5.86231803894043

Token 1627: ' movement' (ID: 12772)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5880327224731445
    2. ' directions' → logprob: -1.4630327224731445
    3. 'the' → logprob: -2.8380327224731445
    4. ' edges' → logprob: -3.2130327224731445
    5. ' graph' → logprob: -3.9630327224731445
    6. 'dire' → logprob: -4.3380327224731445
    7. ' possible' → logprob: -4.7130327224731445
    8. 'edges' → logprob: -4.7130327224731445
    9. ' outgoing' → logprob: -4.8380327224731445
    10. 'graph' → logprob: -4.9630327224731445

Token 1628: ' from' (ID: 591)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.5587828159332275
    2. ',' → logprob: -2.0587828159332275
    3. 'from' → logprob: -2.0587828159332275
    4. ':' → logprob: -2.5587828159332275
    5. ' to' → logprob: -2.5587828159332275
    6. ' in' → logprob: -2.8087828159332275
    7. ' from' → logprob: -3.3087828159332275
    8. '       ' → logprob: -3.4337828159332275
    9. '#' → logprob: -3.6837828159332275
    10. '   ' → logprob: -3.8087828159332275

Token 1629: ' obt' (ID: 5564)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.5997890830039978
    2. 'the' → logprob: -1.4747891426086426
    3. 'sign' → logprob: -2.5997891426086426
    4. 'stre' → logprob: -3.3497891426086426
    5. 'intersection' → logprob: -3.5997891426086426
    6. 'a' → logprob: -3.7247891426086426
    7. 'their' → logprob: -3.9747891426086426
    8. ' street' → logprob: -4.099789142608643
    9. ' the' → logprob: -5.099789142608643
    10. 'one' → logprob: -5.224789142608643

Token 1630: 'use' (ID: 1821)
  Prédit: 'use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.0004056474717799574
    2. '```' → logprob: -8.375405311584473
    3. '       ' → logprob: -10.500405311584473
    4. '
' → logprob: -10.875405311584473
    5. 'us' → logprob: -11.125405311584473
    6. 's' → logprob: -11.625405311584473
    7. 'u' → logprob: -11.625405311584473
    8. 't' → logprob: -11.750405311584473
    9. '[' → logprob: -12.000405311584473
    10. '(use' → logprob: -12.125405311584473

Token 1631: ' side' (ID: 4307)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.7130585312843323
    2. '_angle' → logprob: -1.2130584716796875
    3. 'angles' → logprob: -2.2130584716796875
    4. ' angles' → logprob: -3.2130584716796875
    5. ' angle' → logprob: -3.2130584716796875
    6. '_angles' → logprob: -3.9630584716796875
    7. '_' → logprob: -6.9630584716796875
    8. ' ' → logprob: -7.3380584716796875
    9. 's' → logprob: -8.213058471679688
    10. '
' → logprob: -8.588058471679688

Token 1632: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3520313501358032
    2. '<|end|>' → logprob: -1.8520313501358032
    3. '
' → logprob: -2.4770312309265137
    4. '#' → logprob: -3.9770312309265137
    5. '<|end|>' → logprob: -4.352031230926514
    6. '        
' → logprob: -4.852031230926514
    7. 'def' → logprob: -5.727031230926514
    8. ' for' → logprob: -6.352031230926514
    9. ',' → logprob: -6.352031230926514
    10. '.' → logprob: -6.602031230926514

Token 1633: ' acute' (ID: 43944)
  Prédit: 'acute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acute' → logprob: -0.03802897408604622
    2. ' acute' → logprob: -3.9130289554595947
    3. '   ' → logprob: -5.413029193878174
    4. 'the' → logprob: -5.413029193878174
    5. 'obt' → logprob: -5.663029193878174
    6. '
' → logprob: -7.163029193878174
    7. 'sharp' → logprob: -7.663029193878174
    8. 'street' → logprob: -7.663029193878174
    9. '```' → logprob: -7.663029193878174
    10. ' the' → logprob: -8.038028717041016

Token 1634: ' side' (ID: 4307)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9983933568000793
    2. '
' → logprob: -2.1233932971954346
    3. '#' → logprob: -2.7483932971954346
    4. '.' → logprob: -2.9983932971954346
    5. ',' → logprob: -3.3733932971954346
    6. '   ' → logprob: -3.6233932971954346
    7. 'for' → logprob: -3.6233932971954346
    8. 'segments' → logprob: -3.6233932971954346
    9. ' for' → logprob: -3.7483932971954346
    10. ' segments' → logprob: -3.8733932971954346

Token 1635: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.29774951934814453
    2. '
' → logprob: -1.9227495193481445
    3. '#' → logprob: -2.6727495193481445
    4. '<|end|>' → logprob: -4.0477495193481445
    5. 'def' → logprob: -4.7977495193481445
    6. '   ' → logprob: -5.4227495193481445
    7. ' for' → logprob: -5.6727495193481445
    8. 'for' → logprob: -5.9227495193481445
    9. '        
' → logprob: -6.5477495193481445
    10. ',' → logprob: -7.2977495193481445

Token 1636: ' a' (ID: 261)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -1.0065577030181885
    2. 'sign' → logprob: -1.1315577030181885
    3. 'the' → logprob: -2.0065577030181885
    4. 'each' → logprob: -2.2565577030181885
    5. 'inter' → logprob: -4.006557464599609
    6. 'an' → logprob: -4.256557464599609
    7. 'p' → logprob: -4.881557464599609
    8. 'their' → logprob: -5.256557464599609
    9. ' intersections' → logprob: -5.506557464599609
    10. 'that' → logprob: -5.756557464599609

Token 1637: ' point' (ID: 2438)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.49278825521469116
    2. 'n' → logprob: -1.992788314819336
    3. 'point' → logprob: -2.242788314819336
    4. 'intersection' → logprob: -2.867788314819336
    5. 'node' → logprob: -4.117788314819336
    6. 'junction' → logprob: -4.242788314819336
    7. 'vertex' → logprob: -4.992788314819336
    8. 'street' → logprob: -5.242788314819336
    9. ' sign' → logprob: -5.242788314819336
    10. 'segment' → logprob: -5.242788314819336

Token 1638: ' where' (ID: 1919)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6351085901260376
    2. '
' → logprob: -1.0101085901260376
    3. '   ' → logprob: -3.385108470916748
    4. 'def' → logprob: -3.510108470916748
    5. '#' → logprob: -3.760108470916748
    6. '        
' → logprob: -5.635108470916748
    7. ',' → logprob: -5.760108470916748
    8. ' for' → logprob: -6.260108470916748
    9. '    
' → logprob: -6.385108470916748
    10. '<|end|>' → logprob: -6.635108470916748

Token 1639: ' a' (ID: 261)
  Prédit: ' signs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' signs' → logprob: -1.2822295427322388
    2. ' a' → logprob: -1.6572295427322388
    3. ' an' → logprob: -1.7822295427322388
    4. 'sign' → logprob: -2.157229423522949
    5. 'a' → logprob: -2.532229423522949
    6. ' the' → logprob: -2.657229423522949
    7. ' sign' → logprob: -3.657229423522949
    8. 'the' → logprob: -4.032229423522949
    9. 'an' → logprob: -4.407229423522949
    10. ' there' → logprob: -4.657229423522949

Token 1640: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.046147409826517105
    2. ' sign' → logprob: -3.296147346496582
    3. 'street' → logprob: -5.921147346496582
    4. 'segment' → logprob: -6.671147346496582
    5. ' street' → logprob: -6.671147346496582
    6. 't' → logprob: -7.796147346496582
    7. 's' → logprob: -8.046147346496582
    8. 'n' → logprob: -8.546147346496582
    9. 'intersection' → logprob: -8.671147346496582
    10. ' segment' → logprob: -8.796147346496582

Token 1641: ' touches' (ID: 45060)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.3144051432609558
    2. 'is' → logprob: -2.8144052028656006
    3. ' prohibits' → logprob: -3.5644052028656006
    4. ' forb' → logprob: -3.8144052028656006
    5. ' points' → logprob: -4.0644049644470215
    6. '_segments' → logprob: -4.3144049644470215
    7. ' indicates' → logprob: -4.4394049644470215
    8. ' exists' → logprob: -4.4394049644470215
    9. 'segments' → logprob: -4.5644049644470215
    10. 's' → logprob: -4.6894049644470215

Token 1642: ' a' (ID: 261)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8715396523475647
    2. '.' → logprob: -1.99653959274292
    3. ',' → logprob: -2.24653959274292
    4. ':' → logprob: -2.99653959274292
    5. '
' → logprob: -2.99653959274292
    6. '.
' → logprob: -2.99653959274292
    7. ':
' → logprob: -3.12153959274292
    8. ',
' → logprob: -3.24653959274292
    9. ' at' → logprob: -3.62153959274292
    10. '   ' → logprob: -3.99653959274292

Token 1643: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.17601808905601501
    2. ' street' → logprob: -1.9260181188583374
    3. 'stre' → logprob: -4.926018238067627
    4. 'point' → logprob: -6.176018238067627
    5. 'intersection' → logprob: -6.551018238067627
    6. 'segment' → logprob: -6.801018238067627
    7. 'st' → logprob: -7.301018238067627
    8. 'node' → logprob: -8.051017761230469
    9. 'p' → logprob: -8.176017761230469
    10. 'sign' → logprob: -8.301017761230469

Token 1644: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14774024486541748
    2. '
' → logprob: -2.272740364074707
    3. '<|end|>' → logprob: -4.022740364074707
    4. '#' → logprob: -5.147740364074707
    5. '        
' → logprob: -5.647740364074707
    6. '   ' → logprob: -5.772740364074707
    7. '<|end|>' → logprob: -7.272740364074707
    8. ',' → logprob: -7.772740364074707
    9. ')' → logprob: -7.772740364074707
    10. 'def' → logprob: -7.897740364074707

Token 1645: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04468639940023422
    2. '
' → logprob: -3.4196863174438477
    3. '        
' → logprob: -5.294686317443848
    4. '<|end|>' → logprob: -5.794686317443848
    5. '#' → logprob: -6.794686317443848
    6. ' 
' → logprob: -8.169686317443848
    7. '   ' → logprob: -8.669686317443848
    8. '    
' → logprob: -8.794686317443848
    9. ' for' → logprob: -8.919686317443848
    10. '[' → logprob: -8.919686317443848

Token 1646: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10466017574071884
    2. '
' → logprob: -2.4796602725982666
    3. '   ' → logprob: -5.4796600341796875
    4. '#' (adapté à ' #') → logprob: -5.6046600341796875
    5. ' for' → logprob: -5.9796600341796875
    6. '        
' → logprob: -6.4796600341796875
    7. 'for' → logprob: -6.8546600341796875
    8. 'graph' → logprob: -7.4796600341796875
    9. ' 
' → logprob: -8.104660034179688
    10. '    
' → logprob: -8.479660034179688

Token 1647: ' At' (ID: 3604)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40653276443481445
    2. '#' → logprob: -1.4065327644348145
    3. '
' → logprob: -2.7815327644348145
    4. 'for' → logprob: -3.7815327644348145
    5. ' for' → logprob: -7.0315327644348145
    6. '   ' → logprob: -7.0315327644348145
    7. ' #' → logprob: -7.6565327644348145
    8. 'def' → logprob: -7.7815327644348145
    9. '        
' → logprob: -8.031532287597656
    10. 'graph' → logprob: -8.406532287597656

Token 1648: ' the' (ID: 290)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.7473710775375366
    2. 'sign' → logprob: -1.7473710775375366
    3. 'each' → logprob: -2.247371196746826
    4. 'intersection' → logprob: -2.247371196746826
    5. 'the' → logprob: -2.747371196746826
    6. 's' → logprob: -2.872371196746826
    7. 'this' → logprob: -2.872371196746826
    8. 'p' → logprob: -2.997371196746826
    9. ' this' → logprob: -3.372371196746826
    10. 'for' → logprob: -3.497371196746826

Token 1649: ' endpoint' (ID: 29703)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.7535730600357056
    2. 'intersection' → logprob: -1.8785730600357056
    3. 'point' → logprob: -2.003572940826416
    4. '#' → logprob: -2.003572940826416
    5. 'end' → logprob: -3.753572940826416
    6. ' sign' → logprob: -4.128572940826416
    7. 'points' → logprob: -4.128572940826416
    8. 's' → logprob: -5.003572940826416
    9. 'street' → logprob: -5.253572940826416
    10. 'first' → logprob: -5.878572940826416

Token 1650: ' where' (ID: 1919)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.668035089969635
    2. ' where' → logprob: -0.793035089969635
    3. 's' → logprob: -4.41803503036499
    4. ' that' → logprob: -5.41803503036499
    5. '_' → logprob: -5.79303503036499
    6. ' with' → logprob: -5.91803503036499
    7. 'of' → logprob: -6.16803503036499
    8. ',' → logprob: -6.29303503036499
    9. 'where' → logprob: -6.41803503036499
    10. '
' → logprob: -6.66803503036499

Token 1651: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.5302804112434387
    2. 'the' → logprob: -1.530280351638794
    3. 'a' → logprob: -1.655280351638794
    4. ' a' → logprob: -6.405280590057373
    5. ' the' → logprob: -7.030280590057373
    6. 'se' → logprob: -7.155280590057373
    7. ' sign' → logprob: -7.530280590057373
    8. 's' → logprob: -10.030280113220215
    9. 'they' → logprob: -10.030280113220215
    10. 'it' → logprob: -10.655280113220215

Token 1652: ' touches' (ID: 45060)
  Prédit: ' touches'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' touches' → logprob: -0.44871050119400024
    2. 's' → logprob: -1.8237104415893555
    3. ' connects' → logprob: -2.0737104415893555
    4. 'touch' → logprob: -3.6987104415893555
    5. '   ' → logprob: -3.9487104415893555
    6. ' attaches' → logprob: -4.9487104415893555
    7. 'connect' → logprob: -4.9487104415893555
    8. 'segments' → logprob: -5.1987104415893555
    9. ' segments' → logprob: -5.9487104415893555
    10. 't' → logprob: -6.9487104415893555

Token 1653: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -1.2771334648132324
    2. ' the' → logprob: -1.2771334648132324
    3. ' street' → logprob: -1.6521334648132324
    4. 'the' → logprob: -1.9021334648132324
    5. 'street' → logprob: -2.7771334648132324
    6. 'a' → logprob: -3.2771334648132324
    7. ' ' → logprob: -8.90213394165039
    8. ' one' → logprob: -8.90213394165039
    9. '#' → logprob: -8.90213394165039
    10. 'stre' → logprob: -9.02713394165039

Token 1654: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.12148071080446243
    2. ' street' → logprob: -2.246480703353882
    3. 'stre' → logprob: -4.871480941772461
    4. 's' → logprob: -8.746480941772461
    5. 'st' → logprob: -8.746480941772461
    6. 'sign' → logprob: -8.996480941772461
    7. ' ' → logprob: -9.246480941772461
    8. ' ' → logprob: -9.496480941772461
    9. ' p' → logprob: -10.496480941772461
    10. '.street' → logprob: -10.558980941772461

Token 1655: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.055778879672288895
    2. ':' → logprob: -3.805778980255127
    3. ',
' → logprob: -3.930778980255127
    4. ':
' → logprob: -6.180778980255127
    5. '.' → logprob: -6.305778980255127
    6. '   ' → logprob: -6.555778980255127
    7. '       ' → logprob: -6.805778980255127
    8. '(p' → logprob: -6.930778980255127
    9. ' (' → logprob: -7.055778980255127
    10. ')' → logprob: -7.555778980255127

Token 1656: ' label' (ID: 4208)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.353328824043274
    2. ' we' → logprob: -1.853328824043274
    3. '#' → logprob: -1.978328824043274
    4. ' #' → logprob: -2.4783287048339844
    5. ' continue' → logprob: -2.8533287048339844
    6. ' the' → logprob: -2.9783287048339844
    7. 'for' → logprob: -3.3533287048339844
    8. ' there' → logprob: -3.4783287048339844
    9. '       ' → logprob: -4.228328704833984
    10. '   ' → logprob: -4.228328704833984

Token 1657: ' angles' (ID: 43448)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.5926384329795837
    2. 's' → logprob: -2.0926384925842285
    3. 'the' → logprob: -2.0926384925842285
    4. ' it' → logprob: -2.8426384925842285
    5. ' that' → logprob: -3.7176384925842285
    6. ' =' → logprob: -4.2176384925842285
    7. 'd' → logprob: -4.2176384925842285
    8. 'direction' → logprob: -4.7176384925842285
    9. ' direction' → logprob: -5.0926384925842285
    10. '<|end|>' → logprob: -5.0926384925842285

Token 1658: ' between' (ID: 2870)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.075996533036232
    2. '
' → logprob: -3.5759966373443604
    3. ' at' → logprob: -4.450996398925781
    4. '   ' → logprob: -4.700996398925781
    5. ' =' → logprob: -4.950996398925781
    6. '        
' → logprob: -5.575996398925781
    7. ',' → logprob: -6.700996398925781
    8. '=' → logprob: -6.825996398925781
    9. ')' → logprob: -6.825996398925781
    10. '.' → logprob: -6.950996398925781

Token 1659: ' sign' (ID: 2232)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.6526098251342773
    2. 'se' → logprob: -1.7776098251342773
    3. 'that' → logprob: -2.4026098251342773
    4. 'segments' → logprob: -2.7776098251342773
    5. 'street' → logprob: -3.0276098251342773
    6. 'stre' → logprob: -4.152609825134277
    7. ' the' → logprob: -4.277609825134277
    8. 'edges' → logprob: -4.402609825134277
    9. 'graph' → logprob: -4.527609825134277
    10. 'vectors' → logprob: -4.527609825134277

Token 1660: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.8832765221595764
    2. '   ' → logprob: -2.0082764625549316
    3. 's' → logprob: -2.2582764625549316
    4. ')' → logprob: -2.8832764625549316
    5. ' segment' → logprob: -2.8832764625549316
    6. '_segments' → logprob: -3.2582764625549316
    7. '[' → logprob: -3.5082764625549316
    8. '_segment' → logprob: -3.7582764625549316
    9. ' at' → logprob: -4.008276462554932
    10. '
' → logprob: -4.508276462554932

Token 1661: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.4052547514438629
    2. ' street' → logprob: -1.5302547216415405
    3. 'the' → logprob: -2.53025484085083
    4. 'that' → logprob: -4.15525484085083
    5. 'stre' → logprob: -4.65525484085083
    6. ' the' → logprob: -5.03025484085083
    7. ' that' → logprob: -6.03025484085083
    8. 'se' → logprob: -7.03025484085083
    9. 'st' → logprob: -7.15525484085083
    10. 'segment' → logprob: -8.405254364013672

Token 1662: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01892975904047489
    2. '
' → logprob: -4.518929958343506
    3. '   ' → logprob: -6.268929958343506
    4. '#' → logprob: -6.518929958343506
    5. '        
' → logprob: -6.643929958343506
    6. ' for' → logprob: -7.643929958343506
    7. ' at' → logprob: -7.643929958343506
    8. '           ' → logprob: -7.893929958343506
    9. ',' → logprob: -8.018929481506348
    10. 'for' → logprob: -8.643929481506348

Token 1663: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021934425458312035
    2. '
' → logprob: -4.021934509277344
    3. '        
' → logprob: -6.396934509277344
    4. '#' → logprob: -7.146934509277344
    5. '<|end|>' → logprob: -7.396934509277344
    6. ' 
' → logprob: -8.896934509277344
    7. ',' → logprob: -9.396934509277344
    8. ' for' → logprob: -9.771934509277344
    9. '   ' → logprob: -10.021934509277344
    10. 'import' → logprob: -10.271934509277344

Token 1664: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3603874742984772
    2. '
' → logprob: -1.2353874444961548
    3. '#' (adapté à ' #') → logprob: -4.985387325286865
    4. '        
' → logprob: -6.735387325286865
    5. ' for' → logprob: -6.860387325286865
    6. ' 
' → logprob: -7.485387325286865
    7. 'for' → logprob: -7.485387325286865
    8. '<|end|>' → logprob: -7.485387325286865
    9. '  
' → logprob: -8.735387802124023
    10. ' #' → logprob: -8.735387802124023

Token 1665: ' Cars' (ID: 41728)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.26180699467658997
    2. '       ' → logprob: -2.1368069648742676
    3. '#' → logprob: -2.3868069648742676
    4. ' for' → logprob: -4.136806964874268
    5. '
' → logprob: -6.261806964874268
    6. '   ' → logprob: -7.011806964874268
    7. 'sign' → logprob: -7.636806964874268
    8. ' #' → logprob: -8.261807441711426
    9. 'from' → logprob: -8.886807441711426
    10. '           ' → logprob: -8.886807441711426

Token 1666: ' may' (ID: 1340)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.19191838800907135
    2. ' continue' → logprob: -3.06691837310791
    3. ''' → logprob: -3.69191837310791
    4. '   ' → logprob: -4.19191837310791
    5. ' may' → logprob: -4.69191837310791
    6. ' at' → logprob: -4.69191837310791
    7. '_' → logprob: -4.69191837310791
    8. '[' → logprob: -4.94191837310791
    9. ' are' → logprob: -5.31691837310791
    10. 'can' → logprob: -5.31691837310791

Token 1667: ' not' (ID: 625)
  Prédit: ' only'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' only' → logprob: -0.6451902389526367
    2. ' move' → logprob: -1.5201902389526367
    3. ' not' → logprob: -1.6451902389526367
    4. ' travel' → logprob: -4.145190238952637
    5. ' proceed' → logprob: -4.145190238952637
    6. 'not' → logprob: -4.770190238952637
    7. ' go' → logprob: -5.020190238952637
    8. ' be' → logprob: -5.520190238952637
    9. 'only' → logprob: -5.895190238952637
    10. ' approach' → logprob: -5.895190238952637

Token 1668: ' move' (ID: 5275)
  Prédit: ' move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -1.3105469942092896
    2. 'move' → logprob: -1.3105469942092896
    3. 'pass' → logprob: -2.310546875
    4. ' pass' → logprob: -2.685546875
    5. ' enter' → logprob: -2.810546875
    6. 'go' → logprob: -2.810546875
    7. 'enter' → logprob: -3.185546875
    8. 'travel' → logprob: -3.310546875
    9. ' travel' → logprob: -3.435546875
    10. ' go' → logprob: -3.560546875

Token 1669: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2866363823413849
    2. ' from' → logprob: -1.5366363525390625
    3. ' into' → logprob: -4.2866363525390625
    4. ' away' → logprob: -5.4116363525390625
    5. ' along' → logprob: -5.5366363525390625
    6. ' through' → logprob: -5.9116363525390625
    7. ' to' → logprob: -6.6616363525390625
    8. ' forward' → logprob: -6.6616363525390625
    9. '_from' → logprob: -6.9116363525390625
    10. ' toward' → logprob: -7.1616363525390625

Token 1670: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.848558247089386
    2. 'acute' → logprob: -1.4735581874847412
    3. 'sign' → logprob: -2.348558187484741
    4. ' the' → logprob: -2.598558187484741
    5. 'that' → logprob: -2.723558187484741
    6. ' acute' → logprob: -3.473558187484741
    7. 'intersection' → logprob: -3.848558187484741
    8. ' that' → logprob: -4.72355842590332
    9. 'obt' → logprob: -4.72355842590332
    10. '```' → logprob: -5.09855842590332

Token 1671: ' obt' (ID: 5564)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.7650903463363647
    2. ' sign' → logprob: -2.0150904655456543
    3. 'acute' → logprob: -2.0150904655456543
    4. 'obt' → logprob: -2.7650904655456543
    5. ' street' → logprob: -3.0150904655456543
    6. ' acute' → logprob: -3.3900904655456543
    7. ' obt' → logprob: -3.3900904655456543
    8. 'street' → logprob: -3.7650904655456543
    9. 'intersection' → logprob: -4.640090465545654
    10. '```' → logprob: -4.765090465545654

Token 1672: 'use' (ID: 1821)
  Prédit: 'use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.0037196765188127756
    2. '```' → logprob: -6.253719806671143
    3. '       ' → logprob: -8.003719329833984
    4. 'u' → logprob: -8.253719329833984
    5. 'us' → logprob: -8.503719329833984
    6. 'uset' → logprob: -8.753719329833984
    7. '   ' → logprob: -9.378719329833984
    8. ')' → logprob: -10.003719329833984
    9. '
' → logprob: -10.003719329833984
    10. ' use' → logprob: -10.128719329833984

Token 1673: ' angle' (ID: 16538)
  Prédit: ' side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' side' → logprob: -0.17698414623737335
    2. ' angle' → logprob: -1.926984190940857
    3. 'side' → logprob: -5.3019843101501465
    4. 'angle' → logprob: -5.3019843101501465
    5. '<|end|>' → logprob: -6.5519843101501465
    6. ' ' → logprob: -6.5519843101501465
    7. ' to' → logprob: -7.4269843101501465
    8. ')' → logprob: -7.4269843101501465
    9. '_side' → logprob: -7.4269843101501465
    10. '_angle' → logprob: -7.8019843101501465

Token 1674: ' side' (ID: 4307)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6103321313858032
    2. ',' → logprob: -2.7353320121765137
    3. ' at' → logprob: -2.7353320121765137
    4. ' to' → logprob: -2.8603320121765137
    5. ':' → logprob: -2.9853320121765137
    6. '.' → logprob: -3.1103320121765137
    7. ')' → logprob: -3.3603320121765137
    8. '           ' → logprob: -3.8603320121765137
    9. '   ' → logprob: -4.235332012176514
    10. '
' → logprob: -4.360332012176514

Token 1675: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3824457824230194
    2. '
' → logprob: -1.5074458122253418
    3. ')' → logprob: -3.882445812225342
    4. '   ' → logprob: -4.257445812225342
    5. ',' → logprob: -5.007445812225342
    6. '        
' → logprob: -5.132445812225342
    7. ' 
' → logprob: -5.132445812225342
    8. '.' → logprob: -5.257445812225342
    9. ':' → logprob: -5.257445812225342
    10. '\' → logprob: -5.757445812225342

Token 1676: ' acute' (ID: 43944)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.13100232183933258
    2. ' the' → logprob: -2.256002426147461
    3. 'acute' → logprob: -4.131002426147461
    4. ' acute' → logprob: -6.256002426147461
    5. '```' → logprob: -11.881002426147461
    6. ' ' → logprob: -12.131002426147461
    7. '	the' → logprob: -12.381002426147461
    8. '   ' → logprob: -12.756002426147461
    9. ' ' → logprob: -13.256002426147461
    10. 'an' → logprob: -13.506002426147461

Token 1677: ' side' (ID: 4307)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7724002599716187
    2. '_' → logprob: -1.8974002599716187
    3. '   ' → logprob: -2.397400379180908
    4. ' ' → logprob: -3.022400379180908
    5. ' angle' → logprob: -3.272400379180908
    6. '_angle' → logprob: -3.397400379180908
    7. '       ' → logprob: -3.647400379180908
    8. ' )' → logprob: -3.897400379180908
    9. ' at' → logprob: -4.272400379180908
    10. '.' → logprob: -4.647400379180908

Token 1678: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1409073770046234
    2. '
' → logprob: -2.5159072875976562
    3. '#' → logprob: -3.3909072875976562
    4. '        
' → logprob: -5.265907287597656
    5. '<|end|>' → logprob: -6.015907287597656
    6. '.' → logprob: -6.515907287597656
    7. ',' → logprob: -6.640907287597656
    8. ' #' → logprob: -7.015907287597656
    9. ' for' → logprob: -7.015907287597656
    10. 'def' → logprob: -7.265907287597656

Token 1679: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25344279408454895
    2. '
' → logprob: -1.6284427642822266
    3. '#' → logprob: -4.253442764282227
    4. '   ' → logprob: -5.503442764282227
    5. '        
' → logprob: -5.753442764282227
    6. '<|end|>' → logprob: -6.878442764282227
    7. ' for' → logprob: -7.253442764282227
    8. ',' → logprob: -7.378442764282227
    9. 'def' → logprob: -7.628442764282227
    10. '\' → logprob: -7.753442764282227

Token 1680: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05940725654363632
    2. '
' → logprob: -3.3094072341918945
    3. '        
' → logprob: -5.0594072341918945
    4. '#' (adapté à ' #') → logprob: -5.3094072341918945
    5. ' for' → logprob: -5.8094072341918945
    6. '   ' → logprob: -6.1844072341918945
    7. 'for' → logprob: -6.4344072341918945
    8. '    
' → logprob: -7.6844072341918945
    9. '           ' → logprob: -7.6844072341918945
    10. ',' → logprob: -8.184407234191895

Token 1681: ' Special' (ID: 12586)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2339838296175003
    2. '#' → logprob: -1.7339838743209839
    3. '
' → logprob: -4.483983993530273
    4. 'for' → logprob: -4.733983993530273
    5. ' #' → logprob: -5.358983993530273
    6. ' for' → logprob: -6.233983993530273
    7. '   ' → logprob: -6.358983993530273
    8. 'import' → logprob: -7.233983993530273
    9. 'from' → logprob: -7.858983993530273
    10. '        
' → logprob: -7.858983993530273

Token 1682: ' rectangular' (ID: 79707)
  Prédit: '_tokens'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_tokens' → logprob: -1.547898530960083
    2. '_chars' → logprob: -1.547898530960083
    3. 'def' → logprob: -2.547898530960083
    4. 's' → logprob: -2.547898530960083
    5. 'case' → logprob: -2.672898530960083
    6. ':' → logprob: -2.797898530960083
    7. '```' → logprob: -3.547898530960083
    8. '#' → logprob: -3.797898530960083
    9. '_segments' → logprob: -4.047898292541504
    10. '_cases' → logprob: -4.047898292541504

Token 1683: ' (' (ID: 350)
  Prédit: 'ity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ity' → logprob: -1.36103355884552
    2. '
' → logprob: -1.73603355884552
    3. 'ly' → logprob: -1.73603355884552
    4. 's' → logprob: -3.3610334396362305
    5. ' shapes' → logprob: -3.4860334396362305
    6. 'angle' → logprob: -3.8610334396362305
    7. ' angle' → logprob: -3.9860334396362305
    8. ')' → logprob: -4.1110334396362305
    9. 'if' → logprob: -4.3610334396362305
    10. 'angles' → logprob: -4.4235334396362305

Token 1684: 'right' (ID: 2460)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.875451922416687
    2. '
' → logprob: -1.500451922416687
    3. ' )' → logprob: -2.2504520416259766
    4. ' block' → logprob: -3.2504520416259766
    5. ' #' → logprob: -4.250452041625977
    6. ' sign' → logprob: -4.375452041625977
    7. '[' → logprob: -4.437952041625977
    8. ' ' → logprob: -4.437952041625977
    9. 'ity' → logprob: -4.562952041625977
    10. ' ...' → logprob: -4.625452041625977

Token 1685: ' angle' (ID: 16538)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.5390604734420776
    2. '_angle' → logprob: -1.5390604734420776
    3. 'angle' → logprob: -1.6640604734420776
    4. ')' → logprob: -2.539060592651367
    5. '```' → logprob: -3.039060592651367
    6. '_' → logprob: -3.164060592651367
    7. '   ' → logprob: -3.414060592651367
    8. '       ' → logprob: -3.539060592651367
    9. '_
' → logprob: -3.664060592651367
    10. ')
' → logprob: -3.789060592651367

Token 1686: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5612609386444092
    2. '):' → logprob: -1.6862609386444092
    3. '
' → logprob: -2.561260938644409
    4. ':' → logprob: -3.811260938644409
    5. ' angle' → logprob: -3.811260938644409
    6. 's' → logprob: -3.936260938644409
    7. '):
' → logprob: -4.061261177062988
    8. 'angle' → logprob: -4.186261177062988
    9. '   ' → logprob: -4.811261177062988
    10. '<|end|>' → logprob: -4.936261177062988

Token 1687: ' =>' (ID: 871)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1141735315322876
    2. ':' → logprob: -1.3641735315322876
    3. '   ' → logprob: -2.239173412322998
    4. '):' → logprob: -2.489173412322998
    5. '
' → logprob: -2.614173412322998
    6. '       ' → logprob: -3.989173412322998
    7. '):
' → logprob: -4.364173412322998
    8. ' angle' → logprob: -4.864173412322998
    9. '_angle' → logprob: -4.864173412322998
    10. ' =' → logprob: -5.114173412322998

Token 1688: ' no' (ID: 860)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.5622565746307373
    2. ' continue' → logprob: -1.8122565746307373
    3. '#' → logprob: -1.9372565746307373
    4. '```' → logprob: -2.4372565746307373
    5. '
' → logprob: -2.8122565746307373
    6. ' for' → logprob: -3.1872565746307373
    7. ' if' → logprob: -3.1872565746307373
    8. '   ' → logprob: -3.3122565746307373
    9. ' #' → logprob: -3.6872565746307373
    10. 'continue' → logprob: -3.9372565746307373

Token 1689: ' movement' (ID: 12772)
  Prédit: 'restriction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'restriction' → logprob: -0.03933102637529373
    2. 'direction' → logprob: -4.789330959320068
    3. '
' → logprob: -4.914330959320068
    4. ' restriction' → logprob: -5.414330959320068
    5. 'change' → logprob: -5.414330959320068
    6. '#' → logprob: -5.539330959320068
    7. 'restr' → logprob: -5.539330959320068
    8. 'movement' → logprob: -6.914330959320068
    9. 'continue' → logprob: -7.289330959320068
    10. 'turn' → logprob: -7.414330959320068

Token 1690: ' either' (ID: 4784)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.651059627532959
    2. '
' → logprob: -0.901059627532959
    3. '#' → logprob: -2.776059627532959
    4. '   ' → logprob: -5.901059627532959
    5. '        
' → logprob: -6.276059627532959
    6. 'def' → logprob: -6.401059627532959
    7. ' for' → logprob: -7.151059627532959
    8. 'for' → logprob: -7.651059627532959
    9. '```' → logprob: -7.776059627532959
    10. ' #' → logprob: -8.526060104370117

Token 1691: ' direction' (ID: 9262)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4450830817222595
    2. '
' → logprob: -1.3200831413269043
    3. '#' → logprob: -2.8200831413269043
    4. '   ' → logprob: -4.320083141326904
    5. 'for' → logprob: -4.820083141326904
    6. 'def' → logprob: -5.570083141326904
    7. 'graph' → logprob: -5.945083141326904
    8. ' for' → logprob: -6.320083141326904
    9. 'import' → logprob: -7.570083141326904
    10. 'from' → logprob: -7.570083141326904

Token 1692: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5635302662849426
    2. 'for' → logprob: -1.8135302066802979
    3. ' for' → logprob: -2.063530206680298
    4. '#' → logprob: -2.313530206680298
    5. '
' → logprob: -3.563530206680298
    6. '   ' → logprob: -5.438530445098877
    7. ' #' → logprob: -6.188530445098877
    8. 'def' → logprob: -6.313530445098877
    9. 'from' → logprob: -6.813530445098877
    10. 'import' → logprob: -7.188530445098877

Token 1693: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01413141842931509
    2. '
' → logprob: -5.014131546020508
    3. '#' → logprob: -6.514131546020508
    4. '        
' → logprob: -6.514131546020508
    5. ' for' → logprob: -6.639131546020508
    6. '   ' → logprob: -6.889131546020508
    7. 'for' → logprob: -7.764131546020508
    8. '<|end|>' → logprob: -8.014131546020508
    9. '           ' → logprob: -8.139131546020508
    10. 'def' → logprob: -8.389131546020508

Token 1694: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3218280076980591
    2. '#' (adapté à ' #') → logprob: -1.446828007698059
    3. 'for' → logprob: -3.3218278884887695
    4. '   ' → logprob: -6.4468278884887695
    5. 'def' → logprob: -7.5718278884887695
    6. 'sign' → logprob: -7.9468278884887695
    7. '
' → logprob: -8.19682788848877
    8. 'dire' → logprob: -8.19682788848877
    9. '        
' → logprob: -8.69682788848877
    10. 'edges' → logprob: -8.82182788848877

Token 1695: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.69287109375
    2. '#' → logprob: -0.81787109375
    3. '       ' → logprob: -3.81787109375
    4. 'dire' → logprob: -3.81787109375
    5. 'direct' → logprob: -5.94287109375
    6. 'edges' → logprob: -6.06787109375
    7. 'def' → logprob: -6.19287109375
    8. '   ' → logprob: -6.31787109375
    9. 'dir' → logprob: -7.19287109375
    10. 'graph' → logprob: -7.31787109375

Token 1696: ' each' (ID: 2454)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.0404243469238281
    2. 'i' → logprob: -1.2904243469238281
    3. ' p' → logprob: -1.2904243469238281
    4. ' i' → logprob: -2.415424346923828
    5. ' s' → logprob: -6.165424346923828
    6. 's' → logprob: -6.290424346923828
    7. 'sign' → logprob: -7.040424346923828
    8. 'point' → logprob: -7.165424346923828
    9. ' point' → logprob: -7.290424346923828
    10. ' sign' → logprob: -8.790424346923828

Token 1697: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.6610720157623291
    2. 'i' → logprob: -1.161072015762329
    3. ' sign' → logprob: -2.411072015762329
    4. ' i' → logprob: -3.286072015762329
    5. 's' → logprob: -3.786072015762329
    6. ' s' → logprob: -4.91107177734375
    7. 'p' → logprob: -5.41107177734375
    8. 'point' → logprob: -5.91107177734375
    9. ' p' → logprob: -6.41107177734375
    10. 'segment' → logprob: -7.28607177734375

Token 1698: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5888523459434509
    2. ' i' → logprob: -2.0888524055480957
    3. ' in' → logprob: -2.2138524055480957
    4. 'i' → logprob: -2.3388524055480957
    5. '_i' → logprob: -3.5888524055480957
    6. ',' → logprob: -4.463852405548096
    7. ':
' → logprob: -4.713852405548096
    8. '[i' → logprob: -4.713852405548096
    9. ' for' → logprob: -4.838852405548096
    10. ' :' → logprob: -4.963852405548096

Token 1699: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004023307003080845
    2. ' for' → logprob: -5.62902307510376
    3. 'for' → logprob: -8.129023551940918
    4. '           ' → logprob: -9.379023551940918
    5. '   ' → logprob: -10.504023551940918
    6. '        
' → logprob: -12.004023551940918
    7. ' i' → logprob: -12.504023551940918
    8. '
' → logprob: -13.254023551940918
    9. '```' → logprob: -13.754023551940918
    10. ',' → logprob: -14.379023551940918

Token 1700: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.47592607140541077
    2. ' for' → logprob: -0.9759260416030884
    3. '       ' → logprob: -6.475925922393799
    4. '   ' → logprob: -8.725926399230957
    5. '
' → logprob: -9.100926399230957
    6. '           ' → logprob: -10.975926399230957
    7. '        
' → logprob: -12.600926399230957
    8. '```' → logprob: -12.600926399230957
    9. ' 
' → logprob: -12.850926399230957
    10. ' i' → logprob: -13.600926399230957

Token 1701: ' Let' (ID: 9024)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47585850954055786
    2. 'for' → logprob: -0.9758585095405579
    3. ' p' → logprob: -7.100858688354492
    4. '       ' → logprob: -7.475858688354492
    5. '
' → logprob: -9.100858688354492
    6. 'p' → logprob: -9.225858688354492
    7. ' #' → logprob: -10.850858688354492
    8. 'touch' → logprob: -11.100858688354492
    9. 'sign' → logprob: -11.100858688354492
    10. 'For' → logprob: -11.225858688354492

Token 1702: ' sign' (ID: 2232)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6146583557128906
    2. 'i' → logprob: -1.2396583557128906
    3. ' p' → logprob: -2.3646583557128906
    4. 's' → logprob: -4.614658355712891
    5. ' (' → logprob: -4.614658355712891
    6. '   ' → logprob: -4.739658355712891
    7. 'p' → logprob: -4.739658355712891
    8. ' s' → logprob: -4.864658355712891
    9. ' sign' → logprob: -5.364658355712891
    10. ''s' → logprob: -5.614658355712891

Token 1703: ' endpoints' (ID: 76454)
  Prédit: '_p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_p' → logprob: -0.5943946242332458
    2. '_i' → logprob: -1.5943946838378906
    3. '_' → logprob: -3.2193946838378906
    4. '_idx' → logprob: -3.4693946838378906
    5. '_endpoint' → logprob: -3.7193946838378906
    6. ' =' → logprob: -3.8443946838378906
    7. 's' → logprob: -3.8443946838378906
    8. '_index' → logprob: -3.9693946838378906
    9. '_point' → logprob: -4.219394683837891
    10. 'p' → logprob: -4.469394683837891

Token 1704: ' be' (ID: 413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28640538454055786
    2. ' =' → logprob: -1.411405324935913
    3. 's' → logprob: -6.161405563354492
    4. '1' → logprob: -7.161405563354492
    5. '=p' → logprob: -7.536405563354492
    6. 'p' → logprob: -7.661405563354492
    7. '=
' → logprob: -7.786405563354492
    8. '=(' → logprob: -8.161405563354492
    9. ',' → logprob: -9.036405563354492
    10. '```' → logprob: -9.661405563354492

Token 1705: ' (' (ID: 350)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3794383108615875
    2. '(p' → logprob: -1.8794382810592651
    3. 's' → logprob: -2.3794384002685547
    4. 'se' → logprob: -2.8794384002685547
    5. 'sign' → logprob: -5.504438400268555
    6. '((' → logprob: -6.004438400268555
    7. '(se' → logprob: -6.504438400268555
    8. '(s' → logprob: -6.504438400268555
    9. '   ' → logprob: -6.629438400268555
    10. ' p' → logprob: -6.879438400268555

Token 1706: 'S' (ID: 50)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.010568322613835335
    2. 's' → logprob: -4.885568141937256
    3. 'se' → logprob: -6.760568141937256
    4. '(p' → logprob: -7.385568141937256
    5. '       ' → logprob: -8.385568618774414
    6. ' p' → logprob: -8.635568618774414
    7. ')' → logprob: -8.760568618774414
    8. ')p' → logprob: -9.135568618774414
    9. '   ' → logprob: -9.260568618774414
    10. '           ' → logprob: -9.635568618774414

Token 1707: ',E' (ID: 101576)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018295321613550186
    2. '[' → logprob: -4.1432952880859375
    3. ',' → logprob: -6.6432952880859375
    4. '_' → logprob: -8.393295288085938
    5. '0' → logprob: -8.768295288085938
    6. '_p' → logprob: -9.143295288085938
    7. ')' → logprob: -9.518295288085938
    8. 'p' → logprob: -9.643295288085938
    9. '_,' → logprob: -9.643295288085938
    10. '
' → logprob: -9.893295288085938

Token 1708: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5227488279342651
    2. ')
' → logprob: -1.6477488279342651
    3. '1' → logprob: -1.7727488279342651
    4. '),' → logprob: -3.6477489471435547
    5. 'S' → logprob: -5.272748947143555
    6. '):
' → logprob: -5.647748947143555
    7. 's' → logprob: -5.772748947143555
    8. '),
' → logprob: -6.397748947143555
    9. 'x' → logprob: -7.272748947143555
    10. ',' → logprob: -7.397748947143555

Token 1709: ' S' (ID: 336)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7200160622596741
    2. ' s' → logprob: -1.4700160026550293
    3. 's' → logprob: -2.0950160026550293
    4. '#' → logprob: -3.8450160026550293
    5. ' p' → logprob: -3.8450160026550293
    6. '        
' → logprob: -4.220016002655029
    7. ' S' → logprob: -4.220016002655029
    8. '
' → logprob: -4.345016002655029
    9. ' #' → logprob: -4.345016002655029
    10. '           ' → logprob: -4.345016002655029

Token 1710: ' connected' (ID: 12079)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8082709312438965
    2. ' =' → logprob: -1.3082709312438965
    3. ',' → logprob: -1.5582709312438965
    4. '1' → logprob: -3.3082709312438965
    5. ')' → logprob: -4.1832709312438965
    6. '=
' → logprob: -5.3082709312438965
    7. '
' → logprob: -5.8082709312438965
    8. '[' → logprob: -6.8082709312438965
    9. 's' → logprob: -6.8082709312438965
    10. ':' → logprob: -6.8082709312438965

Token 1711: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.3008805811405182
    2. ' to' → logprob: -1.4258805513381958
    3. '_to' → logprob: -4.050880432128906
    4. ')' → logprob: -6.800880432128906
    5. '_sign' → logprob: -7.800880432128906
    6. '=' → logprob: -9.175880432128906
    7. ',' → logprob: -9.175880432128906
    8. 'sign' → logprob: -9.675880432128906
    9. '(sign' → logprob: -10.175880432128906
    10. 't' → logprob: -10.300880432128906

Token 1712: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -1.1247625350952148
    2. 'se' → logprob: -1.4997625350952148
    3. ' street' → logprob: -1.4997625350952148
    4. 'sign' → logprob: -2.374762535095215
    5. 'graph' → logprob: -2.999762535095215
    6. 'the' → logprob: -3.874762535095215
    7. 'a' → logprob: -4.124762535095215
    8. ' graph' → logprob: -4.874762535095215
    9. ' a' → logprob: -4.999762535095215
    10. 'stre' → logprob: -5.124762535095215

Token 1713: ' node' (ID: 4596)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.2285242080688477
    2. '
' → logprob: -1.4785242080688477
    3. 's' → logprob: -2.4785242080688477
    4. '1' → logprob: -2.4785242080688477
    5. ',' → logprob: -2.8535242080688477
    6. '       ' → logprob: -3.1035242080688477
    7. '_' → logprob: -3.4785242080688477
    8. ')' → logprob: -3.7285242080688477
    9. '_s' → logprob: -3.8535242080688477
    10. ')
' → logprob: -3.9785242080688477

Token 1714: ' P' (ID: 398)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8530524373054504
    2. '       ' → logprob: -1.4780523777008057
    3. ' =' → logprob: -1.8530523777008057
    4. ':
' → logprob: -2.7280523777008057
    5. ')
' → logprob: -3.7280523777008057
    6. ',' → logprob: -3.8530523777008057
    7. '1' → logprob: -4.603052616119385
    8. 's' → logprob: -4.978052616119385
    9. '           ' → logprob: -5.103052616119385
    10. '=' → logprob: -5.228052616119385

Token 1715: ',' (ID: 11)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1660388708114624
    2. ' =' → logprob: -1.1660388708114624
    3. '       ' → logprob: -1.5410388708114624
    4. '1' → logprob: -3.291038990020752
    5. ',' → logprob: -3.666038990020752
    6. ')
' → logprob: -4.166038990020752
    7. 's' → logprob: -4.416038990020752
    8. '        
' → logprob: -4.416038990020752
    9. '=' → logprob: -4.666038990020752
    10. ':' → logprob: -4.666038990020752

Token 1716: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.8614549040794373
    2. ' E' → logprob: -0.9864549040794373
    3. '       ' → logprob: -1.736454963684082
    4. '#' → logprob: -4.736454963684082
    5. 's' → logprob: -5.236454963684082
    6. '
' → logprob: -5.736454963684082
    7. ' and' → logprob: -6.236454963684082
    8. '        
' → logprob: -6.736454963684082
    9. ' #' → logprob: -6.986454963684082
    10. ',' → logprob: -6.986454963684082

Token 1717: ' open' (ID: 2494)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1387624591588974
    2. ' =' → logprob: -2.5137624740600586
    3. ')' → logprob: -3.7637624740600586
    4. '=
' → logprob: -4.763762474060059
    5. ',' → logprob: -5.388762474060059
    6. '
' → logprob: -5.763762474060059
    7. ')
' → logprob: -6.513762474060059
    8. '1' → logprob: -6.638762474060059
    9. '.' → logprob: -7.263762474060059
    10. '),' → logprob: -7.513762474060059

Token 1718: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42987260222435
    2. '       ' → logprob: -1.8048726320266724
    3. ' =' → logprob: -2.679872512817383
    4. ')
' → logprob: -3.679872512817383
    5. '1' → logprob: -4.054872512817383
    6. ':
' → logprob: -4.179872512817383
    7. '=' → logprob: -4.304872512817383
    8. ',' → logprob: -4.304872512817383
    9. '=
' → logprob: -5.179872512817383
    10. '   ' → logprob: -5.679872512817383

Token 1719: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6252902746200562
    2. '       ' → logprob: -1.0002902746200562
    3. ':
' → logprob: -3.7502903938293457
    4. ',' → logprob: -4.375290393829346
    5. 's' → logprob: -4.375290393829346
    6. '   ' → logprob: -4.875290393829346
    7. ')
' → logprob: -5.000290393829346
    8. ',
' → logprob: -5.125290393829346
    9. ' =' → logprob: -5.375290393829346
    10. '1' → logprob: -5.750290393829346

Token 1720: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0019869250245392323
    2. '
' → logprob: -7.251986980438232
    3. ' for' → logprob: -8.376986503601074
    4. ',' → logprob: -8.626986503601074
    5. '#' (adapté à ' #') → logprob: -8.751986503601074
    6. 's' → logprob: -8.876986503601074
    7. 'for' → logprob: -8.876986503601074
    8. '        
' → logprob: -9.001986503601074
    9. '   ' → logprob: -9.501986503601074
    10. '           ' → logprob: -10.001986503601074

Token 1721: ' The' (ID: 623)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05116279050707817
    2. 'for' → logprob: -3.8011627197265625
    3. ' for' → logprob: -4.4261627197265625
    4. '#' → logprob: -5.1761627197265625
    5. '
' → logprob: -5.6761627197265625
    6. '   ' → logprob: -5.9261627197265625
    7. ' #' → logprob: -7.1761627197265625
    8. 'sign' → logprob: -7.4261627197265625
    9. 'p' → logprob: -7.8011627197265625
    10. 's' → logprob: -7.9261627197265625

Token 1722: ' point' (ID: 2438)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -1.2758504152297974
    2. '#' → logprob: -1.7758504152297974
    3. ' ' → logprob: -2.400850296020508
    4. ' connected' → logprob: -3.025850296020508
    5. 'p' → logprob: -3.400850296020508
    6. ' p' → logprob: -3.650850296020508
    7. '
' → logprob: -3.775850296020508
    8. ' #' → logprob: -3.775850296020508
    9. ' sign' → logprob: -4.025850296020508
    10. 'sign' → logprob: -4.025850296020508

Token 1723: ' where' (ID: 1919)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4815102219581604
    2. 's' → logprob: -2.4815101623535156
    3. ' connected' → logprob: -2.7315101623535156
    4. '_s' → logprob: -2.8565101623535156
    5. '1' → logprob: -3.1065101623535156
    6. '_connected' → logprob: -3.2315101623535156
    7. ' =' → logprob: -3.9815101623535156
    8. ' _' → logprob: -4.231510162353516
    9. ' at' → logprob: -4.481510162353516
    10. '=' → logprob: -4.481510162353516

Token 1724: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.12974156439304352
    2. 'the' → logprob: -2.129741668701172
    3. ' the' → logprob: -7.129741668701172
    4. ' sign' → logprob: -7.254741668701172
    5. 'S' → logprob: -7.629741668701172
    6. 's' → logprob: -8.004741668701172
    7. 'se' → logprob: -9.004741668701172
    8. 'a' → logprob: -9.254741668701172
    9. '
' → logprob: -9.504741668701172
    10. 'they' → logprob: -10.504741668701172

Token 1725: ' touches' (ID: 45060)
  Prédit: ' touches'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' touches' → logprob: -0.5521180033683777
    2. '[' → logprob: -2.4271180629730225
    3. 's' → logprob: -2.6771180629730225
    4. ' connects' → logprob: -2.8021180629730225
    5. 'touch' → logprob: -2.9271180629730225
    6. 'connect' → logprob: -3.0521180629730225
    7. '   ' → logprob: -3.1771180629730225
    8. '_connect' → logprob: -4.427117824554443
    9. '_touch' → logprob: -4.927117824554443
    10. '_t' → logprob: -4.927117824554443

Token 1726: ' street' (ID: 12901)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6609697937965393
    2. 'the' → logprob: -1.2859697341918945
    3. ' street' → logprob: -2.2859697341918945
    4. 'street' → logprob: -2.5359697341918945
    5. 's' → logprob: -4.2859697341918945
    6. ' a' → logprob: -6.0359697341918945
    7. 'sign' → logprob: -6.1609697341918945
    8. 'a' → logprob: -6.5359697341918945
    9. ' P' → logprob: -6.5359697341918945
    10. 'P' → logprob: -6.9109697341918945

Token 1727: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5119215250015259
    2. '=' → logprob: -1.6369215250015259
    3. ' is' → logprob: -2.2619214057922363
    4. ')' → logprob: -3.8869214057922363
    5. '_' → logprob: -3.8869214057922363
    6. '_s' → logprob: -4.136921405792236
    7. 's' → logprob: -4.386921405792236
    8. ':' → logprob: -5.011921405792236
    9. ',' → logprob: -5.386921405792236
    10. '_sign' → logprob: -5.886921405792236

Token 1728: ' S' (ID: 336)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.5941492319107056
    2. ' None' → logprob: -2.219149112701416
    3. 'p' → logprob: -2.469149112701416
    4. 'sign' → logprob: -2.469149112701416
    5. 'None' → logprob: -2.719149112701416
    6. ' p' → logprob: -3.469149112701416
    7. 'seg' → logprob: -3.969149112701416
    8. ' seg' → logprob: -4.344149112701416
    9. ' sign' → logprob: -4.719149112701416
    10. ' next' → logprob: -4.969149112701416

Token 1729: ' (' (ID: 350)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.42295554280281067
    2. ' =' → logprob: -2.2979555130004883
    3. ',' → logprob: -2.5479555130004883
    4. ')' → logprob: -3.7979555130004883
    5. ':
' → logprob: -3.9229555130004883
    6. '       ' → logprob: -4.047955513000488
    7. ':' → logprob: -4.172955513000488
    8. ')
' → logprob: -4.297955513000488
    9. '        
' → logprob: -4.297955513000488
    10. '   ' → logprob: -4.672955513000488

Token 1730: 'or' (ID: 267)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07552476972341537
    2. ')
' → logprob: -2.9505248069763184
    3. '),' → logprob: -5.200524806976318
    4. ':' → logprob: -5.950524806976318
    5. '
' → logprob: -6.075524806976318
    6. '):
' → logprob: -6.450524806976318
    7. ',' → logprob: -6.825524806976318
    8. ' )' → logprob: -6.825524806976318
    9. '1' → logprob: -6.950524806976318
    10. '[' → logprob: -7.200524806976318

Token 1731: ' E' (ID: 457)
  Prédit: 'E'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'E' → logprob: -0.1485571414232254
    2. 'p' → logprob: -2.023557186126709
    3. 'sign' → logprob: -6.648557186126709
    4. 'if' → logprob: -6.773557186126709
    5. 'the' → logprob: -7.023557186126709
    6. 'P' → logprob: -7.773557186126709
    7. ' E' → logprob: -8.02355670928955
    8. 'se' → logprob: -8.14855670928955
    9. ' p' → logprob: -8.52355670928955
    10. '
' → logprob: -8.64855670928955

Token 1732: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09618586301803589
    2. ')
' → logprob: -2.5961859226226807
    3. '):
' → logprob: -4.596185684204102
    4. '):' → logprob: -5.596185684204102
    5. '),' → logprob: -6.346185684204102
    6. '[' → logprob: -7.471185684204102
    7. ').' → logprob: -8.096185684204102
    8. ':' → logprob: -8.096185684204102
    9. '1' → logprob: -9.346185684204102
    10. ')

' → logprob: -9.721185684204102

Token 1733: ' find' (ID: 1646)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5678586959838867
    2. '       ' → logprob: -2.0678586959838867
    3. '#' → logprob: -2.6928586959838867
    4. ' 
' → logprob: -3.1928586959838867
    5. ':' → logprob: -3.3178586959838867
    6. ':
' → logprob: -3.3178586959838867
    7. ' and' → logprob: -4.067858695983887
    8. ')' → logprob: -4.067858695983887
    9. '):
' → logprob: -4.067858695983887
    10. ' if' → logprob: -4.567858695983887

Token 1734: ' which' (ID: 1118)
  Prédit: 'which'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'which' → logprob: -0.33067286014556885
    2. ' which' → logprob: -1.5806728601455688
    3. 'the' → logprob: -3.2056727409362793
    4. ' the' → logprob: -4.205672740936279
    5. 'sign' → logprob: -5.705672740936279
    6. ' street' → logprob: -5.705672740936279
    7. 'p' → logprob: -6.330672740936279
    8. 'street' → logprob: -6.455672740936279
    9. ' out' → logprob: -6.705672740936279
    10. 'out' → logprob: -6.705672740936279

Token 1735: ' is' (ID: 382)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.32695311307907104
    2. 'one' → logprob: -1.8269531726837158
    3. 'end' → logprob: -3.451953172683716
    4. '_endpoint' → logprob: -3.826953172683716
    5. ' one' → logprob: -4.076952934265137
    6. ' endpoint' → logprob: -4.701952934265137
    7. 'side' → logprob: -4.826952934265137
    8. 'point' → logprob: -4.826952934265137
    9. 'touch' → logprob: -5.201952934265137
    10. 'if' → logprob: -6.201952934265137

Token 1736: ' connected' (ID: 12079)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.9899771809577942
    2. 'S' → logprob: -1.7399771213531494
    3. '0' → logprob: -1.8649771213531494
    4. ' connected' → logprob: -2.6149771213531494
    5. 'connected' → logprob: -2.9899771213531494
    6. ' sign' → logprob: -3.1149771213531494
    7. ' S' → logprob: -3.7399771213531494
    8. 'p' → logprob: -3.8649771213531494
    9. ' next' → logprob: -4.1149773597717285
    10. '1' → logprob: -4.2399773597717285

Token 1737: ' to' (ID: 316)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0957980155944824
    2. '       ' → logprob: -1.4707980155944824
    3. ' =' → logprob: -2.5957980155944824
    4. '
' → logprob: -2.8457980155944824
    5. ':
' → logprob: -3.2207980155944824
    6. '=' → logprob: -3.4707980155944824
    7. ',' → logprob: -3.5957980155944824
    8. ')
' → logprob: -3.7207980155944824
    9. ' to' → logprob: -3.7207980155944824
    10. '_to' → logprob: -4.095798015594482

Token 1738: ' exactly' (ID: 9707)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.11639876663684845
    2. 'graph' → logprob: -2.866398811340332
    3. 'the' → logprob: -3.616398811340332
    4. 'se' → logprob: -4.366398811340332
    5. 'stre' → logprob: -5.241398811340332
    6. 'sign' → logprob: -6.116398811340332
    7. '1' → logprob: -6.366398811340332
    8. 'other' → logprob: -6.616398811340332
    9. 'a' → logprob: -7.241398811340332
    10. ' street' → logprob: -7.491398811340332

Token 1739: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.04895351082086563
    2. ' one' → logprob: -3.5489535331726074
    3. '1' → logprob: -4.048953533172607
    4. 'sign' → logprob: -7.548953533172607
    5. 'a' → logprob: -8.04895305633545
    6. ' ' → logprob: -8.29895305633545
    7. 'the' → logprob: -8.54895305633545
    8. ' exactly' → logprob: -9.17395305633545
    9. 'street' → logprob: -9.67395305633545
    10. 'exact' → logprob: -10.17395305633545

Token 1740: ' street' (ID: 12901)
  Prédit: ' street'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' street' → logprob: -0.4800010621547699
    2. 'street' → logprob: -1.4800010919570923
    3. 'sign' → logprob: -2.6050009727478027
    4. 'segment' → logprob: -3.8550009727478027
    5. ')' → logprob: -4.730000972747803
    6. ' connected' → logprob: -4.980000972747803
    7. 'connected' → logprob: -5.230000972747803
    8. 's' → logprob: -5.730000972747803
    9. 'se' → logprob: -5.730000972747803
    10. ' sign' → logprob: -5.730000972747803

Token 1741: ' segment' (ID: 14806)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5135771036148071
    2. ':
' → logprob: -2.3885769844055176
    3. ':' → logprob: -2.5135769844055176
    4. '       ' → logprob: -2.5135769844055176
    5. '   ' → logprob: -4.013576984405518
    6. ',' → logprob: -4.013576984405518
    7. ')' → logprob: -4.138576984405518
    8. ')
' → logprob: -4.638576984405518
    9. ' 
' → logprob: -4.888576984405518
    10. '        
' → logprob: -4.888576984405518

Token 1742: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.42776790261268616
    2. '
' → logprob: -2.3027679920196533
    3. ':
' → logprob: -3.0527679920196533
    4. ' if' → logprob: -3.0527679920196533
    5. 'if' → logprob: -3.1777679920196533
    6. ':' → logprob: -3.9277679920196533
    7. 'p' → logprob: -4.427767753601074
    8. '#' → logprob: -4.552767753601074
    9. 'for' → logprob: -4.552767753601074
    10. '   ' → logprob: -4.802767753601074

Token 1743: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17633725702762604
    2. '        
' → logprob: -3.051337242126465
    3. ' 
' → logprob: -3.176337242126465
    4. '
' → logprob: -3.551337242126465
    5. '   ' → logprob: -5.051337242126465
    6. '    
' → logprob: -5.426337242126465
    7. '	' → logprob: -5.551337242126465
    8. ':' → logprob: -5.551337242126465
    9. '        ' → logprob: -6.176337242126465
    10. '#' → logprob: -6.301337242126465

Token 1744: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017904557287693024
    2. 'for' → logprob: -4.642904758453369
    3. ' for' → logprob: -5.767904758453369
    4. '   ' → logprob: -5.892904758453369
    5. '
' → logprob: -6.517904758453369
    6. '#' (adapté à ' #') → logprob: -8.392904281616211
    7. '        
' → logprob: -8.642904281616211
    8. '           ' → logprob: -9.142904281616211
    9. 'sign' → logprob: -9.892904281616211
    10. 'if' → logprob: -10.142904281616211

Token 1745: ' For' (ID: 2214)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26951757073402405
    2. 'for' → logprob: -1.6445175409317017
    3. ' for' → logprob: -3.644517660140991
    4. '
' → logprob: -5.019517421722412
    5. '   ' → logprob: -5.269517421722412
    6. '#' → logprob: -5.644517421722412
    7. 'def' → logprob: -7.394517421722412
    8. '        
' → logprob: -7.769517421722412
    9. '           ' → logprob: -9.01951789855957
    10. 'sign' → logprob: -9.39451789855957

Token 1746: ' each' (ID: 2454)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.09985373914241791
    2. ' i' → logprob: -2.724853754043579
    3. 'p' → logprob: -3.974853754043579
    4. ' p' → logprob: -5.224853515625
    5. 's' → logprob: -5.974853515625
    6. 'sign' → logprob: -6.224853515625
    7. ' s' → logprob: -7.974853515625
    8. ' sign' → logprob: -9.224853515625
    9. 'point' → logprob: -9.849853515625
    10. 'S' → logprob: -9.974853515625

Token 1747: ' sign' (ID: 2232)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.10478513687849045
    2. 'sign' → logprob: -2.854785203933716
    3. ')' → logprob: -4.479784965515137
    4. 'p' → logprob: -4.604784965515137
    5. ' i' → logprob: -4.979784965515137
    6. ' sign' → logprob: -5.854784965515137
    7. 's' → logprob: -5.854784965515137
    8. 'for' → logprob: -6.979784965515137
    9. '
' → logprob: -7.229784965515137
    10. '#' → logprob: -7.354784965515137

Token 1748: ',' (ID: 11)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.185293197631836
    2. ':' → logprob: -1.560293197631836
    3. ' i' → logprob: -1.685293197631836
    4. '_i' → logprob: -2.560293197631836
    5. '_idx' → logprob: -2.810293197631836
    6. '_segments' → logprob: -2.935293197631836
    7. ' in' → logprob: -3.810293197631836
    8. '_index' → logprob: -3.810293197631836
    9. 'idx' → logprob: -4.685293197631836
    10. '_segment' → logprob: -4.935293197631836

Token 1749: ' determine' (ID: 11433)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6627293825149536
    2. 'for' → logprob: -1.0377293825149536
    3. ' p' → logprob: -3.287729263305664
    4. '       ' → logprob: -3.537729263305664
    5. 'p' → logprob: -3.787729263305664
    6. '   ' → logprob: -3.912729263305664
    7. '           ' → logprob: -5.787729263305664
    8. '#' → logprob: -5.912729263305664
    9. '        
' → logprob: -6.287729263305664
    10. 'sign' → logprob: -6.287729263305664

Token 1750: ' orientation' (ID: 29546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.729152500629425
    2. ' forbidden' → logprob: -1.8541524410247803
    3. 'the' → logprob: -2.9791524410247803
    4. ' the' → logprob: -2.9791524410247803
    5. 'which' → logprob: -2.9791524410247803
    6. 'touch' → logprob: -3.1041524410247803
    7. 'sign' → logprob: -3.4791524410247803
    8. ' which' → logprob: -3.7291524410247803
    9. 'endpoint' → logprob: -3.9791524410247803
    10. '   ' → logprob: -4.104152679443359

Token 1751: ':
' (ID: 734)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5851094722747803
    2. '       ' → logprob: -1.2101094722747803
    3. ' for' → logprob: -3.0851094722747803
    4. '   ' → logprob: -3.8351094722747803
    5. ':
' → logprob: -3.8351094722747803
    6. '
' → logprob: -4.085109710693359
    7. ' =' → logprob: -5.085109710693359
    8. 's' → logprob: -5.460109710693359
    9. '#' → logprob: -5.585109710693359
    10. 'def' → logprob: -5.710109710693359

Token 1752: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036396305076777935
    2. ' for' → logprob: -6.2536396980285645
    3. 'for' → logprob: -6.6286396980285645
    4. '   ' → logprob: -9.003639221191406
    5. '```' → logprob: -9.253639221191406
    6. '           ' → logprob: -9.503639221191406
    7. '
' → logprob: -9.878639221191406
    8. ',' → logprob: -11.628639221191406
    9. '        
' → logprob: -11.878639221191406
    10. 'sign' → logprob: -12.878639221191406

Token 1753: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20453312993049622
    2. 'for' → logprob: -1.9545331001281738
    3. ' for' → logprob: -3.204533100128174
    4. '   ' → logprob: -6.954533100128174
    5. 'sign' → logprob: -7.329533100128174
    6. '
' → logprob: -7.579533100128174
    7. 'i' → logprob: -8.954533576965332
    8. '```' → logprob: -9.329533576965332
    9. '           ' → logprob: -9.454533576965332
    10. ' i' → logprob: -9.704533576965332

Token 1754: ' Calculate' (ID: 38942)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4998822510242462
    2. ' for' → logprob: -1.2498822212219238
    3. '       ' → logprob: -2.249882221221924
    4. '   ' → logprob: -7.124882221221924
    5. 'sign' → logprob: -8.499882698059082
    6. '#' → logprob: -8.874882698059082
    7. 'i' → logprob: -10.499882698059082
    8. ' sign' → logprob: -10.499882698059082
    9. ' i' → logprob: -10.624882698059082
    10. 'p' → logprob: -10.624882698059082

Token 1755: ' the' (ID: 290)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -1.221056342124939
    2. 'sign' → logprob: -1.221056342124939
    3. 'for' → logprob: -1.846056342124939
    4. 'the' → logprob: -3.2210564613342285
    5. '(p' → logprob: -3.5960564613342285
    6. ' p' → logprob: -3.7210564613342285
    7. '#' → logprob: -4.0960564613342285
    8. 's' → logprob: -4.2210564613342285
    9. 'touch' → logprob: -4.2210564613342285
    10. 'import' → logprob: -4.3460564613342285

Token 1756: ' angles' (ID: 43448)
  Prédit: 'vector'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vector' → logprob: -1.2133233547210693
    2. 'vectors' → logprob: -1.4633233547210693
    3. 'direction' → logprob: -1.8383233547210693
    4. '#' → logprob: -1.9633233547210693
    5. 'sign' → logprob: -3.2133233547210693
    6. 'for' → logprob: -3.3383233547210693
    7. ' vectors' → logprob: -4.213323593139648
    8. 'vec' → logprob: -4.338323593139648
    9. 'dire' → logprob: -4.338323593139648
    10. 'point' → logprob: -4.838323593139648

Token 1757: ' between' (ID: 2870)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8669816255569458
    2. ' at' → logprob: -1.2419816255569458
    3. ':
' → logprob: -3.4919815063476562
    4. ' =' → logprob: -3.4919815063476562
    5. '   ' → logprob: -3.6169815063476562
    6. ',' → logprob: -3.7419815063476562
    7. '
' → logprob: -3.7419815063476562
    8. ',
' → logprob: -4.491981506347656
    9. '(
' → logprob: -4.616981506347656
    10. '=' → logprob: -4.616981506347656

Token 1758: ' sign' (ID: 2232)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.38049715757369995
    2. 'sign' → logprob: -1.2554972171783447
    3. 'street' → logprob: -5.005496978759766
    4. '(se' → logprob: -5.130496978759766
    5. ' sign' → logprob: -5.380496978759766
    6. 'graph' → logprob: -6.005496978759766
    7. 'the' → logprob: -6.255496978759766
    8. 'seg' → logprob: -6.380496978759766
    9. 'segments' → logprob: -6.380496978759766
    10. 's' → logprob: -6.505496978759766

Token 1759: ' (' (ID: 350)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5110273361206055
    2. ' and' → logprob: -1.8860273361206055
    3. '_segments' → logprob: -1.8860273361206055
    4. ' segment' → logprob: -2.2610273361206055
    5. '_segment' → logprob: -2.3860273361206055
    6. '   ' → logprob: -2.7610273361206055
    7. 'segment' → logprob: -3.1360273361206055
    8. 'segments' → logprob: -3.7610273361206055
    9. ''s' → logprob: -3.8860273361206055
    10. '[' → logprob: -4.2610273361206055

Token 1760: 'segment' (ID: 45362)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.6749333143234253
    2. 'sign' → logprob: -1.7999333143234253
    3. ',' → logprob: -2.299933433532715
    4. ' sign' → logprob: -2.924933433532715
    5. ')' → logprob: -3.299933433532715
    6. 's' → logprob: -3.799933433532715
    7. '[' → logprob: -4.174933433532715
    8. 'segments' → logprob: -4.174933433532715
    9. 'seg' → logprob: -4.549933433532715
    10. 'segment' → logprob: -5.049933433532715

Token 1761: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.34874671697616577
    2. ')' → logprob: -2.3487467765808105
    3. '[' → logprob: -2.4737467765808105
    4. 's' → logprob: -2.5987467765808105
    5. '   ' → logprob: -4.3487467765808105
    6. '_segments' → logprob: -5.3487467765808105
    7. ' ,' → logprob: -5.7237467765808105
    8. ' and' → logprob: -5.8487467765808105
    9. 'segments' → logprob: -5.9737467765808105
    10. ',
' → logprob: -6.2237467765808105

Token 1762: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8777186870574951
    2. 's' → logprob: -1.3777186870574951
    3. ' and' → logprob: -2.377718687057495
    4. '_' → logprob: -3.127718687057495
    5. '[' → logprob: -3.877718687057495
    6. '   ' → logprob: -3.877718687057495
    7. 'and' → logprob: -4.002718925476074
    8. ')' → logprob: -4.127718925476074
    9. ' at' → logprob: -4.127718925476074
    10. '(' → logprob: -4.377718925476074

Token 1763: ' adjacent' (ID: 39069)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.5074662566184998
    2. 'se' → logprob: -1.6324663162231445
    3. 'street' → logprob: -2.2574663162231445
    4. 'graph' → logprob: -2.7574663162231445
    5. ' the' → logprob: -4.0074663162231445
    6. ' street' → logprob: -5.6324663162231445
    7. 'stre' → logprob: -6.0074663162231445
    8. '[' → logprob: -6.3824663162231445
    9. 'connected' → logprob: -7.0074663162231445
    10. 'that' → logprob: -7.1324663162231445

Token 1764: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.857009768486023
    2. 'stre' → logprob: -1.232009768486023
    3. ' street' → logprob: -1.732009768486023
    4. 'segments' → logprob: -2.4820098876953125
    5. ' streets' → logprob: -5.1070098876953125
    6. 'se' → logprob: -5.6070098876953125
    7. 'edges' → logprob: -6.1070098876953125
    8. 'segment' → logprob: -6.1070098876953125
    9. ' segments' → logprob: -6.3570098876953125
    10. 'sign' → logprob: -6.4820098876953125

Token 1765: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5994593501091003
    2. 's' → logprob: -2.224459409713745
    3. '   ' → logprob: -2.724459409713745
    4. '_' → logprob: -2.974459409713745
    5. ':' → logprob: -3.349459409713745
    6. '_
' → logprob: -3.599459409713745
    7. '_segments' → logprob: -3.724459409713745
    8. ':
' → logprob: -4.099459171295166
    9. '
' → logprob: -4.349459171295166
    10. ',' → logprob: -4.474459171295166

Token 1766: 'segment' (ID: 45362)
  Prédit: 'segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'segment' → logprob: -1.4347949028015137
    2. ')' → logprob: -1.6847949028015137
    3. 'segments' → logprob: -1.6847949028015137
    4. 's' → logprob: -2.1847949028015137
    5. ' segment' → logprob: -2.6847949028015137
    6. ' segments' → logprob: -3.3097949028015137
    7. ' at' → logprob: -3.4347949028015137
    8. 'sign' → logprob: -3.9347949028015137
    9. ' p' → logprob: -3.9347949028015137
    10. 'p' → logprob: -4.184794902801514

Token 1767: ')' (ID: 8)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.37717899680137634
    2. ' at' → logprob: -1.3771790266036987
    3. ')' → logprob: -3.377178907394409
    4. 'segments' → logprob: -5.127179145812988
    5. '.' → logprob: -5.877179145812988
    6. 'at' → logprob: -5.877179145812988
    7. ' segments' → logprob: -5.877179145812988
    8. '(s' → logprob: -6.252179145812988
    9. ',' → logprob: -6.502179145812988
    10. '   ' → logprob: -6.752179145812988

Token 1768: ' at' (ID: 540)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.13463544845581055
    2. '
' → logprob: -2.5096354484558105
    3. ':' → logprob: -4.3846354484558105
    4. '   ' → logprob: -4.7596354484558105
    5. '        
' → logprob: -5.2596354484558105
    6. ':
' → logprob: -5.6346354484558105
    7. '           ' → logprob: -6.6346354484558105
    8. ',' → logprob: -6.8846354484558105
    9. '    
' → logprob: -6.8846354484558105
    10. ' 
' → logprob: -6.8846354484558105

Token 1769: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.47314393520355225
    2. 'se' → logprob: -1.5981439352035522
    3. 'S' → logprob: -2.473144054412842
    4. 'sign' → logprob: -3.348144054412842
    5. 'that' → logprob: -3.473144054412842
    6. 'point' → logprob: -5.098144054412842
    7. 'endpoint' → logprob: -5.598144054412842
    8. 'P' → logprob: -5.723144054412842
    9. 'p' → logprob: -5.848144054412842
    10. ' the' → logprob: -6.098144054412842

Token 1770: ' touching' (ID: 52058)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.42561906576156616
    2. 'point' → logprob: -1.300619125366211
    3. 'endpoint' → logprob: -3.425619125366211
    4. 'connected' → logprob: -4.050619125366211
    5. 'touch' → logprob: -5.425619125366211
    6. 'intersection' → logprob: -5.425619125366211
    7. 'street' → logprob: -5.675619125366211
    8. 'adj' → logprob: -5.800619125366211
    9. 'end' → logprob: -6.300619125366211
    10. 'shared' → logprob: -7.050619125366211

Token 1771: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.29668647050857544
    2. ' point' → logprob: -1.7966864109039307
    3. 'endpoint' → logprob: -3.7966864109039307
    4. 'sign' → logprob: -4.17168664932251
    5. 'segment' → logprob: -4.17168664932251
    6. ')' → logprob: -5.04668664932251
    7. ' endpoint' → logprob: -5.29668664932251
    8. '   ' → logprob: -5.29668664932251
    9. 'p' → logprob: -5.79668664932251
    10. '
' → logprob: -5.79668664932251

Token 1772: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06142457574605942
    2. '
' → logprob: -2.936424493789673
    3. '        
' → logprob: -6.061424732208252
    4. ' for' → logprob: -6.561424732208252
    5. 'for' → logprob: -6.936424732208252
    6. '#' → logprob: -7.436424732208252
    7. '   ' → logprob: -8.061424255371094
    8. ':' → logprob: -8.686424255371094
    9. '           ' → logprob: -8.811424255371094
    10. ' 
' → logprob: -9.686424255371094

Token 1773: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01806565374135971
    2. ' for' → logprob: -5.393065452575684
    3. ',' → logprob: -6.143065452575684
    4. '
' → logprob: -6.143065452575684
    5. 'for' → logprob: -6.268065452575684
    6. '#' → logprob: -6.518065452575684
    7. '        
' → logprob: -6.768065452575684
    8. '   ' → logprob: -7.018065452575684
    9. '           ' → logprob: -7.518065452575684
    10. '<|end|>' → logprob: -8.143065452575684

Token 1774: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005664017982780933
    2. '
' → logprob: -6.380663871765137
    3. ' for' → logprob: -6.505663871765137
    4. 'for' → logprob: -7.005663871765137
    5. '#' (adapté à ' #') → logprob: -7.755663871765137
    6. ',' → logprob: -7.880663871765137
    7. '        
' → logprob: -8.380663871765137
    8. '           ' → logprob: -9.005663871765137
    9. '<|end|>' → logprob: -9.255663871765137
    10. '   ' → logprob: -10.255663871765137

Token 1775: ' Then' (ID: 7801)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30424967408180237
    2. 'for' → logprob: -1.42924964427948
    3. '#' → logprob: -4.6792497634887695
    4. ' for' → logprob: -5.0542497634887695
    5. '
' → logprob: -5.0542497634887695
    6. '   ' → logprob: -8.17924976348877
    7. '        
' → logprob: -9.42924976348877
    8. '           ' → logprob: -9.55424976348877
    9. '```' → logprob: -9.55424976348877
    10. 'from' → logprob: -10.17924976348877

Token 1776: ' restrict' (ID: 33293)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.9370585680007935
    2. '
' → logprob: -1.5620585680007935
    3. '       ' → logprob: -1.8120585680007935
    4. ' for' → logprob: -2.812058448791504
    5. 'for' → logprob: -2.937058448791504
    6. ' continue' → logprob: -3.062058448791504
    7. ' #' → logprob: -3.687058448791504
    8. 'continue' → logprob: -3.687058448791504
    9. 'import' → logprob: -4.937058448791504
    10. '           ' → logprob: -5.062058448791504

Token 1777: ' direction' (ID: 9262)
  Prédit: ' movement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' movement' → logprob: -0.8236987590789795
    2. 'movement' → logprob: -0.8236987590789795
    3. ' the' → logprob: -3.8236987590789795
    4. 's' → logprob: -4.073698997497559
    5. '   ' → logprob: -4.448698997497559
    6. '       ' → logprob: -4.448698997497559
    7. 'the' → logprob: -4.823698997497559
    8. '#' → logprob: -4.948698997497559
    9. 'direction' → logprob: -5.323698997497559
    10. ')' → logprob: -5.323698997497559

Token 1778: ' accordingly' (ID: 44041)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7017704844474792
    2. '       ' → logprob: -0.9517704844474792
    3. 'for' → logprob: -2.701770544052124
    4. ' for' → logprob: -3.201770544052124
    5. '   ' → logprob: -5.326770305633545
    6. '#' → logprob: -6.076770305633545
    7. '        
' → logprob: -6.951770305633545
    8. 'def' → logprob: -7.951770305633545
    9. '    
' → logprob: -8.701770782470703
    10. 'graph' → logprob: -8.701770782470703

Token 1779: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.65179044008255
    2. '
' → logprob: -1.4017903804779053
    3. ' for' → logprob: -2.4017903804779053
    4. 'for' → logprob: -2.5267903804779053
    5. '   ' → logprob: -3.0267903804779053
    6. '        
' → logprob: -5.776790618896484
    7. 'def' → logprob: -5.776790618896484
    8. '    
' → logprob: -6.401790618896484
    9. '	for' → logprob: -6.776790618896484
    10. '#' → logprob: -7.026790618896484

Token 1780: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2286994606256485
    2. 'for' → logprob: -2.2286994457244873
    3. '
' → logprob: -3.2286994457244873
    4. ' for' → logprob: -3.3536994457244873
    5. '   ' → logprob: -4.478699684143066
    6. '#' → logprob: -5.103699684143066
    7. '        
' → logprob: -6.603699684143066
    8. 'import' → logprob: -7.103699684143066
    9. 'def' → logprob: -7.353699684143066
    10. 'from' → logprob: -7.728699684143066

Token 1781: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6808485388755798
    2. 'for' → logprob: -0.8058485388755798
    3. '#' (adapté à ' #') → logprob: -3.5558485984802246
    4. ' for' → logprob: -4.680848598480225
    5. '
' → logprob: -5.055848598480225
    6. '   ' → logprob: -6.555848598480225
    7. 'graph' → logprob: -7.430848598480225
    8. 'edges' → logprob: -8.305848121643066
    9. 'dire' → logprob: -8.805848121643066
    10. '        
' → logprob: -9.305848121643066

Token 1782: ' We' (ID: 1416)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05287458375096321
    2. '#' → logprob: -3.3028745651245117
    3. 'graph' → logprob: -5.552874565124512
    4. '       ' → logprob: -5.552874565124512
    5. ' for' → logprob: -6.427874565124512
    6. 'dire' → logprob: -6.427874565124512
    7. '   ' → logprob: -6.677874565124512
    8. 'edges' → logprob: -7.677874565124512
    9. 'visited' → logprob: -8.052874565124512
    10. 'def' → logprob: -8.302874565124512

Token 1783: ' build' (ID: 3024)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.858563244342804
    2. ' continue' → logprob: -0.983563244342804
    3. ' for' → logprob: -2.483563184738159
    4. ' =' → logprob: -2.858563184738159
    5. 'continue' → logprob: -3.733563184738159
    6. 'def' → logprob: -4.733563423156738
    7. '=' → logprob: -5.233563423156738
    8. '#' → logprob: -5.608563423156738
    9. '       ' → logprob: -5.733563423156738
    10. 're' → logprob: -6.483563423156738

Token 1784: ' an' (ID: 448)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8153485059738159
    2. 'sign' → logprob: -0.8153485059738159
    3. ' sign' → logprob: -4.0653486251831055
    4. 'for' → logprob: -4.3153486251831055
    5. 'point' → logprob: -4.6903486251831055
    6. ' adjacency' → logprob: -4.6903486251831055
    7. 'adj' → logprob: -4.8153486251831055
    8. ' signs' → logprob: -4.8153486251831055
    9. ' street' → logprob: -4.9403486251831055
    10. '_sign' → logprob: -5.1903486251831055

Token 1785: ' initial' (ID: 4871)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.9483091235160828
    2. ' adjacency' → logprob: -1.0733091831207275
    3. '#' → logprob: -2.1983091831207275
    4. 'edge' → logprob: -2.5733091831207275
    5. 'or' → logprob: -4.198308944702148
    6. 'orientation' → logprob: -4.698308944702148
    7. 'und' → logprob: -4.948308944702148
    8. 'angle' → logprob: -4.948308944702148
    9. 'endpoint' → logprob: -5.198308944702148
    10. 'd' → logprob: -5.323308944702148

Token 1786: ' directed' (ID: 23699)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.11482913047075272
    2. ' graph' → logprob: -3.1148290634155273
    3. ' directed' → logprob: -4.114829063415527
    4. '#' → logprob: -4.364829063415527
    5. 'direct' → logprob: -5.114829063415527
    6. 'for' → logprob: -5.614829063415527
    7. 'dig' → logprob: -5.739829063415527
    8. 'dire' → logprob: -6.114829063415527
    9. 'adj' → logprob: -6.239829063415527
    10. '
' → logprob: -6.364829063415527

Token 1787: ' graph' (ID: 7465)
  Prédit: ' graph'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.5188004374504089
    2. 'graph' → logprob: -1.5188004970550537
    3. '_' → logprob: -2.2688004970550537
    4. '_graph' → logprob: -2.6438004970550537
    5. ' ' → logprob: -5.268800258636475
    6. ' _' → logprob: -5.768800258636475
    7. '_edges' → logprob: -6.768800258636475
    8. '
' → logprob: -8.018800735473633
    9. '_edge' → logprob: -8.143800735473633
    10. '	graph' → logprob: -9.268800735473633

Token 1788: ' allowing' (ID: 16246)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.15228815376758575
    2. '_' → logprob: -2.4022881984710693
    3. '=' → logprob: -3.4022881984710693
    4. 'graph' → logprob: -4.90228796005249
    5. '
' → logprob: -5.65228796005249
    6. '_graph' → logprob: -6.27728796005249
    7. ' =
' → logprob: -6.77728796005249
    8. '_
' → logprob: -6.90228796005249
    9. '=
' → logprob: -7.90228796005249
    10. 'for' → logprob: -8.402288436889648

Token 1789: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.513203501701355
    2. ' all' → logprob: -1.263203501701355
    3. 'movement' → logprob: -3.7632036209106445
    4. ' movement' → logprob: -3.8882036209106445
    5. 'for' → logprob: -4.2632036209106445
    6. 'both' → logprob: -4.3882036209106445
    7. 'edges' → logprob: -4.3882036209106445
    8. '       ' → logprob: -5.2632036209106445
    9. ' streets' → logprob: -5.3882036209106445
    10. ' edges' → logprob: -5.5132036209106445

Token 1790: ' edges' (ID: 22569)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edges' → logprob: -1.0304940938949585
    2. '_edges' → logprob: -1.1554940938949585
    3. ' edges' → logprob: -1.7804940938949585
    4. 'for' → logprob: -3.655494213104248
    5. '_' → logprob: -4.030494213104248
    6. '       ' → logprob: -4.280494213104248
    7. 'stre' → logprob: -4.280494213104248
    8. ')' → logprob: -4.655494213104248
    9. '   ' → logprob: -4.655494213104248
    10. ' =' → logprob: -5.030494213104248

Token 1791: ' both' (ID: 2973)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.042039394378662
    2. '_' → logprob: -1.417039394378662
    3. ' =' → logprob: -1.667039394378662
    4. '=' → logprob: -2.667039394378662
    5. 'for' → logprob: -2.917039394378662
    6. '_
' → logprob: -3.292039394378662
    7. '       ' → logprob: -4.292039394378662
    8. ':' → logprob: -5.417039394378662
    9. '#' → logprob: -5.417039394378662
    10. 'graph' → logprob: -5.542039394378662

Token 1792: ' directions' (ID: 24921)
  Prédit: 'ways'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ways' → logprob: -0.13907775282859802
    2. 'dire' → logprob: -2.139077663421631
    3. '-' → logprob: -5.264077663421631
    4. '-dire' → logprob: -5.639077663421631
    5. ' ways' → logprob: -6.639077663421631
    6. ' directions' → logprob: -6.889077663421631
    7. 'direction' → logprob: -7.264077663421631
    8. 'way' → logprob: -8.514078140258789
    9. 'ends' → logprob: -11.014078140258789
    10. '-way' → logprob: -11.139078140258789

Token 1793: ' between' (ID: 2870)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6295537948608398
    2. 'for' → logprob: -0.8795537948608398
    3. '       ' → logprob: -3.25455379486084
    4. ' for' → logprob: -4.87955379486084
    5. '        
' → logprob: -6.00455379486084
    6. '#' → logprob: -7.12955379486084
    7. 'graph' → logprob: -7.25455379486084
    8. ' 
' → logprob: -7.75455379486084
    9. ')
' → logprob: -8.87955379486084
    10. '.
' → logprob: -9.00455379486084

Token 1794: ' street' (ID: 12901)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3427197337150574
    2. 'points' → logprob: -1.8427197933197021
    3. 'nodes' → logprob: -2.717719793319702
    4. 'each' → logprob: -4.217719554901123
    5. 'connected' → logprob: -4.717719554901123
    6. 'u' → logprob: -4.842719554901123
    7. 'vertices' → logprob: -5.092719554901123
    8. 'street' → logprob: -5.092719554901123
    9. 'the' → logprob: -5.217719554901123
    10. 'all' → logprob: -5.592719554901123

Token 1795: ' nodes' (ID: 15749)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.2539895176887512
    2. '_
' → logprob: -1.6289894580841064
    3. '_segments' → logprob: -4.6289896965026855
    4. 's' → logprob: -5.7539896965026855
    5. '_edges' → logprob: -5.7539896965026855
    6. '
' → logprob: -5.7539896965026855
    7. '=' → logprob: -6.3789896965026855
    8. '_s' → logprob: -6.6289896965026855
    9. 'for' → logprob: -7.0039896965026855
    10. ' =' → logprob: -7.0039896965026855

Token 1796: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.025930635631084442
    2. '
' → logprob: -4.025930404663086
    3. 'for' → logprob: -5.150930404663086
    4. ' for' → logprob: -6.650930404663086
    5. '        
' → logprob: -8.025930404663086
    6. ')' → logprob: -9.275930404663086
    7. '   ' → logprob: -9.400930404663086
    8. '
' → logprob: -10.150930404663086
    9. '#' → logprob: -10.900930404663086
    10. '<|end|>' → logprob: -11.275930404663086

Token 1797: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3950115144252777
    2. 'for' → logprob: -1.2700115442276
    3. '
' → logprob: -3.3950114250183105
    4. ' for' → logprob: -4.5200114250183105
    5. 'graph' → logprob: -8.020011901855469
    6. '        
' → logprob: -8.395011901855469
    7. '```' → logprob: -9.020011901855469
    8. '   ' → logprob: -9.270011901855469
    9. '{
' → logprob: -9.520011901855469
    10. '``' → logprob: -10.895011901855469

Token 1798: ' graph' (ID: 7465)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5043854713439941
    2. '       ' → logprob: -1.1293854713439941
    3. '
' → logprob: -3.379385471343994
    4. 'graph' (adapté à ' graph') → logprob: -3.754385471343994
    5. ' for' → logprob: -4.754385471343994
    6. '   ' → logprob: -6.129385471343994
    7. '        
' → logprob: -6.254385471343994
    8. '#' → logprob: -7.754385471343994
    9. '```' → logprob: -8.254384994506836
    10. '    
' → logprob: -8.254384994506836

Token 1799: '_direct' (ID: 80120)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.05212780088186264
    2. ' =' → logprob: -3.1771278381347656
    3. '=' → logprob: -4.802127838134766
    4. '_=' → logprob: -7.927127838134766
    5. '_direct' → logprob: -8.677127838134766
    6. '_d' → logprob: -8.927127838134766
    7. '[' → logprob: -10.302127838134766
    8. '_st' → logprob: -10.677127838134766
    9. '_out' → logprob: -10.927127838134766
    10. '```' → logprob: -11.302127838134766

Token 1800: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.0015368813183158636
    2. '=' → logprob: -6.751536846160889
    3. '_ed' → logprob: -8.626537322998047
    4. '_' → logprob: -9.876537322998047
    5. 'ion' → logprob: -10.251537322998047
    6. ' =' → logprob: -10.376537322998047
    7. 'graph' → logprob: -10.751537322998047
    8. '```' → logprob: -11.251537322998047
    9. '=
' → logprob: -11.626537322998047
    10. '_graph' → logprob: -12.001537322998047

Token 1801: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2520450949668884
    2. ' =' → logprob: -1.5020451545715332
    3. '={}' → logprob: -9.627044677734375
    4. '[' → logprob: -10.752044677734375
    5. '={' → logprob: -11.502044677734375
    6. '={}
' → logprob: -12.002044677734375
    7. '=[' → logprob: -12.877044677734375
    8. '_' → logprob: -13.627044677734375
    9. '=[]' → logprob: -13.752044677734375
    10. ' ={' → logprob: -14.002044677734375

Token 1802: 'default' (ID: 4211)
  Prédit: 'default'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -1.9361264946837764e-07
    2. ' defaultdict' → logprob: -16.5
    3. '(default' → logprob: -18.125
    4. '.default' → logprob: -19.5
    5. '"default' → logprob: -19.5
    6. '{' → logprob: -20.125
    7. '   ' → logprob: -20.625
    8. ''default' → logprob: -21.125
    9. '       ' → logprob: -22.375
    10. '```' → logprob: -22.75

Token 1803: 'dict' (ID: 20993)
  Prédit: 'dict'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dict' → logprob: -1.1472419600977446e-06
    2. 'default' → logprob: -13.875000953674316
    3. 'def' → logprob: -16.250001907348633
    4. 'dic' → logprob: -18.500001907348633
    5. 'dist' → logprob: -18.875001907348633
    6. '{' → logprob: -19.000001907348633
    7. 'd' → logprob: -19.125001907348633
    8. ' dict' → logprob: -19.250001907348633
    9. '{
' → logprob: -19.500001907348633
    10. '_dict' → logprob: -19.750001907348633

Token 1804: '(list' (ID: 13116)
  Prédit: '(list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(list' → logprob: -0.09229230880737305
    2. '(lambda' → logprob: -2.592292308807373
    3. '(' → logprob: -4.342292308807373
    4. 'list' → logprob: -9.342292785644531
    5. '(set' → logprob: -9.467292785644531
    6. '(
' → logprob: -9.467292785644531
    7. '(dict' → logprob: -10.842292785644531
    8. '=list' → logprob: -10.967292785644531
    9. '[list' → logprob: -11.217292785644531
    10. '[' → logprob: -12.342292785644531

Token 1805: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.35025325417518616
    2. ')' → logprob: -1.2252532243728638
    3. '       ' → logprob: -6.600253105163574
    4. '   ' → logprob: -8.975253105163574
    5. ')
' → logprob: -9.350253105163574
    6. 'for' → logprob: -9.350253105163574
    7. '[' → logprob: -10.475253105163574
    8. ')

' → logprob: -10.725253105163574
    9. ',
' → logprob: -11.225253105163574
    10. ')(
' → logprob: -11.225253105163574

Token 1806: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2551179528236389
    2. '       ' → logprob: -1.5051178932189941
    3. ' for' → logprob: -5.755117893218994
    4. '   ' → logprob: -11.505118370056152
    5. 'For' → logprob: -13.505118370056152
    6. '<|end|>' → logprob: -13.880118370056152
    7. '```' → logprob: -13.880118370056152
    8. '
' → logprob: -14.005118370056152
    9. '           ' → logprob: -14.130118370056152
    10. '	for' → logprob: -14.380118370056152

Token 1807: ' edge' (ID: 11165)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -2.1888679839321412e-05
    2. '       ' → logprob: -10.750021934509277
    3. ' for' → logprob: -16.12502098083496
    4. '
' → logprob: -16.12502098083496
    5. '   ' → logprob: -16.12502098083496
    6. '```' → logprob: -17.50002098083496
    7. '           ' → logprob: -18.25002098083496
    8. '	for' → logprob: -19.62502098083496
    9. '        
' → logprob: -20.00002098083496
    10. '``' → logprob: -21.00002098083496

Token 1808: '_len' (ID: 13683)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07282686978578568
    2. '_s' → logprob: -2.822826862335205
    3. '_' → logprob: -4.572826862335205
    4. '[' → logprob: -9.072827339172363
    5. '[
' → logprob: -10.197827339172363
    6. '
' → logprob: -10.197827339172363
    7. '_list' → logprob: -10.697827339172363
    8. '_to' → logprob: -11.072827339172363
    9. '```' → logprob: -11.072827339172363
    10. '_
' → logprob: -11.322827339172363

Token 1809: ' =' (ID: 314)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04901105910539627
    2. '=' → logprob: -3.674010992050171
    3. 'g' → logprob: -4.04901123046875
    4. ' =' → logprob: -5.42401123046875
    5. 'gs' → logprob: -8.54901123046875
    6. '=[]' → logprob: -9.42401123046875
    7. 'for' → logprob: -9.54901123046875
    8. 'th' → logprob: -10.29901123046875
    9. '[' → logprob: -10.79901123046875
    10. 'ght' → logprob: -10.79901123046875

Token 1810: ' dict' (ID: 11878)
  Prédit: '{}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{}' → logprob: -0.030020182952284813
    2. 'default' → logprob: -3.530020236968994
    3. 'dict' → logprob: -9.030019760131836
    4. '{}
' → logprob: -9.030019760131836
    5. '{' → logprob: -11.155019760131836
    6. '[' → logprob: -11.655019760131836
    7. ' defaultdict' → logprob: -12.905019760131836
    8. ' {}' → logprob: -13.155019760131836
    9. '{}

' → logprob: -13.405019760131836
    10. '{})' → logprob: -13.780019760131836

Token 1811: '()
' (ID: 1234)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.5775983929634094
    2. '[' → logprob: -1.9525983333587646
    3. '[(' → logprob: -1.9525983333587646
    4. '([(' → logprob: -3.5775983333587646
    5. '       ' → logprob: -3.7025983333587646
    6. '
' → logprob: -3.9525983333587646
    7. '()
' → logprob: -3.9525983333587646
    8. '[((' → logprob: -4.327598571777344
    9. ',
' → logprob: -4.577598571777344
    10. '()' → logprob: -5.077598571777344

Token 1812: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20351313054561615
    2. 'for' → logprob: -1.7035131454467773
    3. ' for' → logprob: -6.203513145446777
    4. '   ' → logprob: -9.828513145446777
    5. ')' → logprob: -11.953513145446777
    6. '	for' → logprob: -12.703513145446777
    7. '```' → logprob: -12.953513145446777
    8. '           ' → logprob: -13.203513145446777
    9. '        
' → logprob: -13.703513145446777
    10. '<|end|>' → logprob: -13.828513145446777

Token 1813: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.727905979962088e-05
    2. '       ' → logprob: -10.00004768371582
    3. ' for' → logprob: -13.75004768371582
    4. '   ' → logprob: -15.25004768371582
    5. '#' → logprob: -15.50004768371582
    6. '```' → logprob: -16.12504768371582
    7. '
' → logprob: -16.62504768371582
    8. 'i' → logprob: -17.37504768371582
    9. '        
' → logprob: -17.37504768371582
    10. '           ' → logprob: -17.37504768371582

Token 1814: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00018565983918961138
    2. ' i' → logprob: -8.8751859664917
    3. 'e' → logprob: -11.0001859664917
    4. 's' → logprob: -11.6251859664917
    5. 'u' → logprob: -12.0001859664917
    6. 'idx' → logprob: -12.2501859664917
    7. '   ' → logprob: -12.7501859664917
    8. 'seg' → logprob: -12.8751859664917
    9. '(i' → logprob: -13.8751859664917
    10. 'edge' → logprob: -14.2501859664917

Token 1815: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.52321857213974
    2. 'in' → logprob: -0.89821857213974
    3. 'n' → logprob: -10.523218154907227
    4. 'i' → logprob: -10.773218154907227
    5. 's' → logprob: -11.398218154907227
    6. ' ' → logprob: -12.273218154907227
    7. '	in' → logprob: -12.523218154907227
    8. '_in' → logprob: -12.648218154907227
    9. 'In' → logprob: -12.773218154907227
    10. '
' → logprob: -12.898218154907227

Token 1816: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -7.107425062713446e-06
    2. 'stre' → logprob: -12.375006675720215
    3. ' street' → logprob: -13.375006675720215
    4. 'st' → logprob: -13.750006675720215
    5. '   ' → logprob: -16.37500762939453
    6. '
' → logprob: -17.50000762939453
    7. 'list' → logprob: -17.75000762939453
    8. 'range' → logprob: -18.00000762939453
    9. 'se' → logprob: -18.87500762939453
    10. ' ' → logprob: -19.00000762939453

Token 1817: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.018308322876691818
    2. '_' → logprob: -4.018308162689209
    3. '_
' → logprob: -8.893308639526367
    4. ' _' → logprob: -12.268308639526367
    5. 's' → logprob: -12.268308639526367
    6. '
' → logprob: -12.768308639526367
    7. '_]' → logprob: -13.268308639526367
    8. 'segments' → logprob: -13.643308639526367
    9. '_
' → logprob: -13.893308639526367
    10. 'Segments' → logprob: -14.018308639526367

Token 1818: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.559424638748169
    2. ':
' → logprob: -0.934424638748169
    3. '   ' → logprob: -3.684424638748169
    4. ' :
' → logprob: -5.93442440032959
    5. ' :' → logprob: -6.05942440032959
    6. ',' → logprob: -6.05942440032959
    7. ' in' → logprob: -6.68442440032959
    8. 'in' → logprob: -7.18442440032959
    9. '       ' → logprob: -8.05942440032959
    10. '=' → logprob: -8.30942440032959

Token 1819: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018430864438414574
    2. ' p' → logprob: -6.751842975616455
    3. '       ' → logprob: -7.626842975616455
    4. 'p' → logprob: -9.751843452453613
    5. '	p' → logprob: -10.376843452453613
    6. ',' → logprob: -10.501843452453613
    7. ',p' → logprob: -10.751843452453613
    8. '    ' → logprob: -11.251843452453613
    9. '(p' → logprob: -11.876843452453613
    10. '   ' → logprob: -12.376843452453613

Token 1820: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' (adapté à ' p') → logprob: -0.12741738557815552
    2. ' p' → logprob: -2.1274173259735107
    3. '   ' → logprob: -8.00241756439209
    4. '(p' → logprob: -8.87741756439209
    5. ' (' → logprob: -12.12741756439209
    6. '       ' → logprob: -12.37741756439209
    7. '           ' → logprob: -12.50241756439209
    8. 'u' → logprob: -14.12741756439209
    9. 's' → logprob: -15.75241756439209
    10. '    
' → logprob: -15.87741756439209

Token 1821: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009489760850556195
    2. '[' → logprob: -7.750948905944824
    3. '=' → logprob: -8.625948905944824
    4. ' =' → logprob: -8.875948905944824
    5. '
' → logprob: -9.750948905944824
    6. 's' → logprob: -10.125948905944824
    7. '_' → logprob: -10.375948905944824
    8. 'oint' → logprob: -10.875948905944824
    9. '```' → logprob: -12.000948905944824
    10. '#' → logprob: -12.125948905944824

Token 1822: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29731854796409607
    2. ',p' → logprob: -1.4223185777664185
    3. ',
' → logprob: -4.922318458557129
    4. ' ,' → logprob: -5.172318458557129
    5. '=' → logprob: -7.047318458557129
    6. 'p' → logprob: -7.422318458557129
    7. '[' → logprob: -8.172318458557129
    8. '
' → logprob: -8.672318458557129
    9. '','' → logprob: -8.922318458557129
    10. ' =' → logprob: -9.047318458557129

Token 1823: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06466971337795258
    2. '1' → logprob: -2.814669609069824
    3. '[' → logprob: -5.939669609069824
    4. '
' → logprob: -10.939669609069824
    5. 'r' → logprob: -10.939669609069824
    6. '```' → logprob: -11.439669609069824
    7. '0' → logprob: -11.814669609069824
    8. '   ' → logprob: -13.439669609069824
    9. '[
' → logprob: -13.939669609069824
    10. ' ' → logprob: -13.939669609069824

Token 1824: '=' (ID: 28)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.729652464389801
    2. '=' → logprob: -1.3546524047851562
    3. ').' → logprob: -2.2296524047851562
    4. '
' → logprob: -2.8546524047851562
    5. ' =' → logprob: -3.4796524047851562
    6. ')=' → logprob: -3.9796524047851562
    7. ')
' → logprob: -4.979652404785156
    8. ']=' → logprob: -4.979652404785156
    9. ']' → logprob: -5.104652404785156
    10. ',' → logprob: -5.104652404785156

Token 1825: 'se' (ID: 344)
  Prédit: 'se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -4.143808109802194e-05
    2. 's' → logprob: -10.750041007995605
    3. '   ' → logprob: -12.000041007995605
    4. '(se' → logprob: -12.125041007995605
    5. '	se' → logprob: -13.625041007995605
    6. 'i' → logprob: -13.750041007995605
    7. '_se' → logprob: -14.125041007995605
    8. 'p' → logprob: -14.250041007995605
    9. '       ' → logprob: -14.500041007995605
    10. 'de' → logprob: -15.125041007995605

Token 1826: 'gs' (ID: 9233)
  Prédit: 'gs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gs' → logprob: -0.08508748561143875
    2. 'egs' → logprob: -3.085087537765503
    3. 'g' → logprob: -3.960087537765503
    4. '[' → logprob: -4.585087299346924
    5. 's' → logprob: -6.335087299346924
    6. '1' → logprob: -6.585087299346924
    7. '(' → logprob: -6.710087299346924
    8. '```' → logprob: -7.960087299346924
    9. 'gments' → logprob: -8.460087776184082
    10. '][' → logprob: -8.710087776184082

Token 1827: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0006544163916260004
    2. '[' → logprob: -8.125654220581055
    3. 'i' → logprob: -9.000654220581055
    4. '[p' → logprob: -9.000654220581055
    5. '[
' → logprob: -10.250654220581055
    6. '
' → logprob: -10.375654220581055
    7. '   ' → logprob: -11.375654220581055
    8. '           ' → logprob: -11.625654220581055
    9. 'p' → logprob: -12.375654220581055
    10. '       ' → logprob: -12.750654220581055

Token 1828: ']
' (ID: 1592)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -1.3185937404632568
    2. ')
' → logprob: -1.8185937404632568
    3. ']
' → logprob: -1.9435937404632568
    4. '][' → logprob: -2.068593740463257
    5. ').' → logprob: -2.318593740463257
    6. ']' → logprob: -3.318593740463257
    7. ':
' → logprob: -3.443593740463257
    8. '
' → logprob: -3.693593740463257
    9. '):
' → logprob: -3.818593740463257
    10. '           ' → logprob: -3.818593740463257

Token 1829: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03997837007045746
    2. '           ' → logprob: -3.289978265762329
    3. '       ' → logprob: -7.289978504180908
    4. '
' → logprob: -7.414978504180908
    5. ' graph' → logprob: -7.914978504180908
    6. '    
' → logprob: -9.16497802734375
    7. 'graph' → logprob: -9.91497802734375
    8. '	graph' → logprob: -10.16497802734375
    9. '```' → logprob: -10.66497802734375
    10. ',' → logprob: -11.03997802734375

Token 1830: ' d' (ID: 272)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.07185137271881104
    2. ' graph' → logprob: -2.8218512535095215
    3. 'edge' → logprob: -5.3218512535095215
    4. '   ' → logprob: -6.1968512535095215
    5. '           ' → logprob: -6.3218512535095215
    6. ' edge' → logprob: -7.8218512535095215
    7. 'length' → logprob: -7.9468512535095215
    8. ' length' → logprob: -9.32185173034668
    9. 'distance' → logprob: -9.57185173034668
    10. '	graph' → logprob: -9.57185173034668

Token 1831: '=' (ID: 28)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1746039390563965
    2. ' =' → logprob: -1.2996039390563965
    3. '=' → logprob: -1.9246039390563965
    4. 'istance' → logprob: -2.2996039390563965
    5. 'graph' → logprob: -2.6746039390563965
    6. 'ist' → logprob: -3.5496039390563965
    7. '[' → logprob: -3.9246039390563965
    8. '   ' → logprob: -4.1746039390563965
    9. 'ef' → logprob: -4.5496039390563965
    10. '
' → logprob: -4.6746039390563965

Token 1832: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.00043138445471413434
    2. ' length' → logprob: -7.750431537628174
    3. 'math' → logprob: -14.625431060791016
    4. '   ' → logprob: -15.875431060791016
    5. 'distance' → logprob: -16.875431060791016
    6. '(length' → logprob: -17.375431060791016
    7. ' ' → logprob: -18.375431060791016
    8. '	length' → logprob: -18.625431060791016
    9. ' math' → logprob: -18.750431060791016
    10. 'int' → logprob: -19.750431060791016

Token 1833: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -3.786196975852363e-05
    2. 'p' → logprob: -10.875038146972656
    3. ' (' → logprob: -11.750038146972656
    4. '((' → logprob: -12.000038146972656
    5. 's' → logprob: -13.875038146972656
    6. '(' → logprob: -14.125038146972656
    7. '(
' → logprob: -14.250038146972656
    8. '=' → logprob: -14.375038146972656
    9. '=(' → logprob: -14.375038146972656
    10. '```' → logprob: -14.750038146972656

Token 1834: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04534018039703369
    2. '(p' → logprob: -3.170340061187744
    3. '[p' → logprob: -6.420340061187744
    4. 's' → logprob: -7.795340061187744
    5. 'p' → logprob: -9.170340538024902
    6. '[' → logprob: -9.420340538024902
    7. '(' → logprob: -10.295340538024902
    8. 'oints' → logprob: -11.045340538024902
    9. ' p' → logprob: -11.295340538024902
    10. ')' → logprob: -11.670340538024902

Token 1835: ',p' (ID: 14835)
  Prédit: ',p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.056354373693466187
    2. ',' → logprob: -3.181354284286499
    3. '(p' → logprob: -4.431354522705078
    4. '(' → logprob: -7.556354522705078
    5. 'p' → logprob: -8.556354522705078
    6. ',(' → logprob: -8.681354522705078
    7. ',
' → logprob: -9.181354522705078
    8. ' ,' → logprob: -9.431354522705078
    9. ')' → logprob: -9.556354522705078
    10. '[' → logprob: -9.681354522705078

Token 1836: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.2617008400848135e-05
    2. '1' → logprob: -10.625032424926758
    3. '[' → logprob: -12.250032424926758
    4. 'oints' → logprob: -13.375032424926758
    5. '0' → logprob: -13.750032424926758
    6. '```' → logprob: -15.000032424926758
    7. 'oint' → logprob: -15.250032424926758
    8. 'p' → logprob: -16.125032424926758
    9. '
' → logprob: -16.625032424926758
    10. ',' → logprob: -16.625032424926758

Token 1837: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.38697564601898193
    2. ')' → logprob: -1.136975646018982
    3. ')
' → logprob: -9.261975288391113
    4. ')+' → logprob: -13.136975288391113
    5. ')*' → logprob: -13.386975288391113
    6. ' )
' → logprob: -13.636975288391113
    7. ')

' → logprob: -14.011975288391113
    8. ')#' → logprob: -14.136975288391113
    9. ')
/' → logprob: -14.261975288391113
    10. '           ' → logprob: -14.386975288391113

Token 1838: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22906072437763214
    2. '
' → logprob: -1.6040607690811157
    3. '   ' → logprob: -5.854060649871826
    4. '       ' → logprob: -7.604060649871826
    5. '    
' → logprob: -9.479061126708984
    6. '
' → logprob: -9.729061126708984
    7. '            
' → logprob: -10.104061126708984
    8. '        
' → logprob: -11.229061126708984
    9. '               ' → logprob: -11.604061126708984
    10. '```' → logprob: -11.729061126708984

Token 1839: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.015527346171438694
    2. ' graph' → logprob: -4.265527248382568
    3. '   ' → logprob: -7.265527248382568
    4. '           ' → logprob: -7.890527248382568
    5. 'edge' → logprob: -8.265527725219727
    6. '	graph' → logprob: -11.015527725219727
    7. ' edge' → logprob: -11.890527725219727
    8. 'for' → logprob: -12.515527725219727
    9. '       ' → logprob: -13.265527725219727
    10. ' for' → logprob: -13.640527725219727

Token 1840: '_direct' (ID: 80120)
  Prédit: '_direct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direct' → logprob: -0.019043225795030594
    2. '_' → logprob: -4.019043445587158
    3. '[p' → logprob: -7.519043445587158
    4. '[' → logprob: -8.51904296875
    5. '_[' → logprob: -9.76904296875
    6. 'direct' → logprob: -10.14404296875
    7. '[_' → logprob: -10.76904296875
    8. '[i' → logprob: -11.64404296875
    9. '```' → logprob: -12.51904296875
    10. '   ' → logprob: -13.14404296875

Token 1841: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.1600884199142456
    2. 'irected' → logprob: -2.910088539123535
    3. '_direct' → logprob: -3.160088539123535
    4. '_' → logprob: -3.785088539123535
    5. 'e' → logprob: -4.160088539123535
    6. 'direct' → logprob: -4.910088539123535
    7. '[' → logprob: -6.660088539123535
    8. '_ed' → logprob: -6.660088539123535
    9. '[i' → logprob: -6.910088539123535
    10. 'd' → logprob: -8.410088539123535

Token 1842: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -2.2200749754119897e-06
    2. '[' → logprob: -13.125001907348633
    3. '[d' → logprob: -16.250001907348633
    4. '   ' → logprob: -17.500001907348633
    5. 'p' → logprob: -17.625001907348633
    6. ' [' → logprob: -17.750001907348633
    7. '
' → logprob: -18.250001907348633
    8. '[i' → logprob: -18.625001907348633
    9. '[u' → logprob: -20.625001907348633
    10. '[df' → logprob: -20.875001907348633

Token 1843: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. '```' → logprob: -15.250000953674316
    3. 'p' → logprob: -15.375000953674316
    4. '[' → logprob: -15.375000953674316
    5. '[p' → logprob: -15.875000953674316
    6. '
' → logprob: -16.250001907348633
    7. 'd' → logprob: -16.500001907348633
    8. ']' → logprob: -17.250001907348633
    9. '=' → logprob: -17.375001907348633
    10. ' ' → logprob: -17.625001907348633

Token 1844: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.2939736545085907
    2. '.' → logprob: -2.043973684310913
    3. '.append' → logprob: -2.168973684310913
    4. '           ' → logprob: -5.418973445892334
    5. '[' → logprob: -6.293973445892334
    6. ' .' → logprob: -6.793973445892334
    7. ').' → logprob: -7.293973445892334
    8. '][' → logprob: -7.543973445892334
    9. '   ' → logprob: -7.793973445892334
    10. '       ' → logprob: -7.793973445892334

Token 1845: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -7.584239938296378e-06
    2. '.append' → logprob: -12.250007629394531
    3. ' append' → logprob: -13.625007629394531
    4. '_append' → logprob: -14.000007629394531
    5. 'app' → logprob: -14.125007629394531
    6. 'add' → logprob: -17.87500762939453
    7. '	append' → logprob: -18.25000762939453
    8. 'Append' → logprob: -18.62500762939453
    9. 'appen' → logprob: -18.62500762939453
    10. '   ' → logprob: -20.00000762939453

Token 1846: '((' (ID: 2054)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.018473340198397636
    2. '(' → logprob: -4.018473148345947
    3. '((' → logprob: -8.768473625183105
    4. ' (' → logprob: -8.768473625183105
    5. '(
' → logprob: -11.393473625183105
    6. '   ' → logprob: -14.393473625183105
    7. ',' → logprob: -16.51847267150879
    8. ' ' → logprob: -16.64347267150879
    9. 'p' → logprob: -16.76847267150879
    10. '('' → logprob: -16.89347267150879

Token 1847: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -4.5491004129871726e-05
    2. ' p' → logprob: -10.000045776367188
    3. '
' → logprob: -17.375045776367188
    4. '   ' → logprob: -17.500045776367188
    5. ',p' → logprob: -17.750045776367188
    6. ')p' → logprob: -18.375045776367188
    7. ',' → logprob: -19.000045776367188
    8. ')' → logprob: -19.625045776367188
    9. '	p' → logprob: -20.375045776367188
    10. '(p' → logprob: -20.625045776367188

Token 1848: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3856492842023727e-06
    2. '1' → logprob: -14.375000953674316
    3. '_' → logprob: -14.875000953674316
    4. '[' → logprob: -15.125000953674316
    5. '₂' → logprob: -17.375001907348633
    6. '```' → logprob: -17.750001907348633
    7. '   ' → logprob: -18.000001907348633
    8. ' ' → logprob: -18.125001907348633
    9. ',' → logprob: -18.750001907348633
    10. 'ython' → logprob: -19.125001907348633

Token 1849: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010212734341621399
    2. ',d' → logprob: -4.6352128982543945
    3. ',
' → logprob: -7.8852128982543945
    4. ',)' → logprob: -10.260212898254395
    5. ')' → logprob: -11.260212898254395
    6. ' ,' → logprob: -12.135212898254395
    7. ',length' → logprob: -12.385212898254395
    8. ',p' → logprob: -12.760212898254395
    9. ',",' → logprob: -13.010212898254395
    10. '   ' → logprob: -13.510212898254395

Token 1850: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.06231653690338135
    2. '))
' → logprob: -2.812316417694092
    3. ')' → logprob: -8.18731689453125
    4. ',' → logprob: -10.18731689453125
    5. '));' → logprob: -11.56231689453125
    6. ')
' → logprob: -11.68731689453125
    7. ',))
' → logprob: -12.31231689453125
    8. '           ' → logprob: -12.93731689453125
    9. '),' → logprob: -13.18731689453125
    10. ' ))' → logprob: -13.93731689453125

Token 1851: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.8206473871250637e-05
    2. '   ' → logprob: -11.500028610229492
    3. '       ' → logprob: -12.000028610229492
    4. '
' → logprob: -12.625028610229492
    5. '		' → logprob: -13.375028610229492
    6. 'graph' → logprob: -13.500028610229492
    7. ',' → logprob: -13.625028610229492
    8. '	       ' → logprob: -13.875028610229492
    9. '	graph' → logprob: -14.000028610229492
    10. '<|end|>' → logprob: -14.125028610229492

Token 1852: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.023928120732307434
    2. ' graph' → logprob: -3.773928165435791
    3. '           ' → logprob: -7.773928165435791
    4. '	graph' → logprob: -8.523927688598633
    5. '   ' → logprob: -10.148927688598633
    6. '       ' → logprob: -10.773927688598633
    7. '(graph' → logprob: -14.023927688598633
    8. '_graph' → logprob: -14.898927688598633
    9. '               ' → logprob: -15.398927688598633
    10. '
' → logprob: -15.523927688598633

Token 1853: '_direct' (ID: 80120)
  Prédit: '_direct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direct' → logprob: -0.000829759519547224
    2. 'direct' → logprob: -7.125829696655273
    3. '[' → logprob: -11.500829696655273
    4. '[p' → logprob: -11.500829696655273
    5. '_' → logprob: -13.375829696655273
    6. 'Directed' → logprob: -14.250829696655273
    7. '
' → logprob: -14.375829696655273
    8. 'Direct' → logprob: -14.500829696655273
    9. '_DIRECT' → logprob: -14.750829696655273
    10. '```' → logprob: -15.375829696655273

Token 1854: 'ed' (ID: 295)
  Prédit: '_direct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direct' → logprob: -0.7195346355438232
    2. 'direct' → logprob: -0.9695346355438232
    3. 'irected' → logprob: -2.0945346355438232
    4. '[i' → logprob: -5.719534873962402
    5. '[p' → logprob: -5.844534873962402
    6. 'ed' → logprob: -6.344534873962402
    7. '-directed' → logprob: -6.469534873962402
    8. '```' → logprob: -7.719534873962402
    9. 'Directed' → logprob: -8.469534873962402
    10. 's' → logprob: -8.969534873962402

Token 1855: '[p' (ID: 23234)
  Prédit: '[p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[p' → logprob: -5.7292167184641585e-05
    2. '[' → logprob: -10.000057220458984
    3. 'p' → logprob: -12.250057220458984
    4. '
' → logprob: -12.375057220458984
    5. '[
' → logprob: -13.875057220458984
    6. '   ' → logprob: -13.875057220458984
    7. '[i' → logprob: -15.375057220458984
    8. ' [' → logprob: -16.125057220458984
    9. '	p' → logprob: -16.375057220458984
    10. '           ' → logprob: -16.875057220458984

Token 1856: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07143814116716385
    2. '2' → logprob: -2.6964380741119385
    3. '0' → logprob: -6.696438312530518
    4. '[' → logprob: -8.57143783569336
    5. ']' → logprob: -11.32143783569336
    6. 's' → logprob: -11.69643783569336
    7. '```' → logprob: -11.69643783569336
    8. '])' → logprob: -11.82143783569336
    9. ' ' → logprob: -12.07143783569336
    10. ')' → logprob: -12.07143783569336

Token 1857: '].' (ID: 1651)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6695576906204224
    2. '.append' → logprob: -1.0445576906204224
    3. ').' → logprob: -2.919557571411133
    4. ')' → logprob: -3.294557571411133
    5. ',[' → logprob: -4.044557571411133
    6. '<|end|>' → logprob: -4.294557571411133
    7. '[(' → logprob: -5.294557571411133
    8. '[' → logprob: -5.794557571411133
    9. '].' → logprob: -6.669557571411133
    10. ',(' → logprob: -7.669557571411133

Token 1858: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.5048530030981055e-06
    2. '.append' → logprob: -13.750001907348633
    3. ' append' → logprob: -15.000001907348633
    4. 'appen' → logprob: -17.375001907348633
    5. '	append' → logprob: -18.750001907348633
    6. '_append' → logprob: -19.375001907348633
    7. '
' → logprob: -19.500001907348633
    8. '```' → logprob: -19.500001907348633
    9. 'add' → logprob: -20.250001907348633
    10. 'app' → logprob: -20.500001907348633

Token 1859: '((' (ID: 2054)
  Prédit: '(p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.009085680358111858
    2. '(' → logprob: -4.759085655212402
    3. '((' → logprob: -8.259085655212402
    4. '(
' → logprob: -8.884085655212402
    5. ' (' → logprob: -9.634085655212402
    6. '(P' → logprob: -13.259085655212402
    7. '   ' → logprob: -13.759085655212402
    8. ',' → logprob: -13.759085655212402
    9. ',(' → logprob: -13.884085655212402
    10. ')' → logprob: -14.259085655212402

Token 1860: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.011069518513977528
    2. '(p' → logprob: -4.511069297790527
    3. ' p' → logprob: -11.136069297790527
    4. '(
' → logprob: -12.511069297790527
    5. '(' → logprob: -13.886069297790527
    6. ' (' → logprob: -14.011069297790527
    7. '   ' → logprob: -14.011069297790527
    8. '[p' → logprob: -14.761069297790527
    9. '
' → logprob: -15.261069297790527
    10. '	p' → logprob: -16.511070251464844

Token 1861: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.3596853831550106e-05
    2. 'p' → logprob: -9.875053405761719
    3. '[' → logprob: -14.125053405761719
    4. '[p' → logprob: -14.750053405761719
    5. '
' → logprob: -15.000053405761719
    6. ')' → logprob: -16.00005340576172
    7. '```' → logprob: -16.12505340576172
    8. 's' → logprob: -16.12505340576172
    9. ')p' → logprob: -16.62505340576172
    10. ' p' → logprob: -17.00005340576172

Token 1862: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.08909377455711365
    2. ',' → logprob: -2.4640936851501465
    3. ',
' → logprob: -9.339094161987305
    4. ' ,' → logprob: -10.339094161987305
    5. ',(' → logprob: -10.714094161987305
    6. '   ' → logprob: -12.964094161987305
    7. ',int' → logprob: -13.589094161987305
    8. '	' → logprob: -14.089094161987305
    9. ',",' → logprob: -14.089094161987305
    10. ',{
' → logprob: -14.464094161987305

Token 1863: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.00015538577281404287
    2. '))
' → logprob: -8.875155448913574
    3. ')' → logprob: -12.125155448913574
    4. ',' → logprob: -12.375155448913574
    5. ' ))' → logprob: -13.125155448913574
    6. ')))' → logprob: -13.500155448913574
    7. '));' → logprob: -14.250155448913574
    8. '           ' → logprob: -14.625155448913574
    9. ')),' → logprob: -14.875155448913574
    10. '       ' → logprob: -15.250155448913574

Token 1864: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1865: ' edge' (ID: 11165)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5412800312042236
    2. 'for' → logprob: -1.5412800312042236
    3. '#' → logprob: -2.4162800312042236
    4. '
' → logprob: -2.5412800312042236
    5. '<|end|>' → logprob: -3.7912800312042236
    6. ' for' → logprob: -5.5412797927856445
    7. 'sign' → logprob: -6.2912797927856445
    8. '        
' → logprob: -6.4162797927856445
    9. 'from' → logprob: -6.7912797927856445
    10. ')' → logprob: -6.7912797927856445

Token 1866: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.006000844296067953
    2. '_' → logprob: -5.756000995635986
    3. 's' → logprob: -6.756000995635986
    4. '_lengths' → logprob: -7.131000995635986
    5. '_idx' → logprob: -8.506000518798828
    6. '_id' → logprob: -9.506000518798828
    7. '_l' → logprob: -9.631000518798828
    8. 'len' → logprob: -9.631000518798828
    9. '```' → logprob: -10.006000518798828
    10. '[' → logprob: -10.131000518798828

Token 1867: '[(' (ID: 20542)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.2990588843822479
    2. '[' → logprob: -1.4240589141845703
    3. '[(' → logprob: -4.04905891418457
    4. '=' → logprob: -8.79905891418457
    5. '[p' → logprob: -10.04905891418457
    6. '[
' → logprob: -10.54905891418457
    7. '[((' → logprob: -10.67405891418457
    8. '\[' → logprob: -10.79905891418457
    9. ' [' → logprob: -12.17405891418457
    10. '[e' → logprob: -12.42405891418457

Token 1868: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.005694723222404718
    2. 'se' → logprob: -5.25569486618042
    3. '(p' → logprob: -9.005694389343262
    4. '(se' → logprob: -9.130694389343262
    5. ')' → logprob: -9.755694389343262
    6. 'seg' → logprob: -9.880694389343262
    7. ' p' → logprob: -10.130694389343262
    8. ')p' → logprob: -11.130694389343262
    9. '   ' → logprob: -11.755694389343262
    10. ' ' → logprob: -12.130694389343262

Token 1869: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010803505778312683
    2. 's' → logprob: -4.760803699493408
    3. '[' → logprob: -6.510803699493408
    4. 'se' → logprob: -8.51080322265625
    5. '[i' → logprob: -9.13580322265625
    6. 'i' → logprob: -9.88580322265625
    7. '[p' → logprob: -9.88580322265625
    8. 'p' → logprob: -10.38580322265625
    9. '_se' → logprob: -10.44830322265625
    10. '(' → logprob: -10.69830322265625

Token 1870: ',p' (ID: 14835)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20179776847362518
    2. ',p' → logprob: -1.7017977237701416
    3. ',
' → logprob: -8.326797485351562
    4. '),(' → logprob: -10.326797485351562
    5. ',(' → logprob: -10.326797485351562
    6. ',)' → logprob: -10.576797485351562
    7. ' ,' → logprob: -11.576797485351562
    8. ',),' → logprob: -12.451797485351562
    9. ',i' → logprob: -12.576797485351562
    10. '[' → logprob: -12.701797485351562

Token 1871: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2014332264661789
    2. '2' → logprob: -1.7014331817626953
    3. '[' → logprob: -10.951433181762695
    4. '_' → logprob: -13.576433181762695
    5. 'r' → logprob: -14.701433181762695
    6. 'air' → logprob: -14.951433181762695
    7. '
' → logprob: -15.951433181762695
    8. 'airs' → logprob: -16.576433181762695
    9. '```' → logprob: -16.701433181762695
    10. ')]' → logprob: -17.326433181762695

Token 1872: ')' (ID: 8)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.4003490209579468
    2. ')' → logprob: -1.1503490209579468
    3. ')=' → logprob: -4.400349140167236
    4. ']=' → logprob: -7.400349140167236
    5. ']' → logprob: -8.400348663330078
    6. ']=(' → logprob: -8.900348663330078
    7. '])' → logprob: -10.400348663330078
    8. ')
' → logprob: -10.525348663330078
    9. ' )' → logprob: -10.775348663330078
    10. ')],' → logprob: -11.025348663330078

Token 1873: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.2985377609729767
    2. ')=' → logprob: -1.9235377311706543
    3. ')' → logprob: -2.6735377311706543
    4. ']' → logprob: -3.9235377311706543
    5. ')]' → logprob: -4.548537731170654
    6. ']=(' → logprob: -4.548537731170654
    7. ',' → logprob: -6.923537731170654
    8. '])' → logprob: -7.548537731170654
    9. ',)' → logprob: -8.173538208007812
    10. '=' → logprob: -9.798538208007812

Token 1874: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -5.512236498361744e-07
    2. ' d' → logprob: -14.500000953674316
    3. 'length' → logprob: -18.5
    4. '   ' → logprob: -19.125
    5. 'edge' → logprob: -20.125
    6. '	d' → logprob: -20.375
    7. ')d' → logprob: -20.75
    8. '
' → logprob: -21.125
    9. '  ' → logprob: -22.125
    10. '```' → logprob: -22.25

Token 1875: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2939336597919464
    2. '<|end|>' → logprob: -1.668933629989624
    3. '<|end|>' → logprob: -3.918933629989624
    4. ')' → logprob: -4.168933868408203
    5. '(edge' → logprob: -4.668933868408203
    6. 'edge' → logprob: -5.293933868408203
    7. '       ' → logprob: -5.543933868408203
    8. ',' → logprob: -5.793933868408203
    9. ' edge' → logprob: -5.793933868408203
    10. '   ' → logprob: -6.418933868408203

Token 1876: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004926685243844986
    2. '<|end|>' → logprob: -6.379926681518555
    3. 'for' → logprob: -7.504926681518555
    4. ' for' → logprob: -7.629926681518555
    5. '(edge' → logprob: -7.879926681518555
    6. ',' → logprob: -8.004926681518555
    7. '```' → logprob: -8.004926681518555
    8. '       ' → logprob: -8.129926681518555
    9. '   ' → logprob: -8.254926681518555
    10. '<|end|>' → logprob: -9.254926681518555

Token 1877: ' edge' (ID: 11165)
  Prédit: '(edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(edge' → logprob: -0.5561325550079346
    2. 'edge' (adapté à ' edge') → logprob: -0.9311325550079346
    3. ' edge' → logprob: -3.6811325550079346
    4. ' (' → logprob: -5.9311323165893555
    5. 'd' → logprob: -6.5561323165893555
    6. '(' → logprob: -6.5561323165893555
    7. '=edge' → logprob: -7.1811323165893555
    8. '
' → logprob: -8.181132316589355
    9. '           ' → logprob: -8.806132316589355
    10. '(d' → logprob: -8.806132316589355

Token 1878: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -5.200166469876422e-06
    2. 'len' → logprob: -12.250004768371582
    3. 'Len' → logprob: -16.1250057220459
    4. '```' → logprob: -16.6250057220459
    5. '_LEN' → logprob: -17.0000057220459
    6. '(len' → logprob: -17.6250057220459
    7. '(_' → logprob: -18.0000057220459
    8. ' _' → logprob: -18.3750057220459
    9. '[len' → logprob: -18.3750057220459
    10. '_val' → logprob: -18.5000057220459

Token 1879: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -2.5822400857578032e-05
    2. '=' → logprob: -11.625025749206543
    3. '[' → logprob: -11.875025749206543
    4. ' [(' → logprob: -12.375025749206543
    5. '[
' → logprob: -13.000025749206543
    6. '[((' → logprob: -13.500025749206543
    7. '((' → logprob: -14.250025749206543
    8. '([(' → logprob: -14.875025749206543
    9. '_' → logprob: -15.625025749206543
    10. '#' → logprob: -15.750025749206543

Token 1880: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -3.8219583075260743e-05
    2. '(p' → logprob: -10.250038146972656
    3. ' p' → logprob: -13.125038146972656
    4. '   ' → logprob: -14.250038146972656
    5. ' (' → logprob: -15.875038146972656
    6. '[p' → logprob: -16.875038146972656
    7. ' ' → logprob: -17.375038146972656
    8. '           ' → logprob: -17.500038146972656
    9. '	p' → logprob: -17.875038146972656
    10. '
' → logprob: -18.875038146972656

Token 1881: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006512983236461878
    2. 'p' → logprob: -5.7565131187438965
    3. '[' → logprob: -6.6315131187438965
    4. '1' → logprob: -6.8815131187438965
    5. ',' → logprob: -8.256512641906738
    6. '(p' → logprob: -8.756512641906738
    7. '[p' → logprob: -8.756512641906738
    8. '
' → logprob: -9.006512641906738
    9. ')' → logprob: -9.381512641906738
    10. ',p' → logprob: -10.131512641906738

Token 1882: ',p' (ID: 14835)
  Prédit: ',p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.07138774544000626
    2. ',(' → logprob: -3.446387767791748
    3. ',' → logprob: -3.696387767791748
    4. '[(' → logprob: -5.446387767791748
    5. '[p' → logprob: -5.571387767791748
    6. '(p' → logprob: -5.946387767791748
    7. ',
' → logprob: -7.821387767791748
    8. '
' → logprob: -8.07138729095459
    9. ')' → logprob: -8.94638729095459
    10. '[' → logprob: -9.19638729095459

Token 1883: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2003609538078308
    2. '2' → logprob: -2.2003610134124756
    3. '[' → logprob: -2.7003610134124756
    4. ')]' → logprob: -6.3253607749938965
    5. '(' → logprob: -7.2003607749938965
    6. '
' → logprob: -8.200361251831055
    7. ',' → logprob: -8.325361251831055
    8. ')][' → logprob: -8.700361251831055
    9. ')' → logprob: -9.075361251831055
    10. '(p' → logprob: -9.575361251831055

Token 1884: ')' (ID: 8)
  Prédit: ')='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')=' → logprob: -0.6149160861968994
    2. ')' → logprob: -1.3649160861968994
    3. ']=' → logprob: -1.6149160861968994
    4. ')]' → logprob: -5.98991584777832
    5. '])' → logprob: -6.11491584777832
    6. ']' → logprob: -8.86491584777832
    7. ' )' → logprob: -9.61491584777832
    8. '=' → logprob: -9.73991584777832
    9. ']]=' → logprob: -11.73991584777832
    10. ')])' → logprob: -12.11491584777832

Token 1885: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.023481538519263268
    2. ')=' → logprob: -4.023481369018555
    3. '=' → logprob: -5.273481369018555
    4. ']' → logprob: -9.023481369018555
    5. ')' → logprob: -10.273481369018555
    6. '=d' → logprob: -10.398481369018555
    7. '"]=' → logprob: -13.898481369018555
    8. '']=' → logprob: -14.148481369018555
    9. '}=' → logprob: -14.523481369018555
    10. ']={' → logprob: -14.523481369018555

Token 1886: 'd' (ID: 67)
  Prédit: 'd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: 0.0
    2. ' d' → logprob: -17.0
    3. '   ' → logprob: -21.875
    4. '	d' → logprob: -21.875
    5. ')d' → logprob: -23.125
    6. '$d' → logprob: -25.125
    7. '>d' → logprob: -25.75
    8. '_d' → logprob: -26.0
    9. '       ' → logprob: -26.0
    10. 'д' → logprob: -26.25

Token 1887: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4808710813522339
    2. 'for' → logprob: -1.8558710813522339
    3. '
' → logprob: -2.2308712005615234
    4. ' for' → logprob: -2.3558712005615234
    5. '<|end|>' → logprob: -4.105871200561523
    6. '   ' → logprob: -6.105871200561523
    7. '        
' → logprob: -6.480871200561523
    8. ')' → logprob: -7.230871200561523
    9. '	for' → logprob: -7.230871200561523
    10. '<|end|>' → logprob: -8.605871200561523

Token 1888: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1480359584093094
    2. '       ' → logprob: -2.023036003112793
    3. '
' → logprob: -6.398036003112793
    4. '#' → logprob: -6.398036003112793
    5. ' for' → logprob: -6.648036003112793
    6. '	for' → logprob: -8.023036003112793
    7. '        
' → logprob: -8.773036003112793
    8. '```' → logprob: -8.898036003112793
    9. '   ' → logprob: -10.148036003112793
    10. '           ' → logprob: -11.148036003112793

Token 1889: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.513408899307251
    2. 'for' → logprob: -1.013408899307251
    3. '#' (adapté à ' #') → logprob: -3.513408899307251
    4. '
' → logprob: -4.763408660888672
    5. ' for' → logprob: -9.013408660888672
    6. '```' → logprob: -10.013408660888672
    7. '   ' → logprob: -10.263408660888672
    8. '        
' → logprob: -10.888408660888672
    9. 'import' → logprob: -12.013408660888672
    10. '           ' → logprob: -12.763408660888672

Token 1890: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.024038227275013924
    2. '       ' → logprob: -3.774038314819336
    3. '#' → logprob: -7.274038314819336
    4. ' for' → logprob: -9.649038314819336
    5. '
' → logprob: -11.524038314819336
    6. 'sign' → logprob: -11.524038314819336
    7. '   ' → logprob: -11.649038314819336
    8. 'def' → logprob: -12.524038314819336
    9. '	for' → logprob: -14.149038314819336
    10. 'import' → logprob: -14.399038314819336

Token 1891: ' each' (ID: 2454)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.2221783697605133
    2. 'i' → logprob: -2.0971784591674805
    3. 's' → logprob: -3.3471784591674805
    4. ' sign' → logprob: -3.7221784591674805
    5. ' i' → logprob: -4.8471784591674805
    6. ' s' → logprob: -5.3471784591674805
    7. 'p' → logprob: -6.2221784591674805
    8. 'seg' → logprob: -7.2221784591674805
    9. 'sig' → logprob: -7.8471784591674805
    10. ' p' → logprob: -7.8471784591674805

Token 1892: ' sign' (ID: 2232)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.16931505501270294
    2. ' i' → logprob: -2.2943150997161865
    3. 'sign' → logprob: -3.2943150997161865
    4. ' sign' → logprob: -4.669314861297607
    5. 's' → logprob: -5.419314861297607
    6. ' s' → logprob: -5.544314861297607
    7. '
' → logprob: -10.669315338134766
    8. '_sign' → logprob: -11.169315338134766
    9. ' ' → logprob: -11.669315338134766
    10. '```' → logprob: -12.169315338134766

Token 1893: ',' (ID: 11)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.29362210631370544
    2. ':' → logprob: -2.5436220169067383
    3. ' for' → logprob: -2.7936220169067383
    4. '       ' → logprob: -2.9186220169067383
    5. ':
' → logprob: -3.1686220169067383
    6. 'i' → logprob: -4.418622016906738
    7. '   ' → logprob: -6.543622016906738
    8. ',' → logprob: -6.668622016906738
    9. ' i' → logprob: -7.043622016906738
    10. '           ' → logprob: -7.293622016906738

Token 1894: ' impose' (ID: 68003)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.23793262243270874
    2. 's' → logprob: -2.6129326820373535
    3. 'for' → logprob: -2.9879326820373535
    4. ' p' → logprob: -3.4879326820373535
    5. '       ' → logprob: -4.3629326820373535
    6. ' for' → logprob: -4.6129326820373535
    7. 'sign' → logprob: -4.7379326820373535
    8. ' s' → logprob: -4.9879326820373535
    9. 'touch' → logprob: -5.1129326820373535
    10. '   ' → logprob: -5.2379326820373535

Token 1895: ' restrictions' (ID: 24679)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.0521228313446045
    2. '#' → logprob: -1.6771228313446045
    3. 'restr' → logprob: -1.6771228313446045
    4. 'i' → logprob: -2.1771228313446045
    5. ' restrictions' → logprob: -2.6771228313446045
    6. ' for' → logprob: -3.5521228313446045
    7. 'sign' → logprob: -3.9271228313446045
    8. 'restriction' → logprob: -4.177123069763184
    9. '
' → logprob: -4.552123069763184
    10. 'constraints' → logprob: -5.677123069763184

Token 1896: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12982480227947235
    2. 'for' → logprob: -2.1298248767852783
    3. ' for' → logprob: -5.879824638366699
    4. '
' → logprob: -10.5048246383667
    5. '   ' → logprob: -10.5048246383667
    6. '	for' → logprob: -11.6298246383667
    7. '        
' → logprob: -11.8798246383667
    8. ',' → logprob: -12.2548246383667
    9. '           ' → logprob: -12.5048246383667
    10. '```' → logprob: -12.6298246383667

Token 1897: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6944840550422668
    2. 'for' → logprob: -0.6944840550422668
    3. ' for' → logprob: -6.694484233856201
    4. '
' → logprob: -9.694483757019043
    5. '   ' → logprob: -10.694483757019043
    6. '#' → logprob: -13.069483757019043
    7. '```' → logprob: -13.194483757019043
    8. 'sign' → logprob: -13.194483757019043
    9. '	for' → logprob: -13.194483757019043
    10. '           ' → logprob: -13.319483757019043

Token 1898: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07153791189193726
    2. ' for' → logprob: -3.071537971496582
    3. '       ' → logprob: -3.821537971496582
    4. '
' → logprob: -7.196537971496582
    5. '   ' → logprob: -10.446537971496582
    6. '```' → logprob: -12.446537971496582
    7. '        
' → logprob: -13.321537971496582
    8. '	for' → logprob: -13.446537971496582
    9. 'sign' → logprob: -13.571537971496582
    10. '#' (adapté à ' #') → logprob: -13.571537971496582

Token 1899: ' find' (ID: 1646)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0002067588793579489
    2. '       ' → logprob: -8.50020694732666
    3. ' for' → logprob: -13.62520694732666
    4. 'sign' → logprob: -14.12520694732666
    5. '#' → logprob: -14.62520694732666
    6. 'def' → logprob: -14.87520694732666
    7. '
' → logprob: -15.37520694732666
    8. '   ' → logprob: -15.75020694732666
    9. 'visited' → logprob: -17.125205993652344
    10. '           ' → logprob: -17.250205993652344

Token 1900: ' touching' (ID: 52058)
  Prédit: ' sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sign' → logprob: -1.0854700803756714
    2. 'sign' → logprob: -1.4604700803756714
    3. 'i' → logprob: -2.210470199584961
    4. ' p' → logprob: -2.335470199584961
    5. 'p' → logprob: -2.710470199584961
    6. ' i' → logprob: -3.335470199584961
    7. 'touch' → logprob: -3.710470199584961
    8. '   ' → logprob: -3.710470199584961
    9. ' the' → logprob: -4.085470199584961
    10. ' touching' → logprob: -4.085470199584961

Token 1901: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.0021867838222533464
    2. '_point' → logprob: -6.3771867752075195
    3. 'p' → logprob: -8.62718677520752
    4. 'pt' → logprob: -9.00218677520752
    5. '
' → logprob: -9.00218677520752
    6. 'sign' → logprob: -11.00218677520752
    7. 'points' → logprob: -11.37718677520752
    8. 'segment' → logprob: -11.75218677520752
    9. '_p' → logprob: -12.00218677520752
    10. 'endpoint' → logprob: -12.37718677520752

Token 1902: ' =' (ID: 314)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.19471365213394165
    2. '=' → logprob: -2.819713592529297
    3. ' =' → logprob: -2.819713592529297
    4. '_idx' → logprob: -4.569713592529297
    5. 'for' → logprob: -4.944713592529297
    6. ',p' → logprob: -5.194713592529297
    7. 's' → logprob: -5.444713592529297
    8. 'idx' → logprob: -5.569713592529297
    9. '_touch' → logprob: -5.694713592529297
    10. '(p' → logprob: -5.944713592529297

Token 1903: ' endpoint' (ID: 29703)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.008568360470235348
    2. '-' → logprob: -5.258568286895752
    3. 'p' → logprob: -6.633568286895752
    4. ' None' → logprob: -6.883568286895752
    5. 'next' → logprob: -8.50856876373291
    6. 'touch' → logprob: -8.75856876373291
    7. 'se' → logprob: -8.88356876373291
    8. '   ' → logprob: -9.00856876373291
    9. '
' → logprob: -9.38356876373291
    10. 'none' → logprob: -9.75856876373291

Token 1904: ' connected' (ID: 12079)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.6534461975097656
    2. 's' → logprob: -2.4034461975097656
    3. ' =' → logprob: -2.4034461975097656
    4. 'connected' → logprob: -2.5284461975097656
    5. 'that' → logprob: -2.6534461975097656
    6. 'of' → logprob: -3.0284461975097656
    7. ' connected' → logprob: -3.1534461975097656
    8. '1' → logprob: -3.1534461975097656
    9. 't' → logprob: -3.4034461975097656
    10. ' at' → logprob: -3.5284461975097656

Token 1905: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.00943505484610796
    2. ' to' → logprob: -4.759435176849365
    3. '   ' → logprob: -7.884435176849365
    4. 'only' → logprob: -8.009434700012207
    5. 'exact' → logprob: -10.759434700012207
    6. 'sign' → logprob: -11.259434700012207
    7. '           ' → logprob: -11.384434700012207
    8. ' exactly' → logprob: -11.509434700012207
    9. '_to' → logprob: -11.634434700012207
    10. '
' → logprob: -11.884434700012207

Token 1906: ' street' (ID: 12901)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.862372875213623
    2. '1' → logprob: -0.987372875213623
    3. 'street' → logprob: -2.237372875213623
    4. 'exact' → logprob: -2.862372875213623
    5. 'a' → logprob: -4.612372875213623
    6. 'at' → logprob: -4.737372875213623
    7. 'another' → logprob: -4.862372875213623
    8. 'other' → logprob: -5.862372875213623
    9. 'only' → logprob: -5.987372875213623
    10. 'any' → logprob: -5.987372875213623

Token 1907: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3961327075958252
    2. '
' → logprob: -1.6461327075958252
    3. 'for' → logprob: -2.021132707595825
    4. ',' → logprob: -2.271132707595825
    5. ' =' → logprob: -2.396132707595825
    6. '   ' → logprob: -2.646132707595825
    7. '=' → logprob: -4.146132469177246
    8. '           ' → logprob: -4.146132469177246
    9. 'connected' → logprob: -4.396132469177246
    10. 's' → logprob: -4.521132469177246

Token 1908: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3208574056625366
    2. 'p' → logprob: -1.6958574056625366
    3. ',' → logprob: -1.9458574056625366
    4. 'touch' → logprob: -2.570857524871826
    5. '
' → logprob: -2.695857524871826
    6. ',
' → logprob: -3.195857524871826
    7. 'sign' → logprob: -3.195857524871826
    8. 'for' → logprob: -3.445857524871826
    9. ' p' → logprob: -3.695857524871826
    10. ' for' → logprob: -3.695857524871826

Token 1909: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.746947705745697
    2. 'for' (adapté à ' for') → logprob: -0.871947705745697
    3. '       ' → logprob: -2.246947765350342
    4. '
' → logprob: -6.496947765350342
    5. '   ' → logprob: -8.496947288513184
    6. ' i' → logprob: -9.371947288513184
    7. 'sign' → logprob: -9.371947288513184
    8. 'i' → logprob: -9.621947288513184
    9. 'touch' → logprob: -9.621947288513184
    10. '```' → logprob: -9.996947288513184

Token 1910: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0017733541317284107
    2. 'sign' → logprob: -6.876773357391357
    3. ' i' → logprob: -7.251773357391357
    4. 's' → logprob: -11.3767728805542
    5. 'si' → logprob: -11.6267728805542
    6. '   ' → logprob: -12.3767728805542
    7. 'idx' → logprob: -12.8767728805542
    8. 'sig' → logprob: -13.6267728805542
    9. ' sign' → logprob: -13.8767728805542
    10. '
' → logprob: -14.8767728805542

Token 1911: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17374390363693237
    2. 'in' → logprob: -1.9237439632415771
    3. ',' → logprob: -4.548743724822998
    4. ' ,' → logprob: -6.048743724822998
    5. '(sign' → logprob: -9.048744201660156
    6. ' (' → logprob: -9.548744201660156
    7. ',(' → logprob: -9.548744201660156
    8. '
' → logprob: -10.798744201660156
    9. ',se' → logprob: -10.798744201660156
    10. ',s' → logprob: -10.798744201660156

Token 1912: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -8.97155623533763e-05
    2. ' sign' → logprob: -9.375089645385742
    3. 'list' → logprob: -13.500089645385742
    4. '   ' → logprob: -14.000089645385742
    5. 'range' → logprob: -14.000089645385742
    6. '(sign' → logprob: -14.000089645385742
    7. ' ' → logprob: -15.125089645385742
    8. '
' → logprob: -15.125089645385742
    9. '	sign' → logprob: -15.625089645385742
    10. '  ' → logprob: -16.250089645385742

Token 1913: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.015001730062067509
    2. '_' → logprob: -4.3900017738342285
    3. '[' → logprob: -6.7650017738342285
    4. '[
' → logprob: -7.8900017738342285
    5. ' _' → logprob: -8.64000129699707
    6. '```' → logprob: -9.26500129699707
    7. ':' → logprob: -9.39000129699707
    8. 's' → logprob: -9.51500129699707
    9. ')' → logprob: -9.64000129699707
    10. 'segments' → logprob: -10.39000129699707

Token 1914: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.371085524559021
    2. ':
' → logprob: -1.246085524559021
    3. ',' → logprob: -4.7460856437683105
    4. '   ' → logprob: -5.4960856437683105
    5. '[' → logprob: -5.6210856437683105
    6. '=' → logprob: -6.2460856437683105
    7. '       ' → logprob: -7.4960856437683105
    8. ' :' → logprob: -7.6210856437683105
    9. '):
' → logprob: -7.6210856437683105
    10. 'in' → logprob: -7.9960856437683105

Token 1915: '           ' (ID: 352)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00033581978641450405
    2. ' p' → logprob: -8.625335693359375
    3. '       ' → logprob: -9.250335693359375
    4. 'p' → logprob: -10.000335693359375
    5. '	p' → logprob: -12.750335693359375
    6. ' s' → logprob: -12.875335693359375
    7. '```' → logprob: -13.000335693359375
    8. 's' → logprob: -13.625335693359375
    9. '           ' → logprob: -13.750335693359375
    10. '   ' → logprob: -13.875335693359375

Token 1916: ' s' (ID: 265)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.00018625585653353482
    2. 's' (adapté à ' s') → logprob: -8.7501859664917
    3. '   ' → logprob: -11.3751859664917
    4. 'S' → logprob: -11.8751859664917
    5. '(p' → logprob: -12.1251859664917
    6. ' p' → logprob: -13.3751859664917
    7. '           ' → logprob: -13.6251859664917
    8. '       ' → logprob: -13.8751859664917
    9. 'sign' → logprob: -16.750186920166016
    10. '
' → logprob: -18.375186920166016

Token 1917: ',e' (ID: 43127)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.362907737493515
    2. 'eg' → logprob: -2.487907648086548
    3. '1' → logprob: -2.987907648086548
    4. ' =' → logprob: -3.112907648086548
    5. 'p' → logprob: -3.362907648086548
    6. '_' → logprob: -4.112907886505127
    7. 'e' → logprob: -4.237907886505127
    8. '_p' → logprob: -4.612907886505127
    9. 'egs' → logprob: -4.737907886505127
    10. 's' → logprob: -4.862907886505127

Token 1918: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01828889176249504
    2. ' =' → logprob: -4.268289089202881
    3. '=s' → logprob: -6.143289089202881
    4. '=
' → logprob: -6.893289089202881
    5. '[' → logprob: -8.018288612365723
    6. 's' → logprob: -9.018288612365723
    7. ',' → logprob: -9.143288612365723
    8. '=[' → logprob: -9.268288612365723
    9. '_' → logprob: -9.393288612365723
    10. '=_' → logprob: -9.643288612365723

Token 1919: ' seg' (ID: 3055)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -8.137130498653278e-05
    2. '(se' → logprob: -9.875081062316895
    3. ' seg' → logprob: -10.875081062316895
    4. 's' → logprob: -12.875081062316895
    5. '	se' → logprob: -12.875081062316895
    6. 'segments' → logprob: -13.500081062316895
    7. '   ' → logprob: -14.000081062316895
    8. ' se' → logprob: -14.250081062316895
    9. 'de' → logprob: -14.500081062316895
    10. '_se' → logprob: -14.750081062316895

Token 1920: 's' (ID: 82)
  Prédit: 'gs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gs' → logprob: -0.6127727627754211
    2. 's' → logprob: -1.1127727031707764
    3. 'se' → logprob: -2.1127727031707764
    4. '(se' → logprob: -5.3627729415893555
    5. 'egs' → logprob: -6.4877729415893555
    6. 'g' → logprob: -7.4877729415893555
    7. '(i' → logprob: -8.237772941589355
    8. '[i' → logprob: -8.362772941589355
    9. 'seg' → logprob: -8.612772941589355
    10. 'i' → logprob: -8.612772941589355

Token 1921: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.07093290239572525
    2. 'i' → logprob: -2.6959328651428223
    3. 's' → logprob: -7.695932865142822
    4. '[s' → logprob: -7.820932865142822
    5. '(i' → logprob: -9.57093334197998
    6. '
' → logprob: -11.07093334197998
    7. ' i' → logprob: -11.32093334197998
    8. 'e' → logprob: -11.44593334197998
    9. '[e' → logprob: -11.94593334197998
    10. '```' → logprob: -12.44593334197998

Token 1922: ']
' (ID: 1592)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6558851003646851
    2. ')' → logprob: -1.655885100364685
    3. ')
' → logprob: -2.1558852195739746
    4. ']' → logprob: -2.5308852195739746
    5. '
' → logprob: -3.5308852195739746
    6. ']
' → logprob: -4.030885219573975
    7. '           ' → logprob: -4.155885219573975
    8. ')[' → logprob: -4.780885219573975
    9. ',
' → logprob: -4.905885219573975
    10. '][' → logprob: -5.280885219573975

Token 1923: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05138137936592102
    2. '   ' → logprob: -3.3013813495635986
    3. '
' → logprob: -5.801381587982178
    4. '       ' → logprob: -6.051381587982178
    5. 'touch' → logprob: -6.051381587982178
    6. ' if' → logprob: -7.051381587982178
    7. ' touching' → logprob: -7.051381587982178
    8. '#' → logprob: -7.676381587982178
    9. '```' → logprob: -8.05138111114502
    10. ' touch' → logprob: -8.17638111114502

Token 1924: ' #' (ID: 1069)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.2016696184873581
    2. '#' (adapté à ' #') → logprob: -2.576669692993164
    3. 't' → logprob: -4.076669692993164
    4. '       ' → logprob: -4.201669692993164
    5. 'deg' → logprob: -4.201669692993164
    6. 'if' → logprob: -4.201669692993164
    7. 'p' → logprob: -4.451669692993164
    8. 'street' → logprob: -4.576669692993164
    9. 'd' → logprob: -5.326669692993164
    10. '           ' → logprob: -5.451669692993164

Token 1925: ' determine' (ID: 11433)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.7730019092559814
    2. '           ' → logprob: -1.0230019092559814
    3. '#' → logprob: -2.5230019092559814
    4. 'if' → logprob: -2.8980019092559814
    5. 't' → logprob: -4.398001670837402
    6. 'p' → logprob: -4.523001670837402
    7. 'connected' → logprob: -5.023001670837402
    8. 'deg' → logprob: -5.523001670837402
    9. 'street' → logprob: -6.148001670837402
    10. 'for' → logprob: -6.523001670837402

Token 1926: ' touching' (ID: 52058)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.06427875906229019
    2. 'if' → logprob: -2.8142788410186768
    3. '   ' → logprob: -7.189278602600098
    4. 't' → logprob: -7.939278602600098
    5. 'which' → logprob: -7.939278602600098
    6. 'tp' → logprob: -8.314278602600098
    7. ' touching' → logprob: -9.314278602600098
    8. '#' → logprob: -9.439278602600098
    9. 'street' → logprob: -9.939278602600098
    10. '       ' → logprob: -10.064278602600098

Token 1927: ' endpoint' (ID: 29703)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.00938970223069191
    2. 'points' → logprob: -5.384389877319336
    3. '_point' → logprob: -6.009389877319336
    4. 'pt' → logprob: -6.509389877319336
    5. ' point' → logprob: -8.134389877319336
    6. 'p' → logprob: -8.384389877319336
    7. '_points' → logprob: -9.509389877319336
    8. 'endpoint' → logprob: -10.259389877319336
    9. 'pts' → logprob: -10.509389877319336
    10. '
' → logprob: -10.509389877319336

Token 1928: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6029189229011536
    2. ' if' → logprob: -1.8529188632965088
    3. 'if' → logprob: -2.227918863296509
    4. 'touch' → logprob: -2.727918863296509
    5. '=' → logprob: -2.852918863296509
    6. ' =' → logprob: -4.227919101715088
    7. '
' → logprob: -4.477919101715088
    8. 't' → logprob: -4.602919101715088
    9. ' touching' → logprob: -4.852919101715088
    10. '_touch' → logprob: -4.852919101715088

Token 1929: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04379318282008171
    2. ' if' → logprob: -3.668793201446533
    3. 'touch' → logprob: -4.918793201446533
    4. 'if' → logprob: -5.168793201446533
    5. ' touching' → logprob: -7.043793201446533
    6. ' touch' → logprob: -7.168793201446533
    7. ' touched' → logprob: -7.543793201446533
    8. '```' → logprob: -7.543793201446533
    9. 'p' → logprob: -8.043792724609375
    10. ' touches' → logprob: -8.418792724609375

Token 1930: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12723413109779358
    2. 'touch' → logprob: -2.2522342205047607
    3. 'tp' → logprob: -5.252233982086182
    4. 'street' → logprob: -5.502233982086182
    5. 't' → logprob: -6.502233982086182
    6. 'd' → logprob: -6.627233982086182
    7. '   ' → logprob: -7.502233982086182
    8. 'p' → logprob: -7.627233982086182
    9. 'count' → logprob: -8.00223445892334
    10. 'deg' → logprob: -9.12723445892334

Token 1931: ' the' (ID: 290)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.26076778769493103
    2. 'touch' → logprob: -1.6357678174972534
    3. '           ' → logprob: -4.135767936706543
    4. 't' → logprob: -5.260767936706543
    5. 'for' → logprob: -5.760767936706543
    6. 'street' → logprob: -5.885767936706543
    7. 'p' → logprob: -6.510767936706543
    8. '       ' → logprob: -6.635767936706543
    9. 'd' → logprob: -6.885767936706543
    10. 'count' → logprob: -7.260767936706543

Token 1932: ' endpoint' (ID: 29703)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.621432363986969
    2. 'touch' → logprob: -1.1214323043823242
    3. 't' → logprob: -2.871432304382324
    4. 'p' → logprob: -3.121432304382324
    5. 'def' → logprob: -4.496432304382324
    6. '#' → logprob: -4.871432304382324
    7. 'd' → logprob: -6.121432304382324
    8. 'connected' → logprob: -6.246432304382324
    9. 'other' → logprob: -6.246432304382324
    10. 'street' → logprob: -6.496432304382324

Token 1933: ' that' (ID: 484)
  Prédit: 'connected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'connected' → logprob: -0.7175744771957397
    2. ' connected' → logprob: -1.5925744771957397
    3. 'that' → logprob: -2.0925745964050293
    4. 't' → logprob: -2.8425745964050293
    5. ' that' → logprob: -3.0925745964050293
    6. ' touching' → logprob: -3.5925745964050293
    7. '#' → logprob: -4.592574596405029
    8. 's' → logprob: -4.967574596405029
    9. 'touch' → logprob: -5.092574596405029
    10. 'with' → logprob: -5.217574596405029

Token 1934: ' connects' (ID: 47599)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5795166492462158
    2. ' in' → logprob: -1.7045166492462158
    3. 'i' → logprob: -2.329516649246216
    4. 's' → logprob: -3.079516649246216
    5. 'has' → logprob: -3.204516649246216
    6. ' has' → logprob: -3.454516649246216
    7. 'is' → logprob: -5.079516410827637
    8. ' i' → logprob: -5.204516410827637
    9. 'len' → logprob: -5.454516410827637
    10. 'connected' → logprob: -5.579516410827637

Token 1935: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.47825533151626587
    2. ' to' → logprob: -0.9782553315162659
    3. 's' → logprob: -6.603255271911621
    4. 'only' → logprob: -6.978255271911621
    5. 'sign' → logprob: -7.103255271911621
    6. ' only' → logprob: -8.853255271911621
    7. '   ' → logprob: -8.978255271911621
    8. '_to' → logprob: -9.228255271911621
    9. 't' → logprob: -9.228255271911621
    10. 'both' → logprob: -9.728255271911621

Token 1936: ' a' (ID: 261)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.2745852768421173
    2. 'a' → logprob: -2.274585247039795
    3. 'one' → logprob: -2.649585247039795
    4. 'another' → logprob: -4.024585247039795
    5. 'other' → logprob: -4.524585247039795
    6. 'sign' → logprob: -4.774585247039795
    7. 'the' → logprob: -5.274585247039795
    8. ' street' → logprob: -5.649585247039795
    9. 'graph' → logprob: -5.774585247039795
    10. 'any' → logprob: -6.024585247039795

Token 1937: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.0048610917292535305
    2. ' street' → logprob: -5.754860877990723
    3. 'sign' → logprob: -6.754860877990723
    4. 'stre' → logprob: -8.504860877990723
    5. 'segment' → logprob: -9.504860877990723
    6. 'st' → logprob: -9.754860877990723
    7. '1' → logprob: -9.879860877990723
    8. '   ' → logprob: -10.504860877990723
    9. 'neighbor' → logprob: -10.629860877990723
    10. '
' → logprob: -11.254860877990723

Token 1938: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3910789489746094
    2. ' is' → logprob: -2.6410789489746094
    3. ' =' → logprob: -3.5160789489746094
    4. ' if' → logprob: -3.7660789489746094
    5. '
' → logprob: -4.141078948974609
    6. ',' → logprob: -4.141078948974609
    7. '=' → logprob: -4.266078948974609
    8. ':' → logprob: -4.266078948974609
    9. ' for' → logprob: -4.266078948974609
    10. 'for' → logprob: -4.266078948974609

Token 1939: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5951135158538818
    2. '           ' → logprob: -2.220113515853882
    3. ' =' → logprob: -2.345113515853882
    4. '
' → logprob: -2.595113515853882
    5. ' for' → logprob: -3.220113515853882
    6. '=' → logprob: -3.470113515853882
    7. 'if' → logprob: -4.220113754272461
    8. 'for' → logprob: -4.345113754272461
    9. ' touching' → logprob: -4.595113754272461
    10. ':
' → logprob: -4.970113754272461

Token 1940: ' #' (ID: 1069)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.6718958616256714
    2. 'if' → logprob: -0.7968958616256714
    3. '           ' → logprob: -4.046895980834961
    4. 't' → logprob: -4.296895980834961
    5. 'for' → logprob: -5.796895980834961
    6. 'tp' → logprob: -6.171895980834961
    7. '       ' → logprob: -7.421895980834961
    8. 'count' → logprob: -8.171895980834961
    9. '```' → logprob: -8.421895980834961
    10. '   ' → logprob: -8.546895980834961

Token 1941: ' The' (ID: 623)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1965755671262741
    2. '           ' → logprob: -2.44657564163208
    3. 'touch' → logprob: -2.57157564163208
    4. 't' → logprob: -5.19657564163208
    5. ' if' → logprob: -5.19657564163208
    6. 'for' → logprob: -5.57157564163208
    7. '```' → logprob: -9.196575164794922
    8. 'connected' → logprob: -9.696575164794922
    9. 'tp' → logprob: -9.696575164794922
    10. 'p' → logprob: -9.821575164794922

Token 1942: ' other' (ID: 1273)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5907886028289795
    2. 'touch' → logprob: -1.3407886028289795
    3. 't' → logprob: -2.5907886028289795
    4. '           ' → logprob: -3.4657886028289795
    5. '#' → logprob: -3.9657886028289795
    6. 'for' → logprob: -4.340788841247559
    7. '       ' → logprob: -4.465788841247559
    8. ' if' → logprob: -4.590788841247559
    9. '
' → logprob: -5.215788841247559
    10. 'connected' → logprob: -5.465788841247559

Token 1943: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.035406213253736496
    2. '_endpoint' → logprob: -3.9104061126708984
    3. 'point' → logprob: -5.785406112670898
    4. 'end' → logprob: -5.910406112670898
    5. '=' → logprob: -6.035406112670898
    6. ' =' → logprob: -6.410406112670898
    7. '
' → logprob: -6.410406112670898
    8. ' endpoint' → logprob: -6.660406112670898
    9. 'pt' → logprob: -8.035406112670898
    10. 'p' → logprob: -8.410406112670898

Token 1944: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1850569248199463
    2. ' is' → logprob: -1.9350569248199463
    3. '
' → logprob: -2.5600569248199463
    4. 'is' → logprob: -2.8100569248199463
    5. ' =' → logprob: -2.8100569248199463
    6. '#' → logprob: -3.0600569248199463
    7. '=
' → logprob: -3.0600569248199463
    8. ',' → logprob: -3.8100569248199463
    9. 'must' → logprob: -3.9350569248199463
    10. '           ' → logprob: -3.9350569248199463

Token 1945: ' open' (ID: 2494)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.05959370359778404
    2. 'open' → logprob: -3.684593677520752
    3. ' e' → logprob: -4.309593677520752
    4. 's' → logprob: -5.059593677520752
    5. ' open' → logprob: -5.684593677520752
    6. 'None' → logprob: -5.809593677520752
    7. 'sign' → logprob: -6.309593677520752
    8. 'the' → logprob: -7.184593677520752
    9. ''e' → logprob: -7.434593677520752
    10. ''s' → logprob: -7.559593677520752

Token 1946: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4338138699531555
    2. '
' → logprob: -1.6838138103485107
    3. ' if' → logprob: -2.4338138103485107
    4. 'if' → logprob: -2.9338138103485107
    5. 'for' → logprob: -5.05881404876709
    6. 'touch' → logprob: -5.55881404876709
    7. ',' → logprob: -6.30881404876709
    8. 't' → logprob: -6.43381404876709
    9. ' for' → logprob: -6.55881404876709
    10. ' touching' → logprob: -6.80881404876709

Token 1947: 'connected' (ID: 26297)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -1.140252709388733
    2. ')' → logprob: -1.640252709388733
    3. 's' → logprob: -2.2652525901794434
    4. '0' → logprob: -2.8902525901794434
    5. 'e' → logprob: -2.8902525901794434
    6. '#' → logprob: -2.8902525901794434
    7. ' )
' → logprob: -3.5152525901794434
    8. ' connected' → logprob: -3.6402525901794434
    9. 'connected' → logprob: -3.8902525901794434
    10. 'None' → logprob: -4.390252590179443

Token 1948: ' only' (ID: 1606)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.7290809154510498
    2. 'only' → logprob: -0.7290809154510498
    3. ' only' → logprob: -4.479081153869629
    4. ' to' → logprob: -4.604081153869629
    5. '=' → logprob: -5.229081153869629
    6. '_to' → logprob: -5.604081153869629
    7. ')' → logprob: -5.854081153869629
    8. '_only' → logprob: -6.729081153869629
    9. '```' → logprob: -7.854081153869629
    10. '   ' → logprob: -9.479081153869629

Token 1949: ' to' (ID: 316)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.16030475497245789
    2. ' to' → logprob: -1.9103047847747803
    3. '   ' → logprob: -10.53530502319336
    4. ')' → logprob: -11.16030502319336
    5. '           ' → logprob: -11.41030502319336
    6. 'once' → logprob: -11.91030502319336
    7. ' ' → logprob: -12.41030502319336
    8. 'through' → logprob: -12.66030502319336
    9. '_to' → logprob: -13.03530502319336
    10. ' once' → logprob: -13.53530502319336

Token 1950: ' this' (ID: 495)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.0665971040725708
    2. 'i' → logprob: -1.3165971040725708
    3. 'this' → logprob: -1.6915971040725708
    4. 'sign' → logprob: -1.8165971040725708
    5. 'one' → logprob: -4.066596984863281
    6. '1' → logprob: -4.316596984863281
    7. 'se' → logprob: -5.941596984863281
    8. 's' → logprob: -6.066596984863281
    9. '{i' → logprob: -6.066596984863281
    10. '[i' → logprob: -6.691596984863281

Token 1951: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.4127451777458191
    2. 'segment' → logprob: -1.2877452373504639
    3. 'i' → logprob: -3.662745237350464
    4. ' segment' → logprob: -4.412744998931885
    5. ' sign' → logprob: -4.662744998931885
    6. ' i' → logprob: -5.037744998931885
    7. 'seg' → logprob: -5.662744998931885
    8. ')' → logprob: -7.287744998931885
    9. '[i' → logprob: -7.412744998931885
    10. '   ' → logprob: -7.537744998931885

Token 1952: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6159165501594543
    2. 'segment' → logprob: -0.9909165501594543
    3. ')
' → logprob: -2.8659164905548096
    4. ' segment' → logprob: -4.865916728973389
    5. 's' → logprob: -5.240916728973389
    6. ',' → logprob: -5.490916728973389
    7. '),' → logprob: -5.615916728973389
    8. 'i' → logprob: -5.740916728973389
    9. ').' → logprob: -6.615916728973389
    10. ' only' → logprob: -6.990916728973389

Token 1953: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21968773007392883
    2. 'touch' → logprob: -2.5946877002716064
    3. 'if' → logprob: -3.0946877002716064
    4. ' if' → logprob: -3.2196877002716064
    5. ' touching' → logprob: -4.8446879386901855
    6. '
' → logprob: -4.9696879386901855
    7. 'for' → logprob: -5.2196879386901855
    8. ' touches' → logprob: -5.9696879386901855
    9. 'p' → logprob: -6.3446879386901855
    10. '```' → logprob: -6.4696879386901855

Token 1954: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8140612244606018
    2. 'if' → logprob: -1.189061164855957
    3. 'touch' → logprob: -1.564061164855957
    4. 't' → logprob: -3.939061164855957
    5. ' if' → logprob: -4.189061164855957
    6. 'for' → logprob: -5.564061164855957
    7. ' touch' → logprob: -7.189061164855957
    8. '
' → logprob: -7.564061164855957
    9. 'p' → logprob: -7.564061164855957
    10. 'connected' → logprob: -7.689061164855957

Token 1955: ' check' (ID: 2371)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8113958835601807
    2. 'touch' → logprob: -1.3113958835601807
    3. 'if' → logprob: -1.8113958835601807
    4. ' if' → logprob: -2.6863958835601807
    5. 't' → logprob: -3.1863958835601807
    6. 'for' → logprob: -5.311395645141602
    7. ' touch' → logprob: -6.186395645141602
    8. ' touching' → logprob: -6.311395645141602
    9. 'p' → logprob: -6.686395645141602
    10. 'connected' → logprob: -7.811395645141602

Token 1956: ' connections' (ID: 21069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6794015169143677
    2. 'if' → logprob: -1.9294015169143677
    3. 's' → logprob: -2.179401397705078
    4. 'p' → logprob: -2.429401397705078
    5. '   ' → logprob: -3.804401397705078
    6. ' for' → logprob: -3.929401397705078
    7. '           ' → logprob: -4.304401397705078
    8. ' s' → logprob: -4.304401397705078
    9. '       ' → logprob: -4.804401397705078
    10. 'endpoint' → logprob: -4.804401397705078

Token 1957: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0419920682907104
    2. ' if' → logprob: -1.2919920682907104
    3. 'if' → logprob: -1.7919920682907104
    4. 'p' → logprob: -2.6669921875
    5. 'for' → logprob: -3.4169921875
    6. ' for' → logprob: -3.5419921875
    7. 's' → logprob: -4.5419921875
    8. ' p' → logprob: -5.1669921875
    9. 'touch' → logprob: -5.1669921875
    10. 'count' → logprob: -5.5419921875

Token 1958: ' street' (ID: 12901)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.0003166353271808475
    2. 'se' → logprob: -8.875316619873047
    3. 'sign' → logprob: -9.375316619873047
    4. 'for' → logprob: -9.875316619873047
    5. 'segment' → logprob: -11.000316619873047
    6. 'point' → logprob: -12.250316619873047
    7. 'seg' → logprob: -12.625316619873047
    8. 'graph' → logprob: -13.000316619873047
    9. 'street' → logprob: -13.125316619873047
    10. ' endpoint' → logprob: -13.375316619873047

Token 1959: '_segments' (ID: 142925)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7757652997970581
    2. 'for' → logprob: -2.1507654190063477
    3. 's' → logprob: -2.9007654190063477
    4. 'p' → logprob: -3.0257654190063477
    5. '_seg' → logprob: -3.0257654190063477
    6. '_p' → logprob: -3.2757654190063477
    7. '_touch' → logprob: -3.4007654190063477
    8. 'if' → logprob: -3.7757654190063477
    9. '_count' → logprob: -3.7757654190063477
    10. '_s' → logprob: -4.025765419006348

Token 1960: ' involving' (ID: 26065)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4098874032497406
    2. 'p' → logprob: -2.0348873138427734
    3. '
' → logprob: -2.9098873138427734
    4. 'for' → logprob: -2.9098873138427734
    5. 'if' → logprob: -4.284887313842773
    6. ' p' → logprob: -4.284887313842773
    7. 'touch' → logprob: -4.409887313842773
    8. ' for' → logprob: -4.534887313842773
    9. 'count' → logprob: -4.659887313842773
    10. 's' → logprob: -4.909887313842773

Token 1961: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0020533124916255474
    2. 'i' → logprob: -6.627053260803223
    3. 'e' → logprob: -7.752053260803223
    4. '
' → logprob: -9.502053260803223
    5. 'se' → logprob: -9.502053260803223
    6. 'touch' → logprob: -10.127053260803223
    7. '(s' → logprob: -10.252053260803223
    8. 'sign' → logprob: -11.502053260803223
    9. ' s' → logprob: -11.752053260803223
    10. 'endpoint' → logprob: -11.877053260803223

Token 1962: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006927546579390764
    2. 's' → logprob: -5.881927490234375
    3. 'for' → logprob: -7.256927490234375
    4. 'connected' → logprob: -7.381927490234375
    5. '
' → logprob: -7.756927490234375
    6. ' for' → logprob: -8.631927490234375
    7. 'touch' → logprob: -8.756927490234375
    8. ' connected' → logprob: -8.756927490234375
    9. '   ' → logprob: -8.881927490234375
    10. '            
' → logprob: -9.006927490234375

Token 1963: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00011653638648567721
    2. ' e' → logprob: -9.125116348266602
    3. '
' → logprob: -12.500116348266602
    4. 'sign' → logprob: -13.125116348266602
    5. 'se' → logprob: -14.625116348266602
    6. 'graph' → logprob: -14.750116348266602
    7. '   ' → logprob: -15.125116348266602
    8. 'i' → logprob: -16.0001163482666
    9. '[' → logprob: -16.3751163482666
    10. '1' → logprob: -16.8751163482666

Token 1964: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008317398838698864
    2. 'touch' → logprob: -6.133317470550537
    3. '
' → logprob: -6.508317470550537
    4. 's' → logprob: -7.508317470550537
    5. 'for' → logprob: -7.758317470550537
    6. '   ' → logprob: -7.883317470550537
    7. 'sign' → logprob: -7.883317470550537
    8. 't' → logprob: -7.883317470550537
    9. 'p' → logprob: -8.008316993713379
    10. '            
' → logprob: -8.258316993713379

Token 1965: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01101493276655674
    2. ' for' → logprob: -5.761014938354492
    3. 'for' → logprob: -5.886014938354492
    4. ' if' → logprob: -6.761014938354492
    5. 'if' → logprob: -7.136014938354492
    6. '   ' → logprob: -7.511014938354492
    7. '```' → logprob: -7.511014938354492
    8. 's' → logprob: -7.761014938354492
    9. '       ' → logprob: -8.136014938354492
    10. 'p' → logprob: -8.386014938354492

Token 1966: ' s' (ID: 265)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.5911383032798767
    2. 'if' → logprob: -1.0911383628845215
    3. '           ' → logprob: -2.8411383628845215
    4. 't' → logprob: -3.5911383628845215
    5. 'for' → logprob: -4.7161383628845215
    6. 'count' → logprob: -4.9661383628845215
    7. 'p' → logprob: -6.4661383628845215
    8. 'connected' → logprob: -6.8411383628845215
    9. 'conn' → logprob: -6.9661383628845215
    10. 'street' → logprob: -6.9661383628845215

Token 1967: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -1.0630067586898804
    2. '_segments' → logprob: -1.8130067586898804
    3. '_connections' → logprob: -2.18800687789917
    4. '_in' → logprob: -2.43800687789917
    5. '_edges' → logprob: -2.68800687789917
    6. '_connected' → logprob: -3.56300687789917
    7. '_sign' → logprob: -3.68800687789917
    8. '_s' → logprob: -4.31300687789917
    9. 's' → logprob: -4.43800687789917
    10. '_deg' → logprob: -4.56300687789917

Token 1968: 'reet' (ID: 5409)
  Prédit: 'reet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reet' → logprob: -0.0017740692710503936
    2. 'ree' → logprob: -6.751773834228516
    3. 're' → logprob: -7.501773834228516
    4. 'r' → logprob: -10.376773834228516
    5. 'reat' → logprob: -11.626773834228516
    6. '_re' → logprob: -13.126773834228516
    7. 'reek' → logprob: -13.251773834228516
    8. 'ret' → logprob: -13.751773834228516
    9. 'reep' → logprob: -14.126773834228516
    10. 'ream' → logprob: -14.251773834228516

Token 1969: '_count' (ID: 7536)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.7157588601112366
    2. ' =' → logprob: -1.4657588005065918
    3. '_count' → logprob: -1.9657588005065918
    4. '_st' → logprob: -3.340758800506592
    5. '_edges' → logprob: -4.215758800506592
    6. '=' → logprob: -4.215758800506592
    7. '_connections' → logprob: -4.215758800506592
    8. '_cnt' → logprob: -4.465758800506592
    9. '_se' → logprob: -4.715758800506592
    10. '_connected' → logprob: -4.840758800506592

Token 1970: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2524458169937134
    2. ' =' → logprob: -1.5024458169937134
    3. '=sum' → logprob: -7.627445697784424
    4. '=len' → logprob: -10.627446174621582
    5. '=s' → logprob: -13.502446174621582
    6. '=int' → logprob: -14.377446174621582
    7. '=count' → logprob: -14.377446174621582
    8. '=edge' → logprob: -15.002446174621582
    9. '=[' → logprob: -15.127446174621582
    10. '=False' → logprob: -15.252446174621582

Token 1971: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014217688702046871
    2. 'sum' → logprob: -4.264217853546143
    3. 'len' → logprob: -9.889217376708984
    4. ' sum' → logprob: -13.014217376708984
    5. '1' → logprob: -14.764217376708984
    6. ' ' → logprob: -15.264217376708984
    7. '   ' → logprob: -16.014217376708984
    8. '[' → logprob: -17.139217376708984
    9. '(sum' → logprob: -17.201717376708984
    10. '```' → logprob: -17.264217376708984

Token 1972: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.30806806683540344
    2. 'for' → logprob: -1.558068037033081
    3. '           ' → logprob: -2.933068037033081
    4. '	for' → logprob: -7.55806827545166
    5. '<|end|>' → logprob: -8.30806827545166
    6. ' s' → logprob: -8.55806827545166
    7. '               ' → logprob: -9.55806827545166
    8. 's' → logprob: -9.55806827545166
    9. '
' → logprob: -9.55806827545166
    10. '<|end|>' → logprob: -10.68306827545166

Token 1973: '           ' (ID: 352)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.24202761054039001
    2. ' for' → logprob: -1.7420276403427124
    3. '           ' → logprob: -3.367027521133423
    4. '
' → logprob: -6.242027759552002
    5. '	for' → logprob: -6.742027759552002
    6. '               ' → logprob: -7.117027759552002
    7. ' ' → logprob: -8.492027282714844
    8. '   ' → logprob: -8.742027282714844
    9. ' s' → logprob: -8.742027282714844
    10. '       ' → logprob: -9.492027282714844

Token 1974: ' e' (ID: 319)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0005155019462108612
    2. ' for' → logprob: -8.250515937805176
    3. '           ' → logprob: -8.375515937805176
    4. 's' → logprob: -10.750515937805176
    5. '```' → logprob: -14.250515937805176
    6. '	for' → logprob: -14.625515937805176
    7. 'For' → logprob: -15.000515937805176
    8. '#' → logprob: -15.500515937805176
    9. 'if' → logprob: -16.50051498413086
    10. '﻿' → logprob: -16.87551498413086

Token 1975: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.0011367622064426541
    2. '_' → logprob: -7.376136779785156
    3. '_segments' → logprob: -8.251136779785156
    4. '=' → logprob: -9.501136779785156
    5. ' =' → logprob: -10.626136779785156
    6. '_count' → logprob: -11.001136779785156
    7. '```' → logprob: -11.126136779785156
    8. ' _' → logprob: -11.501136779785156
    9. '_in' → logprob: -11.626136779785156
    10. '#' → logprob: -11.751136779785156

Token 1976: 'reet' (ID: 5409)
  Prédit: 'reet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reet' → logprob: -1.8193366486229934e-05
    2. 'ree' → logprob: -11.375018119812012
    3. 'reat' → logprob: -12.750018119812012
    4. '_count' → logprob: -13.875018119812012
    5. 'REET' → logprob: -13.875018119812012
    6. 're' → logprob: -14.250018119812012
    7. 'ret' → logprob: -15.750018119812012
    8. 'count' → logprob: -15.875018119812012
    9. 'root' → logprob: -15.875018119812012
    10. 'r' → logprob: -16.125019073486328

Token 1977: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.001955275423824787
    2. '_segments' → logprob: -6.251955509185791
    3. '```' → logprob: -11.501955032348633
    4. '=' → logprob: -12.501955032348633
    5. '_counts' → logprob: -12.626955032348633
    6. '_connections' → logprob: -12.876955032348633
    7. '_' → logprob: -13.626955032348633
    8. '=_' → logprob: -13.626955032348633
    9. 'count' → logprob: -14.251955032348633
    10. 'segments' → logprob: -14.751955032348633

Token 1978: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00026205103495158255
    2. ' =' → logprob: -8.250262260437012
    3. '=s' → logprob: -15.750262260437012
    4. '+=' → logprob: -16.000261306762695
    5. '=
' → logprob: -16.000261306762695
    6. '=len' → logprob: -16.500261306762695
    7. '=[]' → logprob: -16.625261306762695
    8. 's' → logprob: -16.750261306762695
    9. '=int' → logprob: -17.000261306762695
    10. '=[]
' → logprob: -17.625261306762695

Token 1979: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.8206473871250637e-05
    2. 'sum' → logprob: -10.625028610229492
    3. 'len' → logprob: -12.875028610229492
    4. ' ' → logprob: -13.875028610229492
    5. '1' → logprob: -16.937528610229492
    6. '   ' → logprob: -17.062528610229492
    7. ' sum' → logprob: -17.437528610229492
    8. '=' → logprob: -17.812528610229492
    9. '```' → logprob: -18.187528610229492
    10. 'for' → logprob: -18.250028610229492

Token 1980: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10844870656728745
    2. ' for' → logprob: -2.8584487438201904
    3. 'for' → logprob: -3.1084487438201904
    4. '
' → logprob: -7.608448505401611
    5. '   ' → logprob: -9.73344898223877
    6. ' ' → logprob: -10.48344898223877
    7. 's' → logprob: -10.85844898223877
    8. ' =' → logprob: -10.98344898223877
    9. ',' → logprob: -10.98344898223877
    10. '       ' → logprob: -11.10844898223877

Token 1981: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.558353066444397
    2. 'for' → logprob: -1.558353066444397
    3. '           ' → logprob: -2.0583529472351074
    4. '
' → logprob: -3.0583529472351074
    5. ' s' → logprob: -4.433352947235107
    6. '	for' → logprob: -4.808352947235107
    7. '   ' → logprob: -5.058352947235107
    8. '```' → logprob: -5.808352947235107
    9. '       ' → logprob: -5.933352947235107
    10. ' ' → logprob: -6.058352947235107

Token 1982: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00964700523763895
    2. '           ' → logprob: -4.759646892547607
    3. ' for' → logprob: -6.884646892547607
    4. '       ' → logprob: -12.759647369384766
    5. '   ' → logprob: -13.009647369384766
    6. 's' → logprob: -13.759647369384766
    7. '```' → logprob: -14.259647369384766
    8. '	for' → logprob: -14.634647369384766
    9. '
' → logprob: -15.134647369384766
    10. '#' → logprob: -15.384647369384766

Token 1983: ' si' (ID: 1784)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.059465449303388596
    2. 'idx' → logprob: -2.9344654083251953
    3. 'seg' → logprob: -6.059465408325195
    4. 'sid' → logprob: -6.559465408325195
    5. 'j' → logprob: -7.934465408325195
    6. 'i' → logprob: -8.934465408325195
    7. 'si' → logprob: -9.059465408325195
    8. ' s' → logprob: -9.684465408325195
    9. 'adj' → logprob: -10.309465408325195
    10. 'x' → logprob: -10.934465408325195

Token 1984: ' in' (ID: 306)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.21167653799057007
    2. 'x' → logprob: -2.711676597595215
    3. ' in' → logprob: -3.211676597595215
    4. 'n' → logprob: -3.586676597595215
    5. 'd' → logprob: -3.836676597595215
    6. 'idx' → logprob: -4.086676597595215
    7. 'nd' → logprob: -4.711676597595215
    8. 'in' → logprob: -4.961676597595215
    9. 'index' → logprob: -7.336676597595215
    10. 's' → logprob: -7.336676597595215

Token 1985: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.0004141072859056294
    2. 'graph' → logprob: -9.00041389465332
    3. 'se' → logprob: -9.25041389465332
    4. 'sign' → logprob: -9.50041389465332
    5. ' endpoint' → logprob: -10.00041389465332
    6. 'street' → logprob: -10.75041389465332
    7. 'end' → logprob: -11.00041389465332
    8. 'edge' → logprob: -11.37541389465332
    9. '(endpoint' → logprob: -11.75041389465332
    10. 'range' → logprob: -12.12541389465332

Token 1986: '_seg' (ID: 78972)
  Prédit: '_seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seg' → logprob: -0.00213146791793406
    2. 'seg' → logprob: -6.252131462097168
    3. 's' → logprob: -8.627131462097168
    4. '_segments' → logprob: -11.877131462097168
    5. '[s' → logprob: -12.502131462097168
    6. '_s' → logprob: -13.002131462097168
    7. '_sig' → logprob: -13.377131462097168
    8. 'segments' → logprob: -13.627131462097168
    9. 'e' → logprob: -13.752131462097168
    10. '_se' → logprob: -14.127131462097168

Token 1987: '[s' (ID: 24177)
  Prédit: '[s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[s' → logprob: -0.002278007799759507
    2. 's' → logprob: -6.127277851104736
    3. '[e' → logprob: -9.752278327941895
    4. '[' → logprob: -11.377278327941895
    5. 'e' → logprob: -11.752278327941895
    6. '[i' → logprob: -11.877278327941895
    7. '[
' → logprob: -13.002278327941895
    8. '[p' → logprob: -13.252278327941895
    9. '
' → logprob: -14.877278327941895
    10. '[S' → logprob: -15.002278327941895

Token 1988: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.010381581261754036
    2. ']:' → logprob: -4.885381698608398
    3. ':
' → logprob: -6.760381698608398
    4. ':' → logprob: -7.385381698608398
    5. 's' → logprob: -8.260381698608398
    6. '           ' → logprob: -8.760381698608398
    7. ']' → logprob: -8.885381698608398
    8. '       ' → logprob: -9.260381698608398
    9. '[' → logprob: -9.635381698608398
    10. '):
' → logprob: -9.760381698608398

Token 1989: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002515373518690467
    2. '           ' → logprob: -7.2525153160095215
    3. '	           ' → logprob: -8.12751579284668
    4. '<|end|>' → logprob: -8.12751579284668
    5. ' if' → logprob: -8.37751579284668
    6. '[' → logprob: -8.62751579284668
    7. '	       ' → logprob: -8.75251579284668
    8. 'if' → logprob: -9.12751579284668
    9. '   ' → logprob: -9.25251579284668
    10. ':
' → logprob: -9.75251579284668

Token 1990: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5478706359863281
    2. 'if' (adapté à ' if') → logprob: -1.0478706359863281
    3. ' if' → logprob: -2.672870635986328
    4. '   ' → logprob: -7.172870635986328
    5. '                   ' → logprob: -7.922870635986328
    6. '           ' → logprob: -8.047870635986328
    7. '	           ' → logprob: -8.422870635986328
    8. '	if' → logprob: -8.797870635986328
    9. ' ' → logprob: -9.797870635986328
    10. '<|end|>' → logprob: -10.047870635986328

Token 1991: ' si' (ID: 1784)
  Prédit: 'si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'si' → logprob: -6.158350151963532e-05
    2. ' si' → logprob: -10.000061988830566
    3. '(si' → logprob: -11.125061988830566
    4. 's' → logprob: -13.875061988830566
    5. 'se' → logprob: -15.625061988830566
    6. '
' → logprob: -16.12506103515625
    7. '   ' → logprob: -17.50006103515625
    8. 'sign' → logprob: -18.00006103515625
    9. '(' → logprob: -18.12506103515625
    10. '.si' → logprob: -18.37506103515625

Token 1992: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.12707509100437164
    2. ' in' → logprob: -2.1270751953125
    3. 'not' → logprob: -10.1270751953125
    4. '!=' → logprob: -10.2520751953125
    5. ' not' → logprob: -10.8770751953125
    6. '<|end|>' → logprob: -11.1270751953125
    7. '==' → logprob: -12.0020751953125
    8. 's' → logprob: -12.1270751953125
    9. ' !=' → logprob: -12.1270751953125
    10. '[' → logprob: -12.3770751953125

Token 1993: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -2.3557529857498594e-05
    2. ' street' → logprob: -10.75002384185791
    3. 'stre' → logprob: -13.50002384185791
    4. 'sign' → logprob: -14.50002384185791
    5. 'st' → logprob: -17.125022888183594
    6. '   ' → logprob: -17.375022888183594
    7. ' ' → logprob: -17.500022888183594
    8. '.street' → logprob: -17.750022888183594
    9. 'stroke' → logprob: -17.875022888183594
    10. '```' → logprob: -18.875022888183594

Token 1994: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -1.3544423381972592e-05
    2. 'segments' → logprob: -11.25001335144043
    3. 's' → logprob: -15.87501335144043
    4. 'Segments' → logprob: -15.87501335144043
    5. '{' → logprob: -16.00001335144043
    6. '_sequences' → logprob: -17.00001335144043
    7. '```' → logprob: -17.37501335144043
    8. '_' → logprob: -18.62501335144043
    9. '_tokens' → logprob: -18.87501335144043
    10. '{
' → logprob: -19.37501335144043

Token 1995: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.017129680141806602
    2. ':' → logprob: -4.142129898071289
    3. '               ' → logprob: -8.142129898071289
    4. ':s' → logprob: -8.142129898071289
    5. '                   ' → logprob: -8.642129898071289
    6. 'and' → logprob: -9.017129898071289
    7. ' and' → logprob: -9.017129898071289
    8. '):
' → logprob: -10.017129898071289
    9. '           ' → logprob: -10.517129898071289
    10. '                       ' → logprob: -12.142129898071289

Token 1996: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0025829162914305925
    2. 's' → logprob: -6.627583026885986
    3. '               ' → logprob: -7.627583026885986
    4. ' s' → logprob: -8.127582550048828
    5. '                       ' → logprob: -8.752582550048828
    6. ':' → logprob: -9.002582550048828
    7. ':
' → logprob: -9.502582550048828
    8. '                  ' → logprob: -10.127582550048828
    9. '   ' → logprob: -11.127582550048828
    10. '           ' → logprob: -11.252582550048828

Token 1997: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -4.320199877838604e-07
    2. ' s' → logprob: -15.5
    3. '   ' → logprob: -15.875
    4. 'e' → logprob: -16.875
    5. '                   ' → logprob: -18.25
    6. '           ' → logprob: -18.375
    7. '       ' → logprob: -18.625
    8. '+' → logprob: -18.875
    9. '1' → logprob: -19.25
    10. '               ' → logprob: -19.25

Token 1998: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.0003918271977454424
    2. 'st' → logprob: -8.125391960144043
    3. 'St' → logprob: -10.250391960144043
    4. '+=' → logprob: -11.375391960144043
    5. '<|end|>' → logprob: -11.500391960144043
    6. '_s' → logprob: -11.750391960144043
    7. ' +=' → logprob: -12.375391960144043
    8. 's' → logprob: -12.625391960144043
    9. '_' → logprob: -13.000391960144043
    10. '=' → logprob: -13.000391960144043

Token 1999: 'reet' (ID: 5409)
  Prédit: 'reet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reet' → logprob: -0.00023476807109545916
    2. 'ree' → logprob: -8.750234603881836
    3. 're' → logprob: -11.000234603881836
    4. 'reat' → logprob: -11.000234603881836
    5. '_count' → logprob: -11.250234603881836
    6. 'rest' → logprob: -12.375234603881836
    7. 'count' → logprob: -12.500234603881836
    8. 'root' → logprob: -12.625234603881836
    9. '```' → logprob: -12.875234603881836
    10. 'r' → logprob: -13.125234603881836

Token 2000: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.018886588513851166
    2. '+=' → logprob: -4.393886566162109
    3. '_segments' → logprob: -5.518886566162109
    4. 's' → logprob: -6.893886566162109
    5. 'count' → logprob: -7.768886566162109
    6. ' +=' → logprob: -7.893886566162109
    7. '_counts' → logprob: -8.39388656616211
    8. '+' → logprob: -9.26888656616211
    9. '```' → logprob: -9.76888656616211
    10. 'segments' → logprob: -10.51888656616211

Token 2001: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -9.555654105497524e-05
    2. ' +=' → logprob: -9.75009536743164
    3. ']+=' → logprob: -10.37509536743164
    4. '+' → logprob: -12.25009536743164
    5. '+=(' → logprob: -15.00009536743164
    6. '>' → logprob: -15.62509536743164
    7. '+='' → logprob: -15.62509536743164
    8. '+="' → logprob: -15.75009536743164
    9. '=' → logprob: -15.87509536743164
    10. '[' → logprob: -16.50009536743164

Token 2002: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '0' → logprob: -19.875001907348633
    4. '   ' → logprob: -19.875001907348633
    5. 's' → logprob: -20.750001907348633
    6. '+' → logprob: -20.937501907348633
    7. '```' → logprob: -20.937501907348633
    8. '(' → logprob: -21.875001907348633
    9. '2' → logprob: -21.937501907348633
    10. '
' → logprob: -22.000001907348633

Token 2003: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007330929394811392
    2. '
' → logprob: -5.382330894470215
    3. '		' → logprob: -6.757330894470215
    4. 'for' → logprob: -7.757330894470215
    5. '            
' → logprob: -7.757330894470215
    6. ' for' → logprob: -9.257330894470215
    7. ' 
' → logprob: -9.632330894470215
    8. '<|end|>' → logprob: -9.632330894470215
    9. '    
' → logprob: -9.757330894470215
    10. '	
' → logprob: -9.882330894470215

Token 2004: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001289640087634325
    2. 'for' → logprob: -7.0012898445129395
    3. ' for' → logprob: -8.251289367675781
    4. '		' → logprob: -9.626289367675781
    5. '	for' → logprob: -11.751289367675781
    6. '               ' → logprob: -11.876289367675781
    7. '	       ' → logprob: -11.876289367675781
    8. '<|end|>' → logprob: -12.501289367675781
    9. '       ' → logprob: -12.626289367675781
    10. 'For' → logprob: -12.751289367675781

Token 2005: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0026661460287868977
    2. '           ' → logprob: -6.877665996551514
    3. ' for' → logprob: -7.002665996551514
    4. 'e' → logprob: -7.252665996551514
    5. 'For' → logprob: -11.377666473388672
    6. '       ' → logprob: -13.377666473388672
    7. ' ' → logprob: -15.002666473388672
    8. '```' → logprob: -15.752666473388672
    9. '   ' → logprob: -15.877666473388672
    10. ' e' → logprob: -16.002666473388672

Token 2006: ' si' (ID: 1784)
  Prédit: 'si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'si' → logprob: -0.4576081335544586
    2. 'endpoint' → logprob: -1.2076081037521362
    3. 'ei' → logprob: -2.707608222961426
    4. 'se' → logprob: -6.957608222961426
    5. 'e' → logprob: -8.082608222961426
    6. ' si' → logprob: -9.082608222961426
    7. ' endpoint' → logprob: -9.707608222961426
    8. ' ei' → logprob: -10.082608222961426
    9. 'i' → logprob: -10.207608222961426
    10. '
' → logprob: -10.332608222961426

Token 2007: ' in' (ID: 306)
  Prédit: '[e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.012202451936900616
    2. 'e' → logprob: -4.512202262878418
    3. '(e' → logprob: -7.637202262878418
    4. ' e' → logprob: -8.387202262878418
    5. 'endpoint' → logprob: -8.387202262878418
    6. '[' → logprob: -9.887202262878418
    7. '           ' → logprob: -10.262202262878418
    8. '   ' → logprob: -10.887202262878418
    9. '=e' → logprob: -11.137202262878418
    10. ' ' → logprob: -11.512202262878418

Token 2008: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.00023238400171976537
    2. 'e' → logprob: -8.375232696533203
    3. ' endpoint' → logprob: -13.500232696533203
    4. '(endpoint' → logprob: -15.875232696533203
    5. '
' → logprob: -16.250232696533203
    6. '.endpoint' → logprob: -17.500232696533203
    7. '   ' → logprob: -17.625232696533203
    8. '           ' → logprob: -17.625232696533203
    9. '{' → logprob: -18.125232696533203
    10. '[e' → logprob: -18.375232696533203

Token 2009: '_seg' (ID: 78972)
  Prédit: '_seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seg' → logprob: -0.16319702565670013
    2. '[e' → logprob: -2.2881970405578613
    3. 'e' → logprob: -3.6631970405578613
    4. 'seg' → logprob: -3.7881970405578613
    5. '(e' → logprob: -9.038196563720703
    6. '
' → logprob: -9.413196563720703
    7. '_sig' → logprob: -9.538196563720703
    8. '_e' → logprob: -9.913196563720703
    9. '[' → logprob: -9.913196563720703
    10. 's' → logprob: -10.288196563720703

Token 2010: '[e' (ID: 51414)
  Prédit: '[e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[e' → logprob: -0.011096746660768986
    2. 'e' → logprob: -4.511096954345703
    3. '
' → logprob: -10.886096954345703
    4. '[
' → logprob: -11.136096954345703
    5. '[' → logprob: -12.261096954345703
    6. '(e' → logprob: -12.886096954345703
    7. ' [' → logprob: -13.386096954345703
    8. '`' → logprob: -13.886096954345703
    9. '[s' → logprob: -14.011096954345703
    10. '	e' → logprob: -14.136096954345703

Token 2011: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.022788461297750473
    2. ':
' → logprob: -4.0227885246276855
    3. ':' → logprob: -6.1477885246276855
    4. ']:' → logprob: -6.7727885246276855
    5. '               ' → logprob: -8.022788047790527
    6. '):
' → logprob: -8.397788047790527
    7. '           ' → logprob: -8.522788047790527
    8. 's' → logprob: -8.647788047790527
    9. ']' → logprob: -9.272788047790527
    10. '():
' → logprob: -9.772788047790527

Token 2012: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00023917861108202487
    2. '           ' → logprob: -8.875239372253418
    3. 'if' → logprob: -10.750239372253418
    4. ' if' → logprob: -11.375239372253418
    5. '```' → logprob: -11.750239372253418
    6. '	           ' → logprob: -11.875239372253418
    7. '		       ' → logprob: -12.000239372253418
    8. '                   ' → logprob: -12.125239372253418
    9. '   ' → logprob: -12.250239372253418
    10. '{
' → logprob: -12.375239372253418

Token 2013: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.02074742130935192
    2. ' if' → logprob: -4.145747184753418
    3. '               ' → logprob: -5.395747184753418
    4. '           ' → logprob: -9.395747184753418
    5. '                   ' → logprob: -10.645747184753418
    6. 'If' → logprob: -10.645747184753418
    7. '```' → logprob: -11.145747184753418
    8. ' si' → logprob: -12.270747184753418
    9. '1' → logprob: -12.395747184753418
    10. 'si' → logprob: -13.395747184753418

Token 2014: ' si' (ID: 1784)
  Prédit: 'si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'si' → logprob: -0.00033713103039190173
    2. ' si' → logprob: -8.000337600708008
    3. '(si' → logprob: -13.375337600708008
    4. 's' → logprob: -16.250337600708008
    5. 'i' → logprob: -17.000337600708008
    6. '
' → logprob: -18.000337600708008
    7. '   ' → logprob: -18.625337600708008
    8. 'se' → logprob: -19.250337600708008
    9. 'e' → logprob: -19.250337600708008
    10. '.si' → logprob: -19.375337600708008

Token 2015: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6931517124176025
    2. ' in' → logprob: -0.6931517124176025
    3. '<|end|>' → logprob: -14.193151473999023
    4. '   ' → logprob: -14.443151473999023
    5. '           ' → logprob: -14.443151473999023
    6. ' ' → logprob: -14.443151473999023
    7. '_in' → logprob: -14.943151473999023
    8. '                   ' → logprob: -15.568151473999023
    9. '<|end|>' → logprob: -15.568151473999023
    10. 'In' → logprob: -15.693151473999023

Token 2016: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.000789259618613869
    2. ' street' → logprob: -7.250789165496826
    3. 'sign' → logprob: -9.500789642333984
    4. 'stre' → logprob: -13.375789642333984
    5. ' ' → logprob: -13.500789642333984
    6. '   ' → logprob: -14.500789642333984
    7. 'stroke' → logprob: -15.750789642333984
    8. '
' → logprob: -16.000789642333984
    9. 'st' → logprob: -16.125789642333984
    10. '.street' → logprob: -16.375789642333984

Token 2017: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.0017469348385930061
    2. 'segments' → logprob: -6.376747131347656
    3. 'Segments' → logprob: -11.376747131347656
    4. 's' → logprob: -11.626747131347656
    5. 'i' → logprob: -12.626747131347656
    6. '```' → logprob: -12.626747131347656
    7. '_sign' → logprob: -12.751747131347656
    8. 'sign' → logprob: -13.126747131347656
    9. '[' → logprob: -13.376747131347656
    10. '{' → logprob: -13.626747131347656

Token 2018: ':
' (ID: 734)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.6912768483161926
    2. ':
' → logprob: -1.3162767887115479
    3. ':' → logprob: -1.5662767887115479
    4. '               ' → logprob: -4.566277027130127
    5. ']+=' → logprob: -5.941277027130127
    6. '           ' → logprob: -6.191277027130127
    7. '                   ' → logprob: -6.191277027130127
    8. ' +=' → logprob: -6.441277027130127
    9. '+' → logprob: -6.566277027130127
    10. '>=' → logprob: -7.566277027130127

Token 2019: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04926597326993942
    2. '               ' → logprob: -3.0492658615112305
    3. 'e' → logprob: -9.04926586151123
    4. '                       ' → logprob: -9.17426586151123
    5. '           ' → logprob: -9.29926586151123
    6. '                  ' → logprob: -9.54926586151123
    7. '+=' → logprob: -9.67426586151123
    8. '>' → logprob: -9.67426586151123
    9. 's' → logprob: -10.42426586151123
    10. '                ' → logprob: -10.67426586151123

Token 2020: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' (adapté à ' e') → logprob: -0.00013440960901789367
    2. ' e' → logprob: -9.250134468078613
    3. 's' → logprob: -10.500134468078613
    4. '                   ' → logprob: -13.000134468078613
    5. '           ' → logprob: -13.000134468078613
    6. '   ' → logprob: -13.125134468078613
    7. '0' → logprob: -13.375134468078613
    8. '1' → logprob: -14.375134468078613
    9. '               ' → logprob: -14.375134468078613
    10. '       ' → logprob: -14.875134468078613

Token 2021: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -1.0325924449716695e-05
    2. '_sign' → logprob: -12.12501049041748
    3. 'e' → logprob: -13.87501049041748
    4. 'st' → logprob: -13.87501049041748
    5. '_count' → logprob: -14.37501049041748
    6. '+' → logprob: -14.75001049041748
    7. '```' → logprob: -15.12501049041748
    8. '_' → logprob: -15.75001049041748
    9. '_s' → logprob: -15.87501049041748
    10. '=' → logprob: -15.87501049041748

Token 2022: 'reet' (ID: 5409)
  Prédit: 'reet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reet' → logprob: -0.11601056158542633
    2. '_st' → logprob: -2.8660106658935547
    3. '_count' → logprob: -2.9910106658935547
    4. 't' → logprob: -6.616010665893555
    5. 'reat' → logprob: -7.616010665893555
    6. 're' → logprob: -8.491010665893555
    7. 'ree' → logprob: -8.866010665893555
    8. 'tre' → logprob: -9.616010665893555
    9. 'count' → logprob: -10.366010665893555
    10. 'st' → logprob: -10.741010665893555

Token 2023: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.3425219549390022e-05
    2. 'count' → logprob: -11.50001335144043
    3. '_segments' → logprob: -14.25001335144043
    4. '_counts' → logprob: -14.62501335144043
    5. '```' → logprob: -14.62501335144043
    6. '   ' → logprob: -15.12501335144043
    7. '_c' → logprob: -15.75001335144043
    8. '_' → logprob: -15.75001335144043
    9. 's' → logprob: -16.12501335144043
    10. 'Count' → logprob: -16.12501335144043

Token 2024: '+=' (ID: 18287)
  Prédit: '+='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0010609137825667858
    2. '=' → logprob: -6.876060962677002
    3. '+' → logprob: -11.001060485839844
    4. '0' → logprob: -12.126060485839844
    5. ' +=' → logprob: -13.001060485839844
    6. '==' → logprob: -13.251060485839844
    7. ']+=' → logprob: -13.501060485839844
    8. '-=' → logprob: -15.876060485839844
    9. '>' → logprob: -16.251060485839844
    10. '```' → logprob: -16.376060485839844

Token 2025: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029761141166090965
    2. '0' → logprob: -3.5297610759735107
    3. ' ' → logprob: -11.52976131439209
    4. 'e' → logprob: -14.65476131439209
    5. ')' → logprob: -16.029760360717773
    6. '<|end|>' → logprob: -16.654760360717773
    7. '   ' → logprob: -16.779760360717773
    8. '
' → logprob: -16.904760360717773
    9. '```' → logprob: -17.154760360717773
    10. 's' → logprob: -17.654760360717773

Token 2026: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06474681943655014
    2. '
' → logprob: -2.814746856689453
    3. '<|end|>' → logprob: -6.314746856689453
    4. '#' → logprob: -8.189746856689453
    5. '<|end|>' → logprob: -8.564746856689453
    6. '       ' → logprob: -9.064746856689453
    7. ',' → logprob: -9.564746856689453
    8. '            
' → logprob: -10.314746856689453
    9. '   ' → logprob: -10.564746856689453
    10. ',
' → logprob: -10.689746856689453

Token 2027: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14214684069156647
    2. '
' → logprob: -2.1421468257904053
    3. ' if' → logprob: -5.267147064208984
    4. '```' → logprob: -5.642147064208984
    5. 'if' → logprob: -6.517147064208984
    6. '       ' → logprob: -6.767147064208984
    7. '		' → logprob: -7.392147064208984
    8. '	if' → logprob: -7.642147064208984
    9. '\t' → logprob: -7.892147064208984
    10. '[' → logprob: -8.017147064208984

Token 2028: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3576831817626953
    2. ' if' → logprob: -1.7326831817626953
    3. '           ' → logprob: -2.1076831817626953
    4. 'i' → logprob: -6.607683181762695
    5. 'touch' → logprob: -8.357683181762695
    6. 't' → logprob: -8.732683181762695
    7. '```' → logprob: -8.732683181762695
    8. '	if' → logprob: -9.482683181762695
    9. '       ' → logprob: -9.607683181762695
    10. '#' → logprob: -9.732683181762695

Token 2029: ' s' (ID: 265)
  Prédit: ' s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' s' → logprob: -0.3868914544582367
    2. 's' → logprob: -1.136891484260559
    3. '   ' → logprob: -11.38689136505127
    4. '(s' → logprob: -12.38689136505127
    5. '    ' → logprob: -13.13689136505127
    6. '	s' → logprob: -13.63689136505127
    7. 'e' → logprob: -15.01189136505127
    8. '           ' → logprob: -15.51189136505127
    9. '       ' → logprob: -15.63689136505127
    10. '     ' → logprob: -15.76189136505127

Token 2030: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.017901625484228134
    2. '_' → logprob: -4.142901420593262
    3. ' _' → logprob: -7.517901420593262
    4. '==' → logprob: -8.267901420593262
    5. '_in' → logprob: -8.642901420593262
    6. ' ==' → logprob: -8.767901420593262
    7. '```' → logprob: -9.142901420593262
    8. '<|end|>' → logprob: -9.517901420593262
    9. '[' → logprob: -9.892901420593262
    10. ',' → logprob: -10.017901420593262

Token 2031: 'reet' (ID: 5409)
  Prédit: 'reet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reet' → logprob: -9.65101717156358e-05
    2. 'r' → logprob: -10.750096321105957
    3. 't' → logprob: -10.750096321105957
    4. 'reat' → logprob: -11.125096321105957
    5. 're' → logprob: -11.250096321105957
    6. 'tre' → logprob: -11.625096321105957
    7. 'ree' → logprob: -11.625096321105957
    8. '_count' → logprob: -12.875096321105957
    9. 'ret' → logprob: -13.750096321105957
    10. 'e' → logprob: -14.250096321105957

Token 2032: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0005413581384345889
    2. '==' → logprob: -8.250541687011719
    3. '_' → logprob: -9.125541687011719
    4. '_counts' → logprob: -9.750541687011719
    5. '```' → logprob: -10.500541687011719
    6. '_segments' → logprob: -11.125541687011719
    7. 'count' → logprob: -11.375541687011719
    8. '!=' → logprob: -11.750541687011719
    9. 's' → logprob: -11.875541687011719
    10. ' ==' → logprob: -12.250541687011719

Token 2033: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09382022172212601
    2. ' ==' → logprob: -2.468820333480835
    3. '>' → logprob: -6.218820095062256
    4. '!=' → logprob: -6.343820095062256
    5. ' !=' → logprob: -7.343820095062256
    6. ' >' → logprob: -8.093820571899414
    7. '<' → logprob: -9.968820571899414
    8. '1' → logprob: -10.218820571899414
    9. ' <' → logprob: -10.468820571899414
    10. '==
' → logprob: -10.718820571899414

Token 2034: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. '0' → logprob: -13.750001907348633
    3. ' ' → logprob: -13.875001907348633
    4. '   ' → logprob: -16.500001907348633
    5. 'exact' → logprob: -17.375001907348633
    6. '<|end|>' → logprob: -18.062501907348633
    7. '<|end|>' → logprob: -18.062501907348633
    8. '>' → logprob: -18.375001907348633
    9. '```' → logprob: -18.625001907348633
    10. '۱' → logprob: -18.937501907348633

Token 2035: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5732572674751282
    2. ':' → logprob: -1.0732572078704834
    3. 'and' → logprob: -2.9482572078704834
    4. ':
' → logprob: -3.1982572078704834
    5. '           ' → logprob: -7.1982574462890625
    6. '<|end|>' → logprob: -9.073257446289062
    7. ' or' → logprob: -9.198257446289062
    8. ',' → logprob: -10.073257446289062
    9. '       ' → logprob: -10.323257446289062
    10. '.' → logprob: -10.823257446289062

Token 2036: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.5760778188705444
    2. 'e' → logprob: -0.8260778188705444
    3. ' ' → logprob: -10.326077461242676
    4. '(e' → logprob: -10.451077461242676
    5. ' (' → logprob: -10.826077461242676
    6. '   ' → logprob: -11.201077461242676
    7. '(' → logprob: -11.326077461242676
    8. ' not' → logprob: -11.826077461242676
    9. ' s' → logprob: -12.701077461242676
    10. 's' → logprob: -12.701077461242676

Token 2037: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -2.856408536899835e-05
    2. '_' → logprob: -10.875028610229492
    3. 'st' → logprob: -12.250028610229492
    4. '_s' → logprob: -13.250028610229492
    5. '<|end|>' → logprob: -14.375028610229492
    6. '_sign' → logprob: -15.125028610229492
    7. '_ST' → logprob: -15.125028610229492
    8. '	st' → logprob: -15.125028610229492
    9. '```' → logprob: -15.125028610229492
    10. 'St' → logprob: -15.625028610229492

Token 2038: 'reet' (ID: 5409)
  Prédit: 'reet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reet' → logprob: -0.0006990921101532876
    2. '_st' → logprob: -8.125699043273926
    3. 'reat' → logprob: -8.750699043273926
    4. 're' → logprob: -9.375699043273926
    5. 'ree' → logprob: -10.375699043273926
    6. 'rest' → logprob: -10.375699043273926
    7. 'tre' → logprob: -10.500699043273926
    8. '_re' → logprob: -10.750699043273926
    9. 't' → logprob: -11.125699043273926
    10. '_count' → logprob: -11.625699043273926

Token 2039: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00016504127415828407
    2. 'count' → logprob: -8.750164985656738
    3. '==' → logprob: -13.500164985656738
    4. 'Count' → logprob: -13.750164985656738
    5. '```' → logprob: -14.000164985656738
    6. '
' → logprob: -14.375164985656738
    7. '_' → logprob: -15.000164985656738
    8. '=' → logprob: -15.500164985656738
    9. '>' → logprob: -15.500164985656738
    10. 's' → logprob: -15.625164985656738

Token 2040: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00015205175441224128
    2. '0' → logprob: -9.125151634216309
    3. ' ==' → logprob: -10.250151634216309
    4. '=' → logprob: -12.000151634216309
    5. '==
' → logprob: -14.125151634216309
    6. '```' → logprob: -14.750151634216309
    7. ']==' → logprob: -15.500151634216309
    8. '===' → logprob: -16.500152587890625
    9. ')==' → logprob: -16.500152587890625
    10. '!=' → logprob: -17.000152587890625

Token 2041: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '1' → logprob: -16.0
    4. '```' → logprob: -17.25
    5. '   ' → logprob: -17.9375
    6. '
' → logprob: -17.9375
    7. '۰' → logprob: -18.3125
    8. '=' → logprob: -19.4375
    9. '０' → logprob: -19.5
    10. '2' → logprob: -20.0625

Token 2042: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12716107070446014
    2. ':
' → logprob: -2.1271610260009766
    3. ' and' → logprob: -9.252161026000977
    4. '           ' → logprob: -9.877161026000977
    5. '               ' → logprob: -10.002161026000977
    6. ':

' → logprob: -11.502161026000977
    7. '):
' → logprob: -11.627161026000977
    8. '.' → logprob: -12.377161026000977
    9. '):' → logprob: -12.502161026000977
    10. ',' → logprob: -12.627161026000977

Token 2043: '               ' (ID: 506)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6572349667549133
    2. '               ' → logprob: -1.0322349071502686
    3. '           ' → logprob: -2.5322349071502686
    4. ':
' → logprob: -3.4072349071502686
    5. ',' → logprob: -4.782235145568848
    6. ' and' → logprob: -6.907235145568848
    7. '       ' → logprob: -6.907235145568848
    8. '.' → logprob: -7.282235145568848
    9. '):
' → logprob: -8.407235145568848
    10. '   ' → logprob: -8.907235145568848

Token 2044: ' touch' (ID: 7381)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' (adapté à ' touch') → logprob: -0.039381567388772964
    2. ' touch' → logprob: -3.539381504058838
    3. ' touching' → logprob: -5.164381504058838
    4. 't' → logprob: -6.539381504058838
    5. 'p' → logprob: -7.164381504058838
    6. 'tp' → logprob: -7.914381504058838
    7. ' tp' → logprob: -8.414381980895996
    8. 'sign' → logprob: -8.789381980895996
    9. '       ' → logprob: -9.039381980895996
    10. '   ' → logprob: -9.164381980895996

Token 2045: ' =' (ID: 314)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.13186629116535187
    2. 'point' → logprob: -2.631866216659546
    3. '_p' → logprob: -3.756866216659546
    4. 'ing' → logprob: -4.506866455078125
    5. ' =' → logprob: -5.006866455078125
    6. '_' → logprob: -5.381866455078125
    7. '=' → logprob: -5.756866455078125
    8. 'p' → logprob: -6.631866455078125
    9. 'ed' → logprob: -7.506866455078125
    10. 's' → logprob: -7.881866455078125

Token 2046: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0003802680876106024
    2. ' s' → logprob: -7.875380039215088
    3. '{s' → logprob: -16.87537956237793
    4. '   ' → logprob: -17.00037956237793
    5. '(s' → logprob: -17.62537956237793
    6. '	s' → logprob: -18.12537956237793
    7. '[s' → logprob: -18.37537956237793
    8. '_s' → logprob: -18.75037956237793
    9. '`s' → logprob: -19.37537956237793
    10. '[' → logprob: -20.37537956237793

Token 2047: '
' (ID: 198)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.7983006238937378
    2. 'else' → logprob: -0.9233006238937378
    3. '
' → logprob: -2.2983007431030273
    4. '           ' → logprob: -3.1733007431030273
    5. 'elif' → logprob: -5.548300743103027
    6. '<|end|>' → logprob: -5.798300743103027
    7. ' elif' → logprob: -7.173300743103027
    8. '            
' → logprob: -7.548300743103027
    9. '       ' → logprob: -8.048300743103027
    10. ';' → logprob: -8.173300743103027

Token 2048: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.38801708817481995
    2. '
' → logprob: -2.013017177581787
    3. '           ' → logprob: -2.888017177581787
    4. 'else' → logprob: -3.013017177581787
    5. ' else' → logprob: -3.388017177581787
    6. ',' → logprob: -3.888017177581787
    7. '                
' → logprob: -4.763017177581787
    8. ',
' → logprob: -5.388017177581787
    9. '<|end|>' → logprob: -5.638017177581787
    10. 'elif' → logprob: -6.388017177581787

Token 2049: ' open' (ID: 2494)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.020787928253412247
    2. ' e' → logprob: -4.395787715911865
    3. 'open' (adapté à ' open') → logprob: -5.895787715911865
    4. 'sign' → logprob: -6.395787715911865
    5. 'touch' → logprob: -6.895787715911865
    6. '           ' → logprob: -7.895787715911865
    7. '               ' → logprob: -8.020788192749023
    8. ' sign' → logprob: -8.020788192749023
    9. '   ' → logprob: -8.395788192749023
    10. '       ' → logprob: -8.395788192749023

Token 2050: '_end' (ID: 13707)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6715070009231567
    2. '_endpoint' → logprob: -1.6715070009231567
    3. ' =' → logprob: -2.046506881713867
    4. '=' → logprob: -2.421506881713867
    5. 'endpoint' → logprob: -3.046506881713867
    6. ' ' → logprob: -5.046506881713867
    7. 'point' → logprob: -5.171506881713867
    8. '_end' → logprob: -5.171506881713867
    9. 'end' → logprob: -5.296506881713867
    10. '_point' → logprob: -5.671506881713867

Token 2051: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.14297908544540405
    2. '=' → logprob: -2.017979145050049
    3. '<|end|>' → logprob: -9.14297866821289
    4. ')' → logprob: -9.76797866821289
    5. '=e' → logprob: -10.14297866821289
    6. ' ' → logprob: -10.51797866821289
    7. '_' → logprob: -11.76797866821289
    8. '=end' → logprob: -11.89297866821289
    9. '=True' → logprob: -12.26797866821289
    10. '```' → logprob: -12.26797866821289

Token 2052: ' e' (ID: 319)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.5759400129318237
    2. ' e' → logprob: -0.8259400129318237
    3. '(e' → logprob: -15.325940132141113
    4. ''e' → logprob: -16.450939178466797
    5. '	e' → logprob: -16.700939178466797
    6. ' ' → logprob: -16.700939178466797
    7. '(' → logprob: -17.575939178466797
    8. '   ' → logprob: -17.825939178466797
    9. ' (' → logprob: -17.825939178466797
    10. '_e' → logprob: -18.200939178466797

Token 2053: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03068777732551098
    2. 'else' → logprob: -3.7806878089904785
    3. ' else' → logprob: -6.0306878089904785
    4. '
' → logprob: -6.0306878089904785
    5. 'elif' → logprob: -6.5306878089904785
    6. '<|end|>' → logprob: -7.6556878089904785
    7. '       ' → logprob: -8.65568733215332
    8. '            
' → logprob: -8.90568733215332
    9. '               ' → logprob: -9.15568733215332
    10. '#' → logprob: -10.28068733215332

Token 2054: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005210632458329201
    2. 'else' → logprob: -6.0052103996276855
    3. 'elif' → logprob: -6.0052103996276855
    4. ' else' → logprob: -8.755210876464844
    5. ' elif' → logprob: -10.255210876464844
    6. '
' → logprob: -10.880210876464844
    7. '               ' → logprob: -11.255210876464844
    8. '       ' → logprob: -12.130210876464844
    9. '	       ' → logprob: -12.255210876464844
    10. '            
' → logprob: -12.255210876464844

Token 2055: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.16262982785701752
    2. '           ' → logprob: -1.9126298427581787
    3. 'elif' (adapté à ' elif') → logprob: -6.1626296043396
    4. ' else' → logprob: -8.162630081176758
    5. '       ' → logprob: -11.787630081176758
    6. ' elif' → logprob: -13.037630081176758
    7. '		' → logprob: -14.662630081176758
    8. '	else' → logprob: -15.412630081176758
    9. '   ' → logprob: -15.787630081176758
    10. '	       ' → logprob: -16.162630081176758

Token 2056: ' e' (ID: 319)
  Prédit: ' e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' e' → logprob: -0.07889385521411896
    2. 'e' → logprob: -2.5788938999176025
    3. 's' → logprob: -13.328893661499023
    4. ' s' → logprob: -13.703893661499023
    5. '   ' → logprob: -14.203893661499023
    6. '	e' → logprob: -15.453893661499023
    7. '(e' → logprob: -15.578893661499023
    8. '_e' → logprob: -16.578893661499023
    9. ' ' → logprob: -16.828893661499023
    10. ' not' → logprob: -17.203893661499023

Token 2057: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -2.081584716506768e-05
    2. '_' → logprob: -11.500020980834961
    3. '_s' → logprob: -12.125020980834961
    4. '```' → logprob: -13.125020980834961
    5. '_ST' → logprob: -14.125020980834961
    6. 'e' → logprob: -14.250020980834961
    7. '[' → logprob: -14.625020980834961
    8. ''_' → logprob: -15.625020980834961
    9. ')_' → logprob: -15.750020980834961
    10. '"_' → logprob: -16.25002098083496

Token 2058: 'reet' (ID: 5409)
  Prédit: '_st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.03971754387021065
    2. 'reet' → logprob: -3.289717435836792
    3. 't' → logprob: -7.039717674255371
    4. 'tre' → logprob: -7.414717674255371
    5. 'street' → logprob: -9.414717674255371
    6. '_t' → logprob: -9.789717674255371
    7. 'st' → logprob: -10.164717674255371
    8. 'reat' → logprob: -12.039717674255371
    9. '_count' → logprob: -12.664717674255371
    10. 'ree' → logprob: -13.414717674255371

Token 2059: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00014847563579678535
    2. 'count' → logprob: -9.25014877319336
    3. '_st' → logprob: -10.00014877319336
    4. '_segments' → logprob: -12.87514877319336
    5. '```' → logprob: -13.37514877319336
    6. '==' → logprob: -14.50014877319336
    7. '_counts' → logprob: -14.50014877319336
    8. '_end' → logprob: -15.25014877319336
    9. 'st' → logprob: -15.50014877319336
    10. '[' → logprob: -15.50014877319336

Token 2060: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.3856492842023727e-06
    2. ' ==' → logprob: -13.625000953674316
    3. '==
' → logprob: -16.250001907348633
    4. ']==' → logprob: -17.500001907348633
    5. '```' → logprob: -17.625001907348633
    6. '=' → logprob: -18.375001907348633
    7. '===' → logprob: -18.875001907348633
    8. '()==' → logprob: -19.250001907348633
    9. ')==' → logprob: -20.625001907348633
    10. '==-' → logprob: -21.000001907348633

Token 2061: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.107425062713446e-06
    2. '0' → logprob: -12.000006675720215
    3. ' ' → logprob: -14.500006675720215
    4. '```' → logprob: -15.625006675720215
    5. '<|end|>' → logprob: -16.00000762939453
    6. 's' → logprob: -16.75000762939453
    7. '
' → logprob: -17.87500762939453
    8. '   ' → logprob: -18.37500762939453
    9. '<|end|>' → logprob: -18.93750762939453
    10. '[' → logprob: -19.06250762939453

Token 2062: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0562300831079483
    2. ':
' → logprob: -3.056230068206787
    3. ' and' → logprob: -5.431230068206787
    4. 'and' → logprob: -5.931230068206787
    5. '<|end|>' → logprob: -9.181230545043945
    6. ')' → logprob: -9.306230545043945
    7. ' :' → logprob: -9.556230545043945
    8. '[' → logprob: -9.681230545043945
    9. '.' → logprob: -9.806230545043945
    10. ',' → logprob: -10.056230545043945

Token 2063: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.20141363143920898
    2. ' s' → logprob: -1.701413631439209
    3. '_s' → logprob: -15.826414108276367
    4. '	s' → logprob: -15.951414108276367
    5. ' ' → logprob: -17.201414108276367
    6. ' ' → logprob: -17.951414108276367
    7. '<|end|>' → logprob: -18.701414108276367
    8. '<s' → logprob: -18.826414108276367
    9. 'open' → logprob: -18.826414108276367
    10. ' open' → logprob: -18.826414108276367

Token 2064: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.00014764121442567557
    2. '_' → logprob: -9.125147819519043
    3. '_s' → logprob: -10.250147819519043
    4. '```' → logprob: -13.750147819519043
    5. '==' → logprob: -14.000147819519043
    6. '_ST' → logprob: -14.625147819519043
    7. 'st' → logprob: -16.000146865844727
    8. '_sta' → logprob: -16.250146865844727
    9. '_open' → logprob: -16.500146865844727
    10. '_end' → logprob: -16.625146865844727

Token 2065: 'reet' (ID: 5409)
  Prédit: 'reet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reet' → logprob: -0.00011331788846291602
    2. 'ree' → logprob: -10.250113487243652
    3. 'reat' → logprob: -10.250113487243652
    4. 'rest' → logprob: -11.750113487243652
    5. 're' → logprob: -12.000113487243652
    6. 'tre' → logprob: -12.375113487243652
    7. 'r' → logprob: -12.375113487243652
    8. 't' → logprob: -12.500113487243652
    9. '_count' → logprob: -12.625113487243652
    10. '_re' → logprob: -12.875113487243652

Token 2066: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00010521204239921644
    2. 'count' → logprob: -9.250104904174805
    3. '==' → logprob: -11.875104904174805
    4. '!=' → logprob: -14.875104904174805
    5. '```' → logprob: -15.375104904174805
    6. '_st' → logprob: -15.500104904174805
    7. 'e' → logprob: -15.750104904174805
    8. '=' → logprob: -16.000104904174805
    9. '_c' → logprob: -16.125104904174805
    10. '_' → logprob: -16.250104904174805

Token 2067: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -1.0280383548888494e-06
    2. '=' → logprob: -15.000000953674316
    3. ' ==' → logprob: -15.000000953674316
    4. '==
' → logprob: -15.250000953674316
    5. ']==' → logprob: -18.750001907348633
    6. '```' → logprob: -18.875001907348633
    7. '==-' → logprob: -19.000001907348633
    8. '0' → logprob: -19.625001907348633
    9. ')==' → logprob: -20.250001907348633
    10. '()==' → logprob: -20.750001907348633

Token 2068: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.3856492842023727e-06
    2. '1' → logprob: -13.625000953674316
    3. ' ' → logprob: -16.875001907348633
    4. '```' → logprob: -18.000001907348633
    5. 's' → logprob: -19.625001907348633
    6. '   ' → logprob: -19.875001907348633
    7. '`' → logprob: -20.875001907348633
    8. '۰' → logprob: -21.125001907348633
    9. '
' → logprob: -21.500001907348633
    10. '2' → logprob: -21.625001907348633

Token 2069: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6326583623886108
    2. ':' → logprob: -0.7576583623886108
    3. '               ' → logprob: -10.507658004760742
    4. ':

' → logprob: -11.507658004760742
    5. '):
' → logprob: -12.132658004760742
    6. ':
' → logprob: -12.382658004760742
    7. '           ' → logprob: -12.632658004760742
    8. ',' → logprob: -12.757658004760742
    9. '=' → logprob: -13.007658004760742
    10. ')' → logprob: -14.382658004760742

Token 2070: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5407800674438477
    2. ':' → logprob: -1.0407800674438477
    3. ':
' → logprob: -2.7907800674438477
    4. '           ' → logprob: -6.290780067443848
    5. '{' → logprob: -7.915780067443848
    6. '<|end|>' → logprob: -8.040780067443848
    7. '              ' → logprob: -9.290780067443848
    8. '       ' → logprob: -9.790780067443848
    9. '			' → logprob: -9.915780067443848
    10. '            ' → logprob: -10.040780067443848

Token 2071: ' touch' (ID: 7381)
  Prédit: ' touch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' touch' → logprob: -0.6491096019744873
    2. 'touch' (adapté à ' touch') → logprob: -0.7741096019744873
    3. ' open' → logprob: -4.899109840393066
    4. 'open' → logprob: -4.899109840393066
    5. '_touch' → logprob: -7.149109840393066
    6. '               ' → logprob: -7.524109840393066
    7. '           ' → logprob: -9.649109840393066
    8. 't' → logprob: -10.524109840393066
    9. ' touche' → logprob: -11.524109840393066
    10. '.touch' → logprob: -11.649109840393066

Token 2072: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142309367656708
    2. '=' → logprob: -1.7014230489730835
    3. '=e' → logprob: -12.326422691345215
    4. ' ' → logprob: -12.826422691345215
    5. '<|end|>' → logprob: -14.076422691345215
    6. '=end' → logprob: -14.951422691345215
    7. '_' → logprob: -15.076422691345215
    8. ',' → logprob: -15.201422691345215
    9. ' =
' → logprob: -15.326422691345215
    10. ' ' → logprob: -15.826422691345215

Token 2073: ' e' (ID: 319)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07020606845617294
    2. 'e' → logprob: -3.0702061653137207
    3. ' s' → logprob: -3.9452061653137207
    4. ' e' → logprob: -6.195206165313721
    5. ' ' → logprob: -17.070205688476562
    6. '	s' → logprob: -17.195205688476562
    7. 't' → logprob: -17.570205688476562
    8. 'f' → logprob: -17.695205688476562
    9. 'o' → logprob: -17.945205688476562
    10. '_s' → logprob: -17.945205688476562

Token 2074: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2075: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16720415651798248
    2. '           ' → logprob: -2.6672041416168213
    3. '<|end|>' → logprob: -3.1672041416168213
    4. 'else' → logprob: -4.0422043800354
    5. ' else' → logprob: -5.1672043800354
    6. '```' → logprob: -5.7922043800354
    7. '[' → logprob: -6.1672043800354
    8. '       ' → logprob: -6.2922043800354
    9. '
' → logprob: -6.6672043800354
    10. '#' → logprob: -6.9172043800354

Token 2076: ' open' (ID: 2494)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.005240156780928373
    2. ' s' → logprob: -5.255239963531494
    3. 'open' (adapté à ' open') → logprob: -12.255240440368652
    4. ' open' → logprob: -13.630240440368652
    5. '	s' → logprob: -16.005239486694336
    6. '_s' → logprob: -16.130239486694336
    7. '(s' → logprob: -17.130239486694336
    8. ''s' → logprob: -17.255239486694336
    9. '`s' → logprob: -17.255239486694336
    10. 'sign' → logprob: -17.380239486694336

Token 2077: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.029759865254163742
    2. '_' → logprob: -3.5297598838806152
    3. ' _' → logprob: -12.279759407043457
    4. '_
' → logprob: -13.654759407043457
    5. '_End' → logprob: -14.154759407043457
    6. '_END' → logprob: -14.279759407043457
    7. ')_' → logprob: -15.029759407043457
    8. '_en' → logprob: -15.029759407043457
    9. '```' → logprob: -15.654759407043457
    10. '\' → logprob: -15.904759407043457

Token 2078: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5759463906288147
    2. '=' → logprob: -0.8259463906288147
    3. '=s' → logprob: -12.950946807861328
    4. ' ' → logprob: -13.200946807861328
    5. '_' → logprob: -15.075946807861328
    6. '<|end|>' → logprob: -15.325946807861328
    7. '=_' → logprob: -15.450946807861328
    8. '=
' → logprob: -15.450946807861328
    9. '=end' → logprob: -15.700946807861328
    10. ')' → logprob: -15.700946807861328

Token 2079: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3868710398674011
    2. ' s' → logprob: -1.136871099472046
    3. '	s' → logprob: -19.386871337890625
    4. '_s' → logprob: -20.136871337890625
    5. ' ' → logprob: -22.011871337890625
    6. '(s' → logprob: -22.386871337890625
    7. '   ' → logprob: -22.511871337890625
    8. '{s' → logprob: -22.761871337890625
    9. '<s' → logprob: -23.136871337890625
    10. 'sign' → logprob: -23.386871337890625

Token 2080: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.046266358345746994
    2. 'else' → logprob: -3.5462663173675537
    3. ' else' → logprob: -4.671266555786133
    4. '
' → logprob: -6.546266555786133
    5. ':
' → logprob: -6.671266555786133
    6. ':' → logprob: -6.671266555786133
    7. '<|end|>' → logprob: -7.421266555786133
    8. '               ' → logprob: -7.921266555786133
    9. '.' → logprob: -8.171266555786133
    10. '            
' → logprob: -8.296266555786133

Token 2081: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0666169747710228
    2. 'else' → logprob: -3.066617012023926
    3. ' else' → logprob: -4.191617012023926
    4. '<|end|>' → logprob: -6.816617012023926
    5. '
' → logprob: -7.566617012023926
    6. '```' → logprob: -8.691617012023926
    7. '            
' → logprob: -8.816617012023926
    8. '<|end|>' → logprob: -8.816617012023926
    9. ',' → logprob: -9.316617012023926
    10. '       ' → logprob: -9.441617012023926

Token 2082: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.5341820120811462
    2. '           ' → logprob: -0.9091820120811462
    3. '#' → logprob: -4.909182071685791
    4. ' else' → logprob: -6.159182071685791
    5. '
' → logprob: -7.284182071685791
    6. '       ' → logprob: -7.659182071685791
    7. 'elif' → logprob: -9.159181594848633
    8. '   ' → logprob: -9.284181594848633
    9. '            
' → logprob: -9.784181594848633
    10. 'angle' → logprob: -10.784181594848633

Token 2083: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5984249114990234
    2. '               ' → logprob: -1.2234249114990234
    3. ':' → logprob: -2.3484249114990234
    4. '           ' → logprob: -3.2234249114990234
    5. ' continue' → logprob: -3.9734249114990234
    6. 'continue' → logprob: -6.848424911499023
    7. '	continue' → logprob: -9.098424911499023
    8. '   ' → logprob: -9.473424911499023
    9. '       ' → logprob: -9.598424911499023
    10. '                   ' → logprob: -9.723424911499023

Token 2084: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4277271330356598
    2. '           ' → logprob: -1.1777271032333374
    3. ' continue' → logprob: -3.427727222442627
    4. 'continue' → logprob: -5.302727222442627
    5. '   ' → logprob: -6.927727222442627
    6. '	continue' → logprob: -7.552727222442627
    7. '	           ' → logprob: -7.802727222442627
    8. '	       ' → logprob: -8.052726745605469
    9. '       ' → logprob: -8.802726745605469
    10. '                   ' → logprob: -9.927726745605469

Token 2085: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5133103132247925
    2. '               ' → logprob: -1.0133103132247925
    3. ' continue' → logprob: -3.263310432434082
    4. '   ' → logprob: -8.888310432434082
    5. '           ' → logprob: -9.888310432434082
    6. '#' (adapté à ' #') → logprob: -11.638310432434082
    7. '	continue' → logprob: -12.388310432434082
    8. 'touch' → logprob: -12.513310432434082
    9. '                   ' → logprob: -13.638310432434082
    10. 'sign' → logprob: -13.763310432434082

Token 2086: ' not' (ID: 625)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.2879789173603058
    2. '               ' → logprob: -1.7879788875579834
    3. ' continue' → logprob: -2.5379788875579834
    4. '           ' → logprob: -5.6629791259765625
    5. '#' → logprob: -8.412979125976562
    6. '   ' → logprob: -9.537979125976562
    7. 'for' → logprob: -10.412979125976562
    8. '```' → logprob: -10.412979125976562
    9. '                   ' → logprob: -10.787979125976562
    10. '
' → logprob: -11.162979125976562

Token 2087: ' matching' (ID: 20238)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6938186883926392
    2. 'continue' → logprob: -0.6938186883926392
    3. '               ' → logprob: -8.068819046020508
    4. '_continue' → logprob: -9.318819046020508
    5. '           ' → logprob: -9.943819046020508
    6. '	continue' → logprob: -10.193819046020508
    7. 'contin' → logprob: -10.318819046020508
    8. ' continues' → logprob: -10.568819046020508
    9. '                   ' → logprob: -10.818819046020508
    10. 'inue' → logprob: -10.943819046020508

Token 2088: ' problem' (ID: 4792)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.20364071428775787
    2. 'continue' → logprob: -1.7036406993865967
    3. '               ' → logprob: -6.453640937805176
    4. '           ' → logprob: -7.828640937805176
    5. '                   ' → logprob: -8.828640937805176
    6. '
' → logprob: -9.953640937805176
    7. '	continue' → logprob: -10.953640937805176
    8. '_continue' → logprob: -11.828640937805176
    9. '   ' → logprob: -11.953640937805176
    10. '```' → logprob: -12.078640937805176

Token 2089: ' condition' (ID: 7060)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6009403467178345
    2. 'continue' → logprob: -1.9759403467178345
    3. ':
' → logprob: -2.100940227508545
    4. '           ' → logprob: -2.600940227508545
    5. '_continue' → logprob: -3.975940227508545
    6. ':' → logprob: -4.100940227508545
    7. '
' → logprob: -4.350940227508545
    8. '       ' → logprob: -4.350940227508545
    9. '               ' → logprob: -4.725940227508545
    10. 'return' → logprob: -4.850940227508545

Token 2090: '
' (ID: 198)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.5116899013519287
    2. '               ' → logprob: -1.3866899013519287
    3. '           ' → logprob: -2.7616899013519287
    4. 'continue' → logprob: -3.0116899013519287
    5. ':
' → logprob: -4.011690139770508
    6. ':' → logprob: -4.261690139770508
    7. '	continue' → logprob: -6.011690139770508
    8. '                   ' → logprob: -7.011690139770508
    9. '\n' → logprob: -7.636690139770508
    10. ' continues' → logprob: -7.761690139770508

Token 2091: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007433292921632528
    2. 'continue' → logprob: -5.3824334144592285
    3. ' continue' → logprob: -6.0074334144592285
    4. '           ' → logprob: -8.75743293762207
    5. '```' → logprob: -9.63243293762207
    6. '                   ' → logprob: -9.75743293762207
    7. '   ' → logprob: -10.50743293762207
    8. '	continue' → logprob: -10.63243293762207
    9. '			' → logprob: -12.00743293762207
    10. '       ' → logprob: -12.88243293762207

Token 2092: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13505129516124725
    2. 'continue' (adapté à ' continue') → logprob: -2.6350512504577637
    3. ' continue' → logprob: -3.3850512504577637
    4. '           ' → logprob: -3.8850512504577637
    5. '   ' → logprob: -9.510051727294922
    6. '	continue' → logprob: -10.010051727294922
    7. '                   ' → logprob: -10.010051727294922
    8. '```' → logprob: -11.885051727294922
    9. '_continue' → logprob: -12.385051727294922
    10. '       ' → logprob: -12.385051727294922

Token 2093: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020423687994480133
    2. '
' → logprob: -4.145423889160156
    3. '            
' → logprob: -6.270423889160156
    4. '<|end|>' → logprob: -6.770423889160156
    5. '        
' → logprob: -8.145423889160156
    6. '       ' → logprob: -8.145423889160156
    7. '    
' → logprob: -8.895423889160156
    8. ',' → logprob: -9.145423889160156
    9. '<|end|>' → logprob: -9.145423889160156
    10. '#' → logprob: -9.270423889160156

Token 2094: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00969376228749752
    2. '```' → logprob: -5.259693622589111
    3. '       ' → logprob: -5.634693622589111
    4. '   ' → logprob: -7.759693622589111
    5. 'for' → logprob: -9.13469409942627
    6. 'continue' → logprob: -9.75969409942627
    7. '#' → logprob: -9.88469409942627
    8. '            
' → logprob: -10.38469409942627
    9. '        
' → logprob: -10.75969409942627
    10. '	       ' → logprob: -10.75969409942627

Token 2095: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6600617170333862
    2. '#' (adapté à ' #') → logprob: -0.7850617170333862
    3. 'adj' → logprob: -3.785061836242676
    4. 'for' → logprob: -6.660061836242676
    5. 'connected' → logprob: -6.660061836242676
    6. 'touch' → logprob: -7.410061836242676
    7. '       ' → logprob: -8.035061836242676
    8. 'neighbors' → logprob: -8.160061836242676
    9. '   ' → logprob: -9.035061836242676
    10. 'sign' → logprob: -9.285061836242676

Token 2096: ' The' (ID: 623)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.8946064710617065
    2. 'adj' → logprob: -1.1446064710617065
    3. 'vec' → logprob: -1.8946064710617065
    4. 'touch' → logprob: -3.644606590270996
    5. '           ' → logprob: -3.644606590270996
    6. 'v' → logprob: -4.019606590270996
    7. 'sign' → logprob: -4.519606590270996
    8. 'for' → logprob: -5.269606590270996
    9. 'vectors' → logprob: -5.394606590270996
    10. 'angle' → logprob: -5.394606590270996

Token 2097: ' unique' (ID: 5746)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.45181405544281006
    2. 'touch' → logprob: -1.82681405544281
    3. ' #' → logprob: -2.7018141746520996
    4. 'sign' → logprob: -3.3268141746520996
    5. 'adj' → logprob: -3.8268141746520996
    6. ' touch' → logprob: -4.4518141746521
    7. ' sign' → logprob: -4.4518141746521
    8. 'p' → logprob: -4.4518141746521
    9. '           ' → logprob: -4.8268141746521
    10. 'for' → logprob: -4.8268141746521

Token 2098: ' street' (ID: 12901)
  Prédit: ' street'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' street' → logprob: -0.7752413153648376
    2. 'street' → logprob: -1.4002413749694824
    3. 'adj' → logprob: -3.0252413749694824
    4. '           ' → logprob: -3.4002413749694824
    5. 'sign' → logprob: -3.6502413749694824
    6. ' sign' → logprob: -3.6502413749694824
    7. 'for' → logprob: -3.6502413749694824
    8. ' adj' → logprob: -4.025241374969482
    9. '#' → logprob: -4.150241374969482
    10. ' for' → logprob: -4.275241374969482

Token 2099: ' segment' (ID: 14806)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.8347228765487671
    2. 'segment' → logprob: -1.209722876548767
    3. '           ' → logprob: -2.3347229957580566
    4. '_segments' → logprob: -3.3347229957580566
    5. '#' → logprob: -3.7097229957580566
    6. 'for' → logprob: -3.8347229957580566
    7. 'idx' → logprob: -3.8347229957580566
    8. 's' → logprob: -4.209722995758057
    9. 'seg' → logprob: -4.209722995758057
    10. 'connected' → logprob: -4.709722995758057

Token 2100: ' attached' (ID: 18618)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.3320302367210388
    2. 'connected' → logprob: -1.9570302963256836
    3. 'for' → logprob: -3.0820302963256836
    4. '           ' → logprob: -3.8320302963256836
    5. 'idx' → logprob: -4.082030296325684
    6. '#' → logprob: -4.082030296325684
    7. 'connecting' → logprob: -4.582030296325684
    8. 'adj' → logprob: -4.957030296325684
    9. 'attached' → logprob: -5.332030296325684
    10. 'that' → logprob: -5.332030296325684

Token 2101: ' at' (ID: 540)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.12679706513881683
    2. '           ' → logprob: -2.5017969608306885
    3. 'at' → logprob: -3.8767969608306885
    4. ' to' → logprob: -5.501797199249268
    5. 'for' → logprob: -5.626797199249268
    6. ' at' → logprob: -6.126797199249268
    7. '=' → logprob: -6.376797199249268
    8. 's' → logprob: -6.501797199249268
    9. 'segments' → logprob: -6.876797199249268
    10. '#' → logprob: -7.626797199249268

Token 2102: ' touch' (ID: 7381)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.00035727277281694114
    2. ' touch' → logprob: -8.125357627868652
    3. 'the' → logprob: -9.875357627868652
    4. 'that' → logprob: -11.750357627868652
    5. 'sign' → logprob: -14.250357627868652
    6. '_touch' → logprob: -14.375357627868652
    7. 'i' → logprob: -15.500357627868652
    8. 'this' → logprob: -15.750357627868652
    9. ' the' → logprob: -16.000356674194336
    10. '```' → logprob: -16.500356674194336

Token 2103: ' is' (ID: 382)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30518007278442383
    2. 'for' → logprob: -2.805180072784424
    3. 's' → logprob: -3.180180072784424
    4. 'segments' → logprob: -3.180180072784424
    5. '#' → logprob: -3.680180072784424
    6. 'idx' → logprob: -4.180180072784424
    7. '_segments' → logprob: -4.180180072784424
    8. ' =' → logprob: -4.430180072784424
    9. ' for' → logprob: -4.805180072784424
    10. '_idx' → logprob: -5.555180072784424

Token 2104: ':
' (ID: 734)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.06368386745452881
    2. 'next' → logprob: -3.4386839866638184
    3. '           ' → logprob: -3.8136839866638184
    4. '[' → logprob: -5.563683986663818
    5. 'for' → logprob: -6.438683986663818
    6. '[next' → logprob: -7.188683986663818
    7. ' None' → logprob: -7.688683986663818
    8. 'null' → logprob: -8.81368350982666
    9. '[]
' → logprob: -9.06368350982666
    10. '
' → logprob: -9.18868350982666

Token 2105: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026463665068149567
    2. 'street' → logprob: -4.401463508605957
    3. 'for' → logprob: -4.901463508605957
    4. 'stre' → logprob: -6.151463508605957
    5. 'attached' → logprob: -6.401463508605957
    6. 'st' → logprob: -7.401463508605957
    7. 'adj' → logprob: -7.651463508605957
    8. 'sts' → logprob: -7.651463508605957
    9. 'connected' → logprob: -8.526463508605957
    10. '   ' → logprob: -9.151463508605957

Token 2106: ' street' (ID: 12901)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.3718659579753876
    2. 'street' (adapté à ' street') → logprob: -1.37186598777771
    3. 'attached' → logprob: -4.121865749359131
    4. 'adj' → logprob: -4.371865749359131
    5. 'stre' → logprob: -4.871865749359131
    6. 'found' → logprob: -5.996865749359131
    7. 'connected' → logprob: -6.121865749359131
    8. 'st' → logprob: -6.121865749359131
    9. '       ' → logprob: -6.121865749359131
    10. 'sts' → logprob: -6.746865749359131

Token 2107: '_seg' (ID: 78972)
  Prédit: '_se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_se' → logprob: -1.295832872390747
    2. '_seg' → logprob: -1.420832872390747
    3. '_segments' → logprob: -1.420832872390747
    4. '_edges' → logprob: -3.045832872390747
    5. '_segment' → logprob: -3.170832872390747
    6. 'for' → logprob: -3.295832872390747
    7. '_idxs' → logprob: -3.545832872390747
    8. 's' → logprob: -4.170832633972168
    9. '_neighbors' → logprob: -4.295832633972168
    10. 'seg' → logprob: -5.170832633972168

Token 2108: '_idx' (ID: 15257)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.331587016582489
    2. ' =' → logprob: -2.581587076187134
    3. '_idx' → logprob: -2.581587076187134
    4. '_indices' → logprob: -2.956587076187134
    5. '_idxs' → logprob: -4.081586837768555
    6. '=' → logprob: -4.206586837768555
    7. 'idx' → logprob: -4.581586837768555
    8. '_id' → logprob: -4.706586837768555
    9. '_index' → logprob: -4.831586837768555
    10. '_indexes' → logprob: -5.706586837768555

Token 2109: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.29040586948394775
    2. '=' → logprob: -1.4154058694839478
    3. '=None' → logprob: -4.790405750274658
    4. 's' → logprob: -8.040406227111816
    5. '=[' → logprob: -8.790406227111816
    6. 'None' → logprob: -9.040406227111816
    7. '=[]
' → logprob: -9.165406227111816
    8. ' None' → logprob: -10.165406227111816
    9. '=
' → logprob: -10.290406227111816
    10. '           ' → logprob: -10.790406227111816

Token 2110: ' -' (ID: 533)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3706830143928528
    2. 'next' → logprob: -1.745682954788208
    3. '[' → logprob: -2.370682954788208
    4. '[next' → logprob: -3.495682954788208
    5. 'endpoint' → logprob: -4.870683193206787
    6. '-' → logprob: -6.120683193206787
    7. '[end' → logprob: -7.870683193206787
    8. 'list' → logprob: -8.495682716369629
    9. ' None' → logprob: -8.620682716369629
    10. '(next' → logprob: -8.745682716369629

Token 2111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.36574100604048e-06
    2. '2' → logprob: -13.000004768371582
    3. 'next' → logprob: -14.000004768371582
    4. 'for' → logprob: -15.375004768371582
    5. ' ' → logprob: -15.500004768371582
    6. '0' → logprob: -15.750004768371582
    7. '
' → logprob: -16.125003814697266
    8. '100' → logprob: -16.250003814697266
    9. 'tokens' → logprob: -16.250003814697266
    10. '-' → logprob: -16.375003814697266

Token 2112: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 2113: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26529669761657715
    2. 'for' → logprob: -1.6402966976165771
    3. ' for' → logprob: -3.515296697616577
    4. '
' → logprob: -5.140296936035156
    5. '       ' → logprob: -7.265296936035156
    6. '```' → logprob: -7.515296936035156
    7. '               ' → logprob: -7.640296936035156
    8. '            ' → logprob: -8.140296936035156
    9. '	for' → logprob: -8.265296936035156
    10. '                   ' → logprob: -8.390296936035156

Token 2114: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3083501160144806
    2. ' for' → logprob: -2.058350086212158
    3. '	for' → logprob: -2.433350086212158
    4. '           ' → logprob: -3.433350086212158
    5. '		' → logprob: -5.433350086212158
    6. '[' → logprob: -6.558350086212158
    7. '            ' → logprob: -6.683350086212158
    8. '	       ' → logprob: -6.808350086212158
    9. 'For' → logprob: -7.183350086212158
    10. '                           ' → logprob: -7.683350086212158

Token 2115: ' si' (ID: 1784)
  Prédit: 'si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'si' → logprob: -0.08388581871986389
    2. 's' → logprob: -2.833885908126831
    3. 'idx' → logprob: -4.083885669708252
    4. 'seg' → logprob: -5.958885669708252
    5. 'j' → logprob: -6.833885669708252
    6. 'sid' → logprob: -8.08388614654541
    7. 'sj' → logprob: -8.33388614654541
    8. 'i' → logprob: -8.58388614654541
    9. 'se' → logprob: -8.95888614654541
    10. 'adj' → logprob: -9.58388614654541

Token 2116: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08900664746761322
    2. 'in' → logprob: -2.4640066623687744
    3. 's' → logprob: -10.214006423950195
    4. ' ' → logprob: -11.839006423950195
    5. 'n' → logprob: -11.964006423950195
    6. '	in' → logprob: -12.464006423950195
    7. '
' → logprob: -12.964006423950195
    8. 'i' → logprob: -13.214006423950195
    9. '   ' → logprob: -14.464006423950195
    10. 't' → logprob: -14.651506423950195

Token 2117: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.00023202638840302825
    2. 'graph' → logprob: -8.500231742858887
    3. 'se' → logprob: -11.000231742858887
    4. ' endpoint' → logprob: -12.250231742858887
    5. 'edge' → logprob: -13.125231742858887
    6. '(endpoint' → logprob: -13.625231742858887
    7. 'end' → logprob: -13.875231742858887
    8. 'sign' → logprob: -14.125231742858887
    9. 'vertex' → logprob: -15.125231742858887
    10. 'range' → logprob: -15.125231742858887

Token 2118: '_seg' (ID: 78972)
  Prédit: '_seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seg' → logprob: -0.0017340865451842546
    2. 'seg' → logprob: -6.376734256744385
    3. 's' → logprob: -11.376733779907227
    4. 'segments' → logprob: -12.001733779907227
    5. '_segments' → logprob: -12.626733779907227
    6. '_seq' → logprob: -13.001733779907227
    7. '[' → logprob: -13.251733779907227
    8. 'list' → logprob: -13.626733779907227
    9. '_sep' → logprob: -14.126733779907227
    10. 'Seg' → logprob: -14.126733779907227

Token 2119: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.00021998681768309325
    2. 'touch' → logprob: -8.50022029876709
    3. 't' → logprob: -12.12522029876709
    4. '[s' → logprob: -13.12522029876709
    5. 's' → logprob: -13.25022029876709
    6. '[' → logprob: -13.37522029876709
    7. 'for' → logprob: -13.50022029876709
    8. 'p' → logprob: -13.50022029876709
    9. '
' → logprob: -14.12522029876709
    10. '(t' → logprob: -14.50022029876709

Token 2120: 'ouch' (ID: 4058)
  Prédit: 'ouch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouch' → logprob: -0.20145854353904724
    2. 'touch' → logprob: -1.7014585733413696
    3. 't' → logprob: -10.326458930969238
    4. 'tou' → logprob: -12.701458930969238
    5. '[t' → logprob: -13.201458930969238
    6. ' touch' → logprob: -13.201458930969238
    7. 'uch' → logprob: -13.451458930969238
    8. '_touch' → logprob: -13.951458930969238
    9. 'ouched' → logprob: -14.201458930969238
    10. 'atch' → logprob: -14.701458930969238

Token 2121: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.5625417828559875
    2. ':
' → logprob: -0.9375417828559875
    3. ':' → logprob: -3.4375417232513428
    4. ']:' → logprob: -5.937541961669922
    5. '           ' → logprob: -6.812541961669922
    6. '():
' → logprob: -7.062541961669922
    7. '):
' → logprob: -7.312541961669922
    8. '               ' → logprob: -7.562541961669922
    9. ']' → logprob: -8.937541961669922
    10. '[' → logprob: -9.312541961669922

Token 2122: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.015185609459877014
    2. ':' → logprob: -4.640185832977295
    3. ':
' → logprob: -5.640185832977295
    4. '           ' → logprob: -6.765185832977295
    5. '[' → logprob: -8.640185356140137
    6. '	           ' → logprob: -8.765185356140137
    7. '<|end|>' → logprob: -9.890185356140137
    8. '       ' → logprob: -10.265185356140137
    9. '   ' → logprob: -10.390185356140137
    10. '                   ' → logprob: -10.515185356140137

Token 2123: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.008247648365795612
    2. ' if' → logprob: -5.3832478523254395
    3. 'if' (adapté à ' if') → logprob: -6.1332478523254395
    4. '                   ' → logprob: -7.0082478523254395
    5. '   ' → logprob: -8.883247375488281
    6. '                ' → logprob: -9.508247375488281
    7. '           ' → logprob: -9.508247375488281
    8. ' ' → logprob: -10.258247375488281
    9. '              ' → logprob: -10.383247375488281
    10. '<|end|>' → logprob: -10.383247375488281

Token 2124: ' si' (ID: 1784)
  Prédit: 'si'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'si' → logprob: -1.1875571544806007e-05
    2. ' si' → logprob: -11.375011444091797
    3. '(si' → logprob: -15.000011444091797
    4. '   ' → logprob: -17.375011444091797
    5. '       ' → logprob: -18.750011444091797
    6. '           ' → logprob: -19.625011444091797
    7. '     ' → logprob: -20.125011444091797
    8. '  ' → logprob: -20.250011444091797
    9. '    ' → logprob: -20.750011444091797
    10. ' ' → logprob: -21.250011444091797

Token 2125: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08899901062250137
    2. 'in' → logprob: -2.463999032974243
    3. ' !=' → logprob: -10.588998794555664
    4. '!=' → logprob: -10.838998794555664
    5. '<|end|>' → logprob: -12.463998794555664
    6. ' not' → logprob: -13.088998794555664
    7. '	in' → logprob: -13.213998794555664
    8. '[' → logprob: -13.588998794555664
    9. ' ' → logprob: -13.963998794555664
    10. 'import' → logprob: -14.213998794555664

Token 2126: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -4.620622712536715e-05
    2. ' street' → logprob: -10.000045776367188
    3. 'stre' → logprob: -14.250045776367188
    4. ' ' → logprob: -17.250045776367188
    5. 'st' → logprob: -18.000045776367188
    6. '   ' → logprob: -18.000045776367188
    7. 'sign' → logprob: -18.875045776367188
    8. 'stroke' → logprob: -19.125045776367188
    9. '.street' → logprob: -19.625045776367188
    10. '  ' → logprob: -20.125045776367188

Token 2127: '_segments' (ID: 142925)
  Prédit: '_segments'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.0004311460361350328
    2. 'segments' → logprob: -7.750431060791016
    3. 'Segments' → logprob: -15.500431060791016
    4. '_direct' → logprob: -16.375431060791016
    5. '{' → logprob: -16.875431060791016
    6. 'direct' → logprob: -17.250431060791016
    7. '```' → logprob: -17.625431060791016
    8. '_sequences' → logprob: -18.250431060791016
    9. '   ' → logprob: -18.750431060791016
    10. '[' → logprob: -18.750431060791016

Token 2128: ':
' (ID: 734)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.8880531191825867
    2. ' and' → logprob: -2.1380531787872314
    3. ' !=' → logprob: -2.1380531787872314
    4. '==' → logprob: -2.2630531787872314
    5. ':
' → logprob: -2.3880531787872314
    6. 'and' → logprob: -2.5130531787872314
    7. '                   ' → logprob: -3.2630531787872314
    8. ':' → logprob: -3.7630531787872314
    9. ' ==' → logprob: -4.388052940368652
    10. '                       ' → logprob: -7.138052940368652

Token 2129: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.023495281115174294
    2. ':' → logprob: -5.023495197296143
    3. ':
' → logprob: -5.398495197296143
    4. '=' → logprob: -5.648495197296143
    5. ' =' → logprob: -5.773495197296143
    6. '               ' → logprob: -5.898495197296143
    7. '==' → logprob: -7.148495197296143
    8. '[' → logprob: -7.148495197296143
    9. ' and' → logprob: -7.898495197296143
    10. ' ==' → logprob: -8.6484956741333

Token 2130: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' (adapté à ' street') → logprob: -0.0003939728485420346
    2. ' street' → logprob: -7.875393867492676
    3. 'stre' → logprob: -11.250393867492676
    4. '                   ' → logprob: -15.250393867492676
    5. 'stroke' → logprob: -15.875393867492676
    6. 'st' → logprob: -15.875393867492676
    7. '                       ' → logprob: -16.250394821166992
    8. '                                       ' → logprob: -16.250394821166992
    9. '               ' → logprob: -16.500394821166992
    10. '   ' → logprob: -17.250394821166992

Token 2131: '_seg' (ID: 78972)
  Prédit: '_seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seg' → logprob: -0.00012809180771000683
    2. 'seg' → logprob: -9.875127792358398
    3. '_segments' → logprob: -10.000127792358398
    4. '_idx' → logprob: -10.750127792358398
    5. 'segments' → logprob: -12.875127792358398
    6. '_segment' → logprob: -13.250127792358398
    7. '=' → logprob: -14.125127792358398
    8. '       ' → logprob: -14.250127792358398
    9. '_seq' → logprob: -14.375127792358398
    10. '           ' → logprob: -14.625127792358398

Token 2132: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.008110844530165195
    2. 'x' → logprob: -5.758111000061035
    3. 'idx' → logprob: -5.758111000061035
    4. '=' → logprob: -7.508111000061035
    5. 'dx' → logprob: -8.133111000061035
    6. '=_' → logprob: -8.633111000061035
    7. 'ex' → logprob: -8.633111000061035
    8. ' =' → logprob: -9.133111000061035
    9. 's' → logprob: -9.258111000061035
    10. '_idxs' → logprob: -9.508111000061035

Token 2133: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0338144414126873
    2. ' =' → logprob: -3.4088144302368164
    3. '=
' → logprob: -8.783814430236816
    4. ' =
' → logprob: -12.033814430236816
    5. '=i' → logprob: -12.533814430236816
    6. '=s' → logprob: -12.908814430236816
    7. '=

' → logprob: -13.658814430236816
    8. '=user' → logprob: -15.408814430236816
    9. '=edge' → logprob: -15.408814430236816
    10. '=int' → logprob: -15.658814430236816

Token 2134: 'si' (ID: 4778)
  Prédit: 'si'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'si' → logprob: -4.35837464465294e-05
    2. 'endpoint' → logprob: -10.500043869018555
    3. 'next' → logprob: -12.125043869018555
    4. 'list' → logprob: -12.625043869018555
    5. 'se' → logprob: -13.000043869018555
    6. '(si' → logprob: -13.250043869018555
    7. '_si' → logprob: -13.875043869018555
    8. ' si' → logprob: -14.125043869018555
    9. '[' → logprob: -14.375043869018555
    10. 's' → logprob: -15.250043869018555

Token 2135: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00045593673712573946
    2. '           ' → logprob: -8.625455856323242
    3. '				' → logprob: -10.125455856323242
    4. '
' → logprob: -10.125455856323242
    5. '		           ' → logprob: -10.250455856323242
    6. '                       ' → logprob: -10.500455856323242
    7. '<|end|>' → logprob: -10.500455856323242
    8. '               ' → logprob: -10.750455856323242
    9. '                           ' → logprob: -11.000455856323242
    10. '                    
' → logprob: -11.875455856323242

Token 2136: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.14310482144355774
    2. '           ' → logprob: -2.0181047916412354
    3. '               ' → logprob: -8.143104553222656
    4. '                       ' → logprob: -10.268104553222656
    5. '       ' → logprob: -10.518104553222656
    6. 'break' → logprob: -10.518104553222656
    7. ',' → logprob: -12.143104553222656
    8. '                           ' → logprob: -12.268104553222656
    9. '		           ' → logprob: -12.393104553222656
    10. '   ' → logprob: -12.518104553222656

Token 2137: ' break' (ID: 2338)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0020801937207579613
    2. '           ' → logprob: -6.627079963684082
    3. 'break' (adapté à ' break') → logprob: -8.002079963684082
    4. '               ' → logprob: -8.502079963684082
    5. '                       ' → logprob: -9.377079963684082
    6. ' break' → logprob: -10.002079963684082
    7. '
' → logprob: -10.377079963684082
    8. '       ' → logprob: -11.002079963684082
    9. '				' → logprob: -12.127079963684082
    10. '   ' → logprob: -12.127079963684082

Token 2138: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10498081147670746
    2. 'p' → logprob: -2.479980707168579
    3. '
' → logprob: -5.729980945587158
    4. 's' → logprob: -5.979980945587158
    5. '#' → logprob: -6.229980945587158
    6. ' p' → logprob: -6.479980945587158
    7. '(p' → logprob: -6.729980945587158
    8. '               ' → logprob: -6.979980945587158
    9. '```' → logprob: -6.979980945587158
    10. '                   ' → logprob: -7.479980945587158

Token 2139: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08618918061256409
    2. 'p' → logprob: -3.0861892700195312
    3. 'street' → logprob: -4.211189270019531
    4. 's' → logprob: -5.086189270019531
    5. '#' → logprob: -5.086189270019531
    6. '
' → logprob: -5.836189270019531
    7. 'seg' → logprob: -6.711189270019531
    8. 'st' → logprob: -7.086189270019531
    9. 't' → logprob: -7.336189270019531
    10. '       ' → logprob: -7.711189270019531

Token 2140: ' if' (ID: 538)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.28897956013679504
    2. 'street' → logprob: -1.6639795303344727
    3. 's' → logprob: -3.6639795303344727
    4. 'ps' → logprob: -4.538979530334473
    5. '           ' → logprob: -5.038979530334473
    6. '#' → logprob: -5.038979530334473
    7. 'seg' → logprob: -5.663979530334473
    8. 'adj' → logprob: -5.788979530334473
    9. 'st' → logprob: -7.038979530334473
    10. 'sign' → logprob: -7.038979530334473

Token 2141: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.007689916528761387
    2. ' street' → logprob: -4.882689952850342
    3. 'stre' → logprob: -9.632689476013184
    4. 'touch' → logprob: -11.882689476013184
    5. '   ' → logprob: -12.507689476013184
    6. 'sign' → logprob: -13.132689476013184
    7. ' ' → logprob: -13.632689476013184
    8. '  ' → logprob: -13.882689476013184
    9. 'st' → logprob: -14.257689476013184
    10. '    ' → logprob: -14.882689476013184

Token 2142: '_seg' (ID: 78972)
  Prédit: '_seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seg' → logprob: -0.00014716439181938767
    2. '_segments' → logprob: -9.000146865844727
    3. 'segments' → logprob: -11.375146865844727
    4. 'seg' → logprob: -11.750146865844727
    5. 'Seg' → logprob: -13.875146865844727
    6. '```' → logprob: -14.375146865844727
    7. '
' → logprob: -14.500146865844727
    8. '_segment' → logprob: -14.750146865844727
    9. 's' → logprob: -15.000146865844727
    10. '_len' → logprob: -15.000146865844727

Token 2143: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.03022097982466221
    2. 'x' → logprob: -3.5302209854125977
    3. 'idx' → logprob: -8.780220985412598
    4. 's' → logprob: -9.155220985412598
    5. '=' → logprob: -10.155220985412598
    6. 'dx' → logprob: -10.530220985412598
    7. 'ex' → logprob: -10.905220985412598
    8. ']' → logprob: -11.155220985412598
    9. '_' → logprob: -11.280220985412598
    10. '_index' → logprob: -11.655220985412598

Token 2144: '==-' (ID: 116197)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9279176592826843
    2. '==' → logprob: -1.052917718887329
    3. '=' → logprob: -1.427917718887329
    4. ' =' → logprob: -4.30291748046875
    5. ' is' → logprob: -7.42791748046875
    6. '!=' → logprob: -7.42791748046875
    7. ' !=' → logprob: -7.92791748046875
    8. '==-' → logprob: -8.17791748046875
    9. ':' → logprob: -8.92791748046875
    10. '[' → logprob: -9.92791748046875

Token 2145: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -14.500000953674316
    3. '2' → logprob: -15.500000953674316
    4. ',' → logprob: -16.562501907348633
    5. '`' → logprob: -16.687501907348633
    6. '
' → logprob: -16.750001907348633
    7. '0' → logprob: -17.062501907348633
    8. '```' → logprob: -17.187501907348633
    9. ')' → logprob: -17.812501907348633
    10. ':' → logprob: -18.437501907348633

Token 2146: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1137002557516098
    2. ':
' → logprob: -2.3637001514434814
    3. '               ' → logprob: -4.3637003898620605
    4. ':return' → logprob: -8.113699913024902
    5. ' continue' → logprob: -8.988699913024902
    6. '           ' → logprob: -9.113699913024902
    7. 'continue' → logprob: -9.113699913024902
    8. '                   ' → logprob: -11.738699913024902
    9. '	continue' → logprob: -12.113699913024902
    10. '                       ' → logprob: -13.238699913024902

Token 2147: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004288046155124903
    2. 'continue' → logprob: -6.004288196563721
    3. ' continue' → logprob: -6.504288196563721
    4. '           ' → logprob: -8.879287719726562
    5. '	continue' → logprob: -9.379287719726562
    6. '                   ' → logprob: -10.629287719726562
    7. '   ' → logprob: -10.879287719726562
    8. '	           ' → logprob: -11.004287719726562
    9. 'Continue' → logprob: -12.254287719726562
    10. '_continue' → logprob: -12.504287719726562

Token 2148: ' continue' (ID: 4901)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3438180088996887
    2. ' continue' → logprob: -1.593817949295044
    3. 'continue' (adapté à ' continue') → logprob: -2.593817949295044
    4. '           ' → logprob: -4.968818187713623
    5. '	continue' → logprob: -5.468818187713623
    6. '   ' → logprob: -6.468818187713623
    7. '                   ' → logprob: -8.468817710876465
    8. '	           ' → logprob: -9.968817710876465
    9. '_continue' → logprob: -10.468817710876465
    10. '       ' → logprob: -10.968817710876465

Token 2149: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0067633334547281265
    2. '#' → logprob: -5.756763458251953
    3. 'p' → logprob: -6.756763458251953
    4. '       ' → logprob: -7.631763458251953
    5. 'continue' → logprob: -7.631763458251953
    6. '            
' → logprob: -7.756763458251953
    7. '```' → logprob: -8.006763458251953
    8. 's' → logprob: -8.756763458251953
    9. 't' → logprob: -9.131763458251953
    10. '
' → logprob: -9.881763458251953

Token 2150: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013864279026165605
    2. '
' → logprob: -7.876386642456055
    3. '#' → logprob: -8.001386642456055
    4. '```' → logprob: -8.376386642456055
    5. 'p' → logprob: -9.126386642456055
    6. '       ' → logprob: -9.376386642456055
    7. 'sign' → logprob: -10.001386642456055
    8. '            
' → logprob: -10.126386642456055
    9. 'continue' → logprob: -10.251386642456055
    10. 's' → logprob: -10.501386642456055

Token 2151: ' #' (ID: 1069)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.5591534376144409
    2. 'p' → logprob: -0.9341534376144409
    3. '           ' → logprob: -3.8091535568237305
    4. 'seg' → logprob: -6.0591535568237305
    5. 'adj' → logprob: -6.1841535568237305
    6. '#' (adapté à ' #') → logprob: -6.3091535568237305
    7. 'st' → logprob: -6.6841535568237305
    8. 's' → logprob: -6.6841535568237305
    9. 'ps' → logprob: -6.9341535568237305
    10. 'sp' → logprob: -7.1841535568237305

Token 2152: ' The' (ID: 623)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.1252261847257614
    2. 'p' → logprob: -2.7502262592315674
    3. '#' → logprob: -3.3752262592315674
    4. '           ' → logprob: -4.500226020812988
    5. 'stre' → logprob: -6.000226020812988
    6. 'st' → logprob: -6.625226020812988
    7. 's' → logprob: -6.625226020812988
    8. 'ps' → logprob: -6.750226020812988
    9. 'sign' → logprob: -8.375226020812988
    10. 'pst' → logprob: -8.500226020812988

Token 2153: ' street' (ID: 12901)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.3849755525588989
    2. 'street' → logprob: -1.259975552558899
    3. '#' → logprob: -4.259975433349609
    4. 'ps' → logprob: -4.759975433349609
    5. 'sp' → logprob: -5.509975433349609
    6. 's' → logprob: -6.384975433349609
    7. 'adj' → logprob: -6.759975433349609
    8. 'sign' → logprob: -6.884975433349609
    9. 'st' → logprob: -7.509975433349609
    10. 'touch' → logprob: -7.634975433349609

Token 2154: ' segment' (ID: 14806)
  Prédit: '_seg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_seg' → logprob: -0.024554472416639328
    2. 'seg' → logprob: -3.899554491043091
    3. '_segment' → logprob: -6.274554252624512
    4. '_p' → logprob: -6.524554252624512
    5. 'p' → logprob: -8.399554252624512
    6. 'segment' → logprob: -9.399554252624512
    7. '_idx' → logprob: -9.524554252624512
    8. 'i' → logprob: -10.024554252624512
    9. 's' → logprob: -10.024554252624512
    10. '_s' → logprob: -10.149554252624512

Token 2155: ':
' (ID: 734)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.8595550060272217
    2. ' =' → logprob: -1.4845550060272217
    3. 'points' → logprob: -2.4845550060272217
    4. '_pts' → logprob: -2.6095550060272217
    5. '=' → logprob: -2.8595550060272217
    6. '_p' → logprob: -2.8595550060272217
    7. '_points' → logprob: -2.9845550060272217
    8. '_idx' → logprob: -5.359555244445801
    9. 'idx' → logprob: -5.859555244445801
    10. 'pts' → logprob: -6.109555244445801

Token 2156: '           ' (ID: 352)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.4452274441719055
    2. '           ' → logprob: -1.3202273845672607
    3. ' p' → logprob: -2.5702273845672607
    4. '(p' → logprob: -5.44522762298584
    5. 'sp' → logprob: -6.19522762298584
    6. '(st' → logprob: -6.32022762298584
    7. 'street' → logprob: -6.32022762298584
    8. ' st' → logprob: -6.82022762298584
    9. 'st' → logprob: -6.94522762298584
    10. 's' → logprob: -7.19522762298584

Token 2157: ' sp' (ID: 1014)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.10759962350130081
    2. 'sp' (adapté à ' sp') → logprob: -2.3575997352600098
    3. 'street' → logprob: -5.60759973526001
    4. 'st' → logprob: -6.60759973526001
    5. 'stre' → logprob: -7.73259973526001
    6. 'ps' → logprob: -7.73259973526001
    7. '(p' → logprob: -7.85759973526001
    8. 'tp' → logprob: -8.232599258422852
    9. 'u' → logprob: -8.982599258422852
    10. 'pst' → logprob: -8.982599258422852

Token 2158: '1' (ID: 16)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9001068472862244
    2. '1' → logprob: -1.4001069068908691
    3. 'p' → logprob: -1.5251069068908691
    4. ' =' → logprob: -3.150106906890869
    5. 'r' → logprob: -4.025106906890869
    6. 's' → logprob: -4.150106906890869
    7. 'oint' → logprob: -4.150106906890869
    8. 'oints' → logprob: -4.275106906890869
    9. '=(' → logprob: -4.400106906890869
    10. '=p' → logprob: -5.025106906890869

Token 2159: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5315409302711487
    2. ',se' → logprob: -1.281540870666504
    3. ',p' → logprob: -2.031540870666504
    4. '=' → logprob: -6.406540870666504
    5. ',s' → logprob: -6.406540870666504
    6. ',
' → logprob: -9.781540870666504
    7. ',state' → logprob: -10.656540870666504
    8. 'p' → logprob: -10.781540870666504
    9. ',pos' → logprob: -10.781540870666504
    10. ',_' → logprob: -11.031540870666504

Token 2160: 'sp' (ID: 1148)
  Prédit: 'sp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sp' → logprob: -7.941850526549388e-06
    2. ' sp' → logprob: -11.750007629394531
    3. '_sp' → logprob: -18.62500762939453
    4. '	sp' → logprob: -19.37500762939453
    5. '(sp' → logprob: -20.12500762939453
    6. '.sp' → logprob: -21.25000762939453
    7. 's' → logprob: -21.62500762939453
    8. 'Sp' → logprob: -21.62500762939453
    9. '       ' → logprob: -22.00000762939453
    10. '           ' → logprob: -22.37500762939453

Token 2161: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00038264848990365863
    2. 'sp' → logprob: -8.250382423400879
    3. '_sp' → logprob: -9.750382423400879
    4. ',' → logprob: -10.500382423400879
    5. '
' → logprob: -11.375382423400879
    6. '1' → logprob: -11.875382423400879
    7. '0' → logprob: -12.375382423400879
    8. '(sp' → logprob: -12.500382423400879
    9. ' sp' → logprob: -12.750382423400879
    10. '```' → logprob: -13.500382423400879

Token 2162: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1637164789135568e-05
    2. ' =' → logprob: -11.375011444091797
    3. '=
' → logprob: -17.500011444091797
    4. '=_' → logprob: -17.500011444091797
    5. '=p' → logprob: -17.750011444091797
    6. '=s' → logprob: -18.250011444091797
    7. '=(' → logprob: -18.750011444091797
    8. '=

' → logprob: -19.125011444091797
    9. '=`' → logprob: -19.875011444091797
    10. '=sub' → logprob: -20.625011444091797

Token 2163: 'se' (ID: 344)
  Prédit: 'se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -2.451116051815916e-05
    2. '(se' → logprob: -11.250024795532227
    3. ' seg' → logprob: -11.500024795532227
    4. '	se' → logprob: -14.875024795532227
    5. 'seg' → logprob: -15.250024795532227
    6. '_se' → logprob: -15.250024795532227
    7. 'st' → logprob: -15.750024795532227
    8. 'segments' → logprob: -16.375024795532227
    9. 's' → logprob: -16.500024795532227
    10. ' se' → logprob: -16.875024795532227

Token 2164: 'gs' (ID: 9233)
  Prédit: 'gs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'gs' → logprob: -3.130576806142926e-05
    2. 'se' → logprob: -10.500031471252441
    3. 'egs' → logprob: -13.500031471252441
    4. 'sg' → logprob: -14.125031471252441
    5. 'ge' → logprob: -15.375031471252441
    6. ' gs' → logprob: -15.625031471252441
    7. 'g' → logprob: -16.000030517578125
    8. 'ges' → logprob: -16.000030517578125
    9. '(se' → logprob: -16.125030517578125
    10. '
' → logprob: -16.125030517578125

Token 2165: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06689844280481339
    2. 'se' → logprob: -2.9418983459472656
    3. 'street' → logprob: -5.191898345947266
    4. '(se' → logprob: -5.691898345947266
    5. '           ' → logprob: -6.191898345947266
    6. 'st' → logprob: -8.066898345947266
    7. '               ' → logprob: -8.691898345947266
    8. 'stre' → logprob: -9.316898345947266
    9. '(st' → logprob: -9.441898345947266
    10. 'seg' → logprob: -9.941898345947266

Token 2166: 'street' (ID: 55690)
  Prédit: 'street'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -3.292907877039397e-06
    2. ' street' → logprob: -13.12500286102295
    3. 'stre' → logprob: -13.87500286102295
    4. '           ' → logprob: -16.125003814697266
    5. 'st' → logprob: -16.500003814697266
    6. '               ' → logprob: -17.125003814697266
    7. '   ' → logprob: -17.250003814697266
    8. '       ' → logprob: -17.250003814697266
    9. '
' → logprob: -17.625003814697266
    10. 'stroke' → logprob: -18.375003814697266

Token 2167: '_seg' (ID: 78972)
  Prédit: '_seg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_seg' → logprob: -0.009023413062095642
    2. 'seg' → logprob: -5.509023189544678
    3. '_segments' → logprob: -5.634023189544678
    4. 'segments' → logprob: -7.009023189544678
    5. '[' → logprob: -8.134023666381836
    6. '_se' → logprob: -10.009023666381836
    7. 'Seg' → logprob: -10.509023666381836
    8. '_segment' → logprob: -11.134023666381836
    9. 'street' → logprob: -11.259023666381836
    10. '
' → logprob: -11.384023666381836

Token 2168: '_idx' (ID: 15257)
  Prédit: '_idx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_idx' → logprob: -0.013835301622748375
    2. 'idx' → logprob: -4.638835430145264
    3. 'segments' → logprob: -6.763835430145264
    4. '_seg' → logprob: -7.263835430145264
    5. '_segments' → logprob: -7.263835430145264
    6. 'seg' → logprob: -7.638835430145264
    7. 'x' → logprob: -8.138834953308105
    8. 's' → logprob: -8.888834953308105
    9. 'i' → logprob: -9.388834953308105
    10. 't' → logprob: -9.513834953308105

Token 2169: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -1.0112916231155396
    2. ']' → logprob: -1.2612916231155396
    3. '[' → logprob: -1.8862916231155396
    4. '           ' → logprob: -2.01129150390625
    5. ')' → logprob: -3.63629150390625
    6. ')
' → logprob: -3.76129150390625
    7. '[
' → logprob: -5.38629150390625
    8. '][' → logprob: -5.76129150390625
    9. '[p' → logprob: -5.76129150390625
    10. '       ' → logprob: -6.26129150390625

Token 2170: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005280126351863146
    2. '            
' → logprob: -6.380280017852783
    3. '
' → logprob: -6.630280017852783
    4. '#' → logprob: -7.755280017852783
    5. ' if' → logprob: -8.005280494689941
    6. ',' → logprob: -8.255280494689941
    7. 'if' → logprob: -8.505280494689941
    8. '   ' → logprob: -8.755280494689941
    9. 'token' → logprob: -9.130280494689941
    10. '               ' → logprob: -9.505280494689941

Token 2171: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4693949520587921
    2. 'if' → logprob: -1.8443949222564697
    3. 'vec' → logprob: -2.9693949222564697
    4. ' if' → logprob: -3.2193949222564697
    5. 'v' → logprob: -3.3443949222564697
    6. 'touch' → logprob: -4.094395160675049
    7. 'p' → logprob: -4.219395160675049
    8. 'u' → logprob: -4.469395160675049
    9. '#' (adapté à ' #') → logprob: -4.469395160675049
    10. '   ' → logprob: -5.094395160675049

Token 2172: ' At' (ID: 3604)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5883473753929138
    2. 'vec' → logprob: -1.8383474349975586
    3. 'v' → logprob: -1.9633474349975586
    4. 'if' → logprob: -2.8383474349975586
    5. '           ' → logprob: -3.0883474349975586
    6. 'dir' → logprob: -4.338347434997559
    7. 'touch' → logprob: -5.088347434997559
    8. 'import' → logprob: -5.463347434997559
    9. 'vector' → logprob: -5.588347434997559
    10. 'from' → logprob: -5.713347434997559

Token 2173: ' touch' (ID: 7381)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.011119149625301361
    2. ' touch' → logprob: -4.636119365692139
    3. 'the' → logprob: -6.886119365692139
    4. 'this' → logprob: -9.38611888885498
    5. '
' → logprob: -9.51111888885498
    6. '#' → logprob: -9.76111888885498
    7. ' the' → logprob: -9.88611888885498
    8. 'point' → logprob: -11.13611888885498
    9. 'street' → logprob: -11.26111888885498
    10. '_touch' → logprob: -11.63611888885498

Token 2174: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.9929919838905334
    2. '           ' → logprob: -1.6179919242858887
    3. ',' → logprob: -1.9929919242858887
    4. '#' → logprob: -2.4929919242858887
    5. '
' → logprob: -2.8679919242858887
    6. 'pt' → logprob: -3.3679919242858887
    7. '_point' → logprob: -3.4929919242858887
    8. 'pos' → logprob: -4.492991924285889
    9. 'if' → logprob: -4.617991924285889
    10. ' point' → logprob: -4.742991924285889

Token 2175: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14192882180213928
    2. '#' → logprob: -3.3919289112091064
    3. '
' → logprob: -3.5169289112091064
    4. ',' → logprob: -3.6419289112091064
    5. 'if' → logprob: -4.266928672790527
    6. 'vec' → logprob: -4.641928672790527
    7. ' if' → logprob: -5.141928672790527
    8. '   ' → logprob: -6.391928672790527
    9. 'v' → logprob: -6.391928672790527
    10. ' #' → logprob: -7.016928672790527

Token 2176: ' find' (ID: 1646)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'other' → logprob: -1.344145655632019
    2. 'vec' → logprob: -1.469145655632019
    3. 'if' → logprob: -1.719145655632019
    4. '#' → logprob: -1.844145655632019
    5. 'v' → logprob: -2.9691457748413086
    6. '           ' → logprob: -3.5941457748413086
    7. 'adj' → logprob: -4.094145774841309
    8. ' if' → logprob: -4.344145774841309
    9. ' other' → logprob: -4.844145774841309
    10. 'b' → logprob: -4.969145774841309

Token 2177: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.15275004506111145
    2. 'vec' → logprob: -3.027750015258789
    3. 'the' → logprob: -3.527750015258789
    4. 'adj' → logprob: -3.777750015258789
    5. '#' → logprob: -4.402750015258789
    6. 'v' → logprob: -5.152750015258789
    7. 'neighbor' → logprob: -5.402750015258789
    8. 'vector' → logprob: -5.527750015258789
    9. 'common' → logprob: -5.777750015258789
    10. 'vectors' → logprob: -6.527750015258789

Token 2178: ' endpoint' (ID: 29703)
  Prédit: 'endpoint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endpoint' → logprob: -0.3664741516113281
    2. 'point' → logprob: -1.9914741516113281
    3. ' endpoint' → logprob: -2.116474151611328
    4. 'end' → logprob: -3.741474151611328
    5. '_endpoint' → logprob: -4.741474151611328
    6. 'p' → logprob: -4.991474151611328
    7. 'pt' → logprob: -5.241474151611328
    8. ' point' → logprob: -5.991474151611328
    9. '_point' → logprob: -7.116474151611328
    10. ' end' → logprob: -7.866474151611328

Token 2179: ' of' (ID: 328)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7615254521369934
    2. '           ' → logprob: -1.0115253925323486
    3. ' =' → logprob: -1.8865253925323486
    4. 'other' → logprob: -5.011525630950928
    5. 'p' → logprob: -6.386525630950928
    6. 'of' → logprob: -6.761525630950928
    7. 'next' → logprob: -6.886525630950928
    8. 'neighbor' → logprob: -6.886525630950928
    9. '=
' → logprob: -7.636525630950928
    10. 'point' → logprob: -7.761525630950928

Token 2180: ' street' (ID: 12901)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sp' → logprob: -0.8766176700592041
    2. 'street' → logprob: -1.126617670059204
    3. 'the' → logprob: -2.126617670059204
    4. 'se' → logprob: -2.126617670059204
    5. '(se' → logprob: -5.251617431640625
    6. '(sp' → logprob: -5.376617431640625
    7. ' street' → logprob: -5.751617431640625
    8. ' the' → logprob: -6.001617431640625
    9. '(' → logprob: -6.376617431640625
    10. 'seg' → logprob: -7.001617431640625

Token 2181: ' segment' (ID: 14806)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7921760678291321
    2. '=' → logprob: -0.9171760678291321
    3. ' =' → logprob: -2.4171760082244873
    4. '=
' → logprob: -4.542176246643066
    5. 'p' → logprob: -5.167176246643066
    6. '
' → logprob: -5.542176246643066
    7. '=end' → logprob: -5.917176246643066
    8. '```' → logprob: -5.917176246643066
    9. ',' → logprob: -6.292176246643066
    10. '            
' → logprob: -6.292176246643066

Token 2182: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.055424805730581284
    2. ' next' → logprob: -4.805424690246582
    3. 'next' → logprob: -5.055424690246582
    4. ',' → logprob: -5.305424690246582
    5. '            
' → logprob: -5.805424690246582
    6. ' =' → logprob: -5.930424690246582
    7. 'sp' → logprob: -6.055424690246582
    8. ' for' → logprob: -6.180424690246582
    9. 'token' → logprob: -6.180424690246582
    10. ' if' → logprob: -6.555424690246582

Token 2183: ' opposite' (ID: 23821)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32384806871414185
    2. ' p' → logprob: -2.198848009109497
    3. '```' → logprob: -3.573848009109497
    4. ' next' → logprob: -3.698848009109497
    5. '[' → logprob: -3.823848009109497
    6. ' x' → logprob: -4.448848247528076
    7. 'p' → logprob: -4.448848247528076
    8. ' if' → logprob: -4.573848247528076
    9. 'next' → logprob: -5.073848247528076
    10. '[p' → logprob: -5.573848247528076

Token 2184: ' point' (ID: 2438)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1782162189483643
    2. 'endpoint' → logprob: -1.3032162189483643
    3. 'point' → logprob: -1.9282162189483643
    4. ' =' → logprob: -2.4282162189483643
    5. '_endpoint' → logprob: -2.5532162189483643
    6. 'end' → logprob: -3.5532162189483643
    7. 'p' → logprob: -3.8032162189483643
    8. '=end' → logprob: -3.9282162189483643
    9. '_end' → logprob: -4.053215980529785
    10. '_point' → logprob: -4.803215980529785

Token 2185: '
' (ID: 198)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6317386627197266
    2. '=' → logprob: -1.0067386627197266
    3. '           ' → logprob: -3.2567386627197266
    4. '1' → logprob: -4.631738662719727
    5. 'sp' → logprob: -4.881738662719727
    6. '=
' → logprob: -5.006738662719727
    7. '0' → logprob: -5.381738662719727
    8. 'if' → logprob: -5.381738662719727
    9. ' if' → logprob: -5.506738662719727
    10. '[' → logprob: -5.756738662719727

Token 2186: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9696747064590454
    2. 'next' → logprob: -1.4696747064590454
    3. 'p' → logprob: -2.594674587249756
    4. ' =' → logprob: -2.719674587249756
    5. 'sp' → logprob: -2.844674587249756
    6. 'op' → logprob: -3.594674587249756
    7. 'other' → logprob: -3.594674587249756
    8. '=' → logprob: -3.969674587249756
    9. 'point' → logprob: -3.969674587249756
    10. '
' → logprob: -4.469674587249756

Token 2187: ' if' (ID: 538)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.5424811244010925
    2. '           ' → logprob: -2.6674811840057373
    3. 'op' → logprob: -2.6674811840057373
    4. 'if' (adapté à ' if') → logprob: -3.0424811840057373
    5. ' if' → logprob: -3.1674811840057373
    6. ' other' → logprob: -3.4174811840057373
    7. ' opp' → logprob: -3.5424811840057373
    8. 'p' → logprob: -3.9174811840057373
    9. '
' → logprob: -4.167480945587158
    10. 'o' → logprob: -4.292480945587158

Token 2188: ' sp' (ID: 1014)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sp' → logprob: -0.0011160464491695166
    2. 'touch' → logprob: -6.8761162757873535
    3. ' sp' → logprob: -9.626115798950195
    4. '(sp' → logprob: -11.626115798950195
    5. '   ' → logprob: -12.126115798950195
    6. ' touch' → logprob: -13.626115798950195
    7. '  ' → logprob: -15.001115798950195
    8. ' ' → logprob: -15.126115798950195
    9. '       ' → logprob: -15.126115798950195
    10. '	sp' → logprob: -15.501115798950195

Token 2189: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0271425973623991
    2. '2' → logprob: -3.6521425247192383
    3. '[' → logprob: -8.027142524719238
    4. 'oints' → logprob: -8.402142524719238
    5. 'oint' → logprob: -9.527142524719238
    6. '```' → logprob: -10.152142524719238
    7. '
' → logprob: -10.277142524719238
    8. '0' → logprob: -10.652142524719238
    9. '=' → logprob: -11.152142524719238
    10. ' ' → logprob: -11.214642524719238

Token 2190: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.005768326576799154
    2. ' ==' → logprob: -5.255768299102783
    3. '[' → logprob: -7.630768299102783
    4. ']==' → logprob: -10.505768775939941
    5. '==
' → logprob: -11.380768775939941
    6. '=' → logprob: -12.380768775939941
    7. '!=' → logprob: -12.880768775939941
    8. ')==' → logprob: -13.505768775939941
    9. '==(' → logprob: -13.880768775939941
    10. '```' → logprob: -14.880768775939941

Token 2191: 'touch' (ID: 47206)
  Prédit: 'touch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -8.65707261255011e-06
    2. ' touch' → logprob: -11.750008583068848
    3. '   ' → logprob: -14.750008583068848
    4. ' ' → logprob: -15.875008583068848
    5. 'tou' → logprob: -16.750009536743164
    6. 'talk' → logprob: -17.000009536743164
    7. '       ' → logprob: -18.000009536743164
    8. '_touch' → logprob: -18.250009536743164
    9. '  ' → logprob: -18.375009536743164
    10. 'tick' → logprob: -18.500009536743164

Token 2192: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.0789402425289154
    2. ':' → logprob: -2.5789401531219482
    3. '):
' → logprob: -11.078940391540527
    4. '[' → logprob: -11.953940391540527
    5. '           ' → logprob: -11.953940391540527
    6. ',' → logprob: -12.328940391540527
    7. ':

' → logprob: -12.703940391540527
    8. '       ' → logprob: -12.953940391540527
    9. '               ' → logprob: -13.078940391540527
    10. '.' → logprob: -13.453940391540527

Token 2193: '               ' (ID: 506)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.7898985147476196
    2. '               ' → logprob: -0.9148985147476196
    3. ':' → logprob: -2.03989839553833
    4. '[' → logprob: -5.16489839553833
    5. '           ' → logprob: -6.03989839553833
    6. '                   ' → logprob: -6.53989839553833
    7. '                       ' → logprob: -6.91489839553833
    8. '   ' → logprob: -7.16489839553833
    9. '       ' → logprob: -7.16489839553833
    10. ' and' → logprob: -7.66489839553833

Token 2194: ' street' (ID: 12901)
  Prédit: ' sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' sp' → logprob: -0.3133135437965393
    2. 'sp' → logprob: -1.3133134841918945
    3. '(sp' → logprob: -10.188313484191895
    4. ' (' → logprob: -12.313313484191895
    5. 'p' → logprob: -12.688313484191895
    6. '(' → logprob: -12.813313484191895
    7. ' p' → logprob: -13.813313484191895
    8. '	sp' → logprob: -13.938313484191895
    9. '_sp' → logprob: -14.313313484191895
    10. '   ' → logprob: -14.813313484191895

Token 2195: '_other' (ID: 70088)
  Prédit: '_point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_point' → logprob: -0.615646481513977
    2. 'pt' → logprob: -2.1156463623046875
    3. '_pt' → logprob: -2.3656463623046875
    4. 'point' → logprob: -2.4906463623046875
    5. '=' → logprob: -2.7406463623046875
    6. '_endpoint' → logprob: -3.8656463623046875
    7. ' =' → logprob: -4.4906463623046875
    8. '_end' → logprob: -4.4906463623046875
    9. 'p' → logprob: -4.4906463623046875
    10. '_p' → logprob: -4.6156463623046875

Token 2196: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01537767518311739
    2. ' =' → logprob: -4.265377521514893
    3. '=_' → logprob: -6.890377521514893
    4. '=
' → logprob: -9.64037799835205
    5. '=(' → logprob: -10.26537799835205
    6. '=p' → logprob: -10.51537799835205
    7. '=end' → logprob: -11.26537799835205
    8. '```' → logprob: -11.51537799835205
    9. '=None' → logprob: -12.01537799835205
    10. '_point' → logprob: -12.01537799835205

Token 2197: ' sp' (ID: 1014)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sp' → logprob: -7.910643762443215e-05
    2. ' sp' → logprob: -9.500079154968262
    3. '(sp' → logprob: -12.375079154968262
    4. '(' → logprob: -17.250078201293945
    5. '	sp' → logprob: -18.375078201293945
    6. '_sp' → logprob: -19.000078201293945
    7. '   ' → logprob: -19.125078201293945
    8. '.sp' → logprob: -20.625078201293945
    9. 'SP' → logprob: -20.750078201293945
    10. ' (' → logprob: -21.250078201293945

Token 2198: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: 0.0
    2. '
' → logprob: -17.125
    3. '1' → logprob: -17.875
    4. 'r' → logprob: -18.125
    5. '[' → logprob: -18.5
    6. '_' → logprob: -19.75
    7. '```' → logprob: -19.75
    8. '{' → logprob: -20.125
    9. '₂' → logprob: -20.125
    10. '   ' → logprob: -20.625

Token 2199: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35499829053878784
    2. 'else' → logprob: -1.2299983501434326
    3. ' else' → logprob: -5.2299981117248535
    4. '
' → logprob: -7.4799981117248535
    5. 'elif' → logprob: -8.479998588562012
    6. '               ' → logprob: -9.354998588562012
    7. '<|end|>' → logprob: -9.354998588562012
    8. ':
' → logprob: -9.854998588562012
    9. '}else' → logprob: -10.854998588562012
    10. ',
' → logprob: -10.979998588562012

Token 2200: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22084441781044006
    2. 'else' → logprob: -1.7208443880081177
    3. '               ' → logprob: -4.095844268798828
    4. ' else' → logprob: -6.220844268798828
    5. '
' → logprob: -7.970844268798828
    6. '}else' → logprob: -10.095844268798828
    7. '```' → logprob: -10.220844268798828
    8. '                
' → logprob: -10.345844268798828
    9. '[' → logprob: -10.470844268798828
    10. '            
' → logprob: -11.095844268798828

Token 2201: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.01892484538257122
    2. ' else' → logprob: -4.018924713134766
    3. '           ' → logprob: -8.268924713134766
    4. '               ' → logprob: -8.518924713134766
    5. ':
' → logprob: -8.768924713134766
    6. '[' → logprob: -9.893924713134766
    7. '```' → logprob: -10.268924713134766
    8. ':' → logprob: -10.768924713134766
    9. 'elif' → logprob: -11.018924713134766
    10. '
' → logprob: -11.643924713134766

Token 2202: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2881920635700226
    2. ':
' → logprob: -1.4131920337677002
    3. '{' → logprob: -5.788192272186279
    4. '               ' → logprob: -6.538192272186279
    5. '{
' → logprob: -6.538192272186279
    6. 'if' → logprob: -7.538192272186279
    7. '           ' → logprob: -8.413191795349121
    8. '[' → logprob: -9.538191795349121
    9. '=' → logprob: -9.538191795349121
    10. '==' → logprob: -10.538191795349121

Token 2203: '               ' (ID: 506)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sp' → logprob: -0.7373009324073792
    2. '               ' → logprob: -0.9873009324073792
    3. ' sp' → logprob: -2.6123008728027344
    4. 'street' → logprob: -2.9873008728027344
    5. ' street' → logprob: -3.8623008728027344
    6. '(sp' → logprob: -7.112300872802734
    7. '           ' → logprob: -7.237300872802734
    8. 'touch' → logprob: -7.362300872802734
    9. '[' → logprob: -7.862300872802734
    10. '                ' → logprob: -8.362300872802734

Token 2204: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' (adapté à ' street') → logprob: -0.031248576939105988
    2. ' street' → logprob: -3.5312485694885254
    3. 'sp' → logprob: -6.531248569488525
    4. '               ' → logprob: -10.656249046325684
    5. 'stre' → logprob: -11.531249046325684
    6. ' sp' → logprob: -12.406249046325684
    7. 'storm' → logprob: -14.656249046325684
    8. 'stroke' → logprob: -15.156249046325684
    9. '.street' → logprob: -15.156249046325684
    10. 'st' → logprob: -15.781249046325684

Token 2205: '_other' (ID: 70088)
  Prédit: '_other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_other' → logprob: -1.580929347255733e-05
    2. 'Other' → logprob: -11.625016212463379
    3. 'other' → logprob: -12.250016212463379
    4. ' Other' → logprob: -13.250016212463379
    5. '_OTHER' → logprob: -16.250015258789062
    6. '           ' → logprob: -17.000015258789062
    7. '=' → logprob: -17.250015258789062
    8. '[' → logprob: -18.000015258789062
    9. '```' → logprob: -18.625015258789062
    10. '               ' → logprob: -18.750015258789062

Token 2206: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00010735770774772391
    2. ' =' → logprob: -10.000107765197754
    3. '==' → logprob: -11.000107765197754
    4. '=
' → logprob: -11.250107765197754
    5. ')' → logprob: -11.500107765197754
    6. ':' → logprob: -11.875107765197754
    7. '<|end|>' → logprob: -12.625107765197754
    8. '.' → logprob: -12.750107765197754
    9. ',' → logprob: -13.125107765197754
    10. '[' → logprob: -13.500107765197754

Token 2207: ' sp' (ID: 1014)
  Prédit: 'sp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sp' → logprob: -0.0004307884373702109
    2. ' sp' → logprob: -7.750430583953857
    3. '(sp' → logprob: -17.500431060791016
    4. '_sp' → logprob: -20.000431060791016
    5. '	sp' → logprob: -20.125431060791016
    6. '.sp' → logprob: -22.375431060791016
    7. '   ' → logprob: -22.625431060791016
    8. 'p' → logprob: -23.125431060791016
    9. 'SP' → logprob: -23.125431060791016
    10. 's' → logprob: -23.250431060791016

Token 2208: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. 'touch' → logprob: -14.250001907348633
    3. '[' → logprob: -14.875001907348633
    4. 't' → logprob: -15.375001907348633
    5. '
' → logprob: -15.375001907348633
    6. '2' → logprob: -15.625001907348633
    7. '```' → logprob: -15.750001907348633
    8. 'sp' → logprob: -16.625001907348633
    9. '(sp' → logprob: -17.500001907348633
    10. '_touch' → logprob: -17.875001907348633

Token 2209: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13244491815567017
    2. '
' → logprob: -3.0074448585510254
    3. '            
' → logprob: -3.3824448585510254
    4. '<|end|>' → logprob: -3.6324448585510254
    5. ')' → logprob: -6.007444858551025
    6. ',' → logprob: -6.007444858551025
    7. '               ' → logprob: -6.132444858551025
    8. '[' → logprob: -6.257444858551025
    9. '  
' → logprob: -7.132444858551025
    10. '<|end|>' → logprob: -7.382444858551025

Token 2210: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05919594690203667
    2. '#' → logprob: -3.9341959953308105
    3. 'sign' → logprob: -5.0591959953308105
    4. 'v' → logprob: -5.1841959953308105
    5. '```' → logprob: -5.4341959953308105
    6. 'direction' → logprob: -5.5591959953308105
    7. 'vec' → logprob: -5.8091959953308105
    8. 'token' → logprob: -6.0591959953308105
    9. 'angle' → logprob: -6.1841959953308105
    10. 't' → logprob: -6.6841959953308105

Token 2211: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6536529660224915
    2. '#' (adapté à ' #') → logprob: -1.7786529064178467
    3. 'v' → logprob: -2.0286529064178467
    4. 'vec' → logprob: -2.4036529064178467
    5. 'sign' → logprob: -3.2786529064178467
    6. 'angle' → logprob: -3.5286529064178467
    7. 'vector' → logprob: -5.528653144836426
    8. 'u' → logprob: -5.653653144836426
    9. '   ' → logprob: -6.153653144836426
    10. 'dir' → logprob: -6.403653144836426

Token 2212: ' Calculate' (ID: 38942)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6403072476387024
    2. '           ' → logprob: -1.6403071880340576
    3. 'vec' → logprob: -2.0153071880340576
    4. 'angle' → logprob: -3.0153071880340576
    5. 'sign' → logprob: -3.2653071880340576
    6. 'v' → logprob: -3.5153071880340576
    7. 'dir' → logprob: -5.015307426452637
    8. 'vector' → logprob: -5.515307426452637
    9. 'dx' → logprob: -5.640307426452637
    10. '   ' → logprob: -6.765307426452637

Token 2213: ' angle' (ID: 16538)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.7663277983665466
    2. 'v' → logprob: -1.0163278579711914
    3. 'sign' → logprob: -2.2663278579711914
    4. 'u' → logprob: -3.3913278579711914
    5. 'angle' → logprob: -4.516327857971191
    6. 'va' → logprob: -5.391327857971191
    7. 'dir' → logprob: -5.391327857971191
    8. '#' → logprob: -5.766327857971191
    9. 'cos' → logprob: -6.141327857971191
    10. '   ' → logprob: -6.141327857971191

Token 2214: ' at' (ID: 540)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cos' → logprob: -0.6351224780082703
    2. '           ' → logprob: -1.885122537612915
    3. '_cos' → logprob: -2.135122537612915
    4. 'sign' → logprob: -2.385122537612915
    5. '_sign' → logprob: -3.635122537612915
    6. 'c' → logprob: -4.510122299194336
    7. 'between' → logprob: -4.885122299194336
    8. 'ab' → logprob: -5.135122299194336
    9. 'import' → logprob: -5.260122299194336
    10. 'ac' → logprob: -5.385122299194336

Token 2215: ' touch' (ID: 7381)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.011066564358770847
    2. ' touch' → logprob: -4.511066436767578
    3. '
' → logprob: -11.761066436767578
    4. 'sign' → logprob: -12.636066436767578
    5. 'the' → logprob: -13.386066436767578
    6. '```' → logprob: -13.511066436767578
    7. '`' → logprob: -13.761066436767578
    8. '_touch' → logprob: -14.011066436767578
    9. '   ' → logprob: -14.511066436767578
    10. 'tou' → logprob: -15.011066436767578

Token 2216: ' between' (ID: 2870)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.124415636062622
    2. 'ba' → logprob: -1.249415636062622
    3. 'bc' → logprob: -2.624415636062622
    4. 'vec' → logprob: -2.999415636062622
    5. 'sign' → logprob: -3.249415636062622
    6. ' ba' → logprob: -3.249415636062622
    7. 'between' → logprob: -3.749415636062622
    8. '   ' → logprob: -3.874415636062622
    9. 'import' → logprob: -3.999415636062622
    10. 'cos' → logprob: -4.374415397644043

Token 2217: ' sign' (ID: 2232)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.23998501896858215
    2. 'sign' → logprob: -2.3649849891662598
    3. 'touch' → logprob: -2.8649849891662598
    4. 'street' → logprob: -2.8649849891662598
    5. ' open' → logprob: -5.61498498916626
    6. ' street' → logprob: -7.36498498916626
    7. 'se' → logprob: -7.86498498916626
    8. ' sign' → logprob: -8.489985466003418
    9. ' touch' → logprob: -8.614985466003418
    10. 's' → logprob: -8.989985466003418

Token 2218: ' and' (ID: 326)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.5699783563613892
    2. '(t' → logprob: -1.1949783563613892
    3. ',' → logprob: -2.9449782371520996
    4. ' touch' → logprob: -3.3199782371520996
    5. ' (' → logprob: -4.5699782371521
    6. '(s' → logprob: -4.6949782371521
    7. ' and' → logprob: -5.1949782371521
    8. '(' → logprob: -5.9449782371521
    9. 'and' → logprob: -6.0699782371521
    10. ',t' → logprob: -6.3199782371521

Token 2219: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.05191277340054512
    2. ' street' → logprob: -3.301912784576416
    3. 'open' → logprob: -4.676912784576416
    4. 'touch' → logprob: -5.676912784576416
    5. ' open' → logprob: -7.676912784576416
    6. 'graph' → logprob: -8.426912307739258
    7. '(' → logprob: -9.676912307739258
    8. 'stre' → logprob: -9.801912307739258
    9. '(st' → logprob: -10.301912307739258
    10. ' touch' → logprob: -10.301912307739258

Token 2220: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.18114785850048065
    2. 'sign' → logprob: -3.056147813796997
    3. 'vec' → logprob: -3.306147813796997
    4. 'v' → logprob: -3.681147813796997
    5. 'angle' → logprob: -4.556148052215576
    6. 'touch' → logprob: -5.306148052215576
    7. '   ' → logprob: -5.556148052215576
    8. ',' → logprob: -5.931148052215576
    9. '
' → logprob: -5.931148052215576
    10. '#' → logprob: -6.056148052215576

Token 2221: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5858166217803955
    2. '   ' → logprob: -1.2108166217803955
    3. ',' → logprob: -3.4608166217803955
    4. 'vec' → logprob: -3.7108166217803955
    5. 'u' → logprob: -3.8358166217803955
    6. 'v' → logprob: -4.210816383361816
    7. 'sign' → logprob: -5.460816383361816
    8. ' (' → logprob: -5.710816383361816
    9. '```' → logprob: -5.710816383361816
    10. 'p' → logprob: -5.835816383361816

Token 2222: ' #' (ID: 1069)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cos' → logprob: -0.07497171312570572
    2. 'sign' → logprob: -3.9499716758728027
    3. 'angle' → logprob: -4.074971675872803
    4. 'c' → logprob: -4.449971675872803
    5. 'ac' → logprob: -4.949971675872803
    6. 'acos' → logprob: -5.199971675872803
    7. 'vec' → logprob: -5.699971675872803
    8. 'ang' → logprob: -5.824971675872803
    9. 'v' → logprob: -5.949971675872803
    10. 'cs' → logprob: -7.574971675872803

Token 2223: ' vectors' (ID: 52254)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.20837172865867615
    2. 'ang' → logprob: -2.833371639251709
    3. 'vec' → logprob: -3.208371639251709
    4. 'v' → logprob: -3.458371639251709
    5. '           ' → logprob: -4.333371639251709
    6. '   ' → logprob: -4.458371639251709
    7. 'va' → logprob: -4.708371639251709
    8. 'sign' → logprob: -4.833371639251709
    9. 'cos' → logprob: -5.083371639251709
    10. 'a' → logprob: -5.458371639251709

Token 2224: ':' (ID: 25)
  Prédit: 'ba'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ba' → logprob: -0.4629283845424652
    2. 'sign' → logprob: -1.5879284143447876
    3. '           ' → logprob: -2.587928295135498
    4. 'v' → logprob: -3.712928295135498
    5. ' =' → logprob: -3.962928295135498
    6. 'bc' → logprob: -5.087928295135498
    7. 'bs' → logprob: -5.337928295135498
    8. 'vec' → logprob: -5.462928295135498
    9. '=' → logprob: -5.462928295135498
    10. 'va' → logprob: -5.587928295135498

Token 2225: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -1.076409101486206
    2. 'ba' → logprob: -1.451409101486206
    3. 'vec' → logprob: -1.701409101486206
    4. ' vec' → logprob: -3.326409101486206
    5. 'v' → logprob: -3.451409101486206
    6. '   ' → logprob: -3.701409101486206
    7. ' ba' → logprob: -3.701409101486206
    8. ' (' → logprob: -3.826409101486206
    9. ' sign' → logprob: -3.951409101486206
    10. '```' → logprob: -4.326409339904785

Token 2226: ' from' (ID: 591)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5706567764282227
    2. '_vec' → logprob: -1.5706567764282227
    3. 'vec' → logprob: -2.5706567764282227
    4. '   ' → logprob: -2.9456567764282227
    5. '_to' → logprob: -3.5706567764282227
    6. '_dir' → logprob: -3.9456567764282227
    7. 'u' → logprob: -5.070656776428223
    8. 'v' → logprob: -5.320656776428223
    9. '_touch' → logprob: -5.445656776428223
    10. '_sign' → logprob: -5.695656776428223

Token 2227: ' touch' (ID: 7381)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.06237354502081871
    2. 'open' → logprob: -2.812373638153076
    3. ' touch' → logprob: -7.937373638153076
    4. ' open' → logprob: -10.312373161315918
    5. '(open' → logprob: -12.312373161315918
    6. 'sign' → logprob: -12.812373161315918
    7. '_touch' → logprob: -13.937373161315918
    8. '   ' → logprob: -14.062373161315918
    9. '
' → logprob: -14.062373161315918
    10. '```' → logprob: -14.437373161315918

Token 2228: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.5632734298706055
    2. 'to' → logprob: -1.0632734298706055
    3. ',' → logprob: -3.1882734298706055
    4. 'touch' → logprob: -4.1882734298706055
    5. ' =' → logprob: -4.9382734298706055
    6. '           ' → logprob: -5.3132734298706055
    7. '=' → logprob: -5.9382734298706055
    8. ')' → logprob: -5.9382734298706055
    9. ' touch' → logprob: -6.3132734298706055
    10. 'tow' → logprob: -6.9382734298706055

Token 2229: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.00043126524542458355
    2. ' open' → logprob: -7.750431060791016
    3. '   ' → logprob: -15.375431060791016
    4. '	open' → logprob: -16.250431060791016
    5. '(open' → logprob: -16.875431060791016
    6. ' ' → logprob: -16.875431060791016
    7. '```' → logprob: -17.250431060791016
    8. '
' → logprob: -17.375431060791016
    9. '  ' → logprob: -18.750431060791016
    10. 'Open' → logprob: -19.000431060791016

Token 2230: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.28640812635421753
    2. 'end' → logprob: -1.4114081859588623
    3. '
' → logprob: -6.161407947540283
    4. ' =' → logprob: -6.536407947540283
    5. '=' → logprob: -8.411408424377441
    6. ',' → logprob: -8.661408424377441
    7. 'End' → logprob: -8.786408424377441
    8. '   ' → logprob: -8.911408424377441
    9. ' end' → logprob: -8.911408424377441
    10. '=end' → logprob: -9.036408424377441

Token 2231: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2579595148563385
    2. 'vec' → logprob: -3.2579596042633057
    3. '   ' → logprob: -3.5079596042633057
    4. ',' → logprob: -3.5079596042633057
    5. ' =' → logprob: -3.6329596042633057
    6. ' (' → logprob: -3.6329596042633057
    7. '
' → logprob: -3.6329596042633057
    8. ')' → logprob: -4.507959365844727
    9. 'v' → logprob: -4.632959365844727
    10. ')
' → logprob: -5.632959365844727

Token 2232: ' street' (ID: 12901)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.7191374897956848
    2. ' sign' → logprob: -1.59413743019104
    3. 'street' → logprob: -2.46913743019104
    4. 'vec' → logprob: -2.59413743019104
    5. ' street' → logprob: -2.96913743019104
    6. 'touch' → logprob: -3.21913743019104
    7. ' (' → logprob: -3.84413743019104
    8. '(' → logprob: -3.84413743019104
    9. ' touch' → logprob: -4.844137668609619
    10. ' vec' → logprob: -6.094137668609619

Token 2233: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.2100075483322144
    2. ' =' → logprob: -1.3350075483322144
    3. '_vec' → logprob: -2.085007667541504
    4. 'vector' → logprob: -2.460007667541504
    5. 'vec' → logprob: -2.585007667541504
    6. ' from' → logprob: -3.335007667541504
    7. 'to' → logprob: -3.585007667541504
    8. ' to' → logprob: -3.710007667541504
    9. '=' → logprob: -3.960007667541504
    10. ' vector' → logprob: -4.085007667541504

Token 2234: ' touch' (ID: 7381)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.003882619086652994
    2. ' touch' → logprob: -5.87888240814209
    3. 'street' → logprob: -6.87888240814209
    4. ' street' → logprob: -10.25388240814209
    5. '```' → logprob: -12.37888240814209
    6. '_touch' → logprob: -13.37888240814209
    7. '
' → logprob: -13.62888240814209
    8. '.touch' → logprob: -14.37888240814209
    9. 'edge' → logprob: -14.62888240814209
    10. 'stretch' → logprob: -15.00388240814209

Token 2235: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.16115093231201172
    2. 'to' → logprob: -1.9111509323120117
    3. ')' → logprob: -7.536150932312012
    4. ',' → logprob: -8.661150932312012
    5. '_to' → logprob: -9.411150932312012
    6. 'To' → logprob: -11.286150932312012
    7. ',to' → logprob: -11.286150932312012
    8. '[' → logprob: -11.598650932312012
    9. 'tow' → logprob: -11.661150932312012
    10. '<|end|>' → logprob: -11.848650932312012

Token 2236: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.0007114782347343862
    2. ' street' → logprob: -7.250711441040039
    3. 'stre' → logprob: -13.625711441040039
    4. 'open' → logprob: -16.62571144104004
    5. 'st' → logprob: -17.62571144104004
    6. '```' → logprob: -17.75071144104004
    7. 'other' → logprob: -17.87571144104004
    8. '   ' → logprob: -18.12571144104004
    9. 'stroke' → logprob: -18.25071144104004
    10. 'touch' → logprob: -18.25071144104004

Token 2237: '_other' (ID: 70088)
  Prédit: '_other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_other' → logprob: -1.5094070477061905e-05
    2. 'other' → logprob: -11.125015258789062
    3. 'Other' → logprob: -16.250015258789062
    4. '
' → logprob: -16.625015258789062
    5. 'seg' → logprob: -17.500015258789062
    6. '```' → logprob: -17.625015258789062
    7. '   ' → logprob: -17.750015258789062
    8. '_segments' → logprob: -18.000015258789062
    9. 'segment' → logprob: -18.375015258789062
    10. ' ' → logprob: -18.500015258789062

Token 2238: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007375423796474934
    2. '
' → logprob: -6.007375240325928
    3. 'v' → logprob: -6.382375240325928
    4. 'sign' → logprob: -6.757375240325928
    5. '            
' → logprob: -7.757375240325928
    6. 'vec' → logprob: -7.757375240325928
    7. ',' → logprob: -8.007375717163086
    8. '   ' → logprob: -9.382375717163086
    9. '          ' → logprob: -9.382375717163086
    10. ')' → logprob: -9.632375717163086

Token 2239: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0026088329032063484
    2. '
' → logprob: -7.002608776092529
    3. 'v' → logprob: -7.252608776092529
    4. 'sign' → logprob: -7.252608776092529
    5. '   ' → logprob: -10.252609252929688
    6. 'vec' → logprob: -10.502609252929688
    7. '            
' → logprob: -10.752609252929688
    8. '       ' → logprob: -10.752609252929688
    9. 'angle' → logprob: -10.877609252929688
    10. '```' → logprob: -11.127609252929688

Token 2240: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.33548274636268616
    2. 'u' → logprob: -2.3354828357696533
    3. 'sign' → logprob: -2.5854828357696533
    4. 'vu' → logprob: -2.9604828357696533
    5. 'vec' → logprob: -3.5854828357696533
    6. '   ' → logprob: -4.085482597351074
    7. 'su' → logprob: -4.460482597351074
    8. '```' → logprob: -6.335482597351074
    9. 'vs' → logprob: -6.585482597351074
    10. 's' → logprob: -8.460482597351074

Token 2241: '_sign' (ID: 24730)
  Prédit: '_sign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sign' → logprob: -0.7707429528236389
    2. ' =' → logprob: -1.3957428932189941
    3. '1' → logprob: -2.520742893218994
    4. 'sign' → logprob: -2.645742893218994
    5. '_s' → logprob: -3.020742893218994
    6. 's' → logprob: -3.145742893218994
    7. '=' → logprob: -3.645742893218994
    8. '=(' → logprob: -5.395742893218994
    9. 'ect' → logprob: -5.520742893218994
    10. 'ector' → logprob: -6.020742893218994

Token 2242: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.42963990569114685
    2. '=' → logprob: -1.0546399354934692
    3. '=(' → logprob: -7.17963981628418
    4. '=
' → logprob: -9.30463981628418
    5. ' =(' → logprob: -10.30463981628418
    6. ' =
' → logprob: -10.67963981628418
    7. ')' → logprob: -11.30463981628418
    8. '   ' → logprob: -11.92963981628418
    9. ' ' → logprob: -12.92963981628418
    10. '=v' → logprob: -13.80463981628418

Token 2243: ' vec' (ID: 10563)
  Prédit: '(vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(vec' → logprob: -0.5875856280326843
    2. '(open' → logprob: -0.9625856280326843
    3. ' (' → logprob: -3.587585687637329
    4. 'vec' → logprob: -4.58758544921875
    5. '(op' → logprob: -4.58758544921875
    6. '(s' → logprob: -5.58758544921875
    7. '(e' → logprob: -5.71258544921875
    8. '(' → logprob: -5.83758544921875
    9. '(x' → logprob: -6.21258544921875
    10. '(t' → logprob: -7.21258544921875

Token 2244: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0005301565979607403
    2. 'touch' → logprob: -7.625530242919922
    3. 't' → logprob: -10.125530242919922
    4. '(' → logprob: -13.625530242919922
    5. '	t' → logprob: -14.875530242919922
    6. ' touch' → logprob: -15.375530242919922
    7. '_touch' → logprob: -16.125530242919922
    8. '[t' → logprob: -16.375530242919922
    9. 'tou' → logprob: -17.000530242919922
    10. ' (' → logprob: -17.375530242919922

Token 2245: 'ouch' (ID: 4058)
  Prédit: 'ouch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouch' → logprob: -0.0004902417422272265
    2. 'touch' → logprob: -7.625490188598633
    3. 'o' → logprob: -15.125490188598633
    4. 'uch' → logprob: -15.125490188598633
    5. '_touch' → logprob: -15.125490188598633
    6. 't' → logprob: -15.750490188598633
    7. 'ou' → logprob: -15.750490188598633
    8. '```' → logprob: -16.125490188598633
    9. 'OUCH' → logprob: -16.250490188598633
    10. '(t' → logprob: -16.375490188598633

Token 2246: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000622249732259661
    2. ',t' → logprob: -8.000621795654297
    3. ',
' → logprob: -9.000621795654297
    4. ',v' → logprob: -9.125621795654297
    5. ' ,' → logprob: -10.750621795654297
    6. 'open' → logprob: -11.375621795654297
    7. ',to' → logprob: -12.625621795654297
    8. 'touch' → logprob: -13.000621795654297
    9. '(open' → logprob: -13.000621795654297
    10. '[' → logprob: -13.625621795654297

Token 2247: ' open' (ID: 2494)
  Prédit: 'open'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'open' → logprob: -0.0002613358374219388
    2. ' open' → logprob: -8.250261306762695
    3. '	open' → logprob: -18.500261306762695
    4. '(open' → logprob: -18.750261306762695
    5. '   ' → logprob: -19.625261306762695
    6. ' ' → logprob: -21.000261306762695
    7. '
' → logprob: -21.250261306762695
    8. 'Open' → logprob: -21.250261306762695
    9. 'openid' → logprob: -22.625261306762695
    10. '=open' → logprob: -22.625261306762695

Token 2248: '_end' (ID: 13707)
  Prédit: '_end'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_end' → logprob: -0.0004951290902681649
    2. 'end' → logprob: -7.625494956970215
    3. ',end' → logprob: -13.000494956970215
    4. 'End' → logprob: -13.625494956970215
    5. '	end' → logprob: -14.875494956970215
    6. ',_' → logprob: -15.000494956970215
    7. '
' → logprob: -15.000494956970215
    8. '```' → logprob: -15.000494956970215
    9. '_' → logprob: -15.250494956970215
    10. ')_' → logprob: -15.375494956970215

Token 2249: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.4742039144039154
    2. ')' → logprob: -0.9742039442062378
    3. ')
' → logprob: -9.349204063415527
    4. ')#' → logprob: -11.599204063415527
    5. ')

' → logprob: -12.599204063415527
    6. ')`
' → logprob: -12.599204063415527
    7. ')v' → logprob: -12.599204063415527
    8. ' )
' → logprob: -12.724204063415527
    9. ')[' → logprob: -12.849204063415527
    10. '),' → logprob: -13.099204063415527

Token 2250: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2030418962240219
    2. 'v' → logprob: -1.953041911125183
    3. ' v' → logprob: -4.953042030334473
    4. '            ' → logprob: -5.203042030334473
    5. '[' → logprob: -5.328042030334473
    6. '   ' → logprob: -5.453042030334473
    7. ' ' → logprob: -6.078042030334473
    8. ')' → logprob: -6.203042030334473
    9. '	v' → logprob: -6.328042030334473
    10. '		' → logprob: -6.453042030334473

Token 2251: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' (adapté à ' v') → logprob: -0.258796751499176
    2. ' v' → logprob: -1.5087966918945312
    3. '           ' → logprob: -5.008796691894531
    4. '            ' → logprob: -10.508796691894531
    5. '(v' → logprob: -10.758796691894531
    6. ' (' → logprob: -10.883796691894531
    7. '```' → logprob: -10.883796691894531
    8. '   ' → logprob: -11.383796691894531
    9. '`' → logprob: -11.508796691894531
    10. '
' → logprob: -12.258796691894531

Token 2252: '_st' (ID: 2518)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.32427823543548584
    2. '_sign' → logprob: -2.0742783546447754
    3. '_st' → logprob: -3.0742783546447754
    4. '(st' → logprob: -3.1992783546447754
    5. '_,' → logprob: -4.324278354644775
    6. ',' → logprob: -4.574278354644775
    7. 'sign' → logprob: -5.074278354644775
    8. 's' → logprob: -5.449278354644775
    9. 'touch' → logprob: -5.449278354644775
    10. '_touch' → logprob: -5.449278354644775

Token 2253: 'reet' (ID: 5409)
  Prédit: 'reet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reet' → logprob: -1.282920129597187e-05
    2. 're' → logprob: -11.875012397766113
    3. 'ree' → logprob: -12.375012397766113
    4. 'r' → logprob: -13.750012397766113
    5. 'reat' → logprob: -16.37501335144043
    6. 'touch' → logprob: -16.62501335144043
    7. 'root' → logprob: -16.62501335144043
    8. '_re' → logprob: -17.50001335144043
    9. 'REET' → logprob: -17.50001335144043
    10. 'ret' → logprob: -17.75001335144043

Token 2254: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4745333194732666
    2. '=' → logprob: -0.9745333194732666
    3. ')' → logprob: -8.474533081054688
    4. ',' → logprob: -9.099533081054688
    5. '[' → logprob: -9.349533081054688
    6. ')=' → logprob: -11.474533081054688
    7. '=
' → logprob: -11.599533081054688
    8. ' =
' → logprob: -11.724533081054688
    9. '=[' → logprob: -12.849533081054688
    10. '<|end|>' → logprob: -12.849533081054688

Token 2255: ' vec' (ID: 10563)
  Prédit: 'vec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vec' → logprob: -0.20196200907230377
    2. ' vec' → logprob: -1.7019619941711426
    3. '(vec' → logprob: -7.576961994171143
    4. '(' → logprob: -10.7019624710083
    5. ' (' → logprob: -11.5769624710083
    6. ' vect' → logprob: -13.8269624710083
    7. '.vec' → logprob: -14.0769624710083
    8. '	vec' → logprob: -14.2019624710083
    9. 'vect' → logprob: -14.3269624710083
    10. 'vector' → logprob: -14.7019624710083

Token 2256: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.00027063372544944286
    2. 'touch' → logprob: -8.25027084350586
    3. 't' → logprob: -12.12527084350586
    4. '(st' → logprob: -12.87527084350586
    5. ' touch' → logprob: -13.87527084350586
    6. '	t' → logprob: -16.00027084350586
    7. '[t' → logprob: -16.25027084350586
    8. '(' → logprob: -16.75027084350586
    9. 'street' → logprob: -16.75027084350586
    10. '_touch' → logprob: -17.00027084350586

Token 2257: 'ouch' (ID: 4058)
  Prédit: 'ouch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouch' → logprob: -0.08896836638450623
    2. 'touch' → logprob: -2.463968276977539
    3. '_touch' → logprob: -11.338968276977539
    4. 'out' → logprob: -12.963968276977539
    5. '.touch' → logprob: -13.338968276977539
    6. 't' → logprob: -13.338968276977539
    7. 'tou' → logprob: -13.463968276977539
    8. 'uch' → logprob: -13.463968276977539
    9. ' touch' → logprob: -13.713968276977539
    10. '(t' → logprob: -13.963968276977539

Token 2258: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.7146746763028204e-05
    2. ',
' → logprob: -10.50003719329834
    3. ' ,' → logprob: -12.75003719329834
    4. '(' → logprob: -13.12503719329834
    5. '(st' → logprob: -13.50003719329834
    6. 'street' → logprob: -13.62503719329834
    7. ',(' → logprob: -14.50003719329834
    8. ' street' → logprob: -14.75003719329834
    9. ')' → logprob: -16.125036239624023
    10. '‌,' → logprob: -16.250036239624023

Token 2259: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -1.306760805164231e-05
    2. ' street' → logprob: -11.25001335144043
    3. 'stre' → logprob: -17.87501335144043
    4. 'stroke' → logprob: -21.12501335144043
    5. '.street' → logprob: -21.62501335144043
    6. '   ' → logprob: -22.75001335144043
    7. ' ' → logprob: -22.87501335144043
    8. 'storm' → logprob: -23.87501335144043
    9. 'school' → logprob: -24.12501335144043
    10. 'st' → logprob: -24.12501335144043

Token 2260: '_other' (ID: 70088)
  Prédit: '_other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_other' → logprob: -1.0206720617134124e-05
    2. 'other' → logprob: -11.50001049041748
    3. 'Other' → logprob: -17.375009536743164
    4. '
' → logprob: -19.125009536743164
    5. '_OTHER' → logprob: -19.375009536743164
    6. ' other' → logprob: -19.375009536743164
    7. '```' → logprob: -20.750009536743164
    8. '其他' → logprob: -21.000009536743164
    9. '   ' → logprob: -21.250009536743164
    10. '(other' → logprob: -21.625009536743164

Token 2261: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2520091235637665
    2. ')
' → logprob: -1.5020091533660889
    3. '           ' → logprob: -10.127009391784668
    4. ')
' → logprob: -10.752009391784668
    5. ')

' → logprob: -12.127009391784668
    6. ')#' → logprob: -12.377009391784668
    7. ')`
' → logprob: -13.502009391784668
    8. ')\' → logprob: -14.002009391784668
    9. '   ' → logprob: -14.127009391784668
    10. ')`' → logprob: -14.127009391784668

Token 2262: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027264172676950693
    2. 'import' → logprob: -7.2527265548706055
    3. 'angle' → logprob: -7.3777265548706055
    4. '```' → logprob: -8.002726554870605
    5. '       ' → logprob: -8.502726554870605
    6. 'v' → logprob: -9.377726554870605
    7. '   ' → logprob: -9.502726554870605
    8. 'a' → logprob: -9.502726554870605
    9. ' angle' → logprob: -9.752726554870605
    10. ',' → logprob: -9.877726554870605

Token 2263: ' #' (ID: 1069)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -1.379779577255249
    2. 'dot' → logprob: -1.379779577255249
    3. '           ' → logprob: -1.629779577255249
    4. 'angle' → logprob: -1.754779577255249
    5. 'ang' → logprob: -3.004779577255249
    6. 'from' → logprob: -3.754779577255249
    7. '   ' → logprob: -4.004779815673828
    8. 'cos' → logprob: -4.129779815673828
    9. 'a' → logprob: -5.504779815673828
    10. '#' (adapté à ' #') → logprob: -5.504779815673828

Token 2264: ' angle' (ID: 16538)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cos' → logprob: -0.7831090092658997
    2. 'angle' → logprob: -0.9081090092658997
    3. 'ang' → logprob: -3.033108949661255
    4. 'import' → logprob: -3.783108949661255
    5. 'dot' → logprob: -4.158109188079834
    6. 'c' → logprob: -4.283109188079834
    7. 'sign' → logprob: -4.283109188079834
    8. '           ' → logprob: -4.908109188079834
    9. 'a' → logprob: -5.533109188079834
    10. 'cost' → logprob: -5.658109188079834

Token 2265: ' cosine' (ID: 185421)
  Prédit: '_cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_cos' → logprob: -0.03902507200837135
    2. ' =' → logprob: -4.03902530670166
    3. '_sign' → logprob: -4.66402530670166
    4. '_angle' → logprob: -5.66402530670166
    5. 'cos' → logprob: -6.16402530670166
    6. '_c' → logprob: -6.28902530670166
    7. '=' → logprob: -6.28902530670166
    8. '_theta' → logprob: -7.16402530670166
    9. '   ' → logprob: -8.16402530670166
    10. '_val' → logprob: -8.91402530670166

Token 2266: ':
' (ID: 734)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.44276297092437744
    2. '=' → logprob: -1.5677629709243774
    3. 'cos' → logprob: -3.192762851715088
    4. '           ' → logprob: -4.067762851715088
    5. 'c' → logprob: -4.067762851715088
    6. '_cos' → logprob: -4.067762851715088
    7. 'sign' → logprob: -4.192762851715088
    8. 'a' → logprob: -4.692762851715088
    9. '_sign' → logprob: -4.692762851715088
    10. 'angle' → logprob: -4.942762851715088

Token 2267: '           ' (ID: 352)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.091832160949707
    2. 'cos' → logprob: -1.216832160949707
    3. 'ac' → logprob: -1.466832160949707
    4. '   ' → logprob: -2.716832160949707
    5. 'ca' → logprob: -3.716832160949707
    6. 'angle' → logprob: -4.341832160949707
    7. 'ang' → logprob: -4.466832160949707
    8. 'cost' → logprob: -4.591832160949707
    9. 'acos' → logprob: -5.091832160949707
    10. 'a' → logprob: -6.591832160949707

Token 2268: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.8214840888977051
    2. 'ac' → logprob: -1.321484088897705
    3. 'cos' → logprob: -1.446484088897705
    4. 'acos' → logprob: -4.071484088897705
    5. 'cost' → logprob: -4.446484088897705
    6. 'angle' → logprob: -4.446484088897705
    7. 'ang' → logprob: -4.821484088897705
    8. 'ca' → logprob: -5.946484088897705
    9. 'sign' → logprob: -6.071484088897705
    10. 'a' → logprob: -6.196484088897705

Token 2269: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7380631566047668
    2. 'os' → logprob: -1.113063097000122
    3. ' =' → logprob: -1.863063097000122
    4. '_angle' → logprob: -4.613063335418701
    5. 'angle' → logprob: -4.863063335418701
    6. 'cos' → logprob: -5.113063335418701
    7. 'sign' → logprob: -5.488063335418701
    8. '=c' → logprob: -5.738063335418701
    9. '=os' → logprob: -5.738063335418701
    10. 'c' → logprob: -6.988063335418701

Token 2270: ' dot' (ID: 16579)
  Prédit: 'dot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dot' → logprob: -0.020679574459791183
    2. 'angle' → logprob: -3.895679473876953
    3. '(dot' → logprob: -9.645679473876953
    4. ' dot' → logprob: -9.895679473876953
    5. 'cos' → logprob: -11.520679473876953
    6. 'abs' → logprob: -12.145679473876953
    7. '   ' → logprob: -13.020679473876953
    8. ' angle' → logprob: -13.395679473876953
    9. 'max' → logprob: -13.645679473876953
    10. '(angle' → logprob: -14.520679473876953

Token 2271: '(v' (ID: 6932)
  Prédit: '(v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.0009751861798577011
    2. '(' → logprob: -7.000975131988525
    3. 'v' → logprob: -9.875975608825684
    4. '(
' → logprob: -11.500975608825684
    5. '(c' → logprob: -14.500975608825684
    6. '((' → logprob: -14.625975608825684
    7. ' (' → logprob: -14.750975608825684
    8. '(t' → logprob: -15.750975608825684
    9. ')' → logprob: -15.875975608825684
    10. '(u' → logprob: -16.125974655151367

Token 2272: '_sign' (ID: 24730)
  Prédit: '_sign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sign' → logprob: -0.006012817844748497
    2. '_st' → logprob: -6.131012916564941
    3. 'v' → logprob: -6.256012916564941
    4. 'sign' → logprob: -7.256012916564941
    5. '(v' → logprob: -7.381012916564941
    6. '_v' → logprob: -7.631012916564941
    7. '(sign' → logprob: -10.631012916564941
    8. '(t' → logprob: -11.256012916564941
    9. '_t' → logprob: -11.756012916564941
    10. '_s' → logprob: -12.006012916564941

Token 2273: ',' (ID: 11)
  Prédit: ',v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',v' → logprob: -0.3510769009590149
    2. ',' → logprob: -1.2260768413543701
    3. '(v' → logprob: -6.476077079772949
    4. ' ,' → logprob: -7.601077079772949
    5. ',c' → logprob: -8.85107707977295
    6. ',
' → logprob: -9.10107707977295
    7. '(' → logprob: -9.22607707977295
    8. 'v' → logprob: -9.72607707977295
    9. ')' → logprob: -9.85107707977295
    10. ',t' → logprob: -10.35107707977295

Token 2274: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0011714138090610504
    2. ' v' → logprob: -6.751171588897705
    3. ')v' → logprob: -13.751171112060547
    4. '(v' → logprob: -16.501171112060547
    5. '	v' → logprob: -16.626171112060547
    6. ')' → logprob: -17.251171112060547
    7. '           ' → logprob: -18.501171112060547
    8. ',v' → logprob: -18.876171112060547
    9. 'vq' → logprob: -19.251171112060547
    10. '$v' → logprob: -19.876171112060547

Token 2275: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -6.217951886355877e-05
    2. 'street' → logprob: -9.750061988830566
    3. 'st' → logprob: -13.125061988830566
    4. '_sign' → logprob: -13.375061988830566
    5. 'v' → logprob: -15.875061988830566
    6. '	st' → logprob: -16.750062942504883
    7. '
' → logprob: -17.875062942504883
    8. '(st' → logprob: -17.875062942504883
    9. 'sign' → logprob: -18.125062942504883
    10. '       ' → logprob: -18.875062942504883

Token 2276: 'reet' (ID: 5409)
  Prédit: 'reet'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reet' → logprob: -4.4849443838757e-06
    2. 'ree' → logprob: -13.250004768371582
    3. 'REET' → logprob: -14.500004768371582
    4. '_sign' → logprob: -14.625004768371582
    5. 're' → logprob: -14.625004768371582
    6. 'ret' → logprob: -14.875004768371582
    7. 'reat' → logprob: -15.250004768371582
    8. 'sign' → logprob: -15.875004768371582
    9. '1' → logprob: -16.000003814697266
    10. 'root' → logprob: -16.250003814697266

Token 2277: ')/(' (ID: 60504)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09240121394395828
    2. ' /' → logprob: -2.7174012660980225
    3. ' )' → logprob: -4.842401027679443
    4. '/' → logprob: -5.092401027679443
    5. ')
' → logprob: -6.342401027679443
    6. ')/' → logprob: -6.717401027679443
    7. ')/(' → logprob: -6.967401027679443
    8. '(' → logprob: -7.092401027679443
    9. '<|end|>' → logprob: -7.342401027679443
    10. '/c' → logprob: -7.467401027679443

Token 2278: 'math' (ID: 20310)
  Prédit: 'math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.17402531206607819
    2. 'length' → logprob: -1.924025297164917
    3. '(math' → logprob: -4.924025535583496
    4. '(length' → logprob: -5.049025535583496
    5. ' math' → logprob: -11.299025535583496
    6. '(' → logprob: -12.049025535583496
    7. '[length' → logprob: -14.174025535583496
    8. 'Math' → logprob: -15.049025535583496
    9. ' length' → logprob: -15.049025535583496
    10. 'max' → logprob: -15.299025535583496

Token 2279: '.h' (ID: 1508)
  Prédit: '.h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -0.0023135726805776358
    2. 'hyp' → logprob: -6.127313613891602
    3. '.sqrt' → logprob: -9.127313613891602
    4. '```' → logprob: -11.377313613891602
    5. '.' → logprob: -12.752313613891602
    6. '``' → logprob: -13.377313613891602
    7. 'sqrt' → logprob: -13.877313613891602
    8. '	h' → logprob: -14.752313613891602
    9. ' hypot' → logprob: -15.002313613891602
    10. '.dist' → logprob: -15.127313613891602

Token 2280: 'yp' (ID: 1785)
  Prédit: 'yp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yp' → logprob: -0.03546236455440521
    2. 'sqrt' → logprob: -4.785462379455566
    3. '.sqrt' → logprob: -5.285462379455566
    4. 'hyp' → logprob: -5.410462379455566
    5. '```' → logprob: -5.910462379455566
    6. '.' → logprob: -6.410462379455566
    7. 'ot' → logprob: -6.410462379455566
    8. 'at' → logprob: -6.535462379455566
    9. '
' → logprob: -6.910462379455566
    10. 'op' → logprob: -7.160462379455566

Token 2281: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.0001825642102630809
    2. 'otp' → logprob: -10.000182151794434
    3. 'at' → logprob: -10.250182151794434
    4. 'op' → logprob: -10.750182151794434
    5. 'ots' → logprob: -11.000182151794434
    6. 't' → logprob: -11.000182151794434
    7. 'yp' → logprob: -11.125182151794434
    8. 'pot' → logprob: -11.875182151794434
    9. '[' → logprob: -12.000182151794434
    10. '```' → logprob: -12.875182151794434

Token 2282: '(*' (ID: 9000)
  Prédit: '*v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*v' → logprob: -0.19188416004180908
    2. '(*' → logprob: -1.941884160041809
    3. 'v' → logprob: -4.0668840408325195
    4. '*' → logprob: -4.4418840408325195
    5. '(v' → logprob: -6.5668840408325195
    6. '*t' → logprob: -7.9418840408325195
    7. '
' → logprob: -8.69188404083252
    8. '*(' → logprob: -9.56688404083252
    9. '*c' → logprob: -10.31688404083252
    10. ' *' → logprob: -10.31688404083252

Token 2283: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -1.0802738870552275e-05
    2. ' v' → logprob: -11.62501049041748
    3. '(v' → logprob: -13.87501049041748
    4. '
' → logprob: -15.12501049041748
    5. ')v' → logprob: -15.75001049041748
    6. '   ' → logprob: -15.87501049041748
    7. '	v' → logprob: -17.125011444091797
    8. 'c' → logprob: -17.625011444091797
    9. '```' → logprob: -17.625011444091797
    10. 'touch' → logprob: -17.625011444091797

Token 2284: '_sign' (ID: 24730)
  Prédit: '_sign'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sign' → logprob: -0.07920679450035095
    2. '_st' → logprob: -2.829206705093384
    3. 'v' → logprob: -4.204206943511963
    4. 'sign' → logprob: -6.329206943511963
    5. '_v' → logprob: -8.079206466674805
    6. 'st' → logprob: -10.204206466674805
    7. ' v' → logprob: -12.079206466674805
    8. '(v' → logprob: -12.454206466674805
    9. '_s' → logprob: -12.954206466674805
    10. '
' → logprob: -13.204206466674805

Token 2285: ')*' (ID: 11043)
  Prédit: ')*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')*' → logprob: -0.25236082077026367
    2. ')' → logprob: -1.5023608207702637
    3. '*' → logprob: -8.877361297607422
    4. ' )' → logprob: -9.127361297607422
    5. ')*(' → logprob: -10.127361297607422
    6. ')+' → logprob: -10.377361297607422
    7. ')
' → logprob: -10.377361297607422
    8. ')**' → logprob: -10.502361297607422
    9. ',' → logprob: -11.252361297607422
    10. '*)' → logprob: -11.627361297607422

Token 2286: 'math' (ID: 20310)
  Prédit: 'math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -5.919942486798391e-05
    2. ' math' → logprob: -9.750059127807617
    3. '(math' → logprob: -14.000059127807617
    4. 'm' → logprob: -18.500059127807617
    5. '   ' → logprob: -18.750059127807617
    6. 'mat' → logprob: -20.000059127807617
    7. 'Math' → logprob: -20.375059127807617
    8. '  ' → logprob: -20.625059127807617
    9. '.math' → logprob: -20.875059127807617
    10. '           ' → logprob: -21.375059127807617

Token 2287: '.h' (ID: 1508)
  Prédit: '.h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.h' → logprob: -0.030382772907614708
    2. 'hyp' → logprob: -3.5303828716278076
    3. '.sqrt' → logprob: -7.7803826332092285
    4. '```' → logprob: -9.030383110046387
    5. '.cos' → logprob: -10.655383110046387
    6. '[' → logprob: -11.655383110046387
    7. ')' → logprob: -11.780383110046387
    8. '[h' → logprob: -12.280383110046387
    9. 'h' → logprob: -12.405383110046387
    10. '.atan' → logprob: -12.405383110046387

Token 2288: 'yp' (ID: 1785)
  Prédit: 'yp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yp' → logprob: -0.02376830391585827
    2. 'ot' → logprob: -4.148768424987793
    3. 'pot' → logprob: -4.898768424987793
    4. 'otp' → logprob: -8.648768424987793
    5. 'ots' → logprob: -11.023768424987793
    6. 'y' → logprob: -11.523768424987793
    7. 'op' → logprob: -11.648768424987793
    8. 'opt' → logprob: -11.648768424987793
    9. 'pow' → logprob: -11.773768424987793
    10. 'p' → logprob: -12.398768424987793

Token 2289: 'ot' (ID: 346)
  Prédit: 'ot'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ot' → logprob: -0.0006333283381536603
    2. 'ots' → logprob: -7.875633239746094
    3. 's' → logprob: -9.750633239746094
    4. 'v' → logprob: -10.375633239746094
    5. '[' → logprob: -10.750633239746094
    6. 'otp' → logprob: -10.750633239746094
    7. 'oton' → logprob: -11.000633239746094
    8. 'y' → logprob: -11.250633239746094
    9. 't' → logprob: -11.500633239746094
    10. 'otov' → logprob: -11.875633239746094

Token 2290: '(*' (ID: 9000)
  Prédit: '(*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(*' → logprob: -0.00011450992315076292
    2. '*v' → logprob: -9.375114440917969
    3. '*' → logprob: -10.500114440917969
    4. '(v' → logprob: -13.625114440917969
    5. '(' → logprob: -14.375114440917969
    6. ' (*' → logprob: -15.625114440917969
    7. 'v' → logprob: -17.12511444091797
    8. '(*(' → logprob: -17.50011444091797
    9. ')*' → logprob: -18.00011444091797
    10. '*(' → logprob: -18.12511444091797

Token 2291: 'v' (ID: 85)
  Prédit: 'v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -9.088346359931165e-07
    2. '(v' → logprob: -14.250000953674316
    3. ')v' → logprob: -16.0
    4. ' v' → logprob: -16.5
    5. ')' → logprob: -18.0
    6. 'vq' → logprob: -18.875
    7. '(' → logprob: -19.125
    8. '*v' → logprob: -19.25
    9. '           ' → logprob: -19.375
    10. 'tuple' → logprob: -20.0

Token 2292: '_st' (ID: 2518)
  Prédit: '_st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_st' → logprob: -0.005241583567112684
    2. '_sign' → logprob: -5.255241394042969
    3. 'st' → logprob: -12.130241394042969
    4. 'sign' → logprob: -13.130241394042969
    5. 'v' → logprob: -15.255241394042969
    6. '_v' → logprob: -17.13024139404297
    7. '	st' → logprob: -17.63024139404297
    8. '_sp' → logprob: -18.00524139404297
    9. '_sig' → logprob: -18.50524139404297
    10. '_s' → logprob: -18.63024139404297

Token 2293: 'reet' (ID: 5409)
  Prédit: '_sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sign' → logprob: -0.0002807623823173344
    2. 'sign' → logprob: -8.750280380249023
    3. '(v' → logprob: -10.500280380249023
    4. '_vec' → logprob: -10.500280380249023
    5. 'Sign' → logprob: -10.750280380249023
    6. 'v' → logprob: -10.750280380249023
    7. 'vec' → logprob: -12.750280380249023
    8. '_s' → logprob: -12.875280380249023
    9. '_vect' → logprob: -12.875280380249023
    10. '[v' → logprob: -13.000280380249023

Token 2294: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.017704879865050316
    2. ')
' → logprob: -4.142704963684082
    3. ' )' → logprob: -6.642704963684082
    4. ' )
' → logprob: -9.267704963684082
    5. '))' → logprob: -9.892704963684082
    6. '+' → logprob: -10.267704963684082
    7. ')+' → logprob: -10.517704963684082
    8. ' if' → logprob: -10.642704963684082
    9. ')
' → logprob: -10.642704963684082
    10. ')#' → logprob: -11.392704963684082

Token 2295: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1133992150425911
    2. '       ' → logprob: -2.8633992671966553
    3. ')' → logprob: -4.113399028778076
    4. '   ' → logprob: -4.238399028778076
    5. '<|end|>' → logprob: -5.488399028778076
    6. ' if' → logprob: -5.613399028778076
    7. '               ' → logprob: -6.863399028778076
    8. '\t' → logprob: -6.988399028778076
    9. '\n' → logprob: -7.113399028778076
    10. '            
' → logprob: -7.113399028778076

Token 2296: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0835234597325325
    2. ' if' → logprob: -3.3335235118865967
    3. 'if' → logprob: -3.5835235118865967
    4. '
' → logprob: -4.583523273468018
    5. '       ' → logprob: -5.958523273468018
    6. '   ' → logprob: -6.333523273468018
    7. 'angle' → logprob: -7.458523273468018
    8. ' ' → logprob: -8.208523750305176
    9. ' angle' → logprob: -9.208523750305176
    10. '0' → logprob: -9.208523750305176

Token 2297: ' Due' (ID: 29584)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3028423488140106
    2. '#' → logprob: -1.927842378616333
    3. '           ' → logprob: -2.802842378616333
    4. 'angle' → logprob: -3.927842378616333
    5. 'c' → logprob: -4.052842140197754
    6. '
' → logprob: -5.052842140197754
    7. ' if' → logprob: -5.302842140197754
    8. ' #' → logprob: -6.552842140197754
    9. 'sign' → logprob: -6.552842140197754
    10. 'import' → logprob: -6.927842140197754

Token 2298: ' to' (ID: 316)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.025547124445438385
    2. ' =' → logprob: -4.275547027587891
    3. '=' → logprob: -5.025547027587891
    4. 'if' → logprob: -5.900547027587891
    5. ' if' → logprob: -7.900547027587891
    6. '   ' → logprob: -8.52554702758789
    7. 's' → logprob: -8.65054702758789
    8. '#' → logprob: -8.65054702758789
    9. 'def' → logprob: -8.65054702758789
    10. '```' → logprob: -9.27554702758789

Token 2299: ' float' (ID: 4428)
  Prédit: ' floating'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' floating' → logprob: -0.5810860395431519
    2. ' c' → logprob: -1.8310860395431519
    3. 'c' → logprob: -2.3310861587524414
    4. 'abs' → logprob: -3.4560861587524414
    5. ' round' → logprob: -3.4560861587524414
    6. ' abs' → logprob: -3.7060861587524414
    7. ' float' → logprob: -3.9560861587524414
    8. 'floating' → logprob: -4.206086158752441
    9. ' max' → logprob: -4.706086158752441
    10. 'round' → logprob: -4.706086158752441

Token 2300: ' precision' (ID: 27303)
  Prédit: ' precision'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' precision' → logprob: -1.0078116655349731
    2. ' errors' → logprob: -1.3828116655349731
    3. 'ing' → logprob: -1.7578116655349731
    4. ' in' → logprob: -2.7578115463256836
    5. 'precision' → logprob: -3.2578115463256836
    6. ' rounding' → logprob: -3.8828115463256836
    7. '_precision' → logprob: -4.007811546325684
    8. ' inaccuracies' → logprob: -4.007811546325684
    9. ' error' → logprob: -4.132811546325684
    10. 'in' → logprob: -4.632811546325684

Token 2301: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3183075487613678
    2. ',' → logprob: -2.693307638168335
    3. ')' → logprob: -2.943307638168335
    4. ' c' → logprob: -3.443307638168335
    5. ' =' → logprob: -3.818307638168335
    6. '           ' → logprob: -4.068307399749756
    7. 'if' → logprob: -4.193307399749756
    8. ':' → logprob: -4.443307399749756
    9. 'c' → logprob: -4.568307399749756
    10. '=' → logprob: -4.693307399749756

Token 2302: ' clip' (ID: 19925)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4821423292160034
    2. ' c' → logprob: -1.1071423292160034
    3. 'c' → logprob: -3.482142448425293
    4. 'if' → logprob: -4.107142448425293
    5. '           ' → logprob: -5.357142448425293
    6. 'cl' → logprob: -10.857142448425293
    7. ' cl' → logprob: -11.357142448425293
    8. '            ' → logprob: -11.607142448425293
    9. ' max' → logprob: -11.732142448425293
    10. '```' → logprob: -11.732142448425293

Token 2303: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9157769083976746
    2. ' =' → logprob: -1.7907769680023193
    3. '=' → logprob: -1.9157769680023193
    4. ' c' → logprob: -2.4157769680023193
    5. 'max' → logprob: -3.0407769680023193
    6. 'min' → logprob: -3.1657769680023193
    7. ' max' → logprob: -3.6657769680023193
    8. '           ' → logprob: -3.7907769680023193
    9. ' min' → logprob: -3.7907769680023193
    10. '=min' → logprob: -4.54077672958374

Token 2304: ' to' (ID: 316)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.23121052980422974
    2. ' =' → logprob: -1.606210470199585
    3. '=c' → logprob: -5.731210708618164
    4. '=min' → logprob: -6.231210708618164
    5. '=max' → logprob: -7.606210708618164
    6. 'c' → logprob: -11.231210708618164
    7. '=float' → logprob: -11.606210708618164
    8. ')' → logprob: -11.731210708618164
    9. '=
' → logprob: -11.981210708618164
    10. 'min' → logprob: -12.231210708618164

Token 2305: ' [-' (ID: 20191)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.39160868525505066
    2. 'min' → logprob: -1.141608715057373
    3. '1' → logprob: -5.641608715057373
    4. ' min' → logprob: -7.391608715057373
    5. ' max' → logprob: -7.516608715057373
    6. '-' → logprob: -11.516608238220215
    7. '[min' → logprob: -12.641608238220215
    8. '-min' → logprob: -12.766608238220215
    9. '```' → logprob: -14.391608238220215
    10. '[max' → logprob: -14.516608238220215

Token 2306: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '```' → logprob: -18.5
    3. ' ' → logprob: -18.75
    4. 'min' → logprob: -20.125
    5. '0' → logprob: -20.25
    6. '
' → logprob: -20.375
    7. '(' → logprob: -20.75
    8. '-' → logprob: -20.875
    9. 'import' → logprob: -21.125
    10. '`' → logprob: -21.375

Token 2307: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0052392068319022655
    2. '.' → logprob: -5.880239009857178
    3. '1' → logprob: -6.505239009857178
    4. ',c' → logprob: -7.380239009857178
    5. '0' → logprob: -9.005239486694336
    6. '```' → logprob: -9.880239486694336
    7. ' ,' → logprob: -10.005239486694336
    8. '.,' → logprob: -10.755239486694336
    9. '
' → logprob: -11.130239486694336
    10. 'c' → logprob: -11.130239486694336

Token 2308: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.226628895296017e-06
    2. ' ' → logprob: -11.875007629394531
    3. '+' → logprob: -17.00000762939453
    4. '   ' → logprob: -17.12500762939453
    5. '```' → logprob: -17.62500762939453
    6. '           ' → logprob: -18.25000762939453
    7. '
' → logprob: -18.50000762939453
    8. ']' → logprob: -19.00000762939453
    9. '{' → logprob: -19.12500762939453
    10. ',' → logprob: -19.62500762939453

Token 2309: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.10761258751153946
    2. ')' → logprob: -2.3576126098632812
    3. ',' → logprob: -5.482612609863281
    4. ']
' → logprob: -6.982612609863281
    5. '])' → logprob: -7.607612609863281
    6. 'c' → logprob: -7.732612609863281
    7. ')
' → logprob: -7.857612609863281
    8. ')c' → logprob: -8.732612609863281
    9. '.' → logprob: -8.857612609863281
    10. '<|end|>' → logprob: -9.357612609863281

Token 2310: '           ' (ID: 352)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.5331493020057678
    2. '           ' → logprob: -1.033149242401123
    3. ' if' → logprob: -3.658149242401123
    4. ' c' → logprob: -3.658149242401123
    5. 'if' → logprob: -5.533149242401123
    6. ' =' → logprob: -8.158149719238281
    7. '```' → logprob: -8.158149719238281
    8. '               ' → logprob: -8.283149719238281
    9. ',' → logprob: -8.783149719238281
    10. ' ' → logprob: -9.158149719238281

Token 2311: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' (adapté à ' c') → logprob: -0.05189591646194458
    2. ' c' → logprob: -3.5518958568573
    3. '           ' → logprob: -4.551896095275879
    4. ' if' → logprob: -4.926896095275879
    5. 'if' → logprob: -5.551896095275879
    6. 'max' → logprob: -9.176896095275879
    7. '```' → logprob: -10.551896095275879
    8. ' max' → logprob: -10.926896095275879
    9. '1' → logprob: -11.051896095275879
    10. 'min' → logprob: -11.426896095275879

Token 2312: '=max' (ID: 102952)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0005692371050827205
    2. ' =' → logprob: -7.5005693435668945
    3. '=max' → logprob: -11.250569343566895
    4. '=min' → logprob: -12.750569343566895
    5. '=c' → logprob: -15.125569343566895
    6. '=
' → logprob: -16.500568389892578
    7. '=int' → logprob: -18.125568389892578
    8. '=

' → logprob: -18.625568389892578
    9. '=Math' → logprob: -19.000568389892578
    10. '=}' → logprob: -19.125568389892578

Token 2313: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.0009610046399757266
    2. '(min' → logprob: -7.000960826873779
    3. '(c' → logprob: -10.125961303710938
    4. '(' → logprob: -11.625961303710938
    5. '-' → logprob: -14.750961303710938
    6. 'min' → logprob: -17.625961303710938
    7. '(
' → logprob: -17.625961303710938
    8. '```' → logprob: -18.250961303710938
    9. ' (-' → logprob: -20.125961303710938
    10. 'c' → logprob: -20.250961303710938

Token 2314: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '
' → logprob: -20.375
    3. ' ' → logprob: -21.25
    4. '```' → logprob: -21.375
    5. 'min' → logprob: -21.875
    6. 'c' → logprob: -22.0
    7. '}' → logprob: -23.375
    8. '

' → logprob: -23.5
    9. '<|end|>' → logprob: -23.5
    10. 'from' → logprob: -23.875

Token 2315: ',min' (ID: 129117)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015087448060512543
    2. '.' → logprob: -4.640087604522705
    3. ',c' → logprob: -5.390087604522705
    4. ' ,' → logprob: -7.390087604522705
    5. 'c' → logprob: -10.015087127685547
    6. '1' → logprob: -10.265087127685547
    7. ',float' → logprob: -11.265087127685547
    8. ')' → logprob: -11.765087127685547
    9. '<|end|>' → logprob: -11.890087127685547
    10. ',max' → logprob: -12.015087127685547

Token 2316: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0013665466103702784
    2. '(c' → logprob: -6.62636661529541
    3. '1' → logprob: -10.12636661529541
    4. 'c' → logprob: -14.50136661529541
    5. '(
' → logprob: -16.501365661621094
    6. ' (' → logprob: -16.626365661621094
    7. '```' → logprob: -19.376365661621094
    8. '(+' → logprob: -19.626365661621094
    9. '(-' → logprob: -19.751365661621094
    10. '(C' → logprob: -20.126365661621094

Token 2317: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00014001218369230628
    2. 'c' → logprob: -8.875140190124512
    3. ' ' → logprob: -16.625139236450195
    4. ')' → logprob: -17.000139236450195
    5. '```' → logprob: -18.250139236450195
    6. ')c' → logprob: -18.500139236450195
    7. '+' → logprob: -18.625139236450195
    8. ' c' → logprob: -18.625139236450195
    9. '(' → logprob: -18.625139236450195
    10. '   ' → logprob: -18.750139236450195

Token 2318: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.2521976828575134
    2. ',' → logprob: -1.5021977424621582
    3. ' ,' → logprob: -9.002197265625
    4. '))' → logprob: -9.377197265625
    5. 'c' → logprob: -10.002197265625
    6. ',
' → logprob: -12.252197265625
    7. ')' → logprob: -12.752197265625
    8. '(c' → logprob: -13.252197265625
    9. ' c' → logprob: -13.877197265625
    10. '           ' → logprob: -14.252197265625

Token 2319: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04870704561471939
    2. ')
' → logprob: -3.0487070083618164
    3. '           ' → logprob: -9.298707008361816
    4. ')
' → logprob: -10.923707008361816
    5. ')

' → logprob: -12.423707008361816
    6. ' )' → logprob: -13.423707008361816
    7. '       ' → logprob: -13.923707008361816
    8. ')#' → logprob: -14.298707008361816
    9. '))' → logprob: -14.548707008361816
    10. ')`' → logprob: -14.673707008361816

Token 2320: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11587721854448318
    2. 'angle' → logprob: -2.865877151489258
    3. '       ' → logprob: -3.740877151489258
    4. '   ' → logprob: -4.615877151489258
    5. ' angle' → logprob: -5.115877151489258
    6. ' if' → logprob: -5.490877151489258
    7. 'if' → logprob: -5.990877151489258
    8. '
' → logprob: -6.240877151489258
    9. '```' → logprob: -7.240877151489258
    10. '            
' → logprob: -7.740877151489258

Token 2321: ' #' (ID: 1069)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.07395428419113159
    2. '           ' → logprob: -3.5739543437957764
    3. 'theta' → logprob: -4.448954105377197
    4. 'a' → logprob: -4.573954105377197
    5. 'if' → logprob: -5.448954105377197
    6. 'ang' → logprob: -5.448954105377197
    7. 'import' → logprob: -5.448954105377197
    8. ' angle' → logprob: -5.698954105377197
    9. 'sign' → logprob: -6.698954105377197
    10. '   ' → logprob: -6.948954105377197

Token 2322: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.05026465654373169
    2. 'if' → logprob: -3.300264596939087
    3. 'theta' → logprob: -5.050264835357666
    4. 'ang' → logprob: -6.050264835357666
    5. 'import' → logprob: -6.925264835357666
    6. 'sign' → logprob: -7.050264835357666
    7. '#' → logprob: -7.550264835357666
    8. '   ' → logprob: -8.550264358520508
    9. 'acos' → logprob: -8.550264358520508
    10. 'a' → logprob: -8.800264358520508

Token 2323: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.17264896631240845
    2. '=' → logprob: -1.9226489067077637
    3. '_angle' → logprob: -4.422648906707764
    4. 'angle' → logprob: -9.422649383544922
    5. '_cos' → logprob: -9.422649383544922
    6. '_theta' → logprob: -9.672649383544922
    7. '_' → logprob: -10.922649383544922
    8. '   ' → logprob: -11.047649383544922
    9. '_pi' → logprob: -11.422649383544922
    10. ' ' → logprob: -11.422649383544922

Token 2324: ' ar' (ID: 646)
  Prédit: 'math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.014166799373924732
    2. ' math' → logprob: -4.264166831970215
    3. '(math' → logprob: -13.014166831970215
    4. '   ' → logprob: -14.264166831970215
    5. '           ' → logprob: -16.1391658782959
    6. '```' → logprob: -16.1391658782959
    7. 'Math' → logprob: -17.3891658782959
    8. '.math' → logprob: -17.5141658782959
    9. '/math' → logprob: -17.8891658782959
    10. '_math' → logprob: -18.2641658782959

Token 2325: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -0.003230233211070299
    2. 'c' → logprob: -6.003230094909668
    3. 'cs' → logprob: -7.753230094909668
    4. 'cmath' → logprob: -8.628230094909668
    5. 'cos' → logprob: -9.378230094909668
    6. '```' → logprob: -10.628230094909668
    7. 'math' → logprob: -11.503230094909668
    8. 'ct' → logprob: -11.753230094909668
    9. 'cm' → logprob: -11.878230094909668
    10. 'acos' → logprob: -12.253230094909668

Token 2326: 'os' (ID: 365)
  Prédit: 'os'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'os' → logprob: -5.512236498361744e-07
    2. '```' → logprob: -15.375000953674316
    3. 'cos' → logprob: -15.625000953674316
    4. '
' → logprob: -16.375
    5. 's' → logprob: -17.75
    6. 'ос' → logprob: -18.125
    7. '(os' → logprob: -18.25
    8. 'o' → logprob: -18.625
    9. 'osl' → logprob: -18.875
    10. '{
' → logprob: -19.0

Token 2327: '(c' (ID: 2410)
  Prédit: '(math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.03211451694369316
    2. '(c' → logprob: -4.157114505767822
    3. '(' → logprob: -4.407114505767822
    4. 'math' → logprob: -5.907114505767822
    5. '(
' → logprob: -7.157114505767822
    6. ' (' → logprob: -9.03211498260498
    7. ' math' → logprob: -9.03211498260498
    8. ')' → logprob: -12.40711498260498
    9. '(Math' → logprob: -12.40711498260498
    10. '((' → logprob: -12.78211498260498

Token 2328: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07052050530910492
    2. ')
' → logprob: -2.6955204010009766
    3. '           ' → logprob: -7.695520401000977
    4. '   ' → logprob: -10.445520401000977
    5. ',' → logprob: -11.320520401000977
    6. '       ' → logprob: -11.695520401000977
    7. '),' → logprob: -11.695520401000977
    8. '))' → logprob: -12.070520401000977
    9. ')\' → logprob: -12.320520401000977
    10. ' )' → logprob: -12.445520401000977

Token 2329: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017622899264097214
    2. 'angle' → logprob: -4.267622947692871
    3. 'a' → logprob: -7.267622947692871
    4. 'import' → logprob: -7.392622947692871
    5. '
' → logprob: -7.767622947692871
    6. '   ' → logprob: -7.892622947692871
    7. ' angle' → logprob: -7.892622947692871
    8. '       ' → logprob: -8.517622947692871
    9. '		' → logprob: -9.142622947692871
    10. '            
' → logprob: -9.267622947692871

Token 2330: ' #' (ID: 1069)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.7570059895515442
    2. '           ' → logprob: -0.8820059895515442
    3. ' angle' → logprob: -3.3820059299468994
    4. 'a' → logprob: -3.7570059299468994
    5. 'theta' → logprob: -3.7570059299468994
    6. 'import' → logprob: -4.5070061683654785
    7. '   ' → logprob: -5.1320061683654785
    8. ' a' → logprob: -5.5070061683654785
    9. ' theta' → logprob: -5.6320061683654785
    10. 'ang' → logprob: -6.1320061683654785

Token 2331: ' Determine' (ID: 57076)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.03026527725160122
    2. 'if' → logprob: -4.5302653312683105
    3. 'theta' → logprob: -4.7802653312683105
    4. '           ' → logprob: -5.7802653312683105
    5. 'ang' → logprob: -5.7802653312683105
    6. 'a' → logprob: -6.2802653312683105
    7. 'import' → logprob: -6.7802653312683105
    8. '#' → logprob: -7.5302653312683105
    9. 'alpha' → logprob: -8.280264854431152
    10. '   ' → logprob: -8.530264854431152

Token 2332: ' sign' (ID: 2232)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.32669466733932495
    2. 'angle' → logprob: -1.3266947269439697
    3. 'import' → logprob: -5.576694488525391
    4. 'direction' → logprob: -5.826694488525391
    5. 'sign' → logprob: -6.576694488525391
    6. '#' → logprob: -6.576694488525391
    7. 'theta' → logprob: -6.701694488525391
    8. 'from' → logprob: -8.07669448852539
    9. 'acos' → logprob: -8.20169448852539
    10. 'ang' → logprob: -8.20169448852539

Token 2333: ' constraints' (ID: 31060)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9930119514465332
    2. 'if' → logprob: -1.1180119514465332
    3. ' if' → logprob: -1.4930119514465332
    4. 'angle' → logprob: -2.868011951446533
    5. '```' → logprob: -5.368011951446533
    6. ' angle' → logprob: -6.118011951446533
    7. '
' → logprob: -6.118011951446533
    8. 'import' → logprob: -6.118011951446533
    9. 'sign' → logprob: -6.493011951446533
    10. '_angle' → logprob: -6.618011951446533

Token 2334: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05441126972436905
    2. ' if' → logprob: -3.1794111728668213
    3. 'if' → logprob: -5.3044114112854
    4. '
' → logprob: -5.9294114112854
    5. 'angle' → logprob: -6.6794114112854
    6. '       ' → logprob: -7.1794114112854
    7. ' angle' → logprob: -7.1794114112854
    8. '```' → logprob: -8.554410934448242
    9. ',' → logprob: -9.054410934448242
    10. '            
' → logprob: -9.179410934448242

Token 2335: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09904389083385468
    2. ' if' → logprob: -2.599043846130371
    3. 'if' → logprob: -4.099043846130371
    4. 'angle' → logprob: -6.474043846130371
    5. '       ' → logprob: -7.349043846130371
    6. ' angle' → logprob: -8.099043846130371
    7. '#' → logprob: -8.724043846130371
    8. '```' → logprob: -9.099043846130371
    9. '               ' → logprob: -9.224043846130371
    10. '   ' → logprob: -9.474043846130371

Token 2336: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6305773258209229
    2. 'angle' → logprob: -1.1305773258209229
    3. '           ' → logprob: -2.380577325820923
    4. 'import' → logprob: -3.630577325820923
    5. 'from' → logprob: -4.755577087402344
    6. ' if' → logprob: -5.255577087402344
    7. 'theta' → logprob: -5.380577087402344
    8. '#' (adapté à ' #') → logprob: -6.255577087402344
    9. 'pi' → logprob: -6.880577087402344
    10. 'ang' → logprob: -7.380577087402344

Token 2337: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0096278740093112
    2. '#' → logprob: -5.759627819061279
    3. '           ' → logprob: -5.884627819061279
    4. 'angle' → logprob: -6.509627819061279
    5. 'import' → logprob: -6.759627819061279
    6. 'from' → logprob: -7.384627819061279
    7. '       ' → logprob: -9.259628295898438
    8. 'for' → logprob: -10.009628295898438
    9. '```' → logprob: -10.009628295898438
    10. '
' → logprob: -10.134628295898438

Token 2338: ' angle' (ID: 16538)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0007765158079564571
    2. 'abs' → logprob: -7.750776290893555
    3. ' c' → logprob: -8.125776290893555
    4. 'angle' → logprob: -10.250776290893555
    5. 'math' → logprob: -12.625776290893555
    6. '0' → logprob: -13.125776290893555
    7. '-' → logprob: -13.250776290893555
    8. '1' → logprob: -13.625776290893555
    9. '   ' → logprob: -13.750776290893555
    10. ' abs' → logprob: -13.875776290893555

Token 2339: ' is' (ID: 382)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -1.0204566717147827
    2. '>' → logprob: -1.0204566717147827
    3. ' <' → logprob: -1.8954566717147827
    4. ' >' → logprob: -2.2704567909240723
    5. '<=' → logprob: -5.145456790924072
    6. '_cos' → logprob: -5.270456790924072
    7. ' <=' → logprob: -5.395456790924072
    8. '_' → logprob: -5.645456790924072
    9. '_angle' → logprob: -6.270456790924072
    10. '_c' → logprob: -6.645456790924072

Token 2340: ' right' (ID: 1849)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '>' → logprob: -0.29962995648384094
    2. '<' → logprob: -1.5496299266815186
    3. ' >' → logprob: -4.049630165100098
    4. ' <' → logprob: -4.174630165100098
    5. 'acute' → logprob: -4.924630165100098
    6. '90' → logprob: -6.174630165100098
    7. 'obt' → logprob: -6.924630165100098
    8. '   ' → logprob: -7.674630165100098
    9. 'math' → logprob: -7.924630165100098
    10. '180' → logprob: -7.924630165100098

Token 2341: ' approx' (ID: 33956)
  Prédit: '_angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.07443485409021378
    2. '_' → logprob: -2.824434757232666
    3. 'angle' → logprob: -5.324434757232666
    4. '=' → logprob: -6.574434757232666
    5. ' ==' → logprob: -6.824434757232666
    6. ' =' → logprob: -7.199434757232666
    7. '-angle' → logprob: -7.324434757232666
    8. ' angle' → logprob: -7.324434757232666
    9. ' <=' → logprob: -7.574434757232666
    10. '==' → logprob: -8.074435234069824

Token 2342: ' cos' (ID: 8974)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7798397541046143
    2. '<=' → logprob: -2.2798397541046143
    3. ')' → logprob: -2.7798397541046143
    4. '_angle' → logprob: -2.7798397541046143
    5. 'imate' → logprob: -2.9048397541046143
    6. 'imately' → logprob: -3.5298397541046143
    7. '90' → logprob: -3.9048397541046143
    8. ':' → logprob: -4.029839515686035
    9. ',' → logprob: -4.029839515686035
    10. '```' → logprob: -4.029839515686035

Token 2343: '=' (ID: 28)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.07884252816438675
    2. '=' → logprob: -3.2038426399230957
    3. '0' → logprob: -3.8288426399230957
    4. '==' → logprob: -5.953842639923096
    5. '<=' → logprob: -6.453842639923096
    6. 'angle' → logprob: -6.453842639923096
    7. '_angle' → logprob: -6.453842639923096
    8. ' =' → logprob: -6.578842639923096
    9. '90' → logprob: -6.703842639923096
    10. '_theta' → logprob: -7.828842639923096

Token 2344: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.466968650580384e-05
    2. ' ' → logprob: -9.875054359436035
    3. '(' → logprob: -14.000054359436035
    4. '1' → logprob: -14.750054359436035
    5. '=' → logprob: -14.875054359436035
    6. '```' → logprob: -15.250054359436035
    7. 'approximately' → logprob: -15.250054359436035
    8. '-' → logprob: -15.750054359436035
    9. '~' → logprob: -15.875054359436035
    10. 'approx' → logprob: -16.37505531311035

Token 2345: ' =>' (ID: 871)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2692874073982239
    2. ':
' → logprob: -2.144287347793579
    3. '           ' → logprob: -2.894287347793579
    4. '):' → logprob: -4.144287586212158
    5. ',' → logprob: -4.394287586212158
    6. ')' → logprob: -4.394287586212158
    7. '):
' → logprob: -4.894287586212158
    8. '       ' → logprob: -5.394287586212158
    9. '               ' → logprob: -5.519287586212158
    10. '   ' → logprob: -6.269287586212158

Token 2346: ' no' (ID: 860)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -1.6995823383331299
    2. ' continue' → logprob: -1.6995823383331299
    3. ' if' → logprob: -1.9495823383331299
    4. '#' → logprob: -2.07458233833313
    5. '           ' → logprob: -2.32458233833313
    6. 'if' → logprob: -2.32458233833313
    7. 'continue' → logprob: -2.44958233833313
    8. ' #' → logprob: -3.44958233833313
    9. ' pass' → logprob: -4.574582099914551
    10. 'pass' → logprob: -4.949582099914551

Token 2347: ' movement' (ID: 12772)
  Prédit: 'movement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'movement' → logprob: -0.45804470777511597
    2. ' movement' → logprob: -1.2080447673797607
    3. 'move' → logprob: -3.8330447673797607
    4. 'flow' → logprob: -4.958044528961182
    5. 'direction' → logprob: -5.083044528961182
    6. ' move' → logprob: -5.458044528961182
    7. 'pass' → logprob: -5.583044528961182
    8. 'allow' → logprob: -5.833044528961182
    9. 'allowed' → logprob: -6.083044528961182
    10. 'graph' → logprob: -6.083044528961182

Token 2348: ' either' (ID: 4784)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03961258754134178
    2. ' if' → logprob: -3.5396125316619873
    3. 'if' → logprob: -4.914612770080566
    4. '               ' → logprob: -7.414612770080566
    5. '       ' → logprob: -7.539612770080566
    6. '   ' → logprob: -8.539612770080566
    7. '
' → logprob: -8.914612770080566
    8. ',' → logprob: -9.039612770080566
    9. 'angle' → logprob: -9.289612770080566
    10. '```' → logprob: -9.539612770080566

Token 2349: ' direction' (ID: 9262)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04019083082675934
    2. ' if' → logprob: -4.165190696716309
    3. 'if' → logprob: -4.415190696716309
    4. '       ' → logprob: -5.040190696716309
    5. '
' → logprob: -5.915190696716309
    6. '               ' → logprob: -7.540190696716309
    7. '   ' → logprob: -7.790190696716309
    8. '            
' → logprob: -8.415190696716309
    9. ',' → logprob: -8.540190696716309
    10. 'angle' → logprob: -9.040190696716309

Token 2350: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013716439716517925
    2. ' if' → logprob: -5.013716220855713
    3. 'if' → logprob: -5.263716220855713
    4. '
' → logprob: -7.138716220855713
    5. '       ' → logprob: -8.013716697692871
    6. '```' → logprob: -9.013716697692871
    7. 'angle' → logprob: -9.138716697692871
    8. '   ' → logprob: -9.638716697692871
    9. '\' → logprob: -9.763716697692871
    10. '               ' → logprob: -9.888716697692871

Token 2351: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005736202467232943
    2. ' if' → logprob: -5.755736351013184
    3. '       ' → logprob: -6.880736351013184
    4. 'if' → logprob: -7.505736351013184
    5. '               ' → logprob: -8.255736351013184
    6. '		' → logprob: -9.005736351013184
    7. '   ' → logprob: -9.130736351013184
    8. '\n' → logprob: -9.880736351013184
    9. '
' → logprob: -10.005736351013184
    10. '\' → logprob: -10.130736351013184

Token 2352: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3532508909702301
    2. ' if' → logprob: -1.4782508611679077
    3. 'if' → logprob: -2.7282509803771973
    4. '       ' → logprob: -6.103250980377197
    5. 'angle' → logprob: -7.353250980377197
    6. '
' → logprob: -8.103250503540039
    7. '   ' → logprob: -8.228250503540039
    8. ' angle' → logprob: -8.228250503540039
    9. '               ' → logprob: -8.853250503540039
    10. '```' → logprob: -10.103250503540039

Token 2353: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16766709089279175
    2. '           ' → logprob: -2.0426671504974365
    3. 'angle' → logprob: -4.042666912078857
    4. 'threshold' → logprob: -6.042666912078857
    5. ' if' → logprob: -6.167666912078857
    6. 'import' → logprob: -6.542666912078857
    7. '   ' → logprob: -7.792666912078857
    8. 'theta' → logprob: -8.292667388916016
    9. '       ' → logprob: -8.542667388916016
    10. '
' → logprob: -9.042667388916016

Token 2354: ' angle' (ID: 16538)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1589462161064148
    2. ' c' → logprob: -2.4089462757110596
    3. 'abs' → logprob: -3.0339462757110596
    4. ' abs' → logprob: -4.9089460372924805
    5. 'angle' → logprob: -6.9089460372924805
    6. 'cos' → logprob: -8.78394603729248
    7. ' angle' → logprob: -9.15894603729248
    8. 'math' → logprob: -9.53394603729248
    9. '   ' → logprob: -9.78394603729248
    10. '0' → logprob: -10.53394603729248

Token 2355: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.16364459693431854
    2. ' <' → logprob: -2.038644552230835
    3. ' <=' → logprob: -4.788644790649414
    4. '<=' → logprob: -5.163644790649414
    5. '>' → logprob: -5.413644790649414
    6. ' >' → logprob: -6.163644790649414
    7. '[' → logprob: -10.663644790649414
    8. ' >=' → logprob: -10.913644790649414
    9. '>=' → logprob: -11.163644790649414
    10. '<m' → logprob: -11.538644790649414

Token 2356: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02204381488263607
    2. '-' → logprob: -3.8970437049865723
    3. ' ' → logprob: -7.022043704986572
    4. '1' → logprob: -8.14704418182373
    5. '=' → logprob: -9.02204418182373
    6. 'math' → logprob: -9.14704418182373
    7. ' -' → logprob: -9.89704418182373
    8. '(' → logprob: -11.89704418182373
    9. '90' → logprob: -11.89704418182373
    10. '   ' → logprob: -12.39704418182373

Token 2357: '90' (ID: 2744)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006406620144844055
    2. '-' → logprob: -5.131406784057617
    3. 'math' → logprob: -8.131406784057617
    4. '1' → logprob: -9.006406784057617
    5. '=' → logprob: -10.256406784057617
    6. ' ' → logprob: -11.381406784057617
    7. '(' → logprob: -12.631406784057617
    8. ' -' → logprob: -13.631406784057617
    9. 'cos' → logprob: -13.756406784057617
    10. '(-' → logprob: -14.256406784057617

Token 2358: ' (' (ID: 350)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.05298392102122307
    2. '0' → logprob: -3.5529839992523193
    3. ':
' → logprob: -5.55298376083374
    4. '<|end|>' → logprob: -5.67798376083374
    5. ' :' → logprob: -5.92798376083374
    6. '*' → logprob: -6.17798376083374
    7. ' ' → logprob: -6.30298376083374
    8. '   ' → logprob: -6.30298376083374
    9. ' *' → logprob: -6.80298376083374
    10. '.' → logprob: -7.17798376083374

Token 2359: 'cos' (ID: 10732)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.542222797870636
    2. '0' → logprob: -1.1672227382659912
    3. ' ' → logprob: -2.792222738265991
    4. ')' → logprob: -3.292222738265991
    5. '=' → logprob: -5.66722297668457
    6. ' )' → logprob: -6.29222297668457
    7. '):
' → logprob: -7.41722297668457
    8. '   ' → logprob: -7.54222297668457
    9. '.' → logprob: -8.04222297668457
    10. '```' → logprob: -8.16722297668457

Token 2360: '>' (ID: 29)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -1.216336965560913
    2. '>' → logprob: -1.341336965560913
    3. '0' → logprob: -1.466336965560913
    4. ' <' → logprob: -2.466336965560913
    5. '<' → logprob: -2.966336965560913
    6. ' ' → logprob: -3.591336965560913
    7. '(' → logprob: -3.841336965560913
    8. ')' → logprob: -4.591337203979492
    9. '=' → logprob: -4.716337203979492
    10. '   ' → logprob: -6.341337203979492

Token 2361: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00014191943046171218
    2. ' ' → logprob: -8.875142097473145
    3. '1' → logprob: -13.750142097473145
    4. '-' → logprob: -15.375142097473145
    5. '   ' → logprob: -15.375142097473145
    6. '=' → logprob: -15.875142097473145
    7. 'import' → logprob: -16.625141143798828
    8. '>' → logprob: -16.625141143798828
    9. '```' → logprob: -16.875141143798828
    10. ')' → logprob: -17.125141143798828

Token 2362: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.44563329219818115
    2. '):' → logprob: -1.1956332921981812
    3. ')' → logprob: -3.8206334114074707
    4. '),' → logprob: -3.8206334114074707
    5. '0' → logprob: -4.945633411407471
    6. ' ):
' → logprob: -6.070633411407471
    7. '):

' → logprob: -6.820633411407471
    8. ' ):' → logprob: -7.570633411407471
    9. ':' → logprob: -7.820633411407471
    10. ' )' → logprob: -8.195632934570312

Token 2363: ' acute' (ID: 43944)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6174607276916504
    2. ':
' → logprob: -1.4924607276916504
    3. '           ' → logprob: -1.6174607276916504
    4. '               ' → logprob: -4.11746072769165
    5. ',' → logprob: -4.24246072769165
    6. '       ' → logprob: -6.11746072769165
    7. '):
' → logprob: -6.74246072769165
    8. ' and' → logprob: -7.36746072769165
    9. ')' → logprob: -7.36746072769165
    10. '   ' → logprob: -7.74246072769165

Token 2364: ' angle' (ID: 16538)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35704171657562256
    2. ':
' → logprob: -1.8570417165756226
    3. '           ' → logprob: -2.732041835784912
    4. ',' → logprob: -4.107041835784912
    5. '):
' → logprob: -4.357041835784912
    6. ')' → logprob: -4.607041835784912
    7. '):' → logprob: -4.607041835784912
    8. ' and' → logprob: -4.982041835784912
    9. '   ' → logprob: -5.482041835784912
    10. '       ' → logprob: -5.607041835784912

Token 2365: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7980936765670776
    2. '           ' → logprob: -0.9230936765670776
    3. ':
' → logprob: -2.298093795776367
    4. ' if' → logprob: -4.423093795776367
    5. '       ' → logprob: -4.548093795776367
    6. '   ' → logprob: -4.673093795776367
    7. ',' → logprob: -5.298093795776367
    8. '):
' → logprob: -5.298093795776367
    9. ')' → logprob: -5.798093795776367
    10. '               ' → logprob: -6.173093795776367

Token 2366: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005328862927854061
    2. '               ' → logprob: -6.38032865524292
    3. '       ' → logprob: -6.63032865524292
    4. ' if' → logprob: -7.00532865524292
    5. ':' → logprob: -7.88032865524292
    6. ')' → logprob: -8.505329132080078
    7. '   ' → logprob: -8.880329132080078
    8. ',' → logprob: -9.005329132080078
    9. ' and' → logprob: -9.505329132080078
    10. '                       ' → logprob: -9.755329132080078

Token 2367: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13285250961780548
    2. ' if' → logprob: -2.257852554321289
    3. 'if' → logprob: -4.132852554321289
    4. '       ' → logprob: -6.257852554321289
    5. '#' (adapté à ' #') → logprob: -7.507852554321289
    6. '
' → logprob: -8.132852554321289
    7. '               ' → logprob: -9.007852554321289
    8. '   ' → logprob: -9.007852554321289
    9. ' else' → logprob: -9.382852554321289
    10. 'elif' → logprob: -9.507852554321289

Token 2368: ' If' (ID: 1843)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5483779907226562
    2. 'if' → logprob: -0.9233779907226562
    3. '           ' → logprob: -4.048377990722656
    4. 'If' → logprob: -5.923377990722656
    5. 'angle' → logprob: -6.798377990722656
    6. '#' → logprob: -7.048377990722656
    7. 'sign' → logprob: -7.423377990722656
    8. '   ' → logprob: -7.673377990722656
    9. ' angle' → logprob: -8.298377990722656
    10. '       ' → logprob: -8.423377990722656

Token 2369: ' angle' (ID: 16538)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.2815726697444916
    2. ' c' → logprob: -1.406572699546814
    3. 'angle' → logprob: -9.031572341918945
    4. '0' → logprob: -9.156572341918945
    5. ' angle' → logprob: -9.156572341918945
    6. 'cos' → logprob: -10.406572341918945
    7. ' ' → logprob: -11.031572341918945
    8. '	c' → logprob: -11.531572341918945
    9. '-' → logprob: -11.906572341918945
    10. 'math' → logprob: -12.531572341918945

Token 2370: ' >' (ID: 1424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.009616897441446781
    2. '<=' → logprob: -5.009616851806641
    3. ' <' → logprob: -6.134616851806641
    4. '>' → logprob: -7.884616851806641
    5. '[' → logprob: -9.25961685180664
    6. ' <=' → logprob: -9.50961685180664
    7. ')<' → logprob: -9.63461685180664
    8. '=' → logprob: -11.00961685180664
    9. ')' → logprob: -11.00961685180664
    10. '<
' → logprob: -11.50961685180664

Token 2371: '90' (ID: 2744)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00028410006780177355
    2. ' ' → logprob: -8.250284194946289
    3. '1' → logprob: -11.250284194946289
    4. '90' → logprob: -12.500284194946289
    5. '=' → logprob: -13.125284194946289
    6. '```' → logprob: -13.375284194946289
    7. '-' → logprob: -13.875284194946289
    8. '   ' → logprob: -14.750284194946289
    9. '
' → logprob: -15.000284194946289
    10. ')' → logprob: -16.37528419494629

Token 2372: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.08498664945363998
    2. '0' → logprob: -3.209986686706543
    3. '(' → logprob: -3.959986686706543
    4. '<' → logprob: -4.209986686706543
    5. ' <' → logprob: -5.459986686706543
    6. ' ' → logprob: -6.834986686706543
    7. '=' → logprob: -7.334986686706543
    8. '<=' → logprob: -7.959986686706543
    9. ' (<' → logprob: -8.834986686706543
    10. '```' → logprob: -8.959986686706543

Token 2373: 'cos' (ID: 10732)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006024195812642574
    2. ' ' → logprob: -5.131024360656738
    3. '<' → logprob: -10.256024360656738
    4. 'c' → logprob: -10.381024360656738
    5. ' c' → logprob: -11.881024360656738
    6. '<c' → logprob: -12.256024360656738
    7. ' <' → logprob: -12.381024360656738
    8. 'cos' → logprob: -12.756024360656738
    9. '```' → logprob: -13.256024360656738
    10. '<=' → logprob: -13.881024360656738

Token 2374: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.013991198502480984
    2. '0' → logprob: -4.638991355895996
    3. '<=' → logprob: -5.638991355895996
    4. ')<' → logprob: -8.013991355895996
    5. ' <' → logprob: -9.013991355895996
    6. ')' → logprob: -9.888991355895996
    7. '=' → logprob: -10.263991355895996
    8. '[' → logprob: -10.263991355895996
    9. '```' → logprob: -10.638991355895996
    10. '>' → logprob: -11.888991355895996

Token 2375: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.375004768371582
    3. ')' → logprob: -15.000004768371582
    4. '=' → logprob: -15.250004768371582
    5. '1' → logprob: -17.1250057220459
    6. '-' → logprob: -17.1250057220459
    7. '```' → logprob: -17.6250057220459
    8. '
' → logprob: -18.6250057220459
    9. ',' → logprob: -18.7500057220459
    10. '۰' → logprob: -18.8750057220459

Token 2376: ')' (ID: 8)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6720099449157715
    2. '):' → logprob: -1.4220099449157715
    3. ')' → logprob: -1.6720099449157715
    4. ' )' → logprob: -3.7970099449157715
    5. ' ):
' → logprob: -3.7970099449157715
    6. ' ):' → logprob: -4.5470099449157715
    7. '),' → logprob: -6.5470099449157715
    8. '0' → logprob: -7.0470099449157715
    9. '):
' → logprob: -7.7970099449157715
    10. '):

' → logprob: -7.7970099449157715

Token 2377: ' obt' (ID: 5564)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.634522557258606
    2. ' ' → logprob: -2.1345224380493164
    3. ',' → logprob: -2.6345224380493164
    4. ' <' → logprob: -2.6345224380493164
    5. ' ):
' → logprob: -3.0095224380493164
    6. '):
' → logprob: -3.2595224380493164
    7. ')' → logprob: -3.3845224380493164
    8. '0' → logprob: -3.3845224380493164
    9. ' ,' → logprob: -3.5095224380493164
    10. ' if' → logprob: -3.5095224380493164

Token 2378: 'use' (ID: 1821)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.9655283093452454
    2. '_sign' → logprob: -2.0905282497406006
    3. 'cos' → logprob: -3.0905282497406006
    4. '```' → logprob: -3.0905282497406006
    5. 'os' → logprob: -3.2155282497406006
    6. 's' → logprob: -3.4655282497406006
    7. 'posite' → logprob: -3.5905282497406006
    8. '[' → logprob: -3.7155282497406006
    9. ')' → logprob: -3.7155282497406006
    10. 'c' → logprob: -3.9655282497406006

Token 2379: ' angle' (ID: 16538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20788708329200745
    2. '
' → logprob: -1.707887053489685
    3. ' if' → logprob: -6.832887172698975
    4. ',' → logprob: -7.457887172698975
    5. '       ' → logprob: -7.457887172698975
    6. ')' → logprob: -7.457887172698975
    7. ')
' → logprob: -7.707887172698975
    8. '               ' → logprob: -7.707887172698975
    9. '            
' → logprob: -7.707887172698975
    10. '<|end|>' → logprob: -7.707887172698975

Token 2380: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.030409831553697586
    2. '
' → logprob: -3.905409812927246
    3. ' if' → logprob: -5.030409812927246
    4. 'if' → logprob: -6.030409812927246
    5. '       ' → logprob: -8.530409812927246
    6. '            
' → logprob: -8.655409812927246
    7. ',' → logprob: -8.905409812927246
    8. 'angle' → logprob: -9.405409812927246
    9. ' c' → logprob: -10.155409812927246
    10. '               ' → logprob: -10.405409812927246

Token 2381: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016388585790991783
    2. '
' → logprob: -4.516388416290283
    3. ' if' → logprob: -6.016388416290283
    4. '       ' → logprob: -6.391388416290283
    5. 'if' → logprob: -7.766388416290283
    6. '   ' → logprob: -8.516388893127441
    7. '            
' → logprob: -9.391388893127441
    8. '               ' → logprob: -9.516388893127441
    9. '```' → logprob: -9.516388893127441
    10. '\' → logprob: -10.016388893127441

Token 2382: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2957340478897095
    2. 'if' → logprob: -1.9207340478897095
    3. ' if' → logprob: -2.42073392868042
    4. 'angle' → logprob: -4.42073392868042
    5. '
' → logprob: -6.04573392868042
    6. 'import' → logprob: -6.29573392868042
    7. '       ' → logprob: -6.79573392868042
    8. ' angle' → logprob: -7.04573392868042
    9. '   ' → logprob: -7.17073392868042
    10. 'from' → logprob: -7.42073392868042

Token 2383: ' Movement' (ID: 52469)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8119038343429565
    2. '           ' → logprob: -1.4369038343429565
    3. 'angle' → logprob: -1.8119038343429565
    4. 'import' → logprob: -2.561903953552246
    5. ' if' → logprob: -3.061903953552246
    6. 'from' → logprob: -3.811903953552246
    7. ' angle' → logprob: -6.061903953552246
    8. '
' → logprob: -6.561903953552246
    9. '   ' → logprob: -6.936903953552246
    10. ' from' → logprob: -7.186903953552246

Token 2384: ' forb' (ID: 109718)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.4111890494823456
    2. '_from' → logprob: -1.786189079284668
    3. ' =' → logprob: -2.786189079284668
    4. ' from' → logprob: -3.411189079284668
    5. '_allowed' → logprob: -3.661189079284668
    6. 's' → logprob: -4.411189079284668
    7. ' if' → logprob: -5.036189079284668
    8. '=' → logprob: -5.286189079284668
    9. '_direction' → logprob: -5.411189079284668
    10. 'if' → logprob: -5.411189079284668

Token 2385: 'ids' (ID: 3375)
  Prédit: 'idden'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'idden' → logprob: -0.42812544107437134
    2. 'ids' → logprob: -1.3031253814697266
    3. 'id' → logprob: -2.6781253814697266
    4. 'iden' → logprob: -5.803125381469727
    5. 'idd' → logprob: -6.678125381469727
    6. '           ' → logprob: -6.803125381469727
    7. '               ' → logprob: -7.303125381469727
    8. '_ids' → logprob: -8.303125381469727
    9. 'ides' → logprob: -8.678125381469727
    10. '       ' → logprob: -8.678125381469727

Token 2386: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.8691432476043701
    2. '           ' → logprob: -0.9941432476043701
    3. ' if' → logprob: -2.61914324760437
    4. 'if' → logprob: -3.36914324760437
    5. ' from' → logprob: -3.49414324760437
    6. ' the' → logprob: -4.369143486022949
    7. 'for' → logprob: -4.494143486022949
    8. ' either' → logprob: -4.994143486022949
    9. '               ' → logprob: -5.244143486022949
    10. ' for' → logprob: -5.244143486022949

Token 2387: ' obt' (ID: 5564)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.33976003527641296
    2. 'open' → logprob: -2.2147600650787354
    3. ' touch' → logprob: -3.2147600650787354
    4. 'sign' → logprob: -3.2147600650787354
    5. 'acute' → logprob: -3.7147600650787354
    6. 'obt' → logprob: -3.9647600650787354
    7. ' obt' → logprob: -4.589759826660156
    8. ' open' → logprob: -4.839759826660156
    9. 'street' → logprob: -5.089759826660156
    10. 'ob' → logprob: -5.214759826660156

Token 2388: 'use' (ID: 1821)
  Prédit: 'use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.009216920472681522
    2. 'u' → logprob: -6.259216785430908
    3. '<' → logprob: -6.384216785430908
    4. 't' → logprob: -6.509216785430908
    5. '(use' → logprob: -6.634216785430908
    6. '_use' → logprob: -6.759216785430908
    7. '>' → logprob: -7.884216785430908
    8. '<-' → logprob: -8.634217262268066
    9. '(' → logprob: -8.884217262268066
    10. '```' → logprob: -9.134217262268066

Token 2389: ' to' (ID: 316)
  Prédit: '_angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.11344306170940399
    2. '_' → logprob: -2.48844313621521
    3. ' _' → logprob: -4.488442897796631
    4. ' angle' → logprob: -5.363442897796631
    5. '_side' → logprob: -5.613442897796631
    6. '_s' → logprob: -6.863442897796631
    7. 'angle' → logprob: -7.113442897796631
    8. ')' → logprob: -7.363442897796631
    9. '`' → logprob: -8.488443374633789
    10. '_p' → logprob: -8.613443374633789

Token 2390: ' acute' (ID: 43944)
  Prédit: 'acute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acute' → logprob: -3.130576806142926e-05
    2. ' acute' → logprob: -10.375031471252441
    3. 'ac' → logprob: -18.000030517578125
    4. '   ' → logprob: -18.500030517578125
    5. '```' → logprob: -18.750030517578125
    6. 'acu' → logprob: -18.875030517578125
    7. '0' → logprob: -20.000030517578125
    8. ' ' → logprob: -20.125030517578125
    9. 'acos' → logprob: -20.500030517578125
    10. 'acet' → logprob: -20.875030517578125

Token 2391: ' side' (ID: 4307)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020154548808932304
    2. ' if' → logprob: -4.3951544761657715
    3. '
' → logprob: -5.5201544761657715
    4. 'if' → logprob: -6.3951544761657715
    5. 'angle' → logprob: -7.6451544761657715
    6. ' angle' → logprob: -8.39515495300293
    7. ',' → logprob: -8.52015495300293
    8. '       ' → logprob: -8.77015495300293
    9. ' c' → logprob: -8.89515495300293
    10. '            
' → logprob: -9.14515495300293

Token 2392: ' at' (ID: 540)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26519373059272766
    2. '
' → logprob: -1.5151937007904053
    3. ' if' → logprob: -5.515193939208984
    4. '       ' → logprob: -6.015193939208984
    5. '\n' → logprob: -6.265193939208984
    6. '\' → logprob: -7.015193939208984
    7. '            
' → logprob: -7.015193939208984
    8. 'if' → logprob: -7.515193939208984
    9. '               ' → logprob: -7.765193939208984
    10. '   ' → logprob: -8.140193939208984

Token 2393: ' point' (ID: 2438)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.011465104296803474
    2. 'the' → logprob: -5.136465072631836
    3. 'sign' → logprob: -5.636465072631836
    4. 'that' → logprob: -7.261465072631836
    5. ' touch' → logprob: -7.261465072631836
    6. 'open' → logprob: -8.261465072631836
    7. ' the' → logprob: -9.886465072631836
    8. 'this' → logprob: -10.386465072631836
    9. '```' → logprob: -10.511465072631836
    10. ' that' → logprob: -10.886465072631836

Token 2394: '.' (ID: 13)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.050316013395786285
    2. '
' → logprob: -3.425316095352173
    3. 'if' → logprob: -5.050315856933594
    4. '       ' → logprob: -5.425315856933594
    5. ' if' → logprob: -6.300315856933594
    6. '   ' → logprob: -7.050315856933594
    7. 'angle' → logprob: -7.050315856933594
    8. 'import' → logprob: -7.925315856933594
    9. '#' → logprob: -8.300315856933594
    10. '\' → logprob: -8.425315856933594

Token 2395: ' 
' (ID: 793)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3480049967765808
    2. ' if' → logprob: -1.5980050563812256
    3. '
' → logprob: -2.9730050563812256
    4. 'if' → logprob: -3.8480050563812256
    5. '   ' → logprob: -5.5980048179626465
    6. ' c' → logprob: -5.7230048179626465
    7. 'angle' → logprob: -6.4730048179626465
    8. '       ' → logprob: -6.5980048179626465
    9. '               ' → logprob: -6.8480048179626465
    10. ' 
' → logprob: -7.2230048179626465

Token 2396: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013321992009878159
    2. ' if' → logprob: -5.138321876525879
    3. '
' → logprob: -5.263321876525879
    4. '       ' → logprob: -7.263321876525879
    5. 'if' → logprob: -8.138321876525879
    6. '               ' → logprob: -8.763321876525879
    7. '            
' → logprob: -8.763321876525879
    8. '#' → logprob: -9.138321876525879
    9. ' 
' → logprob: -9.263321876525879
    10. '   ' → logprob: -9.638321876525879

Token 2397: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31228339672088623
    2. ' if' → logprob: -1.6872833967208862
    3. 'if' → logprob: -2.812283515930176
    4. '
' → logprob: -5.062283515930176
    5. ' c' → logprob: -5.937283515930176
    6. '#' (adapté à ' #') → logprob: -5.937283515930176
    7. 'angle' → logprob: -5.937283515930176
    8. '\' → logprob: -6.562283515930176
    9. ' angle' → logprob: -6.812283515930176
    10. ' \' → logprob: -7.062283515930176

Token 2398: ' So' (ID: 2632)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11093422025442123
    2. 'if' → logprob: -2.485934257507324
    3. 'for' → logprob: -5.485934257507324
    4. ' if' → logprob: -5.610934257507324
    5. 'angle' → logprob: -6.235934257507324
    6. '       ' → logprob: -6.360934257507324
    7. 'sign' → logprob: -6.485934257507324
    8. '
' → logprob: -6.485934257507324
    9. 'from' → logprob: -6.610934257507324
    10. '#' → logprob: -6.610934257507324

Token 2399: ' from' (ID: 591)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03357493132352829
    2. '#' → logprob: -4.283575057983398
    3. 'for' → logprob: -5.158575057983398
    4. ' if' → logprob: -5.158575057983398
    5. 'touch' → logprob: -6.033575057983398
    6. 'p' → logprob: -6.283575057983398
    7. 'sign' → logprob: -7.283575057983398
    8. 'street' → logprob: -7.533575057983398
    9. '       ' → logprob: -7.908575057983398
    10. '   ' → logprob: -8.283575057983398

Token 2400: ' side' (ID: 4307)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.5335394740104675
    2. 'touch' → logprob: -1.0335395336151123
    3. 'open' → logprob: -3.1585395336151123
    4. ' street' → logprob: -4.408539295196533
    5. ' touch' → logprob: -6.408539295196533
    6. ' open' → logprob: -7.408539295196533
    7. 'stre' → logprob: -8.658539772033691
    8. '(open' → logprob: -8.658539772033691
    9. '(st' → logprob: -9.158539772033691
    10. '(' → logprob: -9.783539772033691

Token 2401: ' formed' (ID: 20680)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.30341389775276184
    2. ' street' → logprob: -2.9284138679504395
    3. 'touch' → logprob: -3.0534138679504395
    4. 'of' → logprob: -3.3034138679504395
    5. ' opposite' → logprob: -3.4284138679504395
    6. ' where' → logprob: -3.8034138679504395
    7. ' touch' → logprob: -4.3034138679504395
    8. '_touch' → logprob: -4.6784138679504395
    9. '           ' → logprob: -5.1784138679504395
    10. ' with' → logprob: -5.4284138679504395

Token 2402: ' by' (ID: 656)
  Prédit: ' by'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' by' → logprob: -0.9674521088600159
    2. 'by' → logprob: -1.092452049255371
    3. ' of' → logprob: -2.717452049255371
    4. 'of' → logprob: -3.092452049255371
    5. ' at' → logprob: -3.342452049255371
    6. ',' → logprob: -3.467452049255371
    7. 'at' → logprob: -3.842452049255371
    8. '[' → logprob: -3.967452049255371
    9. ')' → logprob: -3.967452049255371
    10. 'with' → logprob: -4.467452049255371

Token 2403: ' street' (ID: 12901)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.9958198666572571
    2. 'sign' → logprob: -1.4958198070526123
    3. 'street' → logprob: -1.8708198070526123
    4. 'open' → logprob: -1.8708198070526123
    5. 'v' → logprob: -2.9958198070526123
    6. ' street' → logprob: -4.120820045471191
    7. ' sign' → logprob: -4.745820045471191
    8. ' touch' → logprob: -4.870820045471191
    9. ' open' → logprob: -5.120820045471191
    10. 'the' → logprob: -5.495820045471191

Token 2404: ' at' (ID: 540)
  Prédit: '_other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_other' → logprob: -0.012420641258358955
    2. '_' → logprob: -5.262420654296875
    3. ',' → logprob: -5.512420654296875
    4. '_segments' → logprob: -7.262420654296875
    5. '_to' → logprob: -8.387420654296875
    6. ')' → logprob: -8.512420654296875
    7. 'other' → logprob: -8.637420654296875
    8. '_,' → logprob: -8.637420654296875
    9. '```' → logprob: -8.762420654296875
    10. '[' → logprob: -8.762420654296875

Token 2405: ' obt' (ID: 5564)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.0019901362247765064
    2. 'street' → logprob: -7.12699031829834
    3. ' touch' → logprob: -7.25199031829834
    4. 'open' → logprob: -7.75199031829834
    5. ' street' → logprob: -11.62699031829834
    6. 'other' → logprob: -11.75199031829834
    7. 'the' → logprob: -12.00199031829834
    8. 'sign' → logprob: -12.62699031829834
    9. ' open' → logprob: -12.87699031829834
    10. '_touch' → logprob: -13.12699031829834

Token 2406: 'use' (ID: 1821)
  Prédit: 'use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.0013926156098023057
    2. '_use' → logprob: -7.251392841339111
    3. 'u' → logprob: -8.126392364501953
    4. '(use' → logprob: -9.251392364501953
    5. '```' → logprob: -10.001392364501953
    6. 'us' → logprob: -10.251392364501953
    7. 'user' → logprob: -10.376392364501953
    8. '_' → logprob: -10.501392364501953
    9. '_angle' → logprob: -11.126392364501953
    10. ')' → logprob: -11.251392364501953

Token 2407: ' angle' (ID: 16538)
  Prédit: '_angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.14426736533641815
    2. '_side' → logprob: -2.7692673206329346
    3. 'angle' → logprob: -4.394267559051514
    4. ')' → logprob: -4.519267559051514
    5. '```' → logprob: -4.769267559051514
    6. '
' → logprob: -4.894267559051514
    7. '_' → logprob: -5.269267559051514
    8. '   ' → logprob: -5.394267559051514
    9. ')_' → logprob: -6.019267559051514
    10. '_sign' → logprob: -6.019267559051514

Token 2408: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1216915175318718
    2. ' if' → logprob: -2.9966914653778076
    3. ')' → logprob: -3.9966914653778076
    4. '
' → logprob: -4.246691703796387
    5. ',' → logprob: -4.746691703796387
    6. '               ' → logprob: -5.621691703796387
    7. 'if' → logprob: -5.996691703796387
    8. '       ' → logprob: -6.121691703796387
    9. '   ' → logprob: -6.246691703796387
    10. ')
' → logprob: -6.496691703796387

Token 2409: ' side' (ID: 4307)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.20174913108348846
    2. 'open' → logprob: -2.701749086380005
    3. ' sign' → logprob: -3.076749086380005
    4. 'the' → logprob: -3.701749086380005
    5. 'acute' → logprob: -4.326749324798584
    6. 'street' → logprob: -4.576749324798584
    7. ' open' → logprob: -5.201749324798584
    8. 'side' → logprob: -5.451749324798584
    9. 'touch' → logprob: -5.576749324798584
    10. ' the' → logprob: -5.951749324798584

Token 2410: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3633090257644653
    2. ' of' → logprob: -1.4883090257644653
    3. ' formed' → logprob: -2.363308906555176
    4. ' at' → logprob: -2.863308906555176
    5. 'sign' → logprob: -3.113308906555176
    6. '_sign' → logprob: -3.113308906555176
    7. ' sign' → logprob: -3.613308906555176
    8. '
' → logprob: -3.738308906555176
    9. ',' → logprob: -3.863308906555176
    10. ' =' → logprob: -4.113308906555176

Token 2411: ' acute' (ID: 43944)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.056069474667310715
    2. 'open' → logprob: -3.3060693740844727
    3. 'street' → logprob: -5.181069374084473
    4. 'touch' → logprob: -5.556069374084473
    5. 'the' → logprob: -5.681069374084473
    6. ' sign' → logprob: -6.056069374084473
    7. 'acute' → logprob: -6.556069374084473
    8. 'v' → logprob: -7.306069374084473
    9. ' open' → logprob: -9.181069374084473
    10. ' street' → logprob: -9.681069374084473

Token 2412: ' angle' (ID: 16538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4629371166229248
    2. ')' → logprob: -2.462937116622925
    3. ' if' → logprob: -2.837937116622925
    4. '
' → logprob: -2.962937116622925
    5. ')
' → logprob: -3.212937116622925
    6. '_angle' → logprob: -3.337937116622925
    7. '_sign' → logprob: -3.837937116622925
    8. ' angle' → logprob: -4.212937355041504
    9. '               ' → logprob: -5.212937355041504
    10. 'angle' → logprob: -5.337937355041504

Token 2413: ' is' (ID: 382)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23121486604213715
    2. '
' → logprob: -1.6062148809432983
    3. '       ' → logprob: -6.731215000152588
    4. ' if' → logprob: -6.856215000152588
    5. '\n' → logprob: -7.856215000152588
    6. 'if' → logprob: -7.856215000152588
    7. '            
' → logprob: -7.981215000152588
    8. '#' → logprob: -8.35621452331543
    9. '               ' → logprob: -8.35621452331543
    10. '   ' → logprob: -8.48121452331543

Token 2414: ' forbidden' (ID: 74435)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -1.2766863107681274
    2. 'touch' → logprob: -1.6516863107681274
    3. 'blocked' → logprob: -2.026686191558838
    4. '1' → logprob: -2.026686191558838
    5. ''' → logprob: -3.026686191558838
    6. ' touch' → logprob: -4.026686191558838
    7. ''s' → logprob: -4.026686191558838
    8. ' sign' → logprob: -4.276686191558838
    9. 's' → logprob: -4.276686191558838
    10. 'graph' → logprob: -4.401686191558838

Token 2415: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.016369936987757683
    2. '
' → logprob: -4.391369819641113
    3. ',' → logprob: -7.391369819641113
    4. '       ' → logprob: -7.641369819641113
    5. '               ' → logprob: -7.641369819641113
    6. '#' → logprob: -7.641369819641113
    7. ',
' → logprob: -8.516369819641113
    8. ' if' → logprob: -8.641369819641113
    9. '            
' → logprob: -8.641369819641113
    10. '.' → logprob: -8.766369819641113

Token 2416: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010802087374031544
    2. 'if' → logprob: -5.760802268981934
    3. '       ' → logprob: -6.635802268981934
    4. ' if' → logprob: -6.635802268981934
    5. '#' → logprob: -7.135802268981934
    6. '
' → logprob: -7.385802268981934
    7. '   ' → logprob: -7.385802268981934
    8. '  
' → logprob: -7.760802268981934
    9. '               ' → logprob: -7.760802268981934
    10. '            
' → logprob: -7.885802268981934

Token 2417: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.357157438993454
    2. '
' → logprob: -1.3571574687957764
    3. ' if' → logprob: -3.7321574687957764
    4. 'if' → logprob: -5.232157230377197
    5. 'angle' → logprob: -5.857157230377197
    6. '#' (adapté à ' #') → logprob: -6.357157230377197
    7. ' angle' → logprob: -6.607157230377197
    8. 'import' → logprob: -6.857157230377197
    9. '   ' → logprob: -6.982157230377197
    10. '            
' → logprob: -7.232157230377197

Token 2418: ' The' (ID: 623)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2355443686246872
    2. 'if' → logprob: -1.9855443239212036
    3. ' if' → logprob: -3.610544443130493
    4. '
' → logprob: -3.985544443130493
    5. '       ' → logprob: -4.985544204711914
    6. '\n' → logprob: -5.360544204711914
    7. '#' → logprob: -5.485544204711914
    8. '               ' → logprob: -5.610544204711914
    9. '   ' → logprob: -5.860544204711914
    10. 'for' → logprob: -6.860544204711914

Token 2419: ' obt' (ID: 5564)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.17848968505859375
    2. 'if' → logprob: -2.4284896850585938
    3. '           ' → logprob: -3.9284896850585938
    4. 'for' → logprob: -4.053489685058594
    5. ' #' → logprob: -5.178489685058594
    6. 'from' → logprob: -5.303489685058594
    7. 'sign' → logprob: -5.303489685058594
    8. ' if' → logprob: -5.678489685058594
    9. '
' → logprob: -5.928489685058594
    10. 'c' → logprob: -6.178489685058594

Token 2420: 'use' (ID: 1821)
  Prédit: 'use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.010487168096005917
    2. 't' → logprob: -5.760487079620361
    3. '       ' → logprob: -6.385487079620361
    4. 'u' → logprob: -6.385487079620361
    5. '   ' → logprob: -7.135487079620361
    6. '#' → logprob: -7.385487079620361
    7. '```' → logprob: -7.635487079620361
    8. 'us' → logprob: -8.63548755645752
    9. '           ' → logprob: -8.63548755645752
    10. 'ute' → logprob: -9.01048755645752

Token 2421: ' side' (ID: 4307)
  Prédit: '_angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.2041512429714203
    2. '_' → logprob: -2.079151153564453
    3. ' angle' → logprob: -4.204151153564453
    4. 'angle' → logprob: -4.704151153564453
    5. '_side' → logprob: -4.829151153564453
    6. ')' → logprob: -4.954151153564453
    7. ' _' → logprob: -5.204151153564453
    8. ')_' → logprob: -6.204151153564453
    9. '_
' → logprob: -6.454151153564453
    10. '
' → logprob: -6.704151153564453

Token 2422: ' is' (ID: 382)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.1207376718521118
    2. ')' → logprob: -1.7457376718521118
    3. ' =' → logprob: -1.8707376718521118
    4. '=' → logprob: -2.3707375526428223
    5. ',' → logprob: -2.4957375526428223
    6. '[' → logprob: -3.4957375526428223
    7. '#' → logprob: -3.8707375526428223
    8. '<|end|>' → logprob: -3.8707375526428223
    9. ' is' → logprob: -3.9957375526428223
    10. ']' → logprob: -4.995737552642822

Token 2423: ' on' (ID: 402)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.9016042947769165
    2. 'street' → logprob: -1.2766042947769165
    3. 'open' → logprob: -2.026604175567627
    4. 'v' → logprob: -2.651604175567627
    5. ' street' → logprob: -3.276604175567627
    6. 'sign' → logprob: -4.151604175567627
    7. ' touch' → logprob: -4.401604175567627
    8. 'p' → logprob: -4.651604175567627
    9. ' open' → logprob: -5.026604175567627
    10. 'the' → logprob: -5.526604175567627

Token 2424: ' side' (ID: 4307)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.4563489854335785
    2. 'touch' → logprob: -2.0813488960266113
    3. 'street' → logprob: -2.2063488960266113
    4. 'open' → logprob: -3.3313488960266113
    5. ' the' → logprob: -3.5813488960266113
    6. 'sign' → logprob: -3.8313488960266113
    7. ' street' → logprob: -4.331348896026611
    8. 'v' → logprob: -4.331348896026611
    9. 'graph' → logprob: -5.956348896026611
    10. 'side' → logprob: -6.206348896026611

Token 2425: ' with' (ID: 483)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.08570566773414612
    2. 'of' → logprob: -3.0857057571411133
    3. '[' → logprob: -5.335705757141113
    4. '_' → logprob: -5.335705757141113
    5. '   ' → logprob: -5.585705757141113
    6. '.' → logprob: -6.085705757141113
    7. '```' → logprob: -6.460705757141113
    8. ',' → logprob: -6.585705757141113
    9. ' (' → logprob: -6.710705757141113
    10. '=' → logprob: -6.835705757141113

Token 2426: ' angle' (ID: 16538)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.19289712607860565
    2. 'v' → logprob: -2.942897081375122
    3. 'sign' → logprob: -3.317897081375122
    4. 'the' → logprob: -4.192897319793701
    5. 'open' → logprob: -4.317897319793701
    6. 'touch' → logprob: -4.442897319793701
    7. ' c' → logprob: -4.692897319793701
    8. 'larg' → logprob: -5.317897319793701
    9. 'graph' → logprob: -5.317897319793701
    10. 'obt' → logprob: -5.317897319793701

Token 2427: ' >' (ID: 1424)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.9339586496353149
    2. ' <' → logprob: -1.183958649635315
    3. ')' → logprob: -2.0589585304260254
    4. '>' → logprob: -3.3089585304260254
    5. '_cos' → logprob: -3.3089585304260254
    6. ')<' → logprob: -3.9339585304260254
    7. '<=' → logprob: -4.183958530426025
    8. '=' → logprob: -4.308958530426025
    9. '_sign' → logprob: -4.933958530426025
    10. ' <=' → logprob: -5.183958530426025

Token 2428: '90' (ID: 2744)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00037442712346091866
    2. ' ' → logprob: -8.500374794006348
    3. '90' → logprob: -8.875374794006348
    4. '-' → logprob: -11.500374794006348
    5. '```' → logprob: -12.250374794006348
    6. '   ' → logprob: -12.375374794006348
    7. 'c' → logprob: -13.125374794006348
    8. '1' → logprob: -13.250374794006348
    9. 'zero' → logprob: -13.750374794006348
    10. '(' → logprob: -14.187874794006348

Token 2429: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.289746642112732
    2. ')' → logprob: -1.539746642112732
    3. ':' → logprob: -1.664746642112732
    4. ',' → logprob: -2.7897467613220215
    5. ':
' → logprob: -3.0397467613220215
    6. '   ' → logprob: -3.6647467613220215
    7. '       ' → logprob: -3.6647467613220215
    8. ' and' → logprob: -3.7897467613220215
    9. ')
' → logprob: -4.1647467613220215
    10. '):
' → logprob: -4.2897467613220215

Token 2430: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006765460595488548
    2. '
' → logprob: -6.131765365600586
    3. ' if' → logprob: -6.256765365600586
    4. '#' → logprob: -7.381765365600586
    5. '               ' → logprob: -7.756765365600586
    6. '       ' → logprob: -8.131765365600586
    7. '            
' → logprob: -8.756765365600586
    8. ' 
' → logprob: -9.131765365600586
    9. 'if' → logprob: -9.381765365600586
    10. '\' → logprob: -9.506765365600586

Token 2431: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7914849519729614
    2. '           ' → logprob: -0.9164849519729614
    3. 'import' → logprob: -3.166484832763672
    4. 'from' → logprob: -3.291484832763672
    5. 'angle' → logprob: -3.916484832763672
    6. ' if' → logprob: -4.041484832763672
    7. '#' (adapté à ' #') → logprob: -4.666484832763672
    8. '
' → logprob: -4.666484832763672
    9. 'sign' → logprob: -5.541484832763672
    10. '   ' → logprob: -6.291484832763672

Token 2432: ' The' (ID: 623)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.49438396096229553
    2. '           ' → logprob: -1.4943839311599731
    3. ' if' → logprob: -1.8693839311599731
    4. '#' → logprob: -5.619383811950684
    5. 'angle' → logprob: -5.744383811950684
    6. 'import' → logprob: -7.619383811950684
    7. '       ' → logprob: -7.744383811950684
    8. 'c' → logprob: -7.744383811950684
    9. '               ' → logprob: -8.119383811950684
    10. '
' → logprob: -8.244383811950684

Token 2433: ' acute' (ID: 43944)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.45960408449172974
    2. 'if' → logprob: -1.834604024887085
    3. '           ' → logprob: -3.209604024887085
    4. 'sign' → logprob: -3.459604024887085
    5. ' if' → logprob: -3.584604024887085
    6. '
' → logprob: -3.834604024887085
    7. 'import' → logprob: -4.334604263305664
    8. 'for' → logprob: -4.584604263305664
    9. 'direction' → logprob: -5.084604263305664
    10. '   ' → logprob: -5.209604263305664

Token 2434: ' side' (ID: 4307)
  Prédit: ' angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' angle' → logprob: -0.45751214027404785
    2. ' side' → logprob: -1.2075121402740479
    3. '_angle' → logprob: -3.707512140274048
    4. 'angle' → logprob: -3.957512140274048
    5. '_side' → logprob: -4.582511901855469
    6. 'side' → logprob: -5.332511901855469
    7. ' _' → logprob: -5.707511901855469
    8. ' ' → logprob: -6.332511901855469
    9. '_' → logprob: -6.707511901855469
    10. '
' → logprob: -7.707511901855469

Token 2435: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.12854357063770294
    2. ' =' → logprob: -3.1285436153411865
    3. '=' → logprob: -3.3785436153411865
    4. 'is' → logprob: -3.3785436153411865
    5. ')' → logprob: -6.378543376922607
    6. ' has' → logprob: -6.753543376922607
    7. '>' → logprob: -7.128543376922607
    8. ' ' → logprob: -7.503543376922607
    9. ' side' → logprob: -7.628543376922607
    10. ' (' → logprob: -8.003543853759766

Token 2436: ' with' (ID: 483)
  Prédit: ' on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.025736860930919647
    2. 'on' → logprob: -3.9007368087768555
    3. ' the' → logprob: -5.7757368087768555
    4. 'the' → logprob: -7.7757368087768555
    5. ' side' → logprob: -7.9007368087768555
    6. 'sign' → logprob: -8.525736808776855
    7. ' acute' → logprob: -8.525736808776855
    8. ' sign' → logprob: -8.650736808776855
    9. 'touch' → logprob: -8.900736808776855
    10. 'acute' → logprob: -9.275736808776855

Token 2437: ' angle' (ID: 16538)
  Prédit: 'cos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cos' → logprob: -0.10545669496059418
    2. 'sign' → logprob: -3.480456590652466
    3. 'c' → logprob: -3.980456590652466
    4. 'acute' → logprob: -4.230456829071045
    5. 'the' → logprob: -4.605456829071045
    6. '0' → logprob: -4.730456829071045
    7. 'angle' → logprob: -4.855456829071045
    8. 'v' → logprob: -5.230456829071045
    9. '```' → logprob: -7.355456829071045
    10. 'positive' → logprob: -8.105456352233887

Token 2438: ' <' (ID: 464)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.41189396381378174
    2. '<' → logprob: -1.9118939638137817
    3. ' <' → logprob: -2.411893844604492
    4. ' >' → logprob: -2.411893844604492
    5. ')' → logprob: -5.286893844604492
    6. '[' → logprob: -6.661893844604492
    7. '>
' → logprob: -6.786893844604492
    8. ')>' → logprob: -8.036893844604492
    9. '<=' → logprob: -8.036893844604492
    10. ' <=' → logprob: -8.286893844604492

Token 2439: '90' (ID: 2744)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -6.217951886355877e-05
    2. ' ' → logprob: -10.125061988830566
    3. '1' → logprob: -10.875061988830566
    4. '```' → logprob: -13.750061988830566
    5. '=' → logprob: -14.750061988830566
    6. '۰' → logprob: -15.625061988830566
    7. '<|end|>' → logprob: -15.625061988830566
    8. ',' → logprob: -15.687561988830566
    9. '   ' → logprob: -15.812561988830566
    10. ')' → logprob: -15.812561988830566

Token 2440: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2321975827217102
    2. '
' → logprob: -1.6071975231170654
    3. '       ' → logprob: -6.9821977615356445
    4. '            
' → logprob: -6.9821977615356445
    5. '\n' → logprob: -7.2321977615356445
    6. ' if' → logprob: -7.2321977615356445
    7. ',' → logprob: -7.6071977615356445
    8. '               ' → logprob: -7.7321977615356445
    9. ',
' → logprob: -8.107197761535645
    10. '#' → logprob: -8.232197761535645

Token 2441: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02335320971906185
    2. ' if' → logprob: -4.523353099822998
    3. '
' → logprob: -4.898353099822998
    4. '       ' → logprob: -6.398353099822998
    5. 'if' → logprob: -7.023353099822998
    6. '            
' → logprob: -7.773353099822998
    7. '#' → logprob: -7.898353099822998
    8. '```' → logprob: -8.148353576660156
    9. '   ' → logprob: -8.273353576660156
    10. ' c' → logprob: -8.898353576660156

Token 2442: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30776044726371765
    2. ' if' → logprob: -2.05776047706604
    3. '
' → logprob: -2.18276047706604
    4. 'if' → logprob: -4.682760238647461
    5. '            
' → logprob: -6.307760238647461
    6. ' angle' → logprob: -6.307760238647461
    7. '   ' → logprob: -6.432760238647461
    8. ' 
' → logprob: -6.557760238647461
    9. 'angle' → logprob: -6.807760238647461
    10. 'import' → logprob: -7.057760238647461

Token 2443: ' Because' (ID: 13602)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1340852677822113
    2. 'if' → logprob: -2.759085178375244
    3. ' if' → logprob: -3.384085178375244
    4. '
' → logprob: -4.384085178375244
    5. 'angle' → logprob: -4.884085178375244
    6. 'import' → logprob: -6.259085178375244
    7. 'from' → logprob: -6.509085178375244
    8. '   ' → logprob: -7.009085178375244
    9. '       ' → logprob: -7.384085178375244
    10. '#' → logprob: -7.634085178375244

Token 2444: ' sign' (ID: 2232)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.8815333843231201
    2. ' c' → logprob: -1.2565333843231201
    3. 'v' → logprob: -2.75653338432312
    4. ' v' → logprob: -3.25653338432312
    5. ' the' → logprob: -3.38153338432312
    6. '           ' → logprob: -3.50653338432312
    7. 'abs' → logprob: -4.131533622741699
    8. ' angle' → logprob: -4.131533622741699
    9. 'angle' → logprob: -4.256533622741699
    10. 'sign' → logprob: -4.381533622741699

Token 2445: ' touches' (ID: 45060)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.9556429386138916
    2. '[' → logprob: -2.0806429386138916
    3. ' at' → logprob: -2.2056429386138916
    4. ' is' → logprob: -2.3306429386138916
    5. '   ' → logprob: -2.4556429386138916
    6. '_segments' → logprob: -3.0806429386138916
    7. 's' → logprob: -3.3306429386138916
    8. ' points' → logprob: -3.3306429386138916
    9. ' touches' → logprob: -3.3306429386138916
    10. ')' → logprob: -3.7056429386138916

Token 2446: ' street' (ID: 12901)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.33302828669548035
    2. 'the' → logprob: -2.0830283164978027
    3. 'touch' → logprob: -2.5830283164978027
    4. ' street' → logprob: -3.4580283164978027
    5. ' touch' → logprob: -4.833028316497803
    6. ' both' → logprob: -5.208028316497803
    7. 'street' → logprob: -5.208028316497803
    8. 's' → logprob: -5.333028316497803
    9. 'open' → logprob: -5.708028316497803
    10. ' a' → logprob: -5.833028316497803

Token 2447: ' at' (ID: 540)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07110045850276947
    2. '
' → logprob: -3.3211004734039307
    3. ' if' → logprob: -4.446100234985352
    4. ',' → logprob: -5.071100234985352
    5. ',
' → logprob: -5.946100234985352
    6. ')' → logprob: -6.071100234985352
    7. '<|end|>' → logprob: -6.446100234985352
    8. '#' → logprob: -6.821100234985352
    9. '       ' → logprob: -7.196100234985352
    10. '.' → logprob: -7.196100234985352

Token 2448: ' a' (ID: 261)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.00508740684017539
    2. 'the' → logprob: -5.505087375640869
    3. 'point' → logprob: -8.255087852478027
    4. ' touch' → logprob: -8.505087852478027
    5. 'open' → logprob: -8.755087852478027
    6. 'a' → logprob: -9.380087852478027
    7. 'sign' → logprob: -9.380087852478027
    8. 'that' → logprob: -9.505087852478027
    9. 'ob' → logprob: -10.880087852478027
    10. ' the' → logprob: -10.880087852478027

Token 2449: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.4674282371997833
    2. 'junction' → logprob: -2.092428207397461
    3. 'touch' → logprob: -2.717428207397461
    4. 'intersection' → logprob: -2.842428207397461
    5. 'node' → logprob: -3.217428207397461
    6. 'vertex' → logprob: -3.717428207397461
    7. 't' → logprob: -4.842428207397461
    8. 'street' → logprob: -4.842428207397461
    9. 'single' → logprob: -5.092428207397461
    10. 'corner' → logprob: -5.342428207397461

Token 2450: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6674850583076477
    2. ',' → logprob: -1.167484998703003
    3. ',
' → logprob: -3.042484998703003
    4. ' and' → logprob: -3.667484998703003
    5. ':
' → logprob: -3.667484998703003
    6. '#' → logprob: -3.917484998703003
    7. '.' → logprob: -5.042485237121582
    8. ' if' → logprob: -5.042485237121582
    9. ':' → logprob: -5.292485237121582
    10. ' (' → logprob: -5.417485237121582

Token 2451: ' a' (ID: 261)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.30472320318222046
    2. '           ' → logprob: -1.4297232627868652
    3. ' we' → logprob: -5.304723262786865
    4. ' if' → logprob: -5.804723262786865
    5. ' the' → logprob: -5.929723262786865
    6. ' #' → logprob: -6.054723262786865
    7. 'the' → logprob: -6.304723262786865
    8. 'we' → logprob: -6.929723262786865
    9. '   ' → logprob: -7.304723262786865
    10. ' continue' → logprob: -7.429723262786865

Token 2452: ' node' (ID: 4596)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.00503213657066226
    2. '#' → logprob: -7.005032062530518
    3. ' t' → logprob: -7.130032062530518
    4. 'l' → logprob: -7.255032062530518
    5. 'll' → logprob: -7.630032062530518
    6. 'nd' → logprob: -8.755032539367676
    7. 's' → logprob: -8.755032539367676
    8. 'pp' → logprob: -8.880032539367676
    9. 'p' → logprob: -9.130032539367676
    10. 'space' → logprob: -9.130032539367676

Token 2453: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6673352718353271
    2. '
' → logprob: -1.9173352718353271
    3. ',' → logprob: -2.292335271835327
    4. '#' → logprob: -2.792335271835327
    5. ' (' → logprob: -2.792335271835327
    6. ' of' → logprob: -3.042335271835327
    7. ' at' → logprob: -3.167335271835327
    8. '           ' → logprob: -3.292335271835327
    9. '[' → logprob: -3.542335271835327
    10. ':' → logprob: -3.792335271835327

Token 2454: ' we' (ID: 581)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6906842589378357
    2. '#' → logprob: -1.4406843185424805
    3. ' continue' → logprob: -2.3156843185424805
    4. ' we' → logprob: -3.3156843185424805
    5. ' #' → logprob: -3.3156843185424805
    6. ' if' → logprob: -3.5656843185424805
    7. ' the' → logprob: -4.4406843185424805
    8. ',' → logprob: -5.0656843185424805
    9. 'continue' → logprob: -5.1906843185424805
    10. ' and' → logprob: -5.1906843185424805

Token 2455: ' see' (ID: 1921)
  Prédit: ' need'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' need' → logprob: -1.2292121648788452
    2. 'continue' → logprob: -1.3542121648788452
    3. ' continue' → logprob: -1.3542121648788452
    4. 'need' → logprob: -2.4792122840881348
    5. '#' → logprob: -3.6042122840881348
    6. ' can' → logprob: -3.7292122840881348
    7. ' must' → logprob: -3.9792122840881348
    8. 'must' → logprob: -5.229212284088135
    9. ' want' → logprob: -5.729212284088135
    10. ' will' → logprob: -5.854212284088135

Token 2456: ' street' (ID: 12901)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6688785552978516
    2. 'if' → logprob: -1.0438785552978516
    3. '           ' → logprob: -2.7938785552978516
    4. '#' → logprob: -3.6688785552978516
    5. ' to' → logprob: -4.418878555297852
    6. ' that' → logprob: -4.918878555297852
    7. ' the' → logprob: -5.668878555297852
    8. 'that' → logprob: -5.668878555297852
    9. 'the' → logprob: -5.793878555297852
    10. 'to' → logprob: -6.043878555297852

Token 2457: '/node' (ID: 81546)
  Prédit: '_other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_other' → logprob: -0.02033527009189129
    2. '           ' → logprob: -5.0203351974487305
    3. '_' → logprob: -6.0203351974487305
    4. '```' → logprob: -6.1453351974487305
    5. '_segments' → logprob: -6.5203351974487305
    6. '_out' → logprob: -7.0203351974487305
    7. 'segments' → logprob: -7.2703351974487305
    8. '   ' → logprob: -7.3953351974487305
    9. '_direct' → logprob: -7.5203351974487305
    10. '[' → logprob: -7.7703351974487305

Token 2458: ' edges' (ID: 22569)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2331591844558716
    2. '_' → logprob: -2.233159065246582
    3. ')' → logprob: -2.483159065246582
    4. '           ' → logprob: -2.858159065246582
    5. ',
' → logprob: -3.233159065246582
    6. ' to' → logprob: -3.358159065246582
    7. 's' → logprob: -3.358159065246582
    8. '#' → logprob: -3.358159065246582
    9. '
' → logprob: -3.358159065246582
    10. '[' → logprob: -3.733159065246582

Token 2459: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011087555438280106
    2. '
' → logprob: -5.136087417602539
    3. ' if' → logprob: -6.136087417602539
    4. '#' → logprob: -7.386087417602539
    5. ',' → logprob: -7.511087417602539
    6. '       ' → logprob: -7.886087417602539
    7. ',
' → logprob: -8.261087417602539
    8. 'if' → logprob: -8.761087417602539
    9. '<|end|>' → logprob: -8.886087417602539
    10. '               ' → logprob: -9.136087417602539

Token 2460: ' limit' (ID: 5967)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.13423611223697662
    2. ' sign' → logprob: -2.6342360973358154
    3. 'the' → logprob: -3.8842360973358154
    4. '#' → logprob: -4.6342363357543945
    5. ' the' → logprob: -5.1342363357543945
    6. 'their' → logprob: -5.7592363357543945
    7. 'adj' → logprob: -6.3842363357543945
    8. 'open' → logprob: -6.5092363357543945
    9. ' signs' → logprob: -6.6342363357543945
    10. ' their' → logprob: -6.8842363357543945

Token 2461: ' edges' (ID: 22569)
  Prédit: 'movement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'movement' → logprob: -0.5934803485870361
    2. ' movement' → logprob: -1.4684803485870361
    3. ')' → logprob: -3.593480348587036
    4. 'direction' → logprob: -3.968480348587036
    5. 'the' → logprob: -4.093480110168457
    6. 'dire' → logprob: -4.093480110168457
    7. ' directions' → logprob: -4.343480110168457
    8. ' the' → logprob: -4.343480110168457
    9. 'traffic' → logprob: -4.343480110168457
    10. 'ion' → logprob: -4.593480110168457

Token 2462: ' accordingly' (ID: 44041)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10019943863153458
    2. '
' → logprob: -2.8501994609832764
    3. '#' → logprob: -4.475199222564697
    4. ' if' → logprob: -4.725199222564697
    5. ',' → logprob: -6.100199222564697
    6. '[
' → logprob: -6.475199222564697
    7. ' #' → logprob: -6.475199222564697
    8. ')' → logprob: -6.850199222564697
    9. ' for' → logprob: -6.975199222564697
    10. '       ' → logprob: -6.975199222564697

Token 2463: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007067704573273659
    2. '
' → logprob: -5.507067680358887
    3. ' if' → logprob: -6.632067680358887
    4. '       ' → logprob: -7.632067680358887
    5. '#' → logprob: -8.257067680358887
    6. '               ' → logprob: -8.882067680358887
    7. '<|end|>' → logprob: -9.132067680358887
    8. '   ' → logprob: -9.257067680358887
    9. '            
' → logprob: -9.257067680358887
    10. 'if' → logprob: -9.382067680358887

Token 2464: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027340243104845285
    2. '#' → logprob: -6.752734184265137
    3. 'if' → logprob: -7.252734184265137
    4. ' if' → logprob: -7.752734184265137
    5. '```' → logprob: -9.127734184265137
    6. 'for' → logprob: -9.502734184265137
    7. '       ' → logprob: -10.002734184265137
    8. '   ' → logprob: -10.377734184265137
    9. ' for' → logprob: -11.002734184265137
    10. '               ' → logprob: -11.002734184265137

Token 2465: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014551744796335697
    2. 'if' → logprob: -5.389551639556885
    3. 'angle' → logprob: -5.389551639556885
    4. ' if' → logprob: -6.514551639556885
    5. 'import' → logprob: -6.764551639556885
    6. 'from' → logprob: -7.139551639556885
    7. '       ' → logprob: -7.264551639556885
    8. ' angle' → logprob: -8.264552116394043
    9. '```' → logprob: -8.264552116394043
    10. '
' → logprob: -9.139552116394043

Token 2466: ' This' (ID: 1328)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.49122610688209534
    2. '           ' → logprob: -1.116226077079773
    3. 'angle' → logprob: -3.8662261962890625
    4. 'import' → logprob: -4.1162261962890625
    5. ' if' → logprob: -4.4912261962890625
    6. 'from' → logprob: -5.8662261962890625
    7. '```' → logprob: -6.1162261962890625
    8. '
' → logprob: -6.3662261962890625
    9. '       ' → logprob: -6.4912261962890625
    10. '               ' → logprob: -6.8662261962890625

Token 2467: ' is' (ID: 382)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0109931230545044
    2. '           ' → logprob: -2.010993003845215
    3. ' is' → logprob: -2.635993003845215
    4. 'if' → logprob: -2.760993003845215
    5. 'angle' → logprob: -2.760993003845215
    6. '
' → logprob: -2.885993003845215
    7. ' code' → logprob: -3.010993003845215
    8. ' if' → logprob: -3.385993003845215
    9. ' angle' → logprob: -3.635993003845215
    10. ' #' → logprob: -4.010993003845215

Token 2468: ' local' (ID: 2698)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7833417654037476
    2. '#' → logprob: -2.033341884613037
    3. 'the' → logprob: -2.908341884613037
    4. '               ' → logprob: -3.283341884613037
    5. 'continue' → logprob: -3.283341884613037
    6. 'if' → logprob: -3.408341884613037
    7. '<|end|>' → logprob: -3.533341884613037
    8. 'not' → logprob: -3.908341884613037
    9. 'sign' → logprob: -3.908341884613037
    10. '```' → logprob: -4.158341884613037

Token 2469: ' direction' (ID: 9262)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10605448484420776
    2. '       ' → logprob: -2.9810545444488525
    3. '   ' → logprob: -4.731054306030273
    4. ' if' → logprob: -4.731054306030273
    5. '
' → logprob: -5.481054306030273
    6. ')' → logprob: -5.606054306030273
    7. '               ' → logprob: -5.606054306030273
    8. '#' → logprob: -5.606054306030273
    9. 'if' → logprob: -6.106054306030273
    10. 'angle' → logprob: -6.106054306030273

Token 2470: ' restriction' (ID: 38247)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03611624613404274
    2. '
' → logprob: -4.036116123199463
    3. ' if' → logprob: -4.536116123199463
    4. '       ' → logprob: -6.036116123199463
    5. '<|end|>' → logprob: -7.286116123199463
    6. ',' → logprob: -7.786116123199463
    7. 'if' → logprob: -7.786116123199463
    8. ')' → logprob: -7.911116123199463
    9. '   ' → logprob: -8.286116600036621
    10. ' =' → logprob: -8.536116600036621

Token 2471: ' between' (ID: 2870)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008422021754086018
    2. '       ' → logprob: -6.008421897888184
    3. ' if' → logprob: -6.383421897888184
    4. '
' → logprob: -6.508421897888184
    5. '```' → logprob: -7.633421897888184
    6. 'if' → logprob: -7.758421897888184
    7. 'angle' → logprob: -8.008421897888184
    8. '               ' → logprob: -8.258421897888184
    9. ' c' → logprob: -8.383421897888184
    10. '   ' → logprob: -8.633421897888184

Token 2472: ' node' (ID: 4596)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.5009608864784241
    2. 'street' → logprob: -2.2509608268737793
    3. 'sign' → logprob: -2.5009608268737793
    4. 'the' → logprob: -3.1259608268737793
    5. 'graph' → logprob: -3.2509608268737793
    6. ' street' → logprob: -3.2509608268737793
    7. ' sign' → logprob: -3.5009608268737793
    8. ' the' → logprob: -4.250960826873779
    9. ' touch' → logprob: -4.500960826873779
    10. ' graph' → logprob: -5.000960826873779

Token 2473: ' touch' (ID: 7381)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2597815990447998
    2. ' at' → logprob: -1.6347815990447998
    3. ' and' → logprob: -1.7597815990447998
    4. 's' → logprob: -1.8847815990447998
    5. '_touch' → logprob: -3.7597815990448
    6. ',' → logprob: -4.134781837463379
    7. 'touch' → logprob: -4.384781837463379
    8. '<|end|>' → logprob: -4.384781837463379
    9. '            ' → logprob: -4.634781837463379
    10. ' of' → logprob: -4.759781837463379

Token 2474: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.19163250923156738
    2. 'point' → logprob: -2.3166325092315674
    3. ',' → logprob: -3.9416325092315674
    4. ' and' → logprob: -4.191632270812988
    5. '_point' → logprob: -5.441632270812988
    6. '               ' → logprob: -5.691632270812988
    7. ',
' → logprob: -5.941632270812988
    8. '   ' → logprob: -5.941632270812988
    9. ' point' → logprob: -6.066632270812988
    10. '            
' → logprob: -6.066632270812988

Token 2475: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.677611231803894
    2. 'open' → logprob: -0.927611231803894
    3. ' street' → logprob: -2.8026113510131836
    4. ' open' → logprob: -3.4276113510131836
    5. 'touch' → logprob: -6.177611351013184
    6. 'stre' → logprob: -7.552611351013184
    7. 'other' → logprob: -8.052611351013184
    8. ' ' → logprob: -9.052611351013184
    9. '   ' → logprob: -9.552611351013184
    10. 'graph' → logprob: -9.552611351013184

Token 2476: '_other' (ID: 70088)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05905807018280029
    2. ' if' → logprob: -3.18405818939209
    3. '
' → logprob: -5.18405818939209
    4. 'if' → logprob: -5.80905818939209
    5. '       ' → logprob: -6.18405818939209
    6. '#' → logprob: -6.55905818939209
    7. '   ' → logprob: -7.18405818939209
    8. '               ' → logprob: -7.30905818939209
    9. ')' → logprob: -8.43405818939209
    10. '```' → logprob: -8.43405818939209

Token 2477: ' node' (ID: 4596)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09055846929550171
    2. ' if' → logprob: -3.0905585289001465
    3. '
' → logprob: -3.5905585289001465
    4. 'if' → logprob: -4.9655585289001465
    5. 'angle' → logprob: -6.2155585289001465
    6. '       ' → logprob: -6.9655585289001465
    7. ' c' → logprob: -7.5905585289001465
    8. '   ' → logprob: -7.8405585289001465
    9. '```' → logprob: -7.9655585289001465
    10. ' angle' → logprob: -8.340558052062988

Token 2478: '(s' (ID: 1858)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04172172024846077
    2. 'if' → logprob: -3.916721820831299
    3. ' if' → logprob: -4.541721820831299
    4. '
' → logprob: -5.166721820831299
    5. '#' → logprob: -6.166721820831299
    6. '       ' → logprob: -7.166721820831299
    7. '   ' → logprob: -8.41672134399414
    8. ' c' → logprob: -8.41672134399414
    9. 'd' → logprob: -8.91672134399414
    10. 'c' → logprob: -8.91672134399414

Token 2479: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6853677034378052
    2. ')' → logprob: -0.8103677034378052
    3. ',' → logprob: -3.5603675842285156
    4. '.' → logprob: -5.435367584228516
    5. ')
' → logprob: -5.935367584228516
    6. ').' → logprob: -6.310367584228516
    7. '):
' → logprob: -6.560367584228516
    8. ',
' → logprob: -6.560367584228516
    9. ':' → logprob: -6.935367584228516
    10. '            ' → logprob: -6.935367584228516

Token 2480: '            
' (ID: 7048)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0100720738992095
    2. '#' → logprob: -5.510072231292725
    3. 'if' → logprob: -5.510072231292725
    4. ' if' → logprob: -7.010072231292725
    5. '       ' → logprob: -8.385071754455566
    6. '```' → logprob: -8.510071754455566
    7. 'for' → logprob: -9.010071754455566
    8. '
' → logprob: -9.135071754455566
    9. '   ' → logprob: -9.635071754455566
    10. '               ' → logprob: -10.260071754455566

Token 2481: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.008745286613702774
    2. '#' → logprob: -5.633745193481445
    3. ' if' → logprob: -6.508745193481445
    4. 'if' → logprob: -6.633745193481445
    5. '
' → logprob: -6.633745193481445
    6. '       ' → logprob: -8.383745193481445
    7. '```' → logprob: -8.758745193481445
    8. '   ' → logprob: -9.258745193481445
    9. 'from' → logprob: -9.383745193481445
    10. ' #' → logprob: -9.883745193481445

Token 2482: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7508943676948547
    2. 'if' → logprob: -0.8758943676948547
    3. ' if' → logprob: -2.50089430809021
    4. 'angle' → logprob: -3.87589430809021
    5. '#' (adapté à ' #') → logprob: -6.000894546508789
    6. '
' → logprob: -6.750894546508789
    7. '   ' → logprob: -7.125894546508789
    8. 'd' → logprob: -7.250894546508789
    9. ' angle' → logprob: -7.375894546508789
    10. '       ' → logprob: -8.000894546508789

Token 2483: ' Interpret' (ID: 100323)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5273411273956299
    2. ' if' → logprob: -1.0273411273956299
    3. 'if' → logprob: -3.77734112739563
    4. '
' → logprob: -4.277340888977051
    5. ' angle' → logprob: -5.527340888977051
    6. 'angle' → logprob: -5.902340888977051
    7. 'import' → logprob: -6.527340888977051
    8. '            ' → logprob: -6.902340888977051
    9. '   ' → logprob: -7.527340888977051
    10. '```' → logprob: -7.527340888977051

Token 2484: ':
' (ID: 734)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8235763311386108
    2. ' if' → logprob: -0.8235763311386108
    3. '           ' → logprob: -2.5735764503479004
    4. 'angle' → logprob: -3.9485764503479004
    5. '
' → logprob: -4.6985764503479
    6. '#' → logprob: -5.1985764503479
    7. ' angle' → logprob: -5.5735764503479
    8. 'import' → logprob: -5.5735764503479
    9. ' #' → logprob: -6.8235764503479
    10. 'from' → logprob: -7.3235764503479

Token 2485: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2327287793159485
    2. ' if' → logprob: -1.9827287197113037
    3. 'if' → logprob: -2.7327287197113037
    4. '#' → logprob: -6.357728958129883
    5. 'angle' → logprob: -6.857728958129883
    6. ' c' → logprob: -7.857728958129883
    7. '            ' → logprob: -8.232728958129883
    8. 'If' → logprob: -8.357728958129883
    9. '```' → logprob: -8.357728958129883
    10. '       ' → logprob: -8.607728958129883

Token 2486: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5434057116508484
    2. '           ' → logprob: -1.5434057712554932
    3. ' if' → logprob: -1.9184057712554932
    4. 'angle' → logprob: -3.043405771255493
    5. '#' (adapté à ' #') → logprob: -5.418405532836914
    6. ' angle' → logprob: -6.543405532836914
    7. 'd' → logprob: -7.418405532836914
    8. '
' → logprob: -7.543405532836914
    9. '            ' → logprob: -7.668405532836914
    10. ' #' → logprob: -7.668405532836914

Token 2487: ' For' (ID: 2214)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2089277058839798
    2. '           ' → logprob: -2.583927631378174
    3. ' if' → logprob: -2.958927631378174
    4. 'angle' → logprob: -2.958927631378174
    5. 'import' → logprob: -5.583927631378174
    6. '
' → logprob: -6.583927631378174
    7. 'from' → logprob: -6.833927631378174
    8. '#' → logprob: -6.958927631378174
    9. ' angle' → logprob: -7.958927631378174
    10. 'd' → logprob: -8.458928108215332

Token 2488: ' the' (ID: 290)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -1.3666857481002808
    2. 'the' → logprob: -1.6166857481002808
    3. 'i' → logprob: -1.9916857481002808
    4. 'p' → logprob: -2.8666858673095703
    5. ' each' → logprob: -3.2416858673095703
    6. ' the' → logprob: -3.3666858673095703
    7. ' street' → logprob: -3.4916858673095703
    8. 'edge' → logprob: -3.7416858673095703
    9. 'both' → logprob: -3.8666858673095703
    10. 'bidden' → logprob: -3.9916858673095703

Token 2489: ' node' (ID: 4596)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.6941642761230469
    2. 'i' → logprob: -1.0691642761230469
    3. ' sign' → logprob: -3.069164276123047
    4. 'street' → logprob: -4.069164276123047
    5. 'next' → logprob: -4.194164276123047
    6. ' next' → logprob: -4.569164276123047
    7. '#' → logprob: -4.694164276123047
    8. 'touch' → logprob: -4.819164276123047
    9. 'p' → logprob: -4.944164276123047
    10. 'for' → logprob: -4.944164276123047

Token 2490: ' touch' (ID: 7381)
  Prédit: ' touch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' touch' → logprob: -0.6453321576118469
    2. 'touch' → logprob: -1.6453320980072021
    3. ' at' → logprob: -1.7703320980072021
    4. ' graph' → logprob: -3.895332098007202
    5. 't' → logprob: -4.145332336425781
    6. '
' → logprob: -4.770332336425781
    7. 's' → logprob: -4.895332336425781
    8. ',' → logprob: -5.020332336425781
    9. '_' → logprob: -5.020332336425781
    10. ' (' → logprob: -5.520332336425781

Token 2491: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5110748410224915
    2. ':
' → logprob: -1.3860747814178467
    3. ':' → logprob: -2.8860747814178467
    4. ',
' → logprob: -3.1360747814178467
    5. '           ' → logprob: -3.7610747814178467
    6. '#' → logprob: -4.386075019836426
    7. '
' → logprob: -6.011075019836426
    8. ' (' → logprob: -6.386075019836426
    9. ' if' → logprob: -6.386075019836426
    10. ' #' → logprob: -6.761075019836426

Token 2492: ' the' (ID: 290)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3899763822555542
    2. '#' → logprob: -1.6399763822555542
    3. ' if' → logprob: -2.6399765014648438
    4. '           ' → logprob: -3.0149765014648438
    5. 'for' → logprob: -5.014976501464844
    6. ' for' → logprob: -7.889976501464844
    7. ' #' → logprob: -8.264976501464844
    8. 'continue' → logprob: -8.264976501464844
    9. 'graph' → logprob: -8.764976501464844
    10. '
' → logprob: -8.889976501464844

Token 2493: ' car' (ID: 1669)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.39811065793037415
    2. '#' → logprob: -1.3981106281280518
    3. 'for' → logprob: -2.8981106281280518
    4. 'c' → logprob: -5.023110866546631
    5. 'angle' → logprob: -5.148110866546631
    6. 'sign' → logprob: -5.898110866546631
    7. 'allowed' → logprob: -6.023110866546631
    8. 'adj' → logprob: -7.023110866546631
    9. 'v' → logprob: -7.148110866546631
    10. 'd' → logprob: -7.148110866546631

Token 2494: ' cannot' (ID: 6284)
  Prédit: ' may'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' may' → logprob: -0.3685736656188965
    2. 's' → logprob: -2.2435736656188965
    3. ' can' → logprob: -3.1185736656188965
    4. ' cannot' → logprob: -3.2435736656188965
    5. ' should' → logprob: -3.8685736656188965
    6. 'may' → logprob: -4.1185736656188965
    7. ' must' → logprob: -4.2435736656188965
    8. ' s' → logprob: -4.3685736656188965
    9. ' ' → logprob: -4.4935736656188965
    10. ' might' → logprob: -5.2435736656188965

Token 2495: ' move' (ID: 5275)
  Prédit: 'move'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'move' → logprob: -0.7104867696762085
    2. ' move' → logprob: -1.3354867696762085
    3. 'go' → logprob: -1.5854867696762085
    4. ' go' → logprob: -3.585486888885498
    5. 'travel' → logprob: -4.710486888885498
    6. ' travel' → logprob: -5.960486888885498
    7. 'enter' → logprob: -8.21048641204834
    8. 'depart' → logprob: -8.46048641204834
    9. 'leave' → logprob: -8.71048641204834
    10. 'pass' → logprob: -8.96048641204834

Token 2496: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.06499417126178741
    2. ' from' → logprob: -2.8149940967559814
    3. ' along' → logprob: -6.8149943351745605
    4. 'along' → logprob: -7.6899943351745605
    5. ' graph' → logprob: -7.9399943351745605
    6. 'graph' → logprob: -7.9399943351745605
    7. 'away' → logprob: -8.939993858337402
    8. '           ' → logprob: -9.189993858337402
    9. ' away' → logprob: -9.439993858337402
    10. ' ' → logprob: -9.564993858337402

Token 2497: ' side' (ID: 4307)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.6511827111244202
    2. 'touch' → logprob: -1.2761826515197754
    3. ' street' → logprob: -1.7761826515197754
    4. 'open' → logprob: -4.151182651519775
    5. ' touch' → logprob: -4.401182651519775
    6. ' open' → logprob: -6.651182651519775
    7. 'stre' → logprob: -7.526182651519775
    8. 'graph' → logprob: -8.526183128356934
    9. ' graph' → logprob: -10.401183128356934
    10. '```' → logprob: -11.151183128356934

Token 2498: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.3106330335140228
    2. '           ' → logprob: -2.3106329441070557
    3. 'of' → logprob: -2.5606329441070557
    4. 'touch' → logprob: -3.4356329441070557
    5. ' that' → logprob: -5.435633182525635
    6. '               ' → logprob: -5.435633182525635
    7. ' opposite' → logprob: -5.435633182525635
    8. ' where' → logprob: -5.560633182525635
    9. ' touch' → logprob: -5.560633182525635
    10. 's' → logprob: -5.685633182525635

Token 2499: ' obt' (ID: 5564)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.1138385683298111
    2. 'street' → logprob: -2.8638386726379395
    3. 'open' → logprob: -3.8638386726379395
    4. ' touch' → logprob: -4.7388386726379395
    5. 'the' → logprob: -4.9888386726379395
    6. 'graph' → logprob: -5.7388386726379395
    7. ' street' → logprob: -5.9888386726379395
    8. 'sign' → logprob: -6.2388386726379395
    9. 'acute' → logprob: -6.7388386726379395
    10. 'obt' → logprob: -6.8638386726379395

Token 2500: 'use' (ID: 1821)
  Prédit: 'use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.0003688245196826756
    2. '(use' → logprob: -8.75036907196045
    3. 't' → logprob: -10.00036907196045
    4. 'u' → logprob: -10.12536907196045
    5. '```' → logprob: -10.75036907196045
    6. '(' → logprob: -11.00036907196045
    7. '(t' → logprob: -11.50036907196045
    8. '_use' → logprob: -11.50036907196045
    9. '=' → logprob: -12.00036907196045
    10. '[' → logprob: -12.00036907196045

Token 2501: ' angle' (ID: 16538)
  Prédit: '_angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.06966161727905273
    2. '_' → logprob: -3.1946616172790527
    3. 'angle' → logprob: -4.069661617279053
    4. ' angle' → logprob: -5.319661617279053
    5. ' _' → logprob: -6.569661617279053
    6. ')' → logprob: -7.194661617279053
    7. ' ' → logprob: -7.569661617279053
    8. '`' → logprob: -8.694662094116211
    9. '```' → logprob: -8.694662094116211
    10. ''' → logprob: -9.069662094116211

Token 2502: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.12216164171695709
    2. 'to' → logprob: -3.622161626815796
    3. ',' → logprob: -3.997161626815796
    4. '_to' → logprob: -4.497161865234375
    5. '           ' → logprob: -4.997161865234375
    6. ' (' → logprob: -5.122161865234375
    7. ' if' → logprob: -5.122161865234375
    8. ' ' → logprob: -5.247161865234375
    9. ' toward' → logprob: -5.247161865234375
    10. ' towards' → logprob: -5.622161865234375

Token 2503: ' side' (ID: 4307)
  Prédit: 'acute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acute' → logprob: -0.550567090511322
    2. 'touch' → logprob: -1.1755671501159668
    3. ' acute' → logprob: -3.300567150115967
    4. 'the' → logprob: -3.800567150115967
    5. ' touch' → logprob: -3.800567150115967
    6. ' the' → logprob: -4.800567150115967
    7. 'side' → logprob: -5.050567150115967
    8. 'open' → logprob: -5.300567150115967
    9. ' street' → logprob: -5.425567150115967
    10. 'street' → logprob: -5.425567150115967

Token 2504: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.01668323390185833
    2. 'of' → logprob: -4.641683101654053
    3. ' street' → logprob: -6.516683101654053
    4. ' ' → logprob: -7.391683101654053
    5. '           ' → logprob: -7.516683101654053
    6. 'touch' → logprob: -7.516683101654053
    7. ' that' → logprob: -7.641683101654053
    8. '_of' → logprob: -8.141683578491211
    9. ' with' → logprob: -8.391683578491211
    10. ' touch' → logprob: -8.516683578491211

Token 2505: ' acute' (ID: 43944)
  Prédit: 'acute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acute' → logprob: -0.05732843652367592
    2. ' acute' → logprob: -3.182328462600708
    3. 'touch' → logprob: -4.432328224182129
    4. ' touch' → logprob: -6.557328224182129
    5. 'obt' → logprob: -8.307328224182129
    6. 'the' → logprob: -8.807328224182129
    7. 'ac' → logprob: -9.307328224182129
    8. 'sign' → logprob: -9.432328224182129
    9. ' the' → logprob: -9.432328224182129
    10. 'open' → logprob: -9.807328224182129

Token 2506: ' angle' (ID: 16538)
  Prédit: '_angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.3309680223464966
    2. 'angle' → logprob: -1.3309680223464966
    3. ' angle' → logprob: -5.080967903137207
    4. ')' → logprob: -5.330967903137207
    5. '```' → logprob: -6.955967903137207
    6. '_sign' → logprob: -6.955967903137207
    7. '_touch' → logprob: -7.205967903137207
    8. '           ' → logprob: -7.330967903137207
    9. '(angle' → logprob: -7.955967903137207
    10. 'touch' → logprob: -7.955967903137207

Token 2507: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2955133616924286
    2. '
' → logprob: -1.545513391494751
    3. ' if' → logprob: -3.920513391494751
    4. '#' → logprob: -5.420513153076172
    5. '.' → logprob: -6.045513153076172
    6. ')' → logprob: -6.170513153076172
    7. '\' → logprob: -6.670513153076172
    8. '               ' → logprob: -6.670513153076172
    9. '       ' → logprob: -6.795513153076172
    10. '[' → logprob: -6.920513153076172

Token 2508: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.036195121705532074
    2. ' if' → logprob: -3.5361950397491455
    3. 'if' → logprob: -6.036195278167725
    4. ',' → logprob: -6.536195278167725
    5. '            
' → logprob: -7.536195278167725
    6. '#' → logprob: -7.911195278167725
    7. '
' → logprob: -8.036194801330566
    8. '       ' → logprob: -8.536194801330566
    9. '.' → logprob: -8.786194801330566
    10. '            ' → logprob: -9.036194801330566

Token 2509: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09049662947654724
    2. ' if' → logprob: -2.59049654006958
    3. 'if' → logprob: -5.84049654006958
    4. '
' → logprob: -6.09049654006958
    5. '#' (adapté à ' #') → logprob: -6.46549654006958
    6. '            ' → logprob: -7.46549654006958
    7. ' continue' → logprob: -7.71549654006958
    8. '       ' → logprob: -8.090497016906738
    9. '            
' → logprob: -8.090497016906738
    10. ' 
' → logprob: -8.090497016906738

Token 2510: ' The' (ID: 623)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7995259761810303
    2. 'if' → logprob: -1.0495259761810303
    3. ' if' → logprob: -1.6745259761810303
    4. '#' → logprob: -4.674526214599609
    5. '
' → logprob: -7.424526214599609
    6. 'for' → logprob: -8.04952621459961
    7. 'i' → logprob: -8.17452621459961
    8. 'd' → logprob: -8.29952621459961
    9. ' #' → logprob: -8.42452621459961
    10. '```' → logprob: -8.54952621459961

Token 2511: ' two' (ID: 1920)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7599402070045471
    2. 'sign' → logprob: -2.3849401473999023
    3. 'if' → logprob: -2.7599401473999023
    4. '
' → logprob: -3.5099401473999023
    5. ' if' → logprob: -3.5099401473999023
    6. 'for' → logprob: -3.5099401473999023
    7. ' sign' → logprob: -3.6349401473999023
    8. 'graph' → logprob: -3.6349401473999023
    9. 'c' → logprob: -3.7599401473999023
    10. ')' → logprob: -4.009940147399902

Token 2512: ' street' (ID: 12901)
  Prédit: 'vectors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'vectors' → logprob: -0.8440805077552795
    2. 'segments' → logprob: -1.2190804481506348
    3. 'edges' → logprob: -2.8440804481506348
    4. 'points' → logprob: -3.0940804481506348
    5. 'nodes' → logprob: -3.3440804481506348
    6. 'ends' → logprob: -3.9690804481506348
    7. 'dire' → logprob: -4.219080448150635
    8. ' vectors' → logprob: -4.219080448150635
    9. 'neighbors' → logprob: -4.219080448150635
    10. ' endpoints' → logprob: -4.219080448150635

Token 2513: ' edges' (ID: 22569)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -0.885450005531311
    2. '_segments' → logprob: -0.885450005531311
    3. 's' → logprob: -2.1354498863220215
    4. ' segments' → logprob: -3.3854498863220215
    5. ',' → logprob: -5.0104498863220215
    6. '_' → logprob: -5.6354498863220215
    7. '_other' → logprob: -6.2604498863220215
    8. '_segment' → logprob: -6.5104498863220215
    9. 'segment' → logprob: -6.7604498863220215
    10. '_nodes' → logprob: -7.0104498863220215

Token 2514: ' adjacent' (ID: 39069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3460254967212677
    2. 's' → logprob: -2.7210254669189453
    3. ',' → logprob: -2.9710254669189453
    4. '#' → logprob: -3.2210254669189453
    5. ' at' → logprob: -4.096025466918945
    6. ')' → logprob: -4.471025466918945
    7. '[' → logprob: -4.596025466918945
    8. ' =' → logprob: -4.721025466918945
    9. '
' → logprob: -5.096025466918945
    10. 'from' → logprob: -5.096025466918945

Token 2515: ' at' (ID: 540)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.9984396696090698
    2. '           ' → logprob: -1.3734396696090698
    3. 'to' → logprob: -1.8734396696090698
    4. 's' → logprob: -2.6234397888183594
    5. ',' → logprob: -3.2484397888183594
    6. ')' → logprob: -3.8734397888183594
    7. ' at' → logprob: -3.9984397888183594
    8. ':' → logprob: -3.9984397888183594
    9. '=' → logprob: -4.248439788818359
    10. '[' → logprob: -5.123439788818359

Token 2516: ' touch' (ID: 7381)
  Prédit: ' touch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' touch' → logprob: -0.16057240962982178
    2. 'touch' → logprob: -1.9105724096298218
    3. ' sign' → logprob: -9.285572052001953
    4. '
' → logprob: -9.660572052001953
    5. ' the' → logprob: -9.660572052001953
    6. 'sign' → logprob: -9.910572052001953
    7. 'the' → logprob: -10.035572052001953
    8. '_touch' → logprob: -11.910572052001953
    9. '```' → logprob: -12.285572052001953
    10. '   ' → logprob: -13.160572052001953

Token 2517: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17454935610294342
    2. '
' → logprob: -2.1745493412017822
    3. ' if' → logprob: -3.2995493412017822
    4. '   ' → logprob: -7.049549579620361
    5. '               ' → logprob: -7.049549579620361
    6. '#' → logprob: -7.174549579620361
    7. '       ' → logprob: -7.174549579620361
    8. ')' → logprob: -7.424549579620361
    9. '[' → logprob: -7.549549579620361
    10. '            
' → logprob: -7.549549579620361

Token 2518: ' only' (ID: 1606)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9909616112709045
    2. '            ' → logprob: -1.7409615516662598
    3. ')' → logprob: -2.3659615516662598
    4. '<|end|>' → logprob: -2.4909615516662598
    5. ' ' → logprob: -3.1159615516662598
    6. '#' → logprob: -3.8659615516662598
    7. ' #' → logprob: -4.11596155166626
    8. ' )' → logprob: -4.24096155166626
    9. '
' → logprob: -4.24096155166626
    10. ',' → logprob: -4.36596155166626

Token 2519: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.175567626953125
    2. ' one' → logprob: -2.050567626953125
    3. 'the' → logprob: -5.050567626953125
    4. '#' → logprob: -5.550567626953125
    5. 'sign' → logprob: -6.425567626953125
    6. 'neighbors' → logprob: -6.425567626953125
    7. 'if' → logprob: -6.550567626953125
    8. '...' → logprob: -6.675567626953125
    9. 'for' → logprob: -6.675567626953125
    10. 'consider' → logprob: -6.800567626953125

Token 2520: ' street' (ID: 12901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40490978956222534
    2. ' if' → logprob: -2.02990984916687
    3. '
' → logprob: -3.40490984916687
    4. '[' → logprob: -3.65490984916687
    5. ')' → logprob: -3.90490984916687
    6. '[
' → logprob: -4.154909610748291
    7. ',' → logprob: -4.404909610748291
    8. '.' → logprob: -4.654909610748291
    9. ':
' → logprob: -4.654909610748291
    10. '               ' → logprob: -4.904909610748291

Token 2521: ' edge' (ID: 11165)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37580591440200806
    2. '
' → logprob: -1.8758058547973633
    3. ')' → logprob: -3.6258058547973633
    4. ' if' → logprob: -3.7508058547973633
    5. ',' → logprob: -4.000805854797363
    6. '[' → logprob: -4.125805854797363
    7. '[
' → logprob: -4.750805854797363
    8. ',
' → logprob: -5.000805854797363
    9. '            
' → logprob: -5.000805854797363
    10. '               ' → logprob: -5.125805854797363

Token 2522: ' or' (ID: 503)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21838980913162231
    2. ')' → logprob: -2.9683897495269775
    3. '.' → logprob: -3.2183897495269775
    4. '<|end|>' → logprob: -3.7183897495269775
    5. ',' → logprob: -4.593389987945557
    6. ' if' → logprob: -4.843389987945557
    7. '               ' → logprob: -4.843389987945557
    8. '\n' → logprob: -4.968389987945557
    9. '[' → logprob: -5.343389987945557
    10. ':' → logprob: -5.468389987945557

Token 2523: ' possibly' (ID: 14836)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.3697143495082855
    2. 'one' → logprob: -1.744714379310608
    3. 'segment' → logprob: -3.1197142601013184
    4. 'two' → logprob: -3.8697142601013184
    5. '#' → logprob: -4.494714260101318
    6. 'point' → logprob: -4.994714260101318
    7. 'maybe' → logprob: -5.119714260101318
    8. 'possibly' → logprob: -5.244714260101318
    9. 'more' → logprob: -5.494714260101318
    10. 'neighbor' → logprob: -5.494714260101318

Token 2524: ' multiple' (ID: 7598)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.46169811487197876
    2. 'another' → logprob: -2.461698055267334
    3. 'more' → logprob: -3.461698055267334
    4. ' sign' → logprob: -3.461698055267334
    5. 'multiple' → logprob: -3.461698055267334
    6. 'the' → logprob: -3.461698055267334
    7. 'two' → logprob: -3.586698055267334
    8. 'one' → logprob: -4.461698055267334
    9. ' another' → logprob: -4.461698055267334
    10. 'other' → logprob: -4.586698055267334

Token 2525: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007209741044789553
    2. '
' → logprob: -6.882209777832031
    3. '       ' → logprob: -6.882209777832031
    4. ' if' → logprob: -7.132209777832031
    5. '<|end|>' → logprob: -7.132209777832031
    6. '               ' → logprob: -7.507209777832031
    7. ',' → logprob: -7.507209777832031
    8. '#' → logprob: -7.757209777832031
    9. '.' → logprob: -8.132209777832031
    10. '```' → logprob: -8.257209777832031

Token 2526: ' how' (ID: 1495)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17386704683303833
    2. '<|end|>' → logprob: -2.7988669872283936
    3. ' if' → logprob: -3.5488669872283936
    4. '            ' → logprob: -4.048867225646973
    5. '
' → logprob: -4.673867225646973
    6. '            
' → logprob: -5.423867225646973
    7. '<|end|>' → logprob: -5.423867225646973
    8. ')' → logprob: -5.673867225646973
    9. '#' → logprob: -5.673867225646973
    10. '       ' → logprob: -5.798867225646973

Token 2527: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7294893860816956
    2. ' to' → logprob: -1.7294893264770508
    3. '               ' → logprob: -2.354489326477051
    4. ')' → logprob: -2.604489326477051
    5. 'to' → logprob: -3.104489326477051
    6. '#' → logprob: -3.854489326477051
    7. '```' → logprob: -4.104489326477051
    8. '                   ' → logprob: -4.854489326477051
    9. '[
' → logprob: -4.854489326477051
    10. '            
' → logprob: -5.229489326477051

Token 2528: ' handle' (ID: 5318)
  Prédit: 'restrict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'restrict' → logprob: -1.22821843624115
    2. 'det' → logprob: -1.35321843624115
    3. 'handle' → logprob: -1.72821843624115
    4. '#' → logprob: -3.1032185554504395
    5. 'identify' → logprob: -3.3532185554504395
    6. 'consider' → logprob: -3.3532185554504395
    7. 'apply' → logprob: -3.4782185554504395
    8. 'continue' → logprob: -3.7282185554504395
    9. 'process' → logprob: -3.8532185554504395
    10. '           ' → logprob: -4.3532185554504395

Token 2529: '?
' (ID: 3901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.022857902571558952
    2. '<|end|>' → logprob: -5.022857666015625
    3. '#' → logprob: -5.772857666015625
    4. '       ' → logprob: -5.897857666015625
    5. '   ' → logprob: -7.022857666015625
    6. '[' → logprob: -7.147857666015625
    7. '            ' → logprob: -7.147857666015625
    8. ')' → logprob: -7.147857666015625
    9. '...' → logprob: -7.397857666015625
    10. '               ' → logprob: -7.397857666015625

Token 2530: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007992943748831749
    2. '       ' → logprob: -6.757992744445801
    3. '<|end|>' → logprob: -6.882992744445801
    4. '            ' → logprob: -7.382992744445801
    5. '		' → logprob: -7.507992744445801
    6. '#' → logprob: -7.507992744445801
    7. '               ' → logprob: -7.632992744445801
    8. '            
' → logprob: -7.632992744445801
    9. '          ' → logprob: -7.757992744445801
    10. '   ' → logprob: -8.0079927444458

Token 2531: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004148087929934263
    2. '#' (adapté à ' #') → logprob: -6.004148006439209
    3. '       ' → logprob: -8.504148483276367
    4. ' #' → logprob: -8.504148483276367
    5. ' if' → logprob: -8.629148483276367
    6. '
' → logprob: -8.629148483276367
    7. '            ' → logprob: -8.754148483276367
    8. '               ' → logprob: -9.004148483276367
    9. '          ' → logprob: -9.129148483276367
    10. 'if' → logprob: -9.129148483276367

Token 2532: ' As' (ID: 1877)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07438727468252182
    2. ' if' → logprob: -3.324387311935425
    3. 'if' → logprob: -3.699387311935425
    4. 'angle' → logprob: -6.074387073516846
    5. '       ' → logprob: -6.199387073516846
    6. '#' → logprob: -6.324387073516846
    7. '
' → logprob: -6.324387073516846
    8. '   ' → logprob: -7.699387073516846
    9. '               ' → logprob: -8.199387550354004
    10. ' #' → logprob: -8.449387550354004

Token 2533: ' per' (ID: 777)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3937315344810486
    2. '           ' → logprob: -2.6437315940856934
    3. 'the' → logprob: -3.0187315940856934
    4. 'for' → logprob: -3.1437315940856934
    5. ' the' → logprob: -3.5187315940856934
    6. 'sign' → logprob: -3.6437315940856934
    7. ' for' → logprob: -3.7687315940856934
    8. 'there' → logprob: -4.643731594085693
    9. ' there' → logprob: -4.768731594085693
    10. ' is' → logprob: -4.893731594085693

Token 2534: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.19164402782917023
    2. 'code' → logprob: -3.0666439533233643
    3. ' problem' → logprob: -3.1916439533233643
    4. 'the' → logprob: -3.5666439533233643
    5. 'context' → logprob: -4.066644191741943
    6. 'comment' → logprob: -4.566644191741943
    7. ' code' → logprob: -4.566644191741943
    8. '#' → logprob: -4.941644191741943
    9. 'prompt' → logprob: -6.316644191741943
    10. 'previous' → logprob: -6.566644191741943

Token 2535: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1002095937728882
    2. '<|end|>' → logprob: -1.6002095937728882
    3. ':' → logprob: -2.1002097129821777
    4. ')' → logprob: -2.4752097129821777
    5. ' if' → logprob: -2.9752097129821777
    6. ',' → logprob: -3.2252097129821777
    7. '            ' → logprob: -3.7252097129821777
    8. '[' → logprob: -3.8502097129821777
    9. '#' → logprob: -3.9752097129821777
    10. ' ' → logprob: -4.350209712982178

Token 2536: ' at' (ID: 540)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6478174328804016
    2. '#' → logprob: -1.1478173732757568
    3. ' #' → logprob: -2.897817373275757
    4. ' continue' → logprob: -3.022817373275757
    5. ' if' → logprob: -4.397817611694336
    6. ' graph' → logprob: -4.522817611694336
    7. ' for' → logprob: -4.522817611694336
    8. 'graph' → logprob: -5.397817611694336
    9. 'continue' → logprob: -5.522817611694336
    10. ' pass' → logprob: -6.272817611694336

Token 2537: ' a' (ID: 261)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -1.4110323190689087
    2. 'least' → logprob: -1.5360323190689087
    3. 'this' → logprob: -1.6610323190689087
    4. 'sign' → logprob: -2.036032199859619
    5. 'the' → logprob: -2.411032199859619
    6. '#' → logprob: -2.786032199859619
    7. ' this' → logprob: -3.911032199859619
    8. ' least' → logprob: -4.786032199859619
    9. 'point' → logprob: -5.036032199859619
    10. '           ' → logprob: -5.536032199859619

Token 2538: ' point' (ID: 2438)
  Prédit: 'point'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'point' → logprob: -0.15397247672080994
    2. 'sign' → logprob: -2.5289723873138428
    3. '#' → logprob: -4.028972625732422
    4. 't' → logprob: -5.028972625732422
    5. 'p' → logprob: -5.278972625732422
    6. 'token' → logprob: -5.278972625732422
    7. ' point' → logprob: -5.403972625732422
    8. '<|end|>' → logprob: -5.403972625732422
    9. '
' → logprob: -6.528972625732422
    10. 'b' → logprob: -6.653972625732422

Token 2539: ' where' (ID: 1919)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7356747984886169
    2. '           ' → logprob: -1.7356748580932617
    3. ':' → logprob: -2.3606748580932617
    4. '#' → logprob: -2.3606748580932617
    5. ':
' → logprob: -3.7356748580932617
    6. ' (' → logprob: -4.235674858093262
    7. ' ,' → logprob: -4.235674858093262
    8. ' for' → logprob: -4.610674858093262
    9. ',
' → logprob: -4.735674858093262
    10. ' if' → logprob: -4.860674858093262

Token 2540: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.529269814491272
    2. 'a' → logprob: -1.904269814491272
    3. ' sign' → logprob: -2.2792696952819824
    4. ' a' → logprob: -2.5292696952819824
    5. 'the' → logprob: -3.1542696952819824
    6. ' the' → logprob: -3.7792696952819824
    7. ' signs' → logprob: -4.654269695281982
    8. '           ' → logprob: -6.279269695281982
    9. ')' → logprob: -7.654269695281982
    10. 's' → logprob: -8.02927017211914

Token 2541: ' touches' (ID: 45060)
  Prédit: ' touches'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' touches' → logprob: -0.5795363783836365
    2. 'touch' → logprob: -1.9545364379882812
    3. 'segments' → logprob: -2.4545364379882812
    4. ' is' → logprob: -2.5795364379882812
    5. ' segments' → logprob: -3.7045364379882812
    6. '_segments' → logprob: -3.9545364379882812
    7. 'restrict' → logprob: -4.454536437988281
    8. 't' → logprob: -4.454536437988281
    9. 'is' → logprob: -4.954536437988281
    10. '   ' → logprob: -4.954536437988281

Token 2542: ' street' (ID: 12901)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.6010194420814514
    2. 'the' → logprob: -1.8510193824768066
    3. ' street' → logprob: -2.3510193824768066
    4. ',' → logprob: -2.7260193824768066
    5. ' a' → logprob: -3.3510193824768066
    6. 's' → logprob: -3.6010193824768066
    7. 'street' → logprob: -3.7260193824768066
    8. 'a' → logprob: -4.226019382476807
    9. ' ,' → logprob: -5.476019382476807
    10. '           ' → logprob: -5.851019382476807

Token 2543: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4603217542171478
    2. ',' → logprob: -1.0853217840194702
    3. ':' → logprob: -4.96032190322876
    4. ',
' → logprob: -5.33532190322876
    5. '.' → logprob: -5.71032190322876
    6. ':
' → logprob: -5.96032190322876
    7. ')' → logprob: -6.58532190322876
    8. '               ' → logprob: -6.71032190322876
    9. '<|end|>' → logprob: -6.71032190322876
    10. '#' → logprob: -6.96032190322876

Token 2544: ' movement' (ID: 12772)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5495555996894836
    2. '           ' → logprob: -1.1745555400848389
    3. ' the' → logprob: -3.924555540084839
    4. 'graph' → logprob: -3.924555540084839
    5. 'the' → logprob: -4.174555778503418
    6. ' for' → logprob: -4.299555778503418
    7. ' #' → logprob: -4.924555778503418
    8. 'for' → logprob: -5.299555778503418
    9. ' if' → logprob: -5.799555778503418
    10. ' graph' → logprob: -5.799555778503418

Token 2545: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -1.0189307928085327
    2. ' is' → logprob: -1.1439307928085327
    3. 'from' → logprob: -1.8939307928085327
    4. ' cannot' → logprob: -2.5189309120178223
    5. ' restrictions' → logprob: -3.8939309120178223
    6. ' may' → logprob: -4.143930912017822
    7. 'restriction' → logprob: -4.768930912017822
    8. ' restriction' → logprob: -5.018930912017822
    9. 'cannot' → logprob: -5.143930912017822
    10. 's' → logprob: -5.518930912017822

Token 2546: ' obt' (ID: 5564)
  Prédit: 'obt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'obt' → logprob: -0.7246677875518799
    2. 'touch' → logprob: -1.2246677875518799
    3. 'open' → logprob: -2.22466778755188
    4. 'acute' → logprob: -2.72466778755188
    5. 'street' → logprob: -3.84966778755188
    6. 'the' → logprob: -4.599667549133301
    7. ' obt' → logprob: -5.099667549133301
    8. 'sign' → logprob: -6.099667549133301
    9. 'ob' → logprob: -6.349667549133301
    10. ' touch' → logprob: -7.099667549133301

Token 2547: 'use' (ID: 1821)
  Prédit: 'use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.05420611798763275
    2. 't' → logprob: -4.304205894470215
    3. '```' → logprob: -4.804205894470215
    4. 'acute' → logprob: -5.054205894470215
    5. 'e' → logprob: -5.304205894470215
    6. 'u' → logprob: -5.929205894470215
    7. 'touch' → logprob: -6.304205894470215
    8. 'side' → logprob: -6.554205894470215
    9. 'ute' → logprob: -6.804205894470215
    10. '(use' → logprob: -7.179205894470215

Token 2548: ' angle' (ID: 16538)
  Prédit: ' angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' angle' → logprob: -1.0075868368148804
    2. '_angle' → logprob: -1.0075868368148804
    3. 'angle' → logprob: -1.3825868368148804
    4. '_' → logprob: -5.75758695602417
    5. ''' → logprob: -5.88258695602417
    6. ' _' → logprob: -6.00758695602417
    7. '"' → logprob: -6.13258695602417
    8. ' ' → logprob: -6.38258695602417
    9. '```' → logprob: -6.38258695602417
    10. '   ' → logprob: -6.88258695602417

Token 2549: ' side' (ID: 4307)
  Prédit: ' side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' side' → logprob: -0.3403312861919403
    2. ' to' → logprob: -1.7153313159942627
    3. 'to' → logprob: -3.0903313159942627
    4. 'side' → logprob: -3.3403313159942627
    5. '_side' → logprob: -4.715331077575684
    6. 's' → logprob: -5.840331077575684
    7. '<|end|>' → logprob: -5.965331077575684
    8. '_to' → logprob: -6.090331077575684
    9. ')' → logprob: -6.340331077575684
    10. '```' → logprob: -6.965331077575684

Token 2550: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.31781354546546936
    2. ' is' → logprob: -1.567813515663147
    3. 'to' → logprob: -3.5678136348724365
    4. '<|end|>' → logprob: -4.067813396453857
    5. ')' → logprob: -5.442813396453857
    6. ',' → logprob: -6.567813396453857
    7. ' at' → logprob: -6.817813396453857
    8. ' towards' → logprob: -6.817813396453857
    9. ' side' → logprob: -7.192813396453857
    10. '_to' → logprob: -7.317813396453857

Token 2551: ' acute' (ID: 43944)
  Prédit: 'acute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acute' → logprob: -0.011053244583308697
    2. 'obt' → logprob: -5.261053085327148
    3. ' acute' → logprob: -5.886053085327148
    4. '   ' → logprob: -6.886053085327148
    5. 'the' → logprob: -7.261053085327148
    6. ' ' → logprob: -7.636053085327148
    7. '```' → logprob: -8.386053085327148
    8. '
' → logprob: -9.636053085327148
    9. ' the' → logprob: -9.761053085327148
    10. '#' → logprob: -9.761053085327148

Token 2552: ' angle' (ID: 16538)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.10925057530403137
    2. ' angle' → logprob: -2.859250545501709
    3. '_angle' → logprob: -3.359250545501709
    4. ')' → logprob: -4.734250545501709
    5. '```' → logprob: -7.734250545501709
    6. '_' → logprob: -7.859250545501709
    7. '   ' → logprob: -8.484251022338867
    8. 'side' → logprob: -8.734251022338867
    9. '           ' → logprob: -8.859251022338867
    10. ',' → logprob: -8.859251022338867

Token 2553: ' side' (ID: 4307)
  Prédit: ' side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' side' → logprob: -0.65201336145401
    2. ' is' → logprob: -0.90201336145401
    3. ')' → logprob: -4.027013301849365
    4. 'side' → logprob: -4.152013301849365
    5. ' at' → logprob: -5.027013301849365
    6. '           ' → logprob: -5.152013301849365
    7. 's' → logprob: -5.277013301849365
    8. '
' → logprob: -5.777013301849365
    9. 'is' → logprob: -6.152013301849365
    10. '   ' → logprob: -6.277013301849365

Token 2554: ' is' (ID: 382)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.17832154035568237
    2. ')' → logprob: -3.803321599960327
    3. '.' → logprob: -4.053321361541748
    4. ':' → logprob: -4.053321361541748
    5. ':
' → logprob: -4.303321361541748
    6. ' if' → logprob: -4.303321361541748
    7. ' is' → logprob: -4.553321361541748
    8. '       ' → logprob: -4.553321361541748
    9. ',' → logprob: -4.928321361541748
    10. ' at' → logprob: -4.928321361541748

Token 2555: ' forbidden' (ID: 74435)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.044531237334012985
    2. 'restricted' → logprob: -4.169531345367432
    3. ' for' → logprob: -4.544531345367432
    4. 'dis' → logprob: -5.669531345367432
    5. 'pro' → logprob: -5.794531345367432
    6. ' forbidden' → logprob: -6.044531345367432
    7. 'blocked' → logprob: -6.169531345367432
    8. '```' → logprob: -6.169531345367432
    9. ' prohibited' → logprob: -6.669531345367432
    10. ' restricted' → logprob: -6.919531345367432

Token 2556: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03186744451522827
    2. ' if' → logprob: -4.781867504119873
    3. '
' → logprob: -5.156867504119873
    4. '       ' → logprob: -5.531867504119873
    5. '               ' → logprob: -5.906867504119873
    6. '   ' → logprob: -6.031867504119873
    7. ')' → logprob: -6.406867504119873
    8. '#' → logprob: -7.031867504119873
    9. '<|end|>' → logprob: -7.281867504119873
    10. ',' → logprob: -7.656867504119873

Token 2557: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004078282043337822
    2. ' if' → logprob: -6.754078388214111
    3. '
' → logprob: -7.004078388214111
    4. '       ' → logprob: -8.004077911376953
    5. '            
' → logprob: -8.004077911376953
    6. '               ' → logprob: -8.254077911376953
    7. '#' → logprob: -8.504077911376953
    8. ',' → logprob: -8.879077911376953
    9. 'if' → logprob: -9.254077911376953
    10. '   ' → logprob: -9.879077911376953

Token 2558: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006717863027006388
    2. 'if' → logprob: -5.506717681884766
    3. '#' (adapté à ' #') → logprob: -6.881717681884766
    4. ' if' → logprob: -7.506717681884766
    5. 'angle' → logprob: -8.131717681884766
    6. '
' → logprob: -8.631717681884766
    7. 'from' → logprob: -9.131717681884766
    8. '       ' → logprob: -9.631717681884766
    9. '            
' → logprob: -9.756717681884766
    10. 'import' → logprob: -10.381717681884766

Token 2559: ' There' (ID: 3274)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9130741357803345
    2. 'if' → logprob: -1.0380741357803345
    3. '#' → logprob: -2.163074016571045
    4. 'for' → logprob: -2.288074016571045
    5. ' if' → logprob: -5.538074016571045
    6. '               ' → logprob: -5.538074016571045
    7. 'from' → logprob: -5.913074016571045
    8. '
' → logprob: -6.163074016571045
    9. 'adj' → logprob: -6.288074016571045
    10. 'neighbors' → logprob: -6.538074016571045

Token 2560: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.4946153163909912
    2. 'for' → logprob: -1.4946153163909912
    3. '#' → logprob: -1.9946153163909912
    4. ' are' → logprob: -2.244615316390991
    5. ''s' → logprob: -2.744615316390991
    6. 'are' → logprob: -2.869615316390991
    7. '[' → logprob: -3.369615316390991
    8. '.' → logprob: -3.869615316390991
    9. ' may' → logprob: -3.994615316390991
    10. '
' → logprob: -4.11961555480957

Token 2561: ' only' (ID: 1606)
  Prédit: ' only'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' only' → logprob: -0.4527004659175873
    2. ' one' → logprob: -1.9527004957199097
    3. 'only' → logprob: -2.20270037651062
    4. ' another' → logprob: -3.82770037651062
    5. ' a' → logprob: -3.95270037651062
    6. 'one' → logprob: -3.95270037651062
    7. ' no' → logprob: -4.327700614929199
    8. 'another' → logprob: -4.702700614929199
    9. 'a' → logprob: -5.202700614929199
    10. ' not' → logprob: -5.702700614929199

Token 2562: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.3871971070766449
    2. ' one' → logprob: -1.1371971368789673
    3. 'sign' → logprob: -9.012197494506836
    4. '```' → logprob: -9.887197494506836
    5. 'the' → logprob: -10.262197494506836
    6. '1' → logprob: -10.262197494506836
    7. ' ' → logprob: -10.637197494506836
    8. '_one' → logprob: -10.762197494506836
    9. 'a' → logprob: -11.387197494506836
    10. '(one' → logprob: -12.387197494506836

Token 2563: ' street' (ID: 12901)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.9515693187713623
    2. ')' → logprob: -1.3265693187713623
    3. ' sign' → logprob: -2.0765693187713623
    4. '           ' → logprob: -3.4515693187713623
    5. ' street' → logprob: -3.8265693187713623
    6. ' edge' → logprob: -3.9515693187713623
    7. 'edge' → logprob: -4.451569557189941
    8. 'direction' → logprob: -4.451569557189941
    9. '.' → logprob: -4.576569557189941
    10. ':
' → logprob: -4.701569557189941

Token 2564: ' segment' (ID: 14806)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020156538113951683
    2. '       ' → logprob: -5.520156383514404
    3. '   ' → logprob: -5.645156383514404
    4. '#' → logprob: -6.270156383514404
    5. '               ' → logprob: -6.645156383514404
    6. '_direct' → logprob: -6.770156383514404
    7. '
' → logprob: -6.895156383514404
    8. ',' → logprob: -7.145156383514404
    9. ' at' → logprob: -7.270156383514404
    10. ' #' → logprob: -7.520156383514404

Token 2565: ' connected' (ID: 12079)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04038352891802788
    2. ' if' → logprob: -4.040383338928223
    3. '
' → logprob: -5.165383338928223
    4. '       ' → logprob: -5.915383338928223
    5. ',' → logprob: -6.040383338928223
    6. '               ' → logprob: -6.415383338928223
    7. ')' → logprob: -6.540383338928223
    8. '<|end|>' → logprob: -6.540383338928223
    9. ',
' → logprob: -7.165383338928223
    10. '[' → logprob: -7.290383338928223

Token 2566: ' at' (ID: 540)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22285902500152588
    2. ' if' → logprob: -2.2228589057922363
    3. ' at' → logprob: -3.4728589057922363
    4. '#' → logprob: -4.347858905792236
    5. ',' → logprob: -4.472858905792236
    6. ' and' → logprob: -4.597858905792236
    7. '.' → logprob: -5.597858905792236
    8. 'if' → logprob: -5.722858905792236
    9. ' for' → logprob: -5.722858905792236
    10. ' (' → logprob: -6.347858905792236

Token 2567: ' touch' (ID: 7381)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.0010894970037043095
    2. ' touch' → logprob: -6.876089572906494
    3. 'the' → logprob: -10.251089096069336
    4. 'that' → logprob: -11.001089096069336
    5. 'sign' → logprob: -13.501089096069336
    6. '_touch' → logprob: -14.251089096069336
    7. '   ' → logprob: -14.751089096069336
    8. '
' → logprob: -14.751089096069336
    9. 'this' → logprob: -14.876089096069336
    10. '```' → logprob: -15.001089096069336

Token 2568: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01073120441287756
    2. ' if' → logprob: -5.135731220245361
    3. '<|end|>' → logprob: -6.260731220245361
    4. '       ' → logprob: -7.510731220245361
    5. ')' → logprob: -7.635731220245361
    6. '#' → logprob: -7.885731220245361
    7. ',' → logprob: -8.135730743408203
    8. '
' → logprob: -8.885730743408203
    9. '               ' → logprob: -8.885730743408203
    10. '.' → logprob: -9.010730743408203

Token 2569: ' the' (ID: 290)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.9386847019195557
    2. 'sign' → logprob: -1.4386847019195557
    3. 'street' → logprob: -1.4386847019195557
    4. 'the' → logprob: -2.9386847019195557
    5. 'this' → logprob: -2.9386847019195557
    6. 'question' → logprob: -4.688684463500977
    7. 'se' → logprob: -4.688684463500977
    8. 'touch' → logprob: -5.563684463500977
    9. 'stre' → logprob: -7.063684463500977
    10. 'that' → logprob: -7.438684463500977

Token 2570: ' sign' (ID: 2232)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -0.2288459837436676
    2. 'graph' → logprob: -2.6038460731506348
    3. 'code' → logprob: -3.2288460731506348
    4. 'context' → logprob: -3.4788460731506348
    5. 'street' → logprob: -3.8538460731506348
    6. 'current' → logprob: -4.728846073150635
    7. ' code' → logprob: -4.978846073150635
    8. ' sign' → logprob: -5.103846073150635
    9. 'same' → logprob: -6.103846073150635
    10. 'problem' → logprob: -6.353846073150635

Token 2571: ''s' (ID: 885)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018134497106075287
    2. ')' → logprob: -5.268134593963623
    3. '               ' → logprob: -6.268134593963623
    4. '
' → logprob: -6.643134593963623
    5. '<|end|>' → logprob: -6.643134593963623
    6. '[' → logprob: -6.768134593963623
    7. '       ' → logprob: -6.768134593963623
    8. '            ' → logprob: -7.018134593963623
    9. '[
' → logprob: -7.393134593963623
    10. '            
' → logprob: -7.643134593963623

Token 2572: ' touching' (ID: 52058)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.2915307879447937
    2. 'context' → logprob: -3.0415308475494385
    3. 'endpoint' → logprob: -3.4165308475494385
    4. 'for' → logprob: -3.5415308475494385
    5. 'code' → logprob: -3.6665308475494385
    6. 'ne' → logprob: -3.6665308475494385
    7. 'point' → logprob: -3.7915308475494385
    8. 'adj' → logprob: -3.9165308475494385
    9. 'street' → logprob: -4.666530609130859
    10. 'segment' → logprob: -4.791530609130859

Token 2573: ' segment' (ID: 14806)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.4161456823349
    2. 'point' → logprob: -2.0411458015441895
    3. ' point' → logprob: -2.0411458015441895
    4. ')' → logprob: -2.7911458015441895
    5. 'segment' → logprob: -2.9161458015441895
    6. ' segment' → logprob: -3.1661458015441895
    7. ' endpoint' → logprob: -3.5411458015441895
    8. ',' → logprob: -3.7911458015441895
    9. '
' → logprob: -3.7911458015441895
    10. '   ' → logprob: -3.7911458015441895

Token 2574: ',
' (ID: 412)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011309295892715454
    2. ' if' → logprob: -5.5113091468811035
    3. 'if' → logprob: -6.5113091468811035
    4. '
' → logprob: -6.6363091468811035
    5. '            
' → logprob: -7.5113091468811035
    6. '       ' → logprob: -7.6363091468811035
    7. '   ' → logprob: -7.6363091468811035
    8. '		' → logprob: -8.136309623718262
    9. '               ' → logprob: -8.136309623718262
    10. ',' → logprob: -8.636309623718262

Token 2575: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0922178402543068
    2. ' and' → logprob: -3.0922179222106934
    3. ' so' → logprob: -3.8422179222106934
    4. '#' → logprob: -5.592217922210693
    5. ' but' → logprob: -5.842217922210693
    6. 'and' → logprob: -5.842217922210693
    7. ' which' → logprob: -6.842217922210693
    8. '            
' → logprob: -6.842217922210693
    9. ' continue' → logprob: -6.967217922210693
    10. '
' → logprob: -7.092217922210693

Token 2576: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15092988312244415
    2. ' and' → logprob: -2.4009299278259277
    3. ' so' → logprob: -3.5259299278259277
    4. 'and' → logprob: -4.900929927825928
    5. ' but' → logprob: -5.900929927825928
    6. ' which' → logprob: -6.275929927825928
    7. '#' (adapté à ' #') → logprob: -6.275929927825928
    8. '       ' → logprob: -7.150929927825928
    9. ' continue' → logprob: -7.150929927825928
    10. ',' → logprob: -7.775929927825928

Token 2577: ' so' (ID: 813)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07921318709850311
    2. '#' → logprob: -3.3292131423950195
    3. ' #' → logprob: -5.4542131423950195
    4. '       ' → logprob: -5.4542131423950195
    5. ' if' → logprob: -5.5792131423950195
    6. ')' → logprob: -5.7042131423950195
    7. '.' → logprob: -6.0792131423950195
    8. 'graph' → logprob: -6.0792131423950195
    9. ' continue' → logprob: -6.3292131423950195
    10. '
' → logprob: -6.3292131423950195

Token 2578: ' the' (ID: 290)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1164045333862305
    2. '           ' → logprob: -1.1164045333862305
    3. 'continue' → logprob: -1.8664045333862305
    4. 'for' → logprob: -2.4914045333862305
    5. ' continue' → logprob: -2.8664045333862305
    6. ' for' → logprob: -3.2414045333862305
    7. ' #' → logprob: -5.3664045333862305
    8. '               ' → logprob: -6.7414045333862305
    9. '   ' → logprob: -7.1164045333862305
    10. 'sign' → logprob: -7.6164045333862305

Token 2579: ' forbidden' (ID: 74435)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.11326084285974503
    2. 'for' → logprob: -2.7382607460021973
    3. 'continue' → logprob: -4.238260746002197
    4. '           ' → logprob: -4.238260746002197
    5. 'graph' → logprob: -5.363260746002197
    6. '```' → logprob: -6.613260746002197
    7. ' for' → logprob: -6.738260746002197
    8. 'sign' → logprob: -6.738260746002197
    9. 'if' → logprob: -7.238260746002197
    10. '               ' → logprob: -7.613260746002197

Token 2580: ' movement' (ID: 12772)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.2306070625782013
    2. '_direction' → logprob: -2.730607032775879
    3. ' direction' → logprob: -2.980607032775879
    4. '#' → logprob: -4.105607032775879
    5. 'dire' → logprob: -4.105607032775879
    6. 'edge' → logprob: -4.230607032775879
    7. '_edges' → logprob: -4.480607032775879
    8. '
' → logprob: -5.105607032775879
    9. ' directions' → logprob: -5.105607032775879
    10. '_edge' → logprob: -5.605607032775879

Token 2581: ' is' (ID: 382)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.068769931793213
    2. ' is' → logprob: -1.443769931793213
    3. '           ' → logprob: -1.693769931793213
    4. ' from' → logprob: -2.818769931793213
    5. 'graph' → logprob: -2.943769931793213
    6. 's' → logprob: -4.068769931793213
    7. ' graph' → logprob: -4.443769931793213
    8. ')' → logprob: -4.693769931793213
    9. 'for' → logprob: -4.693769931793213
    10. '#' → logprob: -4.818769931793213

Token 2582: ' depending' (ID: 14537)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.19613957405090332
    2. '#' → logprob: -3.3211395740509033
    3. 'graph' → logprob: -3.9461395740509033
    4. 'touch' → logprob: -3.9461395740509033
    5. ' (' → logprob: -4.071139335632324
    6. ' from' → logprob: -4.446139335632324
    7. 'None' → logprob: -4.821139335632324
    8. '(' → logprob: -5.071139335632324
    9. '(s' → logprob: -5.446139335632324
    10. 'continue' → logprob: -5.571139335632324

Token 2583: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.08955296128988266
    2. 'on' → logprob: -2.464552879333496
    3. ')' → logprob: -8.839552879333496
    4. '<|end|>' → logprob: -9.464552879333496
    5. ' to' → logprob: -9.589552879333496
    6. '           ' → logprob: -10.464552879333496
    7. ' the' → logprob: -10.464552879333496
    8. 'to' → logprob: -10.589552879333496
    9. '   ' → logprob: -10.714552879333496
    10. '=' → logprob: -10.839552879333496

Token 2584: ' direction' (ID: 9262)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.0704339742660522
    2. ' the' → logprob: -2.195434093475342
    3. ' which' → logprob: -2.195434093475342
    4. 'sign' → logprob: -2.195434093475342
    5. 'which' → logprob: -2.320434093475342
    6. ' sign' → logprob: -2.570434093475342
    7. ' angle' → logprob: -3.195434093475342
    8. 'angle' → logprob: -3.445434093475342
    9. ' whether' → logprob: -4.070434093475342
    10. 'direction' → logprob: -4.195434093475342

Token 2585: ' between' (ID: 2870)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07631444931030273
    2. ' if' → logprob: -2.7013144493103027
    3. '
' → logprob: -6.201314449310303
    4. 'if' → logprob: -6.201314449310303
    5. '#' → logprob: -7.201314449310303
    6. ' #' → logprob: -8.326314926147461
    7. '       ' → logprob: -8.576314926147461
    8. '            ' → logprob: -8.701314926147461
    9. '               ' → logprob: -8.701314926147461
    10. '            
' → logprob: -9.076314926147461

Token 2586: ' touch' (ID: 7381)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.011745425872504711
    2. ' touch' → logprob: -5.011745452880859
    3. 'open' → logprob: -6.011745452880859
    4. 'graph' → logprob: -6.511745452880859
    5. 'street' → logprob: -7.386745452880859
    6. 'sign' → logprob: -8.88674545288086
    7. ' open' → logprob: -9.01174545288086
    8. ' street' → logprob: -9.51174545288086
    9. ' graph' → logprob: -9.88674545288086
    10. '   ' → logprob: -10.76174545288086

Token 2587: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5639109015464783
    2. '
' → logprob: -2.313910961151123
    3. ',' → logprob: -2.438910961151123
    4. '_' → logprob: -3.313910961151123
    5. '_
' → logprob: -3.563910961151123
    6. '_direct' → logprob: -3.688910961151123
    7. ' _' → logprob: -4.188910961151123
    8. '_to' → logprob: -4.188910961151123
    9. ',
' → logprob: -4.438910961151123
    10. ' and' → logprob: -4.438910961151123

Token 2588: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.07192116975784302
    2. ' street' → logprob: -2.6969211101531982
    3. 'open' → logprob: -6.571921348571777
    4. 'touch' → logprob: -7.696921348571777
    5. ' open' → logprob: -9.571921348571777
    6. 'stre' → logprob: -10.196921348571777
    7. ' ' → logprob: -11.946921348571777
    8. ' touch' → logprob: -12.196921348571777
    9. '   ' → logprob: -12.321921348571777
    10. 'other' → logprob: -13.946921348571777

Token 2589: '_other' (ID: 70088)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16694684326648712
    2. '
' → logprob: -3.4169468879699707
    3. '       ' → logprob: -3.7919468879699707
    4. '   ' → logprob: -3.7919468879699707
    5. '[' → logprob: -4.541946887969971
    6. ')' → logprob: -4.791946887969971
    7. ' if' → logprob: -4.916946887969971
    8. '[
' → logprob: -5.041946887969971
    9. 'graph' → logprob: -5.041946887969971
    10. '#' → logprob: -5.166946887969971

Token 2590: ' nodes' (ID: 15749)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04067738354206085
    2. 'if' → logprob: -3.540677309036255
    3. ' if' → logprob: -4.915677547454834
    4. '#' → logprob: -6.165677547454834
    5. '
' → logprob: -8.165677070617676
    6. '   ' → logprob: -8.665677070617676
    7. 'graph' → logprob: -9.040677070617676
    8. 'direction' → logprob: -9.415677070617676
    9. 'If' → logprob: -9.540677070617676
    10. '       ' → logprob: -9.540677070617676

Token 2591: '.

' (ID: 364)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07200702279806137
    2. ' if' → logprob: -3.697006940841675
    3. 'if' → logprob: -3.822006940841675
    4. '
' → logprob: -4.197007179260254
    5. 'graph' → logprob: -5.697007179260254
    6. '#' → logprob: -6.822007179260254
    7. '   ' → logprob: -7.322007179260254
    8. 'for' → logprob: -7.822007179260254
    9. '       ' → logprob: -8.072007179260254
    10. ',' → logprob: -8.197007179260254

Token 2592: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017169060185551643
    2. 'if' → logprob: -4.642168998718262
    3. '
' → logprob: -5.517168998718262
    4. ' if' → logprob: -6.517168998718262
    5. '            
' → logprob: -7.517168998718262
    6. '#' → logprob: -7.642168998718262
    7. '       ' → logprob: -8.267168998718262
    8. 'graph' → logprob: -8.392168998718262
    9. '```' → logprob: -9.517168998718262
    10. '               ' → logprob: -9.767168998718262

Token 2593: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1434640884399414
    2. 'if' → logprob: -2.0184640884399414
    3. '#' (adapté à ' #') → logprob: -7.393464088439941
    4. 'from' → logprob: -10.268464088439941
    5. 'd' → logprob: -10.393464088439941
    6. 'direction' → logprob: -10.518464088439941
    7. ' if' → logprob: -11.018464088439941
    8. '       ' → logprob: -11.768464088439941
    9. 'reverse' → logprob: -11.893464088439941
    10. 'for' → logprob: -12.018464088439941

Token 2594: ' To' (ID: 2514)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.22233901917934418
    2. '           ' → logprob: -1.7223390340805054
    3. '#' → logprob: -4.722339153289795
    4. ' if' → logprob: -4.847339153289795
    5. 'for' → logprob: -7.222339153289795
    6. 'angle' → logprob: -7.597339153289795
    7. 'from' → logprob: -7.722339153289795
    8. 'f' → logprob: -7.847339153289795
    9. 'd' → logprob: -8.097338676452637
    10. '   ' → logprob: -8.347338676452637

Token 2595: ' find' (ID: 1646)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0521392822265625
    2. 'remove' → logprob: -1.0521392822265625
    3. 'for' → logprob: -1.6771392822265625
    4. '_remove' → logprob: -2.5521392822265625
    5. 'continue' → logprob: -4.6771392822265625
    6. 'if' → logprob: -5.6771392822265625
    7. 'restrict' → logprob: -6.0521392822265625
    8. 'block' → logprob: -6.1771392822265625
    9. 'graph' → logprob: -6.1771392822265625
    10. '           ' → logprob: -6.3021392822265625

Token 2596: ' orientation' (ID: 29546)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16856186091899872
    2. '#' → logprob: -2.1685619354248047
    3. 'which' → logprob: -4.043561935424805
    4. ' forbidden' → logprob: -5.543561935424805
    5. 'direction' → logprob: -5.793561935424805
    6. 'sign' → logprob: -5.918561935424805
    7. 'if' → logprob: -6.043561935424805
    8. 'the' → logprob: -6.293561935424805
    9. 'allowed' → logprob: -7.043561935424805
    10. '   ' → logprob: -7.168561935424805

Token 2597: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7472711205482483
    2. ' if' → logprob: -1.4972710609436035
    3. ' direction' → logprob: -2.8722710609436035
    4. '#' → logprob: -3.1222710609436035
    5. 'if' → logprob: -3.2472710609436035
    6. 'direction' → logprob: -3.6222710609436035
    7. 'from' → logprob: -3.7472710609436035
    8. 'd' → logprob: -4.1222710609436035
    9. 'v' → logprob: -4.2472710609436035
    10. ',' → logprob: -4.4972710609436035

Token 2598: ' allowed' (ID: 9279)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.7780354619026184
    2. 'for' → logprob: -1.0280354022979736
    3. 'the' → logprob: -2.7780354022979736
    4. ' edge' → logprob: -3.2780354022979736
    5. 'restriction' → logprob: -3.4030354022979736
    6. ' forbidden' → logprob: -4.028035640716553
    7. 'graph' → logprob: -4.903035640716553
    8. 'vector' → logprob: -5.403035640716553
    9. ' the' → logprob: -5.778035640716553
    10. 'street' → logprob: -5.903035640716553

Token 2599: ' and' (ID: 326)
  Prédit: 'edges'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'edges' → logprob: -0.44472476840019226
    2. 'edge' → logprob: -2.0697247982025146
    3. 'moves' → logprob: -2.6947247982025146
    4. 'movement' → logprob: -3.0697247982025146
    5. 'direction' → logprob: -3.4447247982025146
    6. '#' → logprob: -4.3197245597839355
    7. 'move' → logprob: -4.4447245597839355
    8. '   ' → logprob: -4.5697245597839355
    9. 'dire' → logprob: -4.8197245597839355
    10. ' edges' → logprob: -5.0697245597839355

Token 2600: ' forbidden' (ID: 74435)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001064486219547689
    2. ' for' → logprob: -7.126064300537109
    3. ' forbidden' → logprob: -8.37606430053711
    4. '   ' → logprob: -11.25106430053711
    5. 'restricted' → logprob: -11.87606430053711
    6. 'dis' → logprob: -12.62606430053711
    7. '_for' → logprob: -13.25106430053711
    8. '       ' → logprob: -13.75106430053711
    9. '(for' → logprob: -14.62606430053711
    10. ' ' → logprob: -14.87606430053711

Token 2601: ' direction' (ID: 9262)
  Prédit: 'direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'direction' → logprob: -0.6108548045158386
    2. '#' → logprob: -1.8608548641204834
    3. 'edge' → logprob: -2.2358548641204834
    4. 'dire' → logprob: -2.6108548641204834
    5. 'edges' → logprob: -2.9858548641204834
    6. ' direction' → logprob: -3.8608548641204834
    7. ' directions' → logprob: -4.360854625701904
    8. 'movement' → logprob: -4.610854625701904
    9. 'moves' → logprob: -5.610854625701904
    10. ' edges' → logprob: -5.610854625701904

Token 2602: ':
' (ID: 734)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6868276596069336
    2. '           ' → logprob: -1.4368276596069336
    3. ' if' → logprob: -2.3118276596069336
    4. '#' → logprob: -2.3118276596069336
    5. 'from' → logprob: -4.561827659606934
    6. ' forbidden' → logprob: -4.811827659606934
    7. 'sign' → logprob: -5.061827659606934
    8. 'd' → logprob: -5.186827659606934
    9. 'import' → logprob: -5.436827659606934
    10. 'angle' → logprob: -5.686827659606934

Token 2603: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09848424047231674
    2. 'if' → logprob: -2.8484842777252197
    3. ' if' → logprob: -3.4734842777252197
    4. '#' → logprob: -5.848484039306641
    5. 'direction' → logprob: -7.973484039306641
    6. 'for' → logprob: -8.59848403930664
    7. 'from' → logprob: -8.72348403930664
    8. 'If' → logprob: -8.72348403930664
    9. 'graph' → logprob: -8.84848403930664
    10. 'continue' → logprob: -8.97348403930664

Token 2604: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.08141317218542099
    2. '           ' → logprob: -3.2064132690429688
    3. '#' (adapté à ' #') → logprob: -3.8314132690429688
    4. 'for' → logprob: -4.831413269042969
    5. 'angle' → logprob: -6.206413269042969
    6. ' if' → logprob: -6.581413269042969
    7. 'from' → logprob: -7.081413269042969
    8. 'allowed' → logprob: -7.081413269042969
    9. 'd' → logprob: -7.456413269042969
    10. 'f' → logprob: -7.956413269042969

Token 2605: ' We' (ID: 1416)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05202822387218475
    2. '           ' → logprob: -3.552028179168701
    3. '#' → logprob: -4.052028179168701
    4. 'for' → logprob: -5.552028179168701
    5. 'from' → logprob: -7.927028179168701
    6. 'allowed' → logprob: -9.42702865600586
    7. '```' → logprob: -9.92702865600586
    8. 'graph' → logprob: -9.92702865600586
    9. ' if' → logprob: -10.55202865600586
    10. 'direction' → logprob: -10.55202865600586

Token 2606: ' consider' (ID: 3331)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.34310415387153625
    2. 'continue' → logprob: -2.718104124069214
    3. 'if' → logprob: -3.093104124069214
    4. '           ' → logprob: -3.343104124069214
    5. ' continue' → logprob: -3.843104124069214
    6. ' need' → logprob: -3.968104124069214
    7. 'need' → logprob: -3.968104124069214
    8. ' #' → logprob: -4.218104362487793
    9. '
' → logprob: -4.343104362487793
    10. 'for' → logprob: -4.468104362487793

Token 2607: ' that' (ID: 484)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8876506090164185
    2. '#' → logprob: -1.0126506090164185
    3. 'if' → logprob: -1.6376506090164185
    4. ' if' → logprob: -5.012650489807129
    5. 'from' → logprob: -5.387650489807129
    6. 'd' → logprob: -6.137650489807129
    7. 'allowed' → logprob: -6.137650489807129
    8. 'direction' → logprob: -6.137650489807129
    9. 'for' → logprob: -6.262650489807129
    10. '               ' → logprob: -6.387650489807129

Token 2608: ' "' (ID: 392)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6456373929977417
    2. '#' → logprob: -1.2706373929977417
    3. 'for' → logprob: -2.3956375122070312
    4. '           ' → logprob: -2.7706375122070312
    5. ' if' → logprob: -5.020637512207031
    6. 'd' → logprob: -5.145637512207031
    7. '               ' → logprob: -5.395637512207031
    8. 'graph' → logprob: -5.520637512207031
    9. 'angle' → logprob: -5.770637512207031
    10. 'allowed' → logprob: -5.895637512207031

Token 2609: 'the' (ID: 3086)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7466657757759094
    2. '#' → logprob: -1.2466657161712646
    3. 'graph' → logprob: -2.4966657161712646
    4. ' if' → logprob: -3.3716657161712646
    5. 'from' → logprob: -3.6216657161712646
    6. 'for' → logprob: -3.9966657161712646
    7. '           ' → logprob: -3.9966657161712646
    8. 'allowed' → logprob: -5.496665954589844
    9. '   ' → logprob: -5.621665954589844
    10. 'c' → logprob: -5.621665954589844

Token 2610: ' obt' (ID: 5564)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.4354657232761383
    2. '#' → logprob: -1.935465693473816
    3. 'if' → logprob: -2.4354658126831055
    4. 'graph' → logprob: -3.4354658126831055
    5. 'allowed' → logprob: -4.1854658126831055
    6. 'car' → logprob: -4.1854658126831055
    7. 'direction' → logprob: -4.3104658126831055
    8. 'sign' → logprob: -4.9354658126831055
    9. 'from' → logprob: -5.0604658126831055
    10. 'angle' → logprob: -5.4354658126831055

Token 2611: 'use' (ID: 1821)
  Prédit: 'use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.026373103260993958
    2. 'u' → logprob: -4.526372909545898
    3. '```' → logprob: -6.151372909545898
    4. '_st' → logprob: -6.901372909545898
    5. '       ' → logprob: -6.901372909545898
    6. '   ' → logprob: -7.026372909545898
    7. 't' → logprob: -7.026372909545898
    8. '_' → logprob: -7.026372909545898
    9. 'us' → logprob: -7.651372909545898
    10. 's' → logprob: -7.651372909545898

Token 2612: ' side' (ID: 4307)
  Prédit: '_angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.5715602040290833
    2. 'angle' → logprob: -1.4465601444244385
    3. ' angle' → logprob: -1.9465601444244385
    4. '"' → logprob: -3.9465601444244385
    5. '_side' → logprob: -4.196560382843018
    6. '_' → logprob: -5.446560382843018
    7. ' side' → logprob: -5.821560382843018
    8. ' _' → logprob: -5.821560382843018
    9. 'side' → logprob: -6.321560382843018
    10. '```' → logprob: -6.571560382843018

Token 2613: '"' (ID: 1)
  Prédit: '"'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.0118298530578613
    2. ' "' → logprob: -1.7618298530578613
    3. ' is' → logprob: -1.7618298530578613
    4. ')' → logprob: -2.6368298530578613
    5. '[' → logprob: -3.3868298530578613
    6. ',' → logprob: -3.5118298530578613
    7. ' )' → logprob: -4.636829853057861
    8. ':
' → logprob: -4.761829853057861
    9. ''s' → logprob: -4.886829853057861
    10. ':' → logprob: -5.011829853057861

Token 2614: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.10272308439016342
    2. 'is' → logprob: -3.8527231216430664
    3. ')' → logprob: -4.477723121643066
    4. ' =' → logprob: -4.977723121643066
    5. ',' → logprob: -5.102723121643066
    6. ' points' → logprob: -5.727723121643066
    7. '=' → logprob: -5.852723121643066
    8. '#' → logprob: -5.977723121643066
    9. ' can' → logprob: -6.102723121643066
    10. ' to' → logprob: -6.102723121643066

Token 2615: ' corresponding' (ID: 21824)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7908263206481934
    2. 'v' → logprob: -2.2908263206481934
    3. 'touch' → logprob: -2.5408263206481934
    4. 'street' → logprob: -2.7908263206481934
    5. 'sign' → logprob: -2.9158263206481934
    6. ' the' → logprob: -3.0408263206481934
    7. 'from' → logprob: -3.2908263206481934
    8. '-' → logprob: -3.5408263206481934
    9. ' street' → logprob: -3.7908263206481934
    10. 'tow' → logprob: -4.165826320648193

Token 2616: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.25398093461990356
    2. 'to' → logprob: -1.5039808750152588
    3. '_to' → logprob: -7.253981113433838
    4. 'direction' → logprob: -7.878981113433838
    5. ' direction' → logprob: -8.00398063659668
    6. ')' → logprob: -8.12898063659668
    7. '   ' → logprob: -9.87898063659668
    8. '_direction' → logprob: -10.12898063659668
    9. '_' → logprob: -10.50398063659668
    10. ' ' → logprob: -10.50398063659668

Token 2617: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.9173365831375122
    2. 'touch' → logprob: -1.1673365831375122
    3. 'street' → logprob: -2.1673364639282227
    4. 'open' → logprob: -3.0423364639282227
    5. 'sign' → logprob: -3.1673364639282227
    6. ' street' → logprob: -4.167336463928223
    7. ' the' → logprob: -4.542336463928223
    8. 'edge' → logprob: -4.792336463928223
    9. '(' → logprob: -4.917336463928223
    10. ' touch' → logprob: -5.167336463928223

Token 2618: ' direction' (ID: 9262)
  Prédit: 'sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sign' → logprob: -1.0205965042114258
    2. ' sign' → logprob: -1.3955965042114258
    3. ' next' → logprob: -3.145596504211426
    4. 'space' → logprob: -3.270596504211426
    5. 'direction' → logprob: -3.270596504211426
    6. 'v' → logprob: -3.395596504211426
    7. ' street' → logprob: -3.645596504211426
    8. ' direction' → logprob: -3.895596504211426
    9. ' v' → logprob: -3.895596504211426
    10. 'street' → logprob: -4.145596504211426

Token 2619: ' vertex' (ID: 25363)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.39939823746681213
    2. ' of' → logprob: -2.2743983268737793
    3. ' from' → logprob: -2.2743983268737793
    4. 'touch' → logprob: -3.5243983268737793
    5. 'tow' → logprob: -3.7743983268737793
    6. ' (' → logprob: -4.399398326873779
    7. '           ' → logprob: -4.649398326873779
    8. '(graph' → logprob: -5.149398326873779
    9. '               ' → logprob: -5.399398326873779
    10. '(' → logprob: -5.524398326873779

Token 2620: ' opp' (ID: 6323)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.09331323951482773
    2. 'from' → logprob: -3.593313217163086
    3. 'tow' → logprob: -4.718313217163086
    4. 't' → logprob: -5.093313217163086
    5. ' from' → logprob: -5.218313217163086
    6. ')' → logprob: -5.468313217163086
    7. ',' → logprob: -5.468313217163086
    8. 'es' → logprob: -5.593313217163086
    9. ' of' → logprob: -5.593313217163086
    10. 'touch' → logprob: -5.718313217163086

Token 2621: 'site' (ID: 2759)
  Prédit: 'osite'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'osite' → logprob: -0.0012268967693671584
    2. 'osit' → logprob: -7.876226902008057
    3. 'osed' → logprob: -8.376226425170898
    4. '```' → logprob: -9.001226425170898
    5. '(site' → logprob: -9.376226425170898
    6. 'posite' → logprob: -9.376226425170898
    7. 'site' → logprob: -9.876226425170898
    8. '(' → logprob: -10.126226425170898
    9. '(os' → logprob: -10.251226425170898
    10. '=' → logprob: -10.501226425170898

Token 2622: ' to' (ID: 316)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.2523719072341919
    2. 'to' → logprob: -2.1273717880249023
    3. ' to' → logprob: -2.6273717880249023
    4. ' touch' → logprob: -4.377371788024902
    5. 't' → logprob: -5.002371788024902
    6. ' of' → logprob: -5.377371788024902
    7. 'of' → logprob: -5.752371788024902
    8. '(t' → logprob: -6.877371788024902
    9. 'the' → logprob: -7.377371788024902
    10. '   ' → logprob: -7.627371788024902

Token 2623: ' the' (ID: 290)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.0024342858232557774
    2. ' touch' → logprob: -6.752434253692627
    3. 'street' → logprob: -7.127434253692627
    4. 'the' → logprob: -8.377434730529785
    5. 'open' → logprob: -8.752434730529785
    6. 'sign' → logprob: -10.752434730529785
    7. ' street' → logprob: -11.627434730529785
    8. 'v' → logprob: -11.877434730529785
    9. 'edge' → logprob: -12.002434730529785
    10. 'obt' → logprob: -12.127434730529785

Token 2624: ' acute' (ID: 43944)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.09315088391304016
    2. 'sign' → logprob: -2.7181508541107178
    3. 'open' → logprob: -4.468151092529297
    4. 'street' → logprob: -4.843151092529297
    5. 'obt' → logprob: -6.343151092529297
    6. ' touch' → logprob: -7.468151092529297
    7. ' sign' → logprob: -7.843151092529297
    8. 'edge' → logprob: -8.968151092529297
    9. 'angle' → logprob: -9.218151092529297
    10. ' street' → logprob: -9.468151092529297

Token 2625: ' side' (ID: 4307)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.09861396253108978
    2. '           ' → logprob: -3.473613977432251
    3. '_angle' → logprob: -3.723613977432251
    4. ' angle' → logprob: -4.473613739013672
    5. 'side' → logprob: -4.973613739013672
    6. '   ' → logprob: -5.473613739013672
    7. 'edge' → logprob: -6.223613739013672
    8. ')' → logprob: -6.348613739013672
    9. 'vector' → logprob: -6.598613739013672
    10. 'cos' → logprob: -6.598613739013672

Token 2626: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09362733364105225
    2. 'if' → logprob: -3.218627452850342
    3. ' if' → logprob: -3.593627452850342
    4. '#' → logprob: -4.343627452850342
    5. '
' → logprob: -5.593627452850342
    6. ',' → logprob: -7.218627452850342
    7. 'v' → logprob: -7.968627452850342
    8. 'd' → logprob: -7.968627452850342
    9. 'for' → logprob: -8.218626976013184
    10. '       ' → logprob: -8.218626976013184

Token 2627: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07956234365701675
    2. '.' → logprob: -3.7045624256134033
    3. '[' → logprob: -4.579562187194824
    4. ',' → logprob: -5.204562187194824
    5. '               ' → logprob: -5.329562187194824
    6. ' and' → logprob: -5.579562187194824
    7. ')' → logprob: -5.579562187194824
    8. '[
' → logprob: -5.954562187194824
    9. '       ' → logprob: -6.329562187194824
    10. ',
' → logprob: -6.329562187194824

Token 2628: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43970993161201477
    2. 'if' → logprob: -1.3147099018096924
    3. '#' (adapté à ' #') → logprob: -2.6897099018096924
    4. ' if' → logprob: -4.1897101402282715
    5. '
' → logprob: -6.5647101402282715
    6. 'for' → logprob: -6.9397101402282715
    7. 'from' → logprob: -8.189709663391113
    8. 'direction' → logprob: -8.189709663391113
    9. '               ' → logprob: -8.314709663391113
    10. '       ' → logprob: -8.814709663391113

Token 2629: ' The' (ID: 623)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9510288238525391
    2. 'if' → logprob: -1.201028823852539
    3. ' if' → logprob: -1.326028823852539
    4. '#' → logprob: -3.326028823852539
    5. '
' → logprob: -5.701028823852539
    6. 'for' → logprob: -6.701028823852539
    7. ' #' → logprob: -6.701028823852539
    8. 'from' → logprob: -7.076028823852539
    9. '               ' → logprob: -7.451028823852539
    10. 'direction' → logprob: -7.701028823852539

Token 2630: ' direction' (ID: 9262)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4779951274394989
    2. 'if' → logprob: -1.2279951572418213
    3. '           ' → logprob: -3.8529951572418213
    4. 'sign' → logprob: -4.227994918823242
    5. ' if' → logprob: -4.477994918823242
    6. 'for' → logprob: -4.727994918823242
    7. '
' → logprob: -5.102994918823242
    8. 'angle' → logprob: -5.602994918823242
    9. 'direction' → logprob: -5.602994918823242
    10. ' #' → logprob: -6.227994918823242

Token 2631: ' from' (ID: 591)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.4025487899780273
    2. 'from' → logprob: -1.9025487899780273
    3. ' of' → logprob: -2.1525487899780273
    4. '           ' → logprob: -2.4025487899780273
    5. ' from' → logprob: -2.4025487899780273
    6. '#' → logprob: -3.5275487899780273
    7. ' =' → logprob: -3.6525487899780273
    8. 'ality' → logprob: -3.7775487899780273
    9. 'graph' → logprob: -3.7775487899780273
    10. '=' → logprob: -4.152548789978027

Token 2632: ' the' (ID: 290)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.002446042839437723
    2. ' touch' → logprob: -6.127446174621582
    3. 'open' → logprob: -8.502446174621582
    4. 'street' → logprob: -10.127446174621582
    5. 'sign' → logprob: -12.252446174621582
    6. ' open' → logprob: -12.877446174621582
    7. ' street' → logprob: -13.377446174621582
    8. '
' → logprob: -13.377446174621582
    9. 'tou' → logprob: -13.377446174621582
    10. '```' → logprob: -13.877446174621582

Token 2633: ' sign' (ID: 2232)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.0053153433836996555
    2. ' touch' → logprob: -5.75531530380249
    3. 'sign' → logprob: -6.88031530380249
    4. 'open' → logprob: -7.63031530380249
    5. 'street' → logprob: -8.755315780639648
    6. 'graph' → logprob: -9.255315780639648
    7. 't' → logprob: -9.755315780639648
    8. '
' → logprob: -9.880315780639648
    9. '#' → logprob: -10.005315780639648
    10. '           ' → logprob: -10.005315780639648

Token 2634: ' point' (ID: 2438)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6581161022186279
    2. ''s' → logprob: -2.158116102218628
    3. ' to' → logprob: -2.408116102218628
    4. '_' → logprob: -3.283116102218628
    5. ',' → logprob: -3.658116102218628
    6. '_to' → logprob: -3.908116102218628
    7. ' (' → logprob: -4.033116340637207
    8. '"' → logprob: -4.158116340637207
    9. 'segment' → logprob: -4.408116340637207
    10. ' [' → logprob: -4.533116340637207

Token 2635: ' towards' (ID: 9979)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0440036058425903
    2. ' to' → logprob: -1.2940036058425903
    3. 's' → logprob: -2.669003486633301
    4. '           ' → logprob: -2.794003486633301
    5. ' (' → logprob: -2.919003486633301
    6. 'to' → logprob: -4.044003486633301
    7. ',
' → logprob: -4.544003486633301
    8. ''s' → logprob: -4.669003486633301
    9. ' ,' → logprob: -4.669003486633301
    10. '               ' → logprob: -4.794003486633301

Token 2636: ' the' (ID: 290)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.305738240480423
    2. ' street' → logprob: -1.5557382106781006
    3. 'open' → logprob: -3.4307382106781006
    4. 'the' → logprob: -4.68073844909668
    5. 'touch' → logprob: -5.05573844909668
    6. ' open' → logprob: -5.80573844909668
    7. ' the' → logprob: -7.55573844909668
    8. 'stre' → logprob: -8.30573844909668
    9. ' touch' → logprob: -8.43073844909668
    10. '   ' → logprob: -9.05573844909668

Token 2637: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.10853651911020279
    2. 'touch' → logprob: -2.8585364818573
    3. 'open' → logprob: -3.1085364818573
    4. ' street' → logprob: -7.733536720275879
    5. 'other' → logprob: -8.608536720275879
    6. 'stre' → logprob: -9.108536720275879
    7. 'sign' → logprob: -10.483536720275879
    8. 'graph' → logprob: -10.733536720275879
    9. ' open' → logprob: -10.983536720275879
    10. ' touch' → logprob: -11.733536720275879

Token 2638: '_other' (ID: 70088)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.36369964480400085
    2. ' if' → logprob: -2.3636996746063232
    3. '#' → logprob: -2.7386996746063232
    4. 'if' → logprob: -3.1136996746063232
    5. '
' → logprob: -3.2386996746063232
    6. ')' → logprob: -4.613699436187744
    7. ')
' → logprob: -4.738699436187744
    8. ',' → logprob: -5.738699436187744
    9. '   ' → logprob: -5.738699436187744
    10. '[
' → logprob: -5.988699436187744

Token 2639: ' is' (ID: 382)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41051557660102844
    2. ' if' → logprob: -1.535515546798706
    3. 'if' → logprob: -3.160515546798706
    4. '
' → logprob: -3.535515546798706
    5. '#' → logprob: -3.785515546798706
    6. ')' → logprob: -4.785515785217285
    7. ')
' → logprob: -5.660515785217285
    8. '   ' → logprob: -6.035515785217285
    9. '       ' → logprob: -6.410515785217285
    10. ',' → logprob: -6.410515785217285

Token 2640: ' on' (ID: 402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -2.210570812225342
    2. '1' → logprob: -2.210570812225342
    3. 'touch' → logprob: -2.210570812225342
    4. 'sign' → logprob: -2.335570812225342
    5. 'v' → logprob: -2.585570812225342
    6. ' (' → logprob: -2.835570812225342
    7. ' p' → logprob: -2.960570812225342
    8. 'p' → logprob: -3.210570812225342
    9. 'open' → logprob: -3.710570812225342
    10. 'e' → logprob: -3.710570812225342

Token 2641: ' one' (ID: 1001)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.12635011970996857
    2. ' the' → logprob: -3.626350164413452
    3. 'touch' → logprob: -3.751350164413452
    4. 'side' → logprob: -4.501349925994873
    5. 'open' → logprob: -4.501349925994873
    6. 'which' → logprob: -4.751349925994873
    7. 'acute' → logprob: -4.751349925994873
    8. 'street' → logprob: -5.001349925994873
    9. 'obt' → logprob: -5.126349925994873
    10. 'sign' → logprob: -5.251349925994873

Token 2642: ' side' (ID: 4307)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.22802168130874634
    2. ' side' → logprob: -1.7280216217041016
    3. 'line' → logprob: -4.728021621704102
    4. ' of' → logprob: -5.478021621704102
    5. 'of' → logprob: -5.478021621704102
    6. 'direction' → logprob: -6.103021621704102
    7. ' line' → logprob: -6.353021621704102
    8. '_side' → logprob: -6.353021621704102
    9. 'hand' → logprob: -6.853021621704102
    10. 'end' → logprob: -7.603021621704102

Token 2643: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10389203578233719
    2. ' if' → logprob: -2.8538920879364014
    3. '#' → logprob: -4.103891849517822
    4. '
' → logprob: -4.478891849517822
    5. 'if' → logprob: -5.603891849517822
    6. '       ' → logprob: -6.478891849517822
    7. ',' → logprob: -6.728891849517822
    8. ')' → logprob: -6.853891849517822
    9. '               ' → logprob: -7.353891849517822
    10. ')
' → logprob: -7.478891849517822

Token 2644: ' direction' (ID: 9262)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7328838109970093
    2. '           ' → logprob: -1.2328838109970093
    3. 'and' → logprob: -2.857883930206299
    4. ' so' → logprob: -3.482883930206299
    5. ' the' → logprob: -3.732883930206299
    6. 'graph' → logprob: -3.857883930206299
    7. 'the' → logprob: -4.232883930206299
    8. '#' → logprob: -4.232883930206299
    9. ' then' → logprob: -4.607883930206299
    10. ',' → logprob: -4.732883930206299

Token 2645: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.39673781394958496
    2. ' from' → logprob: -1.271737813949585
    3. 'tow' → logprob: -4.021738052368164
    4. ' of' → logprob: -4.771738052368164
    5. '   ' → logprob: -6.146738052368164
    6. ' towards' → logprob: -6.271738052368164
    7. 'of' → logprob: -6.396738052368164
    8. '=' → logprob: -6.771738052368164
    9. ' away' → logprob: -6.771738052368164
    10. '
' → logprob: -6.896738052368164

Token 2646: ' street' (ID: 12901)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.0402120016515255
    2. 'sign' → logprob: -3.9152119159698486
    3. 'the' → logprob: -5.040212154388428
    4. 'open' → logprob: -5.290212154388428
    5. 'street' → logprob: -5.290212154388428
    6. ' touch' → logprob: -6.165212154388428
    7. 'graph' → logprob: -8.29021167755127
    8. ' sign' → logprob: -8.66521167755127
    9. ' street' → logprob: -8.66521167755127
    10. ' the' → logprob: -9.29021167755127

Token 2647: '_other' (ID: 70088)
  Prédit: '_other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_other' → logprob: -4.572941179503687e-05
    2. 'other' → logprob: -10.375045776367188
    3. '_touch' → logprob: -11.625045776367188
    4. 'Other' → logprob: -13.250045776367188
    5. 'touch' → logprob: -13.750045776367188
    6. '           ' → logprob: -14.500045776367188
    7. '_segments' → logprob: -14.500045776367188
    8. '_sign' → logprob: -15.250045776367188
    9. '```' → logprob: -15.250045776367188
    10. 'segments' → logprob: -16.125045776367188

Token 2648: ' to' (ID: 316)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6789572834968567
    2. 'tow' → logprob: -1.053957223892212
    3. 'to' → logprob: -2.678957223892212
    4. ' to' → logprob: -4.053957462310791
    5. ',
' → logprob: -4.178957462310791
    6. ')' → logprob: -4.428957462310791
    7. ',t' → logprob: -4.678957462310791
    8. ',p' → logprob: -5.303957462310791
    9. '```' → logprob: -5.428957462310791
    10. ' towards' → logprob: -5.928957462310791

Token 2649: ' touch' (ID: 7381)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.0007438759785145521
    2. ' touch' → logprob: -7.250743865966797
    3. 'open' → logprob: -10.375743865966797
    4. 'sign' → logprob: -13.125743865966797
    5. '
' → logprob: -15.125743865966797
    6. ' open' → logprob: -15.375743865966797
    7. '_touch' → logprob: -16.125743865966797
    8. ' ' → logprob: -17.125743865966797
    9. '   ' → logprob: -17.250743865966797
    10. 'tou' → logprob: -17.375743865966797

Token 2650: ' is' (ID: 382)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10854613780975342
    2. '
' → logprob: -3.483546257019043
    3. ')' → logprob: -3.983546257019043
    4. ',' → logprob: -4.608546257019043
    5. ' if' → logprob: -5.108546257019043
    6. '.' → logprob: -5.233546257019043
    7. '#' → logprob: -5.233546257019043
    8. '[' → logprob: -5.358546257019043
    9. ')
' → logprob: -5.483546257019043
    10. ',
' → logprob: -6.358546257019043

Token 2651: ' opposite' (ID: 23821)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -1.6030728816986084
    2. ' touch' → logprob: -1.8530728816986084
    3. 'the' → logprob: -2.1030728816986084
    4. 'sign' → logprob: -2.3530728816986084
    5. ' the' → logprob: -2.4780728816986084
    6. 'op' → logprob: -2.4780728816986084
    7. ' opposite' → logprob: -2.8530728816986084
    8. 'reverse' → logprob: -3.6030728816986084
    9. '(' → logprob: -3.8530728816986084
    10. 'v' → logprob: -3.9780728816986084

Token 2652: ' side' (ID: 4307)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9423965811729431
    2. '
' → logprob: -1.692396640777588
    3. ')
' → logprob: -2.192396640777588
    4. ')' → logprob: -2.317396640777588
    5. '   ' → logprob: -3.442396640777588
    6. '[
' → logprob: -3.692396640777588
    7. ',
' → logprob: -4.192396640777588
    8. '.
' → logprob: -4.192396640777588
    9. '[' → logprob: -4.317396640777588
    10. ',' → logprob: -4.442396640777588

Token 2653: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1529875099658966
    2. ' if' → logprob: -2.652987480163574
    3. 'if' → logprob: -4.027987480163574
    4. '
' → logprob: -4.277987480163574
    5. '#' → logprob: -4.652987480163574
    6. ')' → logprob: -4.777987480163574
    7. ')
' → logprob: -5.652987480163574
    8. '       ' → logprob: -5.777987480163574
    9. '               ' → logprob: -6.027987480163574
    10. '[' → logprob: -6.652987480163574

Token 2654: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15587769448757172
    2. '
' → logprob: -2.6558775901794434
    3. ' if' → logprob: -4.155877590179443
    4. '#' → logprob: -4.405877590179443
    5. 'graph' → logprob: -4.655877590179443
    6. 'if' → logprob: -5.030877590179443
    7. '[
' → logprob: -5.280877590179443
    8. 'for' → logprob: -6.280877590179443
    9. '            
' → logprob: -6.280877590179443
    10. ' graph' → logprob: -6.280877590179443

Token 2655: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21109266579151154
    2. 'if' → logprob: -1.8360927104949951
    3. '#' (adapté à ' #') → logprob: -4.211092472076416
    4. ' if' → logprob: -4.211092472076416
    5. '
' → logprob: -8.211092948913574
    6. 'for' → logprob: -8.211092948913574
    7. 'graph' → logprob: -8.461092948913574
    8. ' #' → logprob: -9.211092948913574
    9. 'direction' → logprob: -9.711092948913574
    10. '               ' → logprob: -10.211092948913574

Token 2656: ' So' (ID: 2632)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5970682501792908
    2. ' if' → logprob: -0.9720682501792908
    3. 'if' → logprob: -2.9720683097839355
    4. '
' → logprob: -5.7220683097839355
    5. '#' → logprob: -5.8470683097839355
    6. 'graph' → logprob: -6.0970683097839355
    7. '               ' → logprob: -6.2220683097839355
    8. '   ' → logprob: -6.5970683097839355
    9. ' #' → logprob: -6.7220683097839355
    10. ' graph' → logprob: -6.9720683097839355

Token 2657: ' direction' (ID: 9262)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.15135808289051056
    2. ' if' → logprob: -2.651358127593994
    3. '           ' → logprob: -3.151358127593994
    4. '#' → logprob: -3.776358127593994
    5. 'graph' → logprob: -6.026358127593994
    6. 'for' → logprob: -7.026358127593994
    7. ' #' → logprob: -8.401357650756836
    8. '               ' → logprob: -9.276357650756836
    9. ' graph' → logprob: -9.401357650756836
    10. '   ' → logprob: -9.526357650756836

Token 2658: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.11779922991991043
    2. ' from' → logprob: -2.4927992820739746
    3. ' =' → logprob: -5.242799282073975
    4. '           ' → logprob: -5.367799282073975
    5. 'graph' → logprob: -5.367799282073975
    6. '_from' → logprob: -5.742799282073975
    7. '=' → logprob: -5.992799282073975
    8. '(graph' → logprob: -6.867799282073975
    9. 's' → logprob: -7.117799282073975
    10. ' (' → logprob: -7.242799282073975

Token 2659: ' obt' (ID: 5564)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.10792586207389832
    2. ' touch' → logprob: -2.8579258918762207
    3. 'street' → logprob: -3.7329258918762207
    4. ' street' → logprob: -4.107925891876221
    5. 'open' → logprob: -5.482925891876221
    6. ' open' → logprob: -7.982925891876221
    7. 'sign' → logprob: -11.357925415039062
    8. 'graph' → logprob: -11.607925415039062
    9. '```' → logprob: -12.107925415039062
    10. 'stre' → logprob: -12.732925415039062

Token 2660: 'use' (ID: 1821)
  Prédit: 'use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.011934742331504822
    2. 'u' → logprob: -5.136934757232666
    3. '_st' → logprob: -6.386934757232666
    4. '   ' → logprob: -6.886934757232666
    5. '       ' → logprob: -7.261934757232666
    6. 'uste' → logprob: -8.386934280395508
    7. '_use' → logprob: -8.636934280395508
    8. 'user' → logprob: -8.761934280395508
    9. 'side' → logprob: -8.886934280395508
    10. 't' → logprob: -8.886934280395508

Token 2661: ' to' (ID: 316)
  Prédit: '_angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.44322359561920166
    2. '_side' → logprob: -1.3182235956192017
    3. '"' → logprob: -3.943223476409912
    4. 'angle' → logprob: -4.193223476409912
    5. '```' → logprob: -4.568223476409912
    6. '`' → logprob: -4.818223476409912
    7. ' angle' → logprob: -4.943223476409912
    8. '_to' → logprob: -5.193223476409912
    9. 'side' → logprob: -5.318223476409912
    10. ' side' → logprob: -5.693223476409912

Token 2662: ' acute' (ID: 43944)
  Prédit: 'acute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acute' → logprob: -0.024603556841611862
    2. 'street' → logprob: -4.399603366851807
    3. 'touch' → logprob: -4.899603366851807
    4. ' acute' → logprob: -5.524603366851807
    5. ' street' → logprob: -7.649603366851807
    6. ' touch' → logprob: -10.149603843688965
    7. 'ac' → logprob: -11.149603843688965
    8. '```' → logprob: -11.274603843688965
    9. ' ' → logprob: -11.524603843688965
    10. 'open' → logprob: -11.649603843688965

Token 2663: ' side' (ID: 4307)
  Prédit: '_side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -0.9130169153213501
    2. ' side' → logprob: -1.91301691532135
    3. '           ' → logprob: -2.4130167961120605
    4. '_sign' → logprob: -3.4130167961120605
    5. ' is' → logprob: -3.4130167961120605
    6. 'side' → logprob: -3.6630167961120605
    7. '_direction' → logprob: -3.6630167961120605
    8. ',' → logprob: -3.7880167961120605
    9. '#' → logprob: -3.9130167961120605
    10. 'direction' → logprob: -3.9130167961120605

Token 2664: ' means' (ID: 4748)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7108597159385681
    2. '           ' → logprob: -0.8358597159385681
    3. 'if' → logprob: -3.585859775543213
    4. '#' → logprob: -3.960859775543213
    5. '
' → logprob: -4.585859775543213
    6. '               ' → logprob: -6.210859775543213
    7. '       ' → logprob: -6.210859775543213
    8. ')' → logprob: -6.210859775543213
    9. ' #' → logprob: -6.335859775543213
    10. ',' → logprob: -6.460859775543213

Token 2665: ':' (ID: 25)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.17466428875923157
    2. ' graph' → logprob: -2.049664258956909
    3. '#' → logprob: -4.549664497375488
    4. 'touch' → logprob: -5.174664497375488
    5. '(graph' → logprob: -5.674664497375488
    6. 'if' → logprob: -5.799664497375488
    7. 'for' → logprob: -6.924664497375488
    8. ' if' → logprob: -7.049664497375488
    9. ' (' → logprob: -7.174664497375488
    10. '
' → logprob: -7.299664497375488

Token 2666: ' moving' (ID: 10067)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.8288859128952026
    2. 'if' → logprob: -1.0788859128952026
    3. ' if' → logprob: -2.703886032104492
    4. '#' → logprob: -2.828886032104492
    5. 'for' → logprob: -4.203886032104492
    6. '           ' → logprob: -4.828886032104492
    7. '(graph' → logprob: -4.828886032104492
    8. ' graph' → logprob: -4.953886032104492
    9. 'c' → logprob: -4.953886032104492
    10. 'f' → logprob: -5.328886032104492

Token 2667: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.14226503670215607
    2. ' from' → logprob: -3.3922650814056396
    3. 'graph' → logprob: -4.1422648429870605
    4. 'away' → logprob: -4.5172648429870605
    5. ' along' → logprob: -4.6422648429870605
    6. ' street' → logprob: -4.7672648429870605
    7. 'touch' → logprob: -4.7672648429870605
    8. 'street' → logprob: -4.7672648429870605
    9. 'tow' → logprob: -4.8922648429870605
    10. '(graph' → logprob: -5.0172648429870605

Token 2668: ' which' (ID: 1118)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.5275350213050842
    2. 'street' → logprob: -1.4025349617004395
    3. '(t' → logprob: -2.1525349617004395
    4. '(st' → logprob: -3.1525349617004395
    5. ' street' → logprob: -6.0275349617004395
    6. ' touch' → logprob: -6.6525349617004395
    7. ' (' → logprob: -7.9025349617004395
    8. 'open' → logprob: -8.152535438537598
    9. 'st' → logprob: -8.902535438537598
    10. '(' → logprob: -8.902535438537598

Token 2669: ' node' (ID: 4596)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -1.8141698837280273
    2. 'node' → logprob: -2.1891698837280273
    3. 'point' → logprob: -2.1891698837280273
    4. ' side' → logprob: -2.3141698837280273
    5. 'direction' → logprob: -2.5641698837280273
    6. 'touch' → logprob: -2.6891698837280273
    7. ' node' → logprob: -2.9391698837280273
    8. '           ' → logprob: -3.1891698837280273
    9. 'vertex' → logprob: -3.6891698837280273
    10. ')' → logprob: -3.8141698837280273

Token 2670: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -1.5188463926315308
    2. ' from' → logprob: -2.5188465118408203
    3. ' graph' → logprob: -2.7688465118408203
    4. ' (' → logprob: -3.0188465118408203
    5. '           ' → logprob: -3.1438465118408203
    6. '[
' → logprob: -3.2688465118408203
    7. 't' → logprob: -3.3938465118408203
    8. ' towards' → logprob: -3.3938465118408203
    9. 'from' → logprob: -3.5188465118408203
    10. ' touch' → logprob: -3.5188465118408203

Token 2671: ' which' (ID: 1118)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.027951020747423172
    2. 'street' → logprob: -3.6529510021209717
    3. 'open' → logprob: -6.902951240539551
    4. ' touch' → logprob: -7.777951240539551
    5. ' street' → logprob: -8.65295124053955
    6. 'stre' → logprob: -11.40295124053955
    7. 'the' → logprob: -11.65295124053955
    8. 'other' → logprob: -11.65295124053955
    9. '```' → logprob: -12.02795124053955
    10. ' open' → logprob: -13.02795124053955

Token 2672: ' node' (ID: 4596)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2819761037826538
    2. '[
' → logprob: -1.9069761037826538
    3. ' if' → logprob: -2.2819762229919434
    4. '#' → logprob: -2.5319762229919434
    5. '[' → logprob: -2.7819762229919434
    6. ',' → logprob: -3.4069762229919434
    7. ',
' → logprob: -3.4069762229919434
    8. ')' → logprob: -3.5319762229919434
    9. ' graph' → logprob: -3.6569762229919434
    10. ')
' → logprob: -3.9069762229919434

Token 2673: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31673941016197205
    2. ' if' → logprob: -2.316739320755005
    3. '#' → logprob: -2.566739320755005
    4. 'if' → logprob: -3.441739320755005
    5. '[
' → logprob: -3.816739320755005
    6. '
' → logprob: -4.691739559173584
    7. ',' → logprob: -5.441739559173584
    8. '[' → logprob: -6.066739559173584
    9. '            
' → logprob: -6.191739559173584
    10. ',
' → logprob: -6.191739559173584

Token 2674: '           ' (ID: 352)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5819365382194519
    2. '           ' → logprob: -1.0819365978240967
    3. '#' → logprob: -3.4569365978240967
    4. 'if' → logprob: -3.5819365978240967
    5. 'graph' → logprob: -4.581936359405518
    6. ' #' → logprob: -5.081936359405518
    7. ' graph' → logprob: -5.331936359405518
    8. 'touch' → logprob: -5.831936359405518
    9. '
' → logprob: -6.206936359405518
    10. ' 
' → logprob: -6.331936359405518

Token 2675: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3638562262058258
    2. ' if' → logprob: -1.7388561964035034
    3. 'if' → logprob: -2.238856315612793
    4. '#' (adapté à ' #') → logprob: -4.238856315612793
    5. 'direction' → logprob: -6.488856315612793
    6. 'from' → logprob: -7.113856315612793
    7. '
' → logprob: -7.113856315612793
    8. ' #' → logprob: -7.488856315612793
    9. 'd' → logprob: -7.613856315612793
    10. ' direction' → logprob: -7.863856315612793

Token 2676: ' The' (ID: 623)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.013187411241233349
    2. '           ' → logprob: -4.763187408447266
    3. '#' → logprob: -6.138187408447266
    4. 'for' → logprob: -6.138187408447266
    5. '```' → logprob: -9.638187408447266
    6. ' if' → logprob: -9.763187408447266
    7. 'f' → logprob: -10.138187408447266
    8. 'direction' → logprob: -11.513187408447266
    9. 'from' → logprob: -11.638187408447266
    10. '``' → logprob: -11.638187408447266

Token 2677: ' obt' (ID: 5564)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7681626081466675
    2. '#' → logprob: -1.6431626081466675
    3. 'c' → logprob: -2.268162727355957
    4. ' if' → logprob: -2.268162727355957
    5. 'angle' → logprob: -3.393162727355957
    6. 'sign' → logprob: -3.643162727355957
    7. '           ' → logprob: -4.143162727355957
    8. ' angle' → logprob: -4.518162727355957
    9. ' c' → logprob: -4.893162727355957
    10. '
' → logprob: -5.018162727355957

Token 2678: 'use' (ID: 1821)
  Prédit: 'use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.05068153142929077
    2. '_st' → logprob: -4.3006815910339355
    3. 'u' → logprob: -5.0506815910339355
    4. '_use' → logprob: -5.0506815910339355
    5. 'uce' → logprob: -5.3006815910339355
    6. '_side' → logprob: -6.0506815910339355
    7. '   ' → logprob: -6.0506815910339355
    8. '```' → logprob: -6.0506815910339355
    9. '1' → logprob: -6.3006815910339355
    10. '
' → logprob: -7.6756815910339355

Token 2679: ' side' (ID: 4307)
  Prédit: '_side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -0.32163116335868835
    2. ' side' → logprob: -2.4466311931610107
    3. '_angle' → logprob: -2.5716311931610107
    4. ' _' → logprob: -3.3216311931610107
    5. ' angle' → logprob: -3.8216311931610107
    6. '_' → logprob: -4.321630954742432
    7. 'side' → logprob: -4.696630954742432
    8. 'angle' → logprob: -5.321630954742432
    9. '_s' → logprob: -5.571630954742432
    10. '_sign' → logprob: -5.821630954742432

Token 2680: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3190317153930664
    2. ' is' → logprob: -1.5690317153930664
    3. '_sign' → logprob: -1.8190317153930664
    4. ' side' → logprob: -3.3190317153930664
    5. 'sign' → logprob: -3.4440317153930664
    6. '_direction' → logprob: -3.6940317153930664
    7. '#' → logprob: -3.8190317153930664
    8. '=' → logprob: -3.9440317153930664
    9. '_side' → logprob: -4.194031715393066
    10. ',' → logprob: -4.319031715393066

Token 2681: ' from' (ID: 591)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -1.6108559370040894
    2. 'v' → logprob: -1.7358559370040894
    3. 'touch' → logprob: -1.8608559370040894
    4. '-' → logprob: -1.8608559370040894
    5. ' street' → logprob: -2.485856056213379
    6. '(' → logprob: -3.235856056213379
    7. '1' → logprob: -3.485856056213379
    8. 'obt' → logprob: -3.485856056213379
    9. 'sign' → logprob: -4.360856056213379
    10. 'the' → logprob: -4.485856056213379

Token 2682: ' the' (ID: 290)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.07898320257663727
    2. 'street' → logprob: -3.5789833068847656
    3. 'open' → logprob: -3.9539833068847656
    4. ' touch' → logprob: -4.078983306884766
    5. 'sign' → logprob: -5.328983306884766
    6. ' street' → logprob: -5.953983306884766
    7. 'obt' → logprob: -6.953983306884766
    8. ' obt' → logprob: -7.078983306884766
    9. ' open' → logprob: -7.078983306884766
    10. 'ob' → logprob: -7.578983306884766

Token 2683: ' other' (ID: 1273)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.02213161811232567
    2. 'sign' → logprob: -4.647131443023682
    3. ' touch' → logprob: -5.522131443023682
    4. 'street' → logprob: -5.522131443023682
    5. 'open' → logprob: -5.897131443023682
    6. 'graph' → logprob: -7.772131443023682
    7. 'v' → logprob: -7.897131443023682
    8. ' sign' → logprob: -9.02213191986084
    9. ' street' → logprob: -9.39713191986084
    10. ' open' → logprob: -9.77213191986084

Token 2684: ' endpoint' (ID: 29703)
  Prédit: '_other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_other' → logprob: -0.24681831896305084
    2. 'side' → logprob: -2.6218183040618896
    3. 'node' → logprob: -3.4968183040618896
    4. 'end' → logprob: -3.8718183040618896
    5. 'street' → logprob: -3.8718183040618896
    6. 'endpoint' → logprob: -3.9968183040618896
    7. '_end' → logprob: -4.246818542480469
    8. 'point' → logprob: -4.996818542480469
    9. 'p' → logprob: -5.246818542480469
    10. 'Other' → logprob: -5.496818542480469

Token 2685: ' of' (ID: 328)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.23116396367549896
    2. 'tow' → logprob: -3.23116397857666
    3. ',' → logprob: -3.35616397857666
    4. '           ' → logprob: -3.60616397857666
    5. '_to' → logprob: -3.85616397857666
    6. ',
' → logprob: -3.98116397857666
    7. ' towards' → logprob: -4.23116397857666
    8. '[' → logprob: -4.60616397857666
    9. 'to' → logprob: -4.85616397857666
    10. ' toward' → logprob: -5.23116397857666

Token 2686: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.27020376920700073
    2. 'se' → logprob: -2.0202038288116455
    3. ' street' → logprob: -2.8952038288116455
    4. 'sign' → logprob: -3.8952038288116455
    5. 'the' → logprob: -4.020203590393066
    6. ' the' → logprob: -6.145203590393066
    7. 'touch' → logprob: -6.270203590393066
    8. '(se' → logprob: -6.395203590393066
    9. ' sign' → logprob: -7.145203590393066
    10. 'stre' → logprob: -7.270203590393066

Token 2687: ' segment' (ID: 14806)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.1944405734539032
    2. '           ' → logprob: -3.3194406032562256
    3. '
' → logprob: -3.8194406032562256
    4. '_to' → logprob: -4.0694403648376465
    5. ' (' → logprob: -4.1944403648376465
    6. ',' → logprob: -4.1944403648376465
    7. ' ->' → logprob: -4.9444403648376465
    8. ' towards' → logprob: -5.0694403648376465
    9. 'to' → logprob: -5.1944403648376465
    10. '[' → logprob: -5.1944403648376465

Token 2688: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2538889944553375
    2. ' if' → logprob: -2.1288890838623047
    3. ' to' → logprob: -3.8788890838623047
    4. '
' → logprob: -4.253889083862305
    5. ' from' → logprob: -4.253889083862305
    6. '#' → logprob: -5.003889083862305
    7. ',' → logprob: -5.003889083862305
    8. 'from' → logprob: -5.128889083862305
    9. '               ' → logprob: -5.753889083862305
    10. ' (' → logprob: -5.753889083862305

Token 2689: ' touch' (ID: 7381)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.00039170795935206115
    2. ' touch' → logprob: -7.875391483306885
    3. 'open' → logprob: -11.500391960144043
    4. 'street' → logprob: -14.750391960144043
    5. '   ' → logprob: -15.375391960144043
    6. 'sign' → logprob: -15.375391960144043
    7. '_touch' → logprob: -15.500391960144043
    8. '```' → logprob: -16.375391006469727
    9. 'the' → logprob: -16.750391006469727
    10. '
' → logprob: -16.750391006469727

Token 2690: ' or' (ID: 503)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05777072161436081
    2. '#' → logprob: -3.9327707290649414
    3. '
' → logprob: -4.057770729064941
    4. ' if' → logprob: -4.682770729064941
    5. 'if' → logprob: -6.182770729064941
    6. '       ' → logprob: -6.682770729064941
    7. ',' → logprob: -7.182770729064941
    8. '               ' → logprob: -7.432770729064941
    9. 'graph' → logprob: -7.432770729064941
    10. ' (' → logprob: -7.807770729064941

Token 2691: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.13390563428401947
    2. 'touch' → logprob: -2.1339056491851807
    3. ' from' → logprob: -5.258905410766602
    4. 'the' → logprob: -6.758905410766602
    5. ' touch' → logprob: -8.383905410766602
    6. 'vice' → logprob: -8.633905410766602
    7. ' vice' → logprob: -9.133905410766602
    8. 'away' → logprob: -11.008905410766602
    9. 'tow' → logprob: -11.133905410766602
    10. 'to' → logprob: -11.633905410766602

Token 2692: ' touch' (ID: 7381)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.0023135726805776358
    2. ' touch' → logprob: -6.502313613891602
    3. 'open' → logprob: -7.127313613891602
    4. ' open' → logprob: -12.377313613891602
    5. 'sign' → logprob: -13.127313613891602
    6. 'the' → logprob: -14.502313613891602
    7. '_touch' → logprob: -14.627313613891602
    8. 't' → logprob: -15.002313613891602
    9. 'to' → logprob: -16.1273136138916
    10. '.touch' → logprob: -16.3773136138916

Token 2693: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.06645681709051132
    2. 'to' → logprob: -3.4414567947387695
    3. '[' → logprob: -4.0664567947387695
    4. '_to' → logprob: -5.5664567947387695
    5. ',' → logprob: -5.6914567947387695
    6. ' (' → logprob: -6.1914567947387695
    7. ')' → logprob: -6.6914567947387695
    8. ' ->' → logprob: -7.1914567947387695
    9. 'To' → logprob: -8.06645679473877
    10. ''s' → logprob: -8.06645679473877

Token 2694: ' other' (ID: 1273)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.07162325084209442
    2. ' street' → logprob: -2.6966233253479004
    3. 'open' → logprob: -6.4466233253479
    4. ' open' → logprob: -9.446622848510742
    5. 'touch' → logprob: -11.571622848510742
    6. 'stre' → logprob: -12.321622848510742
    7. ' ' → logprob: -13.196622848510742
    8. '   ' → logprob: -13.571622848510742
    9. 'other' → logprob: -13.571622848510742
    10. '       ' → logprob: -14.821622848510742

Token 2695: ' endpoint' (ID: 29703)
  Prédit: '_other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_other' → logprob: -0.3953787684440613
    2. '[' → logprob: -2.145378828048706
    3. 'Other' → logprob: -3.645378828048706
    4. ' _' → logprob: -3.770378828048706
    5. '_end' → logprob: -4.270378589630127
    6. 'other' → logprob: -4.270378589630127
    7. 'point' → logprob: -4.520378589630127
    8. '_point' → logprob: -4.895378589630127
    9. '_' → logprob: -4.895378589630127
    10. ' ' → logprob: -5.020378589630127

Token 2696: '?

' (ID: 1715)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.021528368815779686
    2. ' if' → logprob: -4.396528244018555
    3. '#' → logprob: -6.396528244018555
    4. '
' → logprob: -6.521528244018555
    5. ')' → logprob: -7.146528244018555
    6. '               ' → logprob: -7.271528244018555
    7. '       ' → logprob: -7.646528244018555
    8. '[' → logprob: -7.646528244018555
    9. 'if' → logprob: -8.021528244018555
    10. ',' → logprob: -8.146528244018555

Token 2697: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5095897316932678
    2. 'The' → logprob: -2.384589672088623
    3. ' The' → logprob: -2.384589672088623
    4. ' graph' → logprob: -3.134589672088623
    5. 'If' → logprob: -4.009589672088623
    6. ' touch' → logprob: -4.134589672088623
    7. 'touch' → logprob: -4.259589672088623
    8. ' if' → logprob: -4.509589672088623
    9. '#' → logprob: -4.509589672088623
    10. 'From' → logprob: -4.759589672088623

Token 2698: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4939671754837036
    2. 'if' → logprob: -1.1189671754837036
    3. ' if' → logprob: -2.868967056274414
    4. '#' (adapté à ' #') → logprob: -5.618967056274414
    5. 'angle' → logprob: -7.618967056274414
    6. 'd' → logprob: -7.743967056274414
    7. 'c' → logprob: -7.868967056274414
    8. ' c' → logprob: -8.118967056274414
    9. 'i' → logprob: -8.493967056274414
    10. '               ' → logprob: -8.743967056274414

Token 2699: ' Actually' (ID: 50557)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.40776658058166504
    2. '           ' → logprob: -1.282766580581665
    3. ' if' → logprob: -3.407766580581665
    4. '#' → logprob: -4.657766342163086
    5. 'angle' → logprob: -4.782766342163086
    6. 'sign' → logprob: -6.907766342163086
    7. '   ' → logprob: -7.157766342163086
    8. 'c' → logprob: -7.157766342163086
    9. '       ' → logprob: -7.282766342163086
    10. 'from' → logprob: -7.532766342163086

Token 2700: ',' (ID: 11)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.15622638165950775
    2. '           ' → logprob: -2.156226396560669
    3. ' continue' → logprob: -4.53122615814209
    4. ' #' → logprob: -4.78122615814209
    5. 'continue' → logprob: -5.15622615814209
    6. '
' → logprob: -6.53122615814209
    7. ' if' → logprob: -7.15622615814209
    8. 'if' → logprob: -7.78122615814209
    9. ',' → logprob: -9.03122615814209
    10. '       ' → logprob: -9.28122615814209

Token 2701: ' problem' (ID: 4792)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.02430458553135395
    2. ' if' → logprob: -4.774304389953613
    3. ' #' → logprob: -5.024304389953613
    4. '           ' → logprob: -5.274304389953613
    5. 'if' → logprob: -5.774304389953613
    6. ' continue' → logprob: -9.149304389953613
    7. 'for' → logprob: -9.149304389953613
    8. 'continue' → logprob: -9.149304389953613
    9. '
' → logprob: -9.649304389953613
    10. ' for' → logprob: -9.774304389953613

Token 2702: ' example' (ID: 4994)
  Prédit: '_direct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_direct' → logprob: -0.6510013341903687
    2. ')' → logprob: -2.401001453399658
    3. 'direct' → logprob: -2.526001453399658
    4. '#' → logprob: -2.776001453399658
    5. '[' → logprob: -2.901001453399658
    6. '_' → logprob: -3.776001453399658
    7. ' continues' → logprob: -4.401001453399658
    8. '-directed' → logprob: -4.526001453399658
    9. ',' → logprob: -4.651001453399658
    10. '           ' → logprob: -4.651001453399658

Token 2703: ' "' (ID: 392)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -1.4146909713745117
    2. '[' → logprob: -1.4146909713745117
    3. '           ' → logprob: -1.9146909713745117
    4. ')' → logprob: -2.2896909713745117
    5. ',' → logprob: -3.5396909713745117
    6. ':
' → logprob: -4.039690971374512
    7. '   ' → logprob: -4.039690971374512
    8. '<|end|>' → logprob: -4.039690971374512
    9. '[
' → logprob: -4.039690971374512
    10. ']' → logprob: -4.164690971374512

Token 2704: 'BF' (ID: 28112)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.9086834192276
    2. '
' → logprob: -1.9086834192276
    3. ' 
' → logprob: -2.5336833000183105
    4. '           ' → logprob: -2.6586833000183105
    5. ' p' → logprob: -2.7836833000183105
    6. ',' → logprob: -3.0336833000183105
    7. '[' → logprob: -3.5336833000183105
    8. '\n' → logprob: -3.7836833000183105
    9. ' (' → logprob: -3.9086833000183105
    10. '"' → logprob: -3.9086833000183105

Token 2705: '"' (ID: 1)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7127472758293152
    2. '"' → logprob: -1.83774733543396
    3. '")' → logprob: -1.83774733543396
    4. '_' → logprob: -2.83774733543396
    5. '[' → logprob: -3.71274733543396
    6. ')"' → logprob: -3.96274733543396
    7. ' )' → logprob: -5.400247097015381
    8. ',' → logprob: -5.462747097015381
    9. '1' → logprob: -5.525247097015381
    10. ')
' → logprob: -5.650247097015381

Token 2706: ' -' (ID: 533)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -2.198223829269409
    2. ')' → logprob: -2.198223829269409
    3. '[' → logprob: -2.323223829269409
    4. ':' → logprob: -2.573223829269409
    5. ',' → logprob: -2.698223829269409
    6. '           ' → logprob: -2.698223829269409
    7. ':
' → logprob: -3.073223829269409
    8. 'F' → logprob: -3.198223829269409
    9. '_' → logprob: -3.198223829269409
    10. '
' → logprob: -3.323223829269409

Token 2707: ' car' (ID: 1669)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.2984756231307983
    2. '[' → logprob: -2.173475742340088
    3. '<|end|>' → logprob: -2.548475742340088
    4. '#' → logprob: -2.673475742340088
    5. ',' → logprob: -3.173475742340088
    6. ':' → logprob: -3.423475742340088
    7. ' (' → logprob: -3.423475742340088
    8. '1' → logprob: -3.548475742340088
    9. '.' → logprob: -4.048475742340088
    10. ':
' → logprob: -4.110975742340088

Token 2708: ' cannot' (ID: 6284)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.13988074660301208
    2. '[' → logprob: -4.014880657196045
    3. ' _' → logprob: -4.264880657196045
    4. ')' → logprob: -4.764880657196045
    5. 'from' → logprob: -4.764880657196045
    6. ' ->' → logprob: -4.764880657196045
    7. '"' → logprob: -5.014880657196045
    8. '_
' → logprob: -5.014880657196045
    9. '1' → logprob: -5.389880657196045
    10. '->' → logprob: -5.639880657196045

Token 2709: ' move' (ID: 5275)
  Prédit: ' move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.08171752095222473
    2. 'move' → logprob: -3.2067174911499023
    3. '_' → logprob: -4.206717491149902
    4. '_move' → logprob: -4.456717491149902
    5. ')' → logprob: -6.206717491149902
    6. '[' → logprob: -6.581717491149902
    7. 'from' → logprob: -6.581717491149902
    8. '```' → logprob: -7.331717491149902
    9. '.move' → logprob: -7.706717491149902
    10. ' go' → logprob: -7.706717491149902

Token 2710: ' from' (ID: 591)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.3074034452438354
    2. 'from' → logprob: -1.3074034452438354
    3. ' from' → logprob: -2.057403564453125
    4. ' (' → logprob: -2.807403564453125
    5. '[' → logprob: -3.182403564453125
    6. '```' → logprob: -3.432403564453125
    7. ')' → logprob: -4.057403564453125
    8. '"' → logprob: -4.057403564453125
    9. '_from' → logprob: -4.182403564453125
    10. ' _' → logprob: -4.307403564453125

Token 2711: ' obt' (ID: 5564)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.08086512237787247
    2. ' touch' → logprob: -3.4558651447296143
    3. 'street' → logprob: -3.5808651447296143
    4. ' street' → logprob: -4.705864906311035
    5. 'open' → logprob: -5.455864906311035
    6. 'sign' → logprob: -7.455864906311035
    7. ' (' → logprob: -7.455864906311035
    8. ' open' → logprob: -7.580864906311035
    9. '(t' → logprob: -7.705864906311035
    10. 'the' → logprob: -7.955864906311035

Token 2712: 'use' (ID: 1821)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -1.212715744972229
    2. ''' → logprob: -1.712715744972229
    3. '1' → logprob: -1.837715744972229
    4. '```' → logprob: -2.4627156257629395
    5. 'f' → logprob: -2.5877156257629395
    6. ')' → logprob: -2.9627156257629395
    7. '')' → logprob: -3.0877156257629395
    8. 's' → logprob: -4.0877156257629395
    9. 'r' → logprob: -4.3377156257629395
    10. 'u' → logprob: -4.5877156257629395

Token 2713: ' angle' (ID: 16538)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.26703110337257385
    2. '_angle' → logprob: -1.8920310735702515
    3. '_side' → logprob: -3.642031192779541
    4. '_to' → logprob: -4.517031192779541
    5. ' _' → logprob: -5.267031192779541
    6. 'angle' → logprob: -5.642031192779541
    7. '_
' → logprob: -5.767031192779541
    8. '_other' → logprob: -5.767031192779541
    9. '"' → logprob: -5.892031192779541
    10. 'to' → logprob: -6.142031192779541

Token 2714: ' side' (ID: 4307)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5757766962051392
    2. '"' → logprob: -2.2007765769958496
    3. ' to' → logprob: -2.4507765769958496
    4. '_
' → logprob: -2.4507765769958496
    5. ' (' → logprob: -3.4507765769958496
    6. '           ' → logprob: -3.4507765769958496
    7. '_to' → logprob: -3.5757765769958496
    8. ')' → logprob: -3.7007765769958496
    9. ' _' → logprob: -3.8257765769958496
    10. ' if' → logprob: -3.9507765769958496

Token 2715: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.41335201263427734
    2. ')' → logprob: -2.7883520126342773
    3. '
' → logprob: -3.2883520126342773
    4. ')
' → logprob: -3.4133520126342773
    5. '[' → logprob: -3.6633520126342773
    6. '               ' → logprob: -3.7883520126342773
    7. '[
' → logprob: -3.9133520126342773
    8. '       ' → logprob: -4.163352012634277
    9. '   ' → logprob: -4.538352012634277
    10. ':
' → logprob: -4.913352012634277

Token 2716: ' acute' (ID: 43944)
  Prédit: 'acute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acute' → logprob: -0.05654409900307655
    2. ' acute' → logprob: -3.056544065475464
    3. 'street' → logprob: -5.431544303894043
    4. ' street' → logprob: -6.931544303894043
    5. '   ' → logprob: -7.556544303894043
    6. '```' → logprob: -7.931544303894043
    7. 'the' → logprob: -8.431544303894043
    8. ' ' → logprob: -8.556544303894043
    9. 'touch' → logprob: -8.681544303894043
    10. 'ac' → logprob: -8.931544303894043

Token 2717: ' angle' (ID: 16538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8415963649749756
    2. '_' → logprob: -0.9665963649749756
    3. '_side' → logprob: -3.3415963649749756
    4. '_angle' → logprob: -3.3415963649749756
    5. ' _' → logprob: -4.466596603393555
    6. '_direction' → logprob: -4.716596603393555
    7. ' side' → logprob: -4.841596603393555
    8. ')_' → logprob: -4.966596603393555
    9. '"' → logprob: -5.091596603393555
    10. ' )' → logprob: -5.216596603393555

Token 2718: ' side' (ID: 4307)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26726555824279785
    2. '
' → logprob: -2.642265558242798
    3. ' if' → logprob: -3.642265558242798
    4. '               ' → logprob: -4.017265319824219
    5. ')
' → logprob: -4.267265319824219
    6. '       ' → logprob: -4.392265319824219
    7. ')' → logprob: -4.517265319824219
    8. '   ' → logprob: -4.642265319824219
    9. ':
' → logprob: -4.767265319824219
    10. '[' → logprob: -5.267265319824219

Token 2719: ' at' (ID: 540)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012787094339728355
    2. '
' → logprob: -5.137786865234375
    3. ' if' → logprob: -6.262786865234375
    4. '.
' → logprob: -7.012786865234375
    5. '.' → logprob: -7.387786865234375
    6. '#' → logprob: -7.387786865234375
    7. ',' → logprob: -7.762786865234375
    8. '               ' → logprob: -8.137786865234375
    9. ' (' → logprob: -8.512786865234375
    10. '       ' → logprob: -8.762786865234375

Token 2720: ' the' (ID: 290)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.8365467190742493
    2. ' the' → logprob: -1.3365466594696045
    3. 'the' → logprob: -2.0865466594696045
    4. ' touch' → logprob: -2.3365466594696045
    5. ' a' → logprob: -3.5865466594696045
    6. 'sign' → logprob: -3.7115466594696045
    7. '```' → logprob: -5.086546897888184
    8. ')' → logprob: -5.336546897888184
    9. 'a' → logprob: -5.836546897888184
    10. '<|end|>' → logprob: -5.836546897888184

Token 2721: ' node' (ID: 4596)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.8431989550590515
    2. 'point' → logprob: -1.2181990146636963
    3. 'sign' → logprob: -1.8431990146636963
    4. ' point' → logprob: -2.9681990146636963
    5. ' end' → logprob: -4.968198776245117
    6. ' touch' → logprob: -5.093198776245117
    7. 'end' → logprob: -5.093198776245117
    8. ' sign' → logprob: -5.218198776245117
    9. ''' → logprob: -5.593198776245117
    10. 'node' → logprob: -5.843198776245117

Token 2722: ' B' (ID: 418)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3466004431247711
    2. '
' → logprob: -1.5966004133224487
    3. '[
' → logprob: -3.8466005325317383
    4. ')' → logprob: -4.471600532531738
    5. '[' → logprob: -4.721600532531738
    6. '            
' → logprob: -4.971600532531738
    7. '\n' → logprob: -5.096600532531738
    8. ')
' → logprob: -5.471600532531738
    9. '               ' → logprob: -5.596600532531738
    10. '       ' → logprob: -5.721600532531738

Token 2723: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.027902919799089432
    2. '
' → logprob: -3.902902841567993
    3. '               ' → logprob: -6.277903079986572
    4. '            
' → logprob: -6.652903079986572
    5. '       ' → logprob: -7.152903079986572
    6. ' if' → logprob: -7.652903079986572
    7. ')
' → logprob: -8.277902603149414
    8. ')' → logprob: -8.277902603149414
    9. '                   ' → logprob: -8.652902603149414
    10. ',' → logprob: -8.777902603149414

Token 2724: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.037401024252176285
    2. '               ' → logprob: -4.41240119934082
    3. '#' → logprob: -5.16240119934082
    4. '       ' → logprob: -5.66240119934082
    5. '.' → logprob: -6.03740119934082
    6. '                   ' → logprob: -6.66240119934082
    7. '[' → logprob: -6.66240119934082
    8. ',' → logprob: -6.91240119934082
    9. '            ' → logprob: -6.91240119934082
    10. '                       ' → logprob: -7.16240119934082

Token 2725: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06853008270263672
    2. '#' (adapté à ' #') → logprob: -3.1935300827026367
    3. '
' → logprob: -4.693530082702637
    4. ' if' → logprob: -5.568530082702637
    5. ' #' → logprob: -6.193530082702637
    6. '               ' → logprob: -6.693530082702637
    7. 'if' → logprob: -7.068530082702637
    8. ',' → logprob: -7.443530082702637
    9. ' (' → logprob: -7.568530082702637
    10. '[
' → logprob: -7.568530082702637

Token 2726: ' So' (ID: 2632)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11269429326057434
    2. ' if' → logprob: -3.112694263458252
    3. '#' → logprob: -3.487694263458252
    4. 'if' → logprob: -4.112694263458252
    5. '
' → logprob: -5.862694263458252
    6. 'graph' → logprob: -6.237694263458252
    7. 'for' → logprob: -6.362694263458252
    8. ' #' → logprob: -6.612694263458252
    9. ' for' → logprob: -6.737694263458252
    10. ' graph' → logprob: -6.987694263458252

Token 2727: ' forbidden' (ID: 74435)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6707807183265686
    2. '           ' → logprob: -1.4207806587219238
    3. ' if' → logprob: -2.045780658721924
    4. 'if' → logprob: -2.545780658721924
    5. 'graph' → logprob: -4.545780658721924
    6. 'for' → logprob: -5.045780658721924
    7. ' for' → logprob: -5.045780658721924
    8. ' graph' → logprob: -5.795780658721924
    9. ' #' → logprob: -5.795780658721924
    10. 'from' → logprob: -6.420780658721924

Token 2728: ' direction' (ID: 9262)
  Prédit: '_edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_edge' → logprob: -1.3651317358016968
    2. '_direction' → logprob: -1.7401317358016968
    3. ')' → logprob: -1.9901317358016968
    4. '_edges' → logprob: -2.7401318550109863
    5. '   ' → logprob: -3.2401318550109863
    6. '_' → logprob: -3.3651318550109863
    7. 'from' → logprob: -3.6151318550109863
    8. '           ' → logprob: -4.115131855010986
    9. ' =' → logprob: -4.240131855010986
    10. ' from' → logprob: -4.240131855010986

Token 2729: ' is' (ID: 382)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -2.1465518474578857
    2. '           ' → logprob: -2.1465518474578857
    3. 'from' → logprob: -2.2715518474578857
    4. ' =' → logprob: -2.3965518474578857
    5. ' graph' → logprob: -2.5215518474578857
    6. ' from' → logprob: -2.6465518474578857
    7. 'graph' → logprob: -2.7715518474578857
    8. '[
' → logprob: -2.8965518474578857
    9. '[' → logprob: -3.3965518474578857
    10. ')' → logprob: -3.7715518474578857

Token 2730: ' from' (ID: 591)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.09453433752059937
    2. ' (' → logprob: -2.719534397125244
    3. 'touch' → logprob: -5.094534397125244
    4. 'from' → logprob: -5.219534397125244
    5. '(st' → logprob: -5.344534397125244
    6. ' touch' → logprob: -5.844534397125244
    7. ' from' → logprob: -7.094534397125244
    8. ' street' → logprob: -7.094534397125244
    9. 'street' → logprob: -7.719534397125244
    10. '[t' → logprob: -7.844534397125244

Token 2731: ' node' (ID: 4596)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.5325958728790283
    2. 'touch' → logprob: -0.9075958728790283
    3. ' street' → logprob: -5.032595634460449
    4. ' touch' → logprob: -6.157595634460449
    5. 'open' → logprob: -7.782595634460449
    6. 'other' → logprob: -8.90759563446045
    7. 'stre' → logprob: -9.90759563446045
    8. '(st' → logprob: -10.40759563446045
    9. '(' → logprob: -10.90759563446045
    10. '   ' → logprob: -10.90759563446045

Token 2732: ' on' (ID: 402)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.029583046212792397
    2. ' touch' → logprob: -4.029582977294922
    3. 'street' → logprob: -4.654582977294922
    4. ' street' → logprob: -6.654582977294922
    5. '_touch' → logprob: -8.279582977294922
    6. '   ' → logprob: -9.904582977294922
    7. '(st' → logprob: -10.029582977294922
    8. 'other' → logprob: -10.529582977294922
    9. 'open' → logprob: -11.154582977294922
    10. '(s' → logprob: -11.279582977294922

Token 2733: ' obt' (ID: 5564)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -1.032193899154663
    2. 'obt' → logprob: -1.157193899154663
    3. 'touch' → logprob: -2.282193899154663
    4. 'which' → logprob: -2.907193899154663
    5. 'acute' → logprob: -3.032193899154663
    6. 'street' → logprob: -3.157193899154663
    7. ' the' → logprob: -3.907193899154663
    8. ' obt' → logprob: -4.407194137573242
    9. '   ' → logprob: -4.782194137573242
    10. ' which' → logprob: -4.907194137573242

Token 2734: 'use' (ID: 1821)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.21395845711231232
    2. 'use' → logprob: -1.713958501815796
    3. 'u' → logprob: -5.213958263397217
    4. '```' → logprob: -5.713958263397217
    5. ')' → logprob: -7.713958263397217
    6. '       ' → logprob: -7.838958263397217
    7. '   ' → logprob: -8.088958740234375
    8. 's' → logprob: -8.088958740234375
    9. '``' → logprob: -8.213958740234375
    10. '`' → logprob: -9.213958740234375

Token 2735: ' side' (ID: 4307)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4756982922554016
    2. '_angle' → logprob: -1.1006982326507568
    3. '_side' → logprob: -4.475698471069336
    4. '```' → logprob: -4.600698471069336
    5. 'angle' → logprob: -5.100698471069336
    6. ')' → logprob: -5.850698471069336
    7. '`' → logprob: -5.975698471069336
    8. ' _' → logprob: -6.350698471069336
    9. '"' → logprob: -6.475698471069336
    10. ')_' → logprob: -6.600698471069336

Token 2736: ' to' (ID: 316)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.50546795129776
    2. '
' → logprob: -2.3804678916931152
    3. ')' → logprob: -2.8804678916931152
    4. '[' → logprob: -3.0054678916931152
    5. '[
' → logprob: -3.7554678916931152
    6. '_' → logprob: -4.005467891693115
    7. ',' → logprob: -4.130467891693115
    8. '   ' → logprob: -4.255467891693115
    9. '       ' → logprob: -4.255467891693115
    10. ')
' → logprob: -4.505467891693115

Token 2737: ' node' (ID: 4596)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.41954711079597473
    2. 'acute' → logprob: -1.6695470809936523
    3. 'street' → logprob: -2.4195470809936523
    4. 'the' → logprob: -3.6695470809936523
    5. 'node' → logprob: -3.9195470809936523
    6. 'open' → logprob: -4.669547080993652
    7. ' street' → logprob: -5.669547080993652
    8. ' acute' → logprob: -6.044547080993652
    9. ' touch' → logprob: -6.419547080993652
    10. 'other' → logprob: -6.669547080993652

Token 2738: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.25760042667388916
    2. '
' → logprob: -3.1326003074645996
    3. '               ' → logprob: -3.7576003074645996
    4. '[
' → logprob: -3.7576003074645996
    5. '[' → logprob: -3.8826003074645996
    6. '       ' → logprob: -4.3826003074646
    7. ')' → logprob: -4.6326003074646
    8. ')
' → logprob: -4.7576003074646
    9. ' (' → logprob: -4.8826003074646
    10. '                   ' → logprob: -5.2576003074646

Token 2739: ' acute' (ID: 43944)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.049252014607191086
    2. 'acute' → logprob: -3.7992520332336426
    3. ' touch' → logprob: -3.7992520332336426
    4. ' acute' → logprob: -6.424252033233643
    5. 'sign' → logprob: -7.299252033233643
    6. 'open' → logprob: -7.799252033233643
    7. 'obt' → logprob: -8.424251556396484
    8. 'street' → logprob: -9.299251556396484
    9. ' sign' → logprob: -9.924251556396484
    10. ' street' → logprob: -10.299251556396484

Token 2740: ' side' (ID: 4307)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31744059920310974
    2. '_' → logprob: -2.1924405097961426
    3. '_
' → logprob: -2.5674405097961426
    4. '               ' → logprob: -4.692440509796143
    5. '       ' → logprob: -4.692440509796143
    6. ')' → logprob: -4.817440509796143
    7. '
' → logprob: -5.192440509796143
    8. ' _' → logprob: -5.192440509796143
    9. '[' → logprob: -5.442440509796143
    10. ')
' → logprob: -5.567440509796143

Token 2741: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.15195579826831818
    2. '
' → logprob: -3.2769558429718018
    3. '               ' → logprob: -4.151955604553223
    4. '[' → logprob: -4.276955604553223
    5. ' if' → logprob: -4.526955604553223
    6. ')' → logprob: -4.776955604553223
    7. ',' → logprob: -5.151955604553223
    8. '[
' → logprob: -5.151955604553223
    9. ':
' → logprob: -5.401955604553223
    10. '       ' → logprob: -5.401955604553223

Token 2742: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0641770288348198
    2. '       ' → logprob: -4.6891770362854
    3. '
' → logprob: -4.9391770362854
    4. '               ' → logprob: -5.3141770362854
    5. '\' → logprob: -5.4391770362854
    6. '[' → logprob: -5.4391770362854
    7. '[
' → logprob: -5.4391770362854
    8. '.' → logprob: -5.5641770362854
    9. ',' → logprob: -5.6891770362854
    10. ')' → logprob: -6.0641770362854

Token 2743: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1300245225429535
    2. 'if' → logprob: -2.3800244331359863
    3. '#' (adapté à ' #') → logprob: -4.505024433135986
    4. ' if' → logprob: -4.505024433135986
    5. '               ' → logprob: -6.130024433135986
    6. 'from' → logprob: -7.005024433135986
    7. 'for' → logprob: -7.630024433135986
    8. 'angle' → logprob: -7.630024433135986
    9. '       ' → logprob: -7.880024433135986
    10. 'sign' → logprob: -8.005024909973145

Token 2744: ' So' (ID: 2632)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.24817921221256256
    2. 'if' → logprob: -2.1231791973114014
    3. ' if' → logprob: -2.4981791973114014
    4. '#' → logprob: -5.1231794357299805
    5. '               ' → logprob: -5.7481794357299805
    6. '
' → logprob: -5.9981794357299805
    7. '       ' → logprob: -7.3731794357299805
    8. ' #' → logprob: -7.3731794357299805
    9. 'sign' → logprob: -7.6231794357299805
    10. 'direction' → logprob: -7.7481794357299805

Token 2745: ' we' (ID: 581)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11329735815525055
    2. 'for' → logprob: -3.113297462463379
    3. '#' → logprob: -3.238297462463379
    4. '           ' → logprob: -4.113297462463379
    5. ' if' → logprob: -6.113297462463379
    6. 'touch' → logprob: -6.863297462463379
    7. '               ' → logprob: -6.988297462463379
    8. 'allowed' → logprob: -7.988297462463379
    9. 'sign' → logprob: -8.113297462463379
    10. 'street' → logprob: -8.238297462463379

Token 2746: ' consider' (ID: 3331)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.0184565782546997
    2. ' need' → logprob: -1.7684565782546997
    3. 'remove' → logprob: -2.51845645904541
    4. ' can' → logprob: -2.76845645904541
    5. ' continue' → logprob: -3.01845645904541
    6. ' remove' → logprob: -3.26845645904541
    7. 'continue' → logprob: -3.39345645904541
    8. ' #' → logprob: -3.39345645904541
    9. 'for' → logprob: -3.39345645904541
    10. '[' → logprob: -3.51845645904541

Token 2747: ' the' (ID: 290)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6665496826171875
    2. '           ' → logprob: -1.0415496826171875
    3. '#' → logprob: -2.5415496826171875
    4. 'angle' → logprob: -3.5415496826171875
    5. 'sign' → logprob: -4.9165496826171875
    6. '               ' → logprob: -4.9165496826171875
    7. 'c' → logprob: -5.4165496826171875
    8. ' if' → logprob: -6.2915496826171875
    9. 'v' → logprob: -7.0415496826171875
    10. 'd' → logprob: -7.4165496826171875

Token 2748: ' edge' (ID: 11165)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3839735686779022
    2. 'sign' → logprob: -2.3839735984802246
    3. 'if' → logprob: -2.6339735984802246
    4. 'for' → logprob: -2.8839735984802246
    5. 'angle' → logprob: -3.6339735984802246
    6. 'touch' → logprob: -4.133973598480225
    7. 'direction' → logprob: -4.508973598480225
    8. 'street' → logprob: -4.883973598480225
    9. 'other' → logprob: -5.758973598480225
    10. ' sign' → logprob: -5.883973598480225

Token 2749: ' between' (ID: 2870)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.5476348996162415
    2. ' (' → logprob: -1.9226348400115967
    3. ' from' → logprob: -2.0476348400115967
    4. '(s' → logprob: -3.0476348400115967
    5. 's' → logprob: -3.2976348400115967
    6. '(' → logprob: -4.047635078430176
    7. '[(' → logprob: -5.297635078430176
    8. '(u' → logprob: -5.922635078430176
    9. ' directions' → logprob: -5.922635078430176
    10. '(p' → logprob: -6.047635078430176

Token 2750: ' touch' (ID: 7381)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.00025776340044103563
    2. ' touch' → logprob: -8.62525749206543
    3. 'street' → logprob: -9.50025749206543
    4. 'open' → logprob: -13.25025749206543
    5. '   ' → logprob: -14.87525749206543
    6. ' street' → logprob: -15.37525749206543
    7. 'graph' → logprob: -15.37525749206543
    8. ' ' → logprob: -15.62525749206543
    9. 'tou' → logprob: -16.00025749206543
    10. '```' → logprob: -16.00025749206543

Token 2751: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.29208895564079285
    2. ' and' → logprob: -1.6670889854431152
    3. ',' → logprob: -2.7920889854431152
    4. 'to' → logprob: -6.417088985443115
    5. ' to' → logprob: -7.417088985443115
    6. ',
' → logprob: -7.792088985443115
    7. ',to' → logprob: -8.792088508605957
    8. ' ,' → logprob: -9.292088508605957
    9. ',t' → logprob: -9.792088508605957
    10. ')' → logprob: -10.042088508605957

Token 2752: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.0017619287827983499
    2. ' street' → logprob: -6.3767619132995605
    3. 'open' → logprob: -9.876762390136719
    4. 'touch' → logprob: -12.501762390136719
    5. 'stre' → logprob: -12.876762390136719
    6. 'other' → logprob: -13.376762390136719
    7. 'stroke' → logprob: -15.501762390136719
    8. '   ' → logprob: -16.37676239013672
    9. ' open' → logprob: -16.87676239013672
    10. ' ' → logprob: -17.00176239013672

Token 2753: '_other' (ID: 70088)
  Prédit: '_other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_other' → logprob: -0.0001468067930545658
    2. 'other' → logprob: -9.125146865844727
    3. '           ' → logprob: -10.375146865844727
    4. '1' → logprob: -13.750146865844727
    5. 'Other' → logprob: -14.000146865844727
    6. '#' → logprob: -14.375146865844727
    7. '```' → logprob: -14.750146865844727
    8. '_out' → logprob: -14.875146865844727
    9. '       ' → logprob: -14.875146865844727
    10. '   ' → logprob: -15.000146865844727

Token 2754: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0677989274263382
    2. 'if' → logprob: -3.4427988529205322
    3. ' if' → logprob: -3.6927988529205322
    4. '#' → logprob: -4.942799091339111
    5. 'd' → logprob: -8.067798614501953
    6. '       ' → logprob: -8.567798614501953
    7. ' #' → logprob: -8.692798614501953
    8. '
' → logprob: -9.192798614501953
    9. '   ' → logprob: -9.442798614501953
    10. '               ' → logprob: -9.442798614501953

Token 2755: ' orient' (ID: 13198)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.37075087428092957
    2. '           ' → logprob: -1.870750904083252
    3. '#' → logprob: -2.745750904083252
    4. 'if' → logprob: -3.245750904083252
    5. ' forbidden' → logprob: -3.620750904083252
    6. ' graph' → logprob: -4.620750904083252
    7. ' #' → logprob: -5.245750904083252
    8. 'graph' → logprob: -5.620750904083252
    9. ' continue' → logprob: -6.620750904083252
    10. ' c' → logprob: -7.370750904083252

Token 2756: ':
' (ID: 734)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.5103201270103455
    2. 'ation' → logprob: -1.1353201866149902
    3. 'ion' → logprob: -2.7603201866149902
    4. 'ing' → logprob: -5.63532018661499
    5. 'd' → logprob: -5.88532018661499
    6. '
' → logprob: -6.51032018661499
    7. 's' → logprob: -6.76032018661499
    8. '[' → logprob: -7.01032018661499
    9. 'e' → logprob: -7.26032018661499
    10. '   ' → logprob: -7.38532018661499

Token 2757: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8557868003845215
    2. ' if' → logprob: -0.8557868003845215
    3. 'if' → logprob: -1.9807868003845215
    4. 'graph' → logprob: -5.7307868003845215
    5. ' graph' → logprob: -6.1057868003845215
    6. 'for' → logprob: -6.4807868003845215
    7. '#' → logprob: -7.1057868003845215
    8. ' for' → logprob: -7.2307868003845215
    9. '               ' → logprob: -7.7307868003845215
    10. 'touch' → logprob: -7.7307868003845215

Token 2758: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07284603267908096
    2. '           ' → logprob: -2.947845935821533
    3. 'c' → logprob: -5.197845935821533
    4. ' if' → logprob: -5.322845935821533
    5. 'angle' → logprob: -5.572845935821533
    6. '#' (adapté à ' #') → logprob: -6.447845935821533
    7. 'for' → logprob: -6.822845935821533
    8. 'abs' → logprob: -8.197846412658691
    9. 'sign' → logprob: -8.947846412658691
    10. ' c' → logprob: -9.072846412658691

Token 2759: ' Determine' (ID: 57076)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.023503202944993973
    2. 'for' → logprob: -3.898503303527832
    3. '           ' → logprob: -6.773503303527832
    4. '#' → logprob: -6.773503303527832
    5. 'c' → logprob: -9.023503303527832
    6. 'allowed' → logprob: -9.148503303527832
    7. 'If' → logprob: -9.273503303527832
    8. 'd' → logprob: -9.898503303527832
    9. 'from' → logprob: -10.023503303527832
    10. 'import' → logprob: -10.148503303527832

Token 2760: ' position' (ID: 4010)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3582073748111725
    2. '           ' → logprob: -2.2332074642181396
    3. 'sign' → logprob: -2.9832074642181396
    4. 'angle' → logprob: -3.1082074642181396
    5. '#' → logprob: -3.6082074642181396
    6. 'for' → logprob: -4.6082072257995605
    7. 'v' → logprob: -4.6082072257995605
    8. 'vec' → logprob: -4.7332072257995605
    9. '               ' → logprob: -4.8582072257995605
    10. 'dot' → logprob: -5.3582072257995605

Token 2761: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4842710494995117
    2. 'if' → logprob: -2.4842710494995117
    3. 'v' → logprob: -2.9842710494995117
    4. ' if' → logprob: -3.1092710494995117
    5. '#' → logprob: -3.6092710494995117
    6. 'import' → logprob: -3.7342710494995117
    7. 'sign' → logprob: -3.7342710494995117
    8. 'from' → logprob: -4.109271049499512
    9. '   ' → logprob: -4.609271049499512
    10. '
' → logprob: -4.609271049499512

Token 2762: ' obt' (ID: 5564)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.6672954559326172
    2. 'sign' → logprob: -2.042295455932617
    3. 'open' → logprob: -2.292295455932617
    4. ' touch' → logprob: -2.542295455932617
    5. ' open' → logprob: -2.792295455932617
    6. ' sign' → logprob: -3.542295455932617
    7. 'v' → logprob: -3.667295455932617
    8. ' street' → logprob: -3.917295455932617
    9. 'street' → logprob: -4.042295455932617
    10. 'the' → logprob: -5.667295455932617

Token 2763: 'use' (ID: 1821)
  Prédit: 'use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.0007923588855192065
    2. '```' → logprob: -8.000792503356934
    3. '
' → logprob: -9.250792503356934
    4. '(use' → logprob: -9.750792503356934
    5. '       ' → logprob: -10.250792503356934
    6. '   ' → logprob: -10.250792503356934
    7. '1' → logprob: -10.250792503356934
    8. '_use' → logprob: -10.375792503356934
    9. '``' → logprob: -11.375792503356934
    10. 'u' → logprob: -11.375792503356934

Token 2764: ' and' (ID: 326)
  Prédit: '_angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.45888999104499817
    2. '_' → logprob: -1.0838899612426758
    3. '_side' → logprob: -4.208889961242676
    4. ' angle' → logprob: -5.208889961242676
    5. 'angle' → logprob: -5.708889961242676
    6. ' _' → logprob: -5.708889961242676
    7. ')' → logprob: -7.708889961242676
    8. '_
' → logprob: -8.208889961242676
    9. '_s' → logprob: -8.458889961242676
    10. ' side' → logprob: -8.708889961242676

Token 2765: ' acute' (ID: 43944)
  Prédit: 'acute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acute' → logprob: -0.0019969160202890635
    2. ' acute' → logprob: -6.251996994018555
    3. '#' → logprob: -11.001996994018555
    4. '   ' → logprob: -11.001996994018555
    5. 'ac' → logprob: -12.126996994018555
    6. '
' → logprob: -12.501996994018555
    7. 'touch' → logprob: -12.501996994018555
    8. ' ' → logprob: -12.626996994018555
    9. 'street' → logprob: -12.626996994018555
    10. '```' → logprob: -12.626996994018555

Token 2766: ' side' (ID: 4307)
  Prédit: '_angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.9815481305122375
    2. '           ' → logprob: -1.1065480709075928
    3. ' if' → logprob: -2.6065480709075928
    4. ')' → logprob: -3.1065480709075928
    5. 'angle' → logprob: -3.4815480709075928
    6. ' _' → logprob: -3.7315480709075928
    7. '_sign' → logprob: -3.9815480709075928
    8. ' angle' → logprob: -4.106548309326172
    9. '_' → logprob: -4.356548309326172
    10. '
' → logprob: -4.606548309326172

Token 2767: ' around' (ID: 2846)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12445725500583649
    2. ' if' → logprob: -2.624457359313965
    3. 'if' → logprob: -3.874457359313965
    4. 'angle' → logprob: -4.874457359313965
    5. ' angle' → logprob: -6.124457359313965
    6. ' c' → logprob: -6.124457359313965
    7. 'import' → logprob: -6.624457359313965
    8. '       ' → logprob: -6.874457359313965
    9. 'c' → logprob: -6.999457359313965
    10. 'i' → logprob: -6.999457359313965

Token 2768: ' the' (ID: 290)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.403244137763977
    2. ' if' → logprob: -1.403244137763977
    3. ')' → logprob: -2.2782440185546875
    4. ')
' → logprob: -3.1532440185546875
    5. 'if' → logprob: -3.2782440185546875
    6. 'graph' → logprob: -3.2782440185546875
    7. 'touch' → logprob: -3.5282440185546875
    8. 'v' → logprob: -3.7782440185546875
    9. ' graph' → logprob: -3.7782440185546875
    10. ' )
' → logprob: -3.9032440185546875

Token 2769: ' node' (ID: 4596)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.005803416948765516
    2. 'sign' → logprob: -5.75580358505249
    3. ' touch' → logprob: -6.25580358505249
    4. 'node' → logprob: -8.505803108215332
    5. 'street' → logprob: -8.630803108215332
    6. '```' → logprob: -9.505803108215332
    7. ' sign' → logprob: -10.005803108215332
    8. 'point' → logprob: -10.005803108215332
    9. '_touch' → logprob: -10.755803108215332
    10. 'intersection' → logprob: -11.130803108215332

Token 2770: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1695188283920288
    2. ' if' → logprob: -2.4195189476013184
    3. '#' → logprob: -3.2945189476013184
    4. ' #' → logprob: -5.169518947601318
    5. '
' → logprob: -5.294518947601318
    6. 'if' → logprob: -5.794518947601318
    7. '       ' → logprob: -6.044518947601318
    8. '               ' → logprob: -6.044518947601318
    9. 'v' → logprob: -6.169518947601318
    10. ')' → logprob: -6.794518947601318

Token 2771: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5719786286354065
    2. ' if' → logprob: -1.0719785690307617
    3. '#' → logprob: -2.8219785690307617
    4. 'if' → logprob: -5.071978569030762
    5. ',' → logprob: -5.571978569030762
    6. ' c' → logprob: -5.696978569030762
    7. 'v' → logprob: -5.696978569030762
    8. '
' → logprob: -5.821978569030762
    9. ' #' → logprob: -6.196978569030762
    10. '```' → logprob: -6.821978569030762

Token 2772: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6015660166740417
    2. 'if' → logprob: -1.6015660762786865
    3. ' if' → logprob: -2.2265660762786865
    4. 'angle' → logprob: -2.3515660762786865
    5. '#' (adapté à ' #') → logprob: -3.8515660762786865
    6. 'sign' → logprob: -4.726565837860107
    7. ' c' → logprob: -5.476565837860107
    8. ' angle' → logprob: -5.726565837860107
    9. 'c' → logprob: -6.351565837860107
    10. 't' → logprob: -6.976565837860107

Token 2773: ' The' (ID: 623)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6824014782905579
    2. '           ' → logprob: -1.057401418685913
    3. 'angle' → logprob: -2.682401418685913
    4. ' if' → logprob: -2.807401418685913
    5. '#' → logprob: -5.432401657104492
    6. 'sign' → logprob: -5.682401657104492
    7. 'import' → logprob: -6.182401657104492
    8. 'c' → logprob: -6.307401657104492
    9. 'd' → logprob: -6.807401657104492
    10. ' angle' → logprob: -7.182401657104492

Token 2774: ' edge' (ID: 11165)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1694790124893188
    2. 'sign' → logprob: -1.9194790124893188
    3. 'c' → logprob: -2.1694788932800293
    4. '           ' → logprob: -2.5444788932800293
    5. 'angle' → logprob: -2.9194788932800293
    6. ' sign' → logprob: -3.0444788932800293
    7. 'if' → logprob: -3.1694788932800293
    8. ' c' → logprob: -3.7944788932800293
    9. ' angle' → logprob: -4.044478893280029
    10. '
' → logprob: -4.044478893280029

Token 2775: ' between' (ID: 2870)
  Prédit: '_len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_len' → logprob: -0.7627562284469604
    2. '           ' → logprob: -1.7627562284469604
    3. 's' → logprob: -2.01275634765625
    4. 'from' → logprob: -3.13775634765625
    5. '#' → logprob: -3.38775634765625
    6. ')' → logprob: -4.63775634765625
    7. ' is' → logprob: -4.63775634765625
    8. '_length' → logprob: -4.88775634765625
    9. 'direction' → logprob: -4.88775634765625
    10. 'length' → logprob: -5.01275634765625

Token 2776: ' touch' (ID: 7381)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.0007557853823527694
    2. ' touch' → logprob: -7.250755786895752
    3. 'street' → logprob: -10.375755310058594
    4. 'open' → logprob: -11.375755310058594
    5. 'sign' → logprob: -14.250755310058594
    6. 'graph' → logprob: -14.625755310058594
    7. ' street' → logprob: -14.625755310058594
    8. '   ' → logprob: -14.750755310058594
    9. '```' → logprob: -15.000755310058594
    10. '_touch' → logprob: -15.500755310058594

Token 2777: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.38521865010261536
    2. ',' → logprob: -1.885218620300293
    3. 'and' → logprob: -2.135218620300293
    4. ' to' → logprob: -3.260218620300293
    5. 'to' → logprob: -5.635218620300293
    6. ',
' → logprob: -6.760218620300293
    7. ' ,' → logprob: -6.885218620300293
    8. '           ' → logprob: -7.260218620300293
    9. '#' → logprob: -7.385218620300293
    10. ' (' → logprob: -7.510218620300293

Token 2778: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.0007337473216466606
    2. ' street' → logprob: -7.375733852386475
    3. 'open' → logprob: -9.625733375549316
    4. 'touch' → logprob: -10.750733375549316
    5. 'stre' → logprob: -11.375733375549316
    6. 'other' → logprob: -13.000733375549316
    7. 'sign' → logprob: -13.625733375549316
    8. '   ' → logprob: -13.750733375549316
    9. ' ' → logprob: -14.250733375549316
    10. '```' → logprob: -14.875733375549316

Token 2779: '_other' (ID: 70088)
  Prédit: '_other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_other' → logprob: -9.496052371105179e-05
    2. 'other' → logprob: -9.50009536743164
    3. 'Other' → logprob: -11.75009536743164
    4. '           ' → logprob: -12.12509536743164
    5. '   ' → logprob: -13.87509536743164
    6. '[' → logprob: -13.87509536743164
    7. '_OTHER' → logprob: -14.12509536743164
    8. '```' → logprob: -15.00009536743164
    9. ' other' → logprob: -15.25009536743164
    10. '_out' → logprob: -15.25009536743164

Token 2780: ' in' (ID: 306)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3408416211605072
    2. ' if' → logprob: -1.8408416509628296
    3. '#' → logprob: -3.09084153175354
    4. 'if' → logprob: -3.46584153175354
    5. ')' → logprob: -4.465841770172119
    6. '[' → logprob: -4.965841770172119
    7. '       ' → logprob: -5.340841770172119
    8. '
' → logprob: -5.590841770172119
    9. '[
' → logprob: -5.590841770172119
    10. ',' → logprob: -5.715841770172119

Token 2781: ' both' (ID: 2973)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0035691845696419477
    2. 'the' → logprob: -6.50356912612915
    3. ' graph' → logprob: -6.75356912612915
    4. 'street' → logprob: -8.253569602966309
    5. 'touch' → logprob: -8.878569602966309
    6. 'sign' → logprob: -9.003569602966309
    7. 'both' → logprob: -9.128569602966309
    8. 'question' → logprob: -9.503569602966309
    9. 'se' → logprob: -9.878569602966309
    10. '	graph' → logprob: -10.628569602966309

Token 2782: ' directions' (ID: 24921)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.145517498254776
    2. ' directions' → logprob: -2.020517587661743
    3. ')' → logprob: -6.770517349243164
    4. 'direction' → logprob: -7.020517349243164
    5. '(' → logprob: -8.145517349243164
    6. 's' → logprob: -9.770517349243164
    7. '-dire' → logprob: -9.895517349243164
    8. ' (' → logprob: -10.145517349243164
    9. 'irections' → logprob: -10.270517349243164
    10. 'ways' → logprob: -10.395517349243164

Token 2783: ' possibly' (ID: 14836)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10528042912483215
    2. ' if' → logprob: -2.6052803993225098
    3. 'if' → logprob: -4.73028039932251
    4. '
' → logprob: -4.98028039932251
    5. '#' → logprob: -5.73028039932251
    6. '       ' → logprob: -6.35528039932251
    7. '               ' → logprob: -6.73028039932251
    8. ')' → logprob: -7.35528039932251
    9. '   ' → logprob: -7.48028039932251
    10. ',' → logprob: -8.230280876159668

Token 2784: ' allowed' (ID: 9279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8514509201049805
    2. ' if' → logprob: -0.8514509201049805
    3. 'if' → logprob: -2.7264509201049805
    4. '#' → logprob: -3.1014509201049805
    5. ')' → logprob: -4.8514509201049805
    6. '[
' → logprob: -5.3514509201049805
    7. '[' → logprob: -6.1014509201049805
    8. '               ' → logprob: -6.1014509201049805
    9. '       ' → logprob: -6.2264509201049805
    10. '
' → logprob: -6.3514509201049805

Token 2785: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12656432390213013
    2. ' if' → logprob: -2.5015642642974854
    3. 'if' → logprob: -3.7515642642974854
    4. '#' → logprob: -5.2515645027160645
    5. '
' → logprob: -6.1265645027160645
    6. ',' → logprob: -6.6265645027160645
    7. '.' → logprob: -7.1265645027160645
    8. '[' → logprob: -8.001564025878906
    9. ')' → logprob: -8.001564025878906
    10. '<|end|>' → logprob: -8.376564025878906

Token 2786: ' restrict' (ID: 33293)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7590547800064087
    2. ' if' → logprob: -0.8840547800064087
    3. '#' → logprob: -2.509054660797119
    4. 'if' → logprob: -4.634054660797119
    5. ' #' → logprob: -5.259054660797119
    6. ' continue' → logprob: -5.259054660797119
    7. '               ' → logprob: -5.384054660797119
    8. ' but' → logprob: -6.259054660797119
    9. 'continue' → logprob: -6.509054660797119
    10. '       ' → logprob: -7.009054660797119

Token 2787: ' direction' (ID: 9262)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.12615720927715302
    2. 'if' → logprob: -2.376157283782959
    3. ' if' → logprob: -4.001157283782959
    4. '#' → logprob: -5.626157283782959
    5. 'for' → logprob: -6.376157283782959
    6. '               ' → logprob: -7.876157283782959
    7. '
' → logprob: -7.876157283782959
    8. '       ' → logprob: -8.1261568069458
    9. ' #' → logprob: -8.2511568069458
    10. '   ' → logprob: -8.8761568069458

Token 2788: ' depending' (ID: 14537)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.32805612683296204
    2. ' if' → logprob: -1.4530560970306396
    3. '
' → logprob: -3.5780560970306396
    4. 'if' → logprob: -5.203056335449219
    5. '               ' → logprob: -6.453056335449219
    6. '#' → logprob: -6.703056335449219
    7. '   ' → logprob: -6.828056335449219
    8. ' =' → logprob: -6.828056335449219
    9. '       ' → logprob: -7.078056335449219
    10. '[
' → logprob: -7.203056335449219

Token 2789: ' on' (ID: 402)
  Prédit: ' on'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' on' → logprob: -0.2950557470321655
    2. '           ' → logprob: -1.6700557470321655
    3. ' c' → logprob: -3.920055866241455
    4. ' if' → logprob: -3.920055866241455
    5. ')' → logprob: -5.295055866241455
    6. 'on' → logprob: -5.795055866241455
    7. ' (' → logprob: -6.045055866241455
    8. ' the' → logprob: -6.295055866241455
    9. '               ' → logprob: -6.420055866241455
    10. 'c' → logprob: -6.545055866241455

Token 2790: ' sign' (ID: 2232)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.5300847291946411
    2. 'c' → logprob: -1.0300847291946411
    3. 'sign' → logprob: -3.6550846099853516
    4. 'the' → logprob: -3.9050846099853516
    5. ' angle' → logprob: -5.655084609985352
    6. 'cos' → logprob: -6.030084609985352
    7. 'this' → logprob: -7.530084609985352
    8. 'angles' → logprob: -7.530084609985352
    9. ' c' → logprob: -8.155084609985352
    10. 'which' → logprob: -8.405084609985352

Token 2791: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3064415752887726
    2. ' if' → logprob: -1.5564415454864502
    3. 'if' → logprob: -3.93144154548645
    4. '
' → logprob: -4.056441783905029
    5. '               ' → logprob: -5.806441783905029
    6. ' c' → logprob: -5.806441783905029
    7. '       ' → logprob: -5.931441783905029
    8. '   ' → logprob: -6.556441783905029
    9. '#' → logprob: -7.181441783905029
    10. ',' → logprob: -7.681441783905029

Token 2792: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21150557696819305
    2. 'if' → logprob: -1.8365055322647095
    3. ' if' → logprob: -3.961505651473999
    4. '#' → logprob: -5.46150541305542
    5. 'for' → logprob: -5.83650541305542
    6. '   ' → logprob: -6.46150541305542
    7. '       ' → logprob: -6.71150541305542
    8. '               ' → logprob: -7.33650541305542
    9. 'graph' → logprob: -7.46150541305542
    10. '
' → logprob: -8.211505889892578

Token 2793: ' #' (ID: 1069)
  Prédit: 'angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angle' → logprob: -0.5349739193916321
    2. 'if' → logprob: -1.2849738597869873
    3. '           ' → logprob: -2.0349738597869873
    4. '#' (adapté à ' #') → logprob: -6.284974098205566
    5. 'ang' → logprob: -6.284974098205566
    6. 'import' → logprob: -6.784974098205566
    7. 'from' → logprob: -7.659974098205566
    8. '   ' → logprob: -8.284974098205566
    9. 'abs' → logprob: -8.534974098205566
    10. 'dist' → logprob: -8.534974098205566

Token 2794: ' We' (ID: 1416)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5145905017852783
    2. '           ' → logprob: -1.0145905017852783
    3. ' if' → logprob: -4.139590263366699
    4. 'angle' → logprob: -4.764590263366699
    5. '#' → logprob: -4.889590263366699
    6. 'c' → logprob: -6.264590263366699
    7. 'for' → logprob: -6.764590263366699
    8. '               ' → logprob: -7.014590263366699
    9. 'sign' → logprob: -7.264590263366699
    10. '       ' → logprob: -8.0145902633667

Token 2795: ' thus' (ID: 13972)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1516213417053223
    2. ' need' → logprob: -1.2766213417053223
    3. ' continue' → logprob: -1.9016213417053223
    4. ' #' → logprob: -2.5266213417053223
    5. 'for' → logprob: -3.1516213417053223
    6. ' remove' → logprob: -3.5266213417053223
    7. ' can' → logprob: -4.276621341705322
    8. ' for' → logprob: -4.401621341705322
    9. 'need' → logprob: -4.401621341705322
    10. 'continue' → logprob: -4.401621341705322

Token 2796: ' forbid' (ID: 164447)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7743591070175171
    2. 'remove' → logprob: -1.149359107017517
    3. 'continue' → logprob: -2.6493592262268066
    4. 'need' → logprob: -3.0243592262268066
    5. 'for' → logprob: -3.2743592262268066
    6. '           ' → logprob: -3.6493592262268066
    7. ' #' → logprob: -4.774359226226807
    8. '       ' → logprob: -5.149359226226807
    9. ' need' → logprob: -5.274359226226807
    10. ' remove' → logprob: -5.649359226226807

Token 2797: ' movement' (ID: 12772)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.6414724588394165
    2. ' graph' → logprob: -1.5164724588394165
    3. 'the' → logprob: -3.141472339630127
    4. ' the' → logprob: -3.266472339630127
    5. ' (' → logprob: -3.516472339630127
    6. ' one' → logprob: -4.016472339630127
    7. 'from' → logprob: -4.266472339630127
    8. '(graph' → logprob: -4.391472339630127
    9. ' removing' → logprob: -4.641472339630127
    10. '_edges' → logprob: -4.891472339630127

Token 2798: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.12332653999328613
    2. '[(' → logprob: -2.248326539993286
    3. ' from' → logprob: -4.873326301574707
    4. '_from' → logprob: -6.748326301574707
    5. '[from' → logprob: -6.998326301574707
    6. '[' → logprob: -8.123326301574707
    7. '(from' → logprob: -9.123326301574707
    8. '[
' → logprob: -9.498326301574707
    9. ' (' → logprob: -9.748326301574707
    10. '_' → logprob: -10.623326301574707

Token 2799: ' obt' (ID: 5564)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.2343129962682724
    2. 'touch' → logprob: -2.2343130111694336
    3. ' street' → logprob: -2.9843130111694336
    4. '(st' → logprob: -3.1093130111694336
    5. ' touch' → logprob: -6.234313011169434
    6. 'stre' → logprob: -6.484313011169434
    7. 'open' → logprob: -7.484313011169434
    8. 'graph' → logprob: -7.609313011169434
    9. '(' → logprob: -7.859313011169434
    10. '(t' → logprob: -7.984313011169434

Token 2800: 'use' (ID: 1821)
  Prédit: 'use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.0021451469510793686
    2. 'u' → logprob: -6.377145290374756
    3. '_use' → logprob: -7.877145290374756
    4. '(use' → logprob: -11.002144813537598
    5. '```' → logprob: -11.127144813537598
    6. '
' → logprob: -11.627144813537598
    7. '   ' → logprob: -13.002144813537598
    8. '"use' → logprob: -13.002144813537598
    9. ''use' → logprob: -13.252144813537598
    10. 'user' → logprob: -13.252144813537598

Token 2801: ' angle' (ID: 16538)
  Prédit: '_angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.12375281751155853
    2. '_side' → logprob: -2.2487528324127197
    3. ')' → logprob: -6.123752593994141
    4. '_' → logprob: -6.498752593994141
    5. '```' → logprob: -6.498752593994141
    6. ' angle' → logprob: -6.623752593994141
    7. '
' → logprob: -7.248752593994141
    8. '_s' → logprob: -7.373752593994141
    9. '"' → logprob: -7.623752593994141
    10. '`' → logprob: -7.748752593994141

Token 2802: ' side' (ID: 4307)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4021011292934418
    2. '_side' → logprob: -1.5271011590957642
    3. ' _' → logprob: -2.9021010398864746
    4. ''' → logprob: -4.777101039886475
    5. ' side' → logprob: -4.902101039886475
    6. '"' → logprob: -5.027101039886475
    7. '_to' → logprob: -5.152101039886475
    8. '_s' → logprob: -5.402101039886475
    9. '```' → logprob: -5.402101039886475
    10. ' ' → logprob: -5.527101039886475

Token 2803: ' to' (ID: 316)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.0412980318069458
    2. ' (' → logprob: -2.0412979125976562
    3. ' to' → logprob: -2.0412979125976562
    4. '[(' → logprob: -2.4162979125976562
    5. ')' → logprob: -2.5412979125976562
    6. '_to' → logprob: -3.2912979125976562
    7. ',' → logprob: -3.5412979125976562
    8. 'from' → logprob: -3.7912979125976562
    9. '           ' → logprob: -4.416297912597656
    10. '.' → logprob: -4.541297912597656

Token 2804: ' acute' (ID: 43944)
  Prédit: 'acute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acute' → logprob: -0.000387535837944597
    2. ' acute' → logprob: -7.875387668609619
    3. 'street' → logprob: -12.750387191772461
    4. 'ac' → logprob: -13.000387191772461
    5. 'touch' → logprob: -14.250387191772461
    6. '   ' → logprob: -15.125387191772461
    7. 'obt' → logprob: -15.250387191772461
    8. ' street' → logprob: -15.500387191772461
    9. '```' → logprob: -15.750387191772461
    10. ' ' → logprob: -15.750387191772461

Token 2805: ' angle' (ID: 16538)
  Prédit: ' angle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' angle' → logprob: -0.7002657055854797
    2. 'angle' → logprob: -1.450265645980835
    3. '_angle' → logprob: -1.575265645980835
    4. '_side' → logprob: -3.700265645980835
    5. 'side' → logprob: -3.825265645980835
    6. ' side' → logprob: -4.575265884399414
    7. '```' → logprob: -6.825265884399414
    8. ' _' → logprob: -6.950265884399414
    9. '_' → logprob: -7.200265884399414
    10. '"' → logprob: -7.825265884399414

Token 2806: ' side' (ID: 4307)
  Prédit: '_side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -1.065009593963623
    2. ' side' → logprob: -1.315009593963623
    3. '_' → logprob: -3.315009593963623
    4. ',' → logprob: -3.440009593963623
    5. '
' → logprob: -3.690009593963623
    6. '_
' → logprob: -3.940009593963623
    7. '.
' → logprob: -3.940009593963623
    8. ' (' → logprob: -4.065009593963623
    9. '_s' → logprob: -4.065009593963623
    10. '.' → logprob: -4.065009593963623

Token 2807: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6957221031188965
    2. 'if' → logprob: -0.8207221031188965
    3. ' if' → logprob: -4.0707221031188965
    4. '#' → logprob: -4.4457221031188965
    5. 'angle' → logprob: -4.6957221031188965
    6. 'sign' → logprob: -5.1957221031188965
    7. 'for' → logprob: -5.4457221031188965
    8. 'c' → logprob: -5.6957221031188965
    9. 'from' → logprob: -5.6957221031188965
    10. 'direction' → logprob: -7.0707221031188965

Token 2808: ' the' (ID: 290)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.7372162938117981
    2. 'the' → logprob: -1.2372162342071533
    3. ' the' → logprob: -2.6122162342071533
    4. ' street' → logprob: -3.1122162342071533
    5. ' touch' → logprob: -3.4872162342071533
    6. 'edge' → logprob: -3.4872162342071533
    7. 'street' → logprob: -3.6122162342071533
    8. ' edge' → logprob: -4.862216472625732
    9. 'graph' → logprob: -4.987216472625732
    10. ' (' → logprob: -5.987216472625732

Token 2809: ' point' (ID: 2438)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.17477570474147797
    2. ' touch' → logprob: -2.6747756004333496
    3. 'street' → logprob: -3.4247756004333496
    4. ' street' → logprob: -3.7997756004333496
    5. 'sign' → logprob: -4.17477560043335
    6. ' sign' → logprob: -5.17477560043335
    7. 'edge' → logprob: -5.29977560043335
    8. 'graph' → logprob: -5.79977560043335
    9. ' edge' → logprob: -6.04977560043335
    10. 'node' → logprob: -7.42477560043335

Token 2810: ' touch' (ID: 7381)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23010589182376862
    2. ' if' → logprob: -2.1051058769226074
    3. 'if' → logprob: -3.9801058769226074
    4. '
' → logprob: -3.9801058769226074
    5. '#' → logprob: -4.230105876922607
    6. 'for' → logprob: -5.230105876922607
    7. '[
' → logprob: -5.730105876922607
    8. '               ' → logprob: -5.855105876922607
    9. '   ' → logprob: -5.855105876922607
    10. '       ' → logprob: -6.105105876922607

Token 2811: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5257903933525085
    2. 'if' → logprob: -1.7757904529571533
    3. '#' → logprob: -2.4007904529571533
    4. '
' → logprob: -2.9007904529571533
    5. ' if' → logprob: -3.4007904529571533
    6. 'for' → logprob: -3.7757904529571533
    7. '   ' → logprob: -4.775790214538574
    8. 'graph' → logprob: -5.150790214538574
    9. '[
' → logprob: -5.525790214538574
    10. '[' → logprob: -5.900790214538574

Token 2812: ' street' (ID: 12901)
  Prédit: ' street'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' street' → logprob: -0.818693220615387
    2. 'street' → logprob: -1.5686931610107422
    3. 'the' → logprob: -1.8186931610107422
    4. 'graph' → logprob: -2.693693161010742
    5. ' the' → logprob: -2.693693161010742
    6. ' graph' → logprob: -3.443693161010742
    7. 'touch' → logprob: -4.318693161010742
    8. ' touch' → logprob: -5.568693161010742
    9. 'edge' → logprob: -7.193693161010742
    10. '   ' → logprob: -7.693693161010742

Token 2813: ' edge' (ID: 11165)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07754276692867279
    2. 'if' → logprob: -2.702542781829834
    3. '#' → logprob: -5.702542781829834
    4. '
' → logprob: -6.327542781829834
    5. ' if' → logprob: -7.452542781829834
    6. 'from' → logprob: -7.452542781829834
    7. 'for' → logprob: -8.077542304992676
    8. '       ' → logprob: -8.827542304992676
    9. 'angle' → logprob: -8.827542304992676
    10. 'sign' → logprob: -9.077542304992676

Token 2814: ' between' (ID: 2870)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04470554739236832
    2. 'if' → logprob: -3.294705629348755
    3. '#' → logprob: -5.919705390930176
    4. 'from' → logprob: -6.544705390930176
    5. '
' → logprob: -7.044705390930176
    6. 'for' → logprob: -7.419705390930176
    7. 'angle' → logprob: -8.919705390930176
    8. ' if' → logprob: -9.044705390930176
    9. 'sign' → logprob: -9.044705390930176
    10. 'import' → logprob: -9.419705390930176

Token 2815: ' touch' (ID: 7381)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.07926087081432343
    2. ' touch' → logprob: -2.57926082611084
    3. 'street' → logprob: -8.82926082611084
    4. ' street' → logprob: -9.07926082611084
    5. '   ' → logprob: -10.82926082611084
    6. '```' → logprob: -10.95426082611084
    7. 't' → logprob: -11.57926082611084
    8. 'tou' → logprob: -11.70426082611084
    9. 'graph' → logprob: -11.95426082611084
    10. '_touch' → logprob: -11.95426082611084

Token 2816: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.30153995752334595
    2. 'and' → logprob: -1.9265398979187012
    3. ' and' → logprob: -2.801539897918701
    4. ',
' → logprob: -3.051539897918701
    5. '```' → logprob: -6.676539897918701
    6. ',p' → logprob: -7.051539897918701
    7. ',to' → logprob: -7.176539897918701
    8. '_and' → logprob: -7.551539897918701
    9. '_,' → logprob: -8.05154037475586
    10. ',and' → logprob: -8.17654037475586

Token 2817: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.01831897534430027
    2. ' street' → logprob: -4.018319129943848
    3. 'stre' → logprob: -8.768319129943848
    4. 'touch' → logprob: -12.518319129943848
    5. 'open' → logprob: -12.893319129943848
    6. '```' → logprob: -13.393319129943848
    7. '
' → logprob: -13.643319129943848
    8. 'st' → logprob: -14.018319129943848
    9. 'stroke' → logprob: -14.143319129943848
    10. 's' → logprob: -14.643319129943848

Token 2818: '_other' (ID: 70088)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.26768431067466736
    2. 'if' → logprob: -1.7676843404769897
    3. '#' → logprob: -3.2676842212677
    4. 'for' → logprob: -3.7676842212677
    5. ' if' → logprob: -7.142684459686279
    6. 'from' → logprob: -7.517684459686279
    7. '
' → logprob: -7.642684459686279
    8. '       ' → logprob: -9.142683982849121
    9. 'edges' → logprob: -9.392683982849121
    10. 'direction' → logprob: -9.392683982849121

Token 2819: '
            
' (ID: 45334)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.260291188955307
    2. 'if' → logprob: -1.7602912187576294
    3. ' if' → logprob: -3.76029109954834
    4. 'angle' → logprob: -5.01029109954834
    5. '
' → logprob: -5.26029109954834
    6. '   ' → logprob: -5.38529109954834
    7. 'c' → logprob: -6.01029109954834
    8. '               ' → logprob: -6.13529109954834
    9. ' c' → logprob: -6.26029109954834
    10. ' forbidden' → logprob: -6.51029109954834

Token 2820: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04168090596795082
    2. 'if' → logprob: -3.5416808128356934
    3. '#' → logprob: -4.916680812835693
    4. 'for' → logprob: -5.666680812835693
    5. 'graph' → logprob: -7.666680812835693
    6. ' if' → logprob: -8.541681289672852
    7. '   ' → logprob: -9.041681289672852
    8. '       ' → logprob: -9.291681289672852
    9. '
' → logprob: -10.041681289672852
    10. '            
' → logprob: -10.541681289672852

Token 2821: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.43935340642929077
    2. 'if' → logprob: -1.0643534660339355
    3. '#' (adapté à ' #') → logprob: -5.5643534660339355
    4. 'for' → logprob: -6.3143534660339355
    5. ' if' → logprob: -6.5643534660339355
    6. 'direction' → logprob: -7.6893534660339355
    7. '   ' → logprob: -7.8143534660339355
    8. 'from' → logprob: -7.8143534660339355
    9. 'd' → logprob: -7.8143534660339355
    10. 'angle' → logprob: -8.189352989196777

Token 2822: ' We' (ID: 1416)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7552007436752319
    2. 'if' → logprob: -1.130200743675232
    3. ' if' → logprob: -1.630200743675232
    4. 'angle' → logprob: -5.7552008628845215
    5. '               ' → logprob: -6.5052008628845215
    6. 'c' → logprob: -6.7552008628845215
    7. '#' → logprob: -7.0052008628845215
    8. ' c' → logprob: -7.5052008628845215
    9. 'sign' → logprob: -8.130200386047363
    10. '   ' → logprob: -8.255200386047363

Token 2823: ' distinguish' (ID: 59938)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6133904457092285
    2. 'for' → logprob: -1.7383904457092285
    3. ' #' → logprob: -1.7383904457092285
    4. 'remove' → logprob: -3.9883904457092285
    5. ' for' → logprob: -4.3633904457092285
    6. ' forbid' → logprob: -4.6133904457092285
    7. ' =' → logprob: -4.7383904457092285
    8. ' need' → logprob: -4.8633904457092285
    9. '
' → logprob: -4.8633904457092285
    10. ' remove' → logprob: -5.3633904457092285

Token 2824: ' the' (ID: 290)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6838108897209167
    2. 'if' → logprob: -2.3088109493255615
    3. 'for' → logprob: -2.8088109493255615
    4. '#' → logprob: -3.0588109493255615
    5. ' the' → logprob: -3.0588109493255615
    6. '           ' → logprob: -3.4338109493255615
    7. ' direction' → logprob: -3.5588109493255615
    8. 'from' → logprob: -3.8088109493255615
    9. 'direction' → logprob: -3.8088109493255615
    10. ' directions' → logprob: -3.9338109493255615

Token 2825: ' two' (ID: 1920)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.5413574576377869
    2. 'direction' → logprob: -2.0413575172424316
    3. 'for' → logprob: -2.5413575172424316
    4. 'if' → logprob: -2.6663575172424316
    5. ' forbidden' → logprob: -3.7913575172424316
    6. ' direction' → logprob: -4.041357517242432
    7. 'sign' → logprob: -4.416357517242432
    8. '           ' → logprob: -4.541357517242432
    9. ' if' → logprob: -4.791357517242432
    10. 'angle' → logprob: -4.916357517242432

Token 2826: ' ends' (ID: 17095)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.1362166702747345
    2. 'direction' → logprob: -2.636216640472412
    3. '#' → logprob: -4.011216640472412
    4. ' directions' → logprob: -4.261216640472412
    5. 'nodes' → logprob: -5.261216640472412
    6. '           ' → logprob: -5.636216640472412
    7. 'side' → logprob: -6.011216640472412
    8. 's' → logprob: -6.511216640472412
    9. '               ' → logprob: -6.636216640472412
    10. '_direction' → logprob: -6.761216640472412

Token 2827: ' of' (ID: 328)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4804498255252838
    2. ' if' → logprob: -1.8554497957229614
    3. 'if' → logprob: -2.605449914932251
    4. 'for' → logprob: -3.105449914932251
    5. '#' → logprob: -3.980449914932251
    6. '   ' → logprob: -4.105449676513672
    7. 'graph' → logprob: -4.355449676513672
    8. '
' → logprob: -4.730449676513672
    9. ' forbidden' → logprob: -5.230449676513672
    10. ',' → logprob: -5.355449676513672

Token 2828: ' the' (ID: 290)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.08309350907802582
    2. ' the' → logprob: -3.4580934047698975
    3. 'street' → logprob: -3.4580934047698975
    4. 'edge' → logprob: -4.458093643188477
    5. 'that' → logprob: -6.458093643188477
    6. ' street' → logprob: -6.583093643188477
    7. 'this' → logprob: -7.083093643188477
    8. ' edge' → logprob: -7.958093643188477
    9. '           ' → logprob: -8.583093643188477
    10. ' this' → logprob: -8.708093643188477

Token 2829: ' edge' (ID: 11165)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.23073606193065643
    2. 'edge' → logprob: -1.6057360172271729
    3. ' street' → logprob: -6.230736255645752
    4. 'segment' → logprob: -6.730736255645752
    5. 'sign' → logprob: -7.480736255645752
    6. ' edge' → logprob: -7.855736255645752
    7. '#' → logprob: -8.730735778808594
    8. '       ' → logprob: -8.855735778808594
    9. '```' → logprob: -8.855735778808594
    10. '           ' → logprob: -9.230735778808594

Token 2830: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14957615733146667
    2. 'if' → logprob: -2.274576187133789
    3. ' if' → logprob: -3.649576187133789
    4. '#' → logprob: -5.399576187133789
    5. 'for' → logprob: -5.524576187133789
    6. 'graph' → logprob: -8.149576187133789
    7. ' for' → logprob: -8.274576187133789
    8. '       ' → logprob: -8.649576187133789
    9. '
' → logprob: -9.024576187133789
    10. '   ' → logprob: -9.524576187133789

Token 2831: 'touch' (ID: 47206)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9589451551437378
    2. 'touch' → logprob: -1.2089451551437378
    3. '#' → logprob: -2.4589452743530273
    4. ')
' → logprob: -3.0839452743530273
    5. '
' → logprob: -3.4589452743530273
    6. ' touch' → logprob: -3.9589452743530273
    7. 'direction' → logprob: -4.208945274353027
    8. 'edge' → logprob: -4.583945274353027
    9. '):
' → logprob: -4.833945274353027
    10. '           ' → logprob: -4.958945274353027

Token 2832: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.019659174606204033
    2. ' and' → logprob: -5.144659042358398
    3. 'and' → logprob: -5.519659042358398
    4. ',to' → logprob: -5.894659042358398
    5. ' ,' → logprob: -6.394659042358398
    6. ')' → logprob: -6.394659042358398
    7. ',
' → logprob: -6.769659042358398
    8. ',p' → logprob: -7.769659042358398
    9. 'to' → logprob: -7.769659042358398
    10. ' to' → logprob: -8.019659042358398

Token 2833: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.07966054975986481
    2. ' street' → logprob: -2.579660654067993
    3. 'stre' → logprob: -7.954660415649414
    4. '
' → logprob: -9.079660415649414
    5. 'other' → logprob: -9.579660415649414
    6. ' ' → logprob: -10.079660415649414
    7. ')' → logprob: -10.079660415649414
    8. ' ' → logprob: -10.704660415649414
    9. '```' → logprob: -10.954660415649414
    10. ' other' → logprob: -10.954660415649414

Token 2834: '_other' (ID: 70088)
  Prédit: '_other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_other' → logprob: -3.292907877039397e-06
    2. 'other' → logprob: -12.75000286102295
    3. 'Other' → logprob: -15.12500286102295
    4. ')_' → logprob: -16.750003814697266
    5. '```' → logprob: -17.250003814697266
    6. '_OTHER' → logprob: -17.625003814697266
    7. ']_' → logprob: -18.750003814697266
    8. ''_' → logprob: -19.375003814697266
    9. '_under' → logprob: -19.500003814697266
    10. '           ' → logprob: -19.500003814697266

Token 2835: '):
' (ID: 1883)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.1967716217041016
    2. ')' → logprob: -2.0717716217041016
    3. ':
' → logprob: -2.0717716217041016
    4. ',' → logprob: -2.0717716217041016
    5. ')
' → logprob: -2.3217716217041016
    6. '
' → logprob: -2.9467716217041016
    7. '):
' → logprob: -3.0717716217041016
    8. ':' → logprob: -3.6967716217041016
    9. '#' → logprob: -3.8217716217041016
    10. ' if' → logprob: -3.9467716217041016

Token 2836: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.013480305671692
    2. 'if' → logprob: -1.263480305671692
    3. ' if' → logprob: -1.388480305671692
    4. 'graph' → logprob: -2.6384801864624023
    5. '#' → logprob: -4.513480186462402
    6. 'for' → logprob: -4.638480186462402
    7. ' graph' → logprob: -4.763480186462402
    8. ' for' → logprob: -7.013480186462402
    9. '               ' → logprob: -7.888480186462402
    10. ' #' → logprob: -8.013480186462402

Token 2837: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6272113919258118
    2. '           ' → logprob: -1.002211332321167
    3. 'if' → logprob: -2.377211332321167
    4. '#' (adapté à ' #') → logprob: -5.752211570739746
    5. ' forbidden' → logprob: -7.627211570739746
    6. 'for' → logprob: -7.752211570739746
    7. ' #' → logprob: -8.127211570739746
    8. ' graph' → logprob: -8.502211570739746
    9. ' for' → logprob: -8.502211570739746
    10. 'graph' → logprob: -8.627211570739746

Token 2838: ' At' (ID: 3604)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.49851271510124207
    2. '#' → logprob: -1.7485127449035645
    3. 'for' → logprob: -2.1235127449035645
    4. '           ' → logprob: -2.3735127449035645
    5. 'graph' → logprob: -5.6235127449035645
    6. 'allowed' → logprob: -6.8735127449035645
    7. 'remove' → logprob: -8.498512268066406
    8. '               ' → logprob: -8.623512268066406
    9. '   ' → logprob: -8.748512268066406
    10. '       ' → logprob: -8.873512268066406

Token 2839: ' node' (ID: 4596)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.011219468899071217
    2. ' touch' → logprob: -4.886219501495361
    3. 'street' → logprob: -6.011219501495361
    4. 'the' → logprob: -7.386219501495361
    5. ' street' → logprob: -8.636219024658203
    6. '#' → logprob: -8.886219024658203
    7. 'this' → logprob: -10.136219024658203
    8. 'point' → logprob: -10.386219024658203
    9. '
' → logprob: -10.636219024658203
    10. ' the' → logprob: -10.636219024658203

Token 2840: ' touch' (ID: 7381)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.016563061624765396
    2. ' touch' → logprob: -4.7665629386901855
    3. 'street' → logprob: -5.1415629386901855
    4. '
' → logprob: -7.6415629386901855
    5. ' street' → logprob: -7.7665629386901855
    6. '_touch' → logprob: -8.641563415527344
    7. 't' → logprob: -8.766563415527344
    8. '       ' → logprob: -8.891563415527344
    9. ',' → logprob: -9.391563415527344
    10. ')' → logprob: -9.516563415527344

Token 2841: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6378567218780518
    2. ',' → logprob: -1.1378567218780518
    3. ':
' → logprob: -2.8878567218780518
    4. 'graph' → logprob: -3.5128567218780518
    5. ':' → logprob: -3.7628567218780518
    6. '#' → logprob: -5.137856483459473
    7. ' if' → logprob: -5.262856483459473
    8. 'if' → logprob: -5.262856483459473
    9. ')' → logprob: -5.512856483459473
    10. ',
' → logprob: -5.637856483459473

Token 2842: ' angle' (ID: 16538)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.6429054737091064
    2. '#' → logprob: -0.8929054737091064
    3. 'for' → logprob: -3.5179054737091064
    4. 'if' → logprob: -3.6429054737091064
    5. ' graph' → logprob: -6.017905235290527
    6. '           ' → logprob: -6.517905235290527
    7. ' if' → logprob: -7.017905235290527
    8. '
' → logprob: -7.267905235290527
    9. ' #' → logprob: -7.267905235290527
    10. ' for' → logprob: -7.392905235290527

Token 2843: ' is' (ID: 382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8982111811637878
    2. '_cos' → logprob: -0.8982111811637878
    3. ' between' → logprob: -3.0232112407684326
    4. '>' → logprob: -4.5232110023498535
    5. 's' → logprob: -4.5232110023498535
    6. '_between' → logprob: -4.6482110023498535
    7. ')
' → logprob: -4.7732110023498535
    8. ' <' → logprob: -5.0232110023498535
    9. ' )' → logprob: -5.1482110023498535
    10. '   ' → logprob: -5.1482110023498535

Token 2844: ' obt' (ID: 5564)
  Prédit: 'obt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'obt' → logprob: -0.7440435886383057
    2. 'acute' → logprob: -1.3690435886383057
    3. '>' → logprob: -1.9940435886383057
    4. '<' → logprob: -3.2440435886383057
    5. '0' → logprob: -3.6190435886383057
    6. ')' → logprob: -4.494043350219727
    7. 'close' → logprob: -4.619043350219727
    8. 'right' → logprob: -4.619043350219727
    9. 'c' → logprob: -4.994043350219727
    10. '90' → logprob: -5.744043350219727

Token 2845: 'use' (ID: 1821)
  Prédit: 'use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.00018041854491457343
    2. 't' → logprob: -9.5001802444458
    3. '
' → logprob: -10.5001802444458
    4. '(use' → logprob: -11.6251802444458
    5. 'u' → logprob: -11.7501802444458
    6. '=' → logprob: -11.8751802444458
    7. '```' → logprob: -12.2501802444458
    8. 'user' → logprob: -12.3751802444458
    9. '_use' → logprob: -12.3751802444458
    10. '       ' → logprob: -12.7501802444458

Token 2846: ' or' (ID: 503)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7677529454231262
    2. 'if' → logprob: -0.7677529454231262
    3. ' if' → logprob: -2.7677528858184814
    4. 'for' → logprob: -5.7677531242370605
    5. '#' → logprob: -6.2677531242370605
    6. '               ' → logprob: -6.5177531242370605
    7. ')' → logprob: -8.142752647399902
    8. 'direction' → logprob: -8.142752647399902
    9. ' forbidden' → logprob: -8.267752647399902
    10. '   ' → logprob: -8.392752647399902

Token 2847: ' acute' (ID: 43944)
  Prédit: 'acute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acute' → logprob: -0.001461546402424574
    2. ' acute' → logprob: -7.501461505889893
    3. '<' → logprob: -8.37646198272705
    4. 'street' → logprob: -8.37646198272705
    5. 'not' → logprob: -8.62646198272705
    6. 'ac' → logprob: -9.25146198272705
    7. '0' → logprob: -10.37646198272705
    8. '```' → logprob: -10.62646198272705
    9. '</' → logprob: -11.25146198272705
    10. '   ' → logprob: -11.37646198272705

Token 2848: ' between' (ID: 2870)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.581445038318634
    2. '           ' → logprob: -1.0814449787139893
    3. ' if' → logprob: -2.4564449787139893
    4. 'angle' → logprob: -4.581445217132568
    5. '
' → logprob: -6.331445217132568
    6. '#' → logprob: -7.206445217132568
    7. '       ' → logprob: -7.706445217132568
    8. ' angle' → logprob: -8.33144474029541
    9. '   ' → logprob: -8.45644474029541
    10. ')' → logprob: -8.45644474029541

Token 2849: ' sign' (ID: 2232)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.5780295133590698
    2. 'sign' → logprob: -1.7030295133590698
    3. 'touch' → logprob: -2.2030296325683594
    4. ' sign' → logprob: -2.8280296325683594
    5. ' v' → logprob: -2.8280296325683594
    6. ' touch' → logprob: -4.453029632568359
    7. 'graph' → logprob: -5.078029632568359
    8. 'street' → logprob: -5.953029632568359
    9. ' street' → logprob: -6.328029632568359
    10. '           ' → logprob: -6.828029632568359

Token 2850: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3054410517215729
    2. ' if' → logprob: -1.9304410219192505
    3. 'if' → logprob: -2.30544114112854
    4. '       ' → logprob: -6.180440902709961
    5. '               ' → logprob: -6.430440902709961
    6. '#' → logprob: -6.555440902709961
    7. ',' → logprob: -6.680440902709961
    8. '   ' → logprob: -6.805440902709961
    9. 'graph' → logprob: -6.805440902709961
    10. ')' → logprob: -6.930440902709961

Token 2851: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.3010118901729584
    2. 'v' → logprob: -1.5510119199752808
    3. ' street' → logprob: -3.301011800765991
    4. 'touch' → logprob: -5.42601203918457
    5. ' v' → logprob: -6.05101203918457
    6. 'graph' → logprob: -6.30101203918457
    7. 'se' → logprob: -7.30101203918457
    8. 'sign' → logprob: -8.42601203918457
    9. 'the' → logprob: -8.42601203918457
    10. '   ' → logprob: -8.92601203918457

Token 2852: ' edge' (ID: 11165)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.653968870639801
    2. ' if' → logprob: -1.0289688110351562
    3. 'if' → logprob: -2.4039688110351562
    4. '
' → logprob: -4.153968811035156
    5. '   ' → logprob: -5.653968811035156
    6. '#' → logprob: -6.028968811035156
    7. '       ' → logprob: -6.528968811035156
    8. '```' → logprob: -7.028968811035156
    9. '               ' → logprob: -7.153968811035156
    10. ')' → logprob: -7.153968811035156

Token 2853: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0820581242442131
    2. ' if' → logprob: -2.7070581912994385
    3. '               ' → logprob: -5.832057952880859
    4. 'if' → logprob: -5.957057952880859
    5. '       ' → logprob: -6.082057952880859
    6. '            ' → logprob: -7.332057952880859
    7. '   ' → logprob: -7.457057952880859
    8. '
' → logprob: -7.707057952880859
    9. ')' → logprob: -8.20705795288086
    10. '```' → logprob: -8.33205795288086

Token 2854: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0648222342133522
    2. ' if' → logprob: -2.814822196960449
    3. 'if' → logprob: -6.564822196960449
    4. '               ' → logprob: -7.939822196960449
    5. '       ' → logprob: -8.56482219696045
    6. ',' → logprob: -8.93982219696045
    7. '            
' → logprob: -9.06482219696045
    8. ')' → logprob: -9.31482219696045
    9. '   ' → logprob: -9.68982219696045
    10. '#' → logprob: -9.68982219696045

Token 2855: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8604423403739929
    2. ' if' → logprob: -0.9854423403739929
    3. 'if' → logprob: -1.6104423999786377
    4. '   ' → logprob: -6.860442161560059
    5. '               ' → logprob: -7.110442161560059
    6. '       ' → logprob: -7.110442161560059
    7. '#' (adapté à ' #') → logprob: -7.735442161560059
    8. '
' → logprob: -9.235442161560059
    9. ')' → logprob: -9.360442161560059
    10. '                   ' → logprob: -9.485442161560059

Token 2856: ' From' (ID: 7217)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.028731459751725197
    2. 'for' → logprob: -3.778731346130371
    3. '           ' → logprob: -5.653731346130371
    4. '#' → logprob: -6.903731346130371
    5. 'angle' → logprob: -7.653731346130371
    6. 'c' → logprob: -8.653731346130371
    7. 'allowed' → logprob: -9.403731346130371
    8. ' if' → logprob: -10.028731346130371
    9. 'abs' → logprob: -10.528731346130371
    10. '   ' → logprob: -10.528731346130371

Token 2857: ' obt' (ID: 5564)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.09014799445867538
    2. 'street' → logprob: -2.8401479721069336
    3. ' touch' → logprob: -4.340147972106934
    4. ' street' → logprob: -5.215147972106934
    5. 'sign' → logprob: -5.465147972106934
    6. 'the' → logprob: -5.590147972106934
    7. ' the' → logprob: -8.715147972106934
    8. ' sign' → logprob: -9.090147972106934
    9. '_touch' → logprob: -9.090147972106934
    10. '   ' → logprob: -9.090147972106934

Token 2858: 'use' (ID: 1821)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.8275057077407837
    2. 'ch' → logprob: -1.0775057077407837
    3. 'ouch' → logprob: -1.7025057077407837
    4. 'uch' → logprob: -4.077505588531494
    5. 'use' → logprob: -4.827505588531494
    6. 'touch' → logprob: -5.452505588531494
    7. '```' → logprob: -5.577505588531494
    8. 'ach' → logprob: -5.827505588531494
    9. '
' → logprob: -7.452505588531494
    10. '1' → logprob: -7.577505588531494

Token 2859: ' side' (ID: 4307)
  Prédit: '_angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.23138722777366638
    2. ' angle' → logprob: -2.106387138366699
    3. 'angle' → logprob: -2.606387138366699
    4. '_side' → logprob: -5.481387138366699
    5. 'side' → logprob: -6.606387138366699
    6. ' to' → logprob: -7.106387138366699
    7. ' side' → logprob: -7.106387138366699
    8. ' ' → logprob: -7.606387138366699
    9. ')' → logprob: -7.606387138366699
    10. '
' → logprob: -7.856387138366699

Token 2860: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.08526056259870529
    2. ',' → logprob: -3.0852606296539307
    3. 'to' → logprob: -4.335260391235352
    4. '_to' → logprob: -4.460260391235352
    5. ' (' → logprob: -5.210260391235352
    6. ' ,' → logprob: -6.835260391235352
    7. ' side' → logprob: -7.335260391235352
    8. '   ' → logprob: -7.585260391235352
    9. ')' → logprob: -7.710260391235352
    10. '           ' → logprob: -8.210260391235352

Token 2861: ' acute' (ID: 43944)
  Prédit: 'acute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acute' → logprob: -0.02360822819173336
    2. ' acute' → logprob: -4.023608207702637
    3. 'touch' → logprob: -5.273608207702637
    4. ' touch' → logprob: -8.523608207702637
    5. 'street' → logprob: -10.023608207702637
    6. 'ac' → logprob: -10.273608207702637
    7. ' ' → logprob: -11.273608207702637
    8. ' street' → logprob: -11.773608207702637
    9. '   ' → logprob: -12.023608207702637
    10. 'open' → logprob: -12.398608207702637

Token 2862: ' side' (ID: 4307)
  Prédit: '_side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -0.8734660744667053
    2. '_angle' → logprob: -1.2484660148620605
    3. '_' → logprob: -1.8734660148620605
    4. ' side' → logprob: -2.2484660148620605
    5. ' angle' → logprob: -4.2484660148620605
    6. ' _' → logprob: -4.8734660148620605
    7. '_direction' → logprob: -5.9984660148620605
    8. '"' → logprob: -5.9984660148620605
    9. ' ' → logprob: -6.3734660148620605
    10. ')' → logprob: -6.6234660148620605

Token 2863: ' is' (ID: 382)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5806580185890198
    2. ' if' → logprob: -1.580657958984375
    3. 'if' → logprob: -2.830657958984375
    4. '#' → logprob: -3.705657958984375
    5. ')' → logprob: -3.705657958984375
    6. '
' → logprob: -4.080657958984375
    7. '   ' → logprob: -4.330657958984375
    8. ')
' → logprob: -4.455657958984375
    9. '       ' → logprob: -4.455657958984375
    10. '[' → logprob: -4.580657958984375

Token 2864: ' forbidden' (ID: 74435)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.424600750207901
    2. ' for' → logprob: -2.549600839614868
    3. ' forbidden' → logprob: -2.799600839614868
    4. 'blocked' → logprob: -3.674600839614868
    5. 'touch' → logprob: -3.799600839614868
    6. ' None' → logprob: -3.924600839614868
    7. ' (' → logprob: -3.924600839614868
    8. ' ' → logprob: -4.424600601196289
    9. 'from' → logprob: -4.424600601196289
    10. ' touch' → logprob: -4.424600601196289

Token 2865: ' =>' (ID: 871)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6920186877250671
    2. ' if' → logprob: -1.442018747329712
    3. 'if' → logprob: -1.692018747329712
    4. '
' → logprob: -2.942018747329712
    5. '#' → logprob: -4.942018508911133
    6. '   ' → logprob: -5.692018508911133
    7. 'for' → logprob: -5.692018508911133
    8. '       ' → logprob: -6.192018508911133
    9. '               ' → logprob: -6.442018508911133
    10. '[
' → logprob: -6.692018508911133

Token 2866: ' must' (ID: 2804)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.46338239312171936
    2. 'for' → logprob: -2.0883824825286865
    3. '           ' → logprob: -2.3383824825286865
    4. 'graph' → logprob: -2.8383824825286865
    5. '#' → logprob: -3.0883824825286865
    6. 'continue' → logprob: -3.9633824825286865
    7. ' if' → logprob: -4.088382244110107
    8. '               ' → logprob: -6.463382244110107
    9. ' forbidden' → logprob: -6.713382244110107
    10. ' graph' → logprob: -6.963382244110107

Token 2867: ' remove' (ID: 6234)
  Prédit: 'remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'remove' → logprob: -0.34292036294937134
    2. 'for' → logprob: -2.5929203033447266
    3. '_remove' → logprob: -2.7179203033447266
    4. '           ' → logprob: -2.9679203033447266
    5. ' remove' → logprob: -3.7179203033447266
    6. 'graph' → logprob: -4.342920303344727
    7. '=' → logprob: -4.467920303344727
    8. '#' → logprob: -4.842920303344727
    9. 'continue' → logprob: -4.967920303344727
    10. '.remove' → logprob: -5.217920303344727

Token 2868: ' directed' (ID: 23699)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.895156741142273
    2. ' (' → logprob: -1.520156741142273
    3. '[(' → logprob: -2.2701568603515625
    4. ' graph' → logprob: -2.6451568603515625
    5. '           ' → logprob: -3.6451568603515625
    6. '   ' → logprob: -3.7701568603515625
    7. '[
' → logprob: -3.8951568603515625
    8. '(graph' → logprob: -4.0201568603515625
    9. '[' → logprob: -4.1451568603515625
    10. '_' → logprob: -4.2701568603515625

Token 2869: ' edge' (ID: 11165)
  Prédit: '_edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_edge' → logprob: -0.23821523785591125
    2. '_' → logprob: -2.613215208053589
    3. '_edges' → logprob: -3.113215208053589
    4. ' edge' → logprob: -3.238215208053589
    5. 'edge' → logprob: -3.613215208053589
    6. ' ' → logprob: -5.738215446472168
    7. '_out' → logprob: -5.988215446472168
    8. ')' → logprob: -6.113215446472168
    9. ' _' → logprob: -6.238215446472168
    10. 'graph' → logprob: -6.238215446472168

Token 2870: ' from' (ID: 591)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5707610249519348
    2. '           ' → logprob: -0.9457610249519348
    3. 'for' → logprob: -3.44576096534729
    4. '#' → logprob: -4.945761203765869
    5. ' if' → logprob: -5.445761203765869
    6. '[
' → logprob: -7.445761203765869
    7. 'edges' → logprob: -7.570761203765869
    8. '[' → logprob: -8.445760726928711
    9. 'remove' → logprob: -8.570760726928711
    10. 'graph' → logprob: -8.695760726928711

Token 2871: ' node' (ID: 4596)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.5521576404571533
    2. 'street' → logprob: -1.1771576404571533
    3. ' street' → logprob: -2.5521576404571533
    4. ' touch' → logprob: -3.3021576404571533
    5. '(st' → logprob: -7.552157402038574
    6. 'stre' → logprob: -7.927157402038574
    7. 'open' → logprob: -8.552157402038574
    8. 'st' → logprob: -9.302157402038574
    9. 'graph' → logprob: -10.427157402038574
    10. ' open' → logprob: -10.427157402038574

Token 2872: ' on' (ID: 402)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.3872509300708771
    2. '_touch' → logprob: -2.1372509002685547
    3. '_direct' → logprob: -2.5122509002685547
    4. 'irected' → logprob: -2.7622509002685547
    5. 'irect' → logprob: -4.137250900268555
    6. '
' → logprob: -4.762250900268555
    7. 'direct' → logprob: -4.762250900268555
    8. ' touch' → logprob: -5.512250900268555
    9. '_to' → logprob: -5.637250900268555
    10. 'graph' → logprob: -6.137250900268555

Token 2873: ' obt' (ID: 5564)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.20691770315170288
    2. 'obt' → logprob: -2.5819177627563477
    3. 'street' → logprob: -3.0819177627563477
    4. ' obt' → logprob: -3.4569177627563477
    5. ' touch' → logprob: -4.206917762756348
    6. ' street' → logprob: -4.831917762756348
    7. 'ob' → logprob: -5.081917762756348
    8. '```' → logprob: -6.081917762756348
    9. '   ' → logprob: -7.831917762756348
    10. 'acute' → logprob: -8.081917762756348

Token 2874: 'use' (ID: 1821)
  Prédit: 'use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.002954404568299651
    2. 'u' → logprob: -6.002954483032227
    3. 't' → logprob: -8.127954483032227
    4. '```' → logprob: -9.502954483032227
    5. '
' → logprob: -10.252954483032227
    6. '_use' → logprob: -10.627954483032227
    7. '   ' → logprob: -12.127954483032227
    8. '(use' → logprob: -12.252954483032227
    9. '"use' → logprob: -12.877954483032227
    10. 'uce' → logprob: -12.877954483032227

Token 2875: ' side' (ID: 4307)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -1.844771385192871
    2. ' side' → logprob: -1.969771385192871
    3. '_side' → logprob: -2.094771385192871
    4. '_touch' → logprob: -2.219771385192871
    5. 'side' → logprob: -2.594771385192871
    6. ' ' → logprob: -2.969771385192871
    7. '   ' → logprob: -2.969771385192871
    8. '`' → logprob: -3.344771385192871
    9. ')' → logprob: -3.344771385192871
    10. ' _' → logprob: -3.469771385192871

Token 2876: ' to' (ID: 316)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4284442365169525
    2. '_
' → logprob: -2.0534441471099854
    3. '           ' → logprob: -2.4284441471099854
    4. '[' → logprob: -3.8034441471099854
    5. '[
' → logprob: -4.1784443855285645
    6. 'if' → logprob: -4.4284443855285645
    7. '
' → logprob: -4.6784443855285645
    8. ' if' → logprob: -4.8034443855285645
    9. 'from' → logprob: -4.9284443855285645
    10. 'graph' → logprob: -5.0534443855285645

Token 2877: ' node' (ID: 4596)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.795167863368988
    2. 'touch' → logprob: -1.1701679229736328
    3. 'acute' → logprob: -1.6701679229736328
    4. ' street' → logprob: -3.295167922973633
    5. ' touch' → logprob: -5.295167922973633
    6. ' acute' → logprob: -5.420167922973633
    7. 'the' → logprob: -6.420167922973633
    8. 'node' → logprob: -6.795167922973633
    9. ' the' → logprob: -8.920167922973633
    10. 'open' → logprob: -9.170167922973633

Token 2878: ' on' (ID: 402)
  Prédit: '_on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_on' → logprob: -1.8623560667037964
    2. '[' → logprob: -1.9873560667037964
    3. '_' → logprob: -1.9873560667037964
    4. '_other' → logprob: -2.487356185913086
    5. 'touch' → logprob: -2.487356185913086
    6. ' on' → logprob: -2.862356185913086
    7. 'on' → logprob: -3.112356185913086
    8. '_touch' → logprob: -3.237356185913086
    9. '```' → logprob: -3.487356185913086
    10. '_at' → logprob: -3.487356185913086

Token 2879: ' acute' (ID: 43944)
  Prédit: 'acute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acute' → logprob: -0.004204001743346453
    2. 'touch' → logprob: -5.629203796386719
    3. 'obt' → logprob: -7.754203796386719
    4. ' acute' → logprob: -9.379203796386719
    5. 'street' → logprob: -9.754203796386719
    6. 'ac' → logprob: -11.754203796386719
    7. 'the' → logprob: -12.129203796386719
    8. '```' → logprob: -12.254203796386719
    9. '
' → logprob: -13.129203796386719
    10. 'angle' → logprob: -13.254203796386719

Token 2880: ' side' (ID: 4307)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4249265491962433
    2. '[
' → logprob: -2.549926519393921
    3. ' if' → logprob: -2.799926519393921
    4. 'if' → logprob: -2.799926519393921
    5. 'graph' → logprob: -3.174926519393921
    6. '[' → logprob: -4.0499267578125
    7. '       ' → logprob: -4.9249267578125
    8. '   ' → logprob: -5.0499267578125
    9. '#' → logprob: -5.0499267578125
    10. '
' → logprob: -5.2999267578125

Token 2881: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07361401617527008
    2. 'if' → logprob: -3.1986141204833984
    3. ' if' → logprob: -3.8236141204833984
    4. '
' → logprob: -5.073614120483398
    5. '       ' → logprob: -7.823614120483398
    6. '            
' → logprob: -7.823614120483398
    7. '               ' → logprob: -7.948614120483398
    8. 'd' → logprob: -9.198614120483398
    9. '   ' → logprob: -9.323614120483398
    10. ' 
' → logprob: -9.573614120483398

Token 2882: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1691543161869049
    2. 'if' → logprob: -2.169154405593872
    3. ' if' → logprob: -3.294154405593872
    4. '
' → logprob: -7.044154167175293
    5. '            
' → logprob: -7.044154167175293
    6. '#' → logprob: -8.044154167175293
    7. '[
' → logprob: -8.169154167175293
    8. '   ' → logprob: -8.294154167175293
    9. '       ' → logprob: -8.419154167175293
    10. '               ' → logprob: -8.669154167175293

Token 2883: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09285879135131836
    2. '           ' → logprob: -2.5928587913513184
    3. 'angle' → logprob: -5.092858791351318
    4. 'for' → logprob: -5.467858791351318
    5. '#' (adapté à ' #') → logprob: -7.467858791351318
    6. 'c' → logprob: -7.592858791351318
    7. 'f' → logprob: -7.967858791351318
    8. 'd' → logprob: -8.217859268188477
    9. ' if' → logprob: -8.217859268188477
    10. '   ' → logprob: -8.342859268188477

Token 2884: ' We' (ID: 1416)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.48409172892570496
    2. ' if' → logprob: -1.4840917587280273
    3. 'if' → logprob: -1.9840917587280273
    4. '               ' → logprob: -4.734091758728027
    5. '       ' → logprob: -6.484091758728027
    6. '                   ' → logprob: -6.609091758728027
    7. '```' → logprob: -7.109091758728027
    8. '#' → logprob: -7.359091758728027
    9. ')' → logprob: -7.359091758728027
    10. '                       ' → logprob: -7.609091758728027

Token 2885: ' need' (ID: 1309)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1047250032424927
    2. 'remove' → logprob: -1.7297250032424927
    3. ' remove' → logprob: -1.9797250032424927
    4. ' #' → logprob: -1.9797250032424927
    5. '_remove' → logprob: -3.479724884033203
    6. '.remove' → logprob: -3.729724884033203
    7. 'for' → logprob: -3.979724884033203
    8. 'if' → logprob: -3.979724884033203
    9. ' =' → logprob: -3.979724884033203
    10. '[' → logprob: -4.604724884033203

Token 2886: ' to' (ID: 316)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.43414658308029175
    2. 'to' → logprob: -2.0591466426849365
    3. '           ' → logprob: -2.4341466426849365
    4. ' if' → logprob: -3.1841466426849365
    5. ' to' → logprob: -3.6841466426849365
    6. '#' → logprob: -3.9341466426849365
    7. 'continue' → logprob: -4.684146404266357
    8. '
' → logprob: -4.809146404266357
    9. '               ' → logprob: -4.934146404266357
    10. 'remove' → logprob: -5.559146404266357

Token 2887: ' decide' (ID: 13001)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.076812505722046
    2. 'remove' → logprob: -1.201812505722046
    3. 'for' → logprob: -1.701812505722046
    4. 'if' → logprob: -2.701812505722046
    5. 'import' → logprob: -3.326812505722046
    6. '
' → logprob: -3.701812505722046
    7. 'from' → logprob: -4.576812744140625
    8. 'continue' → logprob: -4.701812744140625
    9. 'sign' → logprob: -5.201812744140625
    10. ' #' → logprob: -5.201812744140625

Token 2888: ' which' (ID: 1118)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.31173446774482727
    2. 'acute' → logprob: -2.811734437942505
    3. '           ' → logprob: -3.061734437942505
    4. '#' → logprob: -3.061734437942505
    5. ' if' → logprob: -3.311734437942505
    6. 'sign' → logprob: -4.561734676361084
    7. 'obt' → logprob: -4.686734676361084
    8. 'from' → logprob: -4.686734676361084
    9. 'for' → logprob: -4.936734676361084
    10. '               ' → logprob: -5.061734676361084

Token 2889: ' node' (ID: 4596)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.9403627514839172
    2. 'node' → logprob: -1.4403626918792725
    3. 'direction' → logprob: -1.6903626918792725
    4. ' side' → logprob: -3.5653626918792725
    5. '_side' → logprob: -3.8153626918792725
    6. 'end' → logprob: -3.9403626918792725
    7. '#' → logprob: -4.065362930297852
    8. '_end' → logprob: -4.065362930297852
    9. 'endpoint' → logprob: -4.315362930297852
    10. '
' → logprob: -4.440362930297852

Token 2890: ' correspond' (ID: 11095)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.8340256214141846
    2. '
' → logprob: -1.9590256214141846
    3. '           ' → logprob: -2.0840256214141846
    4. '#' → logprob: -2.3340256214141846
    5. '_to' → logprob: -2.5840256214141846
    6. 'if' → logprob: -3.0840256214141846
    7. '_touch' → logprob: -3.4590256214141846
    8. '_' → logprob: -3.7090256214141846
    9. ' #' → logprob: -3.8340256214141846
    10. ' to' → logprob: -3.9590256214141846

Token 2891: ' to' (ID: 316)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0020824549719691277
    2. '_to' → logprob: -7.127082347869873
    3. '=' → logprob: -7.752082347869873
    4. 'to' → logprob: -8.127082824707031
    5. ' to' → logprob: -8.252082824707031
    6. 'es' → logprob: -8.377082824707031
    7. '```' → logprob: -11.002082824707031
    8. '(s' → logprob: -11.252082824707031
    9. '_' → logprob: -11.877082824707031
    10. ''s' → logprob: -12.252082824707031

Token 2892: ' the' (ID: 290)
  Prédit: 'obt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'obt' → logprob: -0.02668166533112526
    2. '"' → logprob: -4.526681900024414
    3. ' obt' → logprob: -5.401681900024414
    4. 'touch' → logprob: -5.651681900024414
    5. 'acute' → logprob: -5.776681900024414
    6. 'the' → logprob: -6.026681900024414
    7. ''ob' → logprob: -7.151681900024414
    8. ''' → logprob: -8.026681900024414
    9. 'ob' → logprob: -8.151681900024414
    10. '```' → logprob: -9.526681900024414

Token 2893: ' obt' (ID: 5564)
  Prédit: 'obt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'obt' → logprob: -0.5497606992721558
    2. 'acute' → logprob: -2.2997608184814453
    3. 'touch' → logprob: -2.2997608184814453
    4. 'sign' → logprob: -2.4247608184814453
    5. '"' → logprob: -2.7997608184814453
    6. 'street' → logprob: -4.049760818481445
    7. ' obt' → logprob: -4.424760818481445
    8. 'ob' → logprob: -4.674760818481445
    9. 'side' → logprob: -4.924760818481445
    10. 'direction' → logprob: -5.299760818481445

Token 2894: 'use' (ID: 1821)
  Prédit: 'use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.0023090504109859467
    2. 't' → logprob: -6.5023088455200195
    3. '_use' → logprob: -8.25230884552002
    4. 'u' → logprob: -8.37730884552002
    5. '```' → logprob: -9.62730884552002
    6. '
' → logprob: -10.00230884552002
    7. '_' → logprob: -10.50230884552002
    8. '(use' → logprob: -10.87730884552002
    9. '[' → logprob: -11.00230884552002
    10. '"use' → logprob: -11.62730884552002

Token 2895: ' side' (ID: 4307)
  Prédit: ' angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' angle' → logprob: -1.2504961490631104
    2. '_angle' → logprob: -1.2504961490631104
    3. 'angle' → logprob: -2.0004961490631104
    4. '_side' → logprob: -2.0004961490631104
    5. ' side' → logprob: -2.5004961490631104
    6. 'side' → logprob: -3.8754961490631104
    7. '_' → logprob: -4.125495910644531
    8. '```' → logprob: -4.375495910644531
    9. ')' → logprob: -5.250495910644531
    10. ''' → logprob: -5.625495910644531

Token 2896: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2957732677459717
    2. 'if' → logprob: -1.9207732677459717
    3. ' if' → logprob: -2.6707732677459717
    4. '#' → logprob: -3.6707732677459717
    5. 'i' → logprob: -6.545773506164551
    6. '               ' → logprob: -6.670773506164551
    7. 'v' → logprob: -6.670773506164551
    8. 'd' → logprob: -6.670773506164551
    9. '
' → logprob: -6.795773506164551
    10. ',' → logprob: -7.045773506164551

Token 2897: ' which' (ID: 1118)
  Prédit: 'which'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'which' → logprob: -0.7859585285186768
    2. ' which' → logprob: -1.4109585285186768
    3. 'acute' → logprob: -1.6609585285186768
    4. ' acute' → logprob: -2.2859585285186768
    5. 'remove' → logprob: -6.410958290100098
    6. '#' → logprob: -6.410958290100098
    7. ' remove' → logprob: -6.910958290100098
    8. ' street' → logprob: -7.035958290100098
    9. 'open' → logprob: -7.410958290100098
    10. '```' → logprob: -7.660958290100098

Token 2898: ' to' (ID: 316)
  Prédit: ' side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' side' → logprob: -0.3261786103248596
    2. 'side' → logprob: -2.201178550720215
    3. ' node' → logprob: -3.576178550720215
    4. ' is' → logprob: -3.701178550720215
    5. '_side' → logprob: -3.951178550720215
    6. 'node' → logprob: -4.201178550720215
    7. ' to' → logprob: -4.326178550720215
    8. '=' → logprob: -4.451178550720215
    9. ' one' → logprob: -4.451178550720215
    10. ' =' → logprob: -4.701178550720215

Token 2899: ' acute' (ID: 43944)
  Prédit: 'acute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acute' → logprob: -0.4858441948890686
    2. 'touch' → logprob: -1.8608441352844238
    3. 'street' → logprob: -2.235844135284424
    4. 'remove' → logprob: -3.110844135284424
    5. ' acute' → logprob: -3.360844135284424
    6. ' street' → logprob: -3.985844135284424
    7. 'the' → logprob: -4.860844135284424
    8. ' touch' → logprob: -5.235844135284424
    9. 'sign' → logprob: -5.610844135284424
    10. ' remove' → logprob: -6.485844135284424

Token 2900: ' side' (ID: 4307)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.2608777284622192
    2. '           ' → logprob: -1.5108777284622192
    3. 'if' → logprob: -1.5108777284622192
    4. '
' → logprob: -2.2608776092529297
    5. '#' → logprob: -2.5108776092529297
    6. 'v' → logprob: -3.1358776092529297
    7. 'sign' → logprob: -5.51087760925293
    8. 'd' → logprob: -5.63587760925293
    9. ' c' → logprob: -5.76087760925293
    10. ',' → logprob: -5.88587760925293

Token 2901: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7429875135421753
    2. 'if' → logprob: -0.9929875135421753
    3. ' if' → logprob: -2.492987632751465
    4. '
' → logprob: -3.492987632751465
    5. '#' → logprob: -3.992987632751465
    6. 'v' → logprob: -5.992987632751465
    7. 'i' → logprob: -6.242987632751465
    8. 'c' → logprob: -6.242987632751465
    9. 'sign' → logprob: -6.242987632751465
    10. ' c' → logprob: -6.367987632751465

Token 2902: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7057626247406006
    2. ' if' → logprob: -1.2057626247406006
    3. '           ' → logprob: -2.2057626247406006
    4. '#' → logprob: -3.4557626247406006
    5. '
' → logprob: -3.9557626247406006
    6. 'touch' → logprob: -4.08076286315918
    7. 'If' → logprob: -5.45576286315918
    8. 'i' → logprob: -5.45576286315918
    9. ' 
' → logprob: -5.83076286315918
    10. ',' → logprob: -6.20576286315918

Token 2903: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09947814792394638
    2. '#' (adapté à ' #') → logprob: -3.349478244781494
    3. '           ' → logprob: -3.599478244781494
    4. ' if' → logprob: -4.349478244781494
    5. 'c' → logprob: -5.599478244781494
    6. 'v' → logprob: -6.099478244781494
    7. 'sign' → logprob: -6.099478244781494
    8. 'touch' → logprob: -6.099478244781494
    9. 'from' → logprob: -6.224478244781494
    10. 'd' → logprob: -6.724478244781494

Token 2904: ' By' (ID: 4534)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.02720002643764019
    2. '#' → logprob: -4.652200222015381
    3. '           ' → logprob: -4.902200222015381
    4. 'for' → logprob: -5.152200222015381
    5. 'remove' → logprob: -6.777200222015381
    6. 'from' → logprob: -7.152200222015381
    7. ' if' → logprob: -7.152200222015381
    8. 'allowed' → logprob: -8.402199745178223
    9. 'If' → logprob: -8.402199745178223
    10. '```' → logprob: -8.652199745178223

Token 2905: ' default' (ID: 2787)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.46389034390449524
    2. 'if' → logprob: -1.9638903141021729
    3. 'import' → logprob: -2.838890314102173
    4. 'angle' → logprob: -3.838890314102173
    5. 'pass' → logprob: -3.963890314102173
    6. ' if' → logprob: -3.963890314102173
    7. '
' → logprob: -4.088890552520752
    8. 'length' → logprob: -4.338890552520752
    9. 'norm' → logprob: -4.463890552520752
    10. 'sign' → logprob: -4.838890552520752

Token 2906: ',' (ID: 11)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4974992871284485
    2. 'if' → logprob: -1.8724992275238037
    3. 'v' → logprob: -2.6224992275238037
    4. '
' → logprob: -2.7474992275238037
    5. '#' → logprob: -3.2474992275238037
    6. '           ' → logprob: -3.7474992275238037
    7. 'import' → logprob: -4.622499465942383
    8. ' v' → logprob: -4.747499465942383
    9. 'sign' → logprob: -5.872499465942383
    10. 'angle' → logprob: -6.622499465942383

Token 2907: ' direction' (ID: 9262)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.4156625270843506
    2. '#' → logprob: -2.1656625270843506
    3. '           ' → logprob: -2.2906625270843506
    4. 'if' → logprob: -2.4156625270843506
    5. 'v' → logprob: -4.41566276550293
    6. '            ' → logprob: -5.29066276550293
    7. ' #' → logprob: -5.41566276550293
    8. ' v' → logprob: -5.66566276550293
    9. 'import' → logprob: -5.79066276550293
    10. ' graph' → logprob: -7.29066276550293

Token 2908: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.8591264486312866
    2. 'from' → logprob: -1.1091264486312866
    3. ' =' → logprob: -2.484126567840576
    4. ' of' → logprob: -3.609126567840576
    5. ' (' → logprob: -3.609126567840576
    6. '=' → logprob: -3.734126567840576
    7. 'al' → logprob: -4.109126567840576
    8. 's' → logprob: -4.484126567840576
    9. '_from' → logprob: -4.484126567840576
    10. 'touch' → logprob: -4.859126567840576

Token 2909: ' touch' (ID: 7381)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.08075428009033203
    2. ' touch' → logprob: -3.205754280090332
    3. 'open' → logprob: -4.080754280090332
    4. 'street' → logprob: -4.330754280090332
    5. ' street' → logprob: -5.080754280090332
    6. ' open' → logprob: -7.580754280090332
    7. 'sign' → logprob: -8.705754280090332
    8. 'the' → logprob: -10.955754280090332
    9. '_touch' → logprob: -11.080754280090332
    10. '```' → logprob: -11.080754280090332

Token 2910: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.035172946751117706
    2. 'to' → logprob: -3.785172939300537
    3. ',' → logprob: -5.285172939300537
    4. '_to' → logprob: -5.535172939300537
    5. ')' → logprob: -7.285172939300537
    6. ' ' → logprob: -7.785172939300537
    7. ' (' → logprob: -8.035173416137695
    8. ' ->' → logprob: -8.285173416137695
    9. ' ,' → logprob: -8.660173416137695
    10. ' is' → logprob: -8.785173416137695

Token 2911: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.03806949034333229
    2. ' street' → logprob: -3.288069486618042
    3. 'stre' → logprob: -10.788069725036621
    4. 'open' → logprob: -11.913069725036621
    5. 'touch' → logprob: -15.163069725036621
    6. 'st' → logprob: -16.163068771362305
    7. ' open' → logprob: -16.538068771362305
    8. '
' → logprob: -16.788068771362305
    9. '```' → logprob: -17.288068771362305
    10. 'stroke' → logprob: -17.413068771362305

Token 2912: '_other' (ID: 70088)
  Prédit: '_other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_other' → logprob: -0.003906945697963238
    2. '_' → logprob: -5.753906726837158
    3. '```' → logprob: -8.378907203674316
    4. '_out' → logprob: -8.753907203674316
    5. '`' → logprob: -9.753907203674316
    6. '_to' → logprob: -10.253907203674316
    7. ' _' → logprob: -10.378907203674316
    8. ')_' → logprob: -10.378907203674316
    9. '_side' → logprob: -10.878907203674316
    10. ''_' → logprob: -11.003907203674316

Token 2913: ' is' (ID: 382)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8510940670967102
    2. ' if' → logprob: -1.1010940074920654
    3. '[' → logprob: -2.6010940074920654
    4. 'if' → logprob: -2.9760940074920654
    5. '[
' → logprob: -3.8510940074920654
    6. ')
' → logprob: -4.6010942459106445
    7. '
' → logprob: -4.6010942459106445
    8. ')' → logprob: -4.7260942459106445
    9. '               ' → logprob: -4.7260942459106445
    10. ':
' → logprob: -4.9760942459106445

Token 2914: ' out' (ID: 842)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4459160566329956
    2. '"' → logprob: -2.445916175842285
    3. ' ' → logprob: -2.695916175842285
    4. ' (' → logprob: -2.695916175842285
    5. 'acute' → logprob: -2.820916175842285
    6. '(' → logprob: -2.820916175842285
    7. '-' → logprob: -3.070916175842285
    8. ')' → logprob: -3.320916175842285
    9. ''' → logprob: -3.320916175842285
    10. 'blocked' → logprob: -3.445916175842285

Token 2915: ' from' (ID: 591)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.2753684520721436
    2. '[' → logprob: -2.2753684520721436
    3. 'from' → logprob: -2.5253684520721436
    4. ',' → logprob: -2.5253684520721436
    5. ' =' → logprob: -3.4003684520721436
    6. '_' → logprob: -3.5253684520721436
    7. ':
' → logprob: -3.6503684520721436
    8. ')
' → logprob: -3.6503684520721436
    9. '[
' → logprob: -3.6503684520721436
    10. '   ' → logprob: -3.7753684520721436

Token 2916: ' touch' (ID: 7381)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.14277271926403046
    2. ' touch' → logprob: -2.017772674560547
    3. 'the' → logprob: -10.392772674560547
    4. '_touch' → logprob: -10.642772674560547
    5. 't' → logprob: -11.392772674560547
    6. '   ' → logprob: -12.017772674560547
    7. '
' → logprob: -12.267772674560547
    8. '```' → logprob: -12.392772674560547
    9. 'to' → logprob: -12.892772674560547
    10. ' the' → logprob: -13.142772674560547

Token 2917: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6834396719932556
    2. ' if' → logprob: -1.0584397315979004
    3. 'if' → logprob: -3.1834397315979004
    4. '
' → logprob: -3.3084397315979004
    5. '[' → logprob: -4.8084397315979
    6. '#' → logprob: -4.8084397315979
    7. ':
' → logprob: -5.3084397315979
    8. ',' → logprob: -5.3084397315979
    9. 'graph' → logprob: -5.3084397315979
    10. '       ' → logprob: -5.6834397315979

Token 2918: ' from' (ID: 591)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5137470960617065
    2. ' if' → logprob: -1.2637470960617065
    3. ' and' → logprob: -2.763747215270996
    4. ' so' → logprob: -4.263747215270996
    5. ' then' → logprob: -5.388747215270996
    6. 'if' → logprob: -5.638747215270996
    7. '            ' → logprob: -5.888747215270996
    8. ',' → logprob: -5.888747215270996
    9. '#' → logprob: -6.013747215270996
    10. '       ' → logprob: -6.388747215270996

Token 2919: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.3209547698497772
    2. 'touch' → logprob: -1.4459547996520996
    3. ' street' → logprob: -3.6959547996520996
    4. 'sign' → logprob: -5.1959547996521
    5. 'the' → logprob: -5.5709547996521
    6. ' touch' → logprob: -6.0709547996521
    7. 'open' → logprob: -6.6959547996521
    8. ' the' → logprob: -8.445954322814941
    9. '
' → logprob: -8.820954322814941
    10. 'stre' → logprob: -9.320954322814941

Token 2920: '_other' (ID: 70088)
  Prédit: '_other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_other' → logprob: -2.5776860184123507e-06
    2. '```' → logprob: -13.87500286102295
    3. 'Other' → logprob: -14.25000286102295
    4. 'other' → logprob: -15.12500286102295
    5. '_out' → logprob: -16.000001907348633
    6. '   ' → logprob: -16.125001907348633
    7. '_under' → logprob: -16.500001907348633
    8. '_OTHER' → logprob: -17.000001907348633
    9. '_else' → logprob: -17.250001907348633
    10. '_old' → logprob: -17.500001907348633

Token 2921: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.6968400478363037
    2. 'to' → logprob: -0.6968400478363037
    3. '_to' → logprob: -6.071840286254883
    4. '[' → logprob: -7.696840286254883
    5. ':' → logprob: -8.196840286254883
    6. '   ' → logprob: -8.696840286254883
    7. ',' → logprob: -9.571840286254883
    8. '	to' → logprob: -9.571840286254883
    9. ')' → logprob: -9.696840286254883
    10. ' ' → logprob: -9.946840286254883

Token 2922: ' touch' (ID: 7381)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.0007108822464942932
    2. ' touch' → logprob: -7.250710964202881
    3. '_touch' → logprob: -14.500710487365723
    4. '
' → logprob: -15.875710487365723
    5. 'to' → logprob: -16.62571144104004
    6. ' ' → logprob: -16.75071144104004
    7. '.touch' → logprob: -16.75071144104004
    8. 't' → logprob: -17.12571144104004
    9. '  ' → logprob: -17.25071144104004
    10. '```' → logprob: -17.37571144104004

Token 2923: ' is' (ID: 382)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.239376038312912
    2. ' if' → logprob: -2.4893760681152344
    3. '
' → logprob: -3.2393760681152344
    4. '[
' → logprob: -3.4893760681152344
    5. 'if' → logprob: -4.239376068115234
    6. '[' → logprob: -4.864376068115234
    7. '#' → logprob: -5.239376068115234
    8. ' 
' → logprob: -5.614376068115234
    9. '               ' → logprob: -5.864376068115234
    10. '       ' → logprob: -5.989376068115234

Token 2924: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5881387591362
    2. ' in' → logprob: -0.9631387591362
    3. ' out' → logprob: -3.7131388187408447
    4. 'out' → logprob: -4.713138580322266
    5. ' street' → logprob: -5.463138580322266
    6. 'from' → logprob: -6.088138580322266
    7. 'street' → logprob: -6.088138580322266
    8. ' not' → logprob: -6.713138580322266
    9. 'reverse' → logprob: -6.838138580322266
    10. 'acute' → logprob: -6.963138580322266

Token 2925: ' opposite' (ID: 23821)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8192446231842041
    2. '           ' → logprob: -1.319244623184204
    3. ' if' → logprob: -1.819244623184204
    4. 'if' → logprob: -3.569244623184204
    5. '[' → logprob: -3.694244623184204
    6. '[
' → logprob: -4.194244384765625
    7. '               ' → logprob: -5.444244384765625
    8. ' 
' → logprob: -5.444244384765625
    9. '\n' → logprob: -5.444244384765625
    10. ')' → logprob: -5.569244384765625

Token 2926: ' direction' (ID: 9262)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.040554165840149
    2. '
' → logprob: -1.540554165840149
    3. '[' → logprob: -2.4155540466308594
    4. '[
' → logprob: -2.6655540466308594
    5. '```' → logprob: -3.5405540466308594
    6. '_
' → logprob: -3.6655540466308594
    7. ' if' → logprob: -3.7905540466308594
    8. 'if' → logprob: -3.9155540466308594
    9. '_' → logprob: -3.9155540466308594
    10. ')
' → logprob: -4.040554046630859

Token 2927: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14748674631118774
    2. ' if' → logprob: -2.397486686706543
    3. 'if' → logprob: -3.147486686706543
    4. '               ' → logprob: -7.022486686706543
    5. '       ' → logprob: -7.647486686706543
    6. ',' → logprob: -8.272486686706543
    7. '[
' → logprob: -8.772486686706543
    8. '   ' → logprob: -8.897486686706543
    9. '
' → logprob: -8.897486686706543
    10. '[' → logprob: -9.147486686706543

Token 2928: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3712886869907379
    2. ' if' → logprob: -1.6212886571884155
    3. 'if' → logprob: -2.246288776397705
    4. '#' → logprob: -5.871288776397705
    5. 'direction' → logprob: -7.496288776397705
    6. 'If' → logprob: -7.871288776397705
    7. ' c' → logprob: -8.371288299560547
    8. 'remove' → logprob: -8.496288299560547
    9. ' #' → logprob: -8.496288299560547
    10. 'i' → logprob: -8.621288299560547

Token 2929: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6573150157928467
    2. 'if' → logprob: -0.7823150157928467
    3. '#' (adapté à ' #') → logprob: -4.282315254211426
    4. ' if' → logprob: -4.782315254211426
    5. 'for' → logprob: -6.782315254211426
    6. 'remove' → logprob: -8.282315254211426
    7. 'direction' → logprob: -8.782315254211426
    8. '```' → logprob: -9.282315254211426
    9. 'd' → logprob: -9.657315254211426
    10. 'edges' → logprob: -9.907315254211426

Token 2930: ' Angle' (ID: 57919)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.07221133261919022
    2. '           ' → logprob: -3.322211265563965
    3. ' if' → logprob: -3.572211265563965
    4. 'for' → logprob: -5.947211265563965
    5. '#' → logprob: -6.322211265563965
    6. 'remove' → logprob: -8.072211265563965
    7. 'allowed' → logprob: -8.447211265563965
    8. 'If' → logprob: -9.572211265563965
    9. '```' → logprob: -9.697211265563965
    10. ' forbidden' → logprob: -9.822211265563965

Token 2931: ' computed' (ID: 46716)
  Prédit: '_sign'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_sign' → logprob: -1.0149072408676147
    2. '_cos' → logprob: -1.1399072408676147
    3. '_between' → logprob: -2.2649073600769043
    4. ' between' → logprob: -3.1399073600769043
    5. '_type' → logprob: -3.3899073600769043
    6. ')' → logprob: -3.8899073600769043
    7. ' <' → logprob: -4.014907360076904
    8. ' <=' → logprob: -4.139907360076904
    9. '_direction' → logprob: -4.264907360076904
    10. ' =' → logprob: -4.639907360076904

Token 2932: ' at' (ID: 540)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.509017288684845
    2. '=' → logprob: -2.1340172290802
    3. ' =' → logprob: -3.0090172290802
    4. ' between' → logprob: -3.1340172290802
    5. ' )' → logprob: -3.3840172290802
    6. ' at' → logprob: -3.7590172290802
    7. ':' → logprob: -3.7590172290802
    8. 'between' → logprob: -4.509017467498779
    9. '):' → logprob: -4.509017467498779
    10. ' is' → logprob: -4.759017467498779

Token 2933: ' touch' (ID: 7381)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -6.694766489090398e-05
    2. ' touch' → logprob: -9.625066757202148
    3. 'the' → logprob: -15.750066757202148
    4. '`' → logprob: -15.875066757202148
    5. 'open' → logprob: -15.875066757202148
    6. '_touch' → logprob: -16.37506675720215
    7. 'sign' → logprob: -16.50006675720215
    8. '.touch' → logprob: -16.62506675720215
    9. '```' → logprob: -16.75006675720215
    10. '**' → logprob: -17.50006675720215

Token 2934: '.
' (ID: 558)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10918857902288437
    2. ' if' → logprob: -3.4841885566711426
    3. '
' → logprob: -3.6091885566711426
    4. ')' → logprob: -4.234188556671143
    5. ')
' → logprob: -4.734188556671143
    6. '\n' → logprob: -5.234188556671143
    7. '               ' → logprob: -5.734188556671143
    8. '       ' → logprob: -5.859188556671143
    9. ':
' → logprob: -6.984188556671143
    10. '\' → logprob: -7.234188556671143

Token 2935: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.28696346282958984
    2. ' if' → logprob: -2.03696346282959
    3. 'if' → logprob: -2.16196346282959
    4. 'If' → logprob: -7.28696346282959
    5. '               ' → logprob: -7.66196346282959
    6. '
' → logprob: -7.78696346282959
    7. '       ' → logprob: -7.91196346282959
    8. '#' → logprob: -8.16196346282959
    9. '```' → logprob: -8.28696346282959
    10. '   ' → logprob: -8.78696346282959

Token 2936: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.03964100033044815
    2. '           ' → logprob: -3.2896409034729004
    3. 'for' → logprob: -7.1646409034729
    4. ' if' → logprob: -7.9146409034729
    5. 'f' → logprob: -9.289641380310059
    6. 'angle' → logprob: -9.289641380310059
    7. 'allow' → logprob: -10.164641380310059
    8. 'allowed' → logprob: -10.164641380310059
    9. 'import' → logprob: -10.539641380310059
    10. '#' (adapté à ' #') → logprob: -10.539641380310059

Token 2937: ' So' (ID: 2632)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.3215715289115906
    2. ' if' → logprob: -1.8215715885162354
    3. '           ' → logprob: -2.1965715885162354
    4. '
' → logprob: -7.821571350097656
    5. '   ' → logprob: -8.071571350097656
    6. '               ' → logprob: -8.321571350097656
    7. 'for' → logprob: -8.571571350097656
    8. '```' → logprob: -8.696571350097656
    9. '       ' → logprob: -8.821571350097656
    10. 'direction' → logprob: -9.321571350097656

Token 2938: ' angle' (ID: 16538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.04935823008418083
    2. ' if' → logprob: -3.0493581295013428
    3. '           ' → logprob: -8.299358367919922
    4. '#' → logprob: -8.549358367919922
    5. '
' → logprob: -9.549358367919922
    6. 'import' → logprob: -10.049358367919922
    7. 'direction' → logprob: -10.049358367919922
    8. 'for' → logprob: -10.299358367919922
    9. 'c' → logprob: -10.674358367919922
    10. 'continue' → logprob: -11.049358367919922

Token 2939: ' between' (ID: 2870)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.6108939051628113
    2. ' <=' → logprob: -1.110893964767456
    3. '_cos' → logprob: -2.860893964767456
    4. '<' → logprob: -3.360893964767456
    5. ')' → logprob: -4.485893726348877
    6. '<=' → logprob: -4.610893726348877
    7. ' >' → logprob: -5.610893726348877
    8. ' =' → logprob: -5.985893726348877
    9. '   ' → logprob: -6.860893726348877
    10. '_angle' → logprob: -7.110893726348877

Token 2940: ' sign' (ID: 2232)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.049540434032678604
    2. ' v' → logprob: -3.9245405197143555
    3. 'touch' → logprob: -4.1745405197143555
    4. 'sign' → logprob: -4.7995405197143555
    5. ' sign' → logprob: -6.7995405197143555
    6. ' touch' → logprob: -6.9245405197143555
    7. '(v' → logprob: -7.0495405197143555
    8. 'vec' → logprob: -7.5495405197143555
    9. 'vectors' → logprob: -7.6745405197143555
    10. '   ' → logprob: -8.299540519714355

Token 2941: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6869991421699524
    2. 'and' → logprob: -1.0619990825653076
    3. ',' → logprob: -2.9369990825653076
    4. 'segment' → logprob: -3.5619990825653076
    5. '           ' → logprob: -4.061999320983887
    6. '   ' → logprob: -4.936999320983887
    7. 'vector' → logprob: -4.936999320983887
    8. ')' → logprob: -4.936999320983887
    9. ' segment' → logprob: -5.311999320983887
    10. '_segment' → logprob: -5.936999320983887

Token 2942: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.6113200187683105
    2. ' street' → logprob: -0.9863200187683105
    3. 'v' → logprob: -2.7363200187683105
    4. 'touch' → logprob: -4.8613200187683105
    5. ' v' → logprob: -5.3613200187683105
    6. ' touch' → logprob: -6.1113200187683105
    7. '(v' → logprob: -6.3613200187683105
    8. ' (' → logprob: -6.8613200187683105
    9. '(' → logprob: -7.3613200187683105
    10. '(st' → logprob: -8.236320495605469

Token 2943: ' at' (ID: 540)
  Prédit: '_other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_other' → logprob: -0.000795927713625133
    2. '           ' → logprob: -7.375795841217041
    3. 'other' → logprob: -10.1257963180542
    4. ',' → logprob: -11.0007963180542
    5. '_sign' → logprob: -11.5007963180542
    6. '   ' → logprob: -11.6257963180542
    7. ')' → logprob: -11.6257963180542
    8. '       ' → logprob: -12.1257963180542
    9. 'segment' → logprob: -12.2507963180542
    10. '_segment' → logprob: -12.2507963180542

Token 2944: ' touch' (ID: 7381)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.00024239711638074368
    2. ' touch' → logprob: -8.750242233276367
    3. 'sign' → logprob: -10.000242233276367
    4. 'the' → logprob: -11.125242233276367
    5. '_touch' → logprob: -12.000242233276367
    6. 'that' → logprob: -12.750242233276367
    7. '```' → logprob: -13.000242233276367
    8. '.touch' → logprob: -13.500242233276367
    9. '   ' → logprob: -13.625242233276367
    10. ')' → logprob: -13.750242233276367

Token 2945: ' is' (ID: 382)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14003019034862518
    2. ' if' → logprob: -2.6400301456451416
    3. ')' → logprob: -3.7650301456451416
    4. ')
' → logprob: -4.390030384063721
    5. 'if' → logprob: -4.765030384063721
    6. '       ' → logprob: -5.890030384063721
    7. '
' → logprob: -5.890030384063721
    8. '               ' → logprob: -6.265030384063721
    9. ':
' → logprob: -6.640030384063721
    10. '```' → logprob: -7.265030384063721

Token 2946: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0012257046764716506
    2. ' c' → logprob: -7.251225471496582
    3. 'abs' → logprob: -8.251225471496582
    4. '   ' → logprob: -10.001225471496582
    5. '<' → logprob: -10.251225471496582
    6. '<c' → logprob: -10.251225471496582
    7. '0' → logprob: -11.251225471496582
    8. '-c' → logprob: -11.376225471496582
    9. '-' → logprob: -11.376225471496582
    10. '=c' → logprob: -11.501225471496582

Token 2947: '.
' (ID: 558)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.44087108969688416
    2. '           ' → logprob: -1.9408711194992065
    3. '\n' → logprob: -2.190871000289917
    4. '
' → logprob: -3.690871000289917
    5. ')
' → logprob: -3.940871000289917
    6. ',' → logprob: -4.940871238708496
    7. '[' → logprob: -5.065871238708496
    8. '\' → logprob: -5.440871238708496
    9. ' if' → logprob: -5.440871238708496
    10. '<|end|>' → logprob: -5.690871238708496

Token 2948: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006333410274237394
    2. ' if' → logprob: -6.006333351135254
    3. 'if' → logprob: -6.131333351135254
    4. '       ' → logprob: -7.381333351135254
    5. '\n' → logprob: -8.506333351135254
    6. '               ' → logprob: -8.631333351135254
    7. '		' → logprob: -8.881333351135254
    8. '            
' → logprob: -8.881333351135254
    9. '\t' → logprob: -9.256333351135254
    10. '            ' → logprob: -10.131333351135254

Token 2949: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07235371321439743
    2. ' if' → logprob: -3.3223536014556885
    3. 'if' → logprob: -3.4473536014556885
    4. '       ' → logprob: -7.072353839874268
    5. '               ' → logprob: -7.697353839874268
    6. '```' → logprob: -8.69735336303711
    7. '            ' → logprob: -9.57235336303711
    8. '   ' → logprob: -9.57235336303711
    9. '            
' → logprob: -9.94735336303711
    10. ' \' → logprob: -10.57235336303711

Token 2950: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.23574517667293549
    2. '           ' → logprob: -2.1107451915740967
    3. ' if' → logprob: -2.4857451915740967
    4. 'angle' → logprob: -5.485744953155518
    5. '
' → logprob: -8.485745429992676
    6. '```' → logprob: -8.485745429992676
    7. '   ' → logprob: -8.610745429992676
    8. ')' → logprob: -9.235745429992676
    9. 'import' → logprob: -9.360745429992676
    10. '               ' → logprob: -9.360745429992676

Token 2951: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.005339893512427807
    2. ' c' → logprob: -5.255340099334717
    3. 'abs' → logprob: -9.880339622497559
    4. 'angle' → logprob: -10.255339622497559
    5. '   ' → logprob: -12.005339622497559
    6. ' abs' → logprob: -12.505339622497559
    7. ' angle' → logprob: -12.505339622497559
    8. '	c' → logprob: -13.505339622497559
    9. 'cos' → logprob: -14.005339622497559
    10. ' ' → logprob: -14.130339622497559

Token 2952: '>' (ID: 29)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.06705741584300995
    2. ' <' → logprob: -2.9420573711395264
    3. '>' → logprob: -4.5670576095581055
    4. '<=' → logprob: -7.0670576095581055
    5. ' >' → logprob: -7.5670576095581055
    6. ' <=' → logprob: -9.067057609558105
    7. '>=' → logprob: -9.942057609558105
    8. '{' → logprob: -10.067057609558105
    9. ')' → logprob: -10.692057609558105
    10. '[' → logprob: -11.067057609558105

Token 2953: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004118531011044979
    2. ' ' → logprob: -5.5041184425354
    3. ')' → logprob: -11.254118919372559
    4. '>' → logprob: -11.504118919372559
    5. '1' → logprob: -12.504118919372559
    6. '=' → logprob: -12.629118919372559
    7. '   ' → logprob: -13.004118919372559
    8. '+' → logprob: -13.254118919372559
    9. '-' → logprob: -13.379118919372559
    10. '
' → logprob: -14.504118919372559

Token 2954: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030678298324346542
    2. ':
' → logprob: -3.6556782722473145
    3. ' and' → logprob: -6.6556782722473145
    4. ',' → logprob: -7.0306782722473145
    5. '           ' → logprob: -7.1556782722473145
    6. ' :' → logprob: -7.2806782722473145
    7. ' :
' → logprob: -9.280678749084473
    8. '>' → logprob: -9.655678749084473
    9. ')' → logprob: -9.780678749084473
    10. '               ' → logprob: -9.905678749084473

Token 2955: ' angle' (ID: 16538)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6695052981376648
    2. ' ' → logprob: -2.0445053577423096
    3. ' #' → logprob: -2.9195053577423096
    4. ' (' → logprob: -2.9195053577423096
    5. '           ' → logprob: -3.6695053577423096
    6. ' )' → logprob: -3.9195053577423096
    7. ' we' → logprob: -4.1695051193237305
    8. '               ' → logprob: -4.1695051193237305
    9. ' remove' → logprob: -4.1695051193237305
    10. ' ' → logprob: -4.2945051193237305

Token 2956: ' acute' (ID: 43944)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.29603901505470276
    2. ' >' → logprob: -2.04603910446167
    3. '>' → logprob: -2.79603910446167
    4. '<' → logprob: -3.17103910446167
    5. ' <=' → logprob: -4.42103910446167
    6. ')' → logprob: -5.04603910446167
    7. '<=' → logprob: -6.67103910446167
    8. ' is' → logprob: -7.54603910446167
    9. '=' → logprob: -7.79603910446167
    10. ')<' → logprob: -8.046038627624512

Token 2957: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14620304107666016
    2. ' :' → logprob: -3.02120304107666
    3. ' else' → logprob: -3.39620304107666
    4. ',' → logprob: -4.02120304107666
    5. '           ' → logprob: -4.77120304107666
    6. 'else' → logprob: -4.89620304107666
    7. '   ' → logprob: -5.39620304107666
    8. ')' → logprob: -5.77120304107666
    9. ' ,' → logprob: -6.14620304107666
    10. ':
' → logprob: -6.64620304107666

Token 2958: ' obt' (ID: 5564)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.32060807943344116
    2. 'else' → logprob: -3.070608139038086
    3. ' graph' → logprob: -3.070608139038086
    4. '           ' → logprob: -3.320608139038086
    5. ' ' → logprob: -3.570608139038086
    6. ':' → logprob: -3.945608139038086
    7. '   ' → logprob: -4.195608139038086
    8. ' :' → logprob: -4.195608139038086
    9. '               ' → logprob: -4.820608139038086
    10. ' "' → logprob: -5.070608139038086

Token 2959: 'use' (ID: 1821)
  Prédit: 'use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.0028168857097625732
    2. '>' → logprob: -6.002816677093506
    3. '=' → logprob: -9.752817153930664
    4. '```' → logprob: -9.752817153930664
    5. 'user' → logprob: -10.627817153930664
    6. 'used' → logprob: -10.627817153930664
    7. '</' → logprob: -10.752817153930664
    8. 'u' → logprob: -10.877817153930664
    9. '<=' → logprob: -10.877817153930664
    10. 'us' → logprob: -11.127817153930664

Token 2960: ' side' (ID: 4307)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7371504902839661
    2. ' <' → logprob: -1.6121504306793213
    3. '_angle' → logprob: -2.7371504306793213
    4. '=' → logprob: -3.1121504306793213
    5. ' =' → logprob: -3.2371504306793213
    6. ' else' → logprob: -3.4871504306793213
    7. '_' → logprob: -3.7371504306793213
    8. '<' → logprob: -4.3621506690979
    9. ' side' → logprob: -4.4871506690979
    10. '_side' → logprob: -4.4871506690979

Token 2961: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7243762016296387
    2. '=' → logprob: -0.8493762016296387
    3. ' is' → logprob: -3.3493762016296387
    4. ' <' → logprob: -3.4743762016296387
    5. ':' → logprob: -4.724376201629639
    6. ' >' → logprob: -5.724376201629639
    7. '>' → logprob: -6.349376201629639
    8. ' else' → logprob: -6.599376201629639
    9. '<' → logprob: -6.724376201629639
    10. 'else' → logprob: -7.349376201629639

Token 2962: ' opposite' (ID: 23821)
  Prédit: ' street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' street' → logprob: -0.38070183992385864
    2. 'street' → logprob: -1.5057017803192139
    3. 'touch' → logprob: -2.880701780319214
    4. ' touch' → logprob: -3.630701780319214
    5. ' the' → logprob: -5.130702018737793
    6. ' open' → logprob: -6.255702018737793
    7. 'the' → logprob: -6.880702018737793
    8. 'open' → logprob: -7.255702018737793
    9. ' other' → logprob: -7.630702018737793
    10. 'sign' → logprob: -8.255702018737793

Token 2963: ' direction' (ID: 9262)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.5770630836486816
    2. ':' → logprob: -2.0770630836486816
    3. 'else' → logprob: -2.0770630836486816
    4. '           ' → logprob: -2.8270630836486816
    5. ' else' → logprob: -2.8270630836486816
    6. ':
' → logprob: -2.8270630836486816
    7. '=' → logprob: -2.9520630836486816
    8. '.' → logprob: -3.2020630836486816
    9. '```' → logprob: -3.4520630836486816
    10. '>' → logprob: -3.5770630836486816

Token 2964: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.21686851978302
    2. ')' → logprob: -1.71686851978302
    3. ' if' → logprob: -1.84186851978302
    4. '   ' → logprob: -3.0918684005737305
    5. ',' → logprob: -3.2168684005737305
    6. ' else' → logprob: -3.3418684005737305
    7. ':
' → logprob: -3.4668684005737305
    8. 'else' → logprob: -3.8418684005737305
    9. '               ' → logprob: -3.9668684005737305
    10. '       ' → logprob: -4.3418684005737305

Token 2965: 'street' (ID: 55690)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8073123693466187
    2. ')
' → logprob: -2.307312488555908
    3. 'touch' → logprob: -2.557312488555908
    4. '),' → logprob: -2.807312488555908
    5. '1' → logprob: -2.932312488555908
    6. '0' → logprob: -3.057312488555908
    7. '```' → logprob: -3.807312488555908
    8. '):
' → logprob: -3.807312488555908
    9. 'from' → logprob: -4.057312488555908
    10. ',' → logprob: -4.057312488555908

Token 2966: '_other' (ID: 70088)
  Prédit: '_other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_other' → logprob: -6.992775888647884e-05
    2. ')_' → logprob: -11.125069618225098
    3. '_' → logprob: -11.250069618225098
    4. ')' → logprob: -11.375069618225098
    5. 'other' → logprob: -12.125069618225098
    6. '[' → logprob: -12.250069618225098
    7. '_out' → logprob: -12.375069618225098
    8. '_side' → logprob: -13.125069618225098
    9. ']_' → logprob: -13.125069618225098
    10. '_OTHER' → logprob: -13.375069618225098

Token 2967: ')
' (ID: 446)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3594816029071808
    2. ')' → logprob: -1.4844815731048584
    3. ',' → logprob: -3.8594815731048584
    4. 'to' → logprob: -4.1094818115234375
    5. '),' → logprob: -4.4844818115234375
    6. ' )' → logprob: -5.3594818115234375
    7. ' ->' → logprob: -5.7344818115234375
    8. ')>' → logprob: -5.8594818115234375
    9. ').' → logprob: -6.2344818115234375
    10. '<|end|>' → logprob: -6.3594818115234375

Token 2968: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8429577350616455
    2. ' else' → logprob: -0.8429577350616455
    3. 'else' → logprob: -2.4679577350616455
    4. '               ' → logprob: -4.467957496643066
    5. ' if' → logprob: -4.467957496643066
    6. ':' → logprob: -5.342957496643066
    7. ':
' → logprob: -5.467957496643066
    8. ',' → logprob: -5.717957496643066
    9. ')' → logprob: -6.217957496643066
    10. '.' → logprob: -6.342957496643066

Token 2969: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026599371805787086
    2. ' if' → logprob: -4.401599407196045
    3. '[' → logprob: -5.401599407196045
    4. '               ' → logprob: -5.651599407196045
    5. '       ' → logprob: -7.151599407196045
    6. '[
' → logprob: -7.151599407196045
    7. 'if' → logprob: -7.526599407196045
    8. '                           ' → logprob: -8.026598930358887
    9. '```' → logprob: -8.026598930358887
    10. '                       ' → logprob: -8.151598930358887

Token 2970: ' If' (ID: 1843)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.42434731125831604
    2. '           ' → logprob: -1.5493472814559937
    3. 'if' → logprob: -2.049347400665283
    4. '               ' → logprob: -6.424347400665283
    5. '   ' → logprob: -7.549347400665283
    6. '       ' → logprob: -7.924347400665283
    7. '```' → logprob: -8.549346923828125
    8. '{
' → logprob: -8.799346923828125
    9. ' c' → logprob: -8.799346923828125
    10. ' ' → logprob: -8.924346923828125

Token 2971: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.08895429968833923
    2. ' c' → logprob: -2.463954210281372
    3. ' ' → logprob: -12.838953971862793
    4. ' ' → logprob: -13.338953971862793
    5. '	c' → logprob: -13.338953971862793
    6. '0' → logprob: -13.588953971862793
    7. '<' → logprob: -13.588953971862793
    8. '
' → logprob: -14.213953971862793
    9. '`' → logprob: -14.338953971862793
    10. 'angle' → logprob: -14.463953971862793

Token 2972: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0068464456126093864
    2. ' <' → logprob: -5.0068464279174805
    3. '>' → logprob: -9.50684642791748
    4. '<=' → logprob: -10.50684642791748
    5. '=' → logprob: -11.38184642791748
    6. ')<' → logprob: -12.38184642791748
    7. '[' → logprob: -13.25684642791748
    8. '==' → logprob: -13.25684642791748
    9. '<
' → logprob: -13.50684642791748
    10. ' >' → logprob: -13.63184642791748

Token 2973: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0035154952201992273
    2. '=' → logprob: -5.753515720367432
    3. ' ' → logprob: -8.003515243530273
    4. '1' → logprob: -13.503515243530273
    5. '-' → logprob: -14.753515243530273
    6. ',' → logprob: -15.003515243530273
    7. '   ' → logprob: -15.128515243530273
    8. '=
' → logprob: -15.878515243530273
    9. '
' → logprob: -16.003515243530273
    10. '#' → logprob: -16.128515243530273

Token 2974: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.43616095185279846
    2. ':' → logprob: -1.061160922050476
    3. ':
' → logprob: -5.311161041259766
    4. ',
' → logprob: -7.186161041259766
    5. '           ' → logprob: -7.561161041259766
    6. ' ,' → logprob: -8.186161041259766
    7. ' and' → logprob: -8.936161041259766
    8. ')' → logprob: -9.561161041259766
    9. '#' → logprob: -9.561161041259766
    10. '                           ' → logprob: -9.686161041259766

Token 2975: ' angle' (ID: 16538)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.5696367025375366
    2. ' ' → logprob: -1.4446367025375366
    3. ' street' → logprob: -1.9446367025375366
    4. ' (' → logprob: -4.319636821746826
    5. 'c' → logprob: -4.444636821746826
    6. ''' → logprob: -5.694636821746826
    7. ' '' → logprob: -5.819636821746826
    8. ' space' → logprob: -5.944636821746826
    9. ' #' → logprob: -5.944636821746826
    10. ' ' → logprob: -5.944636821746826

Token 2976: ' obt' (ID: 5564)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.7099308371543884
    2. ' <' → logprob: -0.7099308371543884
    3. ' acute' → logprob: -5.334930896759033
    4. 'acute' → logprob: -5.584930896759033
    5. ' >' → logprob: -5.959930896759033
    6. '>' → logprob: -6.209930896759033
    7. ' ' → logprob: -6.709930896759033
    8. ' obt' → logprob: -7.584930896759033
    9. ' ' → logprob: -8.584930419921875
    10. '   ' → logprob: -8.834930419921875

Token 2977: 'use' (ID: 1821)
  Prédit: 'use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.660595178604126
    2. '<' → logprob: -0.910595178604126
    3. '>' → logprob: -2.660595178604126
    4. '```' → logprob: -5.410594940185547
    5. '<=' → logprob: -6.160594940185547
    6. '<-' → logprob: -6.410594940185547
    7. '</' → logprob: -7.535594940185547
    8. 'c' → logprob: -8.160594940185547
    9. '<c' → logprob: -8.410594940185547
    10. '=' → logprob: -8.660594940185547

Token 2978: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7262799143791199
    2. ':' → logprob: -1.2262799739837646
    3. ' side' → logprob: -2.4762799739837646
    4. ':
' → logprob: -2.7262799739837646
    5. ' and' → logprob: -3.9762799739837646
    6. ',
' → logprob: -4.7262797355651855
    7. ' ,' → logprob: -5.2262797355651855
    8. '_side' → logprob: -5.6012797355651855
    9. 'side' → logprob: -5.7262797355651855
    10. '):
' → logprob: -5.7262797355651855

Token 2979: ' obt' (ID: 5564)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.2417270541191101
    2. ' ' → logprob: -2.741727113723755
    3. ' c' → logprob: -3.616727113723755
    4. 'graph' → logprob: -3.866727113723755
    5. ' if' → logprob: -3.991727113723755
    6. ' street' → logprob: -3.991727113723755
    7. ' continue' → logprob: -4.366726875305176
    8. ' ' → logprob: -4.366726875305176
    9. ' d' → logprob: -4.491726875305176
    10. ' space' → logprob: -4.991726875305176

Token 2980: 'use' (ID: 1821)
  Prédit: 'use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.0012134487042203546
    2. 'ute' → logprob: -8.751213073730469
    3. '```' → logprob: -8.751213073730469
    4. '(use' → logprob: -8.876213073730469
    5. 'c' → logprob: -9.251213073730469
    6. 'us' → logprob: -9.376213073730469
    7. 'user' → logprob: -9.751213073730469
    8. 'u' → logprob: -9.751213073730469
    9. 'uste' → logprob: -9.751213073730469
    10. '
' → logprob: -9.876213073730469

Token 2981: ' side' (ID: 4307)
  Prédit: '_side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -0.15483732521533966
    2. ' side' → logprob: -2.5298373699188232
    3. 'side' → logprob: -3.0298373699188232
    4. '_p' → logprob: -4.779837131500244
    5. '_' → logprob: -6.404837131500244
    6. ' _' → logprob: -6.779837131500244
    7. '_angle' → logprob: -6.904837131500244
    8. ')' → logprob: -7.154837131500244
    9. '_s' → logprob: -7.654837131500244
    10. '```' → logprob: -8.029837608337402

Token 2982: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08313925564289093
    2. ' =' → logprob: -3.083139181137085
    3. ' is' → logprob: -4.083139419555664
    4. 'from' → logprob: -4.958139419555664
    5. ' to' → logprob: -5.958139419555664
    6. '_to' → logprob: -6.083139419555664
    7. ' from' → logprob: -7.208139419555664
    8. 'to' → logprob: -7.208139419555664
    9. '==' → logprob: -7.333139419555664
    10. 'is' → logprob: -7.708139419555664

Token 2983: ' touch' (ID: 7381)
  Prédit: ' street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' street' → logprob: -0.08808810263872147
    2. ' touch' → logprob: -2.588088035583496
    3. 'touch' → logprob: -5.463088035583496
    4. 'street' → logprob: -5.588088035583496
    5. ' open' → logprob: -6.838088035583496
    6. 'open' → logprob: -10.588088035583496
    7. ' touching' → logprob: -11.838088035583496
    8. ' graph' → logprob: -12.088088035583496
    9. ' ' → logprob: -12.088088035583496
    10. ' space' → logprob: -12.088088035583496

Token 2984: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5700551867485046
    2. ':
' → logprob: -1.8200552463531494
    3. '[' → logprob: -2.6950552463531494
    4. ':' → logprob: -2.8200552463531494
    5. ' if' → logprob: -3.1950552463531494
    6. '               ' → logprob: -4.19505500793457
    7. ')' → logprob: -4.44505500793457
    8. 'if' → logprob: -4.69505500793457
    9. '
' → logprob: -4.82005500793457
    10. '[
' → logprob: -4.94505500793457

Token 2985: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.056333187967538834
    2. '               ' → logprob: -4.181333065032959
    3. ' if' → logprob: -4.306333065032959
    4. 'if' → logprob: -4.931333065032959
    5. '\n' → logprob: -6.056333065032959
    6. ':
' → logprob: -6.181333065032959
    7. '[
' → logprob: -6.181333065032959
    8. '                       ' → logprob: -6.681333065032959
    9. '                           ' → logprob: -6.681333065032959
    10. '[' → logprob: -6.931333065032959

Token 2986: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1501142978668213
    2. ' if' → logprob: -2.2751142978668213
    3. 'if' → logprob: -3.7751142978668213
    4. '               ' → logprob: -5.400114059448242
    5. '\n' → logprob: -6.025114059448242
    6. '       ' → logprob: -6.650114059448242
    7. '{
' → logprob: -7.150114059448242
    8. ' 
' → logprob: -7.650114059448242
    9. '            
' → logprob: -7.650114059448242
    10. '                       ' → logprob: -7.775114059448242

Token 2987: ' So' (ID: 2632)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16262951493263245
    2. 'if' → logprob: -2.1626296043395996
    3. ' if' → logprob: -3.4126296043395996
    4. '               ' → logprob: -7.2876296043396
    5. '
' → logprob: -7.6626296043396
    6. '       ' → logprob: -8.287629127502441
    7. '                       ' → logprob: -8.912629127502441
    8. '{
' → logprob: -9.037629127502441
    9. '                   ' → logprob: -9.537629127502441
    10. '   ' → logprob: -9.912629127502441

Token 2988: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.057596419006586075
    2. ' if' → logprob: -2.932596445083618
    3. '           ' → logprob: -5.932596206665039
    4. 'import' → logprob: -10.557596206665039
    5. '               ' → logprob: -11.932596206665039
    6. 'for' → logprob: -12.057596206665039
    7. 'continue' → logprob: -12.432596206665039
    8. '            ' → logprob: -12.682596206665039
    9. '   ' → logprob: -12.807596206665039
    10. '#' → logprob: -13.307596206665039

Token 2989: ' angle' (ID: 16538)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.1128304973244667
    2. ' c' → logprob: -2.237830400466919
    3. 'abs' → logprob: -13.23783016204834
    4. '           ' → logprob: -13.61283016204834
    5. '   ' → logprob: -13.86283016204834
    6. '	c' → logprob: -13.86283016204834
    7. '(c' → logprob: -13.98783016204834
    8. ' ' → logprob: -14.23783016204834
    9. ' abs' → logprob: -14.73783016204834
    10. ' ' → logprob: -14.98783016204834

Token 2990: ' is' (ID: 382)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.2660793960094452
    2. ' <' → logprob: -1.5160794258117676
    3. '>' → logprob: -4.641079425811768
    4. ' >' → logprob: -6.266079425811768
    5. '<=' → logprob: -6.891079425811768
    6. ' <=' → logprob: -7.641079425811768
    7. '   ' → logprob: -8.39107894897461
    8. '_cos' → logprob: -8.76607894897461
    9. '           ' → logprob: -8.89107894897461
    10. ')' → logprob: -9.26607894897461

Token 2991: ' acute' (ID: 43944)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.3612314462661743
    2. '>' → logprob: -1.7362314462661743
    3. ' <' → logprob: -2.2362313270568848
    4. ' >' → logprob: -4.736231327056885
    5. '0' → logprob: -5.486231327056885
    6. '>=' → logprob: -6.736231327056885
    7. '<=' → logprob: -6.861231327056885
    8. ' ' → logprob: -6.986231327056885
    9. ')' → logprob: -7.111231327056885
    10. '   ' → logprob: -7.486231327056885

Token 2992: '(c' (ID: 2410)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04885270446538925
    2. ' and' → logprob: -3.9238526821136475
    3. ':
' → logprob: -5.173852920532227
    4. '>' → logprob: -5.298852920532227
    5. ',' → logprob: -6.048852920532227
    6. ' (' → logprob: -6.298852920532227
    7. ')' → logprob: -6.423852920532227
    8. '[' → logprob: -6.548852920532227
    9. ' :' → logprob: -6.548852920532227
    10. '   ' → logprob: -6.798852920532227

Token 2993: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.03535408899188042
    2. ' >' → logprob: -3.4103541374206543
    3. '<' → logprob: -7.410354137420654
    4. ')>' → logprob: -7.535354137420654
    5. ')' → logprob: -8.410353660583496
    6. '[' → logprob: -9.285353660583496
    7. ' <' → logprob: -9.535353660583496
    8. '>=' → logprob: -10.035353660583496
    9. '<=' → logprob: -10.160353660583496
    10. '>
' → logprob: -10.910353660583496

Token 2994: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018280261429026723
    2. ' ' → logprob: -8.62518310546875
    3. ')' → logprob: -13.37518310546875
    4. '>' → logprob: -14.75018310546875
    5. '   ' → logprob: -15.00018310546875
    6. '1' → logprob: -15.00018310546875
    7. ',' → logprob: -16.50018310546875
    8. '
' → logprob: -16.75018310546875
    9. '```' → logprob: -16.75018310546875
    10. '  ' → logprob: -17.12518310546875

Token 2995: '),' (ID: 936)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6772518754005432
    2. '),' → logprob: -1.3022518157958984
    3. '):' → logprob: -1.9272518157958984
    4. ')' → logprob: -2.6772518157958984
    5. ',' → logprob: -6.177251815795898
    6. '           ' → logprob: -6.427251815795898
    7. ':' → logprob: -7.802251815795898
    8. ':
' → logprob: -7.927251815795898
    9. '):

' → logprob: -8.052251815795898
    10. '               ' → logprob: -8.427251815795898

Token 2996: ' forbidden' (ID: 74435)
  Prédit: ' street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' street' → logprob: -0.9247888326644897
    2. ' continue' → logprob: -1.1747888326644897
    3. 'continue' → logprob: -2.7997889518737793
    4. '#' → logprob: -3.0497889518737793
    5. '           ' → logprob: -3.4247889518737793
    6. '               ' → logprob: -3.5497889518737793
    7. ' #' → logprob: -3.6747889518737793
    8. ' remove' → logprob: -3.9247889518737793
    9. 'street' → logprob: -3.9247889518737793
    10. 'remove' → logprob: -4.299788951873779

Token 2997: ' movement' (ID: 12772)
  Prédit: '_direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_direction' → logprob: -0.23502881824970245
    2. ' direction' → logprob: -2.8600287437438965
    3. '_edge' → logprob: -3.9850287437438965
    4. '   ' → logprob: -3.9850287437438965
    5. '_d' → logprob: -4.3600287437438965
    6. '_' → logprob: -4.4850287437438965
    7. ':' → logprob: -4.4850287437438965
    8. ' ' → logprob: -4.8600287437438965
    9. 'from' → logprob: -4.9850287437438965
    10. '_from' → logprob: -4.9850287437438965

Token 2998: ' is' (ID: 382)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.6731810569763184
    2. ' from' → logprob: -1.1731810569763184
    3. ' =' → logprob: -2.2981810569763184
    4. '_from' → logprob: -3.9231810569763184
    5. ' is' → logprob: -4.423181056976318
    6. ':' → logprob: -4.673181056976318
    7. ' (' → logprob: -4.673181056976318
    8. ' to' → logprob: -5.548181056976318
    9. '   ' → logprob: -5.548181056976318
    10. '=' → logprob: -5.673181056976318

Token 2999: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -1.0118762254714966
    2. ' from' → logprob: -1.1368762254714966
    3. ' (' → logprob: -1.5118762254714966
    4. ' street' → logprob: -2.761876106262207
    5. '(st' → logprob: -4.886876106262207
    6. 'street' → logprob: -4.886876106262207
    7. '(' → logprob: -5.386876106262207
    8. '   ' → logprob: -5.886876106262207
    9. '```' → logprob: -6.761876106262207
    10. ' ' → logprob: -6.886876106262207

Token 3000: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.355333149433136
    2. ' street' → logprob: -1.2303330898284912
    3. 'stre' → logprob: -5.23033332824707
    4. 'touch' → logprob: -6.85533332824707
    5. 'st' → logprob: -9.10533332824707
    6. ' touch' → logprob: -9.35533332824707
    7. '```' → logprob: -9.85533332824707
    8. 'open' → logprob: -10.48033332824707
    9. 'ob' → logprob: -11.10533332824707
    10. ' stre' → logprob: -11.23033332824707

Token 3001: '_other' (ID: 70088)
  Prédit: '_other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_other' → logprob: -6.749814019713085e-06
    2. 'Other' → logprob: -13.500006675720215
    3. '```' → logprob: -13.750006675720215
    4. ']_' → logprob: -14.625006675720215
    5. ')_' → logprob: -14.750006675720215
    6. '_under' → logprob: -14.875006675720215
    7. 'other' → logprob: -15.125006675720215
    8. '_OTHER' → logprob: -15.125006675720215
    9. '_outer' → logprob: -15.375006675720215
    10. '`' → logprob: -15.500006675720215

Token 3002: ' (' (ID: 350)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.3171771168708801
    2. ' ->' → logprob: -2.5671770572662354
    3. '_to' → logprob: -2.8171770572662354
    4. 'to' → logprob: -3.1921770572662354
    5. '->' → logprob: -3.9421770572662354
    6. ')' → logprob: -4.0671772956848145
    7. '[' → logprob: -4.3171772956848145
    8. ' ' → logprob: -4.5671772956848145
    9. ',' → logprob: -5.5671772956848145
    10. '```' → logprob: -5.9421772956848145

Token 3003: 'obt' (ID: 172737)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.37508776783943176
    2. ')' → logprob: -1.6250877380371094
    3. 'to' → logprob: -3.3750877380371094
    4. ' to' → logprob: -3.6250877380371094
    5. ' touch' → logprob: -4.000087738037109
    6. '```' → logprob: -4.625087738037109
    7. 'street' → logprob: -5.375087738037109
    8. '   ' → logprob: -5.750087738037109
    9. ' ' → logprob: -5.875087738037109
    10. ' )' → logprob: -6.375087738037109

Token 3004: 'use' (ID: 1821)
  Prédit: 'use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.7320514917373657
    2. 'uce' → logprob: -1.7320514917373657
    3. 'side' → logprob: -1.8570514917373657
    4. '```' → logprob: -2.357051372528076
    5. '_side' → logprob: -3.357051372528076
    6. 'u' → logprob: -3.732051372528076
    7. '_use' → logprob: -5.357051372528076
    8. 'ue' → logprob: -5.357051372528076
    9. '1' → logprob: -5.607051372528076
    10. ')' → logprob: -6.107051372528076

Token 3005: ' side' (ID: 4307)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7925736308097839
    2. '_side' → logprob: -1.0425736904144287
    3. ')_' → logprob: -1.7925736904144287
    4. '_' → logprob: -4.54257345199585
    5. ' _' → logprob: -5.79257345199585
    6. '```' → logprob: -6.04257345199585
    7. 'side' → logprob: -6.16757345199585
    8. '_to' → logprob: -6.29257345199585
    9. ' side' → logprob: -6.66757345199585
    10. '
' → logprob: -7.04257345199585

Token 3006: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3201630711555481
    2. ' to' → logprob: -1.4451630115509033
    3. 'to' → logprob: -3.5701630115509033
    4. ' )' → logprob: -5.195163249969482
    5. ' ->' → logprob: -6.820163249969482
    6. ' ' → logprob: -7.570163249969482
    7. '_to' → logprob: -7.695163249969482
    8. '```' → logprob: -7.945163249969482
    9. '')' → logprob: -8.320162773132324
    10. '->' → logprob: -8.570162773132324

Token 3007: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.13926415145397186
    2. '_to' → logprob: -3.6392641067504883
    3. '[' → logprob: -4.139264106750488
    4. ':' → logprob: -4.264264106750488
    5. '           ' → logprob: -4.389264106750488
    6. 'to' → logprob: -4.639264106750488
    7. '```' → logprob: -4.764264106750488
    8. '   ' → logprob: -4.764264106750488
    9. ' ->' → logprob: -5.264264106750488
    10. ' ' → logprob: -5.389264106750488

Token 3008: ' touch' (ID: 7381)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.2015189826488495
    2. ' touch' → logprob: -1.7015190124511719
    3. ''' → logprob: -10.201519012451172
    4. '"' → logprob: -11.076519012451172
    5. ' ' → logprob: -11.201519012451172
    6. '_touch' → logprob: -11.451519012451172
    7. 'acute' → logprob: -11.701519012451172
    8. ' acute' → logprob: -11.826519012451172
    9. ' ' → logprob: -12.701519012451172
    10. ' touche' → logprob: -13.951519012451172

Token 3009: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09523245692253113
    2. ':
' → logprob: -3.0952324867248535
    3. ' if' → logprob: -4.9702324867248535
    4. '\n' → logprob: -5.2202324867248535
    5. '               ' → logprob: -5.5952324867248535
    6. ':' → logprob: -5.5952324867248535
    7. 'if' → logprob: -5.7202324867248535
    8. '[' → logprob: -5.8452324867248535
    9. '[
' → logprob: -5.9702324867248535
    10. '       ' → logprob: -5.9702324867248535

Token 3010: 'acute' (ID: 31898)
  Prédit: ' acute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' acute' → logprob: -0.536432683467865
    2. 'acute' → logprob: -0.911432683467865
    3. ')' → logprob: -5.28643274307251
    4. ' )' → logprob: -5.28643274307251
    5. ' ' → logprob: -6.91143274307251
    6. ' ' → logprob: -7.28643274307251
    7. ''' → logprob: -7.78643274307251
    8. ' open' → logprob: -8.286432266235352
    9. ' street' → logprob: -9.411432266235352
    10. ',' → logprob: -9.536432266235352

Token 3011: ' side' (ID: 4307)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7798647284507751
    2. '_side' → logprob: -1.65486478805542
    3. 'side' → logprob: -1.65486478805542
    4. ' side' → logprob: -1.90486478805542
    5. '_other' → logprob: -5.40486478805542
    6. ')_' → logprob: -6.52986478805542
    7. '   ' → logprob: -7.02986478805542
    8. '```' → logprob: -7.65486478805542
    9. '[' → logprob: -7.90486478805542
    10. '),' → logprob: -7.90486478805542

Token 3012: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8424710035324097
    2. '.' → logprob: -1.9674710035324097
    3. ':' → logprob: -2.217471122741699
    4. ',' → logprob: -2.342471122741699
    5. ':
' → logprob: -2.717471122741699
    6. '           ' → logprob: -2.967471122741699
    7. '#' → logprob: -3.717471122741699
    8. ',
' → logprob: -4.217471122741699
    9. '\n' → logprob: -4.842471122741699
    10. ')
' → logprob: -5.217471122741699

Token 3013: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11015432327985764
    2. '               ' → logprob: -3.735154390335083
    3. '\n' → logprob: -4.110154151916504
    4. ' if' → logprob: -4.360154151916504
    5. ':
' → logprob: -4.485154151916504
    6. ':' → logprob: -4.485154151916504
    7. '[' → logprob: -5.735154151916504
    8. '       ' → logprob: -5.860154151916504
    9. 'if' → logprob: -5.860154151916504
    10. '.' → logprob: -6.110154151916504

Token 3014: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05847414582967758
    2. 'if' → logprob: -3.183474063873291
    3. '               ' → logprob: -4.808474063873291
    4. ' if' → logprob: -5.433474063873291
    5. '                       ' → logprob: -7.308474063873291
    6. '                   ' → logprob: -7.683474063873291
    7. '       ' → logprob: -8.05847454071045
    8. '                           ' → logprob: -8.30847454071045
    9. '#' (adapté à ' #') → logprob: -8.43347454071045
    10. '{
' → logprob: -9.05847454071045

Token 3015: ' If' (ID: 1843)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7892292737960815
    2. 'if' → logprob: -1.2892292737960815
    3. ' if' → logprob: -1.4142292737960815
    4. '               ' → logprob: -5.039229393005371
    5. '#' → logprob: -5.289229393005371
    6. 'for' → logprob: -5.414229393005371
    7. '[
' → logprob: -5.664229393005371
    8. '                   ' → logprob: -6.789229393005371
    9. 'graph' → logprob: -7.164229393005371
    10. ' for' → logprob: -7.164229393005371

Token 3016: ' angle' (ID: 16538)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.28336840867996216
    2. ' c' → logprob: -1.4083683490753174
    3. 'angle' → logprob: -6.6583685874938965
    4. ' angle' → logprob: -7.0333685874938965
    5. ' ' → logprob: -10.908368110656738
    6. ' ' → logprob: -11.283368110656738
    7. '	c' → logprob: -12.158368110656738
    8. '   ' → logprob: -12.533368110656738
    9. '
' → logprob: -13.158368110656738
    10. '`' → logprob: -13.970868110656738

Token 3017: ' is' (ID: 382)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0015274790348485112
    2. ' <' → logprob: -7.251527309417725
    3. '>' → logprob: -7.376527309417725
    4. '<=' → logprob: -8.626527786254883
    5. '==' → logprob: -12.251527786254883
    6. ' >' → logprob: -13.626527786254883
    7. ' <=' → logprob: -13.751527786254883
    8. '>=' → logprob: -14.251527786254883
    9. '=' → logprob: -14.501527786254883
    10. ')' → logprob: -14.626527786254883

Token 3018: ' obt' (ID: 5564)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '<' → logprob: -0.009902465157210827
    2. '>' → logprob: -5.634902477264404
    3. 'acute' → logprob: -5.884902477264404
    4. 'obt' → logprob: -6.009902477264404
    5. 'negative' → logprob: -7.259902477264404
    6. '<
' → logprob: -8.884902000427246
    7. '0' → logprob: -10.384902000427246
    8. '<=' → logprob: -10.384902000427246
    9. ' <' → logprob: -10.884902000427246
    10. 'c' → logprob: -11.134902000427246

Token 3019: 'use' (ID: 1821)
  Prédit: 'use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.023509841412305832
    2. '_use' → logprob: -4.023509979248047
    3. '(use' → logprob: -6.398509979248047
    4. '```' → logprob: -7.023509979248047
    5. '>' → logprob: -7.273509979248047
    6. 'u' → logprob: -7.523509979248047
    7. '_' → logprob: -7.898509979248047
    8. '<' → logprob: -8.148509979248047
    9. '</' → logprob: -9.023509979248047
    10. '
' → logprob: -9.648509979248047

Token 3020: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.5259151458740234
    2. '<' → logprob: -1.5259151458740234
    3. ' (' → logprob: -1.7759151458740234
    4. '<c' → logprob: -4.525915145874023
    5. ' <' → logprob: -5.900915145874023
    6. '==' → logprob: -6.275915145874023
    7. '(if' → logprob: -6.525915145874023
    8. ':' → logprob: -6.650915145874023
    9. '(<' → logprob: -7.025915145874023
    10. '(' → logprob: -7.775915145874023

Token 3021: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0007276826072484255
    2. ')<' → logprob: -7.750727653503418
    3. '0' → logprob: -8.875727653503418
    4. ' <' → logprob: -9.250727653503418
    5. '[' → logprob: -10.375727653503418
    6. ')' → logprob: -11.125727653503418
    7. '>' → logprob: -13.250727653503418
    8. ']<' → logprob: -13.250727653503418
    9. '{' → logprob: -13.625727653503418
    10. '()<' → logprob: -13.875727653503418

Token 3022: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.500004768371582
    3. '
' → logprob: -14.125004768371582
    4. '   ' → logprob: -15.875004768371582
    5. '=' → logprob: -16.3750057220459
    6. '1' → logprob: -16.7500057220459
    7. ')' → logprob: -17.1250057220459
    8. '```' → logprob: -17.7500057220459
    9. '  ' → logprob: -18.6250057220459
    10. ')
' → logprob: -19.3750057220459

Token 3023: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.7276647686958313
    2. '),' → logprob: -1.2276647090911865
    3. '):
' → logprob: -1.8526647090911865
    4. '):' → logprob: -2.9776647090911865
    5. ')' → logprob: -4.227664947509766
    6. '):

' → logprob: -7.852664947509766
    7. ' and' → logprob: -8.102664947509766
    8. ' ,' → logprob: -8.102664947509766
    9. ':' → logprob: -8.727664947509766
    10. ',
' → logprob: -8.977664947509766

Token 3024: ' forbidden' (ID: 74435)
  Prédit: ' graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' graph' → logprob: -0.45210444927215576
    2. 'graph' → logprob: -1.3271044492721558
    3. ' forbidden' → logprob: -2.9521045684814453
    4. '#' → logprob: -4.077104568481445
    5. ' #' → logprob: -5.202104568481445
    6. ' if' → logprob: -5.327104568481445
    7. ' touch' → logprob: -5.827104568481445
    8. ' c' → logprob: -6.077104568481445
    9. '           ' → logprob: -6.827104568481445
    10. 'touch' → logprob: -6.952104568481445

Token 3025: ' movement' (ID: 12772)
  Prédit: 'movement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'movement' → logprob: -0.36596477031707764
    2. ' movement' → logprob: -1.3659647703170776
    3. '_m' → logprob: -3.240964889526367
    4. 'direction' → logprob: -5.115964889526367
    5. '_direction' → logprob: -5.490964889526367
    6. ' direction' → logprob: -7.240964889526367
    7. '_side' → logprob: -7.990964889526367
    8. 'side' → logprob: -7.990964889526367
    9. ' side' → logprob: -9.365964889526367
    10. '_edge' → logprob: -9.365964889526367

Token 3026: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.4613010883331299
    2. 'is' → logprob: -1.0863010883331299
    3. '=' → logprob: -3.58630108833313
    4. ' =' → logprob: -5.836300849914551
    5. '=is' → logprob: -7.836300849914551
    6. ')' → logprob: -8.58630084991455
    7. ':' → logprob: -8.58630084991455
    8. '#' → logprob: -8.83630084991455
    9. 'from' → logprob: -9.21130084991455
    10. '==' → logprob: -9.33630084991455

Token 3027: ' from' (ID: 591)
  Prédit: ' touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' touch' → logprob: -0.7998082637786865
    2. ' from' → logprob: -1.1748082637786865
    3. 'from' → logprob: -1.9248082637786865
    4. ' street' → logprob: -2.9248082637786865
    5. 'touch' → logprob: -3.2998082637786865
    6. 'street' → logprob: -5.799808502197266
    7. ' open' → logprob: -6.424808502197266
    8. ' (' → logprob: -8.424808502197266
    9. 'open' → logprob: -8.924808502197266
    10. ' ' → logprob: -10.549808502197266

Token 3028: ' touch' (ID: 7381)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.15011028945446014
    2. ' touch' → logprob: -2.0251102447509766
    3. 'street' → logprob: -5.400110244750977
    4. ' street' → logprob: -5.900110244750977
    5. 'stre' → logprob: -10.775110244750977
    6. 't' → logprob: -10.775110244750977
    7. 'open' → logprob: -11.150110244750977
    8. '_touch' → logprob: -11.400110244750977
    9. ' ' → logprob: -11.525110244750977
    10. '   ' → logprob: -11.775110244750977

Token 3029: ' (' (ID: 350)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.02962157130241394
    2. '_to' → logprob: -4.029621601104736
    3. 'to' → logprob: -4.529621601104736
    4. ' (' → logprob: -8.154621124267578
    5. '	to' → logprob: -9.154621124267578
    6. '[' → logprob: -9.779621124267578
    7. '<|end|>' → logprob: -10.154621124267578
    8. ')' → logprob: -10.654621124267578
    9. ' ' → logprob: -10.904621124267578
    10. '```' → logprob: -11.029621124267578

Token 3030: 'obt' (ID: 172737)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.0011496252845972776
    2. 'stre' → logprob: -7.001149654388428
    3. ')' → logprob: -9.37614917755127
    4. ' street' → logprob: -10.25114917755127
    5. '```' → logprob: -10.62614917755127
    6. 'open' → logprob: -10.87614917755127
    7. '
' → logprob: -11.25114917755127
    8. 's' → logprob: -11.50114917755127
    9. 'st' → logprob: -11.62614917755127
    10. 'ob' → logprob: -12.37614917755127

Token 3031: 'use' (ID: 1821)
  Prédit: 'use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.6303139925003052
    2. 'uce' → logprob: -0.8803139925003052
    3. 'u' → logprob: -4.505313873291016
    4. 'ue' → logprob: -5.005313873291016
    5. '1' → logprob: -5.130313873291016
    6. '```' → logprob: -5.505313873291016
    7. 'ute' → logprob: -6.005313873291016
    8. '
' → logprob: -6.130313873291016
    9. 'ude' → logprob: -6.130313873291016
    10. 'ime' → logprob: -6.130313873291016

Token 3032: ' side' (ID: 4307)
  Prédit: ' side'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' side' → logprob: -1.0119438171386719
    2. 'side' → logprob: -1.0119438171386719
    3. ')' → logprob: -1.8869438171386719
    4. '_side' → logprob: -2.636943817138672
    5. '   ' → logprob: -4.386943817138672
    6. ' to' → logprob: -4.761943817138672
    7. 'to' → logprob: -5.261943817138672
    8. '_to' → logprob: -5.511943817138672
    9. '_' → logprob: -5.636943817138672
    10. '[' → logprob: -5.761943817138672

Token 3033: ')' (ID: 8)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.4703699052333832
    2. ' to' → logprob: -1.0953699350357056
    3. ')' → logprob: -3.970369815826416
    4. '+' → logprob: -4.095369815826416
    5. ' +' → logprob: -6.220369815826416
    6. '   ' → logprob: -6.845369815826416
    7. '_to' → logprob: -6.970369815826416
    8. ',' → logprob: -7.970369815826416
    9. '->' → logprob: -8.470370292663574
    10. ' )' → logprob: -9.220370292663574

Token 3034: ' to' (ID: 316)
  Prédit: ' to'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.17231148481369019
    2. 'to' → logprob: -1.922311544418335
    3. '_to' → logprob: -5.422311305999756
    4. '+' → logprob: -6.047311305999756
    5. '   ' → logprob: -6.922311305999756
    6. ')' → logprob: -6.922311305999756
    7. ' ->' → logprob: -7.547311305999756
    8. '->' → logprob: -7.797311305999756
    9. '"' → logprob: -7.797311305999756
    10. ' +' → logprob: -8.047311782836914

Token 3035: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.3133518099784851
    2. ' street' → logprob: -1.3133518695831299
    3. 'stre' → logprob: -10.06335163116455
    4. ' ' → logprob: -10.31335163116455
    5. '   ' → logprob: -11.43835163116455
    6. '```' → logprob: -13.93835163116455
    7. '  ' → logprob: -14.06335163116455
    8. '       ' → logprob: -15.56335163116455
    9. '    ' → logprob: -15.56335163116455
    10. '`' → logprob: -15.68835163116455

Token 3036: '_other' (ID: 70088)
  Prédit: '_other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_other' → logprob: -0.0003267639840487391
    2. '_' → logprob: -8.375327110290527
    3. '```' → logprob: -9.625327110290527
    4. '`' → logprob: -12.125327110290527
    5. ''_' → logprob: -12.375327110290527
    6. '_under' → logprob: -12.500327110290527
    7. ')_' → logprob: -13.000327110290527
    8. '_OTHER' → logprob: -13.375327110290527
    9. ' _' → logprob: -13.375327110290527
    10. '``' → logprob: -13.500327110290527

Token 3037: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007992351427674294
    2. ' if' → logprob: -6.007992267608643
    3. '               ' → logprob: -6.882992267608643
    4. ':
' → logprob: -6.882992267608643
    5. '            
' → logprob: -7.507992267608643
    6. '
' → logprob: -7.632992267608643
    7. '       ' → logprob: -8.1329927444458
    8. ':' → logprob: -8.1329927444458
    9. '.' → logprob: -8.2579927444458
    10. 'if' → logprob: -8.3829927444458

Token 3038: 'acute' (ID: 31898)
  Prédit: 'acute'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acute' → logprob: -0.0014791482826694846
    2. 'open' → logprob: -7.376479148864746
    3. 'obt' → logprob: -7.626479148864746
    4. ' acute' → logprob: -8.626479148864746
    5. '1' → logprob: -9.126479148864746
    6. '0' → logprob: -10.376479148864746
    7. ')' → logprob: -10.876479148864746
    8. '```' → logprob: -11.751479148864746
    9. 'touch' → logprob: -12.126479148864746
    10. 'ac' → logprob: -13.126479148864746

Token 3039: ' side' (ID: 4307)
  Prédit: 'side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'side' → logprob: -0.0885348841547966
    2. '_side' → logprob: -2.5885348320007324
    3. ' side' → logprob: -4.713534832000732
    4. ')' → logprob: -7.963534832000732
    5. '[' → logprob: -9.71353530883789
    6. '[
' → logprob: -9.96353530883789
    7. '```' → logprob: -10.33853530883789
    8. ')_' → logprob: -10.46353530883789
    9. '
' → logprob: -10.71353530883789
    10. '(side' → logprob: -11.46353530883789

Token 3040: ')
' (ID: 446)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.994350254535675
    2. ')' → logprob: -1.4943501949310303
    3. ':
' → logprob: -1.6193501949310303
    4. ':' → logprob: -2.3693501949310303
    5. '.' → logprob: -2.7443501949310303
    6. ')
' → logprob: -4.369350433349609
    7. '):
' → logprob: -5.244350433349609
    8. ',' → logprob: -5.369350433349609
    9. '#' → logprob: -5.494350433349609
    10. ']' → logprob: -5.619350433349609

Token 3041: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005351636093109846
    2. 'if' → logprob: -5.380351543426514
    3. ' if' → logprob: -7.630351543426514
    4. '            
' → logprob: -9.255352020263672
    5. '		' → logprob: -9.880352020263672
    6. '               ' → logprob: -10.005352020263672
    7. '       ' → logprob: -11.255352020263672
    8. '   ' → logprob: -11.630352020263672
    9. '{
' → logprob: -12.255352020263672
    10. '
' → logprob: -12.505352020263672

Token 3042: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004430828616023064
    2. 'if' → logprob: -6.004430770874023
    3. ' if' → logprob: -6.254430770874023
    4. '               ' → logprob: -11.129430770874023
    5. '       ' → logprob: -12.129430770874023
    6. '            
' → logprob: -12.754430770874023
    7. '   ' → logprob: -13.004430770874023
    8. '
' → logprob: -13.004430770874023
    9. '```' → logprob: -13.879430770874023
    10. '                   ' → logprob: -14.129430770874023

Token 3043: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.48944488167762756
    2. '           ' → logprob: -0.9894448518753052
    3. ' if' → logprob: -4.239444732666016
    4. '               ' → logprob: -7.614444732666016
    5. 'for' → logprob: -9.364444732666016
    6. '   ' → logprob: -9.489444732666016
    7. '       ' → logprob: -9.739444732666016
    8. '                   ' → logprob: -9.989444732666016
    9. '{
' → logprob: -11.114444732666016
    10. '#' → logprob: -11.364444732666016

Token 3044: ' angle' (ID: 16538)
  Prédit: ' abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.25605955719947815
    2. 'abs' → logprob: -1.5060595273971558
    3. ' c' → logprob: -6.131059646606445
    4. 'c' → logprob: -6.256059646606445
    5. '   ' → logprob: -11.506059646606445
    6. ' ' → logprob: -11.506059646606445
    7. '(abs' → logprob: -12.756059646606445
    8. 'angle' → logprob: -13.881059646606445
    9. '0' → logprob: -14.006059646606445
    10. ' round' → logprob: -14.256059646606445

Token 3045: ' right' (ID: 1849)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '==' → logprob: -0.05373942106962204
    2. ' ==' → logprob: -3.303739309310913
    3. '=' → logprob: -4.178739547729492
    4. ' =' → logprob: -9.303739547729492
    5. '<=' → logprob: -9.428739547729492
    6. '==
' → logprob: -10.178739547729492
    7. '<' → logprob: -11.178739547729492
    8. ')==' → logprob: -11.553739547729492
    9. '>' → logprob: -12.053739547729492
    10. ']==' → logprob: -12.678739547729492

Token 3046: ' (~' (ID: 65176)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8066020607948303
    2. '=' → logprob: -1.0566020011901855
    3. '==' → logprob: -1.8066020011901855
    4. ' =' → logprob: -3.3066020011901855
    5. '_angle' → logprob: -7.3066020011901855
    6. '```' → logprob: -7.3066020011901855
    7. '==
' → logprob: -7.5566020011901855
    8. ')==' → logprob: -7.8066020011901855
    9. ')' → logprob: -8.056602478027344
    10. ' (' → logprob: -8.181602478027344

Token 3047: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.003924399148672819
    2. '=' → logprob: -6.003924369812012
    3. ' ' → logprob: -6.753924369812012
    4. ')' → logprob: -8.878924369812012
    5. '```' → logprob: -9.753924369812012
    6. ' =' → logprob: -10.753924369812012
    7. '1' → logprob: -10.753924369812012
    8. '==' → logprob: -12.003924369812012
    9. '``' → logprob: -12.878924369812012
    10. '   ' → logprob: -12.878924369812012

Token 3048: '),' (ID: 936)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22477462887763977
    2. '):' → logprob: -1.7247745990753174
    3. '=' → logprob: -5.2247748374938965
    4. ' ):
' → logprob: -5.4747748374938965
    5. ')' → logprob: -5.8497748374938965
    6. ',' → logprob: -6.4747748374938965
    7. ' =' → logprob: -7.0997748374938965
    8. '),' → logprob: -7.0997748374938965
    9. ' and' → logprob: -7.0997748374938965
    10. '   ' → logprob: -7.0997748374938965

Token 3049: ' forbidden' (ID: 74435)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.23148994147777557
    2. ' continue' → logprob: -2.356489896774292
    3. '               ' → logprob: -2.981489896774292
    4. 'continue' → logprob: -3.731489896774292
    5. '#' → logprob: -4.356490135192871
    6. ' if' → logprob: -4.731490135192871
    7. ' #' → logprob: -5.106490135192871
    8. 'if' → logprob: -6.231490135192871
    9. 'for' → logprob: -6.606490135192871
    10. ' for' → logprob: -6.731490135192871

Token 3050: ' both' (ID: 2973)
  Prédit: '_direction'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_direction' → logprob: -0.684655487537384
    2. 'movement' → logprob: -1.5596554279327393
    3. 'direction' → logprob: -1.6846554279327393
    4. ' movement' → logprob: -3.3096554279327393
    5. ' =' → logprob: -4.059655666351318
    6. '=' → logprob: -4.434655666351318
    7. '_edges' → logprob: -5.434655666351318
    8. '_edge' → logprob: -5.684655666351318
    9. '_d' → logprob: -5.684655666351318
    10. '_dir' → logprob: -5.684655666351318

Token 3051: ' directions' (ID: 24921)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4258824288845062
    2. ' if' → logprob: -1.6758824586868286
    3. 'if' → logprob: -2.425882339477539
    4. '
' → logprob: -2.800882339477539
    5. '   ' → logprob: -6.175882339477539
    6. '            
' → logprob: -6.550882339477539
    7. '       ' → logprob: -6.675882339477539
    8. '               ' → logprob: -6.925882339477539
    9. '            ' → logprob: -7.675882339477539
    10. ' =' → logprob: -7.800882339477539

Token 3052: '

' (ID: 279)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00987803190946579
    2. '
' → logprob: -4.884878158569336
    3. ' if' → logprob: -6.884878158569336
    4. '       ' → logprob: -7.134878158569336
    5. 'if' → logprob: -8.884878158569336
    6. '   ' → logprob: -9.384878158569336
    7. '               ' → logprob: -9.509878158569336
    8. '            
' → logprob: -9.759878158569336
    9. '		' → logprob: -11.134878158569336
    10. '            ' → logprob: -11.634878158569336

Token 3053: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07877322286367416
    2. ' if' → logprob: -3.078773260116577
    3. 'if' → logprob: -3.578773260116577
    4. '       ' → logprob: -7.453773021697998
    5. '
' → logprob: -7.828773021697998
    6. '   ' → logprob: -8.203773498535156
    7. '               ' → logprob: -8.703773498535156
    8. '            
' → logprob: -8.703773498535156
    9. '```' → logprob: -10.078773498535156
    10. ' ' → logprob: -10.578773498535156

Token 3054: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6979852914810181
    2. 'if' → logprob: -0.6979852914810181
    3. ' if' → logprob: -5.5729851722717285
    4. 'angle' → logprob: -7.6979851722717285
    5. '       ' → logprob: -8.947985649108887
    6. '   ' → logprob: -9.447985649108887
    7. '               ' → logprob: -9.447985649108887
    8. 'import' → logprob: -9.697985649108887
    9. 'from' → logprob: -10.322985649108887
    10. 'threshold' → logprob: -10.447985649108887

Token 3055: ' Implement' (ID: 32889)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03515234589576721
    2. ' if' → logprob: -3.6601524353027344
    3. 'if' → logprob: -5.535152435302734
    4. '       ' → logprob: -6.410152435302734
    5. '               ' → logprob: -7.035152435302734
    6. '   ' → logprob: -7.660152435302734
    7. ' \' → logprob: -7.910152435302734
    8. '
' → logprob: -8.160152435302734
    9. '            ' → logprob: -8.410152435302734
    10. '\t' → logprob: -9.160152435302734

Token 3056: ' accordingly' (ID: 44041)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.351365864276886
    2. '           ' → logprob: -1.2263658046722412
    3. ' if' → logprob: -5.97636604309082
    4. '```' → logprob: -9.22636604309082
    5. 'angle' → logprob: -9.22636604309082
    6. 'from' → logprob: -10.35136604309082
    7. 'import' → logprob: -10.35136604309082
    8. '               ' → logprob: -10.72636604309082
    9. 'for' → logprob: -10.97636604309082
    10. '       ' → logprob: -10.97636604309082

Token 3057: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6367942094802856
    2. 'if' → logprob: -0.7617942094802856
    3. 'angle' → logprob: -6.511794090270996
    4. ' if' → logprob: -6.886794090270996
    5. 'd' → logprob: -7.511794090270996
    6. 'import' → logprob: -7.636794090270996
    7. 'from' → logprob: -8.386794090270996
    8. 'f' → logprob: -9.761794090270996
    9. 'for' → logprob: -9.886794090270996
    10. 'remove' → logprob: -9.886794090270996

Token 3058: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.49413445591926575
    2. 'if' → logprob: -0.9941344261169434
    3. ' if' → logprob: -3.9941344261169434
    4. 'angle' → logprob: -7.619134426116943
    5. '       ' → logprob: -8.369134902954102
    6. '   ' → logprob: -8.369134902954102
    7. '
' → logprob: -8.369134902954102
    8. '               ' → logprob: -9.994134902954102
    9. '```' → logprob: -9.994134902954102
    10. 'd' → logprob: -10.369134902954102

Token 3059: ' eps' (ID: 39683)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.12773658335208893
    2. '           ' → logprob: -2.1277365684509277
    3. ' if' → logprob: -7.877736568450928
    4. '```' → logprob: -8.502737045288086
    5. 'angle' → logprob: -9.002737045288086
    6. '       ' → logprob: -9.877737045288086
    7. '               ' → logprob: -11.002737045288086
    8. '   ' → logprob: -11.502737045288086
    9. '``' → logprob: -11.752737045288086
    10. 'threshold' → logprob: -12.127737045288086

Token 3060: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22551633417606354
    2. '=' → logprob: -1.6005163192749023
    3. ' >' → logprob: -10.600516319274902
    4. ' <' → logprob: -10.725516319274902
    5. '>' → logprob: -11.100516319274902
    6. ' <=' → logprob: -11.225516319274902
    7. '<' → logprob: -11.725516319274902
    8. ' ' → logprob: -11.850516319274902
    9. ' =
' → logprob: -12.975516319274902
    10. ')' → logprob: -13.225516319274902

Token 3061: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07891303300857544
    2. '0' → logprob: -2.5789129734039307
    3. ' ' → logprob: -10.703912734985352
    4. '5' → logprob: -14.953912734985352
    5. '2' → logprob: -15.828912734985352
    6. '.' → logprob: -15.953912734985352
    7. '10' → logprob: -16.07891273498535
    8. '3' → logprob: -17.07891273498535
    9. '   ' → logprob: -17.07891273498535
    10. '-' → logprob: -17.70391273498535

Token 3062: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0024774393532425165
    2. '0' → logprob: -6.002477645874023
    3. '10' → logprob: -14.002477645874023
    4. ' ' → logprob: -14.252477645874023
    5. '```' → logprob: -16.627477645874023
    6. '-' → logprob: -16.752477645874023
    7. '5' → logprob: -17.127477645874023
    8. '.' → logprob: -17.377477645874023
    9. '2' → logprob: -17.877477645874023
    10. '+' → logprob: -18.252477645874023

Token 3063: 'e' (ID: 68)
  Prédit: 'e'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.00015753143816255033
    2. '0' → logprob: -8.875157356262207
    3. '-' → logprob: -11.125157356262207
    4. 'E' → logprob: -13.375157356262207
    5. '1' → logprob: -15.125157356262207
    6. '.e' → logprob: -15.750157356262207
    7. '.' → logprob: -16.125158309936523
    8. '\t' → logprob: -16.125158309936523
    9. '```' → logprob: -16.375158309936523
    10. ' -' → logprob: -16.625158309936523

Token 3064: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.9361264946837764e-07
    2. '{-' → logprob: -17.125
    3. '```' → logprob: -17.25
    4. '
' → logprob: -17.75
    5. ' -' → logprob: -18.0
    6. '\-' → logprob: -18.25
    7. '-
' → logprob: -18.625
    8. '6' → logprob: -18.625
    9. '3' → logprob: -18.875
    10. '−' → logprob: -18.875

Token 3065: '14' (ID: 1265)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '7' → logprob: -1.2269610166549683
    2. '8' → logprob: -1.3519610166549683
    3. '6' → logprob: -1.3519610166549683
    4. '5' → logprob: -1.9769610166549683
    5. '4' → logprob: -3.726961135864258
    6. '9' → logprob: -4.101961135864258
    7. '3' → logprob: -4.726961135864258
    8. '08' → logprob: -7.726961135864258
    9. '10' → logprob: -8.226961135864258
    10. '05' → logprob: -8.351961135864258

Token 3066: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3193700611591339
    2. ' if' → logprob: -1.5693700313568115
    3. 'if' → logprob: -2.9443700313568115
    4. '
' → logprob: -4.569370269775391
    5. '       ' → logprob: -6.319370269775391
    6. '   ' → logprob: -8.69437026977539
    7. '               ' → logprob: -9.69437026977539
    8. '```' → logprob: -10.31937026977539
    9. '            
' → logprob: -10.56937026977539
    10. '	if' → logprob: -10.56937026977539

Token 3067: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02236689254641533
    2. ' if' → logprob: -4.397367000579834
    3. 'if' → logprob: -4.647367000579834
    4. '```' → logprob: -8.897366523742676
    5. '       ' → logprob: -10.272366523742676
    6. '               ' → logprob: -10.897366523742676
    7. '   ' → logprob: -11.647366523742676
    8. '
' → logprob: -12.022366523742676
    9. '		' → logprob: -12.522366523742676
    10. '          ' → logprob: -12.897366523742676

Token 3068: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0013799945591017604
    2. '           ' → logprob: -6.75137996673584
    3. ' if' → logprob: -8.50137996673584
    4. '       ' → logprob: -12.37637996673584
    5. '   ' → logprob: -13.87637996673584
    6. '               ' → logprob: -14.12637996673584
    7. '```' → logprob: -14.87637996673584
    8. 'i' → logprob: -15.87637996673584
    9. '
' → logprob: -16.126380920410156
    10. '                   ' → logprob: -17.376380920410156

Token 3069: ' abs' (ID: 8443)
  Prédit: 'abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'abs' → logprob: -0.1606661081314087
    2. ' abs' → logprob: -1.9106661081314087
    3. 'c' → logprob: -7.910665988922119
    4. ' c' → logprob: -9.910666465759277
    5. '(abs' → logprob: -11.285666465759277
    6. '   ' → logprob: -11.535666465759277
    7. ' ' → logprob: -13.285666465759277
    8. 'fabs' → logprob: -14.785666465759277
    9. 'math' → logprob: -15.160666465759277
    10. '  ' → logprob: -15.410666465759277

Token 3070: '(c' (ID: 2410)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4360562264919281
    2. '(c' → logprob: -1.0610562562942505
    3. ' (' → logprob: -5.436056137084961
    4. '(
' → logprob: -5.936056137084961
    5. '(e' → logprob: -8.811056137084961
    6. '(angle' → logprob: -9.686056137084961
    7. '>' → logprob: -10.186056137084961
    8. ')' → logprob: -11.061056137084961
    9. ' (
' → logprob: -11.436056137084961
    10. '           ' → logprob: -11.686056137084961

Token 3071: ')<' (ID: 62287)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.296367347240448
    2. ' >' → logprob: -1.9213674068450928
    3. ')>' → logprob: -2.6713674068450928
    4. '>' → logprob: -3.6713674068450928
    5. ' )' → logprob: -4.546367168426514
    6. ' <' → logprob: -6.546367168426514
    7. ')<' → logprob: -7.171367168426514
    8. '[' → logprob: -7.171367168426514
    9. '<' → logprob: -7.546367168426514
    10. ')<=' → logprob: -8.171367645263672

Token 3072: 'eps' (ID: 12967)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6939532160758972
    2. 'eps' → logprob: -0.6939532160758972
    3. ' eps' → logprob: -7.568953037261963
    4. ' ' → logprob: -8.943953514099121
    5. '   ' → logprob: -9.443953514099121
    6. '0' → logprob: -9.818953514099121
    7. 'epsilon' → logprob: -12.193953514099121
    8. 'EPS' → logprob: -12.443953514099121
    9. '=' → logprob: -12.818953514099121
    10. 'ep' → logprob: -12.943953514099121

Token 3073: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06250971555709839
    2. ':
' → logprob: -2.812509775161743
    3. ' or' → logprob: -8.437509536743164
    4. '           ' → logprob: -9.062509536743164
    5. ':return' → logprob: -9.937509536743164
    6. '               ' → logprob: -10.187509536743164
    7. '==' → logprob: -10.187509536743164
    8. '=' → logprob: -10.312509536743164
    9. '   ' → logprob: -11.937509536743164
    10. ' :' → logprob: -12.062509536743164

Token 3074: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012145807966589928
    2. '           ' → logprob: -4.76214599609375
    3. ' continue' → logprob: -6.26214599609375
    4. ':
' → logprob: -7.63714599609375
    5. ':' → logprob: -7.76214599609375
    6. 'continue' → logprob: -7.76214599609375
    7. '#' → logprob: -8.63714599609375
    8. '                   ' → logprob: -10.01214599609375
    9. '   ' → logprob: -11.13714599609375
    10. ' #' → logprob: -11.38714599609375

Token 3075: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7043726444244385
    2. '#' (adapté à ' #') → logprob: -1.3293726444244385
    3. '           ' → logprob: -2.0793726444244385
    4. 'graph' → logprob: -3.2043726444244385
    5. 'continue' → logprob: -3.8293726444244385
    6. ' #' → logprob: -3.9543726444244385
    7. 'for' → logprob: -4.079372406005859
    8. ' continue' → logprob: -5.079372406005859
    9. '   ' → logprob: -5.704372406005859
    10. 'del' → logprob: -5.829372406005859

Token 3076: ' right' (ID: 1849)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.49187639355659485
    2. 'for' → logprob: -1.3668763637542725
    3. ' #' → logprob: -2.7418763637542725
    4. '               ' → logprob: -3.6168763637542725
    5. ' for' → logprob: -3.7418763637542725
    6. 'continue' → logprob: -4.741876602172852
    7. ' continue' → logprob: -5.366876602172852
    8. '           ' → logprob: -5.616876602172852
    9. ' del' → logprob: -7.991876602172852
    10. '                   ' → logprob: -8.491876602172852

Token 3077: ' angle' (ID: 16538)
  Prédit: '_angle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_angle' → logprob: -0.37851518392562866
    2. 'angle' → logprob: -1.3785152435302734
    3. ' angle' → logprob: -3.8785152435302734
    4. ':' → logprob: -4.128515243530273
    5. '-angle' → logprob: -4.753515243530273
    6. '   ' → logprob: -5.128515243530273
    7. '_angles' → logprob: -6.003515243530273
    8. ' ' → logprob: -6.253515243530273
    9. '_' → logprob: -6.753515243530273
    10. ':
' → logprob: -6.878515243530273

Token 3078: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14219410717487335
    2. ':
' → logprob: -2.2671940326690674
    3. '           ' → logprob: -4.1421942710876465
    4. ':' → logprob: -4.6421942710876465
    5. '                   ' → logprob: -6.3921942710876465
    6. '   ' → logprob: -7.1421942710876465
    7. '#' → logprob: -7.7671942710876465
    8. ',' → logprob: -9.017193794250488
    9. '):
' → logprob: -9.892193794250488
    10. ':
' → logprob: -10.142193794250488

Token 3079: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21090973913669586
    2. '           ' → logprob: -1.7109097242355347
    3. '   ' → logprob: -5.835909843444824
    4. '                   ' → logprob: -5.835909843444824
    5. 'continue' → logprob: -6.460909843444824
    6. 'for' → logprob: -7.085909843444824
    7. ' continue' → logprob: -7.460909843444824
    8. ':
' → logprob: -8.460909843444824
    9. '#' → logprob: -8.960909843444824
    10. '```' → logprob: -9.085909843444824

Token 3080: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.6574135422706604
    2. '#' (adapté à ' #') → logprob: -1.4074134826660156
    3. 'for' → logprob: -1.9074134826660156
    4. '               ' → logprob: -3.0324134826660156
    5. 'pass' → logprob: -4.157413482666016
    6. 'graph' → logprob: -4.907413482666016
    7. ' continue' → logprob: -5.157413482666016
    8. '                   ' → logprob: -5.532413482666016
    9. '           ' → logprob: -5.907413482666016
    10. 'if' → logprob: -5.907413482666016

Token 3081: ' forbid' (ID: 164447)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6458299160003662
    2. '#' → logprob: -0.8958299160003662
    3. 'continue' → logprob: -3.520829916000366
    4. 'graph' → logprob: -4.020830154418945
    5. '               ' → logprob: -4.645830154418945
    6. '           ' → logprob: -5.270830154418945
    7. 'del' → logprob: -6.520830154418945
    8. ' #' → logprob: -7.020830154418945
    9. 'if' → logprob: -7.020830154418945
    10. 'to' → logprob: -7.645830154418945

Token 3082: ' both' (ID: 2973)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.027652021497488022
    2. ' graph' → logprob: -3.9026520252227783
    3. '               ' → logprob: -5.902651786804199
    4. '#' → logprob: -6.277651786804199
    5. '           ' → logprob: -6.402651786804199
    6. '                   ' → logprob: -8.1526517868042
    7. 'for' → logprob: -8.2776517868042
    8. '	graph' → logprob: -9.6526517868042
    9. '(graph' → logprob: -10.2776517868042
    10. ' #' → logprob: -10.6526517868042

Token 3083: ' directions' (ID: 24921)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018687009811401367
    2. '
' → logprob: -5.1436872482299805
    3. 'graph' → logprob: -5.1436872482299805
    4. 'for' → logprob: -5.7686872482299805
    5. '               ' → logprob: -6.7686872482299805
    6. ' graph' → logprob: -7.2686872482299805
    7. 'del' → logprob: -7.3936872482299805
    8. ' for' → logprob: -7.5186872482299805
    9. ' del' → logprob: -8.39368724822998
    10. '#' → logprob: -9.14368724822998

Token 3084: ' between' (ID: 2870)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.049239080399274826
    2. '           ' → logprob: -3.049239158630371
    3. 'graph' → logprob: -8.424239158630371
    4. 'for' → logprob: -8.549239158630371
    5. 'if' → logprob: -9.299239158630371
    6. ' if' → logprob: -10.424239158630371
    7. ' for' → logprob: -10.549239158630371
    8. '                   ' → logprob: -10.924239158630371
    9. ' graph' → logprob: -11.299239158630371
    10. 'continue' → logprob: -11.424239158630371

Token 3085: ' touch' (ID: 7381)
  Prédit: 'touch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -7.505351095460355e-05
    2. ' touch' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.00007438659668
    4. 'street' → logprob: -17.25007438659668
    5. '_touch' → logprob: -18.37507438659668
    6. 'tou' → logprob: -18.50007438659668
    7. 'Touch' → logprob: -18.87507438659668
    8. 'tap' → logprob: -19.37507438659668
    9. ' ' → logprob: -19.87507438659668
    10. '  ' → logprob: -20.75007438659668

Token 3086: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1463152915239334
    2. 'and' → logprob: -2.771315336227417
    3. ',' → logprob: -4.146315097808838
    4. '           ' → logprob: -4.271315097808838
    5. '               ' → logprob: -4.521315097808838
    6. '                   ' → logprob: -4.771315097808838
    7. ':
' → logprob: -5.396315097808838
    8. ' to' → logprob: -5.771315097808838
    9. '][' → logprob: -5.896315097808838
    10. 'to' → logprob: -6.021315097808838

Token 3087: ' street' (ID: 12901)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.0009152670972980559
    2. ' street' → logprob: -7.000915050506592
    3. 'stre' → logprob: -12.50091552734375
    4. 'stroke' → logprob: -17.75091552734375
    5. '   ' → logprob: -18.25091552734375
    6. 'st' → logprob: -18.50091552734375
    7. ' ' → logprob: -19.37591552734375
    8. 'Street' → logprob: -19.75091552734375
    9. '
' → logprob: -20.12591552734375
    10. '.street' → logprob: -20.37591552734375

Token 3088: '_other' (ID: 70088)
  Prédit: '_other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_other' → logprob: -0.00010628487507347018
    2. 'other' → logprob: -9.875105857849121
    3. '   ' → logprob: -11.250105857849121
    4. '           ' → logprob: -12.125105857849121
    5. 'Other' → logprob: -12.125105857849121
    6. '[' → logprob: -12.750105857849121
    7. '-other' → logprob: -12.750105857849121
    8. '_' → logprob: -12.875105857849121
    9. 'graph' → logprob: -12.875105857849121
    10. '_direct' → logprob: -13.125105857849121

Token 3089: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09111875295639038
    2. '               ' → logprob: -2.466118812561035
    3. 'if' → logprob: -6.341118812561035
    4. 'for' → logprob: -8.841118812561035
    5. ' if' → logprob: -8.966118812561035
    6. 'graph' → logprob: -9.466118812561035
    7. 'del' → logprob: -11.341118812561035
    8. '
' → logprob: -11.466118812561035
    9. 'try' → logprob: -11.591118812561035
    10. '#' → logprob: -11.591118812561035

Token 3090: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03408176451921463
    2. '           ' → logprob: -3.4090816974639893
    3. 'for' → logprob: -7.909081935882568
    4. 'graph' → logprob: -10.53408145904541
    5. ' for' → logprob: -11.03408145904541
    6. 'if' → logprob: -11.53408145904541
    7. '                   ' → logprob: -12.15908145904541
    8. '```' → logprob: -12.65908145904541
    9. 'remove' → logprob: -13.65908145904541
    10. ' if' → logprob: -13.90908145904541

Token 3091: ' if' (ID: 538)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.4807702302932739
    2. 'if' (adapté à ' if') → logprob: -1.605770230293274
    3. '           ' → logprob: -1.980770230293274
    4. '               ' → logprob: -3.7307701110839844
    5. 'for' → logprob: -4.355770111083984
    6. 'try' → logprob: -5.980770111083984
    7. 'del' → logprob: -6.605770111083984
    8. 'continue' → logprob: -7.230770111083984
    9. '#' → logprob: -7.480770111083984
    10. '   ' → logprob: -8.605770111083984

Token 3092: ' (' (ID: 350)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.4522252082824707
    2. '(st' → logprob: -1.3272252082824707
    3. '(t' → logprob: -2.9522252082824707
    4. ' street' → logprob: -4.202225208282471
    5. 'touch' → logprob: -4.327225208282471
    6. ' (' → logprob: -4.702225208282471
    7. 'st' → logprob: -5.077225208282471
    8. 't' → logprob: -7.452225208282471
    9. 'stre' → logprob: -7.577225208282471
    10. '(' → logprob: -7.702225208282471

Token 3093: 'touch' (ID: 47206)
  Prédit: 'touch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.0019212529296055436
    2. '(t' → logprob: -6.6269211769104
    3. ' touch' → logprob: -7.8769211769104
    4. 't' → logprob: -10.001921653747559
    5. ' (' → logprob: -10.001921653747559
    6. '   ' → logprob: -10.251921653747559
    7. 'graph' → logprob: -10.751921653747559
    8. 'tou' → logprob: -11.001921653747559
    9. '               ' → logprob: -12.001921653747559
    10. '           ' → logprob: -12.126921653747559

Token 3094: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001545214676298201
    2. ',p' → logprob: -6.626545429229736
    3. ',t' → logprob: -9.126544952392578
    4. ',e' → logprob: -10.376544952392578
    5. ',s' → logprob: -10.876544952392578
    6. ' ,' → logprob: -11.251544952392578
    7. ',str' → logprob: -12.251544952392578
    8. ',to' → logprob: -12.251544952392578
    9. ',
' → logprob: -12.376544952392578
    10. ',d' → logprob: -12.501544952392578

Token 3095: 'street' (ID: 55690)
  Prédit: 'street'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.0001239196863025427
    2. ' street' → logprob: -9.000123977661133
    3. 'stre' → logprob: -15.250123977661133
    4. '               ' → logprob: -16.375123977661133
    5. '                                       ' → logprob: -17.125123977661133
    6. '   ' → logprob: -17.250123977661133
    7. '           ' → logprob: -17.625123977661133
    8. 'stroke' → logprob: -17.625123977661133
    9. 'st' → logprob: -17.875123977661133
    10. '.street' → logprob: -18.000123977661133

Token 3096: '_other' (ID: 70088)
  Prédit: '_other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_other' → logprob: -7.584239938296378e-06
    2. 'Other' → logprob: -12.500007629394531
    3. '_OTHER' → logprob: -13.500007629394531
    4. ',_' → logprob: -13.875007629394531
    5. ')_' → logprob: -15.000007629394531
    6. 'other' → logprob: -15.125007629394531
    7. '```' → logprob: -15.125007629394531
    8. ',' → logprob: -16.62500762939453
    9. ''_' → logprob: -16.75000762939453
    10. '(other' → logprob: -16.87500762939453

Token 3097: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04025791957974434
    2. 'in' → logprob: -3.2902579307556152
    3. ',)' → logprob: -6.915257930755615
    4. ',' → logprob: -7.165257930755615
    5. ' in' → logprob: -8.540257453918457
    6. '
' → logprob: -9.790257453918457
    7. ' )' → logprob: -10.040257453918457
    8. ')!=' → logprob: -10.290257453918457
    9. ',in' → logprob: -10.540257453918457
    10. '),' → logprob: -10.790257453918457

Token 3098: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.07192560285329819
    2. ' in' → logprob: -3.196925640106201
    3. ')' → logprob: -3.696925640106201
    4. ',' → logprob: -6.571925640106201
    5. ']' → logprob: -6.821925640106201
    6. ',in' → logprob: -7.571925640106201
    7. 'not' → logprob: -8.321925163269043
    8. ',)' → logprob: -9.321925163269043
    9. ' not' → logprob: -9.571925163269043
    10. '
' → logprob: -9.571925163269043

Token 3099: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.5761181116104126
    2. 'graph' → logprob: -0.8261181116104126
    3. '[' → logprob: -9.826118469238281
    4. '{' → logprob: -10.201118469238281
    5. ' edge' → logprob: -10.326118469238281
    6. ' graph' → logprob: -10.576118469238281
    7. '(edge' → logprob: -11.951118469238281
    8. '   ' → logprob: -12.201118469238281
    9. '(graph' → logprob: -12.451118469238281
    10. '[(' → logprob: -12.701118469238281

Token 3100: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -6.704273118884885e-07
    2. 'len' → logprob: -14.500000953674316
    3. '
' → logprob: -17.25
    4. '_' → logprob: -18.375
    5. '_dir' → logprob: -18.375
    6. 'Len' → logprob: -18.5
    7. '_LEN' → logprob: -19.0
    8. '```' → logprob: -19.0
    9. '[len' → logprob: -19.25
    10. '_del' → logprob: -20.0

Token 3101: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3133677542209625
    2. ':' → logprob: -1.8133677244186401
    3. ' and' → logprob: -2.4383678436279297
    4. 'and' → logprob: -5.18836784362793
    5. '           ' → logprob: -5.68836784362793
    6. '               ' → logprob: -6.18836784362793
    7. '):
' → logprob: -6.31336784362793
    8. '                   ' → logprob: -6.43836784362793
    9. '[' → logprob: -7.31336784362793
    10. '):' → logprob: -7.68836784362793

Token 3102: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00881322380155325
    2. '               ' → logprob: -4.883813381195068
    3. ':
' → logprob: -7.258813381195068
    4. '                       ' → logprob: -9.00881290435791
    5. '{
' → logprob: -9.00881290435791
    6. ':' → logprob: -9.25881290435791
    7. 'graph' → logprob: -9.75881290435791
    8. '   ' → logprob: -11.13381290435791
    9. '```' → logprob: -11.13381290435791
    10. '[' → logprob: -11.63381290435791

Token 3103: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.0036098056007176638
    2. 'del' → logprob: -6.003609657287598
    3. '                   ' → logprob: -7.003609657287598
    4. '               ' → logprob: -9.003609657287598
    5. '           ' → logprob: -10.128609657287598
    6. 'for' → logprob: -11.003609657287598
    7. '#' → logprob: -11.128609657287598
    8. 'continue' → logprob: -11.253609657287598
    9. '                       ' → logprob: -12.128609657287598
    10. ' graph' → logprob: -12.503609657287598

Token 3104: '_direct' (ID: 80120)
  Prédit: '_direct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direct' → logprob: -2.7848862373502925e-05
    2. 'direct' → logprob: -11.250027656555176
    3. '_' → logprob: -11.375027656555176
    4. '[' → logprob: -13.250027656555176
    5. 'Directed' → logprob: -14.625027656555176
    6. '_del' → logprob: -15.125027656555176
    7. '_DIRECT' → logprob: -15.875027656555176
    8. '```' → logprob: -16.000028610229492
    9. '[_' → logprob: -16.375028610229492
    10. '_dis' → logprob: -16.625028610229492

Token 3105: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -1.9361264946837764e-07
    2. '_ed' → logprob: -17.0
    3. 'ected' → logprob: -17.0
    4. 'ED' → logprob: -17.5
    5. 'ted' → logprob: -17.75
    6. 'eded' → logprob: -18.875
    7. 'irected' → logprob: -19.875
    8. 'edt' → logprob: -20.125
    9. 'edly' → logprob: -20.25
    10. '```' → logprob: -20.375

Token 3106: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.47647854685783386
    2. '[' → logprob: -0.9764785766601562
    3. '[(' → logprob: -6.726478576660156
    4. '.pop' → logprob: -8.351478576660156
    5. '```' → logprob: -8.476478576660156
    6. '.remove' → logprob: -8.851478576660156
    7. '   ' → logprob: -8.976478576660156
    8. ')[' → logprob: -9.726478576660156
    9. '['' → logprob: -9.851478576660156
    10. '[token' → logprob: -9.976478576660156

Token 3107: 'ouch' (ID: 4058)
  Prédit: 'ouch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouch' → logprob: -7.541112427134067e-05
    2. 'touch' → logprob: -9.500075340270996
    3. 'uch' → logprob: -16.000076293945312
    4. '_touch' → logprob: -16.625076293945312
    5. 'ou' → logprob: -16.750076293945312
    6. '[' → logprob: -17.000076293945312
    7. 'o' → logprob: -17.000076293945312
    8. '```' → logprob: -17.250076293945312
    9. 'ouched' → logprob: -18.375076293945312
    10. '.touch' → logprob: -18.625076293945312

Token 3108: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.19342395663261414
    2. '[' → logprob: -1.9434239864349365
    3. '].' → logprob: -3.9434239864349365
    4. ',' → logprob: -5.693423748016357
    5. ']' → logprob: -5.693423748016357
    6. '.remove' → logprob: -6.693423748016357
    7. '[t' → logprob: -6.943423748016357
    8. '           ' → logprob: -7.193423748016357
    9. '   ' → logprob: -7.443423748016357
    10. '```' → logprob: -7.568423748016357

Token 3109: ' =' (ID: 314)
  Prédit: '.remove'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.remove' → logprob: -0.1417553424835205
    2. '[' → logprob: -3.0167553424835205
    3. '           ' → logprob: -4.141755104064941
    4. '].' → logprob: -4.516755104064941
    5. '                   ' → logprob: -4.516755104064941
    6. '               ' → logprob: -4.766755104064941
    7. 'remove' → logprob: -5.016755104064941
    8. '][' → logprob: -5.141755104064941
    9. '   ' → logprob: -5.516755104064941
    10. '       ' → logprob: -5.516755104064941

Token 3110: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.5067808628082275
    2. '[p' → logprob: -1.7567808628082275
    3. '[' → logprob: -2.0067808628082275
    4. '[t' → logprob: -3.0067808628082275
    5. '[i' → logprob: -4.756780624389648
    6. '[token' → logprob: -4.756780624389648
    7. '[x' → logprob: -5.256780624389648
    8. '[key' → logprob: -5.256780624389648
    9. '[k' → logprob: -5.756780624389648
    10. '[v' → logprob: -6.631780624389648

Token 3111: 'w' (ID: 86)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.9623731970787048
    2. 'p' → logprob: -1.2123732566833496
    3. 'x' → logprob: -2.4623732566833496
    4. 'nb' → logprob: -2.4623732566833496
    5. 'n' → logprob: -2.8373732566833496
    6. 'nbr' → logprob: -3.3373732566833496
    7. 'w' → logprob: -4.46237325668335
    8. 'u' → logprob: -4.58737325668335
    9. 'dst' → logprob: -4.71237325668335
    10. 'to' → logprob: -4.96237325668335

Token 3112: ',d' (ID: 26159)
  Prédit: ',w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.6416441202163696
    2. ',' → logprob: -1.2666441202163696
    3. '[' → logprob: -2.01664400100708
    4. 'w' → logprob: -3.64164400100708
    5. '!=' → logprob: -4.76664400100708
    6. ',p' → logprob: -5.26664400100708
    7. 'for' → logprob: -5.64164400100708
    8. ' !=' → logprob: -6.26664400100708
    9. ' for' → logprob: -6.26664400100708
    10. '==' → logprob: -6.51664400100708

Token 3113: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.031065668910741806
    2. 'for' → logprob: -3.5310657024383545
    3. ' for' → logprob: -6.656065464019775
    4. 'el' → logprob: -12.031065940856934
    5. '   ' → logprob: -12.406065940856934
    6. 'in' → logprob: -12.531065940856934
    7. 'ef' → logprob: -13.281065940856934
    8. '	for' → logprob: -13.406065940856934
    9. ',' → logprob: -13.781065940856934
    10. 'ex' → logprob: -13.906065940856934

Token 3114: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1605631709098816
    2. 'for' → logprob: -1.9105632305145264
    3. '                   ' → logprob: -8.910563468933105
    4. '                       ' → logprob: -9.785563468933105
    5. '	for' → logprob: -10.410563468933105
    6. '           ' → logprob: -10.535563468933105
    7. '               ' → logprob: -10.535563468933105
    8. '                        ' → logprob: -11.410563468933105
    9. '                    ' → logprob: -11.910563468933105
    10. '                           ' → logprob: -11.910563468933105

Token 3115: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.1269749402999878
    2. '(w' → logprob: -2.1269750595092773
    3. ' (' → logprob: -10.751975059509277
    4. ' w' → logprob: -11.251975059509277
    5. '   ' → logprob: -11.376975059509277
    6. '	w' → logprob: -15.501975059509277
    7. '  ' → logprob: -15.876975059509277
    8. '       ' → logprob: -16.37697410583496
    9. '    ' → logprob: -16.50197410583496
    10. ',w' → logprob: -16.50197410583496

Token 3116: ',d' (ID: 26159)
  Prédit: ',w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.08716695010662079
    2. ',' → logprob: -2.9621670246124268
    3. ',d' → logprob: -4.087166786193848
    4. ',v' → logprob: -4.962166786193848
    5. 'in' → logprob: -5.337166786193848
    6. ' in' → logprob: -6.712166786193848
    7. ',in' → logprob: -7.712166786193848
    8. ',p' → logprob: -8.462166786193848
    9. ',x' → logprob: -8.712166786193848
    10. ',t' → logprob: -8.712166786193848

Token 3117: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.10022231191396713
    2. ' in' → logprob: -2.35022234916687
    3. '                   ' → logprob: -11.60022258758545
    4. '               ' → logprob: -13.72522258758545
    5. '           ' → logprob: -13.85022258758545
    6. '                       ' → logprob: -14.10022258758545
    7. '	in' → logprob: -14.35022258758545
    8. '   ' → logprob: -14.72522258758545
    9. '                    ' → logprob: -15.10022258758545
    10. '
' → logprob: -15.10022258758545

Token 3118: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0004309076175559312
    2. ' graph' → logprob: -7.750431060791016
    3. '	graph' → logprob: -15.750431060791016
    4. '(graph' → logprob: -17.000431060791016
    5. '   ' → logprob: -17.750431060791016
    6. ' ' → logprob: -18.625431060791016
    7. '  ' → logprob: -19.875431060791016
    8. '_graph' → logprob: -20.250431060791016
    9. '    ' → logprob: -20.250431060791016
    10. '           ' → logprob: -20.500431060791016

Token 3119: '_direct' (ID: 80120)
  Prédit: '_direct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direct' → logprob: -0.00016432604752480984
    2. 'direct' → logprob: -9.250164031982422
    3. '[' → logprob: -9.875164031982422
    4. 'Directed' → logprob: -11.750164031982422
    5. '[t' → logprob: -12.000164031982422
    6. 'irected' → logprob: -14.875164031982422
    7. '-directed' → logprob: -15.125164031982422
    8. '   ' → logprob: -15.125164031982422
    9. '```' → logprob: -15.250164031982422
    10. ' directed' → logprob: -15.250164031982422

Token 3120: 'ed' (ID: 295)
  Prédit: 'ected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ected' → logprob: -0.3940296173095703
    2. 'irected' → logprob: -1.6440296173095703
    3. 'ed' → logprob: -2.6440296173095703
    4. 'icted' → logprob: -2.8940296173095703
    5. '[' → logprob: -6.01902961730957
    6. 'ted' → logprob: -6.64402961730957
    7. 'ct' → logprob: -7.14402961730957
    8. '   ' → logprob: -8.14402961730957
    9. 'ired' → logprob: -8.76902961730957
    10. 'ited' → logprob: -9.14402961730957

Token 3121: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -1.843177233240567e-05
    2. '[' → logprob: -11.000018119812012
    3. 't' → logprob: -14.250018119812012
    4. 'touch' → logprob: -15.375018119812012
    5. '[p' → logprob: -15.500018119812012
    6. '[to' → logprob: -15.625018119812012
    7. '[i' → logprob: -16.500019073486328
    8. '[
' → logprob: -17.500019073486328
    9. '```' → logprob: -17.750019073486328
    10. '   ' → logprob: -17.750019073486328

Token 3122: 'ouch' (ID: 4058)
  Prédit: 'ouch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouch' → logprob: -0.0003594184236135334
    2. 'touch' → logprob: -8.125359535217285
    3. '[' → logprob: -10.500359535217285
    4. '[t' → logprob: -11.250359535217285
    5. 'uch' → logprob: -11.750359535217285
    6. ']' → logprob: -11.875359535217285
    7. '(t' → logprob: -14.125359535217285
    8. '][' → logprob: -14.375359535217285
    9. '{' → logprob: -14.625359535217285
    10. ')' → logprob: -14.625359535217285

Token 3123: ']' (ID: 60)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.20428864657878876
    2. 'if' → logprob: -1.7042886018753052
    3. '           ' → logprob: -6.079288482666016
    4. '       ' → logprob: -8.454288482666016
    5. '   ' → logprob: -8.829288482666016
    6. '          ' → logprob: -9.954288482666016
    7. '               ' → logprob: -10.329288482666016
    8. '                   ' → logprob: -10.454288482666016
    9. '                       ' → logprob: -10.829288482666016
    10. '         ' → logprob: -11.454288482666016

Token 3124: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.47813791036605835
    2. 'if' → logprob: -0.9781379103660583
    3. '           ' → logprob: -6.478137969970703
    4. '                       ' → logprob: -7.103137969970703
    5. '               ' → logprob: -7.353137969970703
    6. '                   ' → logprob: -7.478137969970703
    7. '       ' → logprob: -8.853137969970703
    8. '                    ' → logprob: -10.103137969970703
    9. '            ' → logprob: -10.228137969970703
    10. '	if' → logprob: -10.353137969970703

Token 3125: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.00026181264547631145
    2. ' w' → logprob: -8.250262260437012
    3. '                   ' → logprob: -15.875262260437012
    4. '(w' → logprob: -16.250261306762695
    5. '   ' → logprob: -16.375261306762695
    6. 'not' → logprob: -16.375261306762695
    7. '                       ' → logprob: -16.875261306762695
    8. '    ' → logprob: -17.125261306762695
    9. '               ' → logprob: -17.875261306762695
    10. '	w' → logprob: -17.875261306762695

Token 3126: '!=' (ID: 11408)
  Prédit: '!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.011104886420071125
    2. ']!=' → logprob: -5.011105060577393
    3. ' !=' → logprob: -6.136105060577393
    4. '()!=' → logprob: -6.761105060577393
    5. ')!=' → logprob: -7.261105060577393
    6. '!=(' → logprob: -8.761104583740234
    7. '!==' → logprob: -9.761104583740234
    8. '!="' → logprob: -10.261104583740234
    9. '<|end|>' → logprob: -10.261104583740234
    10. '```' → logprob: -10.636104583740234

Token 3127: 'street' (ID: 55690)
  Prédit: 'street'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -5.860340752406046e-05
    2. ' street' → logprob: -9.7500581741333
    3. 'stre' → logprob: -15.3750581741333
    4. '   ' → logprob: -17.250059127807617
    5. '.street' → logprob: -18.625059127807617
    6. 'stroke' → logprob: -18.875059127807617
    7. ' ' → logprob: -19.000059127807617
    8. 'school' → logprob: -19.125059127807617
    9. 'storm' → logprob: -20.000059127807617
    10. '```' → logprob: -20.500059127807617

Token 3128: '_other' (ID: 70088)
  Prédit: '_other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_other' → logprob: -1.9361264946837764e-07
    2. 'Other' → logprob: -16.25
    3. 'other' → logprob: -17.25
    4. '_OTHER' → logprob: -18.125
    5. '```' → logprob: -19.75
    6. '   ' → logprob: -20.875
    7. '_only' → logprob: -20.875
    8. '_else' → logprob: -21.125
    9. '_possible' → logprob: -21.375
    10. '_related' → logprob: -21.5

Token 3129: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.12874755263328552
    2. ']
' → logprob: -2.1287474632263184
    3. '               ' → logprob: -6.753747463226318
    4. '                   ' → logprob: -7.628747463226318
    5. '           ' → logprob: -9.503747940063477
    6. ']
' → logprob: -9.753747940063477
    7. ' ]' → logprob: -11.628747940063477
    8. ']

' → logprob: -12.003747940063477
    9. ' ]
' → logprob: -12.378747940063477
    10. '                       ' → logprob: -12.378747940063477

Token 3130: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018843665719032288
    2. '                   ' → logprob: -4.018843650817871
    3. '           ' → logprob: -7.518843650817871
    4. '       ' → logprob: -9.393843650817871
    5. '
' → logprob: -10.018843650817871
    6. '```' → logprob: -12.268843650817871
    7. '                       ' → logprob: -12.393843650817871
    8. '                ' → logprob: -12.643843650817871
    9. '              ' → logprob: -12.893843650817871
    10. '                    
' → logprob: -13.643843650817871

Token 3131: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14260528981685638
    2. 'if' (adapté à ' if') → logprob: -2.1426053047180176
    3. '           ' → logprob: -4.892605304718018
    4. ' if' → logprob: -4.892605304718018
    5. '       ' → logprob: -8.51760482788086
    6. 'graph' → logprob: -8.51760482788086
    7. '                   ' → logprob: -9.51760482788086
    8. 'for' → logprob: -10.01760482788086
    9. '
' → logprob: -11.39260482788086
    10. ' graph' → logprob: -11.64260482788086

Token 3132: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.5805897116661072
    2. '(st' → logprob: -0.8305897116661072
    3. '(graph' → logprob: -5.955589771270752
    4. ' street' → logprob: -6.955589771270752
    5. 'graph' → logprob: -8.205589294433594
    6. '(t' → logprob: -8.330589294433594
    7. 'street' → logprob: -8.455589294433594
    8. '   ' → logprob: -8.705589294433594
    9. ' graph' → logprob: -9.580589294433594
    10. '(' → logprob: -10.330589294433594

Token 3133: 'street' (ID: 55690)
  Prédit: 'street'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -1.3663626305060461e-05
    2. ' street' → logprob: -11.25001335144043
    3. 'stre' → logprob: -14.75001335144043
    4. '   ' → logprob: -15.75001335144043
    5. 'stroke' → logprob: -17.12501335144043
    6. 'graph' → logprob: -19.25001335144043
    7. 'storm' → logprob: -19.50001335144043
    8. '
' → logprob: -19.62501335144043
    9. 'st' → logprob: -19.75001335144043
    10. 's' → logprob: -19.75001335144043

Token 3134: '_other' (ID: 70088)
  Prédit: '_other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_other' → logprob: -3.128163257315464e-07
    2. 'other' → logprob: -15.25
    3. ',_' → logprob: -17.375
    4. 'Other' → logprob: -18.0
    5. '_under' → logprob: -18.0
    6. '_OTHER' → logprob: -18.75
    7. '_direct' → logprob: -19.125
    8. '   ' → logprob: -19.25
    9. '(other' → logprob: -19.5
    10. '_only' → logprob: -19.5

Token 3135: ',t' (ID: 26927)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.963691804325208e-05
    2. ',[' → logprob: -11.500029563903809
    3. ',",' → logprob: -11.625029563903809
    4. ',
' → logprob: -12.375029563903809
    5. '[' → logprob: -13.375029563903809
    6. ',t' → logprob: -13.625029563903809
    7. ' ,' → logprob: -14.125029563903809
    8. '',' → logprob: -14.500029563903809
    9. ',)' → logprob: -15.000029563903809
    10. ')' → logprob: -15.750029563903809

Token 3136: 'ouch' (ID: 4058)
  Prédit: 'ouch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouch' → logprob: -1.8074162653647363e-05
    2. 'touch' → logprob: -12.000018119812012
    3. 'ou' → logprob: -12.750018119812012
    4. 'ouched' → logprob: -13.500018119812012
    5. '_touch' → logprob: -13.500018119812012
    6. 'uch' → logprob: -14.000018119812012
    7. '_' → logprob: -14.250018119812012
    8. 'o' → logprob: -14.500018119812012
    9. 'ouc' → logprob: -14.500018119812012
    10. ')' → logprob: -14.500018119812012

Token 3137: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. ']' → logprob: -13.375003814697266
    3. 'in' → logprob: -13.875003814697266
    4. ' )' → logprob: -14.125003814697266
    5. ')]' → logprob: -14.500003814697266
    6. '   ' → logprob: -15.500003814697266
    7. '])' → logprob: -16.125003814697266
    8. ',)' → logprob: -17.125003814697266
    9. '）' → logprob: -17.375003814697266
    10. ' in' → logprob: -17.500003814697266

Token 3138: ' in' (ID: 306)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5330673456192017
    2. ' in' → logprob: -1.4080673456192017
    3. 'in' → logprob: -1.7830673456192017
    4. ']' → logprob: -8.28306770324707
    5. ',' → logprob: -9.03306770324707
    6. '   ' → logprob: -10.65806770324707
    7. '[' → logprob: -10.78306770324707
    8. ' )' → logprob: -11.40806770324707
    9. 'In' → logprob: -12.15806770324707
    10. '	in' → logprob: -13.03306770324707

Token 3139: ' edge' (ID: 11165)
  Prédit: 'edge'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'edge' → logprob: -0.024146566167473793
    2. ' edge' → logprob: -3.774146556854248
    3. 'graph' → logprob: -7.024146556854248
    4. ' graph' → logprob: -12.024147033691406
    5. '   ' → logprob: -12.774147033691406
    6. ' ' → logprob: -15.024147033691406
    7. '(edge' → logprob: -15.149147033691406
    8. '           ' → logprob: -15.524147033691406
    9. 'edges' → logprob: -15.774147033691406
    10. '       ' → logprob: -15.774147033691406

Token 3140: '_len' (ID: 13683)
  Prédit: '_len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_len' → logprob: -2.1008713702030946e-06
    2. 'len' → logprob: -13.125001907348633
    3. '[len' → logprob: -16.875001907348633
    4. '   ' → logprob: -18.125001907348633
    5. 'Len' → logprob: -18.125001907348633
    6. '```' → logprob: -18.375001907348633
    7. '_le' → logprob: -18.625001907348633
    8. '[' → logprob: -18.625001907348633
    9. 's' → logprob: -18.875001907348633
    10. '_LEN' → logprob: -18.875001907348633

Token 3141: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4383220970630646
    2. ':
' → logprob: -1.4383220672607422
    3. ':' → logprob: -2.688322067260742
    4. '               ' → logprob: -3.313322067260742
    5. '=' → logprob: -5.563322067260742
    6. 'in' → logprob: -6.313322067260742
    7. '           ' → logprob: -6.563322067260742
    8. ' in' → logprob: -7.063322067260742
    9. '                  ' → logprob: -7.188322067260742
    10. '):
' → logprob: -7.313322067260742

Token 3142: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0030314286705106497
    2. '               ' → logprob: -6.628031253814697
    3. ':
' → logprob: -7.128031253814697
    4. ':' → logprob: -7.628031253814697
    5. '                  ' → logprob: -9.128031730651855
    6. '   ' → logprob: -10.128031730651855
    7. '                    ' → logprob: -10.378031730651855
    8. '           ' → logprob: -10.378031730651855
    9. ',' → logprob: -10.878031730651855
    10. '```' → logprob: -10.878031730651855

Token 3143: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.0012301115784794092
    2. ' graph' → logprob: -6.751230239868164
    3. 'for' → logprob: -10.376230239868164
    4. '               ' → logprob: -11.376230239868164
    5. '           ' → logprob: -12.126230239868164
    6. '                   ' → logprob: -12.626230239868164
    7. '	graph' → logprob: -12.626230239868164
    8. '[' → logprob: -13.751230239868164
    9. '(graph' → logprob: -13.751230239868164
    10. ' for' → logprob: -14.001230239868164

Token 3144: '_direct' (ID: 80120)
  Prédit: '_direct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direct' → logprob: -0.00029875844484195113
    2. 'direct' → logprob: -8.125298500061035
    3. 'Directed' → logprob: -13.500298500061035
    4. '[' → logprob: -14.125298500061035
    5. 'irected' → logprob: -16.00029945373535
    6. '_' → logprob: -16.37529945373535
    7. '_DIRECT' → logprob: -16.87529945373535
    8. 'Direct' → logprob: -17.00029945373535
    9. '-directed' → logprob: -17.00029945373535
    10. 'DIRECT' → logprob: -17.25029945373535

Token 3145: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -5.200166469876422e-06
    2. '_ed' → logprob: -13.250004768371582
    3. 'ected' → logprob: -13.750004768371582
    4. 'irected' → logprob: -13.875004768371582
    5. 'ED' → logprob: -14.250004768371582
    6. 'ted' → logprob: -15.250004768371582
    7. 'eded' → logprob: -15.875004768371582
    8. '```' → logprob: -16.7500057220459
    9. '_direct' → logprob: -16.8750057220459
    10. 'ед' → logprob: -17.0000057220459

Token 3146: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.306760805164231e-05
    2. '   ' → logprob: -12.75001335144043
    3. ' =' → logprob: -13.12501335144043
    4. '```' → logprob: -13.25001335144043
    5. '=' → logprob: -13.50001335144043
    6. ' [' → logprob: -13.75001335144043
    7. '[t' → logprob: -14.62501335144043
    8. '.pop' → logprob: -14.87501335144043
    9. '       ' → logprob: -15.00001335144043
    10. '[
' → logprob: -15.12501335144043

Token 3147: 'street' (ID: 55690)
  Prédit: 'street'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -9.610702363715973e-06
    2. '[' → logprob: -12.375009536743164
    3. '   ' → logprob: -13.750009536743164
    4. '(st' → logprob: -13.875009536743164
    5. ' street' → logprob: -13.875009536743164
    6. 'stroke' → logprob: -14.375009536743164
    7. 'stre' → logprob: -14.625009536743164
    8. 'st' → logprob: -15.125009536743164
    9. 'stock' → logprob: -15.375009536743164
    10. 'staff' → logprob: -15.375009536743164

Token 3148: '_other' (ID: 70088)
  Prédit: '_other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_other' → logprob: -1.27099974633893e-05
    2. '_direct' → logprob: -11.875012397766113
    3. 'Other' → logprob: -12.500012397766113
    4. '   ' → logprob: -14.500012397766113
    5. 'other' → logprob: -15.250012397766113
    6. '_only' → logprob: -15.250012397766113
    7. '```' → logprob: -15.750012397766113
    8. '_OTHER' → logprob: -16.00001335144043
    9. '_else' → logprob: -16.00001335144043
    10. '	' → logprob: -16.62501335144043

Token 3149: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.061967913061380386
    2. ']=' → logprob: -3.4369678497314453
    3. '][' → logprob: -3.8119678497314453
    4. '=' → logprob: -5.311967849731445
    5. ')' → logprob: -8.186967849731445
    6. '].' → logprob: -8.561967849731445
    7. '[' → logprob: -9.311967849731445
    8. ']==' → logprob: -9.561967849731445
    9. ']['' → logprob: -9.936967849731445
    10. '']' → logprob: -10.811967849731445

Token 3150: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0025051478296518326
    2. ' =' → logprob: -6.502505302429199
    3. ']=' → logprob: -7.752505302429199
    4. ']' → logprob: -8.0025053024292
    5. '[' → logprob: -8.5025053024292
    6. '[t' → logprob: -10.6275053024292
    7. '['' → logprob: -13.2525053024292
    8. '][' → logprob: -13.3775053024292
    9. '   ' → logprob: -13.5025053024292
    10. '=[' → logprob: -14.3775053024292

Token 3151: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -3.7146746763028204e-05
    2. '[w' → logprob: -10.25003719329834
    3. ' [(' → logprob: -13.50003719329834
    4. '[' → logprob: -16.250036239624023
    5. '([(' → logprob: -16.375036239624023
    6. '[((' → logprob: -18.500036239624023
    7. '[
' → logprob: -19.625036239624023
    8. '   ' → logprob: -19.875036239624023
    9. '(w' → logprob: -20.000036239624023
    10. '[t' → logprob: -20.250036239624023

Token 3152: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -8.196732960641384e-05
    2. '[w' → logprob: -10.500082015991211
    3. 'p' → logprob: -11.000082015991211
    4. '(w' → logprob: -11.125082015991211
    5. 'v' → logprob: -11.500082015991211
    6. ' w' → logprob: -12.375082015991211
    7. 'u' → logprob: -12.875082015991211
    8. 'n' → logprob: -13.375082015991211
    9. 'node' → logprob: -14.000082015991211
    10. 'neighbor' → logprob: -14.250082015991211

Token 3153: ',d' (ID: 26159)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5132166743278503
    2. ',d' → logprob: -1.8882167339324951
    3. ',w' → logprob: -2.138216733932495
    4. ',' → logprob: -2.638216733932495
    5. 'for' → logprob: -3.263216733932495
    6. ' for' → logprob: -4.638216495513916
    7. 'w' → logprob: -5.263216495513916
    8. ' !=' → logprob: -5.388216495513916
    9. 'd' → logprob: -7.263216495513916
    10. ')!=' → logprob: -7.888216495513916

Token 3154: ')' (ID: 8)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.16605153679847717
    2. ' for' → logprob: -1.9160515069961548
    3. ')' → logprob: -5.166051387786865
    4. '!=' → logprob: -10.041051864624023
    5. 'w' → logprob: -10.166051864624023
    6. '	for' → logprob: -12.541051864624023
    7. '   ' → logprob: -12.666051864624023
    8. 'd' → logprob: -12.916051864624023
    9. '           ' → logprob: -13.291051864624023
    10. ' ' → logprob: -13.416051864624023

Token 3155: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.47408413887023926
    2. 'for' → logprob: -0.9740841388702393
    3. '           ' → logprob: -12.59908390045166
    4. '               ' → logprob: -14.09908390045166
    5. '	for' → logprob: -14.59908390045166
    6. '   ' → logprob: -14.84908390045166
    7. '       ' → logprob: -14.84908390045166
    8. 'w' → logprob: -15.34908390045166
    9. '[' → logprob: -15.34908390045166
    10. '         ' → logprob: -15.47408390045166

Token 3156: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -9.615255839889869e-05
    2. ' w' → logprob: -9.250096321105957
    3. '[w' → logprob: -19.50009536743164
    4. '	w' → logprob: -19.62509536743164
    5. '   ' → logprob: -19.62509536743164
    6. '(w' → logprob: -19.75009536743164
    7. ' ' → logprob: -20.25009536743164
    8. '       ' → logprob: -21.62509536743164
    9. '
' → logprob: -21.75009536743164
    10. '  ' → logprob: -21.75009536743164

Token 3157: ',d' (ID: 26159)
  Prédit: ',w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.054738737642765045
    2. ',d' → logprob: -3.304738759994507
    3. '!=' → logprob: -4.179738521575928
    4. 'w' → logprob: -7.929738521575928
    5. ',t' → logprob: -8.304738998413086
    6. ',' → logprob: -8.929738998413086
    7. 'in' → logprob: -9.179738998413086
    8. ',v' → logprob: -9.304738998413086
    9. 'not' → logprob: -9.929738998413086
    10. ',s' → logprob: -10.179738998413086

Token 3158: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5242567658424377
    2. ' in' → logprob: -0.8992567658424377
    3. '[w' → logprob: -8.024256706237793
    4. '   ' → logprob: -8.274256706237793
    5. '[' → logprob: -8.899256706237793
    6. '[in' → logprob: -9.274256706237793
    7. '       ' → logprob: -9.774256706237793
    8. '           ' → logprob: -10.024256706237793
    9. '               ' → logprob: -10.149256706237793
    10. 'w' → logprob: -10.649256706237793

Token 3159: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -4.227250610711053e-05
    2. 'street' → logprob: -10.750041961669922
    3. ' graph' → logprob: -10.875041961669922
    4. '(graph' → logprob: -13.875041961669922
    5. '[' → logprob: -14.500041961669922
    6. '	graph' → logprob: -14.875041961669922
    7. '   ' → logprob: -17.625041961669922
    8. 'graphs' → logprob: -18.750041961669922
    9. 'graphic' → logprob: -19.000041961669922
    10. 'edge' → logprob: -19.125041961669922

Token 3160: '_direct' (ID: 80120)
  Prédit: '_direct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direct' → logprob: -0.06926938146352768
    2. '_other' → logprob: -3.1942694187164307
    3. 'direct' → logprob: -3.6942694187164307
    4. '[' → logprob: -7.069269180297852
    5. '_' → logprob: -9.569269180297852
    6. 'other' → logprob: -9.694269180297852
    7. '   ' → logprob: -10.069269180297852
    8. 'irected' → logprob: -12.319269180297852
    9. 'Directed' → logprob: -12.444269180297852
    10. '```' → logprob: -12.569269180297852

Token 3161: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.010310675948858261
    2. 'ected' → logprob: -5.010310649871826
    3. 'ated' → logprob: -6.635310649871826
    4. 'icted' → logprob: -7.260310649871826
    5. 'irected' → logprob: -7.260310649871826
    6. 'ted' → logprob: -7.510310649871826
    7. '[' → logprob: -9.635311126708984
    8. '_ed' → logprob: -10.010311126708984
    9. '_graph' → logprob: -10.260311126708984
    10. 'eded' → logprob: -10.510311126708984

Token 3162: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.04361255094408989
    2. '[t' → logprob: -3.168612480163574
    3. '   ' → logprob: -8.418612480163574
    4. '       ' → logprob: -8.668612480163574
    5. 't' → logprob: -9.918612480163574
    6. '(st' → logprob: -10.918612480163574
    7. 'touch' → logprob: -11.043612480163574
    8. '[(' → logprob: -11.043612480163574
    9. '           ' → logprob: -11.168612480163574
    10. '[w' → logprob: -11.168612480163574

Token 3163: 'street' (ID: 55690)
  Prédit: 'street'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.0010154220508411527
    2. 'touch' → logprob: -7.2510151863098145
    3. '[' → logprob: -9.126015663146973
    4. 'st' → logprob: -9.251015663146973
    5. '(st' → logprob: -10.126015663146973
    6. 'stre' → logprob: -11.626015663146973
    7. 'stroke' → logprob: -11.751015663146973
    8. '   ' → logprob: -11.876015663146973
    9. ' street' → logprob: -12.001015663146973
    10. '[t' → logprob: -12.251015663146973

Token 3164: '_other' (ID: 70088)
  Prédit: '_other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_other' → logprob: -1.1160349458805285e-05
    2. '_direct' → logprob: -12.500011444091797
    3. 'other' → logprob: -12.625011444091797
    4. 'Other' → logprob: -12.875011444091797
    5. '_only' → logprob: -14.750011444091797
    6. '_OTHER' → logprob: -15.625011444091797
    7. '_else' → logprob: -15.875011444091797
    8. '_' → logprob: -16.125011444091797
    9. '
' → logprob: -16.250011444091797
    10. '   ' → logprob: -16.375011444091797

Token 3165: ']' (ID: 60)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2860950231552124
    2. 'if' → logprob: -1.4110950231552124
    3. '           ' → logprob: -5.411095142364502
    4. '       ' → logprob: -8.286094665527344
    5. '               ' → logprob: -9.286094665527344
    6. '                   ' → logprob: -10.786094665527344
    7. '   ' → logprob: -10.911094665527344
    8. '            ' → logprob: -10.911094665527344
    9. '          ' → logprob: -10.911094665527344
    10. '        ' → logprob: -11.661094665527344

Token 3166: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3883979916572571
    2. 'if' → logprob: -1.1383979320526123
    3. '           ' → logprob: -6.888398170471191
    4. '       ' → logprob: -8.013398170471191
    5. '               ' → logprob: -9.388398170471191
    6. '        ' → logprob: -10.763398170471191
    7. '          ' → logprob: -10.763398170471191
    8. '   ' → logprob: -11.513398170471191
    9. '            ' → logprob: -11.513398170471191
    10. '                   ' → logprob: -11.638398170471191

Token 3167: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.7133641196996905e-05
    2. ' w' → logprob: -10.62502670288086
    3. '   ' → logprob: -13.12502670288086
    4. '	w' → logprob: -14.50002670288086
    5. '       ' → logprob: -15.75002670288086
    6. '    ' → logprob: -16.12502670288086
    7. '(w' → logprob: -16.75002670288086
    8. '```' → logprob: -18.00002670288086
    9. '           ' → logprob: -18.25002670288086
    10. '     ' → logprob: -18.62502670288086

Token 3168: '!=' (ID: 11408)
  Prédit: '!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.00015205175441224128
    2. ' !=' → logprob: -9.500151634216309
    3. ']!=' → logprob: -10.625151634216309
    4. '!=(' → logprob: -11.250151634216309
    5. '()!=' → logprob: -11.375151634216309
    6. ')!=' → logprob: -11.625151634216309
    7. '!==' → logprob: -11.875151634216309
    8. '!' → logprob: -12.125151634216309
    9. '```' → logprob: -13.250151634216309
    10. '!=-' → logprob: -13.625151634216309

Token 3169: 'touch' (ID: 47206)
  Prédit: 'touch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -7.703443770878948e-06
    2. ' touch' → logprob: -12.000007629394531
    3. 't' → logprob: -15.000007629394531
    4. 'tap' → logprob: -15.250007629394531
    5. '   ' → logprob: -15.500007629394531
    6. 'tou' → logprob: -15.625007629394531
    7. 'talk' → logprob: -15.875007629394531
    8. '_touch' → logprob: -16.12500762939453
    9. '
' → logprob: -16.37500762939453
    10. '.touch' → logprob: -16.62500762939453

Token 3170: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0054879761300981045
    2. '               ' → logprob: -5.38048791885376
    3. '           ' → logprob: -7.25548791885376
    4. ']
' → logprob: -9.005488395690918
    5. ')]' → logprob: -11.255488395690918
    6. '                   ' → logprob: -11.255488395690918
    7. ' ]' → logprob: -12.255488395690918
    8. '       ' → logprob: -13.505488395690918
    9. ')' → logprob: -13.630488395690918
    10. '()]' → logprob: -13.755488395690918

Token 3171: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003881430719047785
    2. '               ' → logprob: -5.878881454467773
    3. '		' → logprob: -7.878881454467773
    4. 'continue' → logprob: -8.253881454467773
    5. 'else' → logprob: -9.003881454467773
    6. ' continue' → logprob: -9.503881454467773
    7. '       ' → logprob: -9.503881454467773
    8. '                   ' → logprob: -10.253881454467773
    9. '	continue' → logprob: -10.503881454467773
    10. '
' → logprob: -10.753881454467773

Token 3172: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018526002764701843
    2. 'else' → logprob: -4.018526077270508
    3. ' else' → logprob: -8.643526077270508
    4. 'elif' (adapté à ' elif') → logprob: -9.018526077270508
    5. '       ' → logprob: -10.018526077270508
    6. '               ' → logprob: -11.018526077270508
    7. '   ' → logprob: -12.018526077270508
    8. '		' → logprob: -12.643526077270508
    9. ' elif' → logprob: -12.893526077270508
    10. '```' → logprob: -13.143526077270508

Token 3173: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3868834376335144
    2. ' c' → logprob: -1.1368834972381592
    3. '(c' → logprob: -11.636883735656738
    4. '	c' → logprob: -13.011883735656738
    5. '           ' → logprob: -14.261883735656738
    6. ' (' → logprob: -15.886883735656738
    7. '   ' → logprob: -16.011882781982422
    8. ')c' → logprob: -16.011882781982422
    9. ' ' → logprob: -16.386882781982422
    10. '(' → logprob: -16.761882781982422

Token 3174: '>' (ID: 29)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.31775030493736267
    2. ' <' → logprob: -1.317750334739685
    3. ' >' → logprob: -5.692750453948975
    4. '>' → logprob: -6.817750453948975
    5. '[' → logprob: -11.692749977111816
    6. ' ' → logprob: -14.317749977111816
    7. '<|end|>' → logprob: -14.442749977111816
    8. '{' → logprob: -14.817749977111816
    9. '.' → logprob: -14.942749977111816
    10. ')<' → logprob: -15.192749977111816

Token 3175: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004309076175559312
    2. ' ' → logprob: -7.750431060791016
    3. '   ' → logprob: -16.625431060791016
    4. '1' → logprob: -16.875431060791016
    5. '  ' → logprob: -18.500431060791016
    6. '[' → logprob: -18.750431060791016
    7. '=' → logprob: -19.000431060791016
    8. ')' → logprob: -19.000431060791016
    9. '           ' → logprob: -19.000431060791016
    10. '۰' → logprob: -19.250431060791016

Token 3176: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5772398710250854
    2. ':' → logprob: -0.8272398710250854
    3. '               ' → logprob: -7.202239990234375
    4. '           ' → logprob: -8.077239990234375
    5. '):
' → logprob: -8.827239990234375
    6. ',' → logprob: -10.952239990234375
    7. '       ' → logprob: -11.202239990234375
    8. '<|end|>' → logprob: -11.452239990234375
    9. ' and' → logprob: -11.952239990234375
    10. '[' → logprob: -11.952239990234375

Token 3177: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.550411151489243e-05
    2. '#' → logprob: -10.625055313110352
    3. '                   ' → logprob: -11.125055313110352
    4. '           ' → logprob: -12.000055313110352
    5. ' #' → logprob: -13.500055313110352
    6. '   ' → logprob: -13.625055313110352
    7. ':' → logprob: -13.875055313110352
    8. '                
' → logprob: -14.125055313110352
    9. '              ' → logprob: -14.125055313110352
    10. 'if' → logprob: -14.250055313110352

Token 3178: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.470072478055954
    2. '#' (adapté à ' #') → logprob: -1.0950725078582764
    3. ' #' → logprob: -4.095072269439697
    4. 'if' → logprob: -4.970072269439697
    5. 'graph' → logprob: -4.970072269439697
    6. ' if' → logprob: -5.345072269439697
    7. ' graph' → logprob: -5.970072269439697
    8. 'for' → logprob: -6.220072269439697
    9. ' for' → logprob: -8.220072746276855
    10. '                   ' → logprob: -8.720072746276855

Token 3179: ' acute' (ID: 43944)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5962731838226318
    2. 'for' → logprob: -1.3462731838226318
    3. '               ' → logprob: -2.346273183822632
    4. '#' → logprob: -2.471273183822632
    5. 'if' → logprob: -5.471273422241211
    6. '                   ' → logprob: -6.471273422241211
    7. 'street' → logprob: -6.846273422241211
    8. ' graph' → logprob: -7.096273422241211
    9. '   ' → logprob: -8.346273422241211
    10. ' for' → logprob: -8.471273422241211

Token 3180: '
' (ID: 198)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2613140940666199
    2. '):
' → logprob: -1.8863141536712646
    3. ':' → logprob: -3.2613141536712646
    4. '               ' → logprob: -4.5113139152526855
    5. ',' → logprob: -5.1363139152526855
    6. '_side' → logprob: -5.3863139152526855
    7. ')' → logprob: -5.5113139152526855
    8. '           ' → logprob: -5.6363139152526855
    9. ' side' → logprob: -5.7613139152526855
    10. '):' → logprob: -6.2613139152526855

Token 3181: '               ' (ID: 506)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6427058577537537
    2. '               ' → logprob: -1.1427059173583984
    3. ':
' → logprob: -2.3927059173583984
    4. ':' → logprob: -3.3927059173583984
    5. ',' → logprob: -4.642705917358398
    6. '   ' → logprob: -5.517705917358398
    7. '           ' → logprob: -6.017705917358398
    8. '):
' → logprob: -6.142705917358398
    9. '                           ' → logprob: -6.392705917358398
    10. '                       ' → logprob: -6.642705917358398

Token 3182: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.40291640162467957
    2. 'graph' → logprob: -1.777916431427002
    3. '#' (adapté à ' #') → logprob: -2.402916431427002
    4. 'for' → logprob: -3.152916431427002
    5. 'if' → logprob: -4.402916431427002
    6. ' graph' → logprob: -4.527916431427002
    7. ' #' → logprob: -5.902916431427002
    8. ' if' → logprob: -6.652916431427002
    9. ' for' → logprob: -6.902916431427002
    10. ' forbidden' → logprob: -7.527916431427002

Token 3183: ' forbid' (ID: 164447)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7080583572387695
    2. 'graph' → logprob: -1.3330583572387695
    3. '#' → logprob: -2.0830583572387695
    4. '               ' → logprob: -2.4580583572387695
    5. 'if' → logprob: -3.4580583572387695
    6. '                   ' → logprob: -7.0830583572387695
    7. 'remove' → logprob: -8.58305835723877
    8. 'from' → logprob: -8.70805835723877
    9. ' graph' → logprob: -8.95805835723877
    10. ' #' → logprob: -9.08305835723877

Token 3184: ' movement' (ID: 12772)
  Prédit: '(st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.5978752970695496
    2. ' (' → logprob: -1.2228753566741943
    3. ' street' → logprob: -2.7228753566741943
    4. 'graph' → logprob: -3.3478753566741943
    5. '(' → logprob: -4.347875118255615
    6. 'street' → logprob: -4.472875118255615
    7. '(graph' → logprob: -4.722875118255615
    8. ' movement' → logprob: -4.972875118255615
    9. ' graph' → logprob: -5.222875118255615
    10. 'movement' → logprob: -6.097875118255615

Token 3185: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.36326682567596436
    2. ' from' → logprob: -1.2382668256759644
    3. '               ' → logprob: -4.488266944885254
    4. ' (' → logprob: -6.988266944885254
    5. ' =' → logprob: -7.238266944885254
    6. '                   ' → logprob: -7.613266944885254
    7. '=' → logprob: -7.988266944885254
    8. '   ' → logprob: -8.488266944885254
    9. '[' → logprob: -8.738266944885254
    10. ' street' → logprob: -8.863266944885254

Token 3186: ' obt' (ID: 5564)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.07890509814023972
    2. ' street' → logprob: -2.5789051055908203
    3. 'stre' → logprob: -11.57890510559082
    4. '   ' → logprob: -12.57890510559082
    5. ' ' → logprob: -13.82890510559082
    6. 'st' → logprob: -15.07890510559082
    7. '(st' → logprob: -15.20390510559082
    8. '.street' → logprob: -15.45390510559082
    9. 'stroke' → logprob: -15.57890510559082
    10. '       ' → logprob: -15.70390510559082

Token 3187: 'use' (ID: 1821)
  Prédit: 'use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.13988395035266876
    2. '_use' → logprob: -2.2648839950561523
    3. 'u' → logprob: -4.014883995056152
    4. '```' → logprob: -6.264883995056152
    5. '_other' → logprob: -6.764883995056152
    6. '_side' → logprob: -7.389883995056152
    7. ',' → logprob: -7.639883995056152
    8. '_' → logprob: -7.889883995056152
    9. '_user' → logprob: -7.889883995056152
    10. '(use' → logprob: -8.014883995056152

Token 3188: ' side' (ID: 4307)
  Prédit: '_side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -0.45088809728622437
    2. ' side' → logprob: -1.5758881568908691
    3. 'side' → logprob: -2.200888156890869
    4. ' _' → logprob: -4.825888156890869
    5. '_s' → logprob: -4.825888156890869
    6. ' ' → logprob: -4.950888156890869
    7. '_other' → logprob: -5.200888156890869
    8. '`' → logprob: -5.450888156890869
    9. ' street' → logprob: -6.325888156890869
    10. '
' → logprob: -6.325888156890869

Token 3189: ' to' (ID: 316)
  Prédit: ' street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' street' → logprob: -0.361707478761673
    2. '(st' → logprob: -1.8617074489593506
    3. 'street' → logprob: -2.3617074489593506
    4. ' (' → logprob: -3.3617074489593506
    5. ''' → logprob: -5.61170768737793
    6. '               ' → logprob: -5.61170768737793
    7. ' to' → logprob: -5.86170768737793
    8. '`' → logprob: -6.48670768737793
    9. '(' → logprob: -6.86170768737793
    10. '                   ' → logprob: -7.11170768737793

Token 3190: ' acute' (ID: 43944)
  Prédit: 'street'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'street' → logprob: -0.3870880603790283
    2. ' street' → logprob: -1.1370880603790283
    3. 'stre' → logprob: -9.51208782196045
    4. ''' → logprob: -9.63708782196045
    5. ' ' → logprob: -10.38708782196045
    6. ' ' → logprob: -11.01208782196045
    7. '"' → logprob: -12.13708782196045
    8. 'space' → logprob: -12.26208782196045
    9. '.street' → logprob: -12.63708782196045
    10. '   ' → logprob: -12.76208782196045

Token 3191: ' side' (ID: 4307)
  Prédit: '_side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -0.3439997732639313
    2. ' side' → logprob: -1.7189997434616089
    3. ' street' → logprob: -3.3439998626708984
    4. 'side' → logprob: -3.4689998626708984
    5. '`' → logprob: -4.843999862670898
    6. '_s' → logprob: -5.093999862670898
    7. ' ' → logprob: -5.093999862670898
    8. '"' → logprob: -5.218999862670898
    9. 'street' → logprob: -5.343999862670898
    10. '_' → logprob: -6.218999862670898

Token 3192: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018657641485333443
    2. '                   ' → logprob: -5.018657684326172
    3. ' (' → logprob: -5.393657684326172
    4. ' street' → logprob: -5.393657684326172
    5. '                ' → logprob: -7.893657684326172
    6. '(st' → logprob: -8.393657684326172
    7. '[' → logprob: -8.393657684326172
    8. '(space' → logprob: -8.393657684326172
    9. 'street' → logprob: -8.518657684326172
    10. '                
' → logprob: -8.768657684326172

Token 3193: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0017696624854579568
    2. ' street' → logprob: -6.876769542694092
    3. '                
' → logprob: -8.87677001953125
    4. '[' → logprob: -9.00177001953125
    5. ' (' → logprob: -9.12677001953125
    6. 'street' → logprob: -9.25177001953125
    7. '                   ' → logprob: -9.37677001953125
    8. '                ' → logprob: -10.25177001953125
    9. ' ' → logprob: -10.87677001953125
    10. '              ' → logprob: -11.25177001953125

Token 3194: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12281268835067749
    2. 'street' → logprob: -3.4978127479553223
    3. ' street' → logprob: -3.4978127479553223
    4. 'for' → logprob: -4.122812747955322
    5. 'graph' → logprob: -4.372812747955322
    6. '(st' → logprob: -5.122812747955322
    7. '                   ' → logprob: -5.122812747955322
    8. ' for' → logprob: -5.372812747955322
    9. ' graph' → logprob: -5.872812747955322
    10. ' (' → logprob: -5.872812747955322

Token 3195: ' obt' (ID: 5564)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5897338390350342
    2. 'for' → logprob: -1.7147338390350342
    3. 'graph' → logprob: -2.464733839035034
    4. 'street' → logprob: -2.464733839035034
    5. 'if' → logprob: -2.964733839035034
    6. '                   ' → logprob: -4.589734077453613
    7. ' street' → logprob: -4.964734077453613
    8. ' for' → logprob: -5.214734077453613
    9. ' if' → logprob: -5.214734077453613
    10. '#' → logprob: -5.464734077453613

Token 3196: 'use' (ID: 1821)
  Prédit: 'use'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'use' → logprob: -0.015009956434369087
    2. 'u' → logprob: -4.390009880065918
    3. '_use' → logprob: -6.890009880065918
    4. '   ' → logprob: -7.265009880065918
    5. '```' → logprob: -9.015009880065918
    6. '       ' → logprob: -9.140009880065918
    7. '_' → logprob: -9.765009880065918
    8. '    ' → logprob: -9.765009880065918
    9. 'user' → logprob: -9.890009880065918
    10. '(use' → logprob: -10.390009880065918

Token 3197: ' side' (ID: 4307)
  Prédit: '_side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -0.11837749928236008
    2. ' side' → logprob: -2.993377447128296
    3. 'side' → logprob: -3.368377447128296
    4. '_s' → logprob: -5.118377685546875
    5. ' _' → logprob: -5.243377685546875
    6. '_other' → logprob: -5.618377685546875
    7. '   ' → logprob: -5.743377685546875
    8. '`' → logprob: -5.868377685546875
    9. '```' → logprob: -6.743377685546875
    10. ' ' → logprob: -7.743377685546875

Token 3198: ' is' (ID: 382)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.21622176468372345
    2. ' =' → logprob: -1.716221809387207
    3. 'street' → logprob: -4.966221809387207
    4. ' street' → logprob: -5.716221809387207
    5. ' is' → logprob: -6.591221809387207
    6. ':' → logprob: -7.216221809387207
    7. 'from' → logprob: -7.591221809387207
    8. '   ' → logprob: -8.466221809387207
    9. '(st' → logprob: -8.716221809387207
    10. ')' → logprob: -8.841221809387207

Token 3199: ' street' (ID: 12901)
  Prédit: ' street'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' street' → logprob: -0.02981541119515896
    2. 'street' → logprob: -3.529815435409546
    3. '   ' → logprob: -11.154815673828125
    4. 'stre' → logprob: -11.654815673828125
    5. '.street' → logprob: -12.154815673828125
    6. ' ' → logprob: -12.279815673828125
    7. '(st' → logprob: -12.529815673828125
    8. '	st' → logprob: -12.654815673828125
    9. ' ' → logprob: -12.654815673828125
    10. ' streets' → logprob: -12.779815673828125

Token 3200: '_other' (ID: 70088)
  Prédit: '_other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_other' → logprob: -1.5048530030981055e-06
    2. '_else' → logprob: -14.750001907348633
    3. '_o' → logprob: -15.625001907348633
    4. ']_' → logprob: -16.000001907348633
    5. ')_' → logprob: -16.250001907348633
    6. '_' → logprob: -16.250001907348633
    7. '   ' → logprob: -16.500001907348633
    8. '_OTHER' → logprob: -16.500001907348633
    9. '```' → logprob: -16.625001907348633
    10. 'Other' → logprob: -16.750001907348633

Token 3201: ',' (ID: 11)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.16008689999580383
    2. '           ' → logprob: -2.7850868701934814
    3. ':
' → logprob: -3.9100868701934814
    4. ',' → logprob: -4.1600871086120605
    5. ')' → logprob: -4.2850871086120605
    6. '                   ' → logprob: -4.5350871086120605
    7. '):
' → logprob: -4.7850871086120605
    8. '[' → logprob: -5.2850871086120605
    9. ':' → logprob: -6.1600871086120605
    10. ']' → logprob: -6.2850871086120605

Token 3202: ' acute' (ID: 43944)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.7257130742073059
    2. 'street' → logprob: -2.225713014602661
    3. '
' → logprob: -2.600713014602661
    4. ' graph' → logprob: -3.100713014602661
    5. ' street' → logprob: -3.100713014602661
    6. '               ' → logprob: -3.225713014602661
    7. 'touch' → logprob: -3.475713014602661
    8. ''' → logprob: -3.725713014602661
    9. '                   ' → logprob: -3.850713014602661
    10. ' 
' → logprob: -4.22571325302124

Token 3203: ' side' (ID: 4307)
  Prédit: '_side'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_side' → logprob: -0.8073331117630005
    2. ' side' → logprob: -1.4323331117630005
    3. 'side' → logprob: -1.9323331117630005
    4. ')' → logprob: -2.807332992553711
    5. ')_' → logprob: -3.682332992553711
    6. '```' → logprob: -3.807332992553711
    7. ',' → logprob: -4.057332992553711
    8. '
' → logprob: -4.682332992553711
    9. ' _' → logprob: -4.932332992553711
    10. '_to' → logprob: -5.057332992553711

Token 3204: ' touch' (ID: 7381)
  Prédit: ' to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' to' → logprob: -0.22202810645103455
    2. 'to' → logprob: -2.0970280170440674
    3. ',' → logprob: -3.9720280170440674
    4. ')' → logprob: -3.9720280170440674
    5. ' ->' → logprob: -4.8470282554626465
    6. '->' → logprob: -5.2220282554626465
    7. '               ' → logprob: -5.3470282554626465
    8. ' =' → logprob: -5.4720282554626465
    9. '_to' → logprob: -5.4720282554626465
    10. '):
' → logprob: -6.0970282554626465

Token 3205: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0024962294846773148
    2. '
' → logprob: -6.502496242523193
    3. '                   ' → logprob: -7.877496242523193
    4. ':
' → logprob: -8.377495765686035
    5. '           ' → logprob: -8.502495765686035
    6. ',' → logprob: -10.377495765686035
    7. '[
' → logprob: -10.627495765686035
    8. '                
' → logprob: -10.752495765686035
    9. ')' → logprob: -11.252495765686035
    10. '[' → logprob: -11.502495765686035

Token 3206: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00046320082037709653
    2. '                   ' → logprob: -8.125463485717773
    3. '                
' → logprob: -10.125463485717773
    4. '[' → logprob: -10.375463485717773
    5. '[
' → logprob: -11.000463485717773
    6. '```' → logprob: -11.375463485717773
    7. '           ' → logprob: -11.500463485717773
    8. '
' → logprob: -11.750463485717773
    9. '              ' → logprob: -12.000463485717773
    10. '                ' → logprob: -12.250463485717773

Token 3207: ' #' (ID: 1069)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.23057250678539276
    2. '               ' → logprob: -1.8555724620819092
    3. 'for' → logprob: -3.605572462081909
    4. 'if' → logprob: -3.855572462081909
    5. 'idx' → logprob: -7.855572700500488
    6. ' graph' → logprob: -8.355572700500488
    7. '                   ' → logprob: -9.105572700500488
    8. 'remove' → logprob: -9.480572700500488
    9. 'keys' → logprob: -9.605572700500488
    10. ' if' → logprob: -10.230572700500488

Token 3208: ' forbid' (ID: 164447)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.194149911403656
    2. 'for' → logprob: -2.069149971008301
    3. 'if' → logprob: -3.694149971008301
    4. '               ' → logprob: -3.944149971008301
    5. ' graph' → logprob: -6.819149971008301
    6. '#' → logprob: -7.194149971008301
    7. 'street' → logprob: -7.444149971008301
    8. 'from' → logprob: -7.694149971008301
    9. 'idx' → logprob: -7.694149971008301
    10. 'w' → logprob: -7.944149971008301

Token 3209: ' street' (ID: 12901)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.1510604619979858
    2. 'from' → logprob: -1.4010604619979858
    3. '(graph' → logprob: -2.1510605812072754
    4. 'movement' → logprob: -2.6510605812072754
    5. '_direction' → logprob: -2.7760605812072754
    6. 'edge' → logprob: -3.0260605812072754
    7. 'direction' → logprob: -3.0260605812072754
    8. '   ' → logprob: -4.026060581207275
    9. ' (' → logprob: -4.151060581207275
    10. '_edge' → logprob: -5.026060581207275

Token 3210: '_other' (ID: 70088)
  Prédit: '_other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_other' → logprob: -0.0024920646101236343
    2. '_direct' → logprob: -6.0024919509887695
    3. '_under' → logprob: -12.37749195098877
    4. '_' → logprob: -13.00249195098877
    5. '```' → logprob: -13.37749195098877
    6. '_related' → logprob: -13.37749195098877
    7. '_only' → logprob: -14.50249195098877
    8. '`' → logprob: -14.50249195098877
    9. '_old' → logprob: -14.50249195098877
    10. '
' → logprob: -14.62749195098877

Token 3211: '->' (ID: 609)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10522837936878204
    2. ')' → logprob: -3.3552284240722656
    3. ',t' → logprob: -4.480228424072266
    4. '),' → logprob: -4.730228424072266
    5. ',to' → logprob: -5.230228424072266
    6. '_to' → logprob: -5.230228424072266
    7. '```' → logprob: -5.355228424072266
    8. '),(' → logprob: -5.605228424072266
    9. ' ,' → logprob: -5.855228424072266
    10. ',p' → logprob: -6.105228424072266

Token 3212: 'touch' (ID: 47206)
  Prédit: 'touch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.06997411698102951
    2. ' touch' → logprob: -2.694974184036255
    3. '_touch' → logprob: -11.194973945617676
    4. 'tou' → logprob: -11.569973945617676
    5. 'to' → logprob: -12.944973945617676
    6. '.touch' → logprob: -13.569973945617676
    7. ' ' → logprob: -13.569973945617676
    8. ''' → logprob: -13.694973945617676
    9. '(' → logprob: -13.819973945617676
    10. 't' → logprob: -13.944973945617676

Token 3213: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.056522246450185776
    2. '           ' → logprob: -3.3065221309661865
    3. '
' → logprob: -4.306522369384766
    4. '                   ' → logprob: -5.931522369384766
    5. '[]
' → logprob: -7.181522369384766
    6. 'for' → logprob: -7.806522369384766
    7. '[' → logprob: -8.806522369384766
    8. '[
' → logprob: -8.931522369384766
    9. ' for' → logprob: -9.181522369384766
    10. 'if' → logprob: -9.306522369384766

Token 3214: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.36435526609420776
    2. '                   ' → logprob: -1.9893553256988525
    3. ')' → logprob: -2.6143553256988525
    4. '           ' → logprob: -3.2393553256988525
    5. '[' → logprob: -4.489355087280273
    6. ':
' → logprob: -4.864355087280273
    7. '
' → logprob: -4.989355087280273
    8. '.remove' → logprob: -5.364355087280273
    9. '<|end|>' → logprob: -6.114355087280273
    10. '[
' → logprob: -6.239355087280273

Token 3215: ' if' (ID: 538)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.06944166123867035
    2. '               ' → logprob: -3.069441556930542
    3. 'for' → logprob: -4.194441795349121
    4. 'if' (adapté à ' if') → logprob: -5.444441795349121
    5. 'idx' → logprob: -7.944441795349121
    6. ' graph' → logprob: -8.069441795349121
    7. '                   ' → logprob: -8.319441795349121
    8. 'street' → logprob: -8.944441795349121
    9. 'filtered' → logprob: -9.819441795349121
    10. '           ' → logprob: -10.444441795349121

Token 3216: ' street' (ID: 12901)
  Prédit: '(st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.36509910225868225
    2. '(t' → logprob: -1.6150990724563599
    3. ' (' → logprob: -2.2400991916656494
    4. '(w' → logprob: -7.86509895324707
    5. 'street' → logprob: -9.61509895324707
    6. '(any' → logprob: -10.74009895324707
    7. '(' → logprob: -10.99009895324707
    8. 'touch' → logprob: -11.49009895324707
    9. ' ' → logprob: -11.61509895324707
    10. 'any' → logprob: -12.61509895324707

Token 3217: '_other' (ID: 70088)
  Prédit: '_other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_other' → logprob: -8.537868779967539e-06
    2. '_OTHER' → logprob: -12.625008583068848
    3. '_under' → logprob: -13.625008583068848
    4. '_only' → logprob: -14.500008583068848
    5. '```' → logprob: -14.500008583068848
    6. '_direct' → logprob: -14.750008583068848
    7. ']_' → logprob: -14.875008583068848
    8. '_else' → logprob: -15.125008583068848
    9. ')_' → logprob: -15.125008583068848
    10. '[_' → logprob: -15.625008583068848

Token 3218: ' in' (ID: 306)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0156740490347147
    2. ')!=' → logprob: -5.890674114227295
    3. ',
' → logprob: -6.140674114227295
    4. ')' → logprob: -6.265674114227295
    5. '!=' → logprob: -6.265674114227295
    6. ',t' → logprob: -6.890674114227295
    7. 'in' → logprob: -6.890674114227295
    8. ',in' → logprob: -7.140674114227295
    9. ']!=' → logprob: -7.640674114227295
    10. ',)' → logprob: -7.765674114227295

Token 3219: ' [' (ID: 723)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.03253936395049095
    2. '[w' → logprob: -4.282539367675781
    3. '{' → logprob: -4.532539367675781
    4. 'w' → logprob: -5.407539367675781
    5. '[' → logprob: -7.157539367675781
    6. 'dict' → logprob: -7.282539367675781
    7. 'touch' → logprob: -7.657539367675781
    8. '[t' → logprob: -8.032539367675781
    9. '[node' → logprob: -8.907539367675781
    10. 'set' → logprob: -8.907539367675781

Token 3220: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0023161915596574545
    2. 'v' → logprob: -6.627315998077393
    3. 'x' → logprob: -7.627315998077393
    4. 'neighbor' → logprob: -8.75231647491455
    5. '[w' → logprob: -9.25231647491455
    6. 'node' → logprob: -10.00231647491455
    7. '_[' → logprob: -10.25231647491455
    8. 'n' → logprob: -10.50231647491455
    9. ' w' → logprob: -10.62731647491455
    10. 'p' → logprob: -11.00231647491455

Token 3221: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6240822672843933
    2. ' for' → logprob: -1.249082326889038
    3. ',' → logprob: -2.249082326889038
    4. ']' → logprob: -3.374082326889038
    5. ']:' → logprob: -3.874082326889038
    6. ']:
' → logprob: -5.249082088470459
    7. '   ' → logprob: -5.999082088470459
    8. '[' → logprob: -6.249082088470459
    9. '],' → logprob: -6.874082088470459
    10. '][' → logprob: -6.999082088470459

Token 3222: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.002071513794362545
    2. 'graph' → logprob: -7.502071380615234
    3. '[w' → logprob: -8.002071380615234
    4. 'x' → logprob: -8.127071380615234
    5. ' w' → logprob: -8.252071380615234
    6. 'v' → logprob: -8.627071380615234
    7. 'node' → logprob: -9.002071380615234
    8. 'd' → logprob: -9.627071380615234
    9. '(w' → logprob: -9.752071380615234
    10. 'n' → logprob: -10.002071380615234

Token 3223: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.361137330532074
    2. 'in' → logprob: -2.1111373901367188
    3. ' in' → logprob: -3.1111373901367188
    4. 'for' → logprob: -3.2361373901367188
    5. ',t' → logprob: -3.4861373901367188
    6. ',d' → logprob: -3.6111373901367188
    7. 'graph' → logprob: -4.361137390136719
    8. ',p' → logprob: -4.861137390136719
    9. ' for' → logprob: -4.986137390136719
    10. ',v' → logprob: -5.486137390136719

Token 3224: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.42897269129753113
    2. 'in' → logprob: -1.0539727210998535
    3. 'graph' → logprob: -8.928972244262695
    4. ',' → logprob: -9.428972244262695
    5. '(graph' → logprob: -10.678972244262695
    6. ' ' → logprob: -11.678972244262695
    7. '   ' → logprob: -12.178972244262695
    8. '	in' → logprob: -12.178972244262695
    9. '
' → logprob: -12.928972244262695
    10. ' graph' → logprob: -13.178972244262695

Token 3225: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -9.627176768844947e-05
    2. ' graph' → logprob: -9.250096321105957
    3. '(graph' → logprob: -16.50009536743164
    4. '	graph' → logprob: -17.00009536743164
    5. '   ' → logprob: -19.50009536743164
    6. ' ' → logprob: -20.12509536743164
    7. '_graph' → logprob: -21.00009536743164
    8. 'Graph' → logprob: -21.50009536743164
    9. '[(' → logprob: -22.00009536743164
    10. '[' → logprob: -22.00009536743164

Token 3226: '_direct' (ID: 80120)
  Prédit: '_direct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direct' → logprob: -2.1888679839321412e-05
    2. 'direct' → logprob: -11.375021934509277
    3. '[' → logprob: -11.625021934509277
    4. 'Directed' → logprob: -14.000021934509277
    5. '_DIRECT' → logprob: -14.875021934509277
    6. '[t' → logprob: -16.00002098083496
    7. '-directed' → logprob: -16.87502098083496
    8. 'Direct' → logprob: -17.12502098083496
    9. 'irected' → logprob: -17.12502098083496
    10. ' directed' → logprob: -17.37502098083496

Token 3227: 'ed' (ID: 295)
  Prédit: 'irected'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'irected' → logprob: -0.3459789454936981
    2. 'ed' → logprob: -1.9709789752960205
    3. 'ated' → logprob: -2.5959789752960205
    4. '_direct' → logprob: -2.8459789752960205
    5. 'ected' → logprob: -4.470978736877441
    6. 'direct' → logprob: -5.345978736877441
    7. 'icted' → logprob: -6.220978736877441
    8. '[' → logprob: -6.470978736877441
    9. 'Directed' → logprob: -8.470978736877441
    10. 'ted' → logprob: -9.095978736877441

Token 3228: ']:
' (ID: 22152)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[t' → logprob: -4.60414821645827e-06
    2. '[' → logprob: -13.000004768371582
    3. 'graph' → logprob: -14.250004768371582
    4. 'touch' → logprob: -14.375004768371582
    5. '[to' → logprob: -14.875004768371582
    6. '[(' → logprob: -15.000004768371582
    7. '   ' → logprob: -15.250004768371582
    8. '	t' → logprob: -17.125003814697266
    9. '[top' → logprob: -17.750003814697266
    10. '       ' → logprob: -17.875003814697266

Token 3229: '                   ' (ID: 699)
  Prédit: '[t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.5018905401229858
    2. '[' → logprob: -1.0018905401229858
    3. 'touch' → logprob: -4.501890659332275
    4. 'graph' → logprob: -4.626890659332275
    5. ':' → logprob: -5.876890659332275
    6. ':
' → logprob: -7.251890659332275
    7. '(t' → logprob: -7.876890659332275
    8. '   ' → logprob: -7.876890659332275
    9. '(st' → logprob: -8.376890182495117
    10. 't' → logprob: -8.626890182495117

Token 3230: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.18692220747470856
    2. ' graph' → logprob: -1.8119221925735474
    3. 'for' → logprob: -5.936922073364258
    4. 'w' → logprob: -7.186922073364258
    5. ' for' → logprob: -7.311922073364258
    6. '[]' → logprob: -7.561922073364258
    7. '   ' → logprob: -7.811922073364258
    8. ' w' → logprob: -7.936922073364258
    9. 'True' → logprob: -8.061922073364258
    10. '       ' → logprob: -8.311922073364258

Token 3231: '_direct' (ID: 80120)
  Prédit: '_direct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direct' → logprob: -4.47757811343763e-05
    2. '[' → logprob: -10.750044822692871
    3. 'direct' → logprob: -10.875044822692871
    4. 'Directed' → logprob: -13.250044822692871
    5. '```' → logprob: -14.000044822692871
    6. '_' → logprob: -14.375044822692871
    7. '_DIRECT' → logprob: -15.250044822692871
    8. 'irected' → logprob: -16.125043869018555
    9. 'Direct' → logprob: -16.375043869018555
    10. '_defined' → logprob: -16.500043869018555

Token 3232: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.08178254961967468
    2. 'ected' → logprob: -2.831782579421997
    3. 'irected' → logprob: -3.956782579421997
    4. 'icted' → logprob: -8.456782341003418
    5. '[' → logprob: -9.206782341003418
    6. 'ated' → logprob: -10.206782341003418
    7. '_direct' → logprob: -10.206782341003418
    8. 'ted' → logprob: -10.706782341003418
    9. '_ed' → logprob: -11.081782341003418
    10. 'ect' → logprob: -11.206782341003418

Token 3233: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.097437315271236e-05
    2. '=' → logprob: -10.12505054473877
    3. ' =' → logprob: -12.87505054473877
    4. '   ' → logprob: -13.25005054473877
    5. '```' → logprob: -13.75005054473877
    6. ' [' → logprob: -14.12505054473877
    7. '       ' → logprob: -14.12505054473877
    8. 'street' → logprob: -14.25005054473877
    9. '][' → logprob: -14.75005054473877
    10. '(st' → logprob: -15.00005054473877

Token 3234: 'street' (ID: 55690)
  Prédit: 'street'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -2.2007883671903983e-05
    2. ' street' → logprob: -11.125021934509277
    3. 'touch' → logprob: -12.250021934509277
    4. 'stre' → logprob: -14.125021934509277
    5. '[' → logprob: -14.500021934509277
    6. 'stroke' → logprob: -15.500021934509277
    7. 'w' → logprob: -15.750021934509277
    8. '   ' → logprob: -16.000022888183594
    9. '.street' → logprob: -16.125022888183594
    10. 's' → logprob: -16.125022888183594

Token 3235: '_other' (ID: 70088)
  Prédit: '_other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_other' → logprob: -0.0011709370883181691
    2. '_direct' → logprob: -6.876171112060547
    3. 'other' → logprob: -9.251171112060547
    4. 'Other' → logprob: -10.751171112060547
    5. '[' → logprob: -11.626171112060547
    6. '][' → logprob: -12.876171112060547
    7. 'direct' → logprob: -13.001171112060547
    8. ' Other' → logprob: -13.751171112060547
    9. '_only' → logprob: -14.001171112060547
    10. '-other' → logprob: -14.376171112060547

Token 3236: ']' (ID: 60)
  Prédit: '].'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.5214952230453491
    2. ']' → logprob: -1.0214952230453491
    3. ']=' → logprob: -3.2714953422546387
    4. '][' → logprob: -5.396495342254639
    5. '=' → logprob: -6.271495342254639
    6. '.remove' → logprob: -7.646495342254639
    7. ']==' → logprob: -8.14649486541748
    8. ']!=' → logprob: -8.14649486541748
    9. ' =' → logprob: -8.52149486541748
    10. '[' → logprob: -9.14649486541748

Token 3237: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.036430444568395615
    2. ' =' → logprob: -3.4114303588867188
    3. '.remove' → logprob: -6.411430358886719
    4. ']' → logprob: -7.536430358886719
    5. ']=' → logprob: -7.661430358886719
    6. 'remove' → logprob: -9.661430358886719
    7. '[:]' → logprob: -11.161430358886719
    8. '[' → logprob: -11.536430358886719
    9. '=[' → logprob: -11.911430358886719
    10. '].' → logprob: -12.161430358886719

Token 3238: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0016301940195262432
    2. '[w' → logprob: -6.5016303062438965
    3. ' [(' → logprob: -9.001629829406738
    4. '[' → logprob: -12.376629829406738
    5. '[((' → logprob: -16.001630783081055
    6. '([(' → logprob: -16.126630783081055
    7. '(w' → logprob: -16.376630783081055
    8. '[
' → logprob: -16.501630783081055
    9. ' [' → logprob: -16.876630783081055
    10. '[i' → logprob: -17.876630783081055

Token 3239: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -6.704273118884885e-07
    2. '(w' → logprob: -14.875000953674316
    3. ' w' → logprob: -15.750000953674316
    4. '[w' → logprob: -17.375
    5. '	w' → logprob: -17.75
    6. '   ' → logprob: -17.75
    7. '           ' → logprob: -18.375
    8. '                           ' → logprob: -18.5
    9. '                               ' → logprob: -18.875
    10. 'wj' → logprob: -18.875

Token 3240: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.0022557605989277363
    2. ',' → logprob: -6.502255916595459
    3. 'for' → logprob: -7.502255916595459
    4. 'd' → logprob: -8.7522554397583
    5. ' ,' → logprob: -10.6272554397583
    6. ' for' → logprob: -12.1272554397583
    7. ',w' → logprob: -12.3772554397583
    8. '!=' → logprob: -13.1272554397583
    9. 'not' → logprob: -14.0022554397583
    10. '   ' → logprob: -14.1272554397583

Token 3241: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7589060068130493
    2. 'for' → logprob: -0.7589060068130493
    3. ' for' → logprob: -2.7589058876037598
    4. '           ' → logprob: -9.633906364440918
    5. '       ' → logprob: -10.008906364440918
    6. '         ' → logprob: -10.508906364440918
    7. '               ' → logprob: -10.883906364440918
    8. '	for' → logprob: -10.883906364440918
    9. '        ' → logprob: -11.008906364440918
    10. '   ' → logprob: -11.508906364440918

Token 3242: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5759421586990356
    2. ' for' → logprob: -0.8259421586990356
    3. '	for' → logprob: -14.325942039489746
    4. '           ' → logprob: -14.950942039489746
    5. 'if' → logprob: -15.200942039489746
    6. ' ' → logprob: -15.200942039489746
    7. '         ' → logprob: -15.325942039489746
    8. '   ' → logprob: -15.450942039489746
    9. '       ' → logprob: -15.950942039489746
    10. '        ' → logprob: -16.200942993164062

Token 3243: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0018465323373675346
    2. ' w' → logprob: -6.3768463134765625
    3. '(w' → logprob: -8.876846313476562
    4. '_w' → logprob: -13.126846313476562
    5. ' (' → logprob: -14.376846313476562
    6. '[w' → logprob: -14.876846313476562
    7. '_' → logprob: -15.251846313476562
    8. '	w' → logprob: -15.501846313476562
    9. 'v' → logprob: -15.626846313476562
    10. 'graph' → logprob: -15.751846313476562

Token 3244: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.020149415358901024
    2. ',w' → logprob: -4.395149230957031
    3. 'in' → logprob: -5.520149230957031
    4. ' in' → logprob: -5.770149230957031
    5. ',' → logprob: -8.270149230957031
    6. 'd' → logprob: -9.020149230957031
    7. ',in' → logprob: -10.270149230957031
    8. 'not' → logprob: -10.770149230957031
    9. 'w' → logprob: -11.520149230957031
    10. ',node' → logprob: -11.645149230957031

Token 3245: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5759583711624146
    2. 'in' → logprob: -0.8259583711624146
    3. 'graph' → logprob: -12.200958251953125
    4. '	in' → logprob: -12.575958251953125
    5. '[in' → logprob: -12.825958251953125
    6. '[' → logprob: -13.450958251953125
    7. '_in' → logprob: -13.700958251953125
    8. ' ' → logprob: -13.950958251953125
    9. '
' → logprob: -14.075958251953125
    10. 'In' → logprob: -14.075958251953125

Token 3246: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -3.810037742368877e-05
    2. ' graph' → logprob: -10.250038146972656
    3. '(graph' → logprob: -13.000038146972656
    4. '	graph' → logprob: -15.500038146972656
    5. '[' → logprob: -17.375038146972656
    6. '_graph' → logprob: -18.750038146972656
    7. '{' → logprob: -19.000038146972656
    8. 'list' → logprob: -19.000038146972656
    9. '[(' → logprob: -19.250038146972656
    10. '
' → logprob: -19.375038146972656

Token 3247: '_direct' (ID: 80120)
  Prédit: '_direct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direct' → logprob: -0.019352994859218597
    2. '[' → logprob: -4.269352912902832
    3. 'direct' → logprob: -5.269352912902832
    4. 'Directed' → logprob: -11.019352912902832
    5. 'irected' → logprob: -12.269352912902832
    6. '   ' → logprob: -13.644352912902832
    7. ' directed' → logprob: -13.769352912902832
    8. '[s' → logprob: -14.269352912902832
    9. '-directed' → logprob: -14.519352912902832
    10. 'Direct' → logprob: -14.644352912902832

Token 3248: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.013864703476428986
    2. 'ected' → logprob: -4.388864517211914
    3. 'ated' → logprob: -7.263864517211914
    4. 'ted' → logprob: -8.513864517211914
    5. 'icted' → logprob: -8.513864517211914
    6. 'eded' → logprob: -9.388864517211914
    7. '[' → logprob: -10.138864517211914
    8. '_graph' → logprob: -10.513864517211914
    9. 'irected' → logprob: -10.763864517211914
    10. 'eted' → logprob: -10.763864517211914

Token 3249: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07066503167152405
    2. '[t' → logprob: -2.695665121078491
    3. 'if' → logprob: -7.945664882659912
    4. ' if' → logprob: -8.94566535949707
    5. 'touch' → logprob: -10.19566535949707
    6. '   ' → logprob: -10.32066535949707
    7. ']' → logprob: -10.69566535949707
    8. 't' → logprob: -10.82066535949707
    9. '[(' → logprob: -10.94566535949707
    10. '[s' → logprob: -11.32066535949707

Token 3250: 'street' (ID: 55690)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.026430802419781685
    2. 'street' → logprob: -3.65143084526062
    3. 'touch' → logprob: -10.2764310836792
    4. '{' → logprob: -10.2764310836792
    5. 'graph' → logprob: -10.4014310836792
    6. '[s' → logprob: -11.5264310836792
    7. '[t' → logprob: -12.1514310836792
    8. '[i' → logprob: -13.1514310836792
    9. '   ' → logprob: -13.5264310836792
    10. 'sign' → logprob: -13.6514310836792

Token 3251: '_other' (ID: 70088)
  Prédit: '_direct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direct' → logprob: -0.429581880569458
    2. 'direct' → logprob: -1.679581880569458
    3. '_other' → logprob: -1.929581880569458
    4. 'other' → logprob: -4.804581642150879
    5. '[' → logprob: -4.929581642150879
    6. 'irected' → logprob: -7.054581642150879
    7. '   ' → logprob: -7.804581642150879
    8. '-directed' → logprob: -9.304581642150879
    9. 'Directed' → logprob: -9.554581642150879
    10. 'Other' → logprob: -9.929581642150879

Token 3252: ']' (ID: 60)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3134467899799347
    2. 'if' → logprob: -1.3134467601776123
    3. '           ' → logprob: -9.688446998596191
    4. '       ' → logprob: -10.188446998596191
    5. '	if' → logprob: -10.188446998596191
    6. '        ' → logprob: -10.938446998596191
    7. '            ' → logprob: -12.188446998596191
    8. '          ' → logprob: -12.188446998596191
    9. '   ' → logprob: -12.563446998596191
    10. '         ' → logprob: -12.563446998596191

Token 3253: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6941535472869873
    2. ' if' → logprob: -0.6941535472869873
    3. '           ' → logprob: -8.069153785705566
    4. '               ' → logprob: -8.694153785705566
    5. '!=' → logprob: -8.819153785705566
    6. '       ' → logprob: -9.569153785705566
    7. '        ' → logprob: -9.944153785705566
    8. '                   ' → logprob: -10.069153785705566
    9. '            ' → logprob: -10.319153785705566
    10. '          ' → logprob: -10.444153785705566

Token 3254: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.005935432855039835
    2. ' w' → logprob: -5.1309356689453125
    3. '   ' → logprob: -12.255935668945312
    4. '    ' → logprob: -14.130935668945312
    5. '	w' → logprob: -14.505935668945312
    6. '       ' → logprob: -15.255935668945312
    7. '(w' → logprob: -15.505935668945312
    8. '```' → logprob: -16.630935668945312
    9. '  ' → logprob: -16.755935668945312
    10. '     ' → logprob: -17.130935668945312

Token 3255: '!=' (ID: 11408)
  Prédit: '!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.003010030835866928
    2. ' !=' → logprob: -5.878009796142578
    3. ']!=' → logprob: -9.628009796142578
    4. '()!=' → logprob: -9.878009796142578
    5. ')!=' → logprob: -10.003009796142578
    6. '!' → logprob: -10.878009796142578
    7. '!=(' → logprob: -12.003009796142578
    8. '```' → logprob: -12.003009796142578
    9. '!="' → logprob: -12.253009796142578
    10. '!==' → logprob: -13.128009796142578

Token 3256: 'touch' (ID: 47206)
  Prédit: 'touch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'touch' → logprob: -0.00038384052459150553
    2. ' touch' → logprob: -7.8753838539123535
    3. 'tou' → logprob: -13.250383377075195
    4. 't' → logprob: -14.500383377075195
    5. 'to' → logprob: -14.625383377075195
    6. '   ' → logprob: -14.625383377075195
    7. ' ' → logprob: -16.000383377075195
    8. '	t' → logprob: -16.125383377075195
    9. '_touch' → logprob: -16.625383377075195
    10. 'toc' → logprob: -17.500383377075195

Token 3257: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0037985346280038357
    2. '               ' → logprob: -5.628798484802246
    3. '           ' → logprob: -9.253798484802246
    4. ' ]' → logprob: -10.128798484802246
    5. '<|end|>' → logprob: -10.878798484802246
    6. ']
' → logprob: -11.253798484802246
    7. '                   ' → logprob: -12.003798484802246
    8. '()]' → logprob: -12.628798484802246
    9. '']' → logprob: -12.628798484802246
    10. ']+' → logprob: -12.753798484802246

Token 3258: '           ' (ID: 352)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0529042482376099
    2. '           ' → logprob: -1.3029042482376099
    3. '[' → logprob: -2.4279041290283203
    4. '<|end|>' → logprob: -2.5529041290283203
    5. '       ' → logprob: -2.8029041290283203
    6. '               ' → logprob: -3.0529041290283203
    7. ')' → logprob: -3.3029041290283203
    8. '```' → logprob: -4.55290412902832
    9. '[:]' → logprob: -4.80290412902832
    10. '.' → logprob: -5.05290412902832

Token 3259: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5472004413604736
    2. '           ' → logprob: -1.0472004413604736
    3. '       ' → logprob: -3.9222004413604736
    4. 'else' (adapté à ' else') → logprob: -4.2972002029418945
    5. '<|end|>' → logprob: -4.5472002029418945
    6. ')' → logprob: -4.6722002029418945
    7. '```' → logprob: -5.9222002029418945
    8. '[' → logprob: -5.9222002029418945
    9. '                   ' → logprob: -6.0472002029418945
    10. '.' → logprob: -6.1722002029418945

Token 3260: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.023449983447790146
    2. '{' → logprob: -4.273449897766113
    3. ':
' → logprob: -4.773449897766113
    4. '           ' → logprob: -7.898449897766113
    5. '<|end|>' → logprob: -9.523449897766113
    6. '[' → logprob: -9.648449897766113
    7. ' :' → logprob: -9.898449897766113
    8. '               ' → logprob: -10.148449897766113
    9. ' if' → logprob: -10.273449897766113
    10. ' {' → logprob: -10.523449897766113

Token 3261: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.002678152872249484
    2. '           ' → logprob: -6.502677917480469
    3. '#' → logprob: -7.252677917480469
    4. 'if' → logprob: -8.752677917480469
    5. ':' → logprob: -9.502677917480469
    6. ' if' → logprob: -9.627677917480469
    7. '                   ' → logprob: -9.877677917480469
    8. ' #' → logprob: -10.252677917480469
    9. ':
' → logprob: -10.377677917480469
    10. '```' → logprob: -10.877677917480469

Token 3262: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.5657135844230652
    2. '               ' → logprob: -0.9407135844230652
    3. 'if' → logprob: -3.44071364402771
    4. ' if' → logprob: -5.065713405609131
    5. ' #' → logprob: -5.940713405609131
    6. '           ' → logprob: -7.565713405609131
    7. '   ' → logprob: -9.315713882446289
    8. '                   ' → logprob: -10.440713882446289
    9. 'graph' → logprob: -10.815713882446289
    10. 'for' → logprob: -11.315713882446289

Token 3263: ' obt' (ID: 5564)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.46127966046333313
    2. '               ' → logprob: -1.5862796306610107
    3. 'if' → logprob: -2.0862796306610107
    4. 'touch' → logprob: -3.4612796306610107
    5. 'graph' → logprob: -6.08627986907959
    6. ' #' → logprob: -6.21127986907959
    7. 'for' → logprob: -6.46127986907959
    8. '           ' → logprob: -6.96127986907959
    9. 'c' → logprob: -7.08627986907959
    10. ' if' → logprob: -7.08627986907959

Token 3264: 'use' (ID: 1821)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.9419080018997192
    2. '_other' → logprob: -1.3169080018997192
    3. '_' → logprob: -2.1919078826904297
    4. '               ' → logprob: -2.6919078826904297
    5. 'use' → logprob: -3.8169078826904297
    6. '   ' → logprob: -3.8169078826904297
    7. 'u' → logprob: -4.19190788269043
    8. '_out' → logprob: -4.31690788269043
    9. '_else' → logprob: -4.44190788269043
    10. '       ' → logprob: -4.69190788269043

Token 3265: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023601356893777847
    2. '           ' → logprob: -3.7736012935638428
    3. ':
' → logprob: -9.273601531982422
    4. '   ' → logprob: -9.648601531982422
    5. '       ' → logprob: -10.023601531982422
    6. '                   ' → logprob: -10.273601531982422
    7. '              ' → logprob: -10.773601531982422
    8. '```' → logprob: -10.898601531982422
    9. '                ' → logprob: -11.273601531982422
    10. '{
' → logprob: -11.398601531982422

Token 3266: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009558690711855888
    2. '           ' → logprob: -5.00955867767334
    3. '#' → logprob: -6.25955867767334
    4. ':' → logprob: -8.25955867767334
    5. '```' → logprob: -8.50955867767334
    6. ':
' → logprob: -8.63455867767334
    7. 'if' → logprob: -8.75955867767334
    8. '                   ' → logprob: -10.00955867767334
    9. '   ' → logprob: -10.88455867767334
    10. ' #' → logprob: -11.13455867767334

Token 3267: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022026555612683296
    2. '#' (adapté à ' #') → logprob: -4.147026538848877
    3. '           ' → logprob: -6.022026538848877
    4. 'if' → logprob: -6.397026538848877
    5. 'graph' → logprob: -7.522026538848877
    6. ' if' → logprob: -7.772026538848877
    7. '                   ' → logprob: -8.522027015686035
    8. ' #' → logprob: -8.522027015686035
    9. '   ' → logprob: -9.022027015686035
    10. '       ' → logprob: -9.397027015686035

Token 3268: ' forbid' (ID: 164447)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.422415167093277
    2. 'if' → logprob: -1.5474151372909546
    3. '               ' → logprob: -2.172415256500244
    4. 'graph' → logprob: -4.297415256500244
    5. 'for' → logprob: -5.797415256500244
    6. 'touch' → logprob: -7.297415256500244
    7. '           ' → logprob: -8.297414779663086
    8. ' #' → logprob: -9.297414779663086
    9. ' if' → logprob: -9.672414779663086
    10. '   ' → logprob: -10.047414779663086

Token 3269: ' touch' (ID: 7381)
  Prédit: ' movement'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' movement' → logprob: -0.8995909690856934
    2. 'movement' → logprob: -1.1495909690856934
    3. 'graph' → logprob: -1.8995909690856934
    4. 'touch' → logprob: -2.2745909690856934
    5. ' graph' → logprob: -4.024590969085693
    6. ' touch' → logprob: -5.274590969085693
    7. '#' → logprob: -7.524590969085693
    8. '   ' → logprob: -9.149591445922852
    9. '           ' → logprob: -9.399591445922852
    10. 'direction' → logprob: -9.774591445922852

Token 3270: '->' (ID: 609)
  Prédit: '_direct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_direct' → logprob: -0.5285423994064331
    2. '               ' → logprob: -2.1535425186157227
    3. '_to' → logprob: -2.4035425186157227
    4. '-directed' → logprob: -2.7785425186157227
    5. 'direct' → logprob: -3.7785425186157227
    6. '           ' → logprob: -3.9035425186157227
    7. '_graph' → logprob: -4.153542518615723
    8. '[' → logprob: -4.153542518615723
    9. '[t' → logprob: -4.778542518615723
    10. ' in' → logprob: -4.903542518615723

Token 3271: 'street' (ID: 55690)
  Prédit: 'street'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -2.7729658540920354e-05
    2. ' street' → logprob: -10.625027656555176
    3. 'stre' → logprob: -12.875027656555176
    4. '(st' → logprob: -14.875027656555176
    5. 'stroke' → logprob: -15.875027656555176
    6. '```' → logprob: -16.125028610229492
    7. '   ' → logprob: -16.375028610229492
    8. '(' → logprob: -16.750028610229492
    9. 'st' → logprob: -17.125028610229492
    10. '.street' → logprob: -17.625028610229492

Token 3272: '_other' (ID: 70088)
  Prédit: '_direct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_direct' → logprob: -0.1951243132352829
    2. '               ' → logprob: -2.445124387741089
    3. '           ' → logprob: -2.570124387741089
    4. '   ' → logprob: -5.32012414932251
    5. 'direct' → logprob: -5.69512414932251
    6. '                   ' → logprob: -6.44512414932251
    7. '-directed' → logprob: -6.57012414932251
    8. 'irected' → logprob: -6.69512414932251
    9. '[' → logprob: -7.94512414932251
    10. '```' → logprob: -8.195124626159668

Token 3273: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5061163306236267
    2. '           ' → logprob: -1.0061163902282715
    3. 'if' → logprob: -4.0061163902282715
    4. 'graph' → logprob: -4.6311163902282715
    5. ' if' → logprob: -6.1311163902282715
    6. ' graph' → logprob: -7.6311163902282715
    7. '```' → logprob: -7.7561163902282715
    8. '(graph' → logprob: -9.006115913391113
    9. '   ' → logprob: -9.131115913391113
    10. '                   ' → logprob: -9.381115913391113

Token 3274: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00500983651727438
    2. ' if' → logprob: -6.380009651184082
    3. '```' → logprob: -6.630009651184082
    4. 'if' → logprob: -6.880009651184082
    5. '           ' → logprob: -7.255009651184082
    6. '                   ' → logprob: -8.880009651184082
    7. '[' → logprob: -10.380009651184082
    8. 'for' → logprob: -11.005009651184082
    9. '{
' → logprob: -11.130009651184082
    10. '   ' → logprob: -11.755009651184082

Token 3275: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' (adapté à ' graph') → logprob: -0.03093588352203369
    2. ' graph' → logprob: -4.030935764312744
    3. 'if' → logprob: -4.530935764312744
    4. ' if' → logprob: -6.655935764312744
    5. '               ' → logprob: -7.530935764312744
    6. '                   ' → logprob: -9.905936241149902
    7. '           ' → logprob: -9.905936241149902
    8. 'for' → logprob: -12.905936241149902
    9. '```' → logprob: -13.030936241149902
    10. '   ' → logprob: -13.155936241149902

Token 3276: '_direct' (ID: 80120)
  Prédit: '_direct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direct' → logprob: -1.9027791495318525e-05
    2. '[' → logprob: -11.750019073486328
    3. '[_' → logprob: -12.500019073486328
    4. 'direct' → logprob: -12.750019073486328
    5. '```' → logprob: -13.250019073486328
    6. 'Directed' → logprob: -14.250019073486328
    7. '_DIRECT' → logprob: -14.375019073486328
    8. 'Direct' → logprob: -15.250019073486328
    9. '_' → logprob: -15.250019073486328
    10. '   ' → logprob: -15.750019073486328

Token 3277: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -1.0280383548888494e-06
    2. 'irected' → logprob: -15.250000953674316
    3. '_ed' → logprob: -15.375000953674316
    4. '[' → logprob: -15.875000953674316
    5. '_direct' → logprob: -16.125001907348633
    6. 'ED' → logprob: -16.375001907348633
    7. 'ected' → logprob: -16.750001907348633
    8. 'ted' → logprob: -18.000001907348633
    9. 'e' → logprob: -18.375001907348633
    10. 'ated' → logprob: -18.625001907348633

Token 3278: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -0.0002644351334311068
    2. '[' → logprob: -8.250264167785645
    3. ' [' → logprob: -14.000264167785645
    4. '   ' → logprob: -14.500264167785645
    5. ' =' → logprob: -14.625264167785645
    6. '[to' → logprob: -14.625264167785645
    7. '=' → logprob: -14.875264167785645
    8. '       ' → logprob: -15.625264167785645
    9. '           ' → logprob: -15.750264167785645
    10. '(t' → logprob: -16.62526512145996

Token 3279: 'ouch' (ID: 4058)
  Prédit: 'ouch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouch' → logprob: -4.008129963040119e-06
    2. 'touch' → logprob: -12.750003814697266
    3. '[' → logprob: -14.125003814697266
    4. '[t' → logprob: -15.500003814697266
    5. 'o' → logprob: -17.375003814697266
    6. 'ou' → logprob: -18.000003814697266
    7. 'uch' → logprob: -18.375003814697266
    8. '{' → logprob: -18.625003814697266
    9. '```' → logprob: -19.125003814697266
    10. 'OUCH' → logprob: -19.375003814697266

Token 3280: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.014023875817656517
    2. ']=' → logprob: -4.389023780822754
    3. '=' → logprob: -6.514023780822754
    4. ' =' → logprob: -11.514023780822754
    5. '].' → logprob: -11.764023780822754
    6. ' ]' → logprob: -12.514023780822754
    7. '']' → logprob: -12.889023780822754
    8. '   ' → logprob: -12.889023780822754
    9. '           ' → logprob: -14.139023780822754
    10. '']=' → logprob: -14.389023780822754

Token 3281: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20142784714698792
    2. ' =' → logprob: -1.7014278173446655
    3. ']' → logprob: -12.201427459716797
    4. '.remove' → logprob: -12.201427459716797
    5. ']=' → logprob: -12.576427459716797
    6. '[' → logprob: -14.701427459716797
    7. '=[' → logprob: -15.076427459716797
    8. ')' → logprob: -16.701427459716797
    9. '   ' → logprob: -16.826427459716797
    10. '＝' → logprob: -16.951427459716797

Token 3282: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -5.676981345459353e-06
    2. ' [(' → logprob: -12.250005722045898
    3. '[w' → logprob: -14.125005722045898
    4. '[' → logprob: -16.5000057220459
    5. '([(' → logprob: -17.3750057220459
    6. '[((' → logprob: -19.0000057220459
    7. '[[' → logprob: -20.2500057220459
    8. '(w' → logprob: -20.8750057220459
    9. '[
' → logprob: -21.0000057220459
    10. '   ' → logprob: -21.2500057220459

Token 3283: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -1.6166903151315637e-05
    2. '(w' → logprob: -11.125016212463379
    3. ' w' → logprob: -14.000016212463379
    4. '[w' → logprob: -15.375016212463379
    5. '	w' → logprob: -16.500015258789062
    6. 'street' → logprob: -16.875015258789062
    7. ''w' → logprob: -17.250015258789062
    8. '(' → logprob: -17.375015258789062
    9. '_w' → logprob: -18.250015258789062
    10. '   ' → logprob: -18.250015258789062

Token 3284: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.0006180775817483664
    2. ',' → logprob: -8.000617980957031
    3. '!=' → logprob: -8.625617980957031
    4. 'd' → logprob: -10.000617980957031
    5. ' ,' → logprob: -10.375617980957031
    6. 'for' → logprob: -11.250617980957031
    7. '           ' → logprob: -12.875617980957031
    8. ' !=' → logprob: -13.000617980957031
    9. '==' → logprob: -14.000617980957031
    10. '   ' → logprob: -14.125617980957031

Token 3285: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4348158836364746
    2. 'for' → logprob: -1.5598158836364746
    3. ' for' → logprob: -2.0598158836364746
    4. 'w' → logprob: -4.809815883636475
    5. '!=' → logprob: -6.309815883636475
    6. '           ' → logprob: -6.434815883636475
    7. '   ' → logprob: -7.684815883636475
    8. '               ' → logprob: -7.684815883636475
    9. ' !=' → logprob: -7.809815883636475
    10. ' w' → logprob: -7.809815883636475

Token 3286: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20147649943828583
    2. ' for' → logprob: -1.7014764547348022
    3. '           ' → logprob: -10.826476097106934
    4. 'if' → logprob: -11.826476097106934
    5. '   ' → logprob: -12.201476097106934
    6. '```' → logprob: -12.326476097106934
    7. '       ' → logprob: -12.576476097106934
    8. '         ' → logprob: -12.576476097106934
    9. '!=' → logprob: -12.576476097106934
    10. '        ' → logprob: -12.951476097106934

Token 3287: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0015035520773380995
    2. ' w' → logprob: -6.5015034675598145
    3. '_w' → logprob: -14.251503944396973
    4. '(w' → logprob: -14.501503944396973
    5. '	w' → logprob: -16.626502990722656
    6. '[w' → logprob: -17.751502990722656
    7. '#w' → logprob: -20.001502990722656
    8. ' ' → logprob: -20.876502990722656
    9. '=w' → logprob: -21.001502990722656
    10. ''w' → logprob: -21.126502990722656

Token 3288: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.08911406248807907
    2. ',w' → logprob: -2.46411395072937
    3. ' ,' → logprob: -10.08911418914795
    4. ',' → logprob: -10.08911418914795
    5. 'w' → logprob: -10.08911418914795
    6. 'd' → logprob: -10.21411418914795
    7. 'in' → logprob: -11.71411418914795
    8. '(w' → logprob: -13.83911418914795
    9. '_d' → logprob: -14.21411418914795
    10. '_,' → logprob: -14.33911418914795

Token 3289: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.25194355845451355
    2. ' in' → logprob: -1.501943588256836
    3. '           ' → logprob: -12.126943588256836
    4. ' ' → logprob: -13.251943588256836
    5. '   ' → logprob: -13.626943588256836
    6. '       ' → logprob: -13.876943588256836
    7. '        ' → logprob: -14.376943588256836
    8. '         ' → logprob: -14.626943588256836
    9. '            ' → logprob: -14.751943588256836
    10. '```' → logprob: -14.751943588256836

Token 3290: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -5.88418151892256e-05
    2. ' graph' → logprob: -9.750059127807617
    3. '(graph' → logprob: -14.625059127807617
    4. '	graph' → logprob: -17.125059127807617
    5. 'touch' → logprob: -17.750059127807617
    6. '[' → logprob: -20.750059127807617
    7. '   ' → logprob: -22.000059127807617
    8. 'grid' → logprob: -22.250059127807617
    9. ' ' → logprob: -22.250059127807617
    10. 'graf' → logprob: -22.750059127807617

Token 3291: '_direct' (ID: 80120)
  Prédit: '_direct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direct' → logprob: -8.208653162000701e-05
    2. 'direct' → logprob: -10.000082015991211
    3. '[t' → logprob: -11.125082015991211
    4. 'Directed' → logprob: -11.125082015991211
    5. '-directed' → logprob: -13.000082015991211
    6. '_DIRECT' → logprob: -13.750082015991211
    7. 'irected' → logprob: -14.125082015991211
    8. '[' → logprob: -14.250082015991211
    9. '   ' → logprob: -14.250082015991211
    10. ' Directed' → logprob: -15.000082015991211

Token 3292: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.041688911616802216
    2. 'ected' → logprob: -3.416688919067383
    3. 'irected' → logprob: -5.541688919067383
    4. 'icted' → logprob: -6.041688919067383
    5. 'ted' → logprob: -7.291688919067383
    6. '_direct' → logprob: -7.416688919067383
    7. 'ated' → logprob: -8.791688919067383
    8. '_ed' → logprob: -10.041688919067383
    9. 'direct' → logprob: -10.041688919067383
    10. 'ect' → logprob: -10.166688919067383

Token 3293: '[t' (ID: 32184)
  Prédit: '[t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[t' → logprob: -3.4121114822482923e-06
    2. '   ' → logprob: -14.125003814697266
    3. '           ' → logprob: -14.375003814697266
    4. '[' → logprob: -14.625003814697266
    5. '       ' → logprob: -14.750003814697266
    6. 't' → logprob: -14.875003814697266
    7. 'if' → logprob: -15.500003814697266
    8. '```' → logprob: -16.125003814697266
    9. '	t' → logprob: -16.375003814697266
    10. ']' → logprob: -16.375003814697266

Token 3294: 'ouch' (ID: 4058)
  Prédit: 'ouch'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ouch' → logprob: -0.07135601341724396
    2. 'street' → logprob: -3.0713560581207275
    3. '[' → logprob: -4.196355819702148
    4. 'ouched' → logprob: -5.446355819702148
    5. 'touch' → logprob: -6.821355819702148
    6. '[t' → logprob: -7.321355819702148
    7. '(st' → logprob: -7.446355819702148
    8. '_other' → logprob: -9.321355819702148
    9. '[p' → logprob: -9.446355819702148
    10. 'other' → logprob: -9.821355819702148

Token 3295: ']' (ID: 60)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2017161101102829
    2. 'if' → logprob: -1.7017160654067993
    3. '           ' → logprob: -8.951716423034668
    4. '   ' → logprob: -9.701716423034668
    5. '	if' → logprob: -10.576716423034668
    6. '       ' → logprob: -10.576716423034668
    7. ']' → logprob: -10.826716423034668
    8. ' ' → logprob: -11.201716423034668
    9. '         ' → logprob: -12.326716423034668
    10. '        ' → logprob: -12.576716423034668

Token 3296: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5779925584793091
    2. 'if' → logprob: -0.8279925584793091
    3. '           ' → logprob: -6.3279924392700195
    4. '            ' → logprob: -8.82799243927002
    5. '          ' → logprob: -9.70299243927002
    6. '               ' → logprob: -10.82799243927002
    7. '        ' → logprob: -11.57799243927002
    8. '              ' → logprob: -11.82799243927002
    9. '       ' → logprob: -12.20299243927002
    10. '	if' → logprob: -12.45299243927002

Token 3297: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.16022706031799316
    2. ' w' → logprob: -1.9102270603179932
    3. '	w' → logprob: -13.160226821899414
    4. '(w' → logprob: -14.285226821899414
    5. '   ' → logprob: -15.660226821899414
    6. '    ' → logprob: -16.660226821899414
    7. '<w' → logprob: -17.160226821899414
    8. '[w' → logprob: -17.535226821899414
    9. ' ' → logprob: -17.785226821899414
    10. '>w' → logprob: -18.160226821899414

Token 3298: '!=' (ID: 11408)
  Prédit: '!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.00039504567394033074
    2. ' !=' → logprob: -7.875394821166992
    3. '()!=' → logprob: -11.875394821166992
    4. '!=(' → logprob: -12.750394821166992
    5. ']!=' → logprob: -13.125394821166992
    6. ')!=' → logprob: -14.000394821166992
    7. '!==' → logprob: -14.250394821166992
    8. '   ' → logprob: -14.750394821166992
    9. '```' → logprob: -15.250394821166992
    10. '	' → logprob: -15.375394821166992

Token 3299: 'street' (ID: 55690)
  Prédit: 'street'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'street' → logprob: -2.2007883671903983e-05
    2. ' street' → logprob: -10.750021934509277
    3. 'stre' → logprob: -14.875021934509277
    4. 'stroke' → logprob: -16.500022888183594
    5. '   ' → logprob: -17.250022888183594
    6. '.street' → logprob: -17.875022888183594
    7. 'school' → logprob: -18.375022888183594
    8. 'st' → logprob: -18.875022888183594
    9. 'storm' → logprob: -19.000022888183594
    10. '```' → logprob: -19.250022888183594

Token 3300: '_other' (ID: 70088)
  Prédit: '_other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_other' → logprob: -1.735893965815194e-05
    2. 'Other' → logprob: -11.000017166137695
    3. 'other' → logprob: -14.625017166137695
    4. ' Other' → logprob: -16.500017166137695
    5. '_OTHER' → logprob: -16.500017166137695
    6. '   ' → logprob: -17.000017166137695
    7. 'OTHER' → logprob: -17.750017166137695
    8. '_only' → logprob: -18.500017166137695
    9. '(other' → logprob: -18.750017166137695
    10. '           ' → logprob: -18.875017166137695

Token 3301: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0004154185007791966
    2. '           ' → logprob: -8.125415802001953
    3. '               ' → logprob: -9.375415802001953
    4. ']
' → logprob: -11.125415802001953
    5. ' ]' → logprob: -11.250415802001953
    6. '       ' → logprob: -12.750415802001953
    7. '<|end|>' → logprob: -13.875415802001953
    8. '`]' → logprob: -14.375415802001953
    9. '()]' → logprob: -14.875415802001953
    10. '']' → logprob: -14.875415802001953

Token 3302: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3303: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05811551213264465
    2. '<|end|>' → logprob: -3.4331154823303223
    3. '           ' → logprob: -5.558115482330322
    4. '#' (adapté à ' #') → logprob: -5.683115482330322
    5. '   ' → logprob: -5.683115482330322
    6. '[' → logprob: -6.058115482330322
    7. '        
' → logprob: -6.308115482330322
    8. 'for' → logprob: -6.433115482330322
    9. '.' → logprob: -6.683115482330322
    10. '
' → logprob: -6.683115482330322

Token 3304: ' Some' (ID: 6083)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04800375550985336
    2. '#' → logprob: -3.423003673553467
    3. 'import' → logprob: -5.173003673553467
    4. 'dist' → logprob: -5.923003673553467
    5. '<|end|>' → logprob: -6.048003673553467
    6. 'for' → logprob: -6.798003673553467
    7. 'def' → logprob: -7.298003673553467
    8. 'distance' → logprob: -7.548003673553467
    9. 'from' → logprob: -8.298004150390625
    10. 'queue' → logprob: -8.673004150390625

Token 3305: ' points' (ID: 5571)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.3758707642555237
    2. 'def' → logprob: -2.000870704650879
    3. '       ' → logprob: -2.250870704650879
    4. '
' → logprob: -3.375870704650879
    5. '   ' → logprob: -3.625870704650879
    6. 'for' → logprob: -5.625870704650879
    7. 'import' → logprob: -6.375870704650879
    8. '        
' → logprob: -6.875870704650879
    9. '           ' → logprob: -7.250870704650879
    10. ' #' → logprob: -7.500870704650879

Token 3306: ' have' (ID: 679)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3307: ' only' (ID: 1606)
  Prédit: 'degree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'degree' → logprob: -1.4004182815551758
    2. 'neighbors' → logprob: -1.9004182815551758
    3. '   ' → logprob: -2.150418281555176
    4. 'len' → logprob: -2.275418281555176
    5. 'deg' → logprob: -3.025418281555176
    6. '       ' → logprob: -3.275418281555176
    7. ')' → logprob: -3.525418281555176
    8. 'out' → logprob: -3.525418281555176
    9. '#' → logprob: -3.900418281555176
    10. 'graph' → logprob: -4.025418281555176

Token 3308: ' one' (ID: 1001)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -1.3140733242034912
    2. ' one' → logprob: -1.4390733242034912
    3. 'one' → logprob: -1.5640733242034912
    4. '   ' → logprob: -2.064073324203491
    5. ' neighbors' → logprob: -3.064073324203491
    6. ')' → logprob: -4.43907356262207
    7. 'edges' → logprob: -4.81407356262207
    8. '       ' → logprob: -4.81407356262207
    9. 'for' → logprob: -5.18907356262207
    10. 'graph' → logprob: -5.18907356262207

Token 3309: ' street' (ID: 12901)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7282351851463318
    2. 'neighbor' → logprob: -2.1032352447509766
    3. '       ' → logprob: -2.2282352447509766
    4. ' neighbor' → logprob: -2.8532352447509766
    5. '#' → logprob: -3.4782352447509766
    6. '
' → logprob: -3.8532352447509766
    7. 'adj' → logprob: -4.228235244750977
    8. ' ' → logprob: -4.353235244750977
    9. '```' → logprob: -4.353235244750977
    10. ' adjacency' → logprob: -4.353235244750977

Token 3310: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1070352792739868
    2. '   ' → logprob: -1.2320352792739868
    3. '_segments' → logprob: -1.7320352792739868
    4. '           ' → logprob: -2.4820351600646973
    5. ':' → logprob: -3.3570351600646973
    6. 'segments' → logprob: -4.107035160064697
    7. '_nodes' → logprob: -4.982035160064697
    8. ' segments' → logprob: -4.982035160064697
    9. 'segment' → logprob: -5.107035160064697
    10. '
' → logprob: -5.232035160064697

Token 3311: ' are' (ID: 553)
  Prédit: ' no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' no' → logprob: -1.3729482889175415
    2. 'no' → logprob: -1.6229482889175415
    3. '#' → logprob: -2.122948169708252
    4. 'sign' → logprob: -2.872948169708252
    5. 'two' → logprob: -3.247948169708252
    6. '           ' → logprob: -3.372948169708252
    7. '       ' → logprob: -3.497948169708252
    8. '   ' → logprob: -3.622948169708252
    9. 'none' → logprob: -3.747948169708252
    10. 'continue' → logprob: -4.247948169708252

Token 3312: ' endpoints' (ID: 76454)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -1.0550545454025269
    2. 'sign' → logprob: -2.1800546646118164
    3. '<|end|>' → logprob: -2.4300546646118164
    4. 'connected' → logprob: -2.5550546646118164
    5. 'intersection' → logprob: -2.5550546646118164
    6. ' not' → logprob: -3.4300546646118164
    7. '...' → logprob: -3.4300546646118164
    8. '       ' → logprob: -3.4300546646118164
    9. 'dead' → logprob: -3.6800546646118164
    10. ' endpoints' → logprob: -3.6800546646118164

Token 3313: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36207300424575806
    2. '<|end|>' → logprob: -1.6120729446411133
    3. '
' → logprob: -2.4870729446411133
    4. ',' → logprob: -4.862072944641113
    5. '.' → logprob: -5.862072944641113
    6. '        
' → logprob: -5.987072944641113
    7. '<|end|>' → logprob: -6.112072944641113
    8. ':
' → logprob: -6.862072944641113
    9. '#' → logprob: -6.862072944641113
    10. ' and' → logprob: -7.362072944641113

Token 3314: ' to' (ID: 316)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.2606163024902344
    2. '       ' → logprob: -1.5106163024902344
    3. 'continue' → logprob: -5.510616302490234
    4. '<|end|>' → logprob: -5.760616302490234
    5. ' continue' → logprob: -8.135616302490234
    6. '
' → logprob: -8.260616302490234
    7. '```' → logprob: -8.885616302490234
    8. 'import' → logprob: -9.010616302490234
    9. '...' → logprob: -9.135616302490234
    10. 'Continue' → logprob: -9.385616302490234

Token 3315: ' allow' (ID: 3763)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.06560792773962021
    2. '#' → logprob: -3.690608024597168
    3. 'remove' → logprob: -4.690608024597168
    4. 'be' → logprob: -5.190608024597168
    5. 'complete' → logprob: -5.190608024597168
    6. ' continue' → logprob: -5.315608024597168
    7. '<|end|>' → logprob: -5.940608024597168
    8. 'def' → logprob: -6.190608024597168
    9. 'for' → logprob: -7.065608024597168
    10. 'expl' → logprob: -7.190608024597168

Token 3316: ' movement' (ID: 12772)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30951598286628723
    2. 'continue' → logprob: -2.309515953063965
    3. 'for' → logprob: -3.059515953063965
    4. '   ' → logprob: -3.434515953063965
    5. '#' → logprob: -4.059515953063965
    6. ' for' → logprob: -4.059515953063965
    7. ' traversal' → logprob: -4.934515953063965
    8. ' continue' → logprob: -5.059515953063965
    9. '
' → logprob: -5.309515953063965
    10. 'all' → logprob: -5.309515953063965

Token 3317: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1103530079126358
    2. '<|end|>' → logprob: -2.8603529930114746
    3. ' for' → logprob: -3.3603529930114746
    4. 'for' → logprob: -5.735352993011475
    5. ',' → logprob: -6.110352993011475
    6. ' to' → logprob: -6.860352993011475
    7. '.' → logprob: -7.110352993011475
    8. ' at' → logprob: -7.110352993011475
    9. '<|end|>' → logprob: -7.110352993011475
    10. 'continue' → logprob: -7.735352993011475

Token 3318: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008649553172290325
    2. ' for' → logprob: -5.1336493492126465
    3. 'for' → logprob: -6.2586493492126465
    4. '```' → logprob: -7.6336493492126465
    5. 'continue' → logprob: -9.758649826049805
    6. ' continue' → logprob: -9.758649826049805
    7. '           ' → logprob: -10.008649826049805
    8. '<|end|>' → logprob: -10.258649826049805
    9. '
' → logprob: -10.633649826049805
    10. 'For' → logprob: -11.008649826049805

Token 3319: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012673276476562023
    2. ' for' → logprob: -5.387673377990723
    3. 'for' → logprob: -5.637673377990723
    4. '```' → logprob: -5.637673377990723
    5. '
' → logprob: -8.012673377990723
    6. '   ' → logprob: -8.887673377990723
    7. '#' (adapté à ' #') → logprob: -9.012673377990723
    8. '           ' → logprob: -9.262673377990723
    9. 'graph' → logprob: -10.637673377990723
    10. 'continue' → logprob: -10.762673377990723

Token 3320: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16624709963798523
    2. '#' → logprob: -2.6662471294403076
    3. 'from' → logprob: -3.5412471294403076
    4. 'import' → logprob: -3.6662471294403076
    5. 'dist' → logprob: -4.7912468910217285
    6. 'for' → logprob: -4.9162468910217285
    7. '
' → logprob: -5.4162468910217285
    8. 'visited' → logprob: -5.9162468910217285
    9. 'queue' → logprob: -6.0412468910217285
    10. 'def' → logprob: -6.6662468910217285

Token 3321: ' problem' (ID: 4792)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.4467892646789551
    2. '       ' → logprob: -1.321789264678955
    3. 'continue' → logprob: -2.821789264678955
    4. ' continue' → logprob: -3.821789264678955
    5. '...' → logprob: -5.571789264678955
    6. 'for' → logprob: -6.196789264678955
    7. ' for' → logprob: -6.446789264678955
    8. 'pass' → logprob: -6.696789264678955
    9. ' #' → logprob: -6.821789264678955
    10. '```' → logprob: -7.696789264678955

Token 3322: ' states' (ID: 9407)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23187895119190216
    2. ' continues' → logprob: -2.6068789958953857
    3. ':' → logprob: -2.9818789958953857
    4. '#' → logprob: -4.356878757476807
    5. '<|end|>' → logprob: -4.481878757476807
    6. '           ' → logprob: -4.856878757476807
    7. '   ' → logprob: -4.856878757476807
    8. 'continue' → logprob: -4.981878757476807
    9. ':
' → logprob: -5.231878757476807
    10. ' continue' → logprob: -5.481878757476807

Token 3323: ' cars' (ID: 13653)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.22631841897964478
    2. '<|end|>' → logprob: -2.101318359375
    3. '#' → logprob: -3.351318359375
    4. '...' → logprob: -4.101318359375
    5. '```' → logprob: -5.226318359375
    6. 'continue' → logprob: -5.726318359375
    7. 'pass' → logprob: -5.976318359375
    8. '   ' → logprob: -6.101318359375
    9. '.' → logprob: -6.101318359375
    10. ' continue' → logprob: -6.101318359375

Token 3324: ' may' (ID: 1340)
  Prédit: '_can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_can' → logprob: -0.8201007843017578
    2. ' can' → logprob: -1.4451007843017578
    3. 'can' → logprob: -2.070100784301758
    4. '[' → logprob: -2.695100784301758
    5. 'may' → logprob: -3.570100784301758
    6. ' may' → logprob: -3.820100784301758
    7. ')' → logprob: -3.945100784301758
    8. '```' → logprob: -4.570100784301758
    9. '
' → logprob: -4.820100784301758
    10. '   ' → logprob: -5.320100784301758

Token 3325: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.14873428642749786
    2. ' not' → logprob: -2.0237343311309814
    3. 'move' → logprob: -5.523734092712402
    4. ' move' → logprob: -6.398734092712402
    5. 'only' → logprob: -9.023734092712402
    6. ' only' → logprob: -9.523734092712402
    7. 'continue' → logprob: -10.023734092712402
    8. '_not' → logprob: -10.523734092712402
    9. '```' → logprob: -11.023734092712402
    10. ' continue' → logprob: -11.398734092712402

Token 3326: ' move' (ID: 5275)
  Prédit: ' move'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' move' → logprob: -0.31823089718818665
    2. 'move' → logprob: -2.0682308673858643
    3. ' continue' → logprob: -3.0682308673858643
    4. 'continue' → logprob: -3.6932308673858643
    5. '           ' → logprob: -4.443231105804443
    6. ' not' → logprob: -4.568231105804443
    7. '       ' → logprob: -4.693231105804443
    8. 'not' → logprob: -4.943231105804443
    9. ' go' → logprob: -5.068231105804443
    10. '   ' → logprob: -5.318231105804443

Token 3327: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.15949761867523193
    2. ' from' → logprob: -2.1594977378845215
    3. ' beyond' → logprob: -4.9094977378845215
    4. '[from' → logprob: -5.5344977378845215
    5. '```' → logprob: -5.6594977378845215
    6. '       ' → logprob: -6.0344977378845215
    7. ' through' → logprob: -6.0344977378845215
    8. 'tow' → logprob: -6.1594977378845215
    9. ' further' → logprob: -6.7844977378845215
    10. ' to' → logprob: -6.9094977378845215

Token 3328: ' P' (ID: 398)
  Prédit: 'acute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'acute' → logprob: -0.15527211129665375
    2. 'obt' → logprob: -3.0302720069885254
    3. ' acute' → logprob: -3.6552720069885254
    4. 'sign' → logprob: -3.7802720069885254
    5. 'open' → logprob: -4.030272006988525
    6. 'touch' → logprob: -4.780272006988525
    7. ' obt' → logprob: -4.905272006988525
    8. 'street' → logprob: -5.780272006988525
    9. '```' → logprob: -6.030272006988525
    10. 'the' → logprob: -6.905272006988525

Token 3329: ' to' (ID: 316)
  Prédit: 'oint'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'oint' → logprob: -0.20057421922683716
    2. '_to' → logprob: -2.7005741596221924
    3. '[' → logprob: -3.4505741596221924
    4. 'oints' → logprob: -3.4505741596221924
    5. '[to' → logprob: -4.8255743980407715
    6. ')' → logprob: -4.8255743980407715
    7. ']' → logprob: -5.0755743980407715
    8. 'to' → logprob: -5.0755743980407715
    9. 'ython' → logprob: -5.3255743980407715
    10. '```' → logprob: -5.4505743980407715

Token 3330: ' M' (ID: 391)
  Prédit: 'Q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Q' → logprob: -0.4108261466026306
    2. 'street' → logprob: -1.9108262062072754
    3. ' Q' → logprob: -2.7858262062072754
    4. ' street' → logprob: -3.5358262062072754
    5. 'open' → logprob: -3.5358262062072754
    6. ' ' → logprob: -4.160826206207275
    7. 'p' → logprob: -4.410826206207275
    8. 'sign' → logprob: -4.535826206207275
    9. 'q' → logprob: -5.410826206207275
    10. ' open' → logprob: -5.785826206207275

Token 3331: ' or' (ID: 503)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1447834968566895
    2. '<|end|>' → logprob: -1.5197834968566895
    3. ':' → logprob: -2.3947834968566895
    4. '.' → logprob: -2.6447834968566895
    5. ')' → logprob: -2.6447834968566895
    6. '[' → logprob: -3.5197834968566895
    7. '#' → logprob: -3.6447834968566895
    8. '   ' → logprob: -3.8947834968566895
    9. '           ' → logprob: -4.1447834968566895
    10. ']' → logprob: -4.1447834968566895

Token 3332: ' M' (ID: 391)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.9621503353118896
    2. 'L' → logprob: -2.2121503353118896
    3. 'M' → logprob: -2.4621503353118896
    4. '#' → logprob: -2.4621503353118896
    5. 'S' → logprob: -2.8371503353118896
    6. 'Q' → logprob: -3.0871503353118896
    7. 'from' → logprob: -3.0871503353118896
    8. '```' → logprob: -3.5871503353118896
    9. ' N' → logprob: -3.7121503353118896
    10. 'sign' → logprob: -3.9621503353118896

Token 3333: ' to' (ID: 316)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.053464651107788
    2. '```' → logprob: -1.553464651107788
    3. ' to' → logprob: -2.178464651107788
    4. ',' → logprob: -2.428464651107788
    5. '_to' → logprob: -3.178464651107788
    6. ']' → logprob: -3.928464651107788
    7. 'to' → logprob: -3.928464651107788
    8. 'ython' → logprob: -4.178464889526367
    9. ' or' → logprob: -4.303464889526367
    10. ')' → logprob: -4.553464889526367

Token 3334: ' P' (ID: 398)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.35503172874450684
    2. 'P' → logprob: -1.6050317287445068
    3. 'p' → logprob: -2.855031728744507
    4. 'O' → logprob: -4.230031967163086
    5. 'L' → logprob: -4.855031967163086
    6. 'Q' → logprob: -5.105031967163086
    7. 'touch' → logprob: -5.730031967163086
    8. '```' → logprob: -5.855031967163086
    9. 'S' → logprob: -6.855031967163086
    10. 'M' → logprob: -7.230031967163086

Token 3335: ' in' (ID: 306)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3336: ' map' (ID: 4014)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -1.3480150699615479
    2. 'any' → logprob: -1.9730150699615479
    3. 'the' → logprob: -1.9730150699615479
    4. 'sign' → logprob: -2.348015069961548
    5. ' graph' → logprob: -2.973015069961548
    6. 'some' → logprob: -3.348015069961548
    7. 'certain' → logprob: -3.348015069961548
    8. '```' → logprob: -3.348015069961548
    9. 'this' → logprob: -3.473015069961548
    10. 'either' → logprob: -3.848015069961548

Token 3337: ' where' (ID: 1919)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3338: ' signs' (ID: 17424)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.3866063356399536
    2. '```' → logprob: -1.5116063356399536
    3. '#' → logprob: -2.136606216430664
    4. 'graph' → logprob: -2.386606216430664
    5. 'the' → logprob: -2.636606216430664
    6. ' the' → logprob: -3.261606216430664
    7. '   ' → logprob: -3.511606216430664
    8. ' graph' → logprob: -4.011606216430664
    9. '
' → logprob: -4.136606216430664
    10. ' there' → logprob: -4.386606216430664

Token 3339: ' N' (ID: 478)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3340: ',O' (ID: 191867)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3341: ' forbid' (ID: 164447)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4685337543487549
    2. '<|end|>' → logprob: -2.218533754348755
    3. ')' → logprob: -2.593533754348755
    4. '[' → logprob: -3.218533754348755
    5. ']' → logprob: -3.593533754348755
    6. '           ' → logprob: -3.718533754348755
    7. '.' → logprob: -3.718533754348755
    8. '   ' → logprob: -3.968533754348755
    9. '#' → logprob: -4.343533515930176
    10. '```' → logprob: -5.218533515930176

Token 3342: ' passing' (ID: 21178)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3343: ' through' (ID: 1819)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3344: ' them' (ID: 1373)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9036926627159119
    2. '       ' → logprob: -1.4036927223205566
    3. '[' → logprob: -2.0286927223205566
    4. ']' → logprob: -2.9036927223205566
    5. '               ' → logprob: -3.2786927223205566
    6. ')' → logprob: -3.6536927223205566
    7. '<|end|>' → logprob: -3.9036927223205566
    8. '[
' → logprob: -4.153692722320557
    9. 'for' → logprob: -4.403692722320557
    10. '   ' → logprob: -4.903692722320557

Token 3345: ';' (ID: 26)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3346: ' this' (ID: 495)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5902802348136902
    2. 'import' → logprob: -1.465280294418335
    3. '#' → logprob: -3.090280294418335
    4. 'from' → logprob: -3.090280294418335
    5. 'queue' → logprob: -3.215280294418335
    6. 'def' → logprob: -3.340280294418335
    7. '<|end|>' → logprob: -3.340280294418335
    8. '   ' → logprob: -5.090280055999756
    9. ' queue' → logprob: -6.840280055999756
    10. '```' → logprob: -7.090280055999756

Token 3347: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3348: ' modeled' (ID: 113888)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3349: '.
' (ID: 558)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7466599941253662
    2. '<|end|>' → logprob: -0.8716599941253662
    3. '.' → logprob: -3.871659994125366
    4. ')' → logprob: -4.121660232543945
    5. '   ' → logprob: -4.371660232543945
    6. '
' → logprob: -4.746660232543945
    7. '[' → logprob: -4.996660232543945
    8. '#' → logprob: -5.371660232543945
    9. '        
' → logprob: -5.371660232543945
    10. ' for' → logprob: -5.496660232543945

Token 3350: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027111036702990532
    2. '<|end|>' → logprob: -3.902111053466797
    3. '   ' → logprob: -5.277111053466797
    4. ')' → logprob: -7.777111053466797
    5. '        
' → logprob: -9.152111053466797
    6. '           ' → logprob: -9.277111053466797
    7. ',' → logprob: -9.402111053466797
    8. ' for' → logprob: -9.402111053466797
    9. '#' → logprob: -9.402111053466797
    10. '<|end|>' → logprob: -9.527111053466797

Token 3351: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023476961068809032
    2. '<|end|>' → logprob: -6.502347469329834
    3. '           ' → logprob: -7.627347469329834
    4. ')' → logprob: -9.002347946166992
    5. 'for' → logprob: -9.627347946166992
    6. '   ' → logprob: -10.502347946166992
    7. ' for' → logprob: -10.752347946166992
    8. '[' → logprob: -11.252347946166992
    9. '<|end|>' → logprob: -11.377347946166992
    10. '#' (adapté à ' #') → logprob: -11.377347946166992

Token 3352: ' After' (ID: 6311)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0020848317071795464
    2. '           ' → logprob: -6.627084732055664
    3. '<|end|>' → logprob: -8.502084732055664
    4. 'for' → logprob: -8.752084732055664
    5. '   ' → logprob: -9.252084732055664
    6. ')' → logprob: -9.752084732055664
    7. ' for' → logprob: -9.752084732055664
    8. ',' → logprob: -10.502084732055664
    9. '        
' → logprob: -10.752084732055664
    10. '#' → logprob: -10.877084732055664

Token 3353: ' applying' (ID: 24667)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1013336181640625
    2. '       ' → logprob: -1.9763336181640625
    3. '   ' → logprob: -2.2263336181640625
    4. '#' → logprob: -2.2263336181640625
    5. 'the' → logprob: -2.2263336181640625
    6. 'import' → logprob: -3.1013336181640625
    7. '```' → logprob: -3.1013336181640625
    8. ' the' → logprob: -3.8513336181640625
    9. ' completing' → logprob: -4.4763336181640625
    10. 'main' → logprob: -4.4763336181640625

Token 3354: ' all' (ID: 722)
  Prédit: 'restr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'restr' → logprob: -0.050425853580236435
    2. 'all' → logprob: -3.8004257678985596
    3. 'app' → logprob: -3.9254257678985596
    4. 'sign' → logprob: -5.925426006317139
    5. 'this' → logprob: -7.175426006317139
    6. 'these' → logprob: -7.550426006317139
    7. 'the' → logprob: -7.800426006317139
    8. 'that' → logprob: -7.800426006317139
    9. 'processing' → logprob: -8.05042552947998
    10. 'for' → logprob: -8.05042552947998

Token 3355: ' sign' (ID: 2232)
  Prédit: 'restr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'restr' → logprob: -0.014250123873353004
    2. '#' → logprob: -5.5142502784729
    3. 'this' → logprob: -5.6392502784729
    4. 'sign' → logprob: -6.5142502784729
    5. ' restrictions' → logprob: -6.7642502784729
    6. 'restriction' → logprob: -6.7642502784729
    7. 'all' → logprob: -7.1392502784729
    8. 'mod' → logprob: -7.7642502784729
    9. 'the' → logprob: -8.139249801635742
    10. ' this' → logprob: -8.389249801635742

Token 3356: ' restrictions' (ID: 24679)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.7440112233161926
    2. '       ' → logprob: -1.8690111637115479
    3. '_direct' → logprob: -1.9940111637115479
    4. '#' → logprob: -2.869011163711548
    5. '_re' → logprob: -3.244011163711548
    6. '_constraints' → logprob: -3.244011163711548
    7. '   ' → logprob: -3.619011163711548
    8. 's' → logprob: -4.119011402130127
    9. '_edges' → logprob: -4.494011402130127
    10. '           ' → logprob: -4.494011402130127

Token 3357: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23571278154850006
    2. '<|end|>' → logprob: -1.7357127666473389
    3. 'import' → logprob: -4.235713005065918
    4. '#' → logprob: -4.735713005065918
    5. 'def' → logprob: -6.110713005065918
    6. ',' → logprob: -6.485713005065918
    7. '<|end|>' → logprob: -6.735713005065918
    8. 'for' → logprob: -6.735713005065918
    9. 'from' → logprob: -7.235713005065918
    10. ' for' → logprob: -7.735713005065918

Token 3358: ' graph' (ID: 7465)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5893070697784424
    2. 'import' → logprob: -1.3393070697784424
    3. 'dist' → logprob: -2.4643070697784424
    4. '#' → logprob: -2.5893070697784424
    5. 'def' → logprob: -4.839306831359863
    6. '   ' → logprob: -4.839306831359863
    7. ' import' → logprob: -6.089306831359863
    8. 'queue' → logprob: -6.464306831359863
    9. ' dist' → logprob: -6.714306831359863
    10. '
' → logprob: -7.214306831359863

Token 3359: '_direct' (ID: 80120)
  Prédit: '_direct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direct' → logprob: -0.37957844138145447
    2. ' =' → logprob: -2.5045783519744873
    3. '<|end|>' → logprob: -2.5045783519744873
    4. '_' → logprob: -3.5045783519744873
    5. '=' → logprob: -4.004578590393066
    6. '#' → logprob: -4.504578590393066
    7. '.setdefault' → logprob: -4.629578590393066
    8. '_remaining' → logprob: -4.879578590393066
    9. '_keys' → logprob: -5.004578590393066
    10. ' remains' → logprob: -5.129578590393066

Token 3360: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.00014847563579678535
    2. '_ed' → logprob: -8.87514877319336
    3. '_direct' → logprob: -12.25014877319336
    4. 'irected' → logprob: -13.75014877319336
    5. 'e' → logprob: -14.37514877319336
    6. '```' → logprob: -14.50014877319336
    7. 'ected' → logprob: -14.62514877319336
    8. '_' → logprob: -15.50014877319336
    9. 'eded' → logprob: -15.50014877319336
    10. '[' → logprob: -15.62514877319336

Token 3361: ' is' (ID: 382)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3362: ' ready' (ID: 6977)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.5341150164604187
    2. 'ready' → logprob: -1.0341150760650635
    3. '{' → logprob: -4.034114837646484
    4. 'complete' → logprob: -4.409114837646484
    5. '{}' → logprob: -4.409114837646484
    6. 'default' → logprob: -4.909114837646484
    7. ' ready' → logprob: -5.409114837646484
    8. ' graph' → logprob: -6.409114837646484
    9. '#' → logprob: -7.534114837646484
    10. '{
' → logprob: -7.784114837646484

Token 3363: '.

' (ID: 364)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3364: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002188925864174962
    2. 'import' → logprob: -6.6271891593933105
    3. '#' → logprob: -8.127188682556152
    4. 'dist' → logprob: -8.502188682556152
    5. '   ' → logprob: -8.627188682556152
    6. '```' → logprob: -10.002188682556152
    7. '
' → logprob: -10.127188682556152
    8. 'from' → logprob: -10.502188682556152
    9. '        
' → logprob: -10.502188682556152
    10. 'def' → logprob: -11.502188682556152

Token 3365: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012686936184763908
    2. 'import' → logprob: -5.137686729431152
    3. '```' → logprob: -6.387686729431152
    4. '#' (adapté à ' #') → logprob: -6.512686729431152
    5. '
' → logprob: -6.637686729431152
    6. 'dist' → logprob: -7.137686729431152
    7. 'from' → logprob: -7.262686729431152
    8. '   ' → logprob: -8.137686729431152
    9. 'q' → logprob: -9.262686729431152
    10. '        
' → logprob: -9.887686729431152

Token 3366: ' Start' (ID: 7972)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.404310405254364
    2. '#' → logprob: -1.5293104648590088
    3. 'dist' → logprob: -3.279310464859009
    4. 'import' → logprob: -3.529310464859009
    5. 'for' → logprob: -3.779310464859009
    6. 'queue' → logprob: -5.27931022644043
    7. 'from' → logprob: -5.40431022644043
    8. 'def' → logprob: -5.77931022644043
    9. 'd' → logprob: -6.15431022644043
    10. ' for' → logprob: -6.77931022644043

Token 3367: ' and' (ID: 326)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.2802870273590088
    2. '       ' → logprob: -1.7802870273590088
    3. 'start' → logprob: -1.9052870273590088
    4. 'visited' → logprob: -1.9052870273590088
    5. '   ' → logprob: -2.530287027359009
    6. 'queue' → logprob: -2.655287027359009
    7. 'import' → logprob: -2.780287027359009
    8. 'from' → logprob: -3.780287027359009
    9. '#' → logprob: -4.65528678894043
    10. 'q' → logprob: -5.90528678894043

Token 3368: ' Goal' (ID: 67160)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.012296659871935844
    2. ' goal' → logprob: -5.137296676635742
    3. 'end' → logprob: -5.262296676635742
    4. ' end' → logprob: -7.762296676635742
    5. '_goal' → logprob: -7.887296676635742
    6. 'target' → logprob: -8.137296676635742
    7. 'finish' → logprob: -11.387296676635742
    8. '
' → logprob: -11.512296676635742
    9. '#' → logprob: -11.637296676635742
    10. 'Goal' → logprob: -11.887296676635742

Token 3369: ' points' (ID: 5571)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17268648743629456
    2. 'start' → logprob: -1.9226864576339722
    3. '   ' → logprob: -4.672686576843262
    4. ' start' → logprob: -6.797686576843262
    5. '```' → logprob: -7.547686576843262
    6. 'if' → logprob: -8.172686576843262
    7. 'src' → logprob: -8.797686576843262
    8. '
' → logprob: -8.922686576843262
    9. '(start' → logprob: -9.047686576843262
    10. 's' → logprob: -9.047686576843262

Token 3370: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011962656863033772
    2. '
' → logprob: -4.761962890625
    3. ' =' → logprob: -7.636962890625
    4. '   ' → logprob: -7.761962890625
    5. '        
' → logprob: -7.761962890625
    6. ',' → logprob: -7.886962890625
    7. '#' → logprob: -8.136962890625
    8. 'start' → logprob: -8.511962890625
    9. ' if' → logprob: -8.636962890625
    10. 'points' → logprob: -9.011962890625

Token 3371: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004137053620070219
    2. 'start' → logprob: -6.12913703918457
    3. '   ' → logprob: -7.37913703918457
    4. '
' → logprob: -7.75413703918457
    5. '```' → logprob: -8.37913703918457
    6. 'if' → logprob: -8.75413703918457
    7. ' start' → logprob: -9.12913703918457
    8. ' if' → logprob: -9.25413703918457
    9. '#' → logprob: -9.50413703918457
    10. 'dist' → logprob: -9.87913703918457

Token 3372: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' (adapté à ' start') → logprob: -0.6895295977592468
    2. '       ' → logprob: -1.0645296573638916
    3. 'if' → logprob: -2.6895296573638916
    4. 'visited' → logprob: -3.8145296573638916
    5. '   ' → logprob: -3.9395296573638916
    6. 'dist' → logprob: -4.0645294189453125
    7. ' start' → logprob: -4.8145294189453125
    8. ' if' → logprob: -4.9395294189453125
    9. '#' → logprob: -5.8145294189453125
    10. 'source' → logprob: -7.0645294189453125

Token 3373: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3259079158306122
    2. '=' → logprob: -1.3259079456329346
    3. ',' → logprob: -5.0759077072143555
    4. ')' → logprob: -6.0759077072143555
    5. '_point' → logprob: -6.5759077072143555
    6. '_points' → logprob: -6.7009077072143555
    7. '_' → logprob: -7.8259077072143555
    8. '_p' → logprob: -8.075907707214355
    9. '_pos' → logprob: -9.075907707214355
    10. '_pts' → logprob: -9.575907707214355

Token 3374: ' (' (ID: 350)
  Prédit: '(xs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(xs' → logprob: -0.007048417814075947
    2. '(x' → logprob: -5.007048606872559
    3. ' (' → logprob: -8.132048606872559
    4. '   ' → logprob: -10.257048606872559
    5. '(sys' → logprob: -13.382048606872559
    6. '  ' → logprob: -14.632048606872559
    7. '       ' → logprob: -14.757048606872559
    8. '(xx' → logprob: -14.882048606872559
    9. ' ' → logprob: -15.382048606872559
    10. '(' → logprob: -15.632048606872559

Token 3375: 'xs' (ID: 33335)
  Prédit: 'xs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xs' → logprob: -8.816591434879228e-05
    2. '(xs' → logprob: -9.37508773803711
    3. ' xs' → logprob: -12.75008773803711
    4. '   ' → logprob: -15.50008773803711
    5. '(' → logprob: -16.50008773803711
    6. 'x' → logprob: -17.00008773803711
    7. '(x' → logprob: -18.12508773803711
    8. '_x' → logprob: -18.25008773803711
    9. '  ' → logprob: -18.25008773803711
    10. ' ' → logprob: -18.50008773803711

Token 3376: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005252729752101004
    2. ' ,' → logprob: -7.62552547454834
    3. ',y' → logprob: -10.50052547454834
    4. ',
' → logprob: -11.62552547454834
    5. '‌,' → logprob: -15.25052547454834
    6. ' ,
' → logprob: -16.125524520874023
    7. '<|end|>' → logprob: -16.375524520874023
    8. ',)' → logprob: -16.500524520874023
    9. ',\
' → logprob: -16.750524520874023
    10. ',

' → logprob: -16.875524520874023

Token 3377: 'ys' (ID: 1371)
  Prédit: 'ys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ys' → logprob: -0.0007100477814674377
    2. ' ys' → logprob: -7.2507100105285645
    3. 'ysi' → logprob: -17.750709533691406
    4. ' ' → logprob: -18.000709533691406
    5. '   ' → logprob: -18.750709533691406
    6. 'yses' → logprob: -19.875709533691406
    7. 'ysy' → logprob: -19.875709533691406
    8. '    ' → logprob: -20.750709533691406
    9. '
' → logprob: -20.875709533691406
    10. '  ' → logprob: -21.000709533691406

Token 3378: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018354443833231926
    2. ')
' → logprob: -4.018354415893555
    3. ',' → logprob: -9.018354415893555
    4. '       ' → logprob: -10.393354415893555
    5. ',)' → logprob: -10.768354415893555
    6. ')
' → logprob: -11.768354415893555
    7. '   ' → logprob: -12.018354415893555
    8. ' )' → logprob: -12.268354415893555
    9. ',)
' → logprob: -13.143354415893555
    10. '<|end|>' → logprob: -13.143354415893555

Token 3379: '       ' (ID: 309)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.024477124214172363
    2. ' goal' → logprob: -4.399477005004883
    3. '       ' → logprob: -4.649477005004883
    4. 'if' → logprob: -7.274477005004883
    5. '   ' → logprob: -7.274477005004883
    6. ' if' → logprob: -8.024477005004883
    7. '
' → logprob: -8.024477005004883
    8. 'end' → logprob: -9.524477005004883
    9. '(goal' → logprob: -9.524477005004883
    10. '_goal' → logprob: -10.149477005004883

Token 3380: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' (adapté à ' goal') → logprob: -8.2994620242971e-06
    2. ' goal' → logprob: -12.250008583068848
    3. 'end' → logprob: -13.000008583068848
    4. 'if' → logprob: -14.500008583068848
    5. 'go' → logprob: -15.125008583068848
    6. 'target' → logprob: -16.37500762939453
    7. '   ' → logprob: -16.87500762939453
    8. '#' → logprob: -17.12500762939453
    9. '       ' → logprob: -17.12500762939453
    10. 'start' → logprob: -17.25000762939453

Token 3381: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5763217806816101
    2. '=' → logprob: -0.8263217806816101
    3. '=
' → logprob: -8.951321601867676
    4. ' =
' → logprob: -9.076321601867676
    5. ')' → logprob: -9.826321601867676
    6. '=(' → logprob: -10.576321601867676
    7. ',' → logprob: -10.576321601867676
    8. ' =(' → logprob: -11.951321601867676
    9. ' ' → logprob: -12.076321601867676
    10. '<|end|>' → logprob: -12.576321601867676

Token 3382: ' (' (ID: 350)
  Prédit: '(x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.023340167477726936
    2. ' (' → logprob: -3.7733402252197266
    3. '(' → logprob: -9.273340225219727
    4. 'x' → logprob: -14.398340225219727
    5. '   ' → logprob: -16.398340225219727
    6. ' x' → logprob: -16.523340225219727
    7. ' ' → logprob: -18.148340225219727
    8. '`' → logprob: -18.523340225219727
    9. '(xs' → logprob: -18.773340225219727
    10. ' `(' → logprob: -19.398340225219727

Token 3383: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.469590491382405e-05
    2. '(x' → logprob: -9.62507438659668
    3. ' x' → logprob: -11.75007438659668
    4. ')x' → logprob: -15.25007438659668
    5. ' (' → logprob: -15.62507438659668
    6. '(' → logprob: -16.50007438659668
    7. '   ' → logprob: -17.00007438659668
    8. '_x' → logprob: -17.00007438659668
    9. '(
' → logprob: -17.62507438659668
    10. ''x' → logprob: -17.62507438659668

Token 3384: 'g' (ID: 70)
  Prédit: 'g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'g' → logprob: -1.6240566083070007e-06
    2. '_g' → logprob: -13.375001907348633
    3. ',g' → logprob: -18.625001907348633
    4. ' g' → logprob: -19.000001907348633
    5. ',' → logprob: -19.375001907348633
    6. '	g' → logprob: -20.250001907348633
    7. '```' → logprob: -20.250001907348633
    8. ''g' → logprob: -20.625001907348633
    9. '``' → logprob: -21.375001907348633
    10. 'г' → logprob: -21.625001907348633

Token 3385: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005295307841151953
    2. ',y' → logprob: -5.255295276641846
    3. ',g' → logprob: -10.755295753479004
    4. ',Y' → logprob: -11.255295753479004
    5. ',
' → logprob: -11.755295753479004
    6. ',q' → logprob: -12.005295753479004
    7. ',x' → logprob: -12.255295753479004
    8. ' ,' → logprob: -12.630295753479004
    9. ',w' → logprob: -13.755295753479004
    10. ',j' → logprob: -14.255295753479004

Token 3386: 'yg' (ID: 8408)
  Prédit: 'yg'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yg' → logprob: -9.13388703338569e-06
    2. ' yg' → logprob: -11.625009536743164
    3. 'x' → logprob: -15.875009536743164
    4. '
' → logprob: -17.375009536743164
    5. 'ysg' → logprob: -17.375009536743164
    6. '(' → logprob: -18.125009536743164
    7. 'ys' → logprob: -18.875009536743164
    8. '   ' → logprob: -19.125009536743164
    9. '_' → logprob: -19.875009536743164
    10. 'ygon' → logprob: -20.000009536743164

Token 3387: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0028127210680395365
    2. ')
' → logprob: -5.87781286239624
    3. '       ' → logprob: -12.377812385559082
    4. ')
' → logprob: -13.252812385559082
    5. ')

' → logprob: -14.252812385559082
    6. ' )' → logprob: -14.877812385559082
    7. '   ' → logprob: -15.002812385559082
    8. ')return' → logprob: -16.3778133392334
    9. '))' → logprob: -16.6278133392334
    10. '),' → logprob: -16.7528133392334

Token 3388: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.020599929615855217
    2. '
' → logprob: -4.395599842071533
    3. 'if' → logprob: -5.895599842071533
    4. '```' → logprob: -6.020599842071533
    5. ' if' → logprob: -7.145599842071533
    6. '   ' → logprob: -7.270599842071533
    7. '#' → logprob: -7.645599842071533
    8. 'import' → logprob: -7.770599842071533
    9. '        
' → logprob: -8.145600318908691
    10. 'from' → logprob: -9.895600318908691

Token 3389: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.026035750284790993
    2. 'if' → logprob: -4.276035785675049
    3. '
' → logprob: -5.151035785675049
    4. '        
' → logprob: -6.026035785675049
    5. '#' (adapté à ' #') → logprob: -6.651035785675049
    6. ' if' → logprob: -6.776035785675049
    7. '```' → logprob: -7.776035785675049
    8. '   ' → logprob: -7.901035785675049
    9. 'graph' → logprob: -8.90103530883789
    10. '    
' → logprob: -10.02603530883789

Token 3390: ' If' (ID: 1843)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10088648647069931
    2. 'import' → logprob: -3.350886583328247
    3. 'dist' → logprob: -3.475886583328247
    4. '#' → logprob: -3.725886583328247
    5. '       ' → logprob: -5.850886344909668
    6. 'visited' → logprob: -6.725886344909668
    7. 'def' → logprob: -7.475886344909668
    8. '```' → logprob: -8.225886344909668
    9. '   ' → logprob: -8.600886344909668
    10. 'points' → logprob: -8.850886344909668

Token 3391: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.08896967768669128
    2. ' start' → logprob: -2.4639697074890137
    3. 'goal' → logprob: -11.463969230651855
    4. '(start' → logprob: -11.963969230651855
    5. ' not' → logprob: -12.338969230651855
    6. 'not' → logprob: -12.338969230651855
    7. ' goal' → logprob: -13.338969230651855
    8. '   ' → logprob: -13.838969230651855
    9. ' ' → logprob: -14.463969230651855
    10. '(' → logprob: -14.963969230651855

Token 3392: ' or' (ID: 503)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.00962611474096775
    2. 'not' → logprob: -4.7596259117126465
    3. '==' → logprob: -7.5096259117126465
    4. ' ==' → logprob: -8.259626388549805
    5. ' in' → logprob: -8.759626388549805
    6. ')' → logprob: -10.634626388549805
    7. '!=' → logprob: -11.759626388549805
    8. '
' → logprob: -12.884626388549805
    9. ' !=' → logprob: -12.884626388549805
    10. 'in' → logprob: -13.134626388549805

Token 3393: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.12747269868850708
    2. ' goal' → logprob: -2.1274726390838623
    3. ' not' → logprob: -8.252472877502441
    4. 'start' → logprob: -8.627472877502441
    5. 'not' → logprob: -9.752472877502441
    6. ' start' → logprob: -10.377472877502441
    7. '(goal' → logprob: -11.252472877502441
    8. '_goal' → logprob: -13.877472877502441
    9. ' ' → logprob: -14.502472877502441
    10. '   ' → logprob: -15.002472877502441

Token 3394: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.03386121988296509
    2. 'not' → logprob: -3.4088611602783203
    3. ')' → logprob: -8.90886116027832
    4. ' in' → logprob: -10.53386116027832
    5. '==' → logprob: -10.78386116027832
    6. '
' → logprob: -11.28386116027832
    7. ' ==' → logprob: -12.28386116027832
    8. ' no' → logprob: -12.65886116027832
    9. '	not' → logprob: -13.03386116027832
    10. 'in' → logprob: -13.15886116027832

Token 3395: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5252826809883118
    2. 'in' → logprob: -0.9002826809883118
    3. ' not' → logprob: -6.275282859802246
    4. 'not' → logprob: -8.400282859802246
    5. '_in' → logprob: -10.900282859802246
    6. ')' → logprob: -11.025282859802246
    7. '
' → logprob: -12.275282859802246
    8. ' (' → logprob: -13.025282859802246
    9. ' ' → logprob: -13.400282859802246
    10. '	in' → logprob: -13.900282859802246

Token 3396: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.05621306970715523
    2. 'graph' → logprob: -3.056213140487671
    3. ' points' → logprob: -4.931212902069092
    4. ' graph' → logprob: -8.05621337890625
    5. 'point' → logprob: -9.93121337890625
    6. '(points' → logprob: -12.55621337890625
    7. 'se' → logprob: -13.18121337890625
    8. 'intersection' → logprob: -13.18121337890625
    9. 'graphs' → logprob: -13.43121337890625
    10. '	points' → logprob: -14.05621337890625

Token 3397: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7010267376899719
    2. ':' → logprob: -1.2010266780853271
    3. ':
' → logprob: -1.8260266780853271
    4. 'and' → logprob: -4.076026916503906
    5. ' or' → logprob: -4.076026916503906
    6. ',' → logprob: -5.826026916503906
    7. '       ' → logprob: -6.076026916503906
    8. '           ' → logprob: -6.951026916503906
    9. '        ' → logprob: -7.326026916503906
    10. ')' → logprob: -8.701026916503906

Token 3398: ' not' (ID: 625)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.360561341047287
    2. ' start' → logprob: -1.8605613708496094
    3. ' not' → logprob: -2.1105613708496094
    4. 'not' → logprob: -4.485561370849609
    5. '(start' → logprob: -4.610561370849609
    6. ' (' → logprob: -6.235561370849609
    7. '(' → logprob: -7.735561370849609
    8. '   ' → logprob: -7.860561370849609
    9. '(not' → logprob: -8.11056137084961
    10. ' ' → logprob: -8.23556137084961

Token 3399: ' on' (ID: 402)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5891017317771912
    2. 'in' → logprob: -0.9641017317771912
    3. ' (' → logprob: -3.964101791381836
    4. ' graph' → logprob: -4.714101791381836
    5. '(graph' → logprob: -4.839101791381836
    6. 'graph' → logprob: -5.089101791381836
    7. '(points' → logprob: -5.214101791381836
    8. '((' → logprob: -5.589101791381836
    9. '(se' → logprob: -6.214101791381836
    10. ' ((' → logprob: -6.339101791381836

Token 3400: ' street' (ID: 12901)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.30683866143226624
    2. ' any' → logprob: -2.8068387508392334
    3. ' graph' → logprob: -3.0568387508392334
    4. 'graph' → logprob: -3.4318387508392334
    5. ' a' → logprob: -3.8068387508392334
    6. 'segments' → logprob: -4.306838512420654
    7. 'a' → logprob: -4.431838512420654
    8. 'the' → logprob: -4.431838512420654
    9. ' the' → logprob: -4.556838512420654
    10. 'any' → logprob: -5.056838512420654

Token 3401: '
' (ID: 198)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3326489329338074
    2. ' or' → logprob: -2.082648992538452
    3. ':' → logprob: -2.207648992538452
    4. '       ' → logprob: -3.957648992538452
    5. '_segments' → logprob: -4.582648754119873
    6. '   ' → logprob: -5.332648754119873
    7. '_points' → logprob: -5.957648754119873
    8. ' and' → logprob: -6.207648754119873
    9. ',' → logprob: -6.457648754119873
    10. ' if' → logprob: -6.707648754119873

Token 3402: '       ' (ID: 309)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.1827061176300049
    2. '       ' → logprob: -1.4327061176300049
    3. ':' → logprob: -1.5577061176300049
    4. ' or' → logprob: -1.8077061176300049
    5. ' and' → logprob: -3.182706117630005
    6. ',' → logprob: -4.182705879211426
    7. '   ' → logprob: -4.432705879211426
    8. ' =' → logprob: -6.057705879211426
    9. ' if' → logprob: -6.557705879211426
    10. '           ' → logprob: -6.682705879211426

Token 3403: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14185020327568054
    2. ':' → logprob: -2.641850233078003
    3. ':
' → logprob: -3.391850233078003
    4. ' if' → logprob: -4.516849994659424
    5. ' or' → logprob: -5.641849994659424
    6. ',' → logprob: -5.891849994659424
    7. ' and' → logprob: -5.891849994659424
    8. 'if' (adapté à ' if') → logprob: -6.391849994659424
    9. '           ' → logprob: -6.641849994659424
    10. ' =' → logprob: -6.766849994659424

Token 3404: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.02333725430071354
    2. ' start' → logprob: -3.7733373641967773
    3. '(start' → logprob: -10.023337364196777
    4. 'not' → logprob: -10.398337364196777
    5. '   ' → logprob: -11.898337364196777
    6. ' not' → logprob: -11.898337364196777
    7. ' (' → logprob: -13.523337364196777
    8. '       ' → logprob: -13.648337364196777
    9. '(' → logprob: -14.898337364196777
    10. ' ' → logprob: -15.898337364196777

Token 3405: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0032318984158337116
    2. 'not' → logprob: -5.753232002258301
    3. ' in' → logprob: -10.3782320022583
    4. ')' → logprob: -10.8782320022583
    5. '	not' → logprob: -13.1282320022583
    6. ' )' → logprob: -14.0032320022583
    7. ' ' → logprob: -14.7532320022583
    8. ' no' → logprob: -14.8782320022583
    9. 'in' → logprob: -16.003231048583984
    10. '[' → logprob: -16.128231048583984

Token 3406: ' in' (ID: 306)
  Prédit: '(points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -0.053660791367292404
    2. ' points' → logprob: -3.4286608695983887
    3. 'points' → logprob: -4.678660869598389
    4. ' in' → logprob: -5.678660869598389
    5. '(graph' → logprob: -5.678660869598389
    6. ' (' → logprob: -6.678660869598389
    7. '(' → logprob: -6.928660869598389
    8. ' graph' → logprob: -7.553660869598389
    9. 'graph' → logprob: -7.928660869598389
    10. 'in' → logprob: -9.05366039276123

Token 3407: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.043889135122299194
    2. 'graph' → logprob: -3.918889045715332
    3. 'street' → logprob: -4.043889045715332
    4. 'intersection' → logprob: -5.793889045715332
    5. 'point' → logprob: -6.168889045715332
    6. ' points' → logprob: -8.418889045715332
    7. 'stre' → logprob: -9.418889045715332
    8. 'inter' → logprob: -10.668889045715332
    9. 'set' → logprob: -10.918889045715332
    10. ' street' → logprob: -11.168889045715332

Token 3408: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.025197744369506836
    2. ':' → logprob: -4.150197982788086
    3. '           ' → logprob: -5.025197982788086
    4. ':
' → logprob: -6.775197982788086
    5. 'or' → logprob: -6.900197982788086
    6. '	or' → logprob: -9.025197982788086
    7. '       ' → logprob: -9.150197982788086
    8. '               ' → logprob: -10.275197982788086
    9. ':return' → logprob: -10.275197982788086
    10. ' and' → logprob: -10.275197982788086

Token 3409: ' goal' (ID: 8583)
  Prédit: 'goal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -0.1606561541557312
    2. 'start' → logprob: -1.910656213760376
    3. ' goal' → logprob: -7.910655975341797
    4. ' start' → logprob: -10.410655975341797
    5. 'graph' → logprob: -10.785655975341797
    6. '(goal' → logprob: -11.535655975341797
    7. 'not' → logprob: -12.910655975341797
    8. '   ' → logprob: -14.285655975341797
    9. '       ' → logprob: -14.660655975341797
    10. 'Goal' → logprob: -15.910655975341797

Token 3410: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.023258639499545097
    2. 'not' → logprob: -3.773258686065674
    3. ')' → logprob: -11.648258209228516
    4. '	not' → logprob: -13.398258209228516
    5. '!=' → logprob: -14.273258209228516
    6. ' in' → logprob: -14.398258209228516
    7. '_not' → logprob: -14.523258209228516
    8. ' !=' → logprob: -14.648258209228516
    9. '<|end|>' → logprob: -16.398258209228516
    10. 'in' → logprob: -16.523258209228516

Token 3411: ' in' (ID: 306)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.07924633473157883
    2. 'not' → logprob: -2.9542462825775146
    3. ' in' → logprob: -3.8292462825775146
    4. 'in' → logprob: -6.079246520996094
    5. ')' → logprob: -10.579246520996094
    6. '_not' → logprob: -11.829246520996094
    7. '	not' → logprob: -12.454246520996094
    8. '   ' → logprob: -12.954246520996094
    9. '(not' → logprob: -12.954246520996094
    10. '```' → logprob: -13.329246520996094

Token 3412: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.45067745447158813
    2. 'street' → logprob: -1.3256773948669434
    3. ' points' → logprob: -2.7006773948669434
    4. ' street' → logprob: -3.5756773948669434
    5. 'graph' → logprob: -6.700677394866943
    6. 'point' → logprob: -7.825677394866943
    7. 'stre' → logprob: -8.575677871704102
    8. ' graph' → logprob: -9.825677871704102
    9. 'intersection' → logprob: -10.200677871704102
    10. '   ' → logprob: -10.450677871704102

Token 3413: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.671888530254364
    2. ':' → logprob: -1.1718885898590088
    3. '           ' → logprob: -1.9218885898590088
    4. ' or' → logprob: -3.421888589859009
    5. ':return' → logprob: -8.42188835144043
    6. '               ' → logprob: -9.29688835144043
    7. '       ' → logprob: -9.29688835144043
    8. '          ' → logprob: -11.04688835144043
    9. ' continue' → logprob: -11.42188835144043
    10. ':

' → logprob: -11.67188835144043

Token 3414: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011782010551542044
    2. ' or' → logprob: -7.37617826461792
    3. ':' → logprob: -8.626177787780762
    4. ' continue' → logprob: -9.001177787780762
    5. '   ' → logprob: -9.751177787780762
    6. '               ' → logprob: -10.001177787780762
    7. ':
' → logprob: -10.126177787780762
    8. '       ' → logprob: -10.251177787780762
    9. '```' → logprob: -10.376177787780762
    10. 'continue' → logprob: -11.126177787780762

Token 3415: ' print' (ID: 2123)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05874800682067871
    2. 'print' (adapté à ' print') → logprob: -3.1837480068206787
    3. 'continue' → logprob: -4.433748245239258
    4. '   ' → logprob: -6.933748245239258
    5. ' print' → logprob: -7.183748245239258
    6. ' continue' → logprob: -7.308748245239258
    7. '```' → logprob: -7.433748245239258
    8. '       ' → logprob: -7.933748245239258
    9. 'return' → logprob: -8.433748245239258
    10. '               ' → logprob: -8.933748245239258

Token 3416: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.9782764911651611
    2. '('' → logprob: -1.2282764911651611
    3. '(' → logprob: -1.6032764911651611
    4. '()' → logprob: -2.353276491165161
    5. '("' → logprob: -3.478276491165161
    6. '-' → logprob: -6.978276252746582
    7. '(None' → logprob: -7.103276252746582
    8. '('-' → logprob: -7.228276252746582
    9. '("-' → logprob: -7.478276252746582
    10. '()
' → logprob: -7.603276252746582

Token 3417: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '2' → logprob: -14.625000953674316
    3. ' ' → logprob: -15.250000953674316
    4. 'inf' → logprob: -15.750000953674316
    5. '99' → logprob: -17.750001907348633
    6. '9' → logprob: -17.875001907348633
    7. 'float' → logprob: -18.125001907348633
    8. 'INF' → logprob: -18.250001907348633
    9. '11' → logprob: -18.500001907348633
    10. '69' → logprob: -18.750001907348633

Token 3418: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024837462697178125
    2. ')
' → logprob: -6.00248384475708
    3. '       ' → logprob: -12.252483367919922
    4. ')return' → logprob: -13.752483367919922
    5. ')
' → logprob: -14.127483367919922
    6. ')`' → logprob: -14.877483367919922
    7. '))' → logprob: -15.627483367919922
    8. ')`
' → logprob: -15.752483367919922
    9. ')')
' → logprob: -16.127483367919922
    10. '')' → logprob: -16.127483367919922

Token 3419: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015905672684311867
    2. '       ' → logprob: -4.265905857086182
    3. '		' → logprob: -6.640905857086182
    4. 'continue' → logprob: -8.765905380249023
    5. '	' → logprob: -9.140905380249023
    6. '	       ' → logprob: -9.640905380249023
    7. '	continue' → logprob: -10.515905380249023
    8. '               ' → logprob: -10.765905380249023
    9. ' continue' → logprob: -10.765905380249023
    10. '   ' → logprob: -12.015905380249023

Token 3420: ' print' (ID: 2123)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015887735644355416
    2. '       ' → logprob: -7.001588821411133
    3. 'continue' → logprob: -7.376588821411133
    4. ' continue' → logprob: -10.876588821411133
    5. '		' → logprob: -11.251588821411133
    6. '
' → logprob: -11.501588821411133
    7. '               ' → logprob: -12.751588821411133
    8. '	continue' → logprob: -13.001588821411133
    9. '   ' → logprob: -14.126588821411133
    10. '	       ' → logprob: -14.501588821411133

Token 3421: '(' (ID: 7)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0006317823426797986
    2. '()
' → logprob: -7.375631809234619
    3. '("")' → logprob: -12.875631332397461
    4. '()\' → logprob: -13.875631332397461
    5. '(' → logprob: -14.500631332397461
    6. '()

' → logprob: -14.625631332397461
    7. '())' → logprob: -14.625631332397461
    8. ' ()' → logprob: -16.00063133239746
    9. '('' → logprob: -16.75063133239746
    10. '()
' → logprob: -17.00063133239746

Token 3422: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.036835771054029465
    2. ''' → logprob: -3.5368356704711914
    3. '"' → logprob: -5.161835670471191
    4. '''' → logprob: -7.786835670471191
    5. '0' → logprob: -8.036835670471191
    6. '1' → logprob: -8.536835670471191
    7. '')' → logprob: -9.161835670471191
    8. '   ' → logprob: -9.661835670471191
    9. ''\' → logprob: -9.786835670471191
    10. '""' → logprob: -10.036835670471191

Token 3423: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.08599350601434708
    2. ')' → logprob: -2.585993528366089
    3. '           ' → logprob: -5.21099328994751
    4. '       ' → logprob: -6.46099328994751
    5. ')
' → logprob: -10.085993766784668
    6. ')return' → logprob: -12.335993766784668
    7. ')`
' → logprob: -12.710993766784668
    8. '   ' → logprob: -12.835993766784668
    9. ' )
' → logprob: -13.835993766784668
    10. '               ' → logprob: -13.835993766784668

Token 3424: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14475905895233154
    2. '       ' → logprob: -2.019759178161621
    3. '
' → logprob: -6.894759178161621
    4. 'continue' → logprob: -7.019759178161621
    5. '```' → logprob: -9.769759178161621
    6. ' continue' → logprob: -10.644759178161621
    7. '               ' → logprob: -10.769759178161621
    8. '   ' → logprob: -10.894759178161621
    9. '
' → logprob: -11.019759178161621
    10. '		' → logprob: -11.144759178161621

Token 3425: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02022698149085045
    2. '       ' → logprob: -4.395226955413818
    3. 'continue' (adapté à ' continue') → logprob: -4.895226955413818
    4. ' continue' → logprob: -9.270227432250977
    5. '	continue' → logprob: -10.270227432250977
    6. '		' → logprob: -10.395227432250977
    7. '   ' → logprob: -10.645227432250977
    8. '
' → logprob: -12.020227432250977
    9. '               ' → logprob: -12.270227432250977
    10. ' ' → logprob: -12.895227432250977

Token 3426: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006019687745720148
    2. '
' → logprob: -6.006019592285156
    3. 'import' → logprob: -6.506019592285156
    4. '        
' → logprob: -6.756019592285156
    5. '```' → logprob: -7.756019592285156
    6. '<|end|>' → logprob: -8.381019592285156
    7. '   ' → logprob: -9.756019592285156
    8. '    
' → logprob: -10.131019592285156
    9. '#' → logprob: -10.881019592285156
    10. '<|end|>' → logprob: -11.256019592285156

Token 3427: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04926029592752457
    2. 'dist' → logprob: -3.674260377883911
    3. 'import' → logprob: -4.174260139465332
    4. '```' → logprob: -5.424260139465332
    5. '
' → logprob: -6.299260139465332
    6. 'd' → logprob: -8.174260139465332
    7. '#' → logprob: -8.174260139465332
    8. '        
' → logprob: -8.799260139465332
    9. 'distance' → logprob: -9.549260139465332
    10. 'from' → logprob: -9.674260139465332

Token 3428: ' #' (ID: 1069)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.21213696897029877
    2. 'import' → logprob: -1.71213698387146
    3. '#' (adapté à ' #') → logprob: -4.712136745452881
    4. '       ' → logprob: -6.462136745452881
    5. '```' → logprob: -9.462137222290039
    6. 'distance' → logprob: -11.337137222290039
    7. 'visited' → logprob: -11.337137222290039
    8. 'queue' → logprob: -12.337137222290039
    9. 'from' → logprob: -12.587137222290039
    10. '``' → logprob: -12.712137222290039

Token 3429: ' D' (ID: 415)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.16401062905788422
    2. 'dist' → logprob: -1.9140106439590454
    3. '#' → logprob: -5.664010524749756
    4. '       ' → logprob: -8.289011001586914
    5. 'visited' → logprob: -10.789011001586914
    6. 'from' → logprob: -11.164011001586914
    7. 'INF' → logprob: -11.664011001586914
    8. 'def' → logprob: -12.414011001586914
    9. '
' → logprob: -12.664011001586914
    10. '   ' → logprob: -12.914011001586914

Token 3430: 'ijkstra' (ID: 124290)
  Prédit: 'ijkstra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ijkstra' → logprob: -0.04975426569581032
    2. 'ijk' → logprob: -4.0497541427612305
    3. '   ' → logprob: -4.2997541427612305
    4. 'import' → logprob: -5.1747541427612305
    5. '#' → logprob: -5.7997541427612305
    6. 'ij' → logprob: -6.1747541427612305
    7. 'ist' → logprob: -6.2997541427612305
    8. 'istance' → logprob: -6.5497541427612305
    9. '
' → logprob: -6.5497541427612305
    10. '=' → logprob: -7.5497541427612305

Token 3431: ' on' (ID: 402)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.0875352993607521
    2. '       ' → logprob: -2.7125353813171387
    3. '   ' → logprob: -4.337535381317139
    4. 'from' → logprob: -6.837535381317139
    5. 'dist' → logprob: -7.212535381317139
    6. ':' → logprob: -7.962535381317139
    7. '
' → logprob: -8.08753490447998
    8. '```' → logprob: -8.08753490447998
    9. 'heap' → logprob: -8.46253490447998
    10. ' import' → logprob: -8.58753490447998

Token 3432: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.0006298751104623079
    2. 'points' → logprob: -8.250629425048828
    3. ' graph' → logprob: -9.500629425048828
    4. '(graph' → logprob: -9.500629425048828
    5. 'start' → logprob: -9.750629425048828
    6. 'the' → logprob: -9.750629425048828
    7. '
' → logprob: -10.375629425048828
    8. 'import' → logprob: -10.625629425048828
    9. 'heap' → logprob: -11.125629425048828
    10. '```' → logprob: -11.500629425048828

Token 3433: '_direct' (ID: 80120)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20149092376232147
    2. 'import' → logprob: -1.826490879058838
    3. 'dist' → logprob: -4.326490879058838
    4. '   ' → logprob: -5.451490879058838
    5. 'queue' → logprob: -6.701490879058838
    6. '
' → logprob: -7.201490879058838
    7. 'from' → logprob: -7.826490879058838
    8. 'heap' → logprob: -7.826490879058838
    9. '{
' → logprob: -8.326491355895996
    10. 'distance' → logprob: -8.701491355895996

Token 3434: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -4.572941179503687e-05
    2. 'ected' → logprob: -10.125045776367188
    3. '_ed' → logprob: -13.625045776367188
    4. 'irected' → logprob: -13.750045776367188
    5. 'ted' → logprob: -14.250045776367188
    6. '```' → logprob: -14.750045776367188
    7. 'eted' → logprob: -14.750045776367188
    8. 'ect' → logprob: -14.875045776367188
    9. 'ED' → logprob: -15.000045776367188
    10. 'eded' → logprob: -15.625045776367188

Token 3435: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11192651093006134
    2. 'import' → logprob: -2.361926555633545
    3. 'dist' → logprob: -4.986926555633545
    4. '
' → logprob: -5.486926555633545
    5. '   ' → logprob: -8.111926078796387
    6. '```' → logprob: -8.861926078796387
    7. 'queue' → logprob: -9.361926078796387
    8. ' import' → logprob: -9.986926078796387
    9. ' dist' → logprob: -10.361926078796387
    10. '        
' → logprob: -10.861926078796387

Token 3436: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.25758376717567444
    2. 'import' → logprob: -1.882583737373352
    3. 'dist' → logprob: -2.6325838565826416
    4. '   ' → logprob: -6.3825836181640625
    5. ' dist' → logprob: -8.007583618164062
    6. '
' → logprob: -8.257583618164062
    7. 'queue' → logprob: -8.382583618164062
    8. '```' → logprob: -8.382583618164062
    9. ' import' → logprob: -8.757583618164062
    10. 'q' → logprob: -10.382583618164062

Token 3437: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.06346270442008972
    2. 'import' → logprob: -2.813462734222412
    3. '       ' → logprob: -6.563462734222412
    4. ' dist' → logprob: -9.938462257385254
    5. '```' → logprob: -11.188462257385254
    6. '   ' → logprob: -12.063462257385254
    7. 'queue' → logprob: -12.188462257385254
    8. 'heap' → logprob: -12.563462257385254
    9. ' import' → logprob: -12.688462257385254
    10. '
' → logprob: -14.188462257385254

Token 3438: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9535890221595764
    2. '[' → logprob: -0.9535890221595764
    3. ' =' → logprob: -1.7035889625549316
    4. '=[' → logprob: -3.7035889625549316
    5. '_' → logprob: -5.453588962554932
    6. ')' → logprob: -5.828588962554932
    7. '   ' → logprob: -6.078588962554932
    8. '[u' → logprob: -6.203588962554932
    9. '=[]' → logprob: -6.578588962554932
    10. '[(' → logprob: -6.828588962554932

Token 3439: ' {' (ID: 354)
  Prédit: 'default'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'default' → logprob: -0.008615042082965374
    2. '{' → logprob: -4.758615016937256
    3. '{}
' → logprob: -15.758615493774414
    4. ' defaultdict' → logprob: -16.133615493774414
    5. '(default' → logprob: -16.133615493774414
    6. '.default' → logprob: -16.883615493774414
    7. '"default' → logprob: -17.383615493774414
    8. ' {' → logprob: -17.883615493774414
    9. 'dict' → logprob: -18.633615493774414
    10. ''default' → logprob: -19.383615493774414

Token 3440: 'p' (ID: 79)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0009830316994339228
    2. 'point' → logprob: -7.750983238220215
    3. 'p' → logprob: -7.875983238220215
    4. 'node' → logprob: -9.375983238220215
    5. 'pt' → logprob: -9.750983238220215
    6. 'v' → logprob: -11.250983238220215
    7. '}' → logprob: -11.625983238220215
    8. ' start' → logprob: -12.500983238220215
    9. '(start' → logprob: -13.250983238220215
    10. 'k' → logprob: -14.250983238220215

Token 3441: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12744079530239105
    2. ':start' → logprob: -2.1274406909942627
    3. '=start' → logprob: -8.877440452575684
    4. ' :' → logprob: -9.127440452575684
    5. '(start' → logprob: -9.377440452575684
    6. ':p' → logprob: -10.002440452575684
    7. '[start' → logprob: -10.252440452575684
    8. 'for' → logprob: -10.252440452575684
    9. '(points' → logprob: -11.752440452575684
    10. ' for' → logprob: -11.877440452575684

Token 3442: 'math' (ID: 20310)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.25193557143211365
    2. 'math' → logprob: -1.501935601234436
    3. ' float' → logprob: -12.626935958862305
    4. ' math' → logprob: -13.126935958862305
    5. '1' → logprob: -14.001935958862305
    6. '0' → logprob: -15.626935958862305
    7. '10' → logprob: -16.376935958862305
    8. '   ' → logprob: -16.501935958862305
    9. '(float' → logprob: -18.876935958862305
    10. '	float' → logprob: -19.251935958862305

Token 3443: '.inf' (ID: 81185)
  Prédit: '.inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inf' → logprob: -0.004469997249543667
    2. 'inf' → logprob: -5.504469871520996
    3. '```' → logprob: -8.129469871520996
    4. '_inf' → logprob: -10.504469871520996
    5. '``' → logprob: -10.879469871520996
    6. ' inf' → logprob: -11.004469871520996
    7. 'Inf' → logprob: -11.254469871520996
    8. '
' → logprob: -11.879469871520996
    9. '.infinity' → logprob: -12.879469871520996
    10. '   ' → logprob: -13.004469871520996

Token 3444: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5727537870407104
    2. 'for' → logprob: -1.0727537870407104
    3. ',' → logprob: -2.44775390625
    4. '}' → logprob: -5.32275390625
    5. '   ' → logprob: -6.94775390625
    6. ')' → logprob: -7.19775390625
    7. '<|end|>' → logprob: -8.19775390625
    8. '	for' → logprob: -8.69775390625
    9. ',
' → logprob: -9.57275390625
    10. '
' → logprob: -9.57275390625

Token 3445: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -9.014684110297821e-06
    2. ' p' → logprob: -11.625008583068848
    3. '	p' → logprob: -18.125009536743164
    4. '_p' → logprob: -18.750009536743164
    5. ')p' → logprob: -21.000009536743164
    6. '
' → logprob: -21.375009536743164
    7. '_' → logprob: -22.125009536743164
    8. '<p' → logprob: -22.500009536743164
    9. 'point' → logprob: -22.875009536743164
    10. 'points' → logprob: -23.000009536743164

Token 3446: ' in' (ID: 306)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.17265518009662628
    2. ' in' → logprob: -2.0476551055908203
    3. ' p' → logprob: -3.5476551055908203
    4. 'in' → logprob: -7.29765510559082
    5. ',p' → logprob: -10.04765510559082
    6. ',' → logprob: -12.42265510559082
    7. ')p' → logprob: -12.42265510559082
    8. '	p' → logprob: -13.17265510559082
    9. '<|end|>' → logprob: -13.17265510559082
    10. ' ' → logprob: -13.29765510559082

Token 3447: ' points' (ID: 5571)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.00015681622608099133
    2. '(points' → logprob: -9.37515640258789
    3. 'graph' → logprob: -10.25015640258789
    4. 'p' → logprob: -11.25015640258789
    5. 'point' → logprob: -11.25015640258789
    6. ' points' → logprob: -11.50015640258789
    7. '	points' → logprob: -15.87515640258789
    8. 'list' → logprob: -17.00015640258789
    9. '{' → logprob: -17.00015640258789
    10. '[' → logprob: -17.00015640258789

Token 3448: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.039090078324079514
    2. '       ' → logprob: -3.664090156555176
    3. '}
' → logprob: -4.414090156555176
    4. ' }' → logprob: -8.289090156555176
    5. '<|end|>' → logprob: -9.664090156555176
    6. '   ' → logprob: -9.789090156555176
    7. ',' → logprob: -10.289090156555176
    8. '	' → logprob: -10.289090156555176
    9. ')' → logprob: -10.414090156555176
    10. '
' → logprob: -10.789090156555176

Token 3449: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.008115806616842747
    2. '       ' → logprob: -5.008115768432617
    3. ' dist' → logprob: -6.758115768432617
    4. '	dist' → logprob: -8.508115768432617
    5. '_dist' → logprob: -11.258115768432617
    6. '[start' → logprob: -11.633115768432617
    7. '   ' → logprob: -12.008115768432617
    8. '[' → logprob: -12.383115768432617
    9. 'start' → logprob: -13.508115768432617
    10. 'Dist' → logprob: -13.508115768432617

Token 3450: ' prev' (ID: 10258)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.1517960956552997e-05
    2. 'start' → logprob: -11.500011444091797
    3. '       ' → logprob: -14.000011444091797
    4. ' dist' → logprob: -15.125011444091797
    5. '   ' → logprob: -15.250011444091797
    6. 'import' → logprob: -17.125011444091797
    7. '```' → logprob: -17.750011444091797
    8. '	dist' → logprob: -17.875011444091797
    9. '_dist' → logprob: -20.250011444091797
    10. 'queue' → logprob: -20.500011444091797

Token 3451: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3064902126789093
    2. '=' → logprob: -2.056490182876587
    3. '[p' → logprob: -2.931490182876587
    4. '[start' → logprob: -3.431490182876587
    5. '_' → logprob: -3.556490182876587
    6. ' =' → logprob: -4.431490421295166
    7. ']' → logprob: -6.681490421295166
    8. '[token' → logprob: -6.681490421295166
    9. '```' → logprob: -6.806490421295166
    10. '<|end|>' → logprob: -7.181490421295166

Token 3452: ' {}
' (ID: 11421)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.0005597044946625829
    2. '{}' → logprob: -7.5005598068237305
    3. 'dict' → logprob: -12.87555980682373
    4. ' {' → logprob: -13.00055980682373
    5. '{}
' → logprob: -14.00055980682373
    6. '   ' → logprob: -15.00055980682373
    7. '{sub' → logprob: -15.62555980682373
    8. '{x' → logprob: -16.375558853149414
    9. '{lng' → logprob: -16.375558853149414
    10. '{}

' → logprob: -16.500558853149414

Token 3453: '       ' (ID: 309)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.4037852883338928
    2. '       ' → logprob: -1.153785228729248
    3. '	dist' → logprob: -4.153785228729248
    4. '   ' → logprob: -7.278785228729248
    5. ' dist' → logprob: -8.028785705566406
    6. '_dist' → logprob: -11.153785705566406
    7. '	' → logprob: -11.278785705566406
    8. '```' → logprob: -11.778785705566406
    9. '\t' → logprob: -12.903785705566406
    10. 'start' → logprob: -12.903785705566406

Token 3454: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.0012613063445314765
    2. '       ' → logprob: -6.751261234283447
    3. ' dist' → logprob: -9.876261711120605
    4. '   ' → logprob: -10.501261711120605
    5. '	dist' → logprob: -11.876261711120605
    6. 'import' → logprob: -12.626261711120605
    7. 'start' → logprob: -14.001261711120605
    8. '```' → logprob: -14.251261711120605
    9. '
' → logprob: -15.501261711120605
    10. '_dist' → logprob: -17.25126075744629

Token 3455: '[start' (ID: 62179)
  Prédit: '[start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[start' → logprob: -0.048622675240039825
    2. '[' → logprob: -3.0486226081848145
    3. '\[' → logprob: -11.173623085021973
    4. '[src' → logprob: -12.423623085021973
    5. '```' → logprob: -12.673623085021973
    6. '[end' → logprob: -12.923623085021973
    7. '[current' → logprob: -13.048623085021973
    8. '[p' → logprob: -13.173623085021973
    9. '[target' → logprob: -13.423623085021973
    10. '[source' → logprob: -13.923623085021973

Token 3456: ']=' (ID: 9539)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2036479264497757
    2. '[' → logprob: -2.5786478519439697
    3. '=' → logprob: -3.2036478519439697
    4. ' ]' → logprob: -3.5786478519439697
    5. '+' → logprob: -3.7036478519439697
    6. ']=' → logprob: -5.328648090362549
    7. ' +' → logprob: -5.453648090362549
    8. ' =' → logprob: -6.203648090362549
    9. ']+=' → logprob: -6.703648090362549
    10. ')' → logprob: -7.328648090362549

Token 3457: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '```' → logprob: -18.25
    4. '   ' → logprob: -18.5
    5. '۰' → logprob: -18.8125
    6. '1' → logprob: -18.9375
    7. '.' → logprob: -20.0625
    8. '`' → logprob: -20.5625
    9. '=' → logprob: -20.5625
    10. 's' → logprob: -20.5625

Token 3458: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03946385160088539
    2. 'import' → logprob: -3.289463758468628
    3. '<|end|>' → logprob: -7.539463996887207
    4. '   ' → logprob: -7.664463996887207
    5. 'queue' → logprob: -9.164463996887207
    6. ',' → logprob: -9.789463996887207
    7. '
' → logprob: -10.289463996887207
    8. '        
' → logprob: -10.289463996887207
    9. '           ' → logprob: -10.789463996887207
    10. '	' → logprob: -10.789463996887207

Token 3459: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6977505683898926
    2. 'import' → logprob: -0.6977505683898926
    3. '   ' → logprob: -5.822750568389893
    4. 'queue' → logprob: -7.072750568389893
    5. 'from' → logprob: -7.822750568389893
    6. '	import' → logprob: -8.322750091552734
    7. ' import' → logprob: -9.947750091552734
    8. '	queue' → logprob: -10.447750091552734
    9. '```' → logprob: -10.572750091552734
    10. 'heap' → logprob: -11.572750091552734

Token 3460: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' (adapté à ' import') → logprob: -0.00012689977302215993
    2. '       ' → logprob: -9.750126838684082
    3. 'queue' → logprob: -10.000126838684082
    4. 'from' → logprob: -11.000126838684082
    5. 'heap' → logprob: -12.500126838684082
    6. '   ' → logprob: -13.750126838684082
    7. ' import' → logprob: -13.875126838684082
    8. '```' → logprob: -14.625126838684082
    9. 'pq' → logprob: -15.625126838684082
    10. 'visited' → logprob: -17.0001277923584

Token 3461: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: 0.0
    2. ' heap' → logprob: -17.25
    3. '_heap' → logprob: -19.375
    4. 'queue' → logprob: -19.875
    5. 'he' → logprob: -22.375
    6. '_' → logprob: -24.25
    7. '
' → logprob: -24.5
    8. '(heap' → logprob: -24.625
    9. '```' → logprob: -25.25
    10. 'math' → logprob: -25.5

Token 3462: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.1928003813372925e-05
    2. 'queue' → logprob: -10.125051498413086
    3. '```' → logprob: -12.875051498413086
    4. ' queue' → logprob: -13.000051498413086
    5. 'dict' → logprob: -13.250051498413086
    6. '_' → logprob: -13.500051498413086
    7. '_queue' → logprob: -14.250051498413086
    8. ')' → logprob: -14.250051498413086
    9. '[' → logprob: -14.750051498413086
    10. 'ify' → logprob: -14.875051498413086

Token 3463: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5971696972846985
    2. 'heap' → logprob: -1.7221696376800537
    3. ' heap' → logprob: -2.7221696376800537
    4. '
' → logprob: -2.7221696376800537
    5. 'queue' → logprob: -2.8471696376800537
    6. 'q' → logprob: -2.9721696376800537
    7. 'pq' → logprob: -4.597169876098633
    8. 'hq' → logprob: -4.597169876098633
    9. ' queue' → logprob: -5.472169876098633
    10. 'h' → logprob: -6.472169876098633

Token 3464: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9252817034721375
    2. 'heap' → logprob: -0.9252817034721375
    3. ' heap' → logprob: -1.8002817630767822
    4. 'queue' → logprob: -4.175281524658203
    5. 'q' → logprob: -4.675281524658203
    6. 'pq' → logprob: -5.175281524658203
    7. ' queue' → logprob: -6.050281524658203
    8. '
' → logprob: -6.050281524658203
    9. 'hq' → logprob: -6.050281524658203
    10. '(heap' → logprob: -6.050281524658203

Token 3465: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.12199250608682632
    2. 'pq' → logprob: -2.371992588043213
    3. 'hq' → logprob: -4.121992588043213
    4. 'queue' → logprob: -5.621992588043213
    5. 'q' → logprob: -6.871992588043213
    6. ' heap' → logprob: -7.871992588043213
    7. 'h' → logprob: -8.746992111206055
    8. '       ' → logprob: -9.496992111206055
    9. ' pq' → logprob: -9.996992111206055
    10. '   ' → logprob: -11.246992111206055

Token 3466: ' =' (ID: 314)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.07042140513658524
    2. ' =' → logprob: -3.3204214572906494
    3. '.push' → logprob: -4.57042121887207
    4. '[' → logprob: -5.19542121887207
    5. '=[]' → logprob: -5.57042121887207
    6. '.he' → logprob: -5.82042121887207
    7. '.' → logprob: -6.19542121887207
    8. '=' → logprob: -6.94542121887207
    9. '.heap' → logprob: -6.94542121887207
    10. '=[]
' → logprob: -7.19542121887207

Token 3467: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.062017425894737244
    2. '[]' → logprob: -2.8120174407958984
    3. '[' → logprob: -10.062017440795898
    4. '[]
' → logprob: -12.437017440795898
    5. '[((' → logprob: -13.437017440795898
    6. ' [(' → logprob: -13.562017440795898
    7. ' []' → logprob: -15.437017440795898
    8. '[]

' → logprob: -16.0620174407959
    9. '[],' → logprob: -17.4370174407959
    10. '[])' → logprob: -17.6870174407959

Token 3468: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5048530030981055e-06
    2. 'dist' → logprob: -13.875001907348633
    3. '(' → logprob: -14.750001907348633
    4. 'start' → logprob: -16.375001907348633
    5. ' ' → logprob: -17.000001907348633
    6. '(dist' → logprob: -17.625001907348633
    7. '(start' → logprob: -18.500001907348633
    8. ' dist' → logprob: -18.875001907348633
    9. '   ' → logprob: -20.750001907348633
    10. '```' → logprob: -21.375001907348633

Token 3469: ',start' (ID: 121128)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014433303149417043
    2. ',start' → logprob: -6.876443386077881
    3. ',p' → logprob: -8.376442909240723
    4. ',(' → logprob: -9.251442909240723
    5. ',[' → logprob: -10.751442909240723
    6. ',
' → logprob: -11.376442909240723
    7. ',next' → logprob: -11.751442909240723
    8. ' ,' → logprob: -12.501442909240723
    9. ',end' → logprob: -12.751442909240723
    10. ',)' → logprob: -12.751442909240723

Token 3470: ')]
' (ID: 11587)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4451140761375427
    2. ')]' → logprob: -1.0701141357421875
    3. ')' → logprob: -4.4451141357421875
    4. ',)' → logprob: -6.1951141357421875
    5. ']' → logprob: -6.4451141357421875
    6. ')]
' → logprob: -7.9451141357421875
    7. ',
' → logprob: -8.070114135742188
    8. '       ' → logprob: -9.195114135742188
    9. '   ' → logprob: -9.570114135742188
    10. '),' → logprob: -11.070114135742188

Token 3471: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5929610133171082
    2. 'while' → logprob: -0.8429610133171082
    3. ' while' → logprob: -4.592960834503174
    4. '```' → logprob: -5.467960834503174
    5. '	while' → logprob: -6.592960834503174
    6. '   ' → logprob: -6.967960834503174
    7. ',' → logprob: -9.717961311340332
    8. ')' → logprob: -9.717961311340332
    9. 'While' → logprob: -10.092961311340332
    10. '           ' → logprob: -10.842961311340332

Token 3472: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.021125541999936104
    2. '       ' → logprob: -4.146125316619873
    3. ' while' → logprob: -5.396125316619873
    4. '   ' → logprob: -8.146125793457031
    5. '	while' → logprob: -9.021125793457031
    6. '```' → logprob: -9.146125793457031
    7. 'While' → logprob: -11.521125793457031
    8. ')' → logprob: -11.521125793457031
    9. '           ' → logprob: -12.896125793457031
    10. '
' → logprob: -13.021125793457031

Token 3473: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -0.048676278442144394
    2. ' heap' → logprob: -3.0486762523651123
    3. 'len' → logprob: -9.673676490783691
    4. '(heap' → logprob: -11.298676490783691
    5. 'True' → logprob: -12.173676490783691
    6. '   ' → logprob: -12.423676490783691
    7. ' True' → logprob: -13.298676490783691
    8. ' len' → logprob: -14.173676490783691
    9. '```' → logprob: -14.298676490783691
    10. 'he' → logprob: -14.923676490783691

Token 3474: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6304475665092468
    2. ':' → logprob: -1.0054476261138916
    3. '[' → logprob: -2.5054476261138916
    4. '.pop' → logprob: -4.8804473876953125
    5. '       ' → logprob: -5.3804473876953125
    6. '=' → logprob: -6.3804473876953125
    7. '```' → logprob: -6.6304473876953125
    8. '.' → logprob: -7.0054473876953125
    9. '           ' → logprob: -7.1304473876953125
    10. ',' → logprob: -7.5054473876953125

Token 3475: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4468962252140045
    2. '           ' → logprob: -1.6968961954116821
    3. 'dist' → logprob: -2.8218963146209717
    4. '   ' → logprob: -3.3218963146209717
    5. '```' → logprob: -3.3218963146209717
    6. 'd' → logprob: -4.071896076202393
    7. 'cost' → logprob: -4.946896076202393
    8. 'distance' → logprob: -5.321896076202393
    9. ',' → logprob: -5.696896076202393
    10. '_,' → logprob: -6.446896076202393

Token 3476: ' cd' (ID: 24852)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.4301892817020416
    2. 'dist' → logprob: -1.1801892518997192
    3. 'cost' → logprob: -3.430189371109009
    4. 'cur' → logprob: -5.18018913269043
    5. '   ' → logprob: -5.68018913269043
    6. 'c' → logprob: -8.18018913269043
    7. 'curr' → logprob: -8.68018913269043
    8. 'cd' (adapté à ' cd') → logprob: -9.05518913269043
    9. ' dist' → logprob: -10.05518913269043
    10. 'du' → logprob: -10.05518913269043

Token 3477: ',u' (ID: 80698)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.31385883688926697
    2. 'ist' → logprob: -1.4388588666915894
    3. 'dist' → logprob: -4.188858985900879
    4. 'istance' → logprob: -4.688858985900879
    5. ',
' → logprob: -6.438858985900879
    6. ',c' → logprob: -6.438858985900879
    7. 'cost' → logprob: -6.688858985900879
    8. 'st' → logprob: -7.313858985900879
    9. ' ,' → logprob: -7.438858985900879
    10. '_dist' → logprob: -7.688858985900879

Token 3478: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3538563549518585
    2. ',' → logprob: -1.2288563251495361
    3. ' =' → logprob: -5.978856563568115
    4. ',
' → logprob: -6.978856563568115
    5. ',u' → logprob: -7.353856563568115
    6. '=
' → logprob: -7.853856563568115
    7. '<|end|>' → logprob: -8.353856086730957
    8. '=u' → logprob: -8.603856086730957
    9. ')' → logprob: -9.103856086730957
    10. '[' → logprob: -10.478856086730957

Token 3479: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' → logprob: -2.4153549020411447e-05
    2. 'he' → logprob: -10.75002384185791
    3. ' heap' → logprob: -12.87502384185791
    4. '   ' → logprob: -16.250024795532227
    5. '(heap' → logprob: -17.250024795532227
    6. '.heap' → logprob: -20.250024795532227
    7. '```' → logprob: -20.500024795532227
    8. '
' → logprob: -21.000024795532227
    9. 'hq' → logprob: -21.000024795532227
    10. 'h' → logprob: -21.375024795532227

Token 3480: 'q' (ID: 80)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.003604940138757229
    2. 'q' → logprob: -6.253604888916016
    3. ',' → logprob: -7.753604888916016
    4. '           ' → logprob: -8.128604888916016
    5. '=' → logprob: -8.253604888916016
    6. '.pop' → logprob: -8.503604888916016
    7. '       ' → logprob: -8.753604888916016
    8. 'pop' → logprob: -10.253604888916016
    9. '               ' → logprob: -10.628604888916016
    10. '   ' → logprob: -10.628604888916016

Token 3481: '.he' (ID: 67786)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.681551992893219
    2. '.he' → logprob: -0.806551992893219
    3. '[' → logprob: -3.181551933288574
    4. '.' → logprob: -5.556551933288574
    5. '.pop' → logprob: -7.431551933288574
    6. '```' → logprob: -7.556551933288574
    7. ' he' → logprob: -8.431551933288574
    8. 'he' → logprob: -8.556551933288574
    9. 'app' → logprob: -9.056551933288574
    10. ' .' → logprob: -9.181551933288574

Token 3482: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.00011856284982059151
    2. 'pp' → logprob: -9.125118255615234
    3. '```' → logprob: -12.375118255615234
    4. 'ap' → logprob: -13.375118255615234
    5. '           ' → logprob: -14.125118255615234
    6. '[' → logprob: -14.125118255615234
    7. 'p' → logprob: -14.250118255615234
    8. 'appen' → logprob: -14.500118255615234
    9. '   ' → logprob: -14.625118255615234
    10. '       ' → logprob: -15.125118255615234

Token 3483: 'op' (ID: 467)
  Prédit: 'pp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pp' → logprob: -1.0711857080459595
    2. 'ush' → logprob: -1.1961857080459595
    3. 'ort' → logprob: -1.8211857080459595
    4. 'op' → logprob: -2.32118558883667
    5. 'app' → logprob: -3.07118558883667
    6. 'rt' → logprob: -4.82118558883667
    7. 'p' → logprob: -4.82118558883667
    8. 'al' → logprob: -5.32118558883667
    9. 'r' → logprob: -5.44618558883667
    10. 'nd' → logprob: -5.82118558883667

Token 3484: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.00021140782337170094
    2. 'heap' → logprob: -8.875211715698242
    3. '(graph' → logprob: -10.000211715698242
    4. '(' → logprob: -11.000211715698242
    5. '(h' → logprob: -13.000211715698242
    6. ',' → logprob: -13.375211715698242
    7. ' (' → logprob: -13.750211715698242
    8. '(
' → logprob: -13.875211715698242
    9. '
' → logprob: -13.875211715698242
    10. '   ' → logprob: -14.250211715698242

Token 3485: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0240160021930933
    2. ')' → logprob: -3.7740159034729004
    3. '           ' → logprob: -7.2740159034729
    4. '       ' → logprob: -10.024016380310059
    5. ',' → logprob: -11.399016380310059
    6. ')
' → logprob: -11.524016380310059
    7. '   ' → logprob: -12.399016380310059
    8. ',)
' → logprob: -13.024016380310059
    9. ')`
' → logprob: -14.024016380310059
    10. '               ' → logprob: -14.024016380310059

Token 3486: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02341364696621895
    2. 'if' → logprob: -3.77341365814209
    3. ' if' → logprob: -9.27341365814209
    4. '   ' → logprob: -10.39841365814209
    5. '       ' → logprob: -10.64841365814209
    6. '```' → logprob: -11.14841365814209
    7. '		' → logprob: -12.89841365814209
    8. '               ' → logprob: -14.02341365814209
    9. 'for' → logprob: -14.14841365814209
    10. 'If' → logprob: -14.77341365814209

Token 3487: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13553650677204132
    2. '           ' → logprob: -2.1355364322662354
    3. ' if' → logprob: -4.7605366706848145
    4. '       ' → logprob: -12.385536193847656
    5. '   ' → logprob: -12.510536193847656
    6. '
' → logprob: -14.385536193847656
    7. '               ' → logprob: -14.635536193847656
    8. ';if' → logprob: -14.760536193847656
    9. 'for' → logprob: -15.385536193847656
    10. '	if' → logprob: -15.635536193847656

Token 3488: ' cd' (ID: 24852)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.14295314252376556
    2. ' u' → logprob: -2.0179531574249268
    3. 'cd' → logprob: -8.892952919006348
    4. ' cd' → logprob: -9.142952919006348
    5. 'dist' → logprob: -10.642952919006348
    6. ' dist' → logprob: -12.392952919006348
    7. ' ' → logprob: -12.642952919006348
    8. '	u' → logprob: -14.017952919006348
    9. '   ' → logprob: -14.142952919006348
    10. ' ' → logprob: -16.017953872680664

Token 3489: '>' (ID: 29)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.8454541563987732
    2. '==' → logprob: -0.9704541563987732
    3. '>' → logprob: -2.220454216003418
    4. ' >' → logprob: -3.095454216003418
    5. '>=' → logprob: -3.970454216003418
    6. ' >=' → logprob: -4.220454216003418
    7. '<=' → logprob: -6.095454216003418
    8. ' <=' → logprob: -6.470454216003418
    9. '[u' → logprob: -9.095454216003418
    10. '[' → logprob: -9.095454216003418

Token 3490: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.018150296062231064
    2. ' dist' → logprob: -4.018150329589844
    3. '```' → logprob: -16.643150329589844
    4. '	dist' → logprob: -16.643150329589844
    5. 'u' → logprob: -16.768150329589844
    6. 'd' → logprob: -17.143150329589844
    7. '_dist' → logprob: -17.143150329589844
    8. '
' → logprob: -17.518150329589844
    9. 'cd' → logprob: -18.143150329589844
    10. '(dist' → logprob: -18.518150329589844

Token 3491: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -9.849109119386412e-06
    2. 'u' → logprob: -11.625009536743164
    3. '
' → logprob: -15.250009536743164
    4. '```' → logprob: -15.625009536743164
    5. '(u' → logprob: -15.875009536743164
    6. '<u' → logprob: -16.125009536743164
    7. '[' → logprob: -16.250009536743164
    8. '[
' → logprob: -17.250009536743164
    9. '	u' → logprob: -18.250009536743164
    10. ',u' → logprob: -18.500009536743164

Token 3492: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12890160083770752
    2. ':
' → logprob: -2.128901481628418
    3. '               ' → logprob: -7.253901481628418
    4. ':return' → logprob: -7.753901481628418
    5. '           ' → logprob: -7.878901481628418
    6. 'continue' → logprob: -8.378901481628418
    7. ' continue' → logprob: -8.753901481628418
    8. ')' → logprob: -11.003901481628418
    9. '):' → logprob: -11.128901481628418
    10. '       ' → logprob: -11.503901481628418

Token 3493: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0007115975022315979
    2. '           ' → logprob: -8.000711441040039
    3. 'continue' → logprob: -8.500711441040039
    4. ' continue' → logprob: -9.250711441040039
    5. ':' → logprob: -10.625711441040039
    6. '   ' → logprob: -10.875711441040039
    7. '       ' → logprob: -11.125711441040039
    8. ':
' → logprob: -11.625711441040039
    9. '                   ' → logprob: -12.500711441040039
    10. '```' → logprob: -13.125711441040039

Token 3494: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.12120439857244492
    2. '               ' → logprob: -2.871204376220703
    3. ' continue' → logprob: -2.871204376220703
    4. '           ' → logprob: -7.121204376220703
    5. '   ' → logprob: -10.371204376220703
    6. '	continue' → logprob: -10.996204376220703
    7. '_continue' → logprob: -11.121204376220703
    8. '                   ' → logprob: -11.496204376220703
    9. '       ' → logprob: -13.871204376220703
    10. 'contin' → logprob: -14.246204376220703

Token 3495: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0038969877641648054
    2. '       ' → logprob: -6.878897190093994
    3. '<|end|>' → logprob: -6.878897190093994
    4. '               ' → logprob: -7.003897190093994
    5. ' if' → logprob: -7.878897190093994
    6. 'if' → logprob: -8.628896713256836
    7. '          ' → logprob: -9.628896713256836
    8. '   ' → logprob: -9.628896713256836
    9. '            
' → logprob: -10.253896713256836
    10. ')' → logprob: -10.378896713256836

Token 3496: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0023661323357373476
    2. '```' → logprob: -6.752366065979004
    3. 'if' → logprob: -7.127366065979004
    4. '       ' → logprob: -8.752366065979004
    5. '   ' → logprob: -9.002366065979004
    6. ' if' → logprob: -9.252366065979004
    7. '               ' → logprob: -12.877366065979004
    8. 'for' → logprob: -13.002366065979004
    9. '
' → logprob: -13.002366065979004
    10. '`' → logprob: -13.377366065979004

Token 3497: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.056680407375097275
    2. 'for' → logprob: -2.93168044090271
    3. 'if' (adapté à ' if') → logprob: -7.056680202484131
    4. ' for' → logprob: -7.181680202484131
    5. '       ' → logprob: -9.556680679321289
    6. '	for' → logprob: -10.181680679321289
    7. '   ' → logprob: -10.556680679321289
    8. '		' → logprob: -11.431680679321289
    9. '	       ' → logprob: -11.431680679321289
    10. ' if' → logprob: -12.431680679321289

Token 3498: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.00020354038861114532
    2. ' u' → logprob: -8.500203132629395
    3. '   ' → logprob: -17.12520408630371
    4. '	u' → logprob: -18.37520408630371
    5. ' ' → logprob: -20.37520408630371
    6. '[u' → logprob: -20.37520408630371
    7. '
' → logprob: -20.62520408630371
    8. '           ' → logprob: -21.12520408630371
    9. '(u' → logprob: -21.62520408630371
    10. '    ' → logprob: -22.00020408630371

Token 3499: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.313341349363327
    2. ' ==' → logprob: -1.3133413791656494
    3. ']==' → logprob: -9.93834114074707
    4. ')==' → logprob: -10.93834114074707
    5. '==
' → logprob: -11.56334114074707
    6. '=' → logprob: -13.43834114074707
    7. '()==' → logprob: -14.06334114074707
    8. '===' → logprob: -14.31334114074707
    9. '```' → logprob: -14.68834114074707
    10. ')' → logprob: -15.31334114074707

Token 3500: 'goal' (ID: 47313)
  Prédit: 'goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -9.627176768844947e-05
    2. ' goal' → logprob: -9.250096321105957
    3. '(goal' → logprob: -16.50009536743164
    4. '_goal' → logprob: -22.12509536743164
    5. '.goal' → logprob: -23.25009536743164
    6. 'Goal' → logprob: -23.25009536743164
    7. 'go' → logprob: -24.50009536743164
    8. '   ' → logprob: -25.25009536743164
    9. ' ' → logprob: -25.50009536743164
    10. 'target' → logprob: -26.00009536743164

Token 3501: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5772542357444763
    2. ':' → logprob: -0.8272542357444763
    3. '               ' → logprob: -7.077254295349121
    4. '           ' → logprob: -8.327254295349121
    5. ':return' → logprob: -8.577254295349121
    6. '<|end|>' → logprob: -11.327254295349121
    7. '):
' → logprob: -11.827254295349121
    8. ':

' → logprob: -12.702254295349121
    9. ':
' → logprob: -12.827254295349121
    10. ')' → logprob: -13.202254295349121

Token 3502: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00598248140886426
    2. ':
' → logprob: -5.755982398986816
    3. ':' → logprob: -6.005982398986816
    4. '           ' → logprob: -8.130982398986816
    5. '                   ' → logprob: -11.130982398986816
    6. 'break' → logprob: -12.380982398986816
    7. '              ' → logprob: -12.505982398986816
    8. '			' → logprob: -12.505982398986816
    9. '   ' → logprob: -12.630982398986816
    10. ' break' → logprob: -12.755982398986816

Token 3503: ' break' (ID: 2338)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0760066956281662
    2. 'break' (adapté à ' break') → logprob: -2.8260066509246826
    3. '           ' → logprob: -4.826006889343262
    4. ' break' → logprob: -5.201006889343262
    5. '                   ' → logprob: -8.451006889343262
    6. '	break' → logprob: -9.951006889343262
    7. '			' → logprob: -10.201006889343262
    8. '   ' → logprob: -10.451006889343262
    9. '```' → logprob: -10.576006889343262
    10. '	           ' → logprob: -10.701006889343262

Token 3504: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01546852383762598
    2. '       ' → logprob: -4.265468597412109
    3. '<|end|>' → logprob: -7.390468597412109
    4. ' for' → logprob: -8.39046859741211
    5. 'for' → logprob: -8.89046859741211
    6. '   ' → logprob: -8.89046859741211
    7. '		' → logprob: -10.01546859741211
    8. '               ' → logprob: -10.14046859741211
    9. '<|end|>' → logprob: -11.01546859741211
    10. '	       ' → logprob: -11.14046859741211

Token 3505: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.028066713362932205
    2. '       ' → logprob: -3.653066635131836
    3. 'for' → logprob: -7.403066635131836
    4. '   ' → logprob: -7.528066635131836
    5. '<|end|>' → logprob: -8.403066635131836
    6. ' for' → logprob: -9.153066635131836
    7. '```' → logprob: -9.528066635131836
    8. '		' → logprob: -9.778066635131836
    9. '	       ' → logprob: -9.903066635131836
    10. '               ' → logprob: -10.028066635131836

Token 3506: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.021036474034190178
    2. '           ' → logprob: -4.021036624908447
    3. ' for' → logprob: -5.896036624908447
    4. '       ' → logprob: -9.396036148071289
    5. '   ' → logprob: -10.271036148071289
    6. '	for' → logprob: -11.521036148071289
    7. '```' → logprob: -13.646036148071289
    8. '            
' → logprob: -13.896036148071289
    9. '	       ' → logprob: -14.396036148071289
    10. ' ' → logprob: -15.146036148071289

Token 3507: ' w' (ID: 286)
  Prédit: '(v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(v' → logprob: -0.30728697776794434
    2. 'v' → logprob: -2.1822869777679443
    3. 'w' → logprob: -2.1822869777679443
    4. '(w' → logprob: -3.3072869777679443
    5. ' (' → logprob: -6.682287216186523
    6. ' v' → logprob: -7.807287216186523
    7. ' w' → logprob: -8.057287216186523
    8. '   ' → logprob: -8.307287216186523
    9. 'vw' → logprob: -10.182287216186523
    10. '(n' → logprob: -11.057287216186523

Token 3508: ',d' (ID: 26159)
  Prédit: ',d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',d' → logprob: -0.4574565887451172
    2. ',' → logprob: -1.2074565887451172
    3. ',w' → logprob: -2.707456588745117
    4. ',(' → logprob: -7.207456588745117
    5. ',v' → logprob: -8.457456588745117
    6. ',u' → logprob: -8.707456588745117
    7. ',c' → logprob: -8.832456588745117
    8. ' ,' → logprob: -9.332456588745117
    9. ',n' → logprob: -11.332456588745117
    10. '           ' → logprob: -11.332456588745117

Token 3509: 'w' (ID: 86)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018615875393152237
    2. 'in' → logprob: -4.51861572265625
    3. 'istance' → logprob: -5.89361572265625
    4. ',' → logprob: -6.14361572265625
    5. 'ist' → logprob: -6.39361572265625
    6. ')' → logprob: -8.26861572265625
    7. ',w' → logprob: -8.51861572265625
    8. 'w' → logprob: -9.14361572265625
    9. '```' → logprob: -9.39361572265625
    10. '   ' → logprob: -10.14361572265625

Token 3510: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16848783195018768
    2. 'in' → logprob: -1.918487787246704
    3. ',' → logprob: -5.668488025665283
    4. ')' → logprob: -6.418488025665283
    5. ',w' → logprob: -6.543488025665283
    6. ',d' → logprob: -7.793488025665283
    7. ',in' → logprob: -7.918488025665283
    8. '           ' → logprob: -8.293487548828125
    9. '   ' → logprob: -8.918487548828125
    10. '       ' → logprob: -9.418487548828125

Token 3511: ' graph' (ID: 7465)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'graph' → logprob: -2.7610454708337784e-05
    2. ' graph' → logprob: -10.500027656555176
    3. '(graph' → logprob: -17.25002670288086
    4. '	graph' → logprob: -17.50002670288086
    5. '[u' → logprob: -18.87502670288086
    6. 'u' → logprob: -19.12502670288086
    7. 'w' → logprob: -19.87502670288086
    8. '[(' → logprob: -20.50002670288086
    9. '   ' → logprob: -20.50002670288086
    10. '.graph' → logprob: -21.00002670288086

Token 3512: '_direct' (ID: 80120)
  Prédit: '_direct'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_direct' → logprob: -0.0002569289645180106
    2. '[u' → logprob: -8.375256538391113
    3. 'direct' → logprob: -10.875256538391113
    4. '_' → logprob: -12.500256538391113
    5. '   ' → logprob: -13.875256538391113
    6. '       ' → logprob: -14.500256538391113
    7. '[w' → logprob: -14.750256538391113
    8. '[' → logprob: -15.000256538391113
    9. 'Directed' → logprob: -15.000256538391113
    10. '
' → logprob: -15.500256538391113

Token 3513: 'ed' (ID: 295)
  Prédit: 'ed'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.03409329056739807
    2. 'ected' → logprob: -3.5340933799743652
    3. 'irected' → logprob: -5.784093379974365
    4. 'icted' → logprob: -7.034093379974365
    5. '[u' → logprob: -9.659092903137207
    6. 'ted' → logprob: -9.659092903137207
    7. 'isted' → logprob: -9.784092903137207
    8. '[w' → logprob: -10.034092903137207
    9. 'ited' → logprob: -10.409092903137207
    10. 'ored' → logprob: -10.659092903137207

Token 3514: '.get' (ID: 775)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[u' → logprob: -1.9146995327901095e-05
    2. '[' → logprob: -11.125019073486328
    3. '   ' → logprob: -12.875019073486328
    4. 'u' → logprob: -14.375019073486328
    5. '(u' → logprob: -15.875019073486328
    6. '[(' → logprob: -15.875019073486328
    7. '[w' → logprob: -15.875019073486328
    8. '```' → logprob: -15.875019073486328
    9. ' ' → logprob: -16.125019073486328
    10. '[
' → logprob: -16.250019073486328

Token 3515: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.5771713256835938
    2. '[u' → logprob: -0.8271713256835938
    3. 'u' → logprob: -6.702171325683594
    4. '(w' → logprob: -14.452171325683594
    5. '	u' → logprob: -14.702171325683594
    6. ' u' → logprob: -14.952171325683594
    7. '```' → logprob: -14.952171325683594
    8. '(' → logprob: -15.202171325683594
    9. '[w' → logprob: -15.202171325683594
    10. '<u' → logprob: -15.327171325683594

Token 3516: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01041237823665142
    2. '):
' → logprob: -6.135412216186523
    3. ',w' → logprob: -6.260412216186523
    4. '):' → logprob: -6.885412216186523
    5. ',(' → logprob: -6.885412216186523
    6. ',[' → logprob: -6.885412216186523
    7. ' ,' → logprob: -6.885412216186523
    8. '           ' → logprob: -7.260412216186523
    9. '   ' → logprob: -7.885412216186523
    10. '       ' → logprob: -8.260412216186523

Token 3517: '[]' (ID: 1951)
  Prédit: '[]'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.03610014542937279
    2. '[]):' → logprob: -3.411100149154663
    3. '):' → logprob: -6.786099910736084
    4. ' []' → logprob: -7.911099910736084
    5. '[])' → logprob: -8.036100387573242
    6. '):
' → logprob: -8.661100387573242
    7. ')' → logprob: -8.786100387573242
    8. '[(' → logprob: -9.661100387573242
    9. '[],' → logprob: -10.161100387573242
    10. '()' → logprob: -10.536100387573242

Token 3518: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.09196081757545471
    2. '):' → logprob: -2.591960906982422
    3. '           ' → logprob: -5.091960906982422
    4. ':' → logprob: -5.966960906982422
    5. ':
' → logprob: -6.216960906982422
    6. '               ' → logprob: -6.466960906982422
    7. ',' → logprob: -8.591960906982422
    8. ')' → logprob: -8.966960906982422
    9. '       ' → logprob: -9.091960906982422
    10. '```' → logprob: -9.591960906982422

Token 3519: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.85235276655294e-05
    2. '	           ' → logprob: -10.250088691711426
    3. '<|end|>' → logprob: -11.250088691711426
    4. ',' → logprob: -11.375088691711426
    5. '           ' → logprob: -12.125088691711426
    6. '```' → logprob: -12.500088691711426
    7. '		       ' → logprob: -12.625088691711426
    8. '                
' → logprob: -12.750088691711426
    9. '              ' → logprob: -13.125088691711426
    10. ' if' → logprob: -13.125088691711426

Token 3520: ' nd' (ID: 5914)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2681913673877716
    2. '               ' → logprob: -2.143191337585449
    3. ' nd' → logprob: -2.643191337585449
    4. 'if' → logprob: -3.393191337585449
    5. ' new' → logprob: -5.268191337585449
    6. '                   ' → logprob: -5.393191337585449
    7. '   ' → logprob: -6.643191337585449
    8. '           ' → logprob: -6.893191337585449
    9. 'nd' (adapté à ' nd') → logprob: -7.268191337585449
    10. 'new' → logprob: -8.39319133758545

Token 3521: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10096007585525513
    2. ' =' → logprob: -2.3509600162506104
    3. ')' → logprob: -8.975959777832031
    4. '=d' → logprob: -9.225959777832031
    5. '=
' → logprob: -9.225959777832031
    6. '<|end|>' → logprob: -9.475959777832031
    7. '=int' → logprob: -9.850959777832031
    8. '=u' → logprob: -10.350959777832031
    9. '=user' → logprob: -10.725959777832031
    10. '               ' → logprob: -10.850959777832031

Token 3522: ' cd' (ID: 24852)
  Prédit: 'cd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -2.7848862373502925e-05
    2. ' cd' → logprob: -10.500027656555176
    3. '(cd' → logprob: -16.875028610229492
    4. 'dist' → logprob: -17.125028610229492
    5. '	cd' → logprob: -17.500028610229492
    6. '   ' → logprob: -18.500028610229492
    7. '_cd' → logprob: -19.375028610229492
    8. '           ' → logprob: -19.500028610229492
    9. 'cdn' → logprob: -19.750028610229492
    10. '               ' → logprob: -21.000028610229492

Token 3523: '+' (ID: 10)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47417259216308594
    2. '+' → logprob: -0.9741725921630859
    3. '+d' → logprob: -9.599172592163086
    4. '+c' → logprob: -10.599172592163086
    5. ' ' → logprob: -14.099172592163086
    6. '+w' → logprob: -14.599172592163086
    7. '+
' → logprob: -15.099172592163086
    8. '＋' → logprob: -15.349172592163086
    9. ' +
' → logprob: -15.474172592163086
    10. '+D' → logprob: -16.474172592163086

Token 3524: 'dw' (ID: 45201)
  Prédit: 'dw'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dw' → logprob: -0.029752805829048157
    2. 'd' → logprob: -3.529752731323242
    3. ' dw' → logprob: -13.029752731323242
    4. ' d' → logprob: -15.904752731323242
    5. '(dw' → logprob: -17.529752731323242
    6. 'dv' → logprob: -19.404752731323242
    7. '_dw' → logprob: -19.404752731323242
    8. '   ' → logprob: -19.529752731323242
    9. '```' → logprob: -19.654752731323242
    10. '	d' → logprob: -19.779752731323242

Token 3525: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1344471573829651
    2. '<|end|>' → logprob: -2.2594470977783203
    3. '                   ' → logprob: -5.13444709777832
    4. '           ' → logprob: -5.38444709777832
    5. '<|end|>' → logprob: -6.00944709777832
    6. '
' → logprob: -6.50944709777832
    7. 'if' → logprob: -7.00944709777832
    8. ')' → logprob: -7.00944709777832
    9. '                ' → logprob: -7.13444709777832
    10. ' if' → logprob: -7.50944709777832

Token 3526: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00018661346985027194
    2. '<|end|>' → logprob: -9.500186920166016
    3. '			' → logprob: -10.500186920166016
    4. '                   ' → logprob: -10.625186920166016
    5. '           ' → logprob: -11.000186920166016
    6. '              ' → logprob: -11.625186920166016
    7. '                ' → logprob: -11.750186920166016
    8. '	           ' → logprob: -12.500186920166016
    9. '                
' → logprob: -12.500186920166016
    10. '       ' → logprob: -12.875186920166016

Token 3527: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0945320576429367
    2. ' if' → logprob: -2.469532012939453
    3. 'if' (adapté à ' if') → logprob: -5.469532012939453
    4. '                   ' → logprob: -7.469532012939453
    5. '                ' → logprob: -7.594532012939453
    6. '           ' → logprob: -9.094532012939453
    7. '                
' → logprob: -10.219532012939453
    8. '       ' → logprob: -10.969532012939453
    9. '              ' → logprob: -10.969532012939453
    10. '[' → logprob: -11.094532012939453

Token 3528: ' nd' (ID: 5914)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.018713338300585747
    2. ' nd' → logprob: -4.018713474273682
    3. 'dist' → logprob: -7.518713474273682
    4. ' dist' → logprob: -10.893712997436523
    5. '   ' → logprob: -13.893712997436523
    6. 'ndl' → logprob: -14.893712997436523
    7. '(nd' → logprob: -15.393712997436523
    8. 'ndi' → logprob: -16.143712997436523
    9. '_nd' → logprob: -17.143712997436523
    10. '           ' → logprob: -17.268712997436523

Token 3529: '<' (ID: 27)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.3360550105571747
    2. '<' → logprob: -1.336055040359497
    3. '<|end|>' → logprob: -4.461054801940918
    4. '[' → logprob: -4.711054801940918
    5. '<th' → logprob: -8.336054801940918
    6. '<len' → logprob: -8.461054801940918
    7. '<int' → logprob: -8.586054801940918
    8. '<td' → logprob: -8.586054801940918
    9. ']<' → logprob: -8.836054801940918
    10. '<ll' → logprob: -9.211054801940918

Token 3530: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -2.339278580620885e-06
    2. ' dist' → logprob: -13.000001907348633
    3. '
' → logprob: -20.750001907348633
    4. '	dist' → logprob: -22.000001907348633
    5. '_dist' → logprob: -22.250001907348633
    6. '(dist' → logprob: -22.375001907348633
    7. 'Dist' → logprob: -23.750001907348633
    8. '.dist' → logprob: -25.000001907348633
    9. 'distance' → logprob: -25.375001907348633
    10. '   ' → logprob: -25.500001907348633

Token 3531: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -4.4849443838757e-06
    2. 'w' → logprob: -13.125004768371582
    3. '[u' → logprob: -13.250004768371582
    4. '<w' → logprob: -15.625004768371582
    5. '(w' → logprob: -16.250003814697266
    6. '[' → logprob: -16.500003814697266
    7. '{' → logprob: -16.750003814697266
    8. '   ' → logprob: -17.375003814697266
    9. '```' → logprob: -17.375003814697266
    10. '	w' → logprob: -17.500003814697266

Token 3532: ']:
' (ID: 22152)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.29706183075904846
    2. ':
' → logprob: -1.672061800956726
    3. '):' → logprob: -3.6720619201660156
    4. ']:' → logprob: -3.7970619201660156
    5. '):
' → logprob: -4.422061920166016
    6. ']:
' → logprob: -5.422061920166016
    7. '               ' → logprob: -6.422061920166016
    8. '                   ' → logprob: -7.047061920166016
    9. '}:' → logprob: -7.172061920166016
    10. '           ' → logprob: -7.797061920166016

Token 3533: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02555861510336399
    2. '                       ' → logprob: -4.5255584716796875
    3. '               ' → logprob: -4.9005584716796875
    4. ':
' → logprob: -5.5255584716796875
    5. '                           ' → logprob: -6.5255584716796875
    6. ':' → logprob: -7.4005584716796875
    7. '                               ' → logprob: -8.650558471679688
    8. '           ' → logprob: -8.650558471679688
    9. ' =' → logprob: -9.150558471679688
    10. '=' → logprob: -9.150558471679688

Token 3534: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.00047106825513765216
    2. ' dist' → logprob: -7.875471115112305
    3. '                   ' → logprob: -10.000471115112305
    4. 'prev' → logprob: -10.125471115112305
    5. '                       ' → logprob: -12.625471115112305
    6. '               ' → logprob: -14.125471115112305
    7. '                           ' → logprob: -14.875471115112305
    8. '	dist' → logprob: -14.875471115112305
    9. '```' → logprob: -15.500471115112305
    10. '       ' → logprob: -15.750471115112305

Token 3535: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -5.633853652398102e-05
    2. '[' → logprob: -9.875056266784668
    3. '[u' → logprob: -12.750056266784668
    4. 'w' → logprob: -13.750056266784668
    5. '[
' → logprob: -15.000056266784668
    6. '(w' → logprob: -16.000057220458984
    7. '<w' → logprob: -16.500057220458984
    8. ' [' → logprob: -16.500057220458984
    9. '=w' → logprob: -16.500057220458984
    10. '```' → logprob: -16.500057220458984

Token 3536: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5927826166152954
    2. ']=' → logprob: -1.4677826166152954
    3. ']' → logprob: -2.217782497406006
    4. '[' → logprob: -3.217782497406006
    5. '[w' → logprob: -3.592782497406006
    6. '[u' → logprob: -4.592782497406006
    7. ' =' → logprob: -4.717782497406006
    8. '=w' → logprob: -4.842782497406006
    9. '=
' → logprob: -5.967782497406006
    10. ',' → logprob: -6.092782497406006

Token 3537: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.0003452368837315589
    2. '(nd' → logprob: -8.000345230102539
    3. ' nd' → logprob: -11.625345230102539
    4. '(' → logprob: -14.625345230102539
    5. '_nd' → logprob: -15.500345230102539
    6. 'ndl' → logprob: -17.25034523010254
    7. '```' → logprob: -17.50034523010254
    8. '
' → logprob: -17.87534523010254
    9. 'nds' → logprob: -18.12534523010254
    10. 'dw' → logprob: -18.37534523010254

Token 3538: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002168340375646949
    2. '
' → logprob: -6.62716817855835
    3. '               ' → logprob: -8.377168655395508
    4. '<|end|>' → logprob: -8.752168655395508
    5. '           ' → logprob: -9.127168655395508
    6. '                    
' → logprob: -9.502168655395508
    7. '       ' → logprob: -9.877168655395508
    8. '```' → logprob: -10.002168655395508
    9. '                       ' → logprob: -10.127168655395508
    10. '                    ' → logprob: -10.502168655395508

Token 3539: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.015188079327344894
    2. ' prev' → logprob: -5.765188217163086
    3. '```' → logprob: -5.890188217163086
    4. '
' → logprob: -6.015188217163086
    5. 'prev' → logprob: -6.265188217163086
    6. '               ' → logprob: -6.515188217163086
    7. '                       ' → logprob: -6.765188217163086
    8. '(prev' → logprob: -7.640188217163086
    9. '           ' → logprob: -8.015188217163086
    10. '                    ' → logprob: -8.515188217163086

Token 3540: ' prev' (ID: 10258)
  Prédit: 'prev'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' (adapté à ' prev') → logprob: -0.0001463299704482779
    2. 'heap' → logprob: -9.75014591217041
    3. '```' → logprob: -9.75014591217041
    4. '                   ' → logprob: -10.62514591217041
    5. ' prev' → logprob: -12.50014591217041
    6. '   ' → logprob: -14.12514591217041
    7. '                       ' → logprob: -15.12514591217041
    8. '           ' → logprob: -16.000146865844727
    9. '	prev' → logprob: -16.000146865844727
    10. '               ' → logprob: -16.000146865844727

Token 3541: '[w' (ID: 94341)
  Prédit: '[w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[w' → logprob: -0.00036894375807605684
    2. '[u' → logprob: -8.00036907196045
    3. '[' → logprob: -11.25036907196045
    4. 'w' → logprob: -11.37536907196045
    5. '=w' → logprob: -12.50036907196045
    6. '```' → logprob: -13.37536907196045
    7. '(w' → logprob: -13.75036907196045
    8. '[v' → logprob: -14.50036907196045
    9. '<|end|>' → logprob: -15.12536907196045
    10. ',w' → logprob: -15.25036907196045

Token 3542: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.09498661011457443
    2. ']' → logprob: -2.7199866771698
    3. '=' → logprob: -3.7199866771698
    4. ']=(' → logprob: -8.594986915588379
    5. '=w' → logprob: -9.219986915588379
    6. ']={' → logprob: -9.344986915588379
    7. '[' → logprob: -10.344986915588379
    8. ']='' → logprob: -10.844986915588379
    9. '=u' → logprob: -10.844986915588379
    10. ')=' → logprob: -11.344986915588379

Token 3543: 'u' (ID: 84)
  Prédit: 'u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -1.9361264946837764e-07
    2. ' u' → logprob: -16.375
    3. '	u' → logprob: -18.625
    4. '   ' → logprob: -19.0
    5. '(u' → logprob: -20.125
    6. '[u' → logprob: -20.25
    7. '    
' → logprob: -21.125
    8. ''u' → logprob: -21.25
    9. '```' → logprob: -21.875
    10. '<u' → logprob: -22.25

Token 3544: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.060874540358781815
    2. '<|end|>' → logprob: -3.9358744621276855
    3. ')' → logprob: -4.1858744621276855
    4. '               ' → logprob: -5.0608744621276855
    5. '                       ' → logprob: -5.1858744621276855
    6. '                    
' → logprob: -5.9358744621276855
    7. '                    ' → logprob: -6.5608744621276855
    8. ',' → logprob: -6.5608744621276855
    9. '           ' → logprob: -6.8108744621276855
    10. '				' → logprob: -7.4358744621276855

Token 3545: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.2471858561038971
    2. ')' → logprob: -1.8721858263015747
    3. '```' → logprob: -4.122185707092285
    4. '               ' → logprob: -4.622185707092285
    5. '                       ' → logprob: -4.872185707092285
    6. '<|end|>' → logprob: -5.247185707092285
    7. '\' → logprob: -5.497185707092285
    8. '[' → logprob: -5.997185707092285
    9. '                           ' → logprob: -6.247185707092285
    10. '                    ' → logprob: -6.247185707092285

Token 3546: ' heap' (ID: 37237)
  Prédit: 'heap'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'heap' (adapté à ' heap') → logprob: -0.0007759197615087032
    2. '                   ' → logprob: -7.5007758140563965
    3. 'he' → logprob: -9.000776290893555
    4. ' heap' → logprob: -9.625776290893555
    5. '                       ' → logprob: -11.375776290893555
    6. '```' → logprob: -11.875776290893555
    7. '                           ' → logprob: -12.250776290893555
    8. '               ' → logprob: -12.250776290893555
    9. '           ' → logprob: -12.750776290893555
    10. '   ' → logprob: -13.250776290893555

Token 3547: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.026783566921949387
    2. '.he' → logprob: -4.401783466339111
    3. '.push' → logprob: -5.776783466339111
    4. ' he' → logprob: -6.276783466339111
    5. '<|end|>' → logprob: -6.401783466339111
    6. 'push' → logprob: -6.776783466339111
    7. '.' → logprob: -6.901783466339111
    8. '```' → logprob: -7.151783466339111
    9. 'he' → logprob: -7.401783466339111
    10. '                       ' → logprob: -7.651783466339111

Token 3548: '.he' (ID: 67786)
  Prédit: '.he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.he' → logprob: -0.0018849691841751337
    2. '.push' → logprob: -6.876884937286377
    3. '```' → logprob: -8.126885414123535
    4. '.heap' → logprob: -8.251885414123535
    5. 'push' → logprob: -9.126885414123535
    6. 'ush' → logprob: -9.501885414123535
    7. 'he' → logprob: -10.001885414123535
    8. '.' → logprob: -11.251885414123535
    9. '_push' → logprob: -11.501885414123535
    10. ' he' → logprob: -11.626885414123535

Token 3549: 'app' (ID: 903)
  Prédit: 'app'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.0019298245897516608
    2. 'ap' → logprob: -6.376929759979248
    3. 'p' → logprob: -8.751930236816406
    4. 'q' → logprob: -10.626930236816406
    5. 'pp' → logprob: -10.626930236816406
    6. 'ush' → logprob: -11.751930236816406
    7. 'push' → logprob: -12.251930236816406
    8. 'op' → logprob: -12.376930236816406
    9. 'up' → logprob: -13.501930236816406
    10. '```' → logprob: -14.001930236816406

Token 3550: 'ush' (ID: 1776)
  Prédit: 'op'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'op' → logprob: -0.5962995886802673
    2. 'ush' → logprob: -0.8462995886802673
    3. 'p' → logprob: -3.971299648284912
    4. '```' → logprob: -7.221299648284912
    5. 'push' → logprob: -9.471299171447754
    6. 'ap' → logprob: -9.596299171447754
    7. 'sh' → logprob: -9.846299171447754
    8. '   ' → logprob: -9.846299171447754
    9. '           ' → logprob: -9.971299171447754
    10. '       ' → logprob: -9.971299171447754

Token 3551: '(heap' (ID: 173794)
  Prédit: '(heap'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.0017330136615782976
    2. '(' → logprob: -6.37673282623291
    3. '(graph' → logprob: -11.00173282623291
    4. '(
' → logprob: -12.12673282623291
    5. '(h' → logprob: -12.50173282623291
    6. ' (' → logprob: -12.87673282623291
    7. '```' → logprob: -14.00173282623291
    8. 'heap' → logprob: -14.50173282623291
    9. '(queue' → logprob: -15.12673282623291
    10. '((' → logprob: -15.87673282623291

Token 3552: ',(' (ID: 27243)
  Prédit: '(heap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(heap' → logprob: -0.0014499947428703308
    2. 'q' → logprob: -7.126450061798096
    3. ')' → logprob: -8.626449584960938
    4. '(' → logprob: -9.501449584960938
    5. ')(
' → logprob: -9.626449584960938
    6. '(queue' → logprob: -9.751449584960938
    7. 'heap' → logprob: -9.876449584960938
    8. 'u' → logprob: -10.126449584960938
    9. '.heap' → logprob: -10.626449584960938
    10. '       ' → logprob: -10.751449584960938

Token 3553: 'nd' (ID: 301)
  Prédit: 'nd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.04911934584379196
    2. 'w' → logprob: -3.049119234085083
    3. ' nd' → logprob: -8.174118995666504
    4. '(nd' → logprob: -8.549118995666504
    5. 'wd' → logprob: -10.424118995666504
    6. '   ' → logprob: -11.674118995666504
    7. 'nw' → logprob: -12.174118995666504
    8. ' w' → logprob: -12.674118995666504
    9. '_nd' → logprob: -13.049118995666504
    10. 'ndl' → logprob: -13.174118995666504

Token 3554: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.038138922303915024
    2. ',' → logprob: -3.2881388664245605
    3. ' ,' → logprob: -10.788139343261719
    4. ')' → logprob: -11.288139343261719
    5. ',u' → logprob: -11.288139343261719
    6. '))' → logprob: -11.413139343261719
    7. ',
' → logprob: -11.538139343261719
    8. '   ' → logprob: -12.288139343261719
    9. '[' → logprob: -12.663139343261719
    10. '[w' → logprob: -12.663139343261719

Token 3555: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -5.455048449221067e-05
    2. '))
' → logprob: -10.000054359436035
    3. '                   ' → logprob: -12.875054359436035
    4. ')' → logprob: -12.875054359436035
    5. ')))' → logprob: -13.500054359436035
    6. '               ' → logprob: -13.875054359436035
    7. '           ' → logprob: -14.125054359436035
    8. ' ))' → logprob: -15.375054359436035
    9. '                       ' → logprob: -15.750054359436035
    10. '       ' → logprob: -15.875054359436035

Token 3556: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.158728688955307
    2. '```' → logprob: -2.40872859954834
    3. ')' → logprob: -3.65872859954834
    4. 'if' → logprob: -4.40872859954834
    5. '   ' → logprob: -4.53372859954834
    6. '<|end|>' → logprob: -5.53372859954834
    7. '
' → logprob: -7.03372859954834
    8. ' if' → logprob: -7.28372859954834
    9. '#' → logprob: -7.40872859954834
    10. 'def' → logprob: -8.03372859954834

Token 3557: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.007614083122462034
    2. '       ' → logprob: -5.0076141357421875
    3. '```' → logprob: -7.3826141357421875
    4. ' if' → logprob: -8.257614135742188
    5. '   ' → logprob: -11.257614135742188
    6. '``' → logprob: -13.632614135742188
    7. '#' → logprob: -14.007614135742188
    8. '	if' → logprob: -14.257614135742188
    9. 'If' → logprob: -14.632614135742188
    10. 'else' → logprob: -14.632614135742188

Token 3558: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00023607931507285684
    2. ' dist' → logprob: -8.500236511230469
    3. 'math' → logprob: -10.375236511230469
    4. '   ' → logprob: -13.625236511230469
    5. ' math' → logprob: -17.00023651123047
    6. '(dist' → logprob: -17.12523651123047
    7. ' ' → logprob: -17.87523651123047
    8. '	dist' → logprob: -18.50023651123047
    9. '  ' → logprob: -19.00023651123047
    10. 'abs' → logprob: -19.25023651123047

Token 3559: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.20154635608196259
    2. '[start' → logprob: -1.701546311378479
    3. '[end' → logprob: -9.951546669006348
    4. '[result' → logprob: -10.701546669006348
    5. '[u' → logprob: -11.076546669006348
    6. '[target' → logprob: -11.326546669006348
    7. '```' → logprob: -11.576546669006348
    8. '[get' → logprob: -12.326546669006348
    9. ' [' → logprob: -12.451546669006348
    10. '==' → logprob: -12.576546669006348

Token 3560: 'goal' (ID: 47313)
  Prédit: 'goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -3.4121114822482923e-06
    2. '[' → logprob: -13.250003814697266
    3. '(goal' → logprob: -13.500003814697266
    4. ' goal' → logprob: -15.500003814697266
    5. '.goal' → logprob: -18.125003814697266
    6. '_goal' → logprob: -19.125003814697266
    7. '```' → logprob: -21.250003814697266
    8. 'go' → logprob: -21.625003814697266
    9. 'Goal' → logprob: -22.000003814697266
    10. '
' → logprob: -22.875003814697266

Token 3561: ']==' (ID: 34128)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.01259076688438654
    2. ' ==' → logprob: -4.3875908851623535
    3. ']==' → logprob: -10.637590408325195
    4. '==
' → logprob: -10.637590408325195
    5. '<' → logprob: -10.887590408325195
    6. '[' → logprob: -12.262590408325195
    7. ')==' → logprob: -12.887590408325195
    8. '()==' → logprob: -13.262590408325195
    9. '===' → logprob: -13.387590408325195
    10. '!=' → logprob: -13.637590408325195

Token 3562: 'math' (ID: 20310)
  Prédit: 'math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -1.318681188422488e-05
    2. ' math' → logprob: -11.25001335144043
    3. '   ' → logprob: -16.00001335144043
    4. 'float' → logprob: -17.12501335144043
    5. '(math' → logprob: -20.00001335144043
    6. 'Math' → logprob: -20.62501335144043
    7. '```' → logprob: -21.25001335144043
    8. 'import' → logprob: -21.62501335144043
    9. '.math' → logprob: -22.75001335144043
    10. ' ' → logprob: -22.75001335144043

Token 3563: '.inf' (ID: 81185)
  Prédit: '.inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.inf' → logprob: -0.0010592486942186952
    2. 'inf' → logprob: -6.876059055328369
    3. '```' → logprob: -11.251059532165527
    4. '.' → logprob: -12.626059532165527
    5. '.infinity' → logprob: -13.001059532165527
    6. '.h' → logprob: -13.376059532165527
    7. '
' → logprob: -13.376059532165527
    8. '``' → logprob: -13.626059532165527
    9. '_inf' → logprob: -14.001059532165527
    10. 'math' → logprob: -14.501059532165527

Token 3564: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.07899411022663116
    2. ':
' → logprob: -2.578994035720825
    3. '           ' → logprob: -9.953993797302246
    4. ':return' → logprob: -10.578993797302246
    5. '       ' → logprob: -10.828993797302246
    6. '   ' → logprob: -12.578993797302246
    7. ' or' → logprob: -13.328993797302246
    8. '==' → logprob: -14.203993797302246
    9. '=' → logprob: -14.203993797302246
    10. '**' → logprob: -14.328993797302246

Token 3565: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0018993634730577469
    2. 'print' → logprob: -7.001899242401123
    3. '```' → logprob: -7.501899242401123
    4. ':
' → logprob: -9.001899719238281
    5. '       ' → logprob: -9.251899719238281
    6. ' print' → logprob: -9.626899719238281
    7. ':' → logprob: -10.001899719238281
    8. '               ' → logprob: -10.626899719238281
    9. '   ' → logprob: -11.001899719238281
    10. '():
' → logprob: -11.126899719238281

Token 3566: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.16147831082344055
    2. '           ' → logprob: -1.9114782810211182
    3. ' print' → logprob: -7.161478519439697
    4. '```' → logprob: -8.286478042602539
    5. '   ' → logprob: -8.786478042602539
    6. '       ' → logprob: -9.661478042602539
    7. '	print' → logprob: -12.411478042602539
    8. '               ' → logprob: -13.161478042602539
    9. '``' → logprob: -13.661478042602539
    10. '`' → logprob: -15.036478042602539

Token 3567: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.0004971518646925688
    2. '(' → logprob: -7.625497341156006
    3. '-' → logprob: -11.750496864318848
    4. '```' → logprob: -14.250496864318848
    5. '(
' → logprob: -15.375496864318848
    6. '('-' → logprob: -15.875496864318848
    7. '('' → logprob: -16.250497817993164
    8. '(`' → logprob: -16.875497817993164
    9. '`' → logprob: -16.875497817993164
    10. '("-' → logprob: -17.125497817993164

Token 3568: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '-' → logprob: -14.125000953674316
    3. '2' → logprob: -16.875
    4. ' ' → logprob: -17.0
    5. '```' → logprob: -17.5
    6. ' -' → logprob: -18.125
    7. '``' → logprob: -18.75
    8. '{' → logprob: -18.75
    9. '`' → logprob: -19.0
    10. '"' → logprob: -19.375

Token 3569: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00226040231063962
    2. '       ' → logprob: -6.752260208129883
    3. ')
' → logprob: -6.877260208129883
    4. '           ' → logprob: -10.502260208129883
    5. '```' → logprob: -11.627260208129883
    6. '   ' → logprob: -12.627260208129883
    7. ')return' → logprob: -12.627260208129883
    8. '')' → logprob: -13.002260208129883
    9. '<|end|>' → logprob: -13.002260208129883
    10. '")' → logprob: -13.252260208129883

Token 3570: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5007491707801819
    2. '           ' → logprob: -1.625749111175537
    3. '```' → logprob: -2.125749111175537
    4. '<|end|>' → logprob: -2.750749111175537
    5. '
' → logprob: -5.500749111175537
    6. 'continue' → logprob: -6.250749111175537
    7. 'else' → logprob: -6.625749111175537
    8. 'print' → logprob: -6.750749111175537
    9. '  
' → logprob: -7.125749111175537
    10. '``' → logprob: -7.125749111175537

Token 3571: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5798162221908569
    2. '           ' → logprob: -1.579816222190857
    3. 'continue' → logprob: -1.579816222190857
    4. '       ' → logprob: -4.2048163414001465
    5. '```' → logprob: -5.0798163414001465
    6. '<|end|>' → logprob: -5.8298163414001465
    7. ' continue' → logprob: -7.0798163414001465
    8. 'else' → logprob: -8.079815864562988
    9. '
' → logprob: -8.079815864562988
    10. '	continue' → logprob: -8.079815864562988

Token 3572: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13209863007068634
    2. '0' → logprob: -2.13209867477417
    3. '()' → logprob: -5.50709867477417
    4. '()
' → logprob: -6.88209867477417
    5. '(
' → logprob: -10.632098197937012
    6. '```' → logprob: -10.757098197937012
    7. '('' → logprob: -11.632098197937012
    8. ' (' → logprob: -12.382098197937012
    9. '()\' → logprob: -12.382098197937012
    10. '``' → logprob: -13.007098197937012

Token 3573: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. '1' → logprob: -16.25
    3. ' ' → logprob: -17.125
    4. '```' → logprob: -17.25
    5. '``' → logprob: -18.125
    6. '`' → logprob: -19.125
    7. '   ' → logprob: -19.75
    8. '2' → logprob: -20.25
    9. ''' → logprob: -20.75
    10. '00' → logprob: -20.9375

Token 3574: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05588936060667038
    2. '           ' → logprob: -3.930889368057251
    3. ')
' → logprob: -4.055889129638672
    4. '       ' → logprob: -4.055889129638672
    5. ')return' → logprob: -10.555889129638672
    6. '()' → logprob: -11.180889129638672
    7. '())' → logprob: -11.680889129638672
    8. '   ' → logprob: -11.805889129638672
    9. '```' → logprob: -11.805889129638672
    10. ')
' → logprob: -12.055889129638672

Token 3575: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10131089389324188
    2. '       ' → logprob: -2.351310968399048
    3. 'continue' → logprob: -6.976310729980469
    4. 'else' → logprob: -9.351310729980469
    5. '   ' → logprob: -10.351310729980469
    6. '```' → logprob: -10.851310729980469
    7. ' continue' → logprob: -11.476310729980469
    8. '	       ' → logprob: -12.351310729980469
    9. '	continue' → logprob: -12.601310729980469
    10. '               ' → logprob: -12.601310729980469

Token 3576: ' continue' (ID: 4901)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08691104501485825
    2. '       ' → logprob: -2.8369109630584717
    3. 'continue' (adapté à ' continue') → logprob: -3.7119109630584717
    4. '   ' → logprob: -9.21191120147705
    5. ' continue' → logprob: -9.96191120147705
    6. '```' → logprob: -11.08691120147705
    7. 'else' → logprob: -11.21191120147705
    8. '	continue' → logprob: -11.46191120147705
    9. '               ' → logprob: -12.08691120147705
    10. '		' → logprob: -12.58691120147705

Token 3577: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7840733528137207
    2. '       ' → logprob: -0.7840733528137207
    3. '```' → logprob: -3.0340733528137207
    4. '        
' → logprob: -4.659073352813721
    5. '    
' → logprob: -5.159073352813721
    6. '  
' → logprob: -5.284073352813721
    7. 'else' → logprob: -5.409073352813721
    8. '\n' → logprob: -5.409073352813721
    9. 'print' → logprob: -5.534073352813721
    10. '``' → logprob: -6.409073352813721

Token 3578: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12441303580999374
    2. 'path' → logprob: -2.249413013458252
    3. '```' → logprob: -4.999413013458252
    4. '#' → logprob: -6.124413013458252
    5. '``' → logprob: -6.999413013458252
    6. '   ' → logprob: -7.249413013458252
    7. 'route' → logprob: -7.999413013458252
    8. '
' → logprob: -8.24941349029541
    9. '        
' → logprob: -8.87441349029541
    10. ' path' → logprob: -10.37441349029541

Token 3579: ' #' (ID: 1069)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.0049947709776461124
    2. '#' (adapté à ' #') → logprob: -5.879994869232178
    3. '       ' → logprob: -6.754994869232178
    4. 'route' → logprob: -7.504994869232178
    5. '   ' → logprob: -8.62999439239502
    6. '
' → logprob: -9.25499439239502
    7. '```' → logprob: -9.25499439239502
    8. '``' → logprob: -10.00499439239502
    9. '        
' → logprob: -10.50499439239502
    10. '_path' → logprob: -12.00499439239502

Token 3580: ' reconstruct' (ID: 78298)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.041330158710479736
    2. '#' → logprob: -3.291330099105835
    3. '       ' → logprob: -5.791330337524414
    4. 'route' → logprob: -8.541330337524414
    5. 'res' → logprob: -10.791330337524414
    6. '   ' → logprob: -12.041330337524414
    7. ' path' → logprob: -12.791330337524414
    8. 'ans' → logprob: -14.041330337524414
    9. 'Path' → logprob: -14.166330337524414
    10. '_path' → logprob: -14.291330337524414

Token 3581: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -8.625866030342877e-05
    2. '       ' → logprob: -9.750085830688477
    3. ' path' → logprob: -11.125085830688477
    4. '_path' → logprob: -12.000085830688477
    5. '```' → logprob: -12.750085830688477
    6. '   ' → logprob: -13.625085830688477
    7. 'route' → logprob: -13.625085830688477
    8. '``' → logprob: -14.625085830688477
    9. '           ' → logprob: -14.750085830688477
    10. 'Path' → logprob: -15.125085830688477

Token 3582: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6951627731323242
    2. 'path' → logprob: -0.6951627731323242
    3. '```' → logprob: -6.570162773132324
    4. ' path' → logprob: -8.320162773132324
    5. '   ' → logprob: -8.945162773132324
    6. '
' → logprob: -9.320162773132324
    7. '``' → logprob: -9.695162773132324
    8. '_path' → logprob: -10.695162773132324
    9. '	path' → logprob: -10.820162773132324
    10. 'p' → logprob: -11.445162773132324

Token 3583: '       ' (ID: 309)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.03957626596093178
    2. '       ' → logprob: -3.289576292037964
    3. '   ' → logprob: -7.289576053619385
    4. 'cur' → logprob: -8.164576530456543
    5. '```' → logprob: -8.414576530456543
    6. '
' → logprob: -9.289576530456543
    7. ' path' → logprob: -9.414576530456543
    8. 'curr' → logprob: -9.789576530456543
    9. 'p' → logprob: -10.289576530456543
    10. '``' → logprob: -11.039576530456543

Token 3584: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -1.0921942703134846e-05
    2. ' path' → logprob: -12.50001049041748
    3. '   ' → logprob: -12.62501049041748
    4. '       ' → logprob: -13.12501049041748
    5. 'route' → logprob: -14.12501049041748
    6. 'cur' → logprob: -14.75001049041748
    7. '_path' → logprob: -15.00001049041748
    8. 'Path' → logprob: -16.000011444091797
    9. 'curr' → logprob: -16.250011444091797
    10. 'pat' → logprob: -17.250011444091797

Token 3585: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15526436269283295
    2. ' =' → logprob: -2.030264377593994
    3. '=[]' → logprob: -4.530264377593994
    4. '_' → logprob: -6.655264377593994
    5. '=[' → logprob: -8.655263900756836
    6. '_=' → logprob: -9.280263900756836
    7. '=[]
' → logprob: -9.780263900756836
    8. '[' → logprob: -10.655263900756836
    9. '   ' → logprob: -11.030263900756836
    10. '[]' → logprob: -11.155263900756836

Token 3586: '       ' (ID: 309)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cur' → logprob: -0.4859154522418976
    2. 'u' → logprob: -1.2359154224395752
    3. 'curr' → logprob: -3.610915422439575
    4. 'current' → logprob: -3.860915422439575
    5. 'w' → logprob: -4.360915660858154
    6. 'p' → logprob: -4.360915660858154
    7. 'node' → logprob: -4.610915660858154
    8. '   ' → logprob: -4.860915660858154
    9. 'v' → logprob: -7.235915660858154
    10. ' cur' → logprob: -7.860915660858154

Token 3587: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.20646224915981293
    2. 'curr' → logprob: -2.2064621448516846
    3. 'u' → logprob: -2.7064621448516846
    4. 'p' → logprob: -5.581462383270264
    5. 'node' → logprob: -5.831462383270264
    6. 'current' → logprob: -6.206462383270264
    7. 'cu' → logprob: -7.456462383270264
    8. 'w' → logprob: -8.706461906433105
    9. 'c' → logprob: -9.331461906433105
    10. 'v' → logprob: -9.831461906433105

Token 3588: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0067536174319684505
    2. ' =' → logprob: -5.006753444671631
    3. '=
' → logprob: -11.381753921508789
    4. '=p' → logprob: -11.381753921508789
    5. '=u' → logprob: -12.256753921508789
    6. '=user' → logprob: -12.631753921508789
    7. '=w' → logprob: -13.131753921508789
    8. '=current' → logprob: -13.756753921508789
    9. '=c' → logprob: -13.881753921508789
    10. '=_' → logprob: -14.006753921508789

Token 3589: 'goal' (ID: 47313)
  Prédit: 'goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -3.128163257315464e-07
    2. 'cur' → logprob: -16.5
    3. ' goal' → logprob: -16.5
    4. '(goal' → logprob: -17.5
    5. '```' → logprob: -22.25
    6. 'go' → logprob: -22.75
    7. '.goal' → logprob: -23.375
    8. '   ' → logprob: -23.5
    9. '`' → logprob: -23.625
    10. '_goal' → logprob: -24.375

Token 3590: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.07511082291603088
    2. '
' → logprob: -2.700110912322998
    3. ' while' → logprob: -5.575110912322998
    4. '```' → logprob: -6.700110912322998
    5. '  
' → logprob: -10.82511043548584
    6. ' 
' → logprob: -10.82511043548584
    7. '``' → logprob: -11.07511043548584
    8. '	while' → logprob: -11.32511043548584
    9. '        
' → logprob: -11.45011043548584
    10. '       ' → logprob: -11.45011043548584

Token 3591: '       ' (ID: 309)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.33813363313674927
    2. '```' → logprob: -1.7131335735321045
    3. '
' → logprob: -2.9631335735321045
    4. ' while' → logprob: -3.0881335735321045
    5. '       ' → logprob: -5.588133811950684
    6. '   ' → logprob: -6.088133811950684
    7. '``' → logprob: -6.213133811950684
    8. '	while' → logprob: -6.963133811950684
    9. '[
' → logprob: -9.338133811950684
    10. ' 
' → logprob: -9.963133811950684

Token 3592: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.00038825106457807124
    2. ' while' → logprob: -8.500388145446777
    3. '```' → logprob: -8.750388145446777
    4. '   ' → logprob: -11.125388145446777
    5. '	while' → logprob: -12.250388145446777
    6. '       ' → logprob: -13.000388145446777
    7. '``' → logprob: -13.125388145446777
    8. '
' → logprob: -13.500388145446777
    9. 'While' → logprob: -14.375388145446777
    10. 'path' → logprob: -14.500388145446777

Token 3593: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' → logprob: -1.4855663721391466e-05
    2. ' cur' → logprob: -11.250015258789062
    3. 'True' → logprob: -13.250015258789062
    4. '   ' → logprob: -18.625015258789062
    5. ' True' → logprob: -19.375015258789062
    6. 'prev' → logprob: -19.375015258789062
    7. '(cur' → logprob: -20.500015258789062
    8. 'path' → logprob: -20.750015258789062
    9. '	cur' → logprob: -21.625015258789062
    10. '  ' → logprob: -22.750015258789062

Token 3594: '!=' (ID: 11408)
  Prédit: '!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.04603653401136398
    2. 'in' → logprob: -3.2960364818573
    3. '=' → logprob: -6.046036720275879
    4. ' !=' → logprob: -6.171036720275879
    5. ' is' → logprob: -6.296036720275879
    6. ' in' → logprob: -6.796036720275879
    7. 'is' → logprob: -9.046036720275879
    8. '!='' → logprob: -9.171036720275879
    9. '!=-' → logprob: -9.421036720275879
    10. '!="' → logprob: -9.671036720275879

Token 3595: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.006006890442222357
    2. 'None' → logprob: -5.506006717681885
    3. 'prev' → logprob: -6.256006717681885
    4. ' start' → logprob: -12.131007194519043
    5. '
' → logprob: -14.131007194519043
    6. ' None' → logprob: -14.506007194519043
    7. '```' → logprob: -15.006007194519043
    8. '(start' → logprob: -15.631007194519043
    9. '-' → logprob: -15.756007194519043
    10. ' prev' → logprob: -16.631006240844727

Token 3596: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.02607082389295101
    2. ':' → logprob: -4.151070594787598
    3. '       ' → logprob: -5.401070594787598
    4. '           ' → logprob: -6.026070594787598
    5. '   ' → logprob: -7.026070594787598
    6. '```' → logprob: -7.401070594787598
    7. '):
' → logprob: -7.651070594787598
    8. '[cur' → logprob: -8.526070594787598
    9. '{
' → logprob: -8.651070594787598
    10. '=' → logprob: -8.651070594787598

Token 3597: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15483079850673676
    2. 'path' → logprob: -2.6548306941986084
    3. '   ' → logprob: -3.1548306941986084
    4. '```' → logprob: -3.7798306941986084
    5. '           ' → logprob: -5.2798309326171875
    6. 'cur' → logprob: -6.7798309326171875
    7. ' path' → logprob: -7.5298309326171875
    8. '
' → logprob: -7.9048309326171875
    9. '``' → logprob: -8.154830932617188
    10. '`' → logprob: -9.779830932617188

Token 3598: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -0.018280459567904472
    2. ' path' → logprob: -4.518280506134033
    3. '       ' → logprob: -5.768280506134033
    4. '   ' → logprob: -5.893280506134033
    5. 'cur' → logprob: -7.018280506134033
    6. '```' → logprob: -8.268280029296875
    7. '           ' → logprob: -8.893280029296875
    8. 'prev' → logprob: -11.393280029296875
    9. '	path' → logprob: -11.768280029296875
    10. '``' → logprob: -12.143280029296875

Token 3599: '.append' (ID: 3709)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002476724097505212
    2. ' =' → logprob: -6.002476692199707
    3. '.=' → logprob: -14.877476692199707
    4. '=p' → logprob: -16.127477645874023
    5. '＝' → logprob: -16.252477645874023
    6. '=`' → logprob: -16.627477645874023
    7. '=.' → logprob: -16.627477645874023
    8. '=
' → logprob: -16.752477645874023
    9. '=int' → logprob: -17.002477645874023
    10. '=[]' → logprob: -17.127477645874023

Token 3600: '(cur' (ID: 34723)
  Prédit: '(cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(cur' → logprob: -0.011048289015889168
    2. 'cur' → logprob: -4.511048316955566
    3. '(' → logprob: -15.136048316955566
    4. '[cur' → logprob: -16.13604736328125
    5. ' cur' → logprob: -16.26104736328125
    6. '((' → logprob: -18.26104736328125
    7. '(
' → logprob: -18.51104736328125
    8. '	cur' → logprob: -18.88604736328125
    9. ' (' → logprob: -19.26104736328125
    10. '(c' → logprob: -20.63604736328125

Token 3601: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004502634983509779
    2. '           ' → logprob: -5.879502773284912
    3. ')
' → logprob: -7.254502773284912
    4. ',' → logprob: -8.129502296447754
    5. '               ' → logprob: -8.379502296447754
    6. '       ' → logprob: -9.254502296447754
    7. '[' → logprob: -9.379502296447754
    8. '                   ' → logprob: -10.379502296447754
    9. '```' → logprob: -10.504502296447754
    10. '),' → logprob: -10.629502296447754

Token 3602: '           ' (ID: 352)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '```' → logprob: -0.5532594919204712
    2. '           ' → logprob: -1.0532594919204712
    3. '``' → logprob: -3.1782593727111816
    4. '
' → logprob: -4.428259372711182
    5. '       ' → logprob: -5.303259372711182
    6. '   ' → logprob: -5.303259372711182
    7. '`' → logprob: -5.803259372711182
    8. '[' → logprob: -6.303259372711182
    9. '`
' → logprob: -6.428259372711182
    10. '.append' → logprob: -6.803259372711182

Token 3603: ' cur' (ID: 4396)
  Prédit: 'cur'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cur' (adapté à ' cur') → logprob: -0.0002506111632101238
    2. '           ' → logprob: -9.000250816345215
    3. '	cur' → logprob: -9.750250816345215
    4. ' cur' → logprob: -10.250250816345215
    5. '   ' → logprob: -10.875250816345215
    6. '_cur' → logprob: -12.500250816345215
    7. '```' → logprob: -12.500250816345215
    8. '       ' → logprob: -12.875250816345215
    9. '[cur' → logprob: -12.875250816345215
    10. '               ' → logprob: -14.625250816345215

Token 3604: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00016027313540689647
    2. ' =' → logprob: -8.750160217285156
    3. '=
' → logprob: -14.750160217285156
    4. '=get' → logprob: -15.000160217285156
    5. '=user' → logprob: -15.125160217285156
    6. '=p' → logprob: -16.375160217285156
    7. '=A' → logprob: -16.625160217285156
    8. '=_' → logprob: -16.750160217285156
    9. '=sys' → logprob: -16.875160217285156
    10. '={}' → logprob: -16.875160217285156

Token 3605: 'prev' (ID: 15969)
  Prédit: 'prev'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prev' → logprob: -1.9361264946837764e-07
    2. ' prev' → logprob: -15.75
    3. '```' → logprob: -18.375
    4. '(prev' → logprob: -19.25
    5. '	prev' → logprob: -19.875
    6. 'previous' → logprob: -20.125
    7. 'pre' → logprob: -22.125
    8. '.prev' → logprob: -22.625
    9. '_prev' → logprob: -23.375
    10. 'Prev' → logprob: -23.5

Token 3606: '[cur' (ID: 81868)
  Prédit: '[cur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[cur' → logprob: -0.00046725376159884036
    2. 'cur' → logprob: -7.750467300415039
    3. '[' → logprob: -10.250467300415039
    4. '(cur' → logprob: -14.000467300415039
    5. '[
' → logprob: -15.250467300415039
    6. '```' → logprob: -16.75046730041504
    7. '	cur' → logprob: -16.87546730041504
    8. ' cur' → logprob: -17.00046730041504
    9. '[c' → logprob: -18.00046730041504
    10. ' [' → logprob: -18.87546730041504

Token 3607: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.021153196692466736
    2. ')' → logprob: -3.896153211593628
    3. '])' → logprob: -7.896152973175049
    4. '<|end|>' → logprob: -9.021153450012207
    5. ')]' → logprob: -10.396153450012207
    6. '[' → logprob: -10.521153450012207
    7. ']
' → logprob: -11.146153450012207
    8. ' ]' → logprob: -11.521153450012207
    9. ']+' → logprob: -11.896153450012207
    10. '][' → logprob: -12.021153450012207

Token 3608: '       ' (ID: 309)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.1385543942451477
    2. '``' → logprob: -2.388554334640503
    3. 'path' → logprob: -3.388554334640503
    4. '   ' → logprob: -7.013554573059082
    5. '[path' → logprob: -7.013554573059082
    6. '[
' → logprob: -7.513554573059082
    7. '
' → logprob: -7.763554573059082
    8. '`' → logprob: -8.013554573059082
    9. '`
' → logprob: -8.263554573059082
    10. '[' → logprob: -9.263554573059082

Token 3609: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -0.008823975920677185
    2. '```' → logprob: -4.758823871612549
    3. '``' → logprob: -8.633824348449707
    4. ' path' → logprob: -11.133824348449707
    5. '[path' → logprob: -11.758824348449707
    6. '
' → logprob: -12.883824348449707
    7. '(path' → logprob: -13.633824348449707
    8. '`' → logprob: -13.633824348449707
    9. '   ' → logprob: -14.133824348449707
    10. '[
' → logprob: -14.383824348449707

Token 3610: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.006719991099089384
    2. '.' → logprob: -5.006720066070557
    3. '.reverse' → logprob: -12.756719589233398
    4. '.app' → logprob: -13.631719589233398
    5. 'append' → logprob: -14.881719589233398
    6. ' .' → logprob: -16.2567195892334
    7. '​.' → logprob: -16.3817195892334
    8. 'Append' → logprob: -17.2567195892334
    9. '.ap' → logprob: -17.6317195892334
    10. '.Append' → logprob: -18.3817195892334

Token 3611: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.0019306590547785163
    2. 'start' → logprob: -6.2519307136535645
    3. '(' → logprob: -13.626930236816406
    4. '(
' → logprob: -14.501930236816406
    5. '[start' → logprob: -15.751930236816406
    6. ' start' → logprob: -17.251930236816406
    7. '```' → logprob: -18.001930236816406
    8. '(cur' → logprob: -18.376930236816406
    9. ',start' → logprob: -18.501930236816406
    10. '=start' → logprob: -18.626930236816406

Token 3612: ')
' (ID: 446)
  Prédit: '[::-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[::-' → logprob: -0.12489955872297287
    2. ')' → logprob: -2.4998996257781982
    3. '[' → logprob: -4.499899387359619
    4. '[
' → logprob: -4.749899387359619
    5. '.reverse' → logprob: -5.249899387359619
    6. '[cur' → logprob: -5.999899387359619
    7. '       ' → logprob: -6.124899387359619
    8. ')
' → logprob: -6.124899387359619
    9. '   ' → logprob: -6.749899387359619
    10. '```' → logprob: -7.249899387359619

Token 3613: '       ' (ID: 309)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.08267247676849365
    2. '```' → logprob: -2.957672595977783
    3. '       ' → logprob: -3.957672595977783
    4. '``' → logprob: -5.957672595977783
    5. '.reverse' → logprob: -6.457672595977783
    6. '   ' → logprob: -6.457672595977783
    7. '[::-' → logprob: -6.832672595977783
    8. ' path' → logprob: -7.707672595977783
    9. '[path' → logprob: -7.832672595977783
    10. '.path' → logprob: -9.332672119140625

Token 3614: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' (adapté à ' path') → logprob: -0.00010151672904612496
    2. '```' → logprob: -9.250101089477539
    3. '``' → logprob: -13.000101089477539
    4. ' path' → logprob: -13.625101089477539
    5. '   ' → logprob: -14.375101089477539
    6. '.reverse' → logprob: -14.750101089477539
    7. '`' → logprob: -15.125101089477539
    8. '
' → logprob: -15.250101089477539
    9. '.path' → logprob: -16.12510108947754
    10. '       ' → logprob: -16.12510108947754

Token 3615: '.reverse' (ID: 65426)
  Prédit: '.reverse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.reverse' → logprob: -0.0007798461592756212
    2. '=' → logprob: -7.250779628753662
    3. '[::-' → logprob: -10.25078010559082
    4. '.append' → logprob: -11.00078010559082
    5. '.' → logprob: -11.12578010559082
    6. 'reverse' → logprob: -13.75078010559082
    7. '=.' → logprob: -14.25078010559082
    8. ' =' → logprob: -14.50078010559082
    9. '```' → logprob: -15.50078010559082
    10. '.=' → logprob: -15.75078010559082

Token 3616: '()

' (ID: 5874)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19183316826820374
    2. 'print' → logprob: -1.9418331384658813
    3. 'for' → logprob: -4.316833019256592
    4. '<|end|>' → logprob: -4.691833019256592
    5. '```' → logprob: -5.066833019256592
    6. '#' → logprob: -6.816833019256592
    7. ' for' → logprob: -8.19183349609375
    8. '[' → logprob: -8.69183349609375
    9. '()' → logprob: -9.06683349609375
    10. '        
' → logprob: -9.19183349609375

Token 3617: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0055789100006222725
    2. 'print' → logprob: -5.255578994750977
    3. '```' → logprob: -8.505578994750977
    4. '   ' → logprob: -9.880578994750977
    5. 'if' → logprob: -10.630578994750977
    6. 'for' → logprob: -10.755578994750977
    7. '           ' → logprob: -11.005578994750977
    8. '        
' → logprob: -11.005578994750977
    9. '<|end|>' → logprob: -13.005578994750977
    10. '#' → logprob: -13.005578994750977

Token 3618: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5062431693077087
    2. '       ' → logprob: -1.3812432289123535
    3. 'for' → logprob: -2.0062432289123535
    4. 'if' → logprob: -4.7562432289123535
    5. 'length' → logprob: -6.6312432289123535
    6. '```' → logprob: -7.3812432289123535
    7. ' for' → logprob: -8.006242752075195
    8. 'count' → logprob: -8.756242752075195
    9. 'total' → logprob: -9.506242752075195
    10. '   ' → logprob: -9.881242752075195

Token 3619: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.007604970131069422
    2. 'for' → logprob: -5.382605075836182
    3. 'if' → logprob: -6.507605075836182
    4. 'length' → logprob: -7.882605075836182
    5. 'path' → logprob: -8.007604598999023
    6. '       ' → logprob: -9.132604598999023
    7. 'count' → logprob: -9.132604598999023
    8. 'total' → logprob: -9.132604598999023
    9. 'num' → logprob: -9.257604598999023
    10. '```' → logprob: -9.757604598999023

Token 3620: ' intersection' (ID: 42002)
  Prédit: '(len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0008197537390515208
    2. 'len' → logprob: -7.250819683074951
    3. '(*' → logprob: -9.37582015991211
    4. '('' → logprob: -11.87582015991211
    5. '(path' → logprob: -12.00082015991211
    6. '(' → logprob: -12.37582015991211
    7. '("' → logprob: -13.25082015991211
    8. '(f' → logprob: -13.25082015991211
    9. '('\' → logprob: -13.62582015991211
    10. '()' → logprob: -14.00082015991211

Token 3621: ' points' (ID: 5571)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.00956613477319479
    2. 's' → logprob: -4.884566307067871
    3. 'points' → logprob: -6.384566307067871
    4. 'len' → logprob: -8.509566307067871
    5. 'oints' → logprob: -10.759566307067871
    6. '(len' → logprob: -11.634566307067871
    7. ' points' → logprob: -11.634566307067871
    8. '```' → logprob: -12.134566307067871
    9. 'Points' → logprob: -12.259566307067871
    10. '_point' → logprob: -12.509566307067871

Token 3622: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03034079074859619
    2. 'inter' → logprob: -4.155340671539307
    3. 'print' → logprob: -4.905340671539307
    4. '(inter' → logprob: -6.155340671539307
    5. 'intersection' → logprob: -6.905340671539307
    6. 'len' → logprob: -7.655340671539307
    7. '       ' → logprob: -7.780340671539307
    8. ' for' → logprob: -7.780340671539307
    9. 'count' → logprob: -7.780340671539307
    10. '(len' → logprob: -7.905340671539307

Token 3623: ' path' (ID: 3104)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'se' → logprob: -1.3623002767562866
    2. 'one' → logprob: -1.4873002767562866
    3. 'a' → logprob: -1.6123002767562866
    4. 'the' → logprob: -2.362300395965576
    5. 'each' → logprob: -2.487300395965576
    6. 'path' → logprob: -2.737300395965576
    7. '"' → logprob: -4.112300395965576
    8. 'lines' → logprob: -4.112300395965576
    9. 'line' → logprob: -4.862300395965576
    10. 'len' → logprob: -5.112300395965576

Token 3624: ':
' (ID: 734)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0047602420672774315
    2. '       ' → logprob: -5.754760265350342
    3. 'print' → logprob: -6.879760265350342
    4. 'if' → logprob: -8.629759788513184
    5. ' for' → logprob: -9.004759788513184
    6. 'count' → logprob: -9.254759788513184
    7. 'i' → logprob: -9.379759788513184
    8. '```' → logprob: -10.254759788513184
    9. '``' → logprob: -11.754759788513184
    10. 'cnt' → logprob: -12.379759788513184

Token 3625: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003925349097698927
    2. '       ' → logprob: -5.753925323486328
    3. 'print' → logprob: -7.878925323486328
    4. '```' → logprob: -8.503925323486328
    5. ' for' → logprob: -8.878925323486328
    6. '   ' → logprob: -11.628925323486328
    7. '``' → logprob: -11.753925323486328
    8. 'if' → logprob: -12.378925323486328
    9. '           ' → logprob: -13.003925323486328
    10. 'count' → logprob: -13.128925323486328

Token 3626: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04592587426304817
    2. 'inter' → logprob: -3.4209258556365967
    3. 'print' → logprob: -5.545926094055176
    4. 'count' → logprob: -5.670926094055176
    5. 'ints' → logprob: -6.420926094055176
    6. 'ip' → logprob: -6.795926094055176
    7. 'intersection' → logprob: -7.045926094055176
    8. 'ips' → logprob: -7.545926094055176
    9. 'cnt' → logprob: -8.420926094055176
    10. 'int' → logprob: -8.795926094055176

Token 3627: ' street' (ID: 12901)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.10715409368276596
    2. 'inter' → logprob: -2.732154130935669
    3. 'print' → logprob: -3.732154130935669
    4. 'count' → logprob: -5.48215389251709
    5. 'ip' → logprob: -5.98215389251709
    6. 'ints' → logprob: -6.73215389251709
    7. 'filtered' → logprob: -7.10715389251709
    8. 'intersection' → logprob: -7.10715389251709
    9. 'street' → logprob: -7.23215389251709
    10. 'ips' → logprob: -7.73215389251709

Token 3628: ' intersection' (ID: 42002)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.8775464296340942
    2. '_segments' → logprob: -1.6275464296340942
    3. '_inter' → logprob: -1.7525464296340942
    4. '_st' → logprob: -3.0025463104248047
    5. 'for' → logprob: -3.3775463104248047
    6. '_nodes' → logprob: -3.8775463104248047
    7. '_only' → logprob: -4.127546310424805
    8. '
' → logprob: -4.752546310424805
    9. '   ' → logprob: -5.002546310424805
    10. '_' → logprob: -5.127546310424805

Token 3629: ' point' (ID: 2438)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5608856678009033
    2. 'inter' → logprob: -0.9358856678009033
    3. 'intersection' → logprob: -3.6858856678009033
    4. 'result' → logprob: -6.185885429382324
    5. ' for' → logprob: -6.560885429382324
    6. 'print' → logprob: -7.060885429382324
    7. 'output' → logprob: -7.060885429382324
    8. '       ' → logprob: -7.060885429382324
    9. 'filtered' → logprob: -7.185885429382324
    10. 'out' → logprob: -7.435885429382324

Token 3630: ':' (ID: 25)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08647239208221436
    2. 'inter' → logprob: -2.961472511291504
    3. 'print' → logprob: -4.586472511291504
    4. '       ' → logprob: -4.711472511291504
    5. ' for' → logprob: -5.711472511291504
    6. 'count' → logprob: -6.086472511291504
    7. '
' → logprob: -6.586472511291504
    8. 'intersection' → logprob: -6.586472511291504
    9. 'i' → logprob: -7.586472511291504
    10. 'idx' → logprob: -8.086472511291504

Token 3631: ' point' (ID: 2438)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009796975646167994
    2. 'inter' → logprob: -8.50097942352295
    3. 'print' → logprob: -8.75097942352295
    4. 'intersection' → logprob: -9.00097942352295
    5. '```' → logprob: -9.50097942352295
    6. ' for' → logprob: -9.50097942352295
    7. 'pts' → logprob: -9.62597942352295
    8. 'count' → logprob: -9.75097942352295
    9. '``' → logprob: -9.75097942352295
    10. '       ' → logprob: -9.75097942352295

Token 3632: ' where' (ID: 1919)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8143186569213867
    2. 's' → logprob: -1.3143186569213867
    3. ' =' → logprob: -2.3143186569213867
    4. 'for' → logprob: -2.6893186569213867
    5. 'in' → logprob: -3.4393186569213867
    6. '=' → logprob: -3.5643186569213867
    7. 'with' → logprob: -4.064318656921387
    8. ' in' → logprob: -4.189318656921387
    9. ' for' → logprob: -5.439318656921387
    10. '```' → logprob: -5.939318656921387

Token 3633: ' at' (ID: 540)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.0011822503292933106
    2. 'len' → logprob: -6.7511820793151855
    3. ' deg' → logprob: -11.876182556152344
    4. 'seg' → logprob: -13.626182556152344
    5. 'dist' → logprob: -13.751182556152344
    6. 'path' → logprob: -13.876182556152344
    7. 'intersection' → logprob: -14.001182556152344
    8. 'point' → logprob: -14.876182556152344
    9. '(len' → logprob: -15.376182556152344
    10. '(de' → logprob: -16.126182556152344

Token 3634: ' least' (ID: 5153)
  Prédit: 'which'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'which' → logprob: -0.14284268021583557
    2. 'least' → logprob: -2.5178427696228027
    3. 'len' → logprob: -3.0178427696228027
    4. 'intersection' → logprob: -6.142842769622803
    5. '#' → logprob: -7.642842769622803
    6. '
' → logprob: -7.892842769622803
    7. 'le' → logprob: -8.642842292785645
    8. 'length' → logprob: -9.517842292785645
    9. ' which' → logprob: -9.642842292785645
    10. '```' → logprob: -10.142842292785645

Token 3635: ' two' (ID: 1920)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0812329351902008
    2. 'least' → logprob: -2.581233024597168
    3. 'deg' → logprob: -6.331233024597168
    4. '2' → logprob: -8.831233024597168
    5. 'intersection' → logprob: -8.956233024597168
    6. 'le' → logprob: -9.081233024597168
    7. '   ' → logprob: -10.206233024597168
    8. '```' → logprob: -10.331233024597168
    9. ' least' → logprob: -10.831233024597168
    10. '       ' → logprob: -11.081233024597168

Token 3636: ' street' (ID: 12901)
  Prédit: 'segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'segments' → logprob: -1.1394248008728027
    2. 'edges' → logprob: -1.2644248008728027
    3. 'graph' → logprob: -2.1394248008728027
    4. 'street' → logprob: -2.2644248008728027
    5. ' edges' → logprob: -3.0144248008728027
    6. 'stre' → logprob: -3.5144248008728027
    7. 'se' → logprob: -3.7644248008728027
    8. 'neighbors' → logprob: -3.7644248008728027
    9. 'adj' → logprob: -3.8894248008728027
    10. ' segments' → logprob: -4.889424800872803

Token 3637: ' segments' (ID: 33749)
  Prédit: '_segments'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_segments' → logprob: -0.043652597814798355
    2. 's' → logprob: -3.2936525344848633
    3. 'segments' → logprob: -5.793652534484863
    4. '_edges' → logprob: -7.293652534484863
    5. '_connections' → logprob: -7.668652534484863
    6. '_' → logprob: -8.043652534484863
    7. '
' → logprob: -8.793652534484863
    8. '_neighbors' → logprob: -8.918652534484863
    9. '_points' → logprob: -9.043652534484863
    10. '```' → logprob: -9.293652534484863

Token 3638: ' meet' (ID: 4158)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025721058249473572
    2. 'inter' → logprob: -4.025721073150635
    3. 'count' → logprob: -5.650721073150635
    4. 'print' → logprob: -6.025721073150635
    5. '       ' → logprob: -8.025720596313477
    6. ' for' → logprob: -8.275720596313477
    7. 'cnt' → logprob: -8.400720596313477
    8. '
' → logprob: -8.775720596313477
    9. 'intersection' → logprob: -8.900720596313477
    10. 'pts' → logprob: -9.150720596313477

Token 3639: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23714403808116913
    2. 'count' → logprob: -2.3621439933776855
    3. 'inter' → logprob: -2.3621439933776855
    4. 'cnt' → logprob: -4.6121439933776855
    5. 'ip' → logprob: -5.7371439933776855
    6. 'intersection' → logprob: -6.1121439933776855
    7. '       ' → logprob: -6.3621439933776855
    8. 'print' → logprob: -6.7371439933776855
    9. 'out' → logprob: -7.3621439933776855
    10. 'output' → logprob: -7.3621439933776855

Token 3640: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007040601689368486
    2. '       ' → logprob: -5.507040500640869
    3. '```' → logprob: -6.507040500640869
    4. ' for' → logprob: -7.007040500640869
    5. '``' → logprob: -8.632040977478027
    6. 'count' → logprob: -9.132040977478027
    7. 'print' → logprob: -9.507040977478027
    8. 'inter' → logprob: -9.632040977478027
    9. 'i' → logprob: -9.882040977478027
    10. '           ' → logprob: -10.132040977478027

Token 3641: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.05983278527855873
    2. 'inter' → logprob: -3.184832811355591
    3. 'count' → logprob: -4.434832572937012
    4. '       ' → logprob: -6.184832572937012
    5. 'print' → logprob: -7.059832572937012
    6. 'intersection' → logprob: -7.559832572937012
    7. 'cnt' → logprob: -7.809832572937012
    8. 'last' → logprob: -9.059832572937012
    9. 'result' → logprob: -9.184832572937012
    10. ' for' → logprob: -9.559832572937012

Token 3642: ' these' (ID: 1879)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030027588829398155
    2. 'inter' → logprob: -4.155027389526367
    3. 'count' → logprob: -5.655027389526367
    4. 'result' → logprob: -6.030027389526367
    5. 'output' → logprob: -6.405027389526367
    6. 'res' → logprob: -6.530027389526367
    7. 'last' → logprob: -6.905027389526367
    8. 'filtered' → logprob: -6.905027389526367
    9. 'intersection' → logprob: -7.530027389526367
    10. 'out' → logprob: -7.905027389526367

Token 3643: ' are' (ID: 553)
  Prédit: 'points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'points' → logprob: -0.8606797456741333
    2. 'are' → logprob: -1.7356797456741333
    3. '_points' → logprob: -2.3606796264648438
    4. '=' → logprob: -2.4856796264648438
    5. ' =' → logprob: -2.7356796264648438
    6. 'on' → logprob: -3.3606796264648438
    7. 'for' → logprob: -3.6106796264648438
    8. 'inter' → logprob: -3.8606796264648438
    9. 'intersection' → logprob: -3.9856796264648438
    10. 'in' → logprob: -4.610679626464844

Token 3644: ' points' (ID: 5571)
  Prédit: '[p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[p' → logprob: -0.16177403926849365
    2. 'p' → logprob: -2.036774158477783
    3. 'intersection' → logprob: -4.911774158477783
    4. '[' → logprob: -5.786774158477783
    5. '[i' → logprob: -6.161774158477783
    6. '[]
' → logprob: -6.661774158477783
    7. '[x' → logprob: -6.786774158477783
    8. '[v' → logprob: -7.036774158477783
    9. '[node' → logprob: -7.911774158477783
    10. 'inter' → logprob: -8.161773681640625

Token 3645: ' with' (ID: 483)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.42105647921562195
    2. 'in' → logprob: -2.2960565090179443
    3. 'for' → logprob: -2.9210565090179443
    4. 'that' → logprob: -3.0460565090179443
    5. '=' → logprob: -3.1710565090179443
    6. 'on' → logprob: -3.2960565090179443
    7. ' =' → logprob: -3.4210565090179443
    8. 'if' → logprob: -4.046056270599365
    9. 'p' → logprob: -5.546056270599365
    10. '
' → logprob: -6.671056270599365

Token 3646: ' degree' (ID: 9882)
  Prédit: 'deg'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'deg' → logprob: -0.0008571469807066023
    2. 'len' → logprob: -7.250857353210449
    3. ' deg' → logprob: -8.87585735321045
    4. 'degree' → logprob: -12.12585735321045
    5. 'intersection' → logprob: -14.00085735321045
    6. 'dist' → logprob: -14.25085735321045
    7. ' len' → logprob: -14.87585735321045
    8. 'degrees' → logprob: -17.000856399536133
    9. 'inter' → logprob: -17.625856399536133
    10. '   ' → logprob: -17.750856399536133

Token 3647: ' >=' (ID: 5064)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.004398074932396412
    2. '≥' → logprob: -6.379397869110107
    3. ' >=' → logprob: -6.504397869110107
    4. '>' → logprob: -8.129398345947266
    5. '=' → logprob: -8.504398345947266
    6. ']>=' → logprob: -8.879398345947266
    7. ')>=' → logprob: -9.379398345947266
    8. '[' → logprob: -9.379398345947266
    9. '```' → logprob: -10.004398345947266
    10. '#' → logprob: -10.129398345947266

Token 3648: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. '```' → logprob: -14.250001907348633
    3. ' ' → logprob: -14.375001907348633
    4. '   ' → logprob: -16.750001907348633
    5. '
' → logprob: -16.750001907348633
    6. '{
' → logprob: -17.875001907348633
    7. '=' → logprob: -18.375001907348633
    8. '[' → logprob: -18.562501907348633
    9. '{' → logprob: -18.812501907348633
    10. '>' → logprob: -19.125001907348633

Token 3649: ' in' (ID: 306)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7764027118682861
    2. 'inter' → logprob: -1.2764027118682861
    3. 'count' → logprob: -1.6514027118682861
    4. 'print' → logprob: -3.651402711868286
    5. '       ' → logprob: -4.026402473449707
    6. 'cnt' → logprob: -4.526402473449707
    7. 'intersection' → logprob: -5.026402473449707
    8. 'prev' → logprob: -7.276402473449707
    9. 'street' → logprob: -7.401402473449707
    10. '```' → logprob: -7.401402473449707

Token 3650: ' street' (ID: 12901)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -0.3223165273666382
    2. 'street' → logprob: -1.5723165273666382
    3. 'graph' → logprob: -2.6973166465759277
    4. 'stre' → logprob: -8.44731616973877
    5. 'path' → logprob: -8.94731616973877
    6. 'deg' → logprob: -9.82231616973877
    7. '#' → logprob: -10.32231616973877
    8. ' street' → logprob: -10.44731616973877
    9. ' intersection' → logprob: -10.57231616973877
    10. 'inter' → logprob: -10.94731616973877

Token 3651: ' graph' (ID: 7465)
  Prédit: '_points'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_points' → logprob: -0.9522934556007385
    2. 'for' → logprob: -1.0772933959960938
    3. '_segments' → logprob: -1.9522933959960938
    4. 'points' → logprob: -3.2022933959960938
    5. 'graph' → logprob: -3.8272933959960938
    6. 'segments' → logprob: -3.9522933959960938
    7. '       ' → logprob: -4.327293395996094
    8. 'intersection' → logprob: -4.827293395996094
    9. '```' → logprob: -5.077293395996094
    10. '``' → logprob: -5.452293395996094

Token 3652: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.25666701793670654
    2. 'inter' → logprob: -2.006667137145996
    3. 'count' → logprob: -3.131667137145996
    4. 'print' → logprob: -3.506667137145996
    5. '       ' → logprob: -4.506667137145996
    6. 'intersection' → logprob: -5.881667137145996
    7. 'cnt' → logprob: -6.256667137145996
    8. '```' → logprob: -7.881667137145996
    9. '``' → logprob: -8.131667137145996
    10. 'street' → logprob: -8.631667137145996

Token 3653: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008721763268113136
    2. '       ' → logprob: -5.383721828460693
    3. 'print' → logprob: -6.258721828460693
    4. 'count' → logprob: -6.258721828460693
    5. 'i' → logprob: -9.258721351623535
    6. 'inter' → logprob: -10.133721351623535
    7. ' for' → logprob: -10.758721351623535
    8. 'prev' → logprob: -11.008721351623535
    9. '```' → logprob: -11.133721351623535
    10. 'idx' → logprob: -11.258721351623535

Token 3654: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.008614103309810162
    2. 'inter' → logprob: -5.5086140632629395
    3. 'count' → logprob: -6.6336140632629395
    4. '       ' → logprob: -7.2586140632629395
    5. 'print' → logprob: -7.5086140632629395
    6. 'output' → logprob: -7.8836140632629395
    7. 'out' → logprob: -7.8836140632629395
    8. 'visited' → logprob: -8.508614540100098
    9. 'idx' → logprob: -8.883614540100098
    10. 'i' → logprob: -9.008614540100098

Token 3655: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.0004966750275343657
    2. 'pt' → logprob: -7.750496864318848
    3. ' p' → logprob: -9.750496864318848
    4. '   ' → logprob: -12.375496864318848
    5. 'point' → logprob: -13.125496864318848
    6. 'v' → logprob: -14.375496864318848
    7. 'node' → logprob: -14.625496864318848
    8. 'i' → logprob: -15.000496864318848
    9. ' pt' → logprob: -16.12549591064453
    10. ' ' → logprob: -17.62549591064453

Token 3656: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07893826067447662
    2. 'in' → logprob: -2.5789382457733154
    3. '_in' → logprob: -11.328938484191895
    4. ' ' → logprob: -11.828938484191895
    5. '   ' → logprob: -12.203938484191895
    6. 'if' → logprob: -12.453938484191895
    7. 'i' → logprob: -12.453938484191895
    8. 'n' → logprob: -12.578938484191895
    9. '	in' → logprob: -13.453938484191895
    10. 'p' → logprob: -13.578938484191895

Token 3657: ' path' (ID: 3104)
  Prédit: 'path'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'path' → logprob: -0.00022928470571059734
    2. ' path' → logprob: -8.750228881835938
    3. 'intersection' → logprob: -9.625228881835938
    4. '[path' → logprob: -13.750228881835938
    5. '   ' → logprob: -14.125228881835938
    6. '(path' → logprob: -14.125228881835938
    7. '[' → logprob: -14.375228881835938
    8. 'graph' → logprob: -14.875228881835938
    9. 'inter' → logprob: -15.125228881835938
    10. 'pat' → logprob: -15.250228881835938

Token 3658: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4350537657737732
    2. ':' → logprob: -1.935053825378418
    3. '       ' → logprob: -1.935053825378418
    4. 'if' → logprob: -4.060053825378418
    5. ' if' → logprob: -4.310053825378418
    6. '               ' → logprob: -4.560053825378418
    7. '   ' → logprob: -4.685053825378418
    8. ':
' → logprob: -5.810053825378418
    9. '	       ' → logprob: -5.810053825378418
    10. '<|end|>' → logprob: -6.060053825378418

Token 3659: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01954812929034233
    2. '   ' → logprob: -4.019547939300537
    3. '	       ' → logprob: -7.269547939300537
    4. '       ' → logprob: -8.019548416137695
    5. 'if' → logprob: -8.644548416137695
    6. ' if' → logprob: -9.144548416137695
    7. '               ' → logprob: -10.644548416137695
    8. '```' → logprob: -10.644548416137695
    9. '	   ' → logprob: -11.269548416137695
    10. 'print' → logprob: -11.269548416137695

Token 3660: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03411298990249634
    2. 'print' → logprob: -3.5341129302978516
    3. '           ' → logprob: -5.784112930297852
    4. ' if' → logprob: -7.159112930297852
    5. '   ' → logprob: -8.034112930297852
    6. '       ' → logprob: -8.784112930297852
    7. '               ' → logprob: -11.784112930297852
    8. '	if' → logprob: -11.909112930297852
    9. '```' → logprob: -12.159112930297852
    10. ' print' → logprob: -13.534112930297852

Token 3661: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.18876482546329498
    2. ' p' → logprob: -1.8137648105621338
    3. 'deg' → logprob: -4.938765048980713
    4. ' deg' → logprob: -6.313765048980713
    5. '   ' → logprob: -13.188764572143555
    6. ' ' → logprob: -14.813764572143555
    7. '_deg' → logprob: -14.938764572143555
    8. 'de' → logprob: -15.063764572143555
    9. '(p' → logprob: -15.063764572143555
    10. 'd' → logprob: -15.313764572143555

Token 3662: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.7657773494720459
    2. ' in' → logprob: -0.8907773494720459
    3. '[' → logprob: -2.140777349472046
    4. ' not' → logprob: -5.765777587890625
    5. 'not' → logprob: -6.390777587890625
    6. ')' → logprob: -7.640777587890625
    7. ' ' → logprob: -7.890777587890625
    8. '
' → logprob: -8.015777587890625
    9. '!=' → logprob: -8.765777587890625
    10. '```' → logprob: -9.015777587890625

Token 3663: ' intersection' (ID: 42002)
  Prédit: 'intersection'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'intersection' → logprob: -7.3458322731312364e-06
    2. ' intersection' → logprob: -11.875007629394531
    3. '   ' → logprob: -15.125007629394531
    4. 'interaction' → logprob: -17.62500762939453
    5. '
' → logprob: -18.00000762939453
    6. ' ' → logprob: -18.37500762939453
    7. '       ' → logprob: -18.87500762939453
    8. '           ' → logprob: -19.25000762939453
    9. '```' → logprob: -19.25000762939453
    10. '  ' → logprob: -20.25000762939453

Token 3664: '_points' (ID: 30070)
  Prédit: '_points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_points' → logprob: -9.729906196298543e-06
    2. 's' → logprob: -12.500009536743164
    3. '_p' → logprob: -13.125009536743164
    4. '_' → logprob: -13.500009536743164
    5. '
' → logprob: -13.625009536743164
    6. '_
' → logprob: -13.875009536743164
    7. ' _' → logprob: -16.250009536743164
    8. '_positions' → logprob: -17.250009536743164
    9. '_pts' → logprob: -17.625009536743164
    10. '```' → logprob: -17.625009536743164

Token 3665: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4487236738204956
    2. ':' → logprob: -1.0737236738204956
    3. '           ' → logprob: -4.573723793029785
    4. '               ' → logprob: -5.323723793029785
    5. ' and' → logprob: -5.573723793029785
    6. '):
' → logprob: -8.448723793029785
    7. 'and' → logprob: -8.448723793029785
    8. '():
' → logprob: -8.948723793029785
    9. ',' → logprob: -9.823723793029785
    10. '       ' → logprob: -10.073723793029785

Token 3666: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0020799553021788597
    2. 'print' → logprob: -6.377079963684082
    3. '           ' → logprob: -8.627079963684082
    4. ' print' → logprob: -9.502079963684082
    5. '   ' → logprob: -10.252079963684082
    6. '	           ' → logprob: -10.377079963684082
    7. '```' → logprob: -10.502079963684082
    8. '                   ' → logprob: -11.377079963684082
    9. '       ' → logprob: -12.127079963684082
    10. '	       ' → logprob: -12.627079963684082

Token 3667: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00690990686416626
    2. '               ' → logprob: -5.2569098472595215
    3. ' print' → logprob: -6.5069098472595215
    4. '           ' → logprob: -9.25691032409668
    5. '```' → logprob: -9.50691032409668
    6. '	print' → logprob: -12.38191032409668
    7. '   ' → logprob: -12.75691032409668
    8. '                   ' → logprob: -13.13191032409668
    9. '	           ' → logprob: -14.38191032409668
    10. '``' → logprob: -14.88191032409668

Token 3668: '(p' (ID: 2407)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.2075926810503006
    2. '(p' → logprob: -1.7075927257537842
    3. ' p' → logprob: -6.207592487335205
    4. '(' → logprob: -6.207592487335205
    5. '(*' → logprob: -6.582592487335205
    6. ''' → logprob: -8.582592964172363
    7. '('' → logprob: -8.957592964172363
    8. 'f' → logprob: -9.332592964172363
    9. '*p' → logprob: -9.457592964172363
    10. '(f' → logprob: -9.582592964172363

Token 3669: '[' (ID: 58)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003667175769805908
    2. ',' → logprob: -6.12866735458374
    3. ')
' → logprob: -6.87866735458374
    4. ',end' → logprob: -8.378666877746582
    5. '[' → logprob: -9.003666877746582
    6. ',)' → logprob: -10.128666877746582
    7. ' )' → logprob: -11.378666877746582
    8. ');' → logprob: -11.753666877746582
    9. '),' → logprob: -12.003666877746582
    10. ',
' → logprob: -12.128666877746582

Token 3670: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -13.875003814697266
    3. '[' → logprob: -14.125003814697266
    4. '
' → logprob: -14.750003814697266
    5. ')' → logprob: -14.875003814697266
    6. '   ' → logprob: -15.250003814697266
    7. '])' → logprob: -15.750003814697266
    8. '1' → logprob: -16.250003814697266
    9. '),' → logprob: -16.375003814697266
    10. ')]' → logprob: -16.625003814697266

Token 3671: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0552922785282135
    2. ',p' → logprob: -3.3052923679351807
    3. ',end' → logprob: -4.180292129516602
    4. ')' → logprob: -7.055292129516602
    5. ' ,' → logprob: -7.180292129516602
    6. ',",' → logprob: -9.555292129516602
    7. ','' → logprob: -9.930292129516602
    8. ',
' → logprob: -11.055292129516602
    9. ',"' → logprob: -11.180292129516602
    10. ',)' → logprob: -11.430292129516602

Token 3672: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -9.698698704596609e-05
    2. ' p' → logprob: -9.250097274780273
    3. ''' → logprob: -14.500097274780273
    4. ''p' → logprob: -15.125097274780273
    5. '"' → logprob: -17.625097274780273
    6. '(p' → logprob: -20.250097274780273
    7. ')p' → logprob: -20.250097274780273
    8. ' 
' → logprob: -20.250097274780273
    9. '_p' → logprob: -21.125097274780273
    10. ')' → logprob: -21.500097274780273

Token 3673: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.47922614216804504
    2. ')' → logprob: -0.9792261123657227
    3. '1' → logprob: -5.604226112365723
    4. ',' → logprob: -6.854226112365723
    5. ')
' → logprob: -8.979226112365723
    6. '),' → logprob: -9.229226112365723
    7. ')[' → logprob: -9.979226112365723
    8. '0' → logprob: -10.854226112365723
    9. ')]' → logprob: -10.979226112365723
    10. ')p' → logprob: -11.229226112365723

Token 3674: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.875
    3. '
' → logprob: -18.875
    4. '```' → logprob: -19.25
    5. 'p' → logprob: -19.5
    6. '0' → logprob: -20.125
    7. ')' → logprob: -20.125
    8. '[' → logprob: -20.25
    9. '   ' → logprob: -21.25
    10. ']' → logprob: -21.625

Token 3675: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003368926409166306
    2. ')
' → logprob: -8.000336647033691
    3. '<|end|>' → logprob: -15.000336647033691
    4. '))' → logprob: -16.000337600708008
    5. ' )' → logprob: -16.000337600708008
    6. ')
' → logprob: -16.125337600708008
    7. '       ' → logprob: -16.375337600708008
    8. ')}' → logprob: -16.500337600708008
    9. ')return' → logprob: -16.500337600708008
    10. ')#' → logprob: -16.500337600708008

Token 3676: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3677: ' print' (ID: 2123)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3678: '(' (ID: 7)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.77627644513268e-06
    2. '("")' → logprob: -12.375008583068848
    3. '(' → logprob: -13.125008583068848
    4. '()
' → logprob: -13.500008583068848
    5. '('' → logprob: -14.125008583068848
    6. ' ()' → logprob: -15.125008583068848
    7. '()\' → logprob: -15.750008583068848
    8. '()<' → logprob: -18.250009536743164
    9. '()}' → logprob: -18.375009536743164
    10. '())' → logprob: -18.375009536743164

Token 3679: '0' (ID: 15)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.043585266917943954
    2. 'len' → logprob: -3.4185853004455566
    3. '0' → logprob: -5.293585300445557
    4. '")' → logprob: -5.793585300445557
    5. '"' → logprob: -7.043585300445557
    6. '""' → logprob: -7.793585300445557
    7. '')' → logprob: -8.168584823608398
    8. '''' → logprob: -8.918584823608398
    9. ''' → logprob: -9.793584823608398
    10. ')")' → logprob: -11.168584823608398

Token 3680: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.01459815539419651
    2. '<|end|>' → logprob: -4.264598369598389
    3. '
' → logprob: -8.38959789276123
    4. '<|end|>' → logprob: -9.51459789276123
    5. ')return' → logprob: -10.38959789276123
    6. '#' → logprob: -10.63959789276123
    7. ' )' → logprob: -11.26459789276123
    8. '   ' → logprob: -11.63959789276123
    9. '')' → logprob: -11.76459789276123
    10. '0' → logprob: -11.76459789276123

Token 3681: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 3682: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.18072718381881714
    2. '__' → logprob: -1.805727243423462
    3. '_' → logprob: -7.055727005004883
    4. ' _' → logprob: -10.680727005004883
    5. '__
' → logprob: -10.930727005004883
    6. '____' → logprob: -11.305727005004883
    7. '___' → logprob: -11.430727005004883
    8. '```' → logprob: -11.430727005004883
    9. ' ' → logprob: -11.555727005004883
    10. 'if' → logprob: -11.680727005004883

Token 3683: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.05086441710591316
    2. '==' → logprob: -3.3008644580841064
    3. ' ==' → logprob: -5.050864219665527
    4. '__.__' → logprob: -5.925864219665527
    5. '.__' → logprob: -7.300864219665527
    6. '```' → logprob: -7.425864219665527
    7. '=="' → logprob: -7.550864219665527
    8. '__.' → logprob: -7.675864219665527
    9. '=='' → logprob: -7.800864219665527
    10. '_' → logprob: -8.800864219665527

Token 3684: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0012423748848959804
    2. '__.__' → logprob: -7.126242160797119
    3. '==' → logprob: -9.126242637634277
    4. '__.' → logprob: -9.626242637634277
    5. '```' → logprob: -9.876242637634277
    6. '__('' → logprob: -10.126242637634277
    7. '__":
' → logprob: -10.376242637634277
    8. '__["' → logprob: -10.501242637634277
    9. '__':
' → logprob: -11.001242637634277
    10. '__[' → logprob: -11.126242637634277

Token 3685: '=="' (ID: 24027)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.16601680219173431
    2. '==' → logprob: -2.0410168170928955
    3. ' ==' → logprob: -4.416016578674316
    4. '=="' → logprob: -4.916016578674316
    5. '=='' → logprob: -5.916016578674316
    6. '__.__' → logprob: -7.791016578674316
    7. '_' → logprob: -8.666016578674316
    8. '```' → logprob: -9.416016578674316
    9. '.__' → logprob: -9.666016578674316
    10. '==
' → logprob: -10.416016578674316

Token 3686: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.08383746445178986
    2. ''' → logprob: -2.8338375091552734
    3. '"' → logprob: -3.8338375091552734
    4. ' __' → logprob: -12.958837509155273
    5. ' "__' → logprob: -13.333837509155273
    6. '___' → logprob: -14.458837509155273
    7. '__
' → logprob: -14.833837509155273
    8. '```' → logprob: -15.208837509155273
    9. ' '__' → logprob: -15.333837509155273
    10. 'main' → logprob: -15.333837509155273

Token 3687: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0008924020221456885
    2. 'name' → logprob: -7.500892639160156
    3. '__' → logprob: -8.000892639160156
    4. '_main' → logprob: -12.500892639160156
    5. '```' → logprob: -15.625892639160156
    6. '"' → logprob: -15.875892639160156
    7. ' main' → logprob: -16.250892639160156
    8. '___' → logprob: -17.375892639160156
    9. '_MAIN' → logprob: -17.750892639160156
    10. 'built' → logprob: -17.875892639160156

Token 3688: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.05739845335483551
    2. '__' → logprob: -2.932398557662964
    3. '__':
' → logprob: -6.557398319244385
    4. '():
' → logprob: -7.057398319244385
    5. ':' → logprob: -9.557398796081543
    6. '__:' → logprob: -9.807398796081543
    7. ':
' → logprob: -10.432398796081543
    8. '==' → logprob: -10.557398796081543
    9. '__["' → logprob: -11.307398796081543
    10. '.py' → logprob: -12.307398796081543

Token 3689: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.8783242702484131
    2. '   ' → logprob: -1.128324270248413
    3. '	main' → logprob: -1.378324270248413
    4. ' main' → logprob: -5.128324508666992
    5. '    
' → logprob: -6.128324508666992
    6. '
' → logprob: -7.753324508666992
    7. '```' → logprob: -8.753324508666992
    8. '(main' → logprob: -9.003324508666992
    9. '_main' → logprob: -9.628324508666992
    10. '	
' → logprob: -11.628324508666992

Token 3690: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.4021237802808173e-05
    2. ' main' → logprob: -11.625014305114746
    3. '	main' → logprob: -12.375014305114746
    4. '   ' → logprob: -14.500014305114746
    5. '```' → logprob: -15.125014305114746
    6. '(main' → logprob: -16.87501335144043
    7. '_main' → logprob: -17.12501335144043
    8. '`' → logprob: -18.62501335144043
    9. 'Main' → logprob: -19.37501335144043
    10. '``' → logprob: -19.50001335144043

Token 3691: '()' (ID: 416)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5632078051567078
    2. '<|end|>' → logprob: -1.0632078647613525
    3. '```' → logprob: -3.4382078647613525
    4. '
' → logprob: -4.438207626342773
    5. ':' → logprob: -4.563207626342773
    6. '#' → logprob: -4.688207626342773
    7. '\n' → logprob: -5.188207626342773
    8. '   ' → logprob: -5.438207626342773
    9. '<|end|>' → logprob: -5.688207626342773
    10. '(' → logprob: -6.563207626342773


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 3689
Tokens correctement prédits (1ère position, stricte): 1149
Tokens correctement prédits (1ère position, avec adaptation): 1238
Tokens correctement prédits (top 10): 2486
Précision stricte (1ère position): 31.15%
Précision adaptée (1ère position): 33.56%
Précision (top 10): 67.39%
================================================================================
