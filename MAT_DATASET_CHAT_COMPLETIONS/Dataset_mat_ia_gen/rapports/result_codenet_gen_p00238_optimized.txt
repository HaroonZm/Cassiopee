================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:12:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    t = int(input())
    if t == 0:
        break
    n = int(input())
    total = 0
    for _ in range(n):
        s, f = map(int, input().split())
        total += f - s
    print("OK" if total >= t else t - total)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11692515015602112
    2. '\n' → logprob: -3.6169252395629883
    3. '    ' → logprob: -4.241925239562988
    4. ' ' → logprob: -4.241925239562988
    5. '    
' → logprob: -4.366925239562988
    6. ' 
' → logprob: -4.491925239562988
    7. '\' → logprob: -4.616925239562988
    8. ':' → logprob: -5.366925239562988
    9. '```' → logprob: -5.616925239562988
    10. '<|end|>' → logprob: -5.741925239562988

Token 4: ' t' (ID: 260)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26164835691452026
    2. '    ' → logprob: -1.761648416519165
    3. ' ' → logprob: -3.761648416519165
    4. '```' → logprob: -3.886648416519165
    5. '    
' → logprob: -5.511648178100586
    6. '       ' → logprob: -6.386648178100586
    7. '  ' → logprob: -6.386648178100586
    8. 'pass' → logprob: -6.761648178100586
    9. ' pass' → logprob: -6.761648178100586
    10. ' 
' → logprob: -7.386648178100586

Token 5: ' =' (ID: 314)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0871671736240387
    2. 'ime' → logprob: -3.712167263031006
    3. 'i' → logprob: -4.462167263031006
    4. '=' → logprob: -4.587167263031006
    5. 'h' → logprob: -4.712167263031006
    6. 'e' → logprob: -4.837167263031006
    7. ':' → logprob: -4.962167263031006
    8. '   ' → logprob: -6.212167263031006
    9. 'ry' → logprob: -6.337167263031006
    10. 'u' → logprob: -6.337167263031006

Token 6: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.35830628871917725
    2. 'input' → logprob: -1.4833062887191772
    3. ' int' → logprob: -3.108306407928467
    4. 'int' → logprob: -4.358306407928467
    5. ' time' → logprob: -4.483306407928467
    6. 'time' → logprob: -5.858306407928467
    7. 't' → logprob: -8.608305931091309
    8. 'get' → logprob: -8.608305931091309
    9. ' get' → logprob: -8.608305931091309
    10. 's' → logprob: -8.733305931091309

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.474122554063797
    2. '(input' → logprob: -0.9741225242614746
    3. '(
' → logprob: -10.474123001098633
    4. 'input' → logprob: -11.849123001098633
    5. '(t' → logprob: -13.099123001098633
    6. '('' → logprob: -13.724123001098633
    7. '()' → logprob: -13.849123001098633
    8. '(

' → logprob: -14.224123001098633
    9. '(open' → logprob: -14.349123001098633
    10. '(user' → logprob: -14.349123001098633

Token 8: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1453963816165924
    2. ')' → logprob: -2.1453964710235596
    3. '()' → logprob: -4.3953962326049805
    4. '())' → logprob: -6.0203962326049805
    5. '))' → logprob: -6.6453962326049805
    6. '('' → logprob: -7.0203962326049805
    7. '(
' → logprob: -8.52039623260498
    8. '("("' → logprob: -8.52039623260498
    9. ' ' → logprob: -8.64539623260498
    10. ' )' → logprob: -9.14539623260498

Token 9: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.3351643085479736
    2. '   ' → logprob: -1.4601643085479736
    3. ' if' → logprob: -1.7101643085479736
    4. '<|end|>' → logprob: -1.7101643085479736
    5. ')' → logprob: -2.9601643085479736
    6. '    ' → logprob: -3.4601643085479736
    7. ':' → logprob: -3.4601643085479736
    8. '  ' → logprob: -4.7101640701293945
    9. '\n' → logprob: -5.8351640701293945
    10. ' 
' → logprob: -6.3351640701293945

Token 10: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1235954761505127
    2. '   ' → logprob: -1.3735954761505127
    3. ' ' → logprob: -1.8735954761505127
    4. ')' → logprob: -2.4985954761505127
    5. '<|end|>' → logprob: -2.9985954761505127
    6. '    ' → logprob: -3.1235954761505127
    7. 'if' (adapté à ' if') → logprob: -3.7485954761505127
    8. ':' → logprob: -4.373595237731934
    9. '\' → logprob: -4.623595237731934
    10. '  ' → logprob: -4.748595237731934

Token 11: ' t' (ID: 260)
  Prédit: ' t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.0030872784554958344
    2. ' ' → logprob: -6.128087043762207
    3. ' not' → logprob: -7.378087043762207
    4. 't' → logprob: -8.253087043762207
    5. ' ' → logprob: -11.128087043762207
    6. 'not' → logprob: -14.003087043762207
    7. ' (' → logprob: -15.253087043762207
    8. '<|end|>' → logprob: -16.003087997436523
    9. ' т' → logprob: -16.128087997436523
    10. '  ' → logprob: -16.253087997436523

Token 12: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.9533630013465881
    2. ' >' → logprob: -0.9533630013465881
    3. ' <' → logprob: -2.0783629417419434
    4. ' <=' → logprob: -2.8283629417419434
    5. ' ' → logprob: -4.328362941741943
    6. '>' → logprob: -4.578362941741943
    7. ' >=' → logprob: -4.578362941741943
    8. '==' → logprob: -5.578362941741943
    9. '<' → logprob: -6.078362941741943
    10. '  ' → logprob: -6.328362941741943

Token 13: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2519893944263458
    2. ' ' → logprob: -1.5019893646240234
    3. '1' → logprob: -9.876989364624023
    4. '-' → logprob: -13.876989364624023
    5. ' -' → logprob: -13.876989364624023
    6. '10' → logprob: -14.001989364624023
    7. '4' → logprob: -14.439489364624023
    8. '7' → logprob: -14.501989364624023
    9. '9' → logprob: -14.751989364624023
    10. '100' → logprob: -14.939489364624023

Token 14: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006950391689315438
    2. ' ' → logprob: -7.50069522857666
    3. '-' → logprob: -9.12569522857666
    4. '1' → logprob: -10.75069522857666
    5. '42' → logprob: -13.00069522857666
    6. '7' → logprob: -13.62569522857666
    7. '4' → logprob: -13.75069522857666
    8. ' -' → logprob: -13.75069522857666
    9. '5' → logprob: -14.00069522857666
    10. '3' → logprob: -14.37569522857666

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004428243264555931
    2. ':
' → logprob: -7.750442981719971
    3. '       ' → logprob: -12.125442504882812
    4. '   ' → logprob: -12.375442504882812
    5. ' :' → logprob: -13.250442504882812
    6. ' break' → logprob: -15.375442504882812
    7. ':\' → logprob: -15.875442504882812
    8. ':return' → logprob: -16.125442504882812
    9. '    ' → logprob: -16.750442504882812
    10. '	break' → logprob: -17.000442504882812

Token 16: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0031408779323101044
    2. '   ' → logprob: -6.128140926361084
    3. ' break' → logprob: -7.128140926361084
    4. ':' → logprob: -10.128140449523926
    5. '\n' → logprob: -10.253140449523926
    6. '	break' → logprob: -10.503140449523926
    7. '\t' → logprob: -11.378140449523926
    8. '    ' → logprob: -11.628140449523926
    9. '     ' → logprob: -11.753140449523926
    10. '      ' → logprob: -12.003140449523926

Token 17: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39600616693496704
    2. ' break' → logprob: -1.1460061073303223
    3. '\n' → logprob: -5.396006107330322
    4. '   ' → logprob: -6.021006107330322
    5. '	break' → logprob: -7.146006107330322
    6. 'break' (adapté à ' break') → logprob: -7.146006107330322
    7. '    ' → logprob: -9.14600658416748
    8. ' \' → logprob: -9.39600658416748
    9. '\t' → logprob: -9.77100658416748
    10. ' ' → logprob: -9.89600658416748

Token 18: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004161502700299025
    2. '    
' → logprob: -6.379161357879639
    3. ')' → logprob: -7.254161357879639
    4. ' ' → logprob: -7.879161357879639
    5. 'print' → logprob: -8.004161834716797
    6. '\n' → logprob: -8.254161834716797
    7. '<|end|>' → logprob: -8.879161834716797
    8. '#' → logprob: -9.129161834716797
    9. '    ' → logprob: -9.129161834716797
    10. '\' → logprob: -9.879161834716797

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01495604868978262
    2. '    
' → logprob: -4.514955997467041
    3. '<|end|>' → logprob: -6.264955997467041
    4. 'print' → logprob: -7.514955997467041
    5. ')' → logprob: -7.764955997467041
    6. '
' → logprob: -8.3899564743042
    7. '```' → logprob: -8.6399564743042
    8. '\n' → logprob: -9.1399564743042
    9. 'n' → logprob: -9.1399564743042
    10. '<|end|>' → logprob: -9.6399564743042

Token 20: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2541353404521942
    2. 'n' (adapté à ' n') → logprob: -1.7541353702545166
    3. 's' → logprob: -4.5041351318359375
    4. ' n' → logprob: -4.6291351318359375
    5. 'print' → logprob: -5.0041351318359375
    6. '    
' → logprob: -5.6291351318359375
    7. ' ' → logprob: -5.8791351318359375
    8. '    ' → logprob: -6.0041351318359375
    9. 'sum' → logprob: -6.3791351318359375
    10. 'a' → logprob: -6.5041351318359375

Token 21: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03337317332625389
    2. ' ' → logprob: -4.1583733558654785
    3. '=' → logprob: -4.2833733558654785
    4. ' +=' → logprob: -7.4083733558654785
    5. ',' → logprob: -7.5333733558654785
    6. ' *=' → logprob: -7.5333733558654785
    7. 'um' → logprob: -7.6583733558654785
    8. ' -=' → logprob: -7.9083733558654785
    9. '   ' → logprob: -9.15837287902832
    10. '-' → logprob: -9.15837287902832

Token 22: ' int' (ID: 677)
  Prédit: ' t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' t' → logprob: -0.49076294898986816
    2. ' int' → logprob: -1.1157629489898682
    3. 'int' → logprob: -3.115762948989868
    4. 't' → logprob: -4.490762710571289
    5. ' ' → logprob: -6.365762710571289
    6. ' input' → logprob: -6.740762710571289
    7. ' n' → logprob: -7.490762710571289
    8. 'input' → logprob: -8.615762710571289
    9. ' len' → logprob: -8.990762710571289
    10. '10' → logprob: -9.365762710571289

Token 23: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.011073057539761066
    2. '(' → logprob: -4.511073112487793
    3. 'input' → logprob: -11.386073112487793
    4. ' (' → logprob: -12.011073112487793
    5. '()' → logprob: -12.636073112487793
    6. ' input' → logprob: -13.511073112487793
    7. '=input' → logprob: -14.011073112487793
    8. '[input' → logprob: -15.011073112487793
    9. '(t' → logprob: -15.136073112487793
    10. ',input' → logprob: -15.136073112487793

Token 24: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.014218038879334927
    2. '()' → logprob: -4.264217853546143
    3. ')' → logprob: -10.0142183303833
    4. ' ())' → logprob: -12.0142183303833
    5. '();)' → logprob: -13.2642183303833
    6. '()]' → logprob: -14.8892183303833
    7. '()))' → logprob: -15.0142183303833
    8. '())
' → logprob: -15.1392183303833
    9. '()
' → logprob: -15.1392183303833
    10. '(' → logprob: -15.2642183303833

Token 25: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4257996678352356
    2. '<|end|>' → logprob: -1.3007996082305908
    3. ' ' → logprob: -3.425799608230591
    4. ')' → logprob: -3.800799608230591
    5. '    ' → logprob: -4.92579984664917
    6. '    
' → logprob: -6.05079984664917
    7. '<|end|>' → logprob: -6.30079984664917
    8. '  ' → logprob: -6.30079984664917
    9. '\n' → logprob: -6.92579984664917
    10. '#' → logprob: -7.17579984664917

Token 26: ' total' (ID: 3609)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5468610525131226
    2. ' ' → logprob: -1.5468610525131226
    3. 's' → logprob: -2.546861171722412
    4. '    ' → logprob: -4.171861171722412
    5. '<|end|>' → logprob: -4.171861171722412
    6. '[' → logprob: -4.296861171722412
    7. ' for' → logprob: -4.671861171722412
    8. '#' → logprob: -4.796861171722412
    9. 'n' → logprob: -4.921861171722412
    10. ')' → logprob: -5.046861171722412

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7848147749900818
    2. ' +=' → logprob: -1.1598148345947266
    3. '_' → logprob: -1.5348148345947266
    4. '=' → logprob: -4.784814834594727
    5. '_sum' → logprob: -5.909814834594727
    6. '+=' → logprob: -6.784814834594727
    7. ' ' → logprob: -8.034814834594727
    8. '+' → logprob: -8.034814834594727
    9. ' _' → logprob: -8.034814834594727
    10. 's' → logprob: -8.159814834594727

Token 28: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3244952857494354
    2. ' ' → logprob: -1.3244953155517578
    3. ' n' → logprob: -4.699495315551758
    4. ' t' → logprob: -6.824495315551758
    5. 'n' → logprob: -7.824495315551758
    6. ' sum' → logprob: -7.949495315551758
    7. 'sum' → logprob: -9.324495315551758
    8. '   ' → logprob: -9.699495315551758
    9. 't' → logprob: -9.824495315551758
    10. '    ' → logprob: -12.386995315551758

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020530449226498604
    2. 'n' → logprob: -4.5205302238464355
    3. 'sum' → logprob: -5.6455302238464355
    4. ' ' → logprob: -6.1455302238464355
    5. 't' → logprob: -6.3955302238464355
    6. ' n' → logprob: -7.1455302238464355
    7. '1' → logprob: -7.2705302238464355
    8. ' sum' → logprob: -8.520530700683594
    9. ' t' → logprob: -9.520530700683594
    10. '   ' → logprob: -9.645530700683594

Token 30: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20800919830799103
    2. '<|end|>' → logprob: -1.9580092430114746
    3. ' ' → logprob: -4.583009243011475
    4. '    
' → logprob: -5.208009243011475
    5. '    ' → logprob: -5.208009243011475
    6. ')' → logprob: -5.333009243011475
    7. '
' → logprob: -5.458009243011475
    8. '\n' → logprob: -5.958009243011475
    9. ' for' → logprob: -5.958009243011475
    10. ' 
' → logprob: -5.958009243011475

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2179115265607834
    2. '<|end|>' → logprob: -1.7179114818572998
    3. ' for' → logprob: -4.967911720275879
    4. '\n' → logprob: -5.717911720275879
    5. 'for' → logprob: -6.342911720275879
    6. ' ' → logprob: -6.592911720275879
    7. '<|end|>' → logprob: -7.217911720275879
    8. '    
' → logprob: -7.467911720275879
    9. '    ' → logprob: -7.717911720275879
    10. '  ' → logprob: -8.217911720275879

Token 32: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3011697828769684
    2. '   ' → logprob: -1.926169753074646
    3. ' for' → logprob: -2.6761698722839355
    4. '<|end|>' → logprob: -3.5511698722839355
    5. ' ' → logprob: -4.4261698722839355
    6. '	for' → logprob: -6.8011698722839355
    7. '  ' → logprob: -6.9261698722839355
    8. '\n' → logprob: -7.1761698722839355
    9. '    ' → logprob: -7.5511698722839355
    10. '\t' → logprob: -7.8011698722839355

Token 33: ' _' (ID: 1175)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.19892312586307526
    2. ' _' → logprob: -2.323923110961914
    3. ' ' → logprob: -3.073923110961914
    4. '_' → logprob: -3.323923110961914
    5. 'i' → logprob: -8.448923110961914
    6. ' I' → logprob: -12.073923110961914
    7. '  ' → logprob: -12.073923110961914
    8. ' ‌' → logprob: -12.198923110961914
    9. ' range' → logprob: -12.323923110961914
    10. '_i' → logprob: -12.698923110961914

Token 34: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0010145875858142972
    2. ' ' → logprob: -7.376014709472656
    3. 'in' → logprob: -7.876014709472656
    4. ' i' → logprob: -13.376014709472656
    5. '_' → logprob: -13.626014709472656
    6. ' _' → logprob: -13.751014709472656
    7. '  ' → logprob: -13.876014709472656
    8. '<|end|>' → logprob: -13.876014709472656
    9. 'range' → logprob: -14.626014709472656
    10. 'n' → logprob: -15.001014709472656

Token 35: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.026613183319568634
    2. 'range' → logprob: -3.651613235473633
    3. ' ' → logprob: -8.151613235473633
    4. '	range' → logprob: -12.026613235473633
    5. ' r' → logprob: -12.401613235473633
    6. ' ra' → logprob: -12.401613235473633
    7. ' ran' → logprob: -13.151613235473633
    8. '_' → logprob: -13.151613235473633
    9. 'rang' → logprob: -13.276613235473633
    10. 'r' → logprob: -13.526613235473633

Token 36: '(n' (ID: 2406)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3429601192474365
    2. '(n' → logprob: -1.3429601192474365
    3. '(' → logprob: -3.9679601192474365
    4. ' (' → logprob: -5.217960357666016
    5. 'n' → logprob: -5.342960357666016
    6. ' ' → logprob: -9.217960357666016
    7. ' t' → logprob: -11.092960357666016
    8. ')n' → logprob: -12.092960357666016
    9. '	n' → logprob: -12.217960357666016
    10. ')' → logprob: -12.217960357666016

Token 37: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.05871663987636566
    2. ')' → logprob: -2.9337165355682373
    3. ' ):' → logprob: -6.308716773986816
    4. ':' → logprob: -7.058716773986816
    5. ' )' → logprob: -7.183716773986816
    6. '+' → logprob: -8.933716773986816
    7. '   ' → logprob: -9.183716773986816
    8. ',' → logprob: -9.933716773986816
    9. '):
' → logprob: -10.058716773986816
    10. ' :' → logprob: -11.433716773986816

Token 38: '       ' (ID: 309)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02329357899725437
    2. '    ' → logprob: -4.273293495178223
    3. '       ' → logprob: -5.398293495178223
    4. '<|end|>' → logprob: -5.898293495178223
    5. '   ' → logprob: -7.398293495178223
    6. ' )' → logprob: -7.773293495178223
    7. ' s' → logprob: -8.898293495178223
    8. '  ' → logprob: -9.273293495178223
    9. ' ,' → logprob: -9.273293495178223
    10. ' 
' → logprob: -9.773293495178223

Token 39: ' s' (ID: 265)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.28893348574638367
    2. ' t' → logprob: -1.663933515548706
    3. ' ' → logprob: -3.663933515548706
    4. 'i' → logprob: -4.913933277130127
    5. 's' (adapté à ' s') → logprob: -5.038933277130127
    6. '    ' → logprob: -5.163933277130127
    7. ' i' → logprob: -5.788933277130127
    8. 'a' → logprob: -6.288933277130127
    9. 'n' → logprob: -6.288933277130127
    10. 'int' → logprob: -6.663933277130127

Token 40: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1025848463177681
    2. ' ' → logprob: -3.1025848388671875
    3. '=' → logprob: -3.4775848388671875
    4. ',' → logprob: -4.2275848388671875
    5. '=input' → logprob: -6.1025848388671875
    6. ' ,' → logprob: -6.2275848388671875
    7. 'tr' → logprob: -6.6025848388671875
    8. 'p' → logprob: -7.8525848388671875
    9. ' +=' → logprob: -8.602584838867188
    10. '=int' → logprob: -8.977584838867188

Token 41: ' f' (ID: 285)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -1.200649619102478
    2. 'v' → logprob: -1.575649619102478
    3. 'p' → logprob: -2.2006497383117676
    4. ' d' → logprob: -2.5756497383117676
    5. 'c' → logprob: -3.0756497383117676
    6. 'a' → logprob: -3.0756497383117676
    7. ' p' → logprob: -3.2006497383117676
    8. ' v' → logprob: -3.2006497383117676
    9. 'm' → logprob: -3.5756497383117676
    10. 'e' → logprob: -3.9506497383117676

Token 42: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5486552119255066
    2. ',' → logprob: -1.0486552715301514
    3. '=' → logprob: -2.6736552715301514
    4. ' ,' → logprob: -6.048655033111572
    5. ' ' → logprob: -8.29865550994873
    6. ')' → logprob: -9.04865550994873
    7. '  ' → logprob: -10.17365550994873
    8. '<|end|>' → logprob: -10.67365550994873
    9. '=input' → logprob: -10.79865550994873
    10. '   ' → logprob: -11.92365550994873

Token 43: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.0038352326955646276
    2. 'map' → logprob: -5.753835201263428
    3. ' input' → logprob: -7.503835201263428
    4. ' list' → logprob: -9.503835678100586
    5. ' [' → logprob: -11.128835678100586
    6. 'input' → logprob: -11.878835678100586
    7. ' ' → logprob: -12.878835678100586
    8. '	map' → logprob: -13.003835678100586
    9. '   ' → logprob: -13.128835678100586
    10. '[' → logprob: -13.878835678100586

Token 44: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.045581988990306854
    2. '(' → logprob: -3.1705820560455322
    3. '(str' → logprob: -6.170581817626953
    4. '(input' → logprob: -8.295581817626953
    5. '(lambda' → logprob: -8.545581817626953
    6. '(
' → logprob: -11.295581817626953
    7. ' (' → logprob: -11.545581817626953
    8. '<int' → logprob: -12.045581817626953
    9. '(list' → logprob: -12.420581817626953
    10. '(eval' → logprob: -12.920581817626953

Token 45: ',' (ID: 11)
  Prédit: ',input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',input' → logprob: -0.36390799283981323
    2. ',' → logprob: -1.738908052444458
    3. '(input' → logprob: -2.113908052444458
    4. '(' → logprob: -4.988907814025879
    5. ')' → logprob: -6.863907814025879
    6. 'input' → logprob: -7.613907814025879
    7. ' ,' → logprob: -9.488907814025879
    8. ' input' → logprob: -10.363907814025879
    9. '(),' → logprob: -10.488907814025879
    10. '()' → logprob: -10.738907814025879

Token 46: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1602659672498703
    2. 'input' → logprob: -1.9102659225463867
    3. ')' → logprob: -10.785265922546387
    4. ' )' → logprob: -11.535265922546387
    5. '(input' → logprob: -12.285265922546387
    6. ' ' → logprob: -12.910265922546387
    7. '=input' → logprob: -13.410265922546387
    8. ',input' → logprob: -13.660265922546387
    9. '	input' → logprob: -14.410265922546387
    10. '[input' → logprob: -15.035265922546387

Token 47: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.4140441635390744e-05
    2. '()' → logprob: -11.250014305114746
    3. '()
' → logprob: -14.750014305114746
    4. '())' → logprob: -14.875014305114746
    5. ')' → logprob: -15.625014305114746
    6. ' ().' → logprob: -15.875014305114746
    7. '(' → logprob: -17.87501335144043
    8. '()

' → logprob: -18.37501335144043
    9. '()
' → logprob: -19.37501335144043
    10. '().
' → logprob: -19.37501335144043

Token 48: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00014847563579678535
    2. 'strip' → logprob: -8.87514877319336
    3. 'rstrip' → logprob: -12.00014877319336
    4. ' split' → logprob: -13.25014877319336
    5. 'spl' → logprob: -15.25014877319336
    6. '(split' → logprob: -15.37514877319336
    7. ')' → logprob: -16.00014877319336
    8. 's' → logprob: -17.50014877319336
    9. ' ' → logprob: -17.75014877319336
    10. 'sp' → logprob: -18.00014877319336

Token 49: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08441731333732605
    2. '())' → logprob: -2.5844173431396484
    3. '()' → logprob: -5.334417343139648
    4. '))' → logprob: -7.709417343139648
    5. ')
' → logprob: -9.584417343139648
    6. '')' → logprob: -9.959417343139648
    7. '())
' → logprob: -10.084417343139648
    8. '`)' → logprob: -10.709417343139648
    9. ')`' → logprob: -11.459417343139648
    10. '(' → logprob: -11.709417343139648

Token 50: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27106690406799316
    2. ')' → logprob: -2.021066904067993
    3. '<|end|>' → logprob: -3.021066904067993
    4. ' ' → logprob: -3.521066904067993
    5. '   ' → logprob: -4.646066665649414
    6. '    ' → logprob: -5.146066665649414
    7. ' )' → logprob: -5.771066665649414
    8. '+' → logprob: -6.271066665649414
    9. '        ' → logprob: -7.021066665649414
    10. '        
' → logprob: -7.146066665649414

Token 51: ' total' (ID: 3609)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.3988789916038513
    2. ' if' → logprob: -1.523879051208496
    3. ' total' → logprob: -2.773879051208496
    4. 'total' (adapté à ' total') → logprob: -3.398879051208496
    5. 'if' → logprob: -5.148879051208496
    6. ' 
' → logprob: -5.398879051208496
    7. '<|end|>' → logprob: -5.648879051208496
    8. '
' → logprob: -8.523879051208496
    9. '       ' → logprob: -8.773879051208496
    10. '        ' → logprob: -8.773879051208496

Token 52: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.1890684813261032
    2. '+=' → logprob: -1.9390684366226196
    3. '+' → logprob: -3.564068555831909
    4. '=' → logprob: -10.314068794250488
    5. ' +' → logprob: -10.439068794250488
    6. '+=(' → logprob: -10.814068794250488
    7. '<|end|>' → logprob: -12.314068794250488
    8. ']+=' → logprob: -12.439068794250488
    9. ' =' → logprob: -12.439068794250488
    10. '+='' → logprob: -12.439068794250488

Token 53: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.30847710371017456
    2. 'f' → logprob: -1.9334771633148193
    3. ' (' → logprob: -3.0584771633148193
    4. '(f' → logprob: -3.5584771633148193
    5. ' s' → logprob: -3.6834771633148193
    6. '(s' → logprob: -5.05847692489624
    7. '(' → logprob: -5.05847692489624
    8. 's' → logprob: -5.30847692489624
    9. ' max' → logprob: -6.68347692489624
    10. ' ' → logprob: -7.68347692489624

Token 54: ' -' (ID: 533)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -1.367869257926941
    2. '-' → logprob: -1.367869257926941
    3. '   ' → logprob: -1.742869257926941
    4. '<|end|>' → logprob: -1.867869257926941
    5. ' ' → logprob: -2.6178693771362305
    6. '
' → logprob: -3.1178693771362305
    7. '*' → logprob: -4.4928693771362305
    8. 'print' → logprob: -5.2428693771362305
    9. '%' → logprob: -5.6178693771362305
    10. '  ' → logprob: -5.7428693771362305

Token 55: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.04302933067083359
    2. ' s' → logprob: -3.168029308319092
    3. ' ' → logprob: -10.66802978515625
    4. 't' → logprob: -13.29302978515625
    5. '1' → logprob: -13.79302978515625
    6. '(s' → logprob: -14.04302978515625
    7. '	s' → logprob: -14.54302978515625
    8. '=' → logprob: -14.79302978515625
    9. '(' → logprob: -15.16802978515625
    10. '  ' → logprob: -15.29302978515625

Token 56: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16990965604782104
    2. '
' → logprob: -3.044909715652466
    3. 'print' → logprob: -3.169909715652466
    4. '<|end|>' → logprob: -3.419909715652466
    5. ' print' → logprob: -3.794909715652466
    6. ')' → logprob: -5.294909477233887
    7. ' ' → logprob: -6.169909477233887
    8. '    
' → logprob: -7.169909477233887
    9. ' 
' → logprob: -7.669909477233887
    10. '```' → logprob: -7.794909477233887

Token 57: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37322738766670227
    2. 'print' → logprob: -1.2482273578643799
    3. ' print' → logprob: -4.373227596282959
    4. '
' → logprob: -4.998227596282959
    5. '<|end|>' → logprob: -6.998227596282959
    6. '    
' → logprob: -7.248227596282959
    7. ')' → logprob: -7.248227596282959
    8. '\n' → logprob: -7.623227596282959
    9. ' ' → logprob: -7.748227596282959
    10. '  
' → logprob: -7.998227596282959

Token 58: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.5776739120483398
    2. ' print' → logprob: -0.8276739120483398
    3. '   ' → logprob: -6.45267391204834
    4. ' 
' → logprob: -9.82767391204834
    5. ' ' → logprob: -10.45267391204834
    6. ' if' → logprob: -10.82767391204834
    7. '
' → logprob: -11.07767391204834
    8. '	print' → logprob: -11.32767391204834
    9. '    
' → logprob: -12.32767391204834
    10. '```' → logprob: -12.45267391204834

Token 59: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11946343630552292
    2. '(total' → logprob: -2.2444634437561035
    3. '('' → logprob: -5.1194634437561035
    4. '("' → logprob: -7.9944634437561035
    5. '()' → logprob: -8.994462966918945
    6. 'total' → logprob: -9.369462966918945
    7. '(t' → logprob: -10.494462966918945
    8. ' (' → logprob: -10.744462966918945
    9. '("("' → logprob: -10.994462966918945
    10. '(f' → logprob: -11.744462966918945

Token 60: 'OK' (ID: 5175)
  Prédit: 'Total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Total' → logprob: -0.2606807053089142
    2. 'total' → logprob: -2.635680675506592
    3. '{' → logprob: -2.760680675506592
    4. '{}' → logprob: -3.260680675506592
    5. '%d' → logprob: -3.760680675506592
    6. '%' → logprob: -4.010680675506592
    7. 'Case' → logprob: -6.385680675506592
    8. '"{' → logprob: -6.510680675506592
    9. '"' → logprob: -6.885680675506592
    10. 'Hour' → logprob: -7.010680675506592

Token 61: '"' (ID: 1)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.0006707399734295905
    2. ')' → logprob: -7.500670909881592
    3. ')")' → logprob: -9.375670433044434
    4. '!")' → logprob: -10.750670433044434
    5. '")
' → logprob: -12.625670433044434
    6. ' ")' → logprob: -12.625670433044434
    7. ' )' → logprob: -13.250670433044434
    8. '"' → logprob: -13.625670433044434
    9. '",' → logprob: -14.750670433044434
    10. '");' → logprob: -15.625670433044434

Token 62: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033156692516058683
    2. ' )' → logprob: -6.003315448760986
    3. '")' → logprob: -7.253315448760986
    4. ',' → logprob: -9.628315925598145
    5. '))' → logprob: -10.628315925598145
    6. ')")' → logprob: -11.753315925598145
    7. '*' → logprob: -12.378315925598145
    8. ')
' → logprob: -12.503315925598145
    9. ',)' → logprob: -12.503315925598145
    10. '   ' → logprob: -13.003315925598145

Token 63: ' total' (ID: 3609)
  Prédit: ' total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' total' → logprob: -0.003831429174169898
    2. 'total' → logprob: -5.753831386566162
    3. ' t' → logprob: -7.378831386566162
    4. 't' → logprob: -11.25383186340332
    5. ' ' → logprob: -12.00383186340332
    6. ' n' → logprob: -12.37883186340332
    7. ' to' → logprob: -13.75383186340332
    8. ' tot' → logprob: -13.87883186340332
    9. '(total' → logprob: -13.87883186340332
    10. '   ' → logprob: -14.37883186340332

Token 64: ' >=' (ID: 5064)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -1.2169506549835205
    2. '==' → logprob: -1.5919506549835205
    3. ' <=' → logprob: -1.8419506549835205
    4. '<=' → logprob: -1.9669506549835205
    5. ' >=' → logprob: -2.3419506549835205
    6. '>=' → logprob: -2.4669506549835205
    7. ' ' → logprob: -5.091950416564941
    8. '>' → logprob: -5.341950416564941
    9. ' >' → logprob: -5.466950416564941
    10. '<' → logprob: -5.716950416564941

Token 65: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.14686691761016846
    2. ' t' → logprob: -2.021866798400879
    3. '0' → logprob: -5.771866798400879
    4. ' ' → logprob: -7.021866798400879
    5. '	t' → logprob: -10.646866798400879
    6. '   ' → logprob: -10.896866798400879
    7. '60' → logprob: -10.896866798400879
    8. '120' → logprob: -11.271866798400879
    9. '100' → logprob: -11.396866798400879
    10. '10' → logprob: -11.646866798400879

Token 66: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.10026038438081741
    2. 'else' → logprob: -2.3502604961395264
    3. ')' → logprob: -10.100260734558105
    4. ' )' → logprob: -12.100260734558105
    5. ' ' → logprob: -12.225260734558105
    6. '	else' → logprob: -13.350260734558105
    7. '*' → logprob: -16.10025978088379
    8. '```' → logprob: -16.10025978088379
    9. ' els' → logprob: -16.47525978088379
    10. '   ' → logprob: -16.60025978088379

Token 67: ' t' (ID: 260)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.015273304656147957
    2. ' "' → logprob: -5.265273094177246
    3. '"No' → logprob: -5.390273094177246
    4. ' ' → logprob: -6.640273094177246
    5. '"N' → logprob: -6.890273094177246
    6. '"C' → logprob: -8.015273094177246
    7. '"K' → logprob: -8.015273094177246
    8. '"D' → logprob: -8.265273094177246
    9. 'NG' → logprob: -8.390273094177246
    10. ''' → logprob: -8.515273094177246

Token 68: ' -' (ID: 533)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0037791705690324306
    2. '-' → logprob: -6.00377893447876
    3. '")' → logprob: -7.37877893447876
    4. ' )' → logprob: -8.253779411315918
    5. ' -' → logprob: -8.253779411315918
    6. '-)' → logprob: -9.753779411315918
    7. '*' → logprob: -10.628779411315918
    8. '))' → logprob: -10.753779411315918
    9. '"' → logprob: -11.378779411315918
    10. '')' → logprob: -11.753779411315918

Token 69: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.014166207052767277
    2. ' total' → logprob: -4.264166355133057
    3. ' ' → logprob: -13.264165878295898
    4. '	total' → logprob: -14.264165878295898
    5. '   ' → logprob: -16.5141658782959
    6. '(total' → logprob: -16.6391658782959
    7. '  ' → logprob: -16.7641658782959
    8. '<|end|>' → logprob: -17.7641658782959
    9. '$total' → logprob: -17.8891658782959
    10. '0' → logprob: -18.1391658782959

Token 70: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.11996734328568e-05
    2. ' )' → logprob: -10.250041007995605
    3. ')
' → logprob: -12.625041007995605
    4. '))' → logprob: -14.000041007995605
    5. '")' → logprob: -14.750041007995605
    6. '`)' → logprob: -14.875041007995605
    7. '')' → logprob: -15.375041007995605
    8. ')`' → logprob: -15.500041007995605
    9. '())' → logprob: -15.750041007995605
    10. ')")' → logprob: -16.500041961669922


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 68
Tokens correctement prédits (1ère position, stricte): 28
Tokens correctement prédits (1ère position, avec adaptation): 30
Tokens correctement prédits (top 10): 58
Précision stricte (1ère position): 41.18%
Précision adaptée (1ère position): 44.12%
Précision (top 10): 85.29%
================================================================================
