================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:10:16
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
while True:
    n,m=map(int,input().split())
    if n==0 and m==0:
        break
    res=0
    for i in range(2,n+1):
        res=(res+m)%i
    print(res+1)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'while' (ID: 7032)
  → Token d'amorce (pas de prédiction)

Token 1: ' True' (ID: 6432)
  → Token d'amorce (pas de prédiction)

Token 2: ':
' (ID: 734)
  → Token d'amorce (pas de prédiction)

Token 3: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11692515015602112
    2. '\n' → logprob: -3.6169252395629883
    3. '    ' → logprob: -4.241925239562988
    4. ' ' → logprob: -4.241925239562988
    5. '    
' → logprob: -4.366925239562988
    6. ' 
' → logprob: -4.491925239562988
    7. '\' → logprob: -4.616925239562988
    8. ':' → logprob: -5.366925239562988
    9. '```' → logprob: -5.616925239562988
    10. '<|end|>' → logprob: -5.741925239562988

Token 4: ' n' (ID: 297)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.26106780767440796
    2. '    ' → logprob: -1.7610678672790527
    3. ' ' → logprob: -3.7610678672790527
    4. '```' → logprob: -3.8860678672790527
    5. '    
' → logprob: -5.636067867279053
    6. '       ' → logprob: -6.386067867279053
    7. '  ' → logprob: -6.386067867279053
    8. ' pass' → logprob: -6.761067867279053
    9. 'pass' → logprob: -6.886067867279053
    10. ' 
' → logprob: -7.386067867279053

Token 5: ',m' (ID: 26648)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.9487693905830383
    2. '=' → logprob: -1.6987693309783936
    3. ' ' → logprob: -1.8237693309783936
    4. 'o' → logprob: -2.1987693309783936
    5. '   ' → logprob: -3.1987693309783936
    6. '+' → logprob: -3.8237693309783936
    7. 'e' → logprob: -3.9487693309783936
    8. '_' → logprob: -4.573769569396973
    9. '>' → logprob: -4.573769569396973
    10. '.' → logprob: -4.698769569396973

Token 6: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.832951009273529
    2. '=' → logprob: -1.2079510688781738
    3. ' ' → logprob: -2.082951068878174
    4. '[' → logprob: -3.957951068878174
    5. ')' → logprob: -4.082951068878174
    6. ' ==' → logprob: -4.082951068878174
    7. ',' → logprob: -4.207951068878174
    8. ''' → logprob: -4.332951068878174
    9. '    ' → logprob: -4.707951068878174
    10. '  ' → logprob: -4.957951068878174

Token 7: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.25494953989982605
    2. 'input' → logprob: -2.0049495697021484
    3. ' map' → logprob: -2.5049495697021484
    4. ' input' → logprob: -4.754949569702148
    5. 'list' → logprob: -10.254949569702148
    6. 'int' → logprob: -10.504949569702148
    7. ' ' → logprob: -11.629949569702148
    8. '[' → logprob: -12.254949569702148
    9. ' list' → logprob: -12.754949569702148
    10. 'raw' → logprob: -13.379949569702148

Token 8: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.037302158772945404
    2. '(' → logprob: -3.912302255630493
    3. '(str' → logprob: -4.162302017211914
    4. '(lambda' → logprob: -7.287302017211914
    5. '[int' → logprob: -8.912302017211914
    6. 'int' → logprob: -9.412302017211914
    7. '<int' → logprob: -10.162302017211914
    8. 'str' → logprob: -10.662302017211914
    9. '<|end|>' → logprob: -10.912302017211914
    10. '(input' → logprob: -11.162302017211914

Token 9: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.09663273394107819
    2. 'input' → logprob: -2.846632719039917
    3. ')' → logprob: -3.596632719039917
    4. '(' → logprob: -5.596632957458496
    5. ' input' → logprob: -6.096632957458496
    6. ',input' → logprob: -7.846632957458496
    7. '=input' → logprob: -8.846632957458496
    8. ' )' → logprob: -10.596632957458496
    9. '<input' → logprob: -10.721632957458496
    10. '(
' → logprob: -10.721632957458496

Token 10: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3071861267089844
    2. '())' → logprob: -1.6821861267089844
    3. '()' → logprob: -2.5571861267089844
    4. '());' → logprob: -8.182186126708984
    5. '()))' → logprob: -8.307186126708984
    6. '()-' → logprob: -9.432186126708984
    7. '('' → logprob: -9.557186126708984
    8. '(' → logprob: -9.682186126708984
    9. '();)' → logprob: -9.932186126708984
    10. ')' → logprob: -10.307186126708984

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00011427151912357658
    2. 'strip' → logprob: -9.125114440917969
    3. 'rstrip' → logprob: -12.875114440917969
    4. ' split' → logprob: -13.250114440917969
    5. '(split' → logprob: -14.375114440917969
    6. ')' → logprob: -15.000114440917969
    7. 'replace' → logprob: -17.87511444091797
    8. 'spl' → logprob: -19.25011444091797
    9. '_split' → logprob: -19.37511444091797
    10. '())' → logprob: -19.37511444091797

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.052992165088653564
    2. '())' → logprob: -3.302992105484009
    3. '))' → logprob: -4.427992343902588
    4. '()' → logprob: -5.927992343902588
    5. '()))' → logprob: -8.92799186706543
    6. '(' → logprob: -9.80299186706543
    7. '('' → logprob: -11.05299186706543
    8. '`)' → logprob: -11.42799186706543
    9. '')' → logprob: -12.17799186706543
    10. ')")' → logprob: -12.92799186706543

Token 13: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4089640974998474
    2. ':' → logprob: -1.5339641571044922
    3. '<|end|>' → logprob: -2.658964157104492
    4. ' if' → logprob: -3.408964157104492
    5. ' ' → logprob: -5.658964157104492
    6. ')' → logprob: -5.908964157104492
    7. '```' → logprob: -6.408964157104492
    8. ',' → logprob: -6.783964157104492
    9. '    ' → logprob: -6.783964157104492
    10. '<|end|>' → logprob: -6.783964157104492

Token 14: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 15: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.10274490714073181
    2. ' not' → logprob: -2.3527448177337646
    3. ' m' → logprob: -6.852745056152344
    4. 'n' → logprob: -6.977745056152344
    5. 'not' → logprob: -8.102745056152344
    6. ' ' → logprob: -8.602745056152344
    7. ' ' → logprob: -10.352745056152344
    8. 'm' → logprob: -10.852745056152344
    9. ' (' → logprob: -12.977745056152344
    10. '(n' → logprob: -13.477745056152344

Token 16: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.23711057007312775
    2. '==' → logprob: -1.6121106147766113
    3. ' <=' → logprob: -5.612110614776611
    4. '<' → logprob: -6.112110614776611
    5. ' <' → logprob: -6.612110614776611
    6. ' ' → logprob: -6.987110614776611
    7. '>' → logprob: -6.987110614776611
    8. '<=' → logprob: -7.362110614776611
    9. ' >' → logprob: -7.487110614776611
    10. '=' → logprob: -7.737110614776611

Token 17: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.004798326641321182
    2. ' ' → logprob: -5.379798412322998
    3. 'm' → logprob: -8.75479793548584
    4. ' m' → logprob: -11.75479793548584
    5. '-' → logprob: -11.87979793548584
    6. '```' → logprob: -13.75479793548584
    7. '   ' → logprob: -14.12979793548584
    8. ' -' → logprob: -14.19229793548584
    9. '1' → logprob: -14.81729793548584
    10. '  ' → logprob: -14.87979793548584

Token 18: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.019937222823500633
    2. 'and' → logprob: -4.269937038421631
    3. ':' → logprob: -5.519937038421631
    4. ' ' → logprob: -6.644937038421631
    5. '   ' → logprob: -8.144937515258789
    6. ' or' → logprob: -9.394937515258789
    7. '  ' → logprob: -10.644937515258789
    8. '    ' → logprob: -11.144937515258789
    9. ' &' → logprob: -11.769937515258789
    10. ' :' → logprob: -11.894937515258789

Token 19: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.006718332413583994
    2. 'm' → logprob: -5.006718158721924
    3. ' ' → logprob: -12.881718635559082
    4. '	m' → logprob: -15.506718635559082
    5. '    ' → logprob: -16.256717681884766
    6. ' ' → logprob: -16.756717681884766
    7. '   ' → logprob: -17.131717681884766
    8. '```' → logprob: -17.506717681884766
    9. '  ' → logprob: -18.256717681884766
    10. '&m' → logprob: -18.756717681884766

Token 20: '==' (ID: 560)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.08458788692951202
    2. '==' → logprob: -2.584587812423706
    3. ' ' → logprob: -5.709588050842285
    4. '=' → logprob: -6.709588050842285
    5. ' =' → logprob: -8.209588050842285
    6. '  ' → logprob: -8.709588050842285
    7. ' <' → logprob: -8.709588050842285
    8. ' ' → logprob: -9.209588050842285
    9. '>' → logprob: -9.584588050842285
    10. ' >' → logprob: -10.209588050842285

Token 21: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002805110299959779
    2. ' ' → logprob: -5.877805233001709
    3. ' ' → logprob: -16.565305709838867
    4. '   ' → logprob: -16.940305709838867
    5. '1' → logprob: -17.315305709838867
    6. '۰' → logprob: -17.502805709838867
    7. '```' → logprob: -17.502805709838867
    8. '  ' → logprob: -17.752805709838867
    9. '<|end|>' → logprob: -18.565305709838867
    10. '<|end|>' → logprob: -18.877805709838867

Token 22: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0015180727932602167
    2. '       ' → logprob: -7.251518249511719
    3. ':
' → logprob: -7.626518249511719
    4. '   ' → logprob: -8.126518249511719
    5. ' :' → logprob: -11.251518249511719
    6. ':return' → logprob: -12.251518249511719
    7. '    ' → logprob: -12.876518249511719
    8. '      ' → logprob: -14.251518249511719
    9. '     ' → logprob: -14.376518249511719
    10. '	' → logprob: -14.501518249511719

Token 23: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007505440153181553
    2. '   ' → logprob: -8.000750541687012
    3. ':' → logprob: -8.125750541687012
    4. '\n' → logprob: -10.500750541687012
    5. ':
' → logprob: -10.875750541687012
    6. ' break' → logprob: -11.000750541687012
    7. '	break' → logprob: -11.000750541687012
    8. '	' → logprob: -11.875750541687012
    9. '     ' → logprob: -12.125750541687012
    10. '<|end|>' → logprob: -12.250750541687012

Token 24: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.10646405816078186
    2. '       ' → logprob: -2.356464147567749
    3. '   ' → logprob: -5.73146390914917
    4. 'break' (adapté à ' break') → logprob: -5.85646390914917
    5. '	break' → logprob: -9.106464385986328
    6. '           ' → logprob: -11.731464385986328
    7. '```' → logprob: -12.481464385986328
    8. ' ' → logprob: -12.856464385986328
    9. '\n' → logprob: -12.856464385986328
    10. ' ' → logprob: -13.356464385986328

Token 25: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5527675151824951
    2. ':' → logprob: -1.6777675151824951
    3. '\n' → logprob: -1.6777675151824951
    4. '    
' → logprob: -4.177767753601074
    5. '<|end|>' → logprob: -5.052767753601074
    6. '
' → logprob: -5.302767753601074
    7. '\' → logprob: -5.427767753601074
    8. ':
' → logprob: -6.052767753601074
    9. '       ' → logprob: -6.052767753601074
    10. '  
' → logprob: -6.302767753601074

Token 26: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019560402259230614
    2. '    
' → logprob: -4.39456033706665
    3. '<|end|>' → logprob: -6.01956033706665
    4. '\n' → logprob: -6.39456033706665
    5. '       ' → logprob: -6.64456033706665
    6. '```' → logprob: -7.64456033706665
    7. '    ' → logprob: -8.519560813903809
    8. '#' → logprob: -8.769560813903809
    9. ')' → logprob: -9.019560813903809
    10. '\' → logprob: -9.144560813903809

Token 27: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10628131777048111
    2. '       ' → logprob: -2.856281280517578
    3. '    ' → logprob: -3.856281280517578
    4. 'print' → logprob: -5.481281280517578
    5. ' print' → logprob: -5.731281280517578
    6. '    
' → logprob: -5.856281280517578
    7. '```' → logprob: -6.106281280517578
    8. ' ' → logprob: -6.481281280517578
    9. '[' → logprob: -7.231281280517578
    10. '     
' → logprob: -7.356281280517578

Token 28: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1307481825351715
    2. '=' → logprob: -2.1307482719421387
    3. ' ' → logprob: -6.630748271942139
    4. ' +=' → logprob: -6.755748271942139
    5. '=[]' → logprob: -7.255748271942139
    6. ',' → logprob: -8.13074779510498
    7. 'ult' → logprob: -10.38074779510498
    8. '[' → logprob: -10.50574779510498
    9. ')' → logprob: -10.63074779510498
    10. 's' → logprob: -10.75574779510498

Token 29: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.9576901793479919
    2. 'n' → logprob: -0.9576901793479919
    3. '[]' → logprob: -2.0826902389526367
    4. 'min' → logprob: -3.8326902389526367
    5. 'abs' → logprob: -4.332690238952637
    6. 'max' → logprob: -4.582690238952637
    7. '[n' → logprob: -4.707690238952637
    8. '[' → logprob: -4.832690238952637
    9. ' n' → logprob: -5.082690238952637
    10. ' ' → logprob: -5.082690238952637

Token 30: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 31: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4273991584777832
    2. '<|end|>' → logprob: -1.9273991584777832
    3. '\n' → logprob: -2.177399158477783
    4. ' 
' → logprob: -3.677399158477783
    5. ' for' → logprob: -3.927399158477783
    6. ' ' → logprob: -4.302399158477783
    7. '
' → logprob: -5.177399158477783
    8. '\' → logprob: -5.302399158477783
    9. '    ' → logprob: -5.552399158477783
    10. '    
' → logprob: -5.677399158477783

Token 32: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.12839291989803314
    2. ' for' → logprob: -2.2533929347991943
    3. '   ' → logprob: -4.378392696380615
    4. '	for' → logprob: -6.003392696380615
    5. '    ' → logprob: -8.878393173217773
    6. ' ' → logprob: -9.128393173217773
    7. '\t' → logprob: -10.128393173217773
    8. '<|end|>' → logprob: -10.628393173217773
    9. '  ' → logprob: -11.003393173217773
    10. ' 
' → logprob: -11.253393173217773

Token 33: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.18865039944648743
    2. '_' → logprob: -2.563650369644165
    3. ' _' → logprob: -2.688650369644165
    4. 'i' → logprob: -3.688650369644165
    5. ' ' → logprob: -7.188650608062744
    6. ' j' → logprob: -7.313650608062744
    7. ' range' → logprob: -8.438650131225586
    8. '_i' → logprob: -9.063650131225586
    9. 'j' → logprob: -9.313650131225586
    10. 'range' → logprob: -10.813650131225586

Token 34: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03375668823719025
    2. 'in' → logprob: -3.408756732940674
    3. 'range' → logprob: -10.033756256103516
    4. ' ' → logprob: -10.158756256103516
    5. ' range' → logprob: -11.783756256103516
    6. '	in' → logprob: -12.033756256103516
    7. '+' → logprob: -12.783756256103516
    8. '   ' → logprob: -13.158756256103516
    9. '  ' → logprob: -13.533756256103516
    10. ',' → logprob: -13.658756256103516

Token 35: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4287864863872528
    2. ' range' → logprob: -1.0537865161895752
    3. ' ' → logprob: -10.303786277770996
    4. '   ' → logprob: -10.928786277770996
    5. '  ' → logprob: -11.678786277770996
    6. 'm' → logprob: -11.803786277770996
    7. '	range' → logprob: -12.553786277770996
    8. '(range' → logprob: -13.053786277770996
    9. 'n' → logprob: -13.053786277770996
    10. '    ' → logprob: -13.678786277770996

Token 36: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.14371728897094727
    2. '(m' → logprob: -2.6437172889709473
    3. '(n' → logprob: -2.7687172889709473
    4. '(range' → logprob: -11.393716812133789
    5. '(s' → logprob: -12.768716812133789
    6. ' (' → logprob: -12.768716812133789
    7. '(
' → logprob: -13.268716812133789
    8. '(min' → logprob: -13.393716812133789
    9. 'm' → logprob: -13.643716812133789
    10. '(a' → logprob: -13.768716812133789

Token 37: '2' (ID: 17)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6524826288223267
    2. '1' → logprob: -1.0274826288223267
    3. 'm' → logprob: -2.152482509613037
    4. 'min' → logprob: -5.402482509613037
    5. '0' → logprob: -9.152482986450195
    6. '2' → logprob: -9.402482986450195
    7. 'max' → logprob: -9.777482986450195
    8. '(' → logprob: -9.902482986450195
    9. ' n' → logprob: -10.027482986450195
    10. ')' → logprob: -10.152482986450195

Token 38: ',n' (ID: 18103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1760580688714981
    2. ',n' → logprob: -2.051058053970337
    3. ' ,' → logprob: -4.051058292388916
    4. ',m' → logprob: -4.176058292388916
    5. ',int' → logprob: -10.926057815551758
    6. ',min' → logprob: -11.926057815551758
    7. ',i' → logprob: -12.051057815551758
    8. ',(' → logprob: -12.051057815551758
    9. ',max' → logprob: -12.176057815551758
    10. '   ' → logprob: -12.176057815551758

Token 39: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.18351370096206665
    2. '):' → logprob: -2.308513641357422
    3. '-' → logprob: -3.558513641357422
    4. ' +' → logprob: -3.933513641357422
    5. ',' → logprob: -4.558513641357422
    6. '+m' → logprob: -5.808513641357422
    7. ' ):' → logprob: -6.183513641357422
    8. ',m' → logprob: -6.683513641357422
    9. '//' → logprob: -6.683513641357422
    10. ' -' → logprob: -7.183513641357422

Token 40: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.384836888173595e-05
    2. '2' → logprob: -10.3750638961792
    3. 'm' → logprob: -11.1250638961792
    4. ' ' → logprob: -11.5000638961792
    5. '):' → logprob: -12.1250638961792
    6. '3' → logprob: -14.5000638961792
    7. '-' → logprob: -15.0000638961792
    8. '):
' → logprob: -15.2500638961792
    9. ')' → logprob: -15.5000638961792
    10. '   ' → logprob: -15.8750638961792

Token 41: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2293815016746521
    2. ':' → logprob: -1.6043815612792969
    3. ')' → logprob: -6.729381561279297
    4. ' ):' → logprob: -6.854381561279297
    5. ' :' → logprob: -6.979381561279297
    6. ',' → logprob: -7.729381561279297
    7. '   ' → logprob: -8.729381561279297
    8. '):
' → logprob: -9.729381561279297
    9. '=' → logprob: -11.229381561279297
    10. '    ' → logprob: -11.354381561279297

Token 42: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6738611459732056
    2. '    ' → logprob: -1.6738611459732056
    3. ' ' → logprob: -2.048861026763916
    4. ':' → logprob: -2.173861026763916
    5. '   ' → logprob: -3.923861026763916
    6. '<|end|>' → logprob: -4.173861026763916
    7. ' :' → logprob: -4.923861026763916
    8. '        ' → logprob: -5.548861026763916
    9. '     ' → logprob: -5.798861026763916
    10. '  ' → logprob: -5.798861026763916

Token 43: ' res' (ID: 694)
  Prédit: ' res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' res' → logprob: -0.4149472117424011
    2. ' if' → logprob: -1.789947271347046
    3. 'res' (adapté à ' res') → logprob: -1.914947271347046
    4. ' for' → logprob: -4.414947032928467
    5. 'if' → logprob: -4.914947032928467
    6. '       ' → logprob: -6.039947032928467
    7. ' ' → logprob: -6.289947032928467
    8. 'for' → logprob: -7.539947032928467
    9. '<|end|>' → logprob: -7.789947032928467
    10. '   ' → logprob: -8.289947509765625

Token 44: '=(' (ID: 9893)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.07138186693191528
    2. ' +=' → logprob: -2.6963818073272705
    3. '+=(' → logprob: -6.69638204574585
    4. '^' → logprob: -9.571381568908691
    5. '=' → logprob: -10.446381568908691
    6. '+' → logprob: -10.696381568908691
    7. ']+=' → logprob: -10.821381568908691
    8. '+='' → logprob: -10.946381568908691
    9. ' ^=' → logprob: -11.321381568908691
    10. '+="' → logprob: -11.446381568908691

Token 45: 'res' (ID: 430)
  Prédit: 'res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.387186735868454
    2. ' res' → logprob: -1.1371867656707764
    3. '(res' → logprob: -8.387187004089355
    4. 'i' → logprob: -10.012187004089355
    5. ' (' → logprob: -11.012187004089355
    6. ' i' → logprob: -11.262187004089355
    7. ')' → logprob: -13.137187004089355
    8. ' ' → logprob: -13.262187004089355
    9. '	res' → logprob: -13.262187004089355
    10. '(' → logprob: -13.512187004089355

Token 46: '+m' (ID: 139456)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.23981349170207977
    2. '+m' → logprob: -2.8648135662078857
    3. '+i' → logprob: -2.9898135662078857
    4. '-' → logprob: -3.3648135662078857
    5. '*' → logprob: -3.3648135662078857
    6. '*i' → logprob: -3.6148135662078857
    7. '*m' → logprob: -5.739813327789307
    8. ' +' → logprob: -6.489813327789307
    9. '%m' → logprob: -6.489813327789307
    10. '%i' → logprob: -7.364813327789307

Token 47: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27671343088150024
    2. '-' → logprob: -2.1517133712768555
    3. ')%' → logprob: -2.4017133712768555
    4. '*i' → logprob: -3.5267133712768555
    5. '%i' → logprob: -5.7767133712768555
    6. '-i' → logprob: -7.0267133712768555
    7. '%' → logprob: -7.7767133712768555
    8. '*' → logprob: -8.151713371276855
    9. '+i' → logprob: -8.276713371276855
    10. ' )' → logprob: -9.026713371276855

Token 48: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.531315314830863e-06
    2. ' i' → logprob: -12.625003814697266
    3. '	i' → logprob: -16.000003814697266
    4. '   ' → logprob: -18.000003814697266
    5. ' ' → logprob: -18.000003814697266
    6. '(i' → logprob: -18.375003814697266
    7. '  ' → logprob: -19.625003814697266
    8. '```' → logprob: -19.750003814697266
    9. '100' → logprob: -20.250003814697266
    10. ',i' → logprob: -20.250003814697266

Token 49: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.38564109802246094
    2. '
' → logprob: -1.885641098022461
    3. '   ' → logprob: -2.760641098022461
    4. '\n' → logprob: -3.510641098022461
    5. ' print' → logprob: -3.760641098022461
    6. '    
' → logprob: -4.385641098022461
    7. ' 
' → logprob: -4.510641098022461
    8. ' ' → logprob: -4.510641098022461
    9. '  
' → logprob: -4.635641098022461
    10. '   
' → logprob: -6.510641098022461

Token 50: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.005035575479269028
    2. '   ' → logprob: -5.505035400390625
    3. '
' → logprob: -7.255035400390625
    4. ' print' → logprob: -8.505035400390625
    5. '```' → logprob: -10.130035400390625
    6. '	print' → logprob: -13.005035400390625
    7. '    
' → logprob: -13.130035400390625
    8. '  
' → logprob: -13.755035400390625
    9. ' ' → logprob: -14.255035400390625
    10. '  ' → logprob: -14.505035400390625

Token 51: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0004711874935310334
    2. ' print' → logprob: -7.750471115112305
    3. '   ' → logprob: -10.125471115112305
    4. ' ' → logprob: -15.875471115112305
    5. '```' → logprob: -16.125471115112305
    6. 'printf' → logprob: -16.375471115112305
    7. '	print' → logprob: -17.125471115112305
    8. '  ' → logprob: -17.625471115112305
    9. '    
' → logprob: -17.875471115112305
    10. '\n' → logprob: -18.375471115112305

Token 52: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.014184542931616306
    2. '(' → logprob: -4.264184474945068
    3. '((' → logprob: -11.389184951782227
    4. '(f' → logprob: -12.764184951782227
    5. '("' → logprob: -13.014184951782227
    6. '('' → logprob: -13.139184951782227
    7. ' (' → logprob: -14.264184951782227
    8. '(re' → logprob: -14.639184951782227
    9. '(r' → logprob: -14.889184951782227
    10. '(rest' → logprob: -15.264184951782227

Token 53: '+' (ID: 10)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00020985817536711693
    2. '+' → logprob: -8.50020980834961
    3. ' )' → logprob: -12.62520980834961
    4. '))' → logprob: -14.25020980834961
    5. '+)' → logprob: -14.62520980834961
    6. ')
' → logprob: -14.62520980834961
    7. '`)' → logprob: -15.00020980834961
    8. ')`' → logprob: -15.12520980834961
    9. '0' → logprob: -15.50020980834961
    10. '}' → logprob: -15.87520980834961

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.125006675720215
    3. '2' → logprob: -14.500006675720215
    4. '+' → logprob: -16.7500057220459
    5. ')' → logprob: -16.8750057220459
    6. '0' → logprob: -16.8750057220459
    7. '   ' → logprob: -17.0000057220459
    8. '`' → logprob: -18.8125057220459
    9. '```' → logprob: -18.8125057220459
    10. '  ' → logprob: -19.1250057220459

Token 55: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ' )' → logprob: -15.125
    3. ')
' → logprob: -15.75
    4. '`)' → logprob: -18.75
    5. ')`' → logprob: -19.0
    6. '')' → logprob: -19.5
    7. '))' → logprob: -19.75
    8. '```' → logprob: -19.875
    9. ')

' → logprob: -20.75
    10. '}' → logprob: -20.75


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 53
Tokens correctement prédits (1ère position, stricte): 28
Tokens correctement prédits (1ère position, avec adaptation): 30
Tokens correctement prédits (top 10): 46
Précision stricte (1ère position): 52.83%
Précision adaptée (1ère position): 56.60%
Précision (top 10): 86.79%
================================================================================
