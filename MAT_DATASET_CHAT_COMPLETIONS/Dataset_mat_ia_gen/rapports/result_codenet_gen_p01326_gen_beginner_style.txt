================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:14:12
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
def match_pattern(pattern, byte_str):
    for p, b in zip(pattern, byte_str):
        if p == '0' or p == '1':
            if b != p:
                return False
    return True

def count_possibilities(byte_str):
    # Count how many bytes possible for a single byte pattern matching byte_str
    # byte_str is 8 chars of '0','1','x'
    # returns number of possible bytes matching the pattern
    count = 0
    for i in range(256):
        b = format(i, '08b')
        match = True
        for ps, bs in zip(byte_str, b):
            if ps != 'x' and ps != bs:
                match = False
                break
        if match:
            count += 1
    return count

def count_valid_first_bytes(byte_str):
    # Count how many possible first bytes can be
    # and also return a list of the types (length) it can start
    # based on first byte bit pattern
    res = []
    for length in [1,2,3,4]:
        patterns = []
        if length == 1:
            # 0xxxxxxx
            # first bit 0
            pattern = '0xxxxxxx'
            if match_pattern(pattern, byte_str):
                # count possible bytes that fit pattern and byte_str
                cnt = count_possibilities(byte_str)
                if cnt > 0:
                    res.append((length, cnt))
        elif length == 2:
            # 110yyyyx 10xxxxxx
            # first byte pattern 110yyyyx with y having at least one 1 bit
            # Since only first byte here, just check first byte pattern
            # We'll check y bits later in extra check
            # 110yyyyx means bits: 1 1 0 y y y y x (bit0 is leftmost)
            # We'll check that y bits (bit3,4,5,6) are not all zero
            bits = list(byte_str)
            # check fixed bits
            if bits[0] in ['1','x'] and bits[1] in ['1','x'] and bits[2] in ['0','x']:
                ybits = bits[3:7]
                if 'x' in ybits:
                    # unclear y bits, count possibilities with y bits not all zero
                    count = 0
                    for i in range(256):
                        b = format(i,'08b')
                        ok = True
                        for pb, bb in zip(bits, b):
                            if pb != 'x' and pb != bb:
                                ok = False
                                break
                        if ok:
                            y = b[3:7]
                            # y bits must have at least one '1'
                            if '1' in y:
                                count += 1
                    if count > 0:
                        res.append((length, count))
                else:
                    # ybits known, check if at least one '1'
                    if '1' in ybits:
                        count = count_possibilities(byte_str)
                        if count > 0:
                            res.append((length, count))
        elif length == 3:
            # 1110yyyy 10yxxxxx 10xxxxxx
            # first byte pattern 1110yyyy and at least one y bit in first byte's y bits
            bits = list(byte_str)
            if bits[0] in ['1','x'] and bits[1] in ['1','x'] and bits[2] in ['1','x'] and bits[3] in ['0','x']:
                ybits = bits[4:8]
                if 'x' in ybits:
                    count = 0
                    for i in range(256):
                        b = format(i,'08b')
                        ok = True
                        for pb, bb in zip(bits, b):
                            if pb != 'x' and pb != bb:
                                ok = False
                                break
                        if ok:
                            y = b[4:8]
                            if '1' in y:
                                count += 1
                    if count > 0:
                        res.append((length, count))
                else:
                    if '1' in ybits:
                        count = count_possibilities(byte_str)
                        if count > 0:
                            res.append((length, count))
        elif length == 4:
            # 11110yyy 10yyxxxx 10xxxxxx 10xxxxxx
            # first byte pattern 11110yyy, y bits at positions 5,6,7 (0-based)
            bits = list(byte_str)
            if bits[0]=='1' or bits[0]=='x':
                if bits[1]=='1' or bits[1]=='x':
                    if bits[2]=='1' or bits[2]=='x':
                        if bits[3]=='1' or bits[3]=='x':
                            if bits[4]=='0' or bits[4]=='x':
                                ybits = bits[5:8]
                                if 'x' in ybits:
                                    count=0
                                    for i in range(256):
                                        b = format(i,'08b')
                                        ok = True
                                        for pb, bb in zip(bits, b):
                                            if pb != 'x' and pb != bb:
                                                ok = False
                                                break
                                        if ok:
                                            y = b[5:8]
                                            if '1' in y:
                                                count += 1
                                    if count > 0:
                                        res.append((length, count))
                                else:
                                    if '1' in ybits:
                                        count = count_possibilities(byte_str)
                                        if count > 0:
                                            res.append((length, count))
    return res

def count_following_byte(byte_str):
    # must match 10xxxxxx pattern
    # That means bits[0]='1', bits[1]='0', bits[2:] any
    bits = list(byte_str)
    if bits[0] not in ['1','x']:
        return 0
    if bits[1] not in ['0','x']:
        return 0
    # count possible matches
    count = 0
    for i in range(256):
        b = format(i,'08b')
        if b[0]!='1' or b[1]!='0':
            continue
        ok = True
        for pb, bb in zip(bits, b):
            if pb != 'x' and pb != bb:
                ok = False
                break
        if ok:
            count += 1
    return count

def main():
    MOD=1000000
    while True:
        N = int(input())
        if N == 0:
            break
        bytes_list = [input() for _ in range(N)]
        dp = [0]*(N+1)
        dp[0] = 1
        for i in range(N):
            if dp[i] == 0:
                continue
            # check first byte possibilities
            first_byte = bytes_list[i]
            start_bytes = count_valid_first_bytes(first_byte)
            for length, first_count in start_bytes:
                if i+length > N:
                    continue
                # check continuation bytes
                ok = True
                total = first_count
                for j in range(i+1, i+length):
                    cont_count = count_following_byte(bytes_list[j])
                    if cont_count == 0:
                        ok = False
                        break
                    total = (total * cont_count)%MOD
                if ok:
                    dp[i+length] = (dp[i+length] + dp[i]*total)%MOD
        print(dp[N]%MOD)
        
main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'def' (ID: 1314)
  → Token d'amorce (pas de prédiction)

Token 1: ' match' (ID: 3981)
  → Token d'amorce (pas de prédiction)

Token 2: '_pattern' (ID: 50002)
  → Token d'amorce (pas de prédiction)

Token 3: '(pattern' (ID: 62660)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12744027376174927
    2. '_' → logprob: -2.1274402141571045
    3. '(_' → logprob: -8.877440452575684
    4. '```' → logprob: -9.377440452575684
    5. '(_:' → logprob: -10.002440452575684
    6. ' (' → logprob: -10.002440452575684
    7. '("("' → logprob: -10.377440452575684
    8. ''' → logprob: -10.752440452575684
    9. 's' → logprob: -11.002440452575684
    10. '"' → logprob: -11.252440452575684

Token 4: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03425169736146927
    2. ')' → logprob: -3.6592516899108887
    3. ':' → logprob: -5.909251689910889
    4. ',' → logprob: -6.159251689910889
    5. '[' → logprob: -6.534251689910889
    6. '<|end|>' → logprob: -7.659251689910889
    7. '(' → logprob: -8.159252166748047
    8. '```' → logprob: -8.409252166748047
    9. '):
' → logprob: -8.534252166748047
    10. '.' → logprob: -9.534252166748047

Token 5: ' byte' (ID: 9239)
  Prédit: ' string'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' string' → logprob: -0.7061234712600708
    2. ' text' → logprob: -1.2061234712600708
    3. 'string' → logprob: -1.9561234712600708
    4. 'text' → logprob: -3.4561233520507812
    5. ' input' → logprob: -3.7061233520507812
    6. ' sequence' → logprob: -5.331123352050781
    7. 'input' → logprob: -6.331123352050781
    8. ')' → logprob: -6.956123352050781
    9. 'sequence' → logprob: -7.331123352050781
    10. ' target' → logprob: -7.581123352050781

Token 6: '_str' (ID: 6182)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.4385785460472107
    2. '):' → logprob: -1.0635786056518555
    3. ')' → logprob: -5.6885786056518555
    4. '):
' → logprob: -5.8135786056518555
    5. ')s' → logprob: -6.8135786056518555
    6. '_s' → logprob: -7.4385786056518555
    7. ' ):' → logprob: -7.4385786056518555
    8. '_' → logprob: -8.313578605651855
    9. '```' → logprob: -8.313578605651855
    10. '_array' → logprob: -8.438578605651855

Token 7: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0014952188357710838
    2. ':' → logprob: -7.251495361328125
    3. ')' → logprob: -7.376495361328125
    4. ''):' → logprob: -9.251495361328125
    5. '):
' → logprob: -10.626495361328125
    6. '   ' → logprob: -11.876495361328125
    7. '`:' → logprob: -12.126495361328125
    8. '"):' → logprob: -12.126495361328125
    9. '':' → logprob: -12.376495361328125
    10. '```' → logprob: -12.501495361328125

Token 8: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20382633805274963
    2. '   ' → logprob: -1.7038263082504272
    3. ':
' → logprob: -6.953826427459717
    4. '```' → logprob: -7.203826427459717
    5. '():' → logprob: -8.078825950622559
    6. '    
' → logprob: -9.203825950622559
    7. '':' → logprob: -9.828825950622559
    8. '":' → logprob: -10.203825950622559
    9. ':return' → logprob: -10.578825950622559
    10. '(' → logprob: -10.578825950622559

Token 9: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.03951140493154526
    2. '```' → logprob: -4.164511203765869
    3. ' for' → logprob: -5.289511203765869
    4. ' if' → logprob: -5.789511203765869
    5. 'return' → logprob: -6.039511203765869
    6. ' return' → logprob: -6.164511203765869
    7. '    ' → logprob: -6.539511203765869
    8. ' ' → logprob: -6.539511203765869
    9. 'if' → logprob: -6.664511203765869
    10. '`' → logprob: -6.664511203765869

Token 10: ' p' (ID: 275)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4239836633205414
    2. ' b' → logprob: -1.9239836931228638
    3. ' token' → logprob: -2.798983573913574
    4. ' byte' → logprob: -2.798983573913574
    5. ' i' → logprob: -3.298983573913574
    6. ' c' → logprob: -3.548983573913574
    7. ' char' → logprob: -4.923983573913574
    8. ' element' → logprob: -6.298983573913574
    9. ' item' → logprob: -7.048983573913574
    10. ' part' → logprob: -7.923983573913574

Token 11: ',' (ID: 11)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.040494680404663
    2. ' in' → logprob: -1.165494680404663
    3. 'at' → logprob: -2.415494680404663
    4. 'iece' → logprob: -2.540494680404663
    5. 'i' → logprob: -2.665494680404663
    6. 'attern' → logprob: -2.790494680404663
    7. 'e' → logprob: -4.915494918823242
    8. 'in' → logprob: -5.415494918823242
    9. '_' → logprob: -5.665494918823242
    10. 'r' → logprob: -5.790494918823242

Token 12: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.09088094532489777
    2. 'b' → logprob: -2.465880870819092
    3. ' s' → logprob: -6.465880870819092
    4. ' c' → logprob: -8.46588134765625
    5. 's' → logprob: -8.84088134765625
    6. 'c' → logprob: -11.09088134765625
    7. ' ' → logprob: -12.71588134765625
    8. ' bs' → logprob: -13.71588134765625
    9. ' p' → logprob: -13.84088134765625
    10. ' d' → logprob: -14.09088134765625

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02660064958035946
    2. 'in' → logprob: -3.6516005992889404
    3. '  ' → logprob: -9.15160083770752
    4. ' ' → logprob: -9.40160083770752
    5. ',' → logprob: -9.90160083770752
    6. '_in' → logprob: -11.40160083770752
    7. '   ' → logprob: -11.40160083770752
    8. '_' → logprob: -11.52660083770752
    9. '<|end|>' → logprob: -12.15160083770752
    10. ')' → logprob: -13.02660083770752

Token 14: ' zip' (ID: 16216)
  Prédit: ' zip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' zip' → logprob: -0.05503688007593155
    2. 'zip' → logprob: -2.930036783218384
    3. 'pattern' → logprob: -9.680036544799805
    4. ' pattern' → logprob: -9.930036544799805
    5. '(zip' → logprob: -10.180036544799805
    6. '.zip' → logprob: -13.430036544799805
    7. ' zipped' → logprob: -13.930036544799805
    8. 'pat' → logprob: -14.055036544799805
    9. '_zip' → logprob: -14.180036544799805
    10. ' ' → logprob: -14.430036544799805

Token 15: '(pattern' (ID: 62660)
  Prédit: '(pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pattern' → logprob: -0.07380670309066772
    2. '(' → logprob: -2.6988067626953125
    3. '(p' → logprob: -5.5738067626953125
    4. ' (' → logprob: -10.073806762695312
    5. '(P' → logprob: -12.323806762695312
    6. '((' → logprob: -12.948806762695312
    7. '(
' → logprob: -13.073806762695312
    8. 'pattern' → logprob: -13.073806762695312
    9. '(protocol' → logprob: -13.073806762695312
    10. '(pair' → logprob: -13.448806762695312

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0007321976590901613
    2. ' ,' → logprob: -7.375732421875
    3. '):' → logprob: -9.625732421875
    4. ',p' → logprob: -11.000732421875
    5. '   ' → logprob: -12.125732421875
    6. ',b' → logprob: -12.500732421875
    7. '(p' → logprob: -12.625732421875
    8. '[' → logprob: -13.250732421875
    9. ')' → logprob: -13.375732421875
    10. '`,' → logprob: -14.375732421875

Token 17: ' byte' (ID: 9239)
  Prédit: ' byte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' byte' → logprob: -0.07895082235336304
    2. 'byte' → logprob: -2.578950881958008
    3. ')' → logprob: -10.453950881958008
    4. '.byte' → logprob: -11.953950881958008
    5. 'b' → logprob: -12.203950881958008
    6. '<byte' → logprob: -12.328950881958008
    7. ' )' → logprob: -12.578950881958008
    8. '_byte' → logprob: -12.828950881958008
    9. ' ' → logprob: -13.078950881958008
    10. '(byte' → logprob: -13.203950881958008

Token 18: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0005663761985488236
    2. 's' → logprob: -7.750566482543945
    3. '_s' → logprob: -9.375566482543945
    4. '_' → logprob: -11.250566482543945
    5. 'str' → logprob: -11.250566482543945
    6. ')_' → logprob: -12.250566482543945
    7. '_string' → logprob: -12.375566482543945
    8. ')' → logprob: -12.375566482543945
    9. ' _' → logprob: -12.875566482543945
    10. '_strings' → logprob: -13.375566482543945

Token 19: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00015741224342491478
    2. '):
' → logprob: -9.500157356262207
    3. ':' → logprob: -9.875157356262207
    4. ')' → logprob: -10.875157356262207
    5. '   ' → logprob: -12.125157356262207
    6. ' ):' → logprob: -13.500157356262207
    7. ''):' → logprob: -13.875157356262207
    8. '):
' → logprob: -14.250157356262207
    9. '       ' → logprob: -14.625157356262207
    10. '}:' → logprob: -14.875157356262207

Token 20: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6886420249938965
    2. '       ' → logprob: -1.1886420249938965
    3. '):' → logprob: -1.6886420249938965
    4. ' :' → logprob: -6.0636420249938965
    5. '):
' → logprob: -6.3136420249938965
    6. ':
' → logprob: -7.0636420249938965
    7. ')' → logprob: -7.1886420249938965
    8. ',' → logprob: -7.4386420249938965
    9. '():' → logprob: -7.4386420249938965
    10. '   ' → logprob: -8.313642501831055

Token 21: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038045622408390045
    2. '           ' → logprob: -3.913045644760132
    3. ' if' → logprob: -4.288045406341553
    4. 'if' (adapté à ' if') → logprob: -6.413045406341553
    5. '   ' → logprob: -7.163045406341553
    6. '```' → logprob: -7.288045406341553
    7. '        ' → logprob: -8.788045883178711
    8. '    ' → logprob: -9.038045883178711
    9. '      ' → logprob: -9.663045883178711
    10. '<|end|>' → logprob: -10.538045883178711

Token 22: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.0017377781914547086
    2. 'p' → logprob: -6.376737594604492
    3. ' ' → logprob: -10.376737594604492
    4. '    ' → logprob: -13.751737594604492
    5. ' not' → logprob: -13.751737594604492
    6. '(p' → logprob: -13.876737594604492
    7. ' (' → logprob: -15.126737594604492
    8. '	p' → logprob: -15.751737594604492
    9. '<|end|>' → logprob: -16.251737594604492
    10. '  ' → logprob: -16.314237594604492

Token 23: ' ==' (ID: 951)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.5422864556312561
    2. '!=' → logprob: -1.0422863960266113
    3. '==' → logprob: -3.0422863960266113
    4. ' ==' → logprob: -4.042286396026611
    5. '=' → logprob: -8.16728687286377
    6. ')' → logprob: -9.66728687286377
    7. '!==' → logprob: -10.04228687286377
    8. '>' → logprob: -10.16728687286377
    9. '&' → logprob: -10.29228687286377
    10. ' ' → logprob: -10.79228687286377

Token 24: ' '' (ID: 461)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.24315857887268066
    2. ' ' → logprob: -2.4931585788726807
    3. '32' → logprob: -2.6181585788726807
    4. ' b' → logprob: -3.1181585788726807
    5. '0' → logprob: -5.368158340454102
    6. '1' → logprob: -5.868158340454102
    7. ''' → logprob: -6.493158340454102
    8. '"' → logprob: -6.618158340454102
    9. '   ' → logprob: -6.868158340454102
    10. '  ' → logprob: -7.118158340454102

Token 25: '0' (ID: 15)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.19919224083423615
    2. '?' → logprob: -2.3241922855377197
    3. '*' → logprob: -2.9491922855377197
    4. ' b' → logprob: -4.699192047119141
    5. ''' → logprob: -5.324192047119141
    6. '0' → logprob: -5.824192047119141
    7. '?'' → logprob: -5.949192047119141
    8. ' ' → logprob: -6.699192047119141
    9. '#' → logprob: -6.824192047119141
    10. ' '' → logprob: -6.824192047119141

Token 26: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08076581358909607
    2. 'x' → logprob: -2.830765724182129
    3. 'b' → logprob: -4.830765724182129
    4. '1' → logprob: -4.955765724182129
    5. '':' → logprob: -5.830765724182129
    6. ''x' → logprob: -7.830765724182129
    7. '0' → logprob: -9.330765724182129
    8. ''s' → logprob: -10.455765724182129
    9. ''b' → logprob: -10.580765724182129
    10. '"' → logprob: -11.455765724182129

Token 27: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.034465242177248
    2. ' ' → logprob: -4.034465312957764
    3. 'and' → logprob: -4.659465312957764
    4. ':' → logprob: -5.409465312957764
    5. 'x' → logprob: -6.534465312957764
    6. ' a' → logprob: -8.659464836120605
    7. ' or' → logprob: -8.909464836120605
    8. 'b' → logprob: -8.909464836120605
    9. ' :' → logprob: -9.409464836120605
    10. 'a' → logprob: -10.409464836120605

Token 28: ' p' (ID: 275)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.06255955249071121
    2. ' '' → logprob: -3.6875596046447754
    3. ' p' → logprob: -4.187559604644775
    4. 'b' → logprob: -4.562559604644775
    5. ' not' → logprob: -5.062559604644775
    6. ' ' → logprob: -6.312559604644775
    7. ''' → logprob: -7.687559604644775
    8. ' (' → logprob: -8.625059127807617
    9. 'not' → logprob: -8.625059127807617
    10. 'p' → logprob: -9.000059127807617

Token 29: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03562319651246071
    2. '==' → logprob: -3.53562331199646
    3. ' !=' → logprob: -5.785623073577881
    4. ' ' → logprob: -6.410623073577881
    5. '<|end|>' → logprob: -8.285623550415039
    6. '=' → logprob: -8.410623550415039
    7. 'b' → logprob: -9.410623550415039
    8. '!=' → logprob: -9.660623550415039
    9. '  ' → logprob: -9.785623550415039
    10. 'x' → logprob: -10.035623550415039

Token 30: ' '' (ID: 461)
  Prédit: ' ''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '' → logprob: -0.9789270758628845
    2. ' b' → logprob: -1.4789271354675293
    3. ''' → logprob: -1.7289271354675293
    4. 'b' → logprob: -1.8539271354675293
    5. ' ' → logprob: -3.8539271354675293
    6. ''b' → logprob: -4.478927135467529
    7. ' '_'' → logprob: -4.728927135467529
    8. '1' → logprob: -4.978927135467529
    9. ' '?'' → logprob: -6.103927135467529
    10. '_' → logprob: -6.228927135467529

Token 31: '1' (ID: 16)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.4530300199985504
    2. ' b' → logprob: -1.078029990196228
    3. '1' → logprob: -4.453030109405518
    4. ' ' → logprob: -4.828030109405518
    5. ' '' → logprob: -6.203030109405518
    6. '_' → logprob: -7.203030109405518
    7. ' not' → logprob: -7.828030109405518
    8. ' p' → logprob: -8.07802963256836
    9. '   ' → logprob: -8.82802963256836
    10. ''' → logprob: -8.95302963256836

Token 32: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '':' → logprob: -0.3854988217353821
    2. ':' → logprob: -1.3854987621307373
    3. ' ':' → logprob: -3.3854987621307373
    4. ''' → logprob: -3.6354987621307373
    5. ' and' → logprob: -5.385499000549316
    6. ' '' → logprob: -6.135499000549316
    7. '):' → logprob: -7.010499000549316
    8. '       ' → logprob: -8.260499000549316
    9. ''):' → logprob: -8.760499000549316
    10. '           ' → logprob: -8.885499000549316

Token 33: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.46604302525520325
    2. ' and' → logprob: -1.9660429954528809
    3. '       ' → logprob: -2.091042995452881
    4. '           ' → logprob: -2.966042995452881
    5. ' :' → logprob: -3.841042995452881
    6. '        ' → logprob: -5.091042995452881
    7. ' ==' → logprob: -5.216042995452881
    8. '<|end|>' → logprob: -5.216042995452881
    9. ' ' → logprob: -5.341042995452881
    10. '==' → logprob: -6.091042995452881

Token 34: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2294822484254837
    2. '           ' → logprob: -1.8544822931289673
    3. ' if' → logprob: -3.9794821739196777
    4. ':' → logprob: -5.229482173919678
    5. ' continue' → logprob: -5.229482173919678
    6. ' and' → logprob: -5.604482173919678
    7. '       ' → logprob: -5.854482173919678
    8. 'if' (adapté à ' if') → logprob: -5.979482173919678
    9. ' ' → logprob: -6.104482173919678
    10. '            ' → logprob: -6.729482173919678

Token 35: ' b' (ID: 287)
  Prédit: ' p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.051401641219854355
    2. ' b' → logprob: -3.0514016151428223
    3. 'p' → logprob: -6.301401615142822
    4. 'b' → logprob: -7.176401615142822
    5. ' ' → logprob: -8.67640209197998
    6. ' (' → logprob: -10.92640209197998
    7. '(p' → logprob: -11.42640209197998
    8. ' not' → logprob: -12.17640209197998
    9. '  ' → logprob: -13.67640209197998
    10. ' ' → logprob: -13.67640209197998

Token 36: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.029815176501870155
    2. '!=' → logprob: -3.529815196990967
    3. ' ==' → logprob: -10.404814720153809
    4. ' ' → logprob: -11.154814720153809
    5. '==' → logprob: -11.529814720153809
    6. ' not' → logprob: -12.779814720153809
    7. '=' → logprob: -12.779814720153809
    8. ' !==' → logprob: -14.279814720153809
    9. ''' → logprob: -14.404814720153809
    10. '!='' → logprob: -14.529814720153809

Token 37: ' p' (ID: 275)
  Prédit: ' p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' p' → logprob: -0.49959391355514526
    2. 'p' → logprob: -1.62459397315979
    3. ' int' → logprob: -2.24959397315979
    4. 'int' → logprob: -2.62459397315979
    5. ' ord' → logprob: -4.374593734741211
    6. 'ord' → logprob: -6.374593734741211
    7. '(p' → logprob: -6.999593734741211
    8. ' bytes' → logprob: -7.374593734741211
    9. ' (' → logprob: -7.749593734741211
    10. ''' → logprob: -7.999593734741211

Token 38: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1013503149151802
    2. ':
' → logprob: -2.3513503074645996
    3. '               ' → logprob: -7.2263503074646
    4. ':return' → logprob: -8.476350784301758
    5. ':
' → logprob: -9.601350784301758
    6. '           ' → logprob: -9.976350784301758
    7. '):' → logprob: -10.101350784301758
    8. '):
' → logprob: -11.101350784301758
    9. ' :' → logprob: -11.726350784301758
    10. ':

' → logprob: -12.226350784301758

Token 39: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.007858230732381344
    2. '           ' → logprob: -5.2578582763671875
    3. ' continue' → logprob: -6.8828582763671875
    4. ':' → logprob: -7.3828582763671875
    5. ' return' → logprob: -8.007858276367188
    6. ':return' → logprob: -8.132858276367188
    7. '              ' → logprob: -9.257858276367188
    8. ' :' → logprob: -10.382858276367188
    9. '             ' → logprob: -10.382858276367188
    10. '       ' → logprob: -10.507858276367188

Token 40: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4114690124988556
    2. 'return' (adapté à ' return') → logprob: -1.1614689826965332
    3. '               ' → logprob: -4.161468982696533
    4. '                   ' → logprob: -4.786468982696533
    5. ':return' → logprob: -8.911469459533691
    6. '```' → logprob: -9.661469459533691
    7. '           ' → logprob: -9.786469459533691
    8. '                ' → logprob: -10.161469459533691
    9. '\n' → logprob: -10.911469459533691
    10. '   ' → logprob: -11.411469459533691

Token 41: ' False' (ID: 7983)
  Prédit: ' False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' False' → logprob: -0.39713847637176514
    2. ' None' → logprob: -1.3971384763717651
    3. 'False' → logprob: -2.6471385955810547
    4. 'None' → logprob: -4.647138595581055
    5. ' ' → logprob: -11.522138595581055
    6. ' True' → logprob: -13.397138595581055
    7. ' false' → logprob: -14.897138595581055
    8. ' F' → logprob: -15.022138595581055
    9. ' ' → logprob: -15.147138595581055
    10. 'True' → logprob: -15.897138595581055

Token 42: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6545708775520325
    2. '   ' → logprob: -0.9045708775520325
    3. '
' → logprob: -3.2795708179473877
    4. '\n' → logprob: -3.9045708179473877
    5. '    
' → logprob: -4.529571056365967
    6. '```' → logprob: -6.154571056365967
    7. ' 
' → logprob: -6.904571056365967
    8. '  
' → logprob: -7.154571056365967
    9. '<|end|>' → logprob: -8.154570579528809
    10. '\' → logprob: -8.154570579528809

Token 43: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2947254478931427
    2. '       ' → logprob: -1.4197254180908203
    3. '
' → logprob: -5.66972541809082
    4. '```' → logprob: -5.66972541809082
    5. '    
' → logprob: -6.04472541809082
    6. '\n' → logprob: -6.91972541809082
    7. ' 
' → logprob: -7.41972541809082
    8. ')' → logprob: -7.66972541809082
    9. '   
' → logprob: -8.29472541809082
    10. '  
' → logprob: -8.41972541809082

Token 44: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20325233042240143
    2. ' return' → logprob: -2.4532523155212402
    3. 'return' (adapté à ' return') → logprob: -2.9532523155212402
    4. ')' → logprob: -4.07825231552124
    5. ' ' → logprob: -5.20325231552124
    6. ':return' → logprob: -5.32825231552124
    7. '```' → logprob: -5.32825231552124
    8. '       ' → logprob: -5.95325231552124
    9. '
' → logprob: -6.07825231552124
    10. '    
' → logprob: -6.20325231552124

Token 45: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.02975083328783512
    2. ' True' → logprob: -3.5297508239746094
    3. '   ' → logprob: -14.77975082397461
    4. '(True' → logprob: -17.15475082397461
    5. '=True' → logprob: -17.40475082397461
    6. ' ' → logprob: -17.52975082397461
    7. 'true' → logprob: -18.27975082397461
    8. '```' → logprob: -18.40475082397461
    9. ' ' → logprob: -19.27975082397461
    10. 'False' → logprob: -19.52975082397461

Token 46: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 47: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 48: ' count' (ID: 3605)
  Prédit: ' match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.2440015822649002
    2. ' decode' → logprob: -2.994001626968384
    3. ' check' → logprob: -3.119001626968384
    4. ' parse' → logprob: -3.494001626968384
    5. ' find' → logprob: -3.619001626968384
    6. ' count' → logprob: -4.494001388549805
    7. ' test' → logprob: -4.869001388549805
    8. ' bit' → logprob: -4.994001388549805
    9. ' encode' → logprob: -5.244001388549805
    10. ' process' → logprob: -5.244001388549805

Token 49: '_pos' (ID: 14692)
  Prédit: '_matches'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_matches' → logprob: -0.7528159022331238
    2. '_' → logprob: -1.6278159618377686
    3. '_pattern' → logprob: -2.2528159618377686
    4. '_patterns' → logprob: -2.2528159618377686
    5. '_matching' → logprob: -3.0028159618377686
    6. '_occ' → logprob: -3.2528159618377686
    7. '_bytes' → logprob: -4.5028157234191895
    8. '_match' → logprob: -5.1278157234191895
    9. '_bits' → logprob: -5.2528157234191895
    10. '_byte' → logprob: -5.8778157234191895

Token 50: 's' (ID: 82)
  Prédit: 'itions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'itions' → logprob: -0.6083877682685852
    2. 'ibilities' → logprob: -2.2333877086639404
    3. 'essions' → logprob: -2.3583877086639404
    4. 'sible' → logprob: -2.8583877086639404
    5. 'itional' → logprob: -3.1083877086639404
    6. 'itive' → logprob: -3.2333877086639404
    7. '(pattern' → logprob: -3.3583877086639404
    8. 'ible' → logprob: -3.7333877086639404
    9. 'itives' → logprob: -4.9833879470825195
    10. 's' → logprob: -5.2333879470825195

Token 51: 'ibilities' (ID: 25632)
  Prédit: 'ible'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ible' → logprob: -0.16045483946800232
    2. 'ibilities' → logprob: -1.9104548692703247
    3. 'ibil' → logprob: -8.785454750061035
    4. 'ibl' → logprob: -10.035454750061035
    5. 'ibility' → logprob: -11.785454750061035
    6. '```' → logprob: -11.910454750061035
    7. 'ibile' → logprob: -12.160454750061035
    8. 'ibble' → logprob: -12.535454750061035
    9. '_' → logprob: -12.785454750061035
    10. 'ib' → logprob: -12.910454750061035

Token 52: '(byte' (ID: 36692)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.022690799087285995
    2. '(pattern' → logprob: -4.022690773010254
    3. ' (' → logprob: -6.022690773010254
    4. '(p' → logprob: -7.272690773010254
    5. '('' → logprob: -7.897690773010254
    6. '("("' → logprob: -8.022690773010254
    7. '(def' → logprob: -8.772690773010254
    8. '(count' → logprob: -9.147690773010254
    9. '(len' → logprob: -9.647690773010254
    10. '(paren' → logprob: -10.522690773010254

Token 53: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.011911180801689625
    2. 's' → logprob: -4.761911392211914
    3. '):' → logprob: -6.261911392211914
    4. '_s' → logprob: -8.261911392211914
    5. 'str' → logprob: -8.636911392211914
    6. '   ' → logprob: -8.761911392211914
    7. '_strings' → logprob: -9.136911392211914
    8. 'string' → logprob: -9.261911392211914
    9. '```' → logprob: -9.386911392211914
    10. '_string' → logprob: -9.386911392211914

Token 54: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.038131795823574066
    2. '):' → logprob: -3.2881317138671875
    3. ':' → logprob: -9.788131713867188
    4. ' ,' → logprob: -11.663131713867188
    5. '   ' → logprob: -12.038131713867188
    6. ',p' → logprob: -12.538131713867188
    7. '[' → logprob: -12.913131713867188
    8. ')' → logprob: -13.288131713867188
    9. ',b' → logprob: -13.413131713867188
    10. '):
' → logprob: -13.413131713867188

Token 55: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0038519781082868576
    2. ' ' → logprob: -6.503851890563965
    3. '    ' → logprob: -7.003851890563965
    4. '```' → logprob: -8.503851890563965
    5. '<|end|>' → logprob: -8.753851890563965
    6. 'n' → logprob: -8.878851890563965
    7. '  ' → logprob: -9.003851890563965
    8. '    
' → logprob: -9.003851890563965
    9. ' n' → logprob: -9.378851890563965
    10. '0' → logprob: -9.503851890563965

Token 56: ' #' (ID: 1069)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.12259241938591003
    2. ' possibilities' → logprob: -3.2475924491882324
    3. '   ' → logprob: -3.7475924491882324
    4. 'count' → logprob: -3.8725924491882324
    5. ' total' → logprob: -4.122592449188232
    6. ' result' → logprob: -4.997592449188232
    7. ' n' → logprob: -6.122592449188232
    8. '```' → logprob: -6.247592449188232
    9. ' return' → logprob: -6.747592449188232
    10. ' possible' → logprob: -7.372592449188232

Token 57: ' Count' (ID: 6789)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.18338531255722046
    2. '   ' → logprob: -2.5583853721618652
    3. ' count' → logprob: -3.1833853721618652
    4. ' c' → logprob: -4.933385372161865
    5. ' space' → logprob: -5.183385372161865
    6. '    ' → logprob: -5.433385372161865
    7. ' possible' → logprob: -5.683385372161865
    8. '  ' → logprob: -5.933385372161865
    9. 'count' → logprob: -5.933385372161865
    10. 'c' → logprob: -5.933385372161865

Token 58: ' how' (ID: 1495)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0207992792129517
    2. '0' → logprob: -1.3957992792129517
    3. '_' → logprob: -2.020799160003662
    4. ' ' → logprob: -2.770799160003662
    5. 'def' → logprob: -3.020799160003662
    6. '   ' → logprob: -3.145799160003662
    7. '<|end|>' → logprob: -3.770799160003662
    8. '    ' → logprob: -4.520799160003662
    9. '_possible' → logprob: -4.645799160003662
    10. 's' → logprob: -4.895799160003662

Token 59: ' many' (ID: 1991)
  Prédit: ' many'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' many' → logprob: -0.272538959980011
    2. 'def' → logprob: -2.147538900375366
    3. 'many' → logprob: -3.272538900375366
    4. 'possible' → logprob: -3.647538900375366
    5. ' possible' → logprob: -4.022539138793945
    6. '   ' → logprob: -4.272539138793945
    7. ' the' → logprob: -5.397539138793945
    8. 's' → logprob: -5.522539138793945
    9. '_possible' → logprob: -5.647539138793945
    10. ' ' → logprob: -6.397539138793945

Token 60: ' bytes' (ID: 11643)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8658400177955627
    2. '0' → logprob: -1.990839958190918
    3. 'def' → logprob: -2.740839958190918
    4. '1' → logprob: -2.865839958190918
    5. ' bytes' → logprob: -2.865839958190918
    6. ' def' → logprob: -3.365839958190918
    7. ' possibilities' → logprob: -3.615839958190918
    8. 'possible' → logprob: -3.615839958190918
    9. ' possible' → logprob: -3.865839958190918
    10. ' zeros' → logprob: -4.240839958190918

Token 61: ' possible' (ID: 4149)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' have' → logprob: -1.1669083833694458
    2. ' are' → logprob: -1.2919083833694458
    3. ' in' → logprob: -1.6669083833694458
    4. ' possible' → logprob: -2.9169082641601562
    5. 'possible' → logprob: -3.4169082641601562
    6. '```' → logprob: -3.5419082641601562
    7. ' match' → logprob: -3.6669082641601562
    8. ' can' → logprob: -4.041908264160156
    9. '   ' → logprob: -4.416908264160156
    10. ' of' → logprob: -4.541908264160156

Token 62: ' for' (ID: 395)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.084420084953308
    2. '   ' → logprob: -1.834420084953308
    3. '<|end|>' → logprob: -1.959420084953308
    4. ' with' → logprob: -2.3344202041625977
    5. ' given' → logprob: -2.7094202041625977
    6. ' for' → logprob: -3.2094202041625977
    7. '```' → logprob: -3.7094202041625977
    8. ' =' → logprob: -3.9594202041625977
    9. '=' → logprob: -4.334420204162598
    10. ' in' → logprob: -4.584420204162598

Token 63: ' a' (ID: 261)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' each' → logprob: -1.6471619606018066
    2. 'def' → logprob: -2.3971619606018066
    3. 'each' → logprob: -2.3971619606018066
    4. ' the' → logprob: -2.3971619606018066
    5. '<|end|>' → logprob: -2.3971619606018066
    6. 'the' → logprob: -2.6471619606018066
    7. '```' → logprob: -2.6471619606018066
    8. ' given' → logprob: -2.7721619606018066
    9. 'byte' → logprob: -2.8971619606018066
    10. ' byte' → logprob: -3.2721619606018066

Token 64: ' single' (ID: 4590)
  Prédit: ' given'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' given' → logprob: -0.08297425508499146
    2. ' pattern' → logprob: -3.7079741954803467
    3. 'given' → logprob: -3.7079741954803467
    4. 'pattern' → logprob: -4.582974433898926
    5. '?' → logprob: -5.457974433898926
    6. ' byte' → logprob: -5.457974433898926
    7. ' ' → logprob: -5.832974433898926
    8. 'def' → logprob: -6.082974433898926
    9. 'byte' → logprob: -6.457974433898926
    10. ' single' → logprob: -6.582974433898926

Token 65: ' byte' (ID: 9239)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.753890037536621
    2. '?' → logprob: -1.878890037536621
    3. ' '' → logprob: -2.128890037536621
    4. ' byte' → logprob: -2.378890037536621
    5. ' pattern' → logprob: -2.503890037536621
    6. 'byte' → logprob: -2.878890037536621
    7. '0' → logprob: -3.003890037536621
    8. ' ' → logprob: -3.253890037536621
    9. 'pattern' → logprob: -3.378890037536621
    10. ' '?'' → logprob: -3.378890037536621

Token 66: ' pattern' (ID: 8302)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6746676564216614
    2. 'def' → logprob: -1.7996675968170166
    3. ' =' → logprob: -2.7996675968170166
    4. ':' → logprob: -2.9246675968170166
    5. '```' → logprob: -3.2996675968170166
    6. ' ' → logprob: -3.6746675968170166
    7. ' def' → logprob: -3.7996675968170166
    8. 's' → logprob: -3.9246675968170166
    9. ' with' → logprob: -4.299667835235596
    10. '<|end|>' → logprob: -4.424667835235596

Token 67: ' matching' (ID: 20238)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.15955513715744019
    2. 'def' → logprob: -2.284555196762085
    3. '<|end|>' → logprob: -3.909555196762085
    4. '```' → logprob: -5.034554958343506
    5. ' ' → logprob: -5.159554958343506
    6. 'possible' → logprob: -6.034554958343506
    7. ' def' → logprob: -6.409554958343506
    8. '<|end|>' → logprob: -6.409554958343506
    9. ':' → logprob: -6.659554958343506
    10. ' possible' → logprob: -7.034554958343506

Token 68: ' byte' (ID: 9239)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9127639532089233
    2. '   ' → logprob: -1.7877639532089233
    3. '<|end|>' → logprob: -2.037764072418213
    4. '```' → logprob: -2.787764072418213
    5. ' possible' → logprob: -3.287764072418213
    6. ' return' → logprob: -3.287764072418213
    7. '<|end|>' → logprob: -3.662764072418213
    8. ' def' → logprob: -4.162764072418213
    9. '(' → logprob: -4.287764072418213
    10. ' =' → logprob: -4.537764072418213

Token 69: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.0595215559005737
    2. '_' → logprob: -1.8095215559005737
    3. 's' → logprob: -1.9345215559005737
    4. '   ' → logprob: -2.1845216751098633
    5. ' _' → logprob: -3.0595216751098633
    6. 'def' → logprob: -3.1845216751098633
    7. '  ' → logprob: -3.4345216751098633
    8. ' ' → logprob: -4.184521675109863
    9. '_s' → logprob: -4.434521675109863
    10. '_count' → logprob: -4.559521675109863

Token 70: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7267042398452759
    2. 'def' → logprob: -0.8517042398452759
    3. '<|end|>' → logprob: -2.9767041206359863
    4. ' def' → logprob: -4.726704120635986
    5. '```' → logprob: -4.726704120635986
    6. ':' → logprob: -4.976704120635986
    7. ' ' → logprob: -5.476704120635986
    8. '<|end|>' → logprob: -5.976704120635986
    9. '(' → logprob: -6.351704120635986
    10. '
' → logprob: -7.476704120635986

Token 71: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09490498155355453
    2. 'def' → logprob: -2.594904899597168
    3. ' def' → logprob: -5.094904899597168
    4. 's' → logprob: -6.094904899597168
    5. ' ' → logprob: -6.594904899597168
    6. ':' → logprob: -6.844904899597168
    7. '```' → logprob: -6.844904899597168
    8. '<|end|>' → logprob: -7.094904899597168
    9. ' possible' → logprob: -7.469904899597168
    10. ',' → logprob: -7.469904899597168

Token 72: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21869398653507233
    2. 'def' → logprob: -2.718693971633911
    3. ' count' → logprob: -3.468693971633911
    4. ' possibilities' → logprob: -3.593693971633911
    5. ' possible' → logprob: -3.968693971633911
    6. ' def' → logprob: -4.59369421005249
    7. 'count' → logprob: -4.59369421005249
    8. 'possible' → logprob: -4.71869421005249
    9. '    ' → logprob: -4.96869421005249
    10. ' ' → logprob: -5.71869421005249

Token 73: ' byte' (ID: 9239)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31726208329200745
    2. ' count' → logprob: -2.5672621726989746
    3. ' possibilities' → logprob: -2.8172621726989746
    4. ' possible' → logprob: -2.9422621726989746
    5. 'possible' → logprob: -4.317262172698975
    6. 'count' → logprob: -4.442262172698975
    7. 'def' → logprob: -4.442262172698975
    8. '    ' → logprob: -4.692262172698975
    9. ' total' → logprob: -4.817262172698975
    10. ' def' → logprob: -4.942262172698975

Token 74: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.4543449282646179
    2. 's' → logprob: -1.9543449878692627
    3. '_values' → logprob: -2.9543449878692627
    4. '_s' → logprob: -3.4543449878692627
    5. '_' → logprob: -3.8293449878692627
    6. 'def' → logprob: -4.079344749450684
    7. '_pos' → logprob: -4.079344749450684
    8. '   ' → logprob: -4.329344749450684
    9. '_value' → logprob: -4.829344749450684
    10. '_val' → logprob: -5.079344749450684

Token 75: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5653141140937805
    2. ')' → logprob: -1.4403140544891357
    3. '.startswith' → logprob: -3.5653140544891357
    4. 'def' → logprob: -3.6903140544891357
    5. '=' → logprob: -3.6903140544891357
    6. '[' → logprob: -4.315314292907715
    7. ' is' → logprob: -4.440314292907715
    8. '<|end|>' → logprob: -4.565314292907715
    9. ' ==' → logprob: -4.815314292907715
    10. '_len' → logprob: -5.065314292907715

Token 76: ' ' (ID: 220)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.055265314877033234
    2. ' '' → logprob: -3.680265426635742
    3. 'a' → logprob: -4.680265426635742
    4. ''' → logprob: -5.180265426635742
    5. ' ' → logprob: -5.430265426635742
    6. ' an' → logprob: -6.180265426635742
    7. ' bytes' → logprob: -6.805265426635742
    8. ' not' → logprob: -7.055265426635742
    9. '<|end|>' → logprob: -7.180265426635742
    10. '"' → logprob: -7.305265426635742

Token 77: '8' (ID: 23)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.5533407330513
    2. ' a' → logprob: -0.9283407330513
    3. ''a' → logprob: -4.428340911865234
    4. ''' → logprob: -5.678340911865234
    5. ' bytes' → logprob: -6.053340911865234
    6. ' ' → logprob: -6.053340911865234
    7. ' '' → logprob: -6.303340911865234
    8. 'bytes' → logprob: -6.428340911865234
    9. ' an' → logprob: -6.803340911865234
    10. ' given' → logprob: -7.053340911865234

Token 78: ' chars' (ID: 47991)
  Prédit: '-bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-bit' → logprob: -0.7817770838737488
    2. '-' → logprob: -1.4067771434783936
    3. ' -' → logprob: -2.9067771434783936
    4. '-length' → logprob: -3.1567771434783936
    5. ' bits' → logprob: -3.5317771434783936
    6. '   ' → logprob: -3.7817771434783936
    7. ' '' → logprob: -4.0317769050598145
    8. ''' → logprob: -4.1567769050598145
    9. 'bit' → logprob: -4.1567769050598145
    10. ' ' → logprob: -4.2817769050598145

Token 79: ' of' (ID: 328)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.43944495916366577
    2. '   ' → logprob: -1.6894450187683105
    3. 'def' → logprob: -2.0644450187683105
    4. '<|end|>' → logprob: -3.9394450187683105
    5. ',' → logprob: -5.1894450187683105
    6. ' def' → logprob: -5.3144450187683105
    7. ' ' → logprob: -5.4394450187683105
    8. ':
' → logprob: -6.3144450187683105
    9. '):' → logprob: -6.8144450187683105
    10. '<|end|>' → logprob: -7.0644450187683105

Token 80: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.18032540380954742
    2. ' '' → logprob: -2.305325508117676
    3. ' ' → logprob: -3.555325508117676
    4. '0' → logprob: -4.055325508117676
    5. '01' → logprob: -4.305325508117676
    6. '012' → logprob: -6.805325508117676
    7. ' {'' → logprob: -6.930325508117676
    8. '`' → logprob: -7.180325508117676
    9. '{'' → logprob: -7.180325508117676
    10. '010' → logprob: -7.680325508117676

Token 81: '0' (ID: 15)
  Prédit: '01'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -0.1412133127450943
    2. '0' → logprob: -2.1412134170532227
    3. '?' → logprob: -5.391213417053223
    4. ''' → logprob: -5.391213417053223
    5. 'x' → logprob: -6.516213417053223
    6. '10' → logprob: -7.141213417053223
    7. '010' → logprob: -7.391213417053223
    8. '1' → logprob: -7.391213417053223
    9. 'X' → logprob: -7.641213417053223
    10. ' ' → logprob: -7.891213417053223

Token 82: '','' (ID: 4074)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.1089969277381897
    2. '',' → logprob: -2.358996868133545
    3. '','' → logprob: -5.733996868133545
    4. ''or' → logprob: -5.983996868133545
    5. ''s' → logprob: -6.358996868133545
    6. ',' → logprob: -7.233996868133545
    7. 's' → logprob: -8.983997344970703
    8. ' or' → logprob: -8.983997344970703
    9. '/' → logprob: -9.733997344970703
    10. ','' → logprob: -9.983997344970703

Token 83: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00945135485380888
    2. ''' → logprob: -5.009451389312744
    3. ',' → logprob: -6.384451389312744
    4. '?' → logprob: -8.384450912475586
    5. '

' → logprob: -9.009450912475586
    6. '',' → logprob: -9.009450912475586
    7. 'x' → logprob: -9.134450912475586
    8. '','' → logprob: -9.259450912475586
    9. ''s' → logprob: -9.759450912475586
    10. '
' → logprob: -10.009450912475586

Token 84: '','' (ID: 4074)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02323790453374386
    2. '',' → logprob: -4.523237705230713
    3. '','' → logprob: -4.898237705230713
    4. ''or' → logprob: -6.023237705230713
    5. ' or' → logprob: -6.523237705230713
    6. ''s' → logprob: -8.148238182067871
    7. ','' → logprob: -9.148238182067871
    8. 'or' → logprob: -9.523238182067871
    9. 's' → logprob: -9.898238182067871
    10. '012' → logprob: -10.148238182067871

Token 85: 'x' (ID: 87)
  Prédit: '?'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '?' → logprob: -0.8016130328178406
    2. 'x' → logprob: -1.0516130924224854
    3. '?'' → logprob: -2.4266130924224854
    4. ''' → logprob: -2.6766130924224854
    5. 'X' → logprob: -4.051612854003906
    6. '1' → logprob: -4.801612854003906
    7. '*' → logprob: -4.926612854003906
    8. '_' → logprob: -6.176612854003906
    9. ''x' → logprob: -6.301612854003906
    10. '-' → logprob: -6.551612854003906

Token 86: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2917998731136322
    2. ''):' → logprob: -1.6667999029159546
    3. '')' → logprob: -2.916799783706665
    4. ''):
' → logprob: -5.916800022125244
    5. '':' → logprob: -5.916800022125244
    6. ''s' → logprob: -6.416800022125244
    7. '',' → logprob: -7.166800022125244
    8. 'def' → logprob: -8.041799545288086
    9. ''x' → logprob: -8.041799545288086
    10. 'x' → logprob: -8.166799545288086

Token 87: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.12295111268758774
    2. ':' → logprob: -2.622951030731201
    3. 'def' → logprob: -3.372951030731201
    4. '<|end|>' → logprob: -5.622951030731201
    5. '```' → logprob: -7.122951030731201
    6. ',' → logprob: -7.372951030731201
    7. '
' → logprob: -7.497951030731201
    8. ':
' → logprob: -7.622951030731201
    9. ' ' → logprob: -7.622951030731201
    10. '):' → logprob: -8.12295150756836

Token 88: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01697053387761116
    2. 'def' → logprob: -5.016970634460449
    3. ' possibilities' → logprob: -6.016970634460449
    4. '```' → logprob: -6.391970634460449
    5. ' count' → logprob: -6.516970634460449
    6. 'count' → logprob: -6.641970634460449
    7. 'possible' → logprob: -6.891970634460449
    8. ' possible' → logprob: -7.016970634460449
    9. 'poss' → logprob: -7.641970634460449
    10. 'n' → logprob: -8.39197063446045

Token 89: ' returns' (ID: 7377)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.6698104739189148
    2. '   ' → logprob: -1.5448105335235596
    3. 'count' → logprob: -2.4198105335235596
    4. 'def' → logprob: -3.0448105335235596
    5. ' possibilities' → logprob: -3.0448105335235596
    6. 'poss' → logprob: -3.7948105335235596
    7. ' possible' → logprob: -4.1698102951049805
    8. 'possible' → logprob: -4.4198102951049805
    9. ' total' → logprob: -4.5448102951049805
    10. ' def' → logprob: -4.9198102951049805

Token 90: ' number' (ID: 2086)
  Prédit: ' an'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' an' → logprob: -0.7360514998435974
    2. ' the' → logprob: -1.3610515594482422
    3. ' ' → logprob: -1.9860515594482422
    4. ' int' → logprob: -2.861051559448242
    5. '0' → logprob: -3.486051559448242
    6. '1' → logprob: -3.986051559448242
    7. 'int' → logprob: -4.236051559448242
    8. ' number' → logprob: -6.611051559448242
    9. ' a' → logprob: -6.736051559448242
    10. 'an' → logprob: -6.986051559448242

Token 91: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2447221726179123
    2. 'def' → logprob: -1.9947221279144287
    3. '```' → logprob: -3.4947221279144287
    4. 'count' → logprob: -3.7447221279144287
    5. ' count' → logprob: -4.619722366333008
    6. '``' → logprob: -5.494722366333008
    7. 'possible' → logprob: -5.994722366333008
    8. 'poss' → logprob: -6.119722366333008
    9. ' def' → logprob: -6.244722366333008
    10. ' possibilities' → logprob: -6.369722366333008

Token 92: ' possible' (ID: 4149)
  Prédit: ' possible'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' possible' → logprob: -0.795551598072052
    2. ' possibilities' → logprob: -1.0455515384674072
    3. 'possible' → logprob: -1.7955515384674072
    4. ' bytes' → logprob: -4.420551776885986
    5. 'poss' → logprob: -5.420551776885986
    6. ' ' → logprob: -5.670551776885986
    7. '<|end|>' → logprob: -6.295551776885986
    8. ' valid' → logprob: -6.420551776885986
    9. ' bits' → logprob: -6.420551776885986
    10. 'bits' → logprob: -7.170551776885986

Token 93: ' bytes' (ID: 11643)
  Prédit: '_bytes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bytes' → logprob: -0.290687620639801
    2. ' bytes' → logprob: -2.1656875610351562
    3. 's' → logprob: -3.2906875610351562
    4. '_values' → logprob: -3.4156875610351562
    5. '_bits' → logprob: -3.5406875610351562
    6. 'bytes' → logprob: -4.165687561035156
    7. '```' → logprob: -4.415687561035156
    8. '_' → logprob: -5.665687561035156
    9. '_byte' → logprob: -6.540687561035156
    10. '_possible' → logprob: -7.290687561035156

Token 94: ' matching' (ID: 20238)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07162458449602127
    2. 'def' → logprob: -2.946624517440796
    3. '```' → logprob: -4.696624755859375
    4. ':' → logprob: -6.196624755859375
    5. ',' → logprob: -6.821624755859375
    6. '`' → logprob: -6.946624755859375
    7. '(' → logprob: -7.321624755859375
    8. 'n' → logprob: -7.946624755859375
    9. ' def' → logprob: -8.321624755859375
    10. '``' → logprob: -8.571624755859375

Token 95: ' the' (ID: 290)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.1693774461746216
    2. '   ' → logprob: -1.1693774461746216
    3. ' ' → logprob: -1.9193774461746216
    4. 'def' → logprob: -2.419377326965332
    5. ' (' → logprob: -2.919377326965332
    6. ' =' → logprob: -3.169377326965332
    7. ' def' → logprob: -4.544377326965332
    8. '1' → logprob: -4.794377326965332
    9. '    ' → logprob: -4.919377326965332
    10. ' `' → logprob: -5.544377326965332

Token 96: ' pattern' (ID: 8302)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7803152203559875
    2. 'pattern' → logprob: -1.1553151607513428
    3. ' pattern' → logprob: -2.4053151607513428
    4. ''' → logprob: -3.4053151607513428
    5. 'byte' → logprob: -3.5303151607513428
    6. ' byte' → logprob: -3.6553151607513428
    7. '```' → logprob: -4.280315399169922
    8. '`' → logprob: -4.905315399169922
    9. '1' → logprob: -4.905315399169922
    10. 'x' → logprob: -6.155315399169922

Token 97: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2228916734457016
    2. 'def' → logprob: -1.8478916883468628
    3. ':' → logprob: -3.4728915691375732
    4. ',' → logprob: -5.972891807556152
    5. '```' → logprob: -6.097891807556152
    6. '(' → logprob: -6.597891807556152
    7. ':
' → logprob: -6.972891807556152
    8. ' def' → logprob: -6.972891807556152
    9. '(n' → logprob: -7.222891807556152
    10. '):' → logprob: -8.347891807556152

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010399751365184784
    2. 'def' → logprob: -4.76039981842041
    3. ':' → logprob: -6.63539981842041
    4. '```' → logprob: -9.13539981842041
    5. ' def' → logprob: -9.38539981842041
    6. '`' → logprob: -9.88539981842041
    7. 'n' → logprob: -10.13539981842041
    8. ',' → logprob: -10.13539981842041
    9. 'count' → logprob: -10.76039981842041
    10. ' ' → logprob: -10.88539981842041

Token 99: ' count' (ID: 3605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08629634976387024
    2. 'count' (adapté à ' count') → logprob: -3.336296319961548
    3. ' count' → logprob: -3.711296319961548
    4. 'n' → logprob: -4.211296558380127
    5. ' ' → logprob: -6.461296558380127
    6. 'def' → logprob: -6.711296558380127
    7. 'c' → logprob: -6.961296558380127
    8. ' possibilities' → logprob: -7.086296558380127
    9. ' possible' → logprob: -7.336296558380127
    10. 'possible' → logprob: -7.586296558380127

Token 100: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014521677047014236
    2. '=' → logprob: -4.264521598815918
    3. '_' → logprob: -8.014521598815918
    4. 's' → logprob: -10.764521598815918
    5. '_=' → logprob: -13.389521598815918
    6. ' ' → logprob: -13.514521598815918
    7. ' _' → logprob: -14.264521598815918
    8. '  ' → logprob: -14.264521598815918
    9. '_space' → logprob: -14.639521598815918
    10. '   ' → logprob: -15.264521598815918

Token 101: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10050846636295319
    2. ' ' → logprob: -2.350508451461792
    3. '0' → logprob: -8.225508689880371
    4. '   ' → logprob: -10.600508689880371
    5. '2' → logprob: -13.100508689880371
    6. '  ' → logprob: -13.725508689880371
    7. '```' → logprob: -13.788008689880371
    8. '(' → logprob: -13.975508689880371
    9. 'int' → logprob: -14.475508689880371
    10. '8' → logprob: -14.663008689880371

Token 102: '0' (ID: 15)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00016611411410849541
    2. '0' → logprob: -9.500165939331055
    3. ' ' → logprob: -9.500165939331055
    4. '256' → logprob: -11.625165939331055
    5. '128' → logprob: -12.625165939331055
    6. '```' → logprob: -13.500165939331055
    7. '2' → logprob: -13.750165939331055
    8. '   ' → logprob: -14.500165939331055
    9. '8' → logprob: -14.750165939331055
    10. '``' → logprob: -15.937665939331055

Token 103: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8997621536254883
    2. ' for' → logprob: -1.1497621536254883
    3. '<|end|>' → logprob: -2.1497621536254883
    4. '
' → logprob: -2.7747621536254883
    5. ' ' → logprob: -3.8997621536254883
    6. 'def' → logprob: -4.024762153625488
    7. 'for' → logprob: -4.274762153625488
    8. ' 
' → logprob: -4.774762153625488
    9. '    
' → logprob: -4.899762153625488
    10. '1' → logprob: -5.024762153625488

Token 104: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7054329514503479
    2. ' for' → logprob: -0.7054329514503479
    3. 'for' → logprob: -4.580432891845703
    4. ' ' → logprob: -7.830432891845703
    5. ' possible' → logprob: -7.830432891845703
    6. '
' → logprob: -8.330432891845703
    7. ' possibilities' → logprob: -8.455432891845703
    8. 'def' → logprob: -8.705432891845703
    9. '    
' → logprob: -9.205432891845703
    10. '  ' → logprob: -9.205432891845703

Token 105: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06880154460668564
    2. ' for' → logprob: -3.1938016414642334
    3. 'x' → logprob: -4.318801403045654
    4. '   ' → logprob: -4.943801403045654
    5. 'def' → logprob: -6.568801403045654
    6. '1' → logprob: -6.818801403045654
    7. 'n' → logprob: -7.318801403045654
    8. ' ' → logprob: -8.068801879882812
    9. 'variable' → logprob: -8.443801879882812
    10. '8' → logprob: -8.568801879882812

Token 106: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.35681313276290894
    2. 'i' → logprob: -1.2318131923675537
    3. ' b' → logprob: -5.606812953948975
    4. 'b' → logprob: -6.106812953948975
    5. ' byte' → logprob: -6.356812953948975
    6. 'byte' → logprob: -7.856812953948975
    7. '_' → logprob: -9.606813430786133
    8. ' _' → logprob: -9.731813430786133
    9. ' bit' → logprob: -10.356813430786133
    10. ' value' → logprob: -10.606813430786133

Token 107: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0013011881383135915
    2. ' ' → logprob: -7.126301288604736
    3. 'in' → logprob: -7.626301288604736
    4. '0' → logprob: -13.126300811767578
    5. 'range' → logprob: -13.626300811767578
    6. ',' → logprob: -14.001300811767578
    7. '<|end|>' → logprob: -14.251300811767578
    8. ' i' → logprob: -14.376300811767578
    9. '	in' → logprob: -14.501300811767578
    10. ' range' → logprob: -14.626300811767578

Token 108: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0040818434208631516
    2. 'range' → logprob: -5.504081726074219
    3. ' xrange' → logprob: -13.879081726074219
    4. ' ' → logprob: -14.004081726074219
    5. '	range' → logprob: -14.129081726074219
    6. '   ' → logprob: -14.879081726074219
    7. '(range' → logprob: -15.254081726074219
    8. '0' → logprob: -16.75408172607422
    9. 'Range' → logprob: -16.87908172607422
    10. ' rang' → logprob: -17.25408172607422

Token 109: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024821963161230087
    2. '256' → logprob: -6.0024824142456055
    3. '(
' → logprob: -12.377482414245605
    4. ' (' → logprob: -14.002482414245605
    5. ' ' → logprob: -14.252482414245605
    6. '   ' → logprob: -14.627482414245605
    7. '2' → logprob: -15.002482414245605
    8. '1' → logprob: -16.87748146057129
    9. '8' → logprob: -17.37748146057129
    10. '0' → logprob: -18.12748146057129

Token 110: '256' (ID: 5780)
  Prédit: '256'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '256' → logprob: -9.088346359931165e-07
    2. '2' → logprob: -14.000000953674316
    3. ' ' → logprob: -18.0
    4. '0' → logprob: -18.25
    5. '255' → logprob: -19.125
    6. '128' → logprob: -19.625
    7. '   ' → logprob: -19.625
    8. '8' → logprob: -20.25
    9. '1' → logprob: -20.875
    10. '26' → logprob: -21.25

Token 111: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.023602169007062912
    2. '):
' → logprob: -3.773602247238159
    3. ' ):' → logprob: -8.023602485656738
    4. '):
' → logprob: -10.898602485656738
    5. ' ):
' → logprob: -11.898602485656738
    6. ':' → logprob: -13.148602485656738
    7. '   ' → logprob: -14.398602485656738
    8. ')' → logprob: -14.398602485656738
    9. '}:' → logprob: -15.398602485656738
    10. '):

' → logprob: -15.398602485656738

Token 112: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0540807731449604
    2. ':' → logprob: -3.1790807247161865
    3. ':
' → logprob: -5.054080963134766
    4. '
' → logprob: -5.804080963134766
    5. '<|end|>' → logprob: -8.179080963134766
    6. '        
' → logprob: -8.304080963134766
    7. ',' → logprob: -8.304080963134766
    8. '):
' → logprob: -8.429080963134766
    9. '   ' → logprob: -8.804080963134766
    10. '  
' → logprob: -9.679080963134766

Token 113: ' b' (ID: 287)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2012922763824463
    2. '
' → logprob: -2.2012922763824463
    3. ' if' → logprob: -3.5762922763824463
    4. ' byte' → logprob: -4.576292037963867
    5. 'byte' → logprob: -5.201292037963867
    6. '<|end|>' → logprob: -5.451292037963867
    7. ' ' → logprob: -5.576292037963867
    8. '        
' → logprob: -5.701292037963867
    9. ' 
' → logprob: -5.701292037963867
    10. '   ' → logprob: -6.451292037963867

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.36858025193214417
    2. 'in' → logprob: -1.2435802221298218
    3. '_bin' → logprob: -4.243580341339111
    4. 'inary' → logprob: -6.368580341339111
    5. '_str' → logprob: -6.618580341339111
    6. 'y' → logprob: -6.743580341339111
    7. '=' → logprob: -7.368580341339111
    8. 'i' → logprob: -8.493579864501953
    9. '_byte' → logprob: -8.743579864501953
    10. 'it' → logprob: -9.493579864501953

Token 115: ' format' (ID: 6011)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.08920630067586899
    2. ' format' → logprob: -2.9642062187194824
    3. 'bin' → logprob: -4.089206218719482
    4. 'f' → logprob: -4.214206218719482
    5. ''{' → logprob: -6.464206218719482
    6. ' f' → logprob: -7.964206218719482
    7. '"{' → logprob: -8.46420669555664
    8. ' bin' → logprob: -9.58920669555664
    9. '   ' → logprob: -12.08920669555664
    10. ' '{' → logprob: -12.46420669555664

Token 116: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -12.87500286102295
    3. 'i' → logprob: -17.375001907348633
    4. '[i' → logprob: -19.750001907348633
    5. ' (' → logprob: -20.125001907348633
    6. 'b' → logprob: -20.250001907348633
    7. ' i' → logprob: -20.250001907348633
    8. '(
' → logprob: -20.375001907348633
    9. ',i' → logprob: -20.750001907348633
    10. '```' → logprob: -21.125001907348633

Token 117: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.110668618930504e-05
    2. ' ,' → logprob: -10.12506103515625
    3. ','' → logprob: -10.87506103515625
    4. '',' → logprob: -13.50006103515625
    5. ''' → logprob: -14.50006103515625
    6. ',
' → logprob: -16.50006103515625
    7. 'b' → logprob: -17.25006103515625
    8. ' ,'' → logprob: -17.37506103515625
    9. ',b' → logprob: -17.62506103515625
    10. '   ' → logprob: -17.87506103515625

Token 118: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.00012035090912831947
    2. '"' → logprob: -9.125120162963867
    3. ' '' → logprob: -11.875120162963867
    4. '08' → logprob: -13.000120162963867
    5. ''o' → logprob: -14.125120162963867
    6. '
' → logprob: -14.875120162963867
    7. '

' → logprob: -15.125120162963867
    8. ''b' → logprob: -16.125120162963867
    9. '`' → logprob: -16.250120162963867
    10. ' ' → logprob: -16.375120162963867

Token 119: '08' (ID: 3062)
  Prédit: '08'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '08' → logprob: 0.0
    2. '008' → logprob: -18.75
    3. '0' → logprob: -18.875
    4. ' ' → logprob: -19.25
    5. 'b' → logprob: -20.125
    6. '8' → logprob: -21.375
    7. '>' → logprob: -21.625
    8. ''' → logprob: -22.375
    9. '080' → logprob: -22.625
    10. '081' → logprob: -23.25

Token 120: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: 0.0
    2. ''b' → logprob: -19.75
    3. ' b' → logprob: -21.25
    4. '')' → logprob: -21.875
    5. '
' → logprob: -22.625
    6. '

' → logprob: -23.125
    7. '	b' → logprob: -23.5
    8. '```' → logprob: -24.375
    9. 'binary' → logprob: -24.625
    10. 'd' → logprob: -24.875

Token 121: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.25194668769836426
    2. ')' → logprob: -1.5019466876983643
    3. '")' → logprob: -11.751946449279785
    4. '')
' → logprob: -12.376946449279785
    5. ''' → logprob: -13.001946449279785
    6. ' )' → logprob: -13.751946449279785
    7. '').' → logprob: -14.501946449279785
    8. '`)' → logprob: -14.876946449279785
    9. ')
' → logprob: -15.126946449279785
    10. '}' → logprob: -16.0019474029541

Token 122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.48473039269447327
    2. '<|end|>' → logprob: -0.9847303628921509
    3. '<|end|>' → logprob: -5.359730243682861
    4. ' if' → logprob: -6.359730243682861
    5. '
' → logprob: -6.484730243682861
    6. ')' → logprob: -6.984730243682861
    7. '        
' → logprob: -7.609730243682861
    8. ' ' → logprob: -7.984730243682861
    9. '   ' → logprob: -8.98473072052002
    10. ':' → logprob: -8.98473072052002

Token 123: ' match' (ID: 3981)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1450641006231308
    2. ' if' → logprob: -2.395064115524292
    3. '       ' → logprob: -3.145064115524292
    4. '
' → logprob: -7.270063877105713
    5. '   ' → logprob: -10.145064353942871
    6. '	if' → logprob: -10.520064353942871
    7. 'def' → logprob: -11.395064353942871
    8. '<|end|>' → logprob: -11.645064353942871
    9. ' ' → logprob: -12.395064353942871
    10. '        
' → logprob: -12.645064353942871

Token 124: ' =' (ID: 314)
  Prédit: '_pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.0010877089807763696
    2. '_' → logprob: -7.001087665557861
    3. '_p' → logprob: -9.25108814239502
    4. '_pat' → logprob: -10.12608814239502
    5. '(pattern' → logprob: -11.87608814239502
    6. '_match' → logprob: -12.12608814239502
    7. 'pattern' → logprob: -12.12608814239502
    8. '(_' → logprob: -12.37608814239502
    9. 'ing' → logprob: -13.00108814239502
    10. '(p' → logprob: -13.12608814239502

Token 125: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.12824486196041107
    2. ' True' → logprob: -2.1282448768615723
    3. 'match' → logprob: -7.378244876861572
    4. 'all' → logprob: -8.003244400024414
    5. ' all' → logprob: -8.378244400024414
    6. ' match' → logprob: -9.503244400024414
    7. '   ' → logprob: -10.128244400024414
    8. '       ' → logprob: -12.128244400024414
    9. '(True' → logprob: -12.753244400024414
    10. '    ' → logprob: -13.628244400024414

Token 126: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004952427931129932
    2. ' for' → logprob: -5.504952430725098
    3. '<|end|>' → logprob: -7.504952430725098
    4. 'for' → logprob: -8.254952430725098
    5. '        
' → logprob: -10.254952430725098
    6. ',' → logprob: -12.004952430725098
    7. '<|end|>' → logprob: -12.379952430725098
    8. '	' → logprob: -12.379952430725098
    9. '
' → logprob: -12.629952430725098
    10. '   ' → logprob: -12.754952430725098

Token 128: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.4120643138885498
    2. '       ' → logprob: -1.6620643138885498
    3. ' for' → logprob: -1.9120643138885498
    4. '   ' → logprob: -8.787064552307129
    5. '	for' → logprob: -10.662064552307129
    6. '
' → logprob: -11.537064552307129
    7. ' ' → logprob: -12.412064552307129
    8. '<|end|>' → logprob: -12.412064552307129
    9. '        
' → logprob: -13.662064552307129
    10. '	' → logprob: -15.537064552307129

Token 129: ' ps' (ID: 10942)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.08814432471990585
    2. ' p' → logprob: -2.713144302368164
    3. 'pb' → logprob: -4.338144302368164
    4. 'j' → logprob: -6.088144302368164
    5. ' pb' → logprob: -6.588144302368164
    6. ' j' → logprob: -7.713144302368164
    7. 'pattern' → logprob: -7.838144302368164
    8. 'pat' → logprob: -8.838144302368164
    9. 'pi' → logprob: -9.213144302368164
    10. 'pc' → logprob: -9.463144302368164

Token 130: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.021372489631175995
    2. ',p' → logprob: -4.146372318267822
    3. ' in' → logprob: -6.896372318267822
    4. 'ymbol' → logprob: -7.146372318267822
    5. ',char' → logprob: -7.771372318267822
    6. 'in' → logprob: -8.02137279510498
    7. ',i' → logprob: -8.02137279510498
    8. ' ,' → logprob: -8.39637279510498
    9. 'char' → logprob: -8.64637279510498
    10. 'r' → logprob: -8.64637279510498

Token 131: ' bs' (ID: 35414)
  Prédit: 'pb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pb' → logprob: -0.6965935826301575
    2. 'bs' → logprob: -0.9465935826301575
    3. ' pb' → logprob: -2.8215935230255127
    4. 'p' → logprob: -3.5715935230255127
    5. ' bs' → logprob: -4.696593761444092
    6. ' p' → logprob: -5.571593761444092
    7. 'ms' → logprob: -5.946593761444092
    8. 'px' → logprob: -6.196593761444092
    9. 'cs' → logprob: -6.196593761444092
    10. 'pt' → logprob: -6.321593761444092

Token 132: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.3491114377975464
    2. 'in' → logprob: -1.4741114377975464
    3. ',' → logprob: -2.724111557006836
    4. 's' → logprob: -9.974111557006836
    5. ' ,' → logprob: -11.099111557006836
    6. ' ' → logprob: -11.349111557006836
    7. ',p' → logprob: -12.349111557006836
    8. '_in' → logprob: -12.474111557006836
    9. 'i' → logprob: -12.724111557006836
    10. ',in' → logprob: -13.224111557006836

Token 133: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.014172444120049477
    2. ' zip' → logprob: -4.264172554016113
    3. '(zip' → logprob: -11.764172554016113
    4. 'byte' → logprob: -15.139172554016113
    5. 'pattern' → logprob: -15.139172554016113
    6. 'z' → logprob: -15.264172554016113
    7. 'b' → logprob: -15.514172554016113
    8. '.zip' → logprob: -16.139171600341797
    9. '_zip' → logprob: -16.514171600341797
    10. ' ' → logprob: -18.514171600341797

Token 134: '(byte' (ID: 36692)
  Prédit: '(byte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(byte' → logprob: -0.004103454295545816
    2. '(pattern' → logprob: -6.129103660583496
    3. '(b' → logprob: -6.754103660583496
    4. 'byte' → logprob: -7.254103660583496
    5. 'pattern' → logprob: -11.129103660583496
    6. 'b' → logprob: -11.379103660583496
    7. ' byte' → logprob: -11.629103660583496
    8. '(' → logprob: -13.129103660583496
    9. '   ' → logprob: -13.504103660583496
    10. ' (' → logprob: -13.754103660583496

Token 135: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -7.20734242349863e-05
    2. 'str' → logprob: -9.750072479248047
    3. 's' → logprob: -12.125072479248047
    4. '_s' → logprob: -13.375072479248047
    5. ')' → logprob: -13.500072479248047
    6. '   ' → logprob: -14.250072479248047
    7. 'pattern' → logprob: -14.250072479248047
    8. 'Str' → logprob: -14.625072479248047
    9. '_' → logprob: -14.625072479248047
    10. 'b' → logprob: -14.750072479248047

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010218516690656543
    2. ',b' → logprob: -7.501021862030029
    3. ' ,' → logprob: -7.876021862030029
    4. ',p' → logprob: -9.626021385192871
    5. 'pattern' → logprob: -11.376021385192871
    6. ',s' → logprob: -13.376021385192871
    7. 'b' → logprob: -13.376021385192871
    8. '       ' → logprob: -13.501021385192871
    9. '):' → logprob: -14.001021385192871
    10. '   ' → logprob: -14.001021385192871

Token 137: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.026301810517907143
    2. ' b' → logprob: -3.651301860809326
    3. '   ' → logprob: -14.901301383972168
    4. ')b' → logprob: -15.151301383972168
    5. '       ' → logprob: -15.401301383972168
    6. '[b' → logprob: -15.651301383972168
    7. 'p' → logprob: -16.026302337646484
    8. 'pattern' → logprob: -16.151302337646484
    9. '[' → logprob: -16.401302337646484
    10. '    ' → logprob: -16.526302337646484

Token 138: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2014443278312683
    2. '):' → logprob: -1.701444387435913
    3. '):
' → logprob: -10.576444625854492
    4. '):

' → logprob: -12.826444625854492
    5. ':' → logprob: -13.326444625854492
    6. '():
' → logprob: -14.576444625854492
    7. ':
' → logprob: -15.576444625854492
    8. ' ):
' → logprob: -15.951444625854492
    9. '   ' → logprob: -16.576444625854492
    10. ')' → logprob: -16.701444625854492

Token 139: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02155975252389908
    2. ':' → logprob: -4.146559715270996
    3. ':
' → logprob: -6.021559715270996
    4. '<|end|>' → logprob: -6.271559715270996
    5. '<|end|>' → logprob: -8.146559715270996
    6. '):
' → logprob: -8.271559715270996
    7. '       ' → logprob: -8.646559715270996
    8. '          ' → logprob: -9.146559715270996
    9. ' if' → logprob: -9.896559715270996
    10. '            
' → logprob: -10.021559715270996

Token 140: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3928540050983429
    2. '               ' → logprob: -1.1428539752960205
    3. 'if' (adapté à ' if') → logprob: -5.3928542137146
    4. '           ' → logprob: -7.2678542137146
    5. ' ' → logprob: -8.392853736877441
    6. '            ' → logprob: -8.517853736877441
    7. ' 
' → logprob: -9.642853736877441
    8. '                
' → logprob: -10.017853736877441
    9. '                ' → logprob: -10.392853736877441
    10. '              ' → logprob: -10.767853736877441

Token 141: ' ps' (ID: 10942)
  Prédit: ' ps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ps' → logprob: -0.04449690878391266
    2. 'ps' → logprob: -3.169497013092041
    3. '(ps' → logprob: -6.544497013092041
    4. '	ps' → logprob: -10.044496536254883
    5. '_ps' → logprob: -11.919496536254883
    6. ' (' → logprob: -12.919496536254883
    7. ' ' → logprob: -13.794496536254883
    8. 'psis' → logprob: -13.794496536254883
    9. '.ps' → logprob: -13.919496536254883
    10. 'bs' → logprob: -14.544496536254883

Token 142: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.007387974765151739
    2. ' !=' → logprob: -5.257388114929199
    3. '!='' → logprob: -6.257388114929199
    4. '==' → logprob: -8.8823881149292
    5. ' in' → logprob: -9.8823881149292
    6. 'in' → logprob: -10.1323881149292
    7. '!==' → logprob: -13.2573881149292
    8. 'is' → logprob: -13.5073881149292
    9. '=='' → logprob: -13.8823881149292
    10. '!="' → logprob: -14.1323881149292

Token 143: ' '' (ID: 461)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.005375221837311983
    2. ''' → logprob: -5.880375385284424
    3. ' '' → logprob: -6.005375385284424
    4. 'x' → logprob: -9.630374908447266
    5. '"x' → logprob: -11.630374908447266
    6. ' ' → logprob: -12.255374908447266
    7. '   ' → logprob: -12.255374908447266
    8. '  ' → logprob: -12.505374908447266
    9. '
' → logprob: -12.630374908447266
    10. ' x' → logprob: -12.755374908447266

Token 144: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.000493937055580318
    2. ''x' → logprob: -7.625494003295898
    3. ''' → logprob: -12.375494003295898
    4. ' x' → logprob: -13.875494003295898
    5. '"x' → logprob: -14.750494003295898
    6. ''s' → logprob: -16.1254940032959
    7. '	x' → logprob: -16.5004940032959
    8. '

' → logprob: -17.1254940032959
    9. '')' → logprob: -17.5004940032959
    10. '1' → logprob: -17.5004940032959

Token 145: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.14111869037151337
    2. ' and' → logprob: -2.1411187648773193
    3. 'and' → logprob: -4.26611852645874
    4. ' '' → logprob: -10.266119003295898
    5. ''s' → logprob: -11.641119003295898
    6. '           ' → logprob: -13.016119003295898
    7. '')' → logprob: -13.141119003295898
    8. '"' → logprob: -13.891119003295898
    9. '':
' → logprob: -13.891119003295898
    10. '
' → logprob: -14.266119003295898

Token 146: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.16022595763206482
    2. 'and' → logprob: -1.9102259874343872
    3. '           ' → logprob: -14.035225868225098
    4. ' ' → logprob: -15.035225868225098
    5. '	and' → logprob: -15.785225868225098
    6. '               ' → logprob: -16.160226821899414
    7. '   ' → logprob: -16.535226821899414
    8. '<|end|>' → logprob: -16.910226821899414
    9. ',' → logprob: -17.160226821899414
    10. '       ' → logprob: -17.160226821899414

Token 147: ' ps' (ID: 10942)
  Prédit: ' ps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ps' → logprob: -0.5769372582435608
    2. 'ps' → logprob: -0.9519372582435608
    3. 'bs' → logprob: -3.201937198638916
    4. ' bs' → logprob: -4.451937198638916
    5. '	ps' → logprob: -10.326937675476074
    6. '(ps' → logprob: -11.951937675476074
    7. ' ' → logprob: -12.826937675476074
    8. '_ps' → logprob: -13.076937675476074
    9. 'b' → logprob: -13.576937675476074
    10. '   ' → logprob: -14.139437675476074

Token 148: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.11283817142248154
    2. '!=' → logprob: -2.2378382682800293
    3. ')!=' → logprob: -11.862837791442871
    4. ' ' → logprob: -12.987837791442871
    5. '<|end|>' → logprob: -12.987837791442871
    6. '!==' → logprob: -13.862837791442871
    7. ']!=' → logprob: -14.487837791442871
    8. '```' → logprob: -14.737837791442871
    9. '!='' → logprob: -15.112837791442871
    10. '()!=' → logprob: -15.112837791442871

Token 149: ' bs' (ID: 35414)
  Prédit: 'bs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bs' → logprob: -0.47407880425453186
    2. ' bs' → logprob: -0.9740787744522095
    3. '(bs' → logprob: -13.974079132080078
    4. '_bs' → logprob: -14.974079132080078
    5. 'b' → logprob: -15.099079132080078
    6. ' ' → logprob: -15.474079132080078
    7. '.bs' → logprob: -15.974079132080078
    8. ' b' → logprob: -17.099079132080078
    9. '-bs' → logprob: -17.599079132080078
    10. '	b' → logprob: -18.849079132080078

Token 150: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06033803150057793
    2. ':
' → logprob: -2.935338020324707
    3. ':return' → logprob: -5.685338020324707
    4. '):
' → logprob: -7.060338020324707
    5. '):' → logprob: -7.435338020324707
    6. '           ' → logprob: -8.935338020324707
    7. '<|end|>' → logprob: -9.060338020324707
    8. '               ' → logprob: -9.435338020324707
    9. ' :' → logprob: -9.810338020324707
    10. '       ' → logprob: -10.310338020324707

Token 151: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004188805818557739
    2. ':return' → logprob: -5.8791890144348145
    3. ':
' → logprob: -7.7541890144348145
    4. '                   ' → logprob: -8.129188537597656
    5. ':' → logprob: -8.254188537597656
    6. ' return' → logprob: -8.754188537597656
    7. '           ' → logprob: -9.504188537597656
    8. 'return' → logprob: -9.629188537597656
    9. '              ' → logprob: -10.129188537597656
    10. '                       ' → logprob: -11.129188537597656

Token 152: ' match' (ID: 3981)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'match' (adapté à ' match') → logprob: -0.6548243165016174
    2. ' match' → logprob: -0.9048243165016174
    3. '                   ' → logprob: -2.7798242568969727
    4. '               ' → logprob: -4.529824256896973
    5. '                       ' → logprob: -6.779824256896973
    6. '	match' → logprob: -7.279824256896973
    7. '           ' → logprob: -7.404824256896973
    8. '```' → logprob: -9.154824256896973
    9. '                ' → logprob: -9.279824256896973
    10. ' ' → logprob: -9.279824256896973

Token 153: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6042032837867737
    2. '=' → logprob: -0.8542032837867737
    3. '=False' → logprob: -3.604203224182129
    4. '=True' → logprob: -7.604203224182129
    5. '=
' → logprob: -9.729203224182129
    6. '               ' → logprob: -9.979203224182129
    7. ' =
' → logprob: -11.104203224182129
    8. 'return' → logprob: -11.729203224182129
    9. '                   ' → logprob: -11.854203224182129
    10. 'eturn' → logprob: -11.979203224182129

Token 154: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.061967913061380386
    2. ' False' → logprob: -2.8119678497314453
    3. '(False' → logprob: -15.936967849731445
    4. '=False' → logprob: -16.686967849731445
    5. '_false' → logprob: -20.561967849731445
    6. '.False' → logprob: -20.686967849731445
    7. '   ' → logprob: -21.811967849731445
    8. 'false' → logprob: -21.936967849731445
    9. ' ' → logprob: -22.186967849731445
    10. '```' → logprob: -22.561967849731445

Token 155: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.232493564719334e-05
    2. '                   ' → logprob: -9.625082015991211
    3. '           ' → logprob: -12.000082015991211
    4. '                ' → logprob: -13.000082015991211
    5. '       ' → logprob: -13.125082015991211
    6. '<|end|>' → logprob: -13.375082015991211
    7. '              ' → logprob: -13.500082015991211
    8. '                       ' → logprob: -13.625082015991211
    9. '                
' → logprob: -14.875082015991211
    10. 'break' → logprob: -15.250082015991211

Token 156: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.537868779967539e-06
    2. '                   ' → logprob: -12.875008583068848
    3. 'break' → logprob: -13.375008583068848
    4. '              ' → logprob: -13.750008583068848
    5. '                
' → logprob: -14.250008583068848
    6. '       ' → logprob: -14.375008583068848
    7. '           ' → logprob: -14.875008583068848
    8. '                ' → logprob: -15.125008583068848
    9. ' break' → logprob: -15.250008583068848
    10. '   ' → logprob: -15.250008583068848

Token 157: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.8119153380393982
    2. '               ' → logprob: -1.061915397644043
    3. ' break' → logprob: -1.561915397644043
    4. '                   ' → logprob: -8.811915397644043
    5. '           ' → logprob: -8.811915397644043
    6. '	break' → logprob: -8.936915397644043
    7. '       ' → logprob: -11.061915397644043
    8. '   ' → logprob: -11.811915397644043
    9. '              ' → logprob: -12.811915397644043
    10. '			' → logprob: -13.061915397644043

Token 158: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.780830830801278e-05
    2. '
' → logprob: -10.00008773803711
    3. '   ' → logprob: -11.00008773803711
    4. '<|end|>' → logprob: -11.12508773803711
    5. ',' → logprob: -12.62508773803711
    6. '        
' → logprob: -13.25008773803711
    7. '    ' → logprob: -13.62508773803711
    8. '      ' → logprob: -13.62508773803711
    9. '<|end|>' → logprob: -14.12508773803711
    10. '        ' → logprob: -14.87508773803711

Token 159: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.2233183042553719e-05
    2. '   ' → logprob: -11.625012397766113
    3. ',' → logprob: -14.125012397766113
    4. '
' → logprob: -14.375012397766113
    5. '           ' → logprob: -14.375012397766113
    6. '      ' → logprob: -14.875012397766113
    7. '<|end|>' → logprob: -15.375012397766113
    8. '    ' → logprob: -15.875012397766113
    9. '        
' → logprob: -16.250011444091797
    10. '```' → logprob: -16.500011444091797

Token 160: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8894926905632019
    2. 'if' (adapté à ' if') → logprob: -1.1394927501678467
    3. ' if' → logprob: -1.8894927501678467
    4. '   ' → logprob: -2.1394927501678467
    5. ' ' → logprob: -9.389492988586426
    6. '
' → logprob: -9.639492988586426
    7. '    ' → logprob: -10.139492988586426
    8. 'else' → logprob: -10.389492988586426
    9. '  ' → logprob: -11.014492988586426
    10. '     ' → logprob: -11.514492988586426

Token 161: ' match' (ID: 3981)
  Prédit: ' match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' match' → logprob: -0.07889837771654129
    2. 'match' → logprob: -2.5788984298706055
    3. '(match' → logprob: -12.453898429870605
    4. '	match' → logprob: -12.703898429870605
    5. ' ' → logprob: -13.828898429870605
    6. ' not' → logprob: -15.828898429870605
    7. '   ' → logprob: -15.828898429870605
    8. '_match' → logprob: -16.20389747619629
    9. '    ' → logprob: -16.70389747619629
    10. '  ' → logprob: -16.95389747619629

Token 162: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014174672774970531
    2. ':
' → logprob: -4.264174461364746
    3. '):' → logprob: -12.639174461364746
    4. '       ' → logprob: -13.014174461364746
    5. '):
' → logprob: -13.639174461364746
    6. '           ' → logprob: -13.764174461364746
    7. '=' → logprob: -14.139174461364746
    8. ':

' → logprob: -14.264174461364746
    9. ':
' → logprob: -14.389174461364746
    10. '==' → logprob: -14.389174461364746

Token 163: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026495015248656273
    2. 'count' → logprob: -4.401494979858398
    3. '       ' → logprob: -5.026494979858398
    4. ' count' → logprob: -5.151494979858398
    5. '   ' → logprob: -7.276494979858398
    6. '
' → logprob: -7.651494979858398
    7. '               ' → logprob: -8.776494979858398
    8. '	count' → logprob: -9.901494979858398
    9. '	       ' → logprob: -10.151494979858398
    10. '```' → logprob: -10.151494979858398

Token 164: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.20643043518066406
    2. ' count' → logprob: -1.706430435180664
    3. '   ' → logprob: -6.331430435180664
    4. '           ' → logprob: -6.331430435180664
    5. '               ' → logprob: -6.831430435180664
    6. '       ' → logprob: -8.581430435180664
    7. ' ' → logprob: -9.581430435180664
    8. '	count' → logprob: -9.706430435180664
    9. '  ' → logprob: -10.581430435180664
    10. '    ' → logprob: -11.831430435180664

Token 165: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2822222113609314
    2. '+=' → logprob: -1.4072222709655762
    3. '+' → logprob: -6.907222270965576
    4. ']+=' → logprob: -10.532221794128418
    5. '<|end|>' → logprob: -10.782221794128418
    6. '=' → logprob: -11.407221794128418
    7. ')' → logprob: -12.657221794128418
    8. '```' → logprob: -13.157221794128418
    9. '   ' → logprob: -13.532221794128418
    10. '    ' → logprob: -14.032221794128418

Token 166: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '   ' → logprob: -18.875085830688477
    4. '```' → logprob: -20.875085830688477
    5. '１' → logprob: -22.000085830688477
    6. '+' → logprob: -22.125085830688477
    7. '  ' → logprob: -22.125085830688477
    8. '       ' → logprob: -22.312585830688477
    9. '۱' → logprob: -22.625085830688477
    10. 'b' → logprob: -23.625085830688477

Token 167: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.125
    3. '```' → logprob: -21.0
    4. '   ' → logprob: -21.125
    5. '
' → logprob: -23.0
    6. '۱' → logprob: -23.125
    7. '１' → logprob: -23.5
    8. '<|end|>' → logprob: -23.75
    9. '  ' → logprob: -24.0
    10. '``' → logprob: -24.375

Token 168: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01393712405115366
    2. 'return' → logprob: -4.513936996459961
    3. ' return' → logprob: -6.138936996459961
    4. '
' → logprob: -7.263936996459961
    5. '	return' → logprob: -10.763936996459961
    6. '    
' → logprob: -12.513936996459961
    7. ':return' → logprob: -13.888936996459961
    8. '       ' → logprob: -14.013936996459961
    9. '```' → logprob: -14.638936996459961
    10. '<|end|>' → logprob: -16.51393699645996

Token 169: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004471065942198038
    2. 'return' → logprob: -5.504471302032471
    3. ' return' → logprob: -7.879471302032471
    4. '	return' → logprob: -11.379470825195312
    5. '       ' → logprob: -13.879470825195312
    6. ':return' → logprob: -14.254470825195312
    7. '
' → logprob: -14.504470825195312
    8. '```' → logprob: -15.504470825195312
    9. '    
' → logprob: -15.754470825195312
    10. '<|end|>' → logprob: -17.254470825195312

Token 170: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.323649525642395
    2. '   ' → logprob: -1.323649525642395
    3. ' return' → logprob: -4.5736494064331055
    4. '	return' → logprob: -11.448649406433105
    5. '
' → logprob: -13.698649406433105
    6. '```' → logprob: -13.823649406433105
    7. ':return' → logprob: -14.948649406433105
    8. ' ' → logprob: -15.573649406433105
    9. 'eturn' → logprob: -15.573649406433105
    10. '       ' → logprob: -15.698649406433105

Token 171: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0007099286303855479
    2. ' count' → logprob: -7.2507100105285645
    3. '(count' → logprob: -21.250709533691406
    4. '	count' → logprob: -21.250709533691406
    5. '   ' → logprob: -21.500709533691406
    6. '[count' → logprob: -21.750709533691406
    7. '$count' → logprob: -22.500709533691406
    8. ' ' → logprob: -23.000709533691406
    9. '<count' → logprob: -23.125709533691406
    10. 'counts' → logprob: -24.125709533691406

Token 172: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 173: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.11435917764902115
    2. '<|end|>' → logprob: -2.239359140396118
    3. '#' → logprob: -7.114359378814697
    4. '```' → logprob: -7.364359378814697
    5. '<|end|>' → logprob: -10.239358901977539
    6. '
' → logprob: -10.489358901977539
    7. ' def' → logprob: -12.114358901977539
    8. 'The' → logprob: -12.614358901977539
    9. 'x' → logprob: -12.864358901977539
    10. '``' → logprob: -12.864358901977539

Token 174: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.06272056698799133
    2. ' calculate' → logprob: -3.812720537185669
    3. 'count' → logprob: -3.937720537185669
    4. ' total' → logprob: -4.562720775604248
    5. ' possible' → logprob: -5.437720775604248
    6. ' bit' → logprob: -7.062720775604248
    7. 'calculate' → logprob: -7.437720775604248
    8. ' match' → logprob: -7.687720775604248
    9. ' byte' → logprob: -7.812720775604248
    10. ' pattern' → logprob: -8.18772029876709

Token 175: '_valid' (ID: 23321)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.20112480223178864
    2. '_pattern' → logprob: -2.076124906539917
    3. '_total' → logprob: -3.951124906539917
    4. '_possible' → logprob: -4.201124668121338
    5. '_matching' → logprob: -4.826124668121338
    6. '_' → logprob: -5.451124668121338
    7. '_bytes' → logprob: -5.701124668121338
    8. '_patterns' → logprob: -5.826124668121338
    9. '_byte' → logprob: -6.951124668121338
    10. '_all' → logprob: -7.076124668121338

Token 176: '_first' (ID: 29347)
  Prédit: '_bytes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bytes' → logprob: -0.05665314197540283
    2. '_patterns' → logprob: -3.1816530227661133
    3. '_sequences' → logprob: -5.056653022766113
    4. '_com' → logprob: -6.056653022766113
    5. '_strings' → logprob: -6.681653022766113
    6. '_codes' → logprob: -6.681653022766113
    7. '_addresses' → logprob: -7.306653022766113
    8. '_' → logprob: -7.931653022766113
    9. '_prefix' → logprob: -8.931653022766113
    10. '_pattern' → logprob: -8.931653022766113

Token 177: '_bytes' (ID: 28036)
  Prédit: '_byte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_byte' → logprob: -0.35320407152175903
    2. '_bytes' → logprob: -1.2282040119171143
    3. 'byte' → logprob: -6.103204250335693
    4. 'bytes' → logprob: -8.103203773498535
    5. '_position' → logprob: -8.103203773498535
    6. 'Byte' → logprob: -8.353203773498535
    7. '_positions' → logprob: -8.603203773498535
    8. '_occ' → logprob: -8.603203773498535
    9. '_pos' → logprob: -9.478203773498535
    10. '_b' → logprob: -9.603203773498535

Token 178: '(byte' (ID: 36692)
  Prédit: '(byte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(byte' → logprob: -0.416145920753479
    2. '(pattern' → logprob: -1.166145920753479
    3. '(' → logprob: -3.6661458015441895
    4. '(string' → logprob: -7.4161458015441895
    5. '(input' → logprob: -7.4161458015441895
    6. '(prefix' → logprob: -7.6661458015441895
    7. '():' → logprob: -7.9161458015441895
    8. '(line' → logprob: -8.791146278381348
    9. '(b' → logprob: -8.916146278381348
    10. '(s' → logprob: -8.916146278381348

Token 179: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0015623578801751137
    2. ''_' → logprob: -7.626562595367432
    3. 'str' → logprob: -7.876562595367432
    4. '):' → logprob: -8.251562118530273
    5. '_' → logprob: -9.251562118530273
    6. ')' → logprob: -9.501562118530273
    7. '```' → logprob: -9.876562118530273
    8. '(' → logprob: -10.251562118530273
    9. 'string' → logprob: -10.751562118530273
    10. '   ' → logprob: -10.876562118530273

Token 180: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00239634420722723
    2. ',' → logprob: -6.377396106719971
    3. '):
' → logprob: -7.377396106719971
    4. ')' → logprob: -10.502396583557129
    5. ':' → logprob: -10.877396583557129
    6. '   ' → logprob: -11.627396583557129
    7. ' ):' → logprob: -12.127396583557129
    8. '):
' → logprob: -13.877396583557129
    9. '_' → logprob: -14.252396583557129
    10. 'pattern' → logprob: -14.377396583557129

Token 181: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00016182278341148049
    2. '
' → logprob: -9.125162124633789
    3. ':' → logprob: -11.125162124633789
    4. '    
' → logprob: -11.625162124633789
    5. ' return' → logprob: -11.750162124633789
    6. ':
' → logprob: -12.375162124633789
    7. '```' → logprob: -12.875162124633789
    8. 'count' → logprob: -13.000162124633789
    9. 'return' → logprob: -13.375162124633789
    10. '    ' → logprob: -13.500162124633789

Token 182: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38229110836982727
    2. ' count' → logprob: -1.6322910785675049
    3. 'count' → logprob: -2.132291078567505
    4. ' return' → logprob: -6.757291316986084
    5. 'def' → logprob: -7.882291316986084
    6. 'return' → logprob: -8.007290840148926
    7. '
' → logprob: -8.007290840148926
    8. ' possible' → logprob: -8.132290840148926
    9. 'possible' → logprob: -8.257290840148926
    10. ' valid' → logprob: -8.382290840148926

Token 183: ' Count' (ID: 6789)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.2690762281417847
    2. 'valid' → logprob: -1.5190762281417847
    3. 'count' → logprob: -1.7690762281417847
    4. 'possible' → logprob: -2.644076347351074
    5. '#' → logprob: -3.019076347351074
    6. ' valid' → logprob: -3.269076347351074
    7. 'max' → logprob: -3.519076347351074
    8. ' count' → logprob: -3.644076347351074
    9. 'total' → logprob: -3.644076347351074
    10. 'def' → logprob: -4.019076347351074

Token 184: ' how' (ID: 1495)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2927026152610779
    2. ' how' → logprob: -2.2927026748657227
    3. '   ' → logprob: -3.1677026748657227
    4. '(
' → logprob: -3.9177026748657227
    5. ' possibilities' → logprob: -3.9177026748657227
    6. 'def' → logprob: -4.292702674865723
    7. ' ' → logprob: -4.292702674865723
    8. ' the' → logprob: -4.792702674865723
    9. ' valid' → logprob: -5.042702674865723
    10. 'possible' → logprob: -5.417702674865723

Token 185: ' many' (ID: 1991)
  Prédit: ' many'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' many' → logprob: -0.021418455988168716
    2. 'many' → logprob: -3.896418571472168
    3. ' how' → logprob: -7.271418571472168
    4. 'how' → logprob: -9.771418571472168
    5. '   ' → logprob: -9.896418571472168
    6. ' ' → logprob: -10.396418571472168
    7. 'def' → logprob: -11.146418571472168
    8. 'Many' → logprob: -11.271418571472168
    9. '_many' → logprob: -12.646418571472168
    10. ' you' → logprob: -12.896418571472168

Token 186: ' possible' (ID: 4149)
  Prédit: ' bytes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bytes' → logprob: -0.11984501779079437
    2. ' possible' → logprob: -3.494844913482666
    3. ' first' → logprob: -3.744844913482666
    4. 'bytes' → logprob: -3.869844913482666
    5. ' valid' → logprob: -3.869844913482666
    6. 'possible' → logprob: -4.744844913482666
    7. ' possibilities' → logprob: -5.494844913482666
    8. 'first' → logprob: -6.994844913482666
    9. 'valid' → logprob: -7.494844913482666
    10. 'def' → logprob: -7.869844913482666

Token 187: ' first' (ID: 1577)
  Prédit: 'bytes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bytes' → logprob: -0.6661421656608582
    2. 'first' → logprob: -1.541142225265503
    3. ' bytes' → logprob: -1.666142225265503
    4. ' first' → logprob: -2.541142225265503
    5. 'values' → logprob: -6.916141986846924
    6. 'b' → logprob: -7.166141986846924
    7. 'def' → logprob: -7.291141986846924
    8. ' ' → logprob: -7.916141986846924
    9. 'leading' → logprob: -8.666142463684082
    10. 'valid' → logprob: -8.791142463684082

Token 188: ' bytes' (ID: 11643)
  Prédit: 'bytes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bytes' → logprob: -0.11510860919952393
    2. ' bytes' → logprob: -2.2401084899902344
    3. '_bytes' → logprob: -6.365108489990234
    4. 'byte' → logprob: -7.865108489990234
    5. 'def' → logprob: -9.990108489990234
    6. 'first' → logprob: -10.115108489990234
    7. ' ' → logprob: -11.115108489990234
    8. ' byte' → logprob: -11.740108489990234
    9. 'positions' → logprob: -11.990108489990234
    10. '_byte' → logprob: -11.990108489990234

Token 189: ' can' (ID: 665)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9580597877502441
    2. '(' → logprob: -1.5830597877502441
    3. '(byte' → logprob: -1.8330597877502441
    4. ' for' → logprob: -2.708059787750244
    5. ' are' → logprob: -2.958059787750244
    6. 'for' → logprob: -3.708059787750244
    7. '(pattern' → logprob: -3.708059787750244
    8. ' match' → logprob: -3.958059787750244
    9. '(
' → logprob: -4.583059787750244
    10. 'are' → logprob: -4.708059787750244

Token 190: ' be' (ID: 413)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.0440073162317276
    2. ' match' → logprob: -3.1690073013305664
    3. 'be' → logprob: -7.294007301330566
    4. 'start' → logprob: -8.544007301330566
    5. ' be' → logprob: -10.044007301330566
    6. 'appear' → logprob: -11.044007301330566
    7. 'occur' → logprob: -11.919007301330566
    8. 'cor' → logprob: -12.044007301330566
    9. '```' → logprob: -12.044007301330566
    10. 'matches' → logprob: -12.294007301330566

Token 191: '
' (ID: 198)
  Prédit: 'matched'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'matched' → logprob: -0.2633473873138428
    2. ' matched' → logprob: -2.0133473873138428
    3. 'represented' → logprob: -2.8883473873138428
    4. 'formed' → logprob: -3.6383473873138428
    5. ' represented' → logprob: -4.888347625732422
    6. ' formed' → logprob: -6.388347625732422
    7. 'decoded' → logprob: -7.013347625732422
    8. 'encoded' → logprob: -7.138347625732422
    9. 'found' → logprob: -7.263347625732422
    10. 'generated' → logprob: -7.388347625732422

Token 192: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08820555359125137
    2. ' for' → logprob: -3.338205575942993
    3. 'def' → logprob: -3.338205575942993
    4. ' given' → logprob: -6.088205337524414
    5. 'for' → logprob: -6.088205337524414
    6. '(' → logprob: -6.588205337524414
    7. ' def' → logprob: -6.713205337524414
    8. ' in' → logprob: -7.088205337524414
    9. '(pattern' → logprob: -7.213205337524414
    10. ' pattern' → logprob: -7.338205337524414

Token 193: ' #' (ID: 1069)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01460979226976633
    2. 'def' → logprob: -5.0146098136901855
    3. ' for' → logprob: -5.2646098136901855
    4. 'possible' → logprob: -7.6396098136901855
    5. 'for' → logprob: -7.7646098136901855
    6. ' return' → logprob: -7.8896098136901855
    7. ' possible' → logprob: -7.8896098136901855
    8. ' def' → logprob: -8.264609336853027
    9. 'return' → logprob: -8.514609336853027
    10. '
' → logprob: -8.889609336853027

Token 194: ' and' (ID: 326)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.9159309267997742
    2. '   ' → logprob: -1.040930986404419
    3. 'return' → logprob: -1.665930986404419
    4. ' for' → logprob: -3.290930986404419
    5. 'def' → logprob: -5.16593074798584
    6. 'for' → logprob: -5.54093074798584
    7. ' possible' → logprob: -5.66593074798584
    8. 'possible' → logprob: -6.04093074798584
    9. '#' → logprob: -7.16593074798584
    10. ' ' → logprob: -7.66593074798584

Token 195: ' also' (ID: 1217)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.218327760696411
    2. ' how' → logprob: -2.218327760696411
    3. 'return' → logprob: -2.468327760696411
    4. ' return' → logprob: -2.468327760696411
    5. ' their' → logprob: -2.468327760696411
    6. 'pattern' → logprob: -2.843327760696411
    7. 'def' → logprob: -3.093327760696411
    8. ' matched' → logprob: -3.218327760696411
    9. ' the' → logprob: -3.343327760696411
    10. ' pattern' → logprob: -3.468327760696411

Token 196: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6090514063835144
    2. ' return' → logprob: -1.3590514659881592
    3. ' their' → logprob: -2.609051465988159
    4. ' the' → logprob: -3.484051465988159
    5. ' how' → logprob: -3.609051465988159
    6. 'def' → logprob: -4.10905122756958
    7. ' def' → logprob: -4.85905122756958
    8. '#' → logprob: -4.98405122756958
    9. 'match' → logprob: -5.73405122756958
    10. 'possible' → logprob: -5.73405122756958

Token 197: ' a' (ID: 261)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.6507970690727234
    2. 'count' → logprob: -0.9007970690727234
    3. ' the' → logprob: -3.150797128677368
    4. ' possible' → logprob: -4.525796890258789
    5. 'the' → logprob: -5.650796890258789
    6. 'possible' → logprob: -5.775796890258789
    7. ' total' → logprob: -6.275796890258789
    8. ' sum' → logprob: -6.525796890258789
    9. ' valid' → logprob: -6.525796890258789
    10. ' a' → logprob: -6.900796890258789

Token 198: ' list' (ID: 1562)
  Prédit: ' list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.017574172466993332
    2. ' set' → logprob: -4.642574310302734
    3. 'list' → logprob: -6.142574310302734
    4. ' valid' → logprob: -6.267574310302734
    5. 'def' → logprob: -7.892574310302734
    6. ' mapping' → logprob: -8.017574310302734
    7. ' bit' → logprob: -8.142574310302734
    8. ' complete' → logprob: -8.142574310302734
    9. ' dictionary' → logprob: -8.142574310302734
    10. ' ' → logprob: -8.517574310302734

Token 199: ' of' (ID: 328)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.8249754905700684
    2. ' (' → logprob: -1.9499754905700684
    3. ' of' → logprob: -1.9499754905700684
    4. ' possible' → logprob: -2.4499754905700684
    5. 'def' → logprob: -2.5749754905700684
    6. ' valid' → logprob: -2.6999754905700684
    7. '[]' → logprob: -2.9499754905700684
    8. ',' → logprob: -3.1999754905700684
    9. ' def' → logprob: -3.6999754905700684
    10. '(' → logprob: -3.8249754905700684

Token 200: ' the' (ID: 290)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.8915160298347473
    2. 'possible' → logprob: -1.7665159702301025
    3. ' valid' → logprob: -2.0165159702301025
    4. 'bytes' → logprob: -2.6415159702301025
    5. 'matching' → logprob: -3.3915159702301025
    6. '[' → logprob: -3.6415159702301025
    7. 'all' → logprob: -3.6415159702301025
    8. 'patterns' → logprob: -4.016516208648682
    9. ' bytes' → logprob: -4.141516208648682
    10. 'byte' → logprob: -4.266516208648682

Token 201: ' types' (ID: 6009)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.6561031937599182
    2. 'possible' → logprob: -1.5311031341552734
    3. 'bytes' → logprob: -2.1561031341552734
    4. ' valid' → logprob: -2.7811031341552734
    5. '[' → logprob: -3.5311031341552734
    6. ' bytes' → logprob: -3.6561031341552734
    7. 'positions' → logprob: -5.281103134155273
    8. ' possible' → logprob: -5.531103134155273
    9. 'byte' → logprob: -5.656103134155273
    10. 'matching' → logprob: -5.781103134155273

Token 202: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7036130428314209
    2. ':' → logprob: -1.203613042831421
    3. '(byte' → logprob: -2.203613042831421
    4. '   ' → logprob: -2.828613042831421
    5. 'def' → logprob: -4.32861328125
    6. '(
' → logprob: -5.20361328125
    7. '():' → logprob: -6.20361328125
    8. '(bytes' → logprob: -6.32861328125
    9. ':
' → logprob: -6.45361328125
    10. ' (' → logprob: -6.70361328125

Token 203: 'length' (ID: 7914)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5981926321983337
    2. ' )' → logprob: -1.2231926918029785
    3. ''' → logprob: -2.7231926918029785
    4. '[' → logprob: -3.2231926918029785
    5. ' bytes' → logprob: -4.5981926918029785
    6. 'byte' → logprob: -5.2231926918029785
    7. '[])' → logprob: -5.2231926918029785
    8. 'bytes' → logprob: -5.4731926918029785
    9. ' [])' → logprob: -5.8481926918029785
    10. '')' → logprob: -5.8481926918029785

Token 204: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3671756386756897
    2. ',' → logprob: -1.492175579071045
    3. 's' → logprob: -2.992175579071045
    4. '(' → logprob: -4.492175579071045
    5. '=' → logprob: -5.117175579071045
    6. '_' → logprob: -5.867175579071045
    7. '()' → logprob: -5.867175579071045
    8. 'of' → logprob: -5.992175579071045
    9. ' )' → logprob: -6.367175579071045
    10. 'def' → logprob: -6.742175579071045

Token 205: ' it' (ID: 480)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6829279065132141
    2. ':' → logprob: -1.8079278469085693
    3. '
' → logprob: -2.1829278469085693
    4. 'def' → logprob: -2.9329278469085693
    5. ' ' → logprob: -3.1829278469085693
    6. ' def' → logprob: -3.8079278469085693
    7. ':
' → logprob: -3.8079278469085693
    8. '(' → logprob: -4.182928085327148
    9. ' possible' → logprob: -4.807928085327148
    10. ' (' → logprob: -4.807928085327148

Token 206: ' can' (ID: 665)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8417913317680359
    2. 's' → logprob: -1.4667913913726807
    3. ',' → logprob: -1.5917913913726807
    4. ' =' → logprob: -4.091791152954102
    5. '_lengths' → logprob: -4.466791152954102
    6. '):' → logprob: -4.841791152954102
    7. '_list' → logprob: -5.216791152954102
    8. ' ' → logprob: -5.216791152954102
    9. ''s' → logprob: -5.216791152954102
    10. ')' → logprob: -5.216791152954102

Token 207: ' start' (ID: 1604)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.019760284572839737
    2. ' possible' → logprob: -5.3947601318359375
    3. 'def' → logprob: -5.3947601318359375
    4. ' ' → logprob: -5.7697601318359375
    5. '
' → logprob: -6.5197601318359375
    6. 'possible' → logprob: -6.7697601318359375
    7. '  ' → logprob: -7.7697601318359375
    8. ' for' → logprob: -7.7697601318359375
    9. ':' → logprob: -7.8947601318359375
    10. '  
' → logprob: -8.019760131835938

Token 208: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8750932812690735
    2. ':' → logprob: -1.8750932216644287
    3. 'def' → logprob: -2.1250932216644287
    4. '(byte' → logprob: -2.1250932216644287
    5. '(' → logprob: -2.6250932216644287
    6. '
' → logprob: -3.5000932216644287
    7. ',' → logprob: -3.6250932216644287
    8. ':
' → logprob: -4.125093460083008
    9. '(
' → logprob: -4.375093460083008
    10. ' (' → logprob: -4.625093460083008

Token 209: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007304779719561338
    2. ':' → logprob: -5.632304668426514
    3. 'def' → logprob: -6.132304668426514
    4. '(' → logprob: -7.507304668426514
    5. ':
' → logprob: -7.757304668426514
    6. '    
' → logprob: -9.132305145263672
    7. '```' → logprob: -9.257305145263672
    8. ' def' → logprob: -9.757305145263672
    9. ',' → logprob: -9.882305145263672
    10. ' :' → logprob: -10.632305145263672

Token 210: ' #' (ID: 1069)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.6420930027961731
    2. '   ' → logprob: -1.0170929431915283
    3. ' possible' → logprob: -2.6420929431915283
    4. ' length' → logprob: -4.392093181610107
    5. ' possibilities' → logprob: -4.642093181610107
    6. 'possible' → logprob: -5.392093181610107
    7. 'valid' → logprob: -5.642093181610107
    8. ' types' → logprob: -5.642093181610107
    9. ' lengths' → logprob: -5.767093181610107
    10. ' result' → logprob: -6.892093181610107

Token 211: ' based' (ID: 4122)
  Prédit: ' valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' valid' → logprob: -0.667539656162262
    2. '   ' → logprob: -1.5425395965576172
    3. ' possible' → logprob: -2.167539596557617
    4. ' length' → logprob: -3.167539596557617
    5. ' types' → logprob: -3.292539596557617
    6. ' possibilities' → logprob: -3.667539596557617
    7. ' lengths' → logprob: -3.792539596557617
    8. ' result' → logprob: -4.917539596557617
    9. 'possible' → logprob: -5.167539596557617
    10. ' results' → logprob: -5.667539596557617

Token 212: ' on' (ID: 402)
  Prédit: 'on'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'on' → logprob: -0.2189052850008011
    2. ' on' → logprob: -1.7189053297042847
    3. '_' → logprob: -5.093905448913574
    4. 'def' → logprob: -5.343905448913574
    5. '=' → logprob: -5.843905448913574
    6. '_on' → logprob: -6.218905448913574
    7. ' ' → logprob: -7.468905448913574
    8. ' =' → logprob: -7.718905448913574
    9. '   ' → logprob: -8.843905448913574
    10. '  ' → logprob: -9.218905448913574

Token 213: ' first' (ID: 1577)
  Prédit: 'byte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'byte' → logprob: -0.6343557834625244
    2. ' byte' → logprob: -1.0093557834625244
    3. ' the' → logprob: -2.7593557834625244
    4. 'the' → logprob: -3.6343557834625244
    5. 'len' → logprob: -5.384355545043945
    6. 'def' → logprob: -6.009355545043945
    7. ' UTF' → logprob: -6.759355545043945
    8. ' utf' → logprob: -6.884355545043945
    9. ' len' → logprob: -6.884355545043945
    10. ''' → logprob: -7.259355545043945

Token 214: ' byte' (ID: 9239)
  Prédit: 'byte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'byte' → logprob: -0.16064845025539398
    2. ' byte' → logprob: -2.6606483459472656
    3. '_byte' → logprob: -2.7856483459472656
    4. 'def' → logprob: -4.285648345947266
    5. ' ' → logprob: -7.535648345947266
    6. 'bytes' → logprob: -7.910648345947266
    7. 'pattern' → logprob: -8.160648345947266
    8. '1' → logprob: -8.410648345947266
    9. ' bytes' → logprob: -8.660648345947266
    10. ' def' → logprob: -8.785648345947266

Token 215: ' bit' (ID: 3546)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015965275466442108
    2. ':' → logprob: -5.765965461730957
    3. ' possible' → logprob: -5.765965461730957
    4. '
' → logprob: -6.640965461730957
    5. 'def' → logprob: -6.640965461730957
    6. ' count' → logprob: -6.640965461730957
    7. 'possible' → logprob: -6.890965461730957
    8. 'count' → logprob: -7.140965461730957
    9. ' valid' → logprob: -7.390965461730957
    10. ' for' → logprob: -7.640965461730957

Token 216: ' pattern' (ID: 8302)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0019379158038645983
    2. 'def' → logprob: -7.1269378662109375
    3. ' if' → logprob: -7.7519378662109375
    4. ':' → logprob: -8.251937866210938
    5. '
' → logprob: -9.751937866210938
    6. ' ' → logprob: -9.751937866210938
    7. '    
' → logprob: -10.001937866210938
    8. ' def' → logprob: -10.126937866210938
    9. ':
' → logprob: -10.251937866210938
    10. ' for' → logprob: -10.501937866210938

Token 217: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011214634403586388
    2. '
' → logprob: -5.386214733123779
    3. 'def' → logprob: -6.386214733123779
    4. ' first' → logprob: -7.136214733123779
    5. ':' → logprob: -7.261214733123779
    6. '    
' → logprob: -7.261214733123779
    7. ' if' → logprob: -8.011214256286621
    8. 'x' → logprob: -8.386214256286621
    9. ' valid' → logprob: -8.386214256286621
    10. 'pattern' → logprob: -8.386214256286621

Token 218: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0018527198117226362
    2. ':' → logprob: -7.126852512359619
    3. 'def' → logprob: -7.876852512359619
    4. '
' → logprob: -8.501852989196777
    5. ' valid' → logprob: -9.376852989196777
    6. '    
' → logprob: -9.376852989196777
    7. ':
' → logprob: -9.501852989196777
    8. ' possible' → logprob: -10.001852989196777
    9. '```' → logprob: -10.376852989196777
    10. 'possible' → logprob: -10.751852989196777

Token 219: ' res' (ID: 694)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1855602264404297
    2. ' valid' → logprob: -2.8105602264404297
    3. ' if' → logprob: -3.1855602264404297
    4. ' first' → logprob: -3.6855602264404297
    5. ' possible' → logprob: -4.93556022644043
    6. 'def' → logprob: -5.06056022644043
    7. 'if' → logprob: -5.31056022644043
    8. 'valid' → logprob: -5.68556022644043
    9. ' lengths' → logprob: -5.81056022644043
    10. ' def' → logprob: -5.93556022644043

Token 220: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.09899334609508514
    2. '=' → logprob: -2.4739933013916016
    3. 'ult' → logprob: -4.723993301391602
    4. 'ults' → logprob: -6.973993301391602
    5. 't' → logprob: -9.723993301391602
    6. '   ' → logprob: -9.973993301391602
    7. 's' → logprob: -10.848993301391602
    8. '=[]' → logprob: -10.973993301391602
    9. '_' → logprob: -11.223993301391602
    10. 'u' → logprob: -11.348993301391602

Token 221: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.05096818506717682
    2. '{}' → logprob: -3.1759681701660156
    3. '0' → logprob: -5.550968170166016
    4. ' []' → logprob: -5.550968170166016
    5. '[]
' → logprob: -9.925968170166016
    6. '[' → logprob: -10.050968170166016
    7. ' ' → logprob: -10.800968170166016
    8. ' {}' → logprob: -10.925968170166016
    9. 'set' → logprob: -11.050968170166016
    10. '{' → logprob: -11.425968170166016

Token 222: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2568473815917969
    2. ' for' → logprob: -1.6318473815917969
    3. '
' → logprob: -4.006847381591797
    4. 'for' → logprob: -4.756847381591797
    5. '    
' → logprob: -6.756847381591797
    6. 'def' → logprob: -7.381847381591797
    7. ' possible' → logprob: -7.506847381591797
    8. ',' → logprob: -8.131847381591797
    9. ' first' → logprob: -8.756847381591797
    10. ' 
' → logprob: -9.006847381591797

Token 223: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.06895086914300919
    2. ' for' → logprob: -3.693950891494751
    3. 'if' → logprob: -4.068950653076172
    4. 'possible' → logprob: -5.443950653076172
    5. 'first' → logprob: -5.568950653076172
    6. '   ' → logprob: -5.568950653076172
    7. 'byte' → logprob: -6.068950653076172
    8. 'valid' → logprob: -6.068950653076172
    9. 'length' → logprob: -6.193950653076172
    10. 'def' → logprob: -6.818950653076172

Token 224: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.25739818811416626
    2. ' i' → logprob: -1.6323981285095215
    3. 'length' → logprob: -4.7573981285095215
    4. ' prefix' → logprob: -5.1323981285095215
    5. ' first' → logprob: -5.5073981285095215
    6. 'i' → logprob: -5.6323981285095215
    7. ' pattern' → logprob: -5.7573981285095215
    8. ' byte' → logprob: -6.1323981285095215
    9. ' b' → logprob: -7.0073981285095215
    10. 'pattern' → logprob: -7.7573981285095215

Token 225: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02342773787677288
    2. 'in' → logprob: -3.773427724838257
    3. ',' → logprob: -8.898427963256836
    4. ' ' → logprob: -10.523427963256836
    5. 's' → logprob: -12.523427963256836
    6. '```' → logprob: -12.898427963256836
    7. 'In' → logprob: -13.023427963256836
    8. '   ' → logprob: -13.398427963256836
    9. '_in' → logprob: -13.398427963256836
    10. '	in' → logprob: -13.898427963256836

Token 226: ' [' (ID: 723)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.19417132437229156
    2. '[' → logprob: -1.8191713094711304
    3. ' range' → logprob: -4.31917142868042
    4. '1' → logprob: -7.56917142868042
    5. ' [' → logprob: -8.069170951843262
    6. '4' → logprob: -9.694170951843262
    7. '(range' → logprob: -9.944170951843262
    8. '(' → logprob: -10.444170951843262
    9. '   ' → logprob: -11.694170951843262
    10. ' ' → logprob: -11.819170951843262

Token 227: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.9795445849886164e-05
    2. '2' → logprob: -10.750060081481934
    3. ' ' → logprob: -10.875060081481934
    4. '0' → logprob: -12.000060081481934
    5. '   ' → logprob: -12.000060081481934
    6. '
' → logprob: -13.625060081481934
    7. '4' → logprob: -13.750060081481934
    8. '(' → logprob: -14.937560081481934
    9. ']' → logprob: -15.000060081481934
    10. '  ' → logprob: -15.062560081481934

Token 228: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0014497563242912292
    2. ' ,' → logprob: -6.6264495849609375
    3. '6' → logprob: -9.626449584960938
    4. '1' → logprob: -11.251449584960938
    5. ',
' → logprob: -11.376449584960938
    6. '2' → logprob: -11.376449584960938
    7. '7' → logprob: -11.626449584960938
    8. '0' → logprob: -12.751449584960938
    9. '4' → logprob: -13.251449584960938
    10. ' ' → logprob: -13.376449584960938

Token 229: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.01974637433886528
    2. ' ' → logprob: -4.01974630355835
    3. '1' → logprob: -6.64474630355835
    4. '4' → logprob: -8.519746780395508
    5. '   ' → logprob: -9.769746780395508
    6. '  ' → logprob: -11.644746780395508
    7. ']' → logprob: -11.769746780395508
    8. '3' → logprob: -12.394746780395508
    9. 'len' → logprob: -12.644746780395508
    10. '0' → logprob: -13.019746780395508

Token 230: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002354832977289334
    2. ' ,' → logprob: -8.625235557556152
    3. '3' → logprob: -9.875235557556152
    4. ',
' → logprob: -13.000235557556152
    5. ']' → logprob: -14.000235557556152
    6. '4' → logprob: -15.125235557556152
    7. ' ' → logprob: -15.375235557556152
    8. '   ' → logprob: -15.625235557556152
    9. ']:
' → logprob: -16.125234603881836
    10. ']:' → logprob: -16.250234603881836

Token 231: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '4' → logprob: -18.00001335144043
    4. '   ' → logprob: -18.12501335144043
    5. '  ' → logprob: -19.00001335144043
    6. ',' → logprob: -19.50001335144043
    7. '
' → logprob: -20.18751335144043
    8. '３' → logprob: -20.37501335144043
    9. 'def' → logprob: -20.68751335144043
    10. '۳' → logprob: -20.81251335144043

Token 232: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00010998018842656165
    2. ' ,' → logprob: -9.750109672546387
    3. '4' → logprob: -10.125109672546387
    4. ']:' → logprob: -11.875109672546387
    5. ']' → logprob: -13.375109672546387
    6. ',
' → logprob: -14.250109672546387
    7. ']:
' → logprob: -14.375109672546387
    8. ' ' → logprob: -15.312609672546387
    9. '   ' → logprob: -15.375109672546387
    10. '3' → logprob: -16.062610626220703

Token 233: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -4.36574100604048e-06
    2. ' ' → logprob: -12.375004768371582
    3. 'or' → logprob: -18.125003814697266
    4. ']' → logprob: -18.125003814697266
    5. '' → logprob: -18.375003814697266
    6. ',' → logprob: -18.875003814697266
    7. '```' → logprob: -19.187503814697266
    8. ' or' → logprob: -19.250003814697266
    9. '
' → logprob: -19.500003814697266
    10. '   ' → logprob: -19.625003814697266

Token 234: ']:
' (ID: 22152)
  Prédit: ']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:
' → logprob: -0.3489922881126404
    2. ']:' → logprob: -1.2239923477172852
    3. ',' → logprob: -8.348992347717285
    4. ']:
' → logprob: -8.473992347717285
    5. ']' → logprob: -10.098992347717285
    6. ']:

' → logprob: -10.473992347717285
    7. ' ]' → logprob: -10.973992347717285
    8. '   ' → logprob: -12.223992347717285
    9. '):
' → logprob: -12.223992347717285
    10. ']:


' → logprob: -13.598992347717285

Token 235: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19307993352413177
    2. ':' → logprob: -2.443079948425293
    3. ':
' → logprob: -2.443079948425293
    4. ',' → logprob: -7.318079948425293
    5. '):
' → logprob: -7.318079948425293
    6. '
' → logprob: -9.318079948425293
    7. '   ' → logprob: -9.318079948425293
    8. '        
' → logprob: -9.818079948425293
    9. ' :
' → logprob: -9.818079948425293
    10. '():
' → logprob: -10.193079948425293

Token 236: ' patterns' (ID: 18587)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.4835375249385834
    2. '       ' → logprob: -1.7335375547409058
    3. ' pattern' → logprob: -2.608537435531616
    4. ' if' → logprob: -3.108537435531616
    5. 'if' → logprob: -3.233537435531616
    6. 'prefix' → logprob: -3.483537435531616
    7. '   ' → logprob: -4.858537673950195
    8. 'mask' → logprob: -5.108537673950195
    9. ' prefix' → logprob: -6.233537673950195
    10. 'pat' → logprob: -7.483537673950195

Token 237: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.016038119792938232
    2. '=' → logprob: -4.141037940979004
    3. ' =[' → logprob: -13.516037940979004
    4. '=['' → logprob: -13.641037940979004
    5. '=[' → logprob: -14.766037940979004
    6. 's' → logprob: -15.391037940979004
    7. ' ' → logprob: -16.01603889465332
    8. '   ' → logprob: -16.01603889465332
    9. '=[
' → logprob: -16.14103889465332
    10. ',' → logprob: -16.51603889465332

Token 238: ' []
' (ID: 8911)
  Prédit: '[
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[
' → logprob: -0.5335335731506348
    2. '['' → logprob: -1.9085335731506348
    3. '{
' → logprob: -2.2835335731506348
    4. ' ['' → logprob: -3.0335335731506348
    5. '[' → logprob: -3.2835335731506348
    6. ' [
' → logprob: -3.4085335731506348
    7. ' {
' → logprob: -4.158533573150635
    8. ' [' → logprob: -4.408533573150635
    9. '[['' → logprob: -5.033533573150635
    10. '{' → logprob: -5.908533573150635

Token 239: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0038874808233231306
    2. ' =' → logprob: -6.25388765335083
    3. ' for' → logprob: -7.12888765335083
    4. ' if' → logprob: -7.37888765335083
    5. '[' → logprob: -8.878887176513672
    6. 'if' → logprob: -8.878887176513672
    7. 'for' → logprob: -9.128887176513672
    8. '=' → logprob: -10.128887176513672
    9. '   ' → logprob: -11.003887176513672
    10. '[
' → logprob: -11.003887176513672

Token 240: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.0596933364868164
    2. ' if' → logprob: -1.0596933364868164
    3. '       ' → logprob: -1.1846933364868164
    4. '
' → logprob: -8.184693336486816
    5. 'for' → logprob: -8.684693336486816
    6. 'patterns' → logprob: -8.809693336486816
    7. ' for' → logprob: -9.059693336486816
    8. '        
' → logprob: -9.184693336486816
    9. 'def' → logprob: -9.184693336486816
    10. '   ' → logprob: -10.434693336486816

Token 241: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.018158959224820137
    2. ' length' → logprob: -4.018158912658691
    3. '   ' → logprob: -12.268158912658691
    4. '    ' → logprob: -13.143158912658691
    5. ' ' → logprob: -14.018158912658691
    6. '  ' → logprob: -14.268158912658691
    7. 'ength' → logprob: -15.393158912658691
    8. '(length' → logprob: -15.643158912658691
    9. '     ' → logprob: -15.768158912658691
    10. '	length' → logprob: -15.768158912658691

Token 242: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759487152099609
    2. '==' → logprob: -0.8259487152099609
    3. '=' → logprob: -12.200948715209961
    4. '==
' → logprob: -13.200948715209961
    5. '1' → logprob: -14.325948715209961
    6. ')==' → logprob: -14.950948715209961
    7. '>=' → logprob: -15.200948715209961
    8. '===' → logprob: -15.450948715209961
    9. ' ' → logprob: -15.575948715209961
    10. '()==' → logprob: -15.825948715209961

Token 243: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028080830816179514
    2. ' ' → logprob: -5.877808094024658
    3. '   ' → logprob: -13.7528076171875
    4. '2' → logprob: -14.1278076171875
    5. '0' → logprob: -14.7528076171875
    6. '4' → logprob: -15.0028076171875
    7. '  ' → logprob: -15.5653076171875
    8. '3' → logprob: -16.1278076171875
    9. '
' → logprob: -16.8153076171875
    10. '=' → logprob: -17.0028076171875

Token 244: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002647927321959287
    2. ' ' → logprob: -8.250265121459961
    3. '4' → logprob: -13.125265121459961
    4. '   ' → logprob: -14.750265121459961
    5. '2' → logprob: -14.812765121459961
    6. '0' → logprob: -15.187765121459961
    7. '
' → logprob: -15.437765121459961
    8. '3' → logprob: -16.56276512145996
    9. '  ' → logprob: -16.81276512145996
    10. '

' → logprob: -17.37526512145996

Token 245: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05494050681591034
    2. ':' → logprob: -2.9299404621124268
    3. '       ' → logprob: -11.054940223693848
    4. ' :
' → logprob: -11.304940223693848
    5. ':

' → logprob: -11.929940223693848
    6. ' =' → logprob: -12.179940223693848
    7. '=' → logprob: -12.429940223693848
    8. '           ' → logprob: -12.429940223693848
    9. '):
' → logprob: -13.054940223693848
    10. ' and' → logprob: -13.304940223693848

Token 246: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02133864536881447
    2. 'patterns' → logprob: -3.896338701248169
    3. ' patterns' → logprob: -7.64633846282959
    4. '       ' → logprob: -9.02133846282959
    5. 'pattern' → logprob: -9.39633846282959
    6. '
' → logprob: -10.89633846282959
    7. ':
' → logprob: -10.89633846282959
    8. ':' → logprob: -11.14633846282959
    9. 'pat' → logprob: -11.52133846282959
    10. '            
' → logprob: -11.77133846282959

Token 247: ' #' (ID: 1069)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.03181895241141319
    2. ' patterns' → logprob: -3.7818188667297363
    3. '           ' → logprob: -4.906818866729736
    4. 'pattern' → logprob: -8.031819343566895
    5. '['' → logprob: -8.156819343566895
    6. ''' → logprob: -8.156819343566895
    7. ' ['' → logprob: -9.656819343566895
    8. 'pat' → logprob: -10.781819343566895
    9. '
' → logprob: -10.906819343566895
    10. '               ' → logprob: -10.906819343566895

Token 248: ' ' (ID: 220)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.016373105347156525
    2. ' patterns' → logprob: -4.141373157501221
    3. 'pattern' → logprob: -8.766372680664062
    4. '           ' → logprob: -9.016372680664062
    5. '#' → logprob: -10.641372680664062
    6. '       ' → logprob: -11.391372680664062
    7. '   ' → logprob: -11.891372680664062
    8. 'pat' → logprob: -12.516372680664062
    9. 'byte' → logprob: -12.766372680664062
    10. ' #' → logprob: -13.141372680664062

Token 249: '0' (ID: 15)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.0012844024458900094
    2. 'pattern' → logprob: -7.126284599304199
    3. ''' → logprob: -8.1262845993042
    4. '['' → logprob: -10.0012845993042
    5. ' patterns' → logprob: -10.0012845993042
    6. '#' → logprob: -10.3762845993042
    7. '   ' → logprob: -11.2512845993042
    8. 'byte' → logprob: -11.8762845993042
    9. '[' → logprob: -12.0012845993042
    10. 'for' → logprob: -12.0012845993042

Token 250: 'xxxx' (ID: 30950)
  Prédit: 'xxxx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xxxx' → logprob: -0.23998576402664185
    2. 'b' → logprob: -2.239985704421997
    3. 'xxx' → logprob: -2.989985704421997
    4. 'pattern' → logprob: -3.489985704421997
    5. ''' → logprob: -5.239985942840576
    6. 'patterns' → logprob: -5.364985942840576
    7. ' pattern' → logprob: -5.864985942840576
    8. 'xxxxx' → logprob: -5.864985942840576
    9. ' patterns' → logprob: -6.614985942840576
    10. ' =' → logprob: -7.239985942840576

Token 251: 'xxx' (ID: 49993)
  Prédit: 'xxx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xxx' → logprob: -0.3771136999130249
    2. 'xxxx' → logprob: -1.252113699913025
    3. '000' → logprob: -4.5021138191223145
    4. '0' → logprob: -4.7521138191223145
    5. 'xxxxx' → logprob: -5.6271138191223145
    6. '111' → logprob: -6.0021138191223145
    7. '```' → logprob: -7.0021138191223145
    8. ''' → logprob: -7.8771138191223145
    9. '100' → logprob: -8.127113342285156
    10. '1' → logprob: -8.502113342285156

Token 252: '
' (ID: 198)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.347382128238678
    2. '           ' → logprob: -1.7223820686340332
    3. 'pattern' → logprob: -2.847382068634033
    4. ' patterns' → logprob: -3.597382068634033
    5. '
' → logprob: -4.097382068634033
    6. '       ' → logprob: -5.597382068634033
    7. ':
' → logprob: -6.722382068634033
    8. '(pattern' → logprob: -6.722382068634033
    9. ' pattern' → logprob: -7.097382068634033
    10. ' =' → logprob: -7.222382068634033

Token 253: '           ' (ID: 352)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.5430262088775635
    2. '           ' → logprob: -1.0430262088775635
    3. '       ' → logprob: -3.0430262088775635
    4. ' patterns' → logprob: -4.168025970458984
    5. 'pattern' → logprob: -5.793025970458984
    6. '
' → logprob: -9.168025970458984
    7. 'pat' → logprob: -9.168025970458984
    8. '(pattern' → logprob: -10.293025970458984
    9. ' pattern' → logprob: -10.793025970458984
    10. '            
' → logprob: -10.918025970458984

Token 254: ' #' (ID: 1069)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.010640512220561504
    2. 'pattern' → logprob: -4.635640621185303
    3. ' patterns' → logprob: -7.260640621185303
    4. '           ' → logprob: -10.010640144348145
    5. 'for' → logprob: -10.010640144348145
    6. 'pat' → logprob: -10.385640144348145
    7. 'byte' → logprob: -11.010640144348145
    8. '       ' → logprob: -11.635640144348145
    9. 'p' → logprob: -12.010640144348145
    10. '   ' → logprob: -12.135640144348145

Token 255: ' first' (ID: 1577)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.005170431453734636
    2. 'pattern' → logprob: -5.8801703453063965
    3. ' patterns' → logprob: -6.1301703453063965
    4. ''' → logprob: -9.755170822143555
    5. '           ' → logprob: -9.880170822143555
    6. 'pat' → logprob: -10.755170822143555
    7. 'for' → logprob: -11.005170822143555
    8. '       ' → logprob: -11.505170822143555
    9. '   ' → logprob: -12.130170822143555
    10. 'byte' → logprob: -12.630170822143555

Token 256: ' bit' (ID: 3546)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.8127949237823486
    2. 'pattern' → logprob: -1.0627949237823486
    3. 'byte' → logprob: -2.4377949237823486
    4. '_byte' → logprob: -3.0627949237823486
    5. ' =' → logprob: -3.1877949237823486
    6. '_patterns' → logprob: -4.6877946853637695
    7. '=' → logprob: -4.9377946853637695
    8. ' patterns' → logprob: -5.3127946853637695
    9. '_pattern' → logprob: -5.8127946853637695
    10. 's' → logprob: -6.0627946853637695

Token 257: ' ' (ID: 220)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.0946408361196518
    2. '==' → logprob: -2.7196407318115234
    3. '=' → logprob: -4.094640731811523
    4. ' =' → logprob: -5.094640731811523
    5. '=='' → logprob: -7.594640731811523
    6. 'pattern' → logprob: -7.969640731811523
    7. ' ' → logprob: -8.969640731811523
    8. 'def' → logprob: -8.969640731811523
    9. ' pattern' → logprob: -9.469640731811523
    10. ' =='' → logprob: -9.594640731811523

Token 258: '0' (ID: 15)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1827993541955948
    2. ' ==' → logprob: -1.9327993392944336
    3. '=' → logprob: -3.9327993392944336
    4. '=='' → logprob: -6.807799339294434
    5. ''' → logprob: -7.182799339294434
    6. ' =' → logprob: -8.182799339294434
    7. 'pattern' → logprob: -8.682799339294434
    8. 'def' → logprob: -8.807799339294434
    9. 'b' → logprob: -9.682799339294434
    10. '0' → logprob: -10.057799339294434

Token 259: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30162617564201355
    2. 'patterns' → logprob: -2.426626205444336
    3. ' =' → logprob: -2.801626205444336
    4. ' and' → logprob: -2.926626205444336
    5. ' patterns' → logprob: -4.301626205444336
    6. ',' → logprob: -4.801626205444336
    7. 'pattern' → logprob: -4.801626205444336
    8. '=' → logprob: -5.176626205444336
    9. '
' → logprob: -5.176626205444336
    10. ' ==' → logprob: -5.551626205444336

Token 260: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07236424833536148
    2. 'patterns' → logprob: -2.822364330291748
    3. 'pattern' → logprob: -5.572364330291748
    4. ' patterns' → logprob: -5.697364330291748
    5. '       ' → logprob: -5.822364330291748
    6. ' pattern' → logprob: -9.69736385345459
    7. 'pat' → logprob: -10.57236385345459
    8. ' for' → logprob: -10.57236385345459
    9. ',' → logprob: -10.69736385345459
    10. '(pattern' → logprob: -11.07236385345459

Token 261: ' pattern' (ID: 8302)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.14969131350517273
    2. 'pattern' (adapté à ' pattern') → logprob: -2.399691343307495
    3. ' patterns' → logprob: -3.899691343307495
    4. '           ' → logprob: -4.024691104888916
    5. 'if' → logprob: -5.149691104888916
    6. ' if' → logprob: -6.524691104888916
    7. ' pattern' → logprob: -6.899691104888916
    8. 'for' → logprob: -7.524691104888916
    9. 'pat' → logprob: -7.649691104888916
    10. ' for' → logprob: -8.274691581726074

Token 262: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4742349684238434
    2. ' =' → logprob: -0.974234938621521
    3. 's' → logprob: -8.849234580993652
    4. '='' → logprob: -11.974234580993652
    5. ' ='' → logprob: -12.599234580993652
    6. '   ' → logprob: -13.724234580993652
    7. 'attern' → logprob: -13.849234580993652
    8. ' ' → logprob: -14.724234580993652
    9. '=
' → logprob: -14.974234580993652
    10. '=['' → logprob: -15.474234580993652

Token 263: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0028889216482639313
    2. '0' → logprob: -6.127889156341553
    3. '"' → logprob: -7.502889156341553
    4. '['' → logprob: -9.752888679504395
    5. ' '' → logprob: -9.752888679504395
    6. ''b' → logprob: -11.877888679504395
    7. ' ' → logprob: -12.002888679504395
    8. '   ' → logprob: -12.752888679504395
    9. '('' → logprob: -12.877888679504395
    10. 'b' → logprob: -13.002888679504395

Token 264: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.383526149671525e-05
    2. ''' → logprob: -9.875053405761719
    3. ' ' → logprob: -13.250053405761719
    4. '1' → logprob: -15.250053405761719
    5. '"' → logprob: -16.62505340576172
    6. '01' → logprob: -16.62505340576172
    7. '[' → logprob: -18.00005340576172
    8. '000' → logprob: -18.12505340576172
    9. '011' → logprob: -18.25005340576172
    10. '
' → logprob: -18.25005340576172

Token 265: 'xxxx' (ID: 30950)
  Prédit: 'xxxx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xxxx' → logprob: -0.0002991160727106035
    2. ''' → logprob: -8.375299453735352
    3. 'x' → logprob: -10.750299453735352
    4. '####' → logprob: -11.125299453735352
    5. 'XXXX' → logprob: -11.375299453735352
    6. '????' → logprob: -12.375299453735352
    7. 'xxxxxxxx' → logprob: -12.500299453735352
    8. '*******' → logprob: -13.375299453735352
    9. '.......' → logprob: -13.500299453735352
    10. '111' → logprob: -13.500299453735352

Token 266: 'xxx' (ID: 49993)
  Prédit: 'xxx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xxx' → logprob: -0.016679365187883377
    2. '000' → logprob: -4.141679286956787
    3. '0' → logprob: -8.141679763793945
    4. ''' → logprob: -8.391679763793945
    5. '111' → logprob: -9.516679763793945
    6. '00' → logprob: -11.391679763793945
    7. 'www' → logprob: -11.516679763793945
    8. 'zzz' → logprob: -11.641679763793945
    9. '```' → logprob: -12.141679763793945
    10. 'xxxx' → logprob: -12.391679763793945

Token 267: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3133354187011719
    2. ''
' → logprob: -1.3133354187011719
    3. ''
' → logprob: -9.688335418701172
    4. ''

' → logprob: -13.063335418701172
    5. ''"
' → logprob: -13.188335418701172
    6. '''
' → logprob: -13.313335418701172
    7. '')' → logprob: -13.563335418701172
    8. ''''
' → logprob: -13.563335418701172
    9. '"' → logprob: -14.313335418701172
    10. ')'
' → logprob: -14.813335418701172

Token 268: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.032858945429325104
    2. '<|end|>' → logprob: -4.282858848571777
    3. '           ' → logprob: -4.907858848571777
    4. '
' → logprob: -4.907858848571777
    5. ''' → logprob: -6.032858848571777
    6. '<|end|>' → logprob: -7.782858848571777
    7. '        
' → logprob: -8.032858848571777
    8. ',' → logprob: -9.157858848571777
    9. ''
' → logprob: -9.157858848571777
    10. '   ' → logprob: -9.657858848571777

Token 269: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4246900677680969
    2. 'patterns' → logprob: -1.9246900081634521
    3. ' if' → logprob: -2.924690008163452
    4. ' patterns' → logprob: -3.049690008163452
    5. 'if' (adapté à ' if') → logprob: -3.299690008163452
    6. 'count' → logprob: -3.549690008163452
    7. '
' → logprob: -4.049690246582031
    8. ' count' → logprob: -5.049690246582031
    9. '           ' → logprob: -5.674690246582031
    10. '        
' → logprob: -6.674690246582031

Token 270: ' match' (ID: 3981)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.012573221698403358
    2. 'count' → logprob: -4.5125732421875
    3. ' match' → logprob: -6.8875732421875
    4. 'all' → logprob: -8.2625732421875
    5. '(match' → logprob: -10.1375732421875
    6. 'len' → logprob: -10.1375732421875
    7. 'byte' → logprob: -10.3875732421875
    8. 'pattern' → logprob: -10.3875732421875
    9. ' count' → logprob: -10.8875732421875
    10. '   ' → logprob: -10.8875732421875

Token 271: '_pattern' (ID: 50002)
  Prédit: '_pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pattern' → logprob: -0.003629646496847272
    2. 'pattern' → logprob: -6.253629684448242
    3. '(pattern' → logprob: -6.378629684448242
    4. ' pattern' → logprob: -14.253629684448242
    5. '(p' → logprob: -14.378629684448242
    6. '_patterns' → logprob: -15.003629684448242
    7. 'Pattern' → logprob: -15.753629684448242
    8. '(_' → logprob: -15.878629684448242
    9. '_PATTERN' → logprob: -16.253629684448242
    10. '(' → logprob: -16.378629684448242

Token 272: '(pattern' (ID: 62660)
  Prédit: '(pattern'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(pattern' → logprob: -5.860340752406046e-05
    2. ' (' → logprob: -10.2500581741333
    3. '(' → logprob: -11.0000581741333
    4. 'pattern' → logprob: -12.2500581741333
    5. '('' → logprob: -14.1250581741333
    6. '(
' → logprob: -15.0000581741333
    7. '(match' → logprob: -16.125059127807617
    8. ')' → logprob: -16.125059127807617
    9. '(byte' → logprob: -16.625059127807617
    10. '```' → logprob: -16.875059127807617

Token 273: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004796899855136871
    2. '(byte' → logprob: -5.379796981811523
    3. ' ,' → logprob: -9.004796981811523
    4. '(' → logprob: -10.879796981811523
    5. '(pattern' → logprob: -11.254796981811523
    6. ')' → logprob: -12.504796981811523
    7. 'pattern' → logprob: -12.504796981811523
    8. ',
' → logprob: -12.629796981811523
    9. 'byte' → logprob: -12.879796981811523
    10. ',b' → logprob: -13.004796981811523

Token 274: ' byte' (ID: 9239)
  Prédit: 'byte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'byte' → logprob: -0.2519405782222748
    2. ' byte' → logprob: -1.5019406080245972
    3. '   ' → logprob: -12.876940727233887
    4. '(byte' → logprob: -13.126940727233887
    5. '.byte' → logprob: -13.626940727233887
    6. 'b' → logprob: -13.751940727233887
    7. ')' → logprob: -13.876940727233887
    8. 'Byte' → logprob: -13.876940727233887
    9. '_byte' → logprob: -14.001940727233887
    10. ' ' → logprob: -14.376940727233887

Token 275: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -5.2166411478538066e-05
    2. 'str' → logprob: -9.875052452087402
    3. 'byte' → logprob: -15.500052452087402
    4. '   ' → logprob: -16.375051498413086
    5. '_byte' → logprob: -16.500051498413086
    6. '
' → logprob: -16.875051498413086
    7. ')' → logprob: -17.250051498413086
    8. 'Str' → logprob: -17.375051498413086
    9. '```' → logprob: -17.875051498413086
    10. '_STR' → logprob: -18.125051498413086

Token 276: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5763744115829468
    2. '):
' → logprob: -0.8263744115829468
    3. '):
' → logprob: -8.576374053955078
    4. ')' → logprob: -8.701374053955078
    5. '       ' → logprob: -10.701374053955078
    6. '   ' → logprob: -10.951374053955078
    7. '):

' → logprob: -11.451374053955078
    8. ')==' → logprob: -11.576374053955078
    9. ' ):' → logprob: -12.076374053955078
    10. ' ):
' → logprob: -12.326374053955078

Token 277: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4570222795009613
    2. 'res' → logprob: -1.0820223093032837
    3. '               ' → logprob: -4.332022190093994
    4. ' res' → logprob: -4.582022190093994
    5. '       ' → logprob: -5.957022190093994
    6. '
' → logprob: -6.332022190093994
    7. 'return' → logprob: -10.332022666931152
    8. ':
' → logprob: -10.707022666931152
    9. '          ' → logprob: -10.832022666931152
    10. '   ' → logprob: -11.332022666931152

Token 278: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.023544415831565857
    2. ' res' → logprob: -3.7735443115234375
    3. '               ' → logprob: -8.898544311523438
    4. '           ' → logprob: -9.273544311523438
    5. 'return' → logprob: -11.023544311523438
    6. '       ' → logprob: -11.148544311523438
    7. '   ' → logprob: -11.273544311523438
    8. '                   ' → logprob: -11.523544311523438
    9. '
' → logprob: -11.773544311523438
    10. '	res' → logprob: -13.148544311523438

Token 279: ' count' (ID: 3605)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.006155004259198904
    2. ' res' → logprob: -5.131155014038086
    3. 'return' → logprob: -8.631155014038086
    4. ' return' → logprob: -11.006155014038086
    5. '               ' → logprob: -11.131155014038086
    6. '                   ' → logprob: -11.256155014038086
    7. '           ' → logprob: -13.506155014038086
    8. '   ' → logprob: -14.256155014038086
    9. 'patterns' → logprob: -14.756155014038086
    10. '
' → logprob: -15.006155014038086

Token 280: ' possible' (ID: 4149)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.7066853046417236
    2. '=' → logprob: -1.4566853046417236
    3. 'count' → logprob: -2.3316853046417236
    4. 'res' → logprob: -2.9566853046417236
    5. 'poss' → logprob: -3.2066853046417236
    6. '+=' → logprob: -3.8316853046417236
    7. '_pos' → logprob: -4.3316850662231445
    8. ' +=' → logprob: -4.4566850662231445
    9. 'pos' → logprob: -4.4566850662231445
    10. '=count' → logprob: -4.7066850662231445

Token 281: ' bytes' (ID: 11643)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6340112686157227
    2. ' =' → logprob: -1.8840112686157227
    3. '=' → logprob: -2.1340112686157227
    4. ' +=' → logprob: -2.7590112686157227
    5. '+=' → logprob: -3.1340112686157227
    6. 'bytes' → logprob: -3.7590112686157227
    7. 'poss' → logprob: -3.7590112686157227
    8. 's' → logprob: -4.384011268615723
    9. 'count' → logprob: -5.259011268615723
    10. ' res' → logprob: -5.259011268615723

Token 282: ' that' (ID: 484)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13432510197162628
    2. '=' → logprob: -2.1343250274658203
    3. '               ' → logprob: -5.25932502746582
    4. ',' → logprob: -7.13432502746582
    5. '                   ' → logprob: -8.38432502746582
    6. 'count' → logprob: -8.50932502746582
    7. ' +=' → logprob: -8.50932502746582
    8. 'poss' → logprob: -8.63432502746582
    9. '           ' → logprob: -9.25932502746582
    10. '=count' → logprob: -9.75932502746582

Token 283: ' fit' (ID: 5769)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.3968372941017151
    2. 'res' → logprob: -1.8968372344970703
    3. ' match' → logprob: -2.7718372344970703
    4. 'can' → logprob: -3.0218372344970703
    5. ' can' → logprob: -3.2718372344970703
    6. 'fit' → logprob: -4.39683723449707
    7. 'count' → logprob: -5.64683723449707
    8. ' fit' → logprob: -5.89683723449707
    9. '               ' → logprob: -6.52183723449707
    10. ' res' → logprob: -6.89683723449707

Token 284: ' pattern' (ID: 8302)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6929444074630737
    2. ' =' → logprob: -0.9429444074630737
    3. 'count' → logprob: -2.8179445266723633
    4. '               ' → logprob: -4.317944526672363
    5. '=count' → logprob: -4.442944526672363
    6. ' count' → logprob: -5.317944526672363
    7. 'res' → logprob: -5.317944526672363
    8. '(count' → logprob: -6.192944526672363
    9. '+=' → logprob: -6.317944526672363
    10. '_count' → logprob: -6.442944526672363

Token 285: ' and' (ID: 326)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4843047559261322
    2. ' =' → logprob: -2.484304666519165
    3. 'res' → logprob: -2.484304666519165
    4. ' res' → logprob: -2.484304666519165
    5. 'count' → logprob: -2.859304666519165
    6. ',' → logprob: -3.359304666519165
    7. ' count' → logprob: -3.984304666519165
    8. ' return' → logprob: -4.734304904937744
    9. 'return' → logprob: -5.734304904937744
    10. '=' → logprob: -6.359304904937744

Token 286: ' byte' (ID: 9239)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.9175403714179993
    2. 'count' → logprob: -1.6675403118133545
    3. ' return' → logprob: -1.7925403118133545
    4. 'res' → logprob: -1.9175403118133545
    5. ' res' → logprob: -3.2925403118133545
    6. ' count' → logprob: -3.5425403118133545
    7. 'append' → logprob: -5.667540550231934
    8. 'increment' → logprob: -6.167540550231934
    9. 'continue' → logprob: -6.167540550231934
    10. 'match' → logprob: -6.292540550231934

Token 287: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -2.9160102712921798e-05
    2. 'str' → logprob: -11.375029563903809
    3. '   ' → logprob: -11.500029563903809
    4. '_bytes' → logprob: -13.250029563903809
    5. '_byte' → logprob: -13.250029563903809
    6. 'byte' → logprob: -13.625029563903809
    7. '       ' → logprob: -14.375029563903809
    8. 'pattern' → logprob: -15.250029563903809
    9. '_string' → logprob: -15.750029563903809
    10. 'string' → logprob: -15.750029563903809

Token 288: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14809980988502502
    2. ',' → logprob: -2.398099899291992
    3. ' =' → logprob: -3.773099899291992
    4. ' return' → logprob: -4.898099899291992
    5. 'return' → logprob: -5.398099899291992
    6. 'res' → logprob: -5.773099899291992
    7. ' res' → logprob: -6.148099899291992
    8. 'count' → logprob: -6.273099899291992
    9. ' ,' → logprob: -6.648099899291992
    10. '           ' → logprob: -7.773099899291992

Token 289: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004810184706002474
    2. 'count' → logprob: -6.879810333251953
    3. '           ' → logprob: -7.379810333251953
    4. ' return' → logprob: -7.504810333251953
    5. 'return' → logprob: -7.504810333251953
    6. 'res' → logprob: -7.504810333251953
    7. '
' → logprob: -7.629810333251953
    8. ' count' → logprob: -7.754810333251953
    9. ' res' → logprob: -8.004810333251953
    10. ',' → logprob: -9.004810333251953

Token 290: ' cnt' (ID: 27340)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.536013662815094
    2. 'res' → logprob: -1.5360136032104492
    3. 'return' → logprob: -2.536013603210449
    4. ' count' → logprob: -3.536013603210449
    5. '               ' → logprob: -3.661013603210449
    6. 'cnt' (adapté à ' cnt') → logprob: -3.661013603210449
    7. ' res' → logprob: -4.036013603210449
    8. ' return' → logprob: -4.411013603210449
    9. 'poss' → logprob: -5.161013603210449
    10. 'num' → logprob: -6.911013603210449

Token 291: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.040573570877313614
    2. '=' → logprob: -3.6655735969543457
    3. ' +=' → logprob: -4.290573596954346
    4. '+=' → logprob: -7.665573596954346
    5. '   ' → logprob: -12.915573120117188
    6. ' ' → logprob: -13.165573120117188
    7. '  ' → logprob: -14.290573120117188
    8. '+' → logprob: -14.915573120117188
    9. '=count' → logprob: -15.165573120117188
    10. ')' → logprob: -16.540573120117188

Token 292: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.1602395623922348
    2. ' count' → logprob: -1.910239577293396
    3. '1' → logprob: -12.535239219665527
    4. '               ' → logprob: -12.785239219665527
    5. ' ' → logprob: -13.160239219665527
    6. '           ' → logprob: -13.285239219665527
    7. '   ' → logprob: -13.660239219665527
    8. '(count' → logprob: -14.160239219665527
    9. '0' → logprob: -14.410239219665527
    10. 'sum' → logprob: -14.410239219665527

Token 293: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -1.6240566083070007e-06
    2. '_valid' → logprob: -13.750001907348633
    3. '_possible' → logprob: -15.500001907348633
    4. 'pos' → logprob: -15.875001907348633
    5. 'poss' → logprob: -16.750001907348633
    6. '[pos' → logprob: -17.875001907348633
    7. '(pos' → logprob: -18.250001907348633
    8. '_count' → logprob: -18.375001907348633
    9. '_positions' → logprob: -18.750001907348633
    10. '
' → logprob: -19.000001907348633

Token 294: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.07889363914728165
    2. 'ibilities' → logprob: -2.5788936614990234
    3. 'sib' → logprob: -14.203893661499023
    4. 'ibl' → logprob: -14.328893661499023
    5. 'ib' → logprob: -14.703893661499023
    6. 'abilities' → logprob: -14.828893661499023
    7. 'ilities' → logprob: -14.828893661499023
    8. 'ibil' → logprob: -15.203893661499023
    9. 'IBIL' → logprob: -15.453893661499023
    10. ' possibilities' → logprob: -15.703893661499023

Token 295: 'ibilities' (ID: 25632)
  Prédit: 'ibilities'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibilities' → logprob: -4.56102097814437e-05
    2. 'ibil' → logprob: -10.875045776367188
    3. 's' → logprob: -11.500045776367188
    4. 'ibl' → logprob: -11.875045776367188
    5. 'ib' → logprob: -12.375045776367188
    6. 'ilities' → logprob: -12.625045776367188
    7. 'b' → logprob: -14.375045776367188
    8. 'IBIL' → logprob: -14.375045776367188
    9. ' possibilities' → logprob: -15.375045776367188
    10. '_' → logprob: -16.125045776367188

Token 296: '(byte' (ID: 36692)
  Prédit: '(byte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(byte' → logprob: -0.020213313400745392
    2. '('' → logprob: -4.1452131271362305
    3. '(pattern' → logprob: -5.5202131271362305
    4. '(' → logprob: -9.64521312713623
    5. 'byte' → logprob: -9.77021312713623
    6. '(b' → logprob: -10.89521312713623
    7. '(bytes' → logprob: -12.64521312713623
    8. ' (' → logprob: -12.77021312713623
    9. ' byte' → logprob: -12.89521312713623
    10. '(bit' → logprob: -12.89521312713623

Token 297: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.5213274309644476e-05
    2. 'str' → logprob: -11.125015258789062
    3. '
' → logprob: -16.250015258789062
    4. 'Str' → logprob: -16.375015258789062
    5. '```' → logprob: -16.500015258789062
    6. '   ' → logprob: -16.625015258789062
    7. ')' → logprob: -17.000015258789062
    8. '[' → logprob: -17.750015258789062
    9. '[str' → logprob: -17.875015258789062
    10. '$str' → logprob: -18.250015258789062

Token 298: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.001893414300866425
    2. ')' → logprob: -6.376893520355225
    3. ')
' → logprob: -8.626893043518066
    4. '           ' → logprob: -11.876893043518066
    5. '               ' → logprob: -12.626893043518066
    6. '       ' → logprob: -14.251893043518066
    7. ' )
' → logprob: -14.751893043518066
    8. '[' → logprob: -16.001893997192383
    9. ')

' → logprob: -16.001893997192383
    10. ')`
' → logprob: -16.126893997192383

Token 299: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -6.933173426659778e-05
    2. '           ' → logprob: -10.250069618225098
    3. '<|end|>' → logprob: -11.000069618225098
    4. '       ' → logprob: -11.750069618225098
    5. ',' → logprob: -12.750069618225098
    6. '
' → logprob: -13.250069618225098
    7. 'return' → logprob: -13.375069618225098
    8. '```' → logprob: -14.250069618225098
    9. '   ' → logprob: -14.750069618225098
    10. 'import' → logprob: -15.500069618225098

Token 300: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5598099231719971
    2. 'res' → logprob: -1.184809923171997
    3. '       ' → logprob: -2.684809923171997
    4. '           ' → logprob: -3.684809923171997
    5. ' res' → logprob: -3.684809923171997
    6. 'return' → logprob: -5.809809684753418
    7. '   ' → logprob: -6.934809684753418
    8. ' return' → logprob: -8.059809684753418
    9. '
' → logprob: -9.184809684753418
    10. ' ' → logprob: -11.684809684753418

Token 301: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.00881322380155325
    2. ' cnt' → logprob: -4.758813381195068
    3. '(cnt' → logprob: -8.88381290435791
    4. 'length' → logprob: -10.50881290435791
    5. '	cnt' → logprob: -10.88381290435791
    6. ' length' → logprob: -12.75881290435791
    7. 'pattern' → logprob: -12.88381290435791
    8. '[cnt' → logprob: -12.88381290435791
    9. 'count' → logprob: -13.00881290435791
    10. ' ' → logprob: -14.13381290435791

Token 302: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6931670904159546
    2. ' >' → logprob: -0.6931670904159546
    3. ':' → logprob: -11.568166732788086
    4. '   ' → logprob: -12.943166732788086
    5. ' !=' → logprob: -13.193166732788086
    6. ')>' → logprob: -13.318166732788086
    7. '>:' → logprob: -13.568166732788086
    8. ' >=' → logprob: -13.943166732788086
    9. '!=' → logprob: -14.568166732788086
    10. '>=' → logprob: -14.568166732788086

Token 303: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026300877332687378
    2. ' ' → logprob: -3.6513009071350098
    3. '   ' → logprob: -14.901300430297852
    4. '  ' → logprob: -16.77630043029785
    5. '1' → logprob: -16.77630043029785
    6. ' ' → logprob: -17.77630043029785
    7. '```' → logprob: -17.83880043029785
    8. '=' → logprob: -17.96380043029785
    9. '۰' → logprob: -18.27630043029785
    10. '>' → logprob: -18.27630043029785

Token 304: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. 'return' → logprob: -17.000009536743164
    4. '1' → logprob: -17.375009536743164
    5. '```' → logprob: -17.375009536743164
    6. '۰' → logprob: -18.125009536743164
    7. '   ' → logprob: -19.125009536743164
    8. 'def' → logprob: -19.250009536743164
    9. 'count' → logprob: -19.375009536743164
    10. 'zero' → logprob: -19.500009536743164

Token 305: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.05274578183889389
    2. ':' → logprob: -3.052745819091797
    3. '                   ' → logprob: -5.927745819091797
    4. '):
' → logprob: -7.302745819091797
    5. '           ' → logprob: -7.802745819091797
    6. '               ' → logprob: -8.677745819091797
    7. ',' → logprob: -9.052745819091797
    8. ' and' → logprob: -9.802745819091797
    9. ':
' → logprob: -10.802745819091797
    10. '):' → logprob: -11.302745819091797

Token 306: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.19757644832134247
    2. 'res' → logprob: -2.5725765228271484
    3. ' res' → logprob: -2.6975765228271484
    4. '           ' → logprob: -3.4475765228271484
    5. '               ' → logprob: -6.697576522827148
    6. ' return' → logprob: -6.822576522827148
    7. 'return' → logprob: -6.947576522827148
    8. '
' → logprob: -8.947576522827148
    9. '       ' → logprob: -8.947576522827148
    10. '                       ' → logprob: -9.322576522827148

Token 307: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.18208041787147522
    2. ' res' → logprob: -1.9320803880691528
    3. '       ' → logprob: -3.9320805072784424
    4. '                   ' → logprob: -6.557080268859863
    5. 'return' → logprob: -8.557080268859863
    6. ' return' → logprob: -8.807080268859863
    7. '   ' → logprob: -9.182080268859863
    8. '           ' → logprob: -9.557080268859863
    9. '               ' → logprob: -10.057080268859863
    10. '                       ' → logprob: -10.557080268859863

Token 308: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00015920029545668513
    2. '.' → logprob: -8.75015926361084
    3. ' .' → logprob: -15.25015926361084
    4. 'append' → logprob: -15.50015926361084
    5. '.extend' → logprob: -15.62515926361084
    6. '.app' → logprob: -17.125158309936523
    7. '.ap' → logprob: -17.750158309936523
    8. '.Append' → logprob: -18.500158309936523
    9. ' append' → logprob: -19.000158309936523
    10. '_append' → logprob: -19.125158309936523

Token 309: '((' (ID: 2054)
  Prédit: '(length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -0.0017508649034425616
    2. '(' → logprob: -7.001750946044922
    3. 'length' → logprob: -7.376750946044922
    4. ' (' → logprob: -8.876750946044922
    5. '((' → logprob: -9.876750946044922
    6. ' length' → logprob: -11.376750946044922
    7. '[length' → logprob: -12.126750946044922
    8. ',length' → logprob: -13.126750946044922
    9. '   ' → logprob: -13.751750946044922
    10. '(len' → logprob: -14.376750946044922

Token 310: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.006486453115940094
    2. '1' → logprob: -5.631486415863037
    3. 'cnt' → logprob: -5.881486415863037
    4. ' length' → logprob: -10.006486892700195
    5. 'count' → logprob: -10.506486892700195
    6. '   ' → logprob: -12.006486892700195
    7. 'byte' → logprob: -12.631486892700195
    8. '(length' → logprob: -13.006486892700195
    9. ' cnt' → logprob: -14.131486892700195
    10. ' ' → logprob: -14.131486892700195

Token 311: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044127836008556187
    2. ' ,' → logprob: -8.375441551208496
    3. ',c' → logprob: -8.500441551208496
    4. ',
' → logprob: -12.250441551208496
    5. ',count' → logprob: -14.125441551208496
    6. '(cnt' → logprob: -14.875441551208496
    7. 'cnt' → logprob: -14.875441551208496
    8. ')' → logprob: -15.125441551208496
    9. '[cnt' → logprob: -15.375441551208496
    10. ' cnt' → logprob: -16.37544059753418

Token 312: ' cnt' (ID: 27340)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.007627569139003754
    2. ' cnt' → logprob: -4.882627487182617
    3. 'count' → logprob: -10.882627487182617
    4. '(cnt' → logprob: -13.882627487182617
    5. '[cnt' → logprob: -14.007627487182617
    6. '	cnt' → logprob: -14.882627487182617
    7. ')' → logprob: -15.632627487182617
    8. '   ' → logprob: -16.757627487182617
    9. ' ' → logprob: -16.882627487182617
    10. ' count' → logprob: -16.882627487182617

Token 313: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.014183600433170795
    2. '))
' → logprob: -4.264183521270752
    3. ' ))' → logprob: -12.01418399810791
    4. ',' → logprob: -12.13918399810791
    5. '))
' → logprob: -12.88918399810791
    6. '               ' → logprob: -13.38918399810791
    7. '))

' → logprob: -13.76418399810791
    8. '                   ' → logprob: -14.01418399810791
    9. ')' → logprob: -14.26418399810791
    10. '           ' → logprob: -14.76418399810791

Token 314: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3556511402130127
    2. '       ' → logprob: -1.2306511402130127
    3. ' return' → logprob: -5.855650901794434
    4. '
' → logprob: -6.355650901794434
    5. 'return' → logprob: -6.480650901794434
    6. '	return' → logprob: -7.605650901794434
    7. '<|end|>' → logprob: -8.480650901794434
    8. ')' → logprob: -9.105650901794434
    9. '```' → logprob: -9.605650901794434
    10. ')return' → logprob: -10.355650901794434

Token 315: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6683496236801147
    2. '   ' → logprob: -0.9183496236801147
    3. 'elif' (adapté à ' elif') → logprob: -3.0433497428894043
    4. 'return' → logprob: -3.2933497428894043
    5. ' return' → logprob: -5.918349742889404
    6. ' elif' → logprob: -7.793349742889404
    7. '
' → logprob: -9.293349266052246
    8. ' ' → logprob: -9.293349266052246
    9. 'else' → logprob: -9.918349266052246
    10. '```' → logprob: -10.543349266052246

Token 316: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.04859418421983719
    2. 'length' → logprob: -3.0485942363739014
    3. '(length' → logprob: -13.17359447479248
    4. ' ' → logprob: -13.29859447479248
    5. 'len' → logprob: -14.42359447479248
    6. '   ' → logprob: -14.67359447479248
    7. '[length' → logprob: -14.79859447479248
    8. '	length' → logprob: -14.92359447479248
    9. '1' → logprob: -15.29859447479248
    10. '    ' → logprob: -15.29859447479248

Token 317: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.04300662875175476
    2. '==' → logprob: -3.168006658554077
    3. ' ' → logprob: -12.668006896972656
    4. '=' → logprob: -13.293006896972656
    5. '   ' → logprob: -14.418006896972656
    6. ' =' → logprob: -14.418006896972656
    7. '===' → logprob: -15.293006896972656
    8. '==
' → logprob: -15.418006896972656
    9. ' ==
' → logprob: -15.543006896972656
    10. ' ===' → logprob: -15.543006896972656

Token 318: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.3133606016635895
    2. ' ' → logprob: -1.313360571861267
    3. '1' → logprob: -9.313360214233398
    4. '3' → logprob: -12.563360214233398
    5. '   ' → logprob: -12.938360214233398
    6. '  ' → logprob: -14.250860214233398
    7. '
' → logprob: -14.563360214233398
    8. '```' → logprob: -15.813360214233398
    9. '0' → logprob: -15.875860214233398
    10. '4' → logprob: -16.0008602142334

Token 319: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.006228336598724127
    2. ' ' → logprob: -5.131228446960449
    3. '1' → logprob: -8.13122844696045
    4. '   ' → logprob: -13.00622844696045
    5. '3' → logprob: -13.50622844696045
    6. '
' → logprob: -14.56872844696045
    7. '  ' → logprob: -14.94372844696045
    8. '```' → logprob: -15.56872844696045
    9. '0' → logprob: -16.006227493286133
    10. ''' → logprob: -16.131227493286133

Token 320: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5759909749031067
    2. ':
' → logprob: -0.8259909749031067
    3. '       ' → logprob: -10.575990676879883
    4. ' :
' → logprob: -11.825990676879883
    5. ':

' → logprob: -12.200990676879883
    6. ' :' → logprob: -12.325990676879883
    7. '   ' → logprob: -12.575990676879883
    8. '=' → logprob: -13.200990676879883
    9. ':
' → logprob: -13.575990676879883
    10. '):
' → logprob: -14.450990676879883

Token 321: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006569129880517721
    2. 'patterns' → logprob: -6.256568908691406
    3. '           ' → logprob: -6.631568908691406
    4. '#' → logprob: -6.881568908691406
    5. ' patterns' → logprob: -6.881568908691406
    6. '   ' → logprob: -7.631568908691406
    7. 'pattern' → logprob: -7.881568908691406
    8. ' #' → logprob: -8.881568908691406
    9. '
' → logprob: -9.131568908691406
    10. ' pattern' → logprob: -10.506568908691406

Token 322: ' #' (ID: 1069)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -0.7924492955207825
    2. 'pattern' → logprob: -0.9174492955207825
    3. '           ' → logprob: -2.4174492359161377
    4. '#' (adapté à ' #') → logprob: -3.2924492359161377
    5. ' patterns' → logprob: -4.417449474334717
    6. ' pattern' → logprob: -5.667449474334717
    7. ' #' → logprob: -6.542449474334717
    8. '       ' → logprob: -6.667449474334717
    9. '   ' → logprob: -6.792449474334717
    10. 'byte' → logprob: -8.292448997497559

Token 323: ' ' (ID: 220)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.0930338054895401
    2. ''' → logprob: -2.593033790588379
    3. 'patterns' → logprob: -5.093033790588379
    4. ' pattern' → logprob: -5.093033790588379
    5. '110' → logprob: -7.968033790588379
    6. 'if' → logprob: -8.218033790588379
    7. '#' → logprob: -8.468033790588379
    8. '10' → logprob: -8.593033790588379
    9. '   ' → logprob: -9.343033790588379
    10. '(pattern' → logprob: -9.343033790588379

Token 324: '110' (ID: 7920)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.32569411396980286
    2. ''' → logprob: -1.4506940841674805
    3. 'patterns' → logprob: -3.4506940841674805
    4. 'if' → logprob: -5.5756940841674805
    5. '110' → logprob: -5.5756940841674805
    6. '1' → logprob: -6.9506940841674805
    7. '11' → logprob: -6.9506940841674805
    8. ' pattern' → logprob: -7.4506940841674805
    9. '10' → logprob: -7.7006940841674805
    10. 'def' → logprob: -8.20069408416748

Token 325: 'yyyy' (ID: 27343)
  Prédit: 'xxxxx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xxxxx' → logprob: -0.005300042685121298
    2. 'xxxx' → logprob: -5.255300045013428
    3. '000' → logprob: -10.13029956817627
    4. 'x' → logprob: -11.75529956817627
    5. '0' → logprob: -12.25529956817627
    6. ''' → logprob: -12.63029956817627
    7. 'yyyy' → logprob: -13.13029956817627
    8. '
' → logprob: -13.38029956817627
    9. 'xx' → logprob: -13.50529956817627
    10. '110' → logprob: -14.13029956817627

Token 326: 'x' (ID: 87)
  Prédit: 'xxx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xxx' → logprob: -0.16750900447368622
    2. 'xx' → logprob: -2.667509078979492
    3. '0' → logprob: -3.792509078979492
    4. '000' → logprob: -3.917509078979492
    5. 'xxxxx' → logprob: -4.167509078979492
    6. '00' → logprob: -4.542509078979492
    7. 'xxxx' → logprob: -4.792509078979492
    8. 'x' → logprob: -4.917509078979492
    9. '1' → logprob: -8.542509078979492
    10. ''' → logprob: -9.417509078979492

Token 327: ' ' (ID: 220)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.6679250001907349
    2. '           ' → logprob: -1.7929250001907349
    3. '       ' → logprob: -2.1679248809814453
    4. ' pattern' → logprob: -2.5429248809814453
    5. '
' → logprob: -2.9179248809814453
    6. ' and' → logprob: -4.542924880981445
    7. '<|end|>' → logprob: -4.667924880981445
    8. 'x' → logprob: -4.667924880981445
    9. '         ' → logprob: -5.042924880981445
    10. '   ' → logprob: -5.167924880981445

Token 328: '10' (ID: 702)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7424174547195435
    2. 'pattern' → logprob: -0.7424174547195435
    3. ' pattern' → logprob: -3.617417335510254
    4. '
' → logprob: -4.992417335510254
    5. ' and' → logprob: -5.242417335510254
    6. ',' → logprob: -6.117417335510254
    7. 'patterns' → logprob: -6.367417335510254
    8. '(pattern' → logprob: -7.492417335510254
    9. '          ' → logprob: -7.742417335510254
    10. 'and' → logprob: -7.867417335510254

Token 329: 'xxxx' (ID: 30950)
  Prédit: 'xxxx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xxxx' → logprob: -0.019169412553310394
    2. 'yyyy' → logprob: -4.019169330596924
    3. 'zz' → logprob: -7.019169330596924
    4. 'bbbb' → logprob: -9.269169807434082
    5. 'xxxxxxxx' → logprob: -11.269169807434082
    6. 'mmmm' → logprob: -12.519169807434082
    7. 'ffffff' → logprob: -13.269169807434082
    8. 'y' → logprob: -13.269169807434082
    9. '111' → logprob: -13.519169807434082
    10. 'vvvv' → logprob: -13.894169807434082

Token 330: 'xx' (ID: 7605)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 331: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023497145622968674
    2. '<|end|>' → logprob: -4.898497104644775
    3. ''
' → logprob: -5.523497104644775
    4. ''' → logprob: -5.648497104644775
    5. '
' → logprob: -6.023497104644775
    6. '       ' → logprob: -6.523497104644775
    7. '<|end|>' → logprob: -7.148497104644775
    8. ',' → logprob: -7.523497104644775
    9. '   ' → logprob: -8.148497581481934
    10. ''''
' → logprob: -8.398497581481934

Token 332: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1774306744337082
    2. '       ' → logprob: -2.1774306297302246
    3. '
' → logprob: -3.5524306297302246
    4. '   ' → logprob: -5.427430629730225
    5. ' if' → logprob: -5.427430629730225
    6. ' and' → logprob: -6.052430629730225
    7. ',' → logprob: -6.302430629730225
    8. ' x' → logprob: -7.052430629730225
    9. '  
' → logprob: -7.302430629730225
    10. ' for' → logprob: -7.427430629730225

Token 333: ' #' (ID: 1069)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.0864734873175621
    2. '           ' → logprob: -3.7114734649658203
    3. ' pattern' → logprob: -3.7114734649658203
    4. 'if' → logprob: -4.83647346496582
    5. 'first' → logprob: -4.96147346496582
    6. 'prefix' → logprob: -5.58647346496582
    7. 'byte' → logprob: -5.71147346496582
    8. 'patterns' → logprob: -5.71147346496582
    9. ' if' → logprob: -6.33647346496582
    10. '#' (adapté à ' #') → logprob: -6.46147346496582

Token 334: ' first' (ID: 1577)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.2395782321691513
    2. 'first' → logprob: -2.9895782470703125
    3. 'if' → logprob: -3.3645782470703125
    4. ' pattern' → logprob: -3.3645782470703125
    5. 'second' → logprob: -4.1145782470703125
    6. 'patterns' → logprob: -4.4895782470703125
    7. 'prefix' → logprob: -4.6145782470703125
    8. 'for' → logprob: -4.8645782470703125
    9. ' if' → logprob: -4.9895782470703125
    10. ' first' → logprob: -5.1145782470703125

Token 335: ' byte' (ID: 9239)
  Prédit: 'byte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'byte' → logprob: -0.8592124581336975
    2. ' byte' → logprob: -1.6092123985290527
    3. 'pattern' → logprob: -1.9842123985290527
    4. '_byte' → logprob: -1.9842123985290527
    5. ' pattern' → logprob: -2.8592123985290527
    6. ' two' → logprob: -4.609212398529053
    7. 'bit' → logprob: -4.984212398529053
    8. ' if' → logprob: -5.234212398529053
    9. 'if' → logprob: -5.359212398529053
    10. ' ' → logprob: -5.984212398529053

Token 336: ' pattern' (ID: 8302)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4649800956249237
    2. 'pattern' → logprob: -1.339980125427246
    3. '=' → logprob: -2.589980125427246
    4. '_pattern' → logprob: -4.589980125427246
    5. ' pattern' → logprob: -5.214980125427246
    6. '='' → logprob: -5.589980125427246
    7. 'startswith' → logprob: -5.964980125427246
    8. '[' → logprob: -6.214980125427246
    9. 'def' → logprob: -6.464980125427246
    10. 'byte' → logprob: -6.589980125427246

Token 337: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20432034134864807
    2. '=' → logprob: -1.7043203115463257
    3. 'pattern' → logprob: -6.829320430755615
    4. '='' → logprob: -7.579320430755615
    5. ''' → logprob: -7.579320430755615
    6. '110' → logprob: -7.954320430755615
    7. '           ' → logprob: -8.454319953918457
    8. ' pattern' → logprob: -9.454319953918457
    9. ' '' → logprob: -10.329319953918457
    10. 'patterns' → logprob: -10.829319953918457

Token 338: '110' (ID: 7920)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7031771540641785
    2. '=' → logprob: -1.2031772136688232
    3. ' =' → logprob: -1.9531772136688232
    4. '110' → logprob: -2.8281772136688232
    5. '='' → logprob: -6.203176975250244
    6. ' '' → logprob: -7.328176975250244
    7. 'pattern' → logprob: -7.953176975250244
    8. ' ' → logprob: -7.953176975250244
    9. '"' → logprob: -9.328177452087402
    10. '`' → logprob: -10.078177452087402

Token 339: 'yyyy' (ID: 27343)
  Prédit: 'yyyy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yyyy' → logprob: -0.0012808336177840829
    2. 'xxxx' → logprob: -7.501280784606934
    3. '110' → logprob: -8.376280784606934
    4. 'xxxxx' → logprob: -9.251280784606934
    5. '000' → logprob: -9.376280784606934
    6. ''' → logprob: -9.501280784606934
    7. 'yy' → logprob: -9.626280784606934
    8. '111' → logprob: -9.751280784606934
    9. 'yyy' → logprob: -10.001280784606934
    10. 'y' → logprob: -11.001280784606934

Token 340: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.009943190030753613
    2. 'xxx' → logprob: -5.884943008422852
    3. ''' → logprob: -6.134943008422852
    4. '0' → logprob: -6.634943008422852
    5. 'xx' → logprob: -6.634943008422852
    6. 'xxxxx' → logprob: -7.384943008422852
    7. '1' → logprob: -7.634943008422852
    8. ''x' → logprob: -8.384943008422852
    9. ' ' → logprob: -8.884943008422852
    10. 'xxxx' → logprob: -8.884943008422852

Token 341: ' with' (ID: 483)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02407093159854412
    2. ' and' → logprob: -4.149070739746094
    3. ',' → logprob: -6.399070739746094
    4. 'pattern' → logprob: -6.774070739746094
    5. 'and' → logprob: -7.399070739746094
    6. ''' → logprob: -7.399070739746094
    7. ' pattern' → logprob: -7.399070739746094
    8. ' =' → logprob: -7.524070739746094
    9. '
' → logprob: -7.774070739746094
    10. '<|end|>' → logprob: -7.774070739746094

Token 342: ' y' (ID: 342)
  Prédit: 'byte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'byte' → logprob: -0.09847301244735718
    2. ''' → logprob: -2.473473072052002
    3. 'pattern' → logprob: -6.223473072052002
    4. ' byte' → logprob: -6.348473072052002
    5. 'b' → logprob: -6.598473072052002
    6. ''b' → logprob: -6.973473072052002
    7. '
' → logprob: -7.848473072052002
    8. ' '' → logprob: -7.973473072052002
    9. ''x' → logprob: -8.348472595214844
    10. 'x' → logprob: -8.473472595214844

Token 343: ' having' (ID: 4566)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7077460289001465
    2. '=' → logprob: -1.9577460289001465
    3. ' =' → logprob: -2.4577460289001465
    4. 'x' → logprob: -2.8327460289001465
    5. 'es' → logprob: -3.3327460289001465
    6. ' bits' → logprob: -3.3327460289001465
    7. ''s' → logprob: -3.4577460289001465
    8. '='' → logprob: -3.4577460289001465
    9. ''' → logprob: -3.7077460289001465
    10. ' being' → logprob: -4.8327460289001465

Token 344: ' at' (ID: 540)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8973637223243713
    2. ''' → logprob: -1.0223636627197266
    3. '0' → logprob: -3.0223636627197266
    4. ''x' → logprob: -3.0223636627197266
    5. 'value' → logprob: -3.2723636627197266
    6. '1' → logprob: -3.7723636627197266
    7. 'either' → logprob: -4.772363662719727
    8. 'values' → logprob: -4.897363662719727
    9. 'some' → logprob: -5.022363662719727
    10. '2' → logprob: -5.022363662719727

Token 345: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.05772470682859421
    2. ' least' → logprob: -2.932724714279175
    3. 'most' → logprob: -6.557724475860596
    4. 'at' → logprob: -8.432724952697754
    5. 'any' → logprob: -8.557724952697754
    6. '0' → logprob: -8.682724952697754
    7. '1' → logprob: -8.682724952697754
    8. '7' → logprob: -8.807724952697754
    9. '[' → logprob: -9.182724952697754
    10. 'range' → logprob: -9.557724952697754

Token 346: ' one' (ID: 1001)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6695476770401001
    2. 'one' → logprob: -1.2945476770401
    3. ' one' → logprob: -1.9195476770401
    4. '2' → logprob: -3.7945475578308105
    5. '0' → logprob: -4.5445475578308105
    6. ''' → logprob: -4.6695475578308105
    7. 'two' → logprob: -4.9195475578308105
    8. '7' → logprob: -5.5445475578308105
    9. ' ' → logprob: -5.5445475578308105
    10. ' two' → logprob: -6.5445475578308105

Token 347: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.13163505494594574
    2. '0' → logprob: -3.0066349506378174
    3. '1' → logprob: -3.0066349506378174
    4. ' '' → logprob: -4.3816351890563965
    5. 'one' → logprob: -5.5066351890563965
    6. 'bit' → logprob: -6.7566351890563965
    7. ''b' → logprob: -7.0066351890563965
    8. '`' → logprob: -7.0066351890563965
    9. ''s' → logprob: -7.2566351890563965
    10. ' ' → logprob: -7.5066351890563965

Token 348: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.13960281014442444
    2. '1' → logprob: -2.5146028995513916
    3. '0' → logprob: -3.1396028995513916
    4. ' '' → logprob: -6.0146026611328125
    5. 'one' → logprob: -6.0146026611328125
    6. ' one' → logprob: -8.389602661132812
    7. ' ' → logprob: -8.764602661132812
    8. ''s' → logprob: -8.889602661132812
    9. 'bit' → logprob: -9.139602661132812
    10. '`' → logprob: -9.264602661132812

Token 349: ' bit' (ID: 3546)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.9379541873931885
    2. '
' → logprob: -1.4379541873931885
    3. '<|end|>' → logprob: -2.3129541873931885
    4. '           ' → logprob: -2.9379541873931885
    5. ':
' → logprob: -3.0629541873931885
    6. '       ' → logprob: -3.0629541873931885
    7. ' if' → logprob: -3.3129541873931885
    8. ':' → logprob: -3.9379541873931885
    9. '   ' → logprob: -4.562953948974609
    10. ' ' → logprob: -5.062953948974609

Token 350: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5267950296401978
    2. '<|end|>' → logprob: -1.7767950296401978
    3. '
' → logprob: -2.776794910430908
    4. '       ' → logprob: -3.026794910430908
    5. ' and' → logprob: -3.276794910430908
    6. ':
' → logprob: -3.776794910430908
    7. ':' → logprob: -4.026794910430908
    8. ',' → logprob: -4.151794910430908
    9. ' if' → logprob: -4.526794910430908
    10. '               ' → logprob: -5.276794910430908

Token 351: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00037836082628928125
    2. 'pattern' → logprob: -8.875378608703613
    3. '       ' → logprob: -9.625378608703613
    4. ' pattern' → logprob: -9.750378608703613
    5. ',' → logprob: -10.125378608703613
    6. '<|end|>' → logprob: -11.375378608703613
    7. ' for' → logprob: -11.500378608703613
    8. '   ' → logprob: -12.125378608703613
    9. ' and' → logprob: -12.250378608703613
    10. '            
' → logprob: -12.375378608703613

Token 352: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7276041507720947
    2. 'pattern' → logprob: -1.2276041507720947
    3. ' pattern' → logprob: -1.8526041507720947
    4. ' if' → logprob: -3.6026041507720947
    5. ' first' → logprob: -4.727603912353516
    6. ' byte' → logprob: -4.977603912353516
    7. 'if' → logprob: -5.102603912353516
    8. 'byte' → logprob: -5.727603912353516
    9. ' x' → logprob: -6.227603912353516
    10. 'first' → logprob: -6.727603912353516

Token 353: ' Since' (ID: 12265)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.4286843538284302
    2. ' pattern' → logprob: -1.6786843538284302
    3. ' for' → logprob: -3.1786842346191406
    4. ' first' → logprob: -3.9286842346191406
    5. '           ' → logprob: -3.9286842346191406
    6. 'first' → logprob: -4.178684234619141
    7. 'for' → logprob: -4.178684234619141
    8. ' #' → logprob: -4.928684234619141
    9. '#' → logprob: -5.053684234619141
    10. ' patterns' → logprob: -5.303684234619141

Token 354: ' only' (ID: 1606)
  Prédit: 'byte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'byte' → logprob: -1.0104581117630005
    2. 'the' → logprob: -1.8854581117630005
    3. 'y' → logprob: -2.635457992553711
    4. ' the' → logprob: -2.635457992553711
    5. ' y' → logprob: -3.010457992553711
    6. 'pattern' → logprob: -3.260457992553711
    7. ' byte' → logprob: -3.385457992553711
    8. 'second' → logprob: -3.510457992553711
    9. ''y' → logprob: -3.510457992553711
    10. ''' → logprob: -3.635457992553711

Token 355: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -1.3912745714187622
    2. 'the' → logprob: -1.6412745714187622
    3. 'one' → logprob: -2.5162744522094727
    4. ' the' → logprob: -2.7662744522094727
    5. ' first' → logprob: -3.0162744522094727
    6. 'y' → logprob: -3.1412744522094727
    7. ' y' → logprob: -3.5162744522094727
    8. 'byte' → logprob: -3.5162744522094727
    9. 'length' → logprob: -3.6412744522094727
    10. 'pattern' → logprob: -3.7662744522094727

Token 356: ' byte' (ID: 9239)
  Prédit: 'byte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'byte' → logprob: -0.744336724281311
    2. ' byte' → logprob: -0.869336724281311
    3. ' bit' → logprob: -2.8693366050720215
    4. 'bit' → logprob: -3.6193366050720215
    5. ' ' → logprob: -5.1193366050720215
    6. ' bits' → logprob: -5.4943366050720215
    7. ' two' → logprob: -5.6193366050720215
    8. ' part' → logprob: -6.7443366050720215
    9. 'bits' → logprob: -6.8693366050720215
    10. '_byte' → logprob: -7.1193366050720215

Token 357: ' here' (ID: 2105)
  Prédit: ' pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' pattern' → logprob: -1.0831700563430786
    2. 'pattern' → logprob: -1.3331700563430786
    3. ',' → logprob: -2.583169937133789
    4. ' is' → logprob: -3.083169937133789
    5. ' bit' → logprob: -3.208169937133789
    6. ' and' → logprob: -3.583169937133789
    7. 's' → logprob: -3.708169937133789
    8. ' ' → logprob: -3.833169937133789
    9. ' byte' → logprob: -3.958169937133789
    10. ':' → logprob: -4.208169937133789

Token 358: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9178811311721802
    2. ',' → logprob: -1.5428811311721802
    3. '           ' → logprob: -1.7928811311721802
    4. ':' → logprob: -2.4178810119628906
    5. ' and' → logprob: -3.5428810119628906
    6. '   ' → logprob: -3.6678810119628906
    7. ':
' → logprob: -4.042881011962891
    8. ' for' → logprob: -4.542881011962891
    9. ' if' → logprob: -4.667881011962891
    10. ' ' → logprob: -5.167881011962891

Token 359: ' just' (ID: 1327)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.7960938215255737
    2. 'continue' → logprob: -1.7960938215255737
    3. ' if' → logprob: -2.4210939407348633
    4. '#' → logprob: -2.4210939407348633
    5. 'if' → logprob: -2.9210939407348633
    6. ' pass' → logprob: -3.4210939407348633
    7. ' #' → logprob: -3.6710939407348633
    8. 'pass' → logprob: -3.9210939407348633
    9. ' for' → logprob: -4.171093940734863
    10. 'pattern' → logprob: -4.421093940734863

Token 360: ' check' (ID: 2371)
  Prédit: 'check'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'check' → logprob: -0.20956380665302277
    2. 'continue' → logprob: -2.209563732147217
    3. 'pattern' → logprob: -3.584563732147217
    4. ' check' → logprob: -3.959563732147217
    5. 'match' → logprob: -4.959563732147217
    6. 'if' → logprob: -4.959563732147217
    7. 'count' → logprob: -5.209563732147217
    8. 'pass' → logprob: -5.584563732147217
    9. 'consider' → logprob: -5.584563732147217
    10. ' continue' → logprob: -6.084563732147217

Token 361: ' first' (ID: 1577)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0717663764953613
    2. ' if' → logprob: -1.3217663764953613
    3. 'match' → logprob: -1.9467663764953613
    4. 'pattern' → logprob: -2.3217663764953613
    5. ' match' → logprob: -2.9467663764953613
    6. 'byte' → logprob: -3.1967663764953613
    7. ' pattern' → logprob: -3.8217663764953613
    8. ' byte' → logprob: -4.321766376495361
    9. ''' → logprob: -5.321766376495361
    10. ''b' → logprob: -5.946766376495361

Token 362: ' byte' (ID: 9239)
  Prédit: 'byte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'byte' → logprob: -0.2944732904434204
    2. ' byte' → logprob: -1.6694732904434204
    3. '7' → logprob: -3.544473171234131
    4. ' ' → logprob: -3.919473171234131
    5. '2' → logprob: -4.669473171234131
    6. 'len' → logprob: -6.044473171234131
    7. 'bit' → logprob: -6.544473171234131
    8. ' bit' → logprob: -6.919473171234131
    9. '1' → logprob: -6.919473171234131
    10. '3' → logprob: -7.544473171234131

Token 363: ' pattern' (ID: 8302)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.9637240171432495
    2. ' and' → logprob: -1.0887240171432495
    3. ' if' → logprob: -2.588724136352539
    4. '       ' → logprob: -3.088724136352539
    5. '   ' → logprob: -3.838724136352539
    6. 'pattern' → logprob: -3.838724136352539
    7. ' pattern' → logprob: -3.838724136352539
    8. ':' → logprob: -4.088724136352539
    9. ',' → logprob: -4.213724136352539
    10. ' ' → logprob: -4.713724136352539

Token 364: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2708744406700134
    2. '       ' → logprob: -1.7708745002746582
    3. ',' → logprob: -4.020874500274658
    4. ' pattern' → logprob: -4.395874500274658
    5. 'pattern' → logprob: -4.895874500274658
    6. ' =' → logprob: -5.020874500274658
    7. '   ' → logprob: -5.270874500274658
    8. ' and' → logprob: -5.395874500274658
    9. ':' → logprob: -5.645874500274658
    10. ' for' → logprob: -6.020874500274658

Token 365: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.21287789940834045
    2. '           ' → logprob: -1.712877869606018
    3. ' pattern' → logprob: -5.4628777503967285
    4. 'pattern' → logprob: -5.8378777503967285
    5. '   ' → logprob: -6.3378777503967285
    6. ' if' → logprob: -6.5878777503967285
    7. ',' → logprob: -8.087878227233887
    8. ' ' → logprob: -8.962878227233887
    9. ' for' → logprob: -8.962878227233887
    10. 'if' → logprob: -9.337878227233887

Token 366: ' #' (ID: 1069)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.006231537088751793
    2. ' pattern' → logprob: -5.631231307983398
    3. '           ' → logprob: -6.256231307983398
    4. 'if' → logprob: -7.881231307983398
    5. 'patterns' → logprob: -9.131231307983398
    6. 'first' → logprob: -9.631231307983398
    7. 'byte' → logprob: -9.756231307983398
    8. '#' (adapté à ' #') → logprob: -11.006231307983398
    9. ' if' → logprob: -11.131231307983398
    10. 'pat' → logprob: -11.256231307983398

Token 367: ' We'll' (ID: 46830)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.029682103544473648
    2. ' pattern' → logprob: -3.904682159423828
    3. '           ' → logprob: -4.904682159423828
    4. 'if' → logprob: -7.154682159423828
    5. 'patterns' → logprob: -8.029682159423828
    6. 'first' → logprob: -9.279682159423828
    7. '#' → logprob: -9.529682159423828
    8. ' if' → logprob: -9.529682159423828
    9. 'byte' → logprob: -9.654682159423828
    10. 'prefix' → logprob: -9.904682159423828

Token 368: ' check' (ID: 2371)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.32035598158836365
    2. 'check' → logprob: -1.820356011390686
    3. ' check' → logprob: -3.3203558921813965
    4. ' continue' → logprob: -3.4453558921813965
    5. 'need' → logprob: -4.5703558921813965
    6. 'add' → logprob: -4.5703558921813965
    7. ' add' → logprob: -5.5703558921813965
    8. 'expand' → logprob: -6.1953558921813965
    9. 'extend' → logprob: -6.3203558921813965
    10. 'ass' → logprob: -6.4453558921813965

Token 369: ' y' (ID: 342)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0447866916656494
    2. 'pattern' → logprob: -1.2947866916656494
    3. 'if' → logprob: -2.0447866916656494
    4. ' pattern' → logprob: -2.4197866916656494
    5. ' for' → logprob: -3.5447866916656494
    6. ' the' → logprob: -3.7947866916656494
    7. 'for' → logprob: -4.04478645324707
    8. ' first' → logprob: -4.16978645324707
    9. 'first' → logprob: -4.54478645324707
    10. 'the' → logprob: -4.66978645324707

Token 370: ' bits' (ID: 18189)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5885030031204224
    2. '_bits' → logprob: -1.3385030031204224
    3. 'bits' → logprob: -2.963502883911133
    4. '=' → logprob: -3.588502883911133
    5. '_' → logprob: -4.213502883911133
    6. 'yyyy' → logprob: -4.463502883911133
    7. ' bits' → logprob: -4.463502883911133
    8. 's' → logprob: -4.463502883911133
    9. '_pattern' → logprob: -4.838502883911133
    10. 'pattern' → logprob: -5.088502883911133

Token 371: ' later' (ID: 4849)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07715791463851929
    2. ' for' → logprob: -3.952157974243164
    3. '=' → logprob: -4.202157974243164
    4. '       ' → logprob: -4.827157974243164
    5. ' in' → logprob: -4.952157974243164
    6. '           ' → logprob: -5.202157974243164
    7. ',' → logprob: -5.577157974243164
    8. ':' → logprob: -5.827157974243164
    9. '...' → logprob: -6.077157974243164
    10. ' and' → logprob: -6.827157974243164

Token 372: ' in' (ID: 306)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24391676485538483
    2. '<|end|>' → logprob: -1.7439167499542236
    3. ',' → logprob: -4.868916988372803
    4. ')' → logprob: -5.243916988372803
    5. '   ' → logprob: -5.368916988372803
    6. '           ' → logprob: -5.618916988372803
    7. '<|end|>' → logprob: -5.618916988372803
    8. ' ' → logprob: -5.868916988372803
    9. ':' → logprob: -6.118916988372803
    10. '...' → logprob: -6.118916988372803

Token 373: ' extra' (ID: 5018)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7427974939346313
    2. 'count' → logprob: -1.9927974939346313
    3. 'code' → logprob: -2.492797374725342
    4. 'this' → logprob: -3.117797374725342
    5. 'next' → logprob: -3.117797374725342
    6. ' the' → logprob: -3.492797374725342
    7. ' code' → logprob: -3.742797374725342
    8. 'comment' → logprob: -3.867797374725342
    9. 'comments' → logprob: -3.867797374725342
    10. 'other' → logprob: -4.242797374725342

Token 374: ' check' (ID: 2371)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 375: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.15800932049751282
    2. '           ' → logprob: -2.0330092906951904
    3. '
' → logprob: -5.6580095291137695
    4. 'pattern' → logprob: -5.9080095291137695
    5. ' pattern' → logprob: -6.2830095291137695
    6. '   ' → logprob: -6.2830095291137695
    7. ',' → logprob: -6.6580095291137695
    8. ' if' → logprob: -7.1580095291137695
    9. '<|end|>' → logprob: -7.6580095291137695
    10. '        
' → logprob: -7.6580095291137695

Token 376: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26597854495048523
    2. '           ' → logprob: -1.5159785747528076
    3. 'pattern' → logprob: -4.8909783363342285
    4. ' pattern' → logprob: -5.2659783363342285
    5. ' if' → logprob: -8.015978813171387
    6. '   ' → logprob: -8.140978813171387
    7. ',' → logprob: -8.390978813171387
    8. '        
' → logprob: -9.640978813171387
    9. 'if' → logprob: -10.140978813171387
    10. ' for' → logprob: -10.265978813171387

Token 377: ' #' (ID: 1069)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.4301356375217438
    2. ' pattern' → logprob: -1.3051356077194214
    3. '           ' → logprob: -2.555135726928711
    4. ' if' → logprob: -8.805135726928711
    5. 'if' → logprob: -8.805135726928711
    6. 'byte' → logprob: -9.055135726928711
    7. '       ' → logprob: -9.680135726928711
    8. ' byte' → logprob: -9.805135726928711
    9. 'pat' → logprob: -9.805135726928711
    10. 'patterns' → logprob: -9.930135726928711

Token 378: ' ' (ID: 220)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.008720817044377327
    2. ' pattern' → logprob: -5.383720874786377
    3. '           ' → logprob: -6.008720874786377
    4. 'first' → logprob: -7.258720874786377
    5. 'patterns' → logprob: -8.008720397949219
    6. 'byte' → logprob: -8.883720397949219
    7. 'if' → logprob: -9.133720397949219
    8. 'prefix' → logprob: -9.383720397949219
    9. '#' → logprob: -9.758720397949219
    10. 'pat' → logprob: -10.133720397949219

Token 379: '110' (ID: 7920)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.005460236221551895
    2. ' pattern' → logprob: -6.005460262298584
    3. 'first' → logprob: -6.630460262298584
    4. '           ' → logprob: -7.130460262298584
    5. 'patterns' → logprob: -8.130459785461426
    6. 'for' → logprob: -9.130459785461426
    7. 'prefix' → logprob: -9.255459785461426
    8. 'if' → logprob: -9.380459785461426
    9. 'byte' → logprob: -9.505459785461426
    10. '#' → logprob: -9.755459785461426

Token 380: 'yyyy' (ID: 27343)
  Prédit: 'yyyy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yyyy' → logprob: -0.092661052942276
    2. 'xxxx' → logprob: -2.592661142349243
    3. '000' → logprob: -5.342660903930664
    4. 'xxxxx' → logprob: -5.342660903930664
    5. '111' → logprob: -6.717660903930664
    6. 'pattern' → logprob: -7.342660903930664
    7. '110' → logprob: -7.592660903930664
    8. ' ' → logprob: -8.092660903930664
    9. ' pattern' → logprob: -8.467660903930664
    10. ' yyyy' → logprob: -8.842660903930664

Token 381: 'x' (ID: 87)
  Prédit: 'xxx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xxx' → logprob: -0.038990799337625504
    2. 'x' → logprob: -3.6639907360076904
    3. '000' → logprob: -5.6639909744262695
    4. '0' → logprob: -5.6639909744262695
    5. '1' → logprob: -5.7889909744262695
    6. 'xx' → logprob: -7.7889909744262695
    7. ''' → logprob: -7.9139909744262695
    8. '111' → logprob: -8.28899097442627
    9. '')' → logprob: -8.41399097442627
    10. '```' → logprob: -8.66399097442627

Token 382: ' means' (ID: 4748)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.8226531147956848
    2. ''' → logprob: -1.32265305519104
    3. '110' → logprob: -1.57265305519104
    4. ' =' → logprob: -3.32265305519104
    5. '=' → logprob: -3.94765305519104
    6. ' pattern' → logprob: -4.447653293609619
    7. '           ' → logprob: -4.572653293609619
    8. 'def' → logprob: -6.697653293609619
    9. '111' → logprob: -6.947653293609619
    10. ' ' → logprob: -6.947653293609619

Token 383: ' bits' (ID: 18189)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08622056990861893
    2. '11' → logprob: -2.9612205028533936
    3. '110' → logprob: -3.8362205028533936
    4. '1' → logprob: -5.211220741271973
    5. ' ' → logprob: -6.586220741271973
    6. '"' → logprob: -6.586220741271973
    7. '   ' → logprob: -7.711220741271973
    8. ' '' → logprob: -9.211220741271973
    9. '`' → logprob: -9.711220741271973
    10. '       ' → logprob: -9.961220741271973

Token 384: ':' (ID: 25)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.5044151544570923
    2. '[' → logprob: -1.6294151544570923
    3. ''' → logprob: -2.7544150352478027
    4. '110' → logprob: -3.5044150352478027
    5. '=' → logprob: -3.6294150352478027
    6. ' =' → logprob: -3.8794150352478027
    7. '1' → logprob: -4.129415035247803
    8. ' ' → logprob: -4.629415035247803
    9. '['' → logprob: -4.754415035247803
    10. '='' → logprob: -5.004415035247803

Token 385: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7386787533760071
    2. '110' → logprob: -0.7386787533760071
    3. '1' → logprob: -3.4886786937713623
    4. '"' → logprob: -4.738678932189941
    5. '11' → logprob: -5.613678932189941
    6. ' ' → logprob: -6.988678932189941
    7. '['' → logprob: -7.988678932189941
    8. '`' → logprob: -9.363678932189941
    9. ' '' → logprob: -9.613678932189941
    10. '   ' → logprob: -9.863678932189941

Token 386: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.31034979224205017
    2. '110' → logprob: -1.5603498220443726
    3. '1' → logprob: -3.560349702835083
    4. '11' → logprob: -3.810349702835083
    5. '"' → logprob: -5.185349941253662
    6. '['' → logprob: -8.310349464416504
    7. ' ' → logprob: -8.560349464416504
    8. '`' → logprob: -10.060349464416504
    9. '[' → logprob: -10.560349464416504
    10. ' '' → logprob: -11.185349464416504

Token 387: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.08249631524085999
    2. '10' → logprob: -2.707496404647827
    3. ' ' → logprob: -4.457496166229248
    4. ''' → logprob: -7.582496166229248
    5. ',' → logprob: -8.957496643066406
    6. '11' → logprob: -9.457496643066406
    7. '   ' → logprob: -9.707496643066406
    8. '
' → logprob: -10.207496643066406
    9. '

' → logprob: -11.082496643066406
    10. '"' → logprob: -11.894996643066406

Token 388: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002694416616577655
    2. ' ' → logprob: -8.250269889831543
    3. ',' → logprob: -12.500269889831543
    4. '   ' → logprob: -13.375269889831543
    5. '10' → logprob: -13.875269889831543
    6. '

' → logprob: -14.750269889831543
    7. ''' → logprob: -15.375269889831543
    8. '
' → logprob: -15.500269889831543
    9. 'true' → logprob: -15.500269889831543
    10. '  ' → logprob: -15.875269889831543

Token 389: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.580929347255733e-05
    2. ' ' → logprob: -11.250016212463379
    3. '1' → logprob: -13.000016212463379
    4. '011' → logprob: -15.500016212463379
    5. ''' → logprob: -16.625015258789062
    6. '```' → logprob: -17.000015258789062
    7. '01' → logprob: -17.187515258789062
    8. '   ' → logprob: -17.750015258789062
    9. '00' → logprob: -17.875015258789062
    10. '``' → logprob: -18.000015258789062

Token 390: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.750000953674316
    3. '1' → logprob: -15.250000953674316
    4. '```' → logprob: -16.625
    5. '
' → logprob: -18.875
    6. '``' → logprob: -19.0
    7. '

' → logprob: -19.5
    8. '  ' → logprob: -19.75
    9. '011' → logprob: -19.875
    10. '2' → logprob: -20.125

Token 391: ' y' (ID: 342)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5665134787559509
    2. ' x' → logprob: -1.6915135383605957
    3. '1' → logprob: -2.3165135383605957
    4. 'x' → logprob: -2.8165135383605957
    5. '0' → logprob: -3.3165135383605957
    6. '110' → logprob: -4.316513538360596
    7. ',' → logprob: -4.441513538360596
    8. ' '' → logprob: -5.066513538360596
    9. 'xxxx' → logprob: -5.441513538360596
    10. '111' → logprob: -5.566513538360596

Token 392: ' y' (ID: 342)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8987153172492981
    2. ' y' → logprob: -1.1487152576446533
    3. 'y' → logprob: -2.0237152576446533
    4. '1' → logprob: -2.6487152576446533
    5. '0' → logprob: -4.148715496063232
    6. 'yyyy' → logprob: -4.148715496063232
    7. '   ' → logprob: -5.148715496063232
    8. '    ' → logprob: -5.273715496063232
    9. '  ' → logprob: -5.523715496063232
    10. 'yyy' → logprob: -5.898715496063232

Token 393: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.44293805956840515
    2. ' y' → logprob: -1.4429380893707275
    3. 'x' → logprob: -3.3179380893707275
    4. ' ' → logprob: -3.6929380893707275
    5. ' x' → logprob: -4.067937850952148
    6. 'yyyy' → logprob: -4.692937850952148
    7. '1' → logprob: -5.067937850952148
    8. 'yyy' → logprob: -5.067937850952148
    9. '0' → logprob: -5.192937850952148
    10. 'yy' → logprob: -5.442937850952148

Token 394: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6303701400756836
    2. ' x' → logprob: -1.8803701400756836
    3. 'y' → logprob: -2.1303701400756836
    4. ' ' → logprob: -2.3803701400756836
    5. ' y' → logprob: -2.8803701400756836
    6. '1' → logprob: -4.630370140075684
    7. '0' → logprob: -4.880370140075684
    8. 'xxx' → logprob: -5.255370140075684
    9. '   ' → logprob: -5.380370140075684
    10. '  ' → logprob: -6.005370140075684

Token 395: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09886841475963593
    2. ' x' → logprob: -2.8488683700561523
    3. ' ' → logprob: -4.598868370056152
    4. '0' → logprob: -5.223868370056152
    5. 'xxx' → logprob: -5.223868370056152
    6. 'xx' → logprob: -5.598868370056152
    7. '1' → logprob: -5.598868370056152
    8. 'xxxx' → logprob: -5.723868370056152
    9. 'xxxxx' → logprob: -6.223868370056152
    10. 'y' → logprob: -7.723868370056152

Token 396: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2846145033836365
    2. '           ' → logprob: -1.7846145629882812
    3. '
' → logprob: -3.6596145629882812
    4. '   ' → logprob: -4.159614562988281
    5. '<|end|>' → logprob: -4.159614562988281
    6. ',' → logprob: -5.659614562988281
    7. '<|end|>' → logprob: -6.034614562988281
    8. ' and' → logprob: -6.284614562988281
    9. ' ' → logprob: -6.409614562988281
    10. ' if' → logprob: -6.409614562988281

Token 397: 'bit' (ID: 6516)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09692870825529099
    2. '')' → logprob: -2.971928596496582
    3. ''' → logprob: -4.721928596496582
    4. ')
' → logprob: -5.221928596496582
    5. ' )' → logprob: -5.346928596496582
    6. 'def' → logprob: -5.846928596496582
    7. '0' → logprob: -6.596928596496582
    8. 'x' → logprob: -6.596928596496582
    9. '1' → logprob: -6.721928596496582
    10. '           ' → logprob: -6.846928596496582

Token 398: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.8433930277824402
    2. ' ' → logprob: -1.343393087387085
    3. 's' → logprob: -2.093393087387085
    4. '7' → logprob: -2.593393087387085
    5. 'index' → logprob: -3.718393087387085
    6. '4' → logprob: -4.468392848968506
    7. ' positions' → logprob: -4.468392848968506
    8. '1' → logprob: -4.718392848968506
    9. 'positions' → logprob: -4.843392848968506
    10. '6' → logprob: -4.843392848968506

Token 399: ' is' (ID: 382)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.14213266968727112
    2. ' )' → logprob: -2.5171327590942383
    3. '0' → logprob: -4.267132759094238
    4. '7' → logprob: -4.517132759094238
    5. '[' → logprob: -4.517132759094238
    6. ' ' → logprob: -4.767132759094238
    7. '<|end|>' → logprob: -6.767132759094238
    8. '1' → logprob: -7.017132759094238
    9. 'index' → logprob: -7.142132759094238
    10. ',' → logprob: -7.517132759094238

Token 400: ' left' (ID: 3561)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.40811458230018616
    2. '0' → logprob: -1.6581145524978638
    3. 'left' → logprob: -2.7831146717071533
    4. '1' → logprob: -3.4081146717071533
    5. ' left' → logprob: -4.533114433288574
    6. ' ' → logprob: -4.533114433288574
    7. 'most' → logprob: -5.033114433288574
    8. 'the' → logprob: -5.033114433288574
    9. 'right' → logprob: -5.783114433288574
    10. ' most' → logprob: -6.033114433288574

Token 401: 'most' (ID: 5309)
  Prédit: 'most'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'most' → logprob: -0.02279626578092575
    2. '0' → logprob: -4.397796154022217
    3. ')' → logprob: -5.272796154022217
    4. '[' → logprob: -6.022796154022217
    5. ' most' → logprob: -6.772796154022217
    6. ' ' → logprob: -7.647796154022217
    7. '7' → logprob: -8.272796630859375
    8. 'to' → logprob: -8.272796630859375
    9. 'Most' → logprob: -8.772796630859375
    10. ' to' → logprob: -8.772796630859375

Token 402: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.016850633546710014
    2. ' )' → logprob: -4.266850471496582
    3. '0' → logprob: -7.641850471496582
    4. ')
' → logprob: -8.266850471496582
    5. ',' → logprob: -8.391850471496582
    6. ' ' → logprob: -8.391850471496582
    7. '7' → logprob: -8.516850471496582
    8. 'def' → logprob: -8.641850471496582
    9. '[' → logprob: -8.891850471496582
    10. '<|end|>' → logprob: -9.141850471496582

Token 403: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4632110297679901
    2. ' pattern' → logprob: -1.7132110595703125
    3. 'pattern' → logprob: -1.8382110595703125
    4. '       ' → logprob: -4.5882110595703125
    5. ''' → logprob: -5.3382110595703125
    6. '   ' → logprob: -5.5882110595703125
    7. ' '' → logprob: -5.7132110595703125
    8. ' ' → logprob: -6.0882110595703125
    9. ' =' → logprob: -6.3382110595703125
    10. ',' → logprob: -7.4632110595703125

Token 404: ' #' (ID: 1069)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.5090433955192566
    2. ' pattern' → logprob: -1.6340434551239014
    3. '           ' → logprob: -2.0090434551239014
    4. ' if' → logprob: -4.134043216705322
    5. 'if' → logprob: -4.509043216705322
    6. '       ' → logprob: -4.884043216705322
    7. ''' → logprob: -5.009043216705322
    8. ' '' → logprob: -5.384043216705322
    9. ' ' → logprob: -5.634043216705322
    10. '110' → logprob: -5.759043216705322

Token 405: ' We'll' (ID: 46830)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.6935566663742065
    2. ' pattern' → logprob: -0.9435566663742065
    3. '           ' → logprob: -2.818556785583496
    4. ' for' → logprob: -4.318556785583496
    5. ' bit' → logprob: -4.568556785583496
    6. ' bits' → logprob: -5.068556785583496
    7. ' if' → logprob: -5.818556785583496
    8. 'bit' → logprob: -6.193556785583496
    9. 'for' → logprob: -6.318556785583496
    10. ' x' → logprob: -6.443556785583496

Token 406: ' check' (ID: 2371)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.36897724866867065
    2. 'check' → logprob: -2.3689773082733154
    3. 'need' → logprob: -2.9939773082733154
    4. 'generate' → logprob: -3.3689773082733154
    5. ' continue' → logprob: -3.4939773082733154
    6. ' check' → logprob: -3.8689773082733154
    7. 'consider' → logprob: -4.118977069854736
    8. 'expand' → logprob: -4.868977069854736
    9. 'complete' → logprob: -4.993977069854736
    10. 'add' → logprob: -4.993977069854736

Token 407: ' that' (ID: 484)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.8576579689979553
    2. ' for' → logprob: -2.1076579093933105
    3. ' pattern' → logprob: -2.3576579093933105
    4. ' bits' → logprob: -2.4826579093933105
    5. ' all' → logprob: -2.8576579093933105
    6. ' first' → logprob: -2.9826579093933105
    7. ' y' → logprob: -3.2326579093933105
    8. 'pattern' → logprob: -3.7326579093933105
    9. ' that' → logprob: -3.9826579093933105
    10. 'if' → logprob: -4.2326579093933105

Token 408: ' y' (ID: 342)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6558632254600525
    2. ' y' → logprob: -1.7808632850646973
    3. 'y' → logprob: -2.0308632850646973
    4. 'for' → logprob: -2.4058632850646973
    5. ' bits' → logprob: -3.9058632850646973
    6. ' ones' → logprob: -4.030863285064697
    7. 'pattern' → logprob: -4.905863285064697
    8. ' if' → logprob: -4.905863285064697
    9. ' pattern' → logprob: -5.155863285064697
    10. ' all' → logprob: -5.780863285064697

Token 409: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.7076205015182495
    2. ' bits' → logprob: -0.9576205015182495
    3. '_bits' → logprob: -2.582620620727539
    4. 's' → logprob: -4.207620620727539
    5. ' =' → logprob: -4.207620620727539
    6. '[' → logprob: -5.207620620727539
    7. ' ' → logprob: -6.332620620727539
    8. 'pattern' → logprob: -6.832620620727539
    9. '=' → logprob: -6.957620620727539
    10. ' !=' → logprob: -7.207620620727539

Token 410: ' (' (ID: 350)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4822443723678589
    2. '.count' → logprob: -1.4822443723678589
    3. 'count' → logprob: -2.1072444915771484
    4. 'have' → logprob: -2.4822444915771484
    5. 'are' → logprob: -3.1072444915771484
    6. '=' → logprob: -3.2322444915771484
    7. 'in' → logprob: -3.3572444915771484
    8. 'any' → logprob: -3.4822444915771484
    9. '1' → logprob: -3.4822444915771484
    10. ' in' → logprob: -3.6072444915771484

Token 411: 'bit' (ID: 6516)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5737969279289246
    2. 'byte' → logprob: -1.4487969875335693
    3. '[' → logprob: -3.0737969875335693
    4. 'pattern' → logprob: -3.1987969875335693
    5. '2' → logprob: -4.07379674911499
    6. '4' → logprob: -4.32379674911499
    7. 'b' → logprob: -4.69879674911499
    8. ')' → logprob: -4.69879674911499
    9. ' ' → logprob: -4.82379674911499
    10. '3' → logprob: -4.94879674911499

Token 412: '3' (ID: 18)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.42202451825141907
    2. '1' → logprob: -1.2970244884490967
    3. '3' → logprob: -3.0470244884490967
    4. '4' → logprob: -3.9220244884490967
    5. ' ' → logprob: -6.047024726867676
    6. '5' → logprob: -8.047024726867676
    7. '[' → logprob: -8.297024726867676
    8. '   ' → logprob: -8.922024726867676
    9. 's' → logprob: -9.172024726867676
    10. '0' → logprob: -9.172024726867676

Token 413: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29819267988204956
    2. ' and' → logprob: -1.9231927394866943
    3. 'and' → logprob: -3.5481927394866943
    4. ' to' → logprob: -3.6731927394866943
    5. ')' → logprob: -3.9231927394866943
    6. '1' → logprob: -4.673192501068115
    7. 'to' → logprob: -5.173192501068115
    8. '2' → logprob: -5.548192501068115
    9. ' in' → logprob: -5.673192501068115
    10. ' &' → logprob: -5.923192501068115

Token 414: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.013918427750468254
    2. 'bit' → logprob: -4.388918399810791
    3. ' ' → logprob: -7.013918399810791
    4. ' bit' → logprob: -8.26391887664795
    5. '1' → logprob: -9.26391887664795
    6. '2' → logprob: -9.63891887664795
    7. '5' → logprob: -10.38891887664795
    8. '6' → logprob: -10.38891887664795
    9. 'bits' → logprob: -11.51391887664795
    10. '   ' → logprob: -12.26391887664795

Token 415: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017685896018519998
    2. '5' → logprob: -7.251768589019775
    3. ')' → logprob: -8.001769065856934
    4. ' ,' → logprob: -8.376769065856934
    5. '4' → logprob: -8.876769065856934
    6. ',
' → logprob: -9.126769065856934
    7. '3' → logprob: -10.001769065856934
    8. '),' → logprob: -10.126769065856934
    9. ' and' → logprob: -10.626769065856934
    10. '6' → logprob: -10.626769065856934

Token 416: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.00034809779026545584
    2. ' ' → logprob: -8.125348091125488
    3. 'and' → logprob: -10.750348091125488
    4. '   ' → logprob: -11.625348091125488
    5. ' and' → logprob: -12.000348091125488
    6. '2' → logprob: -12.500348091125488
    7. '  ' → logprob: -12.500348091125488
    8. '1' → logprob: -13.750348091125488
    9. '6' → logprob: -13.875348091125488
    10. '    ' → logprob: -13.937848091125488

Token 417: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0016707765171304345
    2. ')' → logprob: -6.751670837402344
    3. ' ,' → logprob: -7.876670837402344
    4. ' and' → logprob: -9.626670837402344
    5. 'and' → logprob: -11.001670837402344
    6. ' )' → logprob: -12.001670837402344
    7. ' ' → logprob: -12.001670837402344
    8. ',
' → logprob: -12.376670837402344
    9. '   ' → logprob: -13.001670837402344
    10. ',y' → logprob: -13.126670837402344

Token 418: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.0008004573755897582
    2. '5' → logprob: -7.875800609588623
    3. ' ' → logprob: -8.250800132751465
    4. 'and' → logprob: -10.000800132751465
    5. '2' → logprob: -10.375800132751465
    6. ' and' → logprob: -10.500800132751465
    7. '7' → logprob: -10.625800132751465
    8. '1' → logprob: -11.625800132751465
    9. ')' → logprob: -11.750800132751465
    10. '   ' → logprob: -12.750800132751465

Token 419: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002943232422694564
    2. ' )' → logprob: -6.62794303894043
    3. ' are' → logprob: -6.87794303894043
    4. ',' → logprob: -8.00294303894043
    5. ' have' → logprob: -10.12794303894043
    6. ' continue' → logprob: -10.37794303894043
    7. '')' → logprob: -10.50294303894043
    8. 'are' → logprob: -11.00294303894043
    9. 'continue' → logprob: -11.00294303894043
    10. '   ' → logprob: -11.12794303894043

Token 420: ' are' (ID: 553)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -1.3558611869812012
    2. ')' → logprob: -1.6058611869812012
    3. ' are' → logprob: -1.8558611869812012
    4. ' &' → logprob: -2.855861186981201
    5. ' !=' → logprob: -3.230861186981201
    6. ' in' → logprob: -3.355861186981201
    7. ' |=' → logprob: -3.730861186981201
    8. '=' → logprob: -3.855861186981201
    9. '           ' → logprob: -3.855861186981201
    10. '               ' → logprob: -3.855861186981201

Token 421: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.39057356119155884
    2. 'at' → logprob: -1.640573501586914
    3. ' not' → logprob: -2.515573501586914
    4. ' at' → logprob: -3.140573501586914
    5. 'any' → logprob: -5.515573501586914
    6. '1' → logprob: -7.265573501586914
    7. ''' → logprob: -8.765573501586914
    8. ' any' → logprob: -9.890573501586914
    9. ' ' → logprob: -10.015573501586914
    10. 'anything' → logprob: -10.265573501586914

Token 422: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.018246639519929886
    2. ' all' → logprob: -4.518246650695801
    3. '000' → logprob: -5.393246650695801
    4. ''all' → logprob: -6.393246650695801
    5. ''' → logprob: -7.518246650695801
    6. '0' → logprob: -8.6432466506958
    7. '
' → logprob: -9.5182466506958
    8. '111' → logprob: -10.3932466506958
    9. 'not' → logprob: -10.5182466506958
    10. '['' → logprob: -11.0182466506958

Token 423: ' zero' (ID: 12421)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2397453933954239
    2. 'zero' → logprob: -1.6147453784942627
    3. ' zero' → logprob: -5.114745616912842
    4. 'zeros' → logprob: -5.239745616912842
    5. '000' → logprob: -6.614745616912842
    6. ' zeros' → logprob: -6.739745616912842
    7. ' ' → logprob: -8.614745140075684
    8. ''' → logprob: -8.614745140075684
    9. ''s' → logprob: -11.864745140075684
    10. '_zero' → logprob: -11.989745140075684

Token 424: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.27209216356277466
    2. '           ' → logprob: -1.8970921039581299
    3. '
' → logprob: -3.27209210395813
    4. ' and' → logprob: -4.147092342376709
    5. '   ' → logprob: -5.147092342376709
    6. '               ' → logprob: -5.147092342376709
    7. ':
' → logprob: -5.397092342376709
    8. '<|end|>' → logprob: -5.522092342376709
    9. ',' → logprob: -5.897092342376709
    10. ' for' → logprob: -6.272092342376709

Token 425: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08142416924238205
    2. '       ' → logprob: -2.5814242362976074
    3. ' if' → logprob: -7.456424236297607
    4. 'pattern' → logprob: -7.956424236297607
    5. ',' → logprob: -8.08142375946045
    6. ' pattern' → logprob: -8.20642375946045
    7. '   ' → logprob: -8.45642375946045
    8. '
' → logprob: -8.95642375946045
    9. ' for' → logprob: -9.08142375946045
    10. '               ' → logprob: -9.33142375946045

Token 426: ' bits' (ID: 18189)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6590659618377686
    2. '       ' → logprob: -1.0340659618377686
    3. ' if' → logprob: -2.6590659618377686
    4. ' x' → logprob: -3.6590659618377686
    5. ' for' → logprob: -5.409066200256348
    6. '   ' → logprob: -5.409066200256348
    7. 'if' → logprob: -5.534066200256348
    8. ' pattern' → logprob: -6.159066200256348
    9. ' bit' → logprob: -6.159066200256348
    10. 'pattern' → logprob: -6.159066200256348

Token 427: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.033873092383146286
    2. '=' → logprob: -3.4088730812072754
    3. '_pattern' → logprob: -10.033873558044434
    4. '[' → logprob: -10.158873558044434
    5. '   ' → logprob: -10.658873558044434
    6. ' ' → logprob: -10.908873558044434
    7. '_' → logprob: -11.158873558044434
    8. 'pattern' → logprob: -11.283873558044434
    9. '       ' → logprob: -11.658873558044434
    10. 's' → logprob: -11.908873558044434

Token 428: ' list' (ID: 1562)
  Prédit: 'byte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'byte' → logprob: -0.2683129608631134
    2. '[' → logprob: -1.768312931060791
    3. ' byte' → logprob: -3.768312931060791
    4. '['' → logprob: -4.268312931060791
    5. ' [' → logprob: -4.268312931060791
    6. ''' → logprob: -5.393312931060791
    7. 'pattern' → logprob: -6.518312931060791
    8. '[
' → logprob: -7.143312931060791
    9. 'list' → logprob: -7.393312931060791
    10. '[]' → logprob: -7.393312931060791

Token 429: '(byte' (ID: 36692)
  Prédit: '(byte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(byte' → logprob: -0.007743032183498144
    2. '('' → logprob: -5.507742881774902
    3. 'byte' → logprob: -6.007742881774902
    4. '(pattern' → logprob: -7.632742881774902
    5. '(map' → logprob: -7.882742881774902
    6. '(b' → logprob: -9.257742881774902
    7. '(range' → logprob: -9.632742881774902
    8. '(' → logprob: -9.757742881774902
    9. '(bit' → logprob: -11.007742881774902
    10. 'map' → logprob: -11.257742881774902

Token 430: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.00010092071170220152
    2. 'byte' → logprob: -9.625101089477539
    3. '_byte' → logprob: -10.750101089477539
    4. 'str' → logprob: -12.500101089477539
    5. '(byte' → logprob: -12.500101089477539
    6. '   ' → logprob: -13.250101089477539
    7. ')' → logprob: -13.875101089477539
    8. '[' → logprob: -14.125101089477539
    9. '```' → logprob: -15.250101089477539
    10. '('' → logprob: -15.625101089477539

Token 431: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.020511876791715622
    2. '[' → logprob: -4.145512104034424
    3. '[:' → logprob: -6.020512104034424
    4. ')
' → logprob: -6.270512104034424
    5. ')[' → logprob: -10.020511627197266
    6. '   ' → logprob: -10.145511627197266
    7. '))' → logprob: -10.645511627197266
    8. ' )' → logprob: -11.645511627197266
    9. '       ' → logprob: -12.270511627197266
    10. ')))' → logprob: -12.895511627197266

Token 432: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.038990914821624756
    2. '       ' → logprob: -3.2889909744262695
    3. '<|end|>' → logprob: -7.9139909744262695
    4. ',' → logprob: -9.16399097442627
    5. '            
' → logprob: -9.53899097442627
    6. '   ' → logprob: -9.53899097442627
    7. ')' → logprob: -9.66399097442627
    8. ' for' → logprob: -9.66399097442627
    9. '               ' → logprob: -10.16399097442627
    10. '[' → logprob: -10.28899097442627

Token 433: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.24803876876831055
    2. '           ' → logprob: -1.9980387687683105
    3. ' if' → logprob: -2.6230387687683105
    4. '       ' → logprob: -5.4980387687683105
    5. '               ' → logprob: -6.2480387687683105
    6. 'valid' → logprob: -6.4980387687683105
    7. 'x' → logprob: -6.9980387687683105
    8. '#' (adapté à ' #') → logprob: -7.3730387687683105
    9. '   ' → logprob: -7.7480387687683105
    10. 'def' → logprob: -8.123039245605469

Token 434: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.46332505345344543
    2. ' if' → logprob: -1.588325023651123
    3. 'y' → logprob: -3.088325023651123
    4. 'all' → logprob: -3.588325023651123
    5. 'valid' → logprob: -4.338325023651123
    6. '   ' → logprob: -4.463325023651123
    7. 'possible' → logprob: -4.463325023651123
    8. '           ' → logprob: -5.088325023651123
    9. ' all' → logprob: -5.213325023651123
    10. ' y' → logprob: -5.213325023651123

Token 435: ' fixed' (ID: 13213)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0651216506958008
    2. 'bits' → logprob: -1.4401216506958008
    3. 'not' → logprob: -1.9401216506958008
    4. ' not' → logprob: -2.065121650695801
    5. ' bits' → logprob: -3.065121650695801
    6. ' if' → logprob: -3.065121650695801
    7. '(bits' → logprob: -3.690121650695801
    8. 'len' → logprob: -5.065121650695801
    9. 'any' → logprob: -5.065121650695801
    10. 'all' → logprob: -5.565121650695801

Token 436: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.7282411456108093
    2. '0' → logprob: -1.853241205215454
    3. '_bits' → logprob: -2.728241205215454
    4. '3' → logprob: -2.853241205215454
    5. 'if' → logprob: -3.103241205215454
    6. '[' → logprob: -3.353241205215454
    7. 'for' → logprob: -3.353241205215454
    8. ' bits' → logprob: -3.728241205215454
    9. '7' → logprob: -3.728241205215454
    10. 'positions' → logprob: -3.978241205215454

Token 437: '
' (ID: 198)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6828358173370361
    2. 'if' → logprob: -1.3078358173370361
    3. ' if' → logprob: -1.5578358173370361
    4. 'for' → logprob: -5.932835578918457
    5. ' for' → logprob: -6.307835578918457
    6. ' and' → logprob: -6.432835578918457
    7. 'and' → logprob: -6.557835578918457
    8. '[:' → logprob: -6.682835578918457
    9. '0' → logprob: -7.057835578918457
    10. ' =' → logprob: -7.307835578918457

Token 438: '           ' (ID: 352)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.03218274563550949
    2. '       ' → logprob: -4.782182693481445
    3. ' =' → logprob: -5.282182693481445
    4. '[:' → logprob: -5.282182693481445
    5. 'if' → logprob: -5.407182693481445
    6. '0' → logprob: -5.907182693481445
    7. ' if' → logprob: -6.407182693481445
    8. '   ' → logprob: -6.532182693481445
    9. '           ' → logprob: -7.407182693481445
    10. 'def' → logprob: -7.657182693481445

Token 439: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -7.73183855926618e-05
    2. 'fixed' → logprob: -10.250077247619629
    3. 'for' → logprob: -10.500077247619629
    4. ' if' → logprob: -12.000077247619629
    5. '           ' → logprob: -12.125077247619629
    6. 'valid' → logprob: -14.250077247619629
    7. 'and' → logprob: -14.750077247619629
    8. 'bits' → logprob: -15.125077247619629
    9. 'match' → logprob: -15.250077247619629
    10. '            
' → logprob: -15.625077247619629

Token 440: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.021552754566073418
    2. ' bits' → logprob: -4.521552562713623
    3. 'len' → logprob: -4.646552562713623
    4. 'byte' → logprob: -8.271553039550781
    5. ' len' → logprob: -8.771553039550781
    6. '(bits' → logprob: -8.896553039550781
    7. 'bit' → logprob: -9.521553039550781
    8. 'not' → logprob: -10.021553039550781
    9. 'bytes' → logprob: -10.146553039550781
    10. ' ' → logprob: -10.771553039550781

Token 441: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006370609160512686
    2. '[:' → logprob: -5.256370544433594
    3. '0' → logprob: -7.006370544433594
    4. ' and' → logprob: -8.881370544433594
    5. 'and' → logprob: -9.756370544433594
    6. ' ' → logprob: -11.381370544433594
    7. ' is' → logprob: -12.006370544433594
    8. '   ' → logprob: -12.631370544433594
    9. '.startswith' → logprob: -12.881370544433594
    10. '!=' → logprob: -13.381370544433594

Token 442: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5332478142227046e-05
    2. ':' → logprob: -12.500015258789062
    3. '[' → logprob: -12.625015258789062
    4. ' ' → logprob: -12.625015258789062
    5. '1' → logprob: -13.937515258789062
    6. '2' → logprob: -14.062515258789062
    7. '   ' → logprob: -14.375015258789062
    8. ' :' → logprob: -14.562515258789062
    9. '00' → logprob: -15.312515258789062
    10. '3' → logprob: -15.562515258789062

Token 443: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.3786180317401886
    2. ' ==' → logprob: -1.8786180019378662
    3. '==' → logprob: -2.253618001937866
    4. ']==' → logprob: -3.378618001937866
    5. ' !=' → logprob: -4.378618240356445
    6. ' ]' → logprob: -5.503618240356445
    7. '!=' → logprob: -5.753618240356445
    8. '']' → logprob: -6.878618240356445
    9. ']!=' → logprob: -7.128618240356445
    10. ']=='' → logprob: -7.503618240356445

Token 444: ' in' (ID: 306)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6983886957168579
    2. ' ==' → logprob: -0.6983886957168579
    3. ' !=' → logprob: -5.948388576507568
    4. '!=' → logprob: -6.573388576507568
    5. '=' → logprob: -7.698388576507568
    6. '=='' → logprob: -7.948388576507568
    7. ' in' → logprob: -8.698389053344727
    8. ''' → logprob: -9.198389053344727
    9. ' ' → logprob: -9.823389053344727
    10. ' '' → logprob: -10.448389053344727

Token 445: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.08540592342615128
    2. '('' → logprob: -2.7104058265686035
    3. '{'' → logprob: -4.4604058265686035
    4. ''' → logprob: -5.7104058265686035
    5. ' ['' → logprob: -7.9604058265686035
    6. '[' → logprob: -9.585406303405762
    7. ' ('' → logprob: -10.335406303405762
    8. '(['' → logprob: -11.085406303405762
    9. ''s' → logprob: -12.460406303405762
    10. '["' → logprob: -12.710406303405762

Token 446: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.058289885520935
    2. '['' → logprob: -1.183289885520935
    3. ''' → logprob: -1.308289885520935
    4. '0' → logprob: -3.1832900047302246
    5. '{'' → logprob: -3.4332900047302246
    6. '('' → logprob: -6.433290004730225
    7. '[' → logprob: -7.433290004730225
    8. '{' → logprob: -8.808289527893066
    9. '`' → logprob: -10.058289527893066
    10. ' ['' → logprob: -10.183289527893066

Token 447: '','' (ID: 4074)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.3393010199069977
    2. '','' → logprob: -1.5893009901046753
    3. '']' → logprob: -2.839301109313965
    4. ',' → logprob: -3.714301109313965
    5. ']' → logprob: -8.464301109313965
    6. ' ',' → logprob: -8.464301109313965
    7. ' and' → logprob: -9.089301109313965
    8. ''' → logprob: -9.714301109313965
    9. ','' → logprob: -9.714301109313965
    10. ' ,' → logprob: -10.089301109313965

Token 448: 'x' (ID: 87)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2497761994600296
    2. '1' → logprob: -1.7497762441635132
    3. ''' → logprob: -3.1247761249542236
    4. ' ' → logprob: -6.249776363372803
    5. ' '' → logprob: -7.124776363372803
    6. '"' → logprob: -9.124775886535645
    7. '']' → logprob: -9.374775886535645
    8. '   ' → logprob: -9.499775886535645
    9. ''s' → logprob: -9.624775886535645
    10. '  ' → logprob: -10.374775886535645

Token 449: '']' (ID: 1089)
  Prédit: '']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.009949803352355957
    2. '',' → logprob: -5.384949684143066
    3. '','' → logprob: -5.509949684143066
    4. ']' → logprob: -6.884949684143066
    5. ',' → logprob: -9.134949684143066
    6. '']:
' → logprob: -9.884949684143066
    7. '']:' → logprob: -10.259949684143066
    8. ' ']' → logprob: -10.884949684143066
    9. ''' → logprob: -11.384949684143066
    10. ','' → logprob: -12.384949684143066

Token 450: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011068098247051239
    2. 'and' → logprob: -4.511067867279053
    3. '           ' → logprob: -11.386068344116211
    4. '       ' → logprob: -12.886068344116211
    5. '   ' → logprob: -13.136068344116211
    6. ' ' → logprob: -13.261068344116211
    7. '    ' → logprob: -14.636068344116211
    8. '        ' → logprob: -14.761068344116211
    9. ',' → logprob: -15.136068344116211
    10. '          ' → logprob: -15.261068344116211

Token 451: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.014301493763923645
    2. ' bits' → logprob: -4.264301300048828
    3. '   ' → logprob: -10.139301300048828
    4. '       ' → logprob: -10.389301300048828
    5. '(bits' → logprob: -10.764301300048828
    6. 'b' → logprob: -11.389301300048828
    7. ' ' → logprob: -11.389301300048828
    8. '           ' → logprob: -11.514301300048828
    9. '  ' → logprob: -13.139301300048828
    10. '.bits' → logprob: -13.389301300048828

Token 452: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007151735480874777
    2. '1' → logprob: -7.250715255737305
    3. ' [' → logprob: -12.750715255737305
    4. '[
' → logprob: -14.375715255737305
    5. '   ' → logprob: -14.500715255737305
    6. ' ' → logprob: -15.000715255737305
    7. '```' → logprob: -15.250715255737305
    8. '(' → logprob: -16.250715255737305
    9. '
' → logprob: -16.375715255737305
    10. '...' → logprob: -16.625715255737305

Token 453: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4987974029500037e-05
    2. ' ' → logprob: -11.375024795532227
    3. '2' → logprob: -12.687524795532227
    4. '0' → logprob: -13.125024795532227
    5. '3' → logprob: -13.250024795532227
    6. '[' → logprob: -13.500024795532227
    7. '   ' → logprob: -13.687524795532227
    8. '
' → logprob: -14.187524795532227
    9. ''' → logprob: -15.687524795532227
    10. 'def' → logprob: -15.687524795532227

Token 454: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5745254158973694
    2. ' in' → logprob: -0.9495254158973694
    3. 'in' → logprob: -3.0745253562927246
    4. '']' → logprob: -6.449525356292725
    5. ']=='' → logprob: -6.824525356292725
    6. ']==' → logprob: -7.449525356292725
    7. ' ]' → logprob: -7.949525356292725
    8. '']=='' → logprob: -9.449525833129883
    9. '   ' → logprob: -10.949525833129883
    10. ' ' → logprob: -11.074525833129883

Token 455: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.17994967103004456
    2. 'in' → logprob: -1.8049496412277222
    3. '==' → logprob: -9.054949760437012
    4. ' ==' → logprob: -10.304949760437012
    5. '=='' → logprob: -11.054949760437012
    6. ']' → logprob: -11.179949760437012
    7. '['' → logprob: -11.679949760437012
    8. ' ' → logprob: -12.304949760437012
    9. '```' → logprob: -13.179949760437012
    10. ']==' → logprob: -13.554949760437012

Token 456: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0015329512534663081
    2. ' ['' → logprob: -6.501533031463623
    3. '[' → logprob: -10.501532554626465
    4. ''' → logprob: -13.751532554626465
    5. '   ' → logprob: -14.751532554626465
    6. ' ' → logprob: -15.001532554626465
    7. '('' → logprob: -15.376532554626465
    8. '[['' → logprob: -15.376532554626465
    9. '[
' → logprob: -15.751532554626465
    10. '  ' → logprob: -15.876532554626465

Token 457: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02333899959921837
    2. ''' → logprob: -3.773339033126831
    3. '['' → logprob: -10.14833927154541
    4. ' ' → logprob: -11.27333927154541
    5. '"' → logprob: -11.52333927154541
    6. '0' → logprob: -11.52333927154541
    7. ' '' → logprob: -12.02333927154541
    8. '   ' → logprob: -13.14833927154541
    9. '`' → logprob: -13.27333927154541
    10. '{'' → logprob: -13.64833927154541

Token 458: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.0006683559040538967
    2. '',' → logprob: -7.875668525695801
    3. ','' → logprob: -8.3756685256958
    4. ',' → logprob: -9.8756685256958
    5. '',"' → logprob: -13.1256685256958
    6. '","' → logprob: -13.6256685256958
    7. '",'' → logprob: -14.1256685256958
    8. ',x' → logprob: -14.3756685256958
    9. ''' → logprob: -14.5006685256958
    10. '']' → logprob: -14.7506685256958

Token 459: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10108119994401932
    2. ''x' → logprob: -2.351081132888794
    3. '1' → logprob: -7.476081371307373
    4. ''' → logprob: -8.601080894470215
    5. '0' → logprob: -9.476080894470215
    6. ' x' → logprob: -11.101080894470215
    7. '"x' → logprob: -11.476080894470215
    8. '['' → logprob: -11.976080894470215
    9. '']' → logprob: -13.226080894470215
    10. ''s' → logprob: -13.476080894470215

Token 460: '']' (ID: 1089)
  Prédit: '']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.03891764208674431
    2. '','' → logprob: -3.6639175415039062
    3. ']' → logprob: -4.913917541503906
    4. '',' → logprob: -5.288917541503906
    5. ',' → logprob: -9.538917541503906
    6. ','' → logprob: -10.288917541503906
    7. ' ']' → logprob: -11.538917541503906
    8. '   ' → logprob: -11.913917541503906
    9. ''],' → logprob: -12.038917541503906
    10. ''' → logprob: -12.163917541503906

Token 461: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0028071331325918436
    2. 'and' → logprob: -5.877807140350342
    3. ' ' → logprob: -14.627806663513184
    4. '   ' → logprob: -14.752806663513184
    5. '           ' → logprob: -14.752806663513184
    6. ',' → logprob: -15.002806663513184
    7. '       ' → logprob: -15.127806663513184
    8. '<|end|>' → logprob: -16.5028076171875
    9. ')' → logprob: -16.6278076171875
    10. '...' → logprob: -16.8778076171875

Token 462: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.023362644016742706
    2. ' bits' → logprob: -3.773362636566162
    3. '   ' → logprob: -10.27336311340332
    4. '       ' → logprob: -11.02336311340332
    5. '           ' → logprob: -11.14836311340332
    6. '(bits' → logprob: -11.64836311340332
    7. ' ' → logprob: -11.64836311340332
    8. 'bit' → logprob: -11.77336311340332
    9. '0' → logprob: -12.52336311340332
    10. '     ' → logprob: -12.52336311340332

Token 463: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0024926606565713882
    2. '2' → logprob: -6.002492427825928
    3. ' ' → logprob: -12.752492904663086
    4. '```' → logprob: -13.002492904663086
    5. ']' → logprob: -13.752492904663086
    6. '
' → logprob: -13.752492904663086
    7. '][' → logprob: -13.877492904663086
    8. '(' → logprob: -13.877492904663086
    9. 'def' → logprob: -14.002492904663086
    10. '   ' → logprob: -14.127492904663086

Token 464: '2' (ID: 17)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.42971763014793396
    2. '2' → logprob: -1.0547176599502563
    3. ' ' → logprob: -7.304717540740967
    4. '1' → logprob: -9.054718017578125
    5. '   ' → logprob: -10.117218017578125
    6. '  ' → logprob: -10.304718017578125
    7. '```' → logprob: -10.742218017578125
    8. ''' → logprob: -11.242218017578125
    9. '...' → logprob: -11.492218017578125
    10. '6' → logprob: -11.492218017578125

Token 465: ']' (ID: 60)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38895782828330994
    2. '==' → logprob: -1.8889578580856323
    3. ' ==' → logprob: -2.2639577388763428
    4. 'in' → logprob: -3.1389577388763428
    5. '=='' → logprob: -4.263957977294922
    6. ']' → logprob: -5.138957977294922
    7. ']==' → logprob: -6.388957977294922
    8. ' =='' → logprob: -7.513957977294922
    9. ''' → logprob: -7.638957977294922
    10. ']=='' → logprob: -7.763957977294922

Token 466: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4681474566459656
    2. 'in' → logprob: -1.2181475162506104
    3. '==' → logprob: -2.7181475162506104
    4. ' ==' → logprob: -4.593147277832031
    5. '=='' → logprob: -6.468147277832031
    6. ''' → logprob: -8.843147277832031
    7. ' ' → logprob: -9.843147277832031
    8. ' =='' → logprob: -9.843147277832031
    9. '['' → logprob: -10.093147277832031
    10. ')' → logprob: -11.218147277832031

Token 467: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.03113546222448349
    2. ''' → logprob: -3.5311355590820312
    3. ' ['' → logprob: -7.156135559082031
    4. '[' → logprob: -7.781135559082031
    5. '0' → logprob: -8.906135559082031
    6. ' '' → logprob: -10.406135559082031
    7. '[
' → logprob: -12.406135559082031
    8. ' ' → logprob: -12.406135559082031
    9. '["' → logprob: -12.906135559082031
    10. '('' → logprob: -12.906135559082031

Token 468: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1610904484987259
    2. ''' → logprob: -1.9110904932022095
    3. '['' → logprob: -7.16109037399292
    4. ' ' → logprob: -10.536090850830078
    5. '{'' → logprob: -11.036090850830078
    6. '1' → logprob: -11.411090850830078
    7. ' '' → logprob: -11.786090850830078
    8. '('' → logprob: -11.911090850830078
    9. '`' → logprob: -12.411090850830078
    10. '   ' → logprob: -12.536090850830078

Token 469: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.009151944890618324
    2. '',' → logprob: -4.759151935577393
    3. '']' → logprob: -7.884151935577393
    4. ''' → logprob: -8.88415241241455
    5. ' ','' → logprob: -11.75915241241455
    6. ''x' → logprob: -12.38415241241455
    7. '',"' → logprob: -12.38415241241455
    8. ','' → logprob: -13.13415241241455
    9. ',' → logprob: -13.75915241241455
    10. '',
' → logprob: -14.25915241241455

Token 470: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6937264204025269
    2. ''x' → logprob: -0.6937264204025269
    3. ''' → logprob: -7.693726539611816
    4. '0' → logprob: -9.193726539611816
    5. ' x' → logprob: -11.193726539611816
    6. '1' → logprob: -12.693726539611816
    7. '']' → logprob: -12.818726539611816
    8. '"x' → logprob: -14.068726539611816
    9. ' ' → logprob: -14.568726539611816
    10. ' '' → logprob: -15.568726539611816

Token 471: '']:
' (ID: 44766)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.004858953412622213
    2. '']:' → logprob: -5.87985897064209
    3. '']:
' → logprob: -7.12985897064209
    4. ']' → logprob: -7.62985897064209
    5. ' ']' → logprob: -7.87985897064209
    6. ''' → logprob: -8.75485897064209
    7. '',' → logprob: -9.00485897064209
    8. '','' → logprob: -9.62985897064209
    9. ',' → logprob: -11.62985897064209
    10. '   ' → logprob: -11.75485897064209

Token 472: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.005344397854059935
    2. 'and' → logprob: -5.380344390869141
    3. '       ' → logprob: -7.380344390869141
    4. ':' → logprob: -10.13034439086914
    5. '           ' → logprob: -10.13034439086914
    6. '   ' → logprob: -12.13034439086914
    7. '<|end|>' → logprob: -12.50534439086914
    8. ' ' → logprob: -13.13034439086914
    9. ':
' → logprob: -13.50534439086914
    10. '        ' → logprob: -13.50534439086914

Token 473: ' y' (ID: 342)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.4621590375900269
    2. ' if' → logprob: -1.8371590375900269
    3. '               ' → logprob: -2.2121591567993164
    4. '           ' → logprob: -2.3371591567993164
    5. ' y' → logprob: -2.3371591567993164
    6. '                   ' → logprob: -2.8371591567993164
    7. '#' → logprob: -3.0871591567993164
    8. '   ' → logprob: -3.3371591567993164
    9. ' #' → logprob: -3.3371591567993164
    10. 'if' → logprob: -3.3371591567993164

Token 474: 'bits' (ID: 24043)
  Prédit: '_bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bits' → logprob: -0.035733163356781006
    2. 'bits' → logprob: -3.410733222961426
    3. 's' → logprob: -6.410733222961426
    4. ' =' → logprob: -8.035733222961426
    5. '_positions' → logprob: -11.035733222961426
    6. '_b' → logprob: -11.035733222961426
    7. 'es' → logprob: -11.285733222961426
    8. '_bit' → logprob: -11.660733222961426
    9. '=' → logprob: -11.785733222961426
    10. 'b' → logprob: -12.160733222961426

Token 475: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4741072654724121
    2. '=' → logprob: -0.9741072654724121
    3. '[' → logprob: -10.59910774230957
    4. '=[' → logprob: -14.09910774230957
    5. '   ' → logprob: -14.22410774230957
    6. '<|end|>' → logprob: -14.22410774230957
    7. ' ' → logprob: -14.59910774230957
    8. ' =[' → logprob: -14.84910774230957
    9. 's' → logprob: -15.09910774230957
    10. '```' → logprob: -15.09910774230957

Token 476: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.06523051112890244
    2. ' bits' → logprob: -2.81523060798645
    3. '[' → logprob: -5.815230369567871
    4. ' [' → logprob: -8.565230369567871
    5. '(bits' → logprob: -10.440230369567871
    6. '   ' → logprob: -10.940230369567871
    7. '[
' → logprob: -11.065230369567871
    8. '[b' → logprob: -11.690230369567871
    9. 'bit' → logprob: -11.940230369567871
    10. '.bits' → logprob: -13.440230369567871

Token 477: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002476724097505212
    2. '3' → logprob: -6.002476692199707
    3. '   ' → logprob: -15.377476692199707
    4. ' [' → logprob: -15.502476692199707
    5. '(' → logprob: -16.002477645874023
    6. '```' → logprob: -16.002477645874023
    7. '[
' → logprob: -16.377477645874023
    8. '
' → logprob: -17.127477645874023
    9. '2' → logprob: -17.252477645874023
    10. '4' → logprob: -17.377477645874023

Token 478: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -4.036524842376821e-05
    2. '[' → logprob: -10.750040054321289
    3. ' ' → logprob: -12.000040054321289
    4. '(' → logprob: -12.250040054321289
    5. '2' → logprob: -12.500040054321289
    6. '   ' → logprob: -13.625040054321289
    7. ''' → logprob: -13.875040054321289
    8. '  ' → logprob: -15.125040054321289
    9. '
' → logprob: -15.250040054321289
    10. '```' → logprob: -15.500040054321289

Token 479: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0018502239836379886
    2. ']' → logprob: -6.751850128173828
    3. '4' → logprob: -8.001850128173828
    4. ',' → logprob: -9.126850128173828
    5. '6' → logprob: -9.126850128173828
    6. ':]' → logprob: -9.876850128173828
    7. ' :' → logprob: -10.626850128173828
    8. '],' → logprob: -10.751850128173828
    9. '5' → logprob: -11.626850128173828
    10. '3' → logprob: -11.876850128173828

Token 480: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -6.229872087715194e-05
    2. '6' → logprob: -9.875061988830566
    3. '-' → logprob: -12.375061988830566
    4. '8' → logprob: -13.250061988830566
    5. ' ' → logprob: -13.375061988830566
    6. '5' → logprob: -14.500061988830566
    7. 'len' → logprob: -14.500061988830566
    8. '```' → logprob: -14.625061988830566
    9. '=' → logprob: -15.062561988830566
    10. '[' → logprob: -15.187561988830566

Token 481: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.3136891722679138
    2. ']' → logprob: -1.3136892318725586
    3. ' ]
' → logprob: -9.188689231872559
    4. '])
' → logprob: -9.813689231872559
    5. ' ]' → logprob: -9.938689231872559
    6. ')
' → logprob: -9.938689231872559
    7. ']
' → logprob: -10.063689231872559
    8. '       ' → logprob: -10.188689231872559
    9. '])' → logprob: -10.313689231872559
    10. ']

' → logprob: -10.563689231872559

Token 482: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014759092591702938
    2. 'if' → logprob: -4.889759063720703
    3. ' if' → logprob: -5.014759063720703
    4. '           ' → logprob: -8.639759063720703
    5. '       ' → logprob: -9.889759063720703
    6. 'all' → logprob: -10.264759063720703
    7. 'x' → logprob: -10.264759063720703
    8. ' and' → logprob: -10.764759063720703
    9. ' all' → logprob: -10.889759063720703
    10. ')' → logprob: -11.139759063720703

Token 483: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0012878556735813618
    2. '               ' → logprob: -7.376287937164307
    3. 'any' → logprob: -8.126287460327148
    4. ' if' → logprob: -8.376287460327148
    5. 'all' → logprob: -9.376287460327148
    6. '                   ' → logprob: -10.251287460327148
    7. 'not' → logprob: -12.001287460327148
    8. '   ' → logprob: -12.751287460327148
    9. '#' → logprob: -13.501287460327148
    10. 'x' → logprob: -13.501287460327148

Token 484: ' '' (ID: 461)
  Prédit: 'any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'any' → logprob: -0.051964279264211655
    2. ''any' → logprob: -3.176964282989502
    3. 'not' → logprob: -4.926964282989502
    4. ' any' → logprob: -7.676964282989502
    5. '(any' → logprob: -7.676964282989502
    6. ''' → logprob: -7.801964282989502
    7. ''x' → logprob: -8.426963806152344
    8. ' not' → logprob: -9.676963806152344
    9. ''all' → logprob: -11.426963806152344
    10. ''y' → logprob: -11.551963806152344

Token 485: 'x' (ID: 87)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5387294888496399
    2. 'x' → logprob: -1.0387294292449951
    3. ''' → logprob: -3.038729429244995
    4. ''x' → logprob: -4.538729667663574
    5. '0' → logprob: -5.788729667663574
    6. '{'' → logprob: -8.538729667663574
    7. '['' → logprob: -8.788729667663574
    8. ' '' → logprob: -9.288729667663574
    9. ''.' → logprob: -9.413729667663574
    10. 'any' → logprob: -9.538729667663574

Token 486: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0033330144360661507
    2. ''in' → logprob: -6.00333309173584
    3. 'in' → logprob: -7.75333309173584
    4. ' in' → logprob: -8.25333309173584
    5. ' not' → logprob: -9.87833309173584
    6. 'not' → logprob: -9.87833309173584
    7. '')' → logprob: -11.12833309173584
    8. ' '' → logprob: -11.25333309173584
    9. ''or' → logprob: -12.00333309173584
    10. '']' → logprob: -12.37833309173584

Token 487: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.05678379908204079
    2. ' not' → logprob: -3.43178391456604
    3. 'in' → logprob: -3.80678391456604
    4. 'not' → logprob: -7.431783676147461
    5. ')' → logprob: -10.431783676147461
    6. ' or' → logprob: -10.681783676147461
    7. '<|end|>' → logprob: -13.181783676147461
    8. ' ' → logprob: -13.681783676147461
    9. '```' → logprob: -14.056783676147461
    10. ',' → logprob: -14.431783676147461

Token 488: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.001399283530190587
    2. ' y' → logprob: -6.626399517059326
    3. '['' → logprob: -10.251399040222168
    4. ''y' → logprob: -11.501399040222168
    5. '[' → logprob: -11.751399040222168
    6. '[y' → logprob: -12.126399040222168
    7. 'bits' → logprob: -12.751399040222168
    8. ' ' → logprob: -12.876399040222168
    9. '(y' → logprob: -13.001399040222168
    10. 'x' → logprob: -14.001399040222168

Token 489: 'bits' (ID: 24043)
  Prédit: 'bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.26042523980140686
    2. 'y' → logprob: -1.5104252099990845
    3. ' y' → logprob: -5.635425090789795
    4. '[' → logprob: -5.885425090789795
    5. '['' → logprob: -7.510425090789795
    6. 'or' → logprob: -8.010425567626953
    7. ' or' → logprob: -8.510425567626953
    8. 'b' → logprob: -8.635425567626953
    9. ' bits' → logprob: -8.760425567626953
    10. 'x' → logprob: -9.385425567626953

Token 490: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5227429866790771
    2. ' or' → logprob: -1.5227429866790771
    3. 'and' → logprob: -1.8977429866790771
    4. 'or' → logprob: -3.272742986679077
    5. ':' → logprob: -7.522743225097656
    6. ':
' → logprob: -7.647743225097656
    7. ')' → logprob: -9.897743225097656
    8. '               ' → logprob: -10.272743225097656
    9. '                   ' → logprob: -10.897743225097656
    10. '):
' → logprob: -11.147743225097656

Token 491: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009526214562356472
    2. ' and' → logprob: -5.384526252746582
    3. ' or' → logprob: -5.759526252746582
    4. '               ' → logprob: -7.259526252746582
    5. '           ' → logprob: -7.509526252746582
    6. '                       ' → logprob: -9.134526252746582
    7. '                    
' → logprob: -9.884526252746582
    8. ':' → logprob: -10.009526252746582
    9. ',' → logprob: -10.134526252746582
    10. ':
' → logprob: -10.509526252746582

Token 492: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.8022974729537964
    2. '                   ' → logprob: -2.052297592163086
    3. ' continue' → logprob: -2.052297592163086
    4. ' pass' → logprob: -2.177297592163086
    5. 'pass' → logprob: -2.802297592163086
    6. 'return' → logprob: -3.302297592163086
    7. '#' (adapté à ' #') → logprob: -3.677297592163086
    8. ' return' → logprob: -4.427297592163086
    9. 'possible' → logprob: -4.552297592163086
    10. ' #' → logprob: -4.802297592163086

Token 493: ' unclear' (ID: 59698)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.5588305592536926
    2. '#' → logprob: -1.9338304996490479
    3. 'pass' → logprob: -2.808830499649048
    4. 'possible' → logprob: -2.933830499649048
    5. 'return' → logprob: -3.058830499649048
    6. 'if' → logprob: -3.683830499649048
    7. 'all' → logprob: -3.808830499649048
    8. '                   ' → logprob: -4.058830738067627
    9. ' continue' → logprob: -4.183830738067627
    10. 'for' → logprob: -4.558830738067627

Token 494: ' y' (ID: 342)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -1.0325795412063599
    2. '                   ' → logprob: -1.1575795412063599
    3. 'continue' → logprob: -1.4075795412063599
    4. ' if' → logprob: -3.6575794219970703
    5. '                       ' → logprob: -4.15757942199707
    6. '               ' → logprob: -4.15757942199707
    7. ',' → logprob: -5.65757942199707
    8. '           ' → logprob: -5.78257942199707
    9. ' for' → logprob: -6.15757942199707
    10. '#' → logprob: -6.15757942199707

Token 495: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.21121561527252197
    2. ' bits' → logprob: -3.0862154960632324
    3. 'continue' → logprob: -3.2112154960632324
    4. ')' → logprob: -3.5862154960632324
    5. ' continue' → logprob: -3.5862154960632324
    6. 's' → logprob: -4.211215496063232
    7. ' ' → logprob: -5.961215496063232
    8. '=' → logprob: -5.961215496063232
    9. ',' → logprob: -6.086215496063232
    10. '<|end|>' → logprob: -6.461215496063232

Token 496: ',' (ID: 11)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.33400973677635193
    2. ' continue' → logprob: -1.9590097665786743
    3. 'continue' → logprob: -2.4590096473693848
    4. '                       ' → logprob: -3.5840096473693848
    5. '               ' → logprob: -3.9590096473693848
    6. ' or' → logprob: -5.959009647369385
    7. ',' → logprob: -6.084009647369385
    8. '           ' → logprob: -6.959009647369385
    9. ' and' → logprob: -7.334009647369385
    10. ':
' → logprob: -7.334009647369385

Token 497: ' count' (ID: 3605)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.6382907032966614
    2. 'continue' → logprob: -1.3882906436920166
    3. ' return' → logprob: -2.5132906436920166
    4. '                   ' → logprob: -3.1382906436920166
    5. ' pass' → logprob: -3.3882906436920166
    6. '                       ' → logprob: -3.5132906436920166
    7. 'return' → logprob: -3.8882906436920166
    8. ' for' → logprob: -5.388290882110596
    9. 'pass' → logprob: -5.888290882110596
    10. 'for' → logprob: -6.638290882110596

Token 498: ' possibilities' (ID: 31061)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.2349512577056885
    2. ' possibilities' → logprob: -1.8599512577056885
    3. 'poss' → logprob: -2.2349512577056885
    4. 'possible' → logprob: -2.4849512577056885
    5. ' =' → logprob: -3.2349512577056885
    6. 'count' → logprob: -3.4849512577056885
    7. '_possible' → logprob: -3.4849512577056885
    8. ' continue' → logprob: -3.6099512577056885
    9. 'cnt' → logprob: -3.7349512577056885
    10. 'x' → logprob: -3.7349512577056885

Token 499: ' with' (ID: 483)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.1425192803144455
    2. '               ' → logprob: -2.392519235610962
    3. ' for' → logprob: -4.642519474029541
    4. ',' → logprob: -4.892519474029541
    5. 'continue' → logprob: -5.642519474029541
    6. '<|end|>' → logprob: -5.642519474029541
    7. '<|end|>' → logprob: -5.767519474029541
    8. '           ' → logprob: -6.017519474029541
    9. 'count' → logprob: -6.142519474029541
    10. '                       ' → logprob: -6.267519474029541

Token 500: ' y' (ID: 342)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5267611145973206
    2. 'byte' → logprob: -1.7767610549926758
    3. 'pattern' → logprob: -2.026761054992676
    4. ''' → logprob: -2.776761054992676
    5. ' count' → logprob: -5.151761054992676
    6. 'bit' → logprob: -5.151761054992676
    7. 'def' → logprob: -5.526761054992676
    8. 'x' → logprob: -5.651761054992676
    9. '1' → logprob: -5.901761054992676
    10. 'y' → logprob: -6.026761054992676

Token 501: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.03635307773947716
    2. '=' → logprob: -4.41135311126709
    3. 'count' → logprob: -5.28635311126709
    4. '_bits' → logprob: -5.53635311126709
    5. ' bits' → logprob: -5.91135311126709
    6. ')' → logprob: -6.53635311126709
    7. '_count' → logprob: -6.53635311126709
    8. 'continue' → logprob: -6.78635311126709
    9. ' =' → logprob: -6.91135311126709
    10. 'bit' → logprob: -7.03635311126709

Token 502: ' not' (ID: 625)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9945583939552307
    2. '=' → logprob: -1.869558334350586
    3. ' =' → logprob: -1.994558334350586
    4. '<|end|>' → logprob: -1.994558334350586
    5. ' and' → logprob: -3.619558334350586
    6. '.' → logprob: -3.744558334350586
    7. '>' → logprob: -3.994558334350586
    8. ',' → logprob: -4.119558334350586
    9. ')>' → logprob: -4.244558334350586
    10. ' not' → logprob: -4.494558334350586

Token 503: ' all' (ID: 722)
  Prédit: 'all'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'all' → logprob: -0.027603192254900932
    2. ' all' → logprob: -3.7776031494140625
    3. '000' → logprob: -5.5276031494140625
    4. '0' → logprob: -8.652603149414062
    5. '{'' → logprob: -9.402603149414062
    6. '['' → logprob: -10.777603149414062
    7. '```' → logprob: -10.777603149414062
    8. ''all' → logprob: -11.027603149414062
    9. ' ' → logprob: -11.902603149414062
    10. 'x' → logprob: -12.027603149414062

Token 504: ' zero' (ID: 12421)
  Prédit: 'zero'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zero' → logprob: -0.3866824507713318
    2. '0' → logprob: -1.3866825103759766
    3. ' zero' → logprob: -2.7616825103759766
    4. '000' → logprob: -5.761682510375977
    5. 'zeros' → logprob: -6.136682510375977
    6. ' zeros' → logprob: -6.511682510375977
    7. ' ' → logprob: -7.886682510375977
    8. ''' → logprob: -8.886682510375977
    9. 'x' → logprob: -9.511682510375977
    10. '```' → logprob: -9.636682510375977

Token 505: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.8311752080917358
    2. '                   ' → logprob: -1.8311752080917358
    3. ' and' → logprob: -2.2061753273010254
    4. ':' → logprob: -2.2061753273010254
    5. '<|end|>' → logprob: -2.3311753273010254
    6. '               ' → logprob: -2.4561753273010254
    7. ',' → logprob: -2.8311753273010254
    8. ':
' → logprob: -3.2061753273010254
    9. ')' → logprob: -3.3311753273010254
    10. '                       ' → logprob: -3.7061753273010254

Token 506: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4733247756958008
    2. '                       ' → logprob: -1.2233247756958008
    3. '               ' → logprob: -3.098324775695801
    4. ')' → logprob: -4.723324775695801
    5. ' and' → logprob: -5.223324775695801
    6. ' for' → logprob: -5.348324775695801
    7. '           ' → logprob: -6.348324775695801
    8. '):
' → logprob: -6.348324775695801
    9. '       ' → logprob: -6.473324775695801
    10. '```' → logprob: -6.473324775695801

Token 507: ' count' (ID: 3605)
  Prédit: 'poss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'poss' → logprob: -0.6212531924247742
    2. 'count' (adapté à ' count') → logprob: -1.871253252029419
    3. 'total' → logprob: -1.996253252029419
    4. 'possible' → logprob: -2.746253252029419
    5. 'cnt' → logprob: -3.746253252029419
    6. '                   ' → logprob: -4.12125301361084
    7. 'mask' → logprob: -4.37125301361084
    8. 'def' → logprob: -4.62125301361084
    9. 'min' → logprob: -4.74625301361084
    10. '#' → logprob: -4.87125301361084

Token 508: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6368089914321899
    2. '=' → logprob: -1.01180899143219
    3. '_pos' → logprob: -2.6368088722229004
    4. '_possible' → logprob: -4.0118088722229
    5. '_' → logprob: -5.3868088722229
    6. '_bits' → logprob: -5.6368088722229
    7. 's' → logprob: -6.0118088722229
    8. 'y' → logprob: -6.2618088722229
    9. '_x' → logprob: -6.6368088722229
    10. 'poss' → logprob: -6.7618088722229

Token 509: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0014010717859491706
    2. ' ' → logprob: -6.626400947570801
    3. 'count' → logprob: -10.5014009475708
    4. 'sum' → logprob: -10.7514009475708
    5. '1' → logprob: -11.8764009475708
    6. '   ' → logprob: -12.0014009475708
    7. '(' → logprob: -12.0014009475708
    8. ' sum' → logprob: -13.8139009475708
    9. ' count' → logprob: -14.3764009475708
    10. '2' → logprob: -14.5639009475708

Token 510: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00013572083844337612
    2. 'sum' → logprob: -9.62513542175293
    3. 'count' → logprob: -10.00013542175293
    4. ' ' → logprob: -11.62513542175293
    5. '1' → logprob: -12.62513542175293
    6. 'def' → logprob: -12.75013542175293
    7. '(' → logprob: -12.87513542175293
    8. 'lambda' → logprob: -13.50013542175293
    9. '   ' → logprob: -13.62513542175293
    10. '2' → logprob: -14.37513542175293

Token 511: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 512: '                   ' (ID: 699)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7622266411781311
    2. '                   ' → logprob: -0.8872266411781311
    3. 'for' → logprob: -2.3872265815734863
    4. '               ' → logprob: -4.262226581573486
    5. '           ' → logprob: -5.012226581573486
    6. '       ' → logprob: -5.137226581573486
    7. '
' → logprob: -6.387226581573486
    8. '                       ' → logprob: -7.137226581573486
    9. '```' → logprob: -8.887227058410645
    10. '                    ' → logprob: -9.387227058410645

Token 513: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.030819956213235855
    2. 'from' → logprob: -4.030819892883301
    3. 'y' → logprob: -4.780819892883301
    4. '                   ' → logprob: -6.405819892883301
    5. 'def' → logprob: -7.530819892883301
    6. '#' → logprob: -7.530819892883301
    7. 'x' → logprob: -7.780819892883301
    8. 'possible' → logprob: -7.905819892883301
    9. ' for' → logprob: -8.4058198928833
    10. 'import' → logprob: -9.0308198928833

Token 514: ' i' (ID: 575)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6351150870323181
    2. 'mask' → logprob: -1.510115146636963
    3. 'i' → logprob: -2.010115146636963
    4. 'combo' → logprob: -3.385115146636963
    5. 'comb' → logprob: -3.510115146636963
    6. 'val' → logprob: -4.010115146636963
    7. 'v' → logprob: -4.385115146636963
    8. 'vals' → logprob: -5.135115146636963
    9. 'yb' → logprob: -5.760115146636963
    10. 'pattern' → logprob: -6.385115146636963

Token 515: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043301064521074295
    2. 'in' → logprob: -3.1683011054992676
    3. 'range' → logprob: -9.29330062866211
    4. '0' → logprob: -9.66830062866211
    5. '7' → logprob: -10.04330062866211
    6. '1' → logprob: -10.29330062866211
    7. 's' → logprob: -11.41830062866211
    8. ',' → logprob: -11.79330062866211
    9. 'b' → logprob: -12.29330062866211
    10. '6' → logprob: -12.41830062866211

Token 516: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00014096579980105162
    2. ' range' → logprob: -8.875141143798828
    3. '[' → logprob: -14.125141143798828
    4. '(range' → logprob: -16.500141143798828
    5. '0' → logprob: -17.000141143798828
    6. 'all' → logprob: -17.375141143798828
    7. '
' → logprob: -17.500141143798828
    8. 'Range' → logprob: -17.750141143798828
    9. '	range' → logprob: -18.000141143798828
    10. '(' → logprob: -18.250141143798828

Token 517: '(' (ID: 7)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.000741134281270206
    2. '16' → logprob: -7.250741004943848
    3. '(' → logprob: -10.625741004943848
    4. '128' → logprob: -12.125741004943848
    5. '8' → logprob: -14.375741004943848
    6. '
' → logprob: -15.625741004943848
    7. '0' → logprob: -15.625741004943848
    8. '64' → logprob: -16.125741958618164
    9. ' ' → logprob: -16.125741958618164
    10. '15' → logprob: -16.375741958618164

Token 518: '256' (ID: 5780)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.025876961648464203
    2. '16' → logprob: -3.775876998901367
    3. '128' → logprob: -6.150876998901367
    4. '2' → logprob: -8.275876998901367
    5. '8' → logprob: -9.275876998901367
    6. '64' → logprob: -9.900876998901367
    7. '15' → logprob: -10.525876998901367
    8. '0' → logprob: -10.650876998901367
    9. '(' → logprob: -10.650876998901367
    10. '32' → logprob: -11.775876998901367

Token 519: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.020979633554816246
    2. '):' → logprob: -3.895979642868042
    3. '                       ' → logprob: -8.520979881286621
    4. '):
' → logprob: -8.520979881286621
    5. '                   ' → logprob: -10.895979881286621
    6. '       ' → logprob: -12.020979881286621
    7. '):

' → logprob: -12.520979881286621
    8. '               ' → logprob: -12.895979881286621
    9. ':' → logprob: -13.145979881286621
    10. '```' → logprob: -13.895979881286621

Token 520: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.008297769352793694
    2. '       ' → logprob: -6.133297920227051
    3. '	                   ' → logprob: -6.383297920227051
    4. 'b' → logprob: -7.258297920227051
    5. ':' → logprob: -7.758297920227051
    6. '               ' → logprob: -7.758297920227051
    7. '		               ' → logprob: -7.883297920227051
    8. '):
' → logprob: -8.13329792022705
    9. ' b' → logprob: -8.25829792022705
    10. ':
' → logprob: -8.25829792022705

Token 521: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.16745920479297638
    2. ' b' → logprob: -1.91745924949646
    3. '           ' → logprob: -6.667459011077881
    4. 'byte' → logprob: -6.792459011077881
    5. '                       ' → logprob: -7.167459011077881
    6. ' byte' → logprob: -7.167459011077881
    7. 'x' → logprob: -7.667459011077881
    8. 'bit' → logprob: -7.667459011077881
    9. 'bits' → logprob: -7.917459011077881
    10. ' bits' → logprob: -8.042459487915039

Token 522: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05489480495452881
    2. '=' → logprob: -2.9298949241638184
    3. 'b' → logprob: -12.30489444732666
    4. 's' → logprob: -13.42989444732666
    5. ' ' → logprob: -13.55489444732666
    6. '           ' → logprob: -13.67989444732666
    7. '   ' → logprob: -14.05489444732666
    8. '       ' → logprob: -14.42989444732666
    9. 'f' → logprob: -14.80489444732666
    10. '=format' → logprob: -15.05489444732666

Token 523: ' format' (ID: 6011)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.04300729185342789
    2. ' format' → logprob: -3.1680073738098145
    3. 'f' → logprob: -13.168006896972656
    4. '   ' → logprob: -13.418006896972656
    5. '(format' → logprob: -13.668006896972656
    6. '	format' → logprob: -14.168006896972656
    7. '{' → logprob: -14.418006896972656
    8. '           ' → logprob: -15.168006896972656
    9. ' ' → logprob: -15.168006896972656
    10. '.format' → logprob: -15.793006896972656

Token 524: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.6240566083070007e-06
    2. 'i' → logprob: -13.625001907348633
    3. '(' → logprob: -15.375001907348633
    4. 'b' → logprob: -15.875001907348633
    5. ' (' → logprob: -17.500001907348633
    6. '   ' → logprob: -17.875001907348633
    7. ' ' → logprob: -18.125001907348633
    8. '[i' → logprob: -18.125001907348633
    9. '```' → logprob: -18.500001907348633
    10. '(ii' → logprob: -19.625001907348633

Token 525: ','' (ID: 6620)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005284877843223512
    2. ' ,' → logprob: -7.875528335571289
    3. ','' → logprob: -9.000528335571289
    4. '[' → logprob: -11.625528335571289
    5. ' ' → logprob: -12.250528335571289
    6. '',' → logprob: -13.000528335571289
    7. '   ' → logprob: -13.125528335571289
    8. ''' → logprob: -13.250528335571289
    9. 'b' → logprob: -13.750528335571289
    10. ',
' → logprob: -14.125528335571289

Token 526: '08' (ID: 3062)
  Prédit: '08'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '08' → logprob: -0.14273592829704285
    2. ''' → logprob: -2.0177359580993652
    3. '008' → logprob: -11.017735481262207
    4. ' ' → logprob: -11.392735481262207
    5. '"' → logprob: -11.642735481262207
    6. 'b' → logprob: -11.767735481262207
    7. '8' → logprob: -12.142735481262207
    8. '010' → logprob: -12.392735481262207
    9. '`' → logprob: -13.517735481262207
    10. '080' → logprob: -14.142735481262207

Token 527: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: 0.0
    2. ''b' → logprob: -16.75
    3. '
' → logprob: -19.25
    4. '')' → logprob: -19.5
    5. ''' → logprob: -20.125
    6. '```' → logprob: -20.25
    7. '08' → logprob: -21.125
    8. ' b' → logprob: -21.625
    9. '	b' → logprob: -21.75
    10. 'binary' → logprob: -22.625

Token 528: '')
' (ID: 2515)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5251927375793457
    2. ')' → logprob: -1.4001927375793457
    3. '')
' → logprob: -2.4001927375793457
    4. '')' → logprob: -2.6501927375793457
    5. ')
' → logprob: -8.025192260742188
    6. ')`
' → logprob: -9.650192260742188
    7. '')
' → logprob: -9.775192260742188
    8. ')'
' → logprob: -10.150192260742188
    9. ')')
' → logprob: -10.400192260742188
    10. '       ' → logprob: -10.775192260742188

Token 529: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0060769254341721535
    2. '           ' → logprob: -6.631076812744141
    3. '<|end|>' → logprob: -6.756076812744141
    4. '       ' → logprob: -7.381076812744141
    5. '                   ' → logprob: -7.631076812744141
    6. '               ' → logprob: -7.631076812744141
    7. '                        
' → logprob: -7.881076812744141
    8. '```' → logprob: -8.00607681274414
    9. '                           ' → logprob: -8.13107681274414
    10. ')' → logprob: -8.88107681274414

Token 530: ' ok' (ID: 4763)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.8122272491455078
    2. ' if' → logprob: -0.9372272491455078
    3. '                           ' → logprob: -2.062227249145508
    4. 'if' → logprob: -3.937227249145508
    5. '           ' → logprob: -5.062227249145508
    6. '                               ' → logprob: -6.187227249145508
    7. '                   ' → logprob: -6.312227249145508
    8. ' for' → logprob: -6.437227249145508
    9. ' match' → logprob: -6.687227249145508
    10. '               ' → logprob: -6.812227249145508

Token 531: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1607690453529358
    2. '=' → logprob: -1.910768985748291
    3. '=True' → logprob: -8.41076946258545
    4. ' ' → logprob: -9.66076946258545
    5. '       ' → logprob: -10.16076946258545
    6. '   ' → logprob: -10.28576946258545
    7. '           ' → logprob: -10.41076946258545
    8. '    ' → logprob: -10.53576946258545
    9. ')' → logprob: -10.53576946258545
    10. '  ' → logprob: -11.28576946258545

Token 532: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.005152754485607147
    2. 'b' → logprob: -6.505152702331543
    3. 'match' → logprob: -6.505152702331543
    4. ' True' → logprob: -7.255152702331543
    5. '(True' → logprob: -7.255152702331543
    6. 'all' → logprob: -7.630152702331543
    7. 'False' → logprob: -9.505152702331543
    8. 'bits' → logprob: -10.505152702331543
    9. '(' → logprob: -10.880152702331543
    10. '   ' → logprob: -10.880152702331543

Token 533: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.06443960219621658
    2. ' for' → logprob: -3.314439535140991
    3. 'for' → logprob: -4.18943977355957
    4. '<|end|>' → logprob: -4.68943977355957
    5. '                           ' → logprob: -7.18943977355957
    6. '           ' → logprob: -8.06443977355957
    7. '                        
' → logprob: -8.81443977355957
    8. '       ' → logprob: -9.18943977355957
    9. '               ' → logprob: -9.81443977355957
    10. '                   ' → logprob: -9.81443977355957

Token 534: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.02032347209751606
    2. ' for' → logprob: -4.520323276519775
    3. 'for' → logprob: -4.770323276519775
    4. '           ' → logprob: -8.270323753356934
    5. '       ' → logprob: -8.895323753356934
    6. '<|end|>' → logprob: -8.895323753356934
    7. '                   ' → logprob: -9.395323753356934
    8. '               ' → logprob: -10.020323753356934
    9. '                           ' → logprob: -10.145323753356934
    10. '```' → logprob: -11.270323753356934

Token 535: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4605366289615631
    2. 'for' (adapté à ' for') → logprob: -1.5855365991592407
    3. '                       ' → logprob: -1.8355365991592407
    4. '                           ' → logprob: -6.210536479949951
    5. '	for' → logprob: -7.335536479949951
    6. ' ' → logprob: -7.710536479949951
    7. '           ' → logprob: -7.960536479949951
    8. '                   ' → logprob: -8.33553695678711
    9. '                        ' → logprob: -9.08553695678711
    10. '                               ' → logprob: -9.33553695678711

Token 536: ' pb' (ID: 31582)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.8359005451202393
    2. 'j' → logprob: -0.9609005451202393
    3. 'p' → logprob: -1.8359005451202393
    4. 'pb' → logprob: -4.33590030670166
    5. 'bit' → logprob: -5.33590030670166
    6. 'idx' → logprob: -6.08590030670166
    7. 'k' → logprob: -6.83590030670166
    8. 'pos' → logprob: -7.21090030670166
    9. 'pi' → logprob: -7.71090030670166
    10. ' j' → logprob: -8.21090030670166

Token 537: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.10544982552528381
    2. 's' → logprob: -2.730449914932251
    3. 'in' → logprob: -3.730449914932251
    4. 'os' → logprob: -4.855449676513672
    5. ',s' → logprob: -6.605449676513672
    6. ' in' → logprob: -6.730449676513672
    7. '_,' → logprob: -9.480449676513672
    8. 'at' → logprob: -9.605449676513672
    9. 'sb' → logprob: -9.730449676513672
    10. ',in' → logprob: -9.980449676513672

Token 538: ' bb' (ID: 32433)
  Prédit: 'ps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ps' → logprob: -0.6273876428604126
    2. 'bb' → logprob: -1.7523876428604126
    3. 'bs' → logprob: -1.8773876428604126
    4. 'sb' → logprob: -3.002387523651123
    5. 'pb' → logprob: -3.252387523651123
    6. 'bit' → logprob: -3.877387523651123
    7. 'cb' → logprob: -4.127387523651123
    8. 'b' → logprob: -4.877387523651123
    9. 'p' → logprob: -6.127387523651123
    10. 'qb' → logprob: -6.252387523651123

Token 539: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.25194019079208374
    2. 'in' → logprob: -1.5019402503967285
    3. ' ' → logprob: -12.37693977355957
    4. 'n' → logprob: -12.50193977355957
    5. '   ' → logprob: -13.62693977355957
    6. ',' → logprob: -14.37693977355957
    7. 'b' → logprob: -15.12693977355957
    8. '  ' → logprob: -15.50193977355957
    9. '    ' → logprob: -16.12693977355957
    10. ')' → logprob: -16.12693977355957

Token 540: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.018161412328481674
    2. ' zip' → logprob: -4.018161296844482
    3. '(zip' → logprob: -12.26816177368164
    4. 'pattern' → logprob: -12.51816177368164
    5. 'byte' → logprob: -14.01816177368164
    6. 'pb' → logprob: -14.76816177368164
    7. 'p' → logprob: -15.01816177368164
    8. '.zip' → logprob: -15.51816177368164
    9. 'pair' → logprob: -15.64316177368164
    10. ' ' → logprob: -15.64316177368164

Token 541: '(bits' (ID: 170698)
  Prédit: 'byte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'byte' → logprob: -0.18146398663520813
    2. 'bits' → logprob: -1.8064639568328857
    3. 'bit' → logprob: -7.681464195251465
    4. '(byte' → logprob: -7.681464195251465
    5. 'pattern' → logprob: -8.056464195251465
    6. ' byte' → logprob: -8.931464195251465
    7. '['' → logprob: -9.306464195251465
    8. '(bits' → logprob: -9.681464195251465
    9. 'patterns' → logprob: -10.056464195251465
    10. 'bytes' → logprob: -10.056464195251465

Token 542: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07590404897928238
    2. ',b' → logprob: -2.700904130935669
    3. ',p' → logprob: -5.32590389251709
    4. ' ,' → logprob: -6.95090389251709
    5. 'b' → logprob: -10.82590389251709
    6. ',i' → logprob: -10.95090389251709
    7. '[' → logprob: -11.07590389251709
    8. ',[' → logprob: -11.20090389251709
    9. ',y' → logprob: -11.57590389251709
    10. ',x' → logprob: -11.95090389251709

Token 543: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002206639386713505
    2. ' b' → logprob: -6.127206802368164
    3. '[b' → logprob: -12.002206802368164
    4. '       ' → logprob: -12.502206802368164
    5. 'byte' → logprob: -12.877206802368164
    6. '[' → logprob: -13.252206802368164
    7. ''b' → logprob: -13.377206802368164
    8. '   ' → logprob: -13.752206802368164
    9. '['' → logprob: -13.877206802368164
    10. '[i' → logprob: -14.502206802368164

Token 544: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.018484577536582947
    2. '):' → logprob: -4.018484592437744
    3. '):
' → logprob: -8.018484115600586
    4. ':' → logprob: -13.518484115600586
    5. '):

' → logprob: -13.643484115600586
    6. '           ' → logprob: -14.393484115600586
    7. '():
' → logprob: -14.393484115600586
    8. '[' → logprob: -14.768484115600586
    9. ':
' → logprob: -15.143484115600586
    10. ')' → logprob: -15.893484115600586

Token 545: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0016968417912721634
    2. ':' → logprob: -7.376697063446045
    3. ':
' → logprob: -8.001696586608887
    4. '           ' → logprob: -8.126696586608887
    5. ' if' → logprob: -9.501696586608887
    6. '                       ' → logprob: -9.751696586608887
    7. '):
' → logprob: -9.751696586608887
    8. '```' → logprob: -9.876696586608887
    9. '<|end|>' → logprob: -10.001696586608887
    10. 'if' → logprob: -10.501696586608887

Token 546: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1043211817741394
    2. ' if' → logprob: -2.479321241378784
    3. '                           ' → logprob: -4.729321002960205
    4. '                               ' → logprob: -5.354321002960205
    5. '   ' → logprob: -6.604321002960205
    6. ' ' → logprob: -8.604321479797363
    7. '  ' → logprob: -10.229321479797363
    8. '               ' → logprob: -10.479321479797363
    9. '                       ' → logprob: -10.729321479797363
    10. '           ' → logprob: -10.729321479797363

Token 547: ' pb' (ID: 31582)
  Prédit: 'pb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pb' → logprob: -0.0032027887646108866
    2. ' pb' → logprob: -5.75320291519165
    3. '(pb' → logprob: -10.628202438354492
    4. '_pb' → logprob: -15.503202438354492
    5. 'pbs' → logprob: -15.753202438354492
    6. '.pb' → logprob: -15.753202438354492
    7. 'PB' → logprob: -16.378202438354492
    8. 'Pb' → logprob: -16.753202438354492
    9. '   ' → logprob: -17.003202438354492
    10. ' ' → logprob: -17.378202438354492

Token 548: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.11340252310037613
    2. '!=' → logprob: -2.2384026050567627
    3. '!='' → logprob: -8.113402366638184
    4. ' not' → logprob: -8.738402366638184
    5. ' ==' → logprob: -10.238402366638184
    6. '==' → logprob: -10.488402366638184
    7. ' ' → logprob: -10.863402366638184
    8. '  ' → logprob: -11.863402366638184
    9. 'not' → logprob: -12.113402366638184
    10. '!==' → logprob: -12.363402366638184

Token 549: ' '' (ID: 461)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -7.183501293184236e-05
    2. 'x' → logprob: -10.12507152557373
    3. '"x' → logprob: -10.75007152557373
    4. ''' → logprob: -12.00007152557373
    5. ' '' → logprob: -14.00007152557373
    6. '
' → logprob: -14.62507152557373
    7. '`' → logprob: -14.62507152557373
    8. '   ' → logprob: -14.87507152557373
    9. '```' → logprob: -14.87507152557373
    10. ' ' → logprob: -15.12507152557373

Token 550: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001242772996192798
    2. ''x' → logprob: -9.000123977661133
    3. ' x' → logprob: -15.250123977661133
    4. ''' → logprob: -15.500123977661133
    5. '"x' → logprob: -15.875123977661133
    6. '')' → logprob: -16.625123977661133
    7. '	x' → logprob: -18.750123977661133
    8. ')x' → logprob: -19.000123977661133
    9. ''s' → logprob: -19.250123977661133
    10. '?' → logprob: -19.375123977661133

Token 551: ''' (ID: 6)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.31379491090774536
    2. 'and' → logprob: -1.5637948513031006
    3. ''' → logprob: -2.8137948513031006
    4. ' '' → logprob: -11.56379508972168
    5. '`' → logprob: -13.56379508972168
    6. '
' → logprob: -13.93879508972168
    7. '')' → logprob: -14.31379508972168
    8. ''s' → logprob: -15.18879508972168
    9. ' ' → logprob: -15.43879508972168
    10. '           ' → logprob: -15.56379508972168

Token 552: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.2014141082763672
    2. 'and' → logprob: -1.7014141082763672
    3. '                       ' → logprob: -14.826414108276367
    4. '                   ' → logprob: -15.951414108276367
    5. '                           ' → logprob: -16.201414108276367
    6. ' ' → logprob: -16.451414108276367
    7. '               ' → logprob: -16.826414108276367
    8. '                               ' → logprob: -17.451414108276367
    9. '	and' → logprob: -17.701414108276367
    10. '                ' → logprob: -17.951414108276367

Token 553: ' pb' (ID: 31582)
  Prédit: 'pb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pb' → logprob: -8.97155623533763e-05
    2. ' pb' → logprob: -9.375089645385742
    3. 'bb' → logprob: -12.250089645385742
    4. 'pp' → logprob: -18.000089645385742
    5. '_pb' → logprob: -18.250089645385742
    6. '(pb' → logprob: -18.500089645385742
    7. 'pbs' → logprob: -18.875089645385742
    8. '
' → logprob: -19.125089645385742
    9. 'pf' → logprob: -19.750089645385742
    10. 'pc' → logprob: -19.750089645385742

Token 554: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.1269317865371704
    2. '!=' → logprob: -2.126931667327881
    3. ')!=' → logprob: -13.751932144165039
    4. '!='' → logprob: -14.251932144165039
    5. ' ' → logprob: -14.751932144165039
    6. '```' → logprob: -15.251932144165039
    7. '                               ' → logprob: -15.501932144165039
    8. '!==' → logprob: -15.876932144165039
    9. '                           ' → logprob: -16.00193214416504
    10. ']!=' → logprob: -16.00193214416504

Token 555: ' bb' (ID: 32433)
  Prédit: 'bb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.0001238004770129919
    2. ' bb' → logprob: -9.000123977661133
    3. 'b' → logprob: -14.875123977661133
    4. '(bb' → logprob: -19.750123977661133
    5. '_bb' → logprob: -20.250123977661133
    6. ' ' → logprob: -20.750123977661133
    7. '.bb' → logprob: -20.750123977661133
    8. '   ' → logprob: -21.000123977661133
    9. 'bbs' → logprob: -21.875123977661133
    10. '    ' → logprob: -22.000123977661133

Token 556: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.14415940642356873
    2. ':' → logprob: -2.0191593170166016
    3. '               ' → logprob: -7.519159317016602
    4. '                       ' → logprob: -7.769159317016602
    5. '                               ' → logprob: -8.394159317016602
    6. '):
' → logprob: -9.394159317016602
    7. '                           ' → logprob: -9.894159317016602
    8. '                   ' → logprob: -10.269159317016602
    9. ',' → logprob: -10.519159317016602
    10. ':

' → logprob: -10.769159317016602

Token 557: '                               ' (ID: 2419)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.41091296076774597
    2. ':' → logprob: -1.7859129905700684
    3. '                               ' → logprob: -1.7859129905700684
    4. '                           ' → logprob: -7.410912990570068
    5. '               ' → logprob: -7.535912990570068
    6. '                       ' → logprob: -8.66091251373291
    7. ',' → logprob: -9.53591251373291
    8. ' and' → logprob: -9.78591251373291
    9. ':

' → logprob: -10.03591251373291
    10. ':return' → logprob: -10.03591251373291

Token 558: ' ok' (ID: 4763)
  Prédit: ' ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ok' → logprob: -0.38790181279182434
    2. 'ok' (adapté à ' ok') → logprob: -1.137901782989502
    3. '                                   ' → logprob: -7.387901782989502
    4. '
' → logprob: -8.38790225982666
    5. '                               ' → logprob: -9.13790225982666
    6. ' okay' → logprob: -10.01290225982666
    7. '	ok' → logprob: -11.26290225982666
    8. '                                       ' → logprob: -11.76290225982666
    9. 'Ok' → logprob: -13.13790225982666
    10. 'okay' → logprob: -13.63790225982666

Token 559: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10566382855176926
    2. '=False' → logprob: -2.480663776397705
    3. ' =' → logprob: -4.230663776397705
    4. '                               ' → logprob: -7.230663776397705
    5. '                                   ' → logprob: -7.480663776397705
    6. 'False' → logprob: -8.355664253234863
    7. '=True' → logprob: -8.605664253234863
    8. '==' → logprob: -8.855664253234863
    9. ':
' → logprob: -9.105664253234863
    10. ' False' → logprob: -10.105664253234863

Token 560: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0004306692280806601
    2. ' False' → logprob: -7.750430583953857
    3. '(False' → logprob: -17.375431060791016
    4. '=False' → logprob: -17.875431060791016
    5. '_false' → logprob: -21.625431060791016
    6. 'false' → logprob: -21.875431060791016
    7. '.False' → logprob: -22.375431060791016
    8. 'F' → logprob: -23.375431060791016
    9. '   ' → logprob: -23.625431060791016
    10. '0' → logprob: -23.625431060791016

Token 561: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.006447131279855967
    2. '                                   ' → logprob: -5.1314473152160645
    3. '                   ' → logprob: -9.506446838378906
    4. '
' → logprob: -9.631446838378906
    5. '                           ' → logprob: -9.756446838378906
    6. '               ' → logprob: -9.881446838378906
    7. '<|end|>' → logprob: -10.006446838378906
    8. '                                       ' → logprob: -10.131446838378906
    9. '                       ' → logprob: -10.131446838378906
    10. ':
' → logprob: -10.381446838378906

Token 562: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0003800296690315008
    2. '
' → logprob: -9.50037956237793
    3. '                                   ' → logprob: -9.50037956237793
    4. '               ' → logprob: -9.75037956237793
    5. '                       ' → logprob: -10.50037956237793
    6. '                           ' → logprob: -11.00037956237793
    7. ',' → logprob: -11.00037956237793
    8. ' and' → logprob: -11.12537956237793
    9. '                   ' → logprob: -11.25037956237793
    10. '```' → logprob: -11.37537956237793

Token 563: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.3964971899986267
    2. '                               ' → logprob: -1.1464972496032715
    3. ' break' → logprob: -4.8964972496032715
    4. '                                   ' → logprob: -6.7714972496032715
    5. '	break' → logprob: -7.7714972496032715
    6. '               ' → logprob: -8.521496772766113
    7. '                                       ' → logprob: -9.521496772766113
    8. '							' → logprob: -9.646496772766113
    9. '                           ' → logprob: -9.896496772766113
    10. '                       ' → logprob: -10.146496772766113

Token 564: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.8782317638397217
    2. '                               ' → logprob: -1.1282317638397217
    3. '                       ' → logprob: -1.5032317638397217
    4. '                           ' → logprob: -4.503232002258301
    5. '<|end|>' → logprob: -4.503232002258301
    6. '               ' → logprob: -5.003232002258301
    7. '
' → logprob: -5.503232002258301
    8. '```' → logprob: -6.503232002258301
    9. ',' → logprob: -6.628232002258301
    10. '           ' → logprob: -7.253232002258301

Token 565: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4811265766620636
    2. '                       ' → logprob: -1.2311265468597412
    3. '                           ' → logprob: -3.731126546859741
    4. '                               ' → logprob: -3.731126546859741
    5. '               ' → logprob: -3.981126546859741
    6. '           ' → logprob: -4.35612678527832
    7. '```' → logprob: -5.35612678527832
    8. ' if' → logprob: -6.23112678527832
    9. ',' → logprob: -6.73112678527832
    10. '       ' → logprob: -7.35612678527832

Token 566: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5500780940055847
    2. ' if' → logprob: -1.4250781536102295
    3. '                       ' → logprob: -1.9250781536102295
    4. '                   ' → logprob: -3.4250781536102295
    5. '               ' → logprob: -6.80007791519165
    6. '       ' → logprob: -6.92507791519165
    7. '           ' → logprob: -6.92507791519165
    8. 'continue' → logprob: -7.92507791519165
    9. '                           ' → logprob: -8.550078392028809
    10. '                               ' → logprob: -8.925078392028809

Token 567: ' ok' (ID: 4763)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.343270868062973
    2. ' not' → logprob: -1.8432708978652954
    3. 'not' → logprob: -2.718270778656006
    4. ' ok' → logprob: -2.718270778656006
    5. 'b' → logprob: -9.843271255493164
    6. '   ' → logprob: -9.968271255493164
    7. '(ok' → logprob: -10.218271255493164
    8. ' ' → logprob: -10.468271255493164
    9. 'len' → logprob: -11.530771255493164
    10. '    ' → logprob: -11.530771255493164

Token 568: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.09459583461284637
    2. ':
' → logprob: -3.2195959091186523
    3. ':' → logprob: -3.4695959091186523
    4. '                           ' → logprob: -4.469595909118652
    5. 'and' → logprob: -4.969595909118652
    6. '                       ' → logprob: -8.094595909118652
    7. '           ' → logprob: -8.469595909118652
    8. '                               ' → logprob: -9.594595909118652
    9. '                   ' → logprob: -10.094595909118652
    10. ':

' → logprob: -10.469595909118652

Token 569: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.026029936969280243
    2. ' and' → logprob: -3.7760298252105713
    3. ':
' → logprob: -6.90103006362915
    4. '                       ' → logprob: -6.90103006362915
    5. '                               ' → logprob: -8.526029586791992
    6. ':' → logprob: -8.901029586791992
    7. ',' → logprob: -9.151029586791992
    8. '                   ' → logprob: -9.401029586791992
    9. 'and' → logprob: -9.776029586791992
    10. '                            
' → logprob: -10.026029586791992

Token 570: ' y' (ID: 342)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1129997968673706
    2. '#' → logprob: -2.11299991607666
    3. ' y' → logprob: -2.11299991607666
    4. 'y' (adapté à ' y') → logprob: -2.11299991607666
    5. '                           ' → logprob: -2.36299991607666
    6. ' #' → logprob: -2.48799991607666
    7. 'if' → logprob: -2.86299991607666
    8. '                               ' → logprob: -2.98799991607666
    9. '                             ' → logprob: -4.86299991607666
    10. '0' → logprob: -6.23799991607666

Token 571: ' =' (ID: 314)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.0028555169701576233
    2. 'b' → logprob: -6.12785530090332
    3. '_bits' → logprob: -7.87785530090332
    4. ' bits' → logprob: -8.87785530090332
    5. 'bit' → logprob: -11.00285530090332
    6. '
' → logprob: -11.12785530090332
    7. '   ' → logprob: -11.25285530090332
    8. '(bits' → logprob: -11.25285530090332
    9. ' =' → logprob: -11.37785530090332
    10. '  ' → logprob: -11.62785530090332

Token 572: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.048568516969680786
    2. 'int' → logprob: -3.5485684871673584
    3. 'any' → logprob: -5.4235687255859375
    4. '[b' → logprob: -5.6735687255859375
    5. '[' → logprob: -5.7985687255859375
    6. ' b' → logprob: -5.7985687255859375
    7. '[int' → logprob: -7.0485687255859375
    8. ' int' → logprob: -7.0485687255859375
    9. ' [' → logprob: -7.4235687255859375
    10. 'sum' → logprob: -7.9235687255859375

Token 573: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00012678056373260915
    2. '3' → logprob: -9.000126838684082
    3. '```' → logprob: -13.125126838684082
    4. '(' → logprob: -14.875126838684082
    5. ''[' → logprob: -15.125126838684082
    6. ' [' → logprob: -16.000125885009766
    7. '[
' → logprob: -16.125125885009766
    8. '4' → logprob: -16.500125885009766
    9. ' ' → logprob: -16.500125885009766
    10. '       ' → logprob: -16.750125885009766

Token 574: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.13388703338569e-06
    2. ' ' → logprob: -11.750009536743164
    3. '[' → logprob: -15.062509536743164
    4. '   ' → logprob: -15.687509536743164
    5. '  ' → logprob: -16.125009536743164
    6. '```' → logprob: -16.562509536743164
    7. ']' → logprob: -16.875009536743164
    8. '"' → logprob: -16.875009536743164
    9. '     ' → logprob: -17.125009536743164
    10. '34' → logprob: -17.312509536743164

Token 575: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004344190936535597
    2. '6' → logprob: -6.0043439865112305
    3. '4' → logprob: -7.0043439865112305
    4. ']' → logprob: -7.3793439865112305
    5. '5' → logprob: -8.37934398651123
    6. '7' → logprob: -10.37934398651123
    7. ':]' → logprob: -10.50434398651123
    8. '1' → logprob: -11.50434398651123
    9. ' :' → logprob: -12.00434398651123
    10. '],' → logprob: -12.12934398651123

Token 576: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -7.896309739408025e-07
    2. '6' → logprob: -14.750000953674316
    3. '-' → logprob: -16.125
    4. '```' → logprob: -16.625
    5. ' ' → logprob: -16.875
    6. '
' → logprob: -17.25
    7. '8' → logprob: -17.75
    8. '5' → logprob: -18.0
    9. '07' → logprob: -18.25
    10. '' → logprob: -18.625

Token 577: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.22592392563819885
    2. ']' → logprob: -1.6009238958358765
    3. ']:
' → logprob: -8.350923538208008
    4. ']
' → logprob: -9.600923538208008
    5. ']!=' → logprob: -9.850923538208008
    6. '                       ' → logprob: -10.475923538208008
    7. '']
' → logprob: -10.850923538208008
    8. '                   ' → logprob: -10.975923538208008
    9. ']

' → logprob: -11.100923538208008
    10. '                           ' → logprob: -11.225923538208008

Token 578: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.08679300546646118
    2. '                               ' → logprob: -3.8367929458618164
    3. '                       ' → logprob: -3.8367929458618164
    4. '
' → logprob: -4.086792945861816
    5. ' and' → logprob: -4.461792945861816
    6. ' if' → logprob: -5.461792945861816
    7. 'if' → logprob: -5.836792945861816
    8. '                   ' → logprob: -6.586792945861816
    9. '           ' → logprob: -7.711792945861816
    10. 'and' → logprob: -7.836792945861816

Token 579: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1274721771478653
    2. ' if' → logprob: -2.127472162246704
    3. '                           ' → logprob: -8.127471923828125
    4. '                               ' → logprob: -8.377471923828125
    5. '                                   ' → logprob: -12.252471923828125
    6. ' ' → logprob: -12.752471923828125
    7. '   ' → logprob: -13.377471923828125
    8. ' not' → logprob: -13.377471923828125
    9. 'not' → logprob: -13.627471923828125
    10. '  ' → logprob: -13.877471923828125

Token 580: ' y' (ID: 342)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0032231067307293415
    2. ' if' → logprob: -5.753222942352295
    3. '                           ' → logprob: -11.378223419189453
    4. '
' → logprob: -11.503223419189453
    5. 'not' → logprob: -11.753223419189453
    6. 'any' → logprob: -11.878223419189453
    7. 'int' → logprob: -13.128223419189453
    8. '                               ' → logprob: -13.378223419189453
    9. ' not' → logprob: -13.503223419189453
    10. 'all' → logprob: -14.253223419189453

Token 581: ' bits' (ID: 18189)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.2164286971092224
    2. '!=' → logprob: -1.8414287567138672
    3. 'bits' → logprob: -4.216428756713867
    4. '_bits' → logprob: -4.966428756713867
    5. ' ==' → logprob: -5.091428756713867
    6. '==' → logprob: -5.341428756713867
    7. '!='' → logprob: -7.341428756713867
    8. ' bits' → logprob: -7.466428756713867
    9. '=' → logprob: -7.591428756713867
    10. ' ' → logprob: -7.966428756713867

Token 582: ' must' (ID: 2804)
  Prédit: ' !='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.17951713502407074
    2. '!=' → logprob: -2.3045170307159424
    3. '.count' → logprob: -3.1795170307159424
    4. '==' → logprob: -4.4295172691345215
    5. ' ==' → logprob: -5.3045172691345215
    6. '!='' → logprob: -6.1795172691345215
    7. ')' → logprob: -6.6795172691345215
    8. 'count' → logprob: -6.9295172691345215
    9. ' not' → logprob: -6.9295172691345215
    10. 'not' → logprob: -7.9295172691345215

Token 583: ' have' (ID: 679)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.20387835800647736
    2. 'not' → logprob: -1.703878402709961
    3. ' !=' → logprob: -6.453878402709961
    4. ' be' → logprob: -8.203878402709961
    5. '!=' → logprob: -8.203878402709961
    6. ' have' → logprob: -8.828878402709961
    7. 'n't' → logprob: -10.203878402709961
    8. 'any' → logprob: -10.203878402709961
    9. 'have' → logprob: -10.578878402709961
    10. ' contain' → logprob: -10.953878402709961

Token 584: ' at' (ID: 540)
  Prédit: 'at'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'at' → logprob: -0.817977786064148
    2. ' at' → logprob: -0.817977786064148
    3. ''' → logprob: -2.5679779052734375
    4. 'any' → logprob: -3.3179779052734375
    5. ''at' → logprob: -6.8179779052734375
    6. ' '' → logprob: -6.8179779052734375
    7. '1' → logprob: -6.9429779052734375
    8. ' any' → logprob: -7.3179779052734375
    9. 'one' → logprob: -8.942977905273438
    10. ''b' → logprob: -9.067977905273438

Token 585: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.1627522110939026
    2. ' least' → logprob: -1.9127521514892578
    3. 'lease' → logprob: -6.412752151489258
    4. 'east' → logprob: -8.037752151489258
    5. ''' → logprob: -8.787752151489258
    6. 'at' → logprob: -9.287752151489258
    7. 'list' → logprob: -9.787752151489258
    8. 'Least' → logprob: -9.912752151489258
    9. '1' → logprob: -10.037752151489258
    10. 'lest' → logprob: -10.162752151489258

Token 586: ' one' (ID: 1001)
  Prédit: ' one'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' one' → logprob: -0.16048772633075714
    2. 'one' → logprob: -1.9104877710342407
    3. '1' → logprob: -8.28548812866211
    4. 'One' → logprob: -11.91048812866211
    5. '_one' → logprob: -12.53548812866211
    6. ' ' → logprob: -13.91048812866211
    7. ''' → logprob: -16.03548812866211
    8. ''s' → logprob: -17.91048812866211
    9. '
' → logprob: -18.03548812866211
    10. '```' → logprob: -18.78548812866211

Token 587: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.008470019325613976
    2. ' '' → logprob: -5.008470058441162
    3. '1' → logprob: -6.508470058441162
    4. '`' → logprob: -9.508469581604004
    5. '=='' → logprob: -10.008469581604004
    6. ''y' → logprob: -10.258469581604004
    7. ' ==' → logprob: -10.508469581604004
    8. 'one' → logprob: -11.008469581604004
    9. ' ' → logprob: -11.383469581604004
    10. '='' → logprob: -11.633469581604004

Token 588: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ''' → logprob: -13.12500286102295
    3. ' ' → logprob: -14.25000286102295
    4. 'one' → logprob: -17.875001907348633
    5. ''s' → logprob: -18.125001907348633
    6. '```' → logprob: -18.875001907348633
    7. '
' → logprob: -19.125001907348633
    8. '`' → logprob: -19.125001907348633
    9. '"' → logprob: -19.625001907348633
    10. '')' → logprob: -20.250001907348633

Token 589: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.010816117748618126
    2. '')' → logprob: -4.7608160972595215
    3. ' in' → logprob: -7.1358160972595215
    4. ''
' → logprob: -7.5108160972595215
    5. ''.' → logprob: -8.01081657409668
    6. '']' → logprob: -8.63581657409668
    7. '',' → logprob: -9.51081657409668
    8. '')
' → logprob: -9.88581657409668
    9. '':
' → logprob: -10.38581657409668
    10. ')' → logprob: -11.01081657409668

Token 590: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.022330056875944138
    2. ' if' → logprob: -4.022330284118652
    3. 'if' → logprob: -5.897330284118652
    4. '           ' → logprob: -7.647330284118652
    5. '                       ' → logprob: -8.272330284118652
    6. '
' → logprob: -8.397330284118652
    7. '                               ' → logprob: -9.147330284118652
    8. ' and' → logprob: -9.147330284118652
    9. '                   ' → logprob: -9.397330284118652
    10. ' or' → logprob: -9.897330284118652

Token 591: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.1270056962966919
    2. ' if' → logprob: -2.1270055770874023
    3. '                           ' → logprob: -9.627005577087402
    4. '                               ' → logprob: -11.752005577087402
    5. '
' → logprob: -13.752005577087402
    6. ' ' → logprob: -13.752005577087402
    7. '                                   ' → logprob: -14.502005577087402
    8. '   ' → logprob: -14.877005577087402
    9. '  ' → logprob: -15.502005577087402
    10. 'If' → logprob: -16.00200653076172

Token 592: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0209669042378664
    2. ''y' → logprob: -4.89596700668335
    3. ' '' → logprob: -5.02096700668335
    4. 'any' → logprob: -5.27096700668335
    5. 'y' → logprob: -7.27096700668335
    6. ' y' → logprob: -7.89596700668335
    7. ''any' → logprob: -8.020966529846191
    8. ' any' → logprob: -9.145966529846191
    9. '   ' → logprob: -12.395966529846191
    10. '('' → logprob: -12.395966529846191

Token 593: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.008129963040119e-06
    2. ''' → logprob: -12.750003814697266
    3. ''.' → logprob: -14.125003814697266
    4. '0' → logprob: -15.000003814697266
    5. ' ' → logprob: -17.500003814697266
    6. ''''' → logprob: -18.375003814697266
    7. 'one' → logprob: -18.625003814697266
    8. '''.' → logprob: -18.875003814697266
    9. '"' → logprob: -19.000003814697266
    10. '''' → logprob: -19.125003814697266

Token 594: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.11888323724269867
    2. ' in' → logprob: -2.4938831329345703
    3. ''in' → logprob: -4.11888313293457
    4. 'in' → logprob: -4.36888313293457
    5. '"' → logprob: -8.36888313293457
    6. ' not' → logprob: -9.61888313293457
    7. ''''' → logprob: -9.74388313293457
    8. ')' → logprob: -9.86888313293457
    9. '')' → logprob: -10.11888313293457
    10. 'not' → logprob: -10.61888313293457

Token 595: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07017505913972855
    2. 'in' → logprob: -2.6951751708984375
    3. ' not' → logprob: -9.070175170898438
    4. ')' → logprob: -9.195175170898438
    5. 'not' → logprob: -11.570175170898438
    6. ']' → logprob: -11.820175170898438
    7. '
' → logprob: -13.570175170898438
    8. ' ' → logprob: -14.070175170898438
    9. ''in' → logprob: -14.695175170898438
    10. '	in' → logprob: -15.195175170898438

Token 596: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00033546582562848926
    2. ' y' → logprob: -8.000335693359375
    3. '[y' → logprob: -17.500335693359375
    4. ''y' → logprob: -17.875335693359375
    5. '(y' → logprob: -19.000335693359375
    6. ' ' → logprob: -19.000335693359375
    7. '
' → logprob: -19.250335693359375
    8. '[' → logprob: -19.625335693359375
    9. '`' → logprob: -19.875335693359375
    10. ')y' → logprob: -19.875335693359375

Token 597: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2474246472120285
    2. ':' → logprob: -1.622424602508545
    3. '):
' → logprob: -5.247424602508545
    4. '):' → logprob: -5.497424602508545
    5. '                           ' → logprob: -5.497424602508545
    6. '                       ' → logprob: -5.872424602508545
    7. ' and' → logprob: -5.872424602508545
    8. '                               ' → logprob: -6.497424602508545
    9. '':' → logprob: -8.747425079345703
    10. '                   ' → logprob: -8.747425079345703

Token 598: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.03549664095044136
    2. ':
' → logprob: -3.410496711730957
    3. '                       ' → logprob: -7.535496711730957
    4. ':' → logprob: -7.660496711730957
    5. '                           ' → logprob: -7.785496711730957
    6. ' and' → logprob: -8.410496711730957
    7. '):
' → logprob: -9.285496711730957
    8. '                              ' → logprob: -10.035496711730957
    9. '                   ' → logprob: -11.285496711730957
    10. '               ' → logprob: -11.285496711730957

Token 599: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.19344881176948547
    2. ' count' → logprob: -2.318448781967163
    3. '                               ' → logprob: -2.568448781967163
    4. '                                   ' → logprob: -8.068449020385742
    5. 'continue' → logprob: -8.568449020385742
    6. '
' → logprob: -9.318449020385742
    7. ' continue' → logprob: -10.443449020385742
    8. ' ' → logprob: -10.568449020385742
    9. '                           ' → logprob: -10.693449020385742
    10. '               ' → logprob: -10.693449020385742

Token 600: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.014165744185447693
    2. '+=' → logprob: -4.264165878295898
    3. '+' → logprob: -13.639165878295898
    4. ']+=' → logprob: -15.139165878295898
    5. ' +' → logprob: -15.764165878295898
    6. '=' → logprob: -16.2641658782959
    7. ' =' → logprob: -16.6391658782959
    8. '<|end|>' → logprob: -16.6391658782959
    9. ' ' → logprob: -16.7641658782959
    10. '```' → logprob: -16.8891658782959

Token 601: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.005234121344983578
    2. ' ' → logprob: -5.255234241485596
    3. 'count' → logprob: -15.005233764648438
    4. '```' → logprob: -17.130233764648438
    5. ' count' → logprob: -17.255233764648438
    6. '   ' → logprob: -17.755233764648438
    7. '0' → logprob: -18.692733764648438
    8. '
' → logprob: -18.942733764648438
    9. '+' → logprob: -19.067733764648438
    10. '  ' → logprob: -19.255233764648438

Token 602: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.1008713702030946e-06
    2. ' ' → logprob: -13.250001907348633
    3. 'count' → logprob: -15.250001907348633
    4. 'b' → logprob: -18.375001907348633
    5. '0' → logprob: -18.937501907348633
    6. '```' → logprob: -19.250001907348633
    7. '100' → logprob: -19.500001907348633
    8. '2' → logprob: -19.625001907348633
    9. '   ' → logprob: -19.812501907348633
    10. 'int' → logprob: -19.875001907348633

Token 603: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10783157497644424
    2. '               ' → logprob: -2.9828314781188965
    3. '                   ' → logprob: -3.7328314781188965
    4. '           ' → logprob: -4.2328314781188965
    5. '<|end|>' → logprob: -4.6078314781188965
    6. '       ' → logprob: -6.4828314781188965
    7. '<|end|>' → logprob: -8.482831954956055
    8. '                       ' → logprob: -8.607831954956055
    9. '  
' → logprob: -8.732831954956055
    10. '```' → logprob: -9.357831954956055

Token 604: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.4005609154701233
    2. '               ' → logprob: -1.4005608558654785
    3. '
' → logprob: -2.7755608558654785
    4. '           ' → logprob: -4.0255608558654785
    5. '                       ' → logprob: -7.0255608558654785
    6. '<|end|>' → logprob: -7.1505608558654785
    7. '       ' → logprob: -7.7755608558654785
    8. '                           ' → logprob: -8.025561332702637
    9. '```' → logprob: -8.650561332702637
    10. '                ' → logprob: -9.275561332702637

Token 605: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.3787003457546234
    2. '
' → logprob: -1.2537003755569458
    3. '       ' → logprob: -4.253700256347656
    4. '           ' → logprob: -5.003700256347656
    5. '               ' → logprob: -5.003700256347656
    6. 'return' → logprob: -7.503700256347656
    7. '   ' → logprob: -7.628700256347656
    8. '                       ' → logprob: -8.003700256347656
    9. ' return' → logprob: -8.253700256347656
    10. '    
' → logprob: -8.503700256347656

Token 606: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.00018542143516242504
    2. ' count' → logprob: -8.625185012817383
    3. 'length' → logprob: -13.750185012817383
    4. '(count' → logprob: -13.875185012817383
    5. 'len' → logprob: -14.125185012817383
    6. 'not' → logprob: -14.500185012817383
    7. '   ' → logprob: -14.750185012817383
    8. ' ' → logprob: -15.000185012817383
    9. 'True' → logprob: -15.125185012817383
    10. 'x' → logprob: -15.125185012817383

Token 607: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.1008557677268982
    2. '>' → logprob: -2.350855827331543
    3. ' ==' → logprob: -7.850855827331543
    4. '==' → logprob: -8.975855827331543
    5. '<|end|>' → logprob: -9.725855827331543
    6. ')' → logprob: -11.225855827331543
    7. '=' → logprob: -11.475855827331543
    8. ':' → logprob: -11.600855827331543
    9. ')>' → logprob: -11.850855827331543
    10. ' !=' → logprob: -11.975855827331543

Token 608: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.029751067981123924
    2. ' ' → logprob: -3.5297510623931885
    3. '   ' → logprob: -15.27975082397461
    4. '=' → logprob: -16.27975082397461
    5. '                   ' → logprob: -16.27975082397461
    6. '                       ' → logprob: -17.27975082397461
    7. '<|end|>' → logprob: -17.40475082397461
    8. '```' → logprob: -17.52975082397461
    9. '>' → logprob: -18.02975082397461
    10. '  ' → logprob: -18.15475082397461

Token 609: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -18.250045776367188
    4. '<|end|>' → logprob: -18.375045776367188
    5. '```' → logprob: -19.500045776367188
    6. '۰' → logprob: -20.250045776367188
    7. '=' → logprob: -20.625045776367188
    8. '>' → logprob: -20.875045776367188
    9. '  ' → logprob: -20.875045776367188
    10. '  ' → logprob: -21.000045776367188

Token 610: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.32357361912727356
    2. '                       ' → logprob: -1.5735735893249512
    3. ':
' → logprob: -2.698573589324951
    4. '):
' → logprob: -7.948573589324951
    5. '):' → logprob: -8.07357406616211
    6. ',' → logprob: -8.07357406616211
    7. '                           ' → logprob: -8.19857406616211
    8. '                   ' → logprob: -8.44857406616211
    9. '               ' → logprob: -9.32357406616211
    10. ' and' → logprob: -9.44857406616211

Token 611: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00319304340519011
    2. '                   ' → logprob: -6.253192901611328
    3. '           ' → logprob: -7.253192901611328
    4. '               ' → logprob: -8.003192901611328
    5. '       ' → logprob: -9.128192901611328
    6. '                           ' → logprob: -9.503192901611328
    7. 'res' → logprob: -11.503192901611328
    8. '                               ' → logprob: -11.878192901611328
    9. ' res' → logprob: -12.003192901611328
    10. ',' → logprob: -12.753192901611328

Token 612: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.05150943994522095
    2. ' res' → logprob: -3.051509380340576
    3. '                       ' → logprob: -6.051509380340576
    4. '           ' → logprob: -8.301509857177734
    5. '                           ' → logprob: -8.426509857177734
    6. '               ' → logprob: -10.176509857177734
    7. '                   ' → logprob: -10.676509857177734
    8. '   ' → logprob: -11.176509857177734
    9. '       ' → logprob: -11.801509857177734
    10. '                               ' → logprob: -12.051509857177734

Token 613: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00023810577113181353
    2. '.' → logprob: -8.375238418579102
    3. '.app' → logprob: -13.250238418579102
    4. ' .' → logprob: -13.375238418579102
    5. '.Append' → logprob: -13.625238418579102
    6. 'Append' → logprob: -13.875238418579102
    7. 'append' → logprob: -14.000238418579102
    8. '.extend' → logprob: -15.250238418579102
    9. ').' → logprob: -15.375238418579102
    10. '.add' → logprob: -15.625238418579102

Token 614: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0010403135092929006
    2. '(' → logprob: -6.876040458679199
    3. ' ((' → logprob: -12.5010404586792
    4. '(
' → logprob: -13.6260404586792
    5. '(((' → logprob: -14.0010404586792
    6. ' ' → logprob: -14.1260404586792
    7. '(('' → logprob: -15.2510404586792
    8. ' (' → logprob: -15.5010404586792
    9. '```' → logprob: -15.5010404586792
    10. '   ' → logprob: -16.251039505004883

Token 615: 'length' (ID: 7914)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03816932439804077
    2. 'length' → logprob: -3.2881693840026855
    3. ' length' → logprob: -9.413168907165527
    4. ' ' → logprob: -10.038168907165527
    5. '   ' → logprob: -14.038168907165527
    6. '(length' → logprob: -14.038168907165527
    7. ',length' → logprob: -15.038168907165527
    8. '           ' → logprob: -15.788168907165527
    9. '[length' → logprob: -16.538169860839844
    10. '               ' → logprob: -17.038169860839844

Token 616: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.259079363080673e-05
    2. ',count' → logprob: -11.625012397766113
    3. ',
' → logprob: -12.750012397766113
    4. '‌,' → logprob: -15.500012397766113
    5. ' ,' → logprob: -15.625012397766113
    6. ',

' → logprob: -16.62501335144043
    7. ',c' → logprob: -16.75001335144043
    8. '[count' → logprob: -17.25001335144043
    9. ',{
' → logprob: -18.00001335144043
    10. '),' → logprob: -18.12501335144043

Token 617: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.023246407508850098
    2. ' count' → logprob: -3.7732462882995605
    3. '(count' → logprob: -14.023246765136719
    4. '[count' → logprob: -16.02324676513672
    5. ',count' → logprob: -17.77324676513672
    6. ')' → logprob: -18.64824676513672
    7. '$count' → logprob: -18.89824676513672
    8. '                   ' → logprob: -19.39824676513672
    9. '	count' → logprob: -19.39824676513672
    10. '                       ' → logprob: -19.77324676513672

Token 618: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.004087066277861595
    2. '))
' → logprob: -5.504086971282959
    3. '                   ' → logprob: -12.129087448120117
    4. '               ' → logprob: -13.754087448120117
    5. ' ))' → logprob: -13.754087448120117
    6. '           ' → logprob: -14.879087448120117
    7. ')))' → logprob: -15.379087448120117
    8. '                       ' → logprob: -15.629087448120117
    9. ')' → logprob: -15.879087448120117
    10. '))
' → logprob: -15.879087448120117

Token 619: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01861540600657463
    2. '<|end|>' → logprob: -4.268615245819092
    3. '               ' → logprob: -6.143615245819092
    4. ')' → logprob: -7.268615245819092
    5. '   ' → logprob: -7.518615245819092
    6. '```' → logprob: -8.51861572265625
    7. 'elif' → logprob: -8.64361572265625
    8. '<|end|>' → logprob: -8.64361572265625
    9. '           ' → logprob: -8.89361572265625
    10. '	' → logprob: -9.76861572265625

Token 620: ' else' (ID: 1203)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5747095942497253
    2. '               ' → logprob: -0.9497095942497253
    3. ' else' → logprob: -3.82470965385437
    4. 'else' (adapté à ' else') → logprob: -3.94970965385437
    5. '       ' → logprob: -5.199709415435791
    6. 'elif' → logprob: -5.824709415435791
    7. ' elif' → logprob: -7.699709415435791
    8. ')' → logprob: -9.07470989227295
    9. '   ' → logprob: -10.57470989227295
    10. '```' → logprob: -10.94970989227295

Token 621: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.19859984517097473
    2. ':' → logprob: -1.8235998153686523
    3. '                   ' → logprob: -4.698599815368652
    4. ' if' → logprob: -4.823599815368652
    5. '               ' → logprob: -7.448599815368652
    6. 'if' → logprob: -7.698599815368652
    7. '           ' → logprob: -9.073599815368652
    8. '                       ' → logprob: -9.573599815368652
    9. ':

' → logprob: -9.698599815368652
    10. ',' → logprob: -9.823599815368652

Token 622: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.5200906991958618
    2. ' if' → logprob: -1.3950906991958618
    3. 'if' → logprob: -2.1450905799865723
    4. '#' → logprob: -3.6450905799865723
    5. '               ' → logprob: -5.145090579986572
    6. ' #' → logprob: -5.270090579986572
    7. '           ' → logprob: -6.270090579986572
    8. '```' → logprob: -7.270090579986572
    9. '                       ' → logprob: -8.14509105682373
    10. '                    
' → logprob: -8.64509105682373

Token 623: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6380038261413574
    2. 'if' → logprob: -0.7630038261413574
    3. '#' (adapté à ' #') → logprob: -5.513003826141357
    4. ' #' → logprob: -7.388003826141357
    5. '
' → logprob: -8.638004302978516
    6. ' y' → logprob: -8.763004302978516
    7. '                       ' → logprob: -8.888004302978516
    8. 'y' → logprob: -9.263004302978516
    9. '                   ' → logprob: -9.513004302978516
    10. ' all' → logprob: -10.638004302978516

Token 624: ' y' (ID: 342)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.006880784407258034
    2. '#' → logprob: -5.881880760192871
    3. ' if' → logprob: -6.506880760192871
    4. 'y' → logprob: -6.881880760192871
    5. 'all' → logprob: -6.881880760192871
    6. 'any' → logprob: -8.381880760192871
    7. '                   ' → logprob: -8.631880760192871
    8. 'not' → logprob: -9.881880760192871
    9. '                       ' → logprob: -11.131880760192871
    10. ' all' → logprob: -11.131880760192871

Token 625: 'bits' (ID: 24043)
  Prédit: 'bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.005601903423666954
    2. 'if' → logprob: -5.63060188293457
    3. '_bits' → logprob: -7.25560188293457
    4. 'all' → logprob: -7.38060188293457
    5. 'count' → logprob: -9.25560188293457
    6. 'y' → logprob: -9.50560188293457
    7. ' =' → logprob: -9.50560188293457
    8. ' !=' → logprob: -9.88060188293457
    9. ' bits' → logprob: -9.88060188293457
    10. 'value' → logprob: -10.13060188293457

Token 626: ' known' (ID: 5542)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.857293963432312
    2. '=' → logprob: -1.232293963432312
    3. '!=' → logprob: -1.607293963432312
    4. ' !=' → logprob: -2.8572940826416016
    5. '                   ' → logprob: -4.607294082641602
    6. 'not' → logprob: -4.607294082641602
    7. ' not' → logprob: -6.357294082641602
    8. 'all' → logprob: -6.857294082641602
    9. 'sum' → logprob: -7.607294082641602
    10. ' all' → logprob: -7.607294082641602

Token 627: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4523058235645294
    2. '                   ' → logprob: -1.452305793762207
    3. '=' → logprob: -3.202305793762207
    4. 'not' → logprob: -3.327305793762207
    5. 'if' → logprob: -3.952305793762207
    6. ' if' → logprob: -4.827305793762207
    7. 'all' → logprob: -4.952305793762207
    8. 'and' → logprob: -5.077305793762207
    9. ' all' → logprob: -5.952305793762207
    10. ' not' → logprob: -6.077305793762207

Token 628: ' check' (ID: 2371)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6334983706474304
    2. ' if' → logprob: -0.7584983706474304
    3. '                   ' → logprob: -7.758498191833496
    4. '                       ' → logprob: -8.383498191833496
    5. ' not' → logprob: -8.883498191833496
    6. 'not' → logprob: -9.758498191833496
    7. ' all' → logprob: -11.883498191833496
    8. '#' → logprob: -12.133498191833496
    9. ' y' → logprob: -12.258498191833496
    10. 'any' → logprob: -12.508498191833496

Token 629: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.06593263149261475
    2. 'any' → logprob: -2.8159327507019043
    3. ' if' → logprob: -6.065932750701904
    4. 'not' → logprob: -7.065932750701904
    5. 'all' → logprob: -8.190932273864746
    6. ' any' → logprob: -9.190932273864746
    7. '                   ' → logprob: -9.565932273864746
    8. ''any' → logprob: -9.940932273864746
    9. '   ' → logprob: -10.065932273864746
    10. ''' → logprob: -10.065932273864746

Token 630: ' at' (ID: 540)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4951566159725189
    2. 'any' → logprob: -0.9951566457748413
    3. ''any' → logprob: -4.370156764984131
    4. ' any' → logprob: -5.120156764984131
    5. ' '' → logprob: -6.495156764984131
    6. ''all' → logprob: -8.370156288146973
    7. 'all' → logprob: -8.495156288146973
    8. ''y' → logprob: -8.870156288146973
    9. 'set' → logprob: -9.870156288146973
    10. 'not' → logprob: -11.120156288146973

Token 631: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.029848145321011543
    2. ' least' → logprob: -3.529848098754883
    3. ''' → logprob: -10.279848098754883
    4. '_le' → logprob: -10.654848098754883
    5. 'lest' → logprob: -11.779848098754883
    6. 'any' → logprob: -11.904848098754883
    7. 'list' → logprob: -11.904848098754883
    8. '   ' → logprob: -12.654848098754883
    9. '
' → logprob: -12.654848098754883
    10. '  ' → logprob: -13.029848098754883

Token 632: ' one' (ID: 1001)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'one' → logprob: -0.4803004264831543
    2. ' one' → logprob: -0.9803004264831543
    3. ''' → logprob: -5.105300426483154
    4. '1' → logprob: -9.480300903320312
    5. ' '' → logprob: -10.355300903320312
    6. 'One' → logprob: -11.480300903320312
    7. ' ' → logprob: -12.105300903320312
    8. '_one' → logprob: -12.230300903320312
    9. '
' → logprob: -12.980300903320312
    10. 'True' → logprob: -13.480300903320312

Token 633: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.12827810645103455
    2. 'y' → logprob: -2.6282780170440674
    3. ''y' → logprob: -3.8782780170440674
    4. ' y' → logprob: -4.6282782554626465
    5. ' '' → logprob: -4.8782782554626465
    6. '1' → logprob: -4.8782782554626465
    7. ' ==' → logprob: -7.0032782554626465
    8. ''b' → logprob: -7.8782782554626465
    9. '==' → logprob: -8.503277778625488
    10. 'bit' → logprob: -8.753277778625488

Token 634: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0019289902411401272
    2. ''' → logprob: -6.251928806304932
    3. 'one' → logprob: -16.001928329467773
    4. 'y' → logprob: -16.501928329467773
    5. '"' → logprob: -17.251928329467773
    6. ' ' → logprob: -17.501928329467773
    7. '0' → logprob: -17.501928329467773
    8. '`' → logprob: -17.626928329467773
    9. ''y' → logprob: -17.626928329467773
    10. ''''' → logprob: -18.126928329467773

Token 635: ''
' (ID: 2207)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2813718914985657
    2. ' in' → logprob: -1.531371831893921
    3. 'in' → logprob: -3.656371831893921
    4. ''in' → logprob: -6.6563720703125
    5. ' not' → logprob: -7.1563720703125
    6. ')' → logprob: -7.9063720703125
    7. '                   ' → logprob: -9.0313720703125
    8. ' y' → logprob: -9.2813720703125
    9. '')' → logprob: -9.5313720703125
    10. 'not' → logprob: -9.5313720703125

Token 636: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00010509284038562328
    2. 'if' → logprob: -10.000104904174805
    3. ' if' → logprob: -10.125104904174805
    4. '               ' → logprob: -11.750104904174805
    5. '                       ' → logprob: -12.625104904174805
    6. '```' → logprob: -12.625104904174805
    7. ',' → logprob: -13.875104904174805
    8. '           ' → logprob: -14.250104904174805
    9. '				' → logprob: -14.250104904174805
    10. '                    
' → logprob: -14.750104904174805

Token 637: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0059801083989441395
    2. ' if' → logprob: -5.130980014801025
    3. '                   ' → logprob: -10.005980491638184
    4. '                       ' → logprob: -12.380980491638184
    5. '
' → logprob: -14.380980491638184
    6. 'any' → logprob: -14.630980491638184
    7. '       ' → logprob: -15.255980491638184
    8. '   ' → logprob: -15.505980491638184
    9. '                    
' → logprob: -15.630980491638184
    10. 'elif' → logprob: -15.630980491638184

Token 638: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.018139293417334557
    2. 'any' → logprob: -4.268139362335205
    3. ''any' → logprob: -5.768139362335205
    4. ' '' → logprob: -7.268139362335205
    5. ' any' → logprob: -9.018138885498047
    6. ''y' → logprob: -11.268138885498047
    7. '('' → logprob: -12.768138885498047
    8. '   ' → logprob: -13.518138885498047
    9. ''at' → logprob: -13.893138885498047
    10. '1' → logprob: -14.018138885498047

Token 639: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007107630372047424
    2. ''' → logprob: -7.250710964202881
    3. ''.' → logprob: -14.000710487365723
    4. 'any' → logprob: -16.75071144104004
    5. 'one' → logprob: -17.12571144104004
    6. ' '' → logprob: -18.25071144104004
    7. ''in' → logprob: -18.50071144104004
    8. ' ' → logprob: -18.87571144104004
    9. '''' → logprob: -20.12571144104004
    10. '('' → logprob: -20.25071144104004

Token 640: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.7718938589096069
    2. ' in' → logprob: -0.7718938589096069
    3. 'in' → logprob: -2.8968939781188965
    4. ''in' → logprob: -3.8968939781188965
    5. ')' → logprob: -8.896893501281738
    6. ' not' → logprob: -10.146893501281738
    7. '')' → logprob: -11.646893501281738
    8. '"' → logprob: -11.646893501281738
    9. ''''' → logprob: -11.896893501281738
    10. 'not' → logprob: -12.021893501281738

Token 641: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029761141166090965
    2. 'in' → logprob: -3.5297610759735107
    3. ')' → logprob: -11.90476131439209
    4. ' not' → logprob: -12.90476131439209
    5. ''in' → logprob: -14.40476131439209
    6. ' ' → logprob: -14.65476131439209
    7. 'not' → logprob: -16.404760360717773
    8. ''' → logprob: -16.654760360717773
    9. '
' → logprob: -16.904760360717773
    10. ']' → logprob: -17.279760360717773

Token 642: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0009175319573841989
    2. ' y' → logprob: -7.000917434692383
    3. 'yb' → logprob: -12.625917434692383
    4. 'bits' → logprob: -13.375917434692383
    5. ''y' → logprob: -14.750917434692383
    6. ' bits' → logprob: -15.750917434692383
    7. ' ' → logprob: -16.125917434692383
    8. '   ' → logprob: -16.250917434692383
    9. '‘y' → logprob: -16.250917434692383
    10. '`' → logprob: -17.250917434692383

Token 643: 'bits' (ID: 24043)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.43630170822143555
    2. ' y' → logprob: -1.0613017082214355
    3. 'bits' → logprob: -4.9363017082214355
    4. ' bits' → logprob: -8.436302185058594
    5. ' or' → logprob: -10.061302185058594
    6. '               ' → logprob: -10.686302185058594
    7. '(bits' → logprob: -11.061302185058594
    8. '(y' → logprob: -11.311302185058594
    9. '[' → logprob: -11.686302185058594
    10. ',' → logprob: -11.686302185058594

Token 644: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.04811600223183632
    2. ':' → logprob: -3.7981159687042236
    3. '                       ' → logprob: -3.7981159687042236
    4. '):
' → logprob: -6.923116207122803
    5. '                   ' → logprob: -7.173116207122803
    6. ' :
' → logprob: -8.173115730285645
    7. '):' → logprob: -10.673115730285645
    8. '                      ' → logprob: -10.798115730285645
    9. ' :' → logprob: -11.048115730285645
    10. '():
' → logprob: -11.423115730285645

Token 645: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -9.150362166110426e-05
    2. ':
' → logprob: -10.125091552734375
    3. ':' → logprob: -11.000091552734375
    4. ' res' → logprob: -12.125091552734375
    5. '                           ' → logprob: -12.250091552734375
    6. '                      ' → logprob: -12.375091552734375
    7. '):
' → logprob: -12.500091552734375
    8. ' and' → logprob: -12.500091552734375
    9. '                   ' → logprob: -12.875091552734375
    10. 'res' → logprob: -13.000091552734375

Token 646: ' count' (ID: 3605)
  Prédit: 'cnt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cnt' → logprob: -0.4812160134315491
    2. 'res' → logprob: -1.8562159538269043
    3. 'count' (adapté à ' count') → logprob: -1.9812159538269043
    4. ' cnt' → logprob: -3.2312159538269043
    5. '                       ' → logprob: -3.7312159538269043
    6. ' res' → logprob: -4.606215953826904
    7. ' count' → logprob: -5.231215953826904
    8. 'bits' → logprob: -6.356215953826904
    9. '                           ' → logprob: -6.356215953826904
    10. 'pattern' → logprob: -6.481215953826904

Token 647: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16466037929058075
    2. '=' → logprob: -1.9146603345870972
    3. '                   ' → logprob: -6.289660453796387
    4. ' +=' → logprob: -6.539660453796387
    5. '+=' → logprob: -8.039660453796387
    6. '                       ' → logprob: -8.414660453796387
    7. '               ' → logprob: -8.414660453796387
    8. '           ' → logprob: -9.039660453796387
    9. '   ' → logprob: -10.039660453796387
    10. '       ' → logprob: -10.039660453796387

Token 648: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.28139400482177734
    2. ' count' → logprob: -1.4063940048217773
    3. '1' → logprob: -8.781394004821777
    4. '0' → logprob: -10.406394004821777
    5. '                       ' → logprob: -11.156394004821777
    6. ' ' → logprob: -11.406394004821777
    7. '                   ' → logprob: -12.156394004821777
    8. '                           ' → logprob: -12.281394004821777
    9. 'sum' → logprob: -12.406394004821777
    10. ' sum' → logprob: -12.406394004821777

Token 649: '_pos' (ID: 14692)
  Prédit: '_pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.00043353010551072657
    2. ' =' → logprob: -8.375433921813965
    3. 'pos' → logprob: -9.750433921813965
    4. 'poss' → logprob: -9.875433921813965
    5. '_possible' → logprob: -10.625433921813965
    6. '(count' → logprob: -10.875433921813965
    7. 'count' → logprob: -11.750433921813965
    8. '=' → logprob: -11.875433921813965
    9. '_count' → logprob: -12.500433921813965
    10. '   ' → logprob: -12.500433921813965

Token 650: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -1.0280383548888494e-06
    2. 'sib' → logprob: -13.875000953674316
    3. 'ibilities' → logprob: -17.375001907348633
    4. '_pos' → logprob: -17.500001907348633
    5. 'sible' → logprob: -17.750001907348633
    6. 'abilities' → logprob: -20.000001907348633
    7. ' s' → logprob: -20.875001907348633
    8. '_s' → logprob: -20.875001907348633
    9. 'sess' → logprob: -21.250001907348633
    10. 'si' → logprob: -21.375001907348633

Token 651: 'ibilities' (ID: 25632)
  Prédit: 'ibilities'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibilities' → logprob: -0.00011510594777064398
    2. 'ilities' → logprob: -9.125115394592285
    3. 's' → logprob: -12.875115394592285
    4. 'ibil' → logprob: -13.500115394592285
    5. 'ities' → logprob: -14.375115394592285
    6. 'ib' → logprob: -14.625115394592285
    7. 'ibl' → logprob: -14.750115394592285
    8. 'b' → logprob: -15.375115394592285
    9. 'il' → logprob: -16.00011444091797
    10. '_' → logprob: -16.62511444091797

Token 652: '(byte' (ID: 36692)
  Prédit: '(byte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(byte' → logprob: -0.008861910551786423
    2. '(bits' → logprob: -4.883862018585205
    3. '(bit' → logprob: -6.758862018585205
    4. '(bytes' → logprob: -9.633861541748047
    5. '(' → logprob: -11.383861541748047
    6. ' (' → logprob: -11.758861541748047
    7. 'byte' → logprob: -12.258861541748047
    8. '('' → logprob: -13.883861541748047
    9. 'bits' → logprob: -14.133861541748047
    10. '(Byte' → logprob: -14.508861541748047

Token 653: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -4.024604277219623e-05
    2. 'str' → logprob: -10.125040054321289
    3. 'Str' → logprob: -16.25004005432129
    4. '[' → logprob: -18.00004005432129
    5. 'byte' → logprob: -18.00004005432129
    6. ')' → logprob: -18.12504005432129
    7. '[str' → logprob: -19.12504005432129
    8. '   ' → logprob: -19.50004005432129
    9. '_STR' → logprob: -19.50004005432129
    10. '$str' → logprob: -19.62504005432129

Token 654: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.04988321661949158
    2. ')' → logprob: -3.0498831272125244
    3. '                       ' → logprob: -7.0498833656311035
    4. '(byte' → logprob: -8.799882888793945
    5. '                   ' → logprob: -9.049882888793945
    6. '               ' → logprob: -10.049882888793945
    7. ')
' → logprob: -10.049882888793945
    8. ')`
' → logprob: -10.924882888793945
    9. '           ' → logprob: -11.299882888793945
    10. '                      ' → logprob: -11.799882888793945

Token 655: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -5.32392441527918e-05
    2. '           ' → logprob: -11.000053405761719
    3. '                   ' → logprob: -11.375053405761719
    4. '```' → logprob: -11.500053405761719
    5. '               ' → logprob: -11.875053405761719
    6. '       ' → logprob: -12.875053405761719
    7. '
' → logprob: -13.625053405761719
    8. '                        
' → logprob: -13.750053405761719
    9. '                      ' → logprob: -13.875053405761719
    10. '                           ' → logprob: -14.250053405761719

Token 656: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00020890454470645636
    2. '                   ' → logprob: -9.000208854675293
    3. '           ' → logprob: -9.875208854675293
    4. '               ' → logprob: -10.750208854675293
    5. '                           ' → logprob: -12.375208854675293
    6. '       ' → logprob: -12.500208854675293
    7. 'res' → logprob: -13.500208854675293
    8. 'if' (adapté à ' if') → logprob: -13.750208854675293
    9. '```' → logprob: -14.750208854675293
    10. '                      ' → logprob: -15.000208854675293

Token 657: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.25193077325820923
    2. ' count' → logprob: -1.5019307136535645
    3. '(count' → logprob: -13.626931190490723
    4. '	count' → logprob: -16.001930236816406
    5. '   ' → logprob: -16.126930236816406
    6. ' ' → logprob: -16.376930236816406
    7. '                       ' → logprob: -16.751930236816406
    8. '[count' → logprob: -17.501930236816406
    9. '                   ' → logprob: -17.876930236816406
    10. '$count' → logprob: -18.626930236816406

Token 658: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.5759470462799072
    2. '>' → logprob: -0.8259470462799072
    3. ')>' → logprob: -12.700946807861328
    4. ')' → logprob: -13.075946807861328
    5. '()>' → logprob: -14.075946807861328
    6. '>
' → logprob: -14.325946807861328
    7. ' >
' → logprob: -14.700946807861328
    8. '                           ' → logprob: -15.950946807861328
    9. ' ' → logprob: -15.950946807861328
    10. '   ' → logprob: -16.700946807861328

Token 659: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00317783304490149
    2. ' ' → logprob: -5.753177642822266
    3. '   ' → logprob: -17.003177642822266
    4. '<|end|>' → logprob: -17.503177642822266
    5. '=' → logprob: -17.753177642822266
    6. '```' → logprob: -17.878177642822266
    7. '                       ' → logprob: -18.378177642822266
    8. '                   ' → logprob: -18.628177642822266
    9. '
' → logprob: -19.003177642822266
    10. '۰' → logprob: -19.003177642822266

Token 660: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.505351095460355e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.25007438659668
    4. '=' → logprob: -18.37507438659668
    5. '```' → logprob: -18.50007438659668
    6. '  ' → logprob: -19.50007438659668
    7. '۰' → logprob: -19.50007438659668
    8. '>' → logprob: -20.00007438659668
    9. '[' → logprob: -20.31257438659668
    10. '    ' → logprob: -20.50007438659668

Token 661: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.6742368936538696
    2. ':
' → logprob: -1.2992368936538696
    3. ':' → logprob: -1.5492368936538696
    4. '                       ' → logprob: -5.54923677444458
    5. '):
' → logprob: -7.17423677444458
    6. '           ' → logprob: -8.049237251281738
    7. '                   ' → logprob: -9.299237251281738
    8. '):' → logprob: -9.424237251281738
    9. '                               ' → logprob: -10.049237251281738
    10. '():
' → logprob: -10.549237251281738

Token 662: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0001625379954930395
    2. '                       ' → logprob: -9.125162124633789
    3. '           ' → logprob: -10.250162124633789
    4. '                   ' → logprob: -12.000162124633789
    5. '                               ' → logprob: -12.000162124633789
    6. '               ' → logprob: -12.625162124633789
    7. '                          ' → logprob: -13.500162124633789
    8. '```' → logprob: -14.875162124633789
    9. '                            ' → logprob: -15.125162124633789
    10. '                         ' → logprob: -15.500162124633789

Token 663: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.015378848649561405
    2. ' res' → logprob: -4.265378952026367
    3. '                           ' → logprob: -6.765378952026367
    4. '                               ' → logprob: -10.015378952026367
    5. '   ' → logprob: -11.265378952026367
    6. '           ' → logprob: -13.390378952026367
    7. ' ' → logprob: -14.515378952026367
    8. '                                   ' → logprob: -14.890378952026367
    9. '                       ' → logprob: -15.015378952026367
    10. '               ' → logprob: -15.140378952026367

Token 664: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -2.629921436891891e-05
    2. '.' → logprob: -10.87502670288086
    3. '                               ' → logprob: -13.00002670288086
    4. '                           ' → logprob: -13.25002670288086
    5. ' .' → logprob: -13.50002670288086
    6. 'append' → logprob: -13.50002670288086
    7. '.extend' → logprob: -15.37502670288086
    8. ' append' → logprob: -16.62502670288086
    9. '.Append' → logprob: -16.87502670288086
    10. '_append' → logprob: -17.50002670288086

Token 665: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -2.5107177862082608e-05
    2. '(' → logprob: -10.625024795532227
    3. '(
' → logprob: -14.875024795532227
    4. ' ((' → logprob: -15.625024795532227
    5. '```' → logprob: -16.500024795532227
    6. '(((' → logprob: -16.750024795532227
    7. ' ' → logprob: -17.125024795532227
    8. '   ' → logprob: -18.250024795532227
    9. '(('' → logprob: -18.625024795532227
    10. '([(' → logprob: -19.125024795532227

Token 666: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.00524454889819026
    2. '(length' → logprob: -5.255244731903076
    3. ' length' → logprob: -12.005244255065918
    4. '[length' → logprob: -12.380244255065918
    5. ',length' → logprob: -14.755244255065918
    6. '   ' → logprob: -17.255245208740234
    7. ' (' → logprob: -17.255245208740234
    8. '	length' → logprob: -18.380245208740234
    9. 'leng' → logprob: -19.005245208740234
    10. ':length' → logprob: -19.130245208740234

Token 667: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.090760431718081e-05
    2. '                           ' → logprob: -9.875090599060059
    3. ',count' → logprob: -10.875090599060059
    4. '))' → logprob: -12.000090599060059
    5. ',
' → logprob: -12.125090599060059
    6. ' ,' → logprob: -12.500090599060059
    7. '                       ' → logprob: -13.125090599060059
    8. '                               ' → logprob: -14.125090599060059
    9. '           ' → logprob: -14.375090599060059
    10. '               ' → logprob: -15.000090599060059

Token 668: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.038043901324272156
    2. ' count' → logprob: -3.288043975830078
    3. '(count' → logprob: -12.913043975830078
    4. ')' → logprob: -18.663043975830078
    5. '[count' → logprob: -18.788043975830078
    6. '	count' → logprob: -18.788043975830078
    7. ' ' → logprob: -19.163043975830078
    8. '   ' → logprob: -19.538043975830078
    9. ',' → logprob: -19.663043975830078
    10. '(' → logprob: -19.663043975830078

Token 669: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.08003057539463043
    2. ')' → logprob: -2.580030679702759
    3. '))
' → logprob: -6.83003044128418
    4. '                       ' → logprob: -10.70503044128418
    5. ')
' → logprob: -11.33003044128418
    6. ')))' → logprob: -11.58003044128418
    7. '           ' → logprob: -12.20503044128418
    8. '                   ' → logprob: -12.58003044128418
    9. '               ' → logprob: -12.70503044128418
    10. '       ' → logprob: -13.45503044128418

Token 670: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003496485063806176
    2. '   ' → logprob: -5.8784966468811035
    3. '           ' → logprob: -7.5034966468811035
    4. 'elif' → logprob: -9.503496170043945
    5. '```' → logprob: -10.128496170043945
    6. '+' → logprob: -11.878496170043945
    7. '               ' → logprob: -12.128496170043945
    8. 'return' → logprob: -12.253496170043945
    9. 'else' → logprob: -13.378496170043945
    10. ' return' → logprob: -13.503496170043945

Token 671: ' elif' (ID: 9497)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.057042140513658524
    2. 'elif' (adapté à ' elif') → logprob: -3.182042121887207
    3. '   ' → logprob: -4.307042121887207
    4. ' elif' → logprob: -8.682042121887207
    5. '```' → logprob: -8.682042121887207
    6. 'else' → logprob: -9.182042121887207
    7. '           ' → logprob: -11.182042121887207
    8. '
' → logprob: -12.057042121887207
    9. '	elif' → logprob: -12.307042121887207
    10. ' else' → logprob: -13.682042121887207

Token 672: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.3132629096508026
    2. 'length' → logprob: -1.313262939453125
    3. '(length' → logprob: -15.063262939453125
    4. '3' → logprob: -15.313262939453125
    5. ' ' → logprob: -15.563262939453125
    6. '    ' → logprob: -16.188262939453125
    7. '   ' → logprob: -16.563262939453125
    8. '	length' → logprob: -16.688262939453125
    9. 'len' → logprob: -17.063262939453125
    10. '       ' → logprob: -17.563262939453125

Token 673: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.061969030648469925
    2. '==' → logprob: -2.811969041824341
    3. '=' → logprob: -14.686968803405762
    4. '===' → logprob: -15.311968803405762
    5. ' ' → logprob: -15.811968803405762
    6. ' ===' → logprob: -15.936968803405762
    7. ' =' → logprob: -16.061969757080078
    8. '==
' → logprob: -16.686969757080078
    9. ' ==
' → logprob: -16.936969757080078
    10. '   ' → logprob: -17.186969757080078

Token 674: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.003140997141599655
    2. ' ' → logprob: -5.878140926361084
    3. '4' → logprob: -8.003141403198242
    4. '1' → logprob: -14.003141403198242
    5. '   ' → logprob: -15.128141403198242
    6. '```' → logprob: -15.628141403198242
    7. '2' → logprob: -15.940641403198242
    8. '=' → logprob: -16.190641403198242
    9. '  ' → logprob: -17.128141403198242
    10. '34' → logprob: -17.628141403198242

Token 675: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.03521392197581e-05
    2. ' ' → logprob: -11.000030517578125
    3. '4' → logprob: -11.375030517578125
    4. '1' → logprob: -14.000030517578125
    5. '[' → logprob: -14.625030517578125
    6. '   ' → logprob: -15.125030517578125
    7. '2' → logprob: -15.625030517578125
    8. '```' → logprob: -16.000030517578125
    9. '
' → logprob: -16.625030517578125
    10. '=' → logprob: -16.937530517578125

Token 676: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.20188406109809875
    2. ':' → logprob: -1.7018840312957764
    3. '       ' → logprob: -7.9518842697143555
    4. '           ' → logprob: -9.576884269714355
    5. '   ' → logprob: -10.076884269714355
    6. ':

' → logprob: -12.576884269714355
    7. '=' → logprob: -13.576884269714355
    8. ':
' → logprob: -13.826884269714355
    9. ' =' → logprob: -15.076884269714355
    10. '):
' → logprob: -15.701884269714355

Token 677: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.30891045928001404
    2. '           ' → logprob: -1.5589104890823364
    3. '#' → logprob: -3.683910369873047
    4. ':' → logprob: -3.933910369873047
    5. ':
' → logprob: -5.058910369873047
    6. '   ' → logprob: -5.558910369873047
    7. ' #' → logprob: -8.308910369873047
    8. ' ' → logprob: -10.308910369873047
    9. ':#' → logprob: -10.308910369873047
    10. '```' → logprob: -10.308910369873047

Token 678: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.403122216463089
    2. '#' (adapté à ' #') → logprob: -1.1531221866607666
    3. '           ' → logprob: -4.403122425079346
    4. '   ' → logprob: -6.028122425079346
    5. ' #' → logprob: -7.278122425079346
    6. 'patterns' → logprob: -7.653122425079346
    7. 'pattern' → logprob: -8.278121948242188
    8. ' ' → logprob: -11.403121948242188
    9. 'if' → logprob: -11.653121948242188
    10. '	' → logprob: -11.778121948242188

Token 679: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.15789063274860382
    2. 'pattern' → logprob: -2.532890558242798
    3. '           ' → logprob: -2.782890558242798
    4. ' #' → logprob: -5.782890796661377
    5. 'patterns' → logprob: -6.907890796661377
    6. 'if' → logprob: -8.782890319824219
    7. ' pattern' → logprob: -8.907890319824219
    8. '
' → logprob: -9.157890319824219
    9. '   ' → logprob: -9.657890319824219
    10. 'bits' → logprob: -9.907890319824219

Token 680: '111' (ID: 8780)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.1824677735567093
    2. 'pattern' → logprob: -2.3074676990509033
    3. 'if' → logprob: -3.1824676990509033
    4. 'bits' → logprob: -3.9324676990509033
    5. 'patterns' → logprob: -6.182467937469482
    6. 'first' → logprob: -6.557467937469482
    7. 'bit' → logprob: -6.807467937469482
    8. ' #' → logprob: -7.807467937469482
    9. '   ' → logprob: -7.932467937469482
    10. '
' → logprob: -8.182467460632324

Token 681: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001648399163968861
    2. '000' → logprob: -6.501648426055908
    3. 'bits' → logprob: -10.00164794921875
    4. '   ' → logprob: -11.00164794921875
    5. '    ' → logprob: -11.00164794921875
    6. '
' → logprob: -11.37664794921875
    7. ' ' → logprob: -11.37664794921875
    8. '```' → logprob: -11.62664794921875
    9. '001' → logprob: -12.00164794921875
    10. '011' → logprob: -12.62664794921875

Token 682: 'yyyy' (ID: 27343)
  Prédit: 'xxxx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xxxx' → logprob: -0.8071075677871704
    2. 'xxxxx' → logprob: -1.1821075677871704
    3. 'yyyy' → logprob: -1.4321075677871704
    4. '    ' → logprob: -6.182107448577881
    5. 'pattern' → logprob: -6.432107448577881
    6. 'bits' → logprob: -6.807107448577881
    7. '   ' → logprob: -7.182107448577881
    8. ''' → logprob: -7.182107448577881
    9. ' bits' → logprob: -7.432107448577881
    10. '
' → logprob: -7.682107448577881

Token 683: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2339840978384018
    2. '       ' → logprob: -2.1089839935302734
    3. ':
' → logprob: -3.4839839935302734
    4. ' and' → logprob: -3.8589839935302734
    5. ':' → logprob: -3.9839839935302734
    6. ' if' → logprob: -5.233983993530273
    7. '   ' → logprob: -5.608983993530273
    8. 'if' → logprob: -5.608983993530273
    9. '
' → logprob: -7.358983993530273
    10. '         ' → logprob: -7.608983993530273

Token 684: '10' (ID: 702)
  Prédit: 'xxxx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xxxx' → logprob: -0.09554508328437805
    2. 'x' → logprob: -3.4705450534820557
    3. 'xxxxx' → logprob: -4.220545291900635
    4. ' and' → logprob: -4.595545291900635
    5. 'xxxxxxxx' → logprob: -4.970545291900635
    6. '           ' → logprob: -5.345545291900635
    7. ' if' → logprob: -5.595545291900635
    8. '
' → logprob: -5.720545291900635
    9. ' x' → logprob: -5.720545291900635
    10. 'if' → logprob: -6.095545291900635

Token 685: 'y' (ID: 88)
  Prédit: 'xxxx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xxxx' → logprob: -0.0011015182826668024
    2. 'xxxxx' → logprob: -7.376101493835449
    3. 'byte' → logprob: -8.25110149383545
    4. 'xxxxxxxx' → logprob: -8.87610149383545
    5. ''' → logprob: -11.25110149383545
    6. '000' → logprob: -11.37610149383545
    7. 'bbbb' → logprob: -11.50110149383545
    8. 'bits' → logprob: -11.87610149383545
    9. 'bit' → logprob: -12.25110149383545
    10. '1' → logprob: -12.25110149383545

Token 686: 'xxxxx' (ID: 162711)
  Prédit: 'yyyy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yyyy' → logprob: -0.25353798270225525
    2. 'yyy' → logprob: -1.5035380125045776
    3. 'yy' → logprob: -6.503538131713867
    4. 'y' → logprob: -9.628538131713867
    5. 'xxxx' → logprob: -10.378538131713867
    6. 'xxxxx' → logprob: -12.503538131713867
    7. 'zzz' → logprob: -13.003538131713867
    8. 'zz' → logprob: -13.003538131713867
    9. 'xxx' → logprob: -13.253538131713867
    10. '0' → logprob: -14.378538131713867

Token 687: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02164340391755104
    2. '       ' → logprob: -3.8966434001922607
    3. '
' → logprob: -7.89664363861084
    4. ' if' → logprob: -8.77164363861084
    5. 'if' → logprob: -9.39664363861084
    6. ':
' → logprob: -9.64664363861084
    7. ' and' → logprob: -9.77164363861084
    8. ':' → logprob: -9.77164363861084
    9. '   ' → logprob: -9.77164363861084
    10. 'pattern' → logprob: -10.27164363861084

Token 688: '10' (ID: 702)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.020296849310398102
    2. 'pattern' → logprob: -4.145297050476074
    3. ' pattern' → logprob: -6.895297050476074
    4. '       ' → logprob: -6.895297050476074
    5. 'if' → logprob: -7.770297050476074
    6. '#' → logprob: -7.895297050476074
    7. '
' → logprob: -8.520297050476074
    8. '		' → logprob: -8.770297050476074
    9. 'patterns' → logprob: -8.895297050476074
    10. '   ' → logprob: -8.895297050476074

Token 689: 'xxxx' (ID: 30950)
  Prédit: 'xxxx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xxxx' → logprob: -0.0003036457928828895
    2. 'yyyy' → logprob: -9.000303268432617
    3. 'xxxxxxxx' → logprob: -9.375303268432617
    4. 'zz' → logprob: -10.375303268432617
    5. 'xxxxx' → logprob: -10.375303268432617
    6. 'bbbb' → logprob: -10.625303268432617
    7. 'xxx' → logprob: -13.625303268432617
    8. '000' → logprob: -13.625303268432617
    9. 'bb' → logprob: -13.750303268432617
    10. 'xx' → logprob: -13.875303268432617

Token 690: 'xx' (ID: 7605)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5628761053085327
    2. ':' → logprob: -1.6878761053085327
    3. ':
' → logprob: -2.4378762245178223
    4. '   ' → logprob: -3.0628762245178223
    5. 'x' → logprob: -3.0628762245178223
    6. '           ' → logprob: -3.6878762245178223
    7. 'pattern' → logprob: -5.312876224517822
    8. ' ' → logprob: -5.437876224517822
    9. 'if' → logprob: -5.562876224517822
    10. '     ' → logprob: -5.937876224517822

Token 691: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14602680504322052
    2. '           ' → logprob: -2.021026849746704
    3. ':
' → logprob: -7.521026611328125
    4. '	' → logprob: -7.646026611328125
    5. 'if' → logprob: -7.646026611328125
    6. ':' → logprob: -8.271026611328125
    7. '   ' → logprob: -8.396026611328125
    8. 'pattern' → logprob: -8.521026611328125
    9. '#' → logprob: -8.771026611328125
    10. '	       ' → logprob: -9.021026611328125

Token 692: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.211796835064888
    2. '       ' → logprob: -2.211796760559082
    3. 'pattern' → logprob: -2.836796760559082
    4. 'if' → logprob: -4.086796760559082
    5. 'patterns' → logprob: -6.461796760559082
    6. 'bits' → logprob: -6.961796760559082
    7. '#' → logprob: -7.211796760559082
    8. ' if' → logprob: -7.336796760559082
    9. ' pattern' → logprob: -7.461796760559082
    10. '{
' → logprob: -7.586796760559082

Token 693: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6623207926750183
    2. '       ' → logprob: -0.7873207926750183
    3. 'pattern' → logprob: -4.162320613861084
    4. 'if' → logprob: -5.537320613861084
    5. 'patterns' → logprob: -5.787320613861084
    6. '#' (adapté à ' #') → logprob: -5.912320613861084
    7. 'bits' → logprob: -6.037320613861084
    8. '
' → logprob: -7.412320613861084
    9. '{
' → logprob: -8.037321090698242
    10. '   ' → logprob: -8.287321090698242

Token 694: ' first' (ID: 1577)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.05776183307170868
    2. '#' → logprob: -3.9327619075775146
    3. 'bits' → logprob: -4.0577616691589355
    4. '           ' → logprob: -4.4327616691589355
    5. 'patterns' → logprob: -5.5577616691589355
    6. 'if' → logprob: -6.4327616691589355
    7. 'first' → logprob: -7.6827616691589355
    8. 'bit' → logprob: -7.6827616691589355
    9. 'pass' → logprob: -7.8077616691589355
    10. 'byte' → logprob: -9.182762145996094

Token 695: ' byte' (ID: 9239)
  Prédit: 'byte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'byte' → logprob: -1.0484017133712769
    2. 'bit' → logprob: -1.6734017133712769
    3. 'bits' → logprob: -1.9234017133712769
    4. ' byte' → logprob: -2.0484018325805664
    5. ' bits' → logprob: -2.6734018325805664
    6. ' bit' → logprob: -3.0484018325805664
    7. '_byte' → logprob: -3.4234018325805664
    8. '_bits' → logprob: -4.048401832580566
    9. 'elif' → logprob: -4.923401832580566
    10. 'if' → logprob: -5.423401832580566

Token 696: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.1284835934638977
    2. '=' → logprob: -2.753483533859253
    3. ' =' → logprob: -3.378483533859253
    4. ' pattern' → logprob: -4.628483772277832
    5. 'bits' → logprob: -5.378483772277832
    6. '_pattern' → logprob: -5.628483772277832
    7. '           ' → logprob: -6.253483772277832
    8. ':' → logprob: -7.128483772277832
    9. '_bits' → logprob: -7.753483772277832
    10. ' ==' → logprob: -8.503483772277832

Token 697: ' ' (ID: 220)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20684713125228882
    2. ' =' → logprob: -1.7068471908569336
    3. 'pattern' → logprob: -5.331847190856934
    4. '           ' → logprob: -7.706847190856934
    5. ' pattern' → logprob: -9.581847190856934
    6. '='' → logprob: -10.331847190856934
    7. ''' → logprob: -12.081847190856934
    8. '       ' → logprob: -12.456847190856934
    9. '111' → logprob: -12.956847190856934
    10. '=
' → logprob: -13.206847190856934

Token 698: '111' (ID: 8780)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.2623215615749359
    2. 'pattern' → logprob: -1.6373215913772583
    3. 'bits' → logprob: -4.137321472167969
    4. 'if' → logprob: -5.137321472167969
    5. ' pattern' → logprob: -5.637321472167969
    6. ' '' → logprob: -5.762321472167969
    7. ' =' → logprob: -6.137321472167969
    8. '           ' → logprob: -6.512321472167969
    9. ' bits' → logprob: -6.887321472167969
    10. '=' → logprob: -6.887321472167969

Token 699: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0011759399203583598
    2. '000' → logprob: -7.126175880432129
    3. ''' → logprob: -8.251175880432129
    4. '011' → logprob: -10.001175880432129
    5. '   ' → logprob: -11.001175880432129
    6. ' ' → logprob: -11.376175880432129
    7. '```' → logprob: -11.501175880432129
    8. '
' → logprob: -12.126175880432129
    9. 'def' → logprob: -12.501175880432129
    10. '=' → logprob: -13.001175880432129

Token 700: 'yyyy' (ID: 27343)
  Prédit: 'yyyy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yyyy' → logprob: -0.43160808086395264
    2. ''' → logprob: -1.0566080808639526
    3. '111' → logprob: -6.431608200073242
    4. 'xxxx' → logprob: -7.181608200073242
    5. ''y' → logprob: -8.056608200073242
    6. ' yyyy' → logprob: -10.056608200073242
    7. '000' → logprob: -10.931608200073242
    8. ' ' → logprob: -11.056608200073242
    9. '`' → logprob: -11.056608200073242
    10. 'bbbb' → logprob: -11.306608200073242

Token 701: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013168584555387497
    2. 'pattern' → logprob: -5.263168811798096
    3. 'if' → logprob: -5.638168811798096
    4. ' if' → logprob: -6.763168811798096
    5. '       ' → logprob: -7.513168811798096
    6. ' pattern' → logprob: -7.638168811798096
    7. 'bits' → logprob: -7.763168811798096
    8. ' and' → logprob: -8.013168334960938
    9. ' bits' → logprob: -8.013168334960938
    10. ':' → logprob: -8.138168334960938

Token 702: ' at' (ID: 540)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.5373762845993042
    2. ' bits' → logprob: -1.2873762845993042
    3. 'byte' → logprob: -2.7873764038085938
    4. 'second' → logprob: -4.037376403808594
    5. ' byte' → logprob: -4.537376403808594
    6. 'match' → logprob: -4.912376403808594
    7. ' second' → logprob: -5.412376403808594
    8. 'count' → logprob: -5.787376403808594
    9. 'def' → logprob: -5.912376403808594
    10. ''' → logprob: -6.037376403808594

Token 703: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.046332817524671555
    2. 'bits' → logprob: -3.421332836151123
    3. ' least' → logprob: -4.671332836151123
    4. '[' → logprob: -6.921332836151123
    5. ' bits' → logprob: -7.671332836151123
    6. 'bit' → logprob: -7.671332836151123
    7. '#' → logprob: -8.296332359313965
    8. 'len' → logprob: -8.421332359313965
    9. 'byte' → logprob: -8.796332359313965
    10. 'bytes' → logprob: -8.921332359313965

Token 704: ' one' (ID: 1001)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.4044525623321533
    2. 'one' → logprob: -1.4044525623321533
    3. ''y' → logprob: -2.6544525623321533
    4. '('' → logprob: -5.404452323913574
    5. 'bits' → logprob: -5.654452323913574
    6. 'y' → logprob: -5.779452323913574
    7. 'byte' → logprob: -6.154452323913574
    8. 'any' → logprob: -7.154452323913574
    9. '1' → logprob: -7.279452323913574
    10. ' '' → logprob: -8.029452323913574

Token 705: ' y' (ID: 342)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.057975370436906815
    2. ''y' → logprob: -3.4329752922058105
    3. 'y' → logprob: -4.1829752922058105
    4. ' '' → logprob: -5.5579752922058105
    5. ' y' → logprob: -6.5579752922058105
    6. '('' → logprob: -6.5579752922058105
    7. '
' → logprob: -8.182975769042969
    8. ' in' → logprob: -8.182975769042969
    9. 'bits' → logprob: -8.307975769042969
    10. 'in' → logprob: -8.557975769042969

Token 706: ' bit' (ID: 3546)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5973832607269287
    2. 'bits' → logprob: -1.3473832607269287
    3. ' bits' → logprob: -2.9723832607269287
    4. '[' → logprob: -3.3473832607269287
    5. '       ' → logprob: -3.9723832607269287
    6. 'in' → logprob: -4.722383499145508
    7. ' !=' → logprob: -4.722383499145508
    8. ' if' → logprob: -4.847383499145508
    9. ')' → logprob: -4.972383499145508
    10. '           ' → logprob: -5.097383499145508

Token 707: ' in' (ID: 306)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3973779082298279
    2. '=' → logprob: -1.5223779678344727
    3. '           ' → logprob: -2.3973779678344727
    4. ':' → logprob: -5.022377967834473
    5. '       ' → logprob: -5.397377967834473
    6. '   ' → logprob: -6.772377967834473
    7. ' bits' → logprob: -6.772377967834473
    8. 'bits' → logprob: -7.022377967834473
    9. '               ' → logprob: -7.147377967834473
    10. ':
' → logprob: -7.272377967834473

Token 708: ' first' (ID: 1577)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.22722920775413513
    2. 'byte' → logprob: -1.6022292375564575
    3. ' bits' → logprob: -6.727229118347168
    4. 'bit' → logprob: -7.852229118347168
    5. '[' → logprob: -9.602229118347168
    6. ' byte' → logprob: -9.602229118347168
    7. 'bytes' → logprob: -10.352229118347168
    8. '(byte' → logprob: -10.352229118347168
    9. '['' → logprob: -11.977229118347168
    10. 'pattern' → logprob: -12.102229118347168

Token 709: ' byte' (ID: 9239)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.24466609954833984
    2. 'bits' → logprob: -2.74466609954834
    3. '3' → logprob: -3.11966609954834
    4. 'byte' → logprob: -3.74466609954834
    5. ']' → logprob: -4.49466609954834
    6. '7' → logprob: -4.86966609954834
    7. ' ' → logprob: -5.11966609954834
    8. ')' → logprob: -5.24466609954834
    9. '4' → logprob: -5.36966609954834
    10. '   ' → logprob: -5.36966609954834

Token 710: ''s' (ID: 885)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02558116428554058
    2. '=' → logprob: -5.275581359863281
    3. ' =' → logprob: -5.525581359863281
    4. ' and' → logprob: -5.775581359863281
    5. '               ' → logprob: -5.900581359863281
    6. ':' → logprob: -5.900581359863281
    7. ':
' → logprob: -6.275581359863281
    8. 'bits' → logprob: -6.775581359863281
    9. '[' → logprob: -7.150581359863281
    10. ' in' → logprob: -7.400581359863281

Token 711: ' y' (ID: 342)
  Prédit: 'byte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'byte' → logprob: -0.4181141257286072
    2. 'bits' → logprob: -1.293114185333252
    3. '[' → logprob: -3.293114185333252
    4. '4' → logprob: -3.918114185333252
    5. 'bit' → logprob: -5.043114185333252
    6. '3' → logprob: -6.418114185333252
    7. '`' → logprob: -7.668114185333252
    8. '(' → logprob: -7.793114185333252
    9. '```' → logprob: -8.043113708496094
    10. 'bytes' → logprob: -8.418113708496094

Token 712: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.16552643477916718
    2. '[' → logprob: -2.1655263900756836
    3. ' bits' → logprob: -4.415526390075684
    4. '   ' → logprob: -5.415526390075684
    5. '7' → logprob: -6.040526390075684
    6. ' !=' → logprob: -6.040526390075684
    7. '       ' → logprob: -6.665526390075684
    8. '_bits' → logprob: -6.665526390075684
    9. ' ' → logprob: -6.790526390075684
    10. ' ==' → logprob: -6.790526390075684

Token 713: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08745655417442322
    2. '=' → logprob: -3.337456464767456
    3. ':
' → logprob: -3.962456464767456
    4. '[' → logprob: -4.712456703186035
    5. '           ' → logprob: -5.337456703186035
    6. '   ' → logprob: -5.587456703186035
    7. '       ' → logprob: -5.837456703186035
    8. ' =' → logprob: -5.837456703186035
    9. ' and' → logprob: -6.837456703186035
    10. ',' → logprob: -7.087456703186035

Token 714: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.024629143998026848
    2. ' =' → logprob: -5.02462911605835
    3. '=' → logprob: -5.39962911605835
    4. ' bits' → logprob: -5.52462911605835
    5. '       ' → logprob: -5.64962911605835
    6. 'bits' → logprob: -6.14962911605835
    7. ':' → logprob: -6.27462911605835
    8. '[' → logprob: -8.149629592895508
    9. '(bits' → logprob: -8.149629592895508
    10. ' if' → logprob: -8.524629592895508

Token 715: ' bits' (ID: 18189)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3495852053165436
    2. '       ' → logprob: -1.2245851755142212
    3. 'if' → logprob: -7.474585056304932
    4. 'pattern' → logprob: -8.97458553314209
    5. ' if' → logprob: -9.34958553314209
    6. ':' → logprob: -9.47458553314209
    7. '```' → logprob: -9.47458553314209
    8. '   ' → logprob: -9.59958553314209
    9. '		' → logprob: -10.59958553314209
    10. '               ' → logprob: -10.84958553314209

Token 716: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38703489303588867
    2. '=' → logprob: -1.1370348930358887
    3. '[' → logprob: -9.012035369873047
    4. '   ' → logprob: -10.887035369873047
    5. 'def' → logprob: -11.762035369873047
    6. ' ' → logprob: -12.637035369873047
    7. '       ' → logprob: -13.262035369873047
    8. 'if' → logprob: -13.387035369873047
    9. 'bits' → logprob: -14.137035369873047
    10. '_bits' → logprob: -14.137035369873047

Token 717: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.008621551096439362
    2. ' list' → logprob: -4.758621692657471
    3. 'byte' → logprob: -11.883621215820312
    4. ' byte' → logprob: -17.133621215820312
    5. 'List' → logprob: -19.383621215820312
    6. '(list' → logprob: -19.508621215820312
    7. '   ' → logprob: -19.508621215820312
    8. 'bit' → logprob: -19.883621215820312
    9. '[' → logprob: -20.633621215820312
    10. '[list' → logprob: -20.633621215820312

Token 718: '(byte' (ID: 36692)
  Prédit: '(byte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(byte' → logprob: -0.0011708177626132965
    2. 'byte' → logprob: -6.751170635223389
    3. ' byte' → logprob: -14.376171112060547
    4. '.byte' → logprob: -17.126171112060547
    5. '(' → logprob: -18.376171112060547
    6. '<byte' → logprob: -18.501171112060547
    7. '_byte' → logprob: -19.001171112060547
    8. '(
' → logprob: -19.126171112060547
    9. '(b' → logprob: -19.876171112060547
    10. 'Byte' → logprob: -20.126171112060547

Token 719: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.1756367712223437e-05
    2. 'str' → logprob: -11.375011444091797
    3. 'Str' → logprob: -16.250011444091797
    4. 'byte' → logprob: -16.625011444091797
    5. '_byte' → logprob: -17.875011444091797
    6. '```' → logprob: -18.625011444091797
    7. '[str' → logprob: -18.875011444091797
    8. '_string' → logprob: -19.000011444091797
    9. '_bytes' → logprob: -19.000011444091797
    10. 'string' → logprob: -19.250011444091797

Token 720: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.09617353230714798
    2. ')' → logprob: -2.4711735248565674
    3. '       ' → logprob: -5.4711737632751465
    4. '           ' → logprob: -6.3461737632751465
    5. '   ' → logprob: -6.8461737632751465
    6. 'if' → logprob: -9.096173286437988
    7. ' if' → logprob: -10.971173286437988
    8. ')
' → logprob: -11.471173286437988
    9. ']
' → logprob: -11.471173286437988
    10. '```' → logprob: -11.471173286437988

Token 721: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009159150533378124
    2. '       ' → logprob: -4.759159088134766
    3. 'if' → logprob: -8.009159088134766
    4. '```' → logprob: -8.634159088134766
    5. ' if' → logprob: -10.634159088134766
    6. '   ' → logprob: -12.259159088134766
    7. '               ' → logprob: -12.884159088134766
    8. '	       ' → logprob: -14.259159088134766
    9. '		' → logprob: -14.634159088134766
    10. '``' → logprob: -15.009159088134766

Token 722: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.010341820307075977
    2. '           ' → logprob: -4.635341644287109
    3. ' if' → logprob: -7.760341644287109
    4. '#' → logprob: -9.01034164428711
    5. '       ' → logprob: -11.01034164428711
    6. '```' → logprob: -11.13534164428711
    7. '   ' → logprob: -13.01034164428711
    8. '``' → logprob: -14.13534164428711
    9. '               ' → logprob: -14.13534164428711
    10. 'first' → logprob: -14.38534164428711

Token 723: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.11539308726787567
    2. ' bits' → logprob: -2.2403931617736816
    3. 'len' → logprob: -6.865393161773682
    4. 'all' → logprob: -7.615393161773682
    5. ' all' → logprob: -7.615393161773682
    6. '(bits' → logprob: -8.365392684936523
    7. ' len' → logprob: -8.615392684936523
    8. '   ' → logprob: -9.990392684936523
    9. ' ' → logprob: -10.740392684936523
    10. ' (' → logprob: -11.115392684936523

Token 724: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00018506382184568793
    2. '[:' → logprob: -9.250185012817383
    3. '0' → logprob: -9.375185012817383
    4. ' and' → logprob: -13.500185012817383
    5. ' ' → logprob: -14.250185012817383
    6. 'and' → logprob: -14.375185012817383
    7. ' [' → logprob: -14.750185012817383
    8. '
' → logprob: -14.875185012817383
    9. '   ' → logprob: -15.375185012817383
    10. '[
' → logprob: -16.125185012817383

Token 725: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.250006675720215
    3. '[' → logprob: -14.625006675720215
    4. '012' → logprob: -15.250006675720215
    5. '   ' → logprob: -15.687506675720215
    6. '000' → logprob: -15.750006675720215
    7. '
' → logprob: -16.0625057220459
    8. '...' → logprob: -16.1250057220459
    9. ':' → logprob: -16.2500057220459
    10. '```' → logprob: -16.6875057220459

Token 726: ']' (ID: 60)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.008286304771900177
    2. 'in' → logprob: -4.883286476135254
    3. ']' → logprob: -8.008286476135254
    4. ' ==' → logprob: -8.633286476135254
    5. '==' → logprob: -9.133286476135254
    6. ')' → logprob: -10.508286476135254
    7. ' ' → logprob: -10.758286476135254
    8. ']==' → logprob: -12.383286476135254
    9. ' ]' → logprob: -13.008286476135254
    10. 'In' → logprob: -13.258286476135254

Token 727: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04614444822072983
    2. ' ==' → logprob: -4.046144485473633
    3. 'in' → logprob: -4.171144485473633
    4. '==' → logprob: -4.421144485473633
    5. '[' → logprob: -9.671144485473633
    6. '=='' → logprob: -10.296144485473633
    7. ' ' → logprob: -10.671144485473633
    8. ' =='' → logprob: -11.171144485473633
    9. 'In' → logprob: -12.546144485473633
    10. '=' → logprob: -13.046144485473633

Token 728: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -2.2842308680992573e-05
    2. ' ['' → logprob: -10.875022888183594
    3. '[' → logprob: -12.875022888183594
    4. '('' → logprob: -14.250022888183594
    5. ''' → logprob: -15.250022888183594
    6. '{'' → logprob: -15.750022888183594
    7. '["' → logprob: -16.375022888183594
    8. '(['' → logprob: -16.500022888183594
    9. '[
' → logprob: -18.000022888183594
    10. '[['' → logprob: -18.875022888183594

Token 729: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.016495520249009132
    2. '1' → logprob: -4.141495704650879
    3. '['' → logprob: -7.766495704650879
    4. '"' → logprob: -11.391495704650879
    5. '('' → logprob: -11.516495704650879
    6. '{'' → logprob: -11.891495704650879
    7. '`' → logprob: -12.141495704650879
    8. ' '' → logprob: -13.016495704650879
    9. '[' → logprob: -14.516495704650879
    10. '
' → logprob: -15.266495704650879

Token 730: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.011269220151007175
    2. ','' → logprob: -4.8862690925598145
    3. ',' → logprob: -6.1362690925598145
    4. '',' → logprob: -6.5112690925598145
    5. '',"' → logprob: -13.386269569396973
    6. ''' → logprob: -13.761269569396973
    7. ' ','' → logprob: -14.636269569396973
    8. ' ,'' → logprob: -14.636269569396973
    9. '",'' → logprob: -14.636269569396973
    10. '(','' → logprob: -14.636269569396973

Token 731: 'x' (ID: 87)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.24144795536994934
    2. 'x' → logprob: -2.116447925567627
    3. '1' → logprob: -2.366447925567627
    4. ''' → logprob: -8.616448402404785
    5. '"x' → logprob: -10.866448402404785
    6. ',x' → logprob: -11.366448402404785
    7. '['' → logprob: -12.366448402404785
    8. ' x' → logprob: -12.366448402404785
    9. ' ' → logprob: -12.616448402404785
    10. ' '' → logprob: -13.366448402404785

Token 732: '']' (ID: 1089)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.49244317412376404
    2. '']' → logprob: -0.9924432039260864
    3. ',' → logprob: -4.242443084716797
    4. ' and' → logprob: -6.242443084716797
    5. '',' → logprob: -6.992443084716797
    6. 'and' → logprob: -7.617443084716797
    7. '','' → logprob: -7.992443084716797
    8. ' ]' → logprob: -10.117443084716797
    9. ','' → logprob: -10.867443084716797
    10. '   ' → logprob: -10.992443084716797

Token 733: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.04858986660838127
    2. 'and' → logprob: -3.0485899448394775
    3. '           ' → logprob: -13.673589706420898
    4. ',' → logprob: -14.798589706420898
    5. ' ' → logprob: -15.173589706420898
    6. '<|end|>' → logprob: -15.923589706420898
    7. '       ' → logprob: -16.0485897064209
    8. '            ' → logprob: -16.2985897064209
    9. ' or' → logprob: -16.6735897064209
    10. '        ' → logprob: -16.7985897064209

Token 734: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.018193604424595833
    2. ' bits' → logprob: -4.01819372177124
    3. '   ' → logprob: -11.018193244934082
    4. '       ' → logprob: -11.643193244934082
    5. ' ' → logprob: -12.393193244934082
    6. '(bits' → logprob: -12.518193244934082
    7. '           ' → logprob: -12.643193244934082
    8. '  ' → logprob: -13.893193244934082
    9. 'b' → logprob: -14.018193244934082
    10. '.bits' → logprob: -14.143193244934082

Token 735: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.01821175590157509
    2. '1' → logprob: -4.018211841583252
    3. '```' → logprob: -11.018211364746094
    4. 'in' → logprob: -11.518211364746094
    5. '[
' → logprob: -11.518211364746094
    6. '
' → logprob: -12.143211364746094
    7. ' [' → logprob: -13.018211364746094
    8. '=' → logprob: -13.018211364746094
    9. ' in' → logprob: -13.143211364746094
    10. '   ' → logprob: -13.393211364746094

Token 736: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -12.62501049041748
    3. '[' → logprob: -13.12501049041748
    4. '
' → logprob: -13.62501049041748
    5. '0' → logprob: -14.37501049041748
    6. '2' → logprob: -14.43751049041748
    7. '3' → logprob: -14.56251049041748
    8. '   ' → logprob: -14.93751049041748
    9. 'elif' → logprob: -15.25001049041748
    10. '(' → logprob: -15.81251049041748

Token 737: ']' (ID: 60)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.023248855024576187
    2. 'in' → logprob: -3.7732489109039307
    3. ']' → logprob: -13.273248672485352
    4. 'In' → logprob: -15.273248672485352
    5. '<|end|>' → logprob: -15.648248672485352
    6. '   ' → logprob: -15.773248672485352
    7. '['' → logprob: -15.898248672485352
    8. '[' → logprob: -15.898248672485352
    9. ',' → logprob: -15.898248672485352
    10. ' ' → logprob: -16.39824867248535

Token 738: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.575944721698761
    2. ' in' → logprob: -0.825944721698761
    3. '['' → logprob: -12.825944900512695
    4. '==' → logprob: -14.325944900512695
    5. '=='' → logprob: -14.825944900512695
    6. '```' → logprob: -14.825944900512695
    7. 'In' → logprob: -15.200944900512695
    8. ' ==' → logprob: -15.575944900512695
    9. '<|end|>' → logprob: -16.075944900512695
    10. '[' → logprob: -16.200944900512695

Token 739: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.000157293034135364
    2. ' ['' → logprob: -8.875157356262207
    3. '[' → logprob: -11.000157356262207
    4. '[
' → logprob: -15.625157356262207
    5. '('' → logprob: -15.875157356262207
    6. '[['' → logprob: -15.875157356262207
    7. ''' → logprob: -16.25015640258789
    8. '(['' → logprob: -16.50015640258789
    9. '["' → logprob: -17.50015640258789
    10. '=['' → logprob: -18.00015640258789

Token 740: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.16024930775165558
    2. ''' → logprob: -1.9102493524551392
    3. '['' → logprob: -11.785249710083008
    4. ''x' → logprob: -11.910249710083008
    5. ' '' → logprob: -12.535249710083008
    6. '"' → logprob: -13.910249710083008
    7. '`' → logprob: -14.160249710083008
    8. ' ' → logprob: -14.160249710083008
    9. ''''' → logprob: -14.535249710083008
    10. '   ' → logprob: -14.535249710083008

Token 741: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.0030510276556015015
    2. '',' → logprob: -6.253050804138184
    3. ','' → logprob: -7.003050804138184
    4. ',' → logprob: -8.753050804138184
    5. ',x' → logprob: -11.003050804138184
    6. ''x' → logprob: -11.378050804138184
    7. ''' → logprob: -12.128050804138184
    8. '',"' → logprob: -12.378050804138184
    9. '',['' → logprob: -12.503050804138184
    10. '['' → logprob: -12.628050804138184

Token 742: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.47422051429748535
    2. ''x' → logprob: -0.9742205142974854
    3. ' x' → logprob: -9.099220275878906
    4. ''' → logprob: -10.974220275878906
    5. '"x' → logprob: -12.599220275878906
    6. '['' → logprob: -13.474220275878906
    7. '1' → logprob: -13.724220275878906
    8. ''s' → logprob: -13.849220275878906
    9. '```' → logprob: -13.849220275878906
    10. '_x' → logprob: -13.849220275878906

Token 743: '']' (ID: 1089)
  Prédit: '',''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.7488298416137695
    2. '']' → logprob: -1.7488298416137695
    3. '',' → logprob: -1.9988298416137695
    4. ',' → logprob: -2.2488298416137695
    5. ']' → logprob: -2.6238298416137695
    6. ' and' → logprob: -3.9988298416137695
    7. ','' → logprob: -4.1238298416137695
    8. ''' → logprob: -6.1238298416137695
    9. 'and' → logprob: -7.2488298416137695
    10. ' or' → logprob: -7.6238298416137695

Token 744: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0232466422021389
    2. 'and' → logprob: -3.7732465267181396
    3. '```' → logprob: -13.898246765136719
    4. '           ' → logprob: -16.52324676513672
    5. ' ' → logprob: -16.77324676513672
    6. '   ' → logprob: -16.89824676513672
    7. ',' → logprob: -17.89824676513672
    8. '``' → logprob: -18.02324676513672
    9. '	and' → logprob: -18.14824676513672
    10. '            ' → logprob: -18.14824676513672

Token 745: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.31328558921813965
    2. ' bits' → logprob: -1.3132855892181396
    3. '(bits' → logprob: -11.188285827636719
    4. '[' → logprob: -12.688285827636719
    5. '           ' → logprob: -13.813285827636719
    6. 'bit' → logprob: -13.938285827636719
    7. '       ' → logprob: -14.063285827636719
    8. 'b' → logprob: -14.188285827636719
    9. '   ' → logprob: -14.188285827636719
    10. '```' → logprob: -14.313285827636719

Token 746: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010341187007725239
    2. '2' → logprob: -6.876034259796143
    3. '[
' → logprob: -14.501033782958984
    4. '```' → logprob: -14.876033782958984
    5. '
' → logprob: -16.001033782958984
    6. 'def' → logprob: -16.126033782958984
    7. ' [' → logprob: -16.876033782958984
    8. '   ' → logprob: -17.001033782958984
    9. '#' → logprob: -17.251033782958984
    10. '(' → logprob: -17.376033782958984

Token 747: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -3.15441757265944e-05
    2. '0' → logprob: -10.875031471252441
    3. ''' → logprob: -11.750031471252441
    4. 'x' → logprob: -13.625031471252441
    5. '1' → logprob: -13.875031471252441
    6. ' ' → logprob: -14.625031471252441
    7. '3' → logprob: -14.750031471252441
    8. '```' → logprob: -14.875031471252441
    9. '[' → logprob: -15.000031471252441
    10. '   ' → logprob: -15.250031471252441

Token 748: ']' (ID: 60)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00761218648403883
    2. 'in' → logprob: -4.882612228393555
    3. ']' → logprob: -13.007612228393555
    4. 'In' → logprob: -13.382612228393555
    5. ' ' → logprob: -14.132612228393555
    6. '   ' → logprob: -15.007612228393555
    7. '  ' → logprob: -15.382612228393555
    8. '==' → logprob: -15.757612228393555
    9. '```' → logprob: -15.757612228393555
    10. ' ==' → logprob: -16.132612228393555

Token 749: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06994277238845825
    2. 'in' → logprob: -2.6949427127838135
    3. '['' → logprob: -13.069942474365234
    4. '==' → logprob: -13.194942474365234
    5. 'In' → logprob: -14.319942474365234
    6. ' ==' → logprob: -14.319942474365234
    7. ' ' → logprob: -14.944942474365234
    8. '[' → logprob: -15.569942474365234
    9. '```' → logprob: -15.569942474365234
    10. '=='' → logprob: -15.694942474365234

Token 750: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -9.85366350505501e-05
    2. ' ['' → logprob: -9.62509822845459
    3. '[' → logprob: -10.37509822845459
    4. ''' → logprob: -15.00009822845459
    5. '[
' → logprob: -15.37509822845459
    6. '('' → logprob: -15.62509822845459
    7. '[['' → logprob: -15.75009822845459
    8. '["' → logprob: -16.125099182128906
    9. '   ' → logprob: -16.500099182128906
    10. ' ' → logprob: -17.000099182128906

Token 751: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.018769260495901108
    2. '0' → logprob: -4.018769264221191
    3. '['' → logprob: -8.143769264221191
    4. ''x' → logprob: -8.643769264221191
    5. '1' → logprob: -9.268769264221191
    6. 'x' → logprob: -10.518769264221191
    7. '`' → logprob: -11.768769264221191
    8. ' '' → logprob: -12.518769264221191
    9. '"' → logprob: -12.518769264221191
    10. ''e' → logprob: -12.893769264221191

Token 752: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.003508368507027626
    2. '',' → logprob: -5.753508567810059
    3. ''' → logprob: -9.253508567810059
    4. ','' → logprob: -9.378508567810059
    5. ',' → logprob: -10.003508567810059
    6. ''x' → logprob: -10.128508567810059
    7. ' ','' → logprob: -10.878508567810059
    8. ',x' → logprob: -11.003508567810059
    9. '',['' → logprob: -11.878508567810059
    10. '',"' → logprob: -12.253508567810059

Token 753: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.07924358546733856
    2. ''x' → logprob: -2.5792436599731445
    3. ' x' → logprob: -7.9542436599731445
    4. '"x' → logprob: -14.704243659973145
    5. ''' → logprob: -14.829243659973145
    6. ' '' → logprob: -14.829243659973145
    7. '```' → logprob: -14.829243659973145
    8. '['' → logprob: -15.204243659973145
    9. '_x' → logprob: -15.829243659973145
    10. ' ' → logprob: -15.829243659973145

Token 754: '']' (ID: 1089)
  Prédit: '']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.044177502393722534
    2. ']' → logprob: -3.169177532196045
    3. ' and' → logprob: -7.294177532196045
    4. ' ']' → logprob: -9.044177055358887
    5. ' ]' → logprob: -9.169177055358887
    6. ''' → logprob: -9.294177055358887
    7. 'and' → logprob: -9.794177055358887
    8. '',' → logprob: -9.919177055358887
    9. '"]' → logprob: -10.669177055358887
    10. ',' → logprob: -11.294177055358887

Token 755: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0019305398454889655
    2. 'and' → logprob: -6.2519307136535645
    3. '```' → logprob: -14.001930236816406
    4. ' ' → logprob: -14.626930236816406
    5. '           ' → logprob: -15.751930236816406
    6. ',' → logprob: -15.876930236816406
    7. ' or' → logprob: -16.626930236816406
    8. '   ' → logprob: -17.126930236816406
    9. ')' → logprob: -17.376930236816406
    10. '    ' → logprob: -17.626930236816406

Token 756: ' bits' (ID: 18189)
  Prédit: ' bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.2858988046646118
    2. 'bits' → logprob: -1.4108988046646118
    3. '(bits' → logprob: -5.410898685455322
    4. ' (' → logprob: -8.41089916229248
    5. '(' → logprob: -10.53589916229248
    6. '(b' → logprob: -12.41089916229248
    7. 'bit' → logprob: -12.41089916229248
    8. 'Bits' → logprob: -13.16089916229248
    9. '.bits' → logprob: -13.28589916229248
    10. '_bits' → logprob: -13.28589916229248

Token 757: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.4849443838757e-06
    2. '3' → logprob: -12.500004768371582
    3. '[
' → logprob: -15.125004768371582
    4. '```' → logprob: -15.250004768371582
    5. '   ' → logprob: -16.875003814697266
    6. 'def' → logprob: -17.250003814697266
    7. '(' → logprob: -17.500003814697266
    8. ' [' → logprob: -17.750003814697266
    9. '...' → logprob: -18.000003814697266
    10. '
' → logprob: -18.625003814697266

Token 758: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -14.625001907348633
    3. '
' → logprob: -14.625001907348633
    4. '4' → logprob: -15.375001907348633
    5. '[' → logprob: -15.875001907348633
    6. '   ' → logprob: -15.875001907348633
    7. '2' → logprob: -16.062501907348633
    8. '```' → logprob: -16.312501907348633
    9. '1' → logprob: -16.812501907348633
    10. '0' → logprob: -17.062501907348633

Token 759: ']' (ID: 60)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.379146009683609
    2. 'in' → logprob: -1.6291459798812866
    3. ']' → logprob: -2.129146099090576
    4. '']' → logprob: -8.129145622253418
    5. 'In' → logprob: -9.754145622253418
    6. ')' → logprob: -10.254145622253418
    7. ']==' → logprob: -10.629145622253418
    8. '==' → logprob: -10.754145622253418
    9. ']=='' → logprob: -11.129145622253418
    10. '```' → logprob: -11.129145622253418

Token 760: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.02630552463233471
    2. 'in' → logprob: -3.6513054370880127
    3. '<|end|>' → logprob: -13.401305198669434
    4. 'In' → logprob: -13.526305198669434
    5. ')' → logprob: -14.276305198669434
    6. '```' → logprob: -15.026305198669434
    7. ' ' → logprob: -15.151305198669434
    8. '_in' → logprob: -16.02630615234375
    9. '['' → logprob: -16.02630615234375
    10. '[' → logprob: -16.02630615234375

Token 761: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -3.273621405242011e-05
    2. '[' → logprob: -10.875032424926758
    3. ' ['' → logprob: -11.250032424926758
    4. '   ' → logprob: -15.625032424926758
    5. '[
' → logprob: -15.625032424926758
    6. '('' → logprob: -16.000032424926758
    7. '[['' → logprob: -16.375032424926758
    8. '(['' → logprob: -16.500032424926758
    9. ''' → logprob: -16.625032424926758
    10. '["' → logprob: -16.875032424926758

Token 762: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.46647125482559204
    2. '['' → logprob: -1.4664711952209473
    3. ''' → logprob: -1.9664711952209473
    4. ''x' → logprob: -7.216471195220947
    5. 'x' → logprob: -7.591471195220947
    6. ''e' → logprob: -8.216471672058105
    7. '1' → logprob: -8.466471672058105
    8. '[' → logprob: -9.341471672058105
    9. '{'' → logprob: -9.716471672058105
    10. '('' → logprob: -9.716471672058105

Token 763: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.021305033937096596
    2. ','' → logprob: -4.021305084228516
    3. '',' → logprob: -6.396305084228516
    4. ',' → logprob: -6.771305084228516
    5. ',x' → logprob: -8.521305084228516
    6. ''' → logprob: -10.521305084228516
    7. ''x' → logprob: -10.771305084228516
    8. '',"' → logprob: -10.896305084228516
    9. ' ,'' → logprob: -11.146305084228516
    10. '",'' → logprob: -11.271305084228516

Token 764: 'x' (ID: 87)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.575944721698761
    2. 'x' → logprob: -0.825944721698761
    3. '['' → logprob: -13.200944900512695
    4. ' x' → logprob: -13.200944900512695
    5. '"x' → logprob: -13.825944900512695
    6. '```' → logprob: -15.325944900512695
    7. ''' → logprob: -16.950944900512695
    8. '[x' → logprob: -17.075944900512695
    9. ' '' → logprob: -17.200944900512695
    10. ''''' → logprob: -17.450944900512695

Token 765: '']:
' (ID: 44766)
  Prédit: '']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']' → logprob: -0.015715589746832848
    2. ']' → logprob: -4.890715599060059
    3. '']:
' → logprob: -4.890715599060059
    4. '',' → logprob: -8.640715599060059
    5. '   ' → logprob: -9.515715599060059
    6. ''' → logprob: -9.765715599060059
    7. '']:' → logprob: -9.765715599060059
    8. ',' → logprob: -9.765715599060059
    9. ']:
' → logprob: -9.890715599060059
    10. '```' → logprob: -11.140715599060059

Token 766: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09703494608402252
    2. '               ' → logprob: -2.8470349311828613
    3. ' and' → logprob: -3.4720349311828613
    4. 'and' → logprob: -5.972034931182861
    5. '       ' → logprob: -7.972034931182861
    6. ' if' → logprob: -8.97203540802002
    7. '```' → logprob: -9.34703540802002
    8. 'if' → logprob: -9.72203540802002
    9. '   ' → logprob: -9.97203540802002
    10. ' y' → logprob: -10.22203540802002

Token 767: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.016107682138681412
    2. '               ' → logprob: -4.766107559204102
    3. '           ' → logprob: -5.141107559204102
    4. ' y' → logprob: -6.516107559204102
    5. '   ' → logprob: -9.891107559204102
    6. 'if' → logprob: -10.516107559204102
    7. '                   ' → logprob: -10.766107559204102
    8. ' ' → logprob: -11.141107559204102
    9. '#' → logprob: -12.516107559204102
    10. '  ' → logprob: -12.891107559204102

Token 768: 'bits' (ID: 24043)
  Prédit: 'bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.0009771942859515548
    2. '_bits' → logprob: -7.750977039337158
    3. 's' → logprob: -8.500977516174316
    4. ' =' → logprob: -8.750977516174316
    5. '=' → logprob: -9.250977516174316
    6. ' bits' → logprob: -11.125977516174316
    7. '[' → logprob: -11.375977516174316
    8. '==' → logprob: -11.625977516174316
    9. 'bit' → logprob: -11.625977516174316
    10. '```' → logprob: -11.625977516174316

Token 769: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20142386853694916
    2. '=' → logprob: -1.7014238834381104
    3. ' in' → logprob: -12.201423645019531
    4. '<|end|>' → logprob: -13.326423645019531
    5. 'in' → logprob: -13.576423645019531
    6. '[' → logprob: -14.826423645019531
    7. ' =[' → logprob: -14.951423645019531
    8. ' ' → logprob: -15.201423645019531
    9. 's' → logprob: -15.326423645019531
    10. '=[' → logprob: -15.701423645019531

Token 770: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.06199771910905838
    2. ' bits' → logprob: -2.811997652053833
    3. '[' → logprob: -10.561997413635254
    4. '(bits' → logprob: -13.561997413635254
    5. 'bit' → logprob: -13.811997413635254
    6. ' [' → logprob: -14.436997413635254
    7. '   ' → logprob: -14.561997413635254
    8. '[
' → logprob: -14.686997413635254
    9. '.bits' → logprob: -16.31199836730957
    10. 'Bits' → logprob: -16.81199836730957

Token 771: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -3.1424973713001236e-05
    2. '4' → logprob: -10.375031471252441
    3. ' [' → logprob: -16.500030517578125
    4. '3' → logprob: -16.625030517578125
    5. '```' → logprob: -17.625030517578125
    6. '(' → logprob: -18.375030517578125
    7. ' ' → logprob: -19.125030517578125
    8. '[
' → logprob: -19.250030517578125
    9. '5' → logprob: -19.625030517578125
    10. '   ' → logprob: -20.125030517578125

Token 772: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.214019307051785e-05
    2. '[' → logprob: -10.375032424926758
    3. ' ' → logprob: -15.000032424926758
    4. '```' → logprob: -16.125032424926758
    5. '
' → logprob: -16.250032424926758
    6. '(' → logprob: -16.375032424926758
    7. '   ' → logprob: -16.875032424926758
    8. '４' → logprob: -17.125032424926758
    9. '۴' → logprob: -17.250032424926758
    10. 'range' → logprob: -17.750032424926758

Token 773: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.9186317482963204e-05
    2. '6' → logprob: -10.625049591064453
    3. '[' → logprob: -11.125049591064453
    4. '7' → logprob: -12.375049591064453
    5. ':]' → logprob: -13.250049591064453
    6. '4' → logprob: -13.750049591064453
    7. '5' → logprob: -13.750049591064453
    8. '```' → logprob: -14.250049591064453
    9. ']' → logprob: -14.750049591064453
    10. ' :' → logprob: -15.375049591064453

Token 774: '8' (ID: 23)
  Prédit: '7'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00010103991371579468
    2. '8' → logprob: -9.250101089477539
    3. '6' → logprob: -13.750101089477539
    4. 'len' → logprob: -14.125101089477539
    5. ' ' → logprob: -14.375101089477539
    6. '-' → logprob: -14.750101089477539
    7. '```' → logprob: -14.875101089477539
    8. '3' → logprob: -14.937601089477539
    9. '
' → logprob: -15.062601089477539
    10. '5' → logprob: -15.562601089477539

Token 775: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.07909610122442245
    2. ']' → logprob: -2.5790960788726807
    3. '               ' → logprob: -8.954095840454102
    4. ']
' → logprob: -9.954095840454102
    5. '           ' → logprob: -11.204095840454102
    6. '                   ' → logprob: -12.329095840454102
    7. '']
' → logprob: -12.704095840454102
    8. ']

' → logprob: -13.329095840454102
    9. '']' → logprob: -13.454095840454102
    10. ')
' → logprob: -13.579095840454102

Token 776: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.004677779972553253
    2. 'if' → logprob: -5.504677772521973
    3. ' if' → logprob: -7.629677772521973
    4. '                   ' → logprob: -10.379677772521973
    5. '           ' → logprob: -10.754677772521973
    6. '<|end|>' → logprob: -10.879677772521973
    7. '                
' → logprob: -11.629677772521973
    8. '#' → logprob: -12.129677772521973
    9. 'x' → logprob: -12.379677772521973
    10. '              ' → logprob: -12.879677772521973

Token 777: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.019461732357740402
    2. '               ' → logprob: -4.019461631774902
    3. ' if' → logprob: -6.644461631774902
    4. 'x' → logprob: -12.519461631774902
    5. '                   ' → logprob: -13.144461631774902
    6. '#' → logprob: -13.269461631774902
    7. '           ' → logprob: -14.144461631774902
    8. 'for' → logprob: -14.519461631774902
    9. '```' → logprob: -15.644461631774902
    10. '	if' → logprob: -15.769461631774902

Token 778: ' '' (ID: 461)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.00122379744425416
    2. ' '' → logprob: -7.126223564147949
    3. ''' → logprob: -7.876223564147949
    4. 'x' → logprob: -11.25122356414795
    5. ' x' → logprob: -11.87622356414795
    6. '('' → logprob: -12.37622356414795
    7. '1' → logprob: -12.50122356414795
    8. ''any' → logprob: -12.87622356414795
    9. '
' → logprob: -13.25122356414795
    10. ' ' → logprob: -13.37622356414795

Token 779: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00030412263004109263
    2. ''x' → logprob: -8.125304222106934
    3. ''' → logprob: -11.875304222106934
    4. ' x' → logprob: -14.750304222106934
    5. '"x' → logprob: -15.375304222106934
    6. '['' → logprob: -16.125303268432617
    7. '1' → logprob: -16.250303268432617
    8. ''s' → logprob: -16.375303268432617
    9. '```' → logprob: -16.875303268432617
    10. '`' → logprob: -17.625303268432617

Token 780: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.006899131927639246
    2. ' in' → logprob: -5.256899356842041
    3. 'in' → logprob: -7.006899356842041
    4. ''in' → logprob: -7.256899356842041
    5. ']' → logprob: -10.256898880004883
    6. '"' → logprob: -12.006898880004883
    7. '']' → logprob: -13.006898880004883
    8. '`' → logprob: -13.756898880004883
    9. 'x' → logprob: -13.881898880004883
    10. 'In' → logprob: -13.881898880004883

Token 781: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038059625774621964
    2. 'in' → logprob: -3.288059711456299
    3. '<|end|>' → logprob: -12.16305923461914
    4. ')' → logprob: -13.03805923461914
    5. ']' → logprob: -13.03805923461914
    6. 'In' → logprob: -13.53805923461914
    7. '[' → logprob: -13.78805923461914
    8. '...' → logprob: -13.91305923461914
    9. 'import' → logprob: -14.03805923461914
    10. ''' → logprob: -14.16305923461914

Token 782: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0002967320033349097
    2. ' y' → logprob: -8.125296592712402
    3. '[y' → logprob: -15.625296592712402
    4. ''y' → logprob: -16.37529754638672
    5. '[' → logprob: -16.62529754638672
    6. '	y' → logprob: -16.87529754638672
    7. '...' → logprob: -17.12529754638672
    8. '(y' → logprob: -17.12529754638672
    9. 'yb' → logprob: -17.62529754638672
    10. '‘y' → logprob: -17.75029754638672

Token 783: 'bits' (ID: 24043)
  Prédit: 'bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.049895692616701126
    2. 'y' → logprob: -3.049895763397217
    3. 'its' → logprob: -6.799895763397217
    4. ' y' → logprob: -9.299895286560059
    5. '...' → logprob: -11.299895286560059
    6. ' bits' → logprob: -11.299895286560059
    7. '[' → logprob: -11.424895286560059
    8. ']' → logprob: -11.549895286560059
    9. '(bits' → logprob: -11.674895286560059
    10. '(y' → logprob: -11.799895286560059

Token 784: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.508885383605957
    2. ':' → logprob: -1.008885383605957
    3. '                   ' → logprob: -3.633885383605957
    4. '):
' → logprob: -5.633885383605957
    5. '               ' → logprob: -6.258885383605957
    6. '<|end|>' → logprob: -7.383885383605957
    7. '           ' → logprob: -7.758885383605957
    8. '):' → logprob: -7.883885383605957
    9. ' and' → logprob: -7.883885383605957
    10. ')' → logprob: -9.133885383605957

Token 785: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.027433529496192932
    2. '           ' → logprob: -3.7774336338043213
    3. '               ' → logprob: -5.777433395385742
    4. '#' → logprob: -7.527433395385742
    5. '```' → logprob: -8.402433395385742
    6. '       ' → logprob: -8.902433395385742
    7. '   ' → logprob: -9.402433395385742
    8. '                       ' → logprob: -9.902433395385742
    9. ',' → logprob: -10.527433395385742
    10. '                  ' → logprob: -11.902433395385742

Token 786: ' count' (ID: 3605)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.24396468698978424
    2. 'count' (adapté à ' count') → logprob: -1.618964672088623
    3. '                       ' → logprob: -4.993964672088623
    4. '#' → logprob: -4.993964672088623
    5. '               ' → logprob: -5.743964672088623
    6. '           ' → logprob: -7.243964672088623
    7. '```' → logprob: -7.868964672088623
    8. ' count' → logprob: -8.618965148925781
    9. 'continue' → logprob: -8.743965148925781
    10. '   ' → logprob: -10.118965148925781

Token 787: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02631540037691593
    2. '=' → logprob: -3.651315450668335
    3. '                   ' → logprob: -11.776315689086914
    4. ' +=' → logprob: -12.401315689086914
    5. '+=' → logprob: -13.776315689086914
    6. '                       ' → logprob: -14.526315689086914
    7. '   ' → logprob: -14.901315689086914
    8. '                    ' → logprob: -15.151315689086914
    9. '               ' → logprob: -15.526315689086914
    10. '```' → logprob: -16.026315689086914

Token 788: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013259568950161338
    2. ' ' → logprob: -6.626326084136963
    3. '                   ' → logprob: -18.251325607299805
    4. '   ' → logprob: -18.876325607299805
    5. '                       ' → logprob: -19.126325607299805
    6. '                           ' → logprob: -20.751325607299805
    7. 'count' → logprob: -21.126325607299805
    8. '=' → logprob: -21.251325607299805
    9. '               ' → logprob: -21.376325607299805
    10. '           ' → logprob: -21.376325607299805

Token 789: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. 'count' → logprob: -18.000001907348633
    4. '   ' → logprob: -19.500001907348633
    5. '```' → logprob: -20.000001907348633
    6. '...' → logprob: -21.125001907348633
    7. '                   ' → logprob: -21.375001907348633
    8. '000' → logprob: -21.500001907348633
    9. 'code' → logprob: -22.000001907348633
    10. '           ' → logprob: -22.375001907348633

Token 790: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004529331345111132
    2. '           ' → logprob: -6.6295294761657715
    3. 'for' → logprob: -7.0045294761657715
    4. '				' → logprob: -7.3795294761657715
    5. '		           ' → logprob: -7.6295294761657715
    6. '               ' → logprob: -8.254528999328613
    7. '       ' → logprob: -8.629528999328613
    8. ' for' → logprob: -8.754528999328613
    9. '		' → logprob: -9.129528999328613
    10. '			       ' → logprob: -9.254528999328613

Token 791: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004936885554343462
    2. 'for' → logprob: -5.754936695098877
    3. '           ' → logprob: -6.879936695098877
    4. '               ' → logprob: -8.504937171936035
    5. ' for' → logprob: -8.629937171936035
    6. '		           ' → logprob: -8.754937171936035
    7. '				' → logprob: -9.504937171936035
    8. '	               ' → logprob: -10.879937171936035
    9. '                       ' → logprob: -11.129937171936035
    10. '		' → logprob: -11.254937171936035

Token 792: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0025647184811532497
    2. '                   ' → logprob: -6.002564907073975
    3. ' for' → logprob: -9.752564430236816
    4. '           ' → logprob: -11.377564430236816
    5. '               ' → logprob: -11.752564430236816
    6. '	for' → logprob: -11.877564430236816
    7. '				' → logprob: -13.252564430236816
    8. '                       ' → logprob: -13.502564430236816
    9. '		' → logprob: -14.252564430236816
    10. '       ' → logprob: -15.752564430236816

Token 793: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.007606866303831339
    2. ' i' → logprob: -4.8826069831848145
    3. '```' → logprob: -14.882606506347656
    4. '	i' → logprob: -16.257606506347656
    5. '...' → logprob: -16.382606506347656
    6. ' ' → logprob: -16.507606506347656
    7. '   ' → logprob: -16.882606506347656
    8. 'b' → logprob: -17.007606506347656
    9. 'byte' → logprob: -17.257606506347656
    10. '  ' → logprob: -17.382606506347656

Token 794: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0017038638470694423
    2. 'in' → logprob: -6.37670373916626
    3. 'range' → logprob: -13.751704216003418
    4. 'n' → logprob: -14.876704216003418
    5. '                   ' → logprob: -16.1267032623291
    6. ' ' → logprob: -16.3767032623291
    7. '                    ' → logprob: -16.6267032623291
    8. '                       ' → logprob: -17.1267032623291
    9. '```' → logprob: -17.5017032623291
    10. ' range' → logprob: -17.5017032623291

Token 795: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.0206720617134124e-05
    2. ' range' → logprob: -11.50001049041748
    3. '
' → logprob: -21.750009536743164
    4. '(range' → logprob: -22.000009536743164
    5. '	range' → logprob: -23.250009536743164
    6. '[' → logprob: -24.875009536743164
    7. ' ' → logprob: -25.250009536743164
    8. '   ' → logprob: -25.375009536743164
    9. 'count' → logprob: -25.500009536743164
    10. '```' → logprob: -25.750009536743164

Token 796: '(' (ID: 7)
  Prédit: '256'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '256' → logprob: -0.5775886178016663
    2. 'range' → logprob: -0.8275886178016663
    3. ' range' → logprob: -6.4525885581970215
    4. '(' → logprob: -9.95258903503418
    5. '128' → logprob: -11.57758903503418
    6. '(range' → logprob: -12.70258903503418
    7. ' ' → logprob: -12.95258903503418
    8. '[' → logprob: -13.20258903503418
    9. '64' → logprob: -13.45258903503418
    10. '255' → logprob: -13.70258903503418

Token 797: '256' (ID: 5780)
  Prédit: '256'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '256' → logprob: -1.2664456789934775e-06
    2. 'range' → logprob: -14.000000953674316
    3. ' ' → logprob: -15.500000953674316
    4. '255' → logprob: -16.750001907348633
    5. '
' → logprob: -17.500001907348633
    6. '128' → logprob: -17.625001907348633
    7. ' range' → logprob: -19.750001907348633
    8. '   ' → logprob: -20.000001907348633
    9. '258' → logprob: -20.125001907348633
    10. '```' → logprob: -20.250001907348633

Token 798: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.030590897426009178
    2. '):' → logprob: -4.655591011047363
    3. ':
' → logprob: -4.655591011047363
    4. '                       ' → logprob: -5.155591011047363
    5. ':' → logprob: -5.405591011047363
    6. '                   ' → logprob: -7.655591011047363
    7. '       ' → logprob: -8.405591011047363
    8. '               ' → logprob: -10.280591011047363
    9. '):
' → logprob: -10.405591011047363
    10. '```' → logprob: -10.405591011047363

Token 799: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.00987708568572998
    2. ' b' → logprob: -4.8848772048950195
    3. 'b' → logprob: -6.2598772048950195
    4. '	                   ' → logprob: -9.38487720489502
    5. '					' → logprob: -9.50987720489502
    6. '       ' → logprob: -9.88487720489502
    7. '                   ' → logprob: -10.13487720489502
    8. '               ' → logprob: -10.88487720489502
    9. '		               ' → logprob: -11.25987720489502
    10. '   ' → logprob: -11.25987720489502

Token 800: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.7595627903938293
    2. ' b' → logprob: -0.8845627903938293
    3. '                       ' → logprob: -2.1345627307891846
    4. '	b' → logprob: -8.634562492370605
    5. '					' → logprob: -8.634562492370605
    6. '                   ' → logprob: -9.384562492370605
    7. '       ' → logprob: -9.634562492370605
    8. '   ' → logprob: -9.759562492370605
    9. '               ' → logprob: -10.134562492370605
    10. '           ' → logprob: -10.134562492370605

Token 801: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07911934703588486
    2. ' =' → logprob: -2.5791194438934326
    3. '=format' → logprob: -8.454119682312012
    4. '                       ' → logprob: -12.329119682312012
    5. '=
' → logprob: -12.454119682312012
    6. '                           ' → logprob: -13.454119682312012
    7. '='' → logprob: -13.454119682312012
    8. '                   ' → logprob: -14.329119682312012
    9. '                        ' → logprob: -14.454119682312012
    10. '               ' → logprob: -14.704119682312012

Token 802: ' format' (ID: 6011)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.20141363143920898
    2. ' format' → logprob: -1.701413631439209
    3. '(format' → logprob: -15.076414108276367
    4. '.format' → logprob: -18.076414108276367
    5. '	format' → logprob: -18.326414108276367
    6. '=format' → logprob: -18.576414108276367
    7. 'f' → logprob: -19.326414108276367
    8. 'form' → logprob: -19.576414108276367
    9. '_format' → logprob: -19.701414108276367
    10. 'Format' → logprob: -20.201414108276367

Token 803: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: 0.0
    2. 'i' → logprob: -18.5
    3. '(' → logprob: -18.625
    4. ' (' → logprob: -18.75
    5. '[i' → logprob: -19.5
    6. '(ii' → logprob: -19.5
    7. '(int' → logprob: -19.625
    8. '   ' → logprob: -20.5
    9. '```' → logprob: -20.875
    10. '(I' → logprob: -21.5

Token 804: ','' (ID: 6620)
  Prédit: ',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ','' → logprob: -0.0026151363272219896
    2. ',' → logprob: -6.002614974975586
    3. '(i' → logprob: -9.877614974975586
    4. '(),'' → logprob: -10.002614974975586
    5. '','' → logprob: -11.002614974975586
    6. '(' → logprob: -11.752614974975586
    7. ',"' → logprob: -12.377614974975586
    8. ',i' → logprob: -12.627614974975586
    9. '',' → logprob: -12.877614974975586
    10. '[i' → logprob: -13.127614974975586

Token 805: '08' (ID: 3062)
  Prédit: '08'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '08' → logprob: -0.006721059791743755
    2. ''' → logprob: -5.006721019744873
    3. '008' → logprob: -13.006721496582031
    4. '"' → logprob: -13.256721496582031
    5. '8' → logprob: -13.631721496582031
    6. '`' → logprob: -15.506721496582031
    7. '```' → logprob: -16.13172149658203
    8. ' ' → logprob: -16.75672149658203
    9. '081' → logprob: -17.75672149658203
    10. '07' → logprob: -17.75672149658203

Token 806: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -4.246537173457909e-06
    2. ''b' → logprob: -12.500003814697266
    3. 'bit' → logprob: -15.750003814697266
    4. '08' → logprob: -15.875003814697266
    5. 'binary' → logprob: -16.375003814697266
    6. '```' → logprob: -16.875003814697266
    7. 'bx' → logprob: -17.750003814697266
    8. 'bin' → logprob: -17.750003814697266
    9. 'bb' → logprob: -18.000003814697266
    10. ' b' → logprob: -18.750003814697266

Token 807: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.17427700757980347
    2. ')
' → logprob: -2.2992770671844482
    3. '')' → logprob: -3.4242770671844482
    4. '):
' → logprob: -4.174276828765869
    5. '')
' → logprob: -5.174276828765869
    6. '                       ' → logprob: -5.924276828765869
    7. ''):
' → logprob: -6.549276828765869
    8. ')
' → logprob: -7.299276828765869
    9. '):' → logprob: -7.924276828765869
    10. '```' → logprob: -8.049277305603027

Token 808: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.01114320382475853
    2. '
' → logprob: -5.386143207550049
    3. '                   ' → logprob: -5.886143207550049
    4. '<|end|>' → logprob: -7.386143207550049
    5. '					' → logprob: -7.761143207550049
    6. '                        
' → logprob: -7.761143207550049
    7. '       ' → logprob: -7.886143207550049
    8. '           ' → logprob: -7.886143207550049
    9. '```' → logprob: -8.01114273071289
    10. '               ' → logprob: -8.26114273071289

Token 809: ' ok' (ID: 4763)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' (adapté à ' ok') → logprob: -0.6662176251411438
    2. ' ok' → logprob: -0.7912176251411438
    3. '                       ' → logprob: -3.541217565536499
    4. '
' → logprob: -6.791217803955078
    5. '	ok' → logprob: -7.041217803955078
    6. 'if' → logprob: -7.666217803955078
    7. '                   ' → logprob: -8.541217803955078
    8. '                           ' → logprob: -8.666217803955078
    9. '           ' → logprob: -8.791217803955078
    10. ' okay' → logprob: -9.041217803955078

Token 810: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4758189022541046
    2. '=' → logprob: -0.9758188724517822
    3. '=True' → logprob: -7.475819110870361
    4. '=False' → logprob: -7.600819110870361
    5. '                       ' → logprob: -7.850819110870361
    6. '<|end|>' → logprob: -9.475818634033203
    7. '```' → logprob: -9.850818634033203
    8. '                           ' → logprob: -9.975818634033203
    9. '==' → logprob: -11.225818634033203
    10. '                               ' → logprob: -11.225818634033203

Token 811: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0024756586644798517
    2. ' True' → logprob: -6.002475738525391
    3. '(True' → logprob: -17.87747573852539
    4. '=True' → logprob: -18.75247573852539
    5. 'False' → logprob: -20.00247573852539
    6. '1' → logprob: -22.62747573852539
    7. '.True' → logprob: -22.75247573852539
    8. '   ' → logprob: -23.12747573852539
    9. 'true' → logprob: -23.37747573852539
    10. '```' → logprob: -23.62747573852539

Token 812: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.034955982118844986
    2. '<|end|>' → logprob: -3.6599559783935547
    3. 'for' → logprob: -5.534955978393555
    4. '                           ' → logprob: -6.534955978393555
    5. '					' → logprob: -7.659955978393555
    6. '	                       ' → logprob: -7.659955978393555
    7. ' for' → logprob: -7.784955978393555
    8. '                        
' → logprob: -7.784955978393555
    9. '			           ' → logprob: -8.784955978393555
    10. '```' → logprob: -8.909955978393555

Token 813: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.14869986474514008
    2. 'for' → logprob: -2.0236997604370117
    3. ' for' → logprob: -5.398699760437012
    4. '                           ' → logprob: -7.273699760437012
    5. '```' → logprob: -7.898699760437012
    6. '<|end|>' → logprob: -9.273699760437012
    7. '					' → logprob: -9.773699760437012
    8. '                   ' → logprob: -9.773699760437012
    9. '           ' → logprob: -10.148699760437012
    10. '	for' → logprob: -10.523699760437012

Token 814: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3170086741447449
    2. '                       ' → logprob: -1.3170087337493896
    3. ' for' → logprob: -6.4420084953308105
    4. '					' → logprob: -7.0670084953308105
    5. '                           ' → logprob: -7.5670084953308105
    6. '		' → logprob: -7.8170084953308105
    7. '	for' → logprob: -9.317008972167969
    8. '           ' → logprob: -10.192008972167969
    9. '						' → logprob: -10.192008972167969
    10. '                   ' → logprob: -10.317008972167969

Token 815: ' pb' (ID: 31582)
  Prédit: 'pb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pb' → logprob: -0.06994910538196564
    2. ' pb' → logprob: -2.694949150085449
    3. 'ps' → logprob: -12.19494915008545
    4. 'p' → logprob: -12.69494915008545
    5. 'pbs' → logprob: -13.44494915008545
    6. 'bits' → logprob: -14.19494915008545
    7. '(pb' → logprob: -14.31994915008545
    8. 'bit' → logprob: -15.19494915008545
    9. '_pb' → logprob: -15.19494915008545
    10. ' ps' → logprob: -15.56994915008545

Token 816: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00029029499273747206
    2. ',b' → logprob: -8.375289916992188
    3. ' ,' → logprob: -9.875289916992188
    4. ',p' → logprob: -12.125289916992188
    5. '<|end|>' → logprob: -14.750289916992188
    6. 'in' → logprob: -14.875289916992188
    7. 'b' → logprob: -14.875289916992188
    8. ' in' → logprob: -15.125289916992188
    9. '_,' → logprob: -15.250289916992188
    10. ',user' → logprob: -16.000289916992188

Token 817: ' bb' (ID: 32433)
  Prédit: 'bb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.3868740200996399
    2. ' bb' → logprob: -1.1368739604949951
    3. '(bb' → logprob: -13.386874198913574
    4. ' ' → logprob: -14.261874198913574
    5. '.bb' → logprob: -14.636874198913574
    6. '_bb' → logprob: -15.011874198913574
    7. 'b' → logprob: -16.636873245239258
    8. 'bbs' → logprob: -17.636873245239258
    9. 'bbb' → logprob: -18.011873245239258
    10. 'cb' → logprob: -18.011873245239258

Token 818: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.6931476593017578
    2. ' in' → logprob: -0.6931476593017578
    3. ' ' → logprob: -15.693147659301758
    4. '	in' → logprob: -16.568147659301758
    5. ',' → logprob: -16.693147659301758
    6. 'In' → logprob: -17.068147659301758
    7. '```' → logprob: -17.568147659301758
    8. 'import' → logprob: -17.943147659301758
    9. '<|end|>' → logprob: -18.193147659301758
    10. '
' → logprob: -18.443147659301758

Token 819: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.12692883610725403
    2. ' zip' → logprob: -2.1269288063049316
    3. '(zip' → logprob: -14.12692928314209
    4. '.zip' → logprob: -16.501928329467773
    5. '_zip' → logprob: -19.251928329467773
    6. '
' → logprob: -19.626928329467773
    7. 'ip' → logprob: -21.001928329467773
    8. 'z' → logprob: -21.501928329467773
    9. '```' → logprob: -22.001928329467773
    10. ' ' → logprob: -22.376928329467773

Token 820: '(bits' (ID: 170698)
  Prédit: '(bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bits' → logprob: -0.005258422344923019
    2. 'bits' → logprob: -5.255258560180664
    3. ' bits' → logprob: -10.630258560180664
    4. '.bits' → logprob: -16.130258560180664
    5. '(bit' → logprob: -16.255258560180664
    6. '(bytes' → logprob: -16.755258560180664
    7. '(b' → logprob: -17.005258560180664
    8. '_bits' → logprob: -17.005258560180664
    9. '<bits' → logprob: -17.130258560180664
    10. ' (' → logprob: -18.380258560180664

Token 821: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0325924449716695e-05
    2. ' ,' → logprob: -12.25001049041748
    3. ',p' → logprob: -12.37501049041748
    4. ',b' → logprob: -13.87501049041748
    5. '           ' → logprob: -16.625009536743164
    6. ',
' → logprob: -16.875009536743164
    7. ')' → logprob: -17.750009536743164
    8. 'if' → logprob: -17.875009536743164
    9. '<|end|>' → logprob: -17.875009536743164
    10. ',user' → logprob: -18.000009536743164

Token 822: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0067190444096922874
    2. ' b' → logprob: -5.00671911239624
    3. 'byte' → logprob: -12.631718635559082
    4. ' byte' → logprob: -15.756718635559082
    5. '[b' → logprob: -16.2567195892334
    6. 'bb' → logprob: -16.6317195892334
    7. ')b' → logprob: -17.0067195892334
    8. ' ' → logprob: -17.5067195892334
    9. '       ' → logprob: -17.8817195892334
    10. '   ' → logprob: -18.2567195892334

Token 823: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.024117371067404747
    2. '):' → logprob: -3.7741174697875977
    3. '                           ' → logprob: -7.524117469787598
    4. ':
' → logprob: -8.774117469787598
    5. ':' → logprob: -9.524117469787598
    6. '                               ' → logprob: -9.774117469787598
    7. '):
' → logprob: -10.524117469787598
    8. '):

' → logprob: -12.024117469787598
    9. '():
' → logprob: -12.274117469787598
    10. '                       ' → logprob: -12.899117469787598

Token 824: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.005943018011748791
    2. '                               ' → logprob: -5.7559428215026855
    3. '           ' → logprob: -7.0059428215026855
    4. '<|end|>' → logprob: -7.6309428215026855
    5. 'if' → logprob: -7.8809428215026855
    6. ' if' → logprob: -8.005943298339844
    7. '                       ' → logprob: -8.005943298339844
    8. '               ' → logprob: -9.255943298339844
    9. '                            ' → logprob: -9.880943298339844
    10. '```' → logprob: -10.380943298339844

Token 825: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.020989784970879555
    2. '                           ' → logprob: -4.520989894866943
    3. '                               ' → logprob: -5.145989894866943
    4. ' if' → logprob: -5.520989894866943
    5. '                       ' → logprob: -10.895989418029785
    6. '```' → logprob: -11.270989418029785
    7. ' ' → logprob: -11.395989418029785
    8. '   ' → logprob: -12.020989418029785
    9. '               ' → logprob: -12.520989418029785
    10. '           ' → logprob: -12.770989418029785

Token 826: ' pb' (ID: 31582)
  Prédit: ' pb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pb' → logprob: -0.02325759083032608
    2. 'pb' → logprob: -3.7732574939727783
    3. '_pb' → logprob: -12.1482572555542
    4. '(pb' → logprob: -12.3982572555542
    5. '.pb' → logprob: -13.1482572555542
    6. 'Pb' → logprob: -16.023258209228516
    7. 'PB' → logprob: -16.273258209228516
    8. 'b' → logprob: -16.398258209228516
    9. ' PB' → logprob: -16.398258209228516
    10. ' ' → logprob: -16.773258209228516

Token 827: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.02334214746952057
    2. '!=' → logprob: -3.7733421325683594
    3. '!='' → logprob: -9.27334213256836
    4. '!="' → logprob: -13.77334213256836
    5. ')!=' → logprob: -14.64834213256836
    6. '()!=' → logprob: -15.14834213256836
    7. ' ' → logprob: -15.27334213256836
    8. ']!=' → logprob: -15.39834213256836
    9. ' not' → logprob: -15.89834213256836
    10. '```' → logprob: -16.27334213256836

Token 828: ' '' (ID: 461)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.3063770830631256
    2. ''' → logprob: -1.8063770532608032
    3. ' '' → logprob: -2.3063771724700928
    4. ' ' → logprob: -11.681377410888672
    5. ' x' → logprob: -12.931377410888672
    6. '`' → logprob: -12.931377410888672
    7. ''s' → logprob: -13.056377410888672
    8. 'x' → logprob: -13.056377410888672
    9. '['' → logprob: -14.431377410888672
    10. ' 
' → logprob: -14.931377410888672

Token 829: 'x' (ID: 87)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.011059612035751343
    2. 'x' → logprob: -4.511059761047363
    3. ' x' → logprob: -11.761059761047363
    4. '"x' → logprob: -13.011059761047363
    5. ''' → logprob: -14.261059761047363
    6. ' '' → logprob: -14.386059761047363
    7. ' ' → logprob: -15.511059761047363
    8. '[x' → logprob: -16.511058807373047
    9. '['' → logprob: -16.761058807373047
    10. ''s' → logprob: -16.761058807373047

Token 830: ''' (ID: 6)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01815415732562542
    2. 'and' → logprob: -4.018154144287109
    3. '                               ' → logprob: -13.26815414428711
    4. '                           ' → logprob: -13.39315414428711
    5. ' ' → logprob: -15.51815414428711
    6. '<|end|>' → logprob: -15.64315414428711
    7. '                            ' → logprob: -16.14315414428711
    8. '                             ' → logprob: -16.89315414428711
    9. ' и' → logprob: -16.89315414428711
    10. '                                ' → logprob: -17.26815414428711

Token 831: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.011087790131568909
    2. 'and' → logprob: -4.511087894439697
    3. '                               ' → logprob: -10.886087417602539
    4. '!=' → logprob: -11.511087417602539
    5. ' !=' → logprob: -12.011087417602539
    6. '                           ' → logprob: -12.511087417602539
    7. '```' → logprob: -14.636087417602539
    8. '==' → logprob: -15.886087417602539
    9. '<|end|>' → logprob: -16.01108741760254
    10. ' not' → logprob: -16.26108741760254

Token 832: ' pb' (ID: 31582)
  Prédit: 'pb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pb' → logprob: -0.07889727503061295
    2. ' pb' → logprob: -2.57889723777771
    3. '_pb' → logprob: -12.828897476196289
    4. '(pb' → logprob: -12.828897476196289
    5. '.pb' → logprob: -13.703897476196289
    6. 'PB' → logprob: -14.953897476196289
    7. 'Pb' → logprob: -15.453897476196289
    8. '
' → logprob: -15.453897476196289
    9. 'bb' → logprob: -16.07889747619629
    10. 'p' → logprob: -16.32889747619629

Token 833: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.10020937025547028
    2. ' !=' → logprob: -2.3502094745635986
    3. '!='' → logprob: -13.47520923614502
    4. ')!=' → logprob: -14.97520923614502
    5. '!==' → logprob: -15.22520923614502
    6. '!="' → logprob: -15.35020923614502
    7. ']!=' → logprob: -15.47520923614502
    8. '!=-' → logprob: -16.100210189819336
    9. '()!=' → logprob: -16.225210189819336
    10. '!=(' → logprob: -16.725210189819336

Token 834: ' bb' (ID: 32433)
  Prédit: 'bb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.0002613358374219388
    2. ' bb' → logprob: -8.250261306762695
    3. 'b' → logprob: -16.625261306762695
    4. '_bb' → logprob: -18.250261306762695
    5. '(bb' → logprob: -19.000261306762695
    6. '.bb' → logprob: -20.000261306762695
    7. ' ' → logprob: -22.000261306762695
    8. 'bbb' → logprob: -22.875261306762695
    9. 'bbbb' → logprob: -23.750261306762695
    10. 'bbs' → logprob: -23.750261306762695

Token 835: ':
' (ID: 734)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.32889601588249207
    2. ':
' → logprob: -1.3288960456848145
    3. ':' → logprob: -4.2038960456848145
    4. '                           ' → logprob: -8.453895568847656
    5. '):
' → logprob: -8.703895568847656
    6. ',' → logprob: -9.703895568847656
    7. ':

' → logprob: -10.703895568847656
    8. '():
' → logprob: -10.953895568847656
    9. '```' → logprob: -11.078895568847656
    10. '                              ' → logprob: -11.453895568847656

Token 836: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.000487276294734329
    2. ':
' → logprob: -8.125487327575684
    3. '                           ' → logprob: -9.250487327575684
    4. ':' → logprob: -10.500487327575684
    5. '               ' → logprob: -11.000487327575684
    6. '                                   ' → logprob: -11.500487327575684
    7. '                              ' → logprob: -11.750487327575684
    8. '                                
' → logprob: -12.125487327575684
    9. '```' → logprob: -12.125487327575684
    10. '                             ' → logprob: -12.250487327575684

Token 837: ' ok' (ID: 4763)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.3903858959674835
    2. 'ok' (adapté à ' ok') → logprob: -1.1403858661651611
    3. ' ok' → logprob: -6.89038610458374
    4. '                           ' → logprob: -7.01538610458374
    5. '                                   ' → logprob: -7.51538610458374
    6. 'False' → logprob: -8.265385627746582
    7. '
' → logprob: -8.515385627746582
    8. 'break' → logprob: -8.890385627746582
    9. '                                
' → logprob: -9.140385627746582
    10. '                                       ' → logprob: -9.765385627746582

Token 838: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0034090590197592974
    2. ' =' → logprob: -5.753408908843994
    3. '=False' → logprob: -8.378409385681152
    4. '=
' → logprob: -14.378409385681152
    5. '=True' → logprob: -14.503409385681152
    6. '                               ' → logprob: -15.128409385681152
    7. 'False' → logprob: -16.628408432006836
    8. '           ' → logprob: -18.253408432006836
    9. '                                   ' → logprob: -18.503408432006836
    10. '                              ' → logprob: -18.503408432006836

Token 839: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.000553151941858232
    2. ' False' → logprob: -7.500553131103516
    3. '(False' → logprob: -16.500553131103516
    4. '=False' → logprob: -19.875553131103516
    5. 'F' → logprob: -21.375553131103516
    6. '_false' → logprob: -22.000553131103516
    7. 'True' → logprob: -22.125553131103516
    8. '.False' → logprob: -22.875553131103516
    9. 'false' → logprob: -24.500553131103516
    10. '0' → logprob: -25.125553131103516

Token 840: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0019506559474393725
    2. '                                   ' → logprob: -8.00195026397705
    3. '							' → logprob: -8.12695026397705
    4. '                           ' → logprob: -8.25195026397705
    5. '```' → logprob: -8.37695026397705
    6. ':
' → logprob: -8.50195026397705
    7. '<|end|>' → logprob: -9.00195026397705
    8. '                                
' → logprob: -9.25195026397705
    9. '               ' → logprob: -9.50195026397705
    10. '           ' → logprob: -10.37695026397705

Token 841: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0018471283838152885
    2. '                                
' → logprob: -7.376847267150879
    3. '```' → logprob: -8.001847267150879
    4. '
' → logprob: -8.251847267150879
    5. '							' → logprob: -8.501847267150879
    6. '                                   ' → logprob: -9.126847267150879
    7. '<|end|>' → logprob: -9.876847267150879
    8. '               ' → logprob: -10.501847267150879
    9. '								
' → logprob: -10.626847267150879
    10. '                                       ' → logprob: -10.626847267150879

Token 842: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.012780033983290195
    2. '                               ' → logprob: -4.76278018951416
    3. ' break' → logprob: -5.51278018951416
    4. '	break' → logprob: -10.13778018951416
    5. '               ' → logprob: -10.26278018951416
    6. '```' → logprob: -10.76278018951416
    7. '							' → logprob: -11.13778018951416
    8. '                                       ' → logprob: -12.88778018951416
    9. '                                   ' → logprob: -13.13778018951416
    10. '
' → logprob: -13.38778018951416

Token 843: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.057692624628543854
    2. '
' → logprob: -4.432692527770996
    3. '                       ' → logprob: -4.432692527770996
    4. '                           ' → logprob: -4.807692527770996
    5. '                   ' → logprob: -4.807692527770996
    6. '```' → logprob: -4.807692527770996
    7. 'continue' → logprob: -6.307692527770996
    8. '<|end|>' → logprob: -6.557692527770996
    9. '                                
' → logprob: -7.307692527770996
    10. '                        
' → logprob: -7.432692527770996

Token 844: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6311132907867432
    2. '                       ' → logprob: -1.0061132907867432
    3. '```' → logprob: -2.756113290786743
    4. '                               ' → logprob: -4.131113052368164
    5. '       ' → logprob: -5.381113052368164
    6. 'if' → logprob: -5.506113052368164
    7. '                           ' → logprob: -5.506113052368164
    8. '               ' → logprob: -5.881113052368164
    9. '           ' → logprob: -6.381113052368164
    10. '[' → logprob: -6.631113052368164

Token 845: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.46206557750701904
    2. 'if' (adapté à ' if') → logprob: -1.462065577507019
    3. '                   ' → logprob: -2.3370656967163086
    4. ' if' → logprob: -3.5870656967163086
    5. '```' → logprob: -4.712065696716309
    6. 'continue' → logprob: -6.962065696716309
    7. '<|end|>' → logprob: -7.337065696716309
    8. '       ' → logprob: -7.462065696716309
    9. '           ' → logprob: -7.462065696716309
    10. '               ' → logprob: -7.712065696716309

Token 846: ' ok' (ID: 4763)
  Prédit: ' ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ok' → logprob: -0.8202250599861145
    2. ' not' → logprob: -1.4452250003814697
    3. 'ok' → logprob: -2.1952250003814697
    4. ''ok' → logprob: -2.6952250003814697
    5. ''' → logprob: -3.0702250003814697
    6. ' b' → logprob: -3.3202250003814697
    7. 'b' → logprob: -3.5702250003814697
    8. 'not' → logprob: -3.9452250003814697
    9. ' '' → logprob: -4.695225238800049
    10. ' y' → logprob: -6.320225238800049

Token 847: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.012866180390119553
    2. ':
' → logprob: -4.637866020202637
    3. ':' → logprob: -6.387866020202637
    4. '                       ' → logprob: -7.137866020202637
    5. ' and' → logprob: -8.137866020202637
    6. '           ' → logprob: -8.512866020202637
    7. '                   ' → logprob: -9.887866020202637
    8. '                               ' → logprob: -10.262866020202637
    9. ',' → logprob: -11.137866020202637
    10. '                          ' → logprob: -11.512866020202637

Token 848: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0033902833238244057
    2. '                       ' → logprob: -6.128390312194824
    3. ' y' → logprob: -8.003390312194824
    4. '                               ' → logprob: -8.378390312194824
    5. ' for' → logprob: -8.878390312194824
    6. '                   ' → logprob: -9.003390312194824
    7. '           ' → logprob: -9.378390312194824
    8. 'for' → logprob: -9.753390312194824
    9. '```' → logprob: -10.003390312194824
    10. ' if' → logprob: -10.128390312194824

Token 849: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' (adapté à ' y') → logprob: -0.09762254357337952
    2. ' y' → logprob: -2.8476226329803467
    3. 'if' → logprob: -3.7226226329803467
    4. ' if' → logprob: -4.597622394561768
    5. '                       ' → logprob: -7.472622394561768
    6. '                   ' → logprob: -8.972622871398926
    7. 'yb' → logprob: -10.722622871398926
    8. 'ys' → logprob: -11.097622871398926
    9. 'y's' → logprob: -11.347622871398926
    10. '   ' → logprob: -11.347622871398926

Token 850: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7740969657897949
    2. ' =' → logprob: -1.399096965789795
    3. '=' → logprob: -1.649096965789795
    4. 'bits' → logprob: -2.524096965789795
    5. '_bits' → logprob: -5.024096965789795
    6. 'b' → logprob: -5.899096965789795
    7. '<|end|>' → logprob: -5.899096965789795
    8. ' bits' → logprob: -6.899096965789795
    9. 'tokens' → logprob: -7.274096965789795
    10. 's' → logprob: -7.399096965789795

Token 851: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.02054188773036003
    2. ' b' → logprob: -3.8955419063568115
    3. '	b' → logprob: -18.14554214477539
    4. ' ' → logprob: -18.27054214477539
    5. '>b' → logprob: -18.39554214477539
    6. ''b' → logprob: -18.64554214477539
    7. '   ' → logprob: -18.77054214477539
    8. '`' → logprob: -18.77054214477539
    9. '```' → logprob: -18.77054214477539
    10. '(b' → logprob: -19.02054214477539

Token 852: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.3663626305060461e-05
    2. '4' → logprob: -11.25001335144043
    3. '```' → logprob: -15.12501335144043
    4. '(' → logprob: -16.00001335144043
    5. '`' → logprob: -16.37501335144043
    6. '6' → logprob: -17.00001335144043
    7. ''[' → logprob: -17.25001335144043
    8. '3' → logprob: -18.00001335144043
    9. '[
' → logprob: -18.12501335144043
    10. '5' → logprob: -18.75001335144043

Token 853: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -13.00000286102295
    3. ':' → logprob: -15.75000286102295
    4. '   ' → logprob: -16.375003814697266
    5. '
' → logprob: -16.437503814697266
    6. '４' → logprob: -16.500003814697266
    7. '```' → logprob: -16.500003814697266
    8. '[' → logprob: -16.750003814697266
    9. '۴' → logprob: -16.750003814697266
    10. '0' → logprob: -17.125003814697266

Token 854: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00012761499965563416
    2. '7' → logprob: -9.375127792358398
    3. '6' → logprob: -10.750127792358398
    4. '5' → logprob: -11.625127792358398
    5. '```' → logprob: -12.125127792358398
    6. '[' → logprob: -12.625127792358398
    7. ' :' → logprob: -13.250127792358398
    8. '
' → logprob: -15.000127792358398
    9. '...' → logprob: -15.125127792358398
    10. '0' → logprob: -15.250127792358398

Token 855: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -5.1928003813372925e-05
    2. '7' → logprob: -9.875051498413086
    3. ' ' → logprob: -14.750051498413086
    4. '```' → logprob: -17.875051498413086
    5. '８' → logprob: -18.625051498413086
    6. '۸' → logprob: -19.062551498413086
    7. '   ' → logprob: -19.375051498413086
    8. '८' → logprob: -19.437551498413086
    9. '৮' → logprob: -19.625051498413086
    10. '٨' → logprob: -19.937551498413086

Token 856: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.17686468362808228
    2. ']' → logprob: -1.9268646240234375
    3. '']' → logprob: -5.1768646240234375
    4. '                           ' → logprob: -5.5518646240234375
    5. '']
' → logprob: -5.6768646240234375
    6. ']:
' → logprob: -6.4268646240234375
    7. ')
' → logprob: -7.0518646240234375
    8. ':
' → logprob: -8.426864624023438
    9. ')' → logprob: -8.801864624023438
    10. '):
' → logprob: -8.926864624023438

Token 857: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.005758495535701513
    2. 'if' → logprob: -6.380758285522461
    3. '<|end|>' → logprob: -6.630758285522461
    4. '                               ' → logprob: -6.755758285522461
    5. ' if' → logprob: -7.005758285522461
    6. '                       ' → logprob: -8.255758285522461
    7. '```' → logprob: -9.005758285522461
    8. '           ' → logprob: -9.880758285522461
    9. '                            
' → logprob: -10.005758285522461
    10. '                            ' → logprob: -10.255758285522461

Token 858: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.03798801451921463
    2. ' if' → logprob: -3.5379879474639893
    3. '                               ' → logprob: -5.162988185882568
    4. '                           ' → logprob: -6.037988185882568
    5. '```' → logprob: -9.66298770904541
    6. '                       ' → logprob: -11.78798770904541
    7. '                             ' → logprob: -12.41298770904541
    8. '                            ' → logprob: -12.53798770904541
    9. '                                   ' → logprob: -12.66298770904541
    10. '               ' → logprob: -13.41298770904541

Token 859: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.029855774715542793
    2. ' '' → logprob: -3.529855728149414
    3. ' any' → logprob: -9.779855728149414
    4. 'any' → logprob: -10.654855728149414
    5. ''any' → logprob: -11.154855728149414
    6. '1' → logprob: -12.529855728149414
    7. ' ' → logprob: -13.029855728149414
    8. '
' → logprob: -13.404855728149414
    9. '('' → logprob: -14.029855728149414
    10. ' y' → logprob: -14.029855728149414

Token 860: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01815052703022957
    2. ''' → logprob: -4.018150329589844
    3. ' '' → logprob: -15.143150329589844
    4. ' ' → logprob: -15.268150329589844
    5. ''s' → logprob: -16.268150329589844
    6. '"' → logprob: -17.143150329589844
    7. '`' → logprob: -17.143150329589844
    8. 'one' → logprob: -17.768150329589844
    9. '('' → logprob: -18.518150329589844
    10. '...' → logprob: -19.018150329589844

Token 861: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.17147196829319
    2. ' in' → logprob: -1.9214719533920288
    3. ''in' → logprob: -5.171472072601318
    4. 'in' → logprob: -5.296472072601318
    5. '<|end|>' → logprob: -8.67147159576416
    6. '')' → logprob: -8.92147159576416
    7. ']' → logprob: -9.29647159576416
    8. ')' → logprob: -10.04647159576416
    9. '']' → logprob: -10.79647159576416
    10. '`' → logprob: -11.67147159576416

Token 862: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029864691197872162
    2. 'in' → logprob: -3.52986478805542
    3. ')' → logprob: -9.529864311218262
    4. '<|end|>' → logprob: -10.279864311218262
    5. ' not' → logprob: -12.154864311218262
    6. ']' → logprob: -13.904864311218262
    7. '<|end|>' → logprob: -15.029864311218262
    8. ' ' → logprob: -16.279865264892578
    9. 'In' → logprob: -16.279865264892578
    10. '[' → logprob: -16.404865264892578

Token 863: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.011048170737922192
    2. ' y' → logprob: -4.511048316955566
    3. '`' → logprob: -16.51104736328125
    4. 'b' → logprob: -16.63604736328125
    5. '(y' → logprob: -17.01104736328125
    6. '	y' → logprob: -17.26104736328125
    7. '[y' → logprob: -17.26104736328125
    8. '
' → logprob: -17.51104736328125
    9. ' ' → logprob: -17.76104736328125
    10. ''y' → logprob: -18.01104736328125

Token 864: ':
' (ID: 734)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.4214988052845001
    2. '):' → logprob: -1.7964987754821777
    3. ':
' → logprob: -2.2964987754821777
    4. '                           ' → logprob: -3.1714987754821777
    5. ':' → logprob: -4.421498775482178
    6. '                               ' → logprob: -5.296498775482178
    7. '                       ' → logprob: -5.296498775482178
    8. '<|end|>' → logprob: -5.796498775482178
    9. ']:
' → logprob: -5.921498775482178
    10. ')' → logprob: -6.046498775482178

Token 865: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.000432695698691532
    2. '                           ' → logprob: -8.125432968139648
    3. ':
' → logprob: -9.875432968139648
    4. '```' → logprob: -10.375432968139648
    5. '                              ' → logprob: -11.500432968139648
    6. '                       ' → logprob: -11.500432968139648
    7. '                                   ' → logprob: -12.000432968139648
    8. '                             ' → logprob: -12.250432968139648
    9. '                            ' → logprob: -12.500432968139648
    10. ':' → logprob: -12.500432968139648

Token 866: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.10059978067874908
    2. ' count' → logprob: -2.350599765777588
    3. '                               ' → logprob: -7.850599765777588
    4. ' ' → logprob: -13.725600242614746
    5. '                           ' → logprob: -14.225600242614746
    6. '   ' → logprob: -15.225600242614746
    7. '.count' → logprob: -15.600600242614746
    8. ',count' → logprob: -15.600600242614746
    9. '[count' → logprob: -15.600600242614746
    10. '                                   ' → logprob: -15.725600242614746

Token 867: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.029754657298326492
    2. '+=' → logprob: -3.529754638671875
    3. ']+=' → logprob: -13.404754638671875
    4. ' ' → logprob: -14.654754638671875
    5. '```' → logprob: -14.779754638671875
    6. '+' → logprob: -14.779754638671875
    7. '<|end|>' → logprob: -14.904754638671875
    8. '                           ' → logprob: -15.404754638671875
    9. ' +' → logprob: -15.529754638671875
    10. ' ' → logprob: -16.029754638671875

Token 868: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.029752103611826897
    2. ' ' → logprob: -3.529752016067505
    3. '```' → logprob: -14.404751777648926
    4. '   ' → logprob: -15.404751777648926
    5. '                   ' → logprob: -16.029752731323242
    6. '0' → logprob: -16.529752731323242
    7. '                       ' → logprob: -16.654752731323242
    8. '
' → logprob: -16.654752731323242
    9. 'count' → logprob: -16.717252731323242
    10. '                               ' → logprob: -16.842252731323242

Token 869: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7729658540920354e-05
    2. ' ' → logprob: -10.500027656555176
    3. '```' → logprob: -16.625028610229492
    4. '
' → logprob: -17.750028610229492
    5. '   ' → logprob: -18.875028610229492
    6. '１' → logprob: -19.750028610229492
    7. '0' → logprob: -19.875028610229492
    8. '`' → logprob: -20.187528610229492
    9. 'count' → logprob: -20.375028610229492
    10. '2' → logprob: -20.375028610229492

Token 870: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.006677478551864624
    2. '               ' → logprob: -5.506677627563477
    3. '```' → logprob: -6.756677627563477
    4. '           ' → logprob: -7.256677627563477
    5. '                       ' → logprob: -8.631677627563477
    6. '                           ' → logprob: -8.756677627563477
    7. '       ' → logprob: -8.756677627563477
    8. '                               ' → logprob: -8.881677627563477
    9. '
' → logprob: -10.381677627563477
    10. '<|end|>' → logprob: -11.006677627563477

Token 871: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.015613964758813381
    2. '               ' → logprob: -4.390614032745361
    3. '           ' → logprob: -6.640614032745361
    4. '
' → logprob: -6.765614032745361
    5. '       ' → logprob: -8.390613555908203
    6. '                       ' → logprob: -8.890613555908203
    7. '```' → logprob: -9.140613555908203
    8. '                               ' → logprob: -9.890613555908203
    9. '   ' → logprob: -10.390613555908203
    10. 'if' → logprob: -10.515613555908203

Token 872: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008492596447467804
    2. 'if' (adapté à ' if') → logprob: -6.133492469787598
    3. '                       ' → logprob: -6.133492469787598
    4. ' if' → logprob: -6.633492469787598
    5. '               ' → logprob: -6.633492469787598
    6. '           ' → logprob: -7.383492469787598
    7. '       ' → logprob: -7.883492469787598
    8. '   ' → logprob: -9.258492469787598
    9. '<|end|>' → logprob: -9.258492469787598
    10. ')' → logprob: -9.633492469787598

Token 873: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3868817090988159
    2. ' count' → logprob: -1.136881709098816
    3. '(count' → logprob: -11.511881828308105
    4. 'Count' → logprob: -16.01188087463379
    5. '	count' → logprob: -16.38688087463379
    6. '$count' → logprob: -16.63688087463379
    7. '[count' → logprob: -16.88688087463379
    8. '.count' → logprob: -17.13688087463379
    9. '```' → logprob: -17.26188087463379
    10. '_count' → logprob: -17.26188087463379

Token 874: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.004651437979191542
    2. '>' → logprob: -5.3796515464782715
    3. ')' → logprob: -10.879651069641113
    4. ')>' → logprob: -12.629651069641113
    5. '<|end|>' → logprob: -13.004651069641113
    6. ' >
' → logprob: -13.129651069641113
    7. ' ' → logprob: -13.379651069641113
    8. ' ' → logprob: -13.879651069641113
    9. '   ' → logprob: -14.129651069641113
    10. ' <' → logprob: -15.379651069641113

Token 875: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.20144890248775482
    2. ' ' → logprob: -1.701448917388916
    3. '                   ' → logprob: -11.201448440551758
    4. '=' → logprob: -11.701448440551758
    5. '                       ' → logprob: -12.201448440551758
    6. '   ' → logprob: -12.826448440551758
    7. '               ' → logprob: -13.451448440551758
    8. '>' → logprob: -13.826448440551758
    9. '```' → logprob: -14.701448440551758
    10. '                    ' → logprob: -14.826448440551758

Token 876: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -17.250045776367188
    4. '=' → logprob: -19.125045776367188
    5. '```' → logprob: -19.125045776367188
    6. '۰' → logprob: -19.375045776367188
    7. ' ' → logprob: -19.500045776367188
    8. '>' → logprob: -19.750045776367188
    9. '  ' → logprob: -19.750045776367188
    10. '
' → logprob: -20.125045776367188

Token 877: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.01248234137892723
    2. ':
' → logprob: -4.637482166290283
    3. ':' → logprob: -6.012482166290283
    4. '):
' → logprob: -8.887482643127441
    5. '                           ' → logprob: -9.637482643127441
    6. '                   ' → logprob: -10.637482643127441
    7. '                               ' → logprob: -11.512482643127441
    8. '):' → logprob: -11.512482643127441
    9. '<|end|>' → logprob: -11.887482643127441
    10. '                      ' → logprob: -12.512482643127441

Token 878: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -7.822646693966817e-06
    2. '                           ' → logprob: -12.625007629394531
    3. '                   ' → logprob: -13.000007629394531
    4. '       ' → logprob: -14.375007629394531
    5. '```' → logprob: -14.750007629394531
    6. 'res' → logprob: -14.875007629394531
    7. '           ' → logprob: -15.000007629394531
    8. '               ' → logprob: -15.750007629394531
    9. '                               ' → logprob: -16.12500762939453
    10. ' res' → logprob: -16.12500762939453

Token 879: ' res' (ID: 694)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.3464166224002838
    2. 'res' (adapté à ' res') → logprob: -1.3464165925979614
    3. ' res' → logprob: -3.846416711807251
    4. '           ' → logprob: -5.346416473388672
    5. '                           ' → logprob: -5.471416473388672
    6. '       ' → logprob: -6.221416473388672
    7. '               ' → logprob: -8.846416473388672
    8. '   ' → logprob: -9.596416473388672
    9. '                   ' → logprob: -9.721416473388672
    10. '                               ' → logprob: -10.846416473388672

Token 880: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0008263026247732341
    2. '.' → logprob: -7.125826358795166
    3. 'append' → logprob: -12.250825881958008
    4. '.extend' → logprob: -12.500825881958008
    5. '.Append' → logprob: -12.625825881958008
    6. '.app' → logprob: -12.875825881958008
    7. ' .' → logprob: -13.625825881958008
    8. '<|end|>' → logprob: -13.750825881958008
    9. 'Append' → logprob: -14.000825881958008
    10. '.setdefault' → logprob: -14.125825881958008

Token 881: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0008909751777537167
    2. '(' → logprob: -7.125891208648682
    3. '(
' → logprob: -9.500890731811523
    4. '```' → logprob: -12.125890731811523
    5. ',' → logprob: -13.500890731811523
    6. ')((' → logprob: -14.000890731811523
    7. '>((' → logprob: -14.125890731811523
    8. '   ' → logprob: -14.125890731811523
    9. '(('' → logprob: -14.250890731811523
    10. ' ((' → logprob: -14.750890731811523

Token 882: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.008676853962242603
    2. '3' → logprob: -4.758677005767822
    3. '(length' → logprob: -9.758676528930664
    4. ' length' → logprob: -12.508676528930664
    5. '(' → logprob: -14.383676528930664
    6. 'len' → logprob: -16.383676528930664
    7. '[length' → logprob: -16.383676528930664
    8. ',length' → logprob: -17.133676528930664
    9. '           ' → logprob: -17.383676528930664
    10. 'leng' → logprob: -18.008676528930664

Token 883: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.7432603272027336e-06
    2. ',count' → logprob: -13.375001907348633
    3. ',
' → logprob: -16.250001907348633
    4. ' ,' → logprob: -17.250001907348633
    5. '‌,' → logprob: -17.875001907348633
    6. '[count' → logprob: -19.375001907348633
    7. '،' → logprob: -19.500001907348633
    8. '),' → logprob: -19.625001907348633
    9. ',

' → logprob: -19.750001907348633
    10. '<|end|>' → logprob: -20.250001907348633

Token 884: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.16029775142669678
    2. ' count' → logprob: -1.9102977514266968
    3. '(count' → logprob: -9.535297393798828
    4. ' (' → logprob: -14.410297393798828
    5. '[count' → logprob: -15.785297393798828
    6. ',count' → logprob: -15.910297393798828
    7. '	count' → logprob: -16.035297393798828
    8. '(' → logprob: -16.035297393798828
    9. '$count' → logprob: -16.535297393798828
    10. ' ' → logprob: -16.785297393798828

Token 885: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0033984826877713203
    2. '))' → logprob: -5.878398418426514
    3. ')
' → logprob: -7.503398418426514
    4. '))
' → logprob: -11.253398895263672
    5. '               ' → logprob: -11.628398895263672
    6. '       ' → logprob: -11.878398895263672
    7. '                   ' → logprob: -12.128398895263672
    8. '           ' → logprob: -12.503398895263672
    9. ')}' → logprob: -13.253398895263672
    10. ')))' → logprob: -13.503398895263672

Token 886: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6978892087936401
    2. '               ' → logprob: -0.6978892087936401
    3. '```' → logprob: -5.82288932800293
    4. '           ' → logprob: -6.44788932800293
    5. '<|end|>' → logprob: -10.07288932800293
    6. 'else' → logprob: -10.57288932800293
    7. '   ' → logprob: -10.69788932800293
    8. '	' → logprob: -11.07288932800293
    9. '		       ' → logprob: -11.19788932800293
    10. 'elif' → logprob: -11.44788932800293

Token 887: ' else' (ID: 1203)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07234062999486923
    2. 'else' (adapté à ' else') → logprob: -2.697340726852417
    3. '           ' → logprob: -6.447340488433838
    4. '			' → logprob: -7.947340488433838
    5. ' else' → logprob: -8.322340965270996
    6. 'elif' → logprob: -9.572340965270996
    7. '		' → logprob: -10.072340965270996
    8. '		       ' → logprob: -10.447340965270996
    9. '       ' → logprob: -10.822340965270996
    10. '	' → logprob: -10.947340965270996

Token 888: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.602763295173645
    2. '                   ' → logprob: -0.977763295173645
    3. ':
' → logprob: -2.7277631759643555
    4. '                       ' → logprob: -4.8527631759643555
    5. '               ' → logprob: -6.4777631759643555
    6. '```' → logprob: -7.1027631759643555
    7. '{
' → logprob: -8.227763175964355
    8. '{' → logprob: -8.852763175964355
    9. '<|end|>' → logprob: -9.102763175964355
    10. '           ' → logprob: -9.227763175964355

Token 889: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00029720881138928235
    2. '               ' → logprob: -9.000297546386719
    3. '                       ' → logprob: -9.500297546386719
    4. '```' → logprob: -10.250297546386719
    5. 'if' → logprob: -10.750297546386719
    6. '           ' → logprob: -11.000297546386719
    7. '#' → logprob: -11.375297546386719
    8. '
' → logprob: -13.000297546386719
    9. '   ' → logprob: -13.125297546386719
    10. '                  ' → logprob: -13.625297546386719

Token 890: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2480924278497696
    2. '                   ' → logprob: -1.7480924129486084
    3. '                       ' → logprob: -3.6230924129486084
    4. ' if' → logprob: -3.9980924129486084
    5. '               ' → logprob: -8.248092651367188
    6. '       ' → logprob: -9.373092651367188
    7. '           ' → logprob: -9.623092651367188
    8. '#' → logprob: -10.498092651367188
    9. '   ' → logprob: -10.623092651367188
    10. 'count' → logprob: -11.123092651367188

Token 891: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.07002301514148712
    2. ' '' → logprob: -2.6950230598449707
    3. '
' → logprob: -10.695022583007812
    4. ' ' → logprob: -10.945022583007812
    5. '('' → logprob: -11.195022583007812
    6. ' any' → logprob: -11.445022583007812
    7. 'any' → logprob: -12.070022583007812
    8. '   ' → logprob: -13.195022583007812
    9. '           ' → logprob: -13.570022583007812
    10. '       ' → logprob: -13.570022583007812

Token 892: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.06205865740776062
    2. '1' → logprob: -2.812058687210083
    3. '"' → logprob: -10.562058448791504
    4. '('' → logprob: -10.812058448791504
    5. ' '' → logprob: -11.437058448791504
    6. '
' → logprob: -11.437058448791504
    7. 'any' → logprob: -12.187058448791504
    8. 'count' → logprob: -12.687058448791504
    9. '`' → logprob: -12.937058448791504
    10. '0' → logprob: -12.937058448791504

Token 893: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0007885443628765643
    2. ''in' → logprob: -7.500788688659668
    3. ' in' → logprob: -8.750788688659668
    4. 'in' → logprob: -9.500788688659668
    5. ' '' → logprob: -13.625788688659668
    6. ''''' → logprob: -15.250788688659668
    7. '"' → logprob: -15.250788688659668
    8. ')'' → logprob: -15.625788688659668
    9. '`' → logprob: -16.50078773498535
    10. '[' → logprob: -16.75078773498535

Token 894: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0009250381262972951
    2. 'in' → logprob: -7.000925064086914
    3. ' not' → logprob: -11.625925064086914
    4. ')' → logprob: -13.250925064086914
    5. ' ' → logprob: -14.250925064086914
    6. ''in' → logprob: -14.250925064086914
    7. ''' → logprob: -14.500925064086914
    8. '`' → logprob: -15.250925064086914
    9. '```' → logprob: -15.750925064086914
    10. 'not' → logprob: -15.875925064086914

Token 895: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0003806257154792547
    2. ' y' → logprob: -7.875380516052246
    3. 'yb' → logprob: -15.500380516052246
    4. 'bits' → logprob: -16.125381469726562
    5. ''y' → logprob: -16.750381469726562
    6. '	y' → logprob: -17.125381469726562
    7. '‘y' → logprob: -17.125381469726562
    8. ' ' → logprob: -17.500381469726562
    9. '[y' → logprob: -17.750381469726562
    10. '(y' → logprob: -17.875381469726562

Token 896: 'bits' (ID: 24043)
  Prédit: 'bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -1.1160349458805285e-05
    2. '(bits' → logprob: -12.250011444091797
    3. 'y' → logprob: -13.000011444091797
    4. ' bits' → logprob: -13.250011444091797
    5. '[' → logprob: -14.250011444091797
    6. '_bits' → logprob: -14.750011444091797
    7. '.bits' → logprob: -14.875011444091797
    8. 'b' → logprob: -15.625011444091797
    9. ')' → logprob: -15.625011444091797
    10. '```' → logprob: -16.125011444091797

Token 897: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.10474476963281631
    2. ':' → logprob: -2.6047446727752686
    3. '                       ' → logprob: -3.7297446727752686
    4. '                   ' → logprob: -7.229744911193848
    5. '):
' → logprob: -7.354744911193848
    6. ':

' → logprob: -10.229744911193848
    7. '):' → logprob: -10.729744911193848
    8. '<|end|>' → logprob: -10.979744911193848
    9. '                      ' → logprob: -10.979744911193848
    10. ' and' → logprob: -11.104744911193848

Token 898: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0023488879669457674
    2. ':
' → logprob: -6.752348899841309
    3. '
' → logprob: -7.502348899841309
    4. '```' → logprob: -7.877348899841309
    5. '                        
' → logprob: -9.877348899841309
    6. '):
' → logprob: -10.127348899841309
    7. '                   ' → logprob: -10.502348899841309
    8. 'count' → logprob: -10.752348899841309
    9. '                           ' → logprob: -10.752348899841309
    10. ' count' → logprob: -11.127348899841309

Token 899: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.046787381172180176
    2. ' count' → logprob: -3.6717872619628906
    3. '                       ' → logprob: -3.9217872619628906
    4. '                           ' → logprob: -8.67178726196289
    5. '```' → logprob: -8.79678726196289
    6. '
' → logprob: -9.42178726196289
    7. '	count' → logprob: -11.54678726196289
    8. '                   ' → logprob: -11.67178726196289
    9. '{
' → logprob: -11.67178726196289
    10. '           ' → logprob: -11.79678726196289

Token 900: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47408807277679443
    2. '=' → logprob: -0.9740880727767944
    3. '                       ' → logprob: -12.099087715148926
    4. '=count' → logprob: -12.849087715148926
    5. '                           ' → logprob: -13.724087715148926
    6. '```' → logprob: -14.599087715148926
    7. '                   ' → logprob: -14.974087715148926
    8. '                        ' → logprob: -15.224087715148926
    9. '=_' → logprob: -15.849087715148926
    10. ')' → logprob: -16.099088668823242

Token 901: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.06196768581867218
    2. 'count' → logprob: -2.811967611312866
    3. '(count' → logprob: -18.436967849731445
    4. '	count' → logprob: -19.811967849731445
    5. '[count' → logprob: -20.936967849731445
    6. '=count' → logprob: -21.061967849731445
    7. ',count' → logprob: -21.311967849731445
    8. '_count' → logprob: -21.811967849731445
    9. '$count' → logprob: -22.311967849731445
    10. '.count' → logprob: -22.936967849731445

Token 902: '_pos' (ID: 14692)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7149011492729187
    2. '_pos' → logprob: -0.7149011492729187
    3. '_count' → logprob: -4.089900970458984
    4. ' count' → logprob: -5.964900970458984
    5. 'pos' → logprob: -6.839900970458984
    6. '(count' → logprob: -6.964900970458984
    7. '=count' → logprob: -8.964900970458984
    8. ' =' → logprob: -11.464900970458984
    9. '[count' → logprob: -11.714900970458984
    10. '=' → logprob: -11.714900970458984

Token 903: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0003542926860973239
    2. 'ibilities' → logprob: -8.000354766845703
    3. 'poss' → logprob: -11.625354766845703
    4. 'sib' → logprob: -12.500354766845703
    5. 'abilities' → logprob: -12.625354766845703
    6. 'count' → logprob: -13.625354766845703
    7. '`s' → logprob: -15.125354766845703
    8. ' possibilities' → logprob: -15.500354766845703
    9. 'ss' → logprob: -15.625354766845703
    10. '_count' → logprob: -15.750354766845703

Token 904: 'ibilities' (ID: 25632)
  Prédit: 'ibilities'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibilities' → logprob: -0.00017290872347075492
    2. 'ilities' → logprob: -9.62517261505127
    3. 'ibil' → logprob: -9.87517261505127
    4. 'ib' → logprob: -10.75017261505127
    5. 'ibl' → logprob: -11.50017261505127
    6. 's' → logprob: -11.50017261505127
    7. 'b' → logprob: -12.00017261505127
    8. 'IBIL' → logprob: -13.37517261505127
    9. 'ities' → logprob: -13.87517261505127
    10. '```' → logprob: -14.25017261505127

Token 905: '(byte' (ID: 36692)
  Prédit: '(byte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(byte' → logprob: -4.008129963040119e-06
    2. '(' → logprob: -13.250003814697266
    3. '```' → logprob: -13.750003814697266
    4. 'byte' → logprob: -14.125003814697266
    5. '(
' → logprob: -15.750003814697266
    6. ' byte' → logprob: -16.375003814697266
    7. '.byte' → logprob: -16.750003814697266
    8. ' (' → logprob: -16.875003814697266
    9. '<byte' → logprob: -17.250003814697266
    10. '`' → logprob: -17.750003814697266

Token 906: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -5.080963092041202e-06
    2. 'str' → logprob: -12.625004768371582
    3. 'byte' → logprob: -14.000004768371582
    4. '(byte' → logprob: -14.125004768371582
    5. 'Str' → logprob: -17.1250057220459
    6. '_byte' → logprob: -17.8750057220459
    7. 'string' → logprob: -18.1250057220459
    8. '_string' → logprob: -18.5000057220459
    9. '```' → logprob: -18.6250057220459
    10. 'pattern' → logprob: -19.3750057220459

Token 907: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.8176496624946594
    2. '(byte' → logprob: -1.0676496028900146
    3. ')
' → logprob: -1.5676496028900146
    4. '                       ' → logprob: -5.817649841308594
    5. 'byte' → logprob: -6.817649841308594
    6. '):
' → logprob: -6.942649841308594
    7. '                   ' → logprob: -8.817649841308594
    8. '               ' → logprob: -8.817649841308594
    9. '           ' → logprob: -9.192649841308594
    10. '.byte' → logprob: -9.317649841308594

Token 908: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0009265877306461334
    2. '                           ' → logprob: -7.500926494598389
    3. '           ' → logprob: -9.000926971435547
    4. '```' → logprob: -9.000926971435547
    5. '                        
' → logprob: -10.625926971435547
    6. '               ' → logprob: -10.750926971435547
    7. ')' → logprob: -10.875926971435547
    8. '                   ' → logprob: -11.125926971435547
    9. '       ' → logprob: -11.750926971435547
    10. ':
' → logprob: -12.000926971435547

Token 909: ' if' (ID: 538)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.013178586028516293
    2. '                           ' → logprob: -4.88817834854126
    3. 'if' (adapté à ' if') → logprob: -5.51317834854126
    4. ' if' → logprob: -6.88817834854126
    5. '           ' → logprob: -7.76317834854126
    6. '               ' → logprob: -10.513178825378418
    7. '                   ' → logprob: -11.138178825378418
    8. '
' → logprob: -11.388178825378418
    9. '                               ' → logprob: -12.013178825378418
    10. '                        ' → logprob: -12.138178825378418

Token 910: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.2519293427467346
    2. 'count' → logprob: -1.5019292831420898
    3. '(count' → logprob: -15.25192928314209
    4. '	count' → logprob: -18.751930236816406
    5. '[count' → logprob: -20.126930236816406
    6. '                       ' → logprob: -20.251930236816406
    7. ' ' → logprob: -20.626930236816406
    8. 'Count' → logprob: -20.751930236816406
    9. '_count' → logprob: -20.751930236816406
    10. '                   ' → logprob: -20.876930236816406

Token 911: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.011049585416913033
    2. '>' → logprob: -4.511049747467041
    3. '                       ' → logprob: -14.386049270629883
    4. '                           ' → logprob: -14.511049270629883
    5. '()>' → logprob: -15.511049270629883
    6. ' >
' → logprob: -15.761049270629883
    7. ' ' → logprob: -15.886049270629883
    8. ')>' → logprob: -16.261049270629883
    9. ')' → logprob: -16.511049270629883
    10. ' ' → logprob: -16.886049270629883

Token 912: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04859180003404617
    2. ' ' → logprob: -3.0485918521881104
    3. '>' → logprob: -13.048591613769531
    4. '   ' → logprob: -13.923591613769531
    5. '=' → logprob: -14.548591613769531
    6. '       ' → logprob: -15.423591613769531
    7. '           ' → logprob: -16.04859161376953
    8. '                       ' → logprob: -16.04859161376953
    9. '                   ' → logprob: -16.29859161376953
    10. '```' → logprob: -16.54859161376953

Token 913: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.505351095460355e-05
    2. ' ' → logprob: -9.500075340270996
    3. '   ' → logprob: -16.75007438659668
    4. '>' → logprob: -17.00007438659668
    5. '                       ' → logprob: -18.50007438659668
    6. '       ' → logprob: -18.50007438659668
    7. '           ' → logprob: -18.62507438659668
    8. '                   ' → logprob: -18.75007438659668
    9. '```' → logprob: -18.87507438659668
    10. '               ' → logprob: -19.37507438659668

Token 914: ':
' (ID: 734)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.40854915976524353
    2. ':
' → logprob: -1.408549189567566
    3. ':' → logprob: -2.4085490703582764
    4. '):
' → logprob: -7.6585493087768555
    5. '                       ' → logprob: -8.283549308776855
    6. '           ' → logprob: -9.283549308776855
    7. '):' → logprob: -10.533549308776855
    8. '                   ' → logprob: -10.783549308776855
    9. '                          ' → logprob: -10.783549308776855
    10. '():
' → logprob: -11.408549308776855

Token 915: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.00013154871703591198
    2. '           ' → logprob: -9.375131607055664
    3. '                       ' → logprob: -10.500131607055664
    4. '                               ' → logprob: -12.125131607055664
    5. '               ' → logprob: -12.375131607055664
    6. 'res' → logprob: -13.000131607055664
    7. '                   ' → logprob: -13.250131607055664
    8. '```' → logprob: -13.625131607055664
    9. '                          ' → logprob: -14.000131607055664
    10. '       ' → logprob: -14.000131607055664

Token 916: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.16776043176651
    2. '                               ' → logprob: -2.1677603721618652
    3. '                           ' → logprob: -3.7927603721618652
    4. ' res' → logprob: -4.167760372161865
    5. '       ' → logprob: -7.167760372161865
    6. '   ' → logprob: -7.167760372161865
    7. '           ' → logprob: -8.792760848999023
    8. '```' → logprob: -8.917760848999023
    9. '               ' → logprob: -9.667760848999023
    10. '                       ' → logprob: -10.417760848999023

Token 917: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.847109812544659e-05
    2. '.' → logprob: -10.125048637390137
    3. '                           ' → logprob: -12.625048637390137
    4. '                               ' → logprob: -12.875048637390137
    5. '.extend' → logprob: -13.875048637390137
    6. ' .' → logprob: -14.375048637390137
    7. 'append' → logprob: -15.000048637390137
    8. '.add' → logprob: -15.750048637390137
    9. '.Append' → logprob: -15.750048637390137
    10. '.py' → logprob: -15.750048637390137

Token 918: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.2664456789934775e-06
    2. '(' → logprob: -14.250000953674316
    3. '(
' → logprob: -15.625000953674316
    4. '           ' → logprob: -16.625001907348633
    5. '                       ' → logprob: -17.500001907348633
    6. '```' → logprob: -17.625001907348633
    7. '>((' → logprob: -17.625001907348633
    8. '       ' → logprob: -17.750001907348633
    9. '                   ' → logprob: -17.875001907348633
    10. '               ' → logprob: -18.000001907348633

Token 919: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.2016327977180481
    2. '(length' → logprob: -1.7016327381134033
    3. '[length' → logprob: -8.451632499694824
    4. ',length' → logprob: -12.451632499694824
    5. ' length' → logprob: -13.326632499694824
    6. ' (' → logprob: -15.451632499694824
    7. ':length' → logprob: -16.32663345336914
    8. '	length' → logprob: -16.45163345336914
    9. '   ' → logprob: -17.45163345336914
    10. 'leng' → logprob: -17.82663345336914

Token 920: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.935296834039036e-06
    2. '                           ' → logprob: -13.87500286102295
    3. ' ,' → logprob: -14.25000286102295
    4. ',
' → logprob: -14.62500286102295
    5. ',count' → logprob: -15.12500286102295
    6. ',length' → logprob: -15.50000286102295
    7. '                               ' → logprob: -16.500003814697266
    8. ',n' → logprob: -17.125003814697266
    9. '```' → logprob: -17.125003814697266
    10. '),' → logprob: -17.250003814697266

Token 921: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0019366045016795397
    2. ' count' → logprob: -6.251936435699463
    3. '(count' → logprob: -12.001936912536621
    4. '3' → logprob: -13.376936912536621
    5. 'length' → logprob: -15.501936912536621
    6. '[count' → logprob: -16.876935958862305
    7. '   ' → logprob: -17.626935958862305
    8. ' ' → logprob: -18.251935958862305
    9. '	count' → logprob: -18.376935958862305
    10. '$count' → logprob: -19.001935958862305

Token 922: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.014713392592966557
    2. ')
' → logprob: -4.264713287353516
    3. '))' → logprob: -7.764713287353516
    4. '))
' → logprob: -9.639713287353516
    5. '                       ' → logprob: -10.389713287353516
    6. '           ' → logprob: -11.264713287353516
    7. '       ' → logprob: -12.389713287353516
    8. '               ' → logprob: -12.514713287353516
    9. '                   ' → logprob: -12.639713287353516
    10. '                           ' → logprob: -12.764713287353516

Token 923: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.049383193254470825
    2. '       ' → logprob: -3.0493831634521484
    3. 'elif' → logprob: -7.549383163452148
    4. 'return' → logprob: -8.924383163452148
    5. '	elif' → logprob: -10.049383163452148
    6. '
' → logprob: -10.674383163452148
    7. ' return' → logprob: -10.924383163452148
    8. '           ' → logprob: -10.924383163452148
    9. '	return' → logprob: -11.424383163452148
    10. ' elif' → logprob: -11.674383163452148

Token 924: ' elif' (ID: 9497)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' (adapté à ' elif') → logprob: -0.051091548055410385
    2. '       ' → logprob: -3.051091432571411
    3. '   ' → logprob: -6.30109167098999
    4. 'else' → logprob: -8.051091194152832
    5. ' elif' → logprob: -8.051091194152832
    6. '	elif' → logprob: -11.051091194152832
    7. '```' → logprob: -11.676091194152832
    8. '           ' → logprob: -12.801091194152832
    9. ' else' → logprob: -14.676091194152832
    10. '#elif' → logprob: -15.426091194152832

Token 925: ' length' (ID: 5517)
  Prédit: ' length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' length' → logprob: -0.12693913280963898
    2. 'length' → logprob: -2.126939058303833
    3. '4' → logprob: -11.501938819885254
    4. '(length' → logprob: -14.376938819885254
    5. ' ' → logprob: -15.751938819885254
    6. 'len' → logprob: -16.75193977355957
    7. '    ' → logprob: -17.12693977355957
    8. '   ' → logprob: -17.37693977355957
    9. '	length' → logprob: -17.37693977355957
    10. 'Length' → logprob: -17.50193977355957

Token 926: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16022564470767975
    2. '==' → logprob: -1.9102256298065186
    3. '===' → logprob: -14.660225868225098
    4. ' ' → logprob: -15.035225868225098
    5. '=' → logprob: -15.535225868225098
    6. '```' → logprob: -16.28522491455078
    7. '==
' → logprob: -16.41022491455078
    8. '   ' → logprob: -16.41022491455078
    9. ')==' → logprob: -16.91022491455078
    10. '  ' → logprob: -17.16022491455078

Token 927: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0009119403548538685
    2. ' ' → logprob: -7.000911712646484
    3. '   ' → logprob: -16.625911712646484
    4. '```' → logprob: -16.625911712646484
    5. '۴' → logprob: -17.250911712646484
    6. '1' → logprob: -17.313411712646484
    7. '=' → logprob: -17.563411712646484
    8. '[' → logprob: -17.813411712646484
    9. '2' → logprob: -17.813411712646484
    10. '４' → logprob: -18.313411712646484

Token 928: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.0325924449716695e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.125009536743164
    4. '=' → logprob: -17.687509536743164
    5. '1' → logprob: -18.250009536743164
    6. '۴' → logprob: -18.437509536743164
    7. '  ' → logprob: -18.812509536743164
    8. '４' → logprob: -18.812509536743164
    9. '```' → logprob: -18.875009536743164
    10. '(' → logprob: -18.875009536743164

Token 929: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6944220066070557
    2. ':
' → logprob: -0.6944220066070557
    3. '       ' → logprob: -6.819421768188477
    4. '           ' → logprob: -9.194421768188477
    5. '   ' → logprob: -9.694421768188477
    6. '=' → logprob: -11.944421768188477
    7. ':
' → logprob: -12.444421768188477
    8. ':

' → logprob: -13.069421768188477
    9. '```' → logprob: -13.444421768188477
    10. '==' → logprob: -13.569421768188477

Token 930: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.538526177406311
    2. '       ' → logprob: -1.038526177406311
    3. '#' → logprob: -2.7885260581970215
    4. '   ' → logprob: -7.0385260581970215
    5. ' #' → logprob: -10.66352653503418
    6. '```' → logprob: -13.16352653503418
    7. '               ' → logprob: -14.91352653503418
    8. ' ' → logprob: -15.28852653503418
    9. '         ' → logprob: -15.78852653503418
    10. '{
' → logprob: -15.91352653503418

Token 931: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.1617155224084854
    2. '           ' → logprob: -1.9117155075073242
    3. '       ' → logprob: -6.786715507507324
    4. ' #' → logprob: -8.536715507507324
    5. '   ' → logprob: -8.911715507507324
    6. 'bits' → logprob: -10.661715507507324
    7. '```' → logprob: -13.286715507507324
    8. ' ' → logprob: -13.536715507507324
    9. '		' → logprob: -14.411715507507324
    10. '               ' → logprob: -14.536715507507324

Token 932: ' ' (ID: 220)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.09272918850183487
    2. 'bits' → logprob: -2.467729091644287
    3. '           ' → logprob: -6.842729091644287
    4. 'if' → logprob: -7.092729091644287
    5. ' #' → logprob: -7.092729091644287
    6. '       ' → logprob: -7.467729091644287
    7. ' bits' → logprob: -8.717729568481445
    8. '   ' → logprob: -9.092729568481445
    9. '111' → logprob: -9.717729568481445
    10. '
' → logprob: -10.092729568481445

Token 933: '111' (ID: 8780)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.060965396463871
    2. '#' → logprob: -3.3109652996063232
    3. 'if' → logprob: -3.9359652996063232
    4. ''' → logprob: -6.810965538024902
    5. '111' → logprob: -6.810965538024902
    6. ' bits' → logprob: -7.685965538024902
    7. '1' → logprob: -8.685965538024902
    8. '0' → logprob: -9.185965538024902
    9. '110' → logprob: -10.185965538024902
    10. 'bit' → logprob: -10.685965538024902

Token 934: '10' (ID: 702)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.026483632624149323
    2. '1' → logprob: -3.6514835357666016
    3. '   ' → logprob: -9.651483535766602
    4. '10' → logprob: -10.151483535766602
    5. '```' → logprob: -11.151483535766602
    6. '-' → logprob: -11.526483535766602
    7. '100' → logprob: -11.901483535766602
    8. '000' → logprob: -12.026483535766602
    9. '_' → logprob: -12.526483535766602
    10. ' ' → logprob: -12.526483535766602

Token 935: 'yyy' (ID: 77541)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.09447728842496872
    2. 'bits' → logprob: -2.5944771766662598
    3. ''b' → logprob: -5.84447717666626
    4. ' bits' → logprob: -5.84447717666626
    5. '111' → logprob: -5.96947717666626
    6. '   ' → logprob: -5.96947717666626
    7. 'xxxx' → logprob: -6.59447717666626
    8. '
' → logprob: -7.09447717666626
    9. ' '' → logprob: -7.71947717666626
    10. 'bbbb' → logprob: -8.219477653503418

Token 936: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10954753309488297
    2. ' bits' → logprob: -2.6095476150512695
    3. '   ' → logprob: -4.3595476150512695
    4. '       ' → logprob: -4.7345476150512695
    5. 'bits' → logprob: -5.4845476150512695
    6. ' and' → logprob: -6.7345476150512695
    7. ':' → logprob: -7.7345476150512695
    8. ' in' → logprob: -7.8595476150512695
    9. ' if' → logprob: -7.8595476150512695
    10. '         ' → logprob: -8.23454761505127

Token 937: '10' (ID: 702)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3114944100379944
    2. 'if' → logprob: -1.6864943504333496
    3. ' if' → logprob: -3.0614943504333496
    4. 'bits' → logprob: -4.06149435043335
    5. ' bits' → logprob: -4.68649435043335
    6. '       ' → logprob: -5.81149435043335
    7. '   ' → logprob: -6.31149435043335
    8. '#' → logprob: -6.43649435043335
    9. '               ' → logprob: -7.31149435043335
    10. ' and' → logprob: -8.436494827270508

Token 938: 'yy' (ID: 7496)
  Prédit: 'xxxx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'xxxx' → logprob: -0.0016029367689043283
    2. 'xxxxx' → logprob: -6.501603126525879
    3. 'yyyy' → logprob: -9.501603126525879
    4. 'xxx' → logprob: -10.876603126525879
    5. 'xxxxxxxx' → logprob: -13.001603126525879
    6. 'zz' → logprob: -13.001603126525879
    7. 'xx' → logprob: -13.751603126525879
    8. 'bits' → logprob: -14.251603126525879
    9. 'x' → logprob: -15.251603126525879
    10. ' xxxx' → logprob: -16.001602172851562

Token 939: 'xxxx' (ID: 30950)
  Prédit: 'xxxx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xxxx' → logprob: -0.014598275534808636
    2. 'xxx' → logprob: -4.264598369598389
    3. 'yyyy' → logprob: -8.13959789276123
    4. 'yyy' → logprob: -9.76459789276123
    5. 'xxxxx' → logprob: -10.38959789276123
    6. 'zzz' → logprob: -10.51459789276123
    7. 'xx' → logprob: -11.38959789276123
    8. 'zz' → logprob: -11.51459789276123
    9. 'yy' → logprob: -12.88959789276123
    10. 'bits' → logprob: -13.88959789276123

Token 940: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004340391140431166
    2. ' if' → logprob: -6.754340171813965
    3. ' bits' → logprob: -6.879340171813965
    4. '       ' → logprob: -7.004340171813965
    5. '
' → logprob: -8.504340171813965
    6. 'if' → logprob: -8.754340171813965
    7. 'bits' → logprob: -9.129340171813965
    8. '   ' → logprob: -9.129340171813965
    9. ':
' → logprob: -9.254340171813965
    10. '<|end|>' → logprob: -9.504340171813965

Token 941: '10' (ID: 702)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.11175329983234406
    2. '           ' → logprob: -2.736753225326538
    3. ' bits' → logprob: -3.486753225326538
    4. 'if' → logprob: -5.111753463745117
    5. '
' → logprob: -6.986753463745117
    6. 'pattern' → logprob: -7.111753463745117
    7. '#' → logprob: -7.486753463745117
    8. '111' → logprob: -8.236753463745117
    9. '               ' → logprob: -8.486753463745117
    10. '       ' → logprob: -8.486753463745117

Token 942: 'xxxx' (ID: 30950)
  Prédit: 'xxxx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xxxx' → logprob: -0.0006008113850839436
    2. 'xxxxx' → logprob: -7.500600814819336
    3. 'xxxxxxxx' → logprob: -10.375600814819336
    4. 'xxx' → logprob: -11.125600814819336
    5. 'xx' → logprob: -14.250600814819336
    6. 'yyyy' → logprob: -14.500600814819336
    7. 'x' → logprob: -16.125600814819336
    8. '000' → logprob: -16.250600814819336
    9. '0' → logprob: -16.250600814819336
    10. ' xxxx' → logprob: -16.625600814819336

Token 943: 'xx' (ID: 7605)
  Prédit: 'xx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xx' → logprob: -0.001718019717372954
    2. 'xxx' → logprob: -6.376718044281006
    3. 'x' → logprob: -11.126717567443848
    4. 'xxxx' → logprob: -14.501717567443848
    5. '```' → logprob: -14.501717567443848
    6. 'xxxxx' → logprob: -16.751718521118164
    7. ' xx' → logprob: -17.126718521118164
    8. 'yy' → logprob: -17.626718521118164
    9. ' ' → logprob: -18.251718521118164
    10. '   ' → logprob: -18.501718521118164

Token 944: ' ' (ID: 220)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03180970996618271
    2. 'bits' → logprob: -3.6568098068237305
    3. ' bits' → logprob: -5.5318098068237305
    4. '       ' → logprob: -7.0318098068237305
    5. '
' → logprob: -7.6568098068237305
    6. '   ' → logprob: -9.65680980682373
    7. '(bits' → logprob: -10.65680980682373
    8. '               ' → logprob: -10.78180980682373
    9. '#' → logprob: -11.40680980682373
    10. '```' → logprob: -11.53180980682373

Token 945: '10' (ID: 702)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4891354441642761
    2. 'bits' → logprob: -1.489135503768921
    3. ' bits' → logprob: -1.989135503768921
    4. '#' → logprob: -4.864135265350342
    5. '       ' → logprob: -5.114135265350342
    6. '
' → logprob: -5.614135265350342
    7. '   ' → logprob: -5.989135265350342
    8. ' #' → logprob: -6.989135265350342
    9. ' ' → logprob: -7.239135265350342
    10. 'if' → logprob: -7.739135265350342

Token 946: 'xxxx' (ID: 30950)
  Prédit: 'xxxx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xxxx' → logprob: -4.842555426876061e-06
    2. 'xxxxx' → logprob: -12.625004768371582
    3. 'xxxxxxxx' → logprob: -13.500004768371582
    4. 'xxx' → logprob: -16.8750057220459
    5. 'yyyy' → logprob: -17.8750057220459
    6. 'xx' → logprob: -18.2500057220459
    7. 'x' → logprob: -18.7500057220459
    8. 'XXXX' → logprob: -20.1250057220459
    9. ' xxxx' → logprob: -20.8750057220459
    10. '
' → logprob: -20.8750057220459

Token 947: 'xx' (ID: 7605)
  Prédit: 'xx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'xx' → logprob: -0.0049466160126030445
    2. 'x' → logprob: -6.004946708679199
    3. 'xxx' → logprob: -6.004946708679199
    4. '```' → logprob: -14.1299467086792
    5. 'xxxx' → logprob: -14.5049467086792
    6. 'xxxxx' → logprob: -17.254945755004883
    7. '00' → logprob: -18.254945755004883
    8. 'xff' → logprob: -18.379945755004883
    9. '>' → logprob: -18.379945755004883
    10. ''x' → logprob: -18.379945755004883

Token 948: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06970754265785217
    2. 'bits' → logprob: -3.0697076320648193
    3. '       ' → logprob: -4.69470739364624
    4. '
' → logprob: -5.06970739364624
    5. ' bits' → logprob: -5.31970739364624
    6. '   ' → logprob: -7.94470739364624
    7. '               ' → logprob: -9.444707870483398
    8. '(bits' → logprob: -10.569707870483398
    9. '_bits' → logprob: -10.694707870483398
    10. '          ' → logprob: -11.194707870483398

Token 949: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014810417778789997
    2. 'bits' → logprob: -4.389810562133789
    3. '       ' → logprob: -6.139810562133789
    4. ' bits' → logprob: -9.014810562133789
    5. '               ' → logprob: -11.514810562133789
    6. '   ' → logprob: -12.264810562133789
    7. '
' → logprob: -13.514810562133789
    8. '(bits' → logprob: -13.889810562133789
    9. '```' → logprob: -14.264810562133789
    10. '{
' → logprob: -14.389810562133789

Token 950: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.363977313041687
    2. 'bits' → logprob: -1.238977313041687
    3. '       ' → logprob: -4.488977432250977
    4. '#' (adapté à ' #') → logprob: -5.863977432250977
    5. ' bits' → logprob: -6.988977432250977
    6. '   ' → logprob: -8.738977432250977
    7. '               ' → logprob: -9.363977432250977
    8. '
' → logprob: -9.738977432250977
    9. '```' → logprob: -10.363977432250977
    10. ' #' → logprob: -11.238977432250977

Token 951: ' first' (ID: 1577)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.007433411665260792
    2. '           ' → logprob: -5.1324334144592285
    3. ' bits' → logprob: -6.8824334144592285
    4. '#' → logprob: -7.8824334144592285
    5. '       ' → logprob: -9.63243293762207
    6. '   ' → logprob: -11.50743293762207
    7. '
' → logprob: -11.75743293762207
    8. '               ' → logprob: -11.88243293762207
    9. '(bits' → logprob: -12.63243293762207
    10. 'bit' → logprob: -13.50743293762207

Token 952: ' byte' (ID: 9239)
  Prédit: 'byte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'byte' → logprob: -1.1077783107757568
    2. ' byte' → logprob: -1.3577783107757568
    3. 'bits' → logprob: -1.4827783107757568
    4. ' bits' → logprob: -2.107778310775757
    5. '_byte' → logprob: -3.607778310775757
    6. 'bit' → logprob: -4.607778549194336
    7. '_bits' → logprob: -4.857778549194336
    8. ' bit' → logprob: -5.107778549194336
    9. 'def' → logprob: -5.357778549194336
    10. ' ' → logprob: -5.482778549194336

Token 953: ' pattern' (ID: 8302)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.4373129904270172
    2. ' pattern' → logprob: -1.0623129606246948
    3. ' bits' → logprob: -5.812313079833984
    4. 'bits' → logprob: -5.937313079833984
    5. '_pattern' → logprob: -6.687313079833984
    6. '_bits' → logprob: -7.937313079833984
    7. '[' → logprob: -8.062313079833984
    8. ' =' → logprob: -8.687313079833984
    9. ':' → logprob: -8.687313079833984
    10. 'def' → logprob: -8.812313079833984

Token 954: ' ' (ID: 220)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9824967384338379
    2. ''' → logprob: -1.232496738433838
    3. '=' → logprob: -1.232496738433838
    4. '           ' → logprob: -3.607496738433838
    5. ' '' → logprob: -4.357496738433838
    6. '='' → logprob: -7.232496738433838
    7. '111' → logprob: -7.857496738433838
    8. 'pattern' → logprob: -7.982496738433838
    9. ' ' → logprob: -8.48249626159668
    10. ' pattern' → logprob: -9.10749626159668

Token 955: '111' (ID: 8780)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.005313446745276451
    2. ''' → logprob: -5.755313396453857
    3. '111' → logprob: -6.880313396453857
    4. ' bits' → logprob: -7.130313396453857
    5. ''b' → logprob: -8.755313873291016
    6. '`' → logprob: -10.505313873291016
    7. 'list' → logprob: -10.880313873291016
    8. '   ' → logprob: -11.005313873291016
    9. 'bit' → logprob: -11.630313873291016
    10. '[' → logprob: -11.755313873291016

Token 956: '10' (ID: 702)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0022232949268072844
    2. '10' → logprob: -6.127223491668701
    3. '000' → logprob: -11.002223014831543
    4. '00' → logprob: -11.502223014831543
    5. '100' → logprob: -12.127223014831543
    6. '1' → logprob: -12.252223014831543
    7. '010' → logprob: -14.252223014831543
    8. '01' → logprob: -16.00222396850586
    9. '   ' → logprob: -16.12722396850586
    10. '110' → logprob: -16.50222396850586

Token 957: 'yyy' (ID: 77541)
  Prédit: 'yyy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yyy' → logprob: -0.004940443206578493
    2. 'yyyy' → logprob: -5.379940509796143
    3. ''' → logprob: -8.129940032958984
    4. ''y' → logprob: -11.254940032958984
    5. 'bbb' → logprob: -12.379940032958984
    6. ''''' → logprob: -13.004940032958984
    7. 'yy' → logprob: -13.504940032958984
    8. 'www' → logprob: -14.129940032958984
    9. 'y' → logprob: -14.379940032958984
    10. 'xxx' → logprob: -14.379940032958984

Token 958: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4436798393726349
    2. ' bits' → logprob: -1.4436798095703125
    3. ' if' → logprob: -2.9436798095703125
    4. ' and' → logprob: -2.9436798095703125
    5. '   ' → logprob: -4.9436798095703125
    6. 'bits' → logprob: -6.0686798095703125
    7. 'if' → logprob: -6.5686798095703125
    8. '       ' → logprob: -6.6936798095703125
    9. ',' → logprob: -6.9436798095703125
    10. '(bits' → logprob: -7.1936798095703125

Token 959: ' y' (ID: 342)
  Prédit: ' bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.28164994716644287
    2. '           ' → logprob: -2.0316500663757324
    3. 'bits' → logprob: -2.2816500663757324
    4. ' if' → logprob: -4.781650066375732
    5. 'if' → logprob: -5.781650066375732
    6. '#' → logprob: -8.531649589538574
    7. '       ' → logprob: -8.781649589538574
    8. '   ' → logprob: -9.156649589538574
    9. '
' → logprob: -9.781649589538574
    10. '(bits' → logprob: -9.906649589538574

Token 960: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.013485955074429512
    2. ' =' → logprob: -4.763485908508301
    3. '=' → logprob: -5.763485908508301
    4. ' bits' → logprob: -6.763485908508301
    5. 's' → logprob: -8.0134859085083
    6. '_bits' → logprob: -9.5134859085083
    7. 'its' → logprob: -10.6384859085083
    8. '
' → logprob: -10.8884859085083
    9. ' ' → logprob: -11.5134859085083
    10. '(bits' → logprob: -11.6384859085083

Token 961: ' at' (ID: 540)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11288076639175415
    2. '=' → logprob: -2.2378807067871094
    3. '[' → logprob: -11.36288070678711
    4. 'in' → logprob: -11.73788070678711
    5. ' in' → logprob: -11.86288070678711
    6. 'must' → logprob: -11.98788070678711
    7. ' are' → logprob: -12.11288070678711
    8. '=[' → logprob: -12.36288070678711
    9. '=['' → logprob: -12.73788070678711
    10. ' must' → logprob: -12.86288070678711

Token 962: ' positions' (ID: 15897)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.7747753858566284
    2. '[' → logprob: -1.1497753858566284
    3. '4' → logprob: -1.7747753858566284
    4. '3' → logprob: -3.024775505065918
    5. 'positions' → logprob: -6.649775505065918
    6. '(' → logprob: -6.899775505065918
    7. ' bits' → logprob: -7.149775505065918
    8. 'bit' → logprob: -7.649775505065918
    9. 'list' → logprob: -8.274775505065918
    10. '5' → logprob: -8.524775505065918

Token 963: ' ' (ID: 220)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12456987053155899
    2. '4' → logprob: -2.249569892883301
    3. '5' → logprob: -4.499569892883301
    4. '3' → logprob: -8.2495698928833
    5. '(' → logprob: -8.6245698928833
    6. ' [' → logprob: -9.9995698928833
    7. '
' → logprob: -11.2495698928833
    8. '=' → logprob: -11.6245698928833
    9. '=[' → logprob: -11.6245698928833
    10. '```' → logprob: -11.9995698928833

Token 964: '5' (ID: 20)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.014538599178195
    2. '5' → logprob: -4.264538764953613
    3. '(' → logprob: -8.639538764953613
    4. '4' → logprob: -8.764538764953613
    5. 'list' → logprob: -11.139538764953613
    6. ' [' → logprob: -11.389538764953613
    7. 'range' → logprob: -12.514538764953613
    8. '{' → logprob: -13.139538764953613
    9. '3' → logprob: -13.139538764953613
    10. '['' → logprob: -13.389538764953613

Token 965: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4001026451587677
    2. ',' → logprob: -1.1501026153564453
    3. '[' → logprob: -5.150102615356445
    4. 'and' → logprob: -5.650102615356445
    5. ' and' → logprob: -6.775102615356445
    6. '6' → logprob: -6.900102615356445
    7. '=' → logprob: -6.900102615356445
    8. '5' → logprob: -8.525102615356445
    9. ',
' → logprob: -10.025102615356445
    10. ':['' → logprob: -10.275102615356445

Token 966: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -2.7133641196996905e-05
    2. '5' → logprob: -10.75002670288086
    3. ' ' → logprob: -12.12502670288086
    4. '   ' → logprob: -16.25002670288086
    5. '
' → logprob: -16.75002670288086
    6. '7' → logprob: -18.00002670288086
    7. '  ' → logprob: -18.12502670288086
    8. '[' → logprob: -18.12502670288086
    9. '0' → logprob: -18.25002670288086
    10. '1' → logprob: -18.62502670288086

Token 967: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05988207086920738
    2. ' and' → logprob: -3.434882164001465
    3. ' ,' → logprob: -4.559882164001465
    4. '7' → logprob: -4.559882164001465
    5. 'and' → logprob: -6.184882164001465
    6. '[' → logprob: -6.934882164001465
    7. ' in' → logprob: -7.309882164001465
    8. ' ' → logprob: -8.309882164001465
    9. '       ' → logprob: -8.309882164001465
    10. '           ' → logprob: -8.809882164001465

Token 968: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -2.2246291337069124e-05
    2. ' ' → logprob: -10.750021934509277
    3. '5' → logprob: -14.625021934509277
    4. 'and' → logprob: -15.625021934509277
    5. '```' → logprob: -16.500022888183594
    6. ' and' → logprob: -17.375022888183594
    7. '  ' → logprob: -18.500022888183594
    8. '
' → logprob: -18.750022888183594
    9. '   ' → logprob: -18.875022888183594
    10. '۷' → logprob: -19.250022888183594

Token 969: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6613832116127014
    2. ' and' → logprob: -1.4113831520080566
    3. ':
' → logprob: -2.5363831520080566
    4. ' in' → logprob: -3.0363831520080566
    5. '               ' → logprob: -3.0363831520080566
    6. ',' → logprob: -3.9113831520080566
    7. ' if' → logprob: -4.536383152008057
    8. ':' → logprob: -4.911383152008057
    9. 'and' → logprob: -4.911383152008057
    10. '[' → logprob: -5.786383152008057

Token 970: '0' (ID: 15)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '4' → logprob: -0.8967817425727844
    2. '5' → logprob: -0.8967817425727844
    3. 'bits' → logprob: -1.8967816829681396
    4. '[' → logprob: -3.7717816829681396
    5. ''' → logprob: -5.146781921386719
    6. '   ' → logprob: -6.521781921386719
    7. '['' → logprob: -7.146781921386719
    8. ' bits' → logprob: -7.646781921386719
    9. 'bit' → logprob: -8.021781921386719
    10. '(' → logprob: -8.146781921386719

Token 971: '-based' (ID: 8235)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5879402160644531
    2. ':' → logprob: -1.5879402160644531
    3. ',' → logprob: -1.8379402160644531
    4. ':]' → logprob: -3.712940216064453
    5. '<=' → logprob: -4.337940216064453
    6. ')' → logprob: -4.462940216064453
    7. ' <=' → logprob: -5.087940216064453
    8. '7' → logprob: -5.337940216064453
    9. ']<=' → logprob: -5.462940216064453
    10. ' in' → logprob: -5.962940216064453

Token 972: ')
' (ID: 446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.2948375940322876
    2. ')' → logprob: -1.6698375940322876
    3. ']
' → logprob: -2.044837474822998
    4. '):
' → logprob: -2.419837474822998
    5. '           ' → logprob: -2.669837474822998
    6. ')
' → logprob: -2.669837474822998
    7. ',' → logprob: -3.169837474822998
    8. ' bits' → logprob: -3.794837474822998
    9. ']:
' → logprob: -4.044837474822998
    10. 'bits' → logprob: -4.794837474822998

Token 973: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03308120369911194
    2. ' bits' → logprob: -4.2830810546875
    3. ' if' → logprob: -4.7830810546875
    4. 'bits' → logprob: -5.0330810546875
    5. 'if' → logprob: -6.4080810546875
    6. '       ' → logprob: -6.7830810546875
    7. '               ' → logprob: -8.0330810546875
    8. '   ' → logprob: -8.5330810546875
    9. '(bits' → logprob: -8.9080810546875
    10. ' and' → logprob: -9.0330810546875

Token 974: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' (adapté à ' bits') → logprob: -0.07674454897642136
    2. '           ' → logprob: -3.076744556427002
    3. ' bits' → logprob: -3.701744556427002
    4. 'if' → logprob: -6.076744556427002
    5. '       ' → logprob: -7.951744556427002
    6. ' if' → logprob: -8.451744079589844
    7. '               ' → logprob: -9.451744079589844
    8. '   ' → logprob: -10.201744079589844
    9. '(bits' → logprob: -10.451744079589844
    10. 'bit' → logprob: -10.826744079589844

Token 975: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25195178389549255
    2. ' =' → logprob: -1.501951813697815
    3. '[' → logprob: -11.376952171325684
    4. '   ' → logprob: -12.126952171325684
    5. '=
' → logprob: -13.626952171325684
    6. '           ' → logprob: -14.001952171325684
    7. 'def' → logprob: -14.126952171325684
    8. '       ' → logprob: -14.251952171325684
    9. ' ' → logprob: -14.376952171325684
    10. '=list' → logprob: -14.751952171325684

Token 976: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.02975129522383213
    2. ' list' → logprob: -3.5297513008117676
    3. 'bits' → logprob: -14.90475082397461
    4. '[list' → logprob: -15.77975082397461
    5. '['' → logprob: -16.02975082397461
    6. '[' → logprob: -17.15475082397461
    7. ' bits' → logprob: -17.40475082397461
    8. '(list' → logprob: -17.40475082397461
    9. '[
' → logprob: -18.02975082397461
    10. '[]' → logprob: -18.15475082397461

Token 977: '(byte' (ID: 36692)
  Prédit: '(byte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(byte' → logprob: -0.0015030752401798964
    2. 'byte' → logprob: -6.501502990722656
    3. ' byte' → logprob: -14.126502990722656
    4. '.byte' → logprob: -17.626502990722656
    5. '_byte' → logprob: -18.501502990722656
    6. '<byte' → logprob: -18.876502990722656
    7. '(bit' → logprob: -19.626502990722656
    8. '(' → logprob: -19.751502990722656
    9. ' (' → logprob: -20.001502990722656
    10. '	byte' → logprob: -20.501502990722656

Token 978: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -5.5577775128767826e-06
    2. 'str' → logprob: -12.125005722045898
    3. 'Str' → logprob: -17.1250057220459
    4. 'byte' → logprob: -18.2500057220459
    5. '```' → logprob: -19.0000057220459
    6. '32' → logprob: -19.5000057220459
    7. '[' → logprob: -19.6250057220459
    8. '_STR' → logprob: -20.0000057220459
    9. '[str' → logprob: -20.1250057220459
    10. '$str' → logprob: -20.5000057220459

Token 979: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.11392665654420853
    2. '           ' → logprob: -2.363926649093628
    3. ')' → logprob: -4.988926887512207
    4. 'if' → logprob: -5.488926887512207
    5. '       ' → logprob: -6.488926887512207
    6. '   ' → logprob: -7.113926887512207
    7. ' if' → logprob: -8.238926887512207
    8. '[' → logprob: -10.863926887512207
    9. '
' → logprob: -11.363926887512207
    10. ')
' → logprob: -11.363926887512207

Token 980: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006558468448929489
    2. 'if' → logprob: -7.500655651092529
    3. ' if' → logprob: -9.500656127929688
    4. '       ' → logprob: -10.625656127929688
    5. '               ' → logprob: -13.250656127929688
    6. '```' → logprob: -14.500656127929688
    7. '          ' → logprob: -14.875656127929688
    8. '   ' → logprob: -14.875656127929688
    9. '	       ' → logprob: -15.000656127929688
    10. '		' → logprob: -15.250656127929688

Token 981: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0018393946811556816
    2. ' if' → logprob: -6.5018391609191895
    3. '           ' → logprob: -8.001839637756348
    4. '```' → logprob: -13.876839637756348
    5. '               ' → logprob: -14.501839637756348
    6. '       ' → logprob: -15.001839637756348
    7. '   ' → logprob: -15.626839637756348
    8. '#' → logprob: -16.75183868408203
    9. 'for' → logprob: -16.87683868408203
    10. 'def' → logprob: -17.12683868408203

Token 982: ' bits' (ID: 18189)
  Prédit: ' bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.6960253119468689
    2. 'bits' → logprob: -0.6960253119468689
    3. ' all' → logprob: -6.196025371551514
    4. 'all' → logprob: -7.696025371551514
    5. '(bits' → logprob: -8.196024894714355
    6. ' (' → logprob: -10.321024894714355
    7. ' len' → logprob: -10.446024894714355
    8. 'len' → logprob: -10.946024894714355
    9. ' ' → logprob: -12.071024894714355
    10. 'bit' → logprob: -12.571024894714355

Token 983: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00013047587708570063
    2. '0' → logprob: -9.250130653381348
    3. '[:' → logprob: -10.500130653381348
    4. ' in' → logprob: -13.500130653381348
    5. '   ' → logprob: -13.625130653381348
    6. ' [' → logprob: -14.250130653381348
    7. '[
' → logprob: -14.500130653381348
    8. ' and' → logprob: -14.625130653381348
    9. 'and' → logprob: -14.750130653381348
    10. '(' → logprob: -14.875130653381348

Token 984: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.057743949990254e-05
    2. '[' → logprob: -11.500020980834961
    3. ' ' → logprob: -11.625020980834961
    4. '
' → logprob: -15.000020980834961
    5. '   ' → logprob: -15.250020980834961
    6. '(' → logprob: -15.437520980834961
    7. '  ' → logprob: -16.43752098083496
    8. '```' → logprob: -16.43752098083496
    9. '     ' → logprob: -16.81252098083496
    10. '    ' → logprob: -17.06252098083496

Token 985: ']=='' (ID: 71177)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005252491682767868
    2. 'in' → logprob: -5.255252361297607
    3. ']' → logprob: -11.130252838134766
    4. '[' → logprob: -13.505252838134766
    5. ')' → logprob: -13.755252838134766
    6. '==' → logprob: -14.380252838134766
    7. 'In' → logprob: -15.005252838134766
    8. '
' → logprob: -15.255252838134766
    9. '['' → logprob: -15.880252838134766
    10. ' ==' → logprob: -15.880252838134766

Token 986: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0067170290276408195
    2. '1' → logprob: -5.006717205047607
    3. ' '' → logprob: -14.38171672821045
    4. '"' → logprob: -14.63171672821045
    5. '['' → logprob: -14.63171672821045
    6. ''''' → logprob: -16.381717681884766
    7. '`' → logprob: -16.881717681884766
    8. '[' → logprob: -17.256717681884766
    9. '')' → logprob: -17.381717681884766
    10. '('' → logprob: -18.006717681884766

Token 987: ''' (ID: 6)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.007607220206409693
    2. 'and' → logprob: -4.8826069831848145
    3. ',' → logprob: -15.132607460021973
    4. ')' → logprob: -15.257607460021973
    5. '<|end|>' → logprob: -15.507607460021973
    6. ' or' → logprob: -15.632607460021973
    7. '	and' → logprob: -16.507606506347656
    8. ' ' → logprob: -17.007606506347656
    9. '
' → logprob: -17.507606506347656
    10. ''' → logprob: -17.757606506347656

Token 988: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.01815006136894226
    2. 'and' → logprob: -4.0181498527526855
    3. ' ' → logprob: -16.768150329589844
    4. '	and' → logprob: -17.143150329589844
    5. ' or' → logprob: -17.268150329589844
    6. ' in' → logprob: -17.393150329589844
    7. '   ' → logprob: -18.768150329589844
    8. '<|end|>' → logprob: -19.518150329589844
    9. '    ' → logprob: -20.018150329589844
    10. ')' → logprob: -20.268150329589844

Token 989: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.14326103031635284
    2. ' bits' → logprob: -2.018260955810547
    3. '(bits' → logprob: -7.518260955810547
    4. 'bit' → logprob: -11.768260955810547
    5. ' (' → logprob: -12.018260955810547
    6. ''b' → logprob: -12.268260955810547
    7. ''' → logprob: -12.268260955810547
    8. ' '' → logprob: -12.893260955810547
    9. '_bits' → logprob: -12.893260955810547
    10. '.bits' → logprob: -13.143260955810547

Token 990: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0937153771519661
    2. 'bits' → logprob: -3.5937154293060303
    3. ' in' → logprob: -3.7187154293060303
    4. ' ==' → logprob: -3.9687154293060303
    5. ' bits' → logprob: -5.093715190887451
    6. '==' → logprob: -5.343715190887451
    7. '=='' → logprob: -5.593715190887451
    8. 'in' → logprob: -5.843715190887451
    9. ' =='' → logprob: -7.718715190887451
    10. '['' → logprob: -8.34371566772461

Token 991: '0' (ID: 15)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7218018770217896
    2. '1' → logprob: -1.2218018770217896
    3. ''x' → logprob: -1.9718018770217896
    4. '0' → logprob: -2.8468017578125
    5. ''' → logprob: -4.2218017578125
    6. ' '' → logprob: -6.5968017578125
    7. ' ==' → logprob: -6.7218017578125
    8. ' ' → logprob: -6.7218017578125
    9. '[' → logprob: -6.9718017578125
    10. '=='' → logprob: -7.4718017578125

Token 992: ']=='' (ID: 71177)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.16152872145175934
    2. '=='' → logprob: -2.5365288257598877
    3. 'in' → logprob: -3.5365288257598877
    4. '==' → logprob: -3.7865288257598877
    5. ' ==' → logprob: -4.036528587341309
    6. ' =='' → logprob: -7.661528587341309
    7. '='' → logprob: -11.036528587341309
    8. '['' → logprob: -11.286528587341309
    9. ''' → logprob: -11.411528587341309
    10. ' '' → logprob: -11.661528587341309

Token 993: 'x' (ID: 87)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.4741242825984955
    2. 'x' → logprob: -0.9741243124008179
    3. ' x' → logprob: -11.09912395477295
    4. '"x' → logprob: -11.22412395477295
    5. ''' → logprob: -11.47412395477295
    6. ' '' → logprob: -12.97412395477295
    7. '1' → logprob: -13.72412395477295
    8. '['' → logprob: -13.97412395477295
    9. ' ' → logprob: -14.47412395477295
    10. '	x' → logprob: -14.72412395477295

Token 994: '':
' (ID: 7669)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3106738328933716
    2. 'and' → logprob: -1.6856738328933716
    3. ':
' → logprob: -3.185673713684082
    4. ':' → logprob: -4.185673713684082
    5. ')' → logprob: -4.685673713684082
    6. '       ' → logprob: -4.935673713684082
    7. '):
' → logprob: -5.560673713684082
    8. '           ' → logprob: -5.560673713684082
    9. '               ' → logprob: -7.685673713684082
    10. '):' → logprob: -8.185673713684082

Token 995: '               ' (ID: 506)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.1810077279806137
    2. 'and' → logprob: -1.806007742881775
    3. '           ' → logprob: -6.8060078620910645
    4. '       ' → logprob: -9.556007385253906
    5. '               ' → logprob: -10.431007385253906
    6. ' if' → logprob: -10.681007385253906
    7. '            ' → logprob: -10.931007385253906
    8. '   ' → logprob: -12.306007385253906
    9. ' ' → logprob: -13.306007385253906
    10. '          ' → logprob: -13.431007385253906

Token 996: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6117246150970459
    2. '           ' → logprob: -2.111724615097046
    3. 'and' → logprob: -2.111724615097046
    4. ' if' → logprob: -2.111724615097046
    5. ' and' → logprob: -2.361724615097046
    6. '               ' → logprob: -9.236724853515625
    7. ' ' → logprob: -10.361724853515625
    8. '          ' → logprob: -10.611724853515625
    9. '            ' → logprob: -10.611724853515625
    10. '   ' → logprob: -10.736724853515625

Token 997: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.030660154297947884
    2. '(bits' → logprob: -4.030660152435303
    3. ' bits' → logprob: -4.405660152435303
    4. ' (' → logprob: -9.030660629272461
    5. 'all' → logprob: -9.655660629272461
    6. ' all' → logprob: -11.655660629272461
    7. '(b' → logprob: -11.780660629272461
    8. 'bit' → logprob: -12.155660629272461
    9. '   ' → logprob: -12.655660629272461
    10. '(' → logprob: -13.280660629272461

Token 998: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.009774506092071533
    2. '1' → logprob: -4.634774684906006
    3. ' ' → logprob: -12.509774208068848
    4. ' [' → logprob: -12.634774208068848
    5. '   ' → logprob: -12.884774208068848
    6. ' in' → logprob: -13.509774208068848
    7. '       ' → logprob: -14.009774208068848
    8. '
' → logprob: -14.134774208068848
    9. '==' → logprob: -14.259774208068848
    10. 's' → logprob: -14.259774208068848

Token 999: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.531315314830863e-06
    2. ' ' → logprob: -13.750003814697266
    3. '4' → logprob: -15.062503814697266
    4. '0' → logprob: -15.312503814697266
    5. 'elif' → logprob: -15.312503814697266
    6. '3' → logprob: -15.375003814697266
    7. '[' → logprob: -15.500003814697266
    8. '
' → logprob: -15.625003814697266
    9. ''' → logprob: -15.625003814697266
    10. '   ' → logprob: -16.250003814697266

Token 1000: ']=='' (ID: 71177)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11643167585134506
    2. 'in' → logprob: -2.241431713104248
    3. '=='' → logprob: -5.866431713104248
    4. ' ==' → logprob: -7.991431713104248
    5. '==' → logprob: -8.11643123626709
    6. ']=='' → logprob: -10.36643123626709
    7. ' =='' → logprob: -10.36643123626709
    8. '']=='' → logprob: -11.49143123626709
    9. 'In' → logprob: -11.61643123626709
    10. ')' → logprob: -11.61643123626709

Token 1001: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02057669311761856
    2. '1' → logprob: -3.8955767154693604
    3. '['' → logprob: -11.645576477050781
    4. '"' → logprob: -11.895576477050781
    5. '('' → logprob: -12.145576477050781
    6. ' '' → logprob: -12.145576477050781
    7. ''''' → logprob: -13.020576477050781
    8. '`' → logprob: -14.145576477050781
    9. '{'' → logprob: -14.270576477050781
    10. '   ' → logprob: -14.395576477050781

Token 1002: ''' (ID: 6)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0010962842497974634
    2. 'or' → logprob: -8.001096725463867
    3. ' and' → logprob: -8.001096725463867
    4. ''or' → logprob: -8.751096725463867
    5. ')' → logprob: -9.001096725463867
    6. '')' → logprob: -9.751096725463867
    7. ''' → logprob: -9.751096725463867
    8. '<|end|>' → logprob: -11.251096725463867
    9. '           ' → logprob: -12.376096725463867
    10. 'and' → logprob: -12.876096725463867

Token 1003: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.001752891344949603
    2. 'or' → logprob: -6.376752853393555
    3. ' and' → logprob: -10.001752853393555
    4. 'and' → logprob: -12.501752853393555
    5. ' in' → logprob: -14.501752853393555
    6. '	or' → logprob: -14.751752853393555
    7. ''or' → logprob: -15.626752853393555
    8. ')' → logprob: -16.126752853393555
    9. ' ' → logprob: -16.501752853393555
    10. '           ' → logprob: -16.626752853393555

Token 1004: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.0485999770462513
    2. ' bits' → logprob: -3.0485999584198
    3. '(bits' → logprob: -11.423600196838379
    4. 'bit' → logprob: -14.798600196838379
    5. 'tokens' → logprob: -15.298600196838379
    6. '[' → logprob: -15.548600196838379
    7. '.bits' → logprob: -15.548600196838379
    8. '_bits' → logprob: -15.798600196838379
    9. 'Bits' → logprob: -16.298599243164062
    10. 'b' → logprob: -16.798599243164062

Token 1005: '[' (ID: 58)
  Prédit: '==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.0014205917250365019
    2. '==' → logprob: -7.001420497894287
    3. ' =='' → logprob: -8.751420974731445
    4. '['' → logprob: -9.251420974731445
    5. ']=='' → logprob: -9.501420974731445
    6. '[' → logprob: -9.876420974731445
    7. ' ==' → logprob: -10.251420974731445
    8. '']=='' → logprob: -10.251420974731445
    9. ')=='' → logprob: -11.126420974731445
    10. ''' → logprob: -11.626420974731445

Token 1006: '1' (ID: 16)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.0006766928127035499
    2. 'x' → logprob: -7.37567663192749
    3. '1' → logprob: -10.000677108764648
    4. ''' → logprob: -13.375677108764648
    5. '"x' → logprob: -13.750677108764648
    6. ' x' → logprob: -14.750677108764648
    7. ' '' → logprob: -14.875677108764648
    8. '['' → logprob: -15.375677108764648
    9. '[x' → logprob: -15.625677108764648
    10. '0' → logprob: -15.625677108764648

Token 1007: ']=='' (ID: 71177)
  Prédit: '==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.0029889941215515137
    2. '==' → logprob: -5.877988815307617
    3. ' ==' → logprob: -9.002988815307617
    4. ']=='' → logprob: -10.502988815307617
    5. ' =='' → logprob: -11.127988815307617
    6. '']=='' → logprob: -11.502988815307617
    7. ')=='' → logprob: -13.002988815307617
    8. ''' → logprob: -13.127988815307617
    9. '=="' → logprob: -13.377988815307617
    10. '==='' → logprob: -13.502988815307617

Token 1008: 'x' (ID: 87)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.002808917546644807
    2. 'x' → logprob: -5.877809047698975
    3. ' x' → logprob: -13.502808570861816
    4. '"x' → logprob: -13.752808570861816
    5. ' '' → logprob: -14.252808570861816
    6. '1' → logprob: -15.877808570861816
    7. '\x' → logprob: -16.002809524536133
    8. '```' → logprob: -16.127809524536133
    9. '['' → logprob: -16.377809524536133
    10. ')x' → logprob: -16.502809524536133

Token 1009: '':
' (ID: 7669)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.9641537666320801
    2. ':
' → logprob: -0.9641537666320801
    3. '):
' → logprob: -2.58915376663208
    4. ':' → logprob: -2.58915376663208
    5. ' and' → logprob: -3.46415376663208
    6. '           ' → logprob: -3.71415376663208
    7. '               ' → logprob: -4.33915376663208
    8. ' or' → logprob: -4.83915376663208
    9. 'and' → logprob: -5.33915376663208
    10. '):' → logprob: -5.71415376663208

Token 1010: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1856093406677246
    2. ' and' → logprob: -2.0606093406677246
    3. 'and' → logprob: -3.9356093406677246
    4. ' if' → logprob: -4.185609340667725
    5. '           ' → logprob: -5.060609340667725
    6. 'if' → logprob: -7.435609340667725
    7. '```' → logprob: -9.560609817504883
    8. ' or' → logprob: -9.685609817504883
    9. '            ' → logprob: -9.810609817504883
    10. '                ' → logprob: -9.810609817504883

Token 1011: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.3182578682899475
    2. 'and' → logprob: -1.6932578086853027
    3. ' and' → logprob: -3.4432578086853027
    4. '               ' → logprob: -3.5682578086853027
    5. ' if' → logprob: -3.6932578086853027
    6. '                   ' → logprob: -6.193257808685303
    7. '           ' → logprob: -6.693257808685303
    8. '       ' → logprob: -8.818258285522461
    9. '                       ' → logprob: -9.443258285522461
    10. '                    ' → logprob: -10.693258285522461

Token 1012: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.020569678395986557
    2. ' bits' → logprob: -3.8955695629119873
    3. '(bits' → logprob: -10.645569801330566
    4. '   ' → logprob: -13.145569801330566
    5. '       ' → logprob: -14.770569801330566
    6. '           ' → logprob: -15.020569801330566
    7. ' ' → logprob: -15.145569801330566
    8. 'bit' → logprob: -15.520569801330566
    9. '.bits' → logprob: -15.770569801330566
    10. '               ' → logprob: -16.14556884765625

Token 1013: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007174347410909832
    2. '2' → logprob: -7.250717639923096
    3. '==' → logprob: -12.125717163085938
    4. '```' → logprob: -14.375717163085938
    5. ' ' → logprob: -14.875717163085938
    6. ' [' → logprob: -15.625717163085938
    7. 'in' → logprob: -15.875717163085938
    8. '               ' → logprob: -15.875717163085938
    9. '           ' → logprob: -16.000717163085938
    10. '``' → logprob: -16.125717163085938

Token 1014: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.003442545887082815
    2. ''' → logprob: -5.878442764282227
    3. '0' → logprob: -7.628442764282227
    4. '1' → logprob: -9.378442764282227
    5. '3' → logprob: -10.378442764282227
    6. ' ' → logprob: -11.253442764282227
    7. '4' → logprob: -11.378442764282227
    8. 'x' → logprob: -13.003442764282227
    9. '('' → logprob: -13.253442764282227
    10. ''x' → logprob: -13.753442764282227

Token 1015: ']=='' (ID: 71177)
  Prédit: '==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.012849943712353706
    2. '==' → logprob: -5.387849807739258
    3. ' ==' → logprob: -5.512849807739258
    4. ']=='' → logprob: -6.512849807739258
    5. ' in' → logprob: -6.887849807739258
    6. ' =='' → logprob: -7.387849807739258
    7. ''' → logprob: -7.762849807739258
    8. '']=='' → logprob: -8.137849807739258
    9. 'in' → logprob: -8.762849807739258
    10. ')=='' → logprob: -9.637849807739258

Token 1016: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0006845565512776375
    2. '1' → logprob: -7.37568473815918
    3. ' '' → logprob: -10.00068473815918
    4. '('' → logprob: -12.00068473815918
    5. '...' → logprob: -13.37568473815918
    6. '['' → logprob: -13.62568473815918
    7. '"' → logprob: -14.37568473815918
    8. ' ' → logprob: -14.37568473815918
    9. '`' → logprob: -14.62568473815918
    10. '   ' → logprob: -14.62568473815918

Token 1017: ''' (ID: 6)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.003636065172031522
    2. 'or' → logprob: -6.003635883331299
    3. ''or' → logprob: -6.878635883331299
    4. ''' → logprob: -9.003636360168457
    5. '')' → logprob: -13.253636360168457
    6. ')' → logprob: -13.253636360168457
    7. ' '' → logprob: -13.503636360168457
    8. '```' → logprob: -14.128636360168457
    9. '<|end|>' → logprob: -14.753636360168457
    10. '                   ' → logprob: -15.253636360168457

Token 1018: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.007613494526594877
    2. 'or' → logprob: -4.882613658905029
    3. ''or' → logprob: -12.507613182067871
    4. '```' → logprob: -13.757613182067871
    5. ')' → logprob: -14.007613182067871
    6. '	or' → logprob: -14.507613182067871
    7. ' and' → logprob: -15.132613182067871
    8. '               ' → logprob: -15.382613182067871
    9. '                   ' → logprob: -15.757613182067871
    10. '           ' → logprob: -15.882613182067871

Token 1019: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.007480026222765446
    2. ' bits' → logprob: -5.007480144500732
    3. ''b' → logprob: -7.882480144500732
    4. ''' → logprob: -8.507479667663574
    5. '(bits' → logprob: -8.757479667663574
    6. ''x' → logprob: -11.132479667663574
    7. ' '' → logprob: -12.132479667663574
    8. '['' → logprob: -12.382479667663574
    9. '_bits' → logprob: -14.632479667663574
    10. '<bits' → logprob: -14.632479667663574

Token 1020: '[' (ID: 58)
  Prédit: '==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.5982248187065125
    2. '[' → logprob: -0.8482248187065125
    3. '['' → logprob: -4.348224639892578
    4. '==' → logprob: -5.223224639892578
    5. ''x' → logprob: -6.348224639892578
    6. ' ==' → logprob: -7.598224639892578
    7. ''' → logprob: -7.848224639892578
    8. '```' → logprob: -9.098224639892578
    9. ']=='' → logprob: -9.348224639892578
    10. '...' → logprob: -9.348224639892578

Token 1021: '2' (ID: 17)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.0031818747520446777
    2. 'x' → logprob: -5.7531819343566895
    3. ' x' → logprob: -13.378181457519531
    4. '```' → logprob: -14.253181457519531
    5. '`' → logprob: -14.753181457519531
    6. '"x' → logprob: -14.878181457519531
    7. ' ' → logprob: -15.253181457519531
    8. '['' → logprob: -15.753181457519531
    9. '[x' → logprob: -16.00318145751953
    10. ')x' → logprob: -16.00318145751953

Token 1022: ']=='' (ID: 71177)
  Prédit: '==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.007150207180529833
    2. ']=='' → logprob: -5.007150173187256
    3. '']=='' → logprob: -8.382150650024414
    4. ' ==' → logprob: -9.507150650024414
    5. ' =='' → logprob: -9.882150650024414
    6. '==' → logprob: -10.132150650024414
    7. ')=='' → logprob: -11.007150650024414
    8. ''' → logprob: -12.382150650024414
    9. '```' → logprob: -12.507150650024414
    10. ''x' → logprob: -12.757150650024414

Token 1023: 'x' (ID: 87)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.03366195037961006
    2. 'x' → logprob: -3.4086618423461914
    3. ' x' → logprob: -11.533661842346191
    4. '"x' → logprob: -13.408661842346191
    5. '1' → logprob: -14.533661842346191
    6. ' ' → logprob: -14.658661842346191
    7. '\x' → logprob: -14.658661842346191
    8. '[x' → logprob: -14.908661842346191
    9. ')x' → logprob: -15.033661842346191
    10. ''' → logprob: -15.033661842346191

Token 1024: '':
' (ID: 7669)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.2189638912677765
    2. ' and' → logprob: -1.718963861465454
    3. ')' → logprob: -5.218964099884033
    4. ':' → logprob: -5.843964099884033
    5. ':
' → logprob: -5.968964099884033
    6. 'and' → logprob: -6.093964099884033
    7. 'or' → logprob: -6.218964099884033
    8. '               ' → logprob: -6.968964099884033
    9. '                   ' → logprob: -7.968964099884033
    10. '<|end|>' → logprob: -8.093963623046875

Token 1025: '                       ' (ID: 968)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.08747676014900208
    2. '                       ' → logprob: -2.5874767303466797
    3. '               ' → logprob: -5.08747673034668
    4. '```' → logprob: -6.46247673034668
    5. '           ' → logprob: -8.21247673034668
    6. '                    ' → logprob: -8.46247673034668
    7. '       ' → logprob: -9.08747673034668
    8. ' if' → logprob: -9.58747673034668
    9. 'if' → logprob: -10.33747673034668
    10. ' and' → logprob: -10.96247673034668

Token 1026: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5371649861335754
    2. '                   ' → logprob: -1.4121649265289307
    3. ' if' → logprob: -1.9121649265289307
    4. '           ' → logprob: -4.53716516494751
    5. '               ' → logprob: -4.91216516494751
    6. '                       ' → logprob: -5.78716516494751
    7. '```' → logprob: -6.03716516494751
    8. '       ' → logprob: -7.53716516494751
    9. '   ' → logprob: -9.787164688110352
    10. '``' → logprob: -10.537164688110352

Token 1027: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.07426200062036514
    2. ' bits' → logprob: -2.6992619037628174
    3. '(bits' → logprob: -5.4492621421813965
    4. ' (' → logprob: -11.699261665344238
    5. 'bit' → logprob: -12.699261665344238
    6. '(' → logprob: -13.449261665344238
    7. '   ' → logprob: -13.699261665344238
    8. '(b' → logprob: -14.074261665344238
    9. '.bits' → logprob: -14.199261665344238
    10. '_bits' → logprob: -14.824261665344238

Token 1028: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.5570885807392187e-05
    2. '3' → logprob: -11.125015258789062
    3. '```' → logprob: -14.750015258789062
    4. '[
' → logprob: -16.375015258789062
    5. '           ' → logprob: -16.625015258789062
    6. '   ' → logprob: -17.125015258789062
    7. '(' → logprob: -17.250015258789062
    8. '2' → logprob: -17.500015258789062
    9. '       ' → logprob: -17.500015258789062
    10. '               ' → logprob: -17.500015258789062

Token 1029: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.5
    3. '[' → logprob: -17.875
    4. '   ' → logprob: -18.625
    5. '(' → logprob: -18.875
    6. '
' → logprob: -19.0
    7. '  ' → logprob: -19.3125
    8. '```' → logprob: -19.4375
    9. '۳' → logprob: -19.5
    10. '4' → logprob: -20.0

Token 1030: ']=='' (ID: 71177)
  Prédit: '==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.0047126649878919125
    2. ']=='' → logprob: -5.7547125816345215
    3. ' ==' → logprob: -7.3797125816345215
    4. '==' → logprob: -7.6297125816345215
    5. ' =='' → logprob: -8.37971305847168
    6. '']=='' → logprob: -9.12971305847168
    7. ')=='' → logprob: -10.62971305847168
    8. ' in' → logprob: -10.87971305847168
    9. ''' → logprob: -11.00471305847168
    10. ']==' → logprob: -11.62971305847168

Token 1031: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0003246183041483164
    2. '0' → logprob: -8.375324249267578
    3. ' '' → logprob: -9.750324249267578
    4. '('' → logprob: -11.125324249267578
    5. '['' → logprob: -11.500324249267578
    6. '1' → logprob: -12.500324249267578
    7. ''x' → logprob: -13.875324249267578
    8. '"' → logprob: -14.125324249267578
    9. '`' → logprob: -14.250324249267578
    10. '   ' → logprob: -14.375324249267578

Token 1032: ''' (ID: 6)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.00763655873015523
    2. ''or' → logprob: -5.382636547088623
    3. ''' → logprob: -6.257636547088623
    4. 'or' → logprob: -6.882636547088623
    5. ' '' → logprob: -10.507637023925781
    6. '```' → logprob: -10.882637023925781
    7. '')' → logprob: -11.757637023925781
    8. '<|end|>' → logprob: -12.007637023925781
    9. ')' → logprob: -12.257637023925781
    10. '`' → logprob: -13.882637023925781

Token 1033: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.001174747827462852
    2. 'or' → logprob: -6.7511749267578125
    3. ')' → logprob: -13.876174926757812
    4. '                       ' → logprob: -13.876174926757812
    5. '```' → logprob: -14.001174926757812
    6. ''or' → logprob: -14.501174926757812
    7. '<|end|>' → logprob: -14.876174926757812
    8. '           ' → logprob: -15.501174926757812
    9. '	or' → logprob: -15.501174926757812
    10. ' ' → logprob: -15.626174926757812

Token 1034: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.005987573880702257
    2. ' bits' → logprob: -5.130987644195557
    3. '(bits' → logprob: -9.755987167358398
    4. 'bit' → logprob: -15.630987167358398
    5. '```' → logprob: -15.880987167358398
    6. '.bits' → logprob: -15.880987167358398
    7. '[' → logprob: -16.2559871673584
    8. 'code' → logprob: -16.3809871673584
    9. 'b' → logprob: -16.8809871673584
    10. '_bits' → logprob: -17.0059871673584

Token 1035: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.48207736015319824
    2. '=='' → logprob: -0.9820773601531982
    3. '==' → logprob: -5.107077598571777
    4. '['' → logprob: -6.607077598571777
    5. ']=='' → logprob: -8.857077598571777
    6. 'bits' → logprob: -8.982077598571777
    7. ' =='' → logprob: -9.357077598571777
    8. ' ==' → logprob: -9.982077598571777
    9. ')=='' → logprob: -9.982077598571777
    10. '']=='' → logprob: -10.607077598571777

Token 1036: '3' (ID: 18)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.0010344763286411762
    2. 'x' → logprob: -6.876034259796143
    3. '"x' → logprob: -15.1260347366333
    4. ''' → logprob: -15.1260347366333
    5. ' x' → logprob: -15.2510347366333
    6. '   ' → logprob: -15.3760347366333
    7. '```' → logprob: -15.6260347366333
    8. ' '' → logprob: -15.7510347366333
    9. '`' → logprob: -16.126033782958984
    10. ' ' → logprob: -16.376033782958984

Token 1037: ']=='' (ID: 71177)
  Prédit: '==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.0006120019243098795
    2. '==' → logprob: -7.750611782073975
    3. ']=='' → logprob: -9.000612258911133
    4. ' ==' → logprob: -10.750612258911133
    5. '']=='' → logprob: -11.125612258911133
    6. ' =='' → logprob: -11.625612258911133
    7. ')=='' → logprob: -11.875612258911133
    8. ''' → logprob: -12.625612258911133
    9. '=="' → logprob: -14.000612258911133
    10. '='' → logprob: -14.250612258911133

Token 1038: 'x' (ID: 87)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.0009151478880085051
    2. 'x' → logprob: -7.000915050506592
    3. '"x' → logprob: -13.37591552734375
    4. ' '' → logprob: -14.87591552734375
    5. ''' → logprob: -15.00091552734375
    6. '```' → logprob: -15.25091552734375
    7. ' x' → logprob: -15.37591552734375
    8. '['' → logprob: -15.50091552734375
    9. '`' → logprob: -16.00091552734375
    10. '[
' → logprob: -16.50091552734375

Token 1039: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4339340031147003
    2. ':' → logprob: -1.683933973312378
    3. ' or' → logprob: -2.558933973312378
    4. ' and' → logprob: -3.308933973312378
    5. '):
' → logprob: -3.683933973312378
    6. '                       ' → logprob: -4.558934211730957
    7. '<|end|>' → logprob: -4.808934211730957
    8. ')' → logprob: -5.433934211730957
    9. '):' → logprob: -6.433934211730957
    10. '           ' → logprob: -7.058934211730957

Token 1040: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.10447216778993607
    2. '                       ' → logprob: -2.8544721603393555
    3. '           ' → logprob: -3.2294721603393555
    4. '               ' → logprob: -7.1044721603393555
    5. '                               ' → logprob: -7.3544721603393555
    6. '                        ' → logprob: -8.854472160339355
    7. '                   ' → logprob: -8.854472160339355
    8. '```' → logprob: -9.104472160339355
    9. ' and' → logprob: -10.479472160339355
    10. '                            ' → logprob: -10.604472160339355

Token 1041: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.030367160215973854
    2. '                           ' → logprob: -3.780367136001587
    3. ' if' → logprob: -5.530367374420166
    4. '           ' → logprob: -6.280367374420166
    5. '               ' → logprob: -7.280367374420166
    6. '                               ' → logprob: -7.780367374420166
    7. '```' → logprob: -9.905366897583008
    8. '                       ' → logprob: -10.030366897583008
    9. '   ' → logprob: -11.405366897583008
    10. '                   ' → logprob: -11.530366897583008

Token 1042: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.09050892293453217
    2. ' bits' → logprob: -2.4655089378356934
    3. '(bits' → logprob: -6.465508937835693
    4. ' (' → logprob: -11.965508460998535
    5. 'bit' → logprob: -12.840508460998535
    6. '   ' → logprob: -13.590508460998535
    7. '.bits' → logprob: -14.965508460998535
    8. ' ' → logprob: -15.090508460998535
    9. '_bits' → logprob: -15.215508460998535
    10. 'Bits' → logprob: -15.715508460998535

Token 1043: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -8.061054359131958e-06
    2. '4' → logprob: -12.000007629394531
    3. '==' → logprob: -14.000007629394531
    4. '['' → logprob: -15.375007629394531
    5. '```' → logprob: -15.750007629394531
    6. '=='' → logprob: -16.00000762939453
    7. '5' → logprob: -16.25000762939453
    8. '[
' → logprob: -16.50000762939453
    9. '
' → logprob: -16.62500762939453
    10. '   ' → logprob: -17.12500762939453

Token 1044: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.2664456789934775e-06
    2. ''' → logprob: -14.875000953674316
    3. '[' → logprob: -15.500000953674316
    4. '
' → logprob: -15.500000953674316
    5. ' ' → logprob: -16.000001907348633
    6. '0' → logprob: -16.125001907348633
    7. '(' → logprob: -16.375001907348633
    8. '   ' → logprob: -16.750001907348633
    9. '#' → logprob: -17.375001907348633
    10. '5' → logprob: -17.875001907348633

Token 1045: ']=='' (ID: 71177)
  Prédit: '==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.0026733994018286467
    2. ']=='' → logprob: -6.627673625946045
    3. '==' → logprob: -7.252673625946045
    4. ' ==' → logprob: -7.877673625946045
    5. '']=='' → logprob: -8.877673149108887
    6. ' =='' → logprob: -9.877673149108887
    7. ' in' → logprob: -10.502673149108887
    8. ''' → logprob: -10.877673149108887
    9. ')=='' → logprob: -12.002673149108887
    10. 'in' → logprob: -12.377673149108887

Token 1046: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -7.350386295001954e-05
    2. '['' → logprob: -10.375073432922363
    3. '1' → logprob: -10.750073432922363
    4. ' '' → logprob: -11.625073432922363
    5. '('' → logprob: -11.750073432922363
    6. ''x' → logprob: -13.375073432922363
    7. '{'' → logprob: -14.625073432922363
    8. '"' → logprob: -15.375073432922363
    9. '
' → logprob: -15.500073432922363
    10. ''or' → logprob: -15.625073432922363

Token 1047: ''' (ID: 6)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.6005673408508301
    2. ''' → logprob: -0.8505673408508301
    3. ''or' → logprob: -3.72556734085083
    4. 'or' → logprob: -8.600566864013672
    5. ' '' → logprob: -10.350566864013672
    6. '')' → logprob: -12.350566864013672
    7. '```' → logprob: -13.225566864013672
    8. ')' → logprob: -13.725566864013672
    9. ''||' → logprob: -13.725566864013672
    10. ''x' → logprob: -14.225566864013672

Token 1048: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.002192137064412236
    2. 'or' → logprob: -6.12719202041626
    3. ''or' → logprob: -12.377192497253418
    4. '                           ' → logprob: -14.127192497253418
    5. '	or' → logprob: -14.502192497253418
    6. '           ' → logprob: -14.877192497253418
    7. '<|end|>' → logprob: -15.377192497253418
    8. '==' → logprob: -15.502192497253418
    9. ')' → logprob: -15.502192497253418
    10. ' and' → logprob: -15.627192497253418

Token 1049: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.0067190444096922874
    2. ' bits' → logprob: -5.00671911239624
    3. '(bits' → logprob: -12.756718635559082
    4. 'bit' → logprob: -15.131718635559082
    5. 'b' → logprob: -15.756718635559082
    6. '```' → logprob: -15.881718635559082
    7. '.bits' → logprob: -16.7567195892334
    8. '_bits' → logprob: -16.8817195892334
    9. '<bits' → logprob: -17.1317195892334
    10. 'Bits' → logprob: -17.5067195892334

Token 1050: '[' (ID: 58)
  Prédit: '==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.030589627102017403
    2. '[' → logprob: -4.280589580535889
    3. '==' → logprob: -4.405589580535889
    4. '['' → logprob: -5.905589580535889
    5. ' =='' → logprob: -7.780589580535889
    6. ' ==' → logprob: -8.030590057373047
    7. ']=='' → logprob: -8.030590057373047
    8. '']=='' → logprob: -9.530590057373047
    9. ')=='' → logprob: -9.905590057373047
    10. 'bits' → logprob: -10.030590057373047

Token 1051: '4' (ID: 19)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.0046326881274580956
    2. 'x' → logprob: -5.379632472991943
    3. ''' → logprob: -12.629632949829102
    4. ' x' → logprob: -13.129632949829102
    5. ' '' → logprob: -13.254632949829102
    6. '['' → logprob: -13.379632949829102
    7. '"x' → logprob: -13.629632949829102
    8. ' ' → logprob: -13.879632949829102
    9. '4' → logprob: -14.629632949829102
    10. '```' → logprob: -14.629632949829102

Token 1052: ']=='' (ID: 71177)
  Prédit: '==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.00042292833677493036
    2. ']=='' → logprob: -8.375422477722168
    3. '==' → logprob: -8.875422477722168
    4. '']=='' → logprob: -10.500422477722168
    5. ' ==' → logprob: -11.500422477722168
    6. ' =='' → logprob: -11.875422477722168
    7. ')=='' → logprob: -12.250422477722168
    8. ''' → logprob: -13.750422477722168
    9. '=="' → logprob: -14.500422477722168
    10. '==
' → logprob: -14.625422477722168

Token 1053: 'x' (ID: 87)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.014165511354804039
    2. 'x' → logprob: -4.26416540145874
    3. '"x' → logprob: -14.639165878295898
    4. ''' → logprob: -14.639165878295898
    5. ' x' → logprob: -14.889165878295898
    6. '['' → logprob: -15.139165878295898
    7. ' '' → logprob: -16.0141658782959
    8. '%x' → logprob: -16.3891658782959
    9. '```' → logprob: -16.7641658782959
    10. '$x' → logprob: -17.0141658782959

Token 1054: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':
' → logprob: -1.015121579170227
    2. ' and' → logprob: -1.265121579170227
    3. ':' → logprob: -1.890121579170227
    4. '                               ' → logprob: -2.3901214599609375
    5. '                           ' → logprob: -2.6401214599609375
    6. '):
' → logprob: -3.7651214599609375
    7. '<|end|>' → logprob: -4.8901214599609375
    8. '):' → logprob: -5.8901214599609375
    9. ')' → logprob: -6.2651214599609375
    10. '```' → logprob: -6.6401214599609375

Token 1055: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.00038264848990365863
    2. '                           ' → logprob: -8.625382423400879
    3. '```' → logprob: -9.500382423400879
    4. '                            ' → logprob: -10.625382423400879
    5. '                                   ' → logprob: -10.750382423400879
    6. '                              ' → logprob: -11.250382423400879
    7. '                                ' → logprob: -11.250382423400879
    8. '                       ' → logprob: -11.500382423400879
    9. '               ' → logprob: -11.750382423400879
    10. '                             ' → logprob: -11.875382423400879

Token 1056: ' y' (ID: 342)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.41515329480171204
    2. 'count' → logprob: -1.5401532649993896
    3. '               ' → logprob: -2.9151532649993896
    4. 'if' → logprob: -4.165153503417969
    5. 'y' (adapté à ' y') → logprob: -4.415153503417969
    6. '                                   ' → logprob: -4.665153503417969
    7. 'bits' → logprob: -4.790153503417969
    8. ' count' → logprob: -5.540153503417969
    9. '   ' → logprob: -5.915153503417969
    10. ' if' → logprob: -6.165153503417969

Token 1057: 'bits' (ID: 24043)
  Prédit: 'bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.00037037418223917484
    2. ' =' → logprob: -8.750370025634766
    3. '=' → logprob: -8.875370025634766
    4. '_bits' → logprob: -9.625370025634766
    5. '(bits' → logprob: -13.750370025634766
    6. '==' → logprob: -13.875370025634766
    7. '   ' → logprob: -14.250370025634766
    8. '```' → logprob: -14.625370025634766
    9. 's' → logprob: -14.750370025634766
    10. ' bits' → logprob: -14.750370025634766

Token 1058: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10020667314529419
    2. ' =' → logprob: -2.3502066135406494
    3. '=
' → logprob: -17.10020637512207
    4. '=[' → logprob: -17.85020637512207
    5. 'bits' → logprob: -18.85020637512207
    6. '＝' → logprob: -19.10020637512207
    7. '=['' → logprob: -19.10020637512207
    8. ' =
' → logprob: -19.47520637512207
    9. '_bits' → logprob: -19.60020637512207
    10. '=[]
' → logprob: -19.72520637512207

Token 1059: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.004315110854804516
    2. ' bits' → logprob: -5.50431489944458
    3. '[' → logprob: -8.379315376281738
    4. '(bits' → logprob: -13.004315376281738
    5. ' [' → logprob: -13.379315376281738
    6. 'bit' → logprob: -13.879315376281738
    7. '[
' → logprob: -14.004315376281738
    8. '   ' → logprob: -14.129315376281738
    9. '['' → logprob: -15.254315376281738
    10. '.bits' → logprob: -15.379315376281738

Token 1060: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00030400342075154185
    2. '5' → logprob: -8.125304222106934
    3. '6' → logprob: -12.250304222106934
    4. '4' → logprob: -13.375304222106934
    5. '(' → logprob: -14.625304222106934
    6. '```' → logprob: -15.000304222106934
    7. '=' → logprob: -15.500304222106934
    8. '7' → logprob: -15.750304222106934
    9. '3' → logprob: -16.375303268432617
    10. '
' → logprob: -16.750303268432617

Token 1061: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -8.41866585687967e-06
    2. '[' → logprob: -11.875008583068848
    3. '(' → logprob: -13.875008583068848
    4. '
' → logprob: -15.500008583068848
    5. '```' → logprob: -16.00000762939453
    6. '   ' → logprob: -17.12500762939453
    7. ' ' → logprob: -17.37500762939453
    8. '``' → logprob: -17.87500762939453
    9. '{' → logprob: -17.87500762939453
    10. '５' → logprob: -18.12500762939453

Token 1062: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00023917861108202487
    2. '[' → logprob: -8.875239372253418
    3. '6' → logprob: -10.375239372253418
    4. '7' → logprob: -11.000239372253418
    5. ']' → logprob: -11.000239372253418
    6. ':]' → logprob: -11.250239372253418
    7. ',' → logprob: -11.750239372253418
    8. '3' → logprob: -12.250239372253418
    9. '5' → logprob: -12.875239372253418
    10. '4' → logprob: -13.250239372253418

Token 1063: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -5.512236498361744e-07
    2. '7' → logprob: -14.875000953674316
    3. ' ' → logprob: -16.0
    4. '```' → logprob: -17.125
    5. '۸' → logprob: -18.625
    6. '
' → logprob: -18.875
    7. '``' → logprob: -19.375
    8. '   ' → logprob: -19.75
    9. '88' → logprob: -19.75
    10. '８' → logprob: -19.875

Token 1064: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.12697535753250122
    2. ']' → logprob: -2.1269752979278564
    3. ']
' → logprob: -10.126975059509277
    4. ']

' → logprob: -13.001975059509277
    5. '               ' → logprob: -13.501975059509277
    6. '']
' → logprob: -14.501975059509277
    7. '                               ' → logprob: -14.626975059509277
    8. ')
' → logprob: -14.751975059509277
    9. '                           ' → logprob: -14.876975059509277
    10. ' ]
' → logprob: -15.001975059509277

Token 1065: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0022039050236344337
    2. 'if' → logprob: -7.627203941345215
    3. '               ' → logprob: -7.627203941345215
    4. ' if' → logprob: -8.252203941345215
    5. '                           ' → logprob: -8.252203941345215
    6. '                                   ' → logprob: -8.502203941345215
    7. '```' → logprob: -8.627203941345215
    8. ':
' → logprob: -9.002203941345215
    9. '           ' → logprob: -9.877203941345215
    10. ' and' → logprob: -10.252203941345215

Token 1066: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0009598199394531548
    2. ' if' → logprob: -7.625959873199463
    3. '                               ' → logprob: -7.875959873199463
    4. 'count' → logprob: -10.375959396362305
    5. '                                   ' → logprob: -10.625959396362305
    6. '#' → logprob: -10.750959396362305
    7. 'x' → logprob: -11.875959396362305
    8. '```' → logprob: -12.750959396362305
    9. '
' → logprob: -14.125959396362305
    10. '                                       ' → logprob: -14.250959396362305

Token 1067: ' '' (ID: 461)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.00031305922311730683
    2. ''' → logprob: -8.750312805175781
    3. ' '' → logprob: -8.875312805175781
    4. 'x' → logprob: -12.625312805175781
    5. ' x' → logprob: -13.125312805175781
    6. ''any' → logprob: -13.250312805175781
    7. ''all' → logprob: -13.500312805175781
    8. '
' → logprob: -13.625312805175781
    9. '"x' → logprob: -13.750312805175781
    10. ' ' → logprob: -14.125312805175781

Token 1068: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.6932475566864014
    2. ''x' → logprob: -0.6932475566864014
    3. ''' → logprob: -9.69324779510498
    4. '"x' → logprob: -11.19324779510498
    5. '
' → logprob: -11.69324779510498
    6. ' x' → logprob: -12.06824779510498
    7. '['' → logprob: -13.56824779510498
    8. '[x' → logprob: -13.69324779510498
    9. '_x' → logprob: -14.31824779510498
    10. '(x' → logprob: -14.44324779510498

Token 1069: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.008719169534742832
    2. ' in' → logprob: -5.508718967437744
    3. 'in' → logprob: -6.008718967437744
    4. ''in' → logprob: -6.133718967437744
    5. ']' → logprob: -14.133719444274902
    6. '"' → logprob: -14.258719444274902
    7. 'In' → logprob: -14.633719444274902
    8. '```' → logprob: -14.758719444274902
    9. ')' → logprob: -15.133719444274902
    10. '[' → logprob: -15.508719444274902

Token 1070: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5759486556053162
    2. ' in' → logprob: -0.8259486556053162
    3. '<|end|>' → logprob: -13.325948715209961
    4. ')' → logprob: -13.450948715209961
    5. 'In' → logprob: -13.450948715209961
    6. '[' → logprob: -13.950948715209961
    7. '...' → logprob: -14.075948715209961
    8. '```' → logprob: -14.200948715209961
    9. 'import' → logprob: -15.575948715209961
    10. '==' → logprob: -15.575948715209961

Token 1071: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.7610454708337784e-05
    2. ' y' → logprob: -10.500027656555176
    3. '[' → logprob: -17.50002670288086
    4. '[y' → logprob: -18.37502670288086
    5. '['' → logprob: -18.75002670288086
    6. ''y' → logprob: -19.00002670288086
    7. 'bits' → logprob: -19.25002670288086
    8. '...' → logprob: -19.25002670288086
    9. '(y' → logprob: -19.37502670288086
    10. '	y' → logprob: -19.50002670288086

Token 1072: 'bits' (ID: 24043)
  Prédit: 'bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -1.1637164789135568e-05
    2. 'its' → logprob: -11.625011444091797
    3. '[' → logprob: -14.000011444091797
    4. ' bits' → logprob: -15.250011444091797
    5. '(bits' → logprob: -15.250011444091797
    6. 'b' → logprob: -15.750011444091797
    7. 'y' → logprob: -15.750011444091797
    8. '
' → logprob: -15.875011444091797
    9. ')' → logprob: -15.875011444091797
    10. ']' → logprob: -16.000011444091797

Token 1073: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35399460792541504
    2. ':
' → logprob: -1.228994607925415
    3. '                               ' → logprob: -5.478994369506836
    4. '                                   ' → logprob: -7.603994369506836
    5. '):
' → logprob: -7.853994369506836
    6. ' and' → logprob: -9.478994369506836
    7. '                           ' → logprob: -9.478994369506836
    8. '<|end|>' → logprob: -9.603994369506836
    9. '           ' → logprob: -10.228994369506836
    10. '):' → logprob: -10.603994369506836

Token 1074: '                                   ' (ID: 3523)
  Prédit: '                                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                   ' → logprob: -0.006188295315951109
    2. '                   ' → logprob: -5.88118839263916
    3. '                               ' → logprob: -6.50618839263916
    4. '```' → logprob: -7.00618839263916
    5. '               ' → logprob: -7.63118839263916
    6. '                                       ' → logprob: -8.50618839263916
    7. '           ' → logprob: -8.75618839263916
    8. '                           ' → logprob: -10.13118839263916
    9. '                                           ' → logprob: -10.38118839263916
    10. 'count' → logprob: -10.88118839263916

Token 1075: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.011463926173746586
    2. ' count' → logprob: -4.6364641189575195
    3. '                                   ' → logprob: -6.7614641189575195
    4. '                               ' → logprob: -8.01146411895752
    5. '                   ' → logprob: -9.01146411895752
    6. '               ' → logprob: -11.13646411895752
    7. '                           ' → logprob: -11.13646411895752
    8. '
' → logprob: -11.26146411895752
    9. '                                       ' → logprob: -11.26146411895752
    10. '   ' → logprob: -11.38646411895752

Token 1076: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02975349873304367
    2. '=' → logprob: -3.5297534465789795
    3. ' +=' → logprob: -13.529753684997559
    4. '<|end|>' → logprob: -14.279753684997559
    5. ')' → logprob: -15.154753684997559
    6. '+=' → logprob: -15.279753684997559
    7. '=count' → logprob: -16.029752731323242
    8. '```' → logprob: -16.154752731323242
    9. ' ' → logprob: -16.529752731323242
    10. '...' → logprob: -17.654752731323242

Token 1077: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007102862582542002
    2. ' ' → logprob: -7.250710487365723
    3. '                                   ' → logprob: -15.500710487365723
    4. '=' → logprob: -16.375709533691406
    5. '                               ' → logprob: -17.625709533691406
    6. '   ' → logprob: -19.000709533691406
    7. '                                       ' → logprob: -19.250709533691406
    8. '۰' → logprob: -19.750709533691406
    9. '000' → logprob: -20.125709533691406
    10. '                           ' → logprob: -20.125709533691406

Token 1078: '
' (ID: 198)
  Prédit: '                                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                   ' → logprob: -0.437875896692276
    2. 'for' → logprob: -1.1878758668899536
    3. '                   ' → logprob: -3.812875986099243
    4. ' for' → logprob: -4.187875747680664
    5. '           ' → logprob: -5.687875747680664
    6. '                               ' → logprob: -6.062875747680664
    7. '                                           ' → logprob: -6.312875747680664
    8. '               ' → logprob: -6.687875747680664
    9. '                                       ' → logprob: -7.062875747680664
    10. '
' → logprob: -7.437875747680664

Token 1079: '                                   ' (ID: 3523)
  Prédit: '                                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                   ' → logprob: -0.043273668736219406
    2. 'for' → logprob: -3.543273687362671
    3. '                   ' → logprob: -5.293273448944092
    4. '                               ' → logprob: -5.668273448944092
    5. ' for' → logprob: -6.043273448944092
    6. '               ' → logprob: -7.168273448944092
    7. '           ' → logprob: -7.543273448944092
    8. '                                       ' → logprob: -7.793273448944092
    9. '                           ' → logprob: -8.04327392578125
    10. '                                           ' → logprob: -8.54327392578125

Token 1080: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0007466176757588983
    2. '                                   ' → logprob: -7.750746726989746
    3. ' for' → logprob: -8.500746726989746
    4. '                   ' → logprob: -10.125746726989746
    5. '               ' → logprob: -10.625746726989746
    6. '                               ' → logprob: -10.750746726989746
    7. '           ' → logprob: -12.000746726989746
    8. '                                       ' → logprob: -12.125746726989746
    9. '                           ' → logprob: -12.250746726989746
    10. '                       ' → logprob: -12.375746726989746

Token 1081: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -6.635164754698053e-05
    2. ' i' → logprob: -9.625066757202148
    3. '   ' → logprob: -16.12506675720215
    4. '	i' → logprob: -16.62506675720215
    5. '```' → logprob: -17.12506675720215
    6. ' ' → logprob: -17.50006675720215
    7. '_i' → logprob: -17.87506675720215
    8. 'range' → logprob: -18.37506675720215
    9. 'for' → logprob: -18.50006675720215
    10. '`' → logprob: -18.62506675720215

Token 1082: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03806697204709053
    2. 'in' → logprob: -3.288066864013672
    3. 'range' → logprob: -10.788066864013672
    4. ' range' → logprob: -13.663066864013672
    5. '                               ' → logprob: -13.788066864013672
    6. '                                ' → logprob: -14.663066864013672
    7. ' ' → logprob: -14.913066864013672
    8. '=' → logprob: -15.038066864013672
    9. '                                   ' → logprob: -15.163066864013672
    10. '                                    ' → logprob: -15.288066864013672

Token 1083: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -9.615255839889869e-05
    2. ' range' → logprob: -9.250096321105957
    3. '
' → logprob: -18.37509536743164
    4. '(range' → logprob: -18.62509536743164
    5. '   ' → logprob: -18.87509536743164
    6. '```' → logprob: -19.75009536743164
    7. ' ' → logprob: -20.25009536743164
    8. 'in' → logprob: -21.00009536743164
    9. 'count' → logprob: -21.12509536743164
    10. '256' → logprob: -21.12509536743164

Token 1084: '(' (ID: 7)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.11615585535764694
    2. '256' → logprob: -2.3661558628082275
    3. '(' → logprob: -4.866155624389648
    4. ' range' → logprob: -4.866155624389648
    5. '0' → logprob: -8.491155624389648
    6. '(range' → logprob: -8.991155624389648
    7. 'in' → logprob: -10.366155624389648
    8. '
' → logprob: -11.616155624389648
    9. '                           ' → logprob: -11.741155624389648
    10. '                               ' → logprob: -11.866155624389648

Token 1085: '256' (ID: 5780)
  Prédit: '256'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '256' → logprob: -2.2200749754119897e-06
    2. '                               ' → logprob: -14.250001907348633
    3. 'range' → logprob: -15.125001907348633
    4. '255' → logprob: -15.250001907348633
    5. ' ' → logprob: -15.375001907348633
    6. '                                   ' → logprob: -15.500001907348633
    7. '                           ' → logprob: -15.750001907348633
    8. '                   ' → logprob: -16.125001907348633
    9. '0' → logprob: -16.250001907348633
    10. '   ' → logprob: -16.625001907348633

Token 1086: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.007404419593513012
    2. '):' → logprob: -5.007404327392578
    3. ':
' → logprob: -7.632404327392578
    4. ':' → logprob: -9.132404327392578
    5. '):
' → logprob: -10.007404327392578
    6. '                                       ' → logprob: -11.257404327392578
    7. '):

' → logprob: -11.507404327392578
    8. '               ' → logprob: -12.007404327392578
    9. '():
' → logprob: -12.132404327392578
    10. ']:
' → logprob: -13.007404327392578

Token 1087: '                                       ' (ID: 4754)
  Prédit: '                                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                       ' → logprob: -0.00351775623857975
    2. '                       ' → logprob: -6.7535176277160645
    3. ' b' → logprob: -7.8785176277160645
    4. '                                           ' → logprob: -8.003518104553223
    5. '                                               ' → logprob: -8.128518104553223
    6. 'b' → logprob: -8.378518104553223
    7. '               ' → logprob: -8.378518104553223
    8. '       ' → logprob: -8.628518104553223
    9. '                                        
' → logprob: -8.753518104553223
    10. '```' → logprob: -8.753518104553223

Token 1088: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.09818938374519348
    2. ' b' → logprob: -2.473189353942871
    3. '                                       ' → logprob: -4.723189353942871
    4. '                                           ' → logprob: -9.348189353942871
    5. '                                        ' → logprob: -9.848189353942871
    6. '	b' → logprob: -10.348189353942871
    7. '                                      ' → logprob: -10.848189353942871
    8. '                                     ' → logprob: -10.973189353942871
    9. '   ' → logprob: -10.973189353942871
    10. '                                   ' → logprob: -11.223189353942871

Token 1089: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22681331634521484
    2. '=' → logprob: -1.6018133163452148
    3. '=format' → logprob: -6.601813316345215
    4. '[' → logprob: -11.976813316345215
    5. '=form' → logprob: -12.226813316345215
    6. ' in' → logprob: -12.601813316345215
    7. '=[' → logprob: -12.726813316345215
    8. 'b' → logprob: -12.726813316345215
    9. '=
' → logprob: -12.851813316345215
    10. '<|end|>' → logprob: -13.101813316345215

Token 1090: ' format' (ID: 6011)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.03804585337638855
    2. ' format' → logprob: -3.288045883178711
    3. '(format' → logprob: -12.413045883178711
    4. '	format' → logprob: -15.788045883178711
    5. '=format' → logprob: -16.03804588317871
    6. '.format' → logprob: -16.78804588317871
    7. 'f' → logprob: -17.41304588317871
    8. 'form' → logprob: -17.66304588317871
    9. '_format' → logprob: -17.78804588317871
    10. '-format' → logprob: -18.16304588317871

Token 1091: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -2.451116051815916e-05
    2. 'i' → logprob: -10.625024795532227
    3. '[i' → logprob: -16.375024795532227
    4. ' (' → logprob: -17.625024795532227
    5. ' i' → logprob: -18.250024795532227
    6. '(int' → logprob: -18.250024795532227
    7. '(' → logprob: -18.250024795532227
    8. '   ' → logprob: -18.750024795532227
    9. '{i' → logprob: -19.125024795532227
    10. '(
' → logprob: -19.375024795532227

Token 1092: ','' (ID: 6620)
  Prédit: ',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ','' → logprob: -0.022358616814017296
    2. ',' → logprob: -3.8973586559295654
    3. '[i' → logprob: -7.022358417510986
    4. '(i' → logprob: -7.647358417510986
    5. ',i' → logprob: -8.147358894348145
    6. '(),'' → logprob: -9.647358894348145
    7. '[' → logprob: -10.522358894348145
    8. '','' → logprob: -11.397358894348145
    9. ' ,'' → logprob: -11.772358894348145
    10. '('' → logprob: -11.897358894348145

Token 1093: '08' (ID: 3062)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.023766323924064636
    2. '08' → logprob: -3.773766279220581
    3. '8' → logprob: -7.89876651763916
    4. '256' → logprob: -9.14876651763916
    5. '`' → logprob: -10.89876651763916
    6. '008' → logprob: -11.64876651763916
    7. '"' → logprob: -12.39876651763916
    8. '```' → logprob: -12.64876651763916
    9. 'i' → logprob: -13.64876651763916
    10. '
' → logprob: -13.77376651763916

Token 1094: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.000260382192209363
    2. ''b' → logprob: -9.000260353088379
    3. 'bin' → logprob: -9.125260353088379
    4. 'bit' → logprob: -11.375260353088379
    5. 'binary' → logprob: -12.125260353088379
    6. ''' → logprob: -12.500260353088379
    7. '8' → logprob: -13.500260353088379
    8. '08' → logprob: -13.500260353088379
    9. '#' → logprob: -13.750260353088379
    10. 'x' → logprob: -14.500260353088379

Token 1095: '')
' (ID: 2515)
  Prédit: '')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')
' → logprob: -0.20989523828029633
    2. ')
' → logprob: -1.8348952531814575
    3. '')' → logprob: -3.959895133972168
    4. ')' → logprob: -4.834895133972168
    5. '                                       ' → logprob: -6.459895133972168
    6. ''):
' → logprob: -7.709895133972168
    7. '```' → logprob: -8.459895133972168
    8. '):
' → logprob: -9.084895133972168
    9. '                                   ' → logprob: -9.334895133972168
    10. ''''
' → logprob: -10.209895133972168

Token 1096: '                                       ' (ID: 4754)
  Prédit: '                                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                       ' → logprob: -0.004000042099505663
    2. '									' → logprob: -6.504000186920166
    3. '
' → logprob: -7.129000186920166
    4. '```' → logprob: -8.128999710083008
    5. '                                   ' → logprob: -8.253999710083008
    6. '               ' → logprob: -8.628999710083008
    7. '                                        
' → logprob: -8.753999710083008
    8. '       ' → logprob: -8.753999710083008
    9. '	' → logprob: -8.878999710083008
    10. '                                           ' → logprob: -9.128999710083008

Token 1097: ' ok' (ID: 4763)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' (adapté à ' ok') → logprob: -0.02121599391102791
    2. ' ok' → logprob: -4.021215915679932
    3. '                                       ' → logprob: -6.521215915679932
    4. '	ok' → logprob: -7.646215915679932
    5. '
' → logprob: -7.771215915679932
    6. 'okay' → logprob: -9.27121639251709
    7. 'OK' → logprob: -9.39621639251709
    8. '                                           ' → logprob: -9.52121639251709
    9. '               ' → logprob: -9.77121639251709
    10. '                                   ' → logprob: -9.89621639251709

Token 1098: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47495517134666443
    2. ' =' → logprob: -0.9749552011489868
    3. '                                       ' → logprob: -8.099955558776855
    4. '=True' → logprob: -8.849955558776855
    5. '                                           ' → logprob: -9.099955558776855
    6. '=False' → logprob: -9.224955558776855
    7. '```' → logprob: -9.974955558776855
    8. '                                   ' → logprob: -10.349955558776855
    9. '	' → logprob: -10.474955558776855
    10. '                                        ' → logprob: -10.849955558776855

Token 1099: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.014175145886838436
    2. ' True' → logprob: -4.264174938201904
    3. '(True' → logprob: -12.389175415039062
    4. '=True' → logprob: -12.639175415039062
    5. '                               ' → logprob: -13.514175415039062
    6. 'False' → logprob: -13.639175415039062
    7. '                                   ' → logprob: -14.139175415039062
    8. '                                       ' → logprob: -14.639175415039062
    9. '                                           ' → logprob: -16.639175415039062
    10. '                           ' → logprob: -16.639175415039062

Token 1100: '
' (ID: 198)
  Prédit: '                                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                                       ' → logprob: -0.039939090609550476
    2. 'for' → logprob: -4.039938926696777
    3. '									' → logprob: -4.539938926696777
    4. '                                           ' → logprob: -5.789938926696777
    5. '<|end|>' → logprob: -6.039938926696777
    6. '										' → logprob: -6.664938926696777
    7. '                                        ' → logprob: -6.789938926696777
    8. '```' → logprob: -7.289938926696777
    9. '                                        
' → logprob: -7.539938926696777
    10. ' for' → logprob: -8.039938926696777

Token 1101: '                                       ' (ID: 4754)
  Prédit: '                                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                       ' → logprob: -0.0946253314614296
    2. 'for' → logprob: -2.469625234603882
    3. '                                           ' → logprob: -5.969625473022461
    4. '```' → logprob: -6.219625473022461
    5. ' for' → logprob: -7.594625473022461
    6. '                                        ' → logprob: -8.969625473022461
    7. '                                   ' → logprob: -9.094625473022461
    8. '									' → logprob: -9.344625473022461
    9. '<|end|>' → logprob: -9.594625473022461
    10. '                               ' → logprob: -10.219625473022461

Token 1102: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.005133777391165495
    2. ' for' → logprob: -5.755133628845215
    3. '                                       ' → logprob: -6.630133628845215
    4. '	for' → logprob: -8.005133628845215
    5. '                                           ' → logprob: -8.380133628845215
    6. '									' → logprob: -10.755133628845215
    7. '										' → logprob: -11.130133628845215
    8. '```' → logprob: -11.505133628845215
    9. '                   ' → logprob: -12.880133628845215
    10. '                               ' → logprob: -13.130133628845215

Token 1103: ' pb' (ID: 31582)
  Prédit: 'pb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pb' → logprob: -0.011050770990550518
    2. ' pb' → logprob: -4.511050701141357
    3. 'p' → logprob: -13.261051177978516
    4. '(pb' → logprob: -15.011051177978516
    5. '_pb' → logprob: -15.636051177978516
    6. 'pbs' → logprob: -15.886051177978516
    7. '   ' → logprob: -16.261051177978516
    8. '
' → logprob: -16.636051177978516
    9. 'pj' → logprob: -16.886051177978516
    10. '.pb' → logprob: -16.886051177978516

Token 1104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00039588010986335576
    2. ',b' → logprob: -8.250395774841309
    3. ',p' → logprob: -9.375395774841309
    4. ' ,' → logprob: -10.000395774841309
    5. ' in' → logprob: -13.625395774841309
    6. ',in' → logprob: -14.375395774841309
    7. 'in' → logprob: -14.500395774841309
    8. 'b' → logprob: -14.750395774841309
    9. ',n' → logprob: -15.500395774841309
    10. ',user' → logprob: -15.625395774841309

Token 1105: ' bb' (ID: 32433)
  Prédit: 'bb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.12694017589092255
    2. ' bb' → logprob: -2.1269402503967285
    3. 'b' → logprob: -12.37693977355957
    4. ' ' → logprob: -12.75193977355957
    5. '(bb' → logprob: -13.62693977355957
    6. '    ' → logprob: -14.50193977355957
    7. 'pb' → logprob: -14.50193977355957
    8. '_bb' → logprob: -14.75193977355957
    9. '.bb' → logprob: -14.75193977355957
    10. 'bbb' → logprob: -15.12693977355957

Token 1106: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.015104240737855434
    2. 'in' → logprob: -4.515104293823242
    3. ',' → logprob: -5.515104293823242
    4. ' ,' → logprob: -11.015104293823242
    5. ',p' → logprob: -13.765104293823242
    6. ',in' → logprob: -13.765104293823242
    7. ' ' → logprob: -14.390104293823242
    8. '<|end|>' → logprob: -14.515104293823242
    9. '
' → logprob: -15.140104293823242
    10. '                                       ' → logprob: -15.140104293823242

Token 1107: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.1602257490158081
    2. ' zip' → logprob: -1.910225749015808
    3. '(zip' → logprob: -13.535225868225098
    4. '.zip' → logprob: -16.03522491455078
    5. '           ' → logprob: -17.03522491455078
    6. '               ' → logprob: -17.91022491455078
    7. ' ' → logprob: -18.16022491455078
    8. '         ' → logprob: -18.16022491455078
    9. '            ' → logprob: -18.28522491455078
    10. '
' → logprob: -18.28522491455078

Token 1108: '(bits' (ID: 170698)
  Prédit: '(bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bits' → logprob: -0.10042145848274231
    2. 'bits' → logprob: -2.35042142868042
    3. ' bits' → logprob: -8.475421905517578
    4. '.bits' → logprob: -13.225421905517578
    5. '(bit' → logprob: -13.975421905517578
    6. '(bytes' → logprob: -14.100421905517578
    7. '(b' → logprob: -14.350421905517578
    8. '_bits' → logprob: -14.475421905517578
    9. ',' → logprob: -14.850421905517578
    10. '(byte' → logprob: -14.975421905517578

Token 1109: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002763518423307687
    2. ',b' → logprob: -8.875276565551758
    3. ',p' → logprob: -9.125276565551758
    4. ' ,' → logprob: -10.625276565551758
    5. '                                       ' → logprob: -14.125276565551758
    6. '                                           ' → logprob: -15.125276565551758
    7. ',None' → logprob: -15.500276565551758
    8. ',n' → logprob: -15.625276565551758
    9. ',line' → logprob: -15.750276565551758
    10. ',user' → logprob: -15.750276565551758

Token 1110: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.25192928314208984
    2. ' b' → logprob: -1.5019292831420898
    3. '                                       ' → logprob: -16.126930236816406
    4. '                                   ' → logprob: -16.626930236816406
    5. ')b' → logprob: -17.126930236816406
    6. '                               ' → logprob: -17.751930236816406
    7. ' ' → logprob: -18.126930236816406
    8. '                                     ' → logprob: -18.501930236816406
    9. '                                    ' → logprob: -18.626930236816406
    10. '                                      ' → logprob: -19.001930236816406

Token 1111: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.007753556594252586
    2. '                                           ' → logprob: -5.257753372192383
    3. '                                       ' → logprob: -6.632753372192383
    4. '):' → logprob: -7.132753372192383
    5. ':
' → logprob: -8.382753372192383
    6. '):

' → logprob: -10.132753372192383
    7. '):
' → logprob: -10.757753372192383
    8. '                                   ' → logprob: -11.007753372192383
    9. '                               ' → logprob: -11.132753372192383
    10. ':' → logprob: -11.257753372192383

Token 1112: '                                           ' (ID: 6322)
  Prédit: '                                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                           ' → logprob: -0.006309016142040491
    2. '                                       ' → logprob: -5.3813090324401855
    3. '                                               ' → logprob: -6.7563090324401855
    4. '```' → logprob: -8.756308555603027
    5. '                               ' → logprob: -9.131308555603027
    6. '                                        ' → logprob: -10.006308555603027
    7. '                                            
' → logprob: -10.381308555603027
    8. 'if' → logprob: -10.381308555603027
    9. '                                         ' → logprob: -10.506308555603027
    10. '                                          ' → logprob: -10.756308555603027

Token 1113: ' if' (ID: 538)
  Prédit: '                                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                           ' → logprob: -0.9008747935295105
    2. ' if' → logprob: -1.1508748531341553
    3. 'if' (adapté à ' if') → logprob: -1.5258748531341553
    4. '                                               ' → logprob: -2.9008748531341553
    5. '                                       ' → logprob: -5.900874614715576
    6. '                                            ' → logprob: -7.650874614715576
    7. '										' → logprob: -8.275875091552734
    8. ' ' → logprob: -8.775875091552734
    9. '											' → logprob: -8.900875091552734
    10. '                               ' → logprob: -8.900875091552734

Token 1114: ' pb' (ID: 31582)
  Prédit: ' pb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pb' → logprob: -0.31330108642578125
    2. 'pb' → logprob: -1.3133010864257812
    3. '_pb' → logprob: -10.688301086425781
    4. '.pb' → logprob: -11.688301086425781
    5. '(pb' → logprob: -11.938301086425781
    6. 'Pb' → logprob: -15.313301086425781
    7. ' ' → logprob: -15.313301086425781
    8. 'PB' → logprob: -15.813301086425781
    9. '
' → logprob: -15.938301086425781
    10. '                                   ' → logprob: -15.938301086425781

Token 1115: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.1080864742398262
    2. '!=' → logprob: -2.358086585998535
    3. '!='' → logprob: -4.858086585998535
    4. '                                       ' → logprob: -11.108086585998535
    5. '                                           ' → logprob: -11.233086585998535
    6. '!="' → logprob: -11.733086585998535
    7. '<|end|>' → logprob: -12.108086585998535
    8. '                               ' → logprob: -12.233086585998535
    9. ')!=' → logprob: -12.358086585998535
    10. ']!=' → logprob: -12.483086585998535

Token 1116: ' '' (ID: 461)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.0057875313796103
    2. ' '' → logprob: -5.630787372589111
    3. ''' → logprob: -6.130787372589111
    4. '
' → logprob: -12.88078784942627
    5. 'x' → logprob: -13.88078784942627
    6. ' ' → logprob: -14.00578784942627
    7. '['' → logprob: -14.25578784942627
    8. '   ' → logprob: -14.25578784942627
    9. '"x' → logprob: -14.38078784942627
    10. '```' → logprob: -14.38078784942627

Token 1117: 'x' (ID: 87)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.00014478032244369388
    2. 'x' → logprob: -8.875144958496094
    3. '"x' → logprob: -13.000144958496094
    4. ' '' → logprob: -13.375144958496094
    5. '['' → logprob: -15.750144958496094
    6. ''' → logprob: -15.875144958496094
    7. '`' → logprob: -16.000144958496094
    8. '\x' → logprob: -16.000144958496094
    9. ' x' → logprob: -16.125144958496094
    10. '
' → logprob: -16.750144958496094

Token 1118: ''' (ID: 6)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6931506395339966
    2. 'and' → logprob: -0.6931506395339966
    3. '```' → logprob: -13.443150520324707
    4. '<|end|>' → logprob: -14.193150520324707
    5. '&&' → logprob: -15.068150520324707
    6. '                               ' → logprob: -15.318150520324707
    7. '                                           ' → logprob: -15.443150520324707
    8. '...' → logprob: -16.443151473999023
    9. ')' → logprob: -16.443151473999023
    10. '                           ' → logprob: -16.568151473999023

Token 1119: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.5759581327438354
    2. 'and' → logprob: -0.8259581327438354
    3. '                                           ' → logprob: -11.200958251953125
    4. '                                               ' → logprob: -13.450958251953125
    5. '<|end|>' → logprob: -14.075958251953125
    6. '&&' → logprob: -14.200958251953125
    7. '                                       ' → logprob: -14.575958251953125
    8. '                                            ' → logprob: -15.075958251953125
    9. '                               ' → logprob: -15.325958251953125
    10. '                                        ' → logprob: -15.575958251953125

Token 1120: ' pb' (ID: 31582)
  Prédit: 'pb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pb' → logprob: -0.3132977783679962
    2. ' pb' → logprob: -1.3132977485656738
    3. '(pb' → logprob: -11.188298225402832
    4. '_pb' → logprob: -11.688298225402832
    5. '.pb' → logprob: -11.938298225402832
    6. '                                   ' → logprob: -13.063298225402832
    7. 'Pb' → logprob: -13.813298225402832
    8. '                                       ' → logprob: -14.063298225402832
    9. 'bb' → logprob: -14.063298225402832
    10. '                               ' → logprob: -14.438298225402832

Token 1121: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.00528178084641695
    2. ' !=' → logprob: -5.255281925201416
    3. 'bb' → logprob: -10.130281448364258
    4. '                                           ' → logprob: -12.755281448364258
    5. '                                       ' → logprob: -13.380281448364258
    6. ' bb' → logprob: -14.255281448364258
    7. '!==' → logprob: -14.755281448364258
    8. '!='' → logprob: -14.880281448364258
    9. '                                               ' → logprob: -14.880281448364258
    10. '==' → logprob: -15.005281448364258

Token 1122: ' bb' (ID: 32433)
  Prédit: 'bb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.00861456897109747
    2. ' bb' → logprob: -4.758614540100098
    3. '(bb' → logprob: -16.883615493774414
    4. 'b' → logprob: -17.633615493774414
    5. '_bb' → logprob: -17.758615493774414
    6. '.bb' → logprob: -19.258615493774414
    7. ' ' → logprob: -19.883615493774414
    8. 'bbb' → logprob: -21.633615493774414
    9. '
' → logprob: -21.883615493774414
    10. '    ' → logprob: -22.258615493774414

Token 1123: ':
' (ID: 734)
  Prédit: '                                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                               ' → logprob: -0.026424072682857513
    2. ':
' → logprob: -3.9014241695404053
    3. ':' → logprob: -5.526423931121826
    4. '                                           ' → logprob: -7.151423931121826
    5. '                               ' → logprob: -7.276423931121826
    6. '```' → logprob: -9.276424407958984
    7. '                                              ' → logprob: -9.401424407958984
    8. '):
' → logprob: -9.526424407958984
    9. '                                                       ' → logprob: -10.276424407958984
    10. '                                       ' → logprob: -10.401424407958984

Token 1124: '                                               ' (ID: 8793)
  Prédit: '                                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                               ' → logprob: -0.00010270876373397186
    2. '```' → logprob: -10.000102996826172
    3. '                               ' → logprob: -11.125102996826172
    4. '                                           ' → logprob: -11.500102996826172
    5. '                                                       ' → logprob: -11.750102996826172
    6. '                                                   ' → logprob: -12.125102996826172
    7. '                                              ' → logprob: -12.125102996826172
    8. '``' → logprob: -13.125102996826172
    9. '                       ' → logprob: -13.375102996826172
    10. '                                                ' → logprob: -13.375102996826172

Token 1125: ' ok' (ID: 4763)
  Prédit: '                                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                                               ' → logprob: -0.013749712146818638
    2. 'break' → logprob: -4.513749599456787
    3. '                                           ' → logprob: -6.638749599456787
    4. ' break' → logprob: -7.263749599456787
    5. '
' → logprob: -7.763749599456787
    6. 'return' → logprob: -10.013750076293945
    7. '                                       ' → logprob: -10.263750076293945
    8. 'continue' → logprob: -10.388750076293945
    9. '```' → logprob: -10.513750076293945
    10. '                                                   ' → logprob: -10.888750076293945

Token 1126: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.024355432018637657
    2. ' =' → logprob: -3.899355411529541
    3. '=False' → logprob: -5.774355411529541
    4. '                                               ' → logprob: -7.524355411529541
    5. '=
' → logprob: -9.6493558883667
    6. '=True' → logprob: -10.3993558883667
    7. '                                                   ' → logprob: -10.8993558883667
    8. '                                           ' → logprob: -10.8993558883667
    9. '==' → logprob: -12.1493558883667
    10. '                                                ' → logprob: -12.1493558883667

Token 1127: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.00015872348740231246
    2. ' False' → logprob: -8.750158309936523
    3. '(False' → logprob: -16.250158309936523
    4. '                                               ' → logprob: -16.375158309936523
    5. '                                           ' → logprob: -17.375158309936523
    6. '                                       ' → logprob: -17.625158309936523
    7. '=False' → logprob: -17.875158309936523
    8. '                                                   ' → logprob: -18.500158309936523
    9. '                                                       ' → logprob: -19.250158309936523
    10. '_false' → logprob: -19.500158309936523

Token 1128: '
' (ID: 198)
  Prédit: '                                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                               ' → logprob: -0.0007288746419362724
    2. '                                                   ' → logprob: -8.375728607177734
    3. '											' → logprob: -8.750728607177734
    4. '                                                ' → logprob: -9.625728607177734
    5. '```' → logprob: -9.625728607177734
    6. '                                           ' → logprob: -10.125728607177734
    7. '<|end|>' → logprob: -10.500728607177734
    8. '                                                       ' → logprob: -10.500728607177734
    9. '
' → logprob: -11.000728607177734
    10. '                               ' → logprob: -11.125728607177734

Token 1129: '                                               ' (ID: 8793)
  Prédit: '                                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                               ' → logprob: -0.0005535095697268844
    2. '											' → logprob: -8.125553131103516
    3. '                                                ' → logprob: -9.500553131103516
    4. '                                                   ' → logprob: -9.625553131103516
    5. '                                           ' → logprob: -10.125553131103516
    6. '```' → logprob: -11.125553131103516
    7. '                                              ' → logprob: -11.625553131103516
    8. '
' → logprob: -11.750553131103516
    9. '                                ' → logprob: -11.750553131103516
    10. '                       ' → logprob: -12.000553131103516

Token 1130: ' break' (ID: 2338)
  Prédit: '                                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                               ' → logprob: -0.3150506615638733
    2. 'break' (adapté à ' break') → logprob: -1.3150506019592285
    3. ' break' → logprob: -6.4400506019592285
    4. '                                                   ' → logprob: -9.315051078796387
    5. '                                                       ' → logprob: -10.315051078796387
    6. '
' → logprob: -10.565051078796387
    7. '                                                ' → logprob: -11.565051078796387
    8. '                                                               ' → logprob: -11.940051078796387
    9. '                       ' → logprob: -12.190051078796387
    10. '											' → logprob: -12.315051078796387

Token 1131: '
' (ID: 198)
  Prédit: '                                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                       ' → logprob: -0.3693651556968689
    2. '                                               ' → logprob: -1.3693652153015137
    3. '                                   ' → logprob: -3.6193652153015137
    4. '                                           ' → logprob: -4.369365215301514
    5. '```' → logprob: -4.494365215301514
    6. '
' → logprob: -6.369365215301514
    7. '                               ' → logprob: -7.119365215301514
    8. 'continue' → logprob: -7.994365215301514
    9. '               ' → logprob: -8.244364738464355
    10. '``' → logprob: -8.369364738464355

Token 1132: '                                       ' (ID: 4754)
  Prédit: '                                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                               ' → logprob: -0.4344658851623535
    2. '```' → logprob: -1.9344658851623535
    3. '                                       ' → logprob: -2.1844658851623535
    4. '                                           ' → logprob: -2.5594658851623535
    5. '                                   ' → logprob: -5.3094658851623535
    6. '``' → logprob: -5.3094658851623535
    7. '                               ' → logprob: -5.6844658851623535
    8. '
' → logprob: -6.5594658851623535
    9. ')' → logprob: -6.5594658851623535
    10. '                                                   ' → logprob: -7.8094658851623535

Token 1133: ' if' (ID: 538)
  Prédit: '                                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                       ' → logprob: -0.08271089196205139
    2. '                                   ' → logprob: -3.4577109813690186
    3. '                                           ' → logprob: -4.0827107429504395
    4. 'if' (adapté à ' if') → logprob: -4.2077107429504395
    5. '```' → logprob: -4.5827107429504395
    6. ' if' → logprob: -6.3327107429504395
    7. '                               ' → logprob: -6.4577107429504395
    8. ')' → logprob: -7.5827107429504395
    9. '                                               ' → logprob: -7.5827107429504395
    10. '``' → logprob: -8.457711219787598

Token 1134: ' ok' (ID: 4763)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.09018296003341675
    2. ' ok' → logprob: -2.8401830196380615
    3. 'not' → logprob: -4.215182781219482
    4. ' not' → logprob: -4.340182781219482
    5. 'okay' → logprob: -11.84018325805664
    6. '   ' → logprob: -12.59018325805664
    7. ' okay' → logprob: -13.09018325805664
    8. '(ok' → logprob: -14.21518325805664
    9. '	ok' → logprob: -14.59018325805664
    10. '    ' → logprob: -14.71518325805664

Token 1135: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.9507094621658325
    2. ':' → logprob: -1.0757094621658325
    3. '                                           ' → logprob: -1.3257094621658325
    4. '):
' → logprob: -5.325709342956543
    5. '=' → logprob: -7.450709342956543
    6. '                                       ' → logprob: -7.700709342956543
    7. ')' → logprob: -8.575709342956543
    8. ',' → logprob: -8.825709342956543
    9. '                                               ' → logprob: -8.825709342956543
    10. '                   ' → logprob: -9.200709342956543

Token 1136: '                                           ' (ID: 6322)
  Prédit: '                                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                           ' → logprob: -0.6433976292610168
    2. '                                       ' → logprob: -0.7683976292610168
    3. '```' → logprob: -5.018397808074951
    4. '                   ' → logprob: -6.393397808074951
    5. '                                   ' → logprob: -7.018397808074951
    6. '                                               ' → logprob: -7.643397808074951
    7. '                                        ' → logprob: -7.893397808074951
    8. '                               ' → logprob: -8.893397331237793
    9. '               ' → logprob: -9.518397331237793
    10. '``' → logprob: -9.893397331237793

Token 1137: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.5759623050689697
    2. 'y' (adapté à ' y') → logprob: -0.8259623050689697
    3. '                                           ' → logprob: -11.70096206665039
    4. ' ' → logprob: -12.70096206665039
    5. '                                       ' → logprob: -12.95096206665039
    6. '	y' → logprob: -13.20096206665039
    7. '                                   ' → logprob: -13.57596206665039
    8. '   ' → logprob: -13.57596206665039
    9. '                   ' → logprob: -14.07596206665039
    10. '```' → logprob: -14.32596206665039

Token 1138: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26356807351112366
    2. '=' → logprob: -1.5135680437088013
    3. 'bits' → logprob: -4.513567924499512
    4. '_bits' → logprob: -7.763567924499512
    5. 'b' → logprob: -9.638567924499512
    6. '   ' → logprob: -10.888567924499512
    7. ' bits' → logprob: -11.513567924499512
    8. '           ' → logprob: -11.763567924499512
    9. '     ' → logprob: -11.763567924499512
    10. ' ' → logprob: -11.888567924499512

Token 1139: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.002475777640938759
    2. ' b' → logprob: -6.002475738525391
    3. '[b' → logprob: -17.37747573852539
    4. '[' → logprob: -18.00247573852539
    5. '```' → logprob: -18.00247573852539
    6. ''b' → logprob: -18.25247573852539
    7. '   ' → logprob: -18.62747573852539
    8. '`' → logprob: -19.00247573852539
    9. '           ' → logprob: -19.25247573852539
    10. '	b' → logprob: -19.50247573852539

Token 1140: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010926496179308742
    2. '5' → logprob: -9.125109672546387
    3. '```' → logprob: -16.12510871887207
    4. ' [' → logprob: -16.37510871887207
    5. '[
' → logprob: -16.62510871887207
    6. '4' → logprob: -17.25010871887207
    7. ''[' → logprob: -18.00010871887207
    8. '<|end|>' → logprob: -18.25010871887207
    9. '(' → logprob: -18.37510871887207
    10. ' ' → logprob: -18.37510871887207

Token 1141: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -15.000000953674316
    3. '
' → logprob: -15.625000953674316
    4. ' ' → logprob: -16.875
    5. '```' → logprob: -16.875
    6. '(' → logprob: -18.0
    7. '   ' → logprob: -18.125
    8. '５' → logprob: -18.25
    9. ''' → logprob: -18.5
    10. '۵' → logprob: -18.625

Token 1142: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -7.612634362885728e-05
    2. '6' → logprob: -10.000076293945312
    3. '[' → logprob: -11.000076293945312
    4. '```' → logprob: -12.000076293945312
    5. '7' → logprob: -12.875076293945312
    6. '
' → logprob: -13.375076293945312
    7. ' :' → logprob: -13.500076293945312
    8. '   ' → logprob: -14.625076293945312
    9. ',' → logprob: -14.625076293945312
    10. '4' → logprob: -15.750076293945312

Token 1143: '8' (ID: 23)
  Prédit: '8'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '8' → logprob: -6.704273118884885e-07
    2. '7' → logprob: -14.250000953674316
    3. ' ' → logprob: -16.875
    4. '```' → logprob: -17.875
    5. '   ' → logprob: -18.5
    6. 'eight' → logprob: -19.375
    7. '۸' → logprob: -19.8125
    8. '``' → logprob: -19.875
    9. '８' → logprob: -19.9375
    10. '=' → logprob: -20.5625

Token 1144: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.018412483856081963
    2. ']' → logprob: -4.2684125900268555
    3. '                                           ' → logprob: -5.8934125900268555
    4. ']:
' → logprob: -7.0184125900268555
    5. '']
' → logprob: -8.018412590026855
    6. ']'
' → logprob: -9.768412590026855
    7. '                                       ' → logprob: -10.393412590026855
    8. ']>
' → logprob: -10.893412590026855
    9. '']' → logprob: -11.268412590026855
    10. '```' → logprob: -11.268412590026855

Token 1145: '                                           ' (ID: 6322)
  Prédit: '                                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                               ' → logprob: -0.35062962770462036
    2. '                                           ' → logprob: -1.4756295680999756
    3. '```' → logprob: -2.8506295680999756
    4. ' if' → logprob: -6.100629806518555
    5. 'if' → logprob: -6.350629806518555
    6. '``' → logprob: -6.725629806518555
    7. '                                       ' → logprob: -6.975629806518555
    8. '                               ' → logprob: -7.225629806518555
    9. '                                              ' → logprob: -7.225629806518555
    10. '                       ' → logprob: -7.600629806518555

Token 1146: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.24729125201702118
    2. '                                           ' → logprob: -1.9972912073135376
    3. ' if' → logprob: -2.747291326522827
    4. '                                               ' → logprob: -3.997291326522827
    5. '```' → logprob: -7.122291088104248
    6. '                                       ' → logprob: -10.747291564941406
    7. '``' → logprob: -10.997291564941406
    8. '                                            ' → logprob: -11.372291564941406
    9. '   ' → logprob: -11.497291564941406
    10. '                       ' → logprob: -11.747291564941406

Token 1147: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0036086246836930513
    2. ' '' → logprob: -5.628608703613281
    3. '
' → logprob: -13.003608703613281
    4. '1' → logprob: -13.378608703613281
    5. '('' → logprob: -13.503608703613281
    6. ' ' → logprob: -14.003608703613281
    7. '"' → logprob: -14.878608703613281
    8. '`' → logprob: -15.128608703613281
    9. '           ' → logprob: -15.128608703613281
    10. '                   ' → logprob: -15.753608703613281

Token 1148: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0032049233559519053
    2. '1' → logprob: -5.753204822540283
    3. '
' → logprob: -11.253205299377441
    4. ' '' → logprob: -12.003205299377441
    5. '('' → logprob: -12.503205299377441
    6. '"' → logprob: -13.503205299377441
    7. 'any' → logprob: -14.878205299377441
    8. '`' → logprob: -15.003205299377441
    9. 'one' → logprob: -15.003205299377441
    10. ''y' → logprob: -15.128205299377441

Token 1149: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.3078460693359375
    2. ' in' → logprob: -1.5578460693359375
    3. 'in' → logprob: -3.3078460693359375
    4. ''in' → logprob: -4.3078460693359375
    5. ']' → logprob: -5.6828460693359375
    6. '']' → logprob: -7.1828460693359375
    7. 'In' → logprob: -10.057846069335938
    8. '<|end|>' → logprob: -10.182846069335938
    9. ']'' → logprob: -10.807846069335938
    10. '')' → logprob: -11.307846069335938

Token 1150: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012521306052803993
    2. 'in' → logprob: -4.387521266937256
    3. '                                           ' → logprob: -12.762521743774414
    4. ')' → logprob: -13.262521743774414
    5. 'In' → logprob: -13.387521743774414
    6. ''in' → logprob: -13.887521743774414
    7. '                                       ' → logprob: -14.137521743774414
    8. ']' → logprob: -14.262521743774414
    9. ' ' → logprob: -14.387521743774414
    10. '`' → logprob: -14.387521743774414

Token 1151: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07889066636562347
    2. ' y' → logprob: -2.578890562057495
    3. 'b' → logprob: -14.953890800476074
    4. '[y' → logprob: -15.328890800476074
    5. '(y' → logprob: -16.078889846801758
    6. ''y' → logprob: -16.953889846801758
    7. '`' → logprob: -16.953889846801758
    8. '	y' → logprob: -17.078889846801758
    9. '   ' → logprob: -17.203889846801758
    10. '‘y' → logprob: -17.453889846801758

Token 1152: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.11168710142374039
    2. ':' → logprob: -2.486687183380127
    3. '):
' → logprob: -3.986687183380127
    4. '                                               ' → logprob: -6.611687183380127
    5. '):' → logprob: -6.736687183380127
    6. '                                           ' → logprob: -6.861687183380127
    7. ')' → logprob: -9.236686706542969
    8. '                                       ' → logprob: -9.611686706542969
    9. ' :
' → logprob: -10.611686706542969
    10. '                               ' → logprob: -10.861686706542969

Token 1153: '                                               ' (ID: 8793)
  Prédit: '                                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                               ' → logprob: -0.004647284280508757
    2. '                                           ' → logprob: -5.629647254943848
    3. '                                              ' → logprob: -7.879647254943848
    4. '```' → logprob: -7.879647254943848
    5. '                       ' → logprob: -9.129647254943848
    6. '                                                ' → logprob: -10.254647254943848
    7. '                                                   ' → logprob: -10.504647254943848
    8. '                               ' → logprob: -10.629647254943848
    9. '                                       ' → logprob: -10.754647254943848
    10. '                                            ' → logprob: -11.129647254943848

Token 1154: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.04863879829645157
    2. ' count' → logprob: -3.0486388206481934
    3. '                                               ' → logprob: -9.923638343811035
    4. '                                           ' → logprob: -13.298638343811035
    5. '
' → logprob: -14.673638343811035
    6. ' ' → logprob: -16.79863929748535
    7. '   ' → logprob: -17.04863929748535
    8. '                                            ' → logprob: -17.42363929748535
    9. '                                              ' → logprob: -17.79863929748535
    10. '.count' → logprob: -17.79863929748535

Token 1155: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.2521609961986542
    2. '+=' → logprob: -1.5021610260009766
    3. '+' → logprob: -9.752161026000977
    4. '                                           ' → logprob: -10.252161026000977
    5. '<|end|>' → logprob: -10.752161026000977
    6. '                                   ' → logprob: -11.377161026000977
    7. ']+=' → logprob: -11.377161026000977
    8. '```' → logprob: -11.377161026000977
    9. ' ' → logprob: -12.002161026000977
    10. '                                       ' → logprob: -12.127161026000977

Token 1156: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.12692862749099731
    2. ' ' → logprob: -2.1269285678863525
    3. '                                           ' → logprob: -16.751928329467773
    4. '                               ' → logprob: -16.876928329467773
    5. '                                       ' → logprob: -17.001928329467773
    6. '   ' → logprob: -17.126928329467773
    7. '
' → logprob: -17.251928329467773
    8. '0' → logprob: -17.251928329467773
    9. '```' → logprob: -17.251928329467773
    10. '                       ' → logprob: -17.501928329467773

Token 1157: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. 'count' → logprob: -15.375006675720215
    4. '
' → logprob: -18.8750057220459
    5. '```' → logprob: -19.2500057220459
    6. '   ' → logprob: -19.7500057220459
    7. '                   ' → logprob: -20.3750057220459
    8. '                       ' → logprob: -20.5000057220459
    9. ' count' → logprob: -20.6250057220459
    10. '               ' → logprob: -21.0000057220459

Token 1158: '
' (ID: 198)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -1.4169501066207886
    2. '                                           ' → logprob: -1.4169501066207886
    3. '                                   ' → logprob: -1.9169501066207886
    4. '
' → logprob: -2.416950225830078
    5. '                                       ' → logprob: -2.791950225830078
    6. '```' → logprob: -2.916950225830078
    7. '                                               ' → logprob: -3.041950225830078
    8. '           ' → logprob: -3.166950225830078
    9. '               ' → logprob: -3.666950225830078
    10. '<|end|>' → logprob: -4.166950225830078

Token 1159: '                                   ' (ID: 3523)
  Prédit: '                                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                   ' → logprob: -0.6815641522407532
    2. '                               ' → logprob: -1.4315640926361084
    3. '                                       ' → logprob: -1.6815640926361084
    4. '                                           ' → logprob: -3.3065640926361084
    5. '```' → logprob: -3.6815640926361084
    6. '           ' → logprob: -6.5565643310546875
    7. '                                               ' → logprob: -6.5565643310546875
    8. '               ' → logprob: -6.5565643310546875
    9. '
' → logprob: -7.0565643310546875
    10. '                           ' → logprob: -7.1815643310546875

Token 1160: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.0991445779800415
    2. '                                       ' → logprob: -1.4741445779800415
    3. '                                   ' → logprob: -1.8491445779800415
    4. '                                           ' → logprob: -2.474144458770752
    5. ' if' → logprob: -2.599144458770752
    6. '```' → logprob: -2.724144458770752
    7. '                               ' → logprob: -3.224144458770752
    8. '
' → logprob: -5.224144458770752
    9. '                   ' → logprob: -5.974144458770752
    10. '               ' → logprob: -6.099144458770752

Token 1161: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.005233763717114925
    2. ' count' → logprob: -5.2552337646484375
    3. '(count' → logprob: -16.755233764648438
    4. '   ' → logprob: -18.755233764648438
    5. '```' → logprob: -19.380233764648438
    6. ' ' → logprob: -19.505233764648438
    7. '	count' → logprob: -19.755233764648438
    8. '.count' → logprob: -20.130233764648438
    9. '_count' → logprob: -20.505233764648438
    10. '``' → logprob: -20.505233764648438

Token 1162: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.6931560039520264
    2. ' >' → logprob: -0.6931560039520264
    3. ')' → logprob: -12.693156242370605
    4. '>
' → logprob: -13.818156242370605
    5. ')>' → logprob: -13.818156242370605
    6. ' >
' → logprob: -14.443156242370605
    7. '   ' → logprob: -14.693156242370605
    8. '```' → logprob: -14.943156242370605
    9. ' +=' → logprob: -15.068156242370605
    10. '<|end|>' → logprob: -15.193156242370605

Token 1163: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005234121344983578
    2. ' ' → logprob: -5.255234241485596
    3. '<|end|>' → logprob: -15.755233764648438
    4. '   ' → logprob: -17.380233764648438
    5. '۰' → logprob: -17.505233764648438
    6. '=' → logprob: -18.380233764648438
    7. '```' → logprob: -18.505233764648438
    8. '  ' → logprob: -18.630233764648438
    9. '
' → logprob: -19.255233764648438
    10. '>' → logprob: -19.255233764648438

Token 1164: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.306760805164231e-05
    2. ' ' → logprob: -11.25001335144043
    3. '>' → logprob: -17.62501335144043
    4. '   ' → logprob: -18.37501335144043
    5. '```' → logprob: -19.12501335144043
    6. '
' → logprob: -19.37501335144043
    7. '=' → logprob: -19.37501335144043
    8. '۰' → logprob: -19.62501335144043
    9. ' ' → logprob: -21.12501335144043
    10. '  ' → logprob: -21.25001335144043

Token 1165: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4213792681694031
    2. '                                       ' → logprob: -1.1713793277740479
    3. ':' → logprob: -4.421379089355469
    4. '               ' → logprob: -4.796379089355469
    5. '                                           ' → logprob: -4.921379089355469
    6. '                       ' → logprob: -6.046379089355469
    7. '                                   ' → logprob: -6.546379089355469
    8. '):
' → logprob: -7.296379089355469
    9. '                               ' → logprob: -7.296379089355469
    10. '                                               ' → logprob: -8.046379089355469

Token 1166: '                                       ' (ID: 4754)
  Prédit: '                                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                       ' → logprob: -0.002057950245216489
    2. '                       ' → logprob: -7.252058029174805
    3. '                                           ' → logprob: -7.627058029174805
    4. '               ' → logprob: -7.877058029174805
    5. '                               ' → logprob: -8.252058029174805
    6. '                                   ' → logprob: -9.377058029174805
    7. '                   ' → logprob: -9.752058029174805
    8. '       ' → logprob: -10.502058029174805
    9. 'res' → logprob: -10.627058029174805
    10. '                                               ' → logprob: -11.752058029174805

Token 1167: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.005382810719311237
    2. ' res' → logprob: -5.255383014678955
    3. '                                       ' → logprob: -9.005382537841797
    4. '                                           ' → logprob: -11.755382537841797
    5. '                               ' → logprob: -11.880382537841797
    6. '                                   ' → logprob: -12.255382537841797
    7. '   ' → logprob: -12.630382537841797
    8. ' ' → logprob: -13.505382537841797
    9. '       ' → logprob: -15.005382537841797
    10. '               ' → logprob: -15.005382537841797

Token 1168: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00018816311785485595
    2. '.' → logprob: -8.625187873840332
    3. '                                   ' → logprob: -13.250187873840332
    4. '                                       ' → logprob: -13.250187873840332
    5. '.app' → logprob: -13.875187873840332
    6. ' .' → logprob: -13.875187873840332
    7. '                                           ' → logprob: -14.250187873840332
    8. '.extend' → logprob: -14.625187873840332
    9. '.py' → logprob: -15.125187873840332
    10. '.setdefault' → logprob: -15.250187873840332

Token 1169: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0002226093056378886
    2. '(' → logprob: -9.000222206115723
    3. '(
' → logprob: -9.250222206115723
    4. '```' → logprob: -14.000222206115723
    5. '(((' → logprob: -14.125222206115723
    6. ' ((' → logprob: -14.375222206115723
    7. '>((' → logprob: -15.750222206115723
    8. ')((' → logprob: -15.750222206115723
    9. '           ' → logprob: -16.00022315979004
    10. ',' → logprob: -16.50022315979004

Token 1170: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.10023707896471024
    2. '(length' → logprob: -2.3502371311187744
    3. '[length' → logprob: -10.975236892700195
    4. '4' → logprob: -11.600236892700195
    5. ',length' → logprob: -12.850236892700195
    6. ' length' → logprob: -13.600236892700195
    7. ':length' → logprob: -16.475236892700195
    8. '(' → logprob: -16.850236892700195
    9. 'leng' → logprob: -16.975236892700195
    10. '	length' → logprob: -16.975236892700195

Token 1171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3425219549390022e-05
    2. ',count' → logprob: -11.37501335144043
    3. ',
' → logprob: -13.75001335144043
    4. '```' → logprob: -15.37501335144043
    5. ' ,' → logprob: -15.75001335144043
    6. '),' → logprob: -15.87501335144043
    7. '[count' → logprob: -16.87501335144043
    8. '(count' → logprob: -17.00001335144043
    9. ',c' → logprob: -17.25001335144043
    10. '،' → logprob: -17.25001335144043

Token 1172: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.10026156902313232
    2. ' count' → logprob: -2.350261688232422
    3. '(count' → logprob: -9.850261688232422
    4. '[count' → logprob: -14.600261688232422
    5. ' (' → logprob: -14.850261688232422
    6. ',count' → logprob: -14.850261688232422
    7. ',' → logprob: -15.350261688232422
    8. ' ' → logprob: -15.475261688232422
    9. '	count' → logprob: -15.725261688232422
    10. '$count' → logprob: -16.225261688232422

Token 1173: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.25358617305755615
    2. '))
' → logprob: -2.0035862922668457
    3. ')' → logprob: -2.5035862922668457
    4. ')
' → logprob: -5.003586292266846
    5. ')))' → logprob: -8.753585815429688
    6. '                                   ' → logprob: -8.878585815429688
    7. '                                       ' → logprob: -9.378585815429688
    8. '               ' → logprob: -9.503585815429688
    9. ')))
' → logprob: -10.253585815429688
    10. '           ' → logprob: -10.378585815429688

Token 1174: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.04162704199552536
    2. '```' → logprob: -3.2916269302368164
    3. '       ' → logprob: -6.416626930236816
    4. '                           ' → logprob: -7.166626930236816
    5. '                                   ' → logprob: -7.541626930236816
    6. '							' → logprob: -8.416626930236816
    7. 'else' → logprob: -9.416626930236816
    8. '           ' → logprob: -9.541626930236816
    9. '               ' → logprob: -9.541626930236816
    10. '                                       ' → logprob: -9.791626930236816

Token 1175: ' else' (ID: 1203)
  Prédit: '                               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.16449910402297974
    2. 'else' (adapté à ' else') → logprob: -1.914499044418335
    3. '               ' → logprob: -5.539499282836914
    4. ' else' → logprob: -9.039499282836914
    5. '                           ' → logprob: -9.539499282836914
    6. '```' → logprob: -10.164499282836914
    7. '                   ' → logprob: -10.414499282836914
    8. '                                   ' → logprob: -10.539499282836914
    9. '                       ' → logprob: -11.039499282836914
    10. '                                       ' → logprob: -11.414499282836914

Token 1176: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.45419445633888245
    2. ':
' → logprob: -1.20419442653656
    3. '                               ' → logprob: -3.2041945457458496
    4. '                                   ' → logprob: -3.9541945457458496
    5. 'if' → logprob: -5.70419454574585
    6. '```' → logprob: -7.32919454574585
    7. ' if' → logprob: -8.329194068908691
    8. '                           ' → logprob: -8.704194068908691
    9. '                                           ' → logprob: -8.829194068908691
    10. '{
' → logprob: -8.829194068908691

Token 1177: '                                   ' (ID: 3523)
  Prédit: '                                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                   ' → logprob: -0.1323704719543457
    2. '                               ' → logprob: -2.3823704719543457
    3. '                                       ' → logprob: -4.007370471954346
    4. 'if' → logprob: -4.757370471954346
    5. '                   ' → logprob: -6.507370471954346
    6. '                                           ' → logprob: -6.632370471954346
    7. '```' → logprob: -6.882370471954346
    8. '           ' → logprob: -7.632370471954346
    9. '               ' → logprob: -8.382369995117188
    10. '                           ' → logprob: -8.882369995117188

Token 1178: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00016194197814911604
    2. ' if' → logprob: -8.750162124633789
    3. '                                   ' → logprob: -12.875162124633789
    4. '                                       ' → logprob: -14.625162124633789
    5. '                               ' → logprob: -16.00016212463379
    6. '
' → logprob: -16.50016212463379
    7. '```' → logprob: -16.62516212463379
    8. '                                           ' → logprob: -17.25016212463379
    9. '           ' → logprob: -17.37516212463379
    10. '   ' → logprob: -17.75016212463379

Token 1179: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002210085280239582
    2. ' '' → logprob: -6.1272101402282715
    3. '('' → logprob: -11.127209663391113
    4. '
' → logprob: -12.752209663391113
    5. 'any' → logprob: -13.377209663391113
    6. '           ' → logprob: -13.752209663391113
    7. ' ' → logprob: -13.877209663391113
    8. '   ' → logprob: -14.502209663391113
    9. '       ' → logprob: -15.002209663391113
    10. '"' → logprob: -15.127209663391113

Token 1180: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.006729934364557266
    2. '1' → logprob: -5.006730079650879
    3. 'any' → logprob: -12.506730079650879
    4. '
' → logprob: -12.631730079650879
    5. '"' → logprob: -13.006730079650879
    6. '('' → logprob: -13.131730079650879
    7. ' '' → logprob: -13.381730079650879
    8. '`' → logprob: -15.006730079650879
    9. ''any' → logprob: -15.131730079650879
    10. 'x' → logprob: -15.881730079650879

Token 1181: ''' (ID: 6)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10177645832300186
    2. 'in' → logprob: -2.351776361465454
    3. ''' → logprob: -6.976776599884033
    4. ''in' → logprob: -7.476776599884033
    5. ')' → logprob: -10.226776123046875
    6. '`' → logprob: -11.726776123046875
    7. 'In' → logprob: -12.226776123046875
    8. '                                   ' → logprob: -13.226776123046875
    9. '```' → logprob: -13.226776123046875
    10. ' not' → logprob: -13.351776123046875

Token 1182: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5759656429290771
    2. ' in' → logprob: -0.8259656429290771
    3. ')' → logprob: -11.450965881347656
    4. 'not' → logprob: -12.450965881347656
    5. ' not' → logprob: -12.825965881347656
    6. ''in' → logprob: -13.200965881347656
    7. '`' → logprob: -13.700965881347656
    8. '```' → logprob: -14.075965881347656
    9. '
' → logprob: -14.200965881347656
    10. '==' → logprob: -14.575965881347656

Token 1183: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0024756586644798517
    2. ' y' → logprob: -6.002475738525391
    3. ' ' → logprob: -19.12747573852539
    4. '[y' → logprob: -19.37747573852539
    5. '(y' → logprob: -19.50247573852539
    6. '   ' → logprob: -19.87747573852539
    7. ''y' → logprob: -20.00247573852539
    8. '‘y' → logprob: -20.62747573852539
    9. '	y' → logprob: -21.00247573852539
    10. '           ' → logprob: -21.37747573852539

Token 1184: 'bits' (ID: 24043)
  Prédit: 'bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.03891661390662193
    2. 'y' → logprob: -3.28891658782959
    3. ')' → logprob: -7.66391658782959
    4. 'x' → logprob: -9.41391658782959
    5. 'v' → logprob: -9.53891658782959
    6. '[' → logprob: -9.91391658782959
    7. '['' → logprob: -10.28891658782959
    8. ' bits' → logprob: -10.41391658782959
    9. 'w' → logprob: -10.53891658782959
    10. '(bits' → logprob: -10.66391658782959

Token 1185: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.23139819502830505
    2. ':' → logprob: -1.6063982248306274
    3. '                                       ' → logprob: -5.481398105621338
    4. '):
' → logprob: -6.481398105621338
    5. '                                   ' → logprob: -9.106398582458496
    6. ':

' → logprob: -10.356398582458496
    7. '):' → logprob: -10.356398582458496
    8. '                               ' → logprob: -10.606398582458496
    9. '```' → logprob: -11.106398582458496
    10. '               ' → logprob: -11.606398582458496

Token 1186: '                                       ' (ID: 4754)
  Prédit: '                                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                       ' → logprob: -0.07247823476791382
    2. ':
' → logprob: -3.8224782943725586
    3. '```' → logprob: -3.8224782943725586
    4. 'count' → logprob: -3.9474782943725586
    5. '                                   ' → logprob: -6.197478294372559
    6. '                                           ' → logprob: -6.572478294372559
    7. '                       ' → logprob: -6.947478294372559
    8. ':' → logprob: -7.447478294372559
    9. '               ' → logprob: -7.697478294372559
    10. ' count' → logprob: -7.947478294372559

Token 1187: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.00022165567497722805
    2. ' count' → logprob: -8.500221252441406
    3. '                                       ' → logprob: -11.250221252441406
    4. '```' → logprob: -13.000221252441406
    5. '
' → logprob: -13.750221252441406
    6. '                                           ' → logprob: -14.375221252441406
    7. 'counts' → logprob: -14.750221252441406
    8. '``' → logprob: -15.250221252441406
    9. '                                   ' → logprob: -15.375221252441406
    10. 'cnt' → logprob: -15.875221252441406

Token 1188: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47426798939704895
    2. ' =' → logprob: -0.9742679595947266
    3. '=count' → logprob: -8.599267959594727
    4. '                                       ' → logprob: -13.349267959594727
    5. '                                   ' → logprob: -13.474267959594727
    6. '```' → logprob: -13.849267959594727
    7. '                   ' → logprob: -14.724267959594727
    8. '                                           ' → logprob: -14.974267959594727
    9. '                       ' → logprob: -15.099267959594727
    10. '               ' → logprob: -15.349267959594727

Token 1189: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.006715370807796717
    2. ' count' → logprob: -5.006715297698975
    3. '(count' → logprob: -16.881715774536133
    4. '                                       ' → logprob: -17.881715774536133
    5. '	count' → logprob: -17.881715774536133
    6. '                   ' → logprob: -18.131715774536133
    7. '                                   ' → logprob: -18.631715774536133
    8. '                       ' → logprob: -18.881715774536133
    9. '   ' → logprob: -19.506715774536133
    10. '[count' → logprob: -19.506715774536133

Token 1190: '_pos' (ID: 14692)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.00021998681768309325
    2. ' count' → logprob: -8.50022029876709
    3. '(count' → logprob: -11.50022029876709
    4. '_count' → logprob: -12.25022029876709
    5. '=count' → logprob: -14.12522029876709
    6. '[count' → logprob: -15.62522029876709
    7. '.count' → logprob: -15.87522029876709
    8. 'return' → logprob: -16.250219345092773
    9. '
' → logprob: -16.250219345092773
    10. '>' → logprob: -16.250219345092773

Token 1191: 's' (ID: 82)
  Prédit: 's'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.008628287352621555
    2. 'ibilities' → logprob: -4.7586283683776855
    3. 'abilities' → logprob: -11.883627891540527
    4. 'ss' → logprob: -13.383627891540527
    5. 'ilities' → logprob: -13.383627891540527
    6. 'sib' → logprob: -14.008627891540527
    7. 'poss' → logprob: -14.258627891540527
    8. 'count' → logprob: -14.383627891540527
    9. '_s' → logprob: -14.633627891540527
    10. '_count' → logprob: -15.133627891540527

Token 1192: 'ibilities' (ID: 25632)
  Prédit: 'ibilities'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ibilities' → logprob: -0.001081279362551868
    2. 's' → logprob: -6.876081466674805
    3. 'ilities' → logprob: -10.251081466674805
    4. 'b' → logprob: -12.501081466674805
    5. 'ibil' → logprob: -12.876081466674805
    6. '
' → logprob: -13.376081466674805
    7. 'ib' → logprob: -13.876081466674805
    8. 'IBIL' → logprob: -14.251081466674805
    9. 'es' → logprob: -14.376081466674805
    10. '_' → logprob: -14.626081466674805

Token 1193: '(byte' (ID: 36692)
  Prédit: '(byte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(byte' → logprob: -6.034592388459714e-06
    2. 'byte' → logprob: -12.125005722045898
    3. '(
' → logprob: -15.500005722045898
    4. '```' → logprob: -15.500005722045898
    5. '(' → logprob: -16.2500057220459
    6. ' byte' → logprob: -17.8750057220459
    7. '.byte' → logprob: -18.0000057220459
    8. '<byte' → logprob: -18.1250057220459
    9. '`' → logprob: -19.3750057220459
    10. '(Byte' → logprob: -19.5000057220459

Token 1194: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0020483131520450115
    2. '(byte' → logprob: -6.252048492431641
    3. 'byte' → logprob: -9.12704849243164
    4. '_byte' → logprob: -12.25204849243164
    5. 'str' → logprob: -12.50204849243164
    6. 'Str' → logprob: -13.37704849243164
    7. '```' → logprob: -14.62704849243164
    8. '_string' → logprob: -15.12704849243164
    9. 'string' → logprob: -16.37704849243164
    10. ' byte' → logprob: -16.75204849243164

Token 1195: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.40204575657844543
    2. ')
' → logprob: -1.652045726776123
    3. '(byte' → logprob: -2.277045726776123
    4. '                                       ' → logprob: -3.527045726776123
    5. '                                           ' → logprob: -5.902045726776123
    6. 'byte' → logprob: -6.527045726776123
    7. ',' → logprob: -7.402045726776123
    8. ')(
' → logprob: -7.777045726776123
    9. '):
' → logprob: -8.027046203613281
    10. '.byte' → logprob: -8.777046203613281

Token 1196: '                                       ' (ID: 4754)
  Prédit: '                                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                       ' → logprob: -0.11281068623065948
    2. '                                           ' → logprob: -2.3628106117248535
    3. '```' → logprob: -5.9878106117248535
    4. '                                               ' → logprob: -6.1128106117248535
    5. '                                        ' → logprob: -6.3628106117248535
    6. '                                        
' → logprob: -6.3628106117248535
    7. '                       ' → logprob: -7.2378106117248535
    8. ':
' → logprob: -7.4878106117248535
    9. '
' → logprob: -7.6128106117248535
    10. '                   ' → logprob: -7.9878106117248535

Token 1197: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.13440389931201935
    2. 'if' (adapté à ' if') → logprob: -2.134403944015503
    3. '                                       ' → logprob: -5.009403705596924
    4. '                                           ' → logprob: -7.384403705596924
    5. '               ' → logprob: -10.509404182434082
    6. '                                        ' → logprob: -10.509404182434082
    7. '
' → logprob: -10.759404182434082
    8. '```' → logprob: -10.884404182434082
    9. '                                               ' → logprob: -11.384404182434082
    10. '                   ' → logprob: -11.634404182434082

Token 1198: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.014163628220558167
    2. ' count' → logprob: -4.264163494110107
    3. '(count' → logprob: -16.389163970947266
    4. '                                       ' → logprob: -19.014163970947266
    5. '	count' → logprob: -19.389163970947266
    6. ' ' → logprob: -19.889163970947266
    7. '   ' → logprob: -19.889163970947266
    8. '                                           ' → logprob: -20.014163970947266
    9. '[count' → logprob: -20.139163970947266
    10. '.count' → logprob: -20.514163970947266

Token 1199: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.048599522560834885
    2. '>' → logprob: -3.0485994815826416
    3. ')>' → logprob: -12.298599243164062
    4. ' >
' → logprob: -13.048599243164062
    5. ')' → logprob: -13.423599243164062
    6. '()>' → logprob: -13.548599243164062
    7. '>
' → logprob: -14.548599243164062
    8. '                                       ' → logprob: -14.923599243164062
    9. '                                   ' → logprob: -14.923599243164062
    10. ' ' → logprob: -15.048599243164062

Token 1200: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.011048882268369198
    2. ' ' → logprob: -4.511048793792725
    3. '>' → logprob: -14.261049270629883
    4. '=' → logprob: -15.636049270629883
    5. '   ' → logprob: -16.136049270629883
    6. '```' → logprob: -16.636049270629883
    7. '  ' → logprob: -18.011049270629883
    8. '
' → logprob: -18.136049270629883
    9. '           ' → logprob: -18.386049270629883
    10. '       ' → logprob: -18.636049270629883

Token 1201: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015920029545668513
    2. ' ' → logprob: -8.75015926361084
    3. '=' → logprob: -15.37515926361084
    4. '```' → logprob: -15.50015926361084
    5. '   ' → logprob: -15.62515926361084
    6. '>' → logprob: -16.625158309936523
    7. '  ' → logprob: -17.875158309936523
    8. '``' → logprob: -18.250158309936523
    9. '۰' → logprob: -18.500158309936523
    10. '           ' → logprob: -18.750158309936523

Token 1202: ':
' (ID: 734)
  Prédit: '                                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                           ' → logprob: -0.23116226494312286
    2. ':
' → logprob: -1.6061623096466064
    3. ':' → logprob: -5.231162071228027
    4. '):
' → logprob: -8.481162071228027
    5. '                   ' → logprob: -9.356162071228027
    6. '                                          ' → logprob: -10.856162071228027
    7. '                           ' → logprob: -11.356162071228027
    8. '                                       ' → logprob: -11.481162071228027
    9. '                                               ' → logprob: -11.731162071228027
    10. '```' → logprob: -11.856162071228027

Token 1203: '                                           ' (ID: 6322)
  Prédit: '                                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                           ' → logprob: -0.0001146291324403137
    2. '       ' → logprob: -9.875114440917969
    3. 'res' → logprob: -10.625114440917969
    4. '                   ' → logprob: -11.000114440917969
    5. '                                               ' → logprob: -11.625114440917969
    6. '           ' → logprob: -12.500114440917969
    7. '   ' → logprob: -12.750114440917969
    8. '                                       ' → logprob: -13.375114440917969
    9. '                                          ' → logprob: -13.500114440917969
    10. '```' → logprob: -13.875114440917969

Token 1204: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.00031580092036165297
    2. ' res' → logprob: -8.75031566619873
    3. '                                               ' → logprob: -9.00031566619873
    4. '                                           ' → logprob: -10.37531566619873
    5. '```' → logprob: -13.62531566619873
    6. '                                       ' → logprob: -14.87531566619873
    7. '       ' → logprob: -15.12531566619873
    8. '
' → logprob: -15.62531566619873
    9. '   ' → logprob: -15.75031566619873
    10. '	res' → logprob: -15.87531566619873

Token 1205: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.3856492842023727e-06
    2. 'append' → logprob: -13.750000953674316
    3. '                                           ' → logprob: -16.125001907348633
    4. '.extend' → logprob: -16.250001907348633
    5. '.' → logprob: -16.750001907348633
    6. '_append' → logprob: -17.125001907348633
    7. '                                               ' → logprob: -17.500001907348633
    8. '.Append' → logprob: -18.125001907348633
    9. '           ' → logprob: -19.625001907348633
    10. '       ' → logprob: -19.625001907348633

Token 1206: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -6.885492621222511e-05
    2. '(
' → logprob: -10.250068664550781
    3. '(' → logprob: -10.375068664550781
    4. '           ' → logprob: -14.625068664550781
    5. '   ' → logprob: -14.625068664550781
    6. '               ' → logprob: -15.500068664550781
    7. '```' → logprob: -15.500068664550781
    8. '       ' → logprob: -15.625068664550781
    9. ')((' → logprob: -15.750068664550781
    10. ' ((' → logprob: -15.750068664550781

Token 1207: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -2.7848862373502925e-05
    2. '(length' → logprob: -10.500027656555176
    3. ' length' → logprob: -16.125028610229492
    4. '[length' → logprob: -16.500028610229492
    5. ',length' → logprob: -18.125028610229492
    6. '4' → logprob: -19.375028610229492
    7. 'leng' → logprob: -21.000028610229492
    8. '	length' → logprob: -21.125028610229492
    9. '   ' → logprob: -21.375028610229492
    10. ':length' → logprob: -21.875028610229492

Token 1208: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00027933192905038595
    2. ',length' → logprob: -8.250279426574707
    3. ',
' → logprob: -12.750279426574707
    4. ',(' → logprob: -12.875279426574707
    5. ',len' → logprob: -13.000279426574707
    6. '(length' → logprob: -13.125279426574707
    7. ',line' → logprob: -13.375279426574707
    8. ',n' → logprob: -13.625279426574707
    9. ' ,' → logprob: -14.125279426574707
    10. ',l' → logprob: -14.250279426574707

Token 1209: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0498679094016552
    2. ' count' → logprob: -3.049867868423462
    3. '(count' → logprob: -7.299868106842041
    4. '4' → logprob: -7.549868106842041
    5. '(' → logprob: -9.674867630004883
    6. ' (' → logprob: -11.674867630004883
    7. ' ' → logprob: -13.049867630004883
    8. '   ' → logprob: -13.924867630004883
    9. '[count' → logprob: -13.924867630004883
    10. 'length' → logprob: -14.424867630004883

Token 1210: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2359764277935028
    2. '):
' → logprob: -1.6109764575958252
    3. ')
' → logprob: -5.235976219177246
    4. '):' → logprob: -5.610976219177246
    5. '))' → logprob: -7.610976219177246
    6. '                                           ' → logprob: -7.610976219177246
    7. ')):
' → logprob: -8.610976219177246
    8. '                                               ' → logprob: -9.235976219177246
    9. '           ' → logprob: -10.235976219177246
    10. ')))' → logprob: -10.610976219177246

Token 1211: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0007281593861989677
    2. 'return' → logprob: -8.000728607177734
    3. '	return' → logprob: -8.125728607177734
    4. '<|end|>' → logprob: -10.125728607177734
    5. ' return' → logprob: -10.625728607177734
    6. '```' → logprob: -11.500728607177734
    7. ':return' → logprob: -11.500728607177734
    8. '       ' → logprob: -12.625728607177734
    9. ')return' → logprob: -12.875728607177734
    10. '                           ' → logprob: -13.625728607177734

Token 1212: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015373582718893886
    2. '
' → logprob: -7.376537322998047
    3. 'return' (adapté à ' return') → logprob: -8.126537322998047
    4. '```' → logprob: -8.126537322998047
    5. '	return' → logprob: -8.376537322998047
    6. ' return' → logprob: -9.626537322998047
    7. '    
' → logprob: -12.001537322998047
    8. '       ' → logprob: -12.251537322998047
    9. '<|end|>' → logprob: -12.376537322998047
    10. ':return' → logprob: -13.001537322998047

Token 1213: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.0015023599844425917
    2. ' res' → logprob: -6.501502513885498
    3. '[]' → logprob: -19.001502990722656
    4. '(res' → logprob: -19.376502990722656
    5. 'sorted' → logprob: -19.376502990722656
    6. '```' → logprob: -19.751502990722656
    7. '[' → logprob: -19.876502990722656
    8. '   ' → logprob: -20.376502990722656
    9. '[(' → logprob: -20.626502990722656
    10. 'list' → logprob: -21.001502990722656

Token 1214: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1215: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1216: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.1410421133041382
    2. ' valid' → logprob: -1.7660421133041382
    3. ' count' → logprob: -1.8910421133041382
    4. ' main' → logprob: -2.1410422325134277
    5. 'valid' → logprob: -2.5160422325134277
    6. 'main' → logprob: -3.6410422325134277
    7. ' is' → logprob: -3.7660422325134277
    8. 'is' → logprob: -3.7660422325134277
    9. ' find' → logprob: -4.391042232513428
    10. 'decode' → logprob: -4.391042232513428

Token 1217: '_follow' (ID: 110088)
  Prédit: '_valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_valid' → logprob: -0.001344042830169201
    2. '_possible' → logprob: -7.751344203948975
    3. '_bytes' → logprob: -7.876344203948975
    4. '_pos' → logprob: -8.376343727111816
    5. '_' → logprob: -8.501343727111816
    6. '_pattern' → logprob: -10.876343727111816
    7. '_remaining' → logprob: -10.876343727111816
    8. '_invalid' → logprob: -11.501343727111816
    9. '_total' → logprob: -11.751343727111816
    10. '_mult' → logprob: -11.876343727111816

Token 1218: 'ing' (ID: 289)
  Prédit: '_bytes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bytes' → logprob: -0.4211679697036743
    2. 'ing' → logprob: -2.2961678504943848
    3. '_up' → logprob: -2.5461678504943848
    4. '_byte' → logprob: -2.9211678504943848
    5. 'ers' → logprob: -3.4211678504943848
    6. 'up' → logprob: -3.4211678504943848
    7. '_' → logprob: -3.4211678504943848
    8. 'er' → logprob: -4.546167850494385
    9. 'on' → logprob: -7.921167850494385
    10. 's' → logprob: -8.546168327331543

Token 1219: '_byte' (ID: 48405)
  Prédit: '_bytes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bytes' → logprob: -0.0020499820820987225
    2. '_byte' → logprob: -7.127049922943115
    3. '_' → logprob: -7.627049922943115
    4. '_possible' → logprob: -8.377050399780273
    5. '_pattern' → logprob: -8.502050399780273
    6. '_valid' → logprob: -9.877050399780273
    7. '_patterns' → logprob: -9.877050399780273
    8. '_pos' → logprob: -10.252050399780273
    9. '```' → logprob: -10.252050399780273
    10. '_utf' → logprob: -10.377050399780273

Token 1220: '(byte' (ID: 36692)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.039928898215293884
    2. '_s' → logprob: -3.289928913116455
    3. '_bytes' → logprob: -6.664928913116455
    4. '```' → logprob: -9.164928436279297
    5. '_possible' → logprob: -9.539928436279297
    6. '_pattern' → logprob: -9.539928436279297
    7. '(' → logprob: -9.664928436279297
    8. '(s' → logprob: -9.664928436279297
    9. '_patterns' → logprob: -10.039928436279297
    10. '_pos' → logprob: -10.164928436279297

Token 1221: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.00026407750556245446
    2. 'str' → logprob: -8.375264167785645
    3. 'byte' → logprob: -10.875264167785645
    4. '_byte' → logprob: -11.875264167785645
    5. '_bytes' → logprob: -12.625264167785645
    6. 's' → logprob: -13.750264167785645
    7. '```' → logprob: -14.000264167785645
    8. '(byte' → logprob: -14.625264167785645
    9. '_s' → logprob: -14.875264167785645
    10. '):
' → logprob: -15.125264167785645

Token 1222: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2047973871231079
    2. '):' → logprob: -1.704797387123108
    3. '   ' → logprob: -5.704797267913818
    4. ')' → logprob: -10.954797744750977
    5. '):
' → logprob: -11.954797744750977
    6. '  ' → logprob: -12.454797744750977
    7. 'byte' → logprob: -12.579797744750977
    8. ',' → logprob: -12.954797744750977
    9. '(byte' → logprob: -12.954797744750977
    10. ' ' → logprob: -13.329797744750977

Token 1223: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002059734659269452
    2. 'count' → logprob: -6.2520599365234375
    3. '```' → logprob: -9.377059936523438
    4. '``' → logprob: -11.252059936523438
    5. '#' → logprob: -11.377059936523438
    6. 'for' → logprob: -11.627059936523438
    7. 'def' → logprob: -11.752059936523438
    8. '
' → logprob: -13.252059936523438
    9. 'counts' → logprob: -13.752059936523438
    10. 'res' → logprob: -14.252059936523438

Token 1224: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.3256356120109558
    2. '   ' → logprob: -1.3256356716156006
    3. '#' (adapté à ' #') → logprob: -4.4506354331970215
    4. '
' → logprob: -8.20063591003418
    5. 'def' → logprob: -9.07563591003418
    6. ' count' → logprob: -9.57563591003418
    7. 'if' → logprob: -10.20063591003418
    8. '``' → logprob: -10.20063591003418
    9. '```' → logprob: -10.45063591003418
    10. 'for' → logprob: -11.07563591003418

Token 1225: ' must' (ID: 2804)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.5106189250946045
    2. '   ' → logprob: -1.5106189250946045
    3. '#' → logprob: -1.7606189250946045
    4. 'if' → logprob: -5.760619163513184
    5. 'for' → logprob: -6.510619163513184
    6. 'length' → logprob: -6.635619163513184
    7. 'def' → logprob: -7.510619163513184
    8. 'cnt' → logprob: -8.885619163513184
    9. 'return' → logprob: -9.135619163513184
    10. '
' → logprob: -9.385619163513184

Token 1226: ' match' (ID: 3981)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7555440664291382
    2. 'def' → logprob: -1.1305440664291382
    3. '   ' → logprob: -1.7555440664291382
    4. 'for' → logprob: -4.255544185638428
    5. '=' → logprob: -5.005544185638428
    6. 'return' → logprob: -5.005544185638428
    7. 'be' → logprob: -5.755544185638428
    8. 'match' → logprob: -6.755544185638428
    9. 'have' → logprob: -7.505544185638428
    10. '  ' → logprob: -7.505544185638428

Token 1227: ' ' (ID: 220)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.09098499268293381
    2. 'byte' → logprob: -2.965985059738159
    3. 'pattern' → logprob: -3.965985059738159
    4. ''' → logprob: -4.84098482131958
    5. '   ' → logprob: -6.46598482131958
    6. 'for' → logprob: -6.84098482131958
    7. 'if' → logprob: -6.84098482131958
    8. '#' → logprob: -6.96598482131958
    9. '
' → logprob: -7.09098482131958
    10. 'lambda' → logprob: -7.34098482131958

Token 1228: '10' (ID: 702)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.024994531646370888
    2. 'def' → logprob: -3.7749946117401123
    3. 'pattern' → logprob: -7.024994373321533
    4. '"' → logprob: -8.274994850158691
    5. '   ' → logprob: -9.399994850158691
    6. 'byte' → logprob: -9.524994850158691
    7. 'return' → logprob: -9.524994850158691
    8. '
' → logprob: -9.899994850158691
    9. ''^' → logprob: -10.274994850158691
    10. 'count' → logprob: -10.524994850158691

Token 1229: 'xxxx' (ID: 30950)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00708770751953125
    2. '   ' → logprob: -5.757087707519531
    3. 'pattern' → logprob: -6.757087707519531
    4. 'if' → logprob: -6.882087707519531
    5. 'for' → logprob: -7.257087707519531
    6. 'xxxx' → logprob: -8.007087707519531
    7. 'return' → logprob: -8.132087707519531
    8. ' for' → logprob: -9.757087707519531
    9. '
' → logprob: -10.132087707519531
    10. ' if' → logprob: -10.382087707519531

Token 1230: 'xx' (ID: 7605)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024873249232769012
    2. 'def' → logprob: -3.7748732566833496
    3. 'pattern' → logprob: -6.89987325668335
    4. '
' → logprob: -8.774872779846191
    5. '(pattern' → logprob: -9.524872779846191
    6. 'bits' → logprob: -9.774872779846191
    7. ':
' → logprob: -9.774872779846191
    8. ' pattern' → logprob: -9.774872779846191
    9. '(bits' → logprob: -10.149872779846191
    10. ' def' → logprob: -10.274872779846191

Token 1231: ' pattern' (ID: 8302)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10148032754659653
    2. 'def' → logprob: -2.72648024559021
    3. 'bits' → logprob: -3.97648024559021
    4. 'pattern' → logprob: -5.351480484008789
    5. '(bits' → logprob: -5.726480484008789
    6. '{
' → logprob: -6.476480484008789
    7. 'if' → logprob: -7.476480484008789
    8. ' bits' → logprob: -7.726480484008789
    9. '(pattern' → logprob: -7.976480484008789
    10. '```' → logprob: -8.476480484008789

Token 1232: '
' (ID: 198)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.42380523681640625
    2. '   ' → logprob: -1.4238052368164062
    3. 'pattern' → logprob: -2.7988052368164062
    4. 'count' → logprob: -3.9238052368164062
    5. 'def' → logprob: -4.673805236816406
    6. 'if' → logprob: -4.798805236816406
    7. '{
' → logprob: -6.298805236816406
    8. '
' → logprob: -7.048805236816406
    9. 'length' → logprob: -7.048805236816406
    10. 'patterns' → logprob: -7.673805236816406

Token 1233: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006422729231417179
    2. 'def' → logprob: -5.131422519683838
    3. 'for' → logprob: -8.256422996520996
    4. '
' → logprob: -9.506422996520996
    5. 'if' → logprob: -9.506422996520996
    6. 'bits' → logprob: -9.881422996520996
    7. ' for' → logprob: -11.756422996520996
    8. '{
' → logprob: -12.256422996520996
    9. '    
' → logprob: -12.256422996520996
    10. 'count' → logprob: -12.506422996520996

Token 1234: ' #' (ID: 1069)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.2228804975748062
    2. '   ' → logprob: -1.722880482673645
    3. 'count' → logprob: -4.8478803634643555
    4. 'if' → logprob: -4.9728803634643555
    5. 'def' → logprob: -5.7228803634643555
    6. 'pattern' → logprob: -6.4728803634643555
    7. 'patterns' → logprob: -7.9728803634643555
    8. '#' (adapté à ' #') → logprob: -8.097880363464355
    9. 'bit' → logprob: -8.222880363464355
    10. 'res' → logprob: -8.597880363464355

Token 1235: ' That' (ID: 4569)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.32928699254989624
    2. 'count' → logprob: -1.329287052154541
    3. 'if' → logprob: -4.704287052154541
    4. 'def' → logprob: -5.829287052154541
    5. 'pattern' → logprob: -6.954287052154541
    6. '#' → logprob: -6.954287052154541
    7. '   ' → logprob: -7.079287052154541
    8. '
' → logprob: -8.579286575317383
    9. 'bit' → logprob: -8.579286575317383
    10. 'length' → logprob: -8.829286575317383

Token 1236: ' means' (ID: 4748)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.2727266550064087
    2. 'def' → logprob: -2.897726535797119
    3. 's' → logprob: -3.022726535797119
    4. 'must' → logprob: -3.522726535797119
    5. ' bits' → logprob: -3.647726535797119
    6. 'is' → logprob: -3.647726535797119
    7. '   ' → logprob: -4.522726535797119
    8. 'pattern' → logprob: -4.522726535797119
    9. 'if' → logprob: -5.022726535797119
    10. ' is' → logprob: -5.022726535797119

Token 1237: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.2762134373188019
    2. 'if' → logprob: -1.7762134075164795
    3. ' bits' → logprob: -3.6512134075164795
    4. '   ' → logprob: -4.026213645935059
    5. ' if' → logprob: -4.151213645935059
    6. 'for' → logprob: -4.901213645935059
    7. 'def' → logprob: -6.651213645935059
    8. 'bit' → logprob: -6.901213645935059
    9. 'first' → logprob: -7.151213645935059
    10. ' for' → logprob: -7.276213645935059

Token 1238: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.08237577974796295
    2. '=' → logprob: -3.5823757648468018
    3. ' =' → logprob: -3.5823757648468018
    4. '0' → logprob: -3.8323757648468018
    5. '   ' → logprob: -7.207376003265381
    6. '=[' → logprob: -7.457376003265381
    7. '
' → logprob: -8.457375526428223
    8. ' ' → logprob: -9.832375526428223
    9. 'def' → logprob: -10.082375526428223
    10. '[:' → logprob: -10.332375526428223

Token 1239: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00024953833781182766
    2. '[' → logprob: -8.375249862670898
    3. 'def' → logprob: -12.000249862670898
    4. ':' → logprob: -12.250249862670898
    5. ' ' → logprob: -12.750249862670898
    6. '1' → logprob: -13.500249862670898
    7. '012' → logprob: -14.375249862670898
    8. '
' → logprob: -14.375249862670898
    9. ']' → logprob: -15.125249862670898
    10. '```' → logprob: -15.125249862670898

Token 1240: ']='' (ID: 69193)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.019625745713710785
    2. ']==' → logprob: -4.144625663757324
    3. ']=='' → logprob: -6.144625663757324
    4. ' ]' → logprob: -7.644625663757324
    5. '[' → logprob: -7.644625663757324
    6. '==' → logprob: -8.769625663757324
    7. '   ' → logprob: -9.519625663757324
    8. ' ==' → logprob: -9.644625663757324
    9. '0' → logprob: -9.769625663757324
    10. 'def' → logprob: -10.144625663757324

Token 1241: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5759620666503906
    2. '1' → logprob: -0.8259620666503906
    3. ' '' → logprob: -11.95096206665039
    4. '`' → logprob: -12.70096206665039
    5. '')' → logprob: -12.70096206665039
    6. '['' → logprob: -12.95096206665039
    7. '"' → logprob: -13.07596206665039
    8. '('' → logprob: -13.82596206665039
    9. '
' → logprob: -14.07596206665039
    10. '

' → logprob: -14.20096206665039

Token 1242: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.41057536005973816
    2. ' and' → logprob: -1.1605753898620605
    3. 'and' → logprob: -3.7855753898620605
    4. ' '' → logprob: -7.5355753898620605
    5. '
' → logprob: -9.785574913024902
    6. 'def' → logprob: -10.035574913024902
    7. ' or' → logprob: -10.660574913024902
    8. '   ' → logprob: -11.410574913024902
    9. ''
' → logprob: -11.535574913024902
    10. 'b' → logprob: -11.660574913024902

Token 1243: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.02098126709461212
    2. ' bits' → logprob: -4.020981311798096
    3. 'byte' → logprob: -6.270981311798096
    4. '   ' → logprob: -7.645981311798096
    5. 'bit' → logprob: -8.520980834960938
    6. 'def' → logprob: -9.145980834960938
    7. ' byte' → logprob: -10.020980834960938
    8. 'b' → logprob: -10.395980834960938
    9. 'bytes' → logprob: -11.020980834960938
    10. ' ' → logprob: -11.145980834960938

Token 1244: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.002473635831847787
    2. '==' → logprob: -6.752473831176758
    3. '1' → logprob: -7.377473831176758
    4. '
' → logprob: -8.127473831176758
    5. '=' → logprob: -9.252473831176758
    6. '=='' → logprob: -10.127473831176758
    7. ' [' → logprob: -10.127473831176758
    8. 'def' → logprob: -10.502473831176758
    9. ''[' → logprob: -10.502473831176758
    10. ']==' → logprob: -10.752473831176758

Token 1245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.002877272432669997
    2. '0' → logprob: -6.252877235412598
    3. ']' → logprob: -7.002877235412598
    4. ')' → logprob: -11.002877235412598
    5. '
' → logprob: -11.752877235412598
    6. '[' → logprob: -12.502877235412598
    7. ' ' → logprob: -13.127877235412598
    8. ']==' → logprob: -13.502877235412598
    9. ')]' → logprob: -13.752877235412598
    10. ':]' → logprob: -14.002877235412598

Token 1246: ']='' (ID: 69193)
  Prédit: ']==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=='' → logprob: -0.5195106863975525
    2. ']' → logprob: -1.3945107460021973
    3. ']='' → logprob: -2.2695107460021973
    4. '='' → logprob: -3.8945107460021973
    5. '=='' → logprob: -4.019510746002197
    6. ']==' → logprob: -4.519510746002197
    7. '']=='' → logprob: -6.519510746002197
    8. '=' → logprob: -6.644510746002197
    9. ']=' → logprob: -7.269510746002197
    10. ']'' → logprob: -8.019510269165039

Token 1247: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ''' → logprob: -11.000017166137695
    3. ' ' → logprob: -17.875017166137695
    4. '1' → logprob: -19.375017166137695
    5. '')' → logprob: -19.750017166137695
    6. '['' → logprob: -20.000017166137695
    7. '('' → logprob: -20.250017166137695
    8. '
' → logprob: -20.500017166137695
    9. '   ' → logprob: -20.750017166137695
    10. '```' → logprob: -21.000017166137695

Token 1248: '',' (ID: 787)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.03265140578150749
    2. '',' → logprob: -3.532651424407959
    3. ' and' → logprob: -6.157651424407959
    4. ''
' → logprob: -8.6576509475708
    5. 'def' → logprob: -8.6576509475708
    6. ',' → logprob: -9.0326509475708
    7. 'and' → logprob: -9.4076509475708
    8. ' or' → logprob: -9.7826509475708
    9. '
' → logprob: -9.9076509475708
    10. '')' → logprob: -10.2826509475708

Token 1249: ' bits' (ID: 18189)
  Prédit: ' bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bits' → logprob: -0.5942413806915283
    2. 'bits' → logprob: -0.9692413806915283
    3. '   ' → logprob: -2.9692413806915283
    4. ' for' → logprob: -4.844241142272949
    5. 'def' → logprob: -5.844241142272949
    6. 'for' → logprob: -6.094241142272949
    7. ' and' → logprob: -6.469241142272949
    8. '
' → logprob: -6.844241142272949
    9. ' def' → logprob: -7.594241142272949
    10. 'and' → logprob: -8.09424114227295

Token 1250: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.7133641196996905e-05
    2. '2' → logprob: -11.37502670288086
    3. 'in' → logprob: -12.62502670288086
    4. '=' → logprob: -12.87502670288086
    5. 'def' → logprob: -13.00002670288086
    6. '=[' → logprob: -13.00002670288086
    7. '```' → logprob: -14.12502670288086
    8. '#' → logprob: -14.37502670288086
    9. '==' → logprob: -14.37502670288086
    10. ' [' → logprob: -14.62502670288086

Token 1251: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00016790216614026576
    2. ']' → logprob: -9.625167846679688
    3. '1' → logprob: -10.250167846679688
    4. ' ' → logprob: -10.250167846679688
    5. 'x' → logprob: -11.125167846679688
    6. ':' → logprob: -12.125167846679688
    7. ':]' → logprob: -12.250167846679688
    8. '```' → logprob: -13.750167846679688
    9. '0' → logprob: -13.875167846679688
    10. '[' → logprob: -14.750167846679688

Token 1252: ':]' (ID: 67377)
  Prédit: ']==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=='' → logprob: -0.14741678535938263
    2. ']' → logprob: -2.147416830062866
    3. ']='' → logprob: -4.772416591644287
    4. ']==' → logprob: -4.897416591644287
    5. ']!='' → logprob: -6.397416591644287
    6. '=='' → logprob: -6.647416591644287
    7. ':]' → logprob: -7.022416591644287
    8. ')=='' → logprob: -9.022417068481445
    9. ':' → logprob: -9.147417068481445
    10. '='' → logprob: -9.272417068481445

Token 1253: ' any' (ID: 1062)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.14635998010635376
    2. ' in' → logprob: -2.146359920501709
    3. '=='' → logprob: -4.896359920501709
    4. '=' → logprob: -5.021359920501709
    5. '==' → logprob: -5.771359920501709
    6. '='' → logprob: -7.271359920501709
    7. '=['' → logprob: -8.021360397338867
    8. '```' → logprob: -8.021360397338867
    9. ' ==' → logprob: -8.771360397338867
    10. '
' → logprob: -8.896360397338867

Token 1254: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40295055508613586
    2. 'def' → logprob: -1.7779505252838135
    3. 'bits' → logprob: -1.9029505252838135
    4. ' bits' → logprob: -4.652950763702393
    5. '
' → logprob: -6.027950763702393
    6. '(bits' → logprob: -7.652950763702393
    7. ' def' → logprob: -8.152950286865234
    8. ':
' → logprob: -8.527950286865234
    9. '=' → logprob: -8.652950286865234
    10. '```' → logprob: -8.777950286865234

Token 1255: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.025248313322663307
    2. 'def' → logprob: -3.7752482891082764
    3. 'bits' → logprob: -6.4002485275268555
    4. ' bits' → logprob: -8.275248527526855
    5. '
' → logprob: -9.900248527526855
    6. ' def' → logprob: -10.525248527526855
    7. '(bits' → logprob: -12.525248527526855
    8. '```' → logprob: -13.525248527526855
    9. ' ' → logprob: -14.150248527526855
    10. '    
' → logprob: -14.400248527526855

Token 1256: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' (adapté à ' bits') → logprob: -0.08238522708415985
    2. '   ' → logprob: -2.582385301589966
    3. 'count' → logprob: -6.082385063171387
    4. 'def' → logprob: -7.582385063171387
    5. ' bits' → logprob: -8.207385063171387
    6. 'res' → logprob: -8.707385063171387
    7. 'if' → logprob: -9.207385063171387
    8. 'bit' → logprob: -10.082385063171387
    9. '
' → logprob: -10.582385063171387
    10. 'counts' → logprob: -10.832385063171387

Token 1257: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006716079078614712
    2. ' =' → logprob: -5.006716251373291
    3. '=
' → logprob: -14.256715774536133
    4. 'def' → logprob: -16.631715774536133
    5. '[' → logprob: -18.381715774536133
    6. '＝' → logprob: -18.756715774536133
    7. '=[]' → logprob: -18.881715774536133
    8. '=list' → logprob: -18.881715774536133
    9. '=

' → logprob: -19.006715774536133
    10. ')' → logprob: -19.506715774536133

Token 1258: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.00044258590787649155
    2. '['' → logprob: -7.7504425048828125
    3. ' list' → logprob: -11.875442504882812
    4. 'byte' → logprob: -12.875442504882812
    5. '[list' → logprob: -13.250442504882812
    6. '[' → logprob: -14.750442504882812
    7. ' ['' → logprob: -17.375442504882812
    8. '[
' → logprob: -17.500442504882812
    9. '   ' → logprob: -18.000442504882812
    10. '(list' → logprob: -18.375442504882812

Token 1259: '(byte' (ID: 36692)
  Prédit: '(byte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(byte' → logprob: -0.0031791406217962503
    2. 'byte' → logprob: -5.75317907333374
    3. '_byte' → logprob: -14.503179550170898
    4. ' byte' → logprob: -15.128179550170898
    5. '.byte' → logprob: -15.503179550170898
    6. 'def' → logprob: -15.753179550170898
    7. '<byte' → logprob: -16.1281795501709
    8. '```' → logprob: -17.0031795501709
    9. '(bit' → logprob: -17.1281795501709
    10. '	byte' → logprob: -17.6281795501709

Token 1260: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.00011129142512800172
    2. 'str' → logprob: -9.12511157989502
    3. '_byte' → logprob: -13.87511157989502
    4. 'byte' → logprob: -14.25011157989502
    5. 'Str' → logprob: -14.75011157989502
    6. '```' → logprob: -16.250110626220703
    7. '_string' → logprob: -16.375110626220703
    8. '_STR' → logprob: -17.000110626220703
    9. '_bytes' → logprob: -17.125110626220703
    10. ')' → logprob: -17.500110626220703

Token 1261: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0023251024540513754
    2. ')' → logprob: -6.127325057983398
    3. '   ' → logprob: -9.002325057983398
    4. 'def' → logprob: -11.252325057983398
    5. ')
' → logprob: -12.627325057983398
    6. ' )
' → logprob: -15.752325057983398
    7. ')

' → logprob: -16.1273250579834
    8. '())
' → logprob: -16.3773250579834
    9. '[' → logprob: -16.6273250579834
    10. '  ' → logprob: -17.2523250579834

Token 1262: '   ' (ID: 271)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.528232216835022
    2. '   ' → logprob: -1.028232216835022
    3. 'if' → logprob: -3.0282320976257324
    4. 'for' → logprob: -5.778232097625732
    5. 'def' → logprob: -7.403232097625732
    6. ' count' → logprob: -7.903232097625732
    7. ' if' → logprob: -8.77823257446289
    8. '```' → logprob: -9.90323257446289
    9. '
' → logprob: -11.27823257446289
    10. ' for' → logprob: -11.90323257446289

Token 1263: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.003229756373912096
    2. 'for' → logprob: -6.00322961807251
    3. '   ' → logprob: -7.87822961807251
    4. 'count' → logprob: -8.003230094909668
    5. 'def' → logprob: -10.253230094909668
    6. ' if' → logprob: -13.003230094909668
    7. '```' → logprob: -13.753230094909668
    8. '#' → logprob: -14.128230094909668
    9. '
' → logprob: -14.878230094909668
    10. 'res' → logprob: -15.503230094909668

Token 1264: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.013131518848240376
    2. '(bits' → logprob: -5.013131618499756
    3. ' bits' → logprob: -5.638131618499756
    4. 'len' → logprob: -6.513131618499756
    5. 'not' → logprob: -7.013131618499756
    6. ' not' → logprob: -8.263131141662598
    7. '(len' → logprob: -9.263131141662598
    8. ' len' → logprob: -9.638131141662598
    9. '(not' → logprob: -11.263131141662598
    10. ' (' → logprob: -12.013131141662598

Token 1265: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00016182278341148049
    2. '0' → logprob: -8.750162124633789
    3. 'and' → logprob: -13.750162124633789
    4. '[:' → logprob: -14.875162124633789
    5. '[
' → logprob: -15.000162124633789
    6. '   ' → logprob: -15.125162124633789
    7. '==' → logprob: -15.125162124633789
    8. 'def' → logprob: -15.125162124633789
    9. '=' → logprob: -16.12516212463379
    10. ' and' → logprob: -16.12516212463379

Token 1266: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.5332478142227046e-05
    2. '[' → logprob: -11.375015258789062
    3. ' ' → logprob: -12.625015258789062
    4. '   ' → logprob: -15.500015258789062
    5. '#' → logprob: -16.000015258789062
    6. '1' → logprob: -16.250015258789062
    7. '(' → logprob: -17.000015258789062
    8. '][' → logprob: -17.375015258789062
    9. '00' → logprob: -17.750015258789062
    10. '2' → logprob: -17.875015258789062

Token 1267: ']' (ID: 60)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4917886257171631
    2. ']' → logprob: -1.866788625717163
    3. ' ==' → logprob: -2.116788625717163
    4. '=='' → logprob: -2.866788625717163
    5. ' in' → logprob: -3.366788625717163
    6. ']==' → logprob: -4.366788864135742
    7. ']=='' → logprob: -5.491788864135742
    8. ' =='' → logprob: -6.116788864135742
    9. ')' → logprob: -6.741788864135742
    10. 'in' → logprob: -7.241788864135742

Token 1268: ' not' (ID: 625)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.5585452914237976
    2. ' in' → logprob: -0.9335452914237976
    3. '==' → logprob: -3.4335453510284424
    4. ' not' → logprob: -6.683545112609863
    5. ' ==' → logprob: -7.433545112609863
    6. 'not' → logprob: -8.433545112609863
    7. '=='' → logprob: -8.433545112609863
    8. '!=' → logprob: -8.558545112609863
    9. ' !=' → logprob: -10.933545112609863
    10. ')' → logprob: -11.058545112609863

Token 1269: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5764235854148865
    2. 'in' → logprob: -0.8264235854148865
    3. ''in' → logprob: -8.701423645019531
    4. '['' → logprob: -8.826423645019531
    5. '
' → logprob: -9.826423645019531
    6. 'In' → logprob: -10.451423645019531
    7. '=['' → logprob: -10.576423645019531
    8. '='' → logprob: -10.701423645019531
    9. '=' → logprob: -11.701423645019531
    10. '('' → logprob: -12.326423645019531

Token 1270: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.0001561009994475171
    2. '('' → logprob: -9.50015640258789
    3. '{'' → logprob: -9.50015640258789
    4. ' ['' → logprob: -12.12515640258789
    5. ''' → logprob: -14.50015640258789
    6. '[' → logprob: -15.00015640258789
    7. '(['' → logprob: -15.75015640258789
    8. '["' → logprob: -18.62515640258789
    9. '[['' → logprob: -18.75015640258789
    10. '{' → logprob: -18.87515640258789

Token 1271: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.5268868207931519
    2. '1' → logprob: -0.9018868207931519
    3. '['' → logprob: -6.151886940002441
    4. '{'' → logprob: -6.651886940002441
    5. '('' → logprob: -8.151886940002441
    6. '"' → logprob: -11.401886940002441
    7. '`' → logprob: -11.776886940002441
    8. ' '' → logprob: -11.776886940002441
    9. '','' → logprob: -12.151886940002441
    10. '',' → logprob: -12.276886940002441

Token 1272: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.2167934626340866
    2. '',' → logprob: -1.716793417930603
    3. ',' → logprob: -4.466793537139893
    4. ','' → logprob: -5.591793537139893
    5. ''' → logprob: -10.341793060302734
    6. '',"' → logprob: -12.341793060302734
    7. ' ,' → logprob: -12.591793060302734
    8. '   ' → logprob: -13.216793060302734
    9. ' ','' → logprob: -13.341793060302734
    10. '']' → logprob: -13.466793060302734

Token 1273: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0006423805025406182
    2. ''x' → logprob: -7.3756422996521
    3. '0' → logprob: -11.500642776489258
    4. ''' → logprob: -12.875642776489258
    5. ' x' → logprob: -13.625642776489258
    6. '1' → logprob: -13.625642776489258
    7. '"x' → logprob: -15.000642776489258
    8. '']' → logprob: -15.500642776489258
    9. ''s' → logprob: -16.375642776489258
    10. '
' → logprob: -16.750642776489258

Token 1274: '']:
' (ID: 44766)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.5769477486610413
    2. '']' → logprob: -0.8269477486610413
    3. '']:
' → logprob: -7.7019476890563965
    4. ' or' → logprob: -8.701948165893555
    5. ']:
' → logprob: -9.201948165893555
    6. '   ' → logprob: -9.451948165893555
    7. ',' → logprob: -9.826948165893555
    8. 'or' → logprob: -10.326948165893555
    9. ' and' → logprob: -10.826948165893555
    10. '"]' → logprob: -10.826948165893555

Token 1275: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02318478934466839
    2. ' or' → logprob: -4.023184776306152
    3. ' and' → logprob: -5.398184776306152
    4. '   ' → logprob: -8.398184776306152
    5. 'and' → logprob: -9.023184776306152
    6. 'or' → logprob: -9.898184776306152
    7. ' return' → logprob: -10.148184776306152
    8. '    ' → logprob: -10.648184776306152
    9. ':' → logprob: -11.398184776306152
    10. ':return' → logprob: -11.773184776306152

Token 1276: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6063841581344604
    2. 'return' (adapté à ' return') → logprob: -1.1063841581344604
    3. ' return' → logprob: -2.10638427734375
    4. '   ' → logprob: -6.23138427734375
    5. '	return' → logprob: -9.23138427734375
    6. '
' → logprob: -9.48138427734375
    7. '    ' → logprob: -9.85638427734375
    8. '        
' → logprob: -10.85638427734375
    9. '           ' → logprob: -10.98138427734375
    10. '```' → logprob: -12.23138427734375

Token 1277: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.961759259458631e-06
    2. ' ' → logprob: -12.250004768371582
    3. 'False' → logprob: -16.6250057220459
    4. 'None' → logprob: -16.6250057220459
    5. '
' → logprob: -18.3750057220459
    6. 'return' → logprob: -19.2500057220459
    7. '   ' → logprob: -20.1250057220459
    8. '    
' → logprob: -21.5000057220459
    9. '[]
' → logprob: -21.8750057220459
    10. '00' → logprob: -22.3750057220459

Token 1278: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.5
    3. 'False' → logprob: -18.5
    4. '[' → logprob: -22.125
    5. '[]' → logprob: -22.375
    6. '[]
' → logprob: -22.375
    7. '00' → logprob: -22.5
    8. '(' → logprob: -22.875
    9. '۰' → logprob: -22.875
    10. '
' → logprob: -23.125

Token 1279: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0014495177892968059
    2. '   ' → logprob: -7.2514495849609375
    3. ' if' → logprob: -7.3764495849609375
    4. 'return' → logprob: -9.126449584960938
    5. '
' → logprob: -13.001449584960938
    6. '0' → logprob: -13.251449584960938
    7. '```' → logprob: -14.876449584960938
    8. ' return' → logprob: -15.376449584960938
    9. 'for' → logprob: -16.876449584960938
    10. '    
' → logprob: -17.626449584960938

Token 1280: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.004214809276163578
    2. 'return' → logprob: -5.504214763641357
    3. ' if' → logprob: -9.629215240478516
    4. '   ' → logprob: -9.754215240478516
    5. '0' → logprob: -11.879215240478516
    6. 'for' → logprob: -12.754215240478516
    7. ' return' → logprob: -13.879215240478516
    8. 'count' → logprob: -14.254215240478516
    9. '```' → logprob: -14.629215240478516
    10. '
' → logprob: -14.879215240478516

Token 1281: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -1.0206720617134124e-05
    2. ' if' → logprob: -11.75001049041748
    3. '   ' → logprob: -13.00001049041748
    4. '```' → logprob: -17.625009536743164
    5. 'for' → logprob: -18.125009536743164
    6. 'count' → logprob: -21.250009536743164
    7. '	if' → logprob: -21.500009536743164
    8. '
' → logprob: -22.000009536743164
    9. 'return' → logprob: -22.250009536743164
    10. '    
' → logprob: -22.375009536743164

Token 1282: ' bits' (ID: 18189)
  Prédit: 'bits'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bits' → logprob: -0.008621077984571457
    2. ' bits' → logprob: -4.7586212158203125
    3. '   ' → logprob: -12.258621215820312
    4. ' ' → logprob: -14.258621215820312
    5. '(bits' → logprob: -14.258621215820312
    6. '  ' → logprob: -15.508621215820312
    7. '       ' → logprob: -15.633621215820312
    8. '    ' → logprob: -16.508621215820312
    9. 'bit' → logprob: -17.133621215820312
    10. '     ' → logprob: -17.633621215820312

Token 1283: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.816093228830141e-06
    2. '1' → logprob: -13.87500286102295
    3. '   ' → logprob: -14.00000286102295
    4. '[
' → logprob: -15.25000286102295
    5. 'def' → logprob: -16.000001907348633
    6. ' ' → logprob: -16.000001907348633
    7. '...' → logprob: -16.375001907348633
    8. '=' → logprob: -16.625001907348633
    9. ' [' → logprob: -16.875001907348633
    10. '0' → logprob: -16.875001907348633

Token 1284: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.129266067640856e-05
    2. '[' → logprob: -11.250020980834961
    3. '0' → logprob: -12.375020980834961
    4. ' ' → logprob: -13.125020980834961
    5. '   ' → logprob: -14.125020980834961
    6. '
' → logprob: -14.500020980834961
    7. '```' → logprob: -16.00002098083496
    8. ']' → logprob: -16.56252098083496
    9. '2' → logprob: -16.81252098083496
    10. '  ' → logprob: -16.93752098083496

Token 1285: ']' (ID: 60)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.16605162620544434
    2. 'not' → logprob: -1.9160516262054443
    3. ']' → logprob: -5.166051864624023
    4. ')' → logprob: -9.916051864624023
    5. '==' → logprob: -10.916051864624023
    6. '!='' → logprob: -11.791051864624023
    7. '!=' → logprob: -12.291051864624023
    8. '	not' → logprob: -12.541051864624023
    9. ']!='' → logprob: -12.666051864624023
    10. '   ' → logprob: -12.791051864624023

Token 1286: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.16024190187454224
    2. 'not' → logprob: -1.9102418422698975
    3. '!=' → logprob: -11.285242080688477
    4. '==' → logprob: -13.035242080688477
    5. ' !=' → logprob: -13.785242080688477
    6. 'in' → logprob: -14.160242080688477
    7. '	not' → logprob: -14.660242080688477
    8. '!='' → logprob: -15.035242080688477
    9. ')' → logprob: -15.785242080688477
    10. '```' → logprob: -16.160242080688477

Token 1287: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.38688531517982483
    2. 'in' → logprob: -1.1368852853775024
    3. '['' → logprob: -11.386885643005371
    4. ' ['' → logprob: -13.386885643005371
    5. '=['' → logprob: -14.386885643005371
    6. 'In' → logprob: -15.386885643005371
    7. '
' → logprob: -16.261884689331055
    8. ',' → logprob: -16.386884689331055
    9. '(['' → logprob: -17.011884689331055
    10. ')' → logprob: -17.136884689331055

Token 1288: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -14.250000953674316
    3. ' ['' → logprob: -15.750000953674316
    4. '('' → logprob: -17.5
    5. '[
' → logprob: -19.0
    6. '[['' → logprob: -19.375
    7. ''' → logprob: -19.625
    8. '["' → logprob: -19.625
    9. '{'' → logprob: -19.625
    10. '(['' → logprob: -20.25

Token 1289: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.6439305543899536
    2. '['' → logprob: -1.2689305543899536
    3. '0' → logprob: -1.6439305543899536
    4. '{'' → logprob: -8.643930435180664
    5. '('' → logprob: -8.893930435180664
    6. '[' → logprob: -9.768930435180664
    7. '']' → logprob: -11.018930435180664
    8. ' '' → logprob: -12.018930435180664
    9. '   ' → logprob: -12.143930435180664
    10. '
' → logprob: -12.268930435180664

Token 1290: '','' (ID: 4074)
  Prédit: '',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '','' → logprob: -0.004488038830459118
    2. '',' → logprob: -5.504487991333008
    3. ','' → logprob: -7.879487991333008
    4. ',' → logprob: -10.629487991333008
    5. ''' → logprob: -12.754487991333008
    6. '',"' → logprob: -13.504487991333008
    7. ',x' → logprob: -14.379487991333008
    8. '",'' → logprob: -14.629487991333008
    9. ' ','' → logprob: -14.629487991333008
    10. '","' → logprob: -14.754487991333008

Token 1291: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0005532711511477828
    2. ''x' → logprob: -7.500553131103516
    3. ' x' → logprob: -15.500553131103516
    4. '['' → logprob: -17.250553131103516
    5. '"x' → logprob: -18.750553131103516
    6. '
' → logprob: -20.000553131103516
    7. '```' → logprob: -20.125553131103516
    8. '	x' → logprob: -20.625553131103516
    9. '$x' → logprob: -21.375553131103516
    10. ''' → logprob: -21.625553131103516

Token 1292: '']:
' (ID: 44766)
  Prédit: '']:
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']:
' → logprob: -0.008791954256594181
    2. '']' → logprob: -5.508791923522949
    3. ']:
' → logprob: -5.508791923522949
    4. '']:' → logprob: -7.508791923522949
    5. ']' → logprob: -10.00879192352295
    6. '"]:
' → logprob: -10.75879192352295
    7. '',' → logprob: -11.25879192352295
    8. '   ' → logprob: -11.50879192352295
    9. ']:' → logprob: -12.50879192352295
    10. '):
' → logprob: -13.00879192352295

Token 1293: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006005821283906698
    2. '   ' → logprob: -5.131005764007568
    3. ':' → logprob: -10.006006240844727
    4. ':
' → logprob: -10.756006240844727
    5. ':return' → logprob: -11.881006240844727
    6. ' return' → logprob: -14.256006240844727
    7. 'return' → logprob: -14.381006240844727
    8. '```' → logprob: -14.506006240844727
    9. ',' → logprob: -15.006006240844727
    10. '	   ' → logprob: -15.256006240844727

Token 1294: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0022504113148897886
    2. ' return' → logprob: -6.5022501945495605
    3. '   ' → logprob: -7.2522501945495605
    4. '       ' → logprob: -10.502250671386719
    5. '```' → logprob: -12.502250671386719
    6. '	return' → logprob: -12.627250671386719
    7. '
' → logprob: -13.127250671386719
    8. '0' → logprob: -13.752250671386719
    9. '           ' → logprob: -14.877250671386719
    10. ' ' → logprob: -15.127250671386719

Token 1295: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -14.875
    3. '
' → logprob: -22.625
    4. '۰' → logprob: -23.25
    5. '   ' → logprob: -23.875
    6. 'return' → logprob: -24.375
    7. '```' → logprob: -24.375
    8. '00' → logprob: -24.625
    9. '000' → logprob: -24.75
    10. '  ' → logprob: -25.625

Token 1296: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. '000' → logprob: -21.875
    4. '۰' → logprob: -21.875
    5. 'False' → logprob: -22.0
    6. '00' → logprob: -22.125
    7. '```' → logprob: -22.875
    8. '   ' → logprob: -23.0
    9. '=' → logprob: -23.0625
    10. 'int' → logprob: -23.1875

Token 1297: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04617074131965637
    2. '
' → logprob: -3.296170711517334
    3. 'if' → logprob: -5.421170711517334
    4. 'for' → logprob: -6.421170711517334
    5. 'return' → logprob: -7.671170711517334
    6. '```' → logprob: -7.671170711517334
    7. 'count' → logprob: -8.046171188354492
    8. ' if' → logprob: -8.171171188354492
    9. ' for' → logprob: -8.296171188354492
    10. '    
' → logprob: -9.921171188354492

Token 1298: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05040046200156212
    2. 'for' → logprob: -3.550400495529175
    3. 'if' → logprob: -4.050400257110596
    4. 'count' → logprob: -6.175400257110596
    5. '```' → logprob: -7.175400257110596
    6. ' for' → logprob: -9.300400733947754
    7. '
' → logprob: -10.300400733947754
    8. ' if' → logprob: -10.675400733947754
    9. '``' → logprob: -10.675400733947754
    10. ' count' → logprob: -13.550400733947754

Token 1299: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.11310063302516937
    2. 'for' → logprob: -2.863100528717041
    3. 'return' → logprob: -3.238100528717041
    4. '   ' → logprob: -4.613100528717041
    5. 'cnt' → logprob: -7.988100528717041
    6. 'total' → logprob: -8.9881010055542
    7. 'if' → logprob: -8.9881010055542
    8. 'def' → logprob: -10.1131010055542
    9. 'result' → logprob: -11.7381010055542
    10. 'bits' → logprob: -11.8631010055542

Token 1300: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6426929235458374
    2. 'return' → logprob: -1.1426929235458374
    3. 'for' → logprob: -1.8926929235458374
    4. '   ' → logprob: -5.642693042755127
    5. 'cnt' → logprob: -8.142692565917969
    6. 'if' → logprob: -8.267692565917969
    7. 'total' → logprob: -9.642692565917969
    8. 'possible' → logprob: -9.767692565917969
    9. 'def' → logprob: -10.017692565917969
    10. 'bits' → logprob: -10.017692565917969

Token 1301: ' possible' (ID: 4149)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5972750782966614
    2. '=' → logprob: -0.9722750782966614
    3. '   ' → logprob: -3.5972750186920166
    4. 'count' → logprob: -3.7222750186920166
    5. 'return' → logprob: -3.9722750186920166
    6. ' return' → logprob: -7.847275257110596
    7. ' count' → logprob: -8.347274780273438
    8. '=count' → logprob: -8.847274780273438
    9. 'poss' → logprob: -9.597274780273438
    10. 'possible' → logprob: -9.597274780273438

Token 1302: ' matches' (ID: 15248)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3642432987689972
    2. '=' → logprob: -1.8642432689666748
    3. 'return' → logprob: -2.364243268966675
    4. 'count' → logprob: -3.114243268966675
    5. '   ' → logprob: -5.114243507385254
    6. 'poss' → logprob: -5.614243507385254
    7. 'for' → logprob: -7.239243507385254
    8. 'def' → logprob: -7.489243507385254
    9. '       ' → logprob: -8.614243507385254
    10. 'pos' → logprob: -9.114243507385254

Token 1303: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5867788195610046
    2. 'count' → logprob: -1.3367788791656494
    3. 'return' → logprob: -1.7117788791656494
    4. '```' → logprob: -8.33677864074707
    5. ' return' → logprob: -9.08677864074707
    6. 'for' → logprob: -9.33677864074707
    7. ' count' → logprob: -9.58677864074707
    8. '``' → logprob: -9.96177864074707
    9. 'cnt' → logprob: -10.33677864074707
    10. 'possible' → logprob: -10.83677864074707

Token 1304: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6100223064422607
    2. 'count' → logprob: -1.3600223064422607
    3. 'return' → logprob: -1.6100223064422607
    4. '```' → logprob: -9.48502254486084
    5. 'total' → logprob: -11.61002254486084
    6. ' return' → logprob: -11.61002254486084
    7. 'possible' → logprob: -11.98502254486084
    8. 'cnt' → logprob: -12.23502254486084
    9. '``' → logprob: -12.36002254486084
    10. ' count' → logprob: -12.48502254486084

Token 1305: ' count' (ID: 3605)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.13163065910339355
    2. 'count' (adapté à ' count') → logprob: -2.1316306591033936
    3. '   ' → logprob: -5.381630897521973
    4. '```' → logprob: -10.256630897521973
    5. 'cnt' → logprob: -10.506630897521973
    6. ' return' → logprob: -11.006630897521973
    7. 'total' → logprob: -12.381630897521973
    8. 'for' → logprob: -13.256630897521973
    9. '``' → logprob: -13.506630897521973
    10. 'result' → logprob: -13.506630897521973

Token 1306: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868728280067444
    2. ' =' → logprob: -1.1368727684020996
    3. '=count' → logprob: -13.261873245239258
    4. '   ' → logprob: -18.636873245239258
    5. ' +=' → logprob: -19.636873245239258
    6. '.=' → logprob: -20.136873245239258
    7. '=}' → logprob: -20.136873245239258
    8. '＝' → logprob: -20.261873245239258
    9. '+=' → logprob: -20.386873245239258
    10. '=cut' → logprob: -20.511873245239258

Token 1307: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.05509914085268974
    2. 'count' → logprob: -2.9300992488861084
    3. ' ' → logprob: -9.180099487304688
    4. ' count' → logprob: -9.430099487304688
    5. '1' → logprob: -11.055099487304688
    6. '   ' → logprob: -11.555099487304688
    7. 'sum' → logprob: -12.805099487304688
    8. '	count' → logprob: -14.055099487304688
    9. '256' → logprob: -14.180099487304688
    10. '(count' → logprob: -14.367599487304688

Token 1308: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020546678453683853
    2. 'count' → logprob: -3.8955466747283936
    3. 'sum' → logprob: -13.145546913146973
    4. ' count' → logprob: -13.770546913146973
    5. ' ' → logprob: -14.395546913146973
    6. '1' → logprob: -15.020546913146973
    7. '```' → logprob: -16.208045959472656
    8. '	count' → logprob: -16.645545959472656
    9. '(count' → logprob: -16.645545959472656
    10. 'len' → logprob: -17.083045959472656

Token 1309: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.04453101009130478
    2. '   ' → logprob: -3.2945311069488525
    3. ' for' → logprob: -5.044530868530273
    4. '	for' → logprob: -10.794530868530273
    5. '
' → logprob: -12.919530868530273
    6. '```' → logprob: -14.044530868530273
    7. ' ' → logprob: -15.544530868530273
    8. '  ' → logprob: -15.794530868530273
    9. '       ' → logprob: -16.919530868530273
    10. ',' → logprob: -17.919530868530273

Token 1310: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00023631771910004318
    2. '   ' → logprob: -8.750236511230469
    3. ' for' → logprob: -9.500236511230469
    4. '```' → logprob: -12.875236511230469
    5. '	for' → logprob: -14.875236511230469
    6. '
' → logprob: -16.87523651123047
    7. '       ' → logprob: -18.50023651123047
    8. '``' → logprob: -19.00023651123047
    9. '           ' → logprob: -21.12523651123047
    10. ' ' → logprob: -21.37523651123047

Token 1311: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -2.696889623621246e-06
    2. ' for' → logprob: -12.87500286102295
    3. '```' → logprob: -16.625001907348633
    4. '   ' → logprob: -17.625001907348633
    5. '	for' → logprob: -18.875001907348633
    6. 'def' → logprob: -20.125001907348633
    7. '
' → logprob: -21.000001907348633
    8. '``' → logprob: -21.625001907348633
    9. 'from' → logprob: -22.625001907348633
    10. 'For' → logprob: -23.375001907348633

Token 1312: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -5.5577775128767826e-06
    2. ' i' → logprob: -12.125005722045898
    3. 'b' → logprob: -18.3750057220459
    4. 'byte' → logprob: -18.6250057220459
    5. '   ' → logprob: -18.7500057220459
    6. '	i' → logprob: -18.7500057220459
    7. '_i' → logprob: -19.3750057220459
    8. '```' → logprob: -20.0000057220459
    9. '`' → logprob: -21.8750057220459
    10. ' ' → logprob: -22.2500057220459

Token 1313: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007607697509229183
    2. 'in' → logprob: -4.882607460021973
    3. 'range' → logprob: -14.007607460021973
    4. ' ' → logprob: -15.507607460021973
    5. '=' → logprob: -15.757607460021973
    6. '   ' → logprob: -16.38260841369629
    7. 'In' → logprob: -16.75760841369629
    8. '<|end|>' → logprob: -16.88260841369629
    9. ' range' → logprob: -17.63260841369629
    10. '0' → logprob: -17.63260841369629

Token 1314: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0007099286303855479
    2. ' range' → logprob: -7.2507100105285645
    3. 'in' → logprob: -18.750709533691406
    4. '(range' → logprob: -19.875709533691406
    5. '	range' → logprob: -20.750709533691406
    6. '0' → logprob: -20.750709533691406
    7. '256' → logprob: -21.125709533691406
    8. 'format' → logprob: -21.125709533691406
    9. '
' → logprob: -21.250709533691406
    10. '```' → logprob: -21.625709533691406

Token 1315: '(' (ID: 7)
  Prédit: '256'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '256' → logprob: -0.00019984507525805384
    2. '(' → logprob: -8.875200271606445
    3. ' ' → logprob: -10.125200271606445
    4. '0' → logprob: -10.875200271606445
    5. '   ' → logprob: -14.125200271606445
    6. '1' → logprob: -16.000200271606445
    7. '255' → logprob: -16.625200271606445
    8. '(
' → logprob: -16.875200271606445
    9. '128' → logprob: -17.500200271606445
    10. ',' → logprob: -17.875200271606445

Token 1316: '256' (ID: 5780)
  Prédit: '256'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '256' → logprob: -6.869017852295656e-06
    2. '128' → logprob: -12.500006675720215
    3. '64' → logprob: -12.875006675720215
    4. '0' → logprob: -15.750006675720215
    5. ' ' → logprob: -16.12500762939453
    6. '1' → logprob: -16.50000762939453
    7. '32' → logprob: -16.50000762939453
    8. '2' → logprob: -17.50000762939453
    9. '16' → logprob: -17.62500762939453
    10. '   ' → logprob: -18.12500762939453

Token 1317: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.001849389518611133
    2. '):' → logprob: -6.376849174499512
    3. '   ' → logprob: -9.876849174499512
    4. ':
' → logprob: -10.126849174499512
    5. '):
' → logprob: -10.501849174499512
    6. ':' → logprob: -11.251849174499512
    7. '       ' → logprob: -11.876849174499512
    8. '():
' → logprob: -12.626849174499512
    9. '```' → logprob: -13.251849174499512
    10. '):

' → logprob: -13.876849174499512

Token 1318: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08016294986009598
    2. 'b' → logprob: -2.70516300201416
    3. ' b' → logprob: -4.70516300201416
    4. '   ' → logprob: -6.95516300201416
    5. '```' → logprob: -8.95516300201416
    6. '	b' → logprob: -11.33016300201416
    7. '	' → logprob: -11.45516300201416
    8. ' ' → logprob: -12.08016300201416
    9. '	   ' → logprob: -13.08016300201416
    10. '     ' → logprob: -13.20516300201416

Token 1319: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.2535327076911926
    2. ' b' → logprob: -1.5035326480865479
    3. '       ' → logprob: -6.753532886505127
    4. '   ' → logprob: -7.753532886505127
    5. '	b' → logprob: -12.753532409667969
    6. '    ' → logprob: -13.503532409667969
    7. ' ' → logprob: -14.003532409667969
    8. '     ' → logprob: -14.628532409667969
    9. '      ' → logprob: -15.253532409667969
    10. '```' → logprob: -15.628532409667969

Token 1320: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.02324850670993328
    2. '=' → logprob: -3.7732484340667725
    3. '=format' → logprob: -13.273248672485352
    4. ' =
' → logprob: -15.023248672485352
    5. 'b' → logprob: -15.648248672485352
    6. '   ' → logprob: -15.773248672485352
    7. '=
' → logprob: -16.14824867248535
    8. ' ' → logprob: -16.52324867248535
    9. ')' → logprob: -16.77324867248535
    10. ' in' → logprob: -17.14824867248535

Token 1321: ' format' (ID: 6011)
  Prédit: 'format'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'format' → logprob: -0.47407761216163635
    2. ' format' → logprob: -0.974077582359314
    3. '(format' → logprob: -14.599077224731445
    4. '.format' → logprob: -17.099077224731445
    5. '=format' → logprob: -17.099077224731445
    6. '	format' → logprob: -17.349077224731445
    7. '_format' → logprob: -19.349077224731445
    8. 'Format' → logprob: -19.599077224731445
    9. 'b' → logprob: -19.849077224731445
    10. '-format' → logprob: -20.224077224731445

Token 1322: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: 0.0
    2. ' (' → logprob: -17.125
    3. '(' → logprob: -17.25
    4. 'i' → logprob: -18.5
    5. '[i' → logprob: -19.125
    6. '(ii' → logprob: -20.25
    7. '(int' → logprob: -20.375
    8. '(
' → logprob: -20.375
    9. 'b' → logprob: -20.875
    10. '   ' → logprob: -21.5

Token 1323: ','' (ID: 6620)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.20165860652923584
    2. ','' → logprob: -1.7016586065292358
    3. '',' → logprob: -8.701658248901367
    4. ''' → logprob: -10.701658248901367
    5. ' ,' → logprob: -10.701658248901367
    6. '','' → logprob: -11.701658248901367
    7. ' ,'' → logprob: -11.826658248901367
    8. '(),'' → logprob: -12.076658248901367
    9. '[' → logprob: -12.951658248901367
    10. ',"' → logprob: -13.201658248901367

Token 1324: '08' (ID: 3062)
  Prédit: '08'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '08' → logprob: -0.47408226132392883
    2. ''' → logprob: -0.9740822315216064
    3. '008' → logprob: -13.099081993103027
    4. '"' → logprob: -13.724081993103027
    5. '8' → logprob: -14.099081993103027
    6. '`' → logprob: -14.849081993103027
    7. '{' → logprob: -15.224081993103027
    8. '081' → logprob: -16.349082946777344
    9. '
' → logprob: -16.474082946777344
    10. '```' → logprob: -16.474082946777344

Token 1325: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: 0.0
    2. ''b' → logprob: -16.75
    3. 'binary' → logprob: -19.125
    4. '```' → logprob: -20.0
    5. ' b' → logprob: -20.375
    6. '')' → logprob: -20.5
    7. '1' → logprob: -21.125
    8. '
' → logprob: -21.5
    9. 'bx' → logprob: -21.5
    10. ''' → logprob: -21.625

Token 1326: '')
' (ID: 2515)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.09448498487472534
    2. ')
' → logprob: -2.46948504447937
    3. '       ' → logprob: -5.719484806060791
    4. '')' → logprob: -6.219484806060791
    5. '')
' → logprob: -9.09448528289795
    6. '):
' → logprob: -9.21948528289795
    7. ')
' → logprob: -10.71948528289795
    8. '   ' → logprob: -11.59448528289795
    9. '")' → logprob: -12.71948528289795
    10. '```' → logprob: -13.21948528289795

Token 1327: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019257364328950644
    2. '
' → logprob: -9.125192642211914
    3. '<|end|>' → logprob: -10.625192642211914
    4. '           ' → logprob: -11.000192642211914
    5. '   ' → logprob: -11.125192642211914
    6. ' if' → logprob: -11.875192642211914
    7. 'if' → logprob: -12.000192642211914
    8. '```' → logprob: -12.125192642211914
    9. ' for' → logprob: -12.375192642211914
    10. 'for' → logprob: -13.375192642211914

Token 1328: ' if' (ID: 538)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.039822254329919815
    2. '       ' → logprob: -3.6648223400115967
    3. 'if' (adapté à ' if') → logprob: -4.539822101593018
    4. ' ok' → logprob: -6.789822101593018
    5. 'match' → logprob: -7.039822101593018
    6. 'bits' → logprob: -7.789822101593018
    7. '           ' → logprob: -8.914822578430176
    8. 'for' → logprob: -9.289822578430176
    9. '   ' → logprob: -10.414822578430176
    10. 'bit' → logprob: -10.539822578430176

Token 1329: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.22236087918281555
    2. 'match' → logprob: -2.722360849380493
    3. 'bits' → logprob: -2.972360849380493
    4. 'all' → logprob: -3.847360849380493
    5. '(bits' → logprob: -3.972360849380493
    6. '(match' → logprob: -4.722361087799072
    7. '(b' → logprob: -4.972361087799072
    8. 'count' → logprob: -4.972361087799072
    9. ' bits' → logprob: -5.472361087799072
    10. ' b' → logprob: -5.597361087799072

Token 1330: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0053347935900092125
    2. '.startswith' → logprob: -5.380334854125977
    3. 'startswith' → logprob: -8.130334854125977
    4. '<|end|>' → logprob: -8.505334854125977
    5. '[:' → logprob: -8.630334854125977
    6. '0' → logprob: -11.005334854125977
    7. '[
' → logprob: -11.255334854125977
    8. '==' → logprob: -12.505334854125977
    9. ' ' → logprob: -13.880334854125977
    10. '<|end|>' → logprob: -14.880334854125977

Token 1331: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.372294698550832e-06
    2. ':' → logprob: -12.125009536743164
    3. ' ' → logprob: -13.250009536743164
    4. '1' → logprob: -14.125009536743164
    5. '
' → logprob: -15.500009536743164
    6. 'startswith' → logprob: -15.500009536743164
    7. ' :' → logprob: -15.687509536743164
    8. '[' → logprob: -15.812509536743164
    9. '   ' → logprob: -16.125009536743164
    10. '00' → logprob: -16.562509536743164

Token 1332: ']!='' (ID: 187656)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4694501757621765
    2. ']==' → logprob: -1.2194502353668213
    3. ']=='' → logprob: -3.2194502353668213
    4. '==' → logprob: -3.3444502353668213
    5. '=='' → logprob: -5.719449996948242
    6. ' ==' → logprob: -7.969449996948242
    7. '']=='' → logprob: -9.219449996948242
    8. '[' → logprob: -9.469449996948242
    9. ''' → logprob: -9.594449996948242
    10. '']==' → logprob: -10.844449996948242

Token 1333: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.22546380758285522
    2. ''' → logprob: -1.6004638671875
    3. '"' → logprob: -10.3504638671875
    4. 'b' → logprob: -11.6004638671875
    5. ' '' → logprob: -12.2254638671875
    6. '['' → logprob: -13.1004638671875
    7. '('' → logprob: -13.4754638671875
    8. '`' → logprob: -14.4754638671875
    9. '')' → logprob: -15.9754638671875
    10. '
' → logprob: -16.1004638671875

Token 1334: ''' (ID: 6)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.04237334802746773
    2. ' and' → logprob: -3.2923734188079834
    3. 'and' → logprob: -6.042373180389404
    4. 'or' → logprob: -6.667373180389404
    5. ')' → logprob: -7.542373180389404
    6. '       ' → logprob: -10.167373657226562
    7. ':' → logprob: -10.292373657226562
    8. '')' → logprob: -10.667373657226562
    9. '<|end|>' → logprob: -10.792373657226562
    10. ':
' → logprob: -12.042373657226562

Token 1335: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.03124396689236164
    2. 'or' → logprob: -3.5312440395355225
    3. 'and' → logprob: -7.156243801116943
    4. ' and' → logprob: -7.281243801116943
    5. '       ' → logprob: -10.781244277954102
    6. '           ' → logprob: -13.406244277954102
    7. '	or' → logprob: -14.531244277954102
    8. '   ' → logprob: -14.781244277954102
    9. ''or' → logprob: -15.781244277954102
    10. ' ' → logprob: -16.1562442779541

Token 1336: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.005235648714005947
    2. ' b' → logprob: -5.25523567199707
    3. '       ' → logprob: -13.38023567199707
    4. '   ' → logprob: -15.88023567199707
    5. '    ' → logprob: -16.38023567199707
    6. '           ' → logprob: -16.50523567199707
    7. ' ' → logprob: -16.75523567199707
    8. '        ' → logprob: -17.38023567199707
    9. '      ' → logprob: -17.63023567199707
    10. '     ' → logprob: -17.63023567199707

Token 1337: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0015218837652355433
    2. '1' → logprob: -6.501522064208984
    3. 'b' → logprob: -11.001522064208984
    4. '[
' → logprob: -14.251522064208984
    5. ' ' → logprob: -14.501522064208984
    6. '
' → logprob: -14.626522064208984
    7. 'def' → logprob: -14.876522064208984
    8. ' [' → logprob: -15.376522064208984
    9. '#' → logprob: -16.126522064208984
    10. '```' → logprob: -16.251522064208984

Token 1338: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.6537622034084052e-05
    2. '0' → logprob: -10.62502670288086
    3. 'b' → logprob: -13.87502670288086
    4. ' ' → logprob: -14.00002670288086
    5. ''' → logprob: -15.37502670288086
    6. '[' → logprob: -16.37502670288086
    7. '   ' → logprob: -16.37502670288086
    8. ')' → logprob: -18.25002670288086
    9. '  ' → logprob: -18.25002670288086
    10. '10' → logprob: -19.00002670288086

Token 1339: ']!='' (ID: 187656)
  Prédit: '!=''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!='' → logprob: -0.049797818064689636
    2. ']!='' → logprob: -3.049797773361206
    3. '=='' → logprob: -7.674798011779785
    4. ']=='' → logprob: -8.299798011779785
    5. ' !=' → logprob: -8.799798011779785
    6. ']' → logprob: -8.799798011779785
    7. '!=' → logprob: -9.049798011779785
    8. ']!=' → logprob: -9.674798011779785
    9. ''' → logprob: -12.049798011779785
    10. '!="' → logprob: -13.424798011779785

Token 1340: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ''' → logprob: -16.75
    3. ' ' → logprob: -18.75
    4. '1' → logprob: -20.75
    5. '   ' → logprob: -22.125
    6. '')' → logprob: -22.125
    7. '00' → logprob: -22.25
    8. '"' → logprob: -22.5
    9. '۰' → logprob: -22.5
    10. ''s' → logprob: -22.625

Token 1341: '':
' (ID: 7669)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4742279648780823
    2. ' or' → logprob: -2.0992279052734375
    3. ':' → logprob: -2.4742279052734375
    4. '       ' → logprob: -2.7242279052734375
    5. '':
' → logprob: -2.9742279052734375
    6. ''):
' → logprob: -3.4742279052734375
    7. '   ' → logprob: -5.3492279052734375
    8. '):
' → logprob: -5.3492279052734375
    9. ''' → logprob: -5.4742279052734375
    10. 'or' → logprob: -5.7242279052734375

Token 1342: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013427851721644402
    2. '           ' → logprob: -4.388427734375
    3. ' continue' → logprob: -7.138427734375
    4. ':
' → logprob: -10.013427734375
    5. 'continue' → logprob: -10.263427734375
    6. '   ' → logprob: -11.138427734375
    7. ':' → logprob: -12.263427734375
    8. '               ' → logprob: -12.388427734375
    9. ' or' → logprob: -12.888427734375
    10. ' ' → logprob: -12.888427734375

Token 1343: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8156765103340149
    2. 'continue' (adapté à ' continue') → logprob: -0.8156765103340149
    3. '       ' → logprob: -2.56567645072937
    4. '           ' → logprob: -3.31567645072937
    5. '               ' → logprob: -6.190676689147949
    6. '	continue' → logprob: -9.56567668914795
    7. '   ' → logprob: -10.94067668914795
    8. '
' → logprob: -13.19067668914795
    9. 'contin' → logprob: -13.94067668914795
    10. '_continue' → logprob: -14.06567668914795

Token 1344: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00045843268162570894
    2. '   ' → logprob: -8.375458717346191
    3. '
' → logprob: -8.500458717346191
    4. 'if' → logprob: -12.000458717346191
    5. '<|end|>' → logprob: -12.250458717346191
    6. '           ' → logprob: -12.375458717346191
    7. '        
' → logprob: -12.750458717346191
    8. ' if' → logprob: -13.375458717346191
    9. '```' → logprob: -13.625458717346191
    10. 'for' → logprob: -13.625458717346191

Token 1345: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007636678405106068
    2. 'for' → logprob: -5.757636547088623
    3. '   ' → logprob: -5.882636547088623
    4. 'if' → logprob: -6.507636547088623
    5. ' for' → logprob: -9.257637023925781
    6. ' if' → logprob: -10.257637023925781
    7. '           ' → logprob: -11.507637023925781
    8. '```' → logprob: -11.632637023925781
    9. 'count' → logprob: -12.632637023925781
    10. 'tokens' → logprob: -12.632637023925781

Token 1346: ' ok' (ID: 4763)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.0639564990997314
    2. '       ' → logprob: -1.4389564990997314
    3. 'for' → logprob: -1.4389564990997314
    4. '   ' → logprob: -2.5639564990997314
    5. 'valid' → logprob: -2.6889564990997314
    6. 'match' → logprob: -4.063956260681152
    7. 'ok' (adapté à ' ok') → logprob: -4.313956260681152
    8. 'pb' → logprob: -6.188956260681152
    9. 'matches' → logprob: -6.438956260681152
    10. 'bits' → logprob: -8.188956260681152

Token 1347: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38751617074012756
    2. ' =' → logprob: -1.1375161409378052
    3. '=True' → logprob: -7.387516021728516
    4. '=False' → logprob: -11.012516021728516
    5. '   ' → logprob: -12.512516021728516
    6. '       ' → logprob: -12.762516021728516
    7. '           ' → logprob: -13.262516021728516
    8. '  ' → logprob: -15.512516021728516
    9. '=
' → logprob: -15.762516021728516
    10. '```' → logprob: -16.012516021728516

Token 1348: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.0206720617134124e-05
    2. ' True' → logprob: -11.50001049041748
    3. '   ' → logprob: -18.875009536743164
    4. 'False' → logprob: -19.375009536743164
    5. '(True' → logprob: -21.000009536743164
    6. '=True' → logprob: -21.750009536743164
    7. 'true' → logprob: -22.750009536743164
    8. '1' → logprob: -23.125009536743164
    9. '       ' → logprob: -23.250009536743164
    10. '  ' → logprob: -23.750009536743164

Token 1349: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03989819437265396
    2. 'for' → logprob: -3.289898157119751
    3. ' for' → logprob: -6.66489839553833
    4. '	for' → logprob: -8.289897918701172
    5. '           ' → logprob: -8.539897918701172
    6. '	' → logprob: -10.039897918701172
    7. '<|end|>' → logprob: -10.414897918701172
    8. '   ' → logprob: -10.914897918701172
    9. '```' → logprob: -11.289897918701172
    10. '               ' → logprob: -11.664897918701172

Token 1350: '       ' (ID: 309)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.39287862181663513
    2. '       ' → logprob: -1.1428786516189575
    3. ' for' → logprob: -5.267878532409668
    4. '           ' → logprob: -8.142878532409668
    5. '   ' → logprob: -8.142878532409668
    6. '	for' → logprob: -8.392878532409668
    7. '```' → logprob: -11.142878532409668
    8. '               ' → logprob: -12.642878532409668
    9. '	' → logprob: -12.642878532409668
    10. '	   ' → logprob: -12.892878532409668

Token 1351: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.05266785994172096
    2. ' for' → logprob: -3.5526678562164307
    3. '       ' → logprob: -3.8026678562164307
    4. '   ' → logprob: -8.302667617797852
    5. '           ' → logprob: -9.677667617797852
    6. '	for' → logprob: -10.427667617797852
    7. ' ' → logprob: -13.052667617797852
    8. '```' → logprob: -13.427667617797852
    9. '	   ' → logprob: -13.927667617797852
    10. '               ' → logprob: -14.677667617797852

Token 1352: ' pb' (ID: 31582)
  Prédit: 'pb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pb' → logprob: -0.0008229722734540701
    2. 'ps' → logprob: -7.625823020935059
    3. ' pb' → logprob: -8.125823020935059
    4. 'p' → logprob: -10.500823020935059
    5. 'pbs' → logprob: -11.625823020935059
    6. 'bs' → logprob: -14.000823020935059
    7. 'bit' → logprob: -14.125823020935059
    8. '(pb' → logprob: -15.000823020935059
    9. ' ps' → logprob: -16.125822067260742
    10. 'bits' → logprob: -16.250822067260742

Token 1353: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.3319124011322856e-05
    2. ',b' → logprob: -10.750022888183594
    3. 'b' → logprob: -14.125022888183594
    4. ' ,' → logprob: -14.375022888183594
    5. 's' → logprob: -15.500022888183594
    6. ',p' → logprob: -16.250022888183594
    7. ',
' → logprob: -17.625022888183594
    8. '_,' → logprob: -17.750022888183594
    9. 'in' → logprob: -17.875022888183594
    10. ',i' → logprob: -17.875022888183594

Token 1354: ' bb' (ID: 32433)
  Prédit: 'bb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.0009130131802521646
    2. ' bb' → logprob: -7.000913143157959
    3. 'b' → logprob: -13.7509126663208
    4. 'bs' → logprob: -14.8759126663208
    5. 'cb' → logprob: -16.875913619995117
    6. 'pb' → logprob: -17.500913619995117
    7. ' ' → logprob: -18.000913619995117
    8. 'bbs' → logprob: -18.125913619995117
    9. '(bb' → logprob: -18.375913619995117
    10. ' b' → logprob: -20.000913619995117

Token 1355: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06196846812963486
    2. 'in' → logprob: -2.8119685649871826
    3. ',' → logprob: -15.061968803405762
    4. '   ' → logprob: -16.186967849731445
    5. '	in' → logprob: -16.186967849731445
    6. ' ' → logprob: -16.311967849731445
    7. 'import' → logprob: -16.436967849731445
    8. 'In' → logprob: -16.811967849731445
    9. '```' → logprob: -17.436967849731445
    10. 'on' → logprob: -17.686967849731445

Token 1356: ' zip' (ID: 16216)
  Prédit: 'zip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'zip' → logprob: -0.47408145666122437
    2. ' zip' → logprob: -0.9740814566612244
    3. '(zip' → logprob: -12.349081039428711
    4. '.zip' → logprob: -17.47408103942871
    5. ' in' → logprob: -17.97408103942871
    6. '_zip' → logprob: -18.09908103942871
    7. 'x' → logprob: -18.34908103942871
    8. 'ip' → logprob: -18.72408103942871
    9. 'in' → logprob: -19.47408103942871
    10. 'pair' → logprob: -19.59908103942871

Token 1357: '(bits' (ID: 170698)
  Prédit: '(bits'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bits' → logprob: -0.00767843471840024
    2. 'bits' → logprob: -4.882678508758545
    3. ' bits' → logprob: -9.882678031921387
    4. '(bit' → logprob: -11.382678031921387
    5. '(byte' → logprob: -12.882678031921387
    6. '(pb' → logprob: -13.257678031921387
    7. '_bits' → logprob: -13.257678031921387
    8. '(bytes' → logprob: -13.382678031921387
    9. '.bits' → logprob: -14.132678031921387
    10. ' (' → logprob: -14.507678031921387

Token 1358: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.339776832144707e-05
    2. ' ,' → logprob: -9.750082969665527
    3. ',p' → logprob: -10.875082969665527
    4. ',b' → logprob: -12.500082969665527
    5. 'byte' → logprob: -14.125082969665527
    6. '   ' → logprob: -14.625082969665527
    7. ',user' → logprob: -14.750082969665527
    8. '(byte' → logprob: -15.750082969665527
    9. '       ' → logprob: -16.000083923339844
    10. ' byte' → logprob: -16.000083923339844

Token 1359: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.36875462532043457
    2. ' pb' → logprob: -1.4937546253204346
    3. 'pb' → logprob: -2.6187546253204346
    4. ' b' → logprob: -5.3687543869018555
    5. 'bb' → logprob: -5.4937543869018555
    6. ' bb' → logprob: -6.6187543869018555
    7. '[' → logprob: -7.7437543869018555
    8. '[b' → logprob: -8.243754386901855
    9. 'byte' → logprob: -9.868754386901855
    10. '(pb' → logprob: -10.368754386901855

Token 1360: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0081113176420331
    2. '):' → logprob: -4.883111476898193
    3. '           ' → logprob: -7.883111476898193
    4. '):
' → logprob: -9.883111000061035
    5. '       ' → logprob: -10.133111000061035
    6. ':
' → logprob: -11.008111000061035
    7. ':' → logprob: -11.883111000061035
    8. '():
' → logprob: -12.383111000061035
    9. '   ' → logprob: -12.883111000061035
    10. '):

' → logprob: -13.133111000061035

Token 1361: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -2.069664333248511e-05
    2. '               ' → logprob: -11.750020980834961
    3. '<|end|>' → logprob: -12.500020980834961
    4. '	       ' → logprob: -12.625020980834961
    5. 'if' → logprob: -13.500020980834961
    6. ' if' → logprob: -13.625020980834961
    7. '          ' → logprob: -14.125020980834961
    8. '            
' → logprob: -14.500020980834961
    9. '       ' → logprob: -14.625020980834961
    10. '<|end|>' → logprob: -14.875020980834961

Token 1362: ' if' (ID: 538)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.09025800973176956
    2. '               ' → logprob: -2.4652581214904785
    3. 'if' (adapté à ' if') → logprob: -7.7152581214904785
    4. '<|end|>' → logprob: -8.34025764465332
    5. '       ' → logprob: -8.46525764465332
    6. ' if' → logprob: -8.59025764465332
    7. '	       ' → logprob: -9.34025764465332
    8. '   ' → logprob: -9.46525764465332
    9. ' ' → logprob: -11.09025764465332
    10. '```' → logprob: -11.34025764465332

Token 1363: ' pb' (ID: 31582)
  Prédit: 'pb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pb' → logprob: -0.2520674169063568
    2. ' pb' → logprob: -1.5020674467086792
    3. '(pb' → logprob: -9.002067565917969
    4. '.pb' → logprob: -11.877067565917969
    5. '_pb' → logprob: -12.002067565917969
    6. 'PB' → logprob: -13.627067565917969
    7. 'Pb' → logprob: -14.752067565917969
    8. 'p' → logprob: -15.752067565917969
    9. 'not' → logprob: -16.00206756591797
    10. '
' → logprob: -16.37706756591797

Token 1364: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.5778024196624756
    2. ' !=' → logprob: -0.8278024196624756
    3. '!='' → logprob: -6.327802658081055
    4. ')!=' → logprob: -10.577802658081055
    5. ' not' → logprob: -11.577802658081055
    6. '!="' → logprob: -11.702802658081055
    7. ']!=' → logprob: -12.202802658081055
    8. '           ' → logprob: -12.452802658081055
    9. '```' → logprob: -12.452802658081055
    10. '!=-' → logprob: -12.577802658081055

Token 1365: ' '' (ID: 461)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.018534420058131218
    2. ''' → logprob: -4.018534183502197
    3. ' '' → logprob: -7.893534183502197
    4. ''s' → logprob: -12.393534660339355
    5. 'x' → logprob: -12.893534660339355
    6. ' ' → logprob: -13.268534660339355
    7. '['' → logprob: -14.768534660339355
    8. '"x' → logprob: -14.893534660339355
    9. ''user' → logprob: -15.143534660339355
    10. ''ex' → logprob: -15.143534660339355

Token 1366: 'x' (ID: 87)
  Prédit: ''x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''x' → logprob: -0.023249903693795204
    2. 'x' → logprob: -3.773249864578247
    3. '"x' → logprob: -13.023249626159668
    4. ''' → logprob: -14.023249626159668
    5. '['' → logprob: -14.398249626159668
    6. ' x' → logprob: -14.523249626159668
    7. ' '' → logprob: -16.648250579833984
    8. '[x' → logprob: -16.898250579833984
    9. ')x' → logprob: -17.148250579833984
    10. '`' → logprob: -17.398250579833984

Token 1367: ''' (ID: 6)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.12693104147911072
    2. 'and' → logprob: -2.1269309520721436
    3. '           ' → logprob: -13.501931190490723
    4. '               ' → logprob: -14.251931190490723
    5. '            ' → logprob: -15.376931190490723
    6. '<|end|>' → logprob: -15.626931190490723
    7. '	and' → logprob: -15.876931190490723
    8. '              ' → logprob: -16.751930236816406
    9. '             ' → logprob: -16.751930236816406
    10. '```' → logprob: -16.751930236816406

Token 1368: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.029751643538475037
    2. ' and' → logprob: -3.5297515392303467
    3. '           ' → logprob: -14.029751777648926
    4. '               ' → logprob: -15.529751777648926
    5. '```' → logprob: -16.65475082397461
    6. '&&' → logprob: -16.90475082397461
    7. '	and' → logprob: -17.40475082397461
    8. 'if' → logprob: -18.15475082397461
    9. '<|end|>' → logprob: -18.40475082397461
    10. '              ' → logprob: -18.52975082397461

Token 1369: ' pb' (ID: 31582)
  Prédit: 'pb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pb' → logprob: -0.0009115827269852161
    2. ' pb' → logprob: -7.000911712646484
    3. '_pb' → logprob: -17.125911712646484
    4. 'PB' → logprob: -18.250911712646484
    5. '(pb' → logprob: -18.375911712646484
    6. 'p' → logprob: -18.500911712646484
    7. '.pb' → logprob: -19.375911712646484
    8. 'pbs' → logprob: -19.375911712646484
    9. 'bb' → logprob: -19.500911712646484
    10. 'Pb' → logprob: -19.500911712646484

Token 1370: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.00523612555116415
    2. ' !=' → logprob: -5.2552361488342285
    3. ')!=' → logprob: -14.13023567199707
    4. ']!=' → logprob: -14.38023567199707
    5. '!='' → logprob: -14.50523567199707
    6. '```' → logprob: -15.63023567199707
    7. '!==' → logprob: -16.00523567199707
    8. '()!=' → logprob: -16.25523567199707
    9. '!="' → logprob: -16.38023567199707
    10. '!' → logprob: -16.38023567199707

Token 1371: ' bb' (ID: 32433)
  Prédit: 'bb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bb' → logprob: -0.0007099286303855479
    2. ' bb' → logprob: -7.2507100105285645
    3. '(bb' → logprob: -19.500709533691406
    4. 'b' → logprob: -19.625709533691406
    5. '_bb' → logprob: -20.500709533691406
    6. '.bb' → logprob: -20.875709533691406
    7. ' ' → logprob: -22.750709533691406
    8. 'bbs' → logprob: -25.125709533691406
    9. 'bbb' → logprob: -25.375709533691406
    10. '   ' → logprob: -25.875709533691406

Token 1372: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4030137360095978
    2. ':
' → logprob: -1.1530137062072754
    3. ':' → logprob: -4.153013706207275
    4. '):
' → logprob: -9.028014183044434
    5. '           ' → logprob: -10.028014183044434
    6. '                               ' → logprob: -10.403014183044434
    7. ':return' → logprob: -10.528014183044434
    8. '():
' → logprob: -11.278014183044434
    9. '```' → logprob: -11.528014183044434
    10. ':

' → logprob: -11.653014183044434

Token 1373: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00012833021173719317
    2. 'return' → logprob: -9.625128746032715
    3. '           ' → logprob: -10.875128746032715
    4. ' return' → logprob: -11.250128746032715
    5. '                   ' → logprob: -11.625128746032715
    6. '                               ' → logprob: -12.125128746032715
    7. '              ' → logprob: -12.250128746032715
    8. '```' → logprob: -12.625128746032715
    9. '                       ' → logprob: -13.250128746032715
    10. '<|end|>' → logprob: -13.375128746032715

Token 1374: ' ok' (ID: 4763)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' (adapté à ' ok') → logprob: -0.0008986006141640246
    2. '               ' → logprob: -7.375898838043213
    3. ' ok' → logprob: -8.750898361206055
    4. '           ' → logprob: -9.375898361206055
    5. '                   ' → logprob: -11.125898361206055
    6. 'okay' → logprob: -12.500898361206055
    7. '	ok' → logprob: -12.875898361206055
    8. 'break' → logprob: -12.875898361206055
    9. '
' → logprob: -13.000898361206055
    10. '   ' → logprob: -14.250898361206055

Token 1375: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006583446636795998
    2. ' =' → logprob: -5.131583213806152
    3. '=False' → logprob: -7.881583213806152
    4. '               ' → logprob: -8.506583213806152
    5. '=
' → logprob: -10.256583213806152
    6. '                   ' → logprob: -10.381583213806152
    7. '           ' → logprob: -12.506583213806152
    8. '=True' → logprob: -13.256583213806152
    9. '==' → logprob: -13.631583213806152
    10. 'False' → logprob: -14.131583213806152

Token 1376: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -1.8624639324116288e-06
    2. ' False' → logprob: -13.250001907348633
    3. '(False' → logprob: -18.875001907348633
    4. '=False' → logprob: -19.625001907348633
    5. '_false' → logprob: -22.000001907348633
    6. 'false' → logprob: -22.625001907348633
    7. 'F' → logprob: -23.000001907348633
    8. 'True' → logprob: -23.750001907348633
    9. '.False' → logprob: -24.000001907348633
    10. '
' → logprob: -24.250001907348633

Token 1377: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001696902181720361
    2. '                   ' → logprob: -9.12516975402832
    3. '<|end|>' → logprob: -10.37516975402832
    4. '```' → logprob: -12.25016975402832
    5. '                
' → logprob: -12.37516975402832
    6. '           ' → logprob: -12.62516975402832
    7. '                       ' → logprob: -12.87516975402832
    8. '			' → logprob: -12.87516975402832
    9. '
' → logprob: -13.12516975402832
    10. 'break' → logprob: -13.25016975402832

Token 1378: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00016635251813568175
    2. '                   ' → logprob: -9.500165939331055
    3. '           ' → logprob: -10.500165939331055
    4. '```' → logprob: -11.125165939331055
    5. '                
' → logprob: -11.500165939331055
    6. '              ' → logprob: -11.750165939331055
    7. '<|end|>' → logprob: -12.125165939331055
    8. '			' → logprob: -12.125165939331055
    9. 'break' → logprob: -12.625165939331055
    10. '                       ' → logprob: -12.875165939331055

Token 1379: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.47453880310058594
    2. '               ' → logprob: -0.9745388031005859
    3. ' break' → logprob: -8.224538803100586
    4. '	break' → logprob: -9.349538803100586
    5. 'return' → logprob: -10.224538803100586
    6. '			' → logprob: -10.349538803100586
    7. 'continue' → logprob: -11.224538803100586
    8. '                   ' → logprob: -11.349538803100586
    9. '```' → logprob: -11.474538803100586
    10. '           ' → logprob: -14.849538803100586

Token 1380: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0488746203482151
    2. '               ' → logprob: -3.298874616622925
    3. '   ' → logprob: -5.298874855041504
    4. '           ' → logprob: -5.298874855041504
    5. '```' → logprob: -7.548874855041504
    6. '<|end|>' → logprob: -9.673874855041504
    7. 'continue' → logprob: -9.923874855041504
    8. '    
' → logprob: -10.548874855041504
    9. '
' → logprob: -11.048874855041504
    10. 'if' → logprob: -11.423874855041504

Token 1381: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17502909898757935
    2. '           ' → logprob: -2.5500290393829346
    3. '```' → logprob: -3.3000290393829346
    4. 'if' → logprob: -3.8000290393829346
    5. '   ' → logprob: -4.050029277801514
    6. '               ' → logprob: -5.425029277801514
    7. ' if' → logprob: -6.800029277801514
    8. 'continue' → logprob: -9.175028800964355
    9. '``' → logprob: -9.800028800964355
    10. '<|end|>' → logprob: -10.050028800964355

Token 1382: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5581446886062622
    2. '       ' → logprob: -1.0581446886062622
    3. '           ' → logprob: -2.6831445693969727
    4. '   ' → logprob: -5.308144569396973
    5. '               ' → logprob: -5.933144569396973
    6. ' if' → logprob: -6.058144569396973
    7. '```' → logprob: -6.433144569396973
    8. 'continue' → logprob: -7.308144569396973
    9. '	if' → logprob: -11.058144569396973
    10. '``' → logprob: -11.308144569396973

Token 1383: ' ok' (ID: 4763)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' → logprob: -0.029801523312926292
    2. ' ok' → logprob: -3.529801607131958
    3. 'not' → logprob: -10.029801368713379
    4. ' not' → logprob: -11.904801368713379
    5. 'okay' → logprob: -15.529801368713379
    6. 'Ok' → logprob: -16.904802322387695
    7. '	ok' → logprob: -17.029802322387695
    8. ' okay' → logprob: -17.279802322387695
    9. '_ok' → logprob: -17.904802322387695
    10. '(ok' → logprob: -18.029802322387695

Token 1384: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.39128318428993225
    2. ':' → logprob: -1.2662831544876099
    3. ':
' → logprob: -3.2662832736968994
    4. '               ' → logprob: -5.89128303527832
    5. '=' → logprob: -8.14128303527832
    6. '+=' → logprob: -8.14128303527832
    7. '       ' → logprob: -8.76628303527832
    8. '```' → logprob: -9.01628303527832
    9. '==' → logprob: -10.26628303527832
    10. '                   ' → logprob: -10.51628303527832

Token 1385: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000839642365463078
    2. '               ' → logprob: -7.125839710235596
    3. 'count' → logprob: -10.375839233398438
    4. '```' → logprob: -12.875839233398438
    5. '       ' → logprob: -14.625839233398438
    6. 'continue' → logprob: -15.750839233398438
    7. '		' → logprob: -15.750839233398438
    8. '                   ' → logprob: -15.875839233398438
    9. '          ' → logprob: -16.000839233398438
    10. '	       ' → logprob: -16.500839233398438

Token 1386: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0002799279463943094
    2. '           ' → logprob: -8.250280380249023
    3. ' count' → logprob: -11.000280380249023
    4. '       ' → logprob: -14.500280380249023
    5. '	count' → logprob: -14.625280380249023
    6. '               ' → logprob: -14.875280380249023
    7. '[count' → logprob: -15.500280380249023
    8. '```' → logprob: -15.625280380249023
    9. '   ' → logprob: -16.375280380249023
    10. '_count' → logprob: -17.125280380249023

Token 1387: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0003368926409166306
    2. ' +=' → logprob: -8.000336647033691
    3. ']+=' → logprob: -13.750336647033691
    4. '+' → logprob: -15.375336647033691
    5. '```' → logprob: -15.875336647033691
    6. '=' → logprob: -17.125337600708008
    7. '   ' → logprob: -17.750337600708008
    8. '           ' → logprob: -18.500337600708008
    9. '+='' → logprob: -19.250337600708008
    10. '       ' → logprob: -19.750337600708008

Token 1388: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.0
    3. '```' → logprob: -21.5
    4. '   ' → logprob: -22.5
    5. 'count' → logprob: -22.875
    6. '
' → logprob: -23.25
    7. '１' → logprob: -23.5
    8. '+' → logprob: -24.125
    9. '۱' → logprob: -24.25
    10. '           ' → logprob: -24.375

Token 1389: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. 'count' → logprob: -18.25
    4. '```' → logprob: -19.625
    5. '   ' → logprob: -22.625
    6. '
' → logprob: -22.625
    7. '１' → logprob: -23.125
    8. '+' → logprob: -23.25
    9. '`' → logprob: -23.375
    10. '۱' → logprob: -23.625

Token 1390: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5762507319450378
    2. 'return' → logprob: -0.8262507319450378
    3. ' return' → logprob: -8.201251029968262
    4. '```' → logprob: -10.826251029968262
    5. ':return' → logprob: -11.826251029968262
    6. '
' → logprob: -12.201251029968262
    7. '	return' → logprob: -12.826251029968262
    8. '{return' → logprob: -13.576251029968262
    9. '@return' → logprob: -15.201251029968262
    10. ')return' → logprob: -15.701251029968262

Token 1391: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.47465866804122925
    2. 'return' → logprob: -0.9746586680412292
    3. ' return' → logprob: -7.474658489227295
    4. '
' → logprob: -12.099658966064453
    5. '	return' → logprob: -12.224658966064453
    6. '```' → logprob: -13.599658966064453
    7. ':return' → logprob: -13.974658966064453
    8. '  ' → logprob: -14.599658966064453
    9. '{return' → logprob: -14.599658966064453
    10. ' ' → logprob: -15.224658966064453

Token 1392: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0004892880679108202
    2. '   ' → logprob: -7.750489234924316
    3. ' return' → logprob: -9.750489234924316
    4. '```' → logprob: -15.375489234924316
    5. '	return' → logprob: -16.625490188598633
    6. ':return' → logprob: -17.375490188598633
    7. '
' → logprob: -18.125490188598633
    8. '{return' → logprob: -18.625490188598633
    9. 'eturn' → logprob: -19.250490188598633
    10. ')return' → logprob: -19.875490188598633

Token 1393: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -4.842555426876061e-06
    2. ' count' → logprob: -12.250004768371582
    3. '(count' → logprob: -26.8750057220459
    4. '[count' → logprob: -27.2500057220459
    5. '	count' → logprob: -27.3750057220459
    6. '$count' → logprob: -27.6250057220459
    7. '   ' → logprob: -28.5000057220459
    8. '=count' → logprob: -28.6250057220459
    9. '_count' → logprob: -29.0000057220459
    10. 'c' → logprob: -29.1250057220459

Token 1394: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1511366218328476
    2. '#' → logprob: -2.651136636734009
    3. '<|end|>' → logprob: -2.901136636734009
    4. ')' → logprob: -4.90113639831543
    5. '```' → logprob: -5.15113639831543
    6. '
' → logprob: -8.15113639831543
    7. '(' → logprob: -8.40113639831543
    8. ' def' → logprob: -8.77613639831543
    9. '[' → logprob: -8.77613639831543
    10. '<|end|>' → logprob: -8.90113639831543

Token 1395: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.003931764047592878
    2. '#' → logprob: -6.003931999206543
    3. '<|end|>' → logprob: -7.128931999206543
    4. '```' → logprob: -7.378931999206543
    5. '[' → logprob: -11.878931999206543
    6. ')' → logprob: -11.878931999206543
    7. ' def' → logprob: -12.253931999206543
    8. '<|end|>' → logprob: -13.128931999206543
    9. 'ndef' → logprob: -13.253931999206543
    10. '...' → logprob: -14.003931999206543

Token 1396: ' main' (ID: 2758)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.034988101571798325
    2. 'valid' → logprob: -4.784987926483154
    3. 'is' → logprob: -5.034987926483154
    4. 'validate' → logprob: -5.409987926483154
    5. 'main' → logprob: -5.409987926483154
    6. 'possible' → logprob: -5.659987926483154
    7. 'decode' → logprob: -6.159987926483154
    8. 'check' → logprob: -7.159987926483154
    9. 'utf' → logprob: -7.284987926483154
    10. 'calculate' → logprob: -7.409987926483154

Token 1397: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.0037446212954819202
    2. '(' → logprob: -5.753744602203369
    3. '():
' → logprob: -8.628745079040527
    4. '()' → logprob: -9.378745079040527
    5. '(:' → logprob: -9.503745079040527
    6. ' ():' → logprob: -10.253745079040527
    7. '()>' → logprob: -10.503745079040527
    8. '(":' → logprob: -10.878745079040527
    9. '```' → logprob: -11.003745079040527
    10. 'def' → logprob: -11.128745079040527

Token 1398: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008626633323729038
    2. ' import' → logprob: -5.758626461029053
    3. ' input' → logprob: -6.633626461029053
    4. 'import' → logprob: -6.883626461029053
    5. ' line' → logprob: -6.883626461029053
    6. '```' → logprob: -6.883626461029053
    7. ' byte' → logprob: -8.508626937866211
    8. ' def' → logprob: -8.633626937866211
    9. ' lines' → logprob: -9.008626937866211
    10. ' code' → logprob: -9.258626937866211

Token 1399: ' MOD' (ID: 32868)
  Prédit: 'pattern'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pattern' → logprob: -0.8203501105308533
    2. 'import' → logprob: -1.070350170135498
    3. 'patterns' → logprob: -1.820350170135498
    4. 'byte' → logprob: -4.195350170135498
    5. '   ' → logprob: -4.320350170135498
    6. 'test' → logprob: -4.570350170135498
    7. 'for' → logprob: -4.570350170135498
    8. '#' → logprob: -6.195350170135498
    9. 'input' → logprob: -6.445350170135498
    10. 'sample' → logprob: -7.695350170135498

Token 1400: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03198867663741112
    2. '=' → logprob: -3.5319886207580566
    3. 'ULO' → logprob: -6.656988620758057
    4. 'UL' → logprob: -7.906988620758057
    5. 'ULE' → logprob: -8.531989097595215
    6. '```' → logprob: -8.781989097595215
    7. '   ' → logprob: -9.156989097595215
    8. '_MOD' → logprob: -10.531989097595215
    9. 'IFIER' → logprob: -11.156989097595215
    10. '_' → logprob: -11.156989097595215

Token 1401: '100' (ID: 1353)
  Prédit: '100'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.0919414758682251
    2. '10' → logprob: -2.7169413566589355
    3. '256' → logprob: -4.0919413566589355
    4. '655' → logprob: -5.5919413566589355
    5. '409' → logprob: -7.8419413566589355
    6. '(' → logprob: -8.341941833496094
    7. '998' → logprob: -8.466941833496094
    8. '0' → logprob: -9.216941833496094
    9. '128' → logprob: -9.466941833496094
    10. '107' → logprob: -9.716941833496094

Token 1402: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -0.08279737085103989
    2. '9' → logprob: -3.0827972888946533
    3. 'MOD' → logprob: -4.207797527313232
    4. '```' → logprob: -4.332797527313232
    5. '   ' → logprob: -5.707797527313232
    6. '``' → logprob: -7.332797527313232
    7. '0' → logprob: -7.582797527313232
    8. '+' → logprob: -8.207797050476074
    9. '%' → logprob: -8.582797050476074
    10. '=' → logprob: -9.207797050476074

Token 1403: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006875925697386265
    2. '000' → logprob: -5.006875991821289
    3. '+' → logprob: -9.381875991821289
    4. '7' → logprob: -10.631875991821289
    5. '3' → logprob: -11.006875991821289
    6. '00' → logprob: -11.256875991821289
    7. '```' → logprob: -11.256875991821289
    8. ' +' → logprob: -13.256875991821289
    9. '9' → logprob: -13.506875991821289
    10. '=' → logprob: -14.006875991821289

Token 1404: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33976784348487854
    2. '
' → logprob: -1.4647678136825562
    3. '```' → logprob: -3.4647679328918457
    4. 'def' → logprob: -4.214767932891846
    5. ':' → logprob: -5.339767932891846
    6. 'import' → logprob: -6.464767932891846
    7. 'for' → logprob: -6.714767932891846
    8. '    
' → logprob: -6.964767932891846
    9. ' for' → logprob: -8.339767456054688
    10. ',' → logprob: -8.589767456054688

Token 1405: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.006006414070725441
    2. 'import' → logprob: -5.256006240844727
    3. '```' → logprob: -7.256006240844727
    4. 'n' → logprob: -10.381006240844727
    5. ' import' → logprob: -11.381006240844727
    6. 'pattern' → logprob: -11.631006240844727
    7. 'input' → logprob: -12.256006240844727
    8. 's' → logprob: -12.881006240844727
    9. ' n' → logprob: -13.381006240844727
    10. 'data' → logprob: -13.506006240844727

Token 1406: ' while' (ID: 2049)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.02278275229036808
    2. 'n' → logprob: -4.272782802581787
    3. '   ' → logprob: -5.272782802581787
    4. 'for' → logprob: -6.147782802581787
    5. 'pattern' → logprob: -6.897782802581787
    6. '```' → logprob: -8.897782325744629
    7. 'while' (adapté à ' while') → logprob: -9.897782325744629
    8. 'N' → logprob: -10.522782325744629
    9. 'patterns' → logprob: -10.897782325744629
    10. ' import' → logprob: -11.022782325744629

Token 1407: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.04864595830440521
    2. ' True' → logprob: -3.0486459732055664
    3. '(True' → logprob: -10.173645973205566
    4. '1' → logprob: -10.798645973205566
    5. '=True' → logprob: -17.04864501953125
    6. 'true' → logprob: -17.79864501953125
    7. '(' → logprob: -18.29864501953125
    8. ' ' → logprob: -18.79864501953125
    9. 'TRUE' → logprob: -19.17364501953125
    10. '[' → logprob: -19.67364501953125

Token 1408: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8462716937065125
    2. '       ' → logprob: -1.0962717533111572
    3. '():' → logprob: -2.0962717533111572
    4. '():
' → logprob: -2.8462717533111572
    5. ':
' → logprob: -3.0962717533111572
    6. '```' → logprob: -6.221271514892578
    7. '   ' → logprob: -6.346271514892578
    8. '(' → logprob: -6.596271514892578
    9. '(line' → logprob: -7.221271514892578
    10. ',' → logprob: -7.471271514892578

Token 1409: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.000657154421787709
    2. 'try' → logprob: -8.250657081604004
    3. 'line' → logprob: -8.500657081604004
    4. 's' → logprob: -9.000657081604004
    5. ' line' → logprob: -10.750657081604004
    6. '```' → logprob: -10.875657081604004
    7. 'pattern' → logprob: -11.125657081604004
    8. '   ' → logprob: -12.375657081604004
    9. ' try' → logprob: -12.500657081604004
    10. ' s' → logprob: -13.375657081604004

Token 1410: ' N' (ID: 478)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.5991806983947754
    2. 'line' → logprob: -0.8491806983947754
    3. '   ' → logprob: -4.099180698394775
    4. 's' → logprob: -5.349180698394775
    5. 'pattern' → logprob: -6.599180698394775
    6. '```' → logprob: -9.099180221557617
    7. ' line' → logprob: -9.474180221557617
    8. ' try' → logprob: -9.849180221557617
    9. 'byte' → logprob: -10.599180221557617
    10. 'inp' → logprob: -12.599180221557617

Token 1411: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14427004754543304
    2. ' =' → logprob: -2.0192699432373047
    3. '=input' → logprob: -6.769269943237305
    4. '=int' → logprob: -7.769269943237305
    5. ',' → logprob: -11.269269943237305
    6. '=
' → logprob: -13.144269943237305
    7. 'input' → logprob: -13.519269943237305
    8. ')' → logprob: -13.769269943237305
    9. '>' → logprob: -14.394269943237305
    10. ' ' → logprob: -14.519269943237305

Token 1412: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.01423379685729742
    2. 'input' → logprob: -4.264233589172363
    3. ' int' → logprob: -9.764233589172363
    4. ' input' → logprob: -11.264233589172363
    5. '(int' → logprob: -18.01423454284668
    6. 'len' → logprob: -19.76423454284668
    7. '=int' → logprob: -20.01423454284668
    8. '(input' → logprob: -20.26423454284668
    9. '```' → logprob: -20.26423454284668
    10. '
' → logprob: -21.38923454284668

Token 1413: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -8.041768160182983e-05
    2. 'input' → logprob: -9.750080108642578
    3. '(' → logprob: -10.750080108642578
    4. '()' → logprob: -14.625080108642578
    5. '=input' → logprob: -16.250080108642578
    6. '(
' → logprob: -17.125080108642578
    7. ' input' → logprob: -17.375080108642578
    8. ' (' → logprob: -17.500080108642578
    9. '((' → logprob: -18.375080108642578
    10. '(in' → logprob: -18.625080108642578

Token 1414: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3137326240539551
    2. '()' → logprob: -1.313732624053955
    3. '(' → logprob: -8.188732147216797
    4. '().' → logprob: -9.438732147216797
    5. '('' → logprob: -9.938732147216797
    6. ' ())' → logprob: -11.063732147216797
    7. '()>' → logprob: -11.313732147216797
    8. '()
' → logprob: -11.938732147216797
    9. '())
' → logprob: -12.063732147216797
    10. '();)' → logprob: -12.188732147216797

Token 1415: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14864377677440643
    2. ' if' → logprob: -2.023643732070923
    3. '       ' → logprob: -5.523643970489502
    4. '   ' → logprob: -6.398643970489502
    5. '	if' → logprob: -8.773643493652344
    6. 's' → logprob: -10.273643493652344
    7. 'bytes' → logprob: -10.773643493652344
    8. '<|end|>' → logprob: -11.023643493652344
    9. 'line' → logprob: -11.523643493652344
    10. 'for' → logprob: -12.023643493652344

Token 1416: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0016644697170704603
    2. ' if' → logprob: -6.626664638519287
    3. '       ' → logprob: -8.001664161682129
    4. '	if' → logprob: -13.501664161682129
    5. 'byte' → logprob: -14.126664161682129
    6. '   ' → logprob: -14.251664161682129
    7. 'line' → logprob: -15.501664161682129
    8. 'bytes' → logprob: -15.751664161682129
    9. 'for' → logprob: -16.251665115356445
    10. 'pattern' → logprob: -16.501665115356445

Token 1417: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0067154900170862675
    2. ' N' → logprob: -5.006715297698975
    3. ' not' → logprob: -16.131715774536133
    4. '0' → logprob: -20.131715774536133
    5. ' ' → logprob: -20.381715774536133
    6. '>N' → logprob: -20.506715774536133
    7. '	N' → logprob: -21.131715774536133
    8. 'n' → logprob: -21.631715774536133
    9. ' ' → logprob: -21.756715774536133
    10. 'not' → logprob: -21.756715774536133

Token 1418: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10036808997392654
    2. ' ==' → logprob: -2.350368022918701
    3. '<=' → logprob: -8.85036849975586
    4. '=' → logprob: -11.97536849975586
    5. '===' → logprob: -12.60036849975586
    6. ')==' → logprob: -12.85036849975586
    7. ' <=' → logprob: -12.85036849975586
    8. '==-' → logprob: -14.10036849975586
    9. '()==' → logprob: -14.22536849975586
    10. ')' → logprob: -14.35036849975586

Token 1419: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -21.500003814697266
    4. '۰' → logprob: -23.125003814697266
    5. '=' → logprob: -23.250003814697266
    6. '-' → logprob: -24.000003814697266
    7. '```' → logprob: -24.250003814697266
    8. '  ' → logprob: -24.375003814697266
    9. '０' → logprob: -24.875003814697266
    10. '
' → logprob: -25.000003814697266

Token 1420: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -15.625
    3. '-' → logprob: -19.0
    4. '=' → logprob: -21.875
    5. '   ' → logprob: -22.875
    6. '۰' → logprob: -24.0
    7. '```' → logprob: -24.5
    8. '０' → logprob: -25.125
    9. '
' → logprob: -25.125
    10. ' ' → logprob: -25.5

Token 1421: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25217607617378235
    2. ':
' → logprob: -1.50217604637146
    3. '       ' → logprob: -9.252176284790039
    4. '           ' → logprob: -9.627176284790039
    5. ':return' → logprob: -10.252176284790039
    6. '   ' → logprob: -10.377176284790039
    7. ':
' → logprob: -12.002176284790039
    8. '():
' → logprob: -12.002176284790039
    9. '):
' → logprob: -12.877176284790039
    10. '	break' → logprob: -14.627176284790039

Token 1422: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00031282080453820527
    2. '       ' → logprob: -8.500312805175781
    3. '		' → logprob: -10.000312805175781
    4. '	       ' → logprob: -10.875312805175781
    5. '   ' → logprob: -11.125312805175781
    6. '	   ' → logprob: -11.625312805175781
    7. '		   ' → logprob: -12.875312805175781
    8. '          ' → logprob: -13.125312805175781
    9. 'break' → logprob: -13.125312805175781
    10. '```' → logprob: -13.250312805175781

Token 1423: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.0039363945834338665
    2. 'return' → logprob: -6.253936290740967
    3. ' break' → logprob: -6.253936290740967
    4. '	break' → logprob: -10.003936767578125
    5. '       ' → logprob: -10.878936767578125
    6. '           ' → logprob: -11.128936767578125
    7. ' return' → logprob: -13.753936767578125
    8. '
' → logprob: -14.128936767578125
    9. '_break' → logprob: -14.128936767578125
    10. '```' → logprob: -14.253936767578125

Token 1424: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02886791341006756
    2. '   ' → logprob: -3.9038679599761963
    3. '```' → logprob: -5.778867721557617
    4. 'pattern' → logprob: -6.028867721557617
    5. '        
' → logprob: -7.528867721557617
    6. ' pattern' → logprob: -8.028867721557617
    7. 'line' → logprob: -8.153867721557617
    8. 'input' → logprob: -8.278867721557617
    9. 's' → logprob: -8.778867721557617
    10. '    
' → logprob: -9.028867721557617

Token 1425: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5378766059875488
    2. '       ' → logprob: -0.9128766059875488
    3. '```' → logprob: -5.037876605987549
    4. 'line' → logprob: -5.662876605987549
    5. ' line' → logprob: -6.662876605987549
    6. ' lines' → logprob: -7.537876605987549
    7. 'bytes' → logprob: -7.787876605987549
    8. 'data' → logprob: -7.787876605987549
    9. 'input' → logprob: -8.28787612915039
    10. 's' → logprob: -8.41287612915039

Token 1426: ' bytes' (ID: 11643)
  Prédit: 'byte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'byte' → logprob: -1.5798031091690063
    2. 'patterns' → logprob: -1.5798031091690063
    3. 'pattern' → logprob: -2.204802989959717
    4. '       ' → logprob: -2.579802989959717
    5. 'bytes' (adapté à ' bytes') → logprob: -2.704802989959717
    6. 'valid' → logprob: -2.829802989959717
    7. 'res' → logprob: -2.954802989959717
    8. 'total' → logprob: -3.079802989959717
    9. 'result' → logprob: -3.204802989959717
    10. 'counts' → logprob: -4.204802989959717

Token 1427: '_list' (ID: 4162)
  Prédit: '_str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -1.0297634601593018
    2. '_patterns' → logprob: -1.0297634601593018
    3. '_pattern' → logprob: -2.0297634601593018
    4. ' =' → logprob: -2.2797634601593018
    5. '_list' → logprob: -4.029763221740723
    6. '_seq' → logprob: -4.404763221740723
    7. 'patterns' → logprob: -5.654763221740723
    8. 's' → logprob: -5.654763221740723
    9. '_input' → logprob: -6.154763221740723
    10. '=[]
' → logprob: -6.404763221740723

Token 1428: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2817595899105072
    2. '=' → logprob: -1.4067596197128296
    3. '=[]' → logprob: -8.031759262084961
    4. '   ' → logprob: -9.031759262084961
    5. '[]' → logprob: -9.031759262084961
    6. '_' → logprob: -11.156759262084961
    7. '=[]
' → logprob: -11.781759262084961
    8. '[' → logprob: -12.031759262084961
    9. '()' → logprob: -13.281759262084961
    10. '    ' → logprob: -13.281759262084961

Token 1429: ' [' (ID: 723)
  Prédit: '[input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[input' → logprob: -0.004427270498126745
    2. '[' → logprob: -5.754427433013916
    3. '[]' → logprob: -6.754427433013916
    4. '[str' → logprob: -10.754426956176758
    5. '[int' → logprob: -10.754426956176758
    6. '[list' → logprob: -11.004426956176758
    7. '[data' → logprob: -12.254426956176758
    8. '[array' → logprob: -12.504426956176758
    9. '[line' → logprob: -12.754426956176758
    10. '[]
' → logprob: -12.754426956176758

Token 1430: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00020377879263833165
    2. ' input' → logprob: -8.500204086303711
    3. '   ' → logprob: -15.625204086303711
    4. '(input' → logprob: -16.62520408630371
    5. '[input' → logprob: -18.12520408630371
    6. '<input' → logprob: -18.75020408630371
    7. 'list' → logprob: -18.87520408630371
    8. '	input' → logprob: -19.37520408630371
    9. '=input' → logprob: -19.37520408630371
    10. ' ' → logprob: -19.87520408630371

Token 1431: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.014195243827998638
    2. '().' → logprob: -4.264195442199707
    3. '()]' → logprob: -11.264195442199707
    4. '())' → logprob: -11.514195442199707
    5. '()
' → logprob: -12.139195442199707
    6. '()[' → logprob: -13.389195442199707
    7. '(' → logprob: -14.264195442199707
    8. ' ()' → logprob: -14.389195442199707
    9. '()`' → logprob: -15.389195442199707
    10. 'for' → logprob: -15.639195442199707

Token 1432: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.13815516233444214
    2. 'for' → logprob: -2.638155221939087
    3. '().' → logprob: -3.138155221939087
    4. ' for' → logprob: -4.263154983520508
    5. '())' → logprob: -10.763154983520508
    6. '(N' → logprob: -10.888154983520508
    7. '.strip' → logprob: -11.638154983520508
    8. '(' → logprob: -11.638154983520508
    9. '       ' → logprob: -11.763154983520508
    10. ')' → logprob: -12.138154983520508

Token 1433: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -6.253713218029588e-05
    2. ' _' → logprob: -10.000062942504883
    3. '_range' → logprob: -11.250062942504883
    4. '_in' → logprob: -13.375062942504883
    5. '_i' → logprob: -13.625062942504883
    6. ' in' → logprob: -13.875062942504883
    7. '_
' → logprob: -16.250062942504883
    8. ' range' → logprob: -16.500062942504883
    9. '
' → logprob: -17.875062942504883
    10. '_bits' → logprob: -17.875062942504883

Token 1434: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2527294456958771
    2. ' in' → logprob: -1.5027294158935547
    3. '_' → logprob: -7.502729415893555
    4. 'range' → logprob: -8.502729415893555
    5. 'i' → logprob: -10.752729415893555
    6. ' range' → logprob: -11.002729415893555
    7. ' ' → logprob: -13.127729415893555
    8. ' _' → logprob: -13.127729415893555
    9. '_in' → logprob: -13.752729415893555
    10. '  ' → logprob: -14.127729415893555

Token 1435: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011048289015889168
    2. ' range' → logprob: -4.511048316955566
    3. '_range' → logprob: -14.511048316955566
    4. '_' → logprob: -18.51104736328125
    5. '	range' → logprob: -19.13604736328125
    6. '(range' → logprob: -19.76104736328125
    7. '.range' → logprob: -21.38604736328125
    8. '   ' → logprob: -22.26104736328125
    9. 'rang' → logprob: -22.38604736328125
    10. ' ' → logprob: -22.38604736328125

Token 1436: '(N' (ID: 10564)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.014259408228099346
    2. '(N' → logprob: -4.264259338378906
    3. ' N' → logprob: -9.389259338378906
    4. ',N' → logprob: -12.014259338378906
    5. '(' → logprob: -13.264259338378906
    6. ')' → logprob: -13.889259338378906
    7. ' (' → logprob: -14.264259338378906
    8. '0' → logprob: -14.514259338378906
    9. '       ' → logprob: -14.639259338378906
    10. '	N' → logprob: -14.639259338378906

Token 1437: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -6.392202976712724e-06
    2. ')]
' → logprob: -12.875006675720215
    3. '       ' → logprob: -13.375006675720215
    4. ']' → logprob: -13.750006675720215
    5. '   ' → logprob: -14.375006675720215
    6. ')' → logprob: -15.250006675720215
    7. ' )' → logprob: -16.5000057220459
    8. '')]' → logprob: -16.7500057220459
    9. ')]
' → logprob: -17.5000057220459
    10. '}]' → logprob: -17.6250057220459

Token 1438: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17478199303150177
    2. 'total' → logprob: -3.0497820377349854
    3. 'result' → logprob: -3.2997820377349854
    4. '   ' → logprob: -3.9247820377349854
    5. 'valid' → logprob: -4.049781799316406
    6. 'count' → logprob: -4.424781799316406
    7. 'dp' → logprob: -5.299781799316406
    8. 'counts' → logprob: -5.424781799316406
    9. '```' → logprob: -5.549781799316406
    10. 'res' → logprob: -5.549781799316406

Token 1439: ' dp' (ID: 21546)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.44870126247406006
    2. 'dp' (adapté à ' dp') → logprob: -2.6987013816833496
    3. 'total' → logprob: -2.8237013816833496
    4. 'possible' → logprob: -2.9487013816833496
    5. 'res' → logprob: -3.1987013816833496
    6. 'result' → logprob: -3.3237013816833496
    7. 'poss' → logprob: -3.4487013816833496
    8. 'count' → logprob: -3.5737013816833496
    9. 'counts' → logprob: -4.19870138168335
    10. 'ways' → logprob: -4.57370138168335

Token 1440: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0487510971724987
    2. '=' → logprob: -3.04875111579895
    3. '[' → logprob: -9.423750877380371
    4. '=[' → logprob: -9.798750877380371
    5. ' ' → logprob: -11.548750877380371
    6. '   ' → logprob: -12.173750877380371
    7. '_' → logprob: -12.423750877380371
    8. ' =[' → logprob: -12.923750877380371
    9. ']' → logprob: -13.423750877380371
    10. '```' → logprob: -13.923750877380371

Token 1441: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0025506927631795406
    2. '{' → logprob: -6.0025506019592285
    3. ' [' → logprob: -9.502551078796387
    4. '[{' → logprob: -15.127551078796387
    5. ' {' → logprob: -16.50255012512207
    6. '[n' → logprob: -17.87755012512207
    7. '{}' → logprob: -18.62755012512207
    8. '[(' → logprob: -18.75255012512207
    9. '[len' → logprob: -18.75255012512207
    10. '[-' → logprob: -18.87755012512207

Token 1442: '0' (ID: 15)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2918543815612793
    2. '0' → logprob: -1.7918543815612793
    3. '{' → logprob: -2.5418543815612793
    4. '{}' → logprob: -5.166854381561279
    5. '1' → logprob: -6.291854381561279
    6. 'default' → logprob: -10.166854858398438
    7. 'dict' → logprob: -10.166854858398438
    8. '(' → logprob: -10.291854858398438
    9. '{}
' → logprob: -10.291854858398438
    10. ' [' → logprob: -11.041854858398438

Token 1443: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.04162635654211044
    2. ']*(' → logprob: -3.416626453399658
    3. '(N' → logprob: -5.416626453399658
    4. ']*' → logprob: -5.791626453399658
    5. '*(' → logprob: -9.1666259765625
    6. '[N' → logprob: -9.9166259765625
    7. 'for' → logprob: -9.9166259765625
    8. ' ]' → logprob: -9.9166259765625
    9. '(' → logprob: -10.0416259765625
    10. ']+' → logprob: -10.2916259765625

Token 1444: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -2.5776860184123507e-06
    2. ' N' → logprob: -13.00000286102295
    3. '(N' → logprob: -15.12500286102295
    4. '(' → logprob: -17.125001907348633
    5. '2' → logprob: -19.875001907348633
    6. '1' → logprob: -20.875001907348633
    7. '{' → logprob: -20.875001907348633
    8. '[N' → logprob: -21.000001907348633
    9. 'len' → logprob: -21.125001907348633
    10. '   ' → logprob: -21.125001907348633

Token 1445: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -7.896309739408025e-07
    2. ' +' → logprob: -14.250000953674316
    3. '+
' → logprob: -16.25
    4. '```' → logprob: -18.5
    5. '[' → logprob: -19.0
    6. '
' → logprob: -19.125
    7. '+[' → logprob: -19.625
    8. ')' → logprob: -20.75
    9. '＋' → logprob: -20.75
    10. ')+' → logprob: -21.125

Token 1446: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. '2' → logprob: -14.000000953674316
    3. ' ' → logprob: -17.125
    4. '   ' → logprob: -18.375
    5. '```' → logprob: -18.375
    6. '
' → logprob: -18.625
    7. '１' → logprob: -19.125
    8. '``' → logprob: -19.875
    9. '=' → logprob: -20.375
    10. '+' → logprob: -20.8125

Token 1447: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.061983488500118256
    2. ')' → logprob: -2.811983585357666
    3. ')
' → logprob: -11.561983108520508
    4. '   ' → logprob: -13.311983108520508
    5. ']
' → logprob: -13.686983108520508
    6. '
' → logprob: -14.061983108520508
    7. '```' → logprob: -14.436983108520508
    8. '       ' → logprob: -14.561983108520508
    9. ')`
' → logprob: -14.561983108520508
    10. ']' → logprob: -14.811983108520508

Token 1448: '       ' (ID: 309)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0222526416182518
    2. '	dp' → logprob: -4.147252559661865
    3. ' dp' → logprob: -5.147252559661865
    4. '```' → logprob: -8.272253036499023
    5. '       ' → logprob: -9.897253036499023
    6. '_dp' → logprob: -10.397253036499023
    7. '   ' → logprob: -10.397253036499023
    8. '(dp' → logprob: -11.147253036499023
    9. '[' → logprob: -14.147253036499023
    10. '``' → logprob: -14.522253036499023

Token 1449: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -1.723973582556937e-05
    2. ' dp' → logprob: -11.000017166137695
    3. '	dp' → logprob: -15.000017166137695
    4. '```' → logprob: -16.000017166137695
    5. '_dp' → logprob: -17.250017166137695
    6. '   ' → logprob: -19.000017166137695
    7. '(dp' → logprob: -19.125017166137695
    8. '
' → logprob: -20.125017166137695
    9. '       ' → logprob: -21.000017166137695
    10. '.dp' → logprob: -21.250017166137695

Token 1450: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -5.676981345459353e-06
    2. '```' → logprob: -12.500005722045898
    3. '\[' → logprob: -14.000005722045898
    4. '=' → logprob: -14.375005722045898
    5. '=[' → logprob: -16.0000057220459
    6. ' [' → logprob: -16.1250057220459
    7. '[
' → logprob: -16.1250057220459
    8. ' =' → logprob: -17.0000057220459
    9. '<|end|>' → logprob: -17.5000057220459
    10. '   ' → logprob: -17.5000057220459

Token 1451: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.5577775128767826e-06
    2. '1' → logprob: -13.000005722045898
    3. ' ' → logprob: -13.750005722045898
    4. 'N' → logprob: -14.250005722045898
    5. '[' → logprob: -14.750005722045898
    6. '```' → logprob: -14.750005722045898
    7. ']' → logprob: -14.875005722045898
    8. '-' → logprob: -15.500005722045898
    9. ')' → logprob: -16.3750057220459
    10. '][' → logprob: -17.1250057220459

Token 1452: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.003051742911338806
    2. ']=' → logprob: -5.8780517578125
    3. ' ]' → logprob: -8.7530517578125
    4. '=' → logprob: -9.3780517578125
    5. ']+=' → logprob: -13.0030517578125
    6. ' =' → logprob: -14.2530517578125
    7. '[' → logprob: -14.8780517578125
    8. ']
' → logprob: -15.0030517578125
    9. ')' → logprob: -15.2530517578125
    10. '   ' → logprob: -16.2530517578125

Token 1453: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0067154900170862675
    2. ' =' → logprob: -5.006715297698975
    3. '=
' → logprob: -16.631715774536133
    4. '.=' → logprob: -18.381715774536133
    5. '[' → logprob: -18.631715774536133
    6. '=True' → logprob: -19.006715774536133
    7. ']=' → logprob: -19.506715774536133
    8. ' =
' → logprob: -20.006715774536133
    9. '+=' → logprob: -20.131715774536133
    10. '＝' → logprob: -20.381715774536133

Token 1454: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '{' → logprob: -20.125
    3. '[' → logprob: -21.875
    4. ' ' → logprob: -21.875
    5. '۱' → logprob: -24.0
    6. '```' → logprob: -24.125
    7. '0' → logprob: -24.375
    8. '(' → logprob: -25.0
    9. '１' → logprob: -25.0
    10. '   ' → logprob: -25.25

Token 1455: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. '{' → logprob: -17.5
    3. '[' → logprob: -18.625
    4. '(' → logprob: -21.375
    5. '۱' → logprob: -24.125
    6. '１' → logprob: -24.25
    7. '\' → logprob: -24.625
    8. '0' → logprob: -24.625
    9. '`' → logprob: -24.75
    10. '```' → logprob: -24.75

Token 1456: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.1500033736228943
    2. 'for' → logprob: -2.025003433227539
    3. '   ' → logprob: -5.275003433227539
    4. '	for' → logprob: -6.275003433227539
    5. '<|end|>' → logprob: -8.650003433227539
    6. '```' → logprob: -9.650003433227539
    7. '       ' → logprob: -10.650003433227539
    8. '
' → logprob: -11.025003433227539
    9. ' ' → logprob: -12.150003433227539
    10. 'import' → logprob: -12.900003433227539

Token 1457: '       ' (ID: 309)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.055194925516843796
    2. 'for' → logprob: -3.055194854736328
    3. '   ' → logprob: -5.305194854736328
    4. '```' → logprob: -6.930194854736328
    5. '	for' → logprob: -7.680194854736328
    6. '<|end|>' → logprob: -8.930194854736328
    7. '
' → logprob: -10.805194854736328
    8. ' ' → logprob: -11.680194854736328
    9. '``' → logprob: -12.055194854736328
    10. '    
' → logprob: -12.930194854736328

Token 1458: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5761590600013733
    2. ' for' → logprob: -0.8261590600013733
    3. '   ' → logprob: -9.201159477233887
    4. '	for' → logprob: -9.576159477233887
    5. '```' → logprob: -9.951159477233887
    6. '
' → logprob: -13.826159477233887
    7. '``' → logprob: -15.076159477233887
    8. ' ' → logprob: -15.826159477233887
    9. 'For' → logprob: -16.57615852355957
    10. '`' → logprob: -16.95115852355957

Token 1459: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00016587569552939385
    2. ' i' → logprob: -8.750165939331055
    3. 'pos' → logprob: -12.000165939331055
    4. 'idx' → logprob: -13.875165939331055
    5. '   ' → logprob: -15.625165939331055
    6. '	i' → logprob: -16.875165939331055
    7. 'index' → logprob: -17.250165939331055
    8. '_i' → logprob: -17.625165939331055
    9. ' pos' → logprob: -18.750165939331055
    10. ' ' → logprob: -19.125165939331055

Token 1460: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016102880239486694
    2. 'in' → logprob: -4.1411027908325195
    3. '   ' → logprob: -10.26610279083252
    4. '	in' → logprob: -11.89110279083252
    5. ' ' → logprob: -12.39110279083252
    6. '1' → logprob: -12.89110279083252
    7. ',' → logprob: -12.89110279083252
    8. ')' → logprob: -13.01610279083252
    9. '```' → logprob: -13.01610279083252
    10. '[' → logprob: -13.51610279083252

Token 1461: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.014165864326059818
    2. ' range' → logprob: -4.264165878295898
    3. '1' → logprob: -13.139165878295898
    4. 'in' → logprob: -15.514165878295898
    5. '0' → logprob: -16.1391658782959
    6. '   ' → logprob: -16.3891658782959
    7. ' ' → logprob: -16.3891658782959
    8. ' in' → logprob: -17.3891658782959
    9. '(range' → logprob: -18.0141658782959
    10. '  ' → logprob: -19.5141658782959

Token 1462: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.20510059595108032
    2. '(' → logprob: -1.7051005363464355
    3. 'N' → logprob: -6.2051005363464355
    4. '1' → logprob: -6.4551005363464355
    5. '(i' → logprob: -9.580101013183594
    6. '   ' → logprob: -12.080101013183594
    7. 'i' → logprob: -12.580101013183594
    8. ',' → logprob: -13.205101013183594
    9. '(n' → logprob: -13.330101013183594
    10. ' N' → logprob: -13.330101013183594

Token 1463: '):
' (ID: 1883)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3279126286506653
    2. '):
' → logprob: -1.4529125690460205
    3. '):' → logprob: -3.4529125690460205
    4. '-' → logprob: -4.5779128074646
    5. '   ' → logprob: -6.2029128074646
    6. ')' → logprob: -7.4529128074646
    7. ',' → logprob: -8.077912330627441
    8. ' +' → logprob: -8.077912330627441
    9. '       ' → logprob: -8.827912330627441
    10. '```' → logprob: -9.577912330627441

Token 1464: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12154923379421234
    2. ' for' → logprob: -2.246549129486084
    3. 'for' → logprob: -5.121549129486084
    4. '   ' → logprob: -6.371549129486084
    5. ' if' → logprob: -7.996549129486084
    6. '           ' → logprob: -8.871549606323242
    7. '	   ' → logprob: -9.121549606323242
    8. 'if' → logprob: -9.871549606323242
    9. ' possible' → logprob: -9.871549606323242
    10. 'tokens' → logprob: -10.121549606323242

Token 1465: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0009888652712106705
    2. 'res' → logprob: -7.625988960266113
    3. 'length' → logprob: -8.750988960266113
    4. 'if' (adapté à ' if') → logprob: -9.250988960266113
    5. 'possible' → logprob: -9.250988960266113
    6. ' for' → logprob: -9.375988960266113
    7. '   ' → logprob: -11.125988960266113
    8. 'results' → logprob: -11.250988960266113
    9. 'valid' → logprob: -11.875988960266113
    10. '       ' → logprob: -12.000988960266113

Token 1466: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.047560643404722214
    2. 'i' → logprob: -3.672560691833496
    3. ' dp' → logprob: -5.172560691833496
    4. '0' → logprob: -5.672560691833496
    5. 'not' → logprob: -5.672560691833496
    6. ' not' → logprob: -6.047560691833496
    7. 'len' → logprob: -6.047560691833496
    8. 'bytes' → logprob: -6.172560691833496
    9. ' i' → logprob: -7.422560691833496
    10. 'False' → logprob: -8.422560691833496

Token 1467: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.791440293658525e-05
    2. '[' → logprob: -9.500078201293945
    3. ' [' → logprob: -13.125078201293945
    4. '[
' → logprob: -15.000078201293945
    5. '```' → logprob: -15.125078201293945
    6. 'i' → logprob: -15.625078201293945
    7. '[j' → logprob: -17.000078201293945
    8. '
' → logprob: -17.375078201293945
    9. '[I' → logprob: -17.750078201293945
    10. '   ' → logprob: -17.875078201293945

Token 1468: ']' (ID: 60)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7483162879943848
    2. ']' → logprob: -1.1233162879943848
    3. ']==' → logprob: -1.8733162879943848
    4. ']>' → logprob: -3.7483162879943848
    5. '==' → logprob: -3.9983162879943848
    6. ' ==' → logprob: -5.623316287994385
    7. ' >' → logprob: -6.623316287994385
    8. ']!=' → logprob: -7.623316287994385
    9. '!=' → logprob: -8.623315811157227
    10. '   ' → logprob: -9.123315811157227

Token 1469: ' ==' (ID: 951)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.5104796886444092
    2. '==' → logprob: -1.0104796886444092
    3. ' ==' → logprob: -3.510479688644409
    4. '!=' → logprob: -5.760479927062988
    5. ' >' → logprob: -6.135479927062988
    6. ' !=' → logprob: -8.135479927062988
    7. '=' → logprob: -8.885479927062988
    8. ']==' → logprob: -10.010479927062988
    9. ')==' → logprob: -11.010479927062988
    10. ')>' → logprob: -11.635479927062988

Token 1470: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.246537173457909e-06
    2. ' ' → logprob: -12.375003814697266
    3. '   ' → logprob: -20.000003814697266
    4. '۰' → logprob: -20.750003814697266
    5. '```' → logprob: -21.000003814697266
    6. '>' → logprob: -21.875003814697266
    7. '０' → logprob: -23.000003814697266
    8. '=' → logprob: -23.000003814697266
    9. '           ' → logprob: -23.125003814697266
    10. '০' → logprob: -23.250003814697266

Token 1471: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -20.375001907348633
    4. '1' → logprob: -22.125001907348633
    5. '>' → logprob: -22.375001907348633
    6. '۰' → logprob: -22.375001907348633
    7. '```' → logprob: -22.625001907348633
    8. 'not' → logprob: -22.875001907348633
    9. '  ' → logprob: -22.875001907348633
    10. '  ' → logprob: -23.125001907348633

Token 1472: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7094600796699524
    2. ':' → logprob: -1.2094600200653076
    3. ':
' → logprob: -1.5844600200653076
    4. '           ' → logprob: -6.709460258483887
    5. ' continue' → logprob: -7.084460258483887
    6. 'continue' → logprob: -7.209460258483887
    7. ':return' → logprob: -7.459460258483887
    8. '                       ' → logprob: -7.709460258483887
    9. '                   ' → logprob: -9.084460258483887
    10. ' or' → logprob: -9.334460258483887

Token 1473: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013002924621105194
    2. ' continue' → logprob: -4.763002872467041
    3. '           ' → logprob: -6.013002872467041
    4. 'continue' → logprob: -8.1380033493042
    5. '                       ' → logprob: -8.5130033493042
    6. '<|end|>' → logprob: -8.6380033493042
    7. ' and' → logprob: -8.7630033493042
    8. ',' → logprob: -8.7630033493042
    9. ':
' → logprob: -8.7630033493042
    10. '       ' → logprob: -9.1380033493042

Token 1474: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.25613051652908325
    2. '               ' → logprob: -1.5061304569244385
    3. ' continue' → logprob: -5.506130695343018
    4. '   ' → logprob: -10.25613021850586
    5. '                   ' → logprob: -10.38113021850586
    6. '           ' → logprob: -10.75613021850586
    7. '	continue' → logprob: -11.00613021850586
    8. '```' → logprob: -11.25613021850586
    9. 'i' → logprob: -12.50613021850586
    10. '       ' → logprob: -12.75613021850586

Token 1475: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03953513130545616
    2. '           ' → logprob: -4.039535045623779
    3. '<|end|>' → logprob: -4.789535045623779
    4. '
' → logprob: -5.539535045623779
    5. '   ' → logprob: -6.039535045623779
    6. '```' → logprob: -6.164535045623779
    7. ' 
' → logprob: -7.039535045623779
    8. '        
' → logprob: -7.289535045623779
    9. ' for' → logprob: -7.664535045623779
    10. '    
' → logprob: -8.164535522460938

Token 1476: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5741761326789856
    2. ' for' → logprob: -1.1991760730743408
    3. 'for' → logprob: -2.824176073074341
    4. '   ' → logprob: -3.074176073074341
    5. '```' → logprob: -4.07417631149292
    6. '
' → logprob: -5.44917631149292
    7. ' if' → logprob: -5.94917631149292
    8. '           ' → logprob: -6.19917631149292
    9. 'if' → logprob: -7.07417631149292
    10. '        
' → logprob: -7.69917631149292

Token 1477: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.025208204984664917
    2. ' for' → logprob: -4.400207996368408
    3. '           ' → logprob: -4.775207996368408
    4. '       ' → logprob: -6.775207996368408
    5. 'if' → logprob: -7.275207996368408
    6. '   ' → logprob: -7.275207996368408
    7. 'possible' → logprob: -7.400207996368408
    8. 'length' → logprob: -7.900207996368408
    9. 'res' → logprob: -8.650208473205566
    10. 'patterns' → logprob: -8.900208473205566

Token 1478: ' check' (ID: 2371)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.028921637684106827
    2. 'length' → logprob: -4.528921604156494
    3. 'possible' → logprob: -5.278921604156494
    4. '       ' → logprob: -5.528921604156494
    5. ' for' → logprob: -5.903921604156494
    6. 'poss' → logprob: -6.778921604156494
    7. 'valid' → logprob: -6.903921604156494
    8. 'types' → logprob: -7.028921604156494
    9. 'res' → logprob: -7.153921604156494
    10. 'patterns' → logprob: -7.778921604156494

Token 1479: ' first' (ID: 1577)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.48231205344200134
    2. 'for' → logprob: -1.9823120832443237
    3. 'l' → logprob: -2.607311964035034
    4. 'j' → logprob: -3.482311964035034
    5. 'res' → logprob: -3.982311964035034
    6. 'byte' → logprob: -4.107312202453613
    7. 'valid' → logprob: -4.232312202453613
    8. 'first' → logprob: -4.357312202453613
    9. ' length' → logprob: -4.357312202453613
    10. 'possible' → logprob: -4.482312202453613

Token 1480: ' byte' (ID: 9239)
  Prédit: '_bytes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_bytes' → logprob: -0.5348390340805054
    2. '_byte' → logprob: -1.2848390340805054
    3. 'bytes' → logprob: -2.659839153289795
    4. 'byte' → logprob: -2.784839153289795
    5. 'if' → logprob: -6.284839153289795
    6. ' bytes' → logprob: -6.784839153289795
    7. '_bits' → logprob: -8.159838676452637
    8. '
' → logprob: -8.409838676452637
    9. ' =' → logprob: -8.659838676452637
    10. 'Byte' → logprob: -8.659838676452637

Token 1481: ' possibilities' (ID: 31061)
  Prédit: 'patterns'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'patterns' → logprob: -1.2329150438308716
    2. 'for' → logprob: -2.107914924621582
    3. '_bits' → logprob: -2.482914924621582
    4. '_patterns' → logprob: -2.607914924621582
    5. '_byte' → logprob: -2.732914924621582
    6. 'bits' → logprob: -2.857914924621582
    7. '   ' → logprob: -3.107914924621582
    8. 'pattern' → logprob: -3.232914924621582
    9. '_bytes' → logprob: -3.607914924621582
    10. 'byte' → logprob: -3.607914924621582

Token 1482: '
' (ID: 198)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.9586300253868103
    2. '           ' → logprob: -1.208630084991455
    3. 'for' → logprob: -2.208630084991455
    4. 'types' → logprob: -3.083630084991455
    5. ' for' → logprob: -3.208630084991455
    6. ' res' → logprob: -3.583630084991455
    7. ',' → logprob: -4.083630084991455
    8. 'results' → logprob: -4.083630084991455
    9. 'pos' → logprob: -4.333630084991455
    10. 'patterns' → logprob: -4.833630084991455

Token 1483: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10485029220581055
    2. 'res' → logprob: -3.7298502922058105
    3. 'poss' → logprob: -3.7298502922058105
    4. 'valid' → logprob: -4.3548502922058105
    5. 'possible' → logprob: -4.3548502922058105
    6. 'for' → logprob: -4.6048502922058105
    7. 'types' → logprob: -5.3548502922058105
    8. 'pos' → logprob: -5.7298502922058105
    9. '       ' → logprob: -6.3548502922058105
    10. 'first' → logprob: -6.8548502922058105

Token 1484: ' first' (ID: 1577)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'valid' → logprob: -1.5364998579025269
    2. 'poss' → logprob: -1.5364998579025269
    3. 'types' → logprob: -1.6614998579025269
    4. 'for' → logprob: -2.1614999771118164
    5. 'res' → logprob: -2.4114999771118164
    6. '           ' → logprob: -2.4114999771118164
    7. 'possible' → logprob: -3.5364999771118164
    8. 'first' (adapté à ' first') → logprob: -4.036499977111816
    9. 'length' → logprob: -4.536499977111816
    10. 'pos' → logprob: -4.786499977111816

Token 1485: '_byte' (ID: 48405)
  Prédit: '_bytes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bytes' → logprob: -0.19411683082580566
    2. '_byte' → logprob: -1.9441168308258057
    3. '_pos' → logprob: -3.4441168308258057
    4. '_possible' → logprob: -8.069116592407227
    5. '_types' → logprob: -8.694116592407227
    6. '_bits' → logprob: -9.069116592407227
    7. '_lengths' → logprob: -9.319116592407227
    8. 'bytes' → logprob: -9.319116592407227
    9. 's' → logprob: -9.569116592407227
    10. '_options' → logprob: -9.694116592407227

Token 1486: ' =' (ID: 314)
  Prédit: '_pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_pos' → logprob: -0.304452508687973
    2. 's' → logprob: -1.5544525384902954
    3. '_types' → logprob: -3.554452419281006
    4. ' =' → logprob: -4.179452419281006
    5. '_bytes' → logprob: -5.804452419281006
    6. '_options' → logprob: -6.179452419281006
    7. '_patterns' → logprob: -7.804452419281006
    8. '_res' → logprob: -7.929452419281006
    9. 'poss' → logprob: -8.054452896118164
    10. '=' → logprob: -8.679452896118164

Token 1487: ' bytes' (ID: 11643)
  Prédit: 'bytes'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bytes' → logprob: -0.0040785204619169235
    2. ' bytes' → logprob: -5.504078388214111
    3. '   ' → logprob: -16.879077911376953
    4. '(bytes' → logprob: -16.879077911376953
    5. 'byte' → logprob: -17.254077911376953
    6. '	bytes' → logprob: -18.754077911376953
    7. '       ' → logprob: -19.379077911376953
    8. '           ' → logprob: -19.629077911376953
    9. 'b' → logprob: -20.004077911376953
    10. 'bits' → logprob: -20.379077911376953

Token 1488: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.062264107167720795
    2. '_str' → logprob: -2.8122642040252686
    3. '[i' → logprob: -8.312264442443848
    4. 'list' → logprob: -11.437264442443848
    5. 'str' → logprob: -11.437264442443848
    6. 's' → logprob: -11.812264442443848
    7. '_string' → logprob: -12.062264442443848
    8. '```' → logprob: -12.437264442443848
    9. 'i' → logprob: -12.812264442443848
    10. '`' → logprob: -13.312264442443848

Token 1489: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.7432603272027336e-06
    2. '[' → logprob: -14.500001907348633
    3. '```' → logprob: -14.875001907348633
    4. ' [' → logprob: -15.625001907348633
    5. '[
' → logprob: -16.125001907348633
    6. '
' → logprob: -16.125001907348633
    7. '\[' → logprob: -16.250001907348633
    8. ')[' → logprob: -16.500001907348633
    9. '   ' → logprob: -17.000001907348633
    10. '(i' → logprob: -17.625001907348633

Token 1490: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7937443256378174
    2. ']' → logprob: -1.4187443256378174
    3. ')
' → logprob: -1.7937443256378174
    4. ']
' → logprob: -2.1687443256378174
    5. '[i' → logprob: -4.043744087219238
    6. '   ' → logprob: -5.543744087219238
    7. '])' → logprob: -6.168744087219238
    8. '       ' → logprob: -7.168744087219238
    9. '           ' → logprob: -8.543744087219238
    10. '[' → logprob: -8.668744087219238

Token 1491: '           ' (ID: 352)
  Prédit: 'poss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'poss' → logprob: -1.5864278078079224
    2. ' for' → logprob: -1.7114278078079224
    3. 'for' → logprob: -1.9614278078079224
    4. 'types' → logprob: -2.211427688598633
    5. 'possible' → logprob: -2.461427688598633
    6. 'valid' → logprob: -2.461427688598633
    7. 'patterns' → logprob: -2.961427688598633
    8. ' possibilities' → logprob: -3.336427688598633
    9. 'res' → logprob: -3.836427688598633
    10. '   ' → logprob: -4.211427688598633

Token 1492: ' start' (ID: 1604)
  Prédit: 'poss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'poss' → logprob: -0.9684454798698425
    2. 'for' → logprob: -1.5934455394744873
    3. 'types' → logprob: -1.9684455394744873
    4. 'valid' → logprob: -2.2184455394744873
    5. 'res' → logprob: -2.7184455394744873
    6. 'length' → logprob: -2.8434455394744873
    7. 'options' → logprob: -3.7184455394744873
    8. 'possible' → logprob: -4.593445301055908
    9. 'results' → logprob: -5.218445301055908
    10. 'pos' → logprob: -6.593445301055908

Token 1493: '_bytes' (ID: 28036)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.9117406010627747
    2. '_types' → logprob: -1.0367405414581299
    3. '_pos' → logprob: -1.5367405414581299
    4. '_bytes' → logprob: -3.91174054145813
    5. '_options' → logprob: -6.036740779876709
    6. '_positions' → logprob: -6.911740779876709
    7. '_byte' → logprob: -6.911740779876709
    8. 'ings' → logprob: -7.036740779876709
    9. 'ypes' → logprob: -7.286740779876709
    10. '_candidates' → logprob: -7.786740779876709

Token 1494: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.539647102355957
    2. '_pos' → logprob: -1.414647102355957
    3. '=' → logprob: -2.414647102355957
    4. 's' → logprob: -2.664647102355957
    5. '_types' → logprob: -4.414647102355957
    6. '_' → logprob: -7.539647102355957
    7. '_counts' → logprob: -7.789647102355957
    8. '_possible' → logprob: -7.789647102355957
    9. 'poss' → logprob: -8.039647102355957
    10. 'ypes' → logprob: -8.539647102355957

Token 1495: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.001170225441455841
    2. ' count' → logprob: -6.7511701583862305
    3. '[count' → logprob: -19.251171112060547
    4. '   ' → logprob: -20.626171112060547
    5. '(count' → logprob: -20.626171112060547
    6. '	count' → logprob: -21.001171112060547
    7. 'code' → logprob: -21.251171112060547
    8. '.count' → logprob: -21.501171112060547
    9. '```' → logprob: -21.501171112060547
    10. 'counts' → logprob: -22.001171112060547

Token 1496: '_valid' (ID: 23321)
  Prédit: '_valid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_valid' → logprob: -1.9266199160483666e-05
    2. 'valid' → logprob: -10.875019073486328
    3. 'Valid' → logprob: -15.125019073486328
    4. '(valid' → logprob: -17.875019073486328
    5. '```' → logprob: -18.250019073486328
    6. '\' → logprob: -18.250019073486328
    7. ' valid' → logprob: -18.500019073486328
    8. '_val' → logprob: -18.750019073486328
    9. '_possible' → logprob: -19.500019073486328
    10. 'a' → logprob: -19.875019073486328

Token 1497: '_first' (ID: 29347)
  Prédit: '_first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_first' → logprob: -1.5451681974809617e-05
    2. 'first' → logprob: -11.250015258789062
    3. 'First' → logprob: -13.125015258789062
    4. '```' → logprob: -15.500015258789062
    5. '(first' → logprob: -17.125015258789062
    6. '_valid' → logprob: -17.250015258789062
    7. '_FIRST' → logprob: -17.625015258789062
    8. '_possible' → logprob: -18.375015258789062
    9. '_follow' → logprob: -18.750015258789062
    10. '(' → logprob: -18.875015258789062

Token 1498: '_bytes' (ID: 28036)
  Prédit: '_bytes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bytes' → logprob: -6.704273118884885e-07
    2. 'bytes' → logprob: -15.000000953674316
    3. '_byte' → logprob: -15.875000953674316
    4. '_chars' → logprob: -16.5
    5. '_bits' → logprob: -16.5
    6. 'Bytes' → logprob: -17.375
    7. '```' → logprob: -17.75
    8. '_' → logprob: -18.375
    9. ' bytes' → logprob: -19.125
    10. '_BYTES' → logprob: -19.375

Token 1499: '(first' (ID: 31998)
  Prédit: '(first'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(first' → logprob: -1.0445127372804563e-05
    2. '(' → logprob: -11.87501049041748
    3. ' (' → logprob: -13.12501049041748
    4. '(byte' → logprob: -14.50001049041748
    5. '[first' → logprob: -14.62501049041748
    6. '(bytes' → logprob: -16.000009536743164
    7. 'first' → logprob: -16.500009536743164
    8. ' first' → logprob: -16.875009536743164
    9. '(full' → logprob: -17.250009536743164
    10. '```' → logprob: -17.750009536743164

Token 1500: '_byte' (ID: 48405)
  Prédit: '_byte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_byte' → logprob: -0.07381777465343475
    2. '_bytes' → logprob: -3.073817729949951
    3. '[i' → logprob: -3.948817729949951
    4. 'byte' → logprob: -5.573817729949951
    5. 'first' → logprob: -7.573817729949951
    6. ')' → logprob: -8.19881820678711
    7. '[first' → logprob: -8.44881820678711
    8. '_first' → logprob: -8.57381820678711
    9. '(i' → logprob: -8.57381820678711
    10. ')_' → logprob: -9.32381820678711

Token 1501: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019050815608352423
    2. ')
' → logprob: -6.6269049644470215
    3. '           ' → logprob: -7.5019049644470215
    4. '   ' → logprob: -11.50190544128418
    5. '(byte' → logprob: -12.25190544128418
    6. '       ' → logprob: -12.37690544128418
    7. '          ' → logprob: -13.50190544128418
    8. '(bytes' → logprob: -14.12690544128418
    9. ',' → logprob: -14.25190544128418
    10. '(first' → logprob: -14.25190544128418

Token 1502: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014904254116117954
    2. ' for' → logprob: -4.764904022216797
    3. '       ' → logprob: -5.514904022216797
    4. 'for' → logprob: -6.389904022216797
    5. '```' → logprob: -8.514904022216797
    6. '   ' → logprob: -9.139904022216797
    7. '<|end|>' → logprob: -9.139904022216797
    8. '	       ' → logprob: -10.264904022216797
    9. '		' → logprob: -10.514904022216797
    10. '	   ' → logprob: -11.139904022216797

Token 1503: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08595827966928482
    2. '           ' → logprob: -2.585958242416382
    3. ' for' → logprob: -4.960958480834961
    4. '       ' → logprob: -10.960958480834961
    5. '```' → logprob: -11.085958480834961
    6. '   ' → logprob: -12.835958480834961
    7. '            
' → logprob: -14.335958480834961
    8. '	for' → logprob: -14.710958480834961
    9. '``' → logprob: -14.960958480834961
    10. '
' → logprob: -16.21095848083496

Token 1504: ' length' (ID: 5517)
  Prédit: 'length'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.003285375190898776
    2. '(length' → logprob: -6.0032854080200195
    3. ' length' → logprob: -7.1282854080200195
    4. '   ' → logprob: -12.75328540802002
    5. 'l' → logprob: -13.00328540802002
    6. 'leng' → logprob: -14.37828540802002
    7. ',length' → logprob: -15.12828540802002
    8. '(l' → logprob: -15.25328540802002
    9. ' (' → logprob: -15.37828540802002
    10. '	length' → logprob: -15.50328540802002

Token 1505: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.009721026755869389
    2. ',in' → logprob: -6.009720802307129
    3. ',length' → logprob: -6.134720802307129
    4. 'in' → logprob: -6.634720802307129
    5. ',value' → logprob: -6.759720802307129
    6. ',n' → logprob: -7.759720802307129
    7. ',len' → logprob: -7.759720802307129
    8. ' ,' → logprob: -7.884720802307129
    9. ',num' → logprob: -8.259720802307129
    10. ',count' → logprob: -8.634720802307129

Token 1506: ' first' (ID: 1577)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.03815682232379913
    2. 'cnt' → logprob: -3.288156747817993
    3. 'poss' → logprob: -9.288156509399414
    4. ' count' → logprob: -11.663156509399414
    5. ' cnt' → logprob: -11.913156509399414
    6. 'num' → logprob: -12.788156509399414
    7. 'ways' → logprob: -12.913156509399414
    8. 'counts' → logprob: -13.288156509399414
    9. 'c' → logprob: -14.913156509399414
    10. 'possible' → logprob: -16.038156509399414

Token 1507: '_count' (ID: 7536)
  Prédit: '_byte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_byte' → logprob: -0.09144844114780426
    2. '_count' → logprob: -2.5914485454559326
    3. '_bytes' → logprob: -4.7164483070373535
    4. '_pos' → logprob: -6.2164483070373535
    5. 'count' → logprob: -7.8414483070373535
    6. '_cnt' → logprob: -8.091448783874512
    7. 'byte' → logprob: -8.841448783874512
    8. '_length' → logprob: -8.841448783874512
    9. '_possible' → logprob: -8.966448783874512
    10. '_counts' → logprob: -9.466448783874512

Token 1508: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007675960194319487
    2. 'in' → logprob: -4.882676124572754
    3. '<|end|>' → logprob: -11.507676124572754
    4. '```' → logprob: -11.882676124572754
    5. '               ' → logprob: -12.132676124572754
    6. '	in' → logprob: -12.382676124572754
    7. ',' → logprob: -12.507676124572754
    8. '           ' → logprob: -12.632676124572754
    9. '_in' → logprob: -12.882676124572754
    10. '=' → logprob: -13.007676124572754

Token 1509: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.002198313595727086
    2. ' start' → logprob: -6.252198219299316
    3. 'first' → logprob: -8.252198219299316
    4. '(start' → logprob: -12.127198219299316
    5. ' first' → logprob: -13.627198219299316
    6. ' ' → logprob: -13.877198219299316
    7. '   ' → logprob: -14.627198219299316
    8. '[start' → logprob: -15.127198219299316
    9. 'dp' → logprob: -15.877198219299316
    10. '
' → logprob: -16.252199172973633

Token 1510: '_bytes' (ID: 28036)
  Prédit: '_bytes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_bytes' → logprob: -0.14925019443035126
    2. '_byte' → logprob: -2.0242502689361572
    3. 'ed' → logprob: -6.024250030517578
    4. 's' → logprob: -6.274250030517578
    5. 'ing' → logprob: -6.524250030517578
    6. 'ences' → logprob: -8.649250030517578
    7. '```' → logprob: -10.024250030517578
    8. 'bytes' → logprob: -10.149250030517578
    9. 'es' → logprob: -10.149250030517578
    10. 'er' → logprob: -10.274250030517578

Token 1511: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8702741265296936
    2. '               ' → logprob: -0.8702741265296936
    3. ':
' → logprob: -2.495274066925049
    4. '<|end|>' → logprob: -3.495274066925049
    5. '           ' → logprob: -3.995274066925049
    6. ',' → logprob: -4.745274066925049
    7. '.' → logprob: -5.245274066925049
    8. '<|end|>' → logprob: -5.745274066925049
    9. '):
' → logprob: -6.245274066925049
    10. '                       ' → logprob: -6.245274066925049

Token 1512: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019875748082995415
    2. '           ' → logprob: -4.894875526428223
    3. '<|end|>' → logprob: -5.644875526428223
    4. '```' → logprob: -6.269875526428223
    5. '	           ' → logprob: -6.894875526428223
    6. '       ' → logprob: -7.019875526428223
    7. '	       ' → logprob: -7.144875526428223
    8. '			' → logprob: -7.644875526428223
    9. '                       ' → logprob: -7.769875526428223
    10. '                               ' → logprob: -7.894875526428223

Token 1513: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0014666540082544088
    2. ' if' → logprob: -6.751466751098633
    3. '```' → logprob: -8.626466751098633
    4. '                   ' → logprob: -10.251466751098633
    5. '               ' → logprob: -10.626466751098633
    6. 'j' → logprob: -10.626466751098633
    7. 'next' → logprob: -11.001466751098633
    8. '   ' → logprob: -12.501466751098633
    9. '``' → logprob: -12.751466751098633
    10. 'end' → logprob: -12.876466751098633

Token 1514: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00012106612848583609
    2. ' i' → logprob: -9.625121116638184
    3. '   ' → logprob: -10.625121116638184
    4. '               ' → logprob: -10.750121116638184
    5. '                   ' → logprob: -12.000121116638184
    6. '           ' → logprob: -13.250121116638184
    7. '(i' → logprob: -14.500121116638184
    8. '                       ' → logprob: -16.250120162963867
    9. '                               ' → logprob: -16.250120162963867
    10. '       ' → logprob: -16.375120162963867

Token 1515: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.026522057130932808
    2. ' +' → logprob: -3.651522159576416
    3. '+i' → logprob: -8.526521682739258
    4. '+
' → logprob: -11.901521682739258
    5. '<|end|>' → logprob: -12.526521682739258
    6. '+n' → logprob: -12.901521682739258
    7. '+s' → logprob: -13.651521682739258
    8. '+j' → logprob: -13.651521682739258
    9. '+k' → logprob: -13.901521682739258
    10. '+[' → logprob: -14.026521682739258

Token 1516: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -3.547789674485102e-05
    2. ' length' → logprob: -10.250035285949707
    3. '(length' → logprob: -18.000036239624023
    4. '[length' → logprob: -19.125036239624023
    5. '1' → logprob: -19.250036239624023
    6. 'len' → logprob: -19.375036239624023
    7. '```' → logprob: -21.500036239624023
    8. '	length' → logprob: -21.625036239624023
    9. '
' → logprob: -21.875036239624023
    10. '   ' → logprob: -21.875036239624023

Token 1517: ' >' (ID: 1424)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.4378538727760315
    2. ' <=' → logprob: -1.0628538131713867
    3. '>' → logprob: -5.187853813171387
    4. '<' → logprob: -6.187853813171387
    5. ' <' → logprob: -7.312853813171387
    6. ' >' → logprob: -7.437853813171387
    7. '<len' → logprob: -9.187853813171387
    8. '```' → logprob: -9.812853813171387
    9. '>=' → logprob: -10.062853813171387
    10. ' >=' → logprob: -12.312853813171387

Token 1518: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.00015872348740231246
    2. ' N' → logprob: -8.750158309936523
    3. 'len' → logprob: -15.500158309936523
    4. '```' → logprob: -18.125158309936523
    5. 'n' → logprob: -18.500158309936523
    6. '   ' → logprob: -20.125158309936523
    7. ' ' → logprob: -20.500158309936523
    8. ' len' → logprob: -20.500158309936523
    9. '	N' → logprob: -22.125158309936523
    10. '
' → logprob: -22.375158309936523

Token 1519: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.32224026322364807
    2. '                   ' → logprob: -1.4472402334213257
    3. ':' → logprob: -3.4472403526306152
    4. '               ' → logprob: -5.072240352630615
    5. '                       ' → logprob: -6.947240352630615
    6. '):
' → logprob: -8.322239875793457
    7. ':return' → logprob: -8.447239875793457
    8. '           ' → logprob: -8.572239875793457
    9. '```' → logprob: -8.822239875793457
    10. '                           ' → logprob: -8.947239875793457

Token 1520: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004777449648827314
    2. '               ' → logprob: -5.879777431488037
    3. '                       ' → logprob: -6.879777431488037
    4. ' continue' → logprob: -7.504777431488037
    5. 'continue' → logprob: -9.004777908325195
    6. '                           ' → logprob: -9.879777908325195
    7. '                ' → logprob: -9.879777908325195
    8. '                               ' → logprob: -10.004777908325195
    9. '                    ' → logprob: -10.379777908325195
    10. '                    
' → logprob: -10.629777908325195

Token 1521: ' continue' (ID: 4901)
  Prédit: ' continue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.8403735756874084
    2. 'continue' (adapté à ' continue') → logprob: -0.8403735756874084
    3. '                   ' → logprob: -2.0903735160827637
    4. '                       ' → logprob: -4.590373516082764
    5. '               ' → logprob: -5.965373516082764
    6. '```' → logprob: -8.090373992919922
    7. '                               ' → logprob: -9.715373992919922
    8. '                           ' → logprob: -9.965373992919922
    9. '           ' → logprob: -9.965373992919922
    10. '                    ' → logprob: -10.465373992919922

Token 1522: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.030461976304650307
    2. '
' → logprob: -4.15546178817749
    3. '                   ' → logprob: -4.65546178817749
    4. '                
' → logprob: -6.78046178817749
    5. '                       ' → logprob: -6.78046178817749
    6. '<|end|>' → logprob: -6.78046178817749
    7. '                    
' → logprob: -7.90546178817749
    8. '           ' → logprob: -8.155462265014648
    9. '                        
' → logprob: -8.530462265014648
    10. '                ' → logprob: -9.530462265014648

Token 1523: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03694801777601242
    2. '                   ' → logprob: -3.4119479656219482
    3. '                       ' → logprob: -6.661948204040527
    4. '```' → logprob: -7.286948204040527
    5. '[' → logprob: -7.786948204040527
    6. '                ' → logprob: -8.161948204040527
    7. '           ' → logprob: -8.661948204040527
    8. '                               ' → logprob: -9.911948204040527
    9. '                
' → logprob: -10.036948204040527
    10. '              ' → logprob: -10.161948204040527

Token 1524: ' #' (ID: 1069)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.5109076499938965
    2. 'next' → logprob: -1.5109076499938965
    3. 'if' → logprob: -2.7609076499938965
    4. '               ' → logprob: -3.3859076499938965
    5. '                   ' → logprob: -3.8859076499938965
    6. 'ok' → logprob: -4.2609076499938965
    7. 'count' → logprob: -4.5109076499938965
    8. ' valid' → logprob: -5.1359076499938965
    9. 'follow' → logprob: -5.2609076499938965
    10. ' next' → logprob: -5.3859076499938965

Token 1525: ' check' (ID: 2371)
  Prédit: 'valid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'valid' → logprob: -0.0679752454161644
    2. 'next' → logprob: -4.067975044250488
    3. 'following' → logprob: -4.067975044250488
    4. 'follow' → logprob: -4.692975044250488
    5. 'ok' → logprob: -5.067975044250488
    6. 'count' → logprob: -5.317975044250488
    7. 'possible' → logprob: -5.817975044250488
    8. 'second' → logprob: -6.692975044250488
    9. '               ' → logprob: -6.692975044250488
    10. 'total' → logprob: -7.192975044250488

Token 1526: ' continuation' (ID: 74139)
  Prédit: 'following'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'following' → logprob: -0.36567842960357666
    2. 'count' → logprob: -1.4906784296035767
    3. 'follow' → logprob: -2.990678310394287
    4. '_follow' → logprob: -4.115678310394287
    5. ' following' → logprob: -5.240678310394287
    6. 'all' → logprob: -6.240678310394287
    7. 'bytes' → logprob: -6.365678310394287
    8. 'valid' → logprob: -6.365678310394287
    9. 'dp' → logprob: -7.115678310394287
    10. 'if' → logprob: -7.365678310394287

Token 1527: ' bytes' (ID: 11643)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7890672087669373
    2. 'bytes' → logprob: -1.164067268371582
    3. '_bytes' → logprob: -1.664067268371582
    4. 'for' → logprob: -3.914067268371582
    5. 'byte' → logprob: -4.039067268371582
    6. '_byte' → logprob: -6.164067268371582
    7. '                   ' → logprob: -6.539067268371582
    8. '```' → logprob: -7.164067268371582
    9. ' bytes' → logprob: -7.289067268371582
    10. 'count' → logprob: -7.289067268371582

Token 1528: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.12422765791416168
    2. 'for' → logprob: -2.74922776222229
    3. ' for' → logprob: -3.49922776222229
    4. 'count' → logprob: -4.749227523803711
    5. 'valid' → logprob: -4.874227523803711
    6. '                   ' → logprob: -6.124227523803711
    7. 'next' → logprob: -6.624227523803711
    8. '```' → logprob: -7.499227523803711
    9. ' valid' → logprob: -7.749227523803711
    10. 'if' → logprob: -8.499227523803711

Token 1529: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.019034329801797867
    2. 'for' → logprob: -4.144034385681152
    3. ' for' → logprob: -6.144034385681152
    4. '           ' → logprob: -7.519034385681152
    5. '```' → logprob: -8.769034385681152
    6. '                   ' → logprob: -9.144034385681152
    7. '       ' → logprob: -11.644034385681152
    8. 'next' → logprob: -12.144034385681152
    9. 'count' → logprob: -12.644034385681152
    10. ',' → logprob: -12.769034385681152

Token 1530: ' ok' (ID: 4763)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7430670261383057
    2. 'valid' → logprob: -1.2430670261383057
    3. '               ' → logprob: -2.8680670261383057
    4. 'for' → logprob: -2.9930670261383057
    5. 'if' → logprob: -3.2430670261383057
    6. '                   ' → logprob: -3.3680670261383057
    7. 'continu' → logprob: -4.618066787719727
    8. 'possible' → logprob: -4.868066787719727
    9. ' for' → logprob: -5.118066787719727
    10. 'cnt' → logprob: -5.243066787719727

Token 1531: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.22833776473999023
    2. '=' → logprob: -1.6033377647399902
    3. '=True' → logprob: -6.47833776473999
    4. '               ' → logprob: -7.47833776473999
    5. '           ' → logprob: -7.85333776473999
    6. '                   ' → logprob: -8.228338241577148
    7. '   ' → logprob: -9.603338241577148
    8. '       ' → logprob: -10.853338241577148
    9. '                ' → logprob: -11.478338241577148
    10. '=False' → logprob: -11.603338241577148

Token 1532: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.0280383548888494e-06
    2. ' True' → logprob: -14.000000953674316
    3. '(True' → logprob: -16.250001907348633
    4. '1' → logprob: -17.000001907348633
    5. '   ' → logprob: -17.625001907348633
    6. 'dp' → logprob: -18.750001907348633
    7. '           ' → logprob: -19.000001907348633
    8. 'count' → logprob: -19.750001907348633
    9. '       ' → logprob: -19.875001907348633
    10. 'true' → logprob: -20.875001907348633

Token 1533: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.19663961231708527
    2. 'for' → logprob: -2.4466395378112793
    3. ' for' → logprob: -2.5716395378112793
    4. '```' → logprob: -5.196639537811279
    5. '<|end|>' → logprob: -5.696639537811279
    6. '                   ' → logprob: -5.696639537811279
    7. '	for' → logprob: -7.071639537811279
    8. '                ' → logprob: -8.196640014648438
    9. '			' → logprob: -8.196640014648438
    10. '	               ' → logprob: -8.321640014648438

Token 1534: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0021500231232494116
    2. 'for' → logprob: -6.752150058746338
    3. ' for' → logprob: -7.502150058746338
    4. '                   ' → logprob: -8.25214958190918
    5. '			' → logprob: -10.50214958190918
    6. '	           ' → logprob: -10.75214958190918
    7. '           ' → logprob: -10.75214958190918
    8. '                       ' → logprob: -10.87714958190918
    9. '                ' → logprob: -11.00214958190918
    10. '<|end|>' → logprob: -11.37714958190918

Token 1535: ' total' (ID: 3609)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0019430378451943398
    2. ' for' → logprob: -6.251943111419678
    3. '	for' → logprob: -11.37694263458252
    4. '```' → logprob: -13.12694263458252
    5. '                   ' → logprob: -14.75194263458252
    6. '               ' → logprob: -14.87694263458252
    7. '
' → logprob: -16.251943588256836
    8. '``' → logprob: -16.751943588256836
    9. 'if' → logprob: -16.876943588256836
    10. '           ' → logprob: -17.376943588256836

Token 1536: ' =' (ID: 314)
  Prédit: '_count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.000885730201844126
    2. '_counts' → logprob: -8.000885963439941
    3. '_' → logprob: -8.250885963439941
    4. '_tokens' → logprob: -9.000885963439941
    5. '=' → logprob: -9.875885963439941
    6. 'count' → logprob: -10.125885963439941
    7. ' =' → logprob: -10.250885963439941
    8. '```' → logprob: -11.000885963439941
    9. '_possible' → logprob: -12.500885963439941
    10. '=count' → logprob: -12.500885963439941

Token 1537: ' first' (ID: 1577)
  Prédit: 'first'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'first' → logprob: -0.1825706660747528
    2. ' first' → logprob: -2.307570695877075
    3. 'dp' → logprob: -3.182570695877075
    4. '1' → logprob: -3.932570695877075
    5. '0' → logprob: -5.557570457458496
    6. ' dp' → logprob: -6.182570457458496
    7. ' ' → logprob: -8.932570457458496
    8. '(first' → logprob: -9.182570457458496
    9. '(' → logprob: -10.057570457458496
    10. '(dp' → logprob: -10.557570457458496

Token 1538: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00014418430509977043
    2. '_byte' → logprob: -9.375144004821777
    3. '_token' → logprob: -11.250144004821777
    4. '_' → logprob: -11.375144004821777
    5. '_counts' → logprob: -11.375144004821777
    6. ' _' → logprob: -12.250144004821777
    7. '_tokens' → logprob: -12.875144004821777
    8. '_bytes' → logprob: -13.125144004821777
    9. 'Count' → logprob: -13.125144004821777
    10. '_COUNT' → logprob: -13.500144004821777

Token 1539: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.026298323646187782
    2. '
' → logprob: -4.276298522949219
    3. '                
' → logprob: -5.276298522949219
    4. '<|end|>' → logprob: -5.276298522949219
    5. '<|end|>' → logprob: -8.526298522949219
    6. '  
' → logprob: -8.526298522949219
    7. '              ' → logprob: -8.776298522949219
    8. '               
' → logprob: -9.026298522949219
    9. '                ' → logprob: -9.151298522949219
    10. '            
' → logprob: -9.276298522949219

Token 1540: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03324681147933006
    2. 'for' → logprob: -4.408246994018555
    3. '
' → logprob: -4.658246994018555
    4. ' for' → logprob: -5.283246994018555
    5. '           ' → logprob: -6.033246994018555
    6. '                
' → logprob: -6.783246994018555
    7. '<|end|>' → logprob: -7.533246994018555
    8. '			' → logprob: -7.658246994018555
    9. '       ' → logprob: -8.408246994018555
    10. '                   ' → logprob: -8.783246994018555

Token 1541: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011688868515193462
    2. ' for' → logprob: -4.636688709259033
    3. '```' → logprob: -6.386688709259033
    4. '               ' → logprob: -8.761689186096191
    5. '	for' → logprob: -10.261689186096191
    6. '
' → logprob: -10.886689186096191
    7. '                   ' → logprob: -11.136689186096191
    8. '           ' → logprob: -11.511689186096191
    9. '``' → logprob: -12.011689186096191
    10. '       ' → logprob: -13.636689186096191

Token 1542: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0002986392646562308
    2. 'offset' → logprob: -8.500298500061035
    3. 'k' → logprob: -9.875298500061035
    4. ' j' → logprob: -10.250298500061035
    5. '_j' → logprob: -11.875298500061035
    6. 'pos' → logprob: -14.375298500061035
    7. 'idx' → logprob: -15.375298500061035
    8. 'off' → logprob: -16.12529945373535
    9. '	j' → logprob: -16.25029945373535
    10. 'x' → logprob: -16.50029945373535

Token 1543: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.14279843866825104
    2. 'in' → logprob: -2.01779842376709
    3. '	in' → logprob: -9.26779842376709
    4. 'In' → logprob: -11.89279842376709
    5. '_in' → logprob: -11.89279842376709
    6. '```' → logprob: -13.01779842376709
    7. ',' → logprob: -13.39279842376709
    8. ')' → logprob: -13.64279842376709
    9. '                   ' → logprob: -13.76779842376709
    10. '+' → logprob: -13.89279842376709

Token 1544: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.043029215186834335
    2. ' range' → logprob: -3.543029308319092
    3. 'in' → logprob: -4.418029308319092
    4. ' in' → logprob: -6.918029308319092
    5. 'i' → logprob: -9.168028831481934
    6. '(range' → logprob: -10.668028831481934
    7. ' i' → logprob: -11.793028831481934
    8. '1' → logprob: -13.043028831481934
    9. '```' → logprob: -13.918028831481934
    10. ' ' → logprob: -13.918028831481934

Token 1545: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.000738038623239845
    2. 'i' → logprob: -7.250738143920898
    3. '(' → logprob: -10.500738143920898
    4. ' i' → logprob: -15.500738143920898
    5. '               ' → logprob: -16.2507381439209
    6. '                   ' → logprob: -16.5007381439209
    7. '1' → logprob: -16.5007381439209
    8. '```' → logprob: -16.6257381439209
    9. '   ' → logprob: -16.7507381439209
    10. '(
' → logprob: -16.8757381439209

Token 1546: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0013424931094050407
    2. ' +' → logprob: -6.626342296600342
    3. ',' → logprob: -11.3763427734375
    4. '+j' → logprob: -12.6263427734375
    5. '+,' → logprob: -14.3763427734375
    6. ',j' → logprob: -15.1263427734375
    7. '+i' → logprob: -15.3763427734375
    8. '   ' → logprob: -15.8763427734375
    9. '+
' → logprob: -15.8763427734375
    10. '1' → logprob: -16.2513427734375

Token 1547: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0921942703134846e-05
    2. 'length' → logprob: -11.87501049041748
    3. 'i' → logprob: -13.00001049041748
    4. ' ' → logprob: -14.62501049041748
    5. '+' → logprob: -15.00001049041748
    6. '   ' → logprob: -15.25001049041748
    7. 'j' → logprob: -15.75001049041748
    8. '(' → logprob: -16.000011444091797
    9. '
' → logprob: -16.000011444091797
    10. '0' → logprob: -16.375011444091797

Token 1548: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0032402207143604755
    2. ',i' → logprob: -5.75324010848999
    3. ' ,' → logprob: -10.003240585327148
    4. ',j' → logprob: -11.378240585327148
    5. '```' → logprob: -13.253240585327148
    6. ',
' → logprob: -13.253240585327148
    7. 'i' → logprob: -14.253240585327148
    8. '(i' → logprob: -14.503240585327148
    9. '   ' → logprob: -14.628240585327148
    10. '           ' → logprob: -15.753240585327148

Token 1549: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -9.253090865968261e-06
    2. ' i' → logprob: -11.625009536743164
    3. '                   ' → logprob: -16.500009536743164
    4. '   ' → logprob: -17.375009536743164
    5. '               ' → logprob: -17.875009536743164
    6. '```' → logprob: -17.875009536743164
    7. '           ' → logprob: -18.250009536743164
    8. '{i' → logprob: -18.625009536743164
    9. '(i' → logprob: -18.750009536743164
    10. '	i' → logprob: -19.375009536743164

Token 1550: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2627290189266205
    2. '+i' → logprob: -1.5127290487289429
    3. ' +' → logprob: -5.137729167938232
    4. 'i' → logprob: -5.512729167938232
    5. ',' → logprob: -8.137728691101074
    6. ',i' → logprob: -8.387728691101074
    7. ' i' → logprob: -9.262728691101074
    8. '+j' → logprob: -9.387728691101074
    9. '+
' → logprob: -9.887728691101074
    10. '(i' → logprob: -9.887728691101074

Token 1551: 'length' (ID: 7914)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -4.6087021473795176e-05
    2. ' i' → logprob: -10.125045776367188
    3. '(i' → logprob: -12.375045776367188
    4. '   ' → logprob: -15.000045776367188
    5. '           ' → logprob: -15.000045776367188
    6. 'length' → logprob: -15.375045776367188
    7. ' (' → logprob: -15.625045776367188
    8. '(' → logprob: -16.125045776367188
    9. '               ' → logprob: -16.125045776367188
    10. '                   ' → logprob: -16.125045776367188

Token 1552: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.06227295845746994
    2. '):' → logprob: -2.8122730255126953
    3. ':' → logprob: -9.187273025512695
    4. ':
' → logprob: -9.937273025512695
    5. '                   ' → logprob: -10.562273025512695
    6. '```' → logprob: -10.562273025512695
    7. '):
' → logprob: -10.812273025512695
    8. '               ' → logprob: -10.937273025512695
    9. '():
' → logprob: -11.187273025512695
    10. '           ' → logprob: -11.437273025512695

Token 1553: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0037075618747621775
    2. '           ' → logprob: -6.503707408905029
    3. ' if' → logprob: -7.253707408905029
    4. '               ' → logprob: -7.753707408905029
    5. 'if' → logprob: -8.503707885742188
    6. 'byte' → logprob: -8.503707885742188
    7. '		           ' → logprob: -8.628707885742188
    8. '```' → logprob: -8.878707885742188
    9. 'bytes' → logprob: -10.128707885742188
    10. '                       ' → logprob: -10.503707885742188

Token 1554: ' cont' (ID: 836)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cont' (adapté à ' cont') → logprob: -0.9954878091812134
    2. 'following' → logprob: -1.4954878091812134
    3. 'if' → logprob: -1.8704878091812134
    4. 'continu' → logprob: -2.370487689971924
    5. 'follow' → logprob: -3.120487689971924
    6. 'byte' → logprob: -3.120487689971924
    7. 'count' → logprob: -3.745487689971924
    8. 'cnt' → logprob: -4.120487689971924
    9. '                   ' → logprob: -4.995487689971924
    10. 'cb' → logprob: -5.120487689971924

Token 1555: '_count' (ID: 7536)
  Prédit: '_byte'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_byte' → logprob: -0.030233247205615044
    2. 'inu' → logprob: -4.030233383178711
    3. 'inue' → logprob: -4.655233383178711
    4. '_bytes' → logprob: -7.030233383178711
    5. 'byte' → logprob: -7.030233383178711
    6. 'in' → logprob: -7.655233383178711
    7. '=' → logprob: -9.030233383178711
    8. ' =' → logprob: -10.030233383178711
    9. '   ' → logprob: -10.780233383178711
    10. '_follow' → logprob: -11.280233383178711

Token 1556: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6950432062149048
    2. '=' → logprob: -1.0700432062149048
    3. ' *=' → logprob: -2.1950430870056152
    4. '*=' → logprob: -3.1950430870056152
    5. ' +=' → logprob: -6.445043087005615
    6. '   ' → logprob: -7.070043087005615
    7. '*' → logprob: -7.070043087005615
    8. '           ' → logprob: -7.570043087005615
    9. '+=' → logprob: -7.695043087005615
    10. '```' → logprob: -8.195043563842773

Token 1557: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -5.836499985889532e-05
    2. ' count' → logprob: -9.7500581741333
    3. '                   ' → logprob: -19.750059127807617
    4. '=count' → logprob: -20.750059127807617
    5. '(count' → logprob: -20.875059127807617
    6. '[count' → logprob: -22.625059127807617
    7. '	count' → logprob: -22.750059127807617
    8. '                       ' → logprob: -23.500059127807617
    9. '.count' → logprob: -23.750059127807617
    10. '   ' → logprob: -24.625059127807617

Token 1558: '_follow' (ID: 110088)
  Prédit: '_follow'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_follow' → logprob: -0.039370108395814896
    2. 'following' → logprob: -3.289370059967041
    3. '_valid' → logprob: -6.789370059967041
    4. 'valid' → logprob: -8.6643705368042
    5. 'follow' → logprob: -10.7893705368042
    6. '_possible' → logprob: -12.2893705368042
    7. 'poss' → logprob: -13.2893705368042
    8. 'possible' → logprob: -14.5393705368042
    9. 'Following' → logprob: -14.6643705368042
    10. '_pos' → logprob: -14.6643705368042

Token 1559: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -6.704273118884885e-07
    2. '_bytes' → logprob: -15.250000953674316
    3. '_follow' → logprob: -16.125
    4. 'bytes' → logprob: -16.875
    5. 'ng' → logprob: -16.875
    6. 'following' → logprob: -17.5
    7. '```' → logprob: -17.5
    8. 'i' → logprob: -17.625
    9. '   ' → logprob: -17.75
    10. 'ings' → logprob: -17.875

Token 1560: '_byte' (ID: 48405)
  Prédit: '_byte'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_byte' → logprob: -0.011343240737915039
    2. 'byte' → logprob: -5.011343002319336
    3. '_bytes' → logprob: -5.386343002319336
    4. 'bytes' → logprob: -10.386343002319336
    5. ' byte' → logprob: -13.386343002319336
    6. '```' → logprob: -13.511343002319336
    7. '<byte' → logprob: -14.011343002319336
    8. '_BYTE' → logprob: -14.261343002319336
    9. 'Byte' → logprob: -14.386343002319336
    10. 's' → logprob: -14.761343002319336

Token 1561: '(bytes' (ID: 41557)
  Prédit: '(bytes'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(bytes' → logprob: -3.054500666621607e-06
    2. 'bytes' → logprob: -13.50000286102295
    3. '(byte' → logprob: -13.87500286102295
    4. '(' → logprob: -14.62500286102295
    5. '(
' → logprob: -16.875003814697266
    6. ' bytes' → logprob: -17.125003814697266
    7. '```' → logprob: -17.625003814697266
    8. '(bits' → logprob: -18.125003814697266
    9. '((' → logprob: -18.375003814697266
    10. '(Bytes' → logprob: -18.500003814697266

Token 1562: '_list' (ID: 4162)
  Prédit: '_list'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_list' → logprob: -0.0025217996444553137
    2. '_str' → logprob: -6.002521991729736
    3. 'str' → logprob: -10.877521514892578
    4. 'list' → logprob: -10.877521514892578
    5. 's' → logprob: -12.252521514892578
    6. '[j' → logprob: -13.252521514892578
    7. 'List' → logprob: -14.252521514892578
    8. '```' → logprob: -15.002521514892578
    9. ')' → logprob: -15.377521514892578
    10. '_lst' → logprob: -15.877521514892578

Token 1563: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.464347173576243e-05
    2. '[' → logprob: -10.37503433227539
    3. ')[' → logprob: -13.62503433227539
    4. ' [' → logprob: -13.75003433227539
    5. '   ' → logprob: -15.12503433227539
    6. ')' → logprob: -15.25003433227539
    7. '[i' → logprob: -15.37503433227539
    8. '```' → logprob: -15.62503433227539
    9. '[js' → logprob: -17.12503433227539
    10. '[
' → logprob: -17.25003433227539

Token 1564: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26320311427116394
    2. '])' → logprob: -1.7632031440734863
    3. ')
' → logprob: -2.8882031440734863
    4. '])
' → logprob: -5.513203144073486
    5. ')])' → logprob: -10.138202667236328
    6. '                   ' → logprob: -10.513202667236328
    7. '   ' → logprob: -11.013202667236328
    8. ' )' → logprob: -11.013202667236328
    9. ')`
' → logprob: -11.263202667236328
    10. ')]' → logprob: -11.263202667236328

Token 1565: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.023187117651104927
    2. '                       ' → logprob: -4.523187160491943
    3. '               ' → logprob: -5.023187160491943
    4. '```' → logprob: -6.523187160491943
    5. '*' → logprob: -6.648187160491943
    6. '           ' → logprob: -7.148187160491943
    7. '                    
' → logprob: -7.898187160491943
    8. '                           ' → logprob: -8.148186683654785
    9. '<|end|>' → logprob: -8.273186683654785
    10. '                                           ' → logprob: -9.023186683654785

Token 1566: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.018560057505965233
    2. '                   ' → logprob: -4.01855993270874
    3. ' if' → logprob: -8.143560409545898
    4. '               ' → logprob: -9.643560409545898
    5. '```' → logprob: -10.393560409545898
    6. 'total' → logprob: -11.643560409545898
    7. '           ' → logprob: -12.143560409545898
    8. '
' → logprob: -12.268560409545898
    9. '                       ' → logprob: -12.768560409545898
    10. '       ' → logprob: -14.268560409545898

Token 1567: ' cont' (ID: 836)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cont' → logprob: -0.0052360063418745995
    2. ' cont' → logprob: -5.2552361488342285
    3. '   ' → logprob: -13.50523567199707
    4. '(cont' → logprob: -14.50523567199707
    5. '           ' → logprob: -16.25523567199707
    6. '                   ' → logprob: -16.88023567199707
    7. '_cont' → logprob: -17.13023567199707
    8. 'continu' → logprob: -17.50523567199707
    9. '               ' → logprob: -17.75523567199707
    10. '       ' → logprob: -18.13023567199707

Token 1568: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0012719007208943367
    2. 'not' → logprob: -7.001271724700928
    3. '_cont' → logprob: -8.751272201538086
    4. ' not' → logprob: -9.251272201538086
    5. 'cont' → logprob: -9.751272201538086
    6. 'ount' → logprob: -11.126272201538086
    7. '_not' → logprob: -11.251272201538086
    8. '_COUNT' → logprob: -12.251272201538086
    9. 'ont' → logprob: -12.376272201538086
    10. 'count' → logprob: -12.626272201538086

Token 1569: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.04859452322125435
    2. ' ==' → logprob: -3.0485944747924805
    3. '==
' → logprob: -12.67359447479248
    4. ')==' → logprob: -13.04859447479248
    5. '()==' → logprob: -14.17359447479248
    6. '===' → logprob: -14.54859447479248
    7. '<=' → logprob: -14.79859447479248
    8. ']==' → logprob: -16.423595428466797
    9. '=' → logprob: -16.548595428466797
    10. '```' → logprob: -16.798595428466797

Token 1570: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.842555426876061e-06
    2. ' ' → logprob: -12.250004768371582
    3. '```' → logprob: -18.1250057220459
    4. '   ' → logprob: -18.2500057220459
    5. '۰' → logprob: -20.6250057220459
    6. 'False' → logprob: -21.0000057220459
    7. '``' → logprob: -21.0000057220459
    8. '=' → logprob: -21.0000057220459
    9. '       ' → logprob: -21.2500057220459
    10. '                   ' → logprob: -21.5000057220459

Token 1571: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -16.250015258789062
    4. '```' → logprob: -17.750015258789062
    5. '       ' → logprob: -18.625015258789062
    6. '=' → logprob: -19.500015258789062
    7. '           ' → logprob: -20.125015258789062
    8. 'False' → logprob: -20.250015258789062
    9. '1' → logprob: -20.312515258789062
    10. '۰' → logprob: -20.437515258789062

Token 1572: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.006915941834449768
    2. ':
' → logprob: -5.256916046142578
    3. ':' → logprob: -7.006916046142578
    4. '                   ' → logprob: -7.256916046142578
    5. '                           ' → logprob: -10.381916046142578
    6. ':return' → logprob: -11.881916046142578
    7. '               ' → logprob: -12.006916046142578
    8. ' or' → logprob: -12.131916046142578
    9. '                      ' → logprob: -12.256916046142578
    10. '                               ' → logprob: -12.756916046142578

Token 1573: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0003364158037584275
    2. '                   ' → logprob: -8.750336647033691
    3. ':
' → logprob: -10.000336647033691
    4. '```' → logprob: -10.000336647033691
    5. 'return' → logprob: -11.250336647033691
    6. '                               ' → logprob: -11.250336647033691
    7. 'break' → logprob: -11.375336647033691
    8. '                           ' → logprob: -11.500336647033691
    9. '``' → logprob: -11.875336647033691
    10. 'ok' → logprob: -12.125336647033691

Token 1574: ' ok' (ID: 4763)
  Prédit: 'ok'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ok' (adapté à ' ok') → logprob: -0.05223393440246582
    2. 'break' → logprob: -3.052233934402466
    3. '                       ' → logprob: -6.302233695983887
    4. '```' → logprob: -7.427233695983887
    5. '                           ' → logprob: -7.927233695983887
    6. ' ok' → logprob: -8.427233695983887
    7. '                   ' → logprob: -8.552233695983887
    8. '                               ' → logprob: -8.677233695983887
    9. '``' → logprob: -9.802233695983887
    10. '               ' → logprob: -9.802233695983887

Token 1575: ' =' (ID: 314)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.03405527025461197
    2. '                       ' → logprob: -3.909055233001709
    3. ':' → logprob: -5.534055233001709
    4. '                               ' → logprob: -5.909055233001709
    5. ':
' → logprob: -6.034055233001709
    6. '                   ' → logprob: -6.284055233001709
    7. '                          ' → logprob: -7.284055233001709
    8. '=' → logprob: -7.659055233001709
    9. '           ' → logprob: -8.284055709838867
    10. '               ' → logprob: -8.409055709838867

Token 1576: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -4.842555426876061e-06
    2. ' False' → logprob: -12.250004768371582
    3. '=False' → logprob: -18.8750057220459
    4. '(False' → logprob: -19.6250057220459
    5. 'break' → logprob: -19.8750057220459
    6. 'True' → logprob: -20.5000057220459
    7. 'false' → logprob: -21.3750057220459
    8. '   ' → logprob: -21.8750057220459
    9. '```' → logprob: -22.3750057220459
    10. '.False' → logprob: -24.5000057220459

Token 1577: '
' (ID: 198)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0007194612408056855
    2. '                           ' → logprob: -7.5007195472717285
    3. '                   ' → logprob: -9.25071907043457
    4. '           ' → logprob: -10.75071907043457
    5. '               ' → logprob: -10.75071907043457
    6. '                        ' → logprob: -12.00071907043457
    7. '                        
' → logprob: -12.37571907043457
    8. '                      ' → logprob: -12.50071907043457
    9. '```' → logprob: -12.50071907043457
    10. '                               ' → logprob: -13.00071907043457

Token 1578: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0006345203728415072
    2. '                           ' → logprob: -7.625634670257568
    3. '                   ' → logprob: -9.12563419342041
    4. '           ' → logprob: -11.12563419342041
    5. '               ' → logprob: -11.37563419342041
    6. '                        ' → logprob: -12.25063419342041
    7. '                      ' → logprob: -13.25063419342041
    8. '                               ' → logprob: -13.75063419342041
    9. '```' → logprob: -14.00063419342041
    10. '                         ' → logprob: -14.62563419342041

Token 1579: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -5.824579784530215e-05
    2. '                           ' → logprob: -10.5000581741333
    3. ' break' → logprob: -10.5000581741333
    4. '                       ' → logprob: -13.8750581741333
    5. '                               ' → logprob: -14.0000581741333
    6. '	break' → logprob: -14.3750581741333
    7. '```' → logprob: -14.5000581741333
    8. '                                   ' → logprob: -16.875059127807617
    9. '                   ' → logprob: -17.000059127807617
    10. '               ' → logprob: -17.625059127807617

Token 1580: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.5248050093650818
    2. '                   ' → logprob: -1.1498050689697266
    3. '
' → logprob: -3.6498050689697266
    4. '<|end|>' → logprob: -3.6498050689697266
    5. '                       ' → logprob: -4.524805068969727
    6. '           ' → logprob: -4.524805068969727
    7. '                        
' → logprob: -5.899805068969727
    8. '  
' → logprob: -6.024805068969727
    9. ' 
' → logprob: -6.149805068969727
    10. '    
' → logprob: -6.399805068969727

Token 1581: '                   ' (ID: 699)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.29085928201675415
    2. '                   ' → logprob: -1.4158592224121094
    3. '           ' → logprob: -4.790859222412109
    4. '
' → logprob: -7.665859222412109
    5. 'if' → logprob: -8.16585922241211
    6. '                       ' → logprob: -8.79085922241211
    7. '```' → logprob: -9.16585922241211
    8. 'else' → logprob: -9.54085922241211
    9. '   ' → logprob: -9.54085922241211
    10. ' if' → logprob: -9.66585922241211

Token 1582: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.7322938442230225
    2. '                   ' → logprob: -0.9822938442230225
    3. ' total' → logprob: -2.1072938442230225
    4. '               ' → logprob: -3.9822938442230225
    5. '                       ' → logprob: -6.357294082641602
    6. '
' → logprob: -6.482294082641602
    7. '                    
' → logprob: -7.732294082641602
    8. '           ' → logprob: -8.732294082641602
    9. '                           ' → logprob: -8.732294082641602
    10. 'else' → logprob: -9.607294082641602

Token 1583: ' =' (ID: 314)
  Prédit: '*='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*=' → logprob: -0.02343565784394741
    2. ' *=' → logprob: -3.773435592651367
    3. '=' → logprob: -8.773435592651367
    4. '*' → logprob: -10.398435592651367
    5. ' =' → logprob: -13.273435592651367
    6. '```' → logprob: -13.648435592651367
    7. '   ' → logprob: -14.023435592651367
    8. '	' → logprob: -14.273435592651367
    9. ' ' → logprob: -15.398435592651367
    10. '  ' → logprob: -15.898435592651367

Token 1584: ' (' (ID: 350)
  Prédit: '(total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(total' → logprob: -0.0019584903493523598
    2. ' (' → logprob: -6.25195837020874
    3. 'total' → logprob: -10.501958847045898
    4. '(' → logprob: -14.001958847045898
    5. ' total' → logprob: -14.376958847045898
    6. '(max' → logprob: -15.001958847045898
    7. '(t' → logprob: -15.376958847045898
    8. '   ' → logprob: -16.5019588470459
    9. '
' → logprob: -17.1269588470459
    10. '                   ' → logprob: -17.2519588470459

Token 1585: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0015982951736077666
    2. ' total' → logprob: -6.501598358154297
    3. '(total' → logprob: -9.251598358154297
    4. 'tot' → logprob: -17.251598358154297
    5. '                   ' → logprob: -18.126598358154297
    6. '	total' → logprob: -18.376598358154297
    7. ' (' → logprob: -19.126598358154297
    8. '   ' → logprob: -19.501598358154297
    9. '$total' → logprob: -20.001598358154297
    10. ',total' → logprob: -20.376598358154297

Token 1586: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.002186426194384694
    2. ' *' → logprob: -6.127186298370361
    3. '```' → logprob: -14.00218677520752
    4. '**' → logprob: -15.75218677520752
    5. ' ' → logprob: -16.127185821533203
    6. '*
' → logprob: -16.377185821533203
    7. '*object' → logprob: -17.127185821533203
    8. '
' → logprob: -17.502185821533203
    9. '*(' → logprob: -17.752185821533203
    10. ')' → logprob: -17.752185821533203

Token 1587: ' cont' (ID: 836)
  Prédit: 'cont'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cont' → logprob: -7.896309739408025e-07
    2. ' cont' → logprob: -14.750000953674316
    3. '(cont' → logprob: -14.750000953674316
    4. '   ' → logprob: -21.5
    5. '_cont' → logprob: -22.125
    6. 'continu' → logprob: -22.375
    7. '```' → logprob: -22.75
    8. '(' → logprob: -23.5
    9. '.cont' → logprob: -24.0
    10. '       ' → logprob: -24.5

Token 1588: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00019150081789121032
    2. '_first' → logprob: -9.500191688537598
    3. '[' → logprob: -10.500191688537598
    4. '_cont' → logprob: -10.625191688537598
    5. 'ount' → logprob: -10.875191688537598
    6. '[first' → logprob: -11.375191688537598
    7. '_follow' → logprob: -11.750191688537598
    8. '_counts' → logprob: -12.125191688537598
    9. 'unt' → logprob: -12.250191688537598
    10. '[count' → logprob: -13.375191688537598

Token 1589: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0024792237672954798
    2. ')%' → logprob: -6.002479076385498
    3. ' )' → logprob: -12.877479553222656
    4. '                   ' → logprob: -14.752479553222656
    5. '%' → logprob: -14.877479553222656
    6. '           ' → logprob: -17.127479553222656
    7. '                       ' → logprob: -17.252479553222656
    8. '   ' → logprob: -17.752479553222656
    9. '```' → logprob: -17.752479553222656
    10. ')
' → logprob: -17.752479553222656

Token 1590: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -2.339278580620885e-06
    2. ' MOD' → logprob: -13.000001907348633
    3. '100' → logprob: -17.750001907348633
    4. '_MOD' → logprob: -21.875001907348633
    5. '   ' → logprob: -22.750001907348633
    6. '.MOD' → logprob: -22.875001907348633
    7. '(M' → logprob: -23.500001907348633
    8. '```' → logprob: -23.625001907348633
    9. 'MO' → logprob: -24.125001907348633
    10. ' ' → logprob: -25.000001907348633

Token 1591: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6362186074256897
    2. '               ' → logprob: -0.7612186074256897
    3. '                
' → logprob: -6.386218547821045
    4. '<|end|>' → logprob: -7.386218547821045
    5. '```' → logprob: -8.386219024658203
    6. '                   ' → logprob: -8.761219024658203
    7. '    
' → logprob: -9.136219024658203
    8. '                        
' → logprob: -9.136219024658203
    9. ',
' → logprob: -9.636219024658203
    10. ' 
' → logprob: -9.636219024658203

Token 1592: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2956112027168274
    2. '
' → logprob: -1.6706111431121826
    3. '\n' → logprob: -3.9206111431121826
    4. '                
' → logprob: -4.295611381530762
    5. ')' → logprob: -5.045611381530762
    6. '                   ' → logprob: -5.295611381530762
    7. '                    
' → logprob: -5.795611381530762
    8. '\
' → logprob: -5.920611381530762
    9. '<|end|>' → logprob: -5.920611381530762
    10. ' 
' → logprob: -6.045611381530762

Token 1593: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.13189449906349182
    2. 'if' (adapté à ' if') → logprob: -2.131894588470459
    3. ' if' → logprob: -5.506894588470459
    4. '           ' → logprob: -7.131894588470459
    5. '
' → logprob: -10.8818941116333
    6. 'else' → logprob: -10.8818941116333
    7. '                
' → logprob: -10.8818941116333
    8. 'dp' → logprob: -11.0068941116333
    9. '                   ' → logprob: -11.3818941116333
    10. '       ' → logprob: -12.6318941116333

Token 1594: ' ok' (ID: 4763)
  Prédit: ' ok'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ok' → logprob: -0.4742303788661957
    2. 'ok' → logprob: -0.9742304086685181
    3. ' not' → logprob: -8.849230766296387
    4. 'not' → logprob: -11.724230766296387
    5. ' okay' → logprob: -14.599230766296387
    6. '               ' → logprob: -15.099230766296387
    7. '   ' → logprob: -15.099230766296387
    8. '    ' → logprob: -15.849230766296387
    9. '	ok' → logprob: -15.849230766296387
    10. ' ' → logprob: -16.47422981262207

Token 1595: ':
' (ID: 734)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.36188000440597534
    2. ':
' → logprob: -2.23688006401062
    3. ':' → logprob: -2.48688006401062
    4. '               ' → logprob: -2.73688006401062
    5. '                       ' → logprob: -3.73688006401062
    6. '                           ' → logprob: -4.611879825592041
    7. '==' → logprob: -5.611879825592041
    8. '<|end|>' → logprob: -6.236879825592041
    9. '                               ' → logprob: -6.986879825592041
    10. '):
' → logprob: -6.986879825592041

Token 1596: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04511401057243347
    2. '               ' → logprob: -3.170114040374756
    3. '           ' → logprob: -7.170114040374756
    4. '                       ' → logprob: -7.170114040374756
    5. '                           ' → logprob: -8.545113563537598
    6. '                    
' → logprob: -9.795113563537598
    7. '                ' → logprob: -10.045113563537598
    8. '   ' → logprob: -10.295113563537598
    9. '```' → logprob: -10.545113563537598
    10. '		           ' → logprob: -10.795113563537598

Token 1597: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.12180624902248383
    2. '                   ' → logprob: -2.3718061447143555
    3. '               ' → logprob: -4.4968061447143555
    4. ' dp' → logprob: -4.9968061447143555
    5. '                       ' → logprob: -6.1218061447143555
    6. '	dp' → logprob: -7.7468061447143555
    7. '                           ' → logprob: -8.496806144714355
    8. '           ' → logprob: -8.746806144714355
    9. '                               ' → logprob: -8.996806144714355
    10. '```' → logprob: -9.121806144714355

Token 1598: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.1041145626222715e-05
    2. '[' → logprob: -11.875011444091797
    3. '```' → logprob: -13.625011444091797
    4. 'i' → logprob: -14.000011444091797
    5. '                   ' → logprob: -14.625011444091797
    6. '               ' → logprob: -14.625011444091797
    7. '[
' → logprob: -15.750011444091797
    8. ']' → logprob: -16.250011444091797
    9. '[++' → logprob: -16.250011444091797
    10. '{i' → logprob: -16.375011444091797

Token 1599: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.024577276781201363
    2. ']' → logprob: -4.2745771408081055
    3. '+i' → logprob: -5.5245771408081055
    4. ' +' → logprob: -6.3995771408081055
    5. '[i' → logprob: -6.5245771408081055
    6. ']+=' → logprob: -6.7745771408081055
    7. ']+' → logprob: -7.0245771408081055
    8. '+l' → logprob: -7.8995771408081055
    9. '[' → logprob: -8.524577140808105
    10. '+j' → logprob: -8.649577140808105

Token 1600: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -0.0024802929256111383
    2. 'i' → logprob: -6.002480506896973
    3. ' length' → logprob: -12.627480506896973
    4. '(length' → logprob: -13.752480506896973
    5. '[length' → logprob: -16.252479553222656
    6. '{i' → logprob: -16.502479553222656
    7. '```' → logprob: -17.002479553222656
    8. '   ' → logprob: -17.002479553222656
    9. '_length' → logprob: -17.377479553222656
    10. 'len' → logprob: -17.752479553222656

Token 1601: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.16079868376255035
    2. ']+=' → logprob: -1.9107986688613892
    3. ']=' → logprob: -7.6607985496521
    4. '+=' → logprob: -9.660799026489258
    5. ']=(' → logprob: -11.285799026489258
    6. ']+' → logprob: -11.410799026489258
    7. '[' → logprob: -12.535799026489258
    8. '           ' → logprob: -12.785799026489258
    9. '=' → logprob: -13.160799026489258
    10. '               ' → logprob: -13.285799026489258

Token 1602: ' =' (ID: 314)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.06095216050744057
    2. '=' → logprob: -3.1859521865844727
    3. ' +=' → logprob: -4.685952186584473
    4. ']+=' → logprob: -5.185952186584473
    5. '```' → logprob: -6.685952186584473
    6. ' =' → logprob: -7.185952186584473
    7. '           ' → logprob: -7.935952186584473
    8. ']' → logprob: -8.685952186584473
    9. '[' → logprob: -9.185952186584473
    10. '               ' → logprob: -9.560952186584473

Token 1603: ' (' (ID: 350)
  Prédit: '(dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.008619066327810287
    2. ' (' → logprob: -4.7586188316345215
    3. '   ' → logprob: -13.75861930847168
    4. '(dx' → logprob: -13.88361930847168
    5. '(dc' → logprob: -14.88361930847168
    6. '(df' → logprob: -15.13361930847168
    7. '(dt' → logprob: -15.13361930847168
    8. '(dd' → logprob: -15.25861930847168
    9. '(max' → logprob: -15.25861930847168
    10. '(total' → logprob: -15.50861930847168

Token 1604: 'dp' (ID: 19037)
  Prédit: 'dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.06197351589798927
    2. '(dp' → logprob: -2.8119735717773438
    3. ' dp' → logprob: -12.061973571777344
    4. '_dp' → logprob: -17.061973571777344
    5. ' (' → logprob: -17.561973571777344
    6. '	dp' → logprob: -17.811973571777344
    7. '(' → logprob: -19.686973571777344
    8. '           ' → logprob: -19.811973571777344
    9. '.dp' → logprob: -20.186973571777344
    10. '   ' → logprob: -20.186973571777344

Token 1605: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5570885807392187e-05
    2. 'i' → logprob: -11.125015258789062
    3. '[' → logprob: -14.625015258789062
    4. '{i' → logprob: -15.625015258789062
    5. '```' → logprob: -16.000015258789062
    6. '[
' → logprob: -17.250015258789062
    7. '][' → logprob: -17.750015258789062
    8. '(i' → logprob: -18.750015258789062
    9. ' i' → logprob: -19.000015258789062
    10. ']' → logprob: -19.125015258789062

Token 1606: '+' (ID: 10)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.14467529952526093
    2. '[i' → logprob: -2.3946752548217773
    3. '+' → logprob: -3.1446752548217773
    4. ']' → logprob: -8.644675254821777
    5. '+i' → logprob: -9.019675254821777
    6. '(i' → logprob: -9.894675254821777
    7. '{i' → logprob: -10.394675254821777
    8. ' i' → logprob: -11.769675254821777
    9. '[' → logprob: -12.144675254821777
    10. '   ' → logprob: -12.269675254821777

Token 1607: 'length' (ID: 7914)
  Prédit: 'length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'length' → logprob: -9.088346359931165e-07
    2. ' length' → logprob: -14.625000953674316
    3. '_length' → logprob: -15.750000953674316
    4. 'i' → logprob: -16.0
    5. ']' → logprob: -17.25
    6. '(length' → logprob: -17.875
    7. '-length' → logprob: -18.0
    8. '+' → logprob: -18.125
    9. '	length' → logprob: -18.25
    10. '```' → logprob: -18.625

Token 1608: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04301311820745468
    2. '+' → logprob: -3.168013095855713
    3. '[' → logprob: -11.418013572692871
    4. '[i' → logprob: -13.918013572692871
    5. '```' → logprob: -14.043013572692871
    6. '   ' → logprob: -14.918013572692871
    7. ' ' → logprob: -16.043012619018555
    8. '
' → logprob: -16.043012619018555
    9. ' +
' → logprob: -16.168012619018555
    10. '           ' → logprob: -16.418012619018555

Token 1609: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.061969030648469925
    2. ' +' → logprob: -2.811969041824341
    3. '```' → logprob: -13.936968803405762
    4. '+
' → logprob: -15.811968803405762
    5. '[' → logprob: -16.561969757080078
    6. ' ' → logprob: -17.311969757080078
    7. '+[' → logprob: -17.311969757080078
    8. '+(' → logprob: -17.436969757080078
    9. '           ' → logprob: -17.561969757080078
    10. '+d' → logprob: -17.561969757080078

Token 1610: ' dp' (ID: 21546)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.0005558936391025782
    2. ' total' → logprob: -7.500555992126465
    3. '(total' → logprob: -12.750555992126465
    4. 'dp' → logprob: -16.75055503845215
    5. '   ' → logprob: -18.12555503845215
    6. '           ' → logprob: -19.62555503845215
    7. '               ' → logprob: -19.87555503845215
    8. '                   ' → logprob: -20.25055503845215
    9. ' (' → logprob: -20.25055503845215
    10. 'tot' → logprob: -20.62555503845215

Token 1611: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.3868938982486725
    2. 'i' → logprob: -1.13689386844635
    3. ' i' → logprob: -10.886894226074219
    4. '```' → logprob: -14.011894226074219
    5. '                   ' → logprob: -14.136894226074219
    6. '   ' → logprob: -14.386894226074219
    7. '{i' → logprob: -14.511894226074219
    8. '               ' → logprob: -14.761894226074219
    9. '           ' → logprob: -15.136894226074219
    10. '	i' → logprob: -15.261894226074219

Token 1612: ']*' (ID: 18579)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.10812734812498093
    2. '+' → logprob: -3.1081273555755615
    3. '[length' → logprob: -3.8581273555755615
    4. ']' → logprob: -4.358127117156982
    5. '*' → logprob: -4.483127117156982
    6. '*i' → logprob: -5.608127117156982
    7. '+i' → logprob: -6.233127117156982
    8. 'i' → logprob: -6.358127117156982
    9. '[' → logprob: -6.858127117156982
    10. '][' → logprob: -6.983127117156982

Token 1613: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.00012451570364646614
    2. ' total' → logprob: -9.00012493133545
    3. '(total' → logprob: -13.75012493133545
    4. '   ' → logprob: -21.125123977661133
    5. 'first' → logprob: -21.125123977661133
    6. '           ' → logprob: -21.250123977661133
    7. '
' → logprob: -21.625123977661133
    8. '                   ' → logprob: -21.875123977661133
    9. '	total' → logprob: -22.000123977661133
    10. '               ' → logprob: -22.125123977661133

Token 1614: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0619698166847229
    2. ')%' → logprob: -2.811969757080078
    3. ' )' → logprob: -13.061969757080078
    4. ')\
' → logprob: -17.186969757080078
    5. '   ' → logprob: -18.061969757080078
    6. '）' → logprob: -18.311969757080078
    7. '%' → logprob: -18.436969757080078
    8. ')#' → logprob: -19.186969757080078
    9. ')
' → logprob: -19.311969757080078
    10. ')&' → logprob: -19.436969757080078

Token 1615: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -3.7697225252486533e-06
    2. ' MOD' → logprob: -12.500003814697266
    3. '_MOD' → logprob: -21.625003814697266
    4. '   ' → logprob: -22.125003814697266
    5. '.MOD' → logprob: -23.875003814697266
    6. 'MD' → logprob: -24.125003814697266
    7. '
' → logprob: -24.750003814697266
    8. '```' → logprob: -25.125003814697266
    9. '100' → logprob: -25.750003814697266
    10. 'MO' → logprob: -26.000003814697266

Token 1616: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1617: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1618: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1263611614704132
    2. '       ' → logprob: -3.126361131668091
    3. '<|end|>' → logprob: -3.501361131668091
    4. 'print' (adapté à ' print') → logprob: -3.876361131668091
    5. '```' → logprob: -4.00136137008667
    6. '[' → logprob: -6.75136137008667
    7. '    
' → logprob: -7.12636137008667
    8. '
' → logprob: -7.50136137008667
    9. ')' → logprob: -8.001360893249512
    10. ' print' → logprob: -8.126360893249512

Token 1619: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0015028368216007948
    2. 'dp' → logprob: -6.501502990722656
    3. ' dp' → logprob: -15.376502990722656
    4. '(' → logprob: -16.376502990722656
    5. '(sum' → logprob: -16.626502990722656
    6. '	dp' → logprob: -17.626502990722656
    7. '((' → logprob: -17.876502990722656
    8. ' (' → logprob: -18.126502990722656
    9. '_dp' → logprob: -18.126502990722656
    10. '(df' → logprob: -18.501502990722656

Token 1620: '[N' (ID: 49776)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.03119693510234356
    2. '[len' → logprob: -3.5311968326568604
    3. '[N' → logprob: -7.4061970710754395
    4. '[' → logprob: -7.5311970710754395
    5. '[-' → logprob: -8.781196594238281
    6. ')' → logprob: -9.531196594238281
    7. '[n' → logprob: -10.281196594238281
    8. '[
' → logprob: -11.656196594238281
    9. '[end' → logprob: -12.031196594238281
    10. '(i' → logprob: -12.281196594238281

Token 1621: ']%' (ID: 158002)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0005669722449965775
    2. ')' → logprob: -7.5005669593811035
    3. ']' → logprob: -11.500567436218262
    4. '])
' → logprob: -13.250567436218262
    5. ')])' → logprob: -14.125567436218262
    6. '))' → logprob: -14.500567436218262
    7. ')]' → logprob: -15.375567436218262
    8. '})' → logprob: -15.625567436218262
    9. ' ])' → logprob: -15.750567436218262
    10. ''])' → logprob: -16.500566482543945

Token 1622: 'MOD' (ID: 52135)
  Prédit: 'MOD'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'MOD' → logprob: -0.00012487331696320325
    2. '100' → logprob: -9.00012493133545
    3. ' MOD' → logprob: -13.50012493133545
    4. '(M' → logprob: -17.500123977661133
    5. '
' → logprob: -19.500123977661133
    6. '_MOD' → logprob: -19.500123977661133
    7. '.MOD' → logprob: -20.125123977661133
    8. '```' → logprob: -20.250123977661133
    9. 'MO' → logprob: -20.625123977661133
    10. 'Mod' → logprob: -20.875123977661133

Token 1623: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. '`)' → logprob: -13.87500286102295
    3. '')' → logprob: -14.37500286102295
    4. '())' → logprob: -14.37500286102295
    5. ')
' → logprob: -15.12500286102295
    6. '")' → logprob: -15.37500286102295
    7. '```' → logprob: -15.37500286102295
    8. ' )' → logprob: -15.62500286102295
    9. '()' → logprob: -16.500003814697266
    10. '   ' → logprob: -16.750003814697266

Token 1624: '        
' (ID: 3564)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1625: 'main' (ID: 7731)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1626: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1624
Tokens correctement prédits (1ère position, stricte): 646
Tokens correctement prédits (1ère position, avec adaptation): 729
Tokens correctement prédits (top 10): 1361
Précision stricte (1ère position): 39.78%
Précision adaptée (1ère position): 44.89%
Précision (top 10): 83.81%
================================================================================
