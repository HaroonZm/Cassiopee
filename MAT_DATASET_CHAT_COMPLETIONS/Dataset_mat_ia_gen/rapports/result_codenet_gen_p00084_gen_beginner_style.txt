================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:10:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
line = input()

separators = [' ', '.', ',']
for sep in separators:
    line = line.replace(sep, ' ')

words = line.split()
result = []
for w in words:
    if 3 <= len(w) <= 6:
        result.append(w)

print(' '.join(result))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'line' (ID: 1137)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' input' (ID: 3422)
  → Token d'amorce (pas de prédiction)

Token 3: '()

' (ID: 5874)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0027069158386439085
    2. '('' → logprob: -7.127707004547119
    3. '()' → logprob: -7.252707004547119
    4. ''' → logprob: -7.502707004547119
    5. '.' → logprob: -8.627706527709961
    6. '(
' → logprob: -9.252706527709961
    7. '`' → logprob: -9.377706527709961
    8. '"' → logprob: -9.877706527709961
    9. ''s' → logprob: -10.127706527709961
    10. '```' → logprob: -10.127706527709961

Token 4: 'se' (ID: 344)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.010798551142215729
    2. '.strip' → logprob: -4.760798454284668
    3. '=' → logprob: -7.135798454284668
    4. 'if' → logprob: -7.385798454284668
    5. '.split' → logprob: -8.510798454284668
    6. '+' → logprob: -9.135798454284668
    7. '.lower' → logprob: -9.385798454284668
    8. ' if' → logprob: -9.385798454284668
    9. 'strip' → logprob: -9.510798454284668
    10. '_' → logprob: -10.260798454284668

Token 5: 'par' (ID: 796)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.15142272412776947
    2. 'nd' → logprob: -2.2764227390289307
    3. 'nt' → logprob: -3.5264227390289307
    4. 'p' → logprob: -5.776422500610352
    5. 'cond' → logprob: -5.901422500610352
    6. 'n' → logprob: -6.651422500610352
    7. 'r' → logprob: -7.776422500610352
    8. 'm' → logprob: -8.651422500610352
    9. 'c' → logprob: -8.776422500610352
    10. 'lf' → logprob: -9.526422500610352

Token 6: 'ators' (ID: 4840)
  Prédit: 'ate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ate' → logprob: -0.19096557796001434
    2. 'ator' → logprob: -1.8159655332565308
    3. 'ated' → logprob: -4.56596565246582
    4. 's' → logprob: -7.81596565246582
    5. 'ators' → logprob: -9.56596565246582
    6. 'te' → logprob: -9.69096565246582
    7. 'a' → logprob: -9.94096565246582
    8. 'at' → logprob: -10.06596565246582
    9. 'tor' → logprob: -10.31596565246582
    10. 'ates' → logprob: -10.44096565246582

Token 7: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1399231255054474
    2. ' =' → logprob: -2.139923095703125
    3. '.' → logprob: -4.764923095703125
    4. 's' → logprob: -5.889923095703125
    5. '.split' → logprob: -6.889923095703125
    6. '_' → logprob: -9.139923095703125
    7. ',' → logprob: -9.264923095703125
    8. '[' → logprob: -10.014923095703125
    9. '.replace' → logprob: -10.264923095703125
    10. 'import' → logprob: -10.389923095703125

Token 8: ' ['' (ID: 5140)
  Prédit: '[''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.24062341451644897
    2. ' ['' → logprob: -2.4906234741210938
    3. '["' → logprob: -2.7406234741210938
    4. '"' → logprob: -2.9906234741210938
    5. '[' → logprob: -4.990623474121094
    6. ''' → logprob: -6.115623474121094
    7. '{'' → logprob: -6.115623474121094
    8. ' ["' → logprob: -6.615623474121094
    9. ' "' → logprob: -6.615623474121094
    10. ' {'' → logprob: -7.240623474121094

Token 9: ' ',' (ID: 14089)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4487414062023163
    2. '',' → logprob: -1.6987414360046387
    3. ' ',' → logprob: -3.1987414360046387
    4. ' ','' → logprob: -3.4487414360046387
    5. '','' → logprob: -3.6987414360046387
    6. ''' → logprob: -3.6987414360046387
    7. ':' → logprob: -4.573741436004639
    8. '(','' → logprob: -4.698741436004639
    9. '.' → logprob: -5.073741436004639
    10. ' ',',' → logprob: -5.198741436004639

Token 10: ' '.',' (ID: 110580)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '',' → logprob: -0.05337795242667198
    2. ''\' → logprob: -3.053377866744995
    3. ''.' → logprob: -5.678378105163574
    4. ''' → logprob: -7.303378105163574
    5. ' ',',' → logprob: -8.553378105163574
    6. '','' → logprob: -8.803378105163574
    7. '';' → logprob: -9.053378105163574
    8. '':' → logprob: -10.303378105163574
    9. ' ',' → logprob: -10.303378105163574
    10. ''-' → logprob: -10.553378105163574

Token 11: ' ',' (ID: 14089)
  Prédit: '','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.0021782158873975277
    2. ''' → logprob: -7.002178192138672
    3. ''\' → logprob: -7.377178192138672
    4. '':' → logprob: -8.877178192138672
    5. ' ',' → logprob: -9.127178192138672
    6. '','' → logprob: -9.127178192138672
    7. ' ',',' → logprob: -9.252178192138672
    8. '';' → logprob: -9.377178192138672
    9. ''-' → logprob: -10.502178192138672
    10. '']' → logprob: -11.002178192138672

Token 12: '']
' (ID: 9756)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.22187772393226624
    2. '';' → logprob: -1.9718776941299438
    3. '':' → logprob: -3.5968778133392334
    4. '']' → logprob: -4.221877574920654
    5. ']' → logprob: -5.346877574920654
    6. ''"' → logprob: -5.846877574920654
    7. ''?' → logprob: -5.971877574920654
    8. ''\' → logprob: -6.096877574920654
    9. '',' → logprob: -6.346877574920654
    10. '"' → logprob: -7.346877574920654

Token 13: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.20647843182086945
    2. 'tokens' → logprob: -2.5814783573150635
    3. 'words' → logprob: -2.8314783573150635
    4. 'word' → logprob: -3.4564783573150635
    5. ' for' → logprob: -5.081478595733643
    6. 'token' → logprob: -5.331478595733643
    7. 'result' → logprob: -5.706478595733643
    8. 'split' → logprob: -6.706478595733643
    9. 'if' → logprob: -7.081478595733643
    10. 'chars' → logprob: -7.081478595733643

Token 14: ' sep' (ID: 31529)
  Prédit: ' word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.3668862581253052
    2. ' token' → logprob: -2.1168861389160156
    3. ' char' → logprob: -2.4918861389160156
    4. ' c' → logprob: -2.6168861389160156
    5. ' i' → logprob: -4.366886138916016
    6. ' ch' → logprob: -5.116886138916016
    7. ' ' → logprob: -5.866886138916016
    8. ' separator' → logprob: -6.116886138916016
    9. ' sep' → logprob: -6.491886138916016
    10. ' part' → logprob: -6.866886138916016

Token 15: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06255641579627991
    2. 'in' → logprob: -2.812556505203247
    3. ' ' → logprob: -8.062556266784668
    4. 'i' → logprob: -9.062556266784668
    5. 's' → logprob: -9.687556266784668
    6. ' i' → logprob: -10.562556266784668
    7. '  ' → logprob: -10.687556266784668
    8. '   ' → logprob: -11.937556266784668
    9. '	in' → logprob: -12.187556266784668
    10. '_' → logprob: -12.312556266784668

Token 16: ' separators' (ID: 183833)
  Prédit: 'se'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'se' → logprob: -0.1002403199672699
    2. ' separators' → logprob: -2.3502402305603027
    3. ' separ' → logprob: -10.975240707397461
    4. 'separator' → logprob: -11.725240707397461
    5. 'line' → logprob: -12.225240707397461
    6. '	se' → logprob: -13.975240707397461
    7. '['' → logprob: -14.725240707397461
    8. ' line' → logprob: -14.850240707397461
    9. 'sep' → logprob: -14.975240707397461
    10. ' ['' → logprob: -15.350240707397461

Token 17: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003654978354461491
    2. ' :' → logprob: -8.000365257263184
    3. ':**' → logprob: -10.875365257263184
    4. '):' → logprob: -12.500365257263184
    5. ',' → logprob: -13.500365257263184
    6. '=' → logprob: -14.125365257263184
    7. ',:' → logprob: -14.625365257263184
    8. '>:' → logprob: -14.750365257263184
    9. ' if' → logprob: -14.875365257263184
    10. ':return' → logprob: -14.875365257263184

Token 18: '   ' (ID: 271)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.11133894324302673
    2. '   ' → logprob: -2.8613388538360596
    3. 'line' → logprob: -3.3613388538360596
    4. ' if' → logprob: -4.361339092254639
    5. 'if' → logprob: -7.861339092254639
    6. ' token' → logprob: -9.36133861541748
    7. ' tokens' → logprob: -10.11133861541748
    8. ' ' → logprob: -10.23633861541748
    9. '	line' → logprob: -10.23633861541748
    10. '    ' → logprob: -10.36133861541748

Token 19: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.12247757613658905
    2. ' line' → logprob: -2.2474775314331055
    3. 'if' → logprob: -4.8724775314331055
    4. ' if' → logprob: -6.2474775314331055
    5. '   ' → logprob: -11.747477531433105
    6. '[line' → logprob: -13.122477531433105
    7. 'token' → logprob: -13.497477531433105
    8. '	line' → logprob: -13.747477531433105
    9. 'lines' → logprob: -13.872477531433105
    10. 'tokens' → logprob: -14.122477531433105

Token 20: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20302951335906982
    2. ' =' → logprob: -1.7030295133590698
    3. '=line' → logprob: -6.453029632568359
    4. '.replace' → logprob: -10.57802963256836
    5. '.split' → logprob: -12.07802963256836
    6. 'split' → logprob: -12.20302963256836
    7. 'replace' → logprob: -14.82802963256836
    8. '=re' → logprob: -14.82802963256836
    9. '.' → logprob: -15.45302963256836
    10. 's' → logprob: -15.57802963256836

Token 21: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.023245826363563538
    2. ' line' → logprob: -3.7732458114624023
    3. '	line' → logprob: -16.02324676513672
    4. '#line' → logprob: -17.14824676513672
    5. ' ' → logprob: -17.39824676513672
    6. '[line' → logprob: -17.52324676513672
    7. '(line' → logprob: -17.77324676513672
    8. '=line' → logprob: -18.02324676513672
    9. 'lin' → logprob: -18.39824676513672
    10. '_line' → logprob: -19.14824676513672

Token 22: '.replace' (ID: 12804)
  Prédit: '.replace'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.replace' → logprob: -0.0040895589627325535
    2. '.split' → logprob: -5.50408935546875
    3. '.' → logprob: -12.00408935546875
    4. '.rstrip' → logprob: -12.75408935546875
    5. 'replace' → logprob: -13.87908935546875
    6. '.strip' → logprob: -14.62908935546875
    7. ' .' → logprob: -15.50408935546875
    8. '.Replace' → logprob: -15.62908935546875
    9. '.re' → logprob: -16.75408935546875
    10. '.endswith' → logprob: -16.87908935546875

Token 23: '(se' (ID: 19430)
  Prédit: '(se'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(se' → logprob: -8.537868779967539e-06
    2. '(' → logprob: -11.875008583068848
    3. '(separator' → logprob: -13.875008583068848
    4. 'sep' → logprob: -15.125008583068848
    5. '(f' → logprob: -15.500008583068848
    6. '(sec' → logprob: -17.87500762939453
    7. '(
' → logprob: -18.12500762939453
    8. '_sep' → logprob: -19.12500762939453
    9. '('' → logprob: -19.25000762939453
    10. ' (' → logprob: -19.37500762939453

Token 24: 'p' (ID: 79)
  Prédit: 'p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -5.512236498361744e-07
    2. ' p' → logprob: -15.750000953674316
    3. ''p' → logprob: -16.25
    4. ')p' → logprob: -17.25
    5. '```' → logprob: -17.625
    6. 'п' → logprob: -17.625
    7. 'parator' → logprob: -17.75
    8. 'р' → logprob: -17.875
    9. 'perator' → logprob: -18.0
    10. '	p' → logprob: -18.25

Token 25: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0017362285871058702
    2. '',' → logprob: -6.376736164093018
    3. ')' → logprob: -11.001736640930176
    4. '','' → logprob: -11.376736640930176
    5. ' ,' → logprob: -13.751736640930176
    6. ','' → logprob: -13.876736640930176
    7. ',",' → logprob: -13.876736640930176
    8. ''',' → logprob: -14.126736640930176
    9. '(',' → logprob: -14.251736640930176
    10. '",' → logprob: -14.376736640930176

Token 26: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0006645413814112544
    2. '''' → logprob: -8.125664710998535
    3. '"' → logprob: -8.625664710998535
    4. ''\' → logprob: -9.375664710998535
    5. ' '' → logprob: -9.625664710998535
    6. ''_' → logprob: -11.875664710998535
    7. ''t' → logprob: -12.125664710998535
    8. ''''' → logprob: -12.125664710998535
    9. ''-' → logprob: -12.625664710998535
    10. ' '')' → logprob: -12.875664710998535

Token 27: ' '' (ID: 461)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7446449398994446
    2. '')' → logprob: -1.1196448802947998
    3. ''' → logprob: -2.7446448802948
    4. ' ' → logprob: -3.2446448802948
    5. '<|end|>' → logprob: -3.3696448802948
    6. '<|end|>' → logprob: -3.4946448802948
    7. '\n' → logprob: -4.119645118713379
    8. ',' → logprob: -5.119645118713379
    9. ' ')' → logprob: -6.619645118713379
    10. '
' → logprob: -6.744645118713379

Token 28: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.088346359931165e-07
    2. ')
' → logprob: -14.250000953674316
    3. ' )' → logprob: -16.125
    4. '')' → logprob: -17.625
    5. '))' → logprob: -18.625
    6. ')`' → logprob: -18.875
    7. ')

' → logprob: -19.125
    8. '   ' → logprob: -19.25
    9. ')#' → logprob: -19.25
    10. '`)' → logprob: -19.5

Token 29: 'words' (ID: 10020)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.8144799470901489
    2. '#' → logprob: -1.064479947090149
    3. ')' → logprob: -2.4394798278808594
    4. 'print' → logprob: -3.6894798278808594
    5. 'split' → logprob: -3.8144798278808594
    6. '<|end|>' → logprob: -3.9394798278808594
    7. 'word' → logprob: -4.189479827880859
    8. 'words' → logprob: -4.814479827880859
    9. ''' → logprob: -5.189479827880859
    10. 's' → logprob: -5.314479827880859

Token 30: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38881155848503113
    2. ' =' → logprob: -1.1388115882873535
    3. '.' → logprob: -6.3888115882873535
    4. '.split' → logprob: -8.638811111450195
    5. 'split' → logprob: -11.013811111450195
    6. '.append' → logprob: -11.138811111450195
    7. '.extend' → logprob: -11.513811111450195
    8. '.=' → logprob: -11.513811111450195
    9. ' ' → logprob: -11.638811111450195
    10. ')' → logprob: -12.388811111450195

Token 31: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.06196858361363411
    2. ' line' → logprob: -2.8119685649871826
    3. '[line' → logprob: -14.311968803405762
    4. 'list' → logprob: -16.686967849731445
    5. '#line' → logprob: -17.061967849731445
    6. '	line' → logprob: -17.061967849731445
    7. ' ' → logprob: -17.686967849731445
    8. '(line' → logprob: -17.936967849731445
    9. '-line' → logprob: -18.186967849731445
    10. '[]' → logprob: -18.186967849731445

Token 32: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.01185216661542654
    2. '.' → logprob: -4.761852264404297
    3. '.strip' → logprob: -5.761852264404297
    4. ' .' → logprob: -10.261852264404297
    5. '.lower' → logprob: -10.511852264404297
    6. 'split' → logprob: -11.136852264404297
    7. '.Split' → logprob: -12.511852264404297
    8. '.s' → logprob: -13.011852264404297
    9. '.rstrip' → logprob: -13.011852264404297
    10. '.replace' → logprob: -13.636852264404297

Token 33: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.4297406077384949
    2. '('' → logprob: -1.1797406673431396
    3. '()' → logprob: -3.1797406673431396
    4. '("("' → logprob: -8.054740905761719
    5. '(`' → logprob: -11.304740905761719
    6. ''' → logprob: -11.929740905761719
    7. '("' → logprob: -12.054740905761719
    8. '```' → logprob: -12.304740905761719
    9. '('.')' → logprob: -12.679740905761719
    10. '(
' → logprob: -13.429740905761719

Token 34: 'result' (ID: 2521)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.298817902803421
    2. '=' → logprob: -2.6738178730010986
    3. ')' → logprob: -3.1738178730010986
    4. '[' → logprob: -3.4238178730010986
    5. 'words' → logprob: -4.048818111419678
    6. ' ' → logprob: -4.173818111419678
    7. ':' → logprob: -4.298818111419678
    8. 'print' → logprob: -4.298818111419678
    9. '#' → logprob: -4.423818111419678
    10. ''' → logprob: -4.923818111419678

Token 35: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2789265215396881
    2. ' =' → logprob: -1.5289264917373657
    3. '_' → logprob: -4.153926372528076
    4. '.' → logprob: -5.028926372528076
    5. '[:]' → logprob: -6.153926372528076
    6. '[' → logprob: -6.653926372528076
    7. '.append' → logprob: -7.778926372528076
    8. 's' → logprob: -8.403926849365234
    9. '(' → logprob: -10.028926849365234
    10. '[]' → logprob: -10.153926849365234

Token 36: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3332822024822235
    2. '{}' → logprob: -1.333282232284546
    3. 'words' → logprob: -5.583281993865967
    4. 'len' → logprob: -5.583281993865967
    5. ' []' → logprob: -5.708281993865967
    6. 'set' → logprob: -5.958281993865967
    7. '[' → logprob: -6.583281993865967
    8. ''' → logprob: -6.708281993865967
    9. '0' → logprob: -7.208281993865967
    10. '"' → logprob: -7.208281993865967

Token 37: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.00012964145571459085
    2. ' for' → logprob: -9.000129699707031
    3. '```' → logprob: -13.000129699707031
    4. '[' → logprob: -14.250129699707031
    5. '`' → logprob: -14.625129699707031
    6. '\n' → logprob: -14.875129699707031
    7. 'word' → logprob: -15.000129699707031
    8. ' 
' → logprob: -15.125129699707031
    9. 'f' → logprob: -15.125129699707031
    10. ''' → logprob: -15.125129699707031

Token 38: ' w' (ID: 286)
  Prédit: ' word'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' word' → logprob: -0.013328105211257935
    2. ' w' → logprob: -4.7633280754089355
    3. 'word' → logprob: -5.3883280754089355
    4. 'w' → logprob: -9.388328552246094
    5. ' ' → logprob: -10.013328552246094
    6. ' i' → logprob: -13.263328552246094
    7. '	word' → logprob: -13.513328552246094
    8. ' wor' → logprob: -15.388328552246094
    9. ' token' → logprob: -16.013328552246094
    10. '   ' → logprob: -16.013328552246094

Token 39: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03013978898525238
    2. 'in' → logprob: -3.530139684677124
    3. ' ' → logprob: -8.280139923095703
    4. 'i' → logprob: -9.155139923095703
    5. '  ' → logprob: -12.030139923095703
    6. ' i' → logprob: -12.280139923095703
    7. '   ' → logprob: -12.780139923095703
    8. 'n' → logprob: -12.780139923095703
    9. 'e' → logprob: -12.905139923095703
    10. '_' → logprob: -12.905139923095703

Token 40: ' words' (ID: 6391)
  Prédit: 'words'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'words' → logprob: -0.005242056678980589
    2. ' words' → logprob: -5.255241870880127
    3. '(words' → logprob: -12.880242347717285
    4. 'w' → logprob: -13.130242347717285
    5. ' ' → logprob: -13.380242347717285
    6. 'word' → logprob: -13.880242347717285
    7. '   ' → logprob: -14.380242347717285
    8. '.words' → logprob: -15.130242347717285
    9. 'result' → logprob: -15.630242347717285
    10. '  ' → logprob: -17.13024139404297

Token 41: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0005939012626186013
    2. ' :' → logprob: -8.000594139099121
    3. ' if' → logprob: -9.750594139099121
    4. 'if' → logprob: -10.000594139099121
    5. '[' → logprob: -10.125594139099121
    6. '.' → logprob: -10.500594139099121
    7. '):' → logprob: -10.875594139099121
    8. ':
' → logprob: -11.000594139099121
    9. ',' → logprob: -11.375594139099121
    10. ':**' → logprob: -11.500594139099121

Token 42: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.27722176909446716
    2. 'result' → logprob: -2.0272216796875
    3. 'if' → logprob: -2.6522216796875
    4. ' if' → logprob: -3.4022216796875
    5. ' result' → logprob: -5.5272216796875
    6. 'w' → logprob: -6.6522216796875
    7. 'i' → logprob: -8.4022216796875
    8. '    ' → logprob: -8.6522216796875
    9. ' ' → logprob: -9.0272216796875
    10. ''' → logprob: -9.0272216796875

Token 43: ' if' (ID: 538)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.3943970799446106
    2. 'if' (adapté à ' if') → logprob: -1.1443970203399658
    3. 'w' → logprob: -5.144397258758545
    4. ' if' → logprob: -6.769397258758545
    5. ' result' → logprob: -7.894397258758545
    6. 'word' → logprob: -9.894396781921387
    7. 'i' → logprob: -10.644396781921387
    8. '   ' → logprob: -11.394396781921387
    9. ' w' → logprob: -11.769396781921387
    10. 's' → logprob: -11.894396781921387

Token 44: ' ' (ID: 220)
  Prédit: ' w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.48936593532562256
    2. 'w' → logprob: -0.9893659353256226
    3. ' not' → logprob: -5.239366054534912
    4. ' ' → logprob: -5.739366054534912
    5. 'len' → logprob: -5.989366054534912
    6. ' len' → logprob: -6.114366054534912
    7. ''' → logprob: -7.489366054534912
    8. ' '' → logprob: -7.614366054534912
    9. 'not' → logprob: -7.864366054534912
    10. '   ' → logprob: -8.989365577697754

Token 45: '3' (ID: 18)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.005271941889077425
    2. 'len' → logprob: -5.630271911621094
    3. 'not' → logprob: -7.130271911621094
    4. ' w' → logprob: -7.380271911621094
    5. ' not' → logprob: -9.505271911621094
    6. ''w' → logprob: -9.505271911621094
    7. ''' → logprob: -10.255271911621094
    8. 'word' → logprob: -11.005271911621094
    9. ' len' → logprob: -11.005271911621094
    10. ' ' → logprob: -11.505271911621094

Token 46: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.06904878467321396
    2. '<=' → logprob: -2.8190488815307617
    3. ' <' → logprob: -5.694048881530762
    4. ' ' → logprob: -7.069048881530762
    5. ' >=' → logprob: -7.944048881530762
    6. ' ==' → logprob: -7.944048881530762
    7. ' >' → logprob: -8.069048881530762
    8. '>' → logprob: -8.069048881530762
    9. '==' → logprob: -8.069048881530762
    10. '<' → logprob: -8.194048881530762

Token 47: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -1.306760805164231e-05
    2. ' len' → logprob: -11.25001335144043
    3. '   ' → logprob: -17.50001335144043
    4. '=len' → logprob: -19.00001335144043
    5. '(len' → logprob: -19.50001335144043
    6. '	len' → logprob: -22.00001335144043
    7. '<len' → logprob: -22.25001335144043
    8. '[len' → logprob: -22.37501335144043
    9. 'le' → logprob: -22.75001335144043
    10. 'int' → logprob: -22.75001335144043

Token 48: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -1.723973582556937e-05
    2. '(' → logprob: -11.000017166137695
    3. 'w' → logprob: -14.750017166137695
    4. '(word' → logprob: -15.750017166137695
    5. '(s' → logprob: -17.250017166137695
    6. ' (' → logprob: -18.125017166137695
    7. '(
' → logprob: -19.750017166137695
    8. '	w' → logprob: -19.875017166137695
    9. '(words' → logprob: -20.000017166137695
    10. '(v' → logprob: -20.500017166137695

Token 49: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007516168989241123
    2. '):' → logprob: -7.375751495361328
    3. ' )' → logprob: -9.750751495361328
    4. '):
' → logprob: -10.375751495361328
    5. ')<=' → logprob: -10.750751495361328
    6. '):

' → logprob: -11.750751495361328
    7. ' <=' → logprob: -13.250751495361328
    8. '<=' → logprob: -14.125751495361328
    9. ' and' → logprob: -14.625751495361328
    10. '   ' → logprob: -15.000751495361328

Token 50: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.4912843108177185
    2. ' <=' → logprob: -0.9912843108177185
    3. ' and' → logprob: -4.366284370422363
    4. 'and' → logprob: -5.866284370422363
    5. ':' → logprob: -6.991284370422363
    6. ' ' → logprob: -8.866284370422363
    7. '<|end|>' → logprob: -8.866284370422363
    8. '<' → logprob: -9.366284370422363
    9. '  ' → logprob: -10.616284370422363
    10. '   ' → logprob: -10.741284370422363

Token 51: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.28872352838516235
    2. '6' → logprob: -1.9137234687805176
    3. '7' → logprob: -2.2887234687805176
    4. '10' → logprob: -6.788723468780518
    5. '8' → logprob: -8.038723945617676
    6. ' ' → logprob: -9.038723945617676
    7. '4' → logprob: -9.038723945617676
    8. '15' → logprob: -9.913723945617676
    9. '20' → logprob: -10.163723945617676
    10. '9' → logprob: -10.288723945617676

Token 52: '6' (ID: 21)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.15377900004386902
    2. '7' → logprob: -2.4037790298461914
    3. '6' → logprob: -3.0287790298461914
    4. '10' → logprob: -6.778779029846191
    5. '12' → logprob: -6.903779029846191
    6. '15' → logprob: -7.028779029846191
    7. '8' → logprob: -8.028779029846191
    8. '4' → logprob: -8.653779029846191
    9. '9' → logprob: -9.028779029846191
    10. '20' → logprob: -9.278779029846191

Token 53: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03251247480511665
    2. ' and' → logprob: -4.157512664794922
    3. ':
' → logprob: -4.157512664794922
    4. ' :' → logprob: -7.532512664794922
    5. 'and' → logprob: -9.407512664794922
    6. ' :
' → logprob: -9.907512664794922
    7. '   ' → logprob: -11.782512664794922
    8. '):' → logprob: -11.782512664794922
    9. '):
' → logprob: -12.657512664794922
    10. ',' → logprob: -13.157512664794922

Token 54: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.01270235050469637
    2. 'result' → logprob: -5.137702465057373
    3. ' result' → logprob: -5.262702465057373
    4. '   ' → logprob: -6.512702465057373
    5. '        
' → logprob: -10.387701988220215
    6. '_' → logprob: -12.137701988220215
    7. '    
' → logprob: -12.137701988220215
    8. '    ' → logprob: -12.387701988220215
    9. '```' → logprob: -12.637701988220215
    10. '	result' → logprob: -12.637701988220215

Token 55: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.44857755303382874
    2. 'result' (adapté à ' result') → logprob: -1.0735775232315063
    3. '       ' → logprob: -4.073577404022217
    4. '   ' → logprob: -5.948577404022217
    5. '           ' → logprob: -11.073577880859375
    6. '	result' → logprob: -11.323577880859375
    7. '    ' → logprob: -11.823577880859375
    8. '```' → logprob: -12.948577880859375
    9. ' ' → logprob: -13.198577880859375
    10. ',result' → logprob: -13.323577880859375

Token 56: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011051944456994534
    2. '.' → logprob: -4.511052131652832
    3. '.extend' → logprob: -13.386052131652832
    4. ' .' → logprob: -13.511052131652832
    5. '.app' → logprob: -14.761052131652832
    6. '.add' → logprob: -15.136052131652832
    7. '.ap' → logprob: -15.511052131652832
    8. 'append' → logprob: -15.636052131652832
    9. '.Append' → logprob: -15.761052131652832
    10. '.push' → logprob: -16.261051177978516

Token 57: '(w' (ID: 7420)
  Prédit: '(w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(w' → logprob: -0.00028040475444868207
    2. '(' → logprob: -8.500280380249023
    3. 'w' → logprob: -9.500280380249023
    4. '('' → logprob: -13.250280380249023
    5. '(word' → logprob: -16.125280380249023
    6. '(
' → logprob: -17.125280380249023
    7. '((' → logprob: -17.250280380249023
    8. ' w' → logprob: -17.625280380249023
    9. '("("' → logprob: -18.125280380249023
    10. ''w' → logprob: -18.250280380249023

Token 58: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4021237802808173e-05
    2. ')
' → logprob: -11.875014305114746
    3. ' )' → logprob: -12.000014305114746
    4. '))' → logprob: -15.375014305114746
    5. '   ' → logprob: -15.500014305114746
    6. '')' → logprob: -16.12501335144043
    7. ')return' → logprob: -16.62501335144043
    8. ')

' → logprob: -17.00001335144043
    9. ' ' → logprob: -17.75001335144043
    10. ')#' → logprob: -17.75001335144043

Token 59: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0020611651707440615
    2. '<|end|>' → logprob: -6.877061367034912
    3. ''' → logprob: -7.877061367034912
    4. ' ' → logprob: -8.502060890197754
    5. ')' → logprob: -9.002060890197754
    6. 'result' → logprob: -9.252060890197754
    7. ' print' → logprob: -9.877060890197754
    8. '#' → logprob: -10.252060890197754
    9. '[' → logprob: -10.502060890197754
    10. '.' → logprob: -10.752060890197754

Token 60: '('' (ID: 706)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.10111913084983826
    2. '('' → logprob: -2.351119041442871
    3. '("("' → logprob: -7.226119041442871
    4. '(result' → logprob: -9.726119041442871
    5. '(*' → logprob: -9.851119041442871
    6. '(len' → logprob: -10.226119041442871
    7. '("' → logprob: -10.601119041442871
    8. '()' → logprob: -12.351119041442871
    9. '(sum' → logprob: -13.476119041442871
    10. '(tuple' → logprob: -14.226119041442871

Token 61: ' '.' (ID: 12662)
  Prédit: ' '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' '.' → logprob: -0.20193472504615784
    2. ''' → logprob: -1.7019346952438354
    3. ' '' → logprob: -8.201934814453125
    4. ''.' → logprob: -9.076934814453125
    5. ' ')' → logprob: -9.826934814453125
    6. '',' → logprob: -10.576934814453125
    7. '('' → logprob: -10.951934814453125
    8. '')' → logprob: -11.201934814453125
    9. ' ',' → logprob: -11.451934814453125
    10. 'join' → logprob: -12.826934814453125

Token 62: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.981667537620524e-06
    2. 'print' → logprob: -14.250001907348633
    3. ' join' → logprob: -14.375001907348633
    4. 'jo' → logprob: -14.875001907348633
    5. '```' → logprob: -15.500001907348633
    6. 'j' → logprob: -16.000001907348633
    7. 'strip' → logprob: -18.250001907348633
    8. ')' → logprob: -18.750001907348633
    9. '6' → logprob: -20.250001907348633
    10. '1' → logprob: -20.375001907348633

Token 63: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -5.5577775128767826e-06
    2. 'result' → logprob: -12.375005722045898
    3. '(' → logprob: -13.750005722045898
    4. ')' → logprob: -15.500005722045898
    5. '(results' → logprob: -17.8750057220459
    6. '=result' → logprob: -17.8750057220459
    7. ',result' → logprob: -18.5000057220459
    8. '[result' → logprob: -19.3750057220459
    9. ' (' → logprob: -19.7500057220459
    10. ' result' → logprob: -20.0000057220459

Token 64: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.014164921827614307
    2. ')' → logprob: -4.264164924621582
    3. ''))' → logprob: -14.139164924621582
    4. ')))' → logprob: -15.014164924621582
    5. '))
' → logprob: -15.264164924621582
    6. '])' → logprob: -16.889163970947266
    7. '()))' → logprob: -17.139163970947266
    8. ' ))' → logprob: -17.264163970947266
    9. '()' → logprob: -18.014163970947266
    10. '"))' → logprob: -18.014163970947266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 62
Tokens correctement prédits (1ère position, stricte): 22
Tokens correctement prédits (1ère position, avec adaptation): 23
Tokens correctement prédits (top 10): 51
Précision stricte (1ère position): 35.48%
Précision adaptée (1ère position): 37.10%
Précision (top 10): 82.26%
================================================================================
