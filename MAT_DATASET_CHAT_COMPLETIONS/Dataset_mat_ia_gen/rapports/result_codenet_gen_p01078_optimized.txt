================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:09:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import math
N,K=map(int,input().split())
M=N//math.gcd(N,K)
area=M*math.sin(2*math.pi*K*M/N)/2
print(f"{area:.8f}")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' math' (ID: 13324)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'N' (ID: 45)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.008593061938881874
    2. '\n' → logprob: -6.1335930824279785
    3. '<|end|>' → logprob: -6.5085930824279785
    4. '\' → logprob: -6.7585930824279785
    5. '```' → logprob: -6.7585930824279785
    6. 'import' → logprob: -6.8835930824279785
    7. '.pi' → logprob: -8.38359260559082
    8. 'def' → logprob: -8.50859260559082
    9. 'newline' → logprob: -8.88359260559082
    10. '<|end|>' → logprob: -9.00859260559082

Token 4: ',K' (ID: 107147)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -1.2421833276748657
    2. '_' → logprob: -1.3671833276748657
    3. '.' → logprob: -1.6171833276748657
    4. ' =' → logprob: -2.242183208465576
    5. ',' → logprob: -2.867183208465576
    6. ')' → logprob: -3.367183208465576
    7. 'u' → logprob: -4.367183208465576
    8. ' ' → logprob: -4.617183208465576
    9. 'a' → logprob: -4.617183208465576
    10. ' )' → logprob: -5.117183208465576

Token 5: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11300129443407059
    2. ' =' → logprob: -2.2380013465881348
    3. ',' → logprob: -8.738000869750977
    4. ' ' → logprob: -12.113000869750977
    5. ')' → logprob: -12.363000869750977
    6. '_' → logprob: -12.738000869750977
    7. '.' → logprob: -13.988000869750977
    8. ' =
' → logprob: -13.988000869750977
    9. '=

' → logprob: -13.988000869750977
    10. '=
' → logprob: -14.113000869750977

Token 6: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.7010453343391418
    2. ' map' → logprob: -0.7010453343391418
    3. 'int' → logprob: -5.576045513153076
    4. '10' → logprob: -6.451045513153076
    5. ' ' → logprob: -6.701045513153076
    6. ' int' → logprob: -6.951045513153076
    7. '0' → logprob: -9.451045036315918
    8. '100' → logprob: -9.451045036315918
    9. 'input' → logprob: -10.201045036315918
    10. '5' → logprob: -10.326045036315918

Token 7: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1765773743391037
    2. '(int' → logprob: -2.05157732963562
    3. '(lambda' → logprob: -3.92657732963562
    4. '<|end|>' → logprob: -5.051577568054199
    5. '(str' → logprob: -5.426577568054199
    6. '```' → logprob: -7.426577568054199
    7. 'int' → logprob: -7.551577568054199
    8. '[int' → logprob: -7.926577568054199
    9. '(eval' → logprob: -8.9265775680542
    10. '<int' → logprob: -9.0515775680542

Token 8: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.721183180809021
    2. ')' → logprob: -1.221183180809021
    3. '(' → logprob: -1.596183180809021
    4. '(int' → logprob: -4.9711833000183105
    5. '(str' → logprob: -6.0961833000183105
    6. 'input' → logprob: -7.2211833000183105
    7. '```' → logprob: -7.2211833000183105
    8. '(data' → logprob: -7.4711833000183105
    9. '`)' → logprob: -7.4711833000183105
    10. '(math' → logprob: -7.8461833000183105

Token 9: '().' (ID: 1454)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.04019986465573311
    2. '()' → logprob: -3.5401997566223145
    3. '().' → logprob: -4.7901997566223145
    4. ')' → logprob: -6.7901997566223145
    5. '());' → logprob: -8.040200233459473
    6. '(' → logprob: -8.915200233459473
    7. '()))' → logprob: -9.290200233459473
    8. '()>' → logprob: -9.540200233459473
    9. '();)' → logprob: -9.915200233459473
    10. '(),' → logprob: -10.165200233459473

Token 10: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.7491250875755213e-05
    2. 'strip' → logprob: -10.875027656555176
    3. ' split' → logprob: -12.375027656555176
    4. 'rstrip' → logprob: -12.500027656555176
    5. '(split' → logprob: -15.375027656555176
    6. 'spl' → logprob: -15.750027656555176
    7. ')' → logprob: -16.12502670288086
    8. '```' → logprob: -17.75002670288086
    9. 'read' → logprob: -18.37502670288086
    10. 'startswith' → logprob: -18.37502670288086

Token 11: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0058939531445503235
    2. '))' → logprob: -5.505894184112549
    3. '())' → logprob: -6.380894184112549
    4. '()' → logprob: -9.38089370727539
    5. '`)' → logprob: -11.38089370727539
    6. '()))' → logprob: -12.50589370727539
    7. ')`' → logprob: -12.63089370727539
    8. ')))' → logprob: -12.75589370727539
    9. '),' → logprob: -12.88089370727539
    10. '(' → logprob: -13.13089370727539

Token 12: 'M' (ID: 44)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.06601041555404663
    2. 'A' → logprob: -3.9410104751586914
    3. 'd' → logprob: -4.191010475158691
    4. 'x' → logprob: -4.691010475158691
    5. 's' → logprob: -4.941010475158691
    6. 'dp' → logprob: -5.566010475158691
    7. 'result' → logprob: -6.941010475158691
    8. 'for' → logprob: -7.066010475158691
    9. 'data' → logprob: -7.316010475158691
    10. 'S' → logprob: -7.441010475158691

Token 13: '=N' (ID: 143132)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09366488456726074
    2. ' =' → logprob: -2.4686648845672607
    3. 'a' → logprob: -6.84366512298584
    4. '.' → logprob: -7.09366512298584
    5. '_' → logprob: -7.71866512298584
    6. 'A' → logprob: -7.84366512298584
    7. '%' → logprob: -8.09366512298584
    8. '=int' → logprob: -8.09366512298584
    9. ' ' → logprob: -8.34366512298584
    10. 'ath' → logprob: -8.59366512298584

Token 14: '//' (ID: 393)
  Prédit: '%'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '%' → logprob: -0.012617009691894054
    2. ' %' → logprob: -4.512617111206055
    3. '+' → logprob: -7.887617111206055
    4. '-' → logprob: -7.887617111206055
    5. ' ' → logprob: -8.012617111206055
    6. ')' → logprob: -9.262617111206055
    7. '>' → logprob: -9.887617111206055
    8. '<|end|>' → logprob: -10.012617111206055
    9. '```' → logprob: -10.012617111206055
    10. '*' → logprob: -10.137617111206055

Token 15: 'math' (ID: 20310)
  Prédit: 'K'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'K' → logprob: -1.8312570318812504e-05
    2. ' K' → logprob: -11.875018119812012
    3. '2' → logprob: -12.125018119812012
    4. '1' → logprob: -13.000018119812012
    5. '10' → logprob: -13.625018119812012
    6. '3' → logprob: -14.000018119812012
    7. '100' → logprob: -15.000018119812012
    8. ' ' → logprob: -15.250018119812012
    9. '5' → logprob: -15.375018119812012
    10. '6' → logprob: -15.875018119812012

Token 16: '.g' (ID: 1940)
  Prédit: '.sqrt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.sqrt' → logprob: -0.5209473371505737
    2. '.factor' → logprob: -1.3959473371505737
    3. '.ceil' → logprob: -2.3959474563598633
    4. 'sqrt' → logprob: -4.020947456359863
    5. 'factor' → logprob: -4.270947456359863
    6. '.' → logprob: -4.395947456359863
    7. '.pow' → logprob: -5.145947456359863
    8. '.floor' → logprob: -5.770947456359863
    9. '.log' → logprob: -6.020947456359863
    10. '.pi' → logprob: -6.270947456359863

Token 17: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -5.6696149840718135e-05
    2. 'e' → logprob: -10.625056266784668
    3. 'sqrt' → logprob: -12.125056266784668
    4. '```' → logprob: -12.625056266784668
    5. 'eil' → logprob: -12.625056266784668
    6. 'c' → logprob: -12.875056266784668
    7. 'g' → logprob: -13.125056266784668
    8. 'cf' → logprob: -13.125056266784668
    9. 'cm' → logprob: -13.125056266784668
    10. 'sd' → logprob: -13.500056266784668

Token 18: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1278938353061676
    2. '(N' → logprob: -2.1278939247131348
    3. '(K' → logprob: -7.127893924713135
    4. ' (' → logprob: -10.127893447875977
    5. '(
' → logprob: -10.377893447875977
    6. '(`' → logprob: -10.377893447875977
    7. '(

' → logprob: -10.502893447875977
    8. '(M' → logprob: -11.002893447875977
    9. '((' → logprob: -12.127893447875977
    10. '(n' → logprob: -12.752893447875977

Token 19: ',K' (ID: 107147)
  Prédit: ',K'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',K' → logprob: -0.0790277048945427
    2. ',' → logprob: -2.5790276527404785
    3. ' ,' → logprob: -9.079028129577637
    4. ',M' → logprob: -11.704028129577637
    5. 'K' → logprob: -11.954028129577637
    6. ',k' → logprob: -12.079028129577637
    7. ',N' → logprob: -13.329028129577637
    8. ' ' → logprob: -14.829028129577637
    9. ',G' → logprob: -15.204028129577637
    10. ' K' → logprob: -15.329028129577637

Token 20: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004713376518338919
    2. '))' → logprob: -5.754713535308838
    3. ',' → logprob: -7.254713535308838
    4. '),' → logprob: -7.379713535308838
    5. ')))' → logprob: -10.25471305847168
    6. ')*' → logprob: -10.50471305847168
    7. '`)' → logprob: -10.62971305847168
    8. ' )' → logprob: -10.62971305847168
    9. ',)' → logprob: -10.62971305847168
    10. '*' → logprob: -11.00471305847168

Token 21: 'area' (ID: 7502)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '*' → logprob: -0.6005789637565613
    2. 'M' → logprob: -1.475579023361206
    3. 'K' → logprob: -2.475579023361206
    4. '(' → logprob: -3.350579023361206
    5. 'print' → logprob: -3.975579023361206
    6. '+' → logprob: -3.975579023361206
    7. ')' → logprob: -4.600578784942627
    8. ',' → logprob: -4.850578784942627
    9. '*K' → logprob: -5.475578784942627
    10. '```' → logprob: -5.475578784942627

Token 22: '=M' (ID: 125766)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3790813088417053
    2. '(' → logprob: -1.7540812492370605
    3. '=' → logprob: -2.5040812492370605
    4. '[' → logprob: -3.6290812492370605
    5. '*' → logprob: -4.0040812492370605
    6. 's' → logprob: -5.2540812492370605
    7. '**' → logprob: -5.6290812492370605
    8. ')' → logprob: -6.6290812492370605
    9. ' =' → logprob: -6.8790812492370605
    10. '_area' → logprob: -6.8790812492370605

Token 23: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.11280856281518936
    2. '**' → logprob: -2.4878084659576416
    3. ' *' → logprob: -4.612808704376221
    4. '*M' → logprob: -4.862808704376221
    5. '*N' → logprob: -6.612808704376221
    6. '*K' → logprob: -6.862808704376221
    7. '/' → logprob: -7.362808704376221
    8. '*(' → logprob: -7.487808704376221
    9. '<|end|>' → logprob: -7.737808704376221
    10. ' **' → logprob: -8.612808227539062

Token 24: 'math' (ID: 20310)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.007413770072162151
    2. '2' → logprob: -6.132413864135742
    3. 'K' → logprob: -6.132413864135742
    4. 'N' → logprob: -6.757413864135742
    5. '(M' → logprob: -7.382413864135742
    6. '(' → logprob: -8.382413864135742
    7. '4' → logprob: -8.757413864135742
    8. ' M' → logprob: -8.882413864135742
    9. 'math' → logprob: -9.007413864135742
    10. '(N' → logprob: -9.382413864135742

Token 25: '.sin' (ID: 35734)
  Prédit: '.pi'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pi' → logprob: -0.05519380047917366
    2. '.sqrt' → logprob: -3.1801939010620117
    3. '.' → logprob: -4.680193901062012
    4. '.g' → logprob: -6.430193901062012
    5. '.cos' → logprob: -7.930193901062012
    6. '.sin' → logprob: -8.555193901062012
    7. '.pow' → logprob: -8.680193901062012
    8. '.s' → logprob: -9.055193901062012
    9. '.p' → logprob: -9.305193901062012
    10. '.f' → logprob: -9.430193901062012

Token 26: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0012869019992649555
    2. '(math' → logprob: -6.75128698348999
    3. '((' → logprob: -9.751286506652832
    4. '(M' → logprob: -11.126286506652832
    5. '2' → logprob: -11.126286506652832
    6. '(K' → logprob: -11.376286506652832
    7. '(Math' → logprob: -12.501286506652832
    8. '(
' → logprob: -12.626286506652832
    9. '(angle' → logprob: -13.251286506652832
    10. '(`' → logprob: -13.376286506652832

Token 27: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03401263803243637
    2. '(' → logprob: -3.40901255607605
    3. 'math' → logprob: -9.284012794494629
    4. ' ' → logprob: -9.409012794494629
    5. '6' → logprob: -9.534012794494629
    6. '(math' → logprob: -9.784012794494629
    7. '((' → logprob: -11.034012794494629
    8. '```' → logprob: -11.159012794494629
    9. ' (' → logprob: -11.784012794494629
    10. '360' → logprob: -12.409012794494629

Token 28: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.0007756813429296017
    2. 'math' → logprob: -7.5007758140563965
    3. '3' → logprob: -8.750775337219238
    4. 'import' → logprob: -10.250775337219238
    5. '(math' → logprob: -11.750775337219238
    6. '*pi' → logprob: -12.375775337219238
    7. '.' → logprob: -12.500775337219238
    8. '2' → logprob: -12.750775337219238
    9. '0' → logprob: -13.250775337219238
    10. '*Math' → logprob: -13.250775337219238

Token 29: 'math' (ID: 20310)
  Prédit: 'math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'math' → logprob: -0.049246225506067276
    2. '3' → logprob: -3.174246311187744
    3. ' math' → logprob: -5.424246311187744
    4. '(math' → logprob: -6.424246311187744
    5. '-m' → logprob: -10.174245834350586
    6. '\xf0\x9d' → logprob: -10.424245834350586
    7. 'import' → logprob: -10.424245834350586
    8. '*' → logprob: -11.049245834350586
    9. 'cmath' → logprob: -11.049245834350586
    10. '.math' → logprob: -11.299245834350586

Token 30: '.pi' (ID: 55497)
  Prédit: '.pi'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.pi' → logprob: -0.0011984437005594373
    2. '.' → logprob: -6.7511982917785645
    3. '.r' → logprob: -10.626198768615723
    4. '.p' → logprob: -13.001198768615723
    5. '.py' → logprob: -14.876198768615723
    6. '.sin' → logprob: -15.001198768615723
    7. '.atan' → logprob: -15.251198768615723
    8. '.PI' → logprob: -15.376198768615723
    9. '.cos' → logprob: -15.876198768615723
    10. '.ac' → logprob: -16.501197814941406

Token 31: '*K' (ID: 167586)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.18951301276683807
    2. '/K' → logprob: -1.8145129680633545
    3. '/M' → logprob: -5.189513206481934
    4. '/N' → logprob: -5.689513206481934
    5. '*' → logprob: -7.689513206481934
    6. '*M' → logprob: -8.939513206481934
    7. '*K' → logprob: -9.689513206481934
    8. 'M' → logprob: -10.689513206481934
    9. ' /' → logprob: -11.189513206481934
    10. 'K' → logprob: -11.314513206481934

Token 32: '*M' (ID: 151552)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.3766143321990967
    2. '*M' → logprob: -2.1266143321990967
    3. '/M' → logprob: -2.2516143321990967
    4. '/N' → logprob: -2.7516143321990967
    5. '*' → logprob: -3.8766143321990967
    6. 'M' → logprob: -5.376614570617676
    7. '*N' → logprob: -10.126614570617676
    8. ' /' → logprob: -10.126614570617676
    9. '/
' → logprob: -10.501614570617676
    10. '/
' → logprob: -11.251614570617676

Token 33: '/N' (ID: 33677)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.3894948959350586
    2. '/N' → logprob: -1.1394948959350586
    3. '/)' → logprob: -6.514494895935059
    4. '/M' → logprob: -7.264494895935059
    5. ')' → logprob: -8.264494895935059
    6. '/K' → logprob: -9.139494895935059
    7. '/')' → logprob: -11.139494895935059
    8. '*' → logprob: -11.264494895935059
    9. '/math' → logprob: -11.264494895935059
    10. ' /' → logprob: -11.639494895935059

Token 34: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -6.623244553338736e-05
    2. '(' → logprob: -10.125065803527832
    3. '()' → logprob: -12.000065803527832
    4. '))' → logprob: -12.000065803527832
    5. ')**' → logprob: -12.750065803527832
    6. ' )' → logprob: -13.000065803527832
    7. '())' → logprob: -13.125065803527832
    8. ')*' → logprob: -13.125065803527832
    9. '*' → logprob: -13.375065803527832
    10. '*)' → logprob: -14.125065803527832

Token 35: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.1354314684867859
    2. '(' → logprob: -2.5104315280914307
    3. 'N' → logprob: -3.2604315280914307
    4. 'M' → logprob: -5.135431289672852
    5. '1' → logprob: -7.260431289672852
    6. '3' → logprob: -9.010431289672852
    7. '(N' → logprob: -9.010431289672852
    8. '(M' → logprob: -9.385431289672852
    9. 'K' → logprob: -10.010431289672852
    10. '4' → logprob: -10.385431289672852

Token 36: '
' (ID: 198)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7432375550270081
    2. '<|end|>' → logprob: -0.9932375550270081
    3. '
' → logprob: -2.9932374954223633
    4. '*' → logprob: -3.7432374954223633
    5. 'print' → logprob: -4.493237495422363
    6. '%' → logprob: -4.493237495422363
    7. '(' → logprob: -4.493237495422363
    8. ' ' → logprob: -5.118237495422363
    9. '```' → logprob: -5.118237495422363
    10. '**' → logprob: -5.118237495422363

Token 37: 'print' (ID: 1598)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35223740339279175
    2. 'print' → logprob: -1.3522374629974365
    3. '(' → logprob: -3.9772374629974365
    4. '*' → logprob: -4.602237224578857
    5. ' print' → logprob: -6.352237224578857
    6. '
' → logprob: -6.602237224578857
    7. '<|end|>' → logprob: -6.602237224578857
    8. '#' → logprob: -6.852237224578857
    9. '(print' → logprob: -6.977237224578857
    10. '()' → logprob: -7.102237224578857

Token 38: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20143605768680573
    2. '(area' → logprob: -1.7014360427856445
    3. '(math' → logprob: -11.826436042785645
    4. 'area' → logprob: -12.576436042785645
    5. '(`' → logprob: -13.201436042785645
    6. '(round' → logprob: -13.326436042785645
    7. '()' → logprob: -13.451436042785645
    8. ' (' → logprob: -13.576436042785645
    9. '('' → logprob: -13.826436042785645
    10. '(abs' → logprob: -14.076436042785645

Token 39: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.3722831606864929
    2. ''{' → logprob: -1.6222832202911377
    3. '{' → logprob: -2.3722832202911377
    4. '"' → logprob: -4.122282981872559
    5. '(' → logprob: -7.122282981872559
    6. 'area' → logprob: -7.372282981872559
    7. '"A' → logprob: -7.497282981872559
    8. ')' → logprob: -7.872282981872559
    9. ''' → logprob: -8.122282981872559
    10. '")' → logprob: -8.122282981872559

Token 40: 'area' (ID: 7502)
  Prédit: 'area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.0007156503852456808
    2. ' area' → logprob: -7.250715732574463
    3. 'abs' → logprob: -12.250715255737305
    4. '(area' → logprob: -15.500715255737305
    5. 'angle' → logprob: -15.625715255737305
    6. 'M' → logprob: -15.875715255737305
    7. 'N' → logprob: -16.625715255737305
    8. '0' → logprob: -16.625715255737305
    9. '-area' → logprob: -16.750715255737305
    10. 'are' → logprob: -17.250715255737305

Token 41: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.3916308283805847
    2. '}")' → logprob: -1.1416308879852295
    3. ':' → logprob: -5.39163064956665
    4. '}' → logprob: -9.516631126403809
    5. '*' → logprob: -10.766631126403809
    6. ':f' → logprob: -10.891631126403809
    7. ':F' → logprob: -11.016631126403809
    8. ':e' → logprob: -11.016631126403809
    9. ' }' → logprob: -11.141631126403809
    10. '}')' → logprob: -12.016631126403809

Token 42: '8' (ID: 23)
  Prédit: '6'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.2861866354942322
    2. '9' → logprob: -2.286186695098877
    3. '15' → logprob: -2.911186695098877
    4. '10' → logprob: -3.036186695098877
    5. '7' → logprob: -3.786186695098877
    6. '12' → logprob: -4.161186695098877
    7. '8' → logprob: -5.286186695098877
    8. '13' → logprob: -8.161186218261719
    9. '14' → logprob: -8.411186218261719
    10. '16' → logprob: -8.411186218261719

Token 43: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -7.896309739408025e-07
    2. 'e' → logprob: -15.000000953674316
    3. 'g' → logprob: -15.375000953674316
    4. '}' → logprob: -16.875
    5. ' f' → logprob: -17.375
    6. '6' → logprob: -17.375
    7. 'lf' → logprob: -17.875
    8. '```' → logprob: -18.5
    9. '}")' → logprob: -18.875
    10. '{' → logprob: -18.875

Token 44: '}")' (ID: 122365)
  Prédit: '}")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -4.417976379045285e-05
    2. '")' → logprob: -10.250043869018555
    3. '}' → logprob: -12.875043869018555
    4. '}"' → logprob: -13.000043869018555
    5. '}")
' → logprob: -13.000043869018555
    6. '"}' → logprob: -14.250043869018555
    7. ')")' → logprob: -15.000043869018555
    8. '}")
' → logprob: -15.500043869018555
    9. '"})' → logprob: -16.250043869018555
    10. '}')' → logprob: -16.500043869018555


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 42
Tokens correctement prédits (1ère position, stricte): 17
Tokens correctement prédits (1ère position, avec adaptation): 17
Tokens correctement prédits (top 10): 28
Précision stricte (1ère position): 40.48%
Précision adaptée (1ère position): 40.48%
Précision (top 10): 66.67%
================================================================================
