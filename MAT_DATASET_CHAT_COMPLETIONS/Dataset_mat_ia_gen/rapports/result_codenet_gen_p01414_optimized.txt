================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:16:15
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from collections import deque

N=int(input())
stamps=[tuple(map(int,input().split())) for _ in range(N)]
target=[input() for _ in range(4)]

color_map={'R':0,'G':1,'B':2}
target_colors=[color_map[c] for row in target for c in row]

# Precompute all possible stamp applications:
# Each stamp can be placed at positions (r,c), r in [-H_i+1,4), c in [-W_i+1,4) to allow partial overlap
# For each possible placement and color, create a mask that covers affected cells with that color

def inside(r,c):
    return 0<=r<4 and 0<=c<4

actions=[]
for i,(h,w) in enumerate(stamps):
    for top in range(-h+1,4):
        for left in range(-w+1,4):
            # For each position, determine affected cells inside 4x4
            covered=[]
            for dr in range(h):
                for dc in range(w):
                    rr=top+dr
                    cc=left+dc
                    if inside(rr,cc):
                        covered.append(rr*4+cc)
            if not covered:
                continue
            # For each color
            for color in range(3):
                # Prepare a list representing the color per cell after stamping
                # We'll store as a tuple of length 16 where each entry is 0,1,2 or -1 meaning no change
                # But to optimize, we use a mask of changed cells and the color they have after stamping
                # For BFS, we can simulate the stamping by overwriting these cells with this color

                actions.append( (covered,color) )

# BFS over color states
# Represent a state as a tuple of length 16, each 0(R)/1(G)/2(B)/-1(initial)
# Initial state all -1 (meaning no color)
# Goal is target_colors

start=tuple([-1]*16)
goal=tuple(target_colors)

from collections import deque
visited={start:0}
q=deque([start])
while q:
    state=q.popleft()
    if state==goal:
        print(visited[state])
        break
    dist=visited[state]
    for covered,color in actions:
        # Apply action
        new_state=list(state)
        changed=False
        for pos in covered:
            if new_state[pos]!=color:
                new_state[pos]=color
                changed=True
        if not changed:
            continue
        new_state_t=tuple(new_state)
        if new_state_t not in visited:
            visited[new_state_t]=dist+1
            q.append(new_state_t)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' collections' (ID: 22690)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.037925124168396
    2. 'default' → logprob: -1.162925124168396
    3. 'abc' → logprob: -1.787925124168396
    4. 'Counter' → logprob: -2.4129252433776855
    5. ' defaultdict' → logprob: -2.7879252433776855
    6. 'named' → logprob: -5.4129252433776855
    7. ' Counter' → logprob: -5.5379252433776855
    8. ' abc' → logprob: -6.0379252433776855
    9. ' deque' → logprob: -6.4129252433776855
    10. '```' → logprob: -6.7879252433776855

Token 4: '

' (ID: 279)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.014868208207190037
    2. '\' → logprob: -5.639868259429932
    3. '\(' → logprob: -5.639868259429932
    4. '.' → logprob: -6.014868259429932
    5. '[' → logprob: -6.889868259429932
    6. '\n' → logprob: -7.264868259429932
    7. ' (' → logprob: -7.389868259429932
    8. '```' → logprob: -7.389868259429932
    9. '(
' → logprob: -7.889868259429932
    10. '\[' → logprob: -7.889868259429932

Token 5: 'N' (ID: 45)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.028613658621907234
    2. '\' → logprob: -4.528613567352295
    3. '\n' → logprob: -5.403613567352295
    4. '\(' → logprob: -5.653613567352295
    5. 'a' → logprob: -6.278613567352295
    6. 'd' → logprob: -6.278613567352295
    7. '[' → logprob: -6.653613567352295
    8. 'newline' → logprob: -6.903613567352295
    9. 'import' → logprob: -7.403613567352295
    10. '.' → logprob: -7.903613567352295

Token 6: '=int' (ID: 37431)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028408823534846306
    2. '=' → logprob: -3.9034087657928467
    3. ' ' → logprob: -5.028409004211426
    4. '  ' → logprob: -7.653409004211426
    5. ',' → logprob: -7.903409004211426
    6. ' ,' → logprob: -8.903409004211426
    7. ' =)' → logprob: -9.403409004211426
    8. ' )' → logprob: -9.528409004211426
    9. '.' → logprob: -9.903409004211426
    10. '=int' → logprob: -10.903409004211426

Token 7: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.001835825969465077
    2. '(input' → logprob: -6.376835823059082
    3. '(N' → logprob: -9.376835823059082
    4. '(
' → logprob: -10.876835823059082
    5. ' (' → logprob: -12.001835823059082
    6. '('' → logprob: -12.626835823059082
    7. 'input' → logprob: -12.876835823059082
    8. '()' → logprob: -13.126835823059082
    9. '(`' → logprob: -13.126835823059082
    10. '<|end|>' → logprob: -13.626835823059082

Token 8: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.22170592844486237
    2. '()' → logprob: -2.096705913543701
    3. '())' → logprob: -2.846705913543701
    4. '(' → logprob: -4.346705913543701
    5. '))' → logprob: -5.471705913543701
    6. '')' → logprob: -8.09670639038086
    7. '`)' → logprob: -8.72170639038086
    8. '")' → logprob: -8.97170639038086
    9. '('' → logprob: -9.97170639038086
    10. '()))' → logprob: -10.22170639038086

Token 9: 'st' (ID: 302)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'queue' → logprob: -1.226576805114746
    2. 'arr' → logprob: -1.476576805114746
    3. 'd' → logprob: -1.976576805114746
    4. 'q' → logprob: -2.351576805114746
    5. 'dq' → logprob: -2.726576805114746
    6. 'deque' → logprob: -3.226576805114746
    7. 'a' → logprob: -3.351576805114746
    8. 'stack' → logprob: -3.476576805114746
    9. 'graph' → logprob: -3.476576805114746
    10. 's' → logprob: -4.851576805114746

Token 10: 'amps' (ID: 13580)
  Prédit: 'ack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ack' → logprob: -0.010742292739450932
    2. 'r' → logprob: -4.8857421875
    3. 'a' → logprob: -6.1357421875
    4. 'ac' → logprob: -7.6357421875
    5. 'acks' → logprob: -7.8857421875
    6. 'ring' → logprob: -10.1357421875
    7. '_r' → logprob: -11.3857421875
    8. '_ack' → logprob: -11.3857421875
    9. 'acker' → logprob: -12.1357421875
    10. '=' → logprob: -12.2607421875

Token 11: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09331367164850235
    2. ' =' → logprob: -2.718313694000244
    3. '[' → logprob: -4.468313694000244
    4. ')' → logprob: -5.343313694000244
    5. 's' → logprob: -5.718313694000244
    6. '.' → logprob: -6.218313694000244
    7. '.append' → logprob: -7.593313694000244
    8. '_' → logprob: -7.718313694000244
    9. '=[]' → logprob: -8.843313217163086
    10. '=[' → logprob: -9.343313217163086

Token 12: 'tuple' (ID: 52834)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.005778762046247721
    2. ' int' → logprob: -5.630778789520264
    3. '0' → logprob: -7.130778789520264
    4. ']' → logprob: -7.880778789520264
    5. '*' → logprob: -8.005778312683105
    6. ')' → logprob: -8.255778312683105
    7. ']int' → logprob: -8.630778312683105
    8. '(int' → logprob: -9.505778312683105
    9. 'map' → logprob: -9.880778312683105
    10. ' ]' → logprob: -11.130778312683105

Token 13: '(map' (ID: 16946)
  Prédit: '(map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(map' → logprob: -0.04124196618795395
    2. '(input' → logprob: -3.2912418842315674
    3. '(int' → logprob: -5.7912421226501465
    4. '(' → logprob: -9.291241645812988
    5. 'map' → logprob: -10.291241645812988
    6. 'input' → logprob: -11.541241645812988
    7. '(
' → logprob: -13.416241645812988
    8. '(list' → logprob: -14.291241645812988
    9. '(in' → logprob: -14.916241645812988
    10. '(i' → logprob: -15.041241645812988

Token 14: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0024202491622418165
    2. 'int' → logprob: -6.752420425415039
    3. '(str' → logprob: -7.877420425415039
    4. ',int' → logprob: -8.002420425415039
    5. '<int' → logprob: -9.127420425415039
    6. '<|end|>' → logprob: -9.502420425415039
    7. '=int' → logprob: -9.627420425415039
    8. '[int' → logprob: -9.627420425415039
    9. '(' → logprob: -10.002420425415039
    10. ']int' → logprob: -10.127420425415039

Token 15: ',input' (ID: 123014)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.013239999301731586
    2. ',input' → logprob: -4.763239860534668
    3. 'input' → logprob: -5.513239860534668
    4. '(' → logprob: -8.138239860534668
    5. '=input' → logprob: -9.013239860534668
    6. ')' → logprob: -9.388239860534668
    7. ' input' → logprob: -10.513239860534668
    8. ',' → logprob: -11.138239860534668
    9. '))' → logprob: -11.388239860534668
    10. '```' → logprob: -12.013239860534668

Token 16: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -3.8889261304575484e-06
    2. '()' → logprob: -12.750003814697266
    3. '()))' → logprob: -15.125003814697266
    4. '.split' → logprob: -15.500003814697266
    5. ' ().' → logprob: -16.125003814697266
    6. '())' → logprob: -16.375003814697266
    7. '))' → logprob: -17.375003814697266
    8. '.readline' → logprob: -17.375003814697266
    9. '.' → logprob: -17.500003814697266
    10. '(' → logprob: -17.500003814697266

Token 17: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -3.2378600735682994e-05
    2. 'strip' → logprob: -10.500032424926758
    3. 'rstrip' → logprob: -12.375032424926758
    4. '(split' → logprob: -14.750032424926758
    5. ' split' → logprob: -16.000032424926758
    6. 'spl' → logprob: -16.750032424926758
    7. '.split' → logprob: -18.625032424926758
    8. 's' → logprob: -18.875032424926758
    9. '```' → logprob: -19.375032424926758
    10. 'read' → logprob: -19.625032424926758

Token 18: '()))' (ID: 16829)
  Prédit: '()))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.0030160953756421804
    2. '))' → logprob: -7.003015995025635
    3. '())' → logprob: -7.503015995025635
    4. '()' → logprob: -7.503015995025635
    5. '()))
' → logprob: -7.753015995025635
    6. '('' → logprob: -8.253016471862793
    7. '())))' → logprob: -8.628016471862793
    8. '(' → logprob: -9.378016471862793
    9. '(','' → logprob: -11.003016471862793
    10. '()))

' → logprob: -12.128016471862793

Token 19: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2618676424026489
    2. 'for' → logprob: -2.3868675231933594
    3. ')]' → logprob: -2.6368675231933594
    4. ' for' → logprob: -2.8868675231933594
    5. '),' → logprob: -5.261867523193359
    6. ']' → logprob: -6.386867523193359
    7. ')],' → logprob: -7.011867523193359
    8. ',' → logprob: -7.011867523193359
    9. ')])' → logprob: -7.011867523193359
    10. ',)' → logprob: -8.26186752319336

Token 20: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4220879375934601
    2. ' range' → logprob: -1.1720879077911377
    3. ' _' → logprob: -3.4220879077911377
    4. '_range' → logprob: -6.422088146209717
    5. 'range' → logprob: -8.422087669372559
    6. ' ' → logprob: -10.297087669372559
    7. '(range' → logprob: -10.422087669372559
    8. ' in' → logprob: -10.797087669372559
    9. ' i' → logprob: -11.547087669372559
    10. '	range' → logprob: -11.922087669372559

Token 21: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.045832958072423935
    2. ' range' → logprob: -3.670832872390747
    3. ' in' → logprob: -4.295833110809326
    4. 'in' → logprob: -5.170833110809326
    5. '(range' → logprob: -11.170832633972168
    6. '	range' → logprob: -11.795832633972168
    7. ' ' → logprob: -12.545832633972168
    8. '_range' → logprob: -12.670832633972168
    9. '```' → logprob: -13.170832633972168
    10. '0' → logprob: -13.795832633972168

Token 22: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.842555426876061e-06
    2. ' range' → logprob: -12.250004768371582
    3. '	range' → logprob: -17.8750057220459
    4. '(range' → logprob: -18.0000057220459
    5. '```' → logprob: -19.2500057220459
    6. 'rang' → logprob: -20.0000057220459
    7. ')' → logprob: -20.0000057220459
    8. '.range' → logprob: -21.0000057220459
    9. 'r' → logprob: -21.5000057220459
    10. 'rage' → logprob: -21.6250057220459

Token 23: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0003544118662830442
    2. '(' → logprob: -8.000354766845703
    3. 'N' → logprob: -11.000354766845703
    4. '(n' → logprob: -13.250354766845703
    5. '(
' → logprob: -15.250354766845703
    6. ')' → logprob: -15.875354766845703
    7. '(len' → logprob: -16.250354766845703
    8. ' (' → logprob: -17.250354766845703
    9. ' N' → logprob: -18.250354766845703
    10. '\(' → logprob: -18.250354766845703

Token 24: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00030900631099939346
    2. ')' → logprob: -8.250308990478516
    3. ')])' → logprob: -10.875308990478516
    4. ']' → logprob: -11.000308990478516
    5. '])]' → logprob: -12.500308990478516
    6. ')]
' → logprob: -12.750308990478516
    7. '')]' → logprob: -13.750308990478516
    8. ')],' → logprob: -13.875308990478516
    9. '])' → logprob: -14.125308990478516
    10. '))' → logprob: -14.500308990478516

Token 25: 'target' (ID: 10857)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.1697838455438614
    2. 'dist' → logprob: -3.0447838306427
    3. 'd' → logprob: -3.4197838306427
    4. 'q' → logprob: -4.419784069061279
    5. 'distance' → logprob: -4.419784069061279
    6. 'visited' → logprob: -4.544784069061279
    7. '
' → logprob: -5.044784069061279
    8. 'queue' → logprob: -5.669784069061279
    9. 'st' → logprob: -5.794784069061279
    10. 'Q' → logprob: -5.794784069061279

Token 26: '=[' (ID: 13370)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.9988531470298767
    2. '=' → logprob: -1.1238532066345215
    3. ' =' → logprob: -1.2488532066345215
    4. 's' → logprob: -5.2488532066345215
    5. ')' → logprob: -5.4988532066345215
    6. '(' → logprob: -5.6238532066345215
    7. '[' → logprob: -5.9988532066345215
    8. '[:]' → logprob: -7.1238532066345215
    9. '=[]' → logprob: -7.9988532066345215
    10. '_=' → logprob: -8.248852729797363

Token 27: 'input' (ID: 2586)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.37745845317840576
    2. '0' → logprob: -1.3774584531784058
    3. '1' → logprob: -3.1274585723876953
    4. ']' → logprob: -4.752458572387695
    5. ']int' → logprob: -5.627458572387695
    6. '100' → logprob: -6.252458572387695
    7. 'map' → logprob: -7.002458572387695
    8. '10' → logprob: -7.502458572387695
    9. ')' → logprob: -7.502458572387695
    10. '])' → logprob: -8.377458572387695

Token 28: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.014960282482206821
    2. '()' → logprob: -4.264960289001465
    3. '().' → logprob: -7.639960289001465
    4. '())' → logprob: -8.139960289001465
    5. '(' → logprob: -11.639960289001465
    6. '()].' → logprob: -12.389960289001465
    7. '()[' → logprob: -13.014960289001465
    8. '()][' → logprob: -13.389960289001465
    9. '()}' → logprob: -13.764960289001465
    10. ']()' → logprob: -13.764960289001465

Token 29: ' for' (ID: 395)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.017916368320584297
    2. ']' → logprob: -4.392916202545166
    3. '()' → logprob: -5.392916202545166
    4. '().' → logprob: -8.392916679382324
    5. '())' → logprob: -8.767916679382324
    6. ')]' → logprob: -9.017916679382324
    7. '()[' → logprob: -10.017916679382324
    8. ')' → logprob: -10.267916679382324
    9. '[' → logprob: -10.267916679382324
    10. ']()' → logprob: -10.267916679382324

Token 30: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.7164360880851746
    2. ' range' → logprob: -0.7164360880851746
    3. '_' → logprob: -3.8414361476898193
    4. ' ' → logprob: -7.09143590927124
    5. 'range' → logprob: -8.091436386108398
    6. ' N' → logprob: -8.716436386108398
    7. ' i' → logprob: -9.091436386108398
    8. '_range' → logprob: -10.091436386108398
    9. ' in' → logprob: -10.341436386108398
    10. '(range' → logprob: -10.716436386108398

Token 31: ' in' (ID: 306)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07017827779054642
    2. 'range' → logprob: -2.695178270339966
    3. ' in' → logprob: -8.445178031921387
    4. '_range' → logprob: -11.695178031921387
    5. ' ' → logprob: -11.820178031921387
    6. 'in' → logprob: -12.570178031921387
    7. '_' → logprob: -12.570178031921387
    8. '	range' → logprob: -13.195178031921387
    9. '(range' → logprob: -13.820178031921387
    10. ' xrange' → logprob: -14.820178031921387

Token 32: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.6931498050689697
    2. 'range' → logprob: -0.6931498050689697
    3. '(range' → logprob: -13.31814956665039
    4. '_range' → logprob: -15.19314956665039
    5. ' ' → logprob: -15.44314956665039
    6. 'N' → logprob: -15.69314956665039
    7. 'target' → logprob: -15.94314956665039
    8. '	range' → logprob: -16.44314956665039
    9. 'rang' → logprob: -16.94314956665039
    10. 'ran' → logprob: -16.94314956665039

Token 33: '(' (ID: 7)
  Prédit: '(N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0102521488443017
    2. '(' → logprob: -4.635251998901367
    3. ' range' → logprob: -7.885251998901367
    4. '(range' → logprob: -9.760251998901367
    5. 'range' → logprob: -10.385251998901367
    6. 'N' → logprob: -10.885251998901367
    7. '(len' → logprob: -12.135251998901367
    8. ' (' → logprob: -13.135251998901367
    9. '(n' → logprob: -13.260251998901367
    10. '(
' → logprob: -13.635251998901367

Token 34: '4' (ID: 19)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -7.898723561083898e-05
    2. '3' → logprob: -10.125079154968262
    3. 'len' → logprob: -11.250079154968262
    4. '5' → logprob: -12.125079154968262
    5. '2' → logprob: -12.375079154968262
    6. ' N' → logprob: -12.625079154968262
    7. '4' → logprob: -13.000079154968262
    8. '10' → logprob: -13.000079154968262
    9. 'int' → logprob: -13.500079154968262
    10. '9' → logprob: -13.750079154968262

Token 35: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.06261811405420303
    2. ']' → logprob: -2.8126180171966553
    3. ')' → logprob: -7.562618255615234
    4. '])' → logprob: -9.312618255615234
    5. '])]' → logprob: -10.812618255615234
    6. ')])' → logprob: -12.187618255615234
    7. '`]' → logprob: -12.187618255615234
    8. '')]' → logprob: -12.812618255615234
    9. '>]' → logprob: -13.687618255615234
    10. '}]' → logprob: -13.937618255615234

Token 36: 'color' (ID: 4991)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.5960986614227295
    2. 'd' → logprob: -2.7210986614227295
    3. ')' → logprob: -3.3460986614227295
    4. 'deque' → logprob: -3.4710986614227295
    5. 'result' → logprob: -3.5960986614227295
    6. 'max' → logprob: -3.5960986614227295
    7. ']' → logprob: -3.5960986614227295
    8. 'q' → logprob: -3.7210986614227295
    9. '
' → logprob: -3.7210986614227295
    10. 'def' → logprob: -4.096098899841309

Token 37: '_map' (ID: 11824)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.18735156953334808
    2. '_counts' → logprob: -2.5623514652252197
    3. '_' → logprob: -3.1873514652252197
    4. '_map' → logprob: -3.9373514652252197
    5. '_s' → logprob: -4.187351703643799
    6. '_count' → logprob: -4.562351703643799
    7. '_to' → logprob: -5.437351703643799
    8. '_idx' → logprob: -7.562351703643799
    9. '_indices' → logprob: -7.687351703643799
    10. '_index' → logprob: -8.06235122680664

Token 38: '={'' (ID: 24320)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5369910597801208
    2. '=' → logprob: -0.9119910597801208
    3. '[' → logprob: -4.786991119384766
    4. '={}' → logprob: -5.661991119384766
    5. '_' → logprob: -7.536991119384766
    6. '={' → logprob: -8.286991119384766
    7. '{' → logprob: -8.411991119384766
    8. ' ={' → logprob: -9.036991119384766
    9. ']' → logprob: -9.036991119384766
    10. '<|end|>' → logprob: -9.161991119384766

Token 39: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.14214757084846497
    2. 'r' → logprob: -3.1421475410461426
    3. 'B' → logprob: -3.6421475410461426
    4. 'W' → logprob: -4.142147541046143
    5. 'red' → logprob: -4.267147541046143
    6. '0' → logprob: -5.517147541046143
    7. 'A' → logprob: -5.642147541046143
    8. 'b' → logprob: -6.017147541046143
    9. 'Y' → logprob: -6.142147541046143
    10. 'a' → logprob: -6.267147541046143

Token 40: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.028768183663487434
    2. 'G' → logprob: -4.528768062591553
    3. 'ed' → logprob: -4.528768062591553
    4. ''' → logprob: -5.403768062591553
    5. 'ED' → logprob: -7.528768062591553
    6. 'GB' → logprob: -8.153768539428711
    7. 'R' → logprob: -8.278768539428711
    8. '1' → logprob: -8.403768539428711
    9. 'B' → logprob: -8.653768539428711
    10. '':[' → logprob: -8.778768539428711

Token 41: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7429547905921936
    2. '(' → logprob: -0.8679547905921936
    3. '1' → logprob: -3.242954730987549
    4. ' (' → logprob: -3.867954730987549
    5. '[' → logprob: -4.367954730987549
    6. '255' → logprob: -4.492954730987549
    7. '[]' → logprob: -5.117954730987549
    8. ''' → logprob: -5.242954730987549
    9. ' ' → logprob: -5.742954730987549
    10. '[(' → logprob: -6.242954730987549

Token 42: ','' (ID: 6620)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004732722416520119
    2. ','' → logprob: -5.379732608795166
    3. ',
' → logprob: -10.004733085632324
    4. ')' → logprob: -11.129733085632324
    5. ',)' → logprob: -11.129733085632324
    6. '}' → logprob: -11.379733085632324
    7. ',R' → logprob: -11.629733085632324
    8. ' ,' → logprob: -11.754733085632324
    9. ',"' → logprob: -12.754733085632324
    10. ',

' → logprob: -13.629733085632324

Token 43: 'G' (ID: 38)
  Prédit: 'G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'G' → logprob: -0.006408873945474625
    2. 'B' → logprob: -5.13140869140625
    3. 'Y' → logprob: -8.88140869140625
    4. 'R' → logprob: -9.25640869140625
    5. ' G' → logprob: -9.38140869140625
    6. ''' → logprob: -10.25640869140625
    7. 'W' → logprob: -10.38140869140625
    8. 'C' → logprob: -10.75640869140625
    9. 'A' → logprob: -11.81890869140625
    10. 'O' → logprob: -11.88140869140625

Token 44: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.004754903260618448
    2. ':' → logprob: -5.504755020141602
    3. ''' → logprob: -8.004755020141602
    4. '')' → logprob: -9.129755020141602
    5. '':'' → logprob: -9.254755020141602
    6. ''>' → logprob: -10.004755020141602
    7. ''):' → logprob: -10.754755020141602
    8. '',' → logprob: -11.254755020141602
    9. ''}' → logprob: -11.379755020141602
    10. '":' → logprob: -11.629755020141602

Token 45: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007063561934046447
    2. ' ' → logprob: -7.625706195831299
    3. '0' → logprob: -8.500706672668457
    4. '255' → logprob: -11.250706672668457
    5. '127' → logprob: -14.000706672668457
    6. '2' → logprob: -14.250706672668457
    7. '3' → logprob: -16.00070571899414
    8. ''' → logprob: -16.93820571899414
    9. '128' → logprob: -17.18820571899414
    10. '  ' → logprob: -17.25070571899414

Token 46: ','' (ID: 6620)
  Prédit: ',''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ','' → logprob: -0.0017148085171356797
    2. ',' → logprob: -6.376714706420898
    3. ' ,'' → logprob: -12.001714706420898
    4. ',"' → logprob: -12.251714706420898
    5. '}' → logprob: -14.251714706420898
    6. ',’' → logprob: -14.751714706420898
    7. ',''' → logprob: -16.0017147064209
    8. '','' → logprob: -16.3767147064209
    9. ','.' → logprob: -16.8767147064209
    10. '(),'' → logprob: -17.1267147064209

Token 47: 'B' (ID: 33)
  Prédit: 'B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'B' → logprob: -7.469590491382405e-05
    2. ''' → logprob: -10.00007438659668
    3. ' B' → logprob: -11.25007438659668
    4. 'Y' → logprob: -11.62507438659668
    5. 'R' → logprob: -14.00007438659668
    6. 'U' → logprob: -14.18757438659668
    7. 'W' → logprob: -14.18757438659668
    8. '0' → logprob: -14.43757438659668
    9. 'L' → logprob: -15.12507438659668
    10. 'O' → logprob: -15.12507438659668

Token 48: '':' (ID: 2337)
  Prédit: '':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.019621768966317177
    2. ''}' → logprob: -4.269621849060059
    3. '')' → logprob: -6.019621849060059
    4. ':' → logprob: -6.769621849060059
    5. ''' → logprob: -7.019621849060059
    6. '':'' → logprob: -7.894621849060059
    7. ')' → logprob: -9.019621849060059
    8. '',' → logprob: -9.144621849060059
    9. '}' → logprob: -9.394621849060059
    10. '')}' → logprob: -9.394621849060059

Token 49: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -8.2994620242971e-06
    2. ' ' → logprob: -11.750008583068848
    3. '```' → logprob: -16.00000762939453
    4. '0' → logprob: -16.25000762939453
    5. '２' → logprob: -16.50000762939453
    6. '3' → logprob: -17.00000762939453
    7. '1' → logprob: -17.50000762939453
    8. '-' → logprob: -17.56250762939453
    9. '  ' → logprob: -17.56250762939453
    10. ''' → logprob: -18.12500762939453

Token 50: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '}' → logprob: -0.6628752946853638
    2. ','' → logprob: -1.0378752946853638
    3. ',' → logprob: -2.037875175476074
    4. ''}' → logprob: -9.537875175476074
    5. ' }' → logprob: -11.162875175476074
    6. ')' → logprob: -12.037875175476074
    7. ',"' → logprob: -12.412875175476074
    8. '}'' → logprob: -12.412875175476074
    9. ')}' → logprob: -12.537875175476074
    10. '','' → logprob: -13.162875175476074

Token 51: 'target' (ID: 10857)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.22816279530525208
    2. 'visited' → logprob: -2.6031627655029297
    3. 'dist' → logprob: -3.4781627655029297
    4. 'q' → logprob: -3.7281627655029297
    5. 'used' → logprob: -4.22816276550293
    6. 'queue' → logprob: -4.85316276550293
    7. 'ans' → logprob: -5.22816276550293
    8. 'answer' → logprob: -5.22816276550293
    9. 'color' → logprob: -5.35316276550293
    10. 'colors' → logprob: -5.60316276550293

Token 52: '_colors' (ID: 79137)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 53: '=[' (ID: 13370)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005196878220885992
    2. '=[' → logprob: -5.755197048187256
    3. ' =' → logprob: -6.630197048187256
    4. '=[]' → logprob: -7.380197048187256
    5. '[' → logprob: -10.380196571350098
    6. ' =[' → logprob: -10.880196571350098
    7. '=['' → logprob: -12.255196571350098
    8. '_=' → logprob: -12.880196571350098
    9. '＝' → logprob: -12.880196571350098
    10. '=[[' → logprob: -13.005196571350098

Token 54: 'color' (ID: 4991)
  Prédit: 'color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.007623080164194107
    2. ' color' → logprob: -4.882623195648193
    3. '[color' → logprob: -11.382622718811035
    4. '(color' → logprob: -13.382622718811035
    5. ']' → logprob: -13.632622718811035
    6. '0' → logprob: -13.882622718811035
    7. '=color' → logprob: -14.382622718811035
    8. ')' → logprob: -15.132622718811035
    9. '	color' → logprob: -15.257622718811035
    10. ',color' → logprob: -15.507622718811035

Token 55: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -8.77627644513268e-06
    2. 's' → logprob: -12.625008583068848
    3. 'map' → logprob: -13.750008583068848
    4. '_' → logprob: -14.000008583068848
    5. '_maps' → logprob: -14.250008583068848
    6. ']' → logprob: -14.750008583068848
    7. '_mapping' → logprob: -14.875008583068848
    8. '])' → logprob: -15.000008583068848
    9. '_to' → logprob: -15.000008583068848
    10. '[_' → logprob: -15.375008583068848

Token 56: '[c' (ID: 22840)
  Prédit: '[c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[c' → logprob: -0.7805917859077454
    2. '(c' → logprob: -1.0305917263031006
    3. '[target' → logprob: -2.2805917263031006
    4. '(target' → logprob: -3.1555917263031006
    5. '[color' → logprob: -4.03059196472168
    6. '[ch' → logprob: -4.65559196472168
    7. '(ch' → logprob: -5.53059196472168
    8. '(color' → logprob: -5.65559196472168
    9. '[t' → logprob: -6.78059196472168
    10. '[' → logprob: -6.90559196472168

Token 57: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0009039574069902301
    2. '[target' → logprob: -7.625904083251953
    3. '[' → logprob: -8.250904083251953
    4. '[c' → logprob: -9.750904083251953
    5. ']]' → logprob: -10.500904083251953
    6. 'target' → logprob: -10.625904083251953
    7. ' ]' → logprob: -11.500904083251953
    8. '[i' → logprob: -11.875904083251953
    9. '[-' → logprob: -13.000904083251953
    10. 'arget' → logprob: -13.250904083251953

Token 58: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3522741198539734
    2. 'for' → logprob: -1.4772741794586182
    3. '[c' → logprob: -3.102274179458618
    4. ']' → logprob: -3.852274179458618
    5. 'c' → logprob: -7.102273941040039
    6. '[' → logprob: -7.102273941040039
    7. ' ' → logprob: -8.477273941040039
    8. '(c' → logprob: -8.602273941040039
    9. ' c' → logprob: -8.602273941040039
    10. ')' → logprob: -9.477273941040039

Token 59: ' row' (ID: 5225)
  Prédit: ' c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.01422955933958292
    2. 'c' → logprob: -4.264229774475098
    3. ' color' → logprob: -10.764229774475098
    4. ' target' → logprob: -11.139229774475098
    5. ' ' → logprob: -11.264229774475098
    6. ' row' → logprob: -12.014229774475098
    7. ' line' → logprob: -12.764229774475098
    8. ' in' → logprob: -13.014229774475098
    9. 'target' → logprob: -13.389229774475098
    10. ' t' → logprob: -14.014229774475098

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016038119792938232
    2. 'in' → logprob: -4.141037940979004
    3. ' ' → logprob: -12.766037940979004
    4. 's' → logprob: -15.391037940979004
    5. 'target' → logprob: -15.766037940979004
    6. 'c' → logprob: -16.14103889465332
    7. 'i' → logprob: -16.39103889465332
    8. 'row' → logprob: -16.39103889465332
    9. ' i' → logprob: -16.64103889465332
    10. 'n' → logprob: -16.64103889465332

Token 61: ' target' (ID: 3783)
  Prédit: 'target'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'target' → logprob: -0.06196858361363411
    2. ' target' → logprob: -2.8119685649871826
    3. 'range' → logprob: -15.311968803405762
    4. '(target' → logprob: -15.311968803405762
    5. 't' → logprob: -16.311967849731445
    6. 'tar' → logprob: -16.436967849731445
    7. '[target' → logprob: -16.686967849731445
    8. '	target' → logprob: -17.186967849731445
    9. 'arget' → logprob: -17.311967849731445
    10. ' range' → logprob: -17.936967849731445

Token 62: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.06377122551202774
    2. 'for' → logprob: -2.9387712478637695
    3. ']' → logprob: -4.8137712478637695
    4. '[' → logprob: -7.5637712478637695
    5. '   ' → logprob: -9.18877124786377
    6. ' ' → logprob: -10.06377124786377
    7. '	for' → logprob: -11.18877124786377
    8. '  ' → logprob: -11.31377124786377
    9. ' ]' → logprob: -11.31377124786377
    10. '    ' → logprob: -11.43877124786377

Token 63: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.20141489803791046
    2. 'c' → logprob: -1.701414942741394
    3. ')c' → logprob: -14.951415061950684
    4. ' ' → logprob: -15.076415061950684
    5. '	c' → logprob: -15.326415061950684
    6. ' color' → logprob: -15.576415061950684
    7. 'color' → logprob: -16.076414108276367
    8. '<c' → logprob: -16.076414108276367
    9. '<|end|>' → logprob: -16.201414108276367
    10. ' row' → logprob: -16.201414108276367

Token 64: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0016224568244069815
    2. 'in' → logprob: -6.626622676849365
    3. ' ' → logprob: -8.876622200012207
    4. ' row' → logprob: -9.001622200012207
    5. 'row' → logprob: -10.751622200012207
    6. 'c' → logprob: -12.501622200012207
    7. ' i' → logprob: -13.126622200012207
    8. 's' → logprob: -13.751622200012207
    9. ' c' → logprob: -13.876622200012207
    10. '  ' → logprob: -13.876622200012207

Token 65: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.06994765996932983
    2. ' row' → logprob: -2.6949477195739746
    3. 'c' → logprob: -12.444947242736816
    4. ' ' → logprob: -12.569947242736816
    5. '(row' → logprob: -13.319947242736816
    6. '	row' → logprob: -13.819947242736816
    7. 'r' → logprob: -14.819947242736816
    8. '[row' → logprob: -15.194947242736816
    9. ']' → logprob: -16.194948196411133
    10. 'range' → logprob: -16.319948196411133

Token 66: ']

' (ID: 3144)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -1.688212614681106e-05
    2. ' ]' → logprob: -11.750017166137695
    3. ')]' → logprob: -12.125017166137695
    4. ']
' → logprob: -12.750017166137695
    5. ')' → logprob: -15.125017166137695
    6. ']

' → logprob: -16.625017166137695
    7. '])' → logprob: -16.625017166137695
    8. '()]' → logprob: -16.625017166137695
    9. '`]' → logprob: -17.000017166137695
    10. '']' → logprob: -17.875017166137695

Token 67: '#' (ID: 2)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'visited' → logprob: -1.6041022539138794
    2. 'dp' → logprob: -1.8541022539138794
    3. 'd' → logprob: -1.9791022539138794
    4. 'q' → logprob: -2.10410213470459
    5. 'deque' → logprob: -2.35410213470459
    6. 'dist' → logprob: -2.60410213470459
    7. 'queue' → logprob: -3.22910213470459
    8. 'Q' → logprob: -3.60410213470459
    9. 'dq' → logprob: -3.60410213470459
    10. 'used' → logprob: -3.85410213470459

Token 68: ' Pre' (ID: 4659)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'q' → logprob: -1.1709994077682495
    2. 'dp' → logprob: -1.5459994077682495
    3. 'from' → logprob: -1.9209994077682495
    4. 'dist' → logprob: -2.920999526977539
    5. 'visited' → logprob: -3.170999526977539
    6. 'd' → logprob: -3.670999526977539
    7. 'dq' → logprob: -3.670999526977539
    8. ' q' → logprob: -3.920999526977539
    9. 'queue' → logprob: -4.170999526977539
    10. ' queue' → logprob: -4.420999526977539

Token 69: 'compute' (ID: 54521)
  Prédit: 'vious'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vious' → logprob: -1.116468071937561
    2. 'dict' → logprob: -1.741468071937561
    3. 'fix' → logprob: -2.1164679527282715
    4. 'v' → logprob: -2.6164679527282715
    5. 'sum' → logprob: -2.7414679527282715
    6. 'd' → logprob: -2.7414679527282715
    7. 'processing' → logprob: -3.2414679527282715
    8. 'compute' → logprob: -3.4914679527282715
    9. 'comput' → logprob: -3.7414679527282715
    10. 'view' → logprob: -3.8664679527282715

Token 70: ' all' (ID: 722)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -1.3835524320602417
    2. ' neighbors' → logprob: -1.8835524320602417
    3. 'adj' → logprob: -1.8835524320602417
    4. ' rotations' → logprob: -2.6335525512695312
    5. ' adj' → logprob: -3.5085525512695312
    6. 'neighbor' → logprob: -3.5085525512695312
    7. ' next' → logprob: -3.6335525512695312
    8. 'dp' → logprob: -4.133552551269531
    9. 'dist' → logprob: -4.133552551269531
    10. 'trans' → logprob: -4.133552551269531

Token 71: ' possible' (ID: 4149)
  Prédit: ' rotations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' rotations' → logprob: -0.15439601242542267
    2. 'rot' → logprob: -3.1543960571289062
    3. ' transformations' → logprob: -3.2793960571289062
    4. ' possible' → logprob: -4.029396057128906
    5. 'possible' → logprob: -4.654396057128906
    6. 'transform' → logprob: -4.654396057128906
    7. ' permutations' → logprob: -5.404396057128906
    8. ' rotated' → logprob: -5.529396057128906
    9. ' transforms' → logprob: -5.654396057128906
    10. ' orientations' → logprob: -6.154396057128906

Token 72: ' stamp' (ID: 29381)
  Prédit: ' rotations'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' rotations' → logprob: -1.1706312894821167
    2. ' transformations' → logprob: -1.5456312894821167
    3. 'positions' → logprob: -2.2956314086914062
    4. 'transform' → logprob: -2.5456314086914062
    5. ' positions' → logprob: -3.2956314086914062
    6. 'rot' → logprob: -3.2956314086914062
    7. ' transforms' → logprob: -3.6706314086914062
    8. ' orientations' → logprob: -3.7956314086914062
    9. 'm' → logprob: -4.045631408691406
    10. ' permutations' → logprob: -4.295631408691406

Token 73: ' applications' (ID: 9391)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.32187631726264954
    2. '_positions' → logprob: -1.9468762874603271
    3. 'positions' → logprob: -3.696876287460327
    4. '_masks' → logprob: -3.696876287460327
    5. 'placements' → logprob: -4.196876525878906
    6. '_rot' → logprob: -4.571876525878906
    7. ' placements' → logprob: -4.571876525878906
    8. '_or' → logprob: -4.946876525878906
    9. 'orient' → logprob: -5.071876525878906
    10. ' positions' → logprob: -5.196876525878906

Token 74: ':
' (ID: 734)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.010290265083313
    2. 'applications' → logprob: -1.510290265083313
    3. 'possible' → logprob: -2.2602901458740234
    4. 'stamp' → logprob: -3.0102901458740234
    5. 'apply' → logprob: -3.2602901458740234
    6. 'actions' → logprob: -3.7602901458740234
    7. ' application' → logprob: -3.7602901458740234
    8. 'all' → logprob: -3.7602901458740234
    9. ' possible' → logprob: -4.010290145874023
    10. 'positions' → logprob: -4.260290145874023

Token 75: '#' (ID: 2)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'app' → logprob: -1.4048304557800293
    2. 'apply' → logprob: -1.6548304557800293
    3. 'possible' → logprob: -1.9048304557800293
    4. 'stamp' → logprob: -2.0298304557800293
    5. 'all' → logprob: -3.0298304557800293
    6. 'ap' → logprob: -3.0298304557800293
    7. 'applications' → logprob: -3.1548304557800293
    8. 'positions' → logprob: -3.5298304557800293
    9. 'actions' → logprob: -3.7798304557800293
    10. 'poss' → logprob: -4.529830455780029

Token 76: ' Each' (ID: 11555)
  Prédit: 'apply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'apply' → logprob: -1.319840669631958
    2. 'stamp' → logprob: -1.569840669631958
    3. 'app' → logprob: -2.194840669631958
    4. 'ap' → logprob: -2.819840669631958
    5. 'possible' → logprob: -3.069840669631958
    6. 'all' → logprob: -3.569840669631958
    7. 'actions' → logprob: -3.569840669631958
    8. 'positions' → logprob: -3.694840669631958
    9. ' apply' → logprob: -3.694840669631958
    10. 'applications' → logprob: -3.819840669631958

Token 77: ' stamp' (ID: 29381)
  Prédit: 'stamp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stamp' → logprob: -0.27646589279174805
    2. ' stamp' → logprob: -1.901465892791748
    3. ' application' → logprob: -3.026465892791748
    4. 'st' → logprob: -4.401465892791748
    5. ' possible' → logprob: -5.276465892791748
    6. 'possible' → logprob: -5.901465892791748
    7. 'application' → logprob: -6.026465892791748
    8. 'position' → logprob: -6.026465892791748
    9. '_stamp' → logprob: -6.151465892791748
    10. ' of' → logprob: -6.526465892791748

Token 78: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.5378195643424988
    2. ' application' → logprob: -1.2878196239471436
    3. 'application' → logprob: -3.2878196239471436
    4. ' covers' → logprob: -3.5378196239471436
    5. '<|end|>' → logprob: -3.9128196239471436
    6. 'can' → logprob: -4.6628193855285645
    7. 'position' → logprob: -4.7878193855285645
    8. ' is' → logprob: -5.4128193855285645
    9. ' placement' → logprob: -5.4128193855285645
    10. 'placement' → logprob: -5.5378193855285645

Token 79: ' be' (ID: 413)
  Prédit: ' be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' be' → logprob: -0.15103833377361298
    2. 'be' → logprob: -2.276038408279419
    3. ' cover' → logprob: -3.651038408279419
    4. 'cover' → logprob: -5.90103816986084
    5. ' appear' → logprob: -6.40103816986084
    6. '#' → logprob: -6.52603816986084
    7. '<|end|>' → logprob: -6.65103816986084
    8. ' occupy' → logprob: -7.27603816986084
    9. 'color' → logprob: -7.52603816986084
    10. 'apply' → logprob: -7.65103816986084

Token 80: ' placed' (ID: 12989)
  Prédit: ' applied'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' applied' → logprob: -0.48434287309646606
    2. ' placed' → logprob: -1.1093428134918213
    3. ' rotated' → logprob: -3.7343428134918213
    4. 'placed' → logprob: -3.9843428134918213
    5. ' used' → logprob: -5.4843430519104
    6. 'ap' → logprob: -6.6093430519104
    7. '```' → logprob: -6.9843430519104
    8. ' flipped' → logprob: -7.2343430519104
    9. 'used' → logprob: -7.4843430519104
    10. ' ' → logprob: -7.6093430519104

Token 81: ' at' (ID: 540)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.19263955950737
    2. ' at' → logprob: -1.9426395893096924
    3. ' on' → logprob: -4.317639350891113
    4. 'in' → logprob: -4.317639350891113
    5. 'at' → logprob: -5.817639350891113
    6. 'on' → logprob: -7.692639350891113
    7. ' ' → logprob: -7.942639350891113
    8. '<|end|>' → logprob: -7.942639350891113
    9. ' anywhere' → logprob: -8.192639350891113
    10. ' to' → logprob: -8.567639350891113

Token 82: ' positions' (ID: 15897)
  Prédit: ' any'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' any' → logprob: -0.3676047623157501
    2. ' each' → logprob: -2.1176047325134277
    3. ' positions' → logprob: -2.4926047325134277
    4. ' ' → logprob: -3.6176047325134277
    5. '<|end|>' → logprob: -4.242604732513428
    6. ' (' → logprob: -4.367604732513428
    7. 'positions' → logprob: -4.492604732513428
    8. ' all' → logprob: -4.617604732513428
    9. 'each' → logprob: -5.742604732513428
    10. ' every' → logprob: -5.742604732513428

Token 83: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -1.0313796997070312
    2. ' in' → logprob: -1.5313796997070312
    3. ' range' → logprob: -2.0313796997070312
    4. '(' → logprob: -2.2813796997070312
    5. ' ' → logprob: -2.4063796997070312
    6. '0' → logprob: -4.031379699707031
    7. ' =' → logprob: -4.406379699707031
    8. '=(' → logprob: -4.406379699707031
    9. 'range' → logprob: -4.656379699707031
    10. '(range' → logprob: -4.656379699707031

Token 84: 'r' (ID: 81)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6324479579925537
    2. ' i' → logprob: -1.6324479579925537
    3. ' ' → logprob: -1.7574479579925537
    4. 'i' → logprob: -2.7574479579925537
    5. ')' → logprob: -4.757448196411133
    6. ' x' → logprob: -5.382448196411133
    7. ' (' → logprob: -5.882448196411133
    8. 'x' → logprob: -5.882448196411133
    9. '1' → logprob: -5.882448196411133
    10. ' -' → logprob: -6.132448196411133

Token 85: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.588490903377533
    2. ',r' → logprob: -1.2134909629821777
    3. '=' → logprob: -3.0884909629821777
    4. ' in' → logprob: -3.0884909629821777
    5. ' ,' → logprob: -3.3384909629821777
    6. ',c' → logprob: -5.588490962982178
    7. ' =' → logprob: -5.588490962982178
    8. ' ' → logprob: -5.838490962982178
    9. 'anging' → logprob: -6.088490962982178
    10. 'ange' → logprob: -6.713490962982178

Token 86: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00757219223305583
    2. ' )' → logprob: -5.757572174072266
    3. ',r' → logprob: -6.382572174072266
    4. ',' → logprob: -6.632572174072266
    5. ' in' → logprob: -7.382572174072266
    6. 'in' → logprob: -9.132572174072266
    7. ')
' → logprob: -9.507572174072266
    8. 'r' → logprob: -9.757572174072266
    9. ' ' → logprob: -9.757572174072266
    10. ',i' → logprob: -10.007572174072266

Token 87: ' r' (ID: 428)
  Prédit: ' r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -1.1598689556121826
    2. '0' → logprob: -1.6598689556121826
    3. ' ' → logprob: -1.6598689556121826
    4. 'r' → logprob: -2.5348689556121826
    5. ' for' → logprob: -2.6598689556121826
    6. ' where' → logprob: -2.7848689556121826
    7. ' (' → logprob: -3.2848689556121826
    8. ' with' → logprob: -4.534869194030762
    9. ' in' → logprob: -4.659869194030762
    10. ' and' → logprob: -5.034869194030762

Token 88: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.5860183835029602
    2. ',c' → logprob: -1.3360183238983154
    3. ',' → logprob: -1.8360183238983154
    4. '=' → logprob: -4.4610185623168945
    5. ' ,' → logprob: -5.5860185623168945
    6. ')' → logprob: -5.9610185623168945
    7. ',r' → logprob: -6.3360185623168945
    8. 'in' → logprob: -7.7110185623168945
    9. ' =' → logprob: -8.336018562316895
    10. ' ' → logprob: -8.961018562316895

Token 89: ' [-' (ID: 20191)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.042821720242500305
    2. 'range' → logprob: -3.2928216457366943
    3. ' ' → logprob: -5.667821884155273
    4. '0' → logprob: -6.792821884155273
    5. ' [' → logprob: -9.292821884155273
    6. '[' → logprob: -9.542821884155273
    7. '4' → logprob: -11.667821884155273
    8. '{' → logprob: -12.542821884155273
    9. ' xrange' → logprob: -12.542821884155273
    10. '3' → logprob: -13.042821884155273

Token 90: 'H' (ID: 39)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.23773030936717987
    2. '3' → logprob: -1.6127302646636963
    3. '2' → logprob: -4.612730503082275
    4. '4' → logprob: -6.362730503082275
    5. ' ' → logprob: -8.112730026245117
    6. '0' → logprob: -8.737730026245117
    7. '(' → logprob: -10.737730026245117
    8. '-' → logprob: -10.800230026245117
    9. '5' → logprob: -11.175230026245117
    10. 'N' → logprob: -11.237730026245117

Token 91: '_i' (ID: 10853)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.7637607455253601
    2. ',' → logprob: -1.0137608051300049
    3. '2' → logprob: -2.138760805130005
    4. '+' → logprob: -3.263760805130005
    5. '3' → logprob: -4.888760566711426
    6. ' ' → logprob: -6.388760566711426
    7. ' ,' → logprob: -6.388760566711426
    8. ' +' → logprob: -7.013760566711426
    9. '4' → logprob: -7.263760566711426
    10. '0' → logprob: -7.763760566711426

Token 92: '+' (ID: 10)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5194039940834045
    2. '+' → logprob: -1.0194039344787598
    3. '_i' → logprob: -4.51940393447876
    4. ' +' → logprob: -4.76940393447876
    5. '//' → logprob: -5.01940393447876
    6. '1' → logprob: -5.51940393447876
    7. ',H' → logprob: -5.89440393447876
    8. ' ' → logprob: -6.39440393447876
    9. ',i' → logprob: -6.51940393447876
    10. '-' → logprob: -6.51940393447876

Token 93: '1' (ID: 16)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.32198941707611084
    2. '1' → logprob: -1.4469894170761108
    3. '3' → logprob: -3.6969895362854004
    4. '2' → logprob: -5.5719895362854
    5. ' ' → logprob: -6.0719895362854
    6. 'len' → logprob: -6.0719895362854
    7. '0' → logprob: -6.3219895362854
    8. 'M' → logprob: -6.6969895362854
    9. 'N' → logprob: -7.1969895362854
    10. 'H' → logprob: -7.1969895362854

Token 94: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5346980690956116
    2. ',H' → logprob: -1.1596980094909668
    3. ',N' → logprob: -3.159698009490967
    4. ',len' → logprob: -3.534698009490967
    5. ' ,' → logprob: -4.159698009490967
    6. '0' → logprob: -6.284698009490967
    7. ',C' → logprob: -6.534698009490967
    8. ' ' → logprob: -6.784698009490967
    9. 'H' → logprob: -7.284698009490967
    10. ',W' → logprob: -7.284698009490967

Token 95: '4' (ID: 19)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.001454472541809
    2. '0' → logprob: -1.126454472541809
    3. ' ' → logprob: -2.5014543533325195
    4. '4' → logprob: -2.5014543533325195
    5. ' N' → logprob: -3.1264543533325195
    6. 'C' → logprob: -3.6264543533325195
    7. '1' → logprob: -4.1264543533325195
    8. 'W' → logprob: -4.2514543533325195
    9. 'len' → logprob: -4.5014543533325195
    10. '3' → logprob: -5.0014543533325195

Token 96: '),' (ID: 936)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0319772958755493
    2. '-H' → logprob: -1.5319772958755493
    3. '],' → logprob: -1.6569772958755493
    4. ' ' → logprob: -3.6569771766662598
    5. ':' → logprob: -3.6569771766662598
    6. '-' → logprob: -3.7819771766662598
    7. '+' → logprob: -3.9069771766662598
    8. ']' → logprob: -4.40697717666626
    9. '-i' → logprob: -4.40697717666626
    10. ',H' → logprob: -4.40697717666626

Token 97: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.4667905569076538
    2. '4' → logprob: -2.0917906761169434
    3. ' ' → logprob: -3.0917906761169434
    4. '5' → logprob: -3.7167906761169434
    5. 'N' → logprob: -3.8417906761169434
    6. ' c' → logprob: -3.9667906761169434
    7. 'C' → logprob: -3.9667906761169434
    8. '0' → logprob: -3.9667906761169434
    9. 'len' → logprob: -4.091790676116943
    10. 'H' → logprob: -4.466790676116943

Token 98: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0568840317428112
    2. 'in' → logprob: -3.0568840503692627
    3. '[-' → logprob: -6.181883811950684
    4. '-i' → logprob: -7.056883811950684
    5. ' =' → logprob: -7.181883811950684
    6. ',' → logprob: -7.681883811950684
    7. '=[' → logprob: -7.681883811950684
    8. '=' → logprob: -7.806883811950684
    9. ')' → logprob: -7.931883811950684
    10. '=-' → logprob: -8.056883811950684

Token 99: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.005234356038272381
    2. ' [-' → logprob: -5.630234241485596
    3. '[' → logprob: -6.880234241485596
    4. 'range' → logprob: -7.880234241485596
    5. ' range' → logprob: -8.630234718322754
    6. '-' → logprob: -11.255234718322754
    7. ' [' → logprob: -11.380234718322754
    8. ' ' → logprob: -11.880234718322754
    9. ' -' → logprob: -12.005234718322754
    10. '   ' → logprob: -13.505234718322754

Token 100: 'W' (ID: 54)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.5962924361228943
    2. 'H' → logprob: -1.096292495727539
    3. '2' → logprob: -2.846292495727539
    4. '1' → logprob: -3.596292495727539
    5. '4' → logprob: -4.346292495727539
    6. '0' → logprob: -5.221292495727539
    7. ' ' → logprob: -5.846292495727539
    8. 'len' → logprob: -6.096292495727539
    9. 'stamp' → logprob: -6.471292495727539
    10. '(' → logprob: -7.221292495727539

Token 101: '_i' (ID: 10853)
  Prédit: '_i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_i' → logprob: -1.676292231422849e-05
    2. 'i' → logprob: -11.500017166137695
    3. '_j' → logprob: -12.875017166137695
    4. '[i' → logprob: -13.500017166137695
    5. '+' → logprob: -14.125017166137695
    6. '_s' → logprob: -15.000017166137695
    7. '_t' → logprob: -15.625017166137695
    8. ']_' → logprob: -15.625017166137695
    9. '+i' → logprob: -15.625017166137695
    10. '_m' → logprob: -15.750017166137695

Token 102: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.7848862373502925e-05
    2. ' +' → logprob: -10.875027656555176
    3. '1' → logprob: -12.125027656555176
    4. '_i' → logprob: -14.000027656555176
    5. '{' → logprob: -14.562527656555176
    6. ',' → logprob: -14.750027656555176
    7. 'i' → logprob: -15.187527656555176
    8. '+i' → logprob: -15.562527656555176
    9. '```' → logprob: -15.687527656555176
    10. '＋' → logprob: -15.687527656555176

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.334533878136426e-05
    2. ' ' → logprob: -10.500042915344238
    3. '2' → logprob: -11.875042915344238
    4. '0' → logprob: -12.000042915344238
    5. '3' → logprob: -14.125042915344238
    6. '4' → logprob: -14.375042915344238
    7. '   ' → logprob: -15.125042915344238
    8. '+' → logprob: -15.625042915344238
    9. '```' → logprob: -15.937542915344238
    10. '5' → logprob: -16.062543869018555

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04367702081799507
    2. '_i' → logprob: -3.6686770915985107
    3. '4' → logprob: -4.293676853179932
    4. ' ,' → logprob: -6.418676853179932
    5. 'i' → logprob: -7.418676853179932
    6. ' ' → logprob: -8.54367733001709
    7. '_,' → logprob: -8.66867733001709
    8. '(st' → logprob: -9.16867733001709
    9. ',i' → logprob: -9.16867733001709
    10. 'target' → logprob: -9.41867733001709

Token 105: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.056216560304164886
    2. '5' → logprob: -3.0562164783477783
    3. '3' → logprob: -5.431216716766357
    4. ' ' → logprob: -6.431216716766357
    5. 'N' → logprob: -7.681216716766357
    6. '0' → logprob: -7.681216716766357
    7. 'H' → logprob: -7.806216716766357
    8. '-' → logprob: -9.9312162399292
    9. 'W' → logprob: -10.0562162399292
    10. '9' → logprob: -10.1812162399292

Token 106: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.26508355140686035
    2. ')]' → logprob: -1.7650835514068604
    3. ']' → logprob: -3.5150835514068604
    4. '):' → logprob: -4.015083312988281
    5. '])' → logprob: -5.140083312988281
    6. '-' → logprob: -5.765083312988281
    7. ')])' → logprob: -6.390083312988281
    8. '_i' → logprob: -6.890083312988281
    9. '))' → logprob: -7.765083312988281
    10. '-i' → logprob: -7.765083312988281

Token 107: ' to' (ID: 316)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.7739554643630981
    2. ']' → logprob: -1.8989554643630981
    3. 'stamp' → logprob: -2.3989553451538086
    4. 'positions' → logprob: -2.6489553451538086
    5. 'for' → logprob: -2.7739553451538086
    6. 'st' → logprob: -2.8989553451538086
    7. '4' → logprob: -4.398955345153809
    8. ')' → logprob: -4.523955345153809
    9. '(' → logprob: -4.523955345153809
    10. '#' → logprob: -4.773955345153809

Token 108: ' allow' (ID: 3763)
  Prédit: ' cover'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cover' → logprob: -0.09471306204795837
    2. 'cover' → logprob: -2.469712972640991
    3. ' account' → logprob: -6.46971321105957
    4. ' complete' → logprob: -6.96971321105957
    5. '<|end|>' → logprob: -7.59471321105957
    6. ' ensure' → logprob: -7.71971321105957
    7. 'complete' → logprob: -8.71971321105957
    8. ' ' → logprob: -8.71971321105957
    9. '_cover' → logprob: -8.71971321105957
    10. 'ensure' → logprob: -8.96971321105957

Token 109: ' partial' (ID: 13664)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6366190314292908
    2. 'for' → logprob: -1.3866190910339355
    3. 'H' → logprob: -2.3866190910339355
    4. ' H' → logprob: -3.3866190910339355
    5. ' applying' → logprob: -4.1366190910339355
    6. ' stamps' → logprob: -4.2616190910339355
    7. ' the' → logprob: -5.1366190910339355
    8. 'st' → logprob: -5.3866190910339355
    9. ' all' → logprob: -5.3866190910339355
    10. 'stamp' → logprob: -5.5116190910339355

Token 110: ' overlap' (ID: 56631)
  Prédit: ' coverage'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' coverage' → logprob: -0.14843395352363586
    2. 'coverage' → logprob: -2.8984339237213135
    3. ')' → logprob: -3.6484339237213135
    4. '_overlap' → logprob: -4.648434162139893
    5. ' placements' → logprob: -5.023434162139893
    6. 'over' → logprob: -5.273434162139893
    7. ' overlaps' → logprob: -5.398434162139893
    8. 'placements' → logprob: -5.523434162139893
    9. ' overlap' → logprob: -5.523434162139893
    10. 'st' → logprob: -5.773434162139893

Token 111: '
' (ID: 198)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.1806027740240097
    2. 'st' → logprob: -2.680602788925171
    3. 'for' → logprob: -3.180602788925171
    4. 'stamp' → logprob: -3.430602788925171
    5. 'max' → logprob: -4.555602550506592
    6. 'positions' → logprob: -5.430602550506592
    7. 'from' → logprob: -6.430602550506592
    8. 'Hs' → logprob: -7.180602550506592
    9. 'sizes' → logprob: -7.430602550506592
    10. ' H' → logprob: -7.430602550506592

Token 112: '#' (ID: 2)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.7933663129806519
    2. 'stamp' → logprob: -1.1683663129806519
    3. 'positions' → logprob: -3.1683664321899414
    4. 'st' → logprob: -3.2933664321899414
    5. 'max' → logprob: -3.6683664321899414
    6. 'possible' → logprob: -3.7933664321899414
    7. '4' → logprob: -3.7933664321899414
    8. 'for' → logprob: -4.543366432189941
    9. 'M' → logprob: -4.543366432189941
    10. 'pre' → logprob: -4.543366432189941

Token 113: ' For' (ID: 2214)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.4642636477947235
    2. 'stamp' → logprob: -2.089263677597046
    3. 'from' → logprob: -3.464263677597046
    4. 'max' → logprob: -3.464263677597046
    5. 'positions' → logprob: -3.589263677597046
    6. 'for' → logprob: -3.714263677597046
    7. '4' → logprob: -3.839263677597046
    8. 'dp' → logprob: -4.214263439178467
    9. 'results' → logprob: -4.464263439178467
    10. 'possible' → logprob: -4.464263439178467

Token 114: ' each' (ID: 2454)
  Prédit: ' _'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.6353548169136047
    2. ' i' → logprob: -1.38535475730896
    3. ' r' → logprob: -3.01035475730896
    4. ' stamp' → logprob: -3.01035475730896
    5. ' s' → logprob: -3.51035475730896
    6. '_' → logprob: -3.51035475730896
    7. 'stamp' → logprob: -4.635354995727539
    8. ' h' → logprob: -4.635354995727539
    9. ' H' → logprob: -4.760354995727539
    10. ' each' → logprob: -5.135354995727539

Token 115: ' possible' (ID: 4149)
  Prédit: 'stamp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stamp' → logprob: -0.8049566745758057
    2. ' stamp' → logprob: -0.9299566745758057
    3. ' i' → logprob: -2.5549566745758057
    4. 'i' → logprob: -3.1799566745758057
    5. ' (' → logprob: -3.9299566745758057
    6. 'st' → logprob: -5.304956436157227
    7. 'r' → logprob: -5.929956436157227
    8. ' r' → logprob: -5.929956436157227
    9. ')' → logprob: -6.679956436157227
    10. '(' → logprob: -6.929956436157227

Token 116: ' placement' (ID: 29002)
  Prédit: 'stamp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stamp' → logprob: -0.4786239564418793
    2. ' stamp' → logprob: -1.2286239862442017
    3. ' placement' → logprob: -3.728623867034912
    4. 'position' → logprob: -4.103623867034912
    5. 'st' → logprob: -4.478623867034912
    6. ' position' → logprob: -4.853623867034912
    7. 'placement' → logprob: -4.978623867034912
    8. ' (' → logprob: -5.228623867034912
    9. '(r' → logprob: -5.353623867034912
    10. 'r' → logprob: -5.478623867034912

Token 117: ' and' (ID: 326)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.12122415006160736
    2. ':' → logprob: -3.4962241649627686
    3. 'placements' → logprob: -3.4962241649627686
    4. 'positions' → logprob: -4.6212239265441895
    5. 'placement' → logprob: -4.7462239265441895
    6. 'for' → logprob: -4.9962239265441895
    7. ' placements' → logprob: -5.6212239265441895
    8. 'stamp' → logprob: -5.7462239265441895
    9. ' for' → logprob: -5.8712239265441895
    10. ' in' → logprob: -5.9962239265441895

Token 118: ' color' (ID: 3089)
  Prédit: ' each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' each' → logprob: -1.1638376712799072
    2. ' orientation' → logprob: -1.9138376712799072
    3. ' for' → logprob: -2.1638376712799072
    4. 'stamp' → logprob: -2.4138376712799072
    5. 'each' → logprob: -2.9138376712799072
    6. 'for' → logprob: -3.0388376712799072
    7. ' rotation' → logprob: -3.1638376712799072
    8. 'rotation' → logprob: -3.2888376712799072
    9. ' size' → logprob: -3.2888376712799072
    10. 'orientation' → logprob: -3.2888376712799072

Token 119: ',' (ID: 11)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.22111095488071442
    2. ',' → logprob: -1.9711109399795532
    3. ']' → logprob: -4.221110820770264
    4. ' for' → logprob: -5.221110820770264
    5. 'for' → logprob: -5.471110820770264
    6. '_s' → logprob: -5.596110820770264
    7. 'stamp' → logprob: -5.596110820770264
    8. ' s' → logprob: -5.971110820770264
    9. '0' → logprob: -6.221110820770264
    10. '_map' → logprob: -6.596110820770264

Token 120: ' create' (ID: 2501)
  Prédit: 'actions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'actions' → logprob: -1.1650415658950806
    2. 'app' → logprob: -2.165041446685791
    3. 'apply' → logprob: -2.540041446685791
    4. 'operations' → logprob: -2.665041446685791
    5. 'applications' → logprob: -2.915041446685791
    6. 'stamp' → logprob: -3.165041446685791
    7. 'ops' → logprob: -3.165041446685791
    8. 'placements' → logprob: -3.165041446685791
    9. ' actions' → logprob: -3.540041446685791
    10. 'positions' → logprob: -4.290041446685791

Token 121: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.08723710477352142
    2. ' an' → logprob: -3.0872371196746826
    3. 'a' → logprob: -3.9622371196746826
    4. ' all' → logprob: -5.2122368812561035
    5. ' the' → logprob: -5.8372368812561035
    6. 'all' → logprob: -5.9622368812561035
    7. '[]' → logprob: -6.2122368812561035
    8. 'the' → logprob: -6.4622368812561035
    9. 'app' → logprob: -7.2122368812561035
    10. ' []' → logprob: -7.7122368812561035

Token 122: ' mask' (ID: 10910)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.6031125783920288
    2. ' list' → logprob: -0.9781125783920288
    3. '[]' → logprob: -3.3531126976013184
    4. 'bit' → logprob: -4.353112697601318
    5. 'mask' → logprob: -5.478112697601318
    6. '[
' → logprob: -5.478112697601318
    7. ' bit' → logprob: -5.853112697601318
    8. '[' → logprob: -5.853112697601318
    9. '[(' → logprob: -5.978112697601318
    10. 'st' → logprob: -6.103112697601318

Token 123: ' that' (ID: 484)
  Prédit: 'placements'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'placements' → logprob: -1.0609532594680786
    2. 'm' → logprob: -1.8109532594680786
    3. 'positions' → logprob: -2.685953140258789
    4. '_' → logprob: -2.810953140258789
    5. 'stamp' → logprob: -2.935953140258789
    6. 's' → logprob: -3.060953140258789
    7. '=' → logprob: -3.060953140258789
    8. 'st' → logprob: -3.560953140258789
    9. 'H' → logprob: -3.685953140258789
    10. ' =' → logprob: -3.810953140258789

Token 124: ' covers' (ID: 17804)
  Prédit: ' covers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' covers' → logprob: -0.14881615340709686
    2. 'covers' → logprob: -2.7738161087036133
    3. ' marks' → logprob: -3.6488161087036133
    4. ' sets' → logprob: -3.7738161087036133
    5. ' represents' → logprob: -4.648816108703613
    6. 'sets' → logprob: -6.023816108703613
    7. 's' → logprob: -6.273816108703613
    8. 'captures' → logprob: -6.398816108703613
    9. ' applies' → logprob: -6.523816108703613
    10. ' identifies' → logprob: -6.523816108703613

Token 125: ' affected' (ID: 18155)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 126: ' cells' (ID: 11242)
  Prédit: 'positions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'positions' → logprob: -0.7156530022621155
    2. ' positions' → logprob: -1.7156529426574707
    3. 'cells' → logprob: -1.7156529426574707
    4. ' cells' → logprob: -2.7156529426574707
    5. 'pixels' → logprob: -3.5906529426574707
    6. '<|end|>' → logprob: -3.9656529426574707
    7. 'indices' → logprob: -4.090652942657471
    8. '_positions' → logprob: -5.340652942657471
    9. 'points' → logprob: -5.840652942657471
    10. ' indices' → logprob: -6.090652942657471

Token 127: ' with' (ID: 483)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.07060515135526657
    2. 'H' → logprob: -3.8206050395965576
    3. 'stamp' → logprob: -4.195605278015137
    4. 'placements' → logprob: -5.070605278015137
    5. 'possible' → logprob: -5.195605278015137
    6. 'positions' → logprob: -5.320605278015137
    7. 'st' → logprob: -5.945605278015137
    8. 'from' → logprob: -6.070605278015137
    9. 'mask' → logprob: -6.320605278015137
    10. 'app' → logprob: -7.570605278015137

Token 128: ' that' (ID: 484)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2114289999008179
    2. 'the' → logprob: -1.4614289999008179
    3. '<|end|>' → logprob: -2.5864291191101074
    4. ' the' → logprob: -2.8364291191101074
    5. 'color' → logprob: -2.9614291191101074
    6. ' a' → logprob: -3.2114291191101074
    7. ' ' → logprob: -3.4614291191101074
    8. 'st' → logprob: -3.7114291191101074
    9. ' which' → logprob: -3.7114291191101074
    10. 'a' → logprob: -3.9614291191101074

Token 129: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.8787767887115479
    2. ' color' → logprob: -1.0037767887115479
    3. 'stamp' → logprob: -3.128776788711548
    4. ')' → logprob: -3.753776788711548
    5. ''s' → logprob: -4.128776550292969
    6. '.' → logprob: -4.378776550292969
    7. '#' → logprob: -5.128776550292969
    8. ' covers' → logprob: -5.128776550292969
    9. ',' → logprob: -5.378776550292969
    10. ']' → logprob: -5.378776550292969

Token 130: '

' (ID: 279)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4843614399433136
    2. 'stamp' → logprob: -2.359361410140991
    3. 'actions' → logprob: -2.734361410140991
    4. 'app' → logprob: -3.234361410140991
    5. 'placements' → logprob: -3.359361410140991
    6. 'possible' → logprob: -3.859361410140991
    7. 'ap' → logprob: -4.10936164855957
    8. 'mask' → logprob: -4.60936164855957
    9. 'positions' → logprob: -4.73436164855957
    10. 'apply' → logprob: -4.73436164855957

Token 131: 'def' (ID: 1314)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7523296475410461
    2. 'stamp' → logprob: -1.0023295879364014
    3. 'H' → logprob: -2.3773295879364014
    4. 'st' → logprob: -4.5023298263549805
    5. 'mask' → logprob: -4.6273298263549805
    6. 'possible' → logprob: -4.8773298263549805
    7. 'all' → logprob: -5.0023298263549805
    8. 'M' → logprob: -5.0023298263549805
    9. 'app' → logprob: -5.5023298263549805
    10. 'dp' → logprob: -5.7523298263549805

Token 132: ' inside' (ID: 6772)
  Prédit: ' apply'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' apply' → logprob: -0.19402523338794708
    2. ' pre' → logprob: -2.3190252780914307
    3. ' generate' → logprob: -3.8190252780914307
    4. ' get' → logprob: -3.9440252780914307
    5. ' preprocess' → logprob: -4.319025039672852
    6. ' compute' → logprob: -4.569025039672852
    7. 'apply' → logprob: -5.694025039672852
    8. ' encode' → logprob: -6.194025039672852
    9. 'pre' → logprob: -6.444025039672852
    10. ' main' → logprob: -6.444025039672852

Token 133: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -0.01739647053182125
    2. '(' → logprob: -4.267396450042725
    3. '(row' → logprob: -6.017396450042725
    4. '(x' → logprob: -8.392396926879883
    5. '(y' → logprob: -8.767396926879883
    6. '(pos' → logprob: -9.267396926879883
    7. ' (' → logprob: -9.517396926879883
    8. '(i' → logprob: -9.642396926879883
    9. '((' → logprob: -10.517396926879883
    10. '(cell' → logprob: -10.517396926879883

Token 134: ',c' (ID: 22261)
  Prédit: ',c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',c' → logprob: -0.38773828744888306
    2. ',' → logprob: -1.1377382278442383
    3. ',h' → logprob: -8.387738227844238
    4. ',row' → logprob: -8.637738227844238
    5. ',r' → logprob: -9.262738227844238
    6. ',int' → logprob: -9.262738227844238
    7. ',col' → logprob: -9.637738227844238
    8. ' ,' → logprob: -9.887738227844238
    9. ',k' → logprob: -10.512738227844238
    10. ',C' → logprob: -10.512738227844238

Token 135: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4128035604953766
    2. '):' → logprob: -1.7878035306930542
    3. ',r' → logprob: -1.7878035306930542
    4. ' ,' → logprob: -7.037803649902344
    5. ',n' → logprob: -7.537803649902344
    6. ',row' → logprob: -8.287803649902344
    7. ',size' → logprob: -8.287803649902344
    8. ',int' → logprob: -8.412803649902344
    9. ',c' → logprob: -8.662803649902344
    10. ',i' → logprob: -8.787803649902344

Token 136: '   ' (ID: 271)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.4484074115753174
    2. '   ' → logprob: -1.1984074115753174
    3. 'return' → logprob: -2.8234074115753174
    4. '	return' → logprob: -8.448407173156738
    5. '0' → logprob: -10.073407173156738
    6. '4' → logprob: -11.448407173156738
    7. ' ' → logprob: -12.948407173156738
    8. '   ' → logprob: -13.448407173156738
    9. '{return' → logprob: -14.073407173156738
    10. '    ' → logprob: -14.323407173156738

Token 137: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.5771438479423523
    2. '0' → logprob: -0.8271438479423523
    3. ' return' → logprob: -7.077143669128418
    4. '   ' → logprob: -7.952143669128418
    5. ' ' → logprob: -11.952143669128418
    6. '4' → logprob: -15.077143669128418
    7. '	return' → logprob: -15.202143669128418
    8. '7' → logprob: -15.952143669128418
    9. 'r' → logprob: -16.077144622802734
    10. '(' → logprob: -16.327144622802734

Token 138: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011272187111899257
    2. ' ' → logprob: -9.125112533569336
    3. '(' → logprob: -12.500112533569336
    4. 'r' → logprob: -16.625112533569336
    5. ' (' → logprob: -17.250112533569336
    6. '   ' → logprob: -17.875112533569336
    7. '(r' → logprob: -19.250112533569336
    8. ' ' → logprob: -19.875112533569336
    9. '-' → logprob: -20.125112533569336
    10. '  ' → logprob: -21.000112533569336

Token 139: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0280383548888494e-06
    2. '(' → logprob: -14.375000953674316
    3. ' ' → logprob: -14.875000953674316
    4. '-' → logprob: -20.000001907348633
    5. '   ' → logprob: -20.000001907348633
    6. 'r' → logprob: -20.125001907348633
    7. '```' → logprob: -21.375001907348633
    8. '`' → logprob: -21.500001907348633
    9. '
' → logprob: -22.125001907348633
    10. '00' → logprob: -22.625001907348633

Token 140: '<=' (ID: 16672)
  Prédit: '<='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.0025341638829559088
    2. ' <=' → logprob: -6.00253438949585
    3. '<' → logprob: -9.877533912658691
    4. '0' → logprob: -12.877533912658691
    5. '4' → logprob: -13.627533912658691
    6. 'r' → logprob: -13.752533912658691
    7. ' ' → logprob: -14.877533912658691
    8. '>' → logprob: -14.877533912658691
    9. ' r' → logprob: -15.252533912658691
    10. ')<=' → logprob: -15.627533912658691

Token 141: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -2.618001053633634e-05
    2. ' r' → logprob: -10.625025749206543
    3. 'c' → logprob: -13.250025749206543
    4. '4' → logprob: -16.87502670288086
    5. '	r' → logprob: -17.75002670288086
    6. '_r' → logprob: -18.75002670288086
    7. '   ' → logprob: -19.25002670288086
    8. '7' → logprob: -19.50002670288086
    9. '6' → logprob: -19.62502670288086
    10. '
' → logprob: -19.87502670288086

Token 142: '<' (ID: 27)
  Prédit: '<'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.002644740976393223
    2. ' and' → logprob: -6.8776445388793945
    3. ' <' → logprob: -7.7526445388793945
    4. '4' → logprob: -7.7526445388793945
    5. 'and' → logprob: -8.127644538879395
    6. '<c' → logprob: -8.127644538879395
    7. 'r' → logprob: -10.002644538879395
    8. 'c' → logprob: -10.252644538879395
    9. ' ' → logprob: -10.752644538879395
    10. '   ' → logprob: -11.002644538879395

Token 143: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -18.250003814697266
    4. '４' → logprob: -19.750003814697266
    5. '
' → logprob: -19.937503814697266
    6. '```' → logprob: -20.125003814697266
    7. '٤' → logprob: -20.187503814697266
    8. '۴' → logprob: -20.312503814697266
    9. '' → logprob: -20.312503814697266
    10. '=' → logprob: -20.312503814697266

Token 144: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.313443124294281
    2. '<|end|>' → logprob: -1.4384431838989258
    3. 'and' → logprob: -3.938443183898926
    4. 'def' → logprob: -5.188443183898926
    5. '
' → logprob: -6.188443183898926
    6. ')' → logprob: -6.563443183898926
    7. ' ' → logprob: -6.688443183898926
    8. '<|end|>' → logprob: -6.938443183898926
    9. '   ' → logprob: -8.188443183898926
    10. ',' → logprob: -8.188443183898926

Token 145: ' ' (ID: 220)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.06221437826752663
    2. '0' → logprob: -2.8122143745422363
    3. ' ' → logprob: -8.312214851379395
    4. '   ' → logprob: -14.187214851379395
    5. 'c' → logprob: -14.937214851379395
    6. '  ' → logprob: -16.562213897705078
    7. '
' → logprob: -17.437213897705078
    8. ' ' → logprob: -17.937213897705078
    9. '```' → logprob: -18.062213897705078
    10. 'r' → logprob: -18.187213897705078

Token 146: '0' (ID: 15)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. 'c' → logprob: -18.375
    4. '   ' → logprob: -20.75
    5. '```' → logprob: -21.5
    6. 'len' → logprob: -23.25
    7. '0' → logprob: -23.5
    8. 'r' → logprob: -23.625
    9. '۴' → logprob: -23.625
    10. 'col' → logprob: -23.75

Token 147: '<=' (ID: 16672)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.0415261834859848
    2. '<=' → logprob: -3.9165260791778564
    3. '4' → logprob: -4.0415263175964355
    4. '<int' → logprob: -7.0415263175964355
    5. '<c' → logprob: -7.4165263175964355
    6. '   ' → logprob: -8.041525840759277
    7. '<size' → logprob: -8.041525840759277
    8. ' <' → logprob: -8.291525840759277
    9. '<len' → logprob: -8.791525840759277
    10. ' ' → logprob: -9.416525840759277

Token 148: 'c' (ID: 66)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0006310671451501548
    2. 'c' → logprob: -7.375630855560303
    3. ' ' → logprob: -12.625631332397461
    4. ' c' → logprob: -14.375631332397461
    5. 'r' → logprob: -14.500631332397461
    6. 'col' → logprob: -16.50063133239746
    7. '3' → logprob: -17.00063133239746
    8. '5' → logprob: -17.12563133239746
    9. '   ' → logprob: -17.12563133239746
    10. '```' → logprob: -18.50063133239746

Token 149: '<' (ID: 27)
  Prédit: '4'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -0.0244554802775383
    2. '<' → logprob: -3.7744555473327637
    3. ' ' → logprob: -6.774455547332764
    4. '0' → logprob: -10.024455070495605
    5. '   ' → logprob: -11.524455070495605
    6. '(' → logprob: -11.899455070495605
    7. ' <' → logprob: -13.024455070495605
    8. '<=' → logprob: -14.149455070495605
    9. '<int' → logprob: -14.649455070495605
    10. '<len' → logprob: -15.024455070495605

Token 150: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -7.896309739408025e-07
    2. ' ' → logprob: -14.125000953674316
    3. '```' → logprob: -19.625
    4. '   ' → logprob: -19.75
    5. '４' → logprob: -20.1875
    6. '' → logprob: -20.25
    7. '5' → logprob: -20.25
    8. '۴' → logprob: -20.5625
    9. '४' → logprob: -21.0
    10. '৪' → logprob: -21.125

Token 151: '

' (ID: 279)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.7246369123458862
    2. '
' → logprob: -2.724637031555176
    3. 'placements' → logprob: -2.724637031555176
    4. 'def' → logprob: -2.974637031555176
    5. 'st' → logprob: -3.224637031555176
    6. 'H' → logprob: -3.349637031555176
    7. 'stamp' → logprob: -3.599637031555176
    8. 'placement' → logprob: -3.849637031555176
    9. 'possible' → logprob: -4.099637031555176
    10. 'positions' → logprob: -4.099637031555176

Token 152: 'actions' (ID: 6711)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.9759923219680786
    2. 'stamp' → logprob: -1.3509923219680786
    3. 'st' → logprob: -2.725992202758789
    4. 'all' → logprob: -3.225992202758789
    5. 'app' → logprob: -3.350992202758789
    6. 'moves' → logprob: -3.475992202758789
    7. 'actions' → logprob: -3.600992202758789
    8. 'trans' → logprob: -3.850992202758789
    9. 'apply' → logprob: -3.850992202758789
    10. 'ops' → logprob: -3.975992202758789

Token 153: '=[]
' (ID: 63466)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26649072766304016
    2. '=' → logprob: -1.7664906978607178
    3. '=[]' → logprob: -2.7664906978607178
    4. '=[' → logprob: -9.641490936279297
    5. '={}' → logprob: -10.141490936279297
    6. '=[]
' → logprob: -11.891490936279297
    7. '=[],' → logprob: -13.141490936279297
    8. ' =[' → logprob: -13.141490936279297
    9. '=[]
' → logprob: -13.266490936279297
    10. ' ' → logprob: -13.266490936279297

Token 154: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -9.627176768844947e-05
    2. ' for' → logprob: -9.250096321105957
    3. '4' → logprob: -16.87509536743164
    4. ')' → logprob: -17.25009536743164
    5. 'from' → logprob: -17.50009536743164
    6. '
' → logprob: -18.75009536743164
    7. '	for' → logprob: -18.87509536743164
    8. 'def' → logprob: -18.87509536743164
    9. 'colors' → logprob: -19.12509536743164
    10. ']' → logprob: -19.12509536743164

Token 155: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7037225365638733
    2. ' i' → logprob: -1.4537224769592285
    3. ' idx' → logprob: -1.7037224769592285
    4. 'idx' → logprob: -2.4537224769592285
    5. ' stamp' → logprob: -6.5787224769592285
    6. 'stamp' → logprob: -7.0787224769592285
    7. 'index' → logprob: -7.7037224769592285
    8. '_i' → logprob: -7.9537224769592285
    9. ' index' → logprob: -8.828722953796387
    10. 'st' → logprob: -9.828722953796387

Token 156: ',(' (ID: 27243)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.12697240710258484
    2. 'in' → logprob: -2.1269724369049072
    3. ' ' → logprob: -10.126972198486328
    4. ',' → logprob: -12.876972198486328
    5. '	in' → logprob: -14.626972198486328
    6. 'range' → logprob: -14.876972198486328
    7. ')' → logprob: -15.001972198486328
    8. ' i' → logprob: -15.751972198486328
    9. 'n' → logprob: -15.876972198486328
    10. '```' → logprob: -16.126972198486328

Token 157: 'h' (ID: 71)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.22840937972068787
    2. 'h' → logprob: -1.6034094095230103
    3. 'Hi' → logprob: -6.353409290313721
    4. 'hi' → logprob: -7.228409290313721
    5. ' H' → logprob: -9.353409767150879
    6. 'height' → logprob: -9.353409767150879
    7. 'w' → logprob: -9.978409767150879
    8. 'Hs' → logprob: -10.353409767150879
    9. 'r' → logprob: -10.478409767150879
    10. ',' → logprob: -10.478409767150879

Token 158: ',w' (ID: 49598)
  Prédit: ',w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',w' → logprob: -0.0628172978758812
    2. ',' → logprob: -2.812817335128784
    3. ',i' → logprob: -8.312817573547363
    4. ',s' → logprob: -8.312817573547363
    5. 'w' → logprob: -8.812817573547363
    6. ',c' → logprob: -10.187817573547363
    7. ',W' → logprob: -10.687817573547363
    8. ',v' → logprob: -10.812817573547363
    9. ',t' → logprob: -10.937817573547363
    10. ',d' → logprob: -11.312817573547363

Token 159: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9676963090896606
    2. ',v' → logprob: -1.7176963090896606
    3. ')' → logprob: -2.717696189880371
    4. ',i' → logprob: -3.092696189880371
    5. ',x' → logprob: -3.092696189880371
    6. ',c' → logprob: -3.217696189880371
    7. ',s' → logprob: -3.342696189880371
    8. ',h' → logprob: -3.342696189880371
    9. ',color' → logprob: -3.342696189880371
    10. ',r' → logprob: -3.592696189880371

Token 160: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.49303126335144043
    2. 'in' → logprob: -1.6180312633514404
    3. ',h' → logprob: -1.8680312633514404
    4. ',' → logprob: -3.8680312633514404
    5. ',in' → logprob: -5.6180315017700195
    6. ',i' → logprob: -6.2430315017700195
    7. ',s' → logprob: -6.3680315017700195
    8. ',w' → logprob: -6.4930315017700195
    9. ')' → logprob: -6.7430315017700195
    10. ',r' → logprob: -7.2430315017700195

Token 161: ' enumerate' (ID: 29671)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.11550812423229218
    2. 'enumer' → logprob: -2.4905080795288086
    3. ' stamps' → logprob: -4.365508079528809
    4. ' enumerate' → logprob: -4.365508079528809
    5. 'range' → logprob: -7.365508079528809
    6. 'stamp' → logprob: -9.740508079528809
    7. '[(' → logprob: -10.240508079528809
    8. '(st' → logprob: -10.740508079528809
    9. ' range' → logprob: -10.865508079528809
    10. '[' → logprob: -11.740508079528809

Token 162: '(st' (ID: 4065)
  Prédit: 'st'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'st' → logprob: -0.03563850000500679
    2. ' stamps' → logprob: -3.4106385707855225
    3. '(st' → logprob: -6.285638332366943
    4. ')' → logprob: -9.535638809204102
    5. ' (' → logprob: -11.160638809204102
    6. ' st' → logprob: -11.285638809204102
    7. '	st' → logprob: -11.910638809204102
    8. '   ' → logprob: -12.910638809204102
    9. 'N' → logprob: -12.910638809204102
    10. ',' → logprob: -13.035638809204102

Token 163: 'amps' (ID: 13580)
  Prédit: 'amps'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'amps' → logprob: -0.000969583576079458
    2. 'ps' → logprob: -7.250969409942627
    3. 'aps' → logprob: -8.375969886779785
    4. 's' → logprob: -12.125969886779785
    5. ' stamps' → logprob: -13.000969886779785
    6. '[i' → logprob: -13.125969886779785
    7. '[' → logprob: -13.250969886779785
    8. ')' → logprob: -13.375969886779785
    9. 'ar' → logprob: -13.750969886779785
    10. '(N' → logprob: -13.750969886779785

Token 164: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1611500233411789
    2. '):
' → logprob: -1.9111499786376953
    3. ':' → logprob: -7.286149978637695
    4. '):
' → logprob: -9.786149978637695
    5. ',h' → logprob: -9.786149978637695
    6. '   ' → logprob: -10.036149978637695
    7. ',' → logprob: -10.786149978637695
    8. ')' → logprob: -10.911149978637695
    9. '):(' → logprob: -11.286149978637695
    10. ':
' → logprob: -11.411149978637695

Token 165: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16157567501068115
    2. ' for' → logprob: -1.9115756750106812
    3. ' range' → logprob: -7.786575794219971
    4. '	for' → logprob: -8.161575317382812
    5. ',' → logprob: -8.411575317382812
    6. ' h' → logprob: -8.661575317382812
    7. 'for' → logprob: -9.661575317382812
    8. '   ' → logprob: -10.411575317382812
    9. ' ranges' → logprob: -10.911575317382812
    10. ' ,' → logprob: -11.036575317382812

Token 166: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.2698005139827728
    2. 'for' (adapté à ' for') → logprob: -1.8948005437850952
    3. '   ' → logprob: -2.7698004245758057
    4. ' range' → logprob: -4.019800662994385
    5. 'range' → logprob: -5.394800662994385
    6. '
' → logprob: -8.144800186157227
    7. '    
' → logprob: -8.394800186157227
    8. ' ' → logprob: -8.894800186157227
    9. '	for' → logprob: -10.019800186157227
    10. 'from' → logprob: -10.519800186157227

Token 167: ' top' (ID: 2344)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.37242549657821655
    2. ' r' → logprob: -1.2474255561828613
    3. '-r' → logprob: -3.9974255561828613
    4. '-' → logprob: -5.997425556182861
    5. ' -' → logprob: -6.122425556182861
    6. 'range' → logprob: -8.622425079345703
    7. ' range' → logprob: -8.997425079345703
    8. '   ' → logprob: -9.747425079345703
    9. '(-' → logprob: -9.872425079345703
    10. '_r' → logprob: -10.497425079345703

Token 168: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006294922437518835
    2. ',r' → logprob: -5.7562947273254395
    3. 'in' → logprob: -6.0062947273254395
    4. '_r' → logprob: -9.006295204162598
    5. '   ' → logprob: -9.131295204162598
    6. 'r' → logprob: -9.131295204162598
    7. '_offset' → logprob: -9.631295204162598
    8. ',' → logprob: -9.631295204162598
    9. ',row' → logprob: -10.506295204162598
    10. ' ,' → logprob: -10.631295204162598

Token 169: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5136637091636658
    2. 'range' → logprob: -1.2636637687683105
    3. '-range' → logprob: -2.2636637687683105
    4. ' -' → logprob: -4.6386637687683105
    5. '-r' → logprob: -5.6386637687683105
    6. '-' → logprob: -6.6386637687683105
    7. '(-' → logprob: -8.138663291931152
    8. '(range' → logprob: -9.388663291931152
    9. '-ra' → logprob: -9.763663291931152
    10. '-(' → logprob: -10.138663291931152

Token 170: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.2651485502719879
    2. '-' → logprob: -2.640148639678955
    3. '-(' → logprob: -2.640148639678955
    4. '-h' → logprob: -3.390148639678955
    5. ' -' → logprob: -3.515148639678955
    6. '(-(' → logprob: -4.265148639678955
    7. '(' → logprob: -4.765148639678955
    8. '   ' → logprob: -6.265148639678955
    9. '-H' → logprob: -6.640148639678955
    10. ' (-' → logprob: -8.890148162841797

Token 171: 'h' (ID: 71)
  Prédit: 'h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'h' → logprob: -0.012693876400589943
    2. '(h' → logprob: -4.512693881988525
    3. ' h' → logprob: -7.512693881988525
    4. 'st' → logprob: -8.137693405151367
    5. ' (' → logprob: -8.512693405151367
    6. 'max' → logprob: -8.637693405151367
    7. '(st' → logprob: -8.887693405151367
    8. '(' → logprob: -9.387693405151367
    9. '(max' → logprob: -10.262693405151367
    10. 'H' → logprob: -10.387693405151367

Token 172: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -4.096126576769166e-05
    2. ' +' → logprob: -10.125041007995605
    3. '   ' → logprob: -14.500041007995605
    4. '1' → logprob: -15.250041007995605
    5. '       ' → logprob: -17.87504005432129
    6. 'plus' → logprob: -18.00004005432129
    7. '
' → logprob: -18.00004005432129
    8. '()+' → logprob: -18.12504005432129
    9. '＋' → logprob: -18.37504005432129
    10. ' ' → logprob: -18.62504005432129

Token 173: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.180258191714529e-06
    2. ' ' → logprob: -11.875008583068848
    3. '   ' → logprob: -15.125008583068848
    4. '
' → logprob: -15.375008583068848
    5. '```' → logprob: -15.375008583068848
    6. '2' → logprob: -15.562508583068848
    7. '

' → logprob: -16.81250762939453
    8. '0' → logprob: -17.43750762939453
    9. '+' → logprob: -17.56250762939453
    10. ')' → logprob: -18.12500762939453

Token 174: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006171276327222586
    2. ' ,' → logprob: -7.500617027282715
    3. '   ' → logprob: -11.500617027282715
    4. ',len' → logprob: -11.500617027282715
    5. ',-' → logprob: -11.625617027282715
    6. '4' → logprob: -11.875617027282715
    7. ',h' → logprob: -12.500617027282715
    8. ' ' → logprob: -12.500617027282715
    9. ',
' → logprob: -12.750617027282715
    10. ',+' → logprob: -12.875617027282715

Token 175: '4' (ID: 19)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.4743853509426117
    2. '4' → logprob: -0.9743853807449341
    3. ' ' → logprob: -8.099385261535645
    4. '   ' → logprob: -13.849385261535645
    5. '
' → logprob: -14.411885261535645
    6. '```' → logprob: -14.849385261535645
    7. '(' → logprob: -15.036885261535645
    8. '
' → logprob: -15.099385261535645
    9. '6' → logprob: -15.474385261535645
    10. '

' → logprob: -15.474385261535645

Token 176: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.038608815521001816
    2. '):' → logprob: -3.2886087894439697
    3. '   ' → logprob: -7.663609027862549
    4. '):
' → logprob: -10.16360855102539
    5. ':' → logprob: -11.03860855102539
    6. '       ' → logprob: -11.78860855102539
    7. ' ):
' → logprob: -11.78860855102539
    8. ',' → logprob: -11.91360855102539
    9. ':
' → logprob: -12.03860855102539
    10. ')' → logprob: -12.03860855102539

Token 177: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0048319073393940926
    2. ' for' → logprob: -5.504831790924072
    3. 'for' → logprob: -7.254831790924072
    4. '     ' → logprob: -10.75483226776123
    5. '   ' → logprob: -10.87983226776123
    6. '    ' → logprob: -12.75483226776123
    7. '      ' → logprob: -13.62983226776123
    8. '           ' → logprob: -14.50483226776123
    9. ' ' → logprob: -14.75483226776123
    10. '	   ' → logprob: -15.00483226776123

Token 178: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.058806441724300385
    2. '           ' → logprob: -3.9338064193725586
    3. 'left' → logprob: -3.9338064193725586
    4. ' for' → logprob: -4.183806419372559
    5. '       ' → logprob: -6.433806419372559
    6. ' left' → logprob: -7.308806419372559
    7. '   ' → logprob: -7.933806419372559
    8. ' ' → logprob: -11.058806419372559
    9. '        ' → logprob: -11.308806419372559
    10. '               ' → logprob: -11.433806419372559

Token 179: ' left' (ID: 3561)
  Prédit: 'left'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -0.008615872822701931
    2. ' left' → logprob: -4.758615970611572
    3. 'top' → logprob: -14.258615493774414
    4. ' lef' → logprob: -15.008615493774414
    5. '	left' → logprob: -16.008615493774414
    6. '_left' → logprob: -16.883615493774414
    7. 'lef' → logprob: -16.883615493774414
    8. ' ' → logprob: -17.383615493774414
    9. 'col' → logprob: -17.383615493774414
    10. 'side' → logprob: -17.883615493774414

Token 180: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.31328636407852173
    2. 'in' → logprob: -1.313286304473877
    3. '   ' → logprob: -11.813286781311035
    4. 'range' → logprob: -12.188286781311035
    5. '       ' → logprob: -12.813286781311035
    6. ' ' → logprob: -12.938286781311035
    7. '    ' → logprob: -13.688286781311035
    8. '(-' → logprob: -13.938286781311035
    9. '	in' → logprob: -13.938286781311035
    10. '        ' → logprob: -14.063286781311035

Token 181: ' range' (ID: 3352)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.009859968908131123
    2. ' -' → logprob: -5.634860038757324
    3. 'range' → logprob: -6.009860038757324
    4. '-' → logprob: -6.134860038757324
    5. ' range' → logprob: -6.884860038757324
    6. '-range' → logprob: -8.009860038757324
    7. ' (-' → logprob: -8.634860038757324
    8. '   ' → logprob: -10.634860038757324
    9. '-w' → logprob: -10.884860038757324
    10. '-l' → logprob: -11.884860038757324

Token 182: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -6.869017852295656e-06
    2. ' (-' → logprob: -12.125006675720215
    3. '(' → logprob: -13.875006675720215
    4. ' -' → logprob: -15.000006675720215
    5. '   ' → logprob: -16.62500762939453
    6. '-w' → logprob: -16.87500762939453
    7. '-' → logprob: -17.00000762939453
    8. '-left' → logprob: -19.25000762939453
    9. '[-' → logprob: -19.75000762939453
    10. ' ' → logprob: -19.75000762939453

Token 183: 'w' (ID: 86)
  Prédit: 'w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -2.6656825866666622e-05
    2. ' w' → logprob: -11.00002670288086
    3. '(w' → logprob: -12.87502670288086
    4. 'h' → logprob: -13.00002670288086
    5. '   ' → logprob: -13.37502670288086
    6. '<w' → logprob: -14.25002670288086
    7. '	w' → logprob: -14.75002670288086
    8. '```' → logprob: -14.75002670288086
    9. '
' → logprob: -14.87502670288086
    10. '-w' → logprob: -15.12502670288086

Token 184: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -9.968312951968983e-06
    2. ' +' → logprob: -11.875009536743164
    3. '1' → logprob: -12.875009536743164
    4. '```' → logprob: -16.125009536743164
    5. '   ' → logprob: -16.625009536743164
    6. '+
' → logprob: -17.375009536743164
    7. '()+' → logprob: -17.375009536743164
    8. '[' → logprob: -17.625009536743164
    9. '0' → logprob: -17.750009536743164
    10. ',' → logprob: -18.125009536743164

Token 185: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8889261304575484e-06
    2. ' ' → logprob: -12.750003814697266
    3. '+' → logprob: -15.000003814697266
    4. '   ' → logprob: -16.000003814697266
    5. '```' → logprob: -16.000003814697266
    6. '4' → logprob: -16.687503814697266
    7. '2' → logprob: -16.687503814697266
    8. '0' → logprob: -17.125003814697266
    9. ',' → logprob: -17.312503814697266
    10. '10' → logprob: -17.875003814697266

Token 186: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006663294625468552
    2. ' ,' → logprob: -7.37566614151001
    3. '4' → logprob: -10.875666618347168
    4. '   ' → logprob: -11.625666618347168
    5. '       ' → logprob: -12.250666618347168
    6. ',
' → logprob: -13.500666618347168
    7. '           ' → logprob: -13.625666618347168
    8. '```' → logprob: -13.750666618347168
    9. '1' → logprob: -15.000666618347168
    10. '7' → logprob: -15.250666618347168

Token 187: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.4391956685576588e-05
    2. ' ' → logprob: -10.625024795532227
    3. '   ' → logprob: -18.000024795532227
    4. '5' → logprob: -18.687524795532227
    5. '```' → logprob: -18.937524795532227
    6. '４' → logprob: -19.500024795532227
    7. '' → logprob: -19.750024795532227
    8. '-' → logprob: -19.750024795532227
    9. '۴' → logprob: -19.812524795532227
    10. '
' → logprob: -20.062524795532227

Token 188: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07762274146080017
    2. '):' → logprob: -2.702622652053833
    3. '           ' → logprob: -4.952622890472412
    4. '       ' → logprob: -7.827622890472412
    5. ':' → logprob: -9.202622413635254
    6. ':
' → logprob: -10.452622413635254
    7. '):
' → logprob: -10.827622413635254
    8. '   ' → logprob: -11.702622413635254
    9. '               ' → logprob: -11.952622413635254
    10. '          ' → logprob: -12.077622413635254

Token 189: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0007061177166178823
    2. ' for' → logprob: -7.500706195831299
    3. 'for' → logprob: -8.87570571899414
    4. '       ' → logprob: -12.62570571899414
    5. '               ' → logprob: -12.87570571899414
    6. '   ' → logprob: -13.00070571899414
    7. ',' → logprob: -13.75070571899414
    8. '          ' → logprob: -14.12570571899414
    9. '                   ' → logprob: -14.37570571899414
    10. '	       ' → logprob: -14.50070571899414

Token 190: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.78700852394104
    2. ' for' → logprob: -1.16200852394104
    3. '               ' → logprob: -1.78700852394104
    4. '   ' → logprob: -2.78700852394104
    5. ' ' → logprob: -7.162008285522461
    6. '	for' → logprob: -7.412008285522461
    7. '       ' → logprob: -7.537008285522461
    8. '                   ' → logprob: -7.787008285522461
    9. '           ' → logprob: -8.287008285522461
    10. '              ' → logprob: -10.037008285522461

Token 191: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006465009413659573
    2. '   ' → logprob: -5.756464958190918
    3. 'colors' → logprob: -7.256464958190918
    4. 'stamp' → logprob: -7.381464958190918
    5. ' for' → logprob: -7.506464958190918
    6. 'mask' → logprob: -8.256464958190918
    7. 'color' → logprob: -8.506464958190918
    8. 'coverage' → logprob: -9.256464958190918
    9. 'area' → logprob: -9.381464958190918
    10. 'cells' → logprob: -9.381464958190918

Token 192: ' each' (ID: 2454)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.20818954706192017
    2. ' color' → logprob: -1.8331894874572754
    3. 'c' → logprob: -4.708189487457275
    4. 'col' → logprob: -5.083189487457275
    5. 'ci' → logprob: -6.333189487457275
    6. '_color' → logprob: -6.708189487457275
    7. ' ci' → logprob: -6.833189487457275
    8. 'y' → logprob: -6.833189487457275
    9. 'clr' → logprob: -6.833189487457275
    10. ' c' → logprob: -6.958189487457275

Token 193: ' position' (ID: 4010)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.020344262942671776
    2. ' color' → logprob: -4.020344257354736
    3. 'col' → logprob: -7.020344257354736
    4. 'c' → logprob: -7.270344257354736
    5. 'r' → logprob: -9.270344734191895
    6. 'i' → logprob: -9.395344734191895
    7. 'stamp' → logprob: -9.395344734191895
    8. 'ci' → logprob: -9.770344734191895
    9. 'icolor' → logprob: -10.145344734191895
    10. '   ' → logprob: -10.270344734191895

Token 194: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9820013642311096
    2. '               ' → logprob: -0.9820013642311096
    3. '           ' → logprob: -2.232001304626465
    4. ' for' → logprob: -2.357001304626465
    5. '   ' → logprob: -3.857001304626465
    6. 'for' → logprob: -4.232001304626465
    7. ' and' → logprob: -4.607001304626465
    8. 'and' → logprob: -7.107001304626465
    9. ' ,' → logprob: -7.357001304626465
    10. '                   ' → logprob: -7.607001304626465

Token 195: ' determine' (ID: 11433)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.012235898524522781
    2. ' for' → logprob: -4.88723611831665
    3. '           ' → logprob: -6.01223611831665
    4. '   ' → logprob: -7.01223611831665
    5. 'colors' → logprob: -7.26223611831665
    6. 'color' → logprob: -8.887235641479492
    7. '               ' → logprob: -9.887235641479492
    8. '#' → logprob: -9.887235641479492
    9. 'mask' → logprob: -10.012235641479492
    10. '                   ' → logprob: -10.387235641479492

Token 196: ' affected' (ID: 18155)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9781291484832764
    2. 'affected' → logprob: -1.3531291484832764
    3. 'cells' → logprob: -1.9781291484832764
    4. 'the' → logprob: -2.1031291484832764
    5. 'covered' → logprob: -3.1031291484832764
    6. 'which' → logprob: -4.1031293869018555
    7. 'mask' → logprob: -4.3531293869018555
    8. 'coverage' → logprob: -5.2281293869018555
    9. ' the' → logprob: -5.3531293869018555
    10. 'all' → logprob: -5.4781293869018555

Token 197: ' cells' (ID: 11242)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -0.05093499273061752
    2. '_cells' → logprob: -3.0509350299835205
    3. ' cells' → logprob: -6.425934791564941
    4. 'positions' → logprob: -8.050934791564941
    5. '=' → logprob: -8.800934791564941
    6. ' =' → logprob: -9.300934791564941
    7. 'mask' → logprob: -9.550934791564941
    8. '   ' → logprob: -10.925934791564941
    9. '```' → logprob: -11.175934791564941
    10. '_positions' → logprob: -11.300934791564941

Token 198: ' inside' (ID: 6772)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006155950482934713
    2. 'mask' → logprob: -5.756155967712402
    3. 'cells' → logprob: -6.756155967712402
    4. '               ' → logprob: -7.131155967712402
    5. 'for' → logprob: -8.381155967712402
    6. ',' → logprob: -8.631155967712402
    7. 'positions' → logprob: -9.006155967712402
    8. ' cells' → logprob: -9.506155967712402
    9. '   ' → logprob: -9.506155967712402
    10. 'affected' → logprob: -9.756155967712402

Token 199: ' ' (ID: 220)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.9434910416603088
    2. 'the' → logprob: -1.318490982055664
    3. 'range' → logprob: -2.443490982055664
    4. 'inside' → logprob: -2.443490982055664
    5. 'for' → logprob: -2.818490982055664
    6. ' for' → logprob: -3.943490982055664
    7. '(' → logprob: -4.068490982055664
    8. ' inside' → logprob: -4.318490982055664
    9. ' range' → logprob: -4.693490982055664
    10. 'def' → logprob: -4.818490982055664

Token 200: '4' (ID: 19)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.7890515327453613
    2. 'range' → logprob: -1.4140515327453613
    3. 'inside' → logprob: -1.6640515327453613
    4. '4' → logprob: -2.4140515327453613
    5. '[' → logprob: -5.164051532745361
    6. ' the' → logprob: -5.289051532745361
    7. '(' → logprob: -5.539051532745361
    8. 'for' → logprob: -5.789051532745361
    9. ' range' → logprob: -7.039051532745361
    10. 'def' → logprob: -7.039051532745361

Token 201: 'x' (ID: 87)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.0260341167449951
    2. '):
' → logprob: -1.6510341167449951
    3. 'for' → logprob: -2.151034116744995
    4. '           ' → logprob: -2.776034116744995
    5. ' for' → logprob: -3.026034116744995
    6. '):' → logprob: -3.276034116744995
    7. ':' → logprob: -3.651034116744995
    8. '       ' → logprob: -3.776034116744995
    9. ']:
' → logprob: -3.901034116744995
    10. ',' → logprob: -3.901034116744995

Token 202: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -11.625021934509277
    3. '   ' → logprob: -12.000021934509277
    4. '```' → logprob: -12.750021934509277
    5. 'for' → logprob: -13.125021934509277
    6. ' for' → logprob: -15.125021934509277
    7. 'def' → logprob: -15.375021934509277
    8. '``' → logprob: -15.750021934509277
    9. 'grid' → logprob: -16.00002098083496
    10. 'cells' → logprob: -16.00002098083496

Token 203: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.014061720110476017
    2. ':' → logprob: -5.38906192779541
    3. ' area' → logprob: -6.01406192779541
    4. ' and' → logprob: -6.38906192779541
    5. ' for' → logprob: -7.13906192779541
    6. ' grid' → logprob: -7.26406192779541
    7. 'for' → logprob: -7.26406192779541
    8. '   ' → logprob: -7.88906192779541
    9. ':
' → logprob: -8.01406192779541
    10. 'grid' → logprob: -8.13906192779541

Token 204: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006813408341258764
    2. '               ' → logprob: -5.3818135261535645
    3. ' for' → logprob: -6.7568135261535645
    4. 'for' → logprob: -7.3818135261535645
    5. ',' → logprob: -9.131813049316406
    6. '                   ' → logprob: -9.756813049316406
    7. '   ' → logprob: -9.881813049316406
    8. 'mask' → logprob: -10.131813049316406
    9. ' cells' → logprob: -10.756813049316406
    10. '            
' → logprob: -11.381813049316406

Token 205: ' covered' (ID: 13083)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cells' → logprob: -1.1987501382827759
    2. 'affected' → logprob: -1.4487501382827759
    3. 'mask' → logprob: -1.5737501382827759
    4. '           ' → logprob: -1.8237501382827759
    5. 'for' → logprob: -2.6987500190734863
    6. ' cells' → logprob: -5.073750019073486
    7. '   ' → logprob: -5.323750019073486
    8. 'covered' (adapté à ' covered') → logprob: -5.698750019073486
    9. 'cover' → logprob: -5.823750019073486
    10. ' for' → logprob: -6.073750019073486

Token 206: '=[]
' (ID: 63466)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.33376428484916687
    2. '=[]' → logprob: -1.7087643146514893
    3. '=set' → logprob: -2.5837643146514893
    4. ' =' → logprob: -3.7087643146514893
    5. '={}' → logprob: -6.08376407623291
    6. '_cells' → logprob: -9.20876407623291
    7. '=[' → logprob: -9.20876407623291
    8. 'cells' → logprob: -9.33376407623291
    9. '=[]
' → logprob: -9.58376407623291
    10. 'set' → logprob: -10.83376407623291

Token 207: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018431909382343292
    2. ' for' → logprob: -4.393432140350342
    3. 'for' → logprob: -5.143432140350342
    4. '               ' → logprob: -10.393431663513184
    5. '                   ' → logprob: -11.893431663513184
    6. '   ' → logprob: -12.018431663513184
    7. ',' → logprob: -12.393431663513184
    8. '<|end|>' → logprob: -12.518431663513184
    9. '            
' → logprob: -12.643431663513184
    10. '       ' → logprob: -12.768431663513184

Token 208: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.014775770716369152
    2. '           ' → logprob: -4.88977575302124
    3. ' for' → logprob: -5.01477575302124
    4. '               ' → logprob: -7.63977575302124
    5. '   ' → logprob: -11.014776229858398
    6. '                   ' → logprob: -12.389776229858398
    7. 'color' → logprob: -13.639776229858398
    8. ' ' → logprob: -14.639776229858398
    9. '       ' → logprob: -14.889776229858398
    10. 'colors' → logprob: -15.014776229858398

Token 209: ' dr' (ID: 1498)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.421904057264328
    2. 'dh' → logprob: -1.5469040870666504
    3. 'x' → logprob: -2.6719040870666504
    4. 'sh' → logprob: -3.7969040870666504
    5. 'di' → logprob: -4.29690408706665
    6. 'dx' → logprob: -4.79690408706665
    7. 'dy' → logprob: -5.67190408706665
    8. 'dr' → logprob: -5.79690408706665
    9. 'y' → logprob: -5.92190408706665
    10. ' dh' → logprob: -6.17190408706665

Token 210: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.201463520526886
    2. 'in' → logprob: -1.7014634609222412
    3. 'range' → logprob: -10.57646369934082
    4. ',' → logprob: -11.70146369934082
    5. 'd' → logprob: -12.45146369934082
    6. '```' → logprob: -12.82646369934082
    7. ' ' → logprob: -13.32646369934082
    8. '0' → logprob: -13.95146369934082
    9. 's' → logprob: -13.95146369934082
    10. ')' → logprob: -13.95146369934082

Token 211: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001234428636962548
    2. ' range' → logprob: -9.000123023986816
    3. '0' → logprob: -19.625123977661133
    4. 'r' → logprob: -21.500123977661133
    5. '	range' → logprob: -21.625123977661133
    6. '   ' → logprob: -22.375123977661133
    7. '(range' → logprob: -22.500123977661133
    8. ' ' → logprob: -22.625123977661133
    9. 'rang' → logprob: -24.000123977661133
    10. '
' → logprob: -24.000123977661133

Token 212: '(h' (ID: 8120)
  Prédit: '(h'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(h' → logprob: -0.03804963827133179
    2. 'h' → logprob: -3.2880496978759766
    3. '(' → logprob: -12.163049697875977
    4. ' h' → logprob: -13.288049697875977
    5. ',h' → logprob: -14.788049697875977
    6. '	h' → logprob: -15.038049697875977
    7. '<h' → logprob: -16.038049697875977
    8. '[h' → logprob: -16.163049697875977
    9. '0' → logprob: -16.413049697875977
    10. ':h' → logprob: -16.788049697875977

Token 213: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.07890807837247849
    2. '):' → logprob: -2.5789079666137695
    3. '   ' → logprob: -11.70390796661377
    4. '):
' → logprob: -12.57890796661377
    5. '+' → logprob: -12.70390796661377
    6. '       ' → logprob: -13.82890796661377
    7. '):

' → logprob: -14.07890796661377
    8. ':' → logprob: -14.82890796661377
    9. '           ' → logprob: -15.20390796661377
    10. ':
' → logprob: -15.32890796661377

Token 214: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.006621111650019884
    2. ' for' → logprob: -5.25662088394165
    3. 'for' → logprob: -7.13162088394165
    4. '           ' → logprob: -8.381621360778809
    5. '	           ' → logprob: -9.256621360778809
    6. '   ' → logprob: -10.381621360778809
    7. '<|end|>' → logprob: -10.381621360778809
    8. '                   ' → logprob: -10.506621360778809
    9. '```' → logprob: -10.631621360778809
    10. '       ' → logprob: -10.631621360778809

Token 215: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.15725907683372498
    2. '                   ' → logprob: -2.657258987426758
    3. 'for' (adapté à ' for') → logprob: -2.782258987426758
    4. '               ' → logprob: -5.032258987426758
    5. ' ' → logprob: -6.407258987426758
    6. '	for' → logprob: -7.032258987426758
    7. '<|end|>' → logprob: -7.157258987426758
    8. '                       ' → logprob: -7.282258987426758
    9. '                ' → logprob: -7.657258987426758
    10. '	               ' → logprob: -7.782258987426758

Token 216: ' dc' (ID: 37843)
  Prédit: 'dw'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dw' → logprob: -0.040921494364738464
    2. ' dw' → logprob: -3.290921449661255
    3. 'range' → logprob: -6.040921688079834
    4. 'dc' → logprob: -8.540921211242676
    5. ' range' → logprob: -8.665921211242676
    6. '(dw' → logprob: -9.415921211242676
    7. 'w' → logprob: -10.665921211242676
    8. ' dc' → logprob: -11.040921211242676
    9. '_dw' → logprob: -13.540921211242676
    10. '0' → logprob: -13.540921211242676

Token 217: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.10020871460437775
    2. 'in' → logprob: -2.3502087593078613
    3. ' ' → logprob: -13.600208282470703
    4. ')' → logprob: -14.725208282470703
    5. '	in' → logprob: -16.350208282470703
    6. '               ' → logprob: -16.975208282470703
    7. '0' → logprob: -16.975208282470703
    8. 'inthe' → logprob: -16.975208282470703
    9. '```' → logprob: -17.225208282470703
    10. '                ' → logprob: -17.225208282470703

Token 218: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.008616935461759567
    2. ' range' → logprob: -4.758616924285889
    3. 'w' → logprob: -13.008617401123047
    4. '(range' → logprob: -15.633617401123047
    5. '	range' → logprob: -18.883617401123047
    6. ' w' → logprob: -19.258617401123047
    7. '(w' → logprob: -19.258617401123047
    8. ' ' → logprob: -20.508617401123047
    9. '<w' → logprob: -20.758617401123047
    10. '   ' → logprob: -21.008617401123047

Token 219: '(w' (ID: 7420)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0026628158520907164
    2. '(w' → logprob: -6.502662658691406
    3. 'range' → logprob: -7.002662658691406
    4. ' w' → logprob: -8.377662658691406
    5. ' range' → logprob: -11.252662658691406
    6. '<w' → logprob: -12.627662658691406
    7. '[w' → logprob: -14.752662658691406
    8. '   ' → logprob: -15.002662658691406
    9. 'width' → logprob: -15.002662658691406
    10. '0' → logprob: -15.002662658691406

Token 220: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.02337685227394104
    2. '):' → logprob: -3.773376941680908
    3. '                   ' → logprob: -9.77337646484375
    4. '               ' → logprob: -10.52337646484375
    5. '):

' → logprob: -10.89837646484375
    6. '):
' → logprob: -12.02337646484375
    7. ')' → logprob: -12.14837646484375
    8. '                       ' → logprob: -12.64837646484375
    9. ':
' → logprob: -12.89837646484375
    10. ':' → logprob: -12.89837646484375

Token 221: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0031284019351005554
    2. '		           ' → logprob: -7.503128528594971
    3. '                    
' → logprob: -7.878128528594971
    4. ' if' → logprob: -7.878128528594971
    5. ',' → logprob: -8.128128051757812
    6. '               ' → logprob: -8.503128051757812
    7. '<|end|>' → logprob: -8.628128051757812
    8. '                    ' → logprob: -8.753128051757812
    9. '                ' → logprob: -8.878128051757812
    10. '                  ' → logprob: -9.003128051757812

Token 222: ' rr' (ID: 54129)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3358335793018341
    2. ' r' → logprob: -1.7108335494995117
    3. '                   ' → logprob: -2.4608335494995117
    4. 'r' → logprob: -5.085833549499512
    5. '                       ' → logprob: -5.085833549499512
    6. 'if' → logprob: -5.835833549499512
    7. '                    ' → logprob: -7.085833549499512
    8. 'nr' → logprob: -7.835833549499512
    9. ' x' → logprob: -8.210833549499512
    10. ' ' → logprob: -8.585833549499512

Token 223: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.02975395694375038
    2. ' =' → logprob: -3.5297539234161377
    3. '=
' → logprob: -13.404753684997559
    4. '=r' → logprob: -14.154753684997559
    5. '=int' → logprob: -15.029753684997559
    6. '=row' → logprob: -15.654753684997559
    7. '=i' → logprob: -15.779753684997559
    8. '=

' → logprob: -15.904753684997559
    9. '=line' → logprob: -16.654754638671875
    10. ' top' → logprob: -17.154754638671875

Token 224: 'top' (ID: 8169)
  Prédit: 'top'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'top' → logprob: -6.659005157416686e-05
    2. ' top' → logprob: -9.625066757202148
    3. '(top' → logprob: -15.125066757202148
    4. '[top' → logprob: -16.50006675720215
    5. '	top' → logprob: -17.25006675720215
    6. '   ' → logprob: -17.75006675720215
    7. '=' → logprob: -19.50006675720215
    8. 'r' → logprob: -20.25006675720215
    9. 't' → logprob: -20.25006675720215
    10. 'Top' → logprob: -20.25006675720215

Token 225: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.002185472520068288
    2. ' +' → logprob: -6.127185344696045
    3. '+r' → logprob: -16.502185821533203
    4. '+
' → logprob: -16.752185821533203
    5. ')+' → logprob: -17.377185821533203
    6. '+d' → logprob: -17.502185821533203
    7. '＋' → logprob: -17.502185821533203
    8. '()+' → logprob: -17.627185821533203
    9. '+xml' → logprob: -18.252185821533203
    10. '+D' → logprob: -18.502185821533203

Token 226: 'dr' (ID: 4541)
  Prédit: 'dr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dr' → logprob: -3.4121114822482923e-06
    2. ' dr' → logprob: -12.625003814697266
    3. 'dc' → logprob: -17.875003814697266
    4. '	dr' → logprob: -18.500003814697266
    5. 'd' → logprob: -19.125003814697266
    6. '(dr' → logprob: -19.500003814697266
    7. '   ' → logprob: -20.875003814697266
    8. ' ' → logprob: -21.125003814697266
    9. '
' → logprob: -21.375003814697266
    10. 'dp' → logprob: -22.125003814697266

Token 227: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.027621522545814514
    2. ',' → logprob: -4.277621746063232
    3. '		           ' → logprob: -5.527621746063232
    4. ',c' → logprob: -5.777621746063232
    5. '				' → logprob: -6.777621746063232
    6. 'if' → logprob: -6.902621746063232
    7. ' if' → logprob: -7.152621746063232
    8. '               ' → logprob: -7.527621746063232
    9. '				   ' → logprob: -7.902621746063232
    10. '           ' → logprob: -7.902621746063232

Token 228: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.11263549327850342
    2. 'if' → logprob: -3.237635612487793
    3. ' if' → logprob: -3.612635612487793
    4. '				' → logprob: -3.862635612487793
    5. '<|end|>' → logprob: -5.237635612487793
    6. '                    ' → logprob: -6.112635612487793
    7. '               ' → logprob: -6.362635612487793
    8. ' ' → logprob: -6.612635612487793
    9. '			       ' → logprob: -6.862635612487793
    10. '		           ' → logprob: -6.987635612487793

Token 229: ' cc' (ID: 22988)
  Prédit: 'cc'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' (adapté à ' cc') → logprob: -0.002032134449109435
    2. 'rc' → logprob: -6.252032279968262
    3. ' cc' → logprob: -9.752032279968262
    4. 'lc' → logprob: -10.502032279968262
    5. 'dc' → logprob: -11.502032279968262
    6. 'c' → logprob: -13.002032279968262
    7. '   ' → logprob: -13.627032279968262
    8. '           ' → logprob: -14.127032279968262
    9. '	cc' → logprob: -14.877032279968262
    10. 'rr' → logprob: -14.877032279968262

Token 230: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -8.65707261255011e-06
    2. ' =' → logprob: -12.125008583068848
    3. 'left' → logprob: -14.125008583068848
    4. '=center' → logprob: -14.375008583068848
    5. '=c' → logprob: -14.625008583068848
    6. '=int' → logprob: -15.125008583068848
    7. '=
' → logprob: -15.250008583068848
    8. '(left' → logprob: -16.000009536743164
    9. '=line' → logprob: -16.125009536743164
    10. '=cut' → logprob: -16.125009536743164

Token 231: 'left' (ID: 4530)
  Prédit: 'left'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'left' → logprob: -3.4121114822482923e-06
    2. ' left' → logprob: -12.625003814697266
    3. '[left' → logprob: -18.250003814697266
    4. '   ' → logprob: -18.625003814697266
    5. '(left' → logprob: -18.750003814697266
    6. '	left' → logprob: -19.750003814697266
    7. '           ' → logprob: -19.875003814697266
    8. ' ' → logprob: -20.500003814697266
    9. '.left' → logprob: -20.625003814697266
    10. ':left' → logprob: -20.750003814697266

Token 232: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.001334763248451054
    2. ' +' → logprob: -7.0013346672058105
    3. '<|end|>' → logprob: -8.001335144042969
    4. '+c' → logprob: -9.876335144042969
    5. ')' → logprob: -10.876335144042969
    6. '+
' → logprob: -11.876335144042969
    7. '                   ' → logprob: -13.001335144042969
    8. ')+' → logprob: -13.126335144042969
    9. '<|end|>' → logprob: -13.251335144042969
    10. '+C' → logprob: -13.376335144042969

Token 233: 'dc' (ID: 13964)
  Prédit: 'dc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dc' → logprob: -0.00012439649435691535
    2. ' dc' → logprob: -9.000123977661133
    3. 'cc' → logprob: -15.000123977661133
    4. '(dc' → logprob: -15.000123977661133
    5. 'c' → logprob: -15.625123977661133
    6. 'dcc' → logprob: -16.750123977661133
    7. '_dc' → logprob: -17.000123977661133
    8. 'cd' → logprob: -17.000123977661133
    9. '<|end|>' → logprob: -17.125123977661133
    10. '.dc' → logprob: -17.625123977661133

Token 234: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0017170661594718695
    2. ' if' → logprob: -7.7517170906066895
    3. '
' → logprob: -8.251716613769531
    4. '<|end|>' → logprob: -8.376716613769531
    5. '                    
' → logprob: -9.001716613769531
    6. '               ' → logprob: -9.001716613769531
    7. 'if' → logprob: -9.251716613769531
    8. ',' → logprob: -9.626716613769531
    9. '		           ' → logprob: -9.751716613769531
    10. ')' → logprob: -10.126716613769531

Token 235: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.000443420372903347
    2. ' if' → logprob: -8.375443458557129
    3. '                    
' → logprob: -10.000443458557129
    4. '               ' → logprob: -10.250443458557129
    5. '<|end|>' → logprob: -10.500443458557129
    6. '
' → logprob: -11.125443458557129
    7. 'if' → logprob: -11.375443458557129
    8. '                    ' → logprob: -11.500443458557129
    9. '                       ' → logprob: -11.625443458557129
    10. ',' → logprob: -11.750443458557129

Token 236: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.25900423526763916
    2. ' if' → logprob: -1.7590042352676392
    3. '                   ' → logprob: -2.8840041160583496
    4. '                       ' → logprob: -10.634004592895508
    5. '	if' → logprob: -11.634004592895508
    6. '                    ' → logprob: -12.009004592895508
    7. '               ' → logprob: -12.384004592895508
    8. '				' → logprob: -13.009004592895508
    9. '   ' → logprob: -13.759004592895508
    10. '           ' → logprob: -14.134004592895508

Token 237: ' inside' (ID: 6772)
  Prédit: 'inside'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inside' → logprob: -0.16176755726337433
    2. ' inside' → logprob: -1.911767601966858
    3. '0' → logprob: -6.536767482757568
    4. ' ' → logprob: -9.411767959594727
    5. '(' → logprob: -12.661767959594727
    6. 'Inside' → logprob: -13.411767959594727
    7. ' ' → logprob: -13.411767959594727
    8. 'not' → logprob: -13.911767959594727
    9. '_inside' → logprob: -14.036767959594727
    10. ' not' → logprob: -14.036767959594727

Token 238: '(rr' (ID: 195704)
  Prédit: '(rr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(rr' → logprob: -2.2603901015827432e-05
    2. '(' → logprob: -10.750022888183594
    3. ' (' → logprob: -14.500022888183594
    4. '(
' → logprob: -14.875022888183594
    5. ')' → logprob: -15.875022888183594
    6. 'rr' → logprob: -16.000022888183594
    7. '(rc' → logprob: -18.250022888183594
    8. '(rv' → logprob: -18.375022888183594
    9. '(rs' → logprob: -18.375022888183594
    10. '(rb' → logprob: -19.000022888183594

Token 239: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02504720166325569
    2. '(cc' → logprob: -4.025047302246094
    3. ' ,' → logprob: -6.025047302246094
    4. '(rr' → logprob: -6.150047302246094
    5. ',c' → logprob: -7.025047302246094
    6. ')' → logprob: -7.275047302246094
    7. ',r' → logprob: -7.650047302246094
    8. 'cc' → logprob: -9.025047302246094
    9. '                   ' → logprob: -9.900047302246094
    10. ',ll' → logprob: -10.400047302246094

Token 240: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -3.583550642360933e-05
    2. ' cc' → logprob: -10.250036239624023
    3. '(cc' → logprob: -15.000036239624023
    4. '	cc' → logprob: -15.625036239624023
    5. 'Cc' → logprob: -18.250036239624023
    6. '                   ' → logprob: -18.750036239624023
    7. '_cc' → logprob: -18.875036239624023
    8. 'ccc' → logprob: -19.125036239624023
    9. '   ' → logprob: -19.500036239624023
    10. ')' → logprob: -19.500036239624023

Token 241: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20472054183483124
    2. ' and' → logprob: -2.0797204971313477
    3. '):
' → logprob: -3.0797204971313477
    4. 'and' → logprob: -4.704720497131348
    5. '):' → logprob: -5.454720497131348
    6. '                       ' → logprob: -7.704720497131348
    7. '                   ' → logprob: -8.579720497131348
    8. ' )' → logprob: -9.454720497131348
    9. '                           ' → logprob: -10.204720497131348
    10. '):

' → logprob: -10.329720497131348

Token 242: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0028848794754594564
    2. 'covered' → logprob: -6.752884864807129
    3. ' if' → logprob: -7.877884864807129
    4. ' covered' → logprob: -8.002884864807129
    5. '                   ' → logprob: -8.252884864807129
    6. '                           ' → logprob: -8.377884864807129
    7. '```' → logprob: -9.502884864807129
    8. ' actions' → logprob: -9.752884864807129
    9. 'if' → logprob: -9.877884864807129
    10. 'cover' → logprob: -10.502884864807129

Token 243: ' covered' (ID: 13083)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'covered' (adapté à ' covered') → logprob: -0.10089747607707977
    2. ' covered' → logprob: -2.7258975505828857
    3. '                       ' → logprob: -3.8508975505828857
    4. '                           ' → logprob: -4.850897312164307
    5. 'coverage' → logprob: -7.850897312164307
    6. 'cover' → logprob: -8.225897789001465
    7. 'if' → logprob: -8.975897789001465
    8. '                               ' → logprob: -8.975897789001465
    9. ' if' → logprob: -9.100897789001465
    10. '   ' → logprob: -9.475897789001465

Token 244: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.009857495315372944
    2. '.' → logprob: -4.634857654571533
    3. '].' → logprob: -10.259857177734375
    4. 'append' → logprob: -10.759857177734375
    5. ' .' → logprob: -11.134857177734375
    6. ').' → logprob: -11.384857177734375
    7. ',' → logprob: -11.509857177734375
    8. '=' → logprob: -13.384857177734375
    9. '.app' → logprob: -14.009857177734375
    10. '_append' → logprob: -14.009857177734375

Token 245: '(rr' (ID: 195704)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.002744127530604601
    2. '(rr' → logprob: -6.252744197845459
    3. '(' → logprob: -7.127744197845459
    4. '(((' → logprob: -11.3777437210083
    5. '(dd' → logprob: -15.2527437210083
    6. '(rc' → logprob: -15.2527437210083
    7. '(cc' → logprob: -15.6277437210083
    8. ' ((' → logprob: -15.6277437210083
    9. '(r' → logprob: -16.627744674682617
    10. '(ii' → logprob: -16.627744674682617

Token 246: '*' (ID: 9)
  Prédit: '*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.031340666115283966
    2. ' *' → logprob: -3.7813405990600586
    3. ',' → logprob: -4.906340599060059
    4. ')' → logprob: -8.781340599060059
    5. ',c' → logprob: -8.781340599060059
    6. ',w' → logprob: -8.781340599060059
    7. '*w' → logprob: -9.156340599060059
    8. ',*' → logprob: -10.781340599060059
    9. ',color' → logprob: -11.156340599060059
    10. ' ,' → logprob: -11.781340599060059

Token 247: '4' (ID: 19)
  Prédit: '4'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '4' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. '```' → logprob: -16.125001907348633
    4. '
' → logprob: -16.750001907348633
    5. '`' → logprob: -19.125001907348633
    6. '

' → logprob: -19.375001907348633
    7. '   ' → logprob: -19.500001907348633
    8. '16' → logprob: -19.750001907348633
    9. '=' → logprob: -20.000001907348633
    10. '``' → logprob: -20.437501907348633

Token 248: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008633595891296864
    2. ' +' → logprob: -4.758633613586426
    3. '+c' → logprob: -11.008633613586426
    4. ')+' → logprob: -13.633633613586426
    5. '+
' → logprob: -15.508633613586426
    6. '+C' → logprob: -15.633633613586426
    7. '+k' → logprob: -16.00863265991211
    8. 'cc' → logprob: -16.38363265991211
    9. '+xml' → logprob: -16.38363265991211
    10. ' plus' → logprob: -16.63363265991211

Token 249: 'cc' (ID: 710)
  Prédit: 'cc'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cc' → logprob: -7.896309739408025e-07
    2. ' cc' → logprob: -14.250000953674316
    3. '(cc' → logprob: -18.625
    4. '	cc' → logprob: -18.875
    5. 'ccc' → logprob: -21.375
    6. '_cc' → logprob: -23.25
    7. 'ccd' → logprob: -23.75
    8. 'cco' → logprob: -24.875
    9. 'cccc' → logprob: -25.25
    10. 'ccb' → logprob: -25.75

Token 250: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02722798101603985
    2. '*' → logprob: -4.277227878570557
    3. ',' → logprob: -5.277227878570557
    4. ')
' → logprob: -6.027227878570557
    5. ' )' → logprob: -6.402227878570557
    6. '(' → logprob: -6.652227878570557
    7. ')*' → logprob: -7.652227878570557
    8. ' (' → logprob: -8.027228355407715
    9. ' *' → logprob: -8.527228355407715
    10. '),' → logprob: -8.777228355407715

Token 251: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2255084216594696
    2. '<|end|>' → logprob: -2.350508451461792
    3. ',' → logprob: -3.475508451461792
    4. '                   ' → logprob: -4.350508213043213
    5. '                           ' → logprob: -4.350508213043213
    6. ' for' → logprob: -4.475508213043213
    7. '               ' → logprob: -4.975508213043213
    8. '<|end|>' → logprob: -5.350508213043213
    9. '#' → logprob: -5.475508213043213
    10. '                       ' → logprob: -5.600508213043213

Token 252: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7522541880607605
    2. ' for' → logprob: -1.2522542476654053
    3. '           ' → logprob: -1.5022542476654053
    4. 'color' → logprob: -4.627254009246826
    5. '                   ' → logprob: -6.252254009246826
    6. 'colors' → logprob: -6.752254009246826
    7. ' color' → logprob: -6.877254009246826
    8. '               ' → logprob: -7.002254009246826
    9. 'actions' → logprob: -7.252254009246826
    10. ',' → logprob: -7.252254009246826

Token 253: ' not' (ID: 625)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.028457362204790115
    2. ' covered' → logprob: -3.7784574031829834
    3. 'len' → logprob: -5.403457164764404
    4. ' len' → logprob: -8.153457641601562
    5. ' not' → logprob: -8.528457641601562
    6. 'not' → logprob: -8.778457641601562
    7. ' ' → logprob: -10.653457641601562
    8. 'cover' → logprob: -11.778457641601562
    9. '-covered' → logprob: -12.278457641601562
    10. 'any' → logprob: -12.278457641601562

Token 254: ' covered' (ID: 13083)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.0036076747346669436
    2. ' covered' → logprob: -5.628607749938965
    3. 'len' → logprob: -12.628607749938965
    4. 'cover' → logprob: -13.503607749938965
    5. 'actions' → logprob: -13.878607749938965
    6. '-covered' → logprob: -14.128607749938965
    7. 'inside' → logprob: -14.628607749938965
    8. 'st' → logprob: -15.128607749938965
    9. 'coverage' → logprob: -15.753607749938965
    10. ' len' → logprob: -16.37860679626465

Token 255: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03128728270530701
    2. 'continue' → logprob: -3.90628719329834
    3. ' continue' → logprob: -4.78128719329834
    4. ':
' → logprob: -6.40628719329834
    5. '	continue' → logprob: -8.03128719329834
    6. '   ' → logprob: -8.65628719329834
    7. '_continue' → logprob: -9.65628719329834
    8. ' continues' → logprob: -11.03128719329834
    9. ':return' → logprob: -11.28128719329834
    10. '               ' → logprob: -11.28128719329834

Token 256: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.009829992428421974
    2. ' continue' → logprob: -4.884829998016357
    3. 'continue' → logprob: -6.134829998016357
    4. '   ' → logprob: -10.8848295211792
    5. '	continue' → logprob: -10.8848295211792
    6. '                   ' → logprob: -12.3848295211792
    7. ' continues' → logprob: -12.7598295211792
    8. '			' → logprob: -13.1348295211792
    9. '           ' → logprob: -13.2598295211792
    10. '       ' → logprob: -13.7598295211792

Token 257: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.40902507305145264
    2. '               ' → logprob: -1.4090250730514526
    3. ' continue' → logprob: -2.409025192260742
    4. '                   ' → logprob: -7.159025192260742
    5. '   ' → logprob: -7.534025192260742
    6. '	continue' → logprob: -9.409025192260742
    7. '                       ' → logprob: -11.909025192260742
    8. '           ' → logprob: -12.284025192260742
    9. '       ' → logprob: -12.659025192260742
    10. '_continue' → logprob: -12.909025192260742

Token 258: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017666934058070183
    2. ' for' → logprob: -4.517666816711426
    3. ',' → logprob: -6.142666816711426
    4. ' actions' → logprob: -6.892666816711426
    5. '               ' → logprob: -7.767666816711426
    6. '            
' → logprob: -8.017666816711426
    7. '
' → logprob: -8.017666816711426
    8. 'for' → logprob: -8.017666816711426
    9. '                   ' → logprob: -8.392666816711426
    10. '```' → logprob: -8.392666816711426

Token 259: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3697446584701538
    2. ' for' → logprob: -1.2447446584701538
    3. ' actions' → logprob: -4.244744777679443
    4. '   ' → logprob: -6.494744777679443
    5. 'for' → logprob: -6.744744777679443
    6. ',' → logprob: -7.369744777679443
    7. '            
' → logprob: -7.494744777679443
    8. 'actions' → logprob: -7.619744777679443
    9. '<|end|>' → logprob: -7.619744777679443
    10. '               ' → logprob: -8.494744300842285

Token 260: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.693967878818512
    2. 'for' → logprob: -0.818967878818512
    3. '           ' → logprob: -2.943967819213867
    4. '   ' → logprob: -6.443967819213867
    5. 'colors' → logprob: -6.443967819213867
    6. 'actions' → logprob: -6.818967819213867
    7. 'action' → logprob: -7.568967819213867
    8. ' actions' → logprob: -7.818967819213867
    9. 'color' → logprob: -7.943967819213867
    10. ' action' → logprob: -7.943967819213867

Token 261: ' For' (ID: 2214)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.021358132362365723
    2. ' for' → logprob: -3.896358013153076
    3. '           ' → logprob: -8.521358489990234
    4. 'colors' → logprob: -8.521358489990234
    5. 'actions' → logprob: -8.771358489990234
    6. '   ' → logprob: -9.396358489990234
    7. 'action' → logprob: -10.021358489990234
    8. 'from' → logprob: -10.146358489990234
    9. 'mask' → logprob: -10.771358489990234
    10. '#' → logprob: -11.646358489990234

Token 262: ' each' (ID: 2454)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.2783762812614441
    2. ' color' → logprob: -1.9033763408660889
    3. 'col' → logprob: -2.903376340866089
    4. 'c' → logprob: -3.778376340866089
    5. ' c' → logprob: -5.27837610244751
    6. 'clr' → logprob: -5.77837610244751
    7. ' col' → logprob: -6.02837610244751
    8. 'for' → logprob: -7.27837610244751
    9. 'colors' → logprob: -7.40337610244751
    10. '_color' → logprob: -7.65337610244751

Token 263: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.06588041037321091
    2. ' color' → logprob: -2.940880298614502
    3. 'col' → logprob: -4.815880298614502
    4. 'c' → logprob: -6.190880298614502
    5. 'clr' → logprob: -8.19088077545166
    6. ' col' → logprob: -9.19088077545166
    7. ' c' → logprob: -9.31588077545166
    8. 'ci' → logprob: -9.56588077545166
    9. 'icolor' → logprob: -10.19088077545166
    10. 'cl' → logprob: -10.94088077545166

Token 264: '
' (ID: 198)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09980455785989761
    2. ' for' → logprob: -2.474804639816284
    3. 'for' → logprob: -4.974804401397705
    4. '   ' → logprob: -6.474804401397705
    5. 'in' → logprob: -7.474804401397705
    6. ',' → logprob: -7.599804401397705
    7. ' c' → logprob: -7.849804401397705
    8. ':' → logprob: -8.099804878234863
    9. ' color' → logprob: -8.349804878234863
    10. 'color' → logprob: -9.349804878234863

Token 265: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5069954991340637
    2. ' in' → logprob: -1.131995439529419
    3. 'for' → logprob: -2.631995439529419
    4. '           ' → logprob: -6.756995677947998
    5. '   ' → logprob: -6.881995677947998
    6. 'in' → logprob: -6.881995677947998
    7. '               ' → logprob: -9.75699520111084
    8. ',' → logprob: -10.25699520111084
    9. ' color' → logprob: -11.38199520111084
    10. 'color' → logprob: -11.88199520111084

Token 266: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5759879350662231
    2. ' for' → logprob: -0.8259879350662231
    3. '   ' → logprob: -10.325987815856934
    4. '           ' → logprob: -11.450987815856934
    5. '	for' → logprob: -12.325987815856934
    6. '```' → logprob: -15.575987815856934
    7. ' ' → logprob: -16.32598876953125
    8. '[' → logprob: -16.45098876953125
    9. '       ' → logprob: -16.82598876953125
    10. '0' → logprob: -17.07598876953125

Token 267: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.09353755414485931
    2. 'col' → logprob: -2.7185375690460205
    3. ' color' → logprob: -4.218537330627441
    4. 'c' → logprob: -5.093537330627441
    5. ' col' → logprob: -6.718537330627441
    6. 'clr' → logprob: -6.843537330627441
    7. ' c' → logprob: -9.468537330627441
    8. 'k' → logprob: -9.968537330627441
    9. ' clr' → logprob: -10.843537330627441
    10. 'cl' → logprob: -10.843537330627441

Token 268: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03365422785282135
    2. 'in' → logprob: -3.40865421295166
    3. ',' → logprob: -12.28365421295166
    4. ' ' → logprob: -13.78365421295166
    5. 'range' → logprob: -14.28365421295166
    6. ')' → logprob: -14.40865421295166
    7. '=' → logprob: -15.53365421295166
    8. 'color' → logprob: -15.65865421295166
    9. ' ,' → logprob: -15.65865421295166
    10. '<|end|>' → logprob: -15.78365421295166

Token 269: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.20159411430358887
    2. ' range' → logprob: -1.7015941143035889
    3. '[' → logprob: -8.701594352722168
    4. '(' → logprob: -11.201594352722168
    5. '0' → logprob: -14.576594352722168
    6. '(range' → logprob: -15.701594352722168
    7. ' [' → logprob: -16.32659339904785
    8. ' ' → logprob: -16.82659339904785
    9. '	range' → logprob: -17.95159339904785
    10. 'color' → logprob: -17.95159339904785

Token 270: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0002614550176076591
    2. '3' → logprob: -8.250261306762695
    3. ' (' → logprob: -16.500261306762695
    4. '(
' → logprob: -16.750261306762695
    5. '   ' → logprob: -17.875261306762695
    6. ' ' → logprob: -18.250261306762695
    7. '
' → logprob: -19.125261306762695
    8. 's' → logprob: -20.250261306762695
    9. '```' → logprob: -20.500261306762695
    10. '[' → logprob: -20.750261306762695

Token 271: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.875000953674316
    3. '
' → logprob: -16.625001907348633
    4. ')' → logprob: -16.625001907348633
    5. '   ' → logprob: -17.750001907348633
    6. '(' → logprob: -18.250001907348633
    7. 'len' → logprob: -19.375001907348633
    8. '```' → logprob: -19.375001907348633
    9. '３' → logprob: -20.312501907348633
    10. ',' → logprob: -20.437501907348633

Token 272: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.011465342715382576
    2. '):
' → logprob: -4.511465549468994
    3. ':' → logprob: -7.886465549468994
    4. ' ):' → logprob: -10.636465072631836
    5. ')' → logprob: -12.136465072631836
    6. ',' → logprob: -12.386465072631836
    7. '):

' → logprob: -12.886465072631836
    8. '):
' → logprob: -13.386465072631836
    9. '   ' → logprob: -13.511465072631836
    10. ':
' → logprob: -14.511465072631836

Token 273: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.003636415582150221
    2. ':' → logprob: -6.128636360168457
    3. ':
' → logprob: -7.128636360168457
    4. ' actions' → logprob: -8.378636360168457
    5. '):
' → logprob: -9.003636360168457
    6. ',' → logprob: -9.503636360168457
    7. ' tokens' → logprob: -10.253636360168457
    8. '):' → logprob: -10.628636360168457
    9. ' :' → logprob: -10.878636360168457
    10. '                
' → logprob: -11.128636360168457

Token 274: ' #' (ID: 1069)
  Prédit: ' mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mask' → logprob: -0.6381329298019409
    2. ' actions' → logprob: -1.138132929801941
    3. 'mask' → logprob: -2.6381330490112305
    4. '                   ' → logprob: -3.6381330490112305
    5. ' bit' → logprob: -4.0131330490112305
    6. 'actions' → logprob: -4.1381330490112305
    7. ' action' → logprob: -5.0131330490112305
    8. '   ' → logprob: -5.3881330490112305
    9. '               ' → logprob: -5.6381330490112305
    10. ' token' → logprob: -6.8881330490112305

Token 275: ' Prepare' (ID: 49102)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.018886471167206764
    2. ' mask' → logprob: -4.143886566162109
    3. 'bit' → logprob: -6.768886566162109
    4. 'actions' → logprob: -7.643886566162109
    5. 'action' → logprob: -7.893886566162109
    6. 'bits' → logprob: -8.89388656616211
    7. ' bit' → logprob: -9.14388656616211
    8. 'm' → logprob: -9.39388656616211
    9. 'cells' → logprob: -9.39388656616211
    10. '   ' → logprob: -9.64388656616211

Token 276: ' a' (ID: 261)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.3536442816257477
    2. ' mask' → logprob: -1.2286442518234253
    3. ' cells' → logprob: -6.978644371032715
    4. 'cells' → logprob: -7.228644371032715
    5. ' bit' → logprob: -7.353644371032715
    6. 'bit' → logprob: -7.603644371032715
    7. 'cover' → logprob: -7.853644371032715
    8. ' bits' → logprob: -8.353644371032715
    9. ' cover' → logprob: -8.478644371032715
    10. ' coverage' → logprob: -8.853644371032715

Token 277: ' list' (ID: 1562)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.029711490496993065
    2. ' mask' → logprob: -3.9047114849090576
    3. 'bit' → logprob: -5.279711723327637
    4. 'cover' → logprob: -6.779711723327637
    5. ' bit' → logprob: -7.404711723327637
    6. '[' → logprob: -7.529711723327637
    7. 'color' → logprob: -7.904711723327637
    8. 'coverage' → logprob: -8.779711723327637
    9. 'bits' → logprob: -8.779711723327637
    10. 'm' → logprob: -9.404711723327637

Token 278: ' representing' (ID: 25389)
  Prédit: ' of'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' of' → logprob: -1.4656848907470703
    2. '[' → logprob: -1.8406848907470703
    3. '               ' → logprob: -1.9656848907470703
    4. 'mask' → logprob: -2.0906848907470703
    5. 'of' → logprob: -2.4656848907470703
    6. ' =' → logprob: -2.7156848907470703
    7. '=[' → logprob: -3.5906848907470703
    8. '=' → logprob: -3.8406848907470703
    9. '_mask' → logprob: -3.8406848907470703
    10. '                   ' → logprob: -4.09068489074707

Token 279: ' the' (ID: 290)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2122366726398468
    2. '[(' → logprob: -2.5872366428375244
    3. 'cells' → logprob: -3.5872366428375244
    4. 'color' → logprob: -3.7122366428375244
    5. '(' → logprob: -4.0872368812561035
    6. 'covered' → logprob: -4.3372368812561035
    7. '[-' → logprob: -5.0872368812561035
    8. 'affected' → logprob: -5.4622368812561035
    9. 'colors' → logprob: -5.7122368812561035
    10. 'the' → logprob: -5.8372368812561035

Token 280: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.6993800401687622
    2. 'cells' → logprob: -2.1993799209594727
    3. 'colors' → logprob: -2.3243799209594727
    4. 'affected' → logprob: -2.3243799209594727
    5. 'mask' → logprob: -3.0743799209594727
    6. 'coverage' → logprob: -3.4493799209594727
    7. 'next' → logprob: -3.9493799209594727
    8. 'covered' → logprob: -4.324379920959473
    9. 'effect' → logprob: -4.449379920959473
    10. 'colored' → logprob: -5.074379920959473

Token 281: ' per' (ID: 777)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.7729980945587158
    2. '_mask' → logprob: -1.2729980945587158
    3. '[' → logprob: -2.022998094558716
    4. 's' → logprob: -3.397998094558716
    5. 'array' → logprob: -4.897997856140137
    6. 'indices' → logprob: -4.897997856140137
    7. ' =' → logprob: -5.022997856140137
    8. 'state' → logprob: -5.397997856140137
    9. '[]' → logprob: -5.397997856140137
    10. 'layers' → logprob: -5.522997856140137

Token 282: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.12847040593624115
    2. ' cell' → logprob: -2.7534704208374023
    3. 'covered' → logprob: -3.1284704208374023
    4. 'position' → logprob: -5.003470420837402
    5. ' covered' → logprob: -6.003470420837402
    6. 'action' → logprob: -6.503470420837402
    7. 'affected' → logprob: -7.253470420837402
    8. ' action' → logprob: -8.128470420837402
    9. ' position' → logprob: -8.378470420837402
    10. 'st' → logprob: -8.878470420837402

Token 283: ' after' (ID: 1934)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0363168716430664
    2. ' mask' → logprob: -1.2863168716430664
    3. 'mask' → logprob: -1.4113168716430664
    4. 'cells' → logprob: -4.036316871643066
    5. ' cells' → logprob: -4.161316871643066
    6. ' coverage' → logprob: -4.411316871643066
    7. 'color' → logprob: -4.536316871643066
    8. ' color' → logprob: -4.536316871643066
    9. 'colors' → logprob: -4.911316871643066
    10. ' =' → logprob: -5.036316871643066

Token 284: ' stamping' (ID: 156901)
  Prédit: 'app'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'app' → logprob: -0.06416327506303787
    2. 'application' → logprob: -3.6891632080078125
    3. 'stamp' → logprob: -4.5641632080078125
    4. 'action' → logprob: -5.1891632080078125
    5. 'placement' → logprob: -5.5641632080078125
    6. ' stamping' → logprob: -5.6891632080078125
    7. 'painting' → logprob: -6.0641632080078125
    8. 'st' → logprob: -6.1891632080078125
    9. 'the' → logprob: -6.3141632080078125
    10. ' application' → logprob: -6.4391632080078125

Token 285: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.2081081867218018
    2. ' mask' → logprob: -1.2081081867218018
    3. 'mask' → logprob: -1.8331081867218018
    4. ' cells' → logprob: -2.5831081867218018
    5. 'cells' → logprob: -2.5831081867218018
    6. ' color' → logprob: -4.083107948303223
    7. ' cell' → logprob: -4.333107948303223
    8. ' coverage' → logprob: -4.708107948303223
    9. 'cell' → logprob: -4.958107948303223
    10. 'color' → logprob: -4.958107948303223

Token 286: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.41525888442993164
    2. 'mask' → logprob: -2.0402588844299316
    3. ' mask' → logprob: -2.2902588844299316
    4. ' cells' → logprob: -3.7902588844299316
    5. ' new' → logprob: -3.9152588844299316
    6. ' action' → logprob: -4.040258884429932
    7. 'cells' → logprob: -4.165258884429932
    8. 'new' → logprob: -5.165258884429932
    9. ' cell' → logprob: -5.290258884429932
    10. 'color' → logprob: -5.415258884429932

Token 287: ' #' (ID: 1069)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.6627711057662964
    2. 'color' → logprob: -1.7877711057662964
    3. 'cells' → logprob: -2.287771224975586
    4. 'paint' → logprob: -3.537771224975586
    5. ' mask' → logprob: -3.537771224975586
    6. 'cell' → logprob: -3.662771224975586
    7. 'state' → logprob: -4.037771224975586
    8. ' color' → logprob: -4.037771224975586
    9. 'new' → logprob: -4.787771224975586
    10. 'action' → logprob: -4.787771224975586

Token 288: ' We'll' (ID: 46830)
  Prédit: ' mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' mask' → logprob: -0.6810948848724365
    2. 'mask' → logprob: -1.1810948848724365
    3. ' color' → logprob: -3.3060948848724365
    4. ' cells' → logprob: -3.5560948848724365
    5. ' cell' → logprob: -3.6810948848724365
    6. 'color' → logprob: -3.8060948848724365
    7. 'cells' → logprob: -3.8060948848724365
    8. ' action' → logprob: -4.931095123291016
    9. 'cell' → logprob: -4.931095123291016
    10. '               ' → logprob: -4.931095123291016

Token 289: ' store' (ID: 4897)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -1.2110880613327026
    2. ' represent' → logprob: -2.711088180541992
    3. 'colors' → logprob: -2.961088180541992
    4. ' create' → logprob: -3.211088180541992
    5. ' append' → logprob: -3.211088180541992
    6. 'actions' → logprob: -3.211088180541992
    7. 'continue' → logprob: -3.211088180541992
    8. ' continue' → logprob: -3.336088180541992
    9. 'mask' → logprob: -3.336088180541992
    10. 'create' → logprob: -3.336088180541992

Token 290: ' as' (ID: 472)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.2909556031227112
    2. 'actions' → logprob: -2.6659555435180664
    3. 'mask' → logprob: -3.0409555435180664
    4. '(mask' → logprob: -3.2909555435180664
    5. '(actions' → logprob: -3.5409555435180664
    6. '((' → logprob: -3.7909555435180664
    7. ' (' → logprob: -4.665955543518066
    8. '(color' → logprob: -5.290955543518066
    9. ' actions' → logprob: -5.290955543518066
    10. '(len' → logprob: -5.415955543518066

Token 291: ' a' (ID: 261)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.15371060371398926
    2. '[' → logprob: -2.9037106037139893
    3. '((' → logprob: -3.9037106037139893
    4. '[(' → logprob: -4.15371036529541
    5. '(actions' → logprob: -4.65371036529541
    6. '(mask' → logprob: -5.27871036529541
    7. 'mask' → logprob: -5.40371036529541
    8. '(color' → logprob: -5.52871036529541
    9. 'actions' → logprob: -5.65371036529541
    10. '([' → logprob: -5.77871036529541

Token 292: ' tuple' (ID: 31311)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5638200044631958
    2. 'tuple' → logprob: -2.0638198852539062
    3. 'mask' → logprob: -2.1888198852539062
    4. 'bit' → logprob: -2.3138198852539062
    5. '[' → logprob: -3.4388198852539062
    6. 'byte' → logprob: -4.563819885253906
    7. 'bytes' → logprob: -4.938819885253906
    8. '(tuple' → logprob: -4.938819885253906
    9. 'bits' → logprob: -5.313819885253906
    10. '([' → logprob: -5.438819885253906

Token 293: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.547487199306488
    2. '([' → logprob: -1.6724872589111328
    3. '()' → logprob: -3.422487258911133
    4. '([-' → logprob: -3.422487258911133
    5. '(colors' → logprob: -3.672487258911133
    6. '(tuple' → logprob: -3.797487258911133
    7. '(
' → logprob: -4.297487258911133
    8. '(st' → logprob: -4.422487258911133
    9. '((' → logprob: -4.547487258911133
    10. '(cell' → logprob: -4.797487258911133

Token 294: ' length' (ID: 5517)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.4845932126045227
    2. 'color' → logprob: -1.609593152999878
    3. '(' → logprob: -2.359593152999878
    4. '3' → logprob: -3.234593152999878
    5. 'colors' → logprob: -4.484593391418457
    6. 'cells' → logprob: -4.734593391418457
    7. 'actions' → logprob: -4.984593391418457
    8. '(color' → logprob: -5.359593391418457
    9. 'int' → logprob: -5.984593391418457
    10. '((' → logprob: -6.484593391418457

Token 295: ' ' (ID: 220)
  Prédit: '16'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -0.005730636417865753
    2. '4' → logprob: -5.880730628967285
    3. '(' → logprob: -6.005730628967285
    4. ' ' → logprob: -8.630730628967285
    5. 'covered' → logprob: -9.130730628967285
    6. 'len' → logprob: -9.880730628967285
    7. '   ' → logprob: -10.255730628967285
    8. 'cover' → logprob: -11.630730628967285
    9. '```' → logprob: -11.755730628967285
    10. '[' → logprob: -11.755730628967285

Token 296: '16' (ID: 1125)
  Prédit: '16'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -1.771655115589965e-05
    2. ' ' → logprob: -11.125018119812012
    3. '(' → logprob: -13.125018119812012
    4. '4' → logprob: -14.250018119812012
    5. '   ' → logprob: -16.250017166137695
    6. '[' → logprob: -16.500017166137695
    7. '```' → logprob: -18.500017166137695
    8. '{' → logprob: -18.625017166137695
    9. '=' → logprob: -19.125017166137695
    10. 'cells' → logprob: -19.250017166137695

Token 297: ' where' (ID: 1919)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.0410124063491821
    2. '(' → logprob: -1.5410124063491821
    3. ',' → logprob: -2.1660122871398926
    4. '[' → logprob: -3.2910122871398926
    5. 'color' → logprob: -3.5410122871398926
    6. ':' → logprob: -3.6660122871398926
    7. 'cells' → logprob: -3.7910122871398926
    8. '(color' → logprob: -3.9160122871398926
    9. ' with' → logprob: -3.9160122871398926
    10. '([' → logprob: -4.166012287139893

Token 298: ' each' (ID: 2454)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cells' → logprob: -1.1847108602523804
    2. 'actions' → logprob: -1.6847108602523804
    3. 'pos' → logprob: -2.18471097946167
    4. 'cell' → logprob: -2.30971097946167
    5. 'st' → logprob: -2.80971097946167
    6. 'idx' → logprob: -3.18471097946167
    7. '16' → logprob: -3.30971097946167
    8. '(' → logprob: -3.30971097946167
    9. '0' → logprob: -3.55971097946167
    10. 'color' → logprob: -4.55971097946167

Token 299: ' entry' (ID: 7251)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -1.6560118198394775
    2. '=' → logprob: -2.0310118198394775
    3. 'element' → logprob: -2.0310118198394775
    4. ' cell' → logprob: -2.1560118198394775
    5. 'position' → logprob: -2.2810118198394775
    6. ' element' → logprob: -2.4060118198394775
    7. ' position' → logprob: -3.1560118198394775
    8. 'index' → logprob: -3.1560118198394775
    9. ' entry' → logprob: -3.4060118198394775
    10. ')' → logprob: -3.6560118198394775

Token 300: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.7059845924377441
    2. 'is' → logprob: -0.8309845924377441
    3. '=' → logprob: -2.955984592437744
    4. 'in' → logprob: -5.205984592437744
    5. 'rep' → logprob: -5.330984592437744
    6. ' in' → logprob: -5.955984592437744
    7. ' represents' → logprob: -6.205984592437744
    8. '=None' → logprob: -7.705984592437744
    9. 'equals' → logprob: -7.705984592437744
    10. '=color' → logprob: -7.705984592437744

Token 301: ' ' (ID: 220)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.11791642010211945
    2. ' color' → logprob: -2.2429163455963135
    3. '(color' → logprob: -6.867916584014893
    4. '3' → logprob: -7.117916584014893
    5. ' actions' → logprob: -7.242916584014893
    6. 'actions' → logprob: -7.367916584014893
    7. ' ' → logprob: -7.742916584014893
    8. '0' → logprob: -7.867916584014893
    9. '(' → logprob: -8.492916107177734
    10. ' (' → logprob: -8.742916107177734

Token 302: '0' (ID: 15)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.23886170983314514
    2. '-' → logprob: -1.6138616800308228
    3. '(' → logprob: -5.863861560821533
    4. '(color' → logprob: -5.988861560821533
    5. '3' → logprob: -6.113861560821533
    6. '(-' → logprob: -6.238861560821533
    7. 'None' → logprob: -6.238861560821533
    8. '0' → logprob: -7.363861560821533
    9. ' color' → logprob: -7.738861560821533
    10. '(None' → logprob: -8.613862037658691

Token 303: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.27984732389450073
    2. ' if' → logprob: -1.9048473834991455
    3. '<|end|>' → logprob: -3.2798473834991455
    4. ' ,' → logprob: -4.154847145080566
    5. ' or' → logprob: -4.779847145080566
    6. ' for' → logprob: -4.779847145080566
    7. ',
' → logprob: -5.029847145080566
    8. 'xff' → logprob: -5.779847145080566
    9. ')' → logprob: -6.154847145080566
    10. 'if' → logprob: -6.279847145080566

Token 304: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0035150181502103806
    2. ' ' → logprob: -6.128515243530273
    3. 'color' → logprob: -7.128515243530273
    4. '0' → logprob: -8.753515243530273
    5. '-' → logprob: -8.753515243530273
    6. ' -' → logprob: -9.253515243530273
    7. ' color' → logprob: -9.753515243530273
    8. '3' → logprob: -11.378515243530273
    9. ',' → logprob: -11.628515243530273
    10. 'None' → logprob: -12.378515243530273

Token 305: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04798261076211929
    2. ' or' → logprob: -3.547982692718506
    3. 'or' → logprob: -4.047982692718506
    4. ' ,' → logprob: -7.922982692718506
    5. '2' → logprob: -9.547982215881348
    6. '0' → logprob: -10.297982215881348
    7. ')' → logprob: -10.297982215881348
    8. ',None' → logprob: -10.672982215881348
    9. ' ' → logprob: -10.797982215881348
    10. '               ' → logprob: -11.422982215881348

Token 306: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.17574402689933777
    2. 'or' → logprob: -1.9257440567016602
    3. ' or' → logprob: -4.17574405670166
    4. ' ' → logprob: -10.30074405670166
    5. '```' → logprob: -13.42574405670166
    6. ',' → logprob: -14.80074405670166
    7. '
' → logprob: -15.30074405670166
    8. '_or' → logprob: -15.80074405670166
    9. '	or' → logprob: -16.425743103027344
    10. '

' → logprob: -17.050743103027344

Token 307: ' or' (ID: 503)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2788712978363037
    2. ',' → logprob: -1.6538712978363037
    3. ',
' → logprob: -4.903871536254883
    4. ' or' → logprob: -4.903871536254883
    5. ',state' → logprob: -5.278871536254883
    6. ' actions' → logprob: -5.528871536254883
    7. ':' → logprob: -6.028871536254883
    8. '                   ' → logprob: -6.153871536254883
    9. ',color' → logprob: -6.153871536254883
    10. 'actions' → logprob: -6.278871536254883

Token 308: ' -' (ID: 533)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.49999529123306274
    2. '-' → logprob: -0.9999952912330627
    3. 'None' → logprob: -3.749995231628418
    4. ' -' → logprob: -6.499995231628418
    5. ' ' → logprob: -8.124995231628418
    6. ' None' → logprob: -8.499995231628418
    7. '   ' → logprob: -10.874995231628418
    8. '
' → logprob: -11.374995231628418
    9. '(-' → logprob: -11.874995231628418
    10. '```' → logprob: -11.999995231628418

Token 309: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.054500666621607e-06
    2. ' ' → logprob: -13.75000286102295
    3. ' -' → logprob: -14.12500286102295
    4. '-' → logprob: -14.50000286102295
    5. '2' → logprob: -15.12500286102295
    6. '```' → logprob: -16.125003814697266
    7. '
' → logprob: -16.375003814697266
    8. '`' → logprob: -17.500003814697266
    9. '１' → logprob: -17.687503814697266
    10. '``' → logprob: -17.687503814697266

Token 310: ' meaning' (ID: 10915)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -1.2356183528900146
    2. ' state' → logprob: -1.3606183528900146
    3. ',' → logprob: -2.3606183528900146
    4. ' new' → logprob: -2.7356183528900146
    5. ' =' → logprob: -3.4856183528900146
    6. ' next' → logprob: -3.4856183528900146
    7. ' action' → logprob: -3.7356183528900146
    8. 'mask' → logprob: -3.8606183528900146
    9. 'new' → logprob: -3.9856183528900146
    10. ' mask' → logprob: -4.110618591308594

Token 311: ' no' (ID: 860)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.5764941573143005
    2. '-' → logprob: -1.3264942169189453
    3. 'unknown' → logprob: -2.9514942169189453
    4. ' no' → logprob: -3.3264942169189453
    5. 'un' → logprob: -3.7014942169189453
    6. 'unch' → logprob: -4.576494216918945
    7. 'empty' → logprob: -4.826494216918945
    8. 'unset' → logprob: -4.951494216918945
    9. 'none' → logprob: -5.076494216918945
    10. 'None' → logprob: -5.451494216918945

Token 312: ' change' (ID: 3343)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -1.2972862720489502
    2. ' color' → logprob: -1.5472862720489502
    3. 'change' → logprob: -1.6722862720489502
    4. 'stamp' → logprob: -1.7972862720489502
    5. ' change' → logprob: -3.29728627204895
    6. 'coverage' → logprob: -3.67228627204895
    7. 'cover' → logprob: -3.92228627204895
    8. ' coverage' → logprob: -4.047286033630371
    9. ' stamp' → logprob: -5.047286033630371
    10. 'mask' → logprob: -5.172286033630371

Token 313: '
' (ID: 198)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -1.2530075311660767
    2. ' action' → logprob: -2.503007411956787
    3. 'state' → logprob: -2.628007411956787
    4. '               ' → logprob: -2.878007411956787
    5. ' state' → logprob: -2.878007411956787
    6. ' next' → logprob: -3.128007411956787
    7. ' =' → logprob: -3.503007411956787
    8. ':' → logprob: -3.503007411956787
    9. ' new' → logprob: -3.503007411956787
    10. ' color' → logprob: -3.628007411956787

Token 314: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.1362833976745605
    2. ':' → logprob: -1.2612833976745605
    3. ',' → logprob: -2.5112833976745605
    4. '[' → logprob: -3.2612833976745605
    5. ':
' → logprob: -3.2612833976745605
    6. ' actions' → logprob: -3.2612833976745605
    7. 'actions' → logprob: -3.5112833976745605
    8. '):
' → logprob: -4.0112833976745605
    9. '):' → logprob: -4.1362833976745605
    10. ' action' → logprob: -4.1362833976745605

Token 315: ' #' (ID: 1069)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.8837112188339233
    2. 'state' → logprob: -1.5087112188339233
    3. 'stamp' → logprob: -1.8837112188339233
    4. 'pattern' → logprob: -3.008711338043213
    5. 'new' → logprob: -3.508711338043213
    6. 'color' → logprob: -3.633711338043213
    7. 'action' → logprob: -3.758711338043213
    8. 'change' → logprob: -3.883711338043213
    9. 'effect' → logprob: -5.008711338043213
    10. 'patch' → logprob: -5.133711338043213

Token 316: ' But' (ID: 3072)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.9224228858947754
    2. 'stamp' → logprob: -1.4224228858947754
    3. 'state' → logprob: -1.9224228858947754
    4. 'color' → logprob: -3.1724228858947754
    5. 'new' → logprob: -3.1724228858947754
    6. 'pattern' → logprob: -3.9224228858947754
    7. 'base' → logprob: -4.172422885894775
    8. 'change' → logprob: -4.297422885894775
    9. 'action' → logprob: -4.297422885894775
    10. 'paint' → logprob: -4.422422885894775

Token 317: ' to' (ID: 316)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.5409362316131592
    2. '#' → logprob: -2.040936231613159
    3. ' continue' → logprob: -2.540936231613159
    4. ' we' → logprob: -2.665936231613159
    5. ' the' → logprob: -2.665936231613159
    6. ' mask' → logprob: -3.290936231613159
    7. ' color' → logprob: -3.415936231613159
    8. ' #' → logprob: -3.415936231613159
    9. 'continue' → logprob: -3.415936231613159
    10. ' action' → logprob: -3.790936231613159

Token 318: ' optimize' (ID: 40398)
  Prédit: 'opt'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'opt' → logprob: -1.2112059593200684
    2. 'continue' → logprob: -1.2112059593200684
    3. 'encode' → logprob: -2.5862059593200684
    4. 'len' → logprob: -2.8362059593200684
    5. 'store' → logprob: -2.8362059593200684
    6. ' continue' → logprob: -3.8362059593200684
    7. 'complete' → logprob: -4.086205959320068
    8. 'append' → logprob: -4.211205959320068
    9. ' store' → logprob: -4.461205959320068
    10. 'code' → logprob: -4.836205959320068

Token 319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0110912322998047
    2. ' we' → logprob: -2.1360912322998047
    3. 'mask' → logprob: -2.6360912322998047
    4. ' the' → logprob: -2.7610912322998047
    5. 'bit' → logprob: -2.7610912322998047
    6. 'bits' → logprob: -3.5110912322998047
    7. 'state' → logprob: -3.6360912322998047
    8. ' states' → logprob: -3.8860912322998047
    9. '#' → logprob: -4.011091232299805
    10. ' for' → logprob: -4.136091232299805

Token 320: ' we' (ID: 581)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6238507032394409
    2. 'mask' → logprob: -1.123850703239441
    3. 'bit' → logprob: -3.1238508224487305
    4. 'bits' → logprob: -3.8738508224487305
    5. 'from' → logprob: -4.1238508224487305
    6. ' #' → logprob: -4.4988508224487305
    7. ' mask' → logprob: -4.4988508224487305
    8. 'color' → logprob: -4.8738508224487305
    9. 'state' → logprob: -4.8738508224487305
    10. 'we' → logprob: -6.3738508224487305

Token 321: ' use' (ID: 1199)
  Prédit: ' can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.47739163041114807
    2. ' will' → logprob: -2.3523917198181152
    3. ' use' → logprob: -2.9773917198181152
    4. ' store' → logprob: -2.9773917198181152
    5. ' represent' → logprob: -3.2273917198181152
    6. 'can' → logprob: -3.3523917198181152
    7. ''ll' → logprob: -3.3523917198181152
    8. 'store' → logprob: -3.7273917198181152
    9. 'use' → logprob: -4.477391719818115
    10. ' encode' → logprob: -4.977391719818115

Token 322: ' a' (ID: 261)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -1.1793863773345947
    2. '(' → logprob: -1.5543863773345947
    3. '[]' → logprob: -1.6793863773345947
    4. '0' → logprob: -2.6793863773345947
    5. 'int' → logprob: -2.6793863773345947
    6. 'bits' → logprob: -3.3043863773345947
    7. '[' → logprob: -3.5543863773345947
    8. '1' → logprob: -3.6793863773345947
    9. 'None' → logprob: -4.429386138916016
    10. 'actions' → logprob: -4.929386138916016

Token 323: ' mask' (ID: 10910)
  Prédit: 'bit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'bit' → logprob: -0.07140206545591354
    2. 'tuple' → logprob: -3.946402072906494
    3. 'mask' → logprob: -4.196402072906494
    4. 'single' → logprob: -4.571402072906494
    5. 'list' → logprob: -5.071402072906494
    6. 'int' → logprob: -5.196402072906494
    7. '16' → logprob: -5.446402072906494
    8. 'bits' → logprob: -5.571402072906494
    9. 'bitmap' → logprob: -6.196402072906494
    10. 'state' → logprob: -8.571401596069336

Token 324: ' of' (ID: 328)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3312307298183441
    2. '_mask' → logprob: -2.706230640411377
    3. '=' → logprob: -3.081230640411377
    4. 'color' → logprob: -4.081230640411377
    5. ' for' → logprob: -4.206230640411377
    6. 'mask' → logprob: -4.456230640411377
    7. '_bits' → logprob: -4.456230640411377
    8. ',' → logprob: -4.581230640411377
    9. '_masks' → logprob: -4.581230640411377
    10. '_' → logprob: -4.706230640411377

Token 325: ' changed' (ID: 9180)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.895711362361908
    2. '16' → logprob: -1.2707114219665527
    3. '0' → logprob: -1.8957114219665527
    4. 'covered' → logprob: -2.8957114219665527
    5. 'cells' → logprob: -3.0207114219665527
    6. '1' → logprob: -4.770711421966553
    7. 'bits' → logprob: -5.020711421966553
    8. '((' → logprob: -5.020711421966553
    9. 'affected' → logprob: -5.020711421966553
    10. '3' → logprob: -5.145711421966553

Token 326: ' cells' (ID: 11242)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.14209865033626556
    2. 'cells' → logprob: -2.6420986652374268
    3. '_bits' → logprob: -3.7670986652374268
    4. ',' → logprob: -4.392098426818848
    5. ' =' → logprob: -5.017098426818848
    6. '_positions' → logprob: -5.142098426818848
    7. 'bits' → logprob: -5.517098426818848
    8. '=' → logprob: -5.892098426818848
    9. ' cells' → logprob: -6.517098426818848
    10. 'positions' → logprob: -6.892098426818848

Token 327: ' and' (ID: 326)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4805406928062439
    2. ' and' → logprob: -2.6055407524108887
    3. 'mask' → logprob: -2.7305407524108887
    4. '
' → logprob: -3.4805407524108887
    5. 'changed' → logprob: -3.4805407524108887
    6. ' changed' → logprob: -3.6055407524108887
    7. ' mask' → logprob: -3.9805407524108887
    8. ',' → logprob: -4.105540752410889
    9. 'color' → logprob: -4.230540752410889
    10. ' color' → logprob: -4.605540752410889

Token 328: ' the' (ID: 290)
  Prédit: 'colors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'colors' → logprob: -0.31792086362838745
    2. ' colors' → logprob: -2.0679209232330322
    3. 'color' → logprob: -2.4429209232330322
    4. 'values' → logprob: -4.317920684814453
    5. 'new' → logprob: -4.692920684814453
    6. ' color' → logprob: -4.692920684814453
    7. 'a' → logprob: -5.192920684814453
    8. 'vals' → logprob: -5.442920684814453
    9. ' new' → logprob: -5.817920684814453
    10. ' a' → logprob: -5.817920684814453

Token 329: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.05451693385839462
    2. ' color' → logprob: -3.5545170307159424
    3. 'colors' → logprob: -4.304516792297363
    4. 'new' → logprob: -5.054516792297363
    5. 'pattern' → logprob: -7.179516792297363
    6. ' new' → logprob: -7.179516792297363
    7. ' colors' → logprob: -7.429516792297363
    8. 'value' → logprob: -7.929516792297363
    9. 'paint' → logprob: -8.179516792297363
    10. 'values' → logprob: -8.304516792297363

Token 330: ' they' (ID: 1023)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.023968983441591263
    2. '
' → logprob: -5.1489691734313965
    3. ',' → logprob: -5.8989691734313965
    4. ',
' → logprob: -6.1489691734313965
    5. 'mask' → logprob: -6.1489691734313965
    6. ')
' → logprob: -6.2739691734313965
    7. ' actions' → logprob: -6.3989691734313965
    8. ' mask' → logprob: -6.7739691734313965
    9. '                
' → logprob: -6.7739691734313965
    10. ')' → logprob: -7.5239691734313965

Token 331: ' have' (ID: 679)
  Prédit: ' are'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' are' → logprob: -0.7850660085678101
    2. 'apply' → logprob: -1.16006600856781
    3. ' apply' → logprob: -2.6600661277770996
    4. 'are' → logprob: -3.7850661277770996
    5. ' set' → logprob: -3.9100661277770996
    6. ' represent' → logprob: -4.0350661277771
    7. ' want' → logprob: -4.6600661277771
    8. '=' → logprob: -4.7850661277771
    9. ' color' → logprob: -4.7850661277771
    10. 'set' → logprob: -4.7850661277771

Token 332: ' after' (ID: 1934)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.1414831131696701
    2. ',' → logprob: -3.2664830684661865
    3. 'mask' → logprob: -3.8914830684661865
    4. ':' → logprob: -4.391483306884766
    5. ' mask' → logprob: -4.766483306884766
    6. ',
' → logprob: -5.016483306884766
    7. '                   ' → logprob: -5.141483306884766
    8. '
' → logprob: -5.516483306884766
    9. ' changed' → logprob: -5.516483306884766
    10. ':
' → logprob: -5.641483306884766

Token 333: ' stamping' (ID: 156901)
  Prédit: 'actions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'actions' → logprob: -0.6252197027206421
    2. 'color' → logprob: -2.1252198219299316
    3. ',' → logprob: -2.3752198219299316
    4. ' color' → logprob: -3.0002198219299316
    5. ' actions' → logprob: -3.1252198219299316
    6. ' =' → logprob: -3.6252198219299316
    7. '=' → logprob: -3.8752198219299316
    8. 'st' → logprob: -4.125219821929932
    9. ' ,' → logprob: -4.250219821929932
    10. ')' → logprob: -4.500219821929932

Token 334: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.02427782118320465
    2. '
' → logprob: -5.399277687072754
    3. '                
' → logprob: -5.899277687072754
    4. 'mask' → logprob: -5.899277687072754
    5. 'color' → logprob: -6.024277687072754
    6. ',' → logprob: -6.274277687072754
    7. ' color' → logprob: -6.399277687072754
    8. ' mask' → logprob: -6.774277687072754
    9. '                   ' → logprob: -6.899277687072754
    10. ' actions' → logprob: -7.399277687072754

Token 335: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.005196759011596441
    2. ':' → logprob: -6.005196571350098
    3. ',' → logprob: -7.380196571350098
    4. ':
' → logprob: -7.880196571350098
    5. '                   ' → logprob: -8.005196571350098
    6. '                
' → logprob: -8.255196571350098
    7. ' actions' → logprob: -8.255196571350098
    8. ' :' → logprob: -9.130196571350098
    9. '):
' → logprob: -9.130196571350098
    10. ' :
' → logprob: -9.630196571350098

Token 336: ' #' (ID: 1069)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.6679085493087769
    2. '               ' → logprob: -1.6679085493087769
    3. 'color' → logprob: -2.1679086685180664
    4. 'changed' → logprob: -3.0429086685180664
    5. ' mask' → logprob: -3.1679086685180664
    6. 'actions' → logprob: -4.417908668518066
    7. ' color' → logprob: -4.417908668518066
    8. 'cells' → logprob: -4.542908668518066
    9. ' changed' → logprob: -4.667908668518066
    10. 'cell' → logprob: -4.667908668518066

Token 337: ' For' (ID: 2214)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.42463356256484985
    2. 'color' → logprob: -1.549633502960205
    3. 'changed' → logprob: -3.049633502960205
    4. 'cell' → logprob: -4.299633502960205
    5. 'cells' → logprob: -4.424633502960205
    6. ' mask' → logprob: -4.549633502960205
    7. 'colors' → logprob: -5.049633502960205
    8. 'change' → logprob: -5.174633502960205
    9. 'actions' → logprob: -5.174633502960205
    10. 'm' → logprob: -5.299633502960205

Token 338: ' BFS' (ID: 190016)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.705694317817688
    2. 'changed' → logprob: -1.705694317817688
    3. 'cells' → logprob: -2.5806941986083984
    4. ' changed' → logprob: -3.0806941986083984
    5. 'cell' → logprob: -3.0806941986083984
    6. ' mask' → logprob: -3.2056941986083984
    7. 'idx' → logprob: -3.9556941986083984
    8. 'pos' → logprob: -4.080694198608398
    9. ' idx' → logprob: -4.705694198608398
    10. ' cells' → logprob: -4.830694198608398

Token 339: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1956177055835724
    2. ':' → logprob: -3.82061767578125
    3. ',
' → logprob: -3.82061767578125
    4. 'mask' → logprob: -3.94561767578125
    5. '_mask' → logprob: -4.32061767578125
    6. 'states' → logprob: -4.44561767578125
    7. '_actions' → logprob: -4.57061767578125
    8. 'actions' → logprob: -4.69561767578125
    9. '_states' → logprob: -4.94561767578125
    10. ')' → logprob: -5.07061767578125

Token 340: ' we' (ID: 581)
  Prédit: 'actions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'actions' → logprob: -0.1480681449174881
    2. ' actions' → logprob: -2.8980681896209717
    3. 'mask' → logprob: -3.2730681896209717
    4. 'color' → logprob: -5.023067951202393
    5. 'changed' → logprob: -5.023067951202393
    6. 'm' → logprob: -5.523067951202393
    7. 'cells' → logprob: -5.523067951202393
    8. 'action' → logprob: -5.648067951202393
    9. ' mask' → logprob: -6.273067951202393
    10. 'cell' → logprob: -6.273067951202393

Token 341: ' can' (ID: 665)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.5751870274543762
    2. 'actions' → logprob: -1.9501869678497314
    3. '.append' → logprob: -2.3251869678497314
    4. 'store' → logprob: -2.8251869678497314
    5. ' store' → logprob: -3.4501869678497314
    6. ' need' → logprob: -3.8251869678497314
    7. 'need' → logprob: -4.0751872062683105
    8. ' append' → logprob: -4.4501872062683105
    9. 'continue' → logprob: -4.4501872062683105
    10. ' actions' → logprob: -4.8251872062683105

Token 342: ' simulate' (ID: 66687)
  Prédit: 'actions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'actions' → logprob: -0.608379602432251
    2. 'append' → logprob: -1.608379602432251
    3. ' actions' → logprob: -1.983379602432251
    4. ' store' → logprob: -2.983379602432251
    5. 'store' → logprob: -3.983379602432251
    6. ' append' → logprob: -4.233379364013672
    7. ' represent' → logprob: -4.483379364013672
    8. ' use' → logprob: -4.858379364013672
    9. 'encode' → logprob: -5.733379364013672
    10. 'represent' → logprob: -5.983379364013672

Token 343: ' the' (ID: 290)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.8727467060089111
    2. 'color' → logprob: -2.622746706008911
    3. 'changed' → logprob: -2.622746706008911
    4. ' mask' → logprob: -2.872746706008911
    5. 'cells' → logprob: -2.872746706008911
    6. ' changed' → logprob: -3.247746706008911
    7. 'actions' → logprob: -3.247746706008911
    8. ' for' → logprob: -3.872746706008911
    9. ' color' → logprob: -3.872746706008911
    10. 'for' → logprob: -3.997746706008911

Token 344: ' stamping' (ID: 156901)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.7588052153587341
    2. 'actions' → logprob: -1.633805274963379
    3. 'mask' → logprob: -2.758805274963379
    4. 'changed' → logprob: -3.008805274963379
    5. 'new' → logprob: -3.383805274963379
    6. 'cells' → logprob: -3.383805274963379
    7. 'next' → logprob: -3.883805274963379
    8. 'changes' → logprob: -4.008805274963379
    9. 'change' → logprob: -4.008805274963379
    10. 'action' → logprob: -4.383805274963379

Token 345: ' by' (ID: 656)
  Prédit: 'actions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'actions' → logprob: -1.5123380422592163
    2. '               ' → logprob: -2.262338161468506
    3. ',' → logprob: -2.387338161468506
    4. ' actions' → logprob: -2.512338161468506
    5. 'color' → logprob: -2.887338161468506
    6. 'mask' → logprob: -3.012338161468506
    7. ':' → logprob: -3.137338161468506
    8. ' color' → logprob: -3.387338161468506
    9. ',
' → logprob: -3.387338161468506
    10. ':
' → logprob: -3.387338161468506

Token 346: ' overw' (ID: 21696)
  Prédit: 'actions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'actions' → logprob: -0.8747434020042419
    2. ' (' → logprob: -1.7497434616088867
    3. '(actions' → logprob: -1.8747434616088867
    4. '(lambda' → logprob: -2.4997434616088867
    5. ' actions' → logprob: -2.7497434616088867
    6. 'app' → logprob: -3.6247434616088867
    7. '(' → logprob: -3.8747434616088867
    8. '((' → logprob: -4.874743461608887
    9. 'mask' → logprob: -4.999743461608887
    10. '(mask' → logprob: -5.124743461608887

Token 347: 'riting' (ID: 15201)
  Prédit: 'riting'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'riting' → logprob: -0.01676095835864544
    2. 'r' → logprob: -4.64176082611084
    3. 'rr' → logprob: -5.76676082611084
    4. 'rit' → logprob: -6.39176082611084
    5. 'rite' → logprob: -6.76676082611084
    6. 'ring' → logprob: -7.76676082611084
    7. 'iting' → logprob: -9.14176082611084
    8. 'right' → logprob: -9.39176082611084
    9. 'rl' → logprob: -9.89176082611084
    10. 'riter' → logprob: -10.01676082611084

Token 348: ' these' (ID: 1879)
  Prédit: 'cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cells' → logprob: -1.3894625902175903
    2. 'color' → logprob: -2.264462471008301
    3. 'actions' → logprob: -2.389462471008301
    4. ' the' → logprob: -2.514462471008301
    5. 'state' → logprob: -2.514462471008301
    6. ',' → logprob: -2.639462471008301
    7. 'the' → logprob: -3.139462471008301
    8. 'colors' → logprob: -3.514462471008301
    9. ' cells' → logprob: -3.889462471008301
    10. ' state' → logprob: -4.139462471008301

Token 349: ' cells' (ID: 11242)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.8533939719200134
    2. ',
' → logprob: -2.228394031524658
    3. 'cells' → logprob: -2.978394031524658
    4. '_cells' → logprob: -2.978394031524658
    5. ':' → logprob: -3.103394031524658
    6. 'actions' → logprob: -3.228394031524658
    7. ' cells' → logprob: -3.478394031524658
    8. ')' → logprob: -3.853394031524658
    9. ' ,' → logprob: -3.853394031524658
    10. ' ' → logprob: -3.853394031524658

Token 350: ' with' (ID: 483)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.05155722051858902
    2. ' actions' → logprob: -3.3015573024749756
    3. 'actions' → logprob: -5.0515570640563965
    4. ',' → logprob: -5.8015570640563965
    5. '                   ' → logprob: -7.4265570640563965
    6. ' and' → logprob: -7.9265570640563965
    7. ' action' → logprob: -8.301557540893555
    8. ' with' → logprob: -8.301557540893555
    9. ' color' → logprob: -8.551557540893555
    10. '                
' → logprob: -8.551557540893555

Token 351: ' this' (ID: 495)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.18982216715812683
    2. ' color' → logprob: -1.8148221969604492
    3. '(color' → logprob: -4.939822196960449
    4. '[color' → logprob: -6.939822196960449
    5. '(' → logprob: -7.064822196960449
    6. ' (' → logprob: -7.314822196960449
    7. '[' → logprob: -8.31482219696045
    8. ' [' → logprob: -10.31482219696045
    9. '   ' → logprob: -11.31482219696045
    10. '((' → logprob: -11.31482219696045

Token 352: ' color' (ID: 3089)
  Prédit: ' color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.5772040486335754
    2. 'color' → logprob: -0.8272040486335754
    3. ' ' → logprob: -8.327203750610352
    4. 'space' → logprob: -8.952203750610352
    5. '=color' → logprob: -8.952203750610352
    6. '[color' → logprob: -9.452203750610352
    7. '
' → logprob: -9.577203750610352
    8. '_color' → logprob: -9.577203750610352
    9. 'token' → logprob: -9.702203750610352
    10. ',color' → logprob: -9.702203750610352

Token 353: '

' (ID: 279)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.012293832376599312
    2. ' actions' → logprob: -5.012293815612793
    3. 'actions' → logprob: -6.387293815612793
    4. '
' → logprob: -6.762293815612793
    5. '                   ' → logprob: -7.637293815612793
    6. '                
' → logprob: -7.887293815612793
    7. ',' → logprob: -8.262293815612793
    8. 'color' → logprob: -8.387293815612793
    9. 'mask' → logprob: -8.387293815612793
    10. ' color' → logprob: -8.637293815612793

Token 354: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03934948146343231
    2. ' actions' → logprob: -3.9143495559692383
    3. 'actions' → logprob: -4.414349555969238
    4. '   ' → logprob: -5.539349555969238
    5. 'mask' → logprob: -7.539349555969238
    6. '                   ' → logprob: -7.664349555969238
    7. ' color' → logprob: -8.039349555969238
    8. 'color' → logprob: -8.164349555969238
    9. ' mask' → logprob: -8.289349555969238
    10. ' action' → logprob: -9.164349555969238

Token 355: ' actions' (ID: 10370)
  Prédit: 'mask'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'mask' → logprob: -0.4768088459968567
    2. 'color' → logprob: -2.101808786392212
    3. 'actions' (adapté à ' actions') → logprob: -2.226808786392212
    4. 'changed' → logprob: -2.851808786392212
    5. 'cells' → logprob: -4.226809024810791
    6. 'action' → logprob: -4.351809024810791
    7. 'cell' → logprob: -4.601809024810791
    8. 'm' → logprob: -4.601809024810791
    9. '               ' → logprob: -4.726809024810791
    10. 'changes' → logprob: -4.976809024810791

Token 356: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -4.4418171455617994e-05
    2. '.' → logprob: -10.500044822692871
    3. ' .' → logprob: -11.125044822692871
    4. 'append' → logprob: -14.000044822692871
    5. '_append' → logprob: -14.250044822692871
    6. '.app' → logprob: -15.750044822692871
    7. '.extend' → logprob: -15.875044822692871
    8. '_mask' → logprob: -15.875044822692871
    9. ').' → logprob: -17.125043869018555
    10. '_actions' → logprob: -17.250043869018555

Token 357: '(' (ID: 7)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.03892509639263153
    2. '(' → logprob: -3.2889251708984375
    3. '(i' → logprob: -7.0389251708984375
    4. '(((' → logprob: -12.538925170898438
    5. '(len' → logprob: -14.413925170898438
    6. ' (' → logprob: -14.788925170898438
    7. ' ((' → logprob: -14.788925170898438
    8. '   ' → logprob: -15.038925170898438
    9. '(('' → logprob: -15.538925170898438
    10. '([' → logprob: -15.663925170898438

Token 358: ' (' (ID: 350)
  Prédit: '(i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -0.0004997743526473641
    2. ' (' → logprob: -7.750499725341797
    3. '(' → logprob: -9.625499725341797
    4. '(lambda' → logprob: -13.250499725341797
    5. '   ' → logprob: -14.000499725341797
    6. '((' → logprob: -14.625499725341797
    7. '[i' → logprob: -17.000499725341797
    8. '(len' → logprob: -17.625499725341797
    9. '(True' → logprob: -17.875499725341797
    10. ' ' → logprob: -18.125499725341797

Token 359: 'covered' (ID: 32827)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00011713240382960066
    2. ' i' → logprob: -9.500117301940918
    3. '(i' → logprob: -10.375117301940918
    4. '   ' → logprob: -13.125117301940918
    5. 'color' → logprob: -13.125117301940918
    6. ''i' → logprob: -13.250117301940918
    7. ' (' → logprob: -13.375117301940918
    8. '(' → logprob: -13.500117301940918
    9. ')' → logprob: -14.875117301940918
    10. '
' → logprob: -15.250117301940918

Token 360: ',color' (ID: 101983)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38705626130104065
    2. ',color' → logprob: -1.1370562314987183
    3. ' ,' → logprob: -8.762056350708008
    4. ',[' → logprob: -11.137056350708008
    5. ',
' → logprob: -12.637056350708008
    6. '[color' → logprob: -13.387056350708008
    7. ',int' → logprob: -13.762056350708008
    8. ',c' → logprob: -13.762056350708008
    9. '               ' → logprob: -13.762056350708008
    10. ',len' → logprob: -14.637056350708008

Token 361: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012620178749784827
    2. ',' → logprob: -7.501262187957764
    3. '))' → logprob: -7.626262187957764
    4. ' )' → logprob: -8.876261711120605
    5. ',)' → logprob: -9.501261711120605
    6. '   ' → logprob: -13.001261711120605
    7. ')
' → logprob: -13.751261711120605
    8. ' ' → logprob: -14.501261711120605
    9. '))
' → logprob: -14.876261711120605
    10. '})' → logprob: -15.001261711120605

Token 362: ' )

' (ID: 11467)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0005044196150265634
    2. ' )' → logprob: -7.875504493713379
    3. '               ' → logprob: -9.125504493713379
    4. ')
' → logprob: -11.750504493713379
    5. '                   ' → logprob: -12.625504493713379
    6. '           ' → logprob: -13.625504493713379
    7. '))' → logprob: -14.250504493713379
    8. ',)' → logprob: -14.625504493713379
    9. '   ' → logprob: -15.125504493713379
    10. ',' → logprob: -15.250504493713379

Token 363: '#' (ID: 2)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0117592811584473
    2. '<|end|>' → logprob: -1.2617592811584473
    3. ')' → logprob: -2.0117592811584473
    4. 'visited' → logprob: -2.1367592811584473
    5. 'deque' → logprob: -2.7617592811584473
    6. 'from' → logprob: -4.511759281158447
    7. 'states' → logprob: -4.761759281158447
    8. 'state' → logprob: -5.386759281158447
    9. '<|end|>' → logprob: -5.386759281158447
    10. 'def' → logprob: -6.511759281158447

Token 364: ' BFS' (ID: 190016)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.027819328010082245
    2. 'visited' → logprob: -4.9028191566467285
    3. 'start' → logprob: -5.4028191566467285
    4. 'dist' → logprob: -5.4028191566467285
    5. 'deque' → logprob: -6.0278191566467285
    6. 'queue' → logprob: -6.0278191566467285
    7. 'dp' → logprob: -6.4028191566467285
    8. 'initial' → logprob: -6.5278191566467285
    9. '#' → logprob: -7.0278191566467285
    10. 'def' → logprob: -7.5278191566467285

Token 365: ' over' (ID: 1072)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.13641171157360077
    2. 'start' → logprob: -2.136411666870117
    3. 'initial' → logprob: -5.261411666870117
    4. 'visited' → logprob: -5.761411666870117
    5. 'dist' → logprob: -8.136411666870117
    6. 'queue' → logprob: -8.511411666870117
    7. '
' → logprob: -9.136411666870117
    8. 'q' → logprob: -9.136411666870117
    9. 'dp' → logprob: -9.261411666870117
    10. 'state' → logprob: -9.386411666870117

Token 366: ' color' (ID: 3089)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.004988724831491709
    2. 'visited' → logprob: -6.129988670349121
    3. 'deque' → logprob: -7.129988670349121
    4. 'start' → logprob: -7.254988670349121
    5. ' from' → logprob: -7.754988670349121
    6. 'state' → logprob: -8.129988670349121
    7. 'states' → logprob: -8.504988670349121
    8. 'initial' → logprob: -9.254988670349121
    9. 'dist' → logprob: -9.629988670349121
    10. '
' → logprob: -9.879988670349121

Token 367: ' states' (ID: 9407)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2852210998535156
    2. 'states' → logprob: -1.9102210998535156
    3. 'state' → logprob: -3.2852210998535156
    4. 's' → logprob: -4.035221099853516
    5. 'visited' → logprob: -4.160221099853516
    6. '_states' → logprob: -4.785221099853516
    7. '_map' → logprob: -5.660221099853516
    8. 'queue' → logprob: -5.660221099853516
    9. '_state' → logprob: -5.785221099853516
    10. 'initial' → logprob: -6.535221099853516

Token 368: '
' (ID: 198)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.07269839942455292
    2. 'start' → logprob: -2.8226983547210693
    3. 'initial' → logprob: -5.197698593139648
    4. 'visited' → logprob: -5.447698593139648
    5. ' from' → logprob: -8.197698593139648
    6. 'dist' → logprob: -8.572698593139648
    7. 'q' → logprob: -9.697698593139648
    8. 'init' → logprob: -9.697698593139648
    9. '```' → logprob: -9.822698593139648
    10. '
' → logprob: -9.947698593139648

Token 369: '#' (ID: 2)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.16907840967178345
    2. 'start' → logprob: -1.9190783500671387
    3. 'visited' → logprob: -5.794078350067139
    4. 'initial' → logprob: -6.044078350067139
    5. ' from' → logprob: -6.544078350067139
    6. 'dist' → logprob: -7.044078350067139
    7. 'q' → logprob: -8.044078826904297
    8. 'queue' → logprob: -8.044078826904297
    9. ' start' → logprob: -9.294078826904297
    10. 'Q' → logprob: -9.794078826904297

Token 370: ' Represent' (ID: 34617)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2561987042427063
    2. 'start' → logprob: -1.5061986446380615
    3. 'initial' → logprob: -5.756198883056641
    4. 'visited' → logprob: -7.381198883056641
    5. 'dist' → logprob: -8.13119888305664
    6. 'init' → logprob: -9.75619888305664
    7. 'INF' → logprob: -10.25619888305664
    8. 'queue' → logprob: -10.75619888305664
    9. 'q' → logprob: -11.13119888305664
    10. ' from' → logprob: -11.25619888305664

Token 371: ' a' (ID: 261)
  Prédit: 'states'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'states' → logprob: -0.5224660038948059
    2. 'state' → logprob: -1.5224659442901611
    3. ' states' → logprob: -2.272465944290161
    4. 'ed' → logprob: -3.147465944290161
    5. 'ing' → logprob: -4.39746618270874
    6. 'each' → logprob: -4.64746618270874
    7. ' state' → logprob: -4.89746618270874
    8. 'color' → logprob: -5.39746618270874
    9. 'colors' → logprob: -6.14746618270874
    10. 'from' → logprob: -6.89746618270874

Token 372: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.1583413928747177
    2. ' state' → logprob: -2.658341407775879
    3. 'states' → logprob: -3.783341407775879
    4. 's' → logprob: -3.908341407775879
    5. 'tuple' → logprob: -5.158341407775879
    6. ' tuple' → logprob: -5.533341407775879
    7. 'color' → logprob: -5.533341407775879
    8. 'from' → logprob: -5.783341407775879
    9. ' ' → logprob: -5.783341407775879
    10. '_state' → logprob: -6.033341407775879

Token 373: ' as' (ID: 472)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.39375659823417664
    2. 'as' → logprob: -1.768756628036499
    3. ' as' → logprob: -2.018756628036499
    4. ' =' → logprob: -4.51875638961792
    5. 'state' → logprob: -5.51875638961792
    6. '_states' → logprob: -6.14375638961792
    7. 'states' → logprob: -6.64375638961792
    8. 's' → logprob: -6.76875638961792
    9. ')' → logprob: -7.51875638961792
    10. '_state' → logprob: -7.89375638961792

Token 374: ' a' (ID: 261)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.07042151689529419
    2. '(' → logprob: -3.5704214572906494
    3. 'a' → logprob: -3.5704214572906494
    4. ' tuple' → logprob: -4.8204216957092285
    5. '16' → logprob: -6.6954216957092285
    6. '[' → logprob: -6.9454216957092285
    7. '(tuple' → logprob: -7.8204216957092285
    8. ' a' → logprob: -7.8204216957092285
    9. '(-' → logprob: -7.9454216957092285
    10. '[-' → logprob: -9.82042121887207

Token 375: ' tuple' (ID: 31311)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.0018033420201390982
    2. '16' → logprob: -6.751803398132324
    3. 'bytes' → logprob: -8.251803398132324
    4. 'int' → logprob: -9.126803398132324
    5. 'list' → logprob: -9.626803398132324
    6. 'single' → logprob: -9.626803398132324
    7. ' tuple' → logprob: -9.626803398132324
    8. 'length' → logprob: -10.251803398132324
    9. 'byte' → logprob: -12.251803398132324
    10. 'integer' → logprob: -12.376803398132324

Token 376: ' of' (ID: 328)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.0589256286621094
    2. '(range' → logprob: -1.0589256286621094
    3. '([-' → logprob: -2.0589256286621094
    4. '((-' → logprob: -3.1839256286621094
    5. '([' → logprob: -3.4339256286621094
    6. '(-' → logprob: -3.9339256286621094
    7. '(len' → logprob: -4.183925628662109
    8. '((' → logprob: -4.183925628662109
    9. '(colors' → logprob: -4.433925628662109
    10. '(
' → logprob: -4.558925628662109

Token 377: ' length' (ID: 5517)
  Prédit: '16'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -0.5771768689155579
    2. 'length' → logprob: -0.8271768689155579
    3. 'int' → logprob: -7.202177047729492
    4. 'inte' → logprob: -8.827177047729492
    5. 'size' → logprob: -9.202177047729492
    6. 'len' → logprob: -9.327177047729492
    7. 'ints' → logprob: -9.452177047729492
    8. ' length' → logprob: -10.452177047729492
    9. '[int' → logprob: -10.952177047729492
    10. '[' → logprob: -11.327177047729492

Token 378: ' ' (ID: 220)
  Prédit: '16'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -3.650518920039758e-06
    2. ' ' → logprob: -12.625003814697266
    3. '(' → logprob: -15.625003814697266
    4. '```' → logprob: -17.250003814697266
    5. '32' → logprob: -18.000003814697266
    6. '
' → logprob: -18.125003814697266
    7. '[' → logprob: -19.000003814697266
    8. ' sixteen' → logprob: -19.000003814697266
    9. '   ' → logprob: -19.125003814697266
    10. '=' → logprob: -19.250003814697266

Token 379: '16' (ID: 1125)
  Prédit: '16'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.875000953674316
    3. '(' → logprob: -16.0
    4. '
' → logprob: -18.25
    5. '[' → logprob: -18.5
    6. '```' → logprob: -18.5
    7. ' sixteen' → logprob: -19.125
    8. '4' → logprob: -20.25
    9. '1' → logprob: -20.375
    10. '１６' → logprob: -20.5625

Token 380: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9539327621459961
    2. 'state' → logprob: -1.578932762145996
    3. ',
' → logprob: -2.078932762145996
    4. 'states' → logprob: -2.328932762145996
    5. 'from' → logprob: -3.203932762145996
    6. ',state' → logprob: -3.828932762145996
    7. '(' → logprob: -4.203932762145996
    8. '(state' → logprob: -4.203932762145996
    9. '(states' → logprob: -4.203932762145996
    10. ')' → logprob: -4.453932762145996

Token 381: ' each' (ID: 2454)
  Prédit: 'each'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'each' → logprob: -1.027469515800476
    2. '-' → logprob: -2.1524696350097656
    3. ' with' → logprob: -2.2774696350097656
    4. 'with' → logprob: -2.5274696350097656
    5. ' where' → logprob: -2.6524696350097656
    6. ' each' → logprob: -2.7774696350097656
    7. '[-' → logprob: -3.2774696350097656
    8. '(-' → logprob: -3.4024696350097656
    9. '(' → logprob: -3.4024696350097656
    10. 'tuple' → logprob: -3.7774696350097656

Token 382: ' ' (ID: 220)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.4523827135562897
    2. ' in' → logprob: -1.9523826837539673
    3. 'being' → logprob: -3.202382802963257
    4. 'of' → logprob: -3.452382802963257
    5. ' representing' → logprob: -3.577382802963257
    6. ' being' → logprob: -3.952382802963257
    7. 'color' → logprob: -4.077382564544678
    8. 'element' → logprob: -4.077382564544678
    9. ' of' → logprob: -4.077382564544678
    10. 'represent' → logprob: -4.577382564544678

Token 383: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4660845696926117
    2. 'in' → logprob: -1.716084599494934
    3. 'int' → logprob: -2.7160844802856445
    4. '0' → logprob: -2.8410844802856445
    5. 'color' → logprob: -3.3410844802856445
    6. '(' → logprob: -5.0910844802856445
    7. '-in' → logprob: -5.7160844802856445
    8. ' in' → logprob: -5.7160844802856445
    9. '(-' → logprob: -6.2160844802856445
    10. '=' → logprob: -6.4660844802856445

Token 384: '(R' (ID: 4092)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0149546442553401
    2. ',
' → logprob: -4.764954566955566
    3. 'or' → logprob: -5.764954566955566
    4. '<|end|>' → logprob: -6.639954566955566
    5. ' or' → logprob: -7.889954566955566
    6. '
' → logprob: -8.014954566955566
    7. ')' → logprob: -8.014954566955566
    8. ' ,' → logprob: -8.264954566955566
    9. ' ' → logprob: -9.014954566955566
    10. ',None' → logprob: -9.389954566955566

Token 385: ')/' (ID: 11876)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9028319716453552
    2. ',G' → logprob: -1.02783203125
    3. '),' → logprob: -1.52783203125
    4. '|' → logprob: -4.65283203125
    5. ',B' → logprob: -5.52783203125
    6. ')' → logprob: -6.40283203125
    7. '/G' → logprob: -6.65283203125
    8. 'G' → logprob: -7.15283203125
    9. '/' → logprob: -8.27783203125
    10. 'or' → logprob: -8.27783203125

Token 386: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.004696090007201e-05
    2. ' ' → logprob: -9.750069618225098
    3. '3' → logprob: -11.875069618225098
    4. '
' → logprob: -12.500069618225098
    5. '2' → logprob: -14.250069618225098
    6. ',' → logprob: -15.250069618225098
    7. '{' → logprob: -16.875070571899414
    8. '0' → logprob: -17.125070571899414
    9. '123' → logprob: -17.375070571899414
    10. '```' → logprob: -17.625070571899414

Token 387: '(G' (ID: 12449)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/' → logprob: -0.9516829252243042
    2. ',' → logprob: -1.0766829252243042
    3. ',G' → logprob: -2.0766830444335938
    4. '/G' → logprob: -2.2016830444335938
    5. '(G' → logprob: -3.4516830444335938
    6. ')' → logprob: -6.701683044433594
    7. ')/' → logprob: -6.951683044433594
    8. ',/' → logprob: -7.201683044433594
    9. ' /' → logprob: -7.576683044433594
    10. '/B' → logprob: -7.826683044433594

Token 388: ')/' (ID: 11876)
  Prédit: ')/'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')/' → logprob: -0.004272138699889183
    2. '/' → logprob: -5.504271984100342
    3. ')' → logprob: -9.3792724609375
    4. ',' → logprob: -10.8792724609375
    5. '2' → logprob: -10.8792724609375
    6. ' or' → logprob: -11.1292724609375
    7. '/B' → logprob: -11.2542724609375
    8. 'or' → logprob: -11.3792724609375
    9. 'B' → logprob: -11.6292724609375
    10. ' /' → logprob: -12.0042724609375

Token 389: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.2127087504486553e-05
    2. ' ' → logprob: -10.750021934509277
    3. '
' → logprob: -14.375021934509277
    4. '1' → logprob: -17.000022888183594
    5. '```' → logprob: -19.000022888183594
    6. '/' → logprob: -19.125022888183594
    7. 'or' → logprob: -19.375022888183594
    8. '234' → logprob: -19.750022888183594
    9. '

' → logprob: -19.875022888183594
    10. '3' → logprob: -20.125022888183594

Token 390: '(B' (ID: 8409)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.4359363615512848
    2. '/-' → logprob: -1.0609363317489624
    3. 'or' → logprob: -5.185936450958252
    4. ' or' → logprob: -7.435936450958252
    5. ' /' → logprob: -7.810936450958252
    6. '(-' → logprob: -8.560935974121094
    7. '/or' → logprob: -8.810935974121094
    8. '3' → logprob: -9.185935974121094
    9. '
' → logprob: -10.435935974121094
    10. ')/' → logprob: -11.060935974121094

Token 391: ')/' (ID: 11876)
  Prédit: '/-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '/-' → logprob: -0.4436737895011902
    2. ')/' → logprob: -1.818673849105835
    3. '/' → logprob: -1.943673849105835
    4. ')' → logprob: -3.193673849105835
    5. ' or' → logprob: -4.693673610687256
    6. 'or' → logprob: -6.318673610687256
    7. ')-' → logprob: -8.193674087524414
    8. ' /' → logprob: -8.693674087524414
    9. '),' → logprob: -9.443674087524414
    10. '/or' → logprob: -9.568674087524414

Token 392: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.5783947706222534
    2. '3' → logprob: -0.8283947706222534
    3. ' -' → logprob: -6.578394889831543
    4. '(-' → logprob: -7.328394889831543
    5. ' ' → logprob: -7.953394889831543
    6. '
' → logprob: -10.578394889831543
    7. '(' → logprob: -11.828394889831543
    8. 'None' → logprob: -12.328394889831543
    9. '{-' → logprob: -12.828394889831543
    10. ' (-' → logprob: -12.953394889831543

Token 393: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.00000286102295
    3. '```' → logprob: -16.625001907348633
    4. '
' → logprob: -16.750001907348633
    5. ')' → logprob: -16.875001907348633
    6. ' -' → logprob: -17.312501907348633
    7. '=' → logprob: -17.562501907348633
    8. '۱' → logprob: -17.562501907348633
    9. '(' → logprob: -18.000001907348633
    10. '{' → logprob: -18.125001907348633

Token 394: '(initial' (ID: 63456)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009930206462740898
    2. ' )' → logprob: -5.88493013381958
    3. ')>' → logprob: -6.25993013381958
    4. ')
' → logprob: -6.50993013381958
    5. ',' → logprob: -7.13493013381958
    6. '):
' → logprob: -7.25993013381958
    7. '):' → logprob: -7.88493013381958
    8. ')>
' → logprob: -8.134930610656738
    9. '_states' → logprob: -8.259930610656738
    10. 'states' → logprob: -8.384930610656738

Token 395: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0031766409520059824
    2. '),' → logprob: -7.003176689147949
    3. ' )' → logprob: -7.253176689147949
    4. 'state' → logprob: -7.503176689147949
    5. '))' → logprob: -7.878176689147949
    6. ')]' → logprob: -8.50317668914795
    7. ')>' → logprob: -9.87817668914795
    8. ')
' → logprob: -10.00317668914795
    9. ')=' → logprob: -10.37817668914795
    10. ')+' → logprob: -10.37817668914795

Token 396: '#' (ID: 2)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.47768744826316833
    2. 'from' → logprob: -1.9776874780654907
    3. 'visited' → logprob: -2.227687358856201
    4. 'initial' → logprob: -2.477687358856201
    5. 'dist' → logprob: -3.727687358856201
    6. 'queue' → logprob: -4.102687358856201
    7. 'seen' → logprob: -6.227687358856201
    8. 'state' → logprob: -6.477687358856201
    9. 'deque' → logprob: -6.727687358856201
    10. 'q' → logprob: -6.852687358856201

Token 397: ' Initial' (ID: 9209)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.17539769411087036
    2. 'start' → logprob: -2.1753976345062256
    3. 'initial' → logprob: -3.8003976345062256
    4. 'visited' → logprob: -4.300397872924805
    5. 'dist' → logprob: -4.675397872924805
    6. 'queue' → logprob: -7.550397872924805
    7. ' from' → logprob: -8.050397872924805
    8. 'state' → logprob: -8.425397872924805
    9. 'init' → logprob: -8.425397872924805
    10. 'q' → logprob: -9.050397872924805

Token 398: ' state' (ID: 2608)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.47655898332595825
    2. 'state' → logprob: -0.9765589833259583
    3. ' =' → logprob: -6.601559162139893
    4. '=' → logprob: -6.851559162139893
    5. ' state' → logprob: -10.601558685302734
    6. 'State' → logprob: -11.851558685302734
    7. '_color' → logprob: -11.976558685302734
    8. 'color' → logprob: -12.101558685302734
    9. '_states' → logprob: -12.601558685302734
    10. '=-' → logprob: -12.976558685302734

Token 399: ' all' (ID: 722)
  Prédit: '=(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=(-' → logprob: -0.4670332968235016
    2. ' =' → logprob: -1.2170332670211792
    3. '=' → logprob: -2.7170333862304688
    4. '=[' → logprob: -5.467033386230469
    5. '=(' → logprob: -5.842033386230469
    6. 'state' → logprob: -5.967033386230469
    7. '=-' → logprob: -7.592033386230469
    8. 'states' → logprob: -8.342033386230469
    9. '=('' → logprob: -8.967033386230469
    10. '_state' → logprob: -9.467033386230469

Token 400: ' -' (ID: 533)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.4130013585090637
    2. '=(-' → logprob: -1.913001298904419
    3. '=' → logprob: -2.788001298904419
    4. '[-' → logprob: -3.038001298904419
    5. ' =' → logprob: -3.538001298904419
    6. '=-' → logprob: -3.663001298904419
    7. '=[' → logprob: -4.788001537322998
    8. '-' → logprob: -5.038001537322998
    9. '([-' → logprob: -5.538001537322998
    10. 'states' → logprob: -6.288001537322998

Token 401: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.407366916188039e-05
    2. '(' → logprob: -9.875054359436035
    3. '[' → logprob: -14.250054359436035
    4. 'tuple' → logprob: -14.250054359436035
    5. ' ' → logprob: -15.000054359436035
    6. '```' → logprob: -15.625054359436035
    7. ' (' → logprob: -15.750054359436035
    8. '-' → logprob: -16.43755340576172
    9. ' tuple' → logprob: -16.56255340576172
    10. '{' → logprob: -16.68755340576172

Token 402: ' (' (ID: 350)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.028091050684452057
    2. 'start' → logprob: -4.653090953826904
    3. 'initial' → logprob: -4.903090953826904
    4. '
' → logprob: -5.903090953826904
    5. ')
' → logprob: -6.528090953826904
    6. ' =' → logprob: -6.653090953826904
    7. ')' → logprob: -6.778090953826904
    8. '=' → logprob: -7.403090953826904
    9. 'init' → logprob: -7.403090953826904
    10. ' state' → logprob: -7.528090953826904

Token 403: 'meaning' (ID: 91529)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010175801813602448
    2. '16' → logprob: -5.635175704956055
    3. ',' → logprob: -6.260175704956055
    4. ',)' → logprob: -6.385175704956055
    5. '-' → logprob: -7.510175704956055
    6. '[' → logprob: -8.260175704956055
    7. 'state' → logprob: -8.260175704956055
    8. '(' → logprob: -8.385175704956055
    9. '1' → logprob: -8.760175704956055
    10. ' )' → logprob: -8.885175704956055

Token 404: ' no' (ID: 860)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.011767695657908916
    2. 'no' → logprob: -5.386767864227295
    3. ' -' → logprob: -5.636767864227295
    4. ' no' → logprob: -6.011767864227295
    5. '-no' → logprob: -7.886767864227295
    6. 'all' → logprob: -8.386767387390137
    7. ' all' → logprob: -9.386767387390137
    8. '-in' → logprob: -9.886767387390137
    9. 'unknown' → logprob: -9.886767387390137
    10. 'initial' → logprob: -10.011767387390137

Token 405: ' color' (ID: 3089)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.5401894450187683
    2. ' change' → logprob: -2.040189504623413
    3. 'color' → logprob: -2.040189504623413
    4. ' color' → logprob: -2.665189504623413
    5. 'paint' → logprob: -3.915189504623413
    6. '_change' → logprob: -4.040189266204834
    7. ')' → logprob: -4.415189266204834
    8. 'changes' → logprob: -4.415189266204834
    9. ' paint' → logprob: -4.915189266204834
    10. ' changes' → logprob: -5.290189266204834

Token 406: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0074335308745503426
    2. 'assigned' → logprob: -6.0074334144592285
    3. '),' → logprob: -6.8824334144592285
    4. ')
' → logprob: -7.0074334144592285
    5. 's' → logprob: -7.3824334144592285
    6. '):' → logprob: -7.6324334144592285
    7. ' )' → logprob: -7.8824334144592285
    8. ' assigned' → logprob: -8.257433891296387
    9. ' applied' → logprob: -8.632433891296387
    10. 'ap' → logprob: -8.632433891296387

Token 407: '#' (ID: 2)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 408: ' Goal' (ID: 67160)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.07484474033117294
    2. 'start' → logprob: -3.0748448371887207
    3. 'initial' → logprob: -3.8248448371887207
    4. 'visited' → logprob: -6.574844837188721
    5. 'state' → logprob: -6.949844837188721
    6. 'queue' → logprob: -7.324844837188721
    7. 'dist' → logprob: -7.824844837188721
    8. 'init' → logprob: -8.324844360351562
    9. ' from' → logprob: -8.699844360351562
    10. 'q' → logprob: -8.949844360351562

Token 409: ' is' (ID: 382)
  Prédit: '_state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.20323258638381958
    2. 'state' → logprob: -1.8282325267791748
    3. ' =' → logprob: -4.453232765197754
    4. '_states' → logprob: -4.953232765197754
    5. '=' → logprob: -5.578232765197754
    6. ':' → logprob: -8.453232765197754
    7. 'states' → logprob: -8.828232765197754
    8. '_color' → logprob: -8.953232765197754
    9. ' state' → logprob: -9.703232765197754
    10. '_colors' → logprob: -10.453232765197754

Token 410: ' target' (ID: 3783)
  Prédit: 'tuple'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -0.06622175872325897
    2. 'target' → logprob: -3.0662217140197754
    3. ' tuple' → logprob: -4.066221714019775
    4. ' target' → logprob: -8.691222190856934
    5. '(tuple' → logprob: -9.941222190856934
    6. 'to' → logprob: -10.066222190856934
    7. '   ' → logprob: -10.191222190856934
    8. '(target' → logprob: -11.816222190856934
    9. '(' → logprob: -11.941222190856934
    10. 'state' → logprob: -12.066222190856934

Token 411: '_colors' (ID: 79137)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.068504698574543
    2. 'initial' → logprob: -3.443504810333252
    3. 'state' → logprob: -4.193504810333252
    4. 'start' → logprob: -4.443504810333252
    5. 'init' → logprob: -6.568504810333252
    6. ' from' → logprob: -6.693504810333252
    7. 'visited' → logprob: -6.818504810333252
    8. 'dist' → logprob: -6.943504810333252
    9. ')
' → logprob: -7.193504810333252
    10. '
' → logprob: -7.193504810333252

Token 412: '

' (ID: 279)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.018639851361513138
    2. 'initial' → logprob: -5.143640041351318
    3. 'start' → logprob: -5.143640041351318
    4. 'visited' → logprob: -6.018640041351318
    5. 'queue' → logprob: -6.768640041351318
    6. '```' → logprob: -6.893640041351318
    7. ' from' → logprob: -7.018640041351318
    8. 'state' → logprob: -8.14363956451416
    9. 'deque' → logprob: -8.14363956451416
    10. 'dist' → logprob: -8.51863956451416

Token 413: 'start' (ID: 5236)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.1276865452528
    2. 'start' → logprob: -3.1276865005493164
    3. 'initial' → logprob: -3.5026865005493164
    4. 'queue' → logprob: -3.7526865005493164
    5. 'visited' → logprob: -4.127686500549316
    6. '```' → logprob: -6.752686500549316
    7. 'state' → logprob: -7.002686500549316
    8. 'deque' → logprob: -7.002686500549316
    9. 'dist' → logprob: -7.127686500549316
    10. '
' → logprob: -7.127686500549316

Token 414: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1744012832641602
    2. '_state' → logprob: -1.1744012832641602
    3. '_states' → logprob: -1.5494012832641602
    4. ' =' → logprob: -1.7994012832641602
    5. '=_' → logprob: -6.17440128326416
    6. '_' → logprob: -7.04940128326416
    7. 'state' → logprob: -7.54940128326416
    8. '=(' → logprob: -7.79940128326416
    9. '=[' → logprob: -9.42440128326416
    10. '_colors' → logprob: -9.79940128326416

Token 415: 'tuple' (ID: 52834)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.03003753162920475
    2. 'tuple' → logprob: -3.5300376415252686
    3. ' tuple' → logprob: -8.655037879943848
    4. ' (-' → logprob: -9.155037879943848
    5. '((-' → logprob: -13.155037879943848
    6. '(tuple' → logprob: -13.405037879943848
    7. ' ' → logprob: -13.655037879943848
    8. '   ' → logprob: -13.780037879943848
    9. '[-' → logprob: -14.280037879943848
    10. '(' → logprob: -14.405037879943848

Token 416: '([-' (ID: 99080)
  Prédit: '([-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([-' → logprob: -0.00672448705881834
    2. '(-' → logprob: -5.0067243576049805
    3. '[-' → logprob: -12.63172435760498
    4. '(' → logprob: -12.63172435760498
    5. '((-' → logprob: -13.00672435760498
    6. '-' → logprob: -15.38172435760498
    7. '([' → logprob: -16.506725311279297
    8. '((' → logprob: -19.881725311279297
    9. '([]' → logprob: -20.381725311279297
    10. '```' → logprob: -21.381725311279297

Token 417: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.625
    3. '```' → logprob: -17.875
    4. '<|end|>' → logprob: -18.1875
    5. '-' → logprob: -18.6875
    6. '{' → logprob: -18.75
    7. '۱' → logprob: -19.0625
    8. '১' → logprob: -19.75
    9. '`' → logprob: -20.0
    10. '१' → logprob: -20.25

Token 418: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.02642674744129181
    2. ']' → logprob: -3.6514267921447754
    3. ']+' → logprob: -10.151426315307617
    4. ' for' → logprob: -10.151426315307617
    5. 'for' → logprob: -10.401426315307617
    6. '])' → logprob: -12.151426315307617
    7. ']*(' → logprob: -12.151426315307617
    8. '])*' → logprob: -12.651426315307617
    9. ' ]' → logprob: -13.401426315307617
    10. ']<<' → logprob: -14.026426315307617

Token 419: '16' (ID: 1125)
  Prédit: '16'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '16' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.00000286102295
    3. '(' → logprob: -15.25000286102295
    4. '
' → logprob: -17.750001907348633
    5. '' → logprob: -18.250001907348633
    6. ')' → logprob: -18.625001907348633
    7. '[' → logprob: -18.625001907348633
    8. '17' → logprob: -18.625001907348633
    9. '   ' → logprob: -18.750001907348633
    10. '1' → logprob: -19.125001907348633

Token 420: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0206720617134124e-05
    2. ')
' → logprob: -11.75001049041748
    3. ' )' → logprob: -13.12501049041748
    4. ')`' → logprob: -16.875009536743164
    5. '),' → logprob: -17.250009536743164
    6. '))' → logprob: -17.250009536743164
    7. ')

' → logprob: -17.500009536743164
    8. '')' → logprob: -17.625009536743164
    9. '`)' → logprob: -17.750009536743164
    10. '<|end|>' → logprob: -18.125009536743164

Token 421: 'goal' (ID: 47313)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.2244032323360443
    2. 'queue' → logprob: -1.7244032621383667
    3. 'q' → logprob: -3.974403142929077
    4. '
' → logprob: -5.974403381347656
    5. 'que' → logprob: -8.099403381347656
    6. '```' → logprob: -8.099403381347656
    7. 'deque' → logprob: -8.099403381347656
    8. 'visited' → logprob: -8.224403381347656
    9. 'dq' → logprob: -9.349403381347656
    10. 'Q' → logprob: -9.474403381347656

Token 422: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.002242323709651828
    2. ' =' → logprob: -6.127242088317871
    3. '=[' → logprob: -10.877242088317871
    4. '=[]' → logprob: -11.877242088317871
    5. '=
' → logprob: -12.377242088317871
    6. '==' → logprob: -12.377242088317871
    7. ')=' → logprob: -12.502242088317871
    8. '=

' → logprob: -12.502242088317871
    9. '=(' → logprob: -12.752242088317871
    10. ')' → logprob: -13.002242088317871

Token 423: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -4.246537173457909e-06
    2. 'target' → logprob: -13.000003814697266
    3. ' tuple' → logprob: -13.250003814697266
    4. '(tuple' → logprob: -15.875003814697266
    5. 'tu' → logprob: -19.250003814697266
    6. '   ' → logprob: -20.250003814697266
    7. '_tuple' → logprob: -22.250003814697266
    8. 'start' → logprob: -22.375003814697266
    9. 'Tuple' → logprob: -23.000003814697266
    10. '(' → logprob: -23.875003814697266

Token 424: '(target' (ID: 16247)
  Prédit: '(target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -0.0024800582323223352
    2. 'target' → logprob: -6.0024800300598145
    3. '[target' → logprob: -12.627480506896973
    4. '([' → logprob: -13.877480506896973
    5. '(' → logprob: -15.877480506896973
    6. ' target' → logprob: -16.877479553222656
    7. '((' → logprob: -19.127479553222656
    8. '	target' → logprob: -19.127479553222656
    9. '_target' → logprob: -20.252479553222656
    10. ',target' → logprob: -20.377479553222656

Token 425: '_colors' (ID: 79137)
  Prédit: '_colors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_colors' → logprob: -8.061054359131958e-06
    2. ')_' → logprob: -12.625007629394531
    3. ')' → logprob: -13.375007629394531
    4. '_color' → logprob: -13.625007629394531
    5. 'colors' → logprob: -13.625007629394531
    6. '```' → logprob: -15.375007629394531
    7. '_' → logprob: -15.625007629394531
    8. '[_' → logprob: -16.25000762939453
    9. 'Colors' → logprob: -17.12500762939453
    10. '[' → logprob: -17.62500762939453

Token 426: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.60414821645827e-06
    2. ')
' → logprob: -12.625004768371582
    3. ' )' → logprob: -14.750004768371582
    4. ')`' → logprob: -15.000004768371582
    5. ')

' → logprob: -15.625004768371582
    6. '))' → logprob: -15.625004768371582
    7. '')' → logprob: -17.375003814697266
    8. '),' → logprob: -17.375003814697266
    9. ')
' → logprob: -17.625003814697266
    10. ')}' → logprob: -17.625003814697266

Token 427: 'from' (ID: 2845)
  Prédit: 'from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' → logprob: -0.047329068183898926
    2. 'queue' → logprob: -3.2973289489746094
    3. 'visited' → logprob: -5.047328948974609
    4. 'q' → logprob: -6.547328948974609
    5. 'deque' → logprob: -7.047328948974609
    6. '```' → logprob: -8.17232894897461
    7. 'que' → logprob: -9.29732894897461
    8. ' from' → logprob: -10.17232894897461
    9. 'dist' → logprob: -10.17232894897461
    10. 'Q' → logprob: -10.79732894897461

Token 428: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -2.165027217415627e-05
    2. 'heap' → logprob: -11.500021934509277
    3. ' collections' → logprob: -11.750021934509277
    4. 'copy' → logprob: -13.250021934509277
    5. 'sys' → logprob: -13.375021934509277
    6. 'queue' → logprob: -16.25002098083496
    7. '_' → logprob: -16.62502098083496
    8. '_copy' → logprob: -17.62502098083496
    9. 'deque' → logprob: -18.37502098083496
    10. '_heap' → logprob: -18.75002098083496

Token 429: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.00400491151958704
    2. ' import' → logprob: -5.629004955291748
    3. 'from' → logprob: -8.62900447845459
    4. 'port' → logprob: -9.25400447845459
    5. '_import' → logprob: -9.87900447845459
    6. 'ort' → logprob: -10.50400447845459
    7. '.import' → logprob: -11.00400447845459
    8. '	import' → logprob: -11.37900447845459
    9. '```' → logprob: -12.87900447845459
    10. 'odule' → logprob: -13.00400447845459

Token 430: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.318681188422488e-05
    2. ' deque' → logprob: -11.25001335144043
    3. 'queue' → logprob: -15.62501335144043
    4. 'collections' → logprob: -18.50001335144043
    5. 'de' → logprob: -18.62501335144043
    6. '```' → logprob: -19.75001335144043
    7. 'default' → logprob: -20.37501335144043
    8. 'dp' → logprob: -21.12501335144043
    9. 'deck' → logprob: -21.25001335144043
    10. '
' → logprob: -21.75001335144043

Token 431: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.39998769760131836
    2. 'queue' → logprob: -1.1499876976013184
    3. 'q' → logprob: -4.399987697601318
    4. 'visited' → logprob: -8.149988174438477
    5. '

' → logprob: -8.774988174438477
    6. '  
' → logprob: -9.649988174438477
    7. 'dist' → logprob: -9.774988174438477
    8. 'que' → logprob: -9.899988174438477
    9. 'Q' → logprob: -9.899988174438477
    10. '
' → logprob: -10.399988174438477

Token 432: 'visited' (ID: 52453)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.11559765040874481
    2. 'q' → logprob: -2.365597724914551
    3. 'visited' → logprob: -4.365597724914551
    4. '
' → logprob: -6.865597724914551
    5. 'que' → logprob: -7.115597724914551
    6. 'Q' → logprob: -7.865597724914551
    7. 'dist' → logprob: -9.11559772491455
    8. 'dq' → logprob: -9.24059772491455
    9. '```' → logprob: -9.24059772491455
    10. 'deque' → logprob: -12.24059772491455

Token 433: '={' (ID: 1693)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.023610208183526993
    2. '=set' → logprob: -3.7736101150512695
    3. ' =' → logprob: -8.02361011505127
    4. '={}' → logprob: -10.64861011505127
    5. '={' → logprob: -11.39861011505127
    6. '=re' → logprob: -15.02361011505127
    7. '=new' → logprob: -15.27361011505127
    8. '=b' → logprob: -15.77361011505127
    9. '={"' → logprob: -15.89861011505127
    10. '=create' → logprob: -15.89861011505127

Token 434: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -2.7491250875755213e-05
    2. ' start' → logprob: -11.250027656555176
    3. '[start' → logprob: -11.750027656555176
    4. '{' → logprob: -12.625027656555176
    5. '}
' → logprob: -13.625027656555176
    6. '(start' → logprob: -13.875027656555176
    7. '}' → logprob: -14.375027656555176
    8. '
' → logprob: -14.625027656555176
    9. '}

' → logprob: -17.37502670288086
    10. '	start' → logprob: -17.87502670288086

Token 435: ':' (ID: 25)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.29708024859428406
    2. ':' → logprob: -1.4220802783966064
    3. '}
' → logprob: -4.297080039978027
    4. ':start' → logprob: -6.422080039978027
    5. ':set' → logprob: -8.172080039978027
    6. ':true' → logprob: -9.422080039978027
    7. ')' → logprob: -10.297080039978027
    8. '}
' → logprob: -10.422080039978027
    9. '}=' → logprob: -10.547080039978027
    10. ',' → logprob: -10.672080039978027

Token 436: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.020857984200119972
    2. '-' → logprob: -4.270857810974121
    3. 'None' → logprob: -5.145857810974121
    4. '[]' → logprob: -7.520857810974121
    5. '''' → logprob: -9.395857810974121
    6. ' ' → logprob: -9.645857810974121
    7. '""' → logprob: -10.270857810974121
    8. '(' → logprob: -10.395857810974121
    9. '(-' → logprob: -10.770857810974121
    10. ' -' → logprob: -10.770857810974121

Token 437: '}
' (ID: 739)
  Prédit: '}'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}' → logprob: -0.20146040618419647
    2. '}
' → logprob: -1.701460361480713
    3. '}
' → logprob: -10.076460838317871
    4. '}

' → logprob: -13.701460838317871
    5. ' }' → logprob: -13.826460838317871
    6. ')' → logprob: -13.951460838317871
    7. ' }
' → logprob: -14.326460838317871
    8. ',' → logprob: -14.326460838317871
    9. '})' → logprob: -14.326460838317871
    10. ')
' → logprob: -15.951460838317871

Token 438: 'q' (ID: 80)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' → logprob: -0.2522852122783661
    2. 'q' → logprob: -1.5022852420806885
    3. 'dq' → logprob: -8.75228500366211
    4. 'Q' → logprob: -9.25228500366211
    5. 'que' → logprob: -9.50228500366211
    6. '```' → logprob: -11.00228500366211
    7. 'deque' → logprob: -12.37728500366211
    8. '
' → logprob: -12.50228500366211
    9. ' queue' → logprob: -12.87728500366211
    10. '    
' → logprob: -17.12728500366211

Token 439: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.17975476384162903
    2. ' =' → logprob: -1.8047547340393066
    3. '=q' → logprob: -13.179755210876465
    4. '.' → logprob: -13.679755210876465
    5. '.append' → logprob: -14.179755210876465
    6. ' ' → logprob: -14.304755210876465
    7. '=create' → logprob: -14.429755210876465
    8. '=new' → logprob: -14.554755210876465
    9. '=b' → logprob: -14.554755210876465
    10. '=re' → logprob: -14.804755210876465

Token 440: 'deque' (ID: 143563)
  Prédit: 'deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.9361264946837764e-07
    2. ' deque' → logprob: -15.75
    3. 'Deque' → logprob: -22.5
    4. 'de' → logprob: -23.0
    5. '```' → logprob: -23.875
    6. 'collections' → logprob: -24.25
    7. 'dq' → logprob: -24.75
    8. 'queue' → logprob: -27.25
    9. 'from' → logprob: -27.75
    10. '(de' → logprob: -28.25

Token 441: '([' (ID: 5194)
  Prédit: '(['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '([' → logprob: -0.0007150543970055878
    2. '([(' → logprob: -7.625715255737305
    3. '()' → logprob: -8.875715255737305
    4. '()
' → logprob: -9.750715255737305
    5. '(start' → logprob: -11.500715255737305
    6. '[start' → logprob: -11.625715255737305
    7. '[(' → logprob: -12.125715255737305
    8. '(' → logprob: -12.875715255737305
    9. '[' → logprob: -13.875715255737305
    10. '((' → logprob: -14.750715255737305

Token 442: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -4.656383680412546e-05
    2. '(start' → logprob: -10.000046730041504
    3. ' start' → logprob: -13.750046730041504
    4. '[start' → logprob: -16.875045776367188
    5. '(' → logprob: -17.500045776367188
    6. ',start' → logprob: -20.625045776367188
    7. '	start' → logprob: -21.125045776367188
    8. '=start' → logprob: -21.750045776367188
    9. '_start' → logprob: -21.750045776367188
    10. '   ' → logprob: -21.875045776367188

Token 443: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0006029533687978983
    2. '])
' → logprob: -7.500602722167969
    3. '])

' → logprob: -10.125602722167969
    4. ')' → logprob: -12.250602722167969
    5. ' ])' → logprob: -12.750602722167969
    6. ')])' → logprob: -13.875602722167969
    7. '])
' → logprob: -14.375602722167969
    8. '])

' → logprob: -15.875602722167969
    9. '))' → logprob: -16.00060272216797
    10. ''])' → logprob: -16.12560272216797

Token 444: 'while' (ID: 7032)
  Prédit: 'while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.7120533811976202e-05
    2. ' while' → logprob: -11.000017166137695
    3. '```' → logprob: -15.500017166137695
    4. '
' → logprob: -16.250017166137695
    5. 'found' → logprob: -17.000017166137695
    6. 'While' → logprob: -17.750017166137695
    7. 'for' → logprob: -18.250017166137695
    8. '	while' → logprob: -18.750017166137695
    9. 'def' → logprob: -18.875017166137695
    10. ')' → logprob: -18.875017166137695

Token 445: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -2.696889623621246e-06
    2. ' q' → logprob: -12.87500286102295
    3. 'len' → logprob: -18.625001907348633
    4. '   ' → logprob: -19.000001907348633
    5. '	q' → logprob: -19.250001907348633
    6. '(q' → logprob: -21.750001907348633
    7. ' ' → logprob: -22.000001907348633
    8. '$q' → logprob: -22.125001907348633
    9. '
' → logprob: -22.500001907348633
    10. 'True' → logprob: -22.625001907348633

Token 446: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5927549004554749
    2. ':
' → logprob: -0.9677549004554749
    3. '.p' → logprob: -2.96775484085083
    4. '.pop' → logprob: -5.59275484085083
    5. '):' → logprob: -5.71775484085083
    6. '):
' → logprob: -5.84275484085083
    7. '():
' → logprob: -6.46775484085083
    8. 'opleft' → logprob: -6.59275484085083
    9. '():' → logprob: -7.34275484085083
    10. 'p' → logprob: -7.46775484085083

Token 447: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.39510446786880493
    2. 'state' → logprob: -1.1451044082641602
    3. ' state' → logprob: -4.89510440826416
    4. 'current' → logprob: -8.27010440826416
    5. '	state' → logprob: -8.89510440826416
    6. ' current' → logprob: -9.02010440826416
    7. ' s' → logprob: -9.89510440826416
    8. 'curr' → logprob: -10.02010440826416
    9. 'cur' → logprob: -10.14510440826416
    10. 's' → logprob: -10.52010440826416

Token 448: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' (adapté à ' state') → logprob: -0.010501560755074024
    2. 'cur' → logprob: -5.260501384735107
    3. 'curr' → logprob: -5.760501384735107
    4. 'current' → logprob: -6.260501384735107
    5. ' state' → logprob: -8.760501861572266
    6. '   ' → logprob: -10.510501861572266
    7. ' curr' → logprob: -12.010501861572266
    8. ' current' → logprob: -13.260501861572266
    9. 's' → logprob: -13.635501861572266
    10. ' cur' → logprob: -14.135501861572266

Token 449: '=q' (ID: 151306)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0028309114277362823
    2. ' =' → logprob: -6.502830982208252
    3. '=q' → logprob: -6.627830982208252
    4. '=
' → logprob: -13.002830505371094
    5. '=

' → logprob: -13.877830505371094
    6. ')=' → logprob: -15.252830505371094
    7. '=input' → logprob: -15.502830505371094
    8. '=current' → logprob: -15.752830505371094
    9. ')' → logprob: -16.252830505371094
    10. '=s' → logprob: -16.252830505371094

Token 450: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -1.1994775377388578e-05
    2. '.pop' → logprob: -11.625012397766113
    3. '.' → logprob: -12.875012397766113
    4. '   ' → logprob: -15.625012397766113
    5. ' .' → logprob: -16.000011444091797
    6. 'p' → logprob: -16.750011444091797
    7. 'opleft' → logprob: -16.750011444091797
    8. '.dequeue' → logprob: -17.750011444091797
    9. '```' → logprob: -17.750011444091797
    10. '.append' → logprob: -18.000011444091797

Token 451: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.004111880902200937
    2. 'op' → logprob: -5.5041117668151855
    3. 'ople' → logprob: -10.629112243652344
    4. 'p' → logprob: -11.754112243652344
    5. 'opl' → logprob: -14.379112243652344
    6. 'opt' → logprob: -15.504112243652344
    7. 'pop' → logprob: -15.629112243652344
    8. 'left' → logprob: -16.129112243652344
    9. 'ple' → logprob: -16.379112243652344
    10. 'opf' → logprob: -16.754112243652344

Token 452: '()
' (ID: 1234)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3027431070804596
    2. '()
' → logprob: -1.6777430772781372
    3. '
' → logprob: -3.1777431964874268
    4. ')
' → logprob: -4.302742958068848
    5. 'for' → logprob: -4.427742958068848
    6. '()' → logprob: -5.677742958068848
    7. ' for' → logprob: -6.052742958068848
    8. '    
' → logprob: -7.677742958068848
    9. ':
' → logprob: -7.677742958068848
    10. ')' → logprob: -8.552742958068848

Token 453: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.5909870862960815
    2. '   ' → logprob: -0.8409870862960815
    3. 'if' → logprob: -4.465987205505371
    4. ' for' → logprob: -5.715987205505371
    5. 'found' → logprob: -9.465987205505371
    6. ' if' → logprob: -10.215987205505371
    7. '       ' → logprob: -10.965987205505371
    8. '```' → logprob: -12.340987205505371
    9. '    
' → logprob: -12.590987205505371
    10. 'depth' → logprob: -12.840987205505371

Token 454: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003246989566832781
    2. 'if' (adapté à ' if') → logprob: -5.753246784210205
    3. ' for' → logprob: -10.503247261047363
    4. '   ' → logprob: -10.753247261047363
    5. 'found' → logprob: -11.628247261047363
    6. 'dist' → logprob: -11.753247261047363
    7. 'depth' → logprob: -13.128247261047363
    8. 'd' → logprob: -14.503247261047363
    9. 'steps' → logprob: -14.503247261047363
    10. 'distance' → logprob: -15.378247261047363

Token 455: ' state' (ID: 2608)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.0024957526475191116
    2. ' state' → logprob: -6.002495765686035
    3. '   ' → logprob: -11.002495765686035
    4. 'visited' → logprob: -12.877495765686035
    5. ' ' → logprob: -15.002495765686035
    6. '  ' → logprob: -16.00249481201172
    7. '    ' → logprob: -16.00249481201172
    8. '	state' → logprob: -16.12749481201172
    9. '(state' → logprob: -17.12749481201172
    10. '
' → logprob: -17.37749481201172

Token 456: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.002755545312538743
    2. ' ==' → logprob: -6.002755641937256
    3. ')==' → logprob: -8.377755165100098
    4. ']==' → logprob: -10.002755165100098
    5. ')' → logprob: -13.127755165100098
    6. '()==' → logprob: -14.002755165100098
    7. '===' → logprob: -14.127755165100098
    8. '==
' → logprob: -14.252755165100098
    9. '=' → logprob: -15.502755165100098
    10. '==(' → logprob: -15.752755165100098

Token 457: 'goal' (ID: 47313)
  Prédit: 'goal'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'goal' → logprob: -1.8624639324116288e-06
    2. ' goal' → logprob: -13.250001907348633
    3. '(goal' → logprob: -16.875001907348633
    4. '   ' → logprob: -20.875001907348633
    5. '
' → logprob: -21.125001907348633
    6. '.goal' → logprob: -21.250001907348633
    7. 'target' → logprob: -22.750001907348633
    8. '_goal' → logprob: -23.000001907348633
    9. 'go' → logprob: -23.250001907348633
    10. 'Goal' → logprob: -23.875001907348633

Token 458: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31415024399757385
    2. ':
' → logprob: -1.3141502141952515
    3. ':return' → logprob: -7.064150333404541
    4. '   ' → logprob: -10.814149856567383
    5. '       ' → logprob: -11.814149856567383
    6. ':
' → logprob: -12.814149856567383
    7. '):
' → logprob: -13.814149856567383
    8. ':

' → logprob: -14.189149856567383
    9. '):' → logprob: -15.814149856567383
    10. '():
' → logprob: -16.564149856567383

Token 459: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00011737081513274461
    2. 'print' → logprob: -9.250117301940918
    3. '   ' → logprob: -11.125117301940918
    4. ' print' → logprob: -12.125117301940918
    5. '```' → logprob: -14.625117301940918
    6. 'break' → logprob: -15.000117301940918
    7. '
' → logprob: -16.750118255615234
    8. ' break' → logprob: -17.250118255615234
    9. '           ' → logprob: -17.750118255615234
    10. ',' → logprob: -17.750118255615234

Token 460: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0001238004770129919
    2. 'break' → logprob: -9.500123977661133
    3. '   ' → logprob: -10.000123977661133
    4. ' print' → logprob: -12.750123977661133
    5. '       ' → logprob: -14.750123977661133
    6. '```' → logprob: -16.250123977661133
    7. '
' → logprob: -16.375123977661133
    8. '    
' → logprob: -19.375123977661133
    9. '	print' → logprob: -19.625123977661133
    10. '           ' → logprob: -19.750123977661133

Token 461: '(' (ID: 7)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.00887360144406557
    2. '(' → logprob: -4.758873462677002
    3. ' visited' → logprob: -8.25887393951416
    4. '   ' → logprob: -17.133872985839844
    5. '
' → logprob: -17.758872985839844
    6. 'Visited' → logprob: -18.383872985839844
    7. '0' → logprob: -18.633872985839844
    8. 'vis' → logprob: -18.633872985839844
    9. ' (' → logprob: -19.008872985839844
    10. '{' → logprob: -19.258872985839844

Token 462: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -2.935296834039036e-06
    2. ' visited' → logprob: -12.75000286102295
    3. '
' → logprob: -20.000003814697266
    4. '   ' → logprob: -20.875003814697266
    5. '(' → logprob: -23.875003814697266
    6. 'vis' → logprob: -24.375003814697266
    7. 'visit' → logprob: -24.625003814697266
    8. '
' → logprob: -24.750003814697266
    9. 'visitor' → logprob: -24.875003814697266
    10. '`' → logprob: -25.375003814697266

Token 463: '[state' (ID: 134476)
  Prédit: '[state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[state' → logprob: 0.0
    2. 'state' → logprob: -19.625
    3. '(state' → logprob: -20.375
    4. ',state' → logprob: -20.75
    5. '[start' → logprob: -20.875
    6. ')' → logprob: -22.875
    7. '[' → logprob: -24.0
    8. ' state' → logprob: -24.5
    9. '[current' → logprob: -24.625
    10. '.state' → logprob: -24.625

Token 464: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.1002335250377655
    2. ')' → logprob: -2.350233554840088
    3. ')return' → logprob: -11.72523307800293
    4. ')
' → logprob: -12.22523307800293
    5. '   ' → logprob: -12.60023307800293
    6. ' )
' → logprob: -12.85023307800293
    7. ')`
' → logprob: -13.35023307800293
    8. '))
' → logprob: -13.35023307800293
    9. '])
' → logprob: -13.85023307800293
    10. '())
' → logprob: -13.97523307800293

Token 465: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018209058791399002
    2. '   ' → logprob: -4.018208980560303
    3. '<|end|>' → logprob: -10.518209457397461
    4. ' for' → logprob: -12.268209457397461
    5. 'continue' → logprob: -12.393209457397461
    6. ',' → logprob: -12.643209457397461
    7. '<|end|>' → logprob: -12.643209457397461
    8. 'else' → logprob: -12.768209457397461
    9. ' ' → logprob: -13.018209457397461
    10. '           ' → logprob: -13.143209457397461

Token 466: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10023611038923264
    2. 'break' (adapté à ' break') → logprob: -2.350236177444458
    3. '	break' → logprob: -11.725235939025879
    4. ' break' → logprob: -11.725235939025879
    5. '
' → logprob: -12.350235939025879
    6. 'exit' → logprob: -12.350235939025879
    7. '   ' → logprob: -13.475235939025879
    8. '        
' → logprob: -13.600235939025879
    9. 'return' → logprob: -14.100235939025879
    10. '```' → logprob: -14.975235939025879

Token 467: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00511006498709321
    2. 'else' → logprob: -5.505110263824463
    3. 'for' → logprob: -6.880110263824463
    4. ' for' → logprob: -13.005109786987305
    5. ' else' → logprob: -14.380109786987305
    6. '    
' → logprob: -16.380109786987305
    7. '   ' → logprob: -16.880109786987305
    8. '       ' → logprob: -16.880109786987305
    9. '
' → logprob: -17.505109786987305
    10. '```' → logprob: -17.630109786987305

Token 468: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.86936354637146
    2. '   ' → logprob: -1.11936354637146
    3. 'else' → logprob: -1.36936354637146
    4. ' for' → logprob: -10.744363784790039
    5. '```' → logprob: -13.119363784790039
    6. ' else' → logprob: -13.619363784790039
    7. '	for' → logprob: -14.494363784790039
    8. '    
' → logprob: -16.86936378479004
    9. '   ' → logprob: -17.61936378479004
    10. '	else' → logprob: -18.36936378479004

Token 469: ' dist' (ID: 3601)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.7120533811976202e-05
    2. ' for' → logprob: -11.250017166137695
    3. '   ' → logprob: -12.500017166137695
    4. 'else' → logprob: -14.875017166137695
    5. '	for' → logprob: -19.250017166137695
    6. '    
' → logprob: -21.250017166137695
    7. '```' → logprob: -22.000017166137695
    8. ' ' → logprob: -24.750017166137695
    9. 'next' → logprob: -25.500017166137695
    10. '       ' → logprob: -25.500017166137695

Token 470: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.020962469279766083
    2. ' =' → logprob: -3.8959624767303467
    3. 'ances' → logprob: -9.520962715148926
    4. 'ance' → logprob: -9.645962715148926
    5. '=get' → logprob: -9.645962715148926
    6. '   ' → logprob: -9.895962715148926
    7. '=len' → logprob: -10.645962715148926
    8. '=d' → logprob: -10.895962715148926
    9. ' ' → logprob: -11.395962715148926
    10. '=int' → logprob: -11.520962715148926

Token 471: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: 0.0
    2. ' visited' → logprob: -18.25
    3. 'visit' → logprob: -23.25
    4. '
' → logprob: -23.875
    5. '   ' → logprob: -24.25
    6. 'visible' → logprob: -24.5
    7. 'vis' → logprob: -25.25
    8. 'Visited' → logprob: -26.0
    9. 'used' → logprob: -26.125
    10. '{' → logprob: -26.125

Token 472: '[state' (ID: 134476)
  Prédit: '[state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[state' → logprob: -0.0002469158498570323
    2. 'state' → logprob: -8.37524700164795
    3. '=' → logprob: -11.25024700164795
    4. ',state' → logprob: -13.25024700164795
    5. ' =' → logprob: -14.12524700164795
    6. '_state' → logprob: -14.75024700164795
    7. '(state' → logprob: -15.87524700164795
    8. ' state' → logprob: -16.125246047973633
    9. 's' → logprob: -16.625246047973633
    10. 'states' → logprob: -17.125246047973633

Token 473: ']
' (ID: 1592)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5887963175773621
    2. ']+' → logprob: -1.0887963771820068
    3. ')+' → logprob: -2.463796377182007
    4. ']' → logprob: -4.338796138763428
    5. ')' → logprob: -4.838796138763428
    6. ')
' → logprob: -6.963796138763428
    7. ']
' → logprob: -7.463796138763428
    8. '
' → logprob: -7.713796138763428
    9. '   ' → logprob: -8.838796615600586
    10. '+
' → logprob: -9.463796615600586

Token 474: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0018292918102815747
    2. ' for' → logprob: -6.501829147338867
    3. '   ' → logprob: -8.251829147338867
    4. '```' → logprob: -9.751829147338867
    5. '	for' → logprob: -12.001829147338867
    6. '<|end|>' → logprob: -14.001829147338867
    7. '``' → logprob: -14.501829147338867
    8. '       ' → logprob: -15.001829147338867
    9. '    
' → logprob: -16.751829147338867
    10. 'from' → logprob: -17.501829147338867

Token 475: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -7.896309739408025e-07
    2. ' for' → logprob: -14.250000953674316
    3. '   ' → logprob: -17.375
    4. '```' → logprob: -21.0
    5. '	for' → logprob: -23.125
    6. '    
' → logprob: -23.625
    7. 'from' → logprob: -24.25
    8. '
' → logprob: -24.5
    9. '``' → logprob: -25.625
    10. 'import' → logprob: -25.875

Token 476: ' covered' (ID: 13083)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'covered' → logprob: -0.01040895376354456
    2. '(' → logprob: -5.010408878326416
    3. ' covered' → logprob: -5.635408878326416
    4. 'cover' → logprob: -10.010409355163574
    5. ' (' → logprob: -10.260409355163574
    6. 'covers' → logprob: -11.260409355163574
    7. '   ' → logprob: -12.135409355163574
    8. 'cov' → logprob: -12.635409355163574
    9. '-covered' → logprob: -12.635409355163574
    10. 'cells' → logprob: -12.760409355163574

Token 477: ',color' (ID: 101983)
  Prédit: ',color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',color' → logprob: -0.008693872950971127
    2. ',' → logprob: -4.758693695068359
    3. ',state' → logprob: -10.00869369506836
    4. ',(' → logprob: -11.00869369506836
    5. ',col' → logprob: -12.63369369506836
    6. ',_' → logprob: -12.63369369506836
    7. 'color' → logprob: -12.88369369506836
    8. ',c' → logprob: -13.13369369506836
    9. ' ,' → logprob: -13.38369369506836
    10. ',value' → logprob: -13.75869369506836

Token 478: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.11454257369041443
    2. ' in' → logprob: -2.2395424842834473
    3. ',' → logprob: -6.489542484283447
    4. ',color' → logprob: -9.364542961120605
    5. ',state' → logprob: -9.864542961120605
    6. ',in' → logprob: -10.364542961120605
    7. '   ' → logprob: -11.739542961120605
    8. ',(' → logprob: -12.614542961120605
    9. 'covered' → logprob: -12.614542961120605
    10. ')' → logprob: -12.989542961120605

Token 479: ' actions' (ID: 10370)
  Prédit: 'actions'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actions' → logprob: -1.7120533811976202e-05
    2. ' actions' → logprob: -11.000017166137695
    3. '(actions' → logprob: -14.875017166137695
    4. '.actions' → logprob: -19.500017166137695
    5. '   ' → logprob: -19.625017166137695
    6. '
' → logprob: -20.500017166137695
    7. '_actions' → logprob: -21.250017166137695
    8. 'answers' → logprob: -21.625017166137695
    9. 'action' → logprob: -22.250017166137695
    10. '/actions' → logprob: -22.375017166137695

Token 480: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.34994834661483765
    2. ':' → logprob: -1.2249484062194824
    3. '       ' → logprob: -6.724948406219482
    4. '):
' → logprob: -8.849947929382324
    5. '   ' → logprob: -9.349947929382324
    6. ',' → logprob: -10.349947929382324
    7. ':
' → logprob: -11.224947929382324
    8. ':

' → logprob: -11.224947929382324
    9. '):' → logprob: -12.724947929382324
    10. '():
' → logprob: -13.224947929382324

Token 481: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006877713603898883
    2. 'new' → logprob: -7.375687599182129
    3. ' new' → logprob: -10.375687599182129
    4. 'next' → logprob: -10.750687599182129
    5. '   ' → logprob: -13.000687599182129
    6. ' next' → logprob: -13.875687599182129
    7. 'tokens' → logprob: -13.875687599182129
    8. ',' → logprob: -14.125687599182129
    9. '           ' → logprob: -14.250687599182129
    10. 'state' → logprob: -14.500687599182129

Token 482: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.004934277385473251
    2. 'next' → logprob: -5.754934310913086
    3. 'lst' → logprob: -6.379934310913086
    4. '   ' → logprob: -10.629934310913086
    5. '       ' → logprob: -11.129934310913086
    6. ' new' → logprob: -11.879934310913086
    7. '#' (adapté à ' #') → logprob: -12.379934310913086
    8. 'ns' → logprob: -12.754934310913086
    9. 'arr' → logprob: -13.004934310913086
    10. 'n' → logprob: -13.879934310913086

Token 483: ' Apply' (ID: 28921)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.008563747629523277
    2. 'next' → logprob: -5.13356351852417
    3. 'lst' → logprob: -6.00856351852417
    4. '       ' → logprob: -9.008563995361328
    5. ' new' → logprob: -11.008563995361328
    6. '   ' → logprob: -11.133563995361328
    7. 'n' → logprob: -12.008563995361328
    8. 'ns' → logprob: -12.508563995361328
    9. 'arr' → logprob: -12.508563995361328
    10. 'nd' → logprob: -13.258563995361328

Token 484: ' action' (ID: 3736)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.027718927711248398
    2. 'list' → logprob: -4.777719020843506
    3. '       ' → logprob: -5.277719020843506
    4. ' new' → logprob: -5.527719020843506
    5. '   ' → logprob: -5.777719020843506
    6. 'state' → logprob: -6.027719020843506
    7. 'lst' → logprob: -6.527719020843506
    8. 'next' → logprob: -6.527719020843506
    9. 'cells' → logprob: -7.527719020843506
    10. 'tmp' → logprob: -7.902719020843506

Token 485: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36898306012153625
    2. ':' → logprob: -1.2439830303192139
    3. 'new' → logprob: -4.868983268737793
    4. ' new' → logprob: -4.993983268737793
    5. ':
' → logprob: -6.368983268737793
    6. '):' → logprob: -6.743983268737793
    7. 'state' → logprob: -7.868983268737793
    8. '           ' → logprob: -7.868983268737793
    9. ':new' → logprob: -7.868983268737793
    10. ',new' → logprob: -8.368983268737793

Token 486: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003965843468904495
    2. 'new' → logprob: -6.003965854644775
    3. ' new' → logprob: -6.753965854644775
    4. 'next' → logprob: -9.628965377807617
    5. 'state' → logprob: -9.753965377807617
    6. ' next' → logprob: -10.378965377807617
    7. ':' → logprob: -10.378965377807617
    8. '        
' → logprob: -10.628965377807617
    9. '           ' → logprob: -11.003965377807617
    10. ',' → logprob: -11.003965377807617

Token 487: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.012425827793776989
    2. 'next' → logprob: -4.762425899505615
    3. '       ' → logprob: -6.512425899505615
    4. ' new' → logprob: -6.637425899505615
    5. 'lst' → logprob: -7.012425899505615
    6. 'ns' → logprob: -10.387425422668457
    7. 'n' → logprob: -11.012425422668457
    8. ' next' → logprob: -11.387425422668457
    9. '   ' → logprob: -11.512425422668457
    10. 'tmp' → logprob: -12.012425422668457

Token 488: '_state' (ID: 9479)
  Prédit: 'state'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'state' → logprob: -0.032215751707553864
    2. '_state' → logprob: -3.5322158336639404
    3. '=' → logprob: -6.782215595245361
    4. ' =' → logprob: -7.157215595245361
    5. 'list' → logprob: -7.657215595245361
    6. 'tuple' → logprob: -10.40721607208252
    7. '=list' → logprob: -10.90721607208252
    8. '   ' → logprob: -11.65721607208252
    9. ' state' → logprob: -12.53221607208252
    10. 'states' → logprob: -13.28221607208252

Token 489: '=list' (ID: 93413)
  Prédit: '=['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.3804842233657837
    2. '=' → logprob: -1.3804842233657837
    3. '=list' → logprob: -3.130484104156494
    4. ' =' → logprob: -4.005484104156494
    5. '=[]' → logprob: -5.880484104156494
    6. '=[]
' → logprob: -9.005484580993652
    7. '=[
' → logprob: -9.005484580993652
    8. ' =[' → logprob: -10.505484580993652
    9. '=(' → logprob: -11.255484580993652
    10. '=
' → logprob: -12.255484580993652

Token 490: '(state' (ID: 16114)
  Prédit: '(state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(state' → logprob: -0.0019287518225610256
    2. 'state' → logprob: -6.251928806304932
    3. '[state' → logprob: -16.501928329467773
    4. '(' → logprob: -17.251928329467773
    5. '(new' → logprob: -18.376928329467773
    6. ',state' → logprob: -18.751928329467773
    7. ' state' → logprob: -18.876928329467773
    8. '_state' → logprob: -21.126928329467773
    9. '```' → logprob: -21.251928329467773
    10. 'new' → logprob: -21.376928329467773

Token 491: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.10028247535228729
    2. ')' → logprob: -2.3502824306488037
    3. '       ' → logprob: -9.600282669067383
    4. ')
' → logprob: -11.850282669067383
    5. ')

' → logprob: -14.600282669067383
    6. '   ' → logprob: -15.475282669067383
    7. ')`
' → logprob: -15.975282669067383
    8. ')new' → logprob: -16.975282669067383
    9. '.copy' → logprob: -17.350282669067383
    10. '
' → logprob: -17.600282669067383

Token 492: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0284349974244833
    2. 'for' → logprob: -3.778434991836548
    3. ' for' → logprob: -5.278435230255127
    4. '```' → logprob: -10.653434753417969
    5. '	for' → logprob: -10.903434753417969
    6. '   ' → logprob: -11.278434753417969
    7. '<|end|>' → logprob: -11.778434753417969
    8. '           ' → logprob: -12.153434753417969
    9. '               ' → logprob: -12.403434753417969
    10. '	       ' → logprob: -13.778434753417969

Token 493: ' changed' (ID: 9180)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.008787937462329865
    2. ' for' → logprob: -4.758788108825684
    3. '```' → logprob: -9.133788108825684
    4. '       ' → logprob: -9.883788108825684
    5. '	for' → logprob: -11.508788108825684
    6. '           ' → logprob: -13.258788108825684
    7. '   ' → logprob: -13.383788108825684
    8. '``' → logprob: -14.508788108825684
    9. '<|end|>' → logprob: -14.883788108825684
    10. '               ' → logprob: -15.383788108825684

Token 494: '=False' (ID: 12148)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7424807548522949
    2. 'for' → logprob: -1.492480754852295
    3. ' =' → logprob: -2.742480754852295
    4. ' for' → logprob: -2.867480754852295
    5. '=True' → logprob: -3.242480754852295
    6. '<|end|>' → logprob: -3.492480754852295
    7. ')' → logprob: -3.867480754852295
    8. '=False' → logprob: -3.992480754852295
    9. ' in' → logprob: -4.367480754852295
    10. '=[]' → logprob: -4.867480754852295

Token 495: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 496: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.038825564086437225
    2. ' for' → logprob: -3.413825511932373
    3. 'for' → logprob: -5.288825511932373
    4. '<|end|>' → logprob: -9.788825988769531
    5. '	for' → logprob: -10.163825988769531
    6. '   ' → logprob: -11.663825988769531
    7. '```' → logprob: -12.663825988769531
    8. '           ' → logprob: -12.663825988769531
    9. '	       ' → logprob: -13.163825988769531
    10. '               ' → logprob: -13.538825988769531

Token 497: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.018176980316638947
    2. ' for' → logprob: -4.018177032470703
    3. '       ' → logprob: -10.768177032470703
    4. '	for' → logprob: -12.268177032470703
    5. '           ' → logprob: -14.268177032470703
    6. '```' → logprob: -15.018177032470703
    7. '   ' → logprob: -15.893177032470703
    8. '               ' → logprob: -16.018177032470703
    9. '<|end|>' → logprob: -16.143177032470703
    10. '	       ' → logprob: -18.268177032470703

Token 498: ' pos' (ID: 1253)
  Prédit: 'pos'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pos' → logprob: -0.2021915763616562
    2. 'idx' → logprob: -1.7021915912628174
    3. 'cell' → logprob: -7.827191352844238
    4. ' idx' → logprob: -8.702191352844238
    5. 'i' → logprob: -8.952191352844238
    6. ' pos' → logprob: -9.577191352844238
    7. 'p' → logprob: -11.702191352844238
    8. 'index' → logprob: -12.452191352844238
    9. 'c' → logprob: -13.952191352844238
    10. 'id' → logprob: -14.827191352844238

Token 499: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.038065701723098755
    2. 'in' → logprob: -3.2880656719207764
    3. '	in' → logprob: -11.413065910339355
    4. '<|end|>' → logprob: -12.163065910339355
    5. '_in' → logprob: -12.663065910339355
    6. '       ' → logprob: -14.413065910339355
    7. ',' → logprob: -14.413065910339355
    8. '   ' → logprob: -14.538065910339355
    9. 'In' → logprob: -14.538065910339355
    10. ',in' → logprob: -15.163065910339355

Token 500: ' covered' (ID: 13083)
  Prédit: 'covered'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'covered' → logprob: -2.935296834039036e-06
    2. ' covered' → logprob: -12.75000286102295
    3. 'cover' → logprob: -18.625003814697266
    4. 'changed' → logprob: -21.750003814697266
    5. 'coverage' → logprob: -21.875003814697266
    6. '-covered' → logprob: -21.875003814697266
    7. '   ' → logprob: -23.250003814697266
    8. 'Covered' → logprob: -23.500003814697266
    9. 'occupied' → logprob: -24.625003814697266
    10. 'range' → logprob: -24.750003814697266

Token 501: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2527810335159302
    2. ':' → logprob: -1.5027810335159302
    3. '):
' → logprob: -7.752780914306641
    4. '           ' → logprob: -8.37778091430664
    5. '=' → logprob: -9.75278091430664
    6. ',' → logprob: -10.12778091430664
    7. '       ' → logprob: -10.25278091430664
    8. '<|end|>' → logprob: -11.12778091430664
    9. ':
' → logprob: -11.75278091430664
    10. '):' → logprob: -11.87778091430664

Token 502: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04077627509832382
    2. ' new' → logprob: -3.540776252746582
    3. ' if' → logprob: -4.540776252746582
    4. '<|end|>' → logprob: -9.290776252746582
    5. 'new' → logprob: -9.915776252746582
    6. '```' → logprob: -10.415776252746582
    7. '       ' → logprob: -10.665776252746582
    8. '            
' → logprob: -11.040776252746582
    9. '               ' → logprob: -11.040776252746582
    10. '	       ' → logprob: -11.165776252746582

Token 503: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.910838782787323
    2. ' new' → logprob: -1.5358388423919678
    3. 'if' (adapté à ' if') → logprob: -1.7858388423919678
    4. 'new' → logprob: -2.0358388423919678
    5. '           ' → logprob: -2.5358388423919678
    6. '               ' → logprob: -5.285838603973389
    7. '```' → logprob: -10.410839080810547
    8. '   ' → logprob: -12.410839080810547
    9. '       ' → logprob: -12.785839080810547
    10. '                   ' → logprob: -13.160839080810547

Token 504: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.000984935206361115
    2. 'state' → logprob: -7.250985145568848
    3. ' new' → logprob: -8.375985145568848
    4. 'color' → logprob: -10.125985145568848
    5. '   ' → logprob: -13.625985145568848
    6. ' state' → logprob: -14.625985145568848
    7. '
' → logprob: -14.750985145568848
    8. '(new' → logprob: -14.875985145568848
    9. '```' → logprob: -15.000985145568848
    10. '	new' → logprob: -15.125985145568848

Token 505: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -9.817902173381299e-05
    2. 'state' → logprob: -9.25009822845459
    3. '_' → logprob: -14.87509822845459
    4. 'State' → logprob: -15.00009822845459
    5. '_states' → logprob: -15.37509822845459
    6. '_STATE' → logprob: -15.37509822845459
    7. '_st' → logprob: -16.250097274780273
    8. '_stat' → logprob: -16.375097274780273
    9. '_color' → logprob: -16.500097274780273
    10. ' state' → logprob: -16.625097274780273

Token 506: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -3.054500666621607e-06
    2. 'pos' → logprob: -13.62500286102295
    3. '```' → logprob: -14.12500286102295
    4. '[position' → logprob: -14.62500286102295
    5. '[' → logprob: -15.00000286102295
    6. ' [' → logprob: -16.250003814697266
    7. '!=' → logprob: -16.625003814697266
    8. '==' → logprob: -17.375003814697266
    9. '[
' → logprob: -17.625003814697266
    10. '\[' → logprob: -17.750003814697266

Token 507: ']!=' (ID: 85780)
  Prédit: ']!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']!=' → logprob: -0.14138635993003845
    2. '!=' → logprob: -2.1413862705230713
    3. ']' → logprob: -4.39138650894165
    4. ')!=' → logprob: -6.39138650894165
    5. ' !=' → logprob: -8.266386032104492
    6. ']==' → logprob: -11.391386032104492
    7. '```' → logprob: -12.141386032104492
    8. '()!=' → logprob: -12.266386032104492
    9. ']=' → logprob: -12.516386032104492
    10. ')' → logprob: -13.016386032104492

Token 508: 'color' (ID: 4991)
  Prédit: 'color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -2.935296834039036e-06
    2. ' color' → logprob: -12.75000286102295
    3. '=color' → logprob: -18.750003814697266
    4. '   ' → logprob: -19.375003814697266
    5. 'olor' → logprob: -20.000003814697266
    6. '	color' → logprob: -20.125003814697266
    7. '[color' → logprob: -21.000003814697266
    8. '           ' → logprob: -21.750003814697266
    9. 'Color' → logprob: -21.875003814697266
    10. 'icolor' → logprob: -22.000003814697266

Token 509: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.25068041682243347
    2. ':
' → logprob: -2.125680446624756
    3. ' and' → logprob: -2.625680446624756
    4. '               ' → logprob: -4.125680446624756
    5. '<|end|>' → logprob: -5.250680446624756
    6. 'and' → logprob: -5.875680446624756
    7. '           ' → logprob: -6.500680446624756
    8. ')' → logprob: -6.875680446624756
    9. '):
' → logprob: -7.000680446624756
    10. '):' → logprob: -7.625680446624756

Token 510: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014010717859491706
    2. ' new' → logprob: -7.001400947570801
    3. '           ' → logprob: -8.3764009475708
    4. 'new' → logprob: -8.5014009475708
    5. '                   ' → logprob: -10.2514009475708
    6. '              ' → logprob: -11.8764009475708
    7. '```' → logprob: -12.2514009475708
    8. '                
' → logprob: -13.1264009475708
    9. '             ' → logprob: -13.6264009475708
    10. '   ' → logprob: -13.7514009475708

Token 511: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.935483455657959
    2. 'new' (adapté à ' new') → logprob: -0.935483455657959
    3. '               ' → logprob: -2.060483455657959
    4. '                   ' → logprob: -2.435483455657959
    5. ' changed' → logprob: -9.435483932495117
    6. '           ' → logprob: -9.560483932495117
    7. 'changed' → logprob: -9.810483932495117
    8. '                       ' → logprob: -11.185483932495117
    9. '```' → logprob: -11.310483932495117
    10. '   ' → logprob: -11.560483932495117

Token 512: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -1.0280383548888494e-06
    2. 'state' → logprob: -14.250000953674316
    3. '_' → logprob: -15.750000953674316
    4. '_states' → logprob: -15.750000953674316
    5. '_code' → logprob: -17.125001907348633
    6. '```' → logprob: -17.125001907348633
    7. '_STATE' → logprob: -17.500001907348633
    8. 'State' → logprob: -18.750001907348633
    9. '   ' → logprob: -18.750001907348633
    10. '_State' → logprob: -19.125001907348633

Token 513: '[pos' (ID: 48272)
  Prédit: '[pos'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[pos' → logprob: -9.088346359931165e-07
    2. 'pos' → logprob: -14.625000953674316
    3. '=' → logprob: -15.625000953674316
    4. '[' → logprob: -16.125
    5. ' [' → logprob: -16.625
    6. '[
' → logprob: -16.875
    7. '```' → logprob: -17.5
    8. '
' → logprob: -18.25
    9. '[position' → logprob: -19.25
    10. ',pos' → logprob: -19.375

Token 514: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.09043280780315399
    2. '=color' → logprob: -2.96543288230896
    3. ']=' → logprob: -3.59043288230896
    4. ' =' → logprob: -5.215432643890381
    5. ')=' → logprob: -6.340432643890381
    6. ']' → logprob: -9.215433120727539
    7. ')' → logprob: -10.465433120727539
    8. '=new' → logprob: -12.215433120727539
    9. '']=' → logprob: -13.340433120727539
    10. '=
' → logprob: -13.590433120727539

Token 515: 'color' (ID: 4991)
  Prédit: 'color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -5.512236498361744e-07
    2. ' color' → logprob: -14.500000953674316
    3. '=color' → logprob: -23.25
    4. '	color' → logprob: -23.375
    5. '               ' → logprob: -23.625
    6. '.color' → logprob: -24.375
    7. '   ' → logprob: -24.5
    8. 'Color' → logprob: -24.625
    9. '[color' → logprob: -24.75
    10. '           ' → logprob: -24.875

Token 516: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002693224814720452
    2. '
' → logprob: -9.000268936157227
    3. ',' → logprob: -9.750268936157227
    4. '                   ' → logprob: -10.500268936157227
    5. '                
' → logprob: -10.750268936157227
    6. '           ' → logprob: -11.875268936157227
    7. '<|end|>' → logprob: -12.000268936157227
    8. '              ' → logprob: -12.250268936157227
    9. '                       ' → logprob: -12.250268936157227
    10. '                ' → logprob: -12.750268936157227

Token 517: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.1782583391759545e-05
    2. '                   ' → logprob: -11.750031471252441
    3. '
' → logprob: -11.875031471252441
    4. '       ' → logprob: -12.375031471252441
    5. '           ' → logprob: -12.875031471252441
    6. '                ' → logprob: -13.000031471252441
    7. '              ' → logprob: -13.125031471252441
    8. '                       ' → logprob: -13.250031471252441
    9. '                
' → logprob: -13.500031471252441
    10. '```' → logprob: -13.875031471252441

Token 518: ' changed' (ID: 9180)
  Prédit: 'changed'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'changed' (adapté à ' changed') → logprob: -0.0011729635298252106
    2. '               ' → logprob: -7.00117301940918
    3. ' changed' → logprob: -8.25117301940918
    4. '           ' → logprob: -15.25117301940918
    5. '                   ' → logprob: -16.62617301940918
    6. '```' → logprob: -17.12617301940918
    7. '       ' → logprob: -17.62617301940918
    8. '   ' → logprob: -18.00117301940918
    9. '
' → logprob: -18.12617301940918
    10. '.changed' → logprob: -18.25117301940918

Token 519: '=True' (ID: 7827)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10039418190717697
    2. '=True' → logprob: -2.3503942489624023
    3. ' =' → logprob: -8.600394248962402
    4. '=
' → logprob: -12.850394248962402
    5. '=False' → logprob: -14.600394248962402
    6. '_=' → logprob: -15.475394248962402
    7. '=true' → logprob: -16.100393295288086
    8. '           ' → logprob: -17.225393295288086
    9. '.=' → logprob: -17.725393295288086
    10. '=

' → logprob: -17.725393295288086

Token 520: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010461684316396713
    2. '
' → logprob: -5.135461807250977
    3. ' if' → logprob: -6.510461807250977
    4. '        
' → logprob: -6.635461807250977
    5. ' 
' → logprob: -6.635461807250977
    6. '<|end|>' → logprob: -8.760461807250977
    7. '  
' → logprob: -9.885461807250977
    8. '                
' → logprob: -10.010461807250977
    9. ')' → logprob: -10.385461807250977
    10. '    
' → logprob: -11.010461807250977

Token 521: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.018898174166679382
    2. ' if' → logprob: -4.018898010253906
    3. ')' → logprob: -7.768898010253906
    4. ' 
' → logprob: -9.518898010253906
    5. '        
' → logprob: -9.768898010253906
    6. '
' → logprob: -10.268898010253906
    7. '<|end|>' → logprob: -10.643898010253906
    8. 'if' → logprob: -10.768898010253906
    9. '```' → logprob: -11.018898010253906
    10. ' )' → logprob: -11.143898010253906

Token 522: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4006952941417694
    2. ' if' → logprob: -1.1506953239440918
    3. 'if' (adapté à ' if') → logprob: -4.400695323944092
    4. ')' → logprob: -6.775695323944092
    5. '<|end|>' → logprob: -9.275694847106934
    6. '	if' → logprob: -9.650694847106934
    7. ' new' → logprob: -9.775694847106934
    8. '+' → logprob: -11.400694847106934
    9. '```' → logprob: -11.650694847106934
    10. ',' → logprob: -11.650694847106934

Token 523: ' not' (ID: 625)
  Prédit: 'changed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'changed' → logprob: -0.2526649236679077
    2. ' changed' → logprob: -1.5026649236679077
    3. ' not' → logprob: -7.502665042877197
    4. 'not' → logprob: -8.752664566040039
    5. ' new' → logprob: -11.752664566040039
    6. '   ' → logprob: -11.752664566040039
    7. 'new' → logprob: -12.127664566040039
    8. ' ' → logprob: -13.252664566040039
    9. '_changed' → logprob: -14.252664566040039
    10. '.changed' → logprob: -14.377664566040039

Token 524: ' changed' (ID: 9180)
  Prédit: 'changed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'changed' → logprob: -0.06196802109479904
    2. ' changed' → logprob: -2.8119680881500244
    3. '.changed' → logprob: -16.311967849731445
    4. 'ch' → logprob: -16.436967849731445
    5. '_changed' → logprob: -16.436967849731445
    6. '   ' → logprob: -16.936967849731445
    7. ' ' → logprob: -17.436967849731445
    8. 'change' → logprob: -17.811967849731445
    9. 'Changed' → logprob: -18.061967849731445
    10. 'not' → logprob: -18.686967849731445

Token 525: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3327045142650604
    2. '           ' → logprob: -1.4577045440673828
    3. ':
' → logprob: -3.457704544067383
    4. 'continue' → logprob: -4.332704544067383
    5. ' continue' → logprob: -5.582704544067383
    6. '       ' → logprob: -6.957704544067383
    7. '	continue' → logprob: -7.457704544067383
    8. '_continue' → logprob: -8.832704544067383
    9. '   ' → logprob: -9.707704544067383
    10. '               ' → logprob: -10.082704544067383

Token 526: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.049626998603343964
    2. ' continue' → logprob: -3.1746270656585693
    3. 'continue' → logprob: -5.04962682723999
    4. '	continue' → logprob: -9.174627304077148
    5. '	       ' → logprob: -10.424627304077148
    6. '		' → logprob: -10.549627304077148
    7. '_continue' → logprob: -11.174627304077148
    8. '```' → logprob: -11.799627304077148
    9. '   ' → logprob: -12.174627304077148
    10. '               ' → logprob: -12.924627304077148

Token 527: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.06433531641960144
    2. '           ' → logprob: -2.814335346221924
    3. ' continue' → logprob: -6.064335346221924
    4. '               ' → logprob: -10.939334869384766
    5. '	continue' → logprob: -10.939334869384766
    6. '```' → logprob: -13.189334869384766
    7. '   ' → logprob: -13.814334869384766
    8. '_continue' → logprob: -14.064334869384766
    9. 'contin' → logprob: -14.439334869384766
    10. 'continu' → logprob: -14.939334869384766

Token 528: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.024710798636078835
    2. '<|end|>' → logprob: -4.524710655212402
    3. ' new' → logprob: -5.149710655212402
    4. '        
' → logprob: -5.399710655212402
    5. ',' → logprob: -6.774710655212402
    6. ')' → logprob: -7.274710655212402
    7. '
' → logprob: -7.524710655212402
    8. 'new' → logprob: -8.774710655212402
    9. ' ' → logprob: -9.274710655212402
    10. ' 
' → logprob: -9.399710655212402

Token 529: '       ' (ID: 309)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.3218468427658081
    2. '       ' → logprob: -1.321846842765808
    3. 'new' → logprob: -5.196846961975098
    4. '        
' → logprob: -6.571846961975098
    5. '	new' → logprob: -8.571846961975098
    6. '<|end|>' → logprob: -8.946846961975098
    7. ' next' → logprob: -9.321846961975098
    8. ')' → logprob: -9.321846961975098
    9. ' 
' → logprob: -9.321846961975098
    10. ' nxt' → logprob: -9.446846961975098

Token 530: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.0011347393738105893
    2. ' new' → logprob: -7.001134872436523
    3. 'ns' → logprob: -8.501134872436523
    4. 'next' → logprob: -12.126134872436523
    5. '       ' → logprob: -13.001134872436523
    6. 'nt' → logprob: -13.001134872436523
    7. 'n' → logprob: -13.376134872436523
    8. 't' → logprob: -13.376134872436523
    9. '        
' → logprob: -13.376134872436523
    10. '
' → logprob: -13.626134872436523

Token 531: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0002991160727106035
    2. 'state' → logprob: -8.125299453735352
    3. '_tuple' → logprob: -13.000299453735352
    4. 'tuple' → logprob: -15.125299453735352
    5. '_states' → logprob: -16.12529945373535
    6. '_t' → logprob: -16.75029945373535
    7. '=' → logprob: -17.00029945373535
    8. '_pos' → logprob: -17.12529945373535
    9. 't' → logprob: -17.37529945373535
    10. '_' → logprob: -17.37529945373535

Token 532: '_t' (ID: 838)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0004820313479285687
    2. ' =' → logprob: -8.250481605529785
    3. '_tuple' → logprob: -8.625481605529785
    4. 'tuple' → logprob: -10.250481605529785
    5. 't' → logprob: -13.000481605529785
    6. '_t' → logprob: -13.000481605529785
    7. '=t' → logprob: -14.500481605529785
    8. '_tpl' → logprob: -16.0004825592041
    9. '_state' → logprob: -16.1254825592041
    10. '=(' → logprob: -16.2504825592041

Token 533: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006912868469953537
    2. 'uple' → logprob: -5.006912708282471
    3. ' =' → logprob: -8.631913185119629
    4. 'up' → logprob: -11.506913185119629
    5. '=_' → logprob: -13.006913185119629
    6. '=(' → logprob: -13.506913185119629
    7. '=('' → logprob: -13.756913185119629
    8. 'upl' → logprob: -14.631913185119629
    9. '=new' → logprob: -14.881913185119629
    10. '=s' → logprob: -14.881913185119629

Token 534: 'tuple' (ID: 52834)
  Prédit: 'tuple'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tuple' → logprob: -2.816093228830141e-06
    2. ' tuple' → logprob: -13.00000286102295
    3. 'tu' → logprob: -14.75000286102295
    4. '(tuple' → logprob: -17.375001907348633
    5. 't' → logprob: -19.000001907348633
    6. '_tuple' → logprob: -20.375001907348633
    7. 'uple' → logprob: -20.625001907348633
    8. '```' → logprob: -22.250001907348633
    9. 'Tuple' → logprob: -22.500001907348633
    10. 'tpl' → logprob: -22.625001907348633

Token 535: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -3.054500666621607e-06
    2. 'new' → logprob: -12.75000286102295
    3. '[new' → logprob: -16.000003814697266
    4. ')new' → logprob: -18.875003814697266
    5. '=new' → logprob: -19.125003814697266
    6. ',new' → logprob: -21.000003814697266
    7. '(list' → logprob: -21.250003814697266
    8. '$new' → logprob: -22.000003814697266
    9. '(New' → logprob: -22.125003814697266
    10. '(sorted' → logprob: -22.750003814697266

Token 536: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0001261845463886857
    2. 'state' → logprob: -9.000125885009766
    3. '(new' → logprob: -14.125125885009766
    4. 'new' → logprob: -14.500125885009766
    5. 'State' → logprob: -14.875125885009766
    6. '(state' → logprob: -15.000125885009766
    7. ')' → logprob: -15.125125885009766
    8. '-state' → logprob: -15.375125885009766
    9. ' state' → logprob: -16.000125885009766
    10. '_STATE' → logprob: -16.625125885009766

Token 537: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.023249903693795204
    2. ')
' → logprob: -3.773249864578247
    3. ')
' → logprob: -12.398249626159668
    4. ')

' → logprob: -16.648250579833984
    5. ' )' → logprob: -16.898250579833984
    6. ')`
' → logprob: -17.273250579833984
    7. '),' → logprob: -17.398250579833984
    8. ')`' → logprob: -17.898250579833984
    9. ')return' → logprob: -18.023250579833984
    10. '   ' → logprob: -18.148250579833984

Token 538: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07132093608379364
    2. 'if' → logprob: -2.8213210105895996
    3. ' if' → logprob: -4.6963210105896
    4. '```' → logprob: -9.071320533752441
    5. '<|end|>' → logprob: -10.821320533752441
    6. 'visited' → logprob: -10.946320533752441
    7. ')' → logprob: -11.946320533752441
    8. '	if' → logprob: -12.071320533752441
    9. '   ' → logprob: -12.196320533752441
    10. '           ' → logprob: -12.321320533752441

Token 539: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0005896099028177559
    2. ' if' → logprob: -7.750589847564697
    3. '       ' → logprob: -8.750589370727539
    4. '	if' → logprob: -15.250589370727539
    5. 'If' → logprob: -16.50058937072754
    6. '```' → logprob: -16.50058937072754
    7. '   ' → logprob: -16.87558937072754
    8. '           ' → logprob: -16.87558937072754
    9. '        
' → logprob: -17.87558937072754
    10. '
' → logprob: -19.00058937072754

Token 540: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.47407716512680054
    2. ' new' → logprob: -0.9740771651268005
    3. 'New' → logprob: -17.099077224731445
    4. '_new' → logprob: -17.099077224731445
    5. '	new' → logprob: -17.474077224731445
    6. '(new' → logprob: -17.849077224731445
    7. 'not' → logprob: -17.974077224731445
    8. '[new' → logprob: -17.974077224731445
    9. ')new' → logprob: -18.099077224731445
    10. '$new' → logprob: -18.724077224731445

Token 541: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -7.052377623040229e-05
    2. 'state' → logprob: -9.625070571899414
    3. 'new' → logprob: -13.750070571899414
    4. 't' → logprob: -14.000070571899414
    5. '_STATE' → logprob: -14.125070571899414
    6. 'State' → logprob: -15.125070571899414
    7. 'st' → logprob: -15.375070571899414
    8. '_' → logprob: -15.375070571899414
    9. '_states' → logprob: -15.625070571899414
    10. 'e' → logprob: -16.000070571899414

Token 542: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -3.5120287066092715e-05
    2. 't' → logprob: -10.375035285949707
    3. 'not' → logprob: -13.500035285949707
    4. '_not' → logprob: -14.125035285949707
    5. ' not' → logprob: -14.500035285949707
    6. ')' → logprob: -15.125035285949707
    7. '```' → logprob: -15.500035285949707
    8. '_new' → logprob: -15.750035285949707
    9. '_' → logprob: -16.25003433227539
    10. ')_' → logprob: -16.37503433227539

Token 543: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.029751179739832878
    2. 'not' → logprob: -3.5297510623931885
    3. '	not' → logprob: -14.77975082397461
    4. ' in' → logprob: -15.65475082397461
    5. 'in' → logprob: -16.52975082397461
    6. ')' → logprob: -16.65475082397461
    7. '_not' → logprob: -17.40475082397461
    8. ':not' → logprob: -17.77975082397461
    9. '<|end|>' → logprob: -18.02975082397461
    10. ']' → logprob: -19.40475082397461

Token 544: ' in' (ID: 306)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.12028070539236069
    2. ' in' → logprob: -2.3702807426452637
    3. ' visited' → logprob: -4.245280742645264
    4. 'in' → logprob: -5.620280742645264
    5. ':' → logprob: -7.245280742645264
    6. '   ' → logprob: -7.995280742645264
    7. '       ' → logprob: -8.495280265808105
    8. '```' → logprob: -8.870280265808105
    9. '[' → logprob: -9.370280265808105
    10. '           ' → logprob: -9.370280265808105

Token 545: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -5.512236498361744e-07
    2. ' visited' → logprob: -14.500000953674316
    3. '
' → logprob: -19.5
    4. '```' → logprob: -22.875
    5. 'visit' → logprob: -24.125
    6. 'seen' → logprob: -24.625
    7. 'visitor' → logprob: -24.875
    8. 'visible' → logprob: -25.125
    9. 'Visited' → logprob: -26.0
    10. '   ' → logprob: -26.375

Token 546: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009014558047056198
    2. ':
' → logprob: -4.75901460647583
    3. '=' → logprob: -8.634014129638672
    4. '):' → logprob: -9.509014129638672
    5. '):
' → logprob: -10.259014129638672
    6. ']' → logprob: -10.759014129638672
    7. ']:' → logprob: -11.009014129638672
    8. '           ' → logprob: -11.134014129638672
    9. '[' → logprob: -11.134014129638672
    10. ')' → logprob: -11.384014129638672

Token 547: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0003709701995830983
    2. 'visited' → logprob: -8.625370979309082
    3. ' visited' → logprob: -9.375370979309082
    4. '```' → logprob: -9.875370979309082
    5. '               ' → logprob: -10.250370979309082
    6. '	       ' → logprob: -11.625370979309082
    7. '<|end|>' → logprob: -11.875370979309082
    8. '       ' → logprob: -14.125370979309082
    9. '		' → logprob: -14.875370979309082
    10. ',' → logprob: -14.875370979309082

Token 548: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.04409833997488022
    2. '               ' → logprob: -3.294098377227783
    3. ' visited' → logprob: -5.294098377227783
    4. '           ' → logprob: -6.919098377227783
    5. '```' → logprob: -10.544097900390625
    6. '   ' → logprob: -14.294097900390625
    7. '                   ' → logprob: -14.294097900390625
    8. '``' → logprob: -14.794097900390625
    9. 'visit' → logprob: -15.294097900390625
    10. '       ' → logprob: -15.794097900390625

Token 549: '[new' (ID: 89436)
  Prédit: '[new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[new' → logprob: 0.0
    2. 'new' → logprob: -17.25
    3. '[state' → logprob: -18.125
    4. '=new' → logprob: -18.375
    5. '[' → logprob: -19.125
    6. '\[' → logprob: -19.875
    7. '```' → logprob: -21.5
    8. '[next' → logprob: -21.625
    9. ' new' → logprob: -22.125
    10. ')new' → logprob: -22.875

Token 550: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.0008581006550230086
    2. 'state' → logprob: -7.250858306884766
    3. '_t' → logprob: -9.000858306884766
    4. 't' → logprob: -11.375858306884766
    5. 'new' → logprob: -12.375858306884766
    6. '[new' → logprob: -13.000858306884766
    7. 'State' → logprob: -13.875858306884766
    8. '-state' → logprob: -13.875858306884766
    9. ' state' → logprob: -14.375858306884766
    10. '_new' → logprob: -14.375858306884766

Token 551: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.00881050806492567
    2. '[new' → logprob: -4.758810520172119
    3. 't' → logprob: -8.758810043334961
    4. 'new' → logprob: -11.508810043334961
    5. '[state' → logprob: -11.508810043334961
    6. '=new' → logprob: -12.633810043334961
    7. '_state' → logprob: -12.883810043334961
    8. '=' → logprob: -13.008810043334961
    9. '```' → logprob: -13.258810043334961
    10. '[' → logprob: -13.508810043334961

Token 552: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.13669292628765106
    2. ']' → logprob: -2.136693000793457
    3. '=' → logprob: -4.636693000793457
    4. ' ]' → logprob: -11.011693000793457
    5. ' =' → logprob: -11.761693000793457
    6. ')=' → logprob: -13.511693000793457
    7. ']=(' → logprob: -14.386693000793457
    8. '']=' → logprob: -14.511693000793457
    9. '"]=' → logprob: -15.386693000793457
    10. ']={' → logprob: -15.886693000793457

Token 553: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -4.320199877838604e-07
    2. ' dist' → logprob: -14.75
    3. '   ' → logprob: -21.0
    4. 'd' → logprob: -21.0
    5. '	dist' → logprob: -21.625
    6. '(dist' → logprob: -23.375
    7. 'Dist' → logprob: -23.625
    8. '_dist' → logprob: -24.125
    9. '.dist' → logprob: -25.375
    10. 'dis' → logprob: -25.75

Token 554: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.611323624383658e-05
    2. ' +' → logprob: -9.625065803527832
    3. '1' → logprob: -17.75006675720215
    4. '＋' → logprob: -18.25006675720215
    5. '()+' → logprob: -19.37506675720215
    6. '+[' → logprob: -19.50006675720215
    7. '```' → logprob: -20.00006675720215
    8. '+
' → logprob: -20.12506675720215
    9. ']+' → logprob: -20.87506675720215
    10. '   ' → logprob: -22.00006675720215

Token 555: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.25
    3. '```' → logprob: -18.5
    4. '<|end|>' → logprob: -20.125
    5. '   ' → logprob: -21.25
    6. '
' → logprob: -22.125
    7. 'from' → logprob: -22.5
    8. '-' → logprob: -22.5
    9. '+' → logprob: -22.75
    10. '=' → logprob: -22.75

Token 556: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.11377100646495819
    2. 'q' → logprob: -2.2387709617614746
    3. ' q' → logprob: -7.363770961761475
    4. '	q' → logprob: -8.863771438598633
    5. '		' → logprob: -9.488771438598633
    6. ',q' → logprob: -9.738771438598633
    7. '               ' → logprob: -11.363771438598633
    8. '          ' → logprob: -11.988771438598633
    9. '	       ' → logprob: -12.488771438598633
    10. '       ' → logprob: -12.863771438598633

Token 557: '           ' (ID: 352)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -0.12791849672794342
    2. '           ' → logprob: -2.1279184818267822
    3. '	q' → logprob: -7.752918720245361
    4. ' q' → logprob: -8.127918243408203
    5. '		' → logprob: -8.377918243408203
    6. '	       ' → logprob: -11.252918243408203
    7. '   ' → logprob: -11.752918243408203
    8. '		   ' → logprob: -12.877918243408203
    9. '               ' → logprob: -13.002918243408203
    10. '       ' → logprob: -13.252918243408203

Token 558: ' q' (ID: 2335)
  Prédit: 'q'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' (adapté à ' q') → logprob: 0.0
    2. ' q' → logprob: -18.5
    3. '	q' → logprob: -20.375
    4. '           ' → logprob: -22.125
    5. '
' → logprob: -22.75
    6. 'deque' → logprob: -23.125
    7. '.q' → logprob: -23.125
    8. '_q' → logprob: -23.375
    9. '```' → logprob: -23.75
    10. ''q' → logprob: -24.125

Token 559: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -5.3358446166384965e-05
    2. '.extend' → logprob: -10.250053405761719
    3. '.' → logprob: -11.750053405761719
    4. '.q' → logprob: -12.250053405761719
    5. '.enqueue' → logprob: -13.375053405761719
    6. '.put' → logprob: -13.750053405761719
    7. '.push' → logprob: -14.125053405761719
    8. '.Append' → logprob: -14.500053405761719
    9. '.add' → logprob: -15.000053405761719
    10. '.p' → logprob: -15.375053405761719

Token 560: '(new' (ID: 2648)
  Prédit: '(new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(new' → logprob: -3.128163257315464e-07
    2. 'new' → logprob: -15.125
    3. '(' → logprob: -18.625
    4. ' new' → logprob: -20.25
    5. ')new' → logprob: -20.75
    6. ',new' → logprob: -21.125
    7. '=new' → logprob: -21.25
    8. ' (' → logprob: -21.875
    9. '[new' → logprob: -22.0
    10. '((' → logprob: -22.5

Token 561: '_state' (ID: 9479)
  Prédit: '_state'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_state' → logprob: -0.014865734614431858
    2. 'state' → logprob: -4.264865875244141
    3. 'new' → logprob: -7.264865875244141
    4. 'State' → logprob: -14.38986587524414
    5. '_new' → logprob: -14.51486587524414
    6. 'ew' → logprob: -14.76486587524414
    7. ' state' → logprob: -15.26486587524414
    8. '-state' → logprob: -16.01486587524414
    9. '(new' → logprob: -16.01486587524414
    10. 'w' → logprob: -16.38986587524414

Token 562: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.0025443932972848415
    2. 'new' → logprob: -6.377544403076172
    3. '(new' → logprob: -7.627544403076172
    4. 't' → logprob: -8.877544403076172
    5. '_new' → logprob: -9.502544403076172
    6. '[new' → logprob: -9.502544403076172
    7. ' new' → logprob: -10.502544403076172
    8. ')' → logprob: -10.752544403076172
    9. ')new' → logprob: -11.627544403076172
    10. ')_' → logprob: -13.002544403076172

Token 563: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6240566083070007e-06
    2. ')new' → logprob: -14.125001907348633
    3. ' )' → logprob: -14.250001907348633
    4. ')
' → logprob: -15.625001907348633
    5. ')return' → logprob: -17.000001907348633
    6. '))' → logprob: -17.750001907348633
    7. ')`' → logprob: -19.125001907348633
    8. 'new' → logprob: -19.500001907348633
    9. '),' → logprob: -19.875001907348633
    10. ')add' → logprob: -20.125001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 561
Tokens correctement prédits (1ère position, stricte): 214
Tokens correctement prédits (1ère position, avec adaptation): 233
Tokens correctement prédits (top 10): 406
Précision stricte (1ère position): 38.15%
Précision adaptée (1ère position): 41.53%
Précision (top 10): 72.37%
================================================================================
