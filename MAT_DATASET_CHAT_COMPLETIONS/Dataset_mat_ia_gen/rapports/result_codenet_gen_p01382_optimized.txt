================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:41
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

N = int(input())
a = sorted((int(input()) for _ in range(N)), reverse=True)

def can_make_triangle(x, y, z):
    return x < y + z

perimeters = []
for i in range(N - 2):
    if can_make_triangle(a[i], a[i+1], a[i+2]):
        perimeters.append(a[i] + a[i+1] + a[i+2])
        i += 2
        if len(perimeters) == 2:
            break

res = 0
if len(perimeters) >= 2:
    res = perimeters[0] + perimeters[1]
else:
    # Try to find two triangles from non-overlapping sticks greedily
    # Since we used overlapping indices above, try another approach:
    sticks = a[:]
    triangles = []
    i = 0
    while i + 2 < len(sticks):
        if can_make_triangle(sticks[i], sticks[i+1], sticks[i+2]):
            triangles.append(sticks[i] + sticks[i+1] + sticks[i+2])
            del sticks[i:i+3]
            if len(triangles) == 2:
                break
            i = 0
        else:
            i += 1
    if len(triangles) == 2:
        res = max(res, triangles[0] + triangles[1])

print(res)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3437388837337494
    2. '.' → logprob: -1.5937389135360718
    3. '<|end|>' → logprob: -2.9687387943267822
    4. '\' → logprob: -4.468739032745361
    5. 'import' → logprob: -5.093739032745361
    6. 'newline' → logprob: -5.093739032745361
    7. '<|end|>' → logprob: -5.968739032745361
    8. '' → logprob: -5.968739032745361
    9. '\r' → logprob: -6.093739032745361
    10. '
' → logprob: -6.343739032745361

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002731290180236101
    2. '.' → logprob: -6.0027313232421875
    3. '(
' → logprob: -8.752731323242188
    4. ' (' → logprob: -11.002731323242188
    5. '('' → logprob: -11.502731323242188
    6. '(

' → logprob: -11.627731323242188
    7. ')' → logprob: -11.627731323242188
    8. ''' → logprob: -11.627731323242188
    9. '()' → logprob: -11.752731323242188
    10. '=' → logprob: -12.252731323242188

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.47524625062942505
    2. 'sys' → logprob: -0.975246250629425
    3. 'input' → logprob: -6.975246429443359
    4. ' input' → logprob: -8.47524642944336
    5. '(sys' → logprob: -11.35024642944336
    6. '=sys' → logprob: -11.97524642944336
    7. '	sys' → logprob: -12.10024642944336
    8. ' ' → logprob: -14.10024642944336
    9. 'system' → logprob: -15.47524642944336
    10. '_sys' → logprob: -15.72524642944336

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00011689399980241433
    2. '.readline' → logprob: -10.625117301940918
    3. '.`' → logprob: -11.000117301940918
    4. '.import' → logprob: -11.000117301940918
    5. '.stdin' → logprob: -11.250117301940918
    6. ' .' → logprob: -11.625117301940918
    7. '.input' → logprob: -12.625117301940918
    8. '[' → logprob: -12.750117301940918
    9. '.)' → logprob: -13.000117301940918
    10. '.
' → logprob: -13.000117301940918

Token 7: '.readline' (ID: 74673)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.49064239859580994
    2. '.readline' → logprob: -0.9906424283981323
    3. '.read' → logprob: -4.115642547607422
    4. '```' → logprob: -10.615642547607422
    5. '.readlines' → logprob: -10.865642547607422
    6. 'read' → logprob: -10.990642547607422
    7. '.Read' → logprob: -11.115642547607422
    8. ' .' → logprob: -12.240642547607422
    9. ')' → logprob: -12.490642547607422
    10. '.write' → logprob: -12.615642547607422

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.1419765055179596
    2. '(' → logprob: -2.2669765949249268
    3. '()
' → logprob: -4.266976356506348
    4. '(
' → logprob: -4.766976356506348
    5. '().' → logprob: -6.516976356506348
    6. '
' → logprob: -6.516976356506348
    7. '()\' → logprob: -7.016976356506348
    8. '()

' → logprob: -7.391976356506348
    9. '\' → logprob: -7.516976356506348
    10. '\n' → logprob: -7.641976356506348

Token 9: 'N' (ID: 45)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.18130090832710266
    2. '(' → logprob: -1.8063008785247803
    3. '().' → logprob: -6.806301116943359
    4. '()
' → logprob: -8.80630111694336
    5. '(
' → logprob: -10.05630111694336
    6. '()

' → logprob: -10.30630111694336
    7. ')' → logprob: -10.43130111694336
    8. '#' → logprob: -10.43130111694336
    9. 'def' → logprob: -10.68130111694336
    10. 'a' → logprob: -10.68130111694336

Token 10: ' =' (ID: 314)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.871807873249054
    2. ')' → logprob: -1.4968078136444092
    3. ' =' → logprob: -1.8718078136444092
    4. '=' → logprob: -1.8718078136444092
    5. '[' → logprob: -4.496808052062988
    6. '>' → logprob: -4.996808052062988
    7. ' )' → logprob: -5.121808052062988
    8. '.' → logprob: -5.371808052062988
    9. '<|end|>' → logprob: -5.621808052062988
    10. '+' → logprob: -5.996808052062988

Token 11: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.048717040568590164
    2. 'int' → logprob: -3.0487170219421387
    3. ' ' → logprob: -9.298717498779297
    4. ' input' → logprob: -10.548717498779297
    5. 'input' → logprob: -11.548717498779297
    6. '=int' → logprob: -13.673717498779297
    7. '<int' → logprob: -15.298717498779297
    8. '(int' → logprob: -15.548717498779297
    9. '  ' → logprob: -15.923717498779297
    10. '0' → logprob: -16.298717498779297

Token 12: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.002108863089233637
    2. '(input' → logprob: -6.377109050750732
    3. '(N' → logprob: -8.252108573913574
    4. '('' → logprob: -10.002108573913574
    5. ' (' → logprob: -10.127108573913574
    6. '()' → logprob: -10.252108573913574
    7. '(
' → logprob: -12.002108573913574
    8. '(`' → logprob: -12.877108573913574
    9. '(int' → logprob: -13.002108573913574
    10. '(sys' → logprob: -13.252108573913574

Token 13: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.4129841923713684
    2. ')' → logprob: -1.1629841327667236
    3. '()' → logprob: -3.6629841327667236
    4. '(' → logprob: -9.662983894348145
    5. '))' → logprob: -11.037983894348145
    6. '())
' → logprob: -11.537983894348145
    7. ' ())' → logprob: -12.162983894348145
    8. '`)' → logprob: -12.287983894348145
    9. '()))' → logprob: -12.412983894348145
    10. '().' → logprob: -12.787983894348145

Token 14: 'a' (ID: 64)
  Prédit: 'data'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'data' → logprob: -0.9355887174606323
    2. 'for' → logprob: -0.9355887174606323
    3. 'a' → logprob: -3.560588836669922
    4. 'result' → logprob: -3.685588836669922
    5. '\n' → logprob: -3.685588836669922
    6. 'arr' → logprob: -4.060588836669922
    7. ')' → logprob: -4.060588836669922
    8. 'if' → logprob: -4.310588836669922
    9. 'array' → logprob: -4.435588836669922
    10. '\' → logprob: -4.810588836669922

Token 15: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -0.09491419792175293
    2. 'rray' → logprob: -2.969914197921753
    3. 'rr' → logprob: -4.219914436340332
    4. 'r' → logprob: -4.844914436340332
    5. '[i' → logprob: -6.094914436340332
    6. '[a' → logprob: -6.094914436340332
    7. '[:]' → logprob: -6.219914436340332
    8. 'a' → logprob: -6.594914436340332
    9. '[]' → logprob: -6.719914436340332
    10. 's' → logprob: -6.719914436340332

Token 16: ' sorted' (ID: 20099)
  Prédit: ' list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' list' → logprob: -0.06704024970531464
    2. 'list' → logprob: -2.817040205001831
    3. ' []' → logprob: -5.69204044342041
    4. ' [' → logprob: -6.94204044342041
    5. '[]' → logprob: -7.94204044342041
    6. '[int' → logprob: -9.19204044342041
    7. ' input' → logprob: -9.56704044342041
    8. '[' → logprob: -9.69204044342041
    9. ' ' → logprob: -10.31704044342041
    10. 'input' → logprob: -10.44204044342041

Token 17: '((' (ID: 2054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.003944824915379286
    2. '(a' → logprob: -5.6289448738098145
    3. '(input' → logprob: -9.003944396972656
    4. '(list' → logprob: -9.753944396972656
    5. '(N' → logprob: -10.003944396972656
    6. '((' → logprob: -10.378944396972656
    7. '(int' → logprob: -11.503944396972656
    8. '(s' → logprob: -12.128944396972656
    9. '(
' → logprob: -12.128944396972656
    10. '([' → logprob: -12.128944396972656

Token 18: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.14773717522621155
    2. 'map' → logprob: -2.1477372646331787
    3. '(int' → logprob: -4.3977370262146
    4. 'list' → logprob: -5.6477370262146
    5. 'input' → logprob: -6.3977370262146
    6. '[int' → logprob: -6.6477370262146
    7. '(map' → logprob: -7.3977370262146
    8. ' map' → logprob: -7.6477370262146
    9. ' int' → logprob: -7.8977370262146
    10. ',int' → logprob: -8.647737503051758

Token 19: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0047242953442037106
    2. '(x' → logprob: -5.629724502563477
    3. 'input' → logprob: -7.254724502563477
    4. '(' → logprob: -8.504724502563477
    5. ')' → logprob: -9.254724502563477
    6. '(i' → logprob: -9.629724502563477
    7. 'x' → logprob: -11.004724502563477
    8. '(sys' → logprob: -11.879724502563477
    9. '()' → logprob: -12.129724502563477
    10. '(a' → logprob: -12.379724502563477

Token 20: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.02165541797876358
    2. '()),' → logprob: -3.896655321121216
    3. '()' → logprob: -7.646655559539795
    4. '()))' → logprob: -7.646655559539795
    5. ')' → logprob: -9.771655082702637
    6. '())))' → logprob: -9.771655082702637
    7. '().' → logprob: -10.646655082702637
    8. '())
' → logprob: -11.521655082702637
    9. '(),' → logprob: -12.271655082702637
    10. '),' → logprob: -13.896655082702637

Token 21: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0942946672439575
    2. ')' → logprob: -1.3442946672439575
    3. 'for' → logprob: -1.3442946672439575
    4. ',' → logprob: -1.9692946672439575
    5. '))' → logprob: -6.469294548034668
    6. '),' → logprob: -6.594294548034668
    7. ',)' → logprob: -7.969294548034668
    8. ' ,' → logprob: -8.219294548034668
    9. ' ' → logprob: -8.219294548034668
    10. '()' → logprob: -8.969294548034668

Token 22: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.03100639022886753
    2. ' _' → logprob: -3.531006336212158
    3. ' range' → logprob: -7.156006336212158
    4. ' in' → logprob: -8.031006813049316
    5. ' ' → logprob: -9.281006813049316
    6. ' i' → logprob: -10.781006813049316
    7. '_range' → logprob: -10.781006813049316
    8. ' ' → logprob: -12.406006813049316
    9. '_i' → logprob: -12.781006813049316
    10. 'range' → logprob: -13.031006813049316

Token 23: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03826548159122467
    2. 'in' → logprob: -3.2882654666900635
    3. ' ' → logprob: -8.788265228271484
    4. 'range' → logprob: -9.913265228271484
    5. 'import' → logprob: -12.288265228271484
    6. ' range' → logprob: -12.413265228271484
    7. ' _' → logprob: -13.163265228271484
    8. '_' → logprob: -13.413265228271484
    9. 'a' → logprob: -13.538265228271484
    10. ',' → logprob: -13.538265228271484

Token 24: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00026169343618676066
    2. ' range' → logprob: -8.250261306762695
    3. 'a' → logprob: -16.375261306762695
    4. '	range' → logprob: -16.375261306762695
    5. ' ' → logprob: -16.500261306762695
    6. '   ' → logprob: -17.000261306762695
    7. '(range' → logprob: -17.250261306762695
    8. '  ' → logprob: -17.500261306762695
    9. '.range' → logprob: -18.125261306762695
    10. ')' → logprob: -18.375261306762695

Token 25: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -8.828512363834307e-05
    2. '(' → logprob: -9.500088691711426
    3. 'N' → logprob: -11.375088691711426
    4. '(n' → logprob: -13.375088691711426
    5. '(
' → logprob: -15.500088691711426
    6. ')' → logprob: -16.62508773803711
    7. ' (' → logprob: -17.87508773803711
    8. ' N' → logprob: -18.00008773803711
    9. '(

' → logprob: -18.62508773803711
    10. '	N' → logprob: -18.75008773803711

Token 26: ')),' (ID: 12098)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2987605929374695
    2. ')))' → logprob: -1.7987606525421143
    3. ')' → logprob: -2.5487606525421143
    4. '),' → logprob: -4.548760414123535
    5. ')),' → logprob: -5.548760414123535
    6. '))))' → logprob: -10.673760414123535
    7. '))),' → logprob: -11.173760414123535
    8. ' ' → logprob: -11.298760414123535
    9. '))
' → logprob: -11.423760414123535
    10. ')));' → logprob: -11.798760414123535

Token 27: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.025618573650717735
    2. ')' → logprob: -4.400618553161621
    3. ' reverse' → logprob: -4.525618553161621
    4. 'key' → logprob: -6.275618553161621
    5. ' key' → logprob: -8.275618553161621
    6. '))' → logprob: -10.900618553161621
    7. ' )' → logprob: -11.525618553161621
    8. ' ' → logprob: -11.525618553161621
    9. '(reverse' → logprob: -12.025618553161621
    10. '()' → logprob: -12.525618553161621

Token 28: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.0078006223775446415
    2. '=' → logprob: -4.882800579071045
    3. ')' → logprob: -8.632801055908203
    4. '=False' → logprob: -11.632801055908203
    5. ')=' → logprob: -12.757801055908203
    6. ',' → logprob: -13.632801055908203
    7. '(True' → logprob: -14.007801055908203
    8. '),' → logprob: -14.257801055908203
    9. ',)' → logprob: -14.382801055908203
    10. '))' → logprob: -14.882801055908203

Token 29: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.200166469876422e-06
    2. '))' → logprob: -13.125004768371582
    3. ')
' → logprob: -13.625004768371582
    4. ')a' → logprob: -13.875004768371582
    5. '`)' → logprob: -15.375004768371582
    6. ' )' → logprob: -15.500004768371582
    7. '[' → logprob: -15.875004768371582
    8. ')`' → logprob: -16.2500057220459
    9. '),' → logprob: -17.0000057220459
    10. ')b' → logprob: -17.1250057220459

Token 30: 'def' (ID: 1314)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4142846465110779
    2. '\n' → logprob: -1.1642847061157227
    3. ')' → logprob: -5.039284706115723
    4. 'for' → logprob: -5.164284706115723
    5. ' 
' → logprob: -6.039284706115723
    6. 'a' → logprob: -6.289284706115723
    7. '[' → logprob: -6.289284706115723
    8. '\' → logprob: -6.664284706115723
    9. 'if' → logprob: -7.164284706115723
    10. '<|end|>' → logprob: -7.289284706115723

Token 31: ' can' (ID: 665)
  Prédit: ' binary'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' binary' → logprob: -0.1856839954853058
    2. ' find' → logprob: -2.6856839656829834
    3. ' solve' → logprob: -3.4356839656829834
    4. ' max' → logprob: -3.8106839656829834
    5. ' solution' → logprob: -4.8106842041015625
    6. ' count' → logprob: -4.9356842041015625
    7. 'binary' → logprob: -5.0606842041015625
    8. ' two' → logprob: -5.5606842041015625
    9. ' merge' → logprob: -5.9356842041015625
    10. ' bin' → logprob: -6.3106842041015625

Token 32: '_make' (ID: 70070)
  Prédit: '_make'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_make' → logprob: -0.2705329656600952
    2. '_buy' → logprob: -2.0205330848693848
    3. '_pay' → logprob: -3.3955330848693848
    4. '_purchase' → logprob: -4.145533084869385
    5. '_take' → logprob: -4.895533084869385
    6. '_find' → logprob: -5.145533084869385
    7. '_div' → logprob: -5.270533084869385
    8. '_use' → logprob: -5.395533084869385
    9. '_dis' → logprob: -5.520533084869385
    10. '_play' → logprob: -5.645533084869385

Token 33: '_triangle' (ID: 187218)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.8338711261749268
    2. '(' → logprob: -1.0838711261749268
    3. '(amount' → logprob: -2.4588711261749268
    4. '(length' → logprob: -2.7088711261749268
    5. '(x' → logprob: -4.083870887756348
    6. '(num' → logprob: -4.458870887756348
    7. '(mid' → logprob: -4.458870887756348
    8. '(k' → logprob: -4.958870887756348
    9. '(n' → logprob: -5.958870887756348
    10. '_' → logprob: -5.958870887756348

Token 34: '(x' (ID: 4061)
  Prédit: '(a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.24241168797016144
    2. '(' → logprob: -1.617411732673645
    3. '(i' → logprob: -4.3674116134643555
    4. '(size' → logprob: -6.7424116134643555
    5. '(s' → logprob: -7.2424116134643555
    6. '(length' → logprob: -7.3674116134643555
    7. '(len' → logprob: -7.8674116134643555
    8. '(n' → logprob: -7.9924116134643555
    9. '(x' → logprob: -8.992411613464355
    10. '(l' → logprob: -9.242411613464355

Token 35: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05380313843488693
    2. '):' → logprob: -3.1788032054901123
    3. '+' → logprob: -5.803802967071533
    4. ' ,' → logprob: -6.178802967071533
    5. ',i' → logprob: -6.428802967071533
    6. ',y' → logprob: -6.803802967071533
    7. ' +' → logprob: -7.303802967071533
    8. ',x' → logprob: -7.803802967071533
    9. '-' → logprob: -7.928802967071533
    10. ')' → logprob: -8.303803443908691

Token 36: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00218987581320107
    2. 'i' → logprob: -6.627190113067627
    3. ' y' → logprob: -7.127190113067627
    4. 'a' → logprob: -10.752189636230469
    5. 'idx' → logprob: -11.377189636230469
    6. 'l' → logprob: -12.252189636230469
    7. 'b' → logprob: -12.252189636230469
    8. '   ' → logprob: -12.752189636230469
    9. ' ' → logprob: -13.002189636230469
    10. 'arr' → logprob: -13.127189636230469

Token 37: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00020091790065634996
    2. ' ,' → logprob: -9.125201225280762
    3. ',z' → logprob: -9.375201225280762
    4. 'z' → logprob: -12.375201225280762
    5. ' z' → logprob: -13.125201225280762
    6. ')' → logprob: -15.500201225280762
    7. ',x' → logprob: -16.125200271606445
    8. '+' → logprob: -16.562700271606445
    9. ' ' → logprob: -16.625200271606445
    10. 'x' → logprob: -16.750200271606445

Token 38: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.04859236627817154
    2. ' z' → logprob: -3.0485923290252686
    3. '	z' → logprob: -12.673592567443848
    4. ' ' → logprob: -14.048592567443848
    5. 'x' → logprob: -14.173592567443848
    6. '   ' → logprob: -15.923592567443848
    7. '  ' → logprob: -16.79859161376953
    8. '```' → logprob: -17.29859161376953
    9. ',z' → logprob: -17.54859161376953
    10. ')' → logprob: -17.67359161376953

Token 39: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008676143363118172
    2. ')' → logprob: -4.758676052093506
    3. '):
' → logprob: -9.883676528930664
    4. ' ):' → logprob: -12.008676528930664
    5. ':' → logprob: -13.258676528930664
    6. '):
' → logprob: -14.508676528930664
    7. ''):' → logprob: -14.883676528930664
    8. ')：' → logprob: -15.133676528930664
    9. '   ' → logprob: -15.258676528930664
    10. ')):' → logprob: -15.383676528930664

Token 40: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012834406457841396
    2. '   ' → logprob: -5.262834548950195
    3. '):' → logprob: -5.637834548950195
    4. ':
' → logprob: -6.262834548950195
    5. ':return' → logprob: -6.637834548950195
    6. '():' → logprob: -8.262834548950195
    7. ' :' → logprob: -8.637834548950195
    8. '(' → logprob: -8.887834548950195
    9. ' return' → logprob: -9.512834548950195
    10. ')' → logprob: -9.887834548950195

Token 41: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04666782170534134
    2. ' return' → logprob: -3.4216678142547607
    3. 'return' (adapté à ' return') → logprob: -5.17166805267334
    4. ' ' → logprob: -5.79666805267334
    5. '    ' → logprob: -5.79666805267334
    6. '  ' → logprob: -7.79666805267334
    7. ')' → logprob: -8.29666805267334
    8. '<|end|>' → logprob: -8.67166805267334
    9. '	return' → logprob: -9.42166805267334
    10. ':return' → logprob: -9.54666805267334

Token 42: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.31351804733276367
    2. 'x' → logprob: -1.3135180473327637
    3. ' (' → logprob: -9.063518524169922
    4. '(x' → logprob: -9.688518524169922
    5. ' ' → logprob: -9.938518524169922
    6. '(' → logprob: -10.688518524169922
    7. '	x' → logprob: -12.063518524169922
    8. '   ' → logprob: -14.438518524169922
    9. ' ' → logprob: -14.438518524169922
    10. ' max' → logprob: -15.813518524169922

Token 43: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.20325933396816254
    2. ' <' → logprob: -1.7032593488693237
    3. '+' → logprob: -6.578259468078613
    4. ' +' → logprob: -7.828259468078613
    5. ' ' → logprob: -10.203259468078613
    6. '[' → logprob: -12.203259468078613
    7. '1' → logprob: -13.203259468078613
    8. '>' → logprob: -13.703259468078613
    9. '<len' → logprob: -13.703259468078613
    10. '<size' → logprob: -13.953259468078613

Token 44: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00975739024579525
    2. ' y' → logprob: -4.6347575187683105
    3. ' ' → logprob: -14.009757041931152
    4. '	y' → logprob: -14.884757041931152
    5. '(' → logprob: -16.50975799560547
    6. 'x' → logprob: -16.63475799560547
    7. '(y' → logprob: -17.00975799560547
    8. '+y' → logprob: -17.63475799560547
    9. 'yz' → logprob: -18.13475799560547
    10. 'ys' → logprob: -18.38475799560547

Token 45: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2519611418247223
    2. ' +' → logprob: -1.5019611120224
    3. ' plus' → logprob: -11.001960754394531
    4. ' ' → logprob: -11.751960754394531
    5. '+y' → logprob: -13.126960754394531
    6. '＋' → logprob: -13.376960754394531
    7. '+s' → logprob: -13.876960754394531
    8. 'plus' → logprob: -14.251960754394531
    9. '```' → logprob: -15.001960754394531
    10. '+j' → logprob: -15.001960754394531

Token 46: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.02324605919420719
    2. ' z' → logprob: -3.7732460498809814
    3. '	z' → logprob: -14.648245811462402
    4. ' ' → logprob: -16.27324676513672
    5. 'x' → logprob: -18.02324676513672
    6. '-z' → logprob: -19.77324676513672
    7. '   ' → logprob: -20.27324676513672
    8. '*z' → logprob: -20.39824676513672
    9. '.z' → logprob: -20.52324676513672
    10. '_z' → logprob: -20.52324676513672

Token 47: '

' (ID: 279)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.6345049738883972
    2. 'and' → logprob: -0.7595049738883972
    3. '
' → logprob: -7.634504795074463
    4. '<|end|>' → logprob: -8.009505271911621
    5. 'def' → logprob: -8.384505271911621
    6. ' ' → logprob: -8.634505271911621
    7. '\n' → logprob: -8.884505271911621
    8. ' or' → logprob: -9.259505271911621
    9. '\' → logprob: -9.384505271911621
    10. '   ' → logprob: -9.634505271911621

Token 48: 'per' (ID: 543)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7002825736999512
    2. 'for' → logprob: -1.4502825736999512
    3. 'result' → logprob: -2.075282573699951
    4. '
' → logprob: -2.825282573699951
    5. 'def' → logprob: -2.825282573699951
    6. 'i' → logprob: -4.950282573699951
    7. 'x' → logprob: -5.950282573699951
    8. 'answer' → logprob: -5.950282573699951
    9. ' for' → logprob: -6.075282573699951
    10. '  
' → logprob: -6.575282573699951

Token 49: 'imeters' (ID: 91182)
  Prédit: 'haps'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'haps' → logprob: -0.145987868309021
    2. 'mutation' → logprob: -2.8959879875183105
    3. 'm' → logprob: -3.2709879875183105
    4. 'mut' → logprob: -3.7709879875183105
    5. 'fect' → logprob: -5.5209879875183105
    6. 'f' → logprob: -5.7709879875183105
    7. 't' → logprob: -5.8959879875183105
    8. 'for' → logprob: -6.1459879875183105
    9. 'mu' → logprob: -6.5209879875183105
    10. 'def' → logprob: -6.8959879875183105

Token 50: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6794338226318359
    2. '=' → logprob: -1.304433822631836
    3. '[' → logprob: -1.804433822631836
    4. '=[]' → logprob: -3.804433822631836
    5. '[:]' → logprob: -4.554433822631836
    6. '[]' → logprob: -4.929433822631836
    7. '.' → logprob: -5.304433822631836
    8. '.append' → logprob: -5.929433822631836
    9. '()' → logprob: -6.429433822631836
    10. '_' → logprob: -6.429433822631836

Token 51: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.46683937311172485
    2. '[' → logprob: -1.34183931350708
    3. '0' → logprob: -3.09183931350708
    4. '[max' → logprob: -3.09183931350708
    5. '[a' → logprob: -4.59183931350708
    6. '[x' → logprob: -5.96683931350708
    7. ' [' → logprob: -5.96683931350708
    8. '[i' → logprob: -6.21683931350708
    9. ' []' → logprob: -6.21683931350708
    10. 'max' → logprob: -7.59183931350708

Token 52: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -8.41866585687967e-06
    2. ' for' → logprob: -11.750008583068848
    3. '```' → logprob: -15.125008583068848
    4. '
' → logprob: -16.12500762939453
    5. '	for' → logprob: -19.00000762939453
    6. 'n' → logprob: -19.25000762939453
    7. '``' → logprob: -19.25000762939453
    8. '\' → logprob: -19.50000762939453
    9. 'i' → logprob: -19.62500762939453
    10. 'if' → logprob: -19.87500762939453

Token 53: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6329294443130493
    2. 'i' → logprob: -0.7579294443130493
    3. '_' → logprob: -9.007929801940918
    4. ' _' → logprob: -9.507929801940918
    5. ' ' → logprob: -9.882929801940918
    6. '_i' → logprob: -10.507929801940918
    7. 'x' → logprob: -11.132929801940918
    8. ' side' → logprob: -11.632929801940918
    9. '	i' → logprob: -12.007929801940918
    10. ' x' → logprob: -12.007929801940918

Token 54: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011106068268418312
    2. 'in' → logprob: -4.761106014251709
    3. ' ' → logprob: -6.136106014251709
    4. '  ' → logprob: -8.136106491088867
    5. '	in' → logprob: -11.261106491088867
    6. '   ' → logprob: -12.386106491088867
    7. ' i' → logprob: -12.886106491088867
    8. 'n' → logprob: -13.136106491088867
    9. 'range' → logprob: -13.386106491088867
    10. '+' → logprob: -13.386106491088867

Token 55: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.005234952084720135
    2. 'range' → logprob: -5.255234718322754
    3. ' ' → logprob: -14.630234718322754
    4. ' xrange' → logprob: -14.880234718322754
    5. '	range' → logprob: -15.005234718322754
    6. '(range' → logprob: -17.63023567199707
    7. '  ' → logprob: -18.13023567199707
    8. '_range' → logprob: -19.13023567199707
    9. ' ran' → logprob: -19.25523567199707
    10. '.range' → logprob: -19.63023567199707

Token 56: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.13155719637870789
    2. '(N' → logprob: -2.1315572261810303
    3. '(len' → logprob: -5.381556987762451
    4. '(n' → logprob: -11.38155746459961
    5. ' (' → logprob: -13.00655746459961
    6. '1' → logprob: -13.50655746459961
    7. ' ' → logprob: -13.75655746459961
    8. '(
' → logprob: -14.13155746459961
    9. 'len' → logprob: -14.88155746459961
    10. ')' → logprob: -16.38155746459961

Token 57: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.47408822178840637
    2. ' -' → logprob: -0.974088191986084
    3. ' ' → logprob: -11.724088668823242
    4. ')' → logprob: -13.349088668823242
    5. '   ' → logprob: -14.224088668823242
    6. '3' → logprob: -14.849088668823242
    7. '):
' → logprob: -15.849088668823242
    8. '2' → logprob: -15.974088668823242
    9. '1' → logprob: -16.349088668823242
    10. '):' → logprob: -16.474088668823242

Token 58: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001801801408873871
    2. ' ' → logprob: -8.6251802444458
    3. '1' → logprob: -14.6251802444458
    4. '```' → logprob: -16.375179290771484
    5. ')' → logprob: -16.750179290771484
    6. '२' → logprob: -17.625179290771484
    7. '3' → logprob: -18.375179290771484
    8. '২' → logprob: -18.625179290771484
    9. '>' → logprob: -18.625179290771484
    10. '   ' → logprob: -18.875179290771484

Token 59: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.3544423381972592e-05
    2. ' ' → logprob: -11.37501335144043
    3. '1' → logprob: -13.87501335144043
    4. '```' → logprob: -14.00001335144043
    5. '२' → logprob: -16.25001335144043
    6. '২' → logprob: -17.06251335144043
    7. '２' → logprob: -17.18751335144043
    8. '   ' → logprob: -17.18751335144043
    9. '۲' → logprob: -17.37501335144043
    10. '3' → logprob: -17.43751335144043

Token 60: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002973303198814392
    2. ':' → logprob: -6.6279730796813965
    3. '):
' → logprob: -6.8779730796813965
    4. ')' → logprob: -7.7529730796813965
    5. ' ):' → logprob: -8.627973556518555
    6. '):
' → logprob: -13.127973556518555
    7. ',' → logprob: -13.877973556518555
    8. ' )' → logprob: -14.377973556518555
    9. ' ' → logprob: -14.502973556518555
    10. '   ' → logprob: -14.627973556518555

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00594017468392849
    2. ' if' → logprob: -5.255939960479736
    3. '<|end|>' → logprob: -8.130940437316895
    4. '    
' → logprob: -8.505940437316895
    5. '	if' → logprob: -10.255940437316895
    6. ' ' → logprob: -10.255940437316895
    7. '    ' → logprob: -10.505940437316895
    8. 'if' → logprob: -10.755940437316895
    9. ',' → logprob: -11.130940437316895
    10. '   ' → logprob: -11.505940437316895

Token 62: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.36120736598968506
    2. '   ' → logprob: -1.361207365989685
    3. 'if' (adapté à ' if') → logprob: -3.7362074851989746
    4. ' x' → logprob: -3.8612074851989746
    5. 'x' → logprob: -7.236207485198975
    6. '    ' → logprob: -7.611207485198975
    7. ' ' → logprob: -8.361207008361816
    8. ' a' → logprob: -8.736207008361816
    9. '       ' → logprob: -9.486207008361816
    10. '	if' → logprob: -9.986207008361816

Token 63: ' can' (ID: 665)
  Prédit: ' can'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' can' → logprob: -0.043160416185855865
    2. 'can' → logprob: -3.1681604385375977
    3. ' a' → logprob: -9.043160438537598
    4. '	can' → logprob: -11.168160438537598
    5. 'a' → logprob: -11.418160438537598
    6. '(can' → logprob: -12.043160438537598
    7. '   ' → logprob: -12.418160438537598
    8. ' ' → logprob: -12.418160438537598
    9. '  ' → logprob: -14.043160438537598
    10. ' per' → logprob: -14.043160438537598

Token 64: '_make' (ID: 70070)
  Prédit: '_make'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_make' → logprob: -7.3458322731312364e-06
    2. 'make' → logprob: -11.875007629394531
    3. '_m' → logprob: -16.00000762939453
    4. 'Make' → logprob: -16.62500762939453
    5. '_have' → logprob: -17.75000762939453
    6. '_can' → logprob: -17.87500762939453
    7. ' make' → logprob: -17.87500762939453
    8. '(make' → logprob: -18.25000762939453
    9. '	make' → logprob: -18.50000762939453
    10. '_ma' → logprob: -18.75000762939453

Token 65: '_triangle' (ID: 187218)
  Prédit: '_triangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_triangle' → logprob: -0.001713974168524146
    2. 'triangle' → logprob: -6.376713752746582
    3. 'riangle' → logprob: -11.626713752746582
    4. ' triangle' → logprob: -13.876713752746582
    5. 'trian' → logprob: -14.251713752746582
    6. '_tri' → logprob: -14.626713752746582
    7. 'iangle' → logprob: -15.251713752746582
    8. 'tri' → logprob: -15.501713752746582
    9. '_TRI' → logprob: -15.751713752746582
    10. 'Triangle' → logprob: -16.0017147064209

Token 66: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -2.2961512513575144e-05
    2. '(' → logprob: -11.375022888183594
    3. 'a' → logprob: -11.500022888183594
    4. '(
' → logprob: -13.750022888183594
    5. ')' → logprob: -16.750022888183594
    6. '(ai' → logprob: -16.875022888183594
    7. '((' → logprob: -17.000022888183594
    8. '```' → logprob: -17.500022888183594
    9. '(*' → logprob: -18.125022888183594
    10. ')a' → logprob: -18.250022888183594

Token 67: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -13.750001907348633
    3. 'i' → logprob: -14.500001907348633
    4. '```' → logprob: -16.750001907348633
    5. '   ' → logprob: -17.500001907348633
    6. ')' → logprob: -17.750001907348633
    7. ' [' → logprob: -17.750001907348633
    8. ' ' → logprob: -17.875001907348633
    9. '[a' → logprob: -18.250001907348633
    10. 'a' → logprob: -18.250001907348633

Token 68: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.0006307095172815025
    2. ',' → logprob: -7.750630855560303
    3. ']' → logprob: -9.500630378723145
    4. '+' → logprob: -9.875630378723145
    5. '>,' → logprob: -11.125630378723145
    6. ' ],' → logprob: -11.125630378723145
    7. '   ' → logprob: -11.250630378723145
    8. '),' → logprob: -12.125630378723145
    9. '],[' → logprob: -12.125630378723145
    10. ' ' → logprob: -12.250630378723145

Token 69: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.69315105676651
    2. ' a' → logprob: -0.69315105676651
    3. '	a' → logprob: -13.818151473999023
    4. ' ' → logprob: -13.943151473999023
    5. '>a' → logprob: -14.568151473999023
    6. ')' → logprob: -14.693151473999023
    7. ' ' → logprob: -15.318151473999023
    8. ')a' → logprob: -15.568151473999023
    9. ',a' → logprob: -15.943151473999023
    10. '#a' → logprob: -16.693151473999023

Token 70: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0001114106344175525
    2. '[' → logprob: -9.12511157989502
    3. '```' → logprob: -14.12511157989502
    4. '+' → logprob: -14.25011157989502
    5. '[
' → logprob: -15.12511157989502
    6. '[I' → logprob: -15.50011157989502
    7. '[j' → logprob: -15.62511157989502
    8. '1' → logprob: -15.87511157989502
    9. '[++' → logprob: -16.500110626220703
    10. ']' → logprob: -16.750110626220703

Token 71: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0028401799499988556
    2. ' +' → logprob: -5.877840042114258
    3. '],' → logprob: -10.377840042114258
    4. '+i' → logprob: -13.377840042114258
    5. '   ' → logprob: -13.627840042114258
    6. '1' → logprob: -14.752840042114258
    7. '+
' → logprob: -15.127840042114258
    8. '-' → logprob: -15.127840042114258
    9. '+j' → logprob: -15.377840042114258
    10. ' ' → logprob: -15.502840042114258

Token 72: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.265633419388905e-05
    2. ' ' → logprob: -9.750062942504883
    3. '   ' → logprob: -13.375062942504883
    4. ']' → logprob: -14.250062942504883
    5. '+' → logprob: -14.375062942504883
    6. '  ' → logprob: -14.937562942504883
    7. '2' → logprob: -15.187562942504883
    8. '```' → logprob: -15.687562942504883
    9. '۱' → logprob: -16.000062942504883
    10. '１' → logprob: -16.125062942504883

Token 73: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.015627572312951088
    2. '],' → logprob: -4.265627384185791
    3. ' ,' → logprob: -7.140627384185791
    4. '),' → logprob: -7.515627384185791
    5. '>,' → logprob: -10.26562786102295
    6. ',a' → logprob: -10.51562786102295
    7. 'a' → logprob: -10.76562786102295
    8. '   ' → logprob: -11.01562786102295
    9. '},' → logprob: -11.64062786102295
    10. ' ' → logprob: -11.89062786102295

Token 74: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.6326243877410889
    2. 'a' → logprob: -0.7576243877410889
    3. ')' → logprob: -11.382624626159668
    4. ' ' → logprob: -12.757624626159668
    5. '	a' → logprob: -12.757624626159668
    6. ')a' → logprob: -12.757624626159668
    7. ' ' → logprob: -13.382624626159668
    8. '>a' → logprob: -14.882624626159668
    9. '_a' → logprob: -15.007624626159668
    10. '<|end|>' → logprob: -15.195124626159668

Token 75: '[i' (ID: 1768)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.005243718158453703
    2. '[i' → logprob: -5.63024377822876
    3. '[' → logprob: -6.63024377822876
    4. '2' → logprob: -8.255243301391602
    5. '+i' → logprob: -10.630243301391602
    6. '+[' → logprob: -10.630243301391602
    7. ' +' → logprob: -12.380243301391602
    8. '```' → logprob: -12.755243301391602
    9. 'i' → logprob: -13.255243301391602
    10. '][' → logprob: -13.380243301391602

Token 76: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -8.196732960641384e-05
    2. '2' → logprob: -10.125082015991211
    3. ' +' → logprob: -10.125082015991211
    4. '```' → logprob: -14.625082015991211
    5. '   ' → logprob: -14.750082015991211
    6. ']+' → logprob: -15.625082015991211
    7. ' ' → logprob: -15.687582015991211
    8. '+
' → logprob: -16.12508201599121
    9. '[' → logprob: -16.12508201599121
    10. ']' → logprob: -16.81258201599121

Token 77: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.7835754988482222e-05
    2. ' ' → logprob: -11.250018119812012
    3. '   ' → logprob: -13.625018119812012
    4. '```' → logprob: -13.937518119812012
    5. ')' → logprob: -14.500018119812012
    6. '  ' → logprob: -14.812518119812012
    7. '+' → logprob: -15.625018119812012
    8. '২' → logprob: -15.687518119812012
    9. '२' → logprob: -16.000017166137695
    10. '۲' → logprob: -16.125017166137695

Token 78: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0041271997615695
    2. ')' → logprob: -5.504127025604248
    3. ')):' → logprob: -10.879127502441406
    4. ' ):' → logprob: -11.004127502441406
    5. ':' → logprob: -11.754127502441406
    6. '):
' → logprob: -12.879127502441406
    7. ''):' → logprob: -14.129127502441406
    8. '   ' → logprob: -14.629127502441406
    9. ']):' → logprob: -15.129127502441406
    10. '))' → logprob: -15.129127502441406

Token 79: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037686126306653023
    2. '   ' → logprob: -5.878768444061279
    3. ':' → logprob: -7.003768444061279
    4. 'per' → logprob: -10.628768920898438
    5. ' per' → logprob: -12.628768920898438
    6. ',' → logprob: -12.628768920898438
    7. '      ' → logprob: -12.878768920898438
    8. ')' → logprob: -13.003768920898438
    9. '    
' → logprob: -13.003768920898438
    10. '           ' → logprob: -13.128768920898438

Token 80: ' per' (ID: 777)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2272597998380661
    2. '       ' → logprob: -2.102259874343872
    3. 'per' (adapté à ' per') → logprob: -2.977259874343872
    4. ' per' → logprob: -3.602259874343872
    5. ' print' → logprob: -6.477259635925293
    6. '    ' → logprob: -7.227259635925293
    7. '    
' → logprob: -8.727259635925293
    8. '           ' → logprob: -8.727259635925293
    9. 'print' → logprob: -8.852259635925293
    10. '	per' → logprob: -10.352259635925293

Token 81: 'imeters' (ID: 91182)
  Prédit: 'imeters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imeters' → logprob: -2.3676733690081164e-05
    2. 'im' → logprob: -11.25002384185791
    3. 'imeter' → logprob: -11.87502384185791
    4. '   ' → logprob: -13.87502384185791
    5. 'meters' → logprob: -14.50002384185791
    6. 's' → logprob: -14.50002384185791
    7. 'eters' → logprob: -14.75002384185791
    8. 'imit' → logprob: -15.37502384185791
    9. '```' → logprob: -15.37502384185791
    10. 'imet' → logprob: -15.75002384185791

Token 82: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.011056780815124512
    2. '.' → logprob: -4.511056900024414
    3. '.extend' → logprob: -12.636056900024414
    4. '.add' → logprob: -13.761056900024414
    5. '.ap' → logprob: -14.136056900024414
    6. '.app' → logprob: -14.136056900024414
    7. '.Append' → logprob: -14.386056900024414
    8. ' .' → logprob: -14.386056900024414
    9. '.push' → logprob: -14.761056900024414
    10. '.insert' → logprob: -15.261056900024414

Token 83: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.12706175446510315
    2. '(' → logprob: -2.1270618438720703
    3. '((' → logprob: -9.00206184387207
    4. ' (' → logprob: -12.25206184387207
    5. '(
' → logprob: -12.75206184387207
    6. 'a' → logprob: -13.37706184387207
    7. '(max' → logprob: -14.50206184387207
    8. '(x' → logprob: -15.62706184387207
    9. '(i' → logprob: -16.12706184387207
    10. '('' → logprob: -16.37706184387207

Token 84: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.700132997939363e-05
    2. '[' → logprob: -11.000017166137695
    3. 'i' → logprob: -15.625017166137695
    4. ' [' → logprob: -17.125017166137695
    5. '[
' → logprob: -17.625017166137695
    6. ' ' → logprob: -18.375017166137695
    7. '```' → logprob: -19.000017166137695
    8. '   ' → logprob: -19.125017166137695
    9. ')' → logprob: -19.375017166137695
    10. ')[' → logprob: -19.875017166137695

Token 85: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02501487173140049
    2. ']+' → logprob: -3.775014877319336
    3. '])' → logprob: -6.650014877319336
    4. ' ]' → logprob: -8.150014877319336
    5. ')' → logprob: -8.900014877319336
    6. '+' → logprob: -10.650014877319336
    7. '])+' → logprob: -12.150014877319336
    8. ')+' → logprob: -13.150014877319336
    9. '[' → logprob: -13.275014877319336
    10. ' ])' → logprob: -13.275014877319336

Token 86: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.24159055948257446
    2. '+' → logprob: -1.6165904998779297
    3. ')' → logprob: -4.24159049987793
    4. ' -' → logprob: -7.49159049987793
    5. ' )' → logprob: -7.61659049987793
    6. '-' → logprob: -8.36659049987793
    7. ')+' → logprob: -9.11659049987793
    8. ' ' → logprob: -9.36659049987793
    9. '+a' → logprob: -10.36659049987793
    10. '+)' → logprob: -10.36659049987793

Token 87: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.6931543946266174
    2. ' a' → logprob: -0.6931543946266174
    3. ' ' → logprob: -12.818154335021973
    4. ' ' → logprob: -12.943154335021973
    5. '	a' → logprob: -13.693154335021973
    6. '(a' → logprob: -15.818154335021973
    7. ')a' → logprob: -16.06815528869629
    8. ''a' → logprob: -16.44315528869629
    9. '_a' → logprob: -16.56815528869629
    10. '>a' → logprob: -16.56815528869629

Token 88: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.006324893794953823
    2. '[' → logprob: -5.631324768066406
    3. '+' → logprob: -6.006324768066406
    4. '1' → logprob: -8.631324768066406
    5. 'i' → logprob: -9.631324768066406
    6. '[++' → logprob: -12.256324768066406
    7. '+[' → logprob: -13.381324768066406
    8. 'user' → logprob: -13.631324768066406
    9. '[I' → logprob: -13.881324768066406
    10. '+i' → logprob: -14.006324768066406

Token 89: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.003707442432641983
    2. '1' → logprob: -5.628707408905029
    3. ']+' → logprob: -9.878707885742188
    4. '[' → logprob: -10.628707885742188
    5. ' +' → logprob: -11.503707885742188
    6. ''+' → logprob: -12.378707885742188
    7. '+i' → logprob: -12.628707885742188
    8. '2' → logprob: -12.878707885742188
    9. '"+' → logprob: -13.378707885742188
    10. ']' → logprob: -13.628707885742188

Token 90: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7252845029579476e-05
    2. '2' → logprob: -10.875027656555176
    3. ' ' → logprob: -12.000027656555176
    4. '   ' → logprob: -14.250027656555176
    5. '  ' → logprob: -15.250027656555176
    6. '3' → logprob: -15.625027656555176
    7. 'i' → logprob: -15.750027656555176
    8. '
' → logprob: -15.937527656555176
    9. '[' → logprob: -16.06252670288086
    10. '```' → logprob: -16.06252670288086

Token 91: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2254648506641388
    2. ' +' → logprob: -1.6004648208618164
    3. '+a' → logprob: -10.725464820861816
    4. ')' → logprob: -10.975464820861816
    5. ' ' → logprob: -12.225464820861816
    6. 'a' → logprob: -12.725464820861816
    7. '```' → logprob: -13.725464820861816
    8. ')+' → logprob: -13.850464820861816
    9. '   ' → logprob: -14.100464820861816
    10. ']+' → logprob: -14.725464820861816

Token 92: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.387118935585022
    2. ' +' → logprob: -1.137118935585022
    3. '+a' → logprob: -8.38711929321289
    4. ' ' → logprob: -11.13711929321289
    5. 'a' → logprob: -13.51211929321289
    6. '   ' → logprob: -13.76211929321289
    7. '```' → logprob: -14.51211929321289
    8. ')' → logprob: -14.88711929321289
    9. ' a' → logprob: -15.13711929321289
    10. '+c' → logprob: -15.13711929321289

Token 93: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004078401252627373
    2. ' a' → logprob: -5.504078388214111
    3. '	a' → logprob: -17.379077911376953
    4. ' ' → logprob: -18.379077911376953
    5. ')a' → logprob: -19.379077911376953
    6. '   ' → logprob: -19.879077911376953
    7. '(a' → logprob: -20.004077911376953
    8. ' ' → logprob: -20.379077911376953
    9. '_a' → logprob: -20.879077911376953
    10. '>a' → logprob: -21.004077911376953

Token 94: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0182020366191864
    2. '[' → logprob: -4.01820182800293
    3. 'i' → logprob: -9.89320182800293
    4. '`' → logprob: -15.01820182800293
    5. '[next' → logprob: -15.76820182800293
    6. '3' → logprob: -15.89320182800293
    7. '```' → logprob: -15.89320182800293
    8. '2' → logprob: -16.14320182800293
    9. '{i' → logprob: -16.14320182800293
    10. 'a' → logprob: -16.14320182800293

Token 95: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.810037742368877e-05
    2. '[' → logprob: -10.750038146972656
    3. '2' → logprob: -11.250038146972656
    4. ' +' → logprob: -13.375038146972656
    5. '```' → logprob: -14.375038146972656
    6. '+[' → logprob: -14.625038146972656
    7. ']+' → logprob: -15.375038146972656
    8. '+
' → logprob: -15.375038146972656
    9. '`' → logprob: -16.000038146972656
    10. '][' → logprob: -16.500038146972656

Token 96: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.127333340875339e-06
    2. ' ' → logprob: -12.625003814697266
    3. '```' → logprob: -15.000003814697266
    4. '۲' → logprob: -16.500003814697266
    5. '   ' → logprob: -16.625003814697266
    6. '  ' → logprob: -16.812503814697266
    7. '3' → logprob: -17.125003814697266
    8. '２' → logprob: -17.250003814697266
    9. '+' → logprob: -17.437503814697266
    10. '
' → logprob: -17.500003814697266

Token 97: '])
' (ID: 5169)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.8789383830153383e-05
    2. '))' → logprob: -11.250019073486328
    3. ' )' → logprob: -13.500019073486328
    4. '])' → logprob: -13.875019073486328
    5. ')
' → logprob: -14.000019073486328
    6. '`)' → logprob: -14.625019073486328
    7. ')])' → logprob: -15.000019073486328
    8. '）' → logprob: -15.250019073486328
    9. ')))' → logprob: -15.375019073486328
    10. ')")' → logprob: -15.500019073486328

Token 98: '       ' (ID: 309)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.10055071860551834
    2. '   ' → logprob: -3.350550651550293
    3. 'break' → logprob: -3.350550651550293
    4. '       ' → logprob: -3.725550651550293
    5. 'return' → logprob: -7.975550651550293
    6. '```' → logprob: -8.100550651550293
    7. ' break' → logprob: -8.725550651550293
    8. 'if' → logprob: -9.225550651550293
    9. ' print' → logprob: -9.475550651550293
    10. '    
' → logprob: -9.475550651550293

Token 99: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28825950622558594
    2. ' break' → logprob: -1.788259506225586
    3. 'break' → logprob: -2.538259506225586
    4. '	break' → logprob: -6.163259506225586
    5. '   ' → logprob: -6.288259506225586
    6. '	' → logprob: -9.288259506225586
    7. '```' → logprob: -10.038259506225586
    8. 'b' → logprob: -10.038259506225586
    9. '    ' → logprob: -11.913259506225586
    10. ' ' → logprob: -11.913259506225586

Token 100: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6524043679237366
    2. '+' → logprob: -1.4024043083190918
    3. '+=' → logprob: -1.6524043083190918
    4. '=' → logprob: -3.402404308319092
    5. ' =' → logprob: -5.027404308319092
    6. ' ' → logprob: -6.652404308319092
    7. ' +' → logprob: -7.777404308319092
    8. '    ' → logprob: -11.27740478515625
    9. '   ' → logprob: -11.27740478515625
    10. '++' → logprob: -11.77740478515625

Token 101: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02027546614408493
    2. '3' → logprob: -4.020275592803955
    3. '2' → logprob: -6.270275592803955
    4. ' ' → logprob: -8.395275115966797
    5. '0' → logprob: -12.645275115966797
    6. '  ' → logprob: -14.145275115966797
    7. '    ' → logprob: -14.645275115966797
    8. 'break' → logprob: -14.770275115966797
    9. '   ' → logprob: -15.145275115966797
    10. '10' → logprob: -15.145275115966797

Token 102: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.019475873559713364
    2. '3' → logprob: -4.644475936889648
    3. '2' → logprob: -4.644475936889648
    4. ' ' → logprob: -10.019475936889648
    5. '0' → logprob: -11.269475936889648
    6. 'len' → logprob: -15.019475936889648
    7. '  ' → logprob: -15.706975936889648
    8. '   ' → logprob: -16.39447593688965
    9. '100' → logprob: -16.76947593688965
    10. '
' → logprob: -16.83197593688965

Token 103: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 104: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 105: ' if' (ID: 538)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.21875987946987152
    2. 'continue' → logprob: -2.218759775161743
    3. ' else' → logprob: -3.093759775161743
    4. '   ' → logprob: -4.343760013580322
    5. '```' → logprob: -4.718760013580322
    6. ' continue' → logprob: -5.093760013580322
    7. '<|end|>' → logprob: -5.593760013580322
    8. '       ' → logprob: -5.593760013580322
    9. ' ' → logprob: -6.968760013580322
    10. '#' → logprob: -6.968760013580322

Token 106: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.6278324723243713
    2. ' per' → logprob: -1.6278324127197266
    3. 'per' → logprob: -2.0028324127197266
    4. 'len' → logprob: -2.1278324127197266
    5. ' i' → logprob: -4.752832412719727
    6. 'i' → logprob: -5.752832412719727
    7. ' not' → logprob: -7.002832412719727
    8. ' ' → logprob: -7.377832412719727
    9. 'True' → logprob: -7.377832412719727
    10. ' True' → logprob: -7.377832412719727

Token 107: '(per' (ID: 96497)
  Prédit: '(per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(per' → logprob: -0.00206949096173048
    2. 'per' → logprob: -6.502069473266602
    3. '(' → logprob: -7.502069473266602
    4. '(p' → logprob: -12.002069473266602
    5. '()' → logprob: -12.752069473266602
    6. '	per' → logprob: -13.377069473266602
    7. ' (' → logprob: -14.002069473266602
    8. '(max' → logprob: -14.252069473266602
    9. ' per' → logprob: -14.752069473266602
    10. '>' → logprob: -15.377069473266602

Token 108: 'imeters' (ID: 91182)
  Prédit: 'imeters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imeters' → logprob: -0.0028192552272230387
    2. 'eters' → logprob: -6.002819061279297
    3. 'iters' → logprob: -8.127819061279297
    4. 'im' → logprob: -11.127819061279297
    5. 's' → logprob: -11.377819061279297
    6. 'imers' → logprob: -12.377819061279297
    7. 'ETERS' → logprob: -13.252819061279297
    8. 'ters' → logprob: -13.627819061279297
    9. 'isters' → logprob: -13.752819061279297
    10. 'ilters' → logprob: -13.877819061279297

Token 109: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.8197008371353149
    2. ')' → logprob: -1.319700837135315
    3. ' ==' → logprob: -2.0697007179260254
    4. '>=' → logprob: -2.1947007179260254
    5. ' >=' → logprob: -3.4447007179260254
    6. '>' → logprob: -4.319700717926025
    7. '()' → logprob: -5.319700717926025
    8. ')>=' → logprob: -6.194700717926025
    9. ')==' → logprob: -7.069700717926025
    10. '()==' → logprob: -7.444700717926025

Token 110: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.49547669291496277
    2. '==' → logprob: -1.3704767227172852
    3. ' >=' → logprob: -2.370476722717285
    4. '>=' → logprob: -3.370476722717285
    5. '>' → logprob: -5.120476722717285
    6. ' >' → logprob: -6.745476722717285
    7. '()' → logprob: -7.120476722717285
    8. ')' → logprob: -7.995476722717285
    9. '()==' → logprob: -8.745476722717285
    10. ' ' → logprob: -8.995476722717285

Token 111: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6521663069725037
    2. '3' → logprob: -1.2771663665771484
    3. '2' → logprob: -1.6521663665771484
    4. ' ' → logprob: -5.152166366577148
    5. 'k' → logprob: -6.902166366577148
    6. '10' → logprob: -7.277166366577148
    7. '5' → logprob: -7.402166366577148
    8. '100' → logprob: -8.652166366577148
    9. '0' → logprob: -8.777166366577148
    10. 'K' → logprob: -10.277166366577148

Token 112: '2' (ID: 17)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.7315685153007507
    2. '1' → logprob: -0.9815685153007507
    3. '2' → logprob: -1.9815685749053955
    4. '10' → logprob: -6.231568336486816
    5. 'k' → logprob: -6.356568336486816
    6. '5' → logprob: -6.606568336486816
    7. ' ' → logprob: -8.106568336486816
    8. '100' → logprob: -8.356568336486816
    9. '7' → logprob: -8.731568336486816
    10. '4' → logprob: -9.231568336486816

Token 113: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00031067515374161303
    2. ':
' → logprob: -8.125310897827148
    3. ':return' → logprob: -11.500310897827148
    4. ' :' → logprob: -13.500310897827148
    5. '):' → logprob: -14.500310897827148
    6. '   ' → logprob: -14.500310897827148
    7. '<|end|>' → logprob: -14.875310897827148
    8. ' and' → logprob: -14.875310897827148
    9. ':**' → logprob: -15.125310897827148
    10. '       ' → logprob: -15.500310897827148

Token 114: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02693977952003479
    2. '       ' → logprob: -3.651939868927002
    3. ':' → logprob: -7.651939868927002
    4. '   ' → logprob: -9.401939392089844
    5. ' break' → logprob: -11.026939392089844
    6. ':
' → logprob: -11.401939392089844
    7. '     ' → logprob: -11.651939392089844
    8. '          ' → logprob: -11.651939392089844
    9. '      ' → logprob: -12.151939392089844
    10. '               ' → logprob: -12.276939392089844

Token 115: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2268696427345276
    2. ' break' → logprob: -1.9768695831298828
    3. '   ' → logprob: -2.851869583129883
    4. 'break' (adapté à ' break') → logprob: -5.476869583129883
    5. '           ' → logprob: -6.476869583129883
    6. '	break' → logprob: -7.226869583129883
    7. '```' → logprob: -9.101869583129883
    8. '    ' → logprob: -10.476869583129883
    9. ' ' → logprob: -10.601869583129883
    10. ' ' → logprob: -10.851869583129883

Token 116: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.9258806109428406
    2. '<|end|>' → logprob: -1.3008806705474854
    3. 'print' → logprob: -1.9258806705474854
    4. 'else' → logprob: -2.8008806705474854
    5. '#' → logprob: -3.5508806705474854
    6. '+' → logprob: -3.8008806705474854
    7. ')' → logprob: -4.175880432128906
    8. ' ' → logprob: -4.550880432128906
    9. '[' → logprob: -4.800880432128906
    10. 'for' → logprob: -5.050880432128906

Token 117: 'res' (ID: 430)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06528758257627487
    2. 'if' → logprob: -3.0652875900268555
    3. 'for' → logprob: -4.3152875900268555
    4. '
' → logprob: -7.1902875900268555
    5. '#' → logprob: -7.3152875900268555
    6. 'per' → logprob: -7.6902875900268555
    7. ')' → logprob: -7.8152875900268555
    8. 'else' → logprob: -8.190287590026855
    9. ' if' → logprob: -9.565287590026855
    10. '<|end|>' → logprob: -9.690287590026855

Token 118: ' =' (ID: 314)
  Prédit: 'ult'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ult' → logprob: -0.10263680666685104
    2. 'ults' → logprob: -2.3526368141174316
    3. ' =' → logprob: -6.477636814117432
    4. 'ULT' → logprob: -8.227636337280273
    5. 'ultat' → logprob: -8.477636337280273
    6. 'ul' → logprob: -8.977636337280273
    7. '=' → logprob: -9.102636337280273
    8. 'ulta' → logprob: -9.852636337280273
    9. 'olt' → logprob: -10.102636337280273
    10. 'ulti' → logprob: -10.352636337280273

Token 119: ' ' (ID: 220)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.1453595906496048
    2. ' max' → logprob: -2.020359516143799
    3. 'per' → logprob: -6.395359516143799
    4. '0' → logprob: -7.770359516143799
    5. '-' → logprob: -8.395359992980957
    6. 'sum' → logprob: -8.645359992980957
    7. ' per' → logprob: -9.520359992980957
    8. 'sorted' → logprob: -10.395359992980957
    9. ' -' → logprob: -10.770359992980957
    10. ' sum' → logprob: -11.145359992980957

Token 120: '0' (ID: 15)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.029415909200906754
    2. 'sum' → logprob: -3.7794158458709717
    3. 'per' → logprob: -5.779416084289551
    4. '0' → logprob: -6.654416084289551
    5. '-' → logprob: -7.404416084289551
    6. 'sorted' → logprob: -7.529416084289551
    7. 'min' → logprob: -8.15441608428955
    8. 'str' → logprob: -8.65441608428955
    9. ' max' → logprob: -9.52941608428955
    10. '(max' → logprob: -10.52941608428955

Token 121: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35134708881378174
    2. 'for' → logprob: -1.7263470888137817
    3. 'if' → logprob: -2.351346969604492
    4. ' for' → logprob: -4.476346969604492
    5. ' if' → logprob: -4.976346969604492
    6. '+' → logprob: -6.226346969604492
    7. ' 
' → logprob: -6.851346969604492
    8. '+
' → logprob: -6.851346969604492
    9. '<|end|>' → logprob: -8.601346969604492
    10. '  
' → logprob: -8.976346969604492

Token 122: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16882853209972382
    2. 'for' → logprob: -2.0438284873962402
    3. ' if' → logprob: -4.04382848739624
    4. '
' → logprob: -5.41882848739624
    5. ' for' → logprob: -5.79382848739624
    6. ' 
' → logprob: -8.918828964233398
    7. '<|end|>' → logprob: -9.043828964233398
    8. ',' → logprob: -9.293828964233398
    9. '+' → logprob: -9.418828964233398
    10. 'per' → logprob: -9.543828964233398

Token 123: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.10473929345607758
    2. 'len' → logprob: -2.354739189147949
    3. ' per' → logprob: -5.604739189147949
    4. 'per' → logprob: -7.104739189147949
    5. ' ' → logprob: -11.72973918914795
    6. ' le' → logprob: -12.35473918914795
    7. '(len' → logprob: -12.35473918914795
    8. '	len' → logprob: -14.22973918914795
    9. ' res' → logprob: -14.47973918914795
    10. ' not' → logprob: -14.54223918914795

Token 124: '(per' (ID: 96497)
  Prédit: '(per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(per' → logprob: -0.0013269031187519431
    2. '(' → logprob: -6.626327037811279
    3. 'per' → logprob: -15.001326560974121
    4. ' (' → logprob: -15.876326560974121
    5. '	per' → logprob: -16.126327514648438
    6. '(p' → logprob: -16.126327514648438
    7. '(res' → logprob: -16.501327514648438
    8. '(pr' → logprob: -16.876327514648438
    9. '(period' → logprob: -17.376327514648438
    10. '(parts' → logprob: -17.501327514648438

Token 125: 'imeters' (ID: 91182)
  Prédit: 'imeters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imeters' → logprob: -0.00415010703727603
    2. 'eters' → logprob: -5.504149913787842
    3. 'im' → logprob: -10.129150390625
    4. 'iters' → logprob: -11.504150390625
    5. 'per' → logprob: -12.129150390625
    6. '(per' → logprob: -12.879150390625
    7. ' per' → logprob: -12.879150390625
    8. 'et' → logprob: -13.004150390625
    9. 'eter' → logprob: -13.379150390625
    10. 'er' → logprob: -14.629150390625

Token 126: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018328100442886353
    2. '==' → logprob: -4.1433281898498535
    3. ')==' → logprob: -6.1433281898498535
    4. ' ==' → logprob: -10.018327713012695
    5. '>=' → logprob: -10.018327713012695
    6. ')>=' → logprob: -10.018327713012695
    7. '>' → logprob: -12.768327713012695
    8. '()' → logprob: -13.018327713012695
    9. ' )' → logprob: -13.643327713012695
    10. ' ' → logprob: -14.643327713012695

Token 127: ' >=' (ID: 5064)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6950994729995728
    2. ' ==' → logprob: -0.6950994729995728
    3. ' >=' → logprob: -6.820099353790283
    4. '>=' → logprob: -7.195099353790283
    5. '>' → logprob: -9.945099830627441
    6. ' >' → logprob: -10.820099830627441
    7. '=' → logprob: -11.445099830627441
    8. ' ' → logprob: -11.820099830627441
    9. ')' → logprob: -11.945099830627441
    10. '()==' → logprob: -11.945099830627441

Token 128: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.06689029932022095
    2. ' ' → logprob: -2.816890239715576
    3. '1' → logprob: -5.316890239715576
    4. '  ' → logprob: -15.004390716552734
    5. ' ' → logprob: -15.066890716552734
    6. '   ' → logprob: -15.316890716552734
    7. '```' → logprob: -15.441890716552734
    8. ')' → logprob: -15.629390716552734
    9. '۲' → logprob: -15.941890716552734
    10. '(' → logprob: -16.191890716552734

Token 129: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.03817793354392052
    2. '1' → logprob: -3.288177967071533
    3. ' ' → logprob: -8.913177490234375
    4. '   ' → logprob: -15.913177490234375
    5. '  ' → logprob: -16.038177490234375
    6. '```' → logprob: -16.038177490234375
    7. '۲' → logprob: -16.350677490234375
    8. ')' → logprob: -16.350677490234375
    9. '[' → logprob: -16.538177490234375
    10. '0' → logprob: -16.600677490234375

Token 130: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3184686601161957
    2. ':' → logprob: -1.318468689918518
    3. 'and' → logprob: -5.3184685707092285
    4. ':
' → logprob: -8.193469047546387
    5. '   ' → logprob: -11.568469047546387
    6. ' :' → logprob: -12.693469047546387
    7. ' ' → logprob: -13.318469047546387
    8. '	and' → logprob: -13.818469047546387
    9. '    ' → logprob: -15.318469047546387
    10. ' a' → logprob: -15.443469047546387

Token 131: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0014415422920137644
    2. ' and' → logprob: -7.376441478729248
    3. ' res' → logprob: -7.876441478729248
    4. ':' → logprob: -8.126441955566406
    5. 'res' → logprob: -9.876441955566406
    6. 'and' → logprob: -9.876441955566406
    7. ':
' → logprob: -11.001441955566406
    8. '<|end|>' → logprob: -11.751441955566406
    9. '    
' → logprob: -12.876441955566406
    10. '       ' → logprob: -13.751441955566406

Token 132: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.14540287852287292
    2. ' res' → logprob: -2.0204029083251953
    3. '   ' → logprob: -6.020402908325195
    4. '
' → logprob: -9.145402908325195
    5. 'if' → logprob: -9.645402908325195
    6. ' if' → logprob: -10.145402908325195
    7. '	res' → logprob: -10.520402908325195
    8. 'per' → logprob: -11.020402908325195
    9. ' per' → logprob: -11.770402908325195
    10. 'for' → logprob: -12.145402908325195

Token 133: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.013848472386598587
    2. '=' → logprob: -4.763848304748535
    3. ' +=' → logprob: -5.263848304748535
    4. '+=' → logprob: -10.263848304748535
    5. ' ' → logprob: -12.763848304748535
    6. ' -=' → logprob: -13.013848304748535
    7. '[' → logprob: -14.013848304748535
    8. ',' → logprob: -14.263848304748535
    9. ' |=' → logprob: -14.763848304748535
    10. '1' → logprob: -15.138848304748535

Token 134: ' per' (ID: 777)
  Prédit: ' per'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' per' → logprob: -0.8098717927932739
    2. 'per' → logprob: -1.059871792793274
    3. ' max' → logprob: -2.6848716735839844
    4. ' abs' → logprob: -2.9348716735839844
    5. 'abs' → logprob: -2.9348716735839844
    6. 'max' → logprob: -3.4348716735839844
    7. ' min' → logprob: -7.684871673583984
    8. '(per' → logprob: -7.684871673583984
    9. 'min' → logprob: -8.309871673583984
    10. ' ' → logprob: -8.934871673583984

Token 135: 'imeters' (ID: 91182)
  Prédit: 'imeters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imeters' → logprob: -7.703443770878948e-06
    2. 'im' → logprob: -12.000007629394531
    3. 'meters' → logprob: -14.125007629394531
    4. 'ime' → logprob: -15.375007629394531
    5. 'imeter' → logprob: -15.750007629394531
    6. '[' → logprob: -16.25000762939453
    7. 'ometers' → logprob: -16.50000762939453
    8. '```' → logprob: -16.75000762939453
    9. 'eters' → logprob: -17.75000762939453
    10. 'imet' → logprob: -17.75000762939453

Token 136: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.033669788390398026
    2. '[-' → logprob: -3.4086697101593018
    3. '0' → logprob: -11.283669471740723
    4. '-' → logprob: -11.908669471740723
    5. '```' → logprob: -14.033669471740723
    6. '\[' → logprob: -14.283669471740723
    7. '.' → logprob: -14.533669471740723
    8. 'max' → logprob: -15.033669471740723
    9. 'index' → logprob: -15.158669471740723
    10. '[::-' → logprob: -15.283669471740723

Token 137: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005304315593093634
    2. '1' → logprob: -5.255304336547852
    3. '-' → logprob: -9.755304336547852
    4. ' ' → logprob: -11.755304336547852
    5. '   ' → logprob: -14.505304336547852
    6. '::-' → logprob: -14.567804336547852
    7. '```' → logprob: -14.630304336547852
    8. '01' → logprob: -14.692804336547852
    9. ']' → logprob: -14.942804336547852
    10. '[' → logprob: -15.505304336547852

Token 138: ']' (ID: 60)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.4747742712497711
    2. ' -' → logprob: -0.9747742414474487
    3. '-per' → logprob: -7.849774360656738
    4. '+' → logprob: -8.474774360656738
    5. ' ' → logprob: -9.974774360656738
    6. 'per' → logprob: -11.224774360656738
    7. '>' → logprob: -11.474774360656738
    8. ' +' → logprob: -11.724774360656738
    9. ' ' → logprob: -11.849774360656738
    10. ')' → logprob: -11.974774360656738

Token 139: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.9094496965408325
    2. ' -' → logprob: -1.2844496965408325
    3. '-' → logprob: -1.4094496965408325
    4. ' +' → logprob: -2.659449577331543
    5. '*' → logprob: -5.409449577331543
    6. ' *' → logprob: -6.909449577331543
    7. '-per' → logprob: -7.784449577331543
    8. ' ' → logprob: -9.034449577331543
    9. 'per' → logprob: -9.659449577331543
    10. ' ' → logprob: -10.034449577331543

Token 140: ' per' (ID: 777)
  Prédit: 'per'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'per' → logprob: -0.008616461418569088
    2. ' per' → logprob: -4.7586164474487305
    3. '(per' → logprob: -14.25861644744873
    4. '	per' → logprob: -14.38361644744873
    5. ' ' → logprob: -15.63361644744873
    6. 'p' → logprob: -16.383617401123047
    7. '_per' → logprob: -16.508617401123047
    8. 'peri' → logprob: -16.633617401123047
    9. '   ' → logprob: -17.758617401123047
    10. 'par' → logprob: -17.883617401123047

Token 141: 'imeters' (ID: 91182)
  Prédit: 'imeters'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'imeters' → logprob: -0.0060698105953633785
    2. 'eters' → logprob: -5.256069660186768
    3. 'meters' → logprob: -7.256069660186768
    4. 'im' → logprob: -9.256070137023926
    5. 'ters' → logprob: -11.381070137023926
    6. 'ometers' → logprob: -12.381070137023926
    7. '```' → logprob: -12.506070137023926
    8. '[' → logprob: -12.506070137023926
    9. '1' → logprob: -12.881070137023926
    10. 'imeter' → logprob: -13.381070137023926

Token 142: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00011534435179783031
    2. '1' → logprob: -9.375115394592285
    3. '```' → logprob: -11.500115394592285
    4. '[-' → logprob: -12.125115394592285
    5. '\[' → logprob: -12.125115394592285
    6. ' [' → logprob: -12.750115394592285
    7. 's' → logprob: -13.000115394592285
    8. '`' → logprob: -14.250115394592285
    9. '![' → logprob: -14.250115394592285
    10. '][' → logprob: -14.375115394592285

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.625
    3. '0' → logprob: -17.125
    4. ']' → logprob: -18.0
    5. '```' → logprob: -18.25
    6. '-' → logprob: -18.875
    7. '۱' → logprob: -19.125
    8. '' → logprob: -19.875
    9. '!' → logprob: -20.0
    10. '１' → logprob: -20.0625

Token 144: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.6815477013587952
    2. ')' → logprob: -0.8065477013587952
    3. '}' → logprob: -3.0565476417541504
    4. ')
' → logprob: -8.431548118591309
    5. ']
' → logprob: -8.931548118591309
    6. '```' → logprob: -8.931548118591309
    7. '']' → logprob: -9.931548118591309
    8. ')]' → logprob: -10.306548118591309
    9. '}
' → logprob: -10.931548118591309
    10. '<|end|>' → logprob: -11.181548118591309

Token 145: 'else' (ID: 2807)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -4.596781946020201e-05
    2. 'else' → logprob: -10.250045776367188
    3. '
' → logprob: -11.875045776367188
    4. ' print' → logprob: -12.875045776367188
    5. '```' → logprob: -14.125045776367188
    6. 'elif' → logprob: -16.250045776367188
    7. '(print' → logprob: -17.750045776367188
    8. ' else' → logprob: -18.000045776367188
    9. 'pr' → logprob: -18.125045776367188
    10. ' 
' → logprob: -18.375045776367188

Token 146: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16025510430335999
    2. ':
' → logprob: -1.9102550745010376
    3. '   ' → logprob: -10.785255432128906
    4. ':
' → logprob: -11.660255432128906
    5. ':

' → logprob: -14.410255432128906
    6. '0' → logprob: -15.160255432128906
    7. ' :' → logprob: -15.410255432128906
    8. ' :
' → logprob: -15.535255432128906
    9. '=' → logprob: -15.660255432128906
    10. ',' → logprob: -17.035255432128906

Token 147: '   ' (ID: 271)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.21123568713665009
    2. '0' → logprob: -2.086235761642456
    3. ' res' → logprob: -2.961235761642456
    4. '   ' → logprob: -4.336235523223877
    5. '-' → logprob: -6.961235523223877
    6. ' -' → logprob: -8.711236000061035
    7. 'print' → logprob: -9.461236000061035
    8. ' ' → logprob: -9.586236000061035
    9. ':' → logprob: -9.836236000061035
    10. ':
' → logprob: -10.336236000061035

Token 148: ' #' (ID: 1069)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.1541873812675476
    2. 'print' → logprob: -2.6541874408721924
    3. ' res' → logprob: -3.1541874408721924
    4. '0' → logprob: -3.9041874408721924
    5. '-' → logprob: -5.154187202453613
    6. ' print' → logprob: -5.779187202453613
    7. ' -' → logprob: -7.529187202453613
    8. ' ' → logprob: -9.654187202453613
    9. '   ' → logprob: -9.654187202453613
    10. '
' → logprob: -9.904187202453613

Token 149: ' Try' (ID: 14720)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.6544299721717834
    2. ' res' → logprob: -0.7794299721717834
    3. 'print' → logprob: -4.154429912567139
    4. ' print' → logprob: -5.654429912567139
    5. ' pass' → logprob: -7.029429912567139
    6. 'pass' → logprob: -7.029429912567139
    7. '   ' → logprob: -8.904430389404297
    8. '0' → logprob: -9.154430389404297
    9. ' ' → logprob: -9.404430389404297
    10. 'r' → logprob: -10.529430389404297

Token 150: ' to' (ID: 316)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.12984700500965118
    2. ' for' → logprob: -2.5048470497131348
    3. '   ' → logprob: -4.004847049713135
    4. ' to' → logprob: -5.129847049713135
    5. 'all' → logprob: -5.379847049713135
    6. ':' → logprob: -6.129847049713135
    7. 'from' → logprob: -6.629847049713135
    8. 'to' → logprob: -6.879847049713135
    9. ' all' → logprob: -6.879847049713135
    10. 'i' → logprob: -7.004847049713135

Token 151: ' find' (ID: 1646)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1616970300674438
    2. 'for' → logprob: -1.1616970300674438
    3. ' find' → logprob: -1.2866970300674438
    4. 'find' → logprob: -3.0366969108581543
    5. ' res' → logprob: -4.661696910858154
    6. 'res' → logprob: -4.911696910858154
    7. 'from' → logprob: -5.286696910858154
    8. 'per' → logprob: -5.911696910858154
    9. ' continue' → logprob: -5.911696910858154
    10. 'pass' → logprob: -6.161696910858154

Token 152: ' two' (ID: 1920)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1282310485839844
    2. 'a' → logprob: -2.0032310485839844
    3. 'max' → logprob: -2.5032310485839844
    4. ' a' → logprob: -2.5032310485839844
    5. ' for' → logprob: -3.2532310485839844
    6. 'per' → logprob: -3.2532310485839844
    7. ' another' → logprob: -3.2532310485839844
    8. 'another' → logprob: -3.3782310485839844
    9. ' the' → logprob: -3.6282310485839844
    10. 'two' → logprob: -3.6282310485839844

Token 153: ' triangles' (ID: 92927)
  Prédit: ' triangles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' triangles' → logprob: -0.6441956162452698
    2. 'tri' → logprob: -2.144195556640625
    3. ' different' → logprob: -2.644195556640625
    4. ' non' → logprob: -2.769195556640625
    5. ' separate' → logprob: -2.769195556640625
    6. ' distinct' → logprob: -3.519195556640625
    7. 'different' → logprob: -3.769195556640625
    8. ' dis' → logprob: -3.894195556640625
    9. ' per' → logprob: -4.269195556640625
    10. 'per' → logprob: -4.394195556640625

Token 154: ' from' (ID: 591)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.19304946064949036
    2. '   ' → logprob: -2.443049430847168
    3. 'found' → logprob: -3.318049430847168
    4. ' for' → logprob: -3.818049430847168
    5. 'else' → logprob: -4.318049430847168
    6. 'possible' → logprob: -4.943049430847168
    7. '#' → logprob: -5.818049430847168
    8. 'per' → logprob: -6.818049430847168
    9. 's' → logprob: -7.318049430847168
    10. 'tri' → logprob: -7.318049430847168

Token 155: ' non' (ID: 2893)
  Prédit: ' the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' the' → logprob: -0.42352408170700073
    2. ' a' → logprob: -2.1735241413116455
    3. 'a' → logprob: -3.1735241413116455
    4. ' N' → logprob: -3.5485241413116455
    5. ' different' → logprob: -3.5485241413116455
    6. ' per' → logprob: -3.6735241413116455
    7. ' i' → logprob: -3.7985241413116455
    8. 'the' → logprob: -4.048523902893066
    9. ' remaining' → logprob: -4.548523902893066
    10. 'per' → logprob: -4.798523902893066

Token 156: '-over' (ID: 37193)
  Prédit: '-over'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-over' → logprob: -0.33302393555641174
    2. '-ad' → logprob: -1.7080239057540894
    3. ' overlapping' → logprob: -2.833024024963379
    4. 'adj' → logprob: -3.833024024963379
    5. 'over' → logprob: -4.083024024963379
    6. ' adjacent' → logprob: -5.958024024963379
    7. '-con' → logprob: -7.083024024963379
    8. '-' → logprob: -7.333024024963379
    9. '-cont' → logprob: -9.208024024963379
    10. ' -' → logprob: -9.333024024963379

Token 157: 'lapping' (ID: 152588)
  Prédit: 'lapping'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lapping' → logprob: -0.0013123786775395274
    2. 'apping' → logprob: -6.751312255859375
    3. 'l' → logprob: -9.376312255859375
    4. 'lap' → logprob: -9.876312255859375
    5. 'ping' → logprob: -13.001312255859375
    6. 'pping' → logprob: -13.376312255859375
    7. 'apped' → logprob: -14.376312255859375
    8. 'aping' → logprob: -14.751312255859375
    9. 'laps' → logprob: -15.376312255859375
    10. '-l' → logprob: -15.376312255859375

Token 158: ' sticks' (ID: 54819)
  Prédit: ' indices'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' indices' → logprob: -1.4582346677780151
    2. ' trip' → logprob: -2.0832347869873047
    3. 'indices' → logprob: -2.0832347869873047
    4. ' sets' → logprob: -2.2082347869873047
    5. ' triangles' → logprob: -2.2082347869873047
    6. ' sides' → logprob: -2.8332347869873047
    7. 'trip' → logprob: -3.2082347869873047
    8. ' triples' → logprob: -3.2082347869873047
    9. ' segments' → logprob: -3.4582347869873047
    10. ' pairs' → logprob: -4.083234786987305

Token 159: ' greed' (ID: 103438)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.8558354377746582
    2. 'for' → logprob: -1.7308354377746582
    3. '
' → logprob: -2.480835437774658
    4. ' sticks' → logprob: -2.730835437774658
    5. 'sticks' → logprob: -3.105835437774658
    6. 'indices' → logprob: -3.230835437774658
    7. '   ' → logprob: -3.730835437774658
    8. ' used' → logprob: -4.105835437774658
    9. '#' → logprob: -4.105835437774658
    10. 'used' → logprob: -4.230835437774658

Token 160: 'ily' (ID: 1810)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6480646133422852
    2. 'ily' → logprob: -0.7730646133422852
    3. 'ier' → logprob: -5.023064613342285
    4. 'fully' → logprob: -5.773064613342285
    5. 'ully' → logprob: -5.773064613342285
    6. 'uly' → logprob: -7.148064613342285
    7. 'for' → logprob: -8.398064613342285
    8. 'ly' → logprob: -8.398064613342285
    9. 'er' → logprob: -8.523064613342285
    10. 'ing' → logprob: -8.523064613342285

Token 161: '
' (ID: 198)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.2441740781068802
    2. 'indices' → logprob: -2.744174003601074
    3. 'sticks' → logprob: -2.869174003601074
    4. 'for' → logprob: -3.369174003601074
    5. 'available' → logprob: -4.619174003601074
    6. 'idx' → logprob: -4.869174003601074
    7. 'visited' → logprob: -4.994174003601074
    8. '#' → logprob: -5.369174003601074
    9. ' used' → logprob: -5.494174003601074
    10. 'left' → logprob: -5.494174003601074

Token 162: '   ' (ID: 271)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.23475737869739532
    2. ' used' → logprob: -3.109757423400879
    3. 'sticks' → logprob: -3.359757423400879
    4. 'indices' → logprob: -3.859757423400879
    5. 'visited' → logprob: -4.109757423400879
    6. 'for' → logprob: -4.109757423400879
    7. '#' → logprob: -4.484757423400879
    8. 'available' → logprob: -4.609757423400879
    9. 'idx' → logprob: -4.859757423400879
    10. ' sticks' → logprob: -4.984757423400879

Token 163: ' #' (ID: 1069)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.2453206181526184
    2. 'sticks' → logprob: -2.8703205585479736
    3. 'indices' → logprob: -3.1203205585479736
    4. 'idx' → logprob: -3.8703205585479736
    5. ' used' → logprob: -4.120320796966553
    6. 'for' → logprob: -4.245320796966553
    7. 'visited' → logprob: -4.370320796966553
    8. 'dp' → logprob: -4.620320796966553
    9. 'available' → logprob: -4.745320796966553
    10. ' sticks' → logprob: -5.495320796966553

Token 164: ' Since' (ID: 12265)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.4710239768028259
    2. 'sticks' → logprob: -2.0960240364074707
    3. 'indices' → logprob: -2.8460240364074707
    4. 'dp' → logprob: -3.0960240364074707
    5. 'length' → logprob: -3.0960240364074707
    6. 'visited' → logprob: -3.7210240364074707
    7. ' used' → logprob: -4.096024036407471
    8. 'edges' → logprob: -4.596024036407471
    9. 'idx' → logprob: -4.596024036407471
    10. ' sticks' → logprob: -5.096024036407471

Token 165: ' we' (ID: 581)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'N' → logprob: -1.0039708614349365
    2. 'i' → logprob: -1.2539708614349365
    3. ' the' → logprob: -2.0039708614349365
    4. 'the' → logprob: -2.2539708614349365
    5. 'a' → logprob: -3.3789708614349365
    6. ' i' → logprob: -3.6289708614349365
    7. ' N' → logprob: -3.8789708614349365
    8. 'len' → logprob: -5.003971099853516
    9. 'per' → logprob: -5.253971099853516
    10. ' a' → logprob: -5.378971099853516

Token 166: ' used' (ID: 2061)
  Prédit: ' have'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' have' → logprob: -0.9034252762794495
    2. 'have' → logprob: -1.9034252166748047
    3. ' need' → logprob: -2.6534252166748047
    4. ' are' → logprob: -2.7784252166748047
    5. ' don't' → logprob: -2.7784252166748047
    6. ' cannot' → logprob: -2.9034252166748047
    7. ' can't' → logprob: -3.6534252166748047
    8. ''re' → logprob: -3.6534252166748047
    9. ' only' → logprob: -3.6534252166748047
    10. ' know' → logprob: -3.9034252166748047

Token 167: ' overlapping' (ID: 90457)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.1118862628936768
    2. 'a' → logprob: -1.7368862628936768
    3. ' a' → logprob: -1.7368862628936768
    4. ' i' → logprob: -2.1118862628936768
    5. ' the' → logprob: -2.3618862628936768
    6. ' for' → logprob: -3.9868862628936768
    7. 'the' → logprob: -4.611886024475098
    8. 'for' → logprob: -4.611886024475098
    9. ' sticks' → logprob: -4.611886024475098
    10. 'pass' → logprob: -4.986886024475098

Token 168: ' indices' (ID: 30378)
  Prédit: ' sticks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sticks' → logprob: -0.13009580969810486
    2. ' indices' → logprob: -3.1300957202911377
    3. 'sticks' → logprob: -3.1300957202911377
    4. 'indices' → logprob: -3.8800957202911377
    5. 'a' → logprob: -5.130095958709717
    6. ')' → logprob: -6.630095958709717
    7. ' a' → logprob: -6.880095958709717
    8. '<|end|>' → logprob: -7.380095958709717
    9. ' for' → logprob: -7.755095958709717
    10. ' triangles' → logprob: -7.755095958709717

Token 169: ' above' (ID: 5151)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.562463641166687
    2. ' for' → logprob: -1.812463641166687
    3. ' ,' → logprob: -2.6874637603759766
    4. '
' → logprob: -2.8124637603759766
    5. '   ' → logprob: -3.0624637603759766
    6. 'for' → logprob: -3.6874637603759766
    7. ',
' → logprob: -4.812463760375977
    8. 'indices' → logprob: -5.312463760375977
    9. ' indices' → logprob: -5.312463760375977
    10. ')' → logprob: -5.687463760375977

Token 170: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0214064121246338
    2. 'for' → logprob: -1.7714064121246338
    3. '#' → logprob: -2.396406412124634
    4. 'from' → logprob: -2.771406412124634
    5. '
' → logprob: -2.896406412124634
    6. '   ' → logprob: -2.896406412124634
    7. 'pass' → logprob: -3.896406412124634
    8. 'indices' → logprob: -4.021406173706055
    9. ' from' → logprob: -4.146406173706055
    10. ' sticks' → logprob: -4.271406173706055

Token 171: ' try' (ID: 2075)
  Prédit: 'sticks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sticks' → logprob: -1.0025560855865479
    2. 'used' → logprob: -1.7525560855865479
    3. '#' → logprob: -2.627556085586548
    4. 'per' → logprob: -3.127556085586548
    5. 'pass' → logprob: -3.252556085586548
    6. 'for' → logprob: -3.252556085586548
    7. 'visited' → logprob: -3.502556085586548
    8. 'idx' → logprob: -3.752556085586548
    9. 'length' → logprob: -3.877556085586548
    10. 'i' → logprob: -3.877556085586548

Token 172: ' another' (ID: 3613)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.2776937186717987
    2. ' to' → logprob: -2.527693748474121
    3. ':' → logprob: -2.902693748474121
    4. 'another' → logprob: -3.277693748474121
    5. '   ' → logprob: -3.777693748474121
    6. 'for' → logprob: -4.402693748474121
    7. 'a' → logprob: -4.652693748474121
    8. 'again' → logprob: -5.527693748474121
    9. 'from' → logprob: -5.652693748474121
    10. ':
' → logprob: -5.777693748474121

Token 173: ' approach' (ID: 7139)
  Prédit: ' approach'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' approach' → logprob: -0.6023740768432617
    2. '
' → logprob: -1.9773740768432617
    3. 'for' → logprob: -1.9773740768432617
    4. 'a' → logprob: -3.2273740768432617
    5. 'appro' → logprob: -3.3523740768432617
    6. 'pass' → logprob: -3.6023740768432617
    7. 'i' → logprob: -4.227374076843262
    8. '#' → logprob: -4.352374076843262
    9. ' for' → logprob: -4.602374076843262
    10. ':' → logprob: -4.727374076843262

Token 174: ':
' (ID: 734)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.505688488483429
    2. 'sticks' → logprob: -1.8806884288787842
    3. 'indices' → logprob: -2.630688428878784
    4. 'available' → logprob: -2.755688428878784
    5. 'visited' → logprob: -3.255688428878784
    6. 'for' → logprob: -4.880688667297363
    7. 'a' → logprob: -4.880688667297363
    8. 'from' → logprob: -5.005688667297363
    9. 'possible' → logprob: -5.380688667297363
    10. '#' → logprob: -5.380688667297363

Token 175: '   ' (ID: 271)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.5505245923995972
    2. ' used' → logprob: -1.9255245923995972
    3. 'sticks' → logprob: -2.8005247116088867
    4. 'indices' → logprob: -3.1755247116088867
    5. ' sticks' → logprob: -3.3005247116088867
    6. 'visited' → logprob: -3.5505247116088867
    7. 'dp' → logprob: -3.6755247116088867
    8. 'available' → logprob: -4.300524711608887
    9. 'idx' → logprob: -4.800524711608887
    10. 'length' → logprob: -5.050524711608887

Token 176: ' sticks' (ID: 54819)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.46742910146713257
    2. ' used' → logprob: -2.2174291610717773
    3. 'sticks' (adapté à ' sticks') → logprob: -2.4674291610717773
    4. ' sticks' → logprob: -3.3424291610717773
    5. 'i' → logprob: -3.4674291610717773
    6. 'visited' → logprob: -3.9674291610717773
    7. 'indices' → logprob: -3.9674291610717773
    8. 'per' → logprob: -4.217429161071777
    9. 'idx' → logprob: -4.467429161071777
    10. 'dp' → logprob: -4.717429161071777

Token 177: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2015475332736969
    2. ' =' → logprob: -1.7015475034713745
    3. '_sorted' → logprob: -9.951547622680664
    4. '_idx' → logprob: -10.951547622680664
    5. '.sort' → logprob: -11.326547622680664
    6. '_' → logprob: -11.451547622680664
    7. '_indices' → logprob: -11.701547622680664
    8. 'sorted' → logprob: -11.826547622680664
    9. '=[]' → logprob: -12.201547622680664
    10. '.' → logprob: -12.701547622680664

Token 178: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1167583167552948
    2. ' a' → logprob: -2.866758346557617
    3. 'sorted' → logprob: -4.116758346557617
    4. '[]' → logprob: -4.241758346557617
    5. '[a' → logprob: -4.616758346557617
    6. ' sorted' → logprob: -5.491758346557617
    7. '[' → logprob: -5.866758346557617
    8. ' [' → logprob: -6.116758346557617
    9. ' []' → logprob: -6.241758346557617
    10. 'list' → logprob: -7.366758346557617

Token 179: '[:' (ID: 7808)
  Prédit: '.copy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.copy' → logprob: -0.3438436985015869
    2. '[:]' → logprob: -1.343843698501587
    3. '[:' → logprob: -5.218843460083008
    4. '.sort' → logprob: -5.218843460083008
    5. 'sorted' → logprob: -5.718843460083008
    6. '[::-' → logprob: -5.718843460083008
    7. '[' → logprob: -5.718843460083008
    8. '
' → logprob: -5.968843460083008
    9. '=' → logprob: -6.218843460083008
    10. ' =' → logprob: -6.343843460083008

Token 180: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0488220676779747
    2. '])' → logprob: -3.4238221645355225
    3. 'N' → logprob: -4.423821926116943
    4. 'i' → logprob: -6.173821926116943
    5. ']
' → logprob: -7.423821926116943
    6. '-' → logprob: -8.673822402954102
    7. '(' → logprob: -10.173822402954102
    8. '])
' → logprob: -10.298822402954102
    9. '3' → logprob: -10.548822402954102
    10. ']

' → logprob: -10.673822402954102

Token 181: '   ' (ID: 271)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'used' → logprob: -1.0155748128890991
    2. 'sticks' → logprob: -1.1405748128890991
    3. 'i' → logprob: -1.6405748128890991
    4. '
' → logprob: -2.8905749320983887
    5. 'idx' → logprob: -4.765574932098389
    6. 'for' → logprob: -4.765574932098389
    7. 'st' → logprob: -5.015574932098389
    8. '   ' → logprob: -5.265574932098389
    9. 'indices' → logprob: -5.265574932098389
    10. 'visited' → logprob: -5.265574932098389

Token 182: ' triangles' (ID: 92927)
  Prédit: 'used'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'used' → logprob: -0.6796607375144958
    2. 'tri' → logprob: -1.1796607971191406
    3. 'res' → logprob: -2.8046607971191406
    4. 'result' → logprob: -2.9296607971191406
    5. 'per' → logprob: -3.9296607971191406
    6. 'i' → logprob: -4.554660797119141
    7. 'trip' → logprob: -4.679660797119141
    8. 'sticks' → logprob: -4.929660797119141
    9. 'selected' → logprob: -5.179660797119141
    10. 'pairs' → logprob: -5.554660797119141

Token 183: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28241753578186035
    2. ' =' → logprob: -1.4074175357818604
    3. '=[]' → logprob: -6.782417297363281
    4. 'found' → logprob: -9.407417297363281
    5. '_found' → logprob: -10.157417297363281
    6. '=[]
' → logprob: -12.282417297363281
    7. ' found' → logprob: -13.532417297363281
    8. 'Found' → logprob: -13.657417297363281
    9. 'made' → logprob: -14.407417297363281
    10. ' ' → logprob: -14.657417297363281

Token 184: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.0008313055150210857
    2. '0' → logprob: -7.750831127166748
    3. ' []' → logprob: -8.375831604003906
    4. '[]
' → logprob: -8.750831604003906
    5. '[]}' → logprob: -12.250831604003906
    6. ' ' → logprob: -12.750831604003906
    7. '[' → logprob: -13.250831604003906
    8. '[],' → logprob: -13.750831604003906
    9. '[]

' → logprob: -14.000831604003906
    10. '[]>' → logprob: -15.375831604003906

Token 185: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0817049965262413
    2. '   ' → logprob: -3.456705093383789
    3. ' i' → logprob: -3.706705093383789
    4. 'while' → logprob: -4.331705093383789
    5. ' while' → logprob: -5.706705093383789
    6. 'idx' → logprob: -5.831705093383789
    7. 'for' → logprob: -6.706705093383789
    8. ' for' → logprob: -6.706705093383789
    9. 'index' → logprob: -8.706705093383789
    10. ',' → logprob: -9.581705093383789

Token 186: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.18301886320114136
    2. 'idx' → logprob: -1.9330189228057861
    3. 'while' → logprob: -4.058018684387207
    4. 'used' → logprob: -6.308018684387207
    5. 'for' → logprob: -6.433018684387207
    6. 'index' → logprob: -6.808018684387207
    7. 'j' → logprob: -8.308018684387207
    8. 'sticks' → logprob: -8.933018684387207
    9. ' i' → logprob: -9.183018684387207
    10. 'indices' → logprob: -10.183018684387207

Token 187: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132660686969757
    2. ' =' → logprob: -1.3132660388946533
    3. ' +=' → logprob: -13.563265800476074
    4. ' ' → logprob: -13.563265800476074
    5. '+=' → logprob: -13.688265800476074
    6. ',' → logprob: -14.813265800476074
    7. ')' → logprob: -16.56326675415039
    8. '.' → logprob: -17.06326675415039
    9. '0' → logprob: -17.06326675415039
    10. ' =
' → logprob: -17.18826675415039

Token 188: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015073629328981042
    2. ' ' → logprob: -6.50150728225708
    3. '2' → logprob: -12.501507759094238
    4. '1' → logprob: -14.126507759094238
    5. '   ' → logprob: -15.501507759094238
    6. '3' → logprob: -16.251506805419922
    7. '  ' → logprob: -16.314006805419922
    8. '```' → logprob: -17.126506805419922
    9. '    ' → logprob: -17.189006805419922
    10. '=' → logprob: -17.439006805419922

Token 189: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.955703818472102e-05
    2. ' ' → logprob: -9.875059127807617
    3. '2' → logprob: -11.875059127807617
    4. '1' → logprob: -14.250059127807617
    5. '   ' → logprob: -16.375059127807617
    6. '3' → logprob: -16.375059127807617
    7. '```' → logprob: -16.750059127807617
    8. '  ' → logprob: -17.437559127807617
    9. '    ' → logprob: -17.562559127807617
    10. '=' → logprob: -17.875059127807617

Token 190: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8120647668838501
    2. 'while' → logprob: -1.31206476688385
    3. '<|end|>' → logprob: -2.0620646476745605
    4. ' while' → logprob: -2.1870646476745605
    5. '   ' → logprob: -3.3120646476745605
    6. '	while' → logprob: -5.1870646476745605
    7. '    
' → logprob: -6.3120646476745605
    8. '<|end|>' → logprob: -7.0620646476745605
    9. ' ' → logprob: -7.8120646476745605
    10. ')' → logprob: -8.187065124511719

Token 191: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 192: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.05501542612910271
    2. ' while' → logprob: -2.9300153255462646
    3. '   ' → logprob: -9.680015563964844
    4. '
' → logprob: -10.055015563964844
    5. '	while' → logprob: -11.055015563964844
    6. ')' → logprob: -13.305015563964844
    7. '<|end|>' → logprob: -13.305015563964844
    8. '```' → logprob: -13.305015563964844
    9. '    
' → logprob: -13.555015563964844
    10. 'len' → logprob: -13.555015563964844

Token 193: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.2913855016231537
    2. ' i' → logprob: -1.416385531425476
    3. ' len' → logprob: -5.166385650634766
    4. 'len' → logprob: -5.416385650634766
    5. ' ' → logprob: -11.166385650634766
    6. '	i' → logprob: -12.166385650634766
    7. 'N' → logprob: -12.791385650634766
    8. 'True' → logprob: -13.041385650634766
    9. ' True' → logprob: -13.041385650634766
    10. '(len' → logprob: -13.478885650634766

Token 194: ' +' (ID: 659)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.8217476606369019
    2. ' <' → logprob: -0.9467476606369019
    3. '<=' → logprob: -2.3217477798461914
    4. '<' → logprob: -2.8217477798461914
    5. '+' → logprob: -4.321747779846191
    6. ' +' → logprob: -6.946747779846191
    7. '<len' → logprob: -8.446747779846191
    8. '<N' → logprob: -8.821747779846191
    9. ' ' → logprob: -9.446747779846191
    10. ' ≤' → logprob: -11.571747779846191

Token 195: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0011741555063053966
    2. ' ' → logprob: -6.751173973083496
    3. '3' → logprob: -12.626173973083496
    4. '<' → logprob: -15.251173973083496
    5. '5' → logprob: -16.001174926757812
    6. '```' → logprob: -16.626174926757812
    7. '
' → logprob: -16.751174926757812
    8. '4' → logprob: -16.751174926757812
    9. ' <' → logprob: -17.688674926757812
    10. '  ' → logprob: -18.063674926757812

Token 196: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.1472419600977446e-06
    2. '3' → logprob: -14.000000953674316
    3. ' ' → logprob: -16.250001907348633
    4. '<' → logprob: -16.625001907348633
    5. '
' → logprob: -16.625001907348633
    6. '5' → logprob: -17.250001907348633
    7. '```' → logprob: -17.750001907348633
    8. '

' → logprob: -17.875001907348633
    9. '２' → logprob: -18.500001907348633
    10. '1' → logprob: -18.625001907348633

Token 197: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.32045599818229675
    2. '<' → logprob: -1.4454560279846191
    3. ' <=' → logprob: -3.570456027984619
    4. '<=' → logprob: -4.570456027984619
    5. '<len' → logprob: -11.320455551147461
    6. ' ' → logprob: -11.945455551147461
    7. '<|end|>' → logprob: -12.195455551147461
    8. '<n' → logprob: -12.445455551147461
    9. '```' → logprob: -12.695455551147461
    10. ' ≤' → logprob: -13.070455551147461

Token 198: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.25429001450538635
    2. 'N' → logprob: -1.504289984703064
    3. ' len' → logprob: -6.1292901039123535
    4. ' N' → logprob: -8.629289627075195
    5. '(len' → logprob: -14.754289627075195
    6. 'n' → logprob: -15.129289627075195
    7. '   ' → logprob: -15.629289627075195
    8. ' ' → logprob: -15.754289627075195
    9. 'Len' → logprob: -16.504289627075195
    10. '	len' → logprob: -17.379289627075195

Token 199: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.00016039233014453202
    2. '(' → logprob: -9.500160217285156
    3. 'sticks' → logprob: -9.750160217285156
    4. 'st' → logprob: -11.000160217285156
    5. ' sticks' → logprob: -11.750160217285156
    6. '(a' → logprob: -14.000160217285156
    7. 'a' → logprob: -14.375160217285156
    8. ' (' → logprob: -14.625160217285156
    9. '(s' → logprob: -15.375160217285156
    10. 'stick' → logprob: -15.750160217285156

Token 200: 'icks' (ID: 8736)
  Prédit: 'icks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icks' → logprob: -0.0018440400017425418
    2. 'cks' → logprob: -6.7518439292907715
    3. ')' → logprob: -7.8768439292907715
    4. 'ics' → logprob: -10.12684440612793
    5. ')
' → logprob: -10.12684440612793
    6. 'ticks' → logprob: -10.25184440612793
    7. '   ' → logprob: -11.00184440612793
    8. 'a' → logprob: -11.62684440612793
    9. 'ic' → logprob: -11.62684440612793
    10. '``' → logprob: -11.62684440612793

Token 201: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1607552319765091
    2. '):
' → logprob: -1.9107552766799927
    3. ')' → logprob: -7.785755157470703
    4. ':' → logprob: -9.785755157470703
    5. ' ):' → logprob: -10.910755157470703
    6. '   ' → logprob: -11.160755157470703
    7. ' and' → logprob: -11.535755157470703
    8. '):

' → logprob: -12.285755157470703
    9. ' ):
' → logprob: -12.535755157470703
    10. '):
' → logprob: -12.660755157470703

Token 202: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004745418205857277
    2. ':' → logprob: -5.8797454833984375
    3. '   ' → logprob: -7.5047454833984375
    4. ' if' → logprob: -7.7547454833984375
    5. ',' → logprob: -7.8797454833984375
    6. ' and' → logprob: -8.879745483398438
    7. '<|end|>' → logprob: -9.004745483398438
    8. '    ' → logprob: -9.254745483398438
    9. '        
' → logprob: -10.129745483398438
    10. '     ' → logprob: -10.379745483398438

Token 203: ' if' (ID: 538)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2560601234436035
    2. ' if' → logprob: -1.8810601234436035
    3. '       ' → logprob: -3.0060601234436035
    4. 'if' (adapté à ' if') → logprob: -3.7560601234436035
    5. '    ' → logprob: -8.131059646606445
    6. ' ' → logprob: -8.631059646606445
    7. '    
' → logprob: -10.631059646606445
    8. '     ' → logprob: -10.756059646606445
    9. '  ' → logprob: -10.881059646606445
    10. '<|end|>' → logprob: -10.881059646606445

Token 204: ' can' (ID: 665)
  Prédit: 'can'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'can' → logprob: -0.3902585208415985
    2. ' can' → logprob: -1.140258550643921
    3. ' sticks' → logprob: -6.390258312225342
    4. 'sticks' → logprob: -6.390258312225342
    5. 'st' → logprob: -11.6402587890625
    6. '	can' → logprob: -12.2652587890625
    7. '   ' → logprob: -12.8902587890625
    8. ' ' → logprob: -12.8902587890625
    9. '(can' → logprob: -13.0152587890625
    10. ' st' → logprob: -14.0777587890625

Token 205: '_make' (ID: 70070)
  Prédit: '_make'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_make' → logprob: -2.2842308680992573e-05
    2. 'make' → logprob: -10.750022888183594
    3. '_can' → logprob: -14.375022888183594
    4. '_st' → logprob: -15.375022888183594
    5. 'Make' → logprob: -15.375022888183594
    6. ' _' → logprob: -15.625022888183594
    7. ' make' → logprob: -17.500022888183594
    8. '_' → logprob: -18.000022888183594
    9. 'can' → logprob: -18.500022888183594
    10. '```' → logprob: -18.625022888183594

Token 206: '_triangle' (ID: 187218)
  Prédit: '_triangle'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_triangle' → logprob: -0.000587821879889816
    2. 'triangle' → logprob: -7.7505879402160645
    3. '(st' → logprob: -8.875587463378906
    4. '_tri' → logprob: -11.625587463378906
    5. 'Triangle' → logprob: -12.500587463378906
    6. '_make' → logprob: -13.250587463378906
    7. 'make' → logprob: -13.750587463378906
    8. 'st' → logprob: -14.250587463378906
    9. 'tri' → logprob: -15.125587463378906
    10. '_TRI' → logprob: -15.875587463378906

Token 207: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.0003044802288059145
    2. '(' → logprob: -8.125304222106934
    3. ' (' → logprob: -12.625304222106934
    4. ' sticks' → logprob: -12.750304222106934
    5. 'sticks' → logprob: -13.500304222106934
    6. '(s' → logprob: -15.500304222106934
    7. '(
' → logprob: -15.750304222106934
    8. ')' → logprob: -16.00030517578125
    9. 'st' → logprob: -16.00030517578125
    10. '	st' → logprob: -16.87530517578125

Token 208: 'icks' (ID: 8736)
  Prédit: 'icks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icks' → logprob: -0.0023629211355000734
    2. 'cks' → logprob: -6.8773627281188965
    3. '[i' → logprob: -7.1273627281188965
    4. 'i' → logprob: -9.127363204956055
    5. 'ticks' → logprob: -9.252363204956055
    6. 'ick' → logprob: -9.752363204956055
    7. '[' → logprob: -10.252363204956055
    8. 'acks' → logprob: -10.377363204956055
    9. '   ' → logprob: -10.377363204956055
    10. 'ics' → logprob: -10.377363204956055

Token 209: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00082309142453596
    2. '[' → logprob: -7.125823020935059
    3. ' [' → logprob: -11.500823020935059
    4. 'i' → logprob: -12.625823020935059
    5. '   ' → logprob: -13.125823020935059
    6. ' ' → logprob: -13.875823020935059
    7. '[
' → logprob: -14.250823020935059
    8. ')' → logprob: -14.625823020935059
    9. ' i' → logprob: -15.125823020935059
    10. ',' → logprob: -15.375823020935059

Token 210: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.20671392977237701
    2. ',' → logprob: -1.7067139148712158
    3. ' ,' → logprob: -6.206714153289795
    4. '),' → logprob: -6.331714153289795
    5. '   ' → logprob: -7.706714153289795
    6. '>,' → logprob: -8.581713676452637
    7. ']' → logprob: -8.581713676452637
    8. ' ],' → logprob: -8.581713676452637
    9. '+' → logprob: -8.956713676452637
    10. ' ' → logprob: -9.456713676452637

Token 211: ' sticks' (ID: 54819)
  Prédit: ' sticks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sticks' → logprob: -0.6932244300842285
    2. 'sticks' → logprob: -0.6932244300842285
    3. 'st' → logprob: -9.69322395324707
    4. 'stick' → logprob: -12.06822395324707
    5. '(st' → logprob: -13.19322395324707
    6. 'ticks' → logprob: -14.19322395324707
    7. ')' → logprob: -14.31822395324707
    8. 'stakes' → logprob: -14.31822395324707
    9. ' ' → logprob: -14.31822395324707
    10. ' stacks' → logprob: -14.44322395324707

Token 212: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.316536009311676
    2. '+' → logprob: -1.3165359497070312
    3. ',' → logprob: -6.316535949707031
    4. '],' → logprob: -8.066535949707031
    5. 'i' → logprob: -8.566535949707031
    6. '+,' → logprob: -8.566535949707031
    7. ',i' → logprob: -8.691535949707031
    8. ' +' → logprob: -8.941535949707031
    9. '+i' → logprob: -9.191535949707031
    10. ' ,' → logprob: -9.441535949707031

Token 213: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0025534271262586117
    2. ' +' → logprob: -6.002553462982178
    3. '],' → logprob: -9.87755298614502
    4. '1' → logprob: -11.37755298614502
    5. '+i' → logprob: -12.62755298614502
    6. '+
' → logprob: -12.87755298614502
    7. '   ' → logprob: -12.87755298614502
    8. ']+' → logprob: -13.00255298614502
    9. ']' → logprob: -13.12755298614502
    10. ' ' → logprob: -14.62755298614502

Token 214: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.098748053773306e-05
    2. ' ' → logprob: -10.00006103515625
    3. '2' → logprob: -11.75006103515625
    4. '+' → logprob: -12.81256103515625
    5. '
' → logprob: -13.25006103515625
    6. '```' → logprob: -13.50006103515625
    7. '   ' → logprob: -14.43756103515625
    8. 'i' → logprob: -15.68756103515625
    9. '3' → logprob: -15.75006103515625
    10. '

' → logprob: -16.00006103515625

Token 215: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.031322404742240906
    2. '],' → logprob: -3.781322479248047
    3. '),' → logprob: -5.531322479248047
    4. ' ,' → logprob: -5.531322479248047
    5. '},' → logprob: -10.531322479248047
    6. ')' → logprob: -10.906322479248047
    7. '   ' → logprob: -11.281322479248047
    8. ',
' → logprob: -11.406322479248047
    9. '>,' → logprob: -11.781322479248047
    10. ' ' → logprob: -12.031322479248047

Token 216: ' sticks' (ID: 54819)
  Prédit: 'sticks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sticks' → logprob: -0.10357046127319336
    2. ' sticks' → logprob: -2.3535704612731934
    3. 'st' → logprob: -5.728570461273193
    4. 'stick' → logprob: -9.478570938110352
    5. 'stakes' → logprob: -12.353570938110352
    6. '(st' → logprob: -12.728570938110352
    7. '	st' → logprob: -12.853570938110352
    8. 'stairs' → logprob: -12.853570938110352
    9. ' ' → logprob: -13.228570938110352
    10. 'stones' → logprob: -13.353570938110352

Token 217: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00608532689511776
    2. '+' → logprob: -5.256085395812988
    3. '])' → logprob: -7.881085395812988
    4. '[' → logprob: -8.506085395812988
    5. 'i' → logprob: -9.381085395812988
    6. '```' → logprob: -9.381085395812988
    7. '   ' → logprob: -10.631085395812988
    8. '2' → logprob: -11.006085395812988
    9. ')' → logprob: -11.381085395812988
    10. ']' → logprob: -11.506085395812988

Token 218: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.023952333256602287
    2. '2' → logprob: -3.7739522457122803
    3. '[' → logprob: -8.02395248413086
    4. ' +' → logprob: -8.77395248413086
    5. ' ' → logprob: -9.39895248413086
    6. '   ' → logprob: -9.77395248413086
    7. '])' → logprob: -10.14895248413086
    8. '+
' → logprob: -11.39895248413086
    9. '```' → logprob: -11.64895248413086
    10. '[i' → logprob: -12.14895248413086

Token 219: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -4.008129963040119e-06
    2. ' ' → logprob: -13.375003814697266
    3. '```' → logprob: -13.625003814697266
    4. '
' → logprob: -14.937503814697266
    5. '1' → logprob: -15.562503814697266
    6. '   ' → logprob: -16.000003814697266
    7. ')' → logprob: -16.187503814697266
    8. '...' → logprob: -16.250003814697266
    9. '3' → logprob: -16.500003814697266
    10. '۲' → logprob: -16.875003814697266

Token 220: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.034159768372774124
    2. '):
' → logprob: -3.4091596603393555
    3. ')' → logprob: -7.6591596603393555
    4. ':' → logprob: -10.909159660339355
    5. '   ' → logprob: -12.159159660339355
    6. '):

' → logprob: -12.409159660339355
    7. ''):' → logprob: -12.409159660339355
    8. ']):' → logprob: -12.784159660339355
    9. '       ' → logprob: -13.284159660339355
    10. ' ):' → logprob: -13.534159660339355

Token 221: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3955745995044708
    2. '       ' → logprob: -1.5205745697021484
    3. ':
' → logprob: -2.8955745697021484
    4. '           ' → logprob: -3.2705745697021484
    5. '):' → logprob: -4.770574569702148
    6. '):
' → logprob: -5.895574569702148
    7. ',' → logprob: -6.020574569702148
    8. '```' → logprob: -7.895574569702148
    9. ')' → logprob: -8.895574569702148
    10. '   ' → logprob: -9.020574569702148

Token 222: ' triangles' (ID: 92927)
  Prédit: ' triangles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' triangles' → logprob: -0.12363377958536148
    2. '       ' → logprob: -2.373633861541748
    3. 'tri' → logprob: -3.873633861541748
    4. '           ' → logprob: -6.498633861541748
    5. '   ' → logprob: -8.87363338470459
    6. '               ' → logprob: -9.12363338470459
    7. ' sticks' → logprob: -9.24863338470459
    8. ' triangle' → logprob: -9.24863338470459
    9. '_tri' → logprob: -9.24863338470459
    10. 'Triangles' → logprob: -9.87363338470459

Token 223: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.005254387855529785
    2. '.' → logprob: -5.25525426864624
    3. ' .' → logprob: -11.505254745483398
    4. '=' → logprob: -12.380254745483398
    5. ' =' → logprob: -12.880254745483398
    6. ').' → logprob: -13.630254745483398
    7. '.extend' → logprob: -14.255254745483398
    8. '.app' → logprob: -14.755254745483398
    9. '.ap' → logprob: -15.005254745483398
    10. '().' → logprob: -15.255254745483398

Token 224: '(st' (ID: 4065)
  Prédit: '(st'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(st' → logprob: -0.020566295832395554
    2. ' (' → logprob: -4.645566463470459
    3. '(' → logprob: -4.895566463470459
    4. ' sticks' → logprob: -5.895566463470459
    5. 'sticks' → logprob: -7.770566463470459
    6. '((' → logprob: -9.7705659866333
    7. ' st' → logprob: -11.2705659866333
    8. 'st' → logprob: -11.2705659866333
    9. '(
' → logprob: -12.0205659866333
    10. '(tr' → logprob: -13.2705659866333

Token 225: 'icks' (ID: 8736)
  Prédit: 'icks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'icks' → logprob: -0.018566956743597984
    2. 'cks' → logprob: -4.268567085266113
    3. '[i' → logprob: -6.518567085266113
    4. 'acks' → logprob: -6.518567085266113
    5. '[' → logprob: -8.393567085266113
    6. 'ics' → logprob: -8.643567085266113
    7. 'ticks' → logprob: -9.143567085266113
    8. 'i' → logprob: -9.268567085266113
    9. '   ' → logprob: -9.768567085266113
    10. 'ick' → logprob: -9.893567085266113

Token 226: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010986098641296849
    2. '[' → logprob: -9.125109672546387
    3. '   ' → logprob: -14.625109672546387
    4. ' [' → logprob: -15.750109672546387
    5. 'i' → logprob: -15.875109672546387
    6. '(i' → logprob: -16.625110626220703
    7. ')' → logprob: -17.000110626220703
    8. '[
' → logprob: -17.250110626220703
    9. '```' → logprob: -17.500110626220703
    10. ' ' → logprob: -17.625110626220703

Token 227: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.047913528978824615
    2. '+' → logprob: -3.2979135513305664
    3. ']+' → logprob: -5.422913551330566
    4. ' +' → logprob: -5.547913551330566
    5. ' ]' → logprob: -6.797913551330566
    6. '],' → logprob: -9.172913551330566
    7. '])' → logprob: -9.297913551330566
    8. ')' → logprob: -9.922913551330566
    9. ' ' → logprob: -10.547913551330566
    10. '[' → logprob: -10.672913551330566

Token 228: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5454103350639343
    2. ' +' → logprob: -0.9204103350639343
    3. ')' → logprob: -4.04541015625
    4. ',' → logprob: -6.54541015625
    5. ')+' → logprob: -7.67041015625
    6. '   ' → logprob: -7.79541015625
    7. '+
' → logprob: -7.92041015625
    8. '-' → logprob: -8.29541015625
    9. ']' → logprob: -8.42041015625
    10. '),' → logprob: -8.42041015625

Token 229: ' sticks' (ID: 54819)
  Prédit: 'sticks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sticks' → logprob: -0.016306258738040924
    2. ' sticks' → logprob: -4.141306400299072
    3. 'st' → logprob: -8.266305923461914
    4. 'stick' → logprob: -12.266305923461914
    5. ' ' → logprob: -13.141305923461914
    6. 'tri' → logprob: -13.516305923461914
    7. 'stakes' → logprob: -13.766305923461914
    8. '3' → logprob: -14.391305923461914
    9. '-st' → logprob: -14.641305923461914
    10. '```' → logprob: -14.891305923461914

Token 230: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.7968066206085496e-05
    2. 'i' → logprob: -10.625027656555176
    3. '[' → logprob: -12.875027656555176
    4. '(i' → logprob: -14.625027656555176
    5. ' ' → logprob: -16.250028610229492
    6. ' [' → logprob: -16.375028610229492
    7. '1' → logprob: -16.500028610229492
    8. '{i' → logprob: -16.625028610229492
    9. ' i' → logprob: -17.250028610229492
    10. '`' → logprob: -17.375028610229492

Token 231: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3487810790538788
    2. '1' → logprob: -1.2237811088562012
    3. ']+' → logprob: -9.098780632019043
    4. '[' → logprob: -9.223780632019043
    5. ' +' → logprob: -9.973780632019043
    6. '   ' → logprob: -10.598780632019043
    7. ']' → logprob: -11.098780632019043
    8. '+
' → logprob: -11.723780632019043
    9. ' ' → logprob: -11.848780632019043
    10. '2' → logprob: -12.098780632019043

Token 232: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1398757123970427e-05
    2. '0' → logprob: -12.500011444091797
    3. '
' → logprob: -12.625011444091797
    4. '   ' → logprob: -13.750011444091797
    5. ' ' → logprob: -14.000011444091797
    6. '2' → logprob: -14.062511444091797
    7. 'i' → logprob: -14.187511444091797
    8. '  ' → logprob: -16.312511444091797
    9. '[' → logprob: -16.562511444091797
    10. '+' → logprob: -16.562511444091797

Token 233: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.5759490728378296
    2. '+' → logprob: -0.8259490728378296
    3. ' ' → logprob: -12.825948715209961
    4. '           ' → logprob: -12.950948715209961
    5. '+
' → logprob: -14.075948715209961
    6. ' +
' → logprob: -14.700948715209961
    7. '            ' → logprob: -14.700948715209961
    8. '```' → logprob: -15.075948715209961
    9. ')' → logprob: -15.200948715209961
    10. ' ' → logprob: -15.450948715209961

Token 234: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5231283903121948
    2. ' +' → logprob: -0.8981283903121948
    3. ' ' → logprob: -13.523128509521484
    4. '```' → logprob: -14.023128509521484
    5. '+
' → logprob: -14.148128509521484
    6. ' ' → logprob: -15.023128509521484
    7. ' +
' → logprob: -15.273128509521484
    8. ')' → logprob: -15.398128509521484
    9. '           ' → logprob: -15.648128509521484
    10. '[' → logprob: -15.898128509521484

Token 235: ' sticks' (ID: 54819)
  Prédit: 'sticks'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sticks' → logprob: -0.0016218608943745494
    2. ' sticks' → logprob: -7.001621723175049
    3. 'st' → logprob: -7.251621723175049
    4. 'stick' → logprob: -14.251622200012207
    5. 'stakes' → logprob: -14.876622200012207
    6. '	st' → logprob: -17.25162124633789
    7. 'stairs' → logprob: -17.37662124633789
    8. '(st' → logprob: -18.12662124633789
    9. ' st' → logprob: -18.37662124633789
    10. '```' → logprob: -18.50162124633789

Token 236: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.008129963040119e-06
    2. '[' → logprob: -12.625003814697266
    3. 'i' → logprob: -15.125003814697266
    4. '+' → logprob: -16.125003814697266
    5. '[++' → logprob: -16.625003814697266
    6. '[
' → logprob: -16.875003814697266
    7. ' [' → logprob: -17.000003814697266
    8. '[j' → logprob: -17.250003814697266
    9. '2' → logprob: -17.250003814697266
    10. '```' → logprob: -17.375003814697266

Token 237: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004671376198530197
    2. '2' → logprob: -5.379671573638916
    3. '[' → logprob: -10.754671096801758
    4. ' +' → logprob: -11.379671096801758
    5. '```' → logprob: -11.629671096801758
    6. '   ' → logprob: -13.254671096801758
    7. '+
' → logprob: -13.379671096801758
    8. ']' → logprob: -13.879671096801758
    9. ']+' → logprob: -14.004671096801758
    10. '])' → logprob: -14.254671096801758

Token 238: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.200166469876422e-06
    2. ' ' → logprob: -12.875004768371582
    3. '
' → logprob: -14.250004768371582
    4. '```' → logprob: -14.750004768371582
    5. '3' → logprob: -14.937504768371582
    6. '۲' → logprob: -15.500004768371582
    7. '+' → logprob: -16.0625057220459
    8. '   ' → logprob: -16.1875057220459
    9. '1' → logprob: -16.2500057220459
    10. '২' → logprob: -16.3750057220459

Token 239: '])
' (ID: 5169)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.387088805437088
    2. ')' → logprob: -1.1370887756347656
    3. ')
' → logprob: -8.637088775634766
    4. '           ' → logprob: -10.762088775634766
    5. ')

' → logprob: -12.387088775634766
    6. ')`
' → logprob: -13.137088775634766
    7. '])
' → logprob: -13.387088775634766
    8. '       ' → logprob: -13.387088775634766
    9. '])' → logprob: -13.387088775634766
    10. '`)' → logprob: -13.887088775634766

Token 240: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00618165684863925
    2. '
' → logprob: -5.881181716918945
    3. 'i' → logprob: -6.256181716918945
    4. '       ' → logprob: -7.381181716918945
    5. '            
' → logprob: -8.256181716918945
    6. '```' → logprob: -9.006181716918945
    7. '[i' → logprob: -9.381181716918945
    8. ',' → logprob: -9.756181716918945
    9. ',i' → logprob: -9.756181716918945
    10. '               ' → logprob: -10.131181716918945

Token 241: ' del' (ID: 1083)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.003192566568031907
    2. '   ' → logprob: -6.50319242477417
    3. '           ' → logprob: -7.00319242477417
    4. ' i' → logprob: -7.87819242477417
    5. '       ' → logprob: -8.878192901611328
    6. '
' → logprob: -9.378192901611328
    7. 'del' (adapté à ' del') → logprob: -9.503192901611328
    8. 'sticks' → logprob: -9.628192901611328
    9. '```' → logprob: -11.128192901611328
    10. '               ' → logprob: -12.378192901611328

Token 242: ' sticks' (ID: 54819)
  Prédit: ' sticks'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sticks' → logprob: -0.005234832875430584
    2. 'sticks' → logprob: -5.255234718322754
    3. ' stacks' → logprob: -15.005234718322754
    4. 'st' → logprob: -15.130234718322754
    5. '	st' → logprob: -15.130234718322754
    6. '(st' → logprob: -16.63023567199707
    7. ' stakes' → logprob: -16.88023567199707
    8. ' stitches' → logprob: -17.25523567199707
    9. 'stick' → logprob: -17.38023567199707
    10. 's' → logprob: -18.25523567199707

Token 243: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.159660890465602e-05
    2. '[' → logprob: -9.75007152557373
    3. 'i' → logprob: -12.00007152557373
    4. ' [' → logprob: -13.00007152557373
    5. ' i' → logprob: -13.62507152557373
    6. 'sticks' → logprob: -13.62507152557373
    7. '```' → logprob: -13.87507152557373
    8. ' sticks' → logprob: -14.50007152557373
    9. '   ' → logprob: -14.87507152557373
    10. 'st' → logprob: -15.25007152557373

Token 244: ':i' (ID: 34041)
  Prédit: ':i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':i' → logprob: -0.0030087267514318228
    2. 'i' → logprob: -6.003008842468262
    3. '   ' → logprob: -8.503008842468262
    4. ',i' → logprob: -9.503008842468262
    5. ':' → logprob: -9.628008842468262
    6. ',' → logprob: -9.753008842468262
    7. ' :' → logprob: -10.003008842468262
    8. '
' → logprob: -10.253008842468262
    9. ';i' → logprob: -11.003008842468262
    10. '],' → logprob: -11.878008842468262

Token 245: '+' (ID: 10)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.3485257923603058
    2. '+' → logprob: -1.2235257625579834
    3. ' +' → logprob: -9.848526000976562
    4. ' ' → logprob: -10.598526000976562
    5. '+
' → logprob: -13.473526000976562
    6. '   ' → logprob: -14.473526000976562
    7. '```' → logprob: -15.473526000976562
    8. '[' → logprob: -15.598526000976562
    9. '6' → logprob: -15.723526000976562
    10. ']+' → logprob: -15.786026000976562

Token 246: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.500000953674316
    3. '   ' → logprob: -17.25
    4. '+' → logprob: -18.375
    5. '
' → logprob: -18.5
    6. 'i' → logprob: -18.6875
    7. '2' → logprob: -18.8125
    8. ']' → logprob: -19.0
    9. '```' → logprob: -19.5625
    10. '1' → logprob: -19.75

Token 247: ']
' (ID: 1592)
  Prédit: ']
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']
' → logprob: -0.015817325562238693
    2. ']' → logprob: -4.390817165374756
    3. ')
' → logprob: -6.015817165374756
    4. '           ' → logprob: -7.265817165374756
    5. '       ' → logprob: -9.515817642211914
    6. ')' → logprob: -10.015817642211914
    7. ']
' → logprob: -11.015817642211914
    8. '               ' → logprob: -11.390817642211914
    9. ']

' → logprob: -11.640817642211914
    10. '
' → logprob: -13.265817642211914

Token 248: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.35082513093948364
    2. '           ' → logprob: -1.2258250713348389
    3. 'else' → logprob: -6.975825309753418
    4. '   ' → logprob: -7.225825309753418
    5. ' else' → logprob: -8.975825309753418
    6. 'continue' → logprob: -8.975825309753418
    7. '
' → logprob: -9.225825309753418
    8. '    
' → logprob: -9.350825309753418
    9. '```' → logprob: -9.725825309753418
    10. '<|end|>' → logprob: -9.975825309753418

Token 249: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.1275053024291992
    2. '           ' → logprob: -1.2525053024291992
    3. 'continue' → logprob: -1.5025053024291992
    4. 'else' → logprob: -2.127505302429199
    5. 'i' → logprob: -3.377505302429199
    6. '   ' → logprob: -4.627505302429199
    7. ' continue' → logprob: -5.502505302429199
    8. ' else' → logprob: -7.752505302429199
    9. ' i' → logprob: -9.0025053024292
    10. '
' → logprob: -10.1275053024292

Token 250: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.25193002820014954
    2. ' len' → logprob: -1.5019299983978271
    3. '(len' → logprob: -14.626930236816406
    4. ' ' → logprob: -15.126930236816406
    5. '   ' → logprob: -16.626930236816406
    6. '	len' → logprob: -16.876930236816406
    7. '=len' → logprob: -17.626930236816406
    8. '  ' → logprob: -17.751930236816406
    9. '
' → logprob: -17.751930236816406
    10. ' ' → logprob: -17.876930236816406

Token 251: '(tr' (ID: 14363)
  Prédit: '(tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tr' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -15.000000953674316
    3. 'tri' → logprob: -16.375
    4. '(
' → logprob: -18.125
    5. ' (' → logprob: -19.25
    6. ' triangles' → logprob: -19.5
    7. '(trim' → logprob: -20.5
    8. '(te' → logprob: -20.5
    9. 'triangle' → logprob: -20.75
    10. '_tri' → logprob: -20.75

Token 252: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.0118400314822793
    2. 'angles' → logprob: -4.636839866638184
    3. 'iang' → logprob: -7.011839866638184
    4. 'tri' → logprob: -7.511839866638184
    5. 'ian' → logprob: -8.011839866638184
    6. '(tr' → logprob: -9.511839866638184
    7. 'iangle' → logprob: -9.886839866638184
    8. 'iples' → logprob: -10.511839866638184
    9. 'ia' → logprob: -10.886839866638184
    10. '(i' → logprob: -11.386839866638184

Token 253: 'angles' (ID: 34011)
  Prédit: 'angles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.0003382038848940283
    2. 'ang' → logprob: -9.750338554382324
    3. 'an' → logprob: -10.000338554382324
    4. 'es' → logprob: -10.250338554382324
    5. 's' → logprob: -10.875338554382324
    6. 'a' → logprob: -10.875338554382324
    7. 'anes' → logprob: -11.000338554382324
    8. '(tr' → logprob: -11.125338554382324
    9. 'agles' → logprob: -11.500338554382324
    10. '   ' → logprob: -11.500338554382324

Token 254: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.020215297117829323
    2. ' ==' → logprob: -4.0202155113220215
    3. ')' → logprob: -6.2702155113220215
    4. ')==' → logprob: -9.270215034484863
    5. ']==' → logprob: -10.145215034484863
    6. '=' → logprob: -11.020215034484863
    7. ']' → logprob: -11.395215034484863
    8. '()==' → logprob: -12.395215034484863
    9. '>=' → logprob: -12.895215034484863
    10. '}' → logprob: -13.895215034484863

Token 255: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0059587834402918816
    2. ' ==' → logprob: -5.130958557128906
    3. '==
' → logprob: -11.880958557128906
    4. '()==' → logprob: -12.130958557128906
    5. ']==' → logprob: -12.130958557128906
    6. ')==' → logprob: -12.130958557128906
    7. '=' → logprob: -12.755958557128906
    8. '>=' → logprob: -12.755958557128906
    9. '===' → logprob: -13.880958557128906
    10. ')' → logprob: -15.130958557128906

Token 256: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0024787469301372766
    2. ' ' → logprob: -6.00247859954834
    3. '   ' → logprob: -12.87747859954834
    4. '  ' → logprob: -14.75247859954834
    5. '
' → logprob: -16.752479553222656
    6. '    ' → logprob: -17.127479553222656
    7. '       ' → logprob: -18.252479553222656
    8. '     ' → logprob: -18.377479553222656
    9. ' two' → logprob: -18.689979553222656
    10. '3' → logprob: -18.689979553222656

Token 257: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.686778503237292e-05
    2. ' ' → logprob: -9.250097274780273
    3. '   ' → logprob: -14.375097274780273
    4. '  ' → logprob: -16.812597274780273
    5. 'two' → logprob: -16.875097274780273
    6. '```' → logprob: -17.250097274780273
    7. '3' → logprob: -17.500097274780273
    8. '1' → logprob: -17.687597274780273
    9. '۲' → logprob: -18.375097274780273
    10. '
' → logprob: -18.500097274780273

Token 258: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.014510520733892918
    2. ':
' → logprob: -4.389510631561279
    3. '       ' → logprob: -6.264510631561279
    4. '           ' → logprob: -9.514510154724121
    5. '   ' → logprob: -11.639510154724121
    6. '               ' → logprob: -11.889510154724121
    7. ',' → logprob: -12.889510154724121
    8. '):' → logprob: -14.014510154724121
    9. '):
' → logprob: -14.639510154724121
    10. '      ' → logprob: -14.764510154724121

Token 259: '               ' (ID: 506)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7435290217399597
    2. '               ' → logprob: -0.7435290217399597
    3. '           ' → logprob: -3.1185290813446045
    4. ':
' → logprob: -5.993528842926025
    5. ':' → logprob: -6.243528842926025
    6. ' break' → logprob: -8.743529319763184
    7. 'break' → logprob: -9.493529319763184
    8. ',' → logprob: -9.743529319763184
    9. '   ' → logprob: -9.868529319763184
    10. '
' → logprob: -10.993529319763184

Token 260: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.033678777515888214
    2. 'break' (adapté à ' break') → logprob: -3.6586787700653076
    3. '   ' → logprob: -5.283679008483887
    4. '       ' → logprob: -6.158679008483887
    5. '           ' → logprob: -9.033679008483887
    6. '	break' → logprob: -10.533679008483887
    7. '
' → logprob: -12.158679008483887
    8. '```' → logprob: -12.658679008483887
    9. ' ' → logprob: -12.783679008483887
    10. '    ' → logprob: -13.283679008483887

Token 261: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05809549614787102
    2. '   ' → logprob: -2.9330954551696777
    3. '           ' → logprob: -6.308095455169678
    4. '
' → logprob: -7.183095455169678
    5. 'else' → logprob: -8.058095932006836
    6. '    
' → logprob: -8.683095932006836
    7. 'i' → logprob: -9.558095932006836
    8. ' else' → logprob: -11.058095932006836
    9. '```' → logprob: -11.058095932006836
    10. '        
' → logprob: -11.808095932006836

Token 262: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011079886928200722
    2. '   ' → logprob: -4.636079788208008
    3. 'i' → logprob: -7.386079788208008
    4. '           ' → logprob: -7.511079788208008
    5. 'else' → logprob: -9.261079788208008
    6. '
' → logprob: -10.511079788208008
    7. ' else' → logprob: -11.886079788208008
    8. '	' → logprob: -12.136079788208008
    9. '    
' → logprob: -12.136079788208008
    10. '```' → logprob: -12.136079788208008

Token 263: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09593743830919266
    2. '   ' → logprob: -3.220937490463257
    3. 'else' → logprob: -3.220937490463257
    4. ' else' → logprob: -5.220937252044678
    5. 'i' (adapté à ' i') → logprob: -5.845937252044678
    6. '           ' → logprob: -6.220937252044678
    7. '
' → logprob: -7.095937252044678
    8. '    
' → logprob: -8.220937728881836
    9. ' 
' → logprob: -9.970937728881836
    10. ' i' → logprob: -10.345937728881836

Token 264: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.055680446326732635
    2. '+=' → logprob: -3.305680513381958
    3. ' +=' → logprob: -4.680680274963379
    4. ' =' → logprob: -4.805680274963379
    5. '+' → logprob: -11.180680274963379
    6. ' ' → logprob: -11.555680274963379
    7. '   ' → logprob: -12.805680274963379
    8. '0' → logprob: -14.555680274963379
    9. ')' → logprob: -14.930680274963379
    10. 'else' → logprob: -14.930680274963379

Token 265: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.598092684522271e-05
    2. 'max' → logprob: -10.250056266784668
    3. ' ' → logprob: -11.000056266784668
    4. 'i' → logprob: -12.625056266784668
    5. ' max' → logprob: -15.125056266784668
    6. '-' → logprob: -15.625056266784668
    7. '   ' → logprob: -16.75005531311035
    8. ' i' → logprob: -17.25005531311035
    9. '  ' → logprob: -18.37505531311035
    10. '=' → logprob: -19.31255531311035

Token 266: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.147740689106286e-05
    2. 'max' → logprob: -9.62507152557373
    3. ' ' → logprob: -12.62507152557373
    4. 'i' → logprob: -13.25007152557373
    5. ' max' → logprob: -15.62507152557373
    6. '-' → logprob: -16.125070571899414
    7. '   ' → logprob: -17.375070571899414
    8. 'min' → logprob: -19.250070571899414
    9. ' i' → logprob: -19.250070571899414
    10. '```' → logprob: -19.312570571899414

Token 267: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005961624556221068
    2. ' else' → logprob: -8.125596046447754
    3. 'else' → logprob: -8.250596046447754
    4. '
' → logprob: -11.000596046447754
    5. '   ' → logprob: -11.125596046447754
    6. '           ' → logprob: -12.625596046447754
    7. '        
' → logprob: -14.375596046447754
    8. '	else' → logprob: -14.375596046447754
    9. '<|end|>' → logprob: -14.375596046447754
    10. '	' → logprob: -14.500596046447754

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.076412633061409
    2. ' else' → logprob: -3.4514126777648926
    3. 'else' → logprob: -3.7014126777648926
    4. '   ' → logprob: -4.076412677764893
    5. '           ' → logprob: -9.576412200927734
    6. '```' → logprob: -10.326412200927734
    7. '    
' → logprob: -11.076412200927734
    8. '	else' → logprob: -11.201412200927734
    9. '
' → logprob: -11.326412200927734
    10. '     ' → logprob: -11.451412200927734

Token 269: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12174177169799805
    2. ' else' → logprob: -2.746741771697998
    3. 'else' (adapté à ' else') → logprob: -2.996741771697998
    4. '   ' → logprob: -7.746741771697998
    5. '	else' → logprob: -9.746742248535156
    6. '	' → logprob: -10.371742248535156
    7. '           ' → logprob: -12.746742248535156
    8. '    ' → logprob: -12.996742248535156
    9. '      ' → logprob: -12.996742248535156
    10. '     ' → logprob: -13.496742248535156

Token 270: ':
' (ID: 734)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.37213873863220215
    2. '       ' → logprob: -1.3721387386322021
    3. '   ' → logprob: -3.372138738632202
    4. ':
' → logprob: -3.997138738632202
    5. ':' → logprob: -5.997138977050781
    6. '
' → logprob: -7.122138977050781
    7. '    ' → logprob: -8.247138977050781
    8. '	   ' → logprob: -8.497138977050781
    9. ' i' → logprob: -8.622138977050781
    10. '     ' → logprob: -9.122138977050781

Token 271: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12143110483884811
    2. '   ' → logprob: -2.2464311122894287
    3. 'i' → logprob: -5.62143087387085
    4. ' i' → logprob: -5.74643087387085
    5. '           ' → logprob: -6.49643087387085
    6. '	   ' → logprob: -8.996431350708008
    7. '    ' → logprob: -9.871431350708008
    8. '	       ' → logprob: -10.371431350708008
    9. '	i' → logprob: -11.371431350708008
    10. '
' → logprob: -11.496431350708008

Token 272: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.03805112838745117
    2. ' i' → logprob: -3.288051128387451
    3. '   ' → logprob: -11.78805160522461
    4. '           ' → logprob: -13.66305160522461
    5. '	i' → logprob: -14.28805160522461
    6. '    ' → logprob: -16.16305160522461
    7. '1' → logprob: -16.66305160522461
    8. '
' → logprob: -17.28805160522461
    9. ' ' → logprob: -17.41305160522461
    10. '       ' → logprob: -17.41305160522461

Token 273: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.04016151279211044
    2. ' +=' → logprob: -3.290161609649658
    3. '+' → logprob: -6.165161609649658
    4. '=' → logprob: -11.1651611328125
    5. '1' → logprob: -14.2901611328125
    6. ' +' → logprob: -14.4151611328125
    7. ']+=' → logprob: -14.5401611328125
    8. '   ' → logprob: -15.0401611328125
    9. '+="' → logprob: -16.1651611328125
    10. '+='' → logprob: -16.4151611328125

Token 274: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4974866644479334e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -17.187515258789062
    4. '１' → logprob: -17.312515258789062
    5. '```' → logprob: -17.562515258789062
    6. '2' → logprob: -18.250015258789062
    7. '
' → logprob: -18.437515258789062
    8. '  ' → logprob: -18.562515258789062
    9. '۱' → logprob: -18.750015258789062
    10. '3' → logprob: -18.750015258789062

Token 275: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '１' → logprob: -17.9375057220459
    4. '```' → logprob: -17.9375057220459
    5. '3' → logprob: -18.1250057220459
    6. '   ' → logprob: -18.1875057220459
    7. '2' → logprob: -19.0000057220459
    8. '  ' → logprob: -19.1875057220459
    9. '۱' → logprob: -19.5000057220459
    10. '﻿' → logprob: -19.7500057220459

Token 276: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0008818074711598456
    2. 'if' → logprob: -7.250881671905518
    3. 'res' → logprob: -8.875882148742676
    4. '   ' → logprob: -11.125882148742676
    5. '```' → logprob: -11.750882148742676
    6. ' print' → logprob: -12.000882148742676
    7. '
' → logprob: -13.375882148742676
    8. ' if' → logprob: -14.750882148742676
    9. 'return' → logprob: -14.875882148742676
    10. 'else' → logprob: -15.250882148742676

Token 277: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.30039316415786743
    2. 'if' → logprob: -1.6753931045532227
    3. 'res' → logprob: -2.6753931045532227
    4. 'print' → logprob: -6.300393104553223
    5. '

' → logprob: -6.925393104553223
    6. '```' → logprob: -8.300393104553223
    7. ' if' → logprob: -8.675393104553223
    8. '\n' → logprob: -10.800393104553223
    9. 'else' → logprob: -10.925393104553223
    10. '
' → logprob: -11.175393104553223

Token 278: ' if' (ID: 538)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0895460918545723
    2. 'res' → logprob: -2.5895462036132812
    3. 'if' (adapté à ' if') → logprob: -4.589546203613281
    4. '   ' → logprob: -8.089546203613281
    5. '```' → logprob: -9.464546203613281
    6. 'else' → logprob: -10.714546203613281
    7. ' res' → logprob: -11.464546203613281
    8. ' print' → logprob: -11.839546203613281
    9. ' if' → logprob: -12.089546203613281
    10. 'return' → logprob: -12.214546203613281

Token 279: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.3868784010410309
    2. ' len' → logprob: -1.1368783712387085
    3. ' ' → logprob: -12.51187801361084
    4. '   ' → logprob: -13.13687801361084
    5. '(len' → logprob: -14.01187801361084
    6. '    ' → logprob: -15.13687801361084
    7. '  ' → logprob: -15.26187801361084
    8. '	len' → logprob: -16.011878967285156
    9. ' triangles' → logprob: -16.386878967285156
    10. '       ' → logprob: -17.636878967285156

Token 280: '(tr' (ID: 14363)
  Prédit: '(tr'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(tr' → logprob: -7.896309739408025e-07
    2. '(' → logprob: -14.250000953674316
    3. ' (' → logprob: -17.0
    4. '(per' → logprob: -17.625
    5. 'tri' → logprob: -18.125
    6. ' triangles' → logprob: -18.375
    7. '(t' → logprob: -19.75
    8. '(two' → logprob: -20.25
    9. 'triangle' → logprob: -20.375
    10. '(
' → logprob: -20.5

Token 281: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.021618083119392395
    2. 'angles' → logprob: -4.021617889404297
    3. 'iang' → logprob: -6.646617889404297
    4. '(tr' → logprob: -7.396617889404297
    5. '(i' → logprob: -7.646617889404297
    6. '(' → logprob: -7.646617889404297
    7. 'ian' → logprob: -8.021617889404297
    8. 'iangle' → logprob: -9.896617889404297
    9. 'tri' → logprob: -10.271617889404297
    10. 'iat' → logprob: -10.646617889404297

Token 282: 'angles' (ID: 34011)
  Prédit: 'angles'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'angles' → logprob: -0.0006507210782729089
    2. '(' → logprob: -8.000650405883789
    3. '(tr' → logprob: -9.375650405883789
    4. 'ang' → logprob: -10.000650405883789
    5. 's' → logprob: -10.500650405883789
    6. 'agles' → logprob: -10.750650405883789
    7. '_angles' → logprob: -10.875650405883789
    8. 'es' → logprob: -11.125650405883789
    9. '[' → logprob: -11.375650405883789
    10. 'anges' → logprob: -11.625650405883789

Token 283: ')' (ID: 8)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7249490022659302
    2. ' ==' → logprob: -0.7249490022659302
    3. ')' → logprob: -3.5999488830566406
    4. ' <' → logprob: -6.849948883056641
    5. '>=' → logprob: -6.849948883056641
    6. '<' → logprob: -6.849948883056641
    7. ' >=' → logprob: -7.474948883056641
    8. ')==' → logprob: -8.97494888305664
    9. ' ' → logprob: -10.22494888305664
    10. ' ' → logprob: -10.97494888305664

Token 284: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6357203125953674
    2. ' ==' → logprob: -0.7607203125953674
    3. '<' → logprob: -6.635720252990723
    4. ' <' → logprob: -7.010720252990723
    5. '>=' → logprob: -7.510720252990723
    6. ' >=' → logprob: -8.135720252990723
    7. ')' → logprob: -11.010720252990723
    8. ' ' → logprob: -11.260720252990723
    9. ' ' → logprob: -11.885720252990723
    10. '=' → logprob: -12.260720252990723

Token 285: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.10020774602890015
    2. ' ' → logprob: -2.350207805633545
    3. '0' → logprob: -14.600207328796387
    4. '1' → logprob: -14.975207328796387
    5. '  ' → logprob: -16.350208282470703
    6. ' ' → logprob: -16.975208282470703
    7. ' two' → logprob: -17.475208282470703
    8. '  
' → logprob: -17.537708282470703
    9. '   ' → logprob: -17.787708282470703
    10. '
' → logprob: -17.787708282470703

Token 286: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00408053956925869
    2. ' ' → logprob: -5.504080772399902
    3. '1' → logprob: -14.504080772399902
    4. '0' → logprob: -14.629080772399902
    5. '
' → logprob: -15.379080772399902
    6. '   ' → logprob: -16.004079818725586
    7. '  
' → logprob: -16.254079818725586
    8. '  ' → logprob: -16.316579818725586
    9. '<' → logprob: -16.629079818725586
    10. '２' → logprob: -16.816579818725586

Token 287: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12693965435028076
    2. ':
' → logprob: -2.1269397735595703
    3. '   ' → logprob: -12.12693977355957
    4. '       ' → logprob: -13.37693977355957
    5. '):
' → logprob: -13.75193977355957
    6. ':

' → logprob: -13.75193977355957
    7. '):' → logprob: -14.00193977355957
    8. ':
' → logprob: -14.25193977355957
    9. ' and' → logprob: -14.50193977355957
    10. ',' → logprob: -16.00193977355957

Token 288: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014170682057738304
    2. '
' → logprob: -4.6391706466674805
    3. ':' → logprob: -6.2641706466674805
    4. ':
' → logprob: -6.2641706466674805
    5. '   ' → logprob: -8.01417064666748
    6. '```' → logprob: -9.13917064666748
    7. '    
' → logprob: -10.26417064666748
    8. '        
' → logprob: -10.88917064666748
    9. '           ' → logprob: -11.26417064666748
    10. '\n' → logprob: -11.63917064666748

Token 289: ' res' (ID: 694)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' (adapté à ' res') → logprob: -0.011969489976763725
    2. ' res' → logprob: -4.511969566345215
    3. '   ' → logprob: -7.011969566345215
    4. '
' → logprob: -10.886969566345215
    5. '	res' → logprob: -13.886969566345215
    6. '       ' → logprob: -14.886969566345215
    7. '    
' → logprob: -16.1369686126709
    8. ' ' → logprob: -16.6369686126709
    9. '_res' → logprob: -17.0119686126709
    10. '```' → logprob: -17.0119686126709

Token 290: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.04867343604564667
    2. '=' → logprob: -3.048673391342163
    3. ' +=' → logprob: -9.423673629760742
    4. '+=' → logprob: -12.173673629760742
    5. '.=' → logprob: -18.548673629760742
    6. ' ' → logprob: -19.048673629760742
    7. ' =)' → logprob: -19.173673629760742
    8. ')' → logprob: -19.548673629760742
    9. ' =
' → logprob: -19.673673629760742
    10. ' -=' → logprob: -19.673673629760742

Token 291: ' max' (ID: 2999)
  Prédit: 'tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tri' → logprob: -0.14273643493652344
    2. ' triangles' → logprob: -2.0177364349365234
    3. 'tr' → logprob: -10.017736434936523
    4. 'sum' → logprob: -12.517736434936523
    5. '   ' → logprob: -12.892736434936523
    6. 'triangle' → logprob: -12.892736434936523
    7. 'trip' → logprob: -13.017736434936523
    8. ' tri' → logprob: -13.767736434936523
    9. '_tri' → logprob: -14.017736434936523
    10. 'Triangles' → logprob: -14.392736434936523

Token 292: '(res' (ID: 8331)
  Prédit: '(res'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(res' → logprob: -0.5931284427642822
    2. '(tr' → logprob: -0.8431284427642822
    3. '(per' → logprob: -4.093128204345703
    4. '(' → logprob: -8.218128204345703
    5. 'res' → logprob: -9.968128204345703
    6. 'per' → logprob: -11.468128204345703
    7. '(t' → logprob: -12.468128204345703
    8. ' res' → logprob: -12.843128204345703
    9. '(rect' → logprob: -13.093128204345703
    10. '(
' → logprob: -13.093128204345703

Token 293: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004464773926883936
    2. ',res' → logprob: -5.879464626312256
    3. ' ,' → logprob: -6.629464626312256
    4. 'res' → logprob: -9.129465103149414
    5. ',tr' → logprob: -9.504465103149414
    6. 'per' → logprob: -9.629465103149414
    7. '(res' → logprob: -9.629465103149414
    8. '(' → logprob: -11.629465103149414
    9. '(per' → logprob: -12.254465103149414
    10. ')' → logprob: -13.004465103149414

Token 294: ' triangles' (ID: 92927)
  Prédit: 'tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tri' → logprob: -0.06200991943478584
    2. ' triangles' → logprob: -2.812009811401367
    3. 'tr' → logprob: -11.187009811401367
    4. '   ' → logprob: -11.187009811401367
    5. 'sum' → logprob: -11.687009811401367
    6. 'triangle' → logprob: -13.562009811401367
    7. '_tri' → logprob: -14.062009811401367
    8. 'trip' → logprob: -14.187009811401367
    9. ' tri' → logprob: -14.562009811401367
    10. ' ' → logprob: -14.687009811401367

Token 295: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.4855663721391466e-05
    2. '[-' → logprob: -11.250015258789062
    3. '0' → logprob: -13.250015258789062
    4. ' [' → logprob: -18.250015258789062
    5. ')' → logprob: -18.500015258789062
    6. '-' → logprob: -19.250015258789062
    7. '[
' → logprob: -19.250015258789062
    8. '```' → logprob: -19.250015258789062
    9. ' ' → logprob: -19.500015258789062
    10. '   ' → logprob: -19.750015258789062

Token 296: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.624555291840807e-05
    2. '-' → logprob: -9.500076293945312
    3. ' ' → logprob: -14.125076293945312
    4. '
' → logprob: -15.375076293945312
    5. ' -' → logprob: -16.375076293945312
    6. '1' → logprob: -16.500076293945312
    7. '   ' → logprob: -16.875076293945312
    8. '[' → logprob: -17.125076293945312
    9. '

' → logprob: -18.312576293945312
    10. ']' → logprob: -18.562576293945312

Token 297: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.08900763839483261
    2. '+' → logprob: -2.464007616043091
    3. ']' → logprob: -10.214007377624512
    4. ']+' → logprob: -10.589007377624512
    5. ')' → logprob: -12.839007377624512
    6. ')+' → logprob: -13.464007377624512
    7. ' ' → logprob: -14.589007377624512
    8. ' +
' → logprob: -14.589007377624512
    9. '+
' → logprob: -14.964007377624512
    10. ' ' → logprob: -15.464007377624512

Token 298: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.12692873179912567
    2. '+' → logprob: -2.1269288063049316
    3. ' ' → logprob: -15.251928329467773
    4. '+
' → logprob: -15.751928329467773
    5. ' +
' → logprob: -16.501928329467773
    6. ' plus' → logprob: -16.626928329467773
    7. ')' → logprob: -16.876928329467773
    8. ')+' → logprob: -17.001928329467773
    9. ' ' → logprob: -17.251928329467773
    10. '+t' → logprob: -18.001928329467773

Token 299: ' triangles' (ID: 92927)
  Prédit: 'tri'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tri' → logprob: -0.008616581559181213
    2. ' triangles' → logprob: -4.7586164474487305
    3. 'triangle' → logprob: -13.75861644744873
    4. '   ' → logprob: -15.25861644744873
    5. 'tr' → logprob: -15.50861644744873
    6. 'Triangles' → logprob: -15.50861644744873
    7. '_tri' → logprob: -16.383617401123047
    8. 'tet' → logprob: -16.633617401123047
    9. 'tra' → logprob: -16.633617401123047
    10. 'trib' → logprob: -17.008617401123047

Token 300: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0007171963807195425
    2. '1' → logprob: -7.2507171630859375
    3. '][' → logprob: -12.625717163085938
    4. ' [' → logprob: -13.000717163085938
    5. '[
' → logprob: -14.500717163085938
    6. '```' → logprob: -14.625717163085938
    7. ']' → logprob: -15.125717163085938
    8. '   ' → logprob: -16.125717163085938
    9. '
' → logprob: -16.500717163085938
    10. '\[' → logprob: -16.750717163085938

Token 301: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.625000953674316
    3. '   ' → logprob: -17.625001907348633
    4. ']' → logprob: -17.625001907348633
    5. '```' → logprob: -17.625001907348633
    6. '0' → logprob: -18.000001907348633
    7. '[' → logprob: -19.375001907348633
    8. '-' → logprob: -19.437501907348633
    9. ')' → logprob: -19.500001907348633
    10. '  ' → logprob: -20.000001907348633

Token 302: '])

' (ID: 21045)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2016931176185608
    2. '])' → logprob: -1.701693058013916
    3. ']' → logprob: -9.076693534851074
    4. ')
' → logprob: -9.701693534851074
    5. '])
' → logprob: -10.576693534851074
    6. ')])' → logprob: -10.701693534851074
    7. '})' → logprob: -10.951693534851074
    8. '))' → logprob: -11.451693534851074
    9. '+' → logprob: -11.576693534851074
    10. ')]' → logprob: -12.076693534851074

Token 303: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -3.8889261304575484e-06
    2. ' print' → logprob: -12.625003814697266
    3. '```' → logprob: -14.500003814697266
    4. '
' → logprob: -16.125003814697266
    5. '``' → logprob: -19.375003814697266
    6. '.print' → logprob: -19.750003814697266
    7. '#print' → logprob: -20.125003814697266
    8. '(print' → logprob: -20.500003814697266
    9. '  
' → logprob: -20.750003814697266
    10. 'else' → logprob: -21.000003814697266

Token 304: '(res' (ID: 8331)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.20147550106048584
    2. '(res' → logprob: -1.7014755010604858
    3. '()' → logprob: -9.951475143432617
    4. 'res' → logprob: -11.826475143432617
    5. '('' → logprob: -13.076475143432617
    6. '(
' → logprob: -13.076475143432617
    7. ' (' → logprob: -13.076475143432617
    8. '("' → logprob: -15.201475143432617
    9. '(`' → logprob: -16.201475143432617
    10. '(max' → logprob: -16.326475143432617

Token 305: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.723352049040841e-06
    2. '()' → logprob: -12.875004768371582
    3. '())' → logprob: -13.250004768371582
    4. ' )' → logprob: -15.625004768371582
    5. ')
' → logprob: -16.000003814697266
    6. '))' → logprob: -16.500003814697266
    7. ')`' → logprob: -16.875003814697266
    8. '`)' → logprob: -18.000003814697266
    9. '')' → logprob: -18.625003814697266
    10. '(' → logprob: -18.750003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 303
Tokens correctement prédits (1ère position, stricte): 133
Tokens correctement prédits (1ère position, avec adaptation): 138
Tokens correctement prédits (top 10): 249
Précision stricte (1ère position): 43.89%
Précision adaptée (1ère position): 45.54%
Précision (top 10): 82.18%
================================================================================
