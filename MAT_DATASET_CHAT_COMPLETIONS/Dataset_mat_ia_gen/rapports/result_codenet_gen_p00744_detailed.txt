================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:19:50
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
import math
import threading

# Fonction pour factoriser un nombre en ses facteurs premiers (avec optimisation basique)
def prime_factors(n):
    factors = set()
    # Diviser par 2 autant que possible
    while n % 2 == 0:
        factors.add(2)
        n //= 2
    # Diviser par les impairs
    f = 3
    while f * f <= n:
        while n % f == 0:
            factors.add(f)
            n //= f
        f += 2
    # Si reste >1 c'est un facteur premier
    if n > 1:
        factors.add(n)
    return factors

# Recherche augmentante pour trouver un couplage maximum dans un graphe bipartite
def try_match(u, adj, visited, matchR):
    for v in adj[u]:
        if not visited[v]:
            visited[v] = True
            if matchR[v] == -1 or try_match(matchR[v], adj, visited, matchR):
                matchR[v] = u
                return True
    return False

def main():
    input_iter = iter(sys.stdin.read().split())
    while True:
        # Lecture des nombres de cartes bleues et rouges
        m = int(next(input_iter))
        n = int(next(input_iter))
        if m == 0 and n == 0:
            break

        blue_cards = [int(next(input_iter)) for _ in range(m)]
        red_cards = [int(next(input_iter)) for _ in range(n)]

        # On va construire un graphe bipartite où:
        # Chaque bleu est un noeud à gauche (0..m-1)
        # Chaque rouge est un noeud à droite (0..n-1)
        # Il y a une arête entre bleu i et rouge j si gcd(blue_cards[i], red_cards[j]) > 1

        # Pour accélérer, on peut pré-calculer les facteurs premiers de toutes cartes
        # Ensuite on peut comparer intersections de facteurs premiers pour décider de tester gcd
        # Mais de base on va faire un test gcd direct (possible car m,n <= 500, donc max 250000 tests)
        # Cela reste raisonnable.

        adj = [[] for _ in range(m)]
        for i in range(m):
            bi = blue_cards[i]
            for j in range(n):
                rj = red_cards[j]
                # Si gcd > 1 alors on peut connecter
                # math.gcd est efficace en python 3.5+
                if math.gcd(bi, rj) > 1:
                    adj[i].append(j)

        # Maintenant on cherche le couplage maximum pour optimiser le nombre de paires
        # Algorithme classique de matching bipartite: Recherche augmentante (Hungarian / Kuhn)

        matchR = [-1] * n  # match pour rouge j : indice du bleu i associé (-1 si aucun)

        result = 0
        for u in range(m):
            visited = [False] * n
            if try_match(u, adj, visited, matchR):
                result += 1

        print(result)

# Pour éviter RecursionError sur certains systèmes à cause de profondeur de récursion dans DFS de matching
sys.setrecursionlimit(10**7)
threading.stack_size(1 << 27)
thread = threading.Thread(target=main)
thread.start()
thread.join()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'import' (ID: 561)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.3437388837337494
    2. '.' → logprob: -1.5937389135360718
    3. '<|end|>' → logprob: -2.9687387943267822
    4. '\' → logprob: -4.468739032745361
    5. 'import' → logprob: -5.093739032745361
    6. 'newline' → logprob: -5.093739032745361
    7. '<|end|>' → logprob: -5.968739032745361
    8. '' → logprob: -5.968739032745361
    9. '\r' → logprob: -6.093739032745361
    10. '
' → logprob: -6.343739032745361

Token 4: ' math' (ID: 13324)
  Prédit: ' os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' os' → logprob: -0.00012535012501757592
    2. 'os' → logprob: -9.00012493133545
    3. ' math' → logprob: -13.87512493133545
    4. '"os' → logprob: -15.12512493133545
    5. ' re' → logprob: -15.50012493133545
    6. ' o' → logprob: -15.87512493133545
    7. ' ' → logprob: -16.125125885009766
    8. ' json' → logprob: -16.250125885009766
    9. '	os' → logprob: -16.375125885009766
    10. '_os' → logprob: -17.000125885009766

Token 5: '
' (ID: 198)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.19651642441749573
    2. '\n' → logprob: -2.696516513824463
    3. '
' → logprob: -3.696516513824463
    4. '<|end|>' → logprob: -3.821516513824463
    5. 'import' → logprob: -3.946516513824463
    6. '\' → logprob: -4.446516513824463
    7. '```' → logprob: -4.821516513824463
    8. '

' → logprob: -4.821516513824463
    9. '<|end|>' → logprob: -4.946516513824463
    10. ',' → logprob: -5.696516513824463

Token 6: 'import' (ID: 561)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.4082861840724945
    2. '\n' → logprob: -2.4082860946655273
    3. 'import' → logprob: -2.5332860946655273
    4. '
' → logprob: -3.0332860946655273
    5. '\' → logprob: -3.4082860946655273
    6. '```' → logprob: -3.6582860946655273
    7. '<|end|>' → logprob: -3.7832860946655273
    8. '

' → logprob: -4.408286094665527
    9. ',' → logprob: -4.533286094665527
    10. '<|end|>' → logprob: -6.158286094665527

Token 7: ' threading' (ID: 72047)
  Prédit: 'os'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'os' → logprob: -0.49547842144966125
    2. ' os' → logprob: -0.9954783916473389
    3. 'random' → logprob: -4.245478630065918
    4. ' random' → logprob: -5.245478630065918
    5. 're' → logprob: -7.495478630065918
    6. ' re' → logprob: -7.745478630065918
    7. ' numpy' → logprob: -9.370478630065918
    8. 'collections' → logprob: -9.620478630065918
    9. 'numpy' → logprob: -9.745478630065918
    10. ' statistics' → logprob: -9.745478630065918

Token 8: '

' (ID: 279)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -1.4256237745285034
    2. '\' → logprob: -1.5506237745285034
    3. '\n' → logprob: -1.5506237745285034
    4. 'import' → logprob: -1.6756237745285034
    5. '
' → logprob: -3.050623893737793
    6. '```' → logprob: -3.550623893737793
    7. '.Thread' → logprob: -3.800623893737793
    8. ',' → logprob: -4.425623893737793
    9. '#' → logprob: -4.425623893737793
    10. '<|end|>' → logprob: -4.550623893737793

Token 9: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -1.1574827432632446
    2. '.' → logprob: -1.5324827432632446
    3. '\' → logprob: -1.5324827432632446
    4. '#' → logprob: -2.282482624053955
    5. 'import' → logprob: -3.032482624053955
    6. '```' → logprob: -3.157482624053955
    7. 'class' → logprob: -3.782482624053955
    8. '\n' → logprob: -4.657482624053955
    9. 'from' → logprob: -5.157482624053955
    10. '=' → logprob: -5.282482624053955

Token 10: ' Fonction' (ID: 189149)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10995974391698837
    2. ' #' → logprob: -3.234959840774536
    3. ' def' → logprob: -3.609959840774536
    4. ' class' → logprob: -3.984959840774536
    5. '_' → logprob: -5.859959602355957
    6. 'def' → logprob: -5.984959602355957
    7. ' _' → logprob: -5.984959602355957
    8. 'd' → logprob: -6.234959602355957
    9. '#' → logprob: -6.359959602355957
    10. ' d' → logprob: -6.484959602355957

Token 11: ' pour' (ID: 1930)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.29672038555145264
    2. 's' → logprob: -2.046720504760742
    3. ' de' → logprob: -2.796720504760742
    4. ' def' → logprob: -3.546720504760742
    5. 'def' → logprob: -3.671720504760742
    6. '_' → logprob: -4.796720504760742
    7. ':' → logprob: -7.171720504760742
    8. ' _' → logprob: -7.546720504760742
    9. '(' → logprob: -7.671720504760742
    10. ' ' → logprob: -8.296720504760742

Token 12: ' factor' (ID: 12332)
  Prédit: ' calcul'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' calcul' → logprob: -0.03761093318462372
    2. 'calcul' → logprob: -4.03761100769043
    3. ' lancer' → logprob: -4.66261100769043
    4. ' dém' → logprob: -5.78761100769043
    5. ' lire' → logprob: -6.28761100769043
    6. ' calc' → logprob: -7.03761100769043
    7. ' créer' → logprob: -7.41261100769043
    8. 'cal' → logprob: -7.91261100769043
    9. ' gérer' → logprob: -7.91261100769043
    10. ' le' → logprob: -8.03761100769043

Token 13: 'iser' (ID: 7466)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.08931576460599899
    2. 'ialize' → logprob: -2.83931565284729
    3. 'ielle' → logprob: -4.839315891265869
    4. 'ial' → logprob: -4.839315891265869
    5. 'iser' → logprob: -5.964315891265869
    6. '```' → logprob: -6.464315891265869
    7. 'iel' → logprob: -6.589315891265869
    8. 'isation' → logprob: -6.839315891265869
    9. 'ization' → logprob: -6.964315891265869
    10. 'izer' → logprob: -7.214315891265869

Token 14: ' un' (ID: 537)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.25382307171821594
    2. ' un' → logprob: -2.0038230419158936
    3. ' a' → logprob: -3.7538230419158936
    4. 'def' → logprob: -3.7538230419158936
    5. ' def' → logprob: -4.628823280334473
    6. ' le' → logprob: -4.753823280334473
    7. 'a' → logprob: -4.878823280334473
    8. '_' → logprob: -5.003823280334473
    9. ' les' → logprob: -6.503823280334473
    10. ' ' → logprob: -6.628823280334473

Token 15: ' nombre' (ID: 9733)
  Prédit: ' nombre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nombre' → logprob: -0.09263095259666443
    2. 'nombre' → logprob: -2.4676308631896973
    3. ' entier' → logprob: -6.592630863189697
    4. 'n' → logprob: -7.092630863189697
    5. 'e' → logprob: -8.342631340026855
    6. ' nombres' → logprob: -8.717631340026855
    7. ' ' → logprob: -8.842631340026855
    8. 'ent' → logprob: -8.842631340026855
    9. ' n' → logprob: -8.842631340026855
    10. ' ' → logprob: -8.967631340026855

Token 16: ' en' (ID: 469)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.32756784558296204
    2. ' def' → logprob: -1.3275678157806396
    3. ' ' → logprob: -5.702568054199219
    4. 's' → logprob: -5.952568054199219
    5. ' :' → logprob: -5.952568054199219
    6. ':' → logprob: -6.202568054199219
    7. 'd' → logprob: -6.577568054199219
    8. '_' → logprob: -7.827568054199219
    9. ',' → logprob: -8.327568054199219
    10. ' de' → logprob: -8.452568054199219

Token 17: ' ses' (ID: 6707)
  Prédit: ' facteurs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' facteurs' → logprob: -0.42499715089797974
    2. ' ses' → logprob: -1.174997091293335
    3. ' nombres' → logprob: -3.674997091293335
    4. 'ses' → logprob: -5.299997329711914
    5. ' facteur' → logprob: -6.424997329711914
    6. '```' → logprob: -6.799997329711914
    7. 'fact' → logprob: -7.174997329711914
    8. ' ' → logprob: -7.424997329711914
    9. 'f' → logprob: -7.924997329711914
    10. 'div' → logprob: -8.299997329711914

Token 18: ' facteurs' (ID: 119657)
  Prédit: ' facteurs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' facteurs' → logprob: -0.0024898070842027664
    2. 'fact' → logprob: -7.002490043640137
    3. ' div' → logprob: -7.252490043640137
    4. 'div' → logprob: -7.252490043640137
    5. ' facteur' → logprob: -10.627490043640137
    6. ' premiers' → logprob: -10.627490043640137
    7. ' nombres' → logprob: -10.877490043640137
    8. ' fact' → logprob: -11.002490043640137
    9. ' ' → logprob: -11.627490043640137
    10. ' ' → logprob: -11.877490043640137

Token 19: ' premiers' (ID: 59140)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.7152912616729736
    2. 's' → logprob: -1.2152912616729736
    3. ' :' → logprob: -2.7152912616729736
    4. ' def' → logprob: -2.7152912616729736
    5. ' premiers' → logprob: -3.4652912616729736
    6. '```' → logprob: -3.9652912616729736
    7. ':' → logprob: -4.8402910232543945
    8. ' ' → logprob: -5.2152910232543945
    9. '_' → logprob: -5.3402910232543945
    10. ' de' → logprob: -6.7152910232543945

Token 20: ' (' (ID: 350)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.03307336941361427
    2. ' def' → logprob: -4.158073425292969
    3. ':' → logprob: -4.408073425292969
    4. ' :' → logprob: -6.283073425292969
    5. ':def' → logprob: -7.158073425292969
    6. 'd' → logprob: -7.283073425292969
    7. 's' → logprob: -7.283073425292969
    8. 'de' → logprob: -8.283073425292969
    9. '\' → logprob: -8.908073425292969
    10. ' de' → logprob: -9.658073425292969

Token 21: 'avec' (ID: 64065)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.3578270375728607
    2. ')' → logprob: -1.482827067375183
    3. 'def' → logprob: -2.8578269481658936
    4. ' def' → logprob: -4.482827186584473
    5. ' ):' → logprob: -5.482827186584473
    6. '):' → logprob: -7.482827186584473
    7. ' ' → logprob: -9.482827186584473
    8. 'de' → logprob: -9.732827186584473
    9. ' ' → logprob: -9.982827186584473
    10. '')' → logprob: -10.107827186584473

Token 22: ' optimisation' (ID: 139802)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' un' → logprob: -1.6556117534637451
    2. ' threading' → logprob: -2.155611753463745
    3. ' la' → logprob: -2.405611753463745
    4. ' espace' → logprob: -2.530611753463745
    5. ' espaces' → logprob: -2.530611753463745
    6. 'thread' → logprob: -3.030611753463745
    7. ' l' → logprob: -3.530611753463745
    8. ' threads' → logprob: -3.530611753463745
    9. ' )' → logprob: -3.905611753463745
    10. ' une' → logprob: -4.030611991882324

Token 23: ' bas' (ID: 3222)
  Prédit: ' )'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' )' → logprob: -0.22739076614379883
    2. ')' → logprob: -1.6023907661437988
    3. ' ' → logprob: -7.477390766143799
    4. ' ' → logprob: -7.727390766143799
    5. ' :' → logprob: -7.977390766143799
    6. ' de' → logprob: -8.97739028930664
    7. 's' → logprob: -9.10239028930664
    8. ',' → logprob: -9.22739028930664
    9. ' ,' → logprob: -9.72739028930664
    10. ' ):' → logprob: -9.85239028930664

Token 24: 'ique' (ID: 2222)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.4877074062824249
    2. 'e' → logprob: -1.2377073764801025
    3. 'ale' → logprob: -3.6127073764801025
    4. 'ique' → logprob: -3.7377073764801025
    5. 'é' → logprob: -4.112707614898682
    6. 'iques' → logprob: -4.362707614898682
    7. 'és' → logprob: -5.237707614898682
    8. 'ées' → logprob: -5.487707614898682
    9. 'es' → logprob: -5.612707614898682
    10. 'ic' → logprob: -7.112707614898682

Token 25: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.02697783336043358
    2. ' )' → logprob: -3.651977777481079
    3. ')
' → logprob: -8.6519775390625
    4. ' :' → logprob: -8.7769775390625
    5. ' ' → logprob: -9.2769775390625
    6. ' )
' → logprob: -9.4019775390625
    7. '):' → logprob: -9.7769775390625
    8. ' ):' → logprob: -11.0269775390625
    9. 's' → logprob: -11.2769775390625
    10. ':' → logprob: -11.2769775390625

Token 26: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0017268223455175757
    2. 'd' → logprob: -7.0017266273498535
    3. ' def' → logprob: -7.3767266273498535
    4. '```' → logprob: -9.501727104187012
    5. 'de' → logprob: -10.251727104187012
    6. ':def' → logprob: -10.501727104187012
    7. '
' → logprob: -10.876727104187012
    8. '\' → logprob: -11.001727104187012
    9. ' 
' → logprob: -12.001727104187012
    10. ':' → logprob: -12.251727104187012

Token 27: ' prime' (ID: 9197)
  Prédit: ' prime'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' prime' → logprob: -0.2532872259616852
    2. ' factor' → logprob: -1.5032871961593628
    3. 'prime' → logprob: -8.003287315368652
    4. ' ' → logprob: -8.378287315368652
    5. ' facteur' → logprob: -8.503287315368652
    6. '```' → logprob: -8.753287315368652
    7. 'factor' → logprob: -9.128287315368652
    8. '_prime' → logprob: -9.628287315368652
    9. ' def' → logprob: -9.753287315368652
    10. '  ' → logprob: -9.878287315368652

Token 28: '_f' (ID: 1337)
  Prédit: '_factor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_factor' → logprob: -0.2864745557308197
    2. '_f' → logprob: -1.786474585533142
    3. '_' → logprob: -2.5364744663238525
    4. '_fact' → logprob: -6.786474704742432
    5. '_fac' → logprob: -7.161474704742432
    6. ' _' → logprob: -8.536474227905273
    7. 'f' → logprob: -9.161474227905273
    8. '_s' → logprob: -9.911474227905273
    9. '_r' → logprob: -10.161474227905273
    10. 'r' → logprob: -11.036474227905273

Token 29: 'actors' (ID: 37126)
  Prédit: 'actor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'actor' → logprob: -0.6935763359069824
    2. 'actors' → logprob: -0.6935763359069824
    3. 'act' → logprob: -7.943576335906982
    4. 'ac' → logprob: -10.31857681274414
    5. 'acto' → logprob: -10.94357681274414
    6. 'a' → logprob: -11.94357681274414
    7. 'acteur' → logprob: -12.31857681274414
    8. '_' → logprob: -12.69357681274414
    9. 'actoring' → logprob: -12.94357681274414
    10. ' actors' → logprob: -12.94357681274414

Token 30: '(n' (ID: 2406)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -7.231182826217264e-05
    2. '(n' → logprob: -10.125072479248047
    3. ' (' → logprob: -10.500072479248047
    4. '(
' → logprob: -13.000072479248047
    5. '(num' → logprob: -14.000072479248047
    6. '(number' → logprob: -15.375072479248047
    7. '(

' → logprob: -15.375072479248047
    8. '(x' → logprob: -15.625072479248047
    9. '(token' → logprob: -15.875072479248047
    10. 's' → logprob: -16.375072479248047

Token 31: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0015340241370722651
    2. ' ):' → logprob: -7.1265339851379395
    3. ')' → logprob: -7.2515339851379395
    4. ':' → logprob: -11.376534461975098
    5. '):
' → logprob: -12.251534461975098
    6. ' )' → logprob: -13.626534461975098
    7. '=' → logprob: -13.876534461975098
    8. '   ' → logprob: -14.876534461975098
    9. ' :' → logprob: -15.126534461975098
    10. ',' → logprob: -15.251534461975098

Token 32: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11167152971029282
    2. ' :' → logprob: -2.4866714477539062
    3. ' ' → logprob: -3.9866714477539062
    4. '   ' → logprob: -6.611671447753906
    5. '):' → logprob: -6.861671447753906
    6. ' :
' → logprob: -7.611671447753906
    7. ':
' → logprob: -8.486671447753906
    8. ' 
' → logprob: -9.236671447753906
    9. ')' → logprob: -9.361671447753906
    10. ' ):' → logprob: -9.361671447753906

Token 33: ' factors' (ID: 11652)
  Prédit: ' factors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factors' → logprob: -0.012906896881759167
    2. 'f' → logprob: -4.387907028198242
    3. ' facteurs' → logprob: -8.762907028198242
    4. ' i' → logprob: -9.262907028198242
    5. '   ' → logprob: -9.512907028198242
    6. ' factores' → logprob: -10.387907028198242
    7. ' f' → logprob: -11.887907028198242
    8. ' fakt' → logprob: -12.262907028198242
    9. 'fact' → logprob: -12.637907028198242
    10. ' fatores' → logprob: -12.637907028198242

Token 34: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0077291810885071754
    2. '=' → logprob: -5.5077290534973145
    3. ' ' → logprob: -5.8827290534973145
    4. '.append' → logprob: -7.6327290534973145
    5. '.' → logprob: -8.507729530334473
    6. '=[]' → logprob: -10.132729530334473
    7. '_' → logprob: -10.882729530334473
    8. '  ' → logprob: -10.882729530334473
    9. '[:]' → logprob: -11.132729530334473
    10. '.extend' → logprob: -11.257729530334473

Token 35: ' set' (ID: 920)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.0067455661483109
    2. '[]' → logprob: -5.006745338439941
    3. ' ' → logprob: -10.506745338439941
    4. ' []
' → logprob: -13.006745338439941
    5. ' [' → logprob: -15.131745338439941
    6. ' []

' → logprob: -16.006746292114258
    7. '[' → logprob: -16.881746292114258
    8. '[]
' → logprob: -17.381746292114258
    9. ' set' → logprob: -17.631746292114258
    10. ' []
' → logprob: -18.006746292114258

Token 36: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004108557943254709
    2. '(' → logprob: -5.629108428955078
    3. '()
' → logprob: -8.129108428955078
    4. ' ()' → logprob: -8.629108428955078
    5. '()

' → logprob: -11.504108428955078
    6. '([]' → logprob: -12.129108428955078
    7. '(),' → logprob: -12.254108428955078
    8. '();' → logprob: -13.129108428955078
    9. '()]' → logprob: -13.379108428955078
    10. '()\' → logprob: -13.379108428955078

Token 37: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.14370086789131165
    2. ' ' → logprob: -3.1437008380889893
    3. '    
' → logprob: -3.1437008380889893
    4. '    ' → logprob: -4.018701076507568
    5. ' 
' → logprob: -5.143701076507568
    6. '  ' → logprob: -5.393701076507568
    7. '   
' → logprob: -5.893701076507568
    8. '     
' → logprob: -6.018701076507568
    9. '2' → logprob: -6.143701076507568
    10. ':' → logprob: -6.268701076507568

Token 38: ' #' (ID: 1069)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.7341771721839905
    2. ' i' → logprob: -1.3591771125793457
    3. 'i' → logprob: -2.3591771125793457
    4. '   ' → logprob: -2.7341771125793457
    5. 'while' → logprob: -2.9841771125793457
    6. '2' → logprob: -3.3591771125793457
    7. ' ' → logprob: -5.109177112579346
    8. ' for' → logprob: -5.484177112579346
    9. ' if' → logprob: -5.484177112579346
    10. 'if' → logprob: -6.234177112579346

Token 39: ' Div' (ID: 12302)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.3886713981628418
    2. 'i' → logprob: -1.6386713981628418
    3. ' i' → logprob: -1.6386713981628418
    4. 'for' → logprob: -1.7636713981628418
    5. ' while' → logprob: -2.138671398162842
    6. 'while' → logprob: -3.263671398162842
    7. 'if' → logprob: -4.388671398162842
    8. '   ' → logprob: -4.638671398162842
    9. ' if' → logprob: -4.763671398162842
    10. ' ' → logprob: -6.138671398162842

Token 40: 'iser' (ID: 7466)
  Prédit: 'er'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.9830916523933411
    2. 'ide' → logprob: -1.6080915927886963
    3. 'e' → logprob: -1.7330915927886963
    4. '   ' → logprob: -2.1080915927886963
    5. 'iser' → logprob: -2.9830915927886963
    6. ' ' → logprob: -3.8580915927886963
    7. '    ' → logprob: -4.608091831207275
    8. ' i' → logprob: -4.858091831207275
    9. '  ' → logprob: -4.983091831207275
    10. 'i' → logprob: -5.108091831207275

Token 41: ' par' (ID: 686)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6962203979492188
    2. ' par' → logprob: -1.6962203979492188
    3. ' by' → logprob: -2.3212203979492188
    4. ' n' → logprob: -2.4462203979492188
    5. ' ' → logprob: -2.5712203979492188
    6. ' le' → logprob: -4.071220397949219
    7. 'by' → logprob: -4.696220397949219
    8. '2' → logprob: -5.446220397949219
    9. 'i' → logprob: -5.571220397949219
    10. 'par' → logprob: -5.946220397949219

Token 42: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.11296328902244568
    2. '2' → logprob: -2.2379631996154785
    3. ' ' → logprob: -8.987963676452637
    4. ' i' → logprob: -13.175463676452637
    5. '1' → logprob: -13.362963676452637
    6. ' two' → logprob: -13.550463676452637
    7. ' deux' → logprob: -13.675463676452637
    8. 'i' → logprob: -14.300463676452637
    9. '```' → logprob: -14.550463676452637
    10. '3' → logprob: -14.987963676452637

Token 43: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.014168680645525455
    2. ' ' → logprob: -4.264168739318848
    3. ' ' → logprob: -13.264168739318848
    4. '   ' → logprob: -14.451668739318848
    5. '```' → logprob: -15.076668739318848
    6. '22' → logprob: -15.701668739318848
    7. '  ' → logprob: -15.764168739318848
    8. '1' → logprob: -15.826668739318848
    9. '２' → logprob: -15.826668739318848
    10. '...' → logprob: -15.889168739318848

Token 44: ' autant' (ID: 46683)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.384385347366333
    2. ' ' → logprob: -1.634385347366333
    3. ':' → logprob: -3.134385347366333
    4. ' for' → logprob: -3.509385347366333
    5. 'while' → logprob: -3.759385347366333
    6. ' :' → logprob: -4.634385108947754
    7. '   ' → logprob: -6.009385108947754
    8. 'for' → logprob: -6.134385108947754
    9. ' i' → logprob: -6.384385108947754
    10. 'i' → logprob: -6.759385108947754

Token 45: ' que' (ID: 661)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.6505911946296692
    2. ' que' → logprob: -0.7755911946296692
    3. ' ' → logprob: -4.6505913734436035
    4. 'de' → logprob: -5.9005913734436035
    5. '  ' → logprob: -7.0255913734436035
    6. '    ' → logprob: -7.1505913734436035
    7. '   ' → logprob: -7.1505913734436035
    8. 'que' → logprob: -7.4005913734436035
    9. ' fois' → logprob: -7.5255913734436035
    10. ' qu' → logprob: -8.275590896606445

Token 46: ' possible' (ID: 4149)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.08503767102956772
    2. ' possible' → logprob: -2.9600377082824707
    3. 'n' → logprob: -3.5850377082824707
    4. 'possible' → logprob: -6.460037708282471
    5. '(n' → logprob: -8.710037231445312
    6. ' (' → logprob: -9.585037231445312
    7. ' ' → logprob: -10.085037231445312
    8. '   ' → logprob: -10.710037231445312
    9. '```' → logprob: -10.710037231445312
    10. '_possible' → logprob: -11.085037231445312

Token 47: '
' (ID: 198)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.1983003467321396
    2. 'while' → logprob: -2.698300361633301
    3. ':' → logprob: -3.323300361633301
    4. '   ' → logprob: -3.823300361633301
    5. ' 
' → logprob: -4.073300361633301
    6. '    
' → logprob: -4.573300361633301
    7. ' ' → logprob: -4.948300361633301
    8. ' :' → logprob: -5.198300361633301
    9. '   
' → logprob: -5.948300361633301
    10. '  
' → logprob: -6.073300361633301

Token 48: '   ' (ID: 271)
  Prédit: ' while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.20599965751171112
    2. 'while' → logprob: -2.7059996128082275
    3. ':' → logprob: -3.3309996128082275
    4. ' ' → logprob: -3.5809996128082275
    5. '   ' → logprob: -3.7059996128082275
    6. ' 
' → logprob: -4.580999851226807
    7. ' :' → logprob: -4.830999851226807
    8. '```' → logprob: -6.330999851226807
    9. '    
' → logprob: -6.455999851226807
    10. '
' → logprob: -7.080999851226807

Token 49: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.07101019471883774
    2. 'while' (adapté à ' while') → logprob: -2.696010112762451
    3. '    ' → logprob: -7.571010112762451
    4. '   ' → logprob: -7.946010112762451
    5. ' ' → logprob: -9.82101058959961
    6. '    
' → logprob: -10.69601058959961
    7. 'n' → logprob: -10.69601058959961
    8. '```' → logprob: -10.82101058959961
    9. ' 
' → logprob: -11.07101058959961
    10. ' n' → logprob: -11.07101058959961

Token 50: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.01418242696672678
    2. 'n' → logprob: -4.2641825675964355
    3. '	n' → logprob: -12.014182090759277
    4. ' (' → logprob: -12.389182090759277
    5. ' ' → logprob: -12.639182090759277
    6. ' ' → logprob: -12.764182090759277
    7. '(n' → logprob: -13.139182090759277
    8. ' н' → logprob: -15.826682090759277
    9. '```' → logprob: -16.139183044433594
    10. '   ' → logprob: -16.576683044433594

Token 51: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.04881195351481438
    2. '%' → logprob: -3.048811912536621
    3. ' ' → logprob: -8.423811912536621
    4. ' ' → logprob: -12.298811912536621
    5. '%i' → logprob: -15.798811912536621
    6. ' %
' → logprob: -17.048812866210938
    7. '%e' → logprob: -17.048812866210938
    8. '  ' → logprob: -17.798812866210938
    9. ' `%' → logprob: -18.048812866210938
    10. '%s' → logprob: -18.173812866210938

Token 52: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.06197004392743111
    2. '2' → logprob: -2.8119699954986572
    3. ' ' → logprob: -13.311969757080078
    4. '```' → logprob: -15.311969757080078
    5. '<|end|>' → logprob: -15.311969757080078
    6. '  ' → logprob: -15.936969757080078
    7. ' ```' → logprob: -16.624469757080078
    8. '32' → logprob: -17.999469757080078
    9. '۲' → logprob: -18.249469757080078
    10. '20' → logprob: -18.436969757080078

Token 53: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. ' ' → logprob: -13.500001907348633
    3. '```' → logprob: -17.500001907348633
    4. '   ' → logprob: -19.250001907348633
    5. '۲' → logprob: -19.250001907348633
    6. '２' → logprob: -20.375001907348633
    7. '  ' → logprob: -20.500001907348633
    8. '²' → logprob: -20.625001907348633
    9. '٢' → logprob: -20.750001907348633
    10. '২' → logprob: -21.000001907348633

Token 54: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.01110217534005642
    2. '==' → logprob: -4.511102199554443
    3. ' ' → logprob: -10.011101722717285
    4. '=' → logprob: -12.511101722717285
    5. ')==' → logprob: -13.136101722717285
    6. ' =' → logprob: -13.636101722717285
    7. ')' → logprob: -14.136101722717285
    8. ' ===' → logprob: -14.386101722717285
    9. ']==' → logprob: -14.886101722717285
    10. '0' → logprob: -15.136101722717285

Token 55: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.38687217235565186
    2. ' ' → logprob: -1.1368721723556519
    3. ' ' → logprob: -13.761872291564941
    4. '  ' → logprob: -17.636871337890625
    5. '```' → logprob: -18.136871337890625
    6. '   ' → logprob: -19.011871337890625
    7. '۰' → logprob: -19.511871337890625
    8. '00' → logprob: -19.511871337890625
    9. '000' → logprob: -20.261871337890625
    10. '1' → logprob: -20.574371337890625

Token 56: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00017958412354346365
    2. ' ' → logprob: -8.625179290771484
    3. '۰' → logprob: -18.875179290771484
    4. '00' → logprob: -19.125179290771484
    5. '  ' → logprob: -19.375179290771484
    6. '```' → logprob: -19.375179290771484
    7. ' ' → logprob: -19.500179290771484
    8. '   ' → logprob: -19.625179290771484
    9. '000' → logprob: -19.750179290771484
    10. '٠' → logprob: -20.187679290771484

Token 57: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002091615227982402
    2. ' :' → logprob: -6.502091407775879
    3. ':
' → logprob: -8.377091407775879
    4. '   ' → logprob: -8.877091407775879
    5. '       ' → logprob: -9.127091407775879
    6. '):' → logprob: -9.377091407775879
    7. ',' → logprob: -11.377091407775879
    8. ' :
' → logprob: -12.627091407775879
    9. ')' → logprob: -13.377091407775879
    10. ' ' → logprob: -13.502091407775879

Token 58: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.39984405040740967
    2. ' factors' → logprob: -1.8998440504074097
    3. '   ' → logprob: -2.024844169616699
    4. 'f' → logprob: -3.524844169616699
    5. 'n' → logprob: -5.149844169616699
    6. ')' → logprob: -5.774844169616699
    7. '    ' → logprob: -5.774844169616699
    8. '<|end|>' → logprob: -6.399844169616699
    9. ' ' → logprob: -6.524844169616699
    10. ' f' → logprob: -7.524844169616699

Token 59: ' factors' (ID: 11652)
  Prédit: ' factors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factors' → logprob: -0.055330052971839905
    2. 'f' → logprob: -2.9303300380706787
    3. ' f' → logprob: -8.055330276489258
    4. ' ' → logprob: -10.930330276489258
    5. '   ' → logprob: -10.930330276489258
    6. '    ' → logprob: -10.930330276489258
    7. ' factores' → logprob: -11.430330276489258
    8. 'n' → logprob: -11.430330276489258
    9. ' facteurs' → logprob: -11.555330276489258
    10. 'factor' → logprob: -11.680330276489258

Token 60: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.25206002593040466
    2. '.' → logprob: -1.502060055732727
    3. ' .' → logprob: -9.002059936523438
    4. ' add' → logprob: -12.752059936523438
    5. '.Add' → logprob: -13.502059936523438
    6. 'add' → logprob: -13.877059936523438
    7. '.append' → logprob: -14.002059936523438
    8. '.insert' → logprob: -14.502059936523438
    9. '.update' → logprob: -14.502059936523438
    10. ').' → logprob: -16.252059936523438

Token 61: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.320199877838604e-07
    2. ' (' → logprob: -15.125
    3. ' ' → logprob: -16.625
    4. '('' → logprob: -17.125
    5. '(
' → logprob: -17.75
    6. '2' → logprob: -18.25
    7. '((' → logprob: -18.625
    8. '(

' → logprob: -19.5
    9. '("' → logprob: -19.875
    10. '()' → logprob: -20.125

Token 62: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.42870429158210754
    2. ' ' → logprob: -1.0537042617797852
    3. ''' → logprob: -13.553704261779785
    4. '   ' → logprob: -13.803704261779785
    5. ' ' → logprob: -14.803704261779785
    6. ' '' → logprob: -15.491204261779785
    7. ')' → logprob: -15.803704261779785
    8. '"' → logprob: -15.928704261779785
    9. '  ' → logprob: -15.991204261779785
    10. ' )' → logprob: -16.3662052154541

Token 63: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.16633452475070953
    2. ')
' → logprob: -1.9163345098495483
    3. ')
' → logprob: -5.666334629058838
    4. ' )
' → logprob: -6.416334629058838
    5. ' )' → logprob: -7.166334629058838
    6. '       ' → logprob: -8.79133415222168
    7. ' )
' → logprob: -10.29133415222168
    8. '   ' → logprob: -10.66633415222168
    9. ')

' → logprob: -12.54133415222168
    10. ')n' → logprob: -12.54133415222168

Token 64: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00691085634753108
    2. 'n' → logprob: -5.506910800933838
    3. ' n' → logprob: -6.381910800933838
    4. '   ' → logprob: -7.631910800933838
    5. '        
' → logprob: -8.006911277770996
    6. '```' → logprob: -9.881911277770996
    7. '    
' → logprob: -10.006911277770996
    8. ',' → logprob: -10.256911277770996
    9. '     
' → logprob: -10.381911277770996
    10. ' ' → logprob: -10.631911277770996

Token 65: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.4740808606147766
    2. ' n' → logprob: -0.9740808606147766
    3. '   ' → logprob: -13.599081039428711
    4. '	n' → logprob: -14.099081039428711
    5. ' ' → logprob: -14.599081039428711
    6. '```' → logprob: -14.724081039428711
    7. '       ' → logprob: -14.849081039428711
    8. ' ' → logprob: -15.349081039428711
    9. '_n' → logprob: -16.59908103942871
    10. '    ' → logprob: -16.72408103942871

Token 66: ' //' (ID: 602)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.39331796765327454
    2. ' //' → logprob: -1.1433179378509521
    3. '=' → logprob: -5.268318176269531
    4. ' =' → logprob: -6.893318176269531
    5. '//' → logprob: -8.893318176269531
    6. ' /=' → logprob: -9.393318176269531
    7. ' ' → logprob: -10.518318176269531
    8. '/=' → logprob: -12.268318176269531
    9. ' ' → logprob: -13.268318176269531
    10. ' >>=' → logprob: -13.518318176269531

Token 67: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -3.128163257315464e-07
    2. '2' → logprob: -16.0
    3. '=}' → logprob: -16.5
    4. '=

' → logprob: -17.875
    5. '=
' → logprob: -19.25
    6. ' =' → logprob: -19.375
    7. '=.' → logprob: -19.625
    8. '='' → logprob: -19.875
    9. '4' → logprob: -20.125
    10. '_=' → logprob: -20.25

Token 68: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00861456897109747
    2. ' ' → logprob: -4.758614540100098
    3. '```' → logprob: -17.383615493774414
    4. ' ' → logprob: -18.383615493774414
    5. '۲' → logprob: -19.133615493774414
    6. '   ' → logprob: -19.571115493774414
    7. '２' → logprob: -19.696115493774414
    8. '    ' → logprob: -20.258615493774414
    9. '  ' → logprob: -20.446115493774414
    10. '٢' → logprob: -21.321115493774414

Token 69: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '```' → logprob: -19.6250057220459
    4. '   ' → logprob: -21.1250057220459
    5. '۲' → logprob: -21.1250057220459
    6. '２' → logprob: -21.6250057220459
    7. '  ' → logprob: -22.0000057220459
    8. '
' → logprob: -23.3750057220459
    9. '২' → logprob: -23.5000057220459
    10. '

' → logprob: -23.6250057220459

Token 70: '
' (ID: 198)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.10963641852140427
    2. '
' → logprob: -3.1096363067626953
    3. '  
' → logprob: -4.234636306762695
    4. ' ' → logprob: -4.609636306762695
    5. '<|end|>' → logprob: -4.734636306762695
    6. '   
' → logprob: -4.859636306762695
    7. '    
' → logprob: -5.109636306762695
    8. '\n' → logprob: -5.359636306762695
    9. '   ' → logprob: -6.109636306762695
    10. 'n' → logprob: -6.609636306762695

Token 71: '   ' (ID: 271)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.016035189852118492
    2. '    
' → logprob: -4.891035079956055
    3. '
' → logprob: -6.016035079956055
    4. '```' → logprob: -6.266035079956055
    5. '  
' → logprob: -6.516035079956055
    6. '   
' → logprob: -6.641035079956055
    7. '   ' → logprob: -7.641035079956055
    8. '     
' → logprob: -8.016035079956055
    9. ' 

' → logprob: -9.266035079956055
    10. ' while' → logprob: -9.766035079956055

Token 72: ' #' (ID: 1069)
  Prédit: ' 
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' 
' → logprob: -0.12644287943840027
    2. '   ' → logprob: -3.5014429092407227
    3. ' ' → logprob: -3.6264429092407227
    4. ' while' → logprob: -3.7514429092407227
    5. '    
' → logprob: -3.8764429092407227
    6. 'while' → logprob: -5.126442909240723
    7. '   
' → logprob: -5.501442909240723
    8. '  
' → logprob: -6.376442909240723
    9. '
' → logprob: -6.376442909240723
    10. ' 

' → logprob: -7.626442909240723

Token 73: ' Div' (ID: 12302)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.6138960123062134
    2. 'i' → logprob: -1.1138960123062134
    3. ' for' → logprob: -2.488895893096924
    4. 'for' → logprob: -3.238895893096924
    5. '   ' → logprob: -5.613895893096924
    6. '3' → logprob: -5.863895893096924
    7. ' p' → logprob: -6.863895893096924
    8. ' ' → logprob: -8.613896369934082
    9. 'p' → logprob: -8.988896369934082
    10. ' divisor' → logprob: -9.113896369934082

Token 74: 'iser' (ID: 7466)
  Prédit: 'ide'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ide' → logprob: -0.6145485043525696
    2. 'iser' → logprob: -1.6145484447479248
    3. '       ' → logprob: -2.614548444747925
    4. '   ' → logprob: -2.864548444747925
    5. 'er' → logprob: -3.489548444747925
    6. 'ise' → logprob: -4.114548683166504
    7. 'e' → logprob: -4.364548683166504
    8. 'i' → logprob: -4.989548683166504
    9. 'for' → logprob: -4.989548683166504
    10. '           ' → logprob: -5.114548683166504

Token 75: ' par' (ID: 686)
  Prédit: ' par'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' par' → logprob: -0.4792289137840271
    2. 'par' → logprob: -0.9792289137840271
    3. ' by' → logprob: -5.854228973388672
    4. 'by' → logprob: -7.104228973388672
    5. ' i' → logprob: -7.604228973388672
    6. 'f' → logprob: -8.604228973388672
    7. '(par' → logprob: -9.229228973388672
    8. ' ' → logprob: -9.354228973388672
    9. '3' → logprob: -9.354228973388672
    10. 'i' → logprob: -9.479228973388672

Token 76: ' les' (ID: 1341)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '3' → logprob: -0.2294425368309021
    2. ' ' → logprob: -2.229442596435547
    3. ' i' → logprob: -2.479442596435547
    4. 'i' → logprob: -4.354442596435547
    5. 'int' → logprob: -7.979442596435547
    6. ' int' → logprob: -8.854442596435547
    7. ' range' → logprob: -9.479442596435547
    8. ' ' → logprob: -10.479442596435547
    9. 'range' → logprob: -10.604442596435547
    10. ')' → logprob: -10.729442596435547

Token 77: ' imp' (ID: 3282)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.02420114539563656
    2. 'i' → logprob: -3.7742011547088623
    3. ' odd' → logprob: -7.149200916290283
    4. '3' → logprob: -9.399201393127441
    5. ' range' → logprob: -10.649201393127441
    6. ' ' → logprob: -10.649201393127441
    7. ' p' → logprob: -11.399201393127441
    8. 'odd' → logprob: -12.274201393127441
    9. ' f' → logprob: -12.524201393127441
    10. ' autres' → logprob: -12.899201393127441

Token 78: 'airs' (ID: 6498)
  Prédit: 'airs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'airs' → logprob: -0.02874155156314373
    2. 'air' → logprob: -4.278741359710693
    3. 'aires' → logprob: -4.278741359710693
    4. 'ares' → logprob: -7.903741359710693
    5. 'a' → logprob: -9.653741836547852
    6. 'ar' → logprob: -9.903741836547852
    7. 'ari' → logprob: -10.153741836547852
    8. 'aris' → logprob: -10.528741836547852
    9. 'pairs' → logprob: -10.528741836547852
    10. 'aries' → logprob: -11.528741836547852

Token 79: '
' (ID: 198)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.011611110530793667
    2. 'i' → logprob: -5.011610984802246
    3. ' from' → logprob: -5.761610984802246
    4. ' for' → logprob: -7.261610984802246
    5. ' ' → logprob: -8.136610984802246
    6. 'from' → logprob: -8.761610984802246
    7. ' à' → logprob: -9.386610984802246
    8. ' starting' → logprob: -9.761610984802246
    9. ' in' → logprob: -9.886610984802246
    10. ' ,' → logprob: -10.136610984802246

Token 80: '   ' (ID: 271)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.22974500060081482
    2. ' from' → logprob: -1.8547450304031372
    3. ' for' → logprob: -3.8547449111938477
    4. 'i' → logprob: -4.229744911193848
    5. 'from' → logprob: -5.229744911193848
    6. ' in' → logprob: -6.604744911193848
    7. ' up' → logprob: -7.229744911193848
    8. ' en' → logprob: -7.229744911193848
    9. ' ' → logprob: -7.354744911193848
    10. ' à' → logprob: -7.479744911193848

Token 81: ' f' (ID: 285)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.5447224974632263
    2. 'i' → logprob: -0.9197224974632263
    3. ' for' → logprob: -4.544722557067871
    4. 'for' → logprob: -4.669722557067871
    5. '3' → logprob: -7.169722557067871
    6. '   ' → logprob: -8.544722557067871
    7. 'p' → logprob: -9.294722557067871
    8. 'f' (adapté à ' f') → logprob: -9.794722557067871
    9. '2' → logprob: -10.169722557067871
    10. ' p' → logprob: -10.294722557067871

Token 82: ' =' (ID: 314)
  Prédit: 'or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'or' → logprob: -0.041541632264852524
    2. 'actor' → logprob: -3.291541576385498
    3. 'i' → logprob: -6.291541576385498
    4. ' i' → logprob: -7.166541576385498
    5. ' or' → logprob: -8.791542053222656
    6. 'orm' → logprob: -8.916542053222656
    7. 'rom' → logprob: -9.166542053222656
    8. ' for' → logprob: -9.291542053222656
    9. 'ormat' → logprob: -9.666542053222656
    10. '=' → logprob: -9.666542053222656

Token 83: ' ' (ID: 220)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.000553151941858232
    2. ' ' → logprob: -7.500553131103516
    3. '۳' → logprob: -16.625553131103516
    4. '３' → logprob: -17.250553131103516
    5. '   ' → logprob: -17.750553131103516
    6. '³' → logprob: -17.750553131103516
    7. '  ' → logprob: -18.000553131103516
    8. ' ' → logprob: -19.125553131103516
    9. '٣' → logprob: -19.125553131103516
    10. '```' → logprob: -19.125553131103516

Token 84: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '۳' → logprob: -17.625
    4. '３' → logprob: -18.625
    5. '³' → logprob: -19.0
    6. '٣' → logprob: -19.375
    7. '   ' → logprob: -19.5625
    8. '৩' → logprob: -19.5625
    9. '  ' → logprob: -19.75
    10. '```' → logprob: -20.125

Token 85: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 86: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 87: ' while' (ID: 2049)
  Prédit: ' while'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' while' → logprob: -0.3913988173007965
    2. 'while' (adapté à ' while') → logprob: -1.5163987874984741
    3. '   ' → logprob: -3.0163989067077637
    4. ':' → logprob: -3.6413989067077637
    5. ' ' → logprob: -4.266398906707764
    6. '	while' → logprob: -5.016398906707764
    7. '  ' → logprob: -6.391398906707764
    8. '    ' → logprob: -6.516398906707764
    9. '
' → logprob: -6.641398906707764
    10. '<|end|>' → logprob: -7.141398906707764

Token 88: ' f' (ID: 285)
  Prédit: ' f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' f' → logprob: -0.4743266999721527
    2. 'f' → logprob: -0.9743267297744751
    3. ' math' → logprob: -8.724327087402344
    4. 'math' → logprob: -9.599327087402344
    5. '	f' → logprob: -11.474327087402344
    6. ' ' → logprob: -12.474327087402344
    7. ' ' → logprob: -12.724327087402344
    8. 'n' → logprob: -14.224327087402344
    9. '(f' → logprob: -14.974327087402344
    10. ' n' → logprob: -15.349327087402344

Token 89: ' *' (ID: 425)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3556387722492218
    2. ' *' → logprob: -1.2306387424468994
    3. '<=' → logprob: -5.6056389808654785
    4. '*' → logprob: -6.3556389808654785
    5. '*f' → logprob: -6.3556389808654785
    6. ' ' → logprob: -11.60563850402832
    7. '*i' → logprob: -12.98063850402832
    8. '**' → logprob: -13.10563850402832
    9. 'f' → logprob: -14.35563850402832
    10. ' f' → logprob: -14.35563850402832

Token 90: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0017035098280757666
    2. ' f' → logprob: -6.37670373916626
    3. 'n' → logprob: -14.626703262329102
    4. '	f' → logprob: -15.001703262329102
    5. ' ' → logprob: -15.126703262329102
    6. '*f' → logprob: -16.8767032623291
    7. 'math' → logprob: -17.2517032623291
    8. '_f' → logprob: -17.2517032623291
    9. ' math' → logprob: -17.2517032623291
    10. 'ф' → logprob: -17.6267032623291

Token 91: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.11284232884645462
    2. '<=' → logprob: -2.237842321395874
    3. '<|end|>' → logprob: -11.237842559814453
    4. ')<=' → logprob: -12.862842559814453
    5. ']<=' → logprob: -13.737842559814453
    6. ' ' → logprob: -13.862842559814453
    7. ' ≤' → logprob: -14.237842559814453
    8. ' <=",' → logprob: -15.237842559814453
    9. '<|end|>' → logprob: -15.362842559814453
    10. 'le' → logprob: -15.487842559814453

Token 92: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.4740781784057617
    2. 'n' → logprob: -0.9740781784057617
    3. '	n' → logprob: -13.974078178405762
    4. ' ' → logprob: -15.474078178405762
    5. ' ' → logprob: -15.849078178405762
    6. '   ' → logprob: -17.474079132080078
    7. '    ' → logprob: -17.974079132080078
    8. '_n' → logprob: -17.974079132080078
    9. '```' → logprob: -18.474079132080078
    10. 'int' → logprob: -18.474079132080078

Token 93: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007063561934046447
    2. ' :' → logprob: -7.375706195831299
    3. ' and' → logprob: -9.875706672668457
    4. ':
' → logprob: -10.750706672668457
    5. '):' → logprob: -13.125706672668457
    6. ':**' → logprob: -13.500706672668457
    7. 'and' → logprob: -13.625706672668457
    8. ',' → logprob: -14.375706672668457
    9. ':n' → logprob: -15.125706672668457
    10. '<|end|>' → logprob: -15.500706672668457

Token 94: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4401609003543854
    2. ':' → logprob: -1.690160870552063
    3. '   ' → logprob: -2.4401609897613525
    4. ' ' → logprob: -3.1901609897613525
    5. ' :' → logprob: -3.9401609897613525
    6. '    ' → logprob: -4.315160751342773
    7. ':
' → logprob: -6.065160751342773
    8. ' :
' → logprob: -6.815160751342773
    9. ' 
' → logprob: -6.940160751342773
    10. '  ' → logprob: -7.065160751342773

Token 95: ' while' (ID: 2049)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -1.2407430410385132
    2. '       ' → logprob: -1.9907430410385132
    3. ' if' → logprob: -1.9907430410385132
    4. ' 
' → logprob: -2.2407431602478027
    5. ':' → logprob: -2.3657431602478027
    6. ' :' → logprob: -2.7407431602478027
    7. '    ' → logprob: -3.1157431602478027
    8. '
' → logprob: -3.2407431602478027
    9. 'if' → logprob: -3.6157431602478027
    10. '   ' → logprob: -4.240743160247803

Token 96: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.011048289015889168
    2. 'n' → logprob: -4.511048316955566
    3. '(n' → logprob: -15.261048316955566
    4. '	n' → logprob: -16.51104736328125
    5. ' ' → logprob: -17.01104736328125
    6. ' (' → logprob: -17.38604736328125
    7. ' ' → logprob: -17.63604736328125
    8. ' н' → logprob: -18.76104736328125
    9. ')n' → logprob: -19.63604736328125
    10. '_n' → logprob: -20.38604736328125

Token 97: ' %' (ID: 1851)
  Prédit: ' %'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' %' → logprob: -0.4740793704986572
    2. '%' → logprob: -0.9740793704986572
    3. ' ' → logprob: -13.599079132080078
    4. ' ' → logprob: -13.849079132080078
    5. '%s' → logprob: -16.974079132080078
    6. '%i' → logprob: -16.974079132080078
    7. '%n' → logprob: -17.349079132080078
    8. '%d' → logprob: -17.474079132080078
    9. '%e' → logprob: -18.224079132080078
    10. '％' → logprob: -18.349079132080078

Token 98: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.0067156096920371056
    2. ' f' → logprob: -5.006715774536133
    3. '<|end|>' → logprob: -15.881715774536133
    4. '	f' → logprob: -16.506715774536133
    5. ' ' → logprob: -16.756715774536133
    6. '<|end|>' → logprob: -17.506715774536133
    7. '   ' → logprob: -18.756715774536133
    8. '_f' → logprob: -19.381715774536133
    9. '*f' → logprob: -19.381715774536133
    10. '[f' → logprob: -19.381715774536133

Token 99: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3132643401622772
    2. '==' → logprob: -1.3132643699645996
    3. '=' → logprob: -13.563263893127441
    4. ' ' → logprob: -14.313263893127441
    5. ')==' → logprob: -14.938263893127441
    6. '===' → logprob: -16.188264846801758
    7. ' =' → logprob: -16.563264846801758
    8. ']==' → logprob: -16.688264846801758
    9. '0' → logprob: -17.188264846801758
    10. '()==' → logprob: -17.313264846801758

Token 100: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0017021986423060298
    2. ' ' → logprob: -6.376702308654785
    3. ' ' → logprob: -19.25170135498047
    4. '۰' → logprob: -19.50170135498047
    5. '  ' → logprob: -20.87670135498047
    6. '   ' → logprob: -20.87670135498047
    7. '<|end|>' → logprob: -21.37670135498047
    8. '```' → logprob: -22.00170135498047
    9. ' ' → logprob: -22.12670135498047
    10. '٠' → logprob: -22.43920135498047

Token 101: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.7610454708337784e-05
    2. ' ' → logprob: -10.500027656555176
    3. '۰' → logprob: -19.87502670288086
    4. 'f' → logprob: -20.75002670288086
    5. '   ' → logprob: -21.12502670288086
    6. '  ' → logprob: -21.25002670288086
    7. ' ' → logprob: -21.81252670288086
    8. '00' → logprob: -22.06252670288086
    9. ' ' → logprob: -22.18752670288086
    10. '٠' → logprob: -22.18752670288086

Token 102: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.006049074232578278
    2. ':
' → logprob: -5.256049156188965
    3. '):' → logprob: -7.881049156188965
    4. '       ' → logprob: -8.131049156188965
    5. ' :' → logprob: -10.006049156188965
    6. '           ' → logprob: -10.006049156188965
    7. '):
' → logprob: -11.006049156188965
    8. '<|end|>' → logprob: -11.506049156188965
    9. ')' → logprob: -11.631049156188965
    10. ' :
' → logprob: -12.381049156188965

Token 103: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12804897129535675
    2. '           ' → logprob: -2.128048896789551
    3. ' factors' → logprob: -7.003048896789551
    4. 'f' → logprob: -9.75304889678955
    5. '{' → logprob: -10.87804889678955
    6. ' ' → logprob: -11.25304889678955
    7. ' f' → logprob: -11.25304889678955
    8. '        ' → logprob: -11.37804889678955
    9. '```' → logprob: -11.37804889678955
    10. '   ' → logprob: -11.50304889678955

Token 104: ' factors' (ID: 11652)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.00019698418327607214
    2. ' factors' → logprob: -8.750197410583496
    3. '       ' → logprob: -10.250197410583496
    4. '           ' → logprob: -13.000197410583496
    5. '   ' → logprob: -14.625197410583496
    6. ' f' → logprob: -15.000197410583496
    7. 'factor' → logprob: -16.00019645690918
    8. '	f' → logprob: -17.87519645690918
    9. '               ' → logprob: -17.87519645690918
    10. '{
' → logprob: -18.37519645690918

Token 105: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0013273799559101462
    2. '.' → logprob: -6.6263275146484375
    3. ' .' → logprob: -14.251327514648438
    4. '.append' → logprob: -15.126327514648438
    5. '.setdefault' → logprob: -15.251327514648438
    6. '.Add' → logprob: -16.376327514648438
    7. '.remove' → logprob: -16.876327514648438
    8. '.update' → logprob: -17.376327514648438
    9. '.insert' → logprob: -18.126327514648438
    10. ').' → logprob: -18.126327514648438

Token 106: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -5.836499985889532e-05
    2. '(' → logprob: -9.7500581741333
    3. '(
' → logprob: -19.500059127807617
    4. '(n' → logprob: -19.875059127807617
    5. '(F' → logprob: -20.625059127807617
    6. ' (' → logprob: -20.750059127807617
    7. '	f' → logprob: -21.000059127807617
    8. 'f' → logprob: -21.125059127807617
    9. '(

' → logprob: -22.000059127807617
    10. '()' → logprob: -22.125059127807617

Token 107: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04868047684431076
    2. ')
' → logprob: -3.048680543899536
    3. '           ' → logprob: -10.173680305480957
    4. ')
' → logprob: -10.173680305480957
    5. '               ' → logprob: -12.423680305480957
    6. ' )' → logprob: -12.798680305480957
    7. ')n' → logprob: -12.798680305480957
    8. '),' → logprob: -13.423680305480957
    9. ' )
' → logprob: -13.923680305480957
    10. ')return' → logprob: -14.173680305480957

Token 108: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012575460597872734
    2. 'n' → logprob: -4.387575626373291
    3. '            
' → logprob: -10.387575149536133
    4. '
' → logprob: -11.012575149536133
    5. ' n' → logprob: -11.262575149536133
    6. '          ' → logprob: -13.637575149536133
    7. ' 
' → logprob: -14.262575149536133
    8. '```' → logprob: -14.262575149536133
    9. '       ' → logprob: -14.887575149536133
    10. '               ' → logprob: -15.012575149536133

Token 109: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.006717147771269083
    2. ' n' → logprob: -5.006717205047607
    3. '           ' → logprob: -13.63171672821045
    4. '               ' → logprob: -14.75671672821045
    5. '	n' → logprob: -15.75671672821045
    6. '```' → logprob: -17.381717681884766
    7. '_n' → logprob: -18.506717681884766
    8. '   ' → logprob: -19.756717681884766
    9. '                   ' → logprob: -20.506717681884766
    10. '            ' → logprob: -20.631717681884766

Token 110: ' //' (ID: 602)
  Prédit: '//='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '//=' → logprob: -0.000977671123109758
    2. '//' → logprob: -7.625977516174316
    3. ' //' → logprob: -7.625977516174316
    4. '/=' → logprob: -13.250977516174316
    5. '=' → logprob: -17.125978469848633
    6. ' /=' → logprob: -17.625978469848633
    7. '           ' → logprob: -19.125978469848633
    8. ' ' → logprob: -19.250978469848633
    9. ' ' → logprob: -19.250978469848633
    10. '```' → logprob: -19.250978469848633

Token 111: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.3306015716807451e-05
    2. '/=' → logprob: -12.00001335144043
    3. '=f' → logprob: -12.25001335144043
    4. '=
' → logprob: -13.75001335144043
    5. '=_' → logprob: -14.87501335144043
    6. '/' → logprob: -15.25001335144043
    7. '=

' → logprob: -15.37501335144043
    8. '=/' → logprob: -15.50001335144043
    9. '_=' → logprob: -16.37501335144043
    10. '=}' → logprob: -17.87501335144043

Token 112: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.01814994215965271
    2. ' f' → logprob: -4.0181498527526855
    3. '	f' → logprob: -18.518150329589844
    4. ' ' → logprob: -20.518150329589844
    5. ' ' → logprob: -20.643150329589844
    6. '_f' → logprob: -21.268150329589844
    7. 'ф' → logprob: -21.643150329589844
    8. ' ф' → logprob: -21.893150329589844
    9. '```' → logprob: -22.018150329589844
    10. '2' → logprob: -22.143150329589844

Token 113: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04040540009737015
    2. '           ' → logprob: -3.790405511856079
    3. ' 
' → logprob: -5.6654052734375
    4. 'f' → logprob: -5.9154052734375
    5. '        ' → logprob: -6.0404052734375
    6. '   ' → logprob: -6.2904052734375
    7. ' f' → logprob: -6.4154052734375
    8. '        
' → logprob: -6.6654052734375
    9. '               ' → logprob: -7.0404052734375
    10. ' ' → logprob: -7.2904052734375

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09373338520526886
    2. ' f' → logprob: -3.343733310699463
    3. ' ' → logprob: -3.718733310699463
    4. '   ' → logprob: -4.218733310699463
    5. 'f' → logprob: -4.968733310699463
    6. '3' → logprob: -6.093733310699463
    7. '  ' → logprob: -7.093733310699463
    8. '           ' → logprob: -7.218733310699463
    9. '    ' → logprob: -7.468733310699463
    10. '        ' → logprob: -7.468733310699463

Token 115: ' f' (ID: 285)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' (adapté à ' f') → logprob: -0.286946564912796
    2. ' f' → logprob: -1.4119465351104736
    3. '       ' → logprob: -6.036946773529053
    4. ' ' → logprob: -6.536946773529053
    5. '   ' → logprob: -6.536946773529053
    6. '	f' → logprob: -8.286946296691895
    7. ' 
' → logprob: -9.036946296691895
    8. '  ' → logprob: -10.161946296691895
    9. '    ' → logprob: -10.911946296691895
    10. '3' → logprob: -11.161946296691895

Token 116: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.016838090494275093
    2. ' +=' → logprob: -4.141838073730469
    3. '+' → logprob: -7.141838073730469
    4. '=' → logprob: -11.766838073730469
    5. '+="' → logprob: -14.016838073730469
    6. ']+=' → logprob: -14.016838073730469
    7. ' ' → logprob: -14.016838073730469
    8. '++' → logprob: -14.266838073730469
    9. '+='' → logprob: -14.266838073730469
    10. 'plus' → logprob: -15.766838073730469

Token 117: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00010902655776590109
    2. ' ' → logprob: -9.12510871887207
    3. '```' → logprob: -18.87510871887207
    4. '۲' → logprob: -18.93760871887207
    5. '1' → logprob: -19.37510871887207
    6. '   ' → logprob: -19.93760871887207
    7. '
' → logprob: -19.93760871887207
    8. '6' → logprob: -20.18760871887207
    9. '２' → logprob: -20.18760871887207
    10. '  ' → logprob: -20.50010871887207

Token 118: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '۲' → logprob: -18.375009536743164
    4. '1' → logprob: -18.500009536743164
    5. '```' → logprob: -19.000009536743164
    6. '   ' → logprob: -19.250009536743164
    7. '

' → logprob: -19.500009536743164
    8. '٢' → logprob: -19.750009536743164
    9. '२' → logprob: -20.125009536743164
    10. '２' → logprob: -20.187509536743164

Token 119: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2856048047542572
    2. '
' → logprob: -1.7856048345565796
    3. 'return' → logprob: -2.78560471534729
    4. '    
' → logprob: -4.410604953765869
    5. ' return' → logprob: -5.410604953765869
    6. ' 
' → logprob: -6.785604953765869
    7. ':return' → logprob: -7.910604953765869
    8. '  
' → logprob: -8.285604476928711
    9. '<|end|>' → logprob: -8.285604476928711
    10. '   
' → logprob: -8.660604476928711

Token 120: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.31071874499320984
    2. ' 
' → logprob: -2.0607187747955322
    3. '
' → logprob: -2.5607187747955322
    4. '    
' → logprob: -3.1857187747955322
    5. 'return' → logprob: -4.935718536376953
    6. ' ' → logprob: -5.310718536376953
    7. ' return' → logprob: -5.435718536376953
    8. '  
' → logprob: -6.060718536376953
    9. '   
' → logprob: -6.935718536376953
    10. '<|end|>' → logprob: -7.560718536376953

Token 121: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.1373252272605896
    2. ' if' → logprob: -2.2623252868652344
    3. '   ' → logprob: -3.7623252868652344
    4. 'return' → logprob: -7.887325286865234
    5. '
' → logprob: -8.012325286865234
    6. '```' → logprob: -8.637325286865234
    7. ' return' → logprob: -10.387325286865234
    8. ' ' → logprob: -11.262325286865234
    9. '	if' → logprob: -11.262325286865234
    10. '    
' → logprob: -11.512325286865234

Token 122: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2519872784614563
    2. ' if' → logprob: -1.5019872188568115
    3. '   ' → logprob: -10.00198745727539
    4. 'If' → logprob: -12.25198745727539
    5. '#' → logprob: -12.87698745727539
    6. 'return' → logprob: -14.00198745727539
    7. '
' → logprob: -14.12698745727539
    8. 'Ajouter' → logprob: -14.12698745727539
    9. 'Si' → logprob: -14.37698745727539
    10. ' ' → logprob: -14.50198745727539

Token 123: ' reste' (ID: 26769)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.10020806640386581
    2. 'n' → logprob: -2.350208044052124
    3. '	n' → logprob: -14.225208282470703
    4. ' ' → logprob: -14.975208282470703
    5. ' ' → logprob: -15.350208282470703
    6. '>' → logprob: -16.100208282470703
    7. '   ' → logprob: -16.225208282470703
    8. '#' → logprob: -17.725208282470703
    9. '(n' → logprob: -18.600208282470703
    10. '  ' → logprob: -18.725208282470703

Token 124: ' >' (ID: 1424)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.37610697746276855
    2. '>' → logprob: -1.6261069774627686
    3. ' >' → logprob: -2.2511069774627686
    4. ' n' → logprob: -4.501107215881348
    5. ' ' → logprob: -9.126107215881348
    6. '   ' → logprob: -9.376107215881348
    7. '(n' → logprob: -9.751107215881348
    8. 'nt' → logprob: -10.626107215881348
    9. 'r' → logprob: -11.001107215881348
    10. ' ' → logprob: -11.001107215881348

Token 125: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011053952388465405
    2. ' ' → logprob: -4.511054039001465
    3. ' ' → logprob: -13.011054039001465
    4. '   ' → logprob: -13.511054039001465
    5. '>' → logprob: -14.386054039001465
    6. '  ' → logprob: -14.886054039001465
    7. '
' → logprob: -15.136054039001465
    8. '```' → logprob: -15.136054039001465
    9. '

' → logprob: -15.511054039001465
    10. '2' → logprob: -15.636054039001465

Token 126: ' c' (ID: 274)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026566866785287857
    2. ':
' → logprob: -3.651566982269287
    3. '>' → logprob: -8.776566505432129
    4. '   ' → logprob: -9.901566505432129
    5. ',' → logprob: -10.651566505432129
    6. ' >' → logprob: -11.276566505432129
    7. ' :' → logprob: -11.526566505432129
    8. ':

' → logprob: -11.901566505432129
    9. ' and' → logprob: -13.776566505432129
    10. '==' → logprob: -13.776566505432129

Token 127: ''est' (ID: 6616)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.4481903910636902
    2. 'ont' → logprob: -1.698190450668335
    3. '   ' → logprob: -2.698190450668335
    4. '=' → logprob: -3.448190450668335
    5. ''est' → logprob: -3.948190450668335
    6. ':' → logprob: -4.573190212249756
    7. 'ertain' → logprob: -4.573190212249756
    8. '  ' → logprob: -5.073190212249756
    9. ' >' → logprob: -5.323190212249756
    10. '       ' → logprob: -5.448190212249756

Token 128: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.44750434160232544
    2. 'un' → logprob: -1.3225042819976807
    3. 'n' → logprob: -2.5725042819976807
    4. '   ' → logprob: -4.19750452041626
    5. 'une' → logprob: -7.19750452041626
    6. ' n' → logprob: -7.44750452041626
    7. ' une' → logprob: -8.072504043579102
    8. ' ' → logprob: -8.197504043579102
    9. 'a' → logprob: -8.322504043579102
    10. ' facteur' → logprob: -9.072504043579102

Token 129: ' facteur' (ID: 175214)
  Prédit: ' facteur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' facteur' → logprob: -0.07731880247592926
    2. 'fact' → logprob: -3.3273189067840576
    3. ' fact' → logprob: -3.4523189067840576
    4. ' factor' → logprob: -5.3273186683654785
    5. 'factor' → logprob: -6.9523186683654785
    6. ' prime' → logprob: -7.5773186683654785
    7. ' facteurs' → logprob: -8.827319145202637
    8. 'prime' → logprob: -8.827319145202637
    9. 'f' → logprob: -9.577319145202637
    10. '_fact' → logprob: -9.827319145202637

Token 130: ' premier' (ID: 15506)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.38284575939178467
    2. 'f' → logprob: -1.2578457593917847
    3. ' factors' → logprob: -3.507845878601074
    4. '       ' → logprob: -6.007845878601074
    5. '  ' → logprob: -8.132845878601074
    6. 'n' → logprob: -8.382845878601074
    7. '.' → logprob: -8.382845878601074
    8. ' ' → logprob: -9.382845878601074
    9. '(' → logprob: -9.632845878601074
    10. ':' → logprob: -9.632845878601074

Token 131: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7505020499229431
    2. ' if' → logprob: -1.125502109527588
    3. 'if' → logprob: -1.875502109527588
    4. ' factors' → logprob: -3.125502109527588
    5. 'f' → logprob: -5.125502109527588
    6. '       ' → logprob: -9.00050163269043
    7. ' f' → logprob: -10.50050163269043
    8. 'n' → logprob: -10.50050163269043
    9. ':' → logprob: -11.37550163269043
    10. '  ' → logprob: -11.62550163269043

Token 132: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33426663279533386
    2. ' if' → logprob: -1.8342666625976562
    3. 'if' → logprob: -2.0842666625976562
    4. 'return' → logprob: -12.459266662597656
    5. ' return' → logprob: -13.334266662597656
    6. '	if' → logprob: -14.084266662597656
    7. ' ' → logprob: -14.584266662597656
    8. '       ' → logprob: -14.959266662597656
    9. '   ' → logprob: -14.959266662597656
    10. '  ' → logprob: -15.209266662597656

Token 133: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.6965142488479614
    2. ' if' → logprob: -0.6965142488479614
    3. '   ' → logprob: -5.696514129638672
    4. ' ' → logprob: -12.946514129638672
    5. '  ' → logprob: -14.696514129638672
    6. '	if' → logprob: -14.696514129638672
    7. 'return' → logprob: -15.821514129638672
    8. 'If' → logprob: -15.946514129638672
    9. '    ' → logprob: -16.446514129638672
    10. '
' → logprob: -16.696514129638672

Token 134: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.0067156096920371056
    2. 'n' → logprob: -5.006715774536133
    3. ' ' → logprob: -16.006715774536133
    4. '	n' → logprob: -16.006715774536133
    5. ' ' → logprob: -17.131715774536133
    6. ' н' → logprob: -18.506715774536133
    7. '_n' → logprob: -18.756715774536133
    8. '>' → logprob: -19.131715774536133
    9. '   ' → logprob: -19.131715774536133
    10. '(n' → logprob: -19.756715774536133

Token 135: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.038045283406972885
    2. '>' → logprob: -3.2880451679229736
    3. ' ' → logprob: -12.913044929504395
    4. ' ' → logprob: -13.788044929504395
    5. ' >
' → logprob: -16.66304588317871
    6. ' >

' → logprob: -16.91304588317871
    7. '">' → logprob: -16.91304588317871
    8. '&gt' → logprob: -17.03804588317871
    9. '  ' → logprob: -17.91304588317871
    10. '1' → logprob: -18.03804588317871

Token 136: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016034485772252083
    2. ' ' → logprob: -4.1410346031188965
    3. ' ' → logprob: -15.891034126281738
    4. '```' → logprob: -16.391035079956055
    5. '>' → logprob: -17.516035079956055
    6. '   ' → logprob: -17.766035079956055
    7. '１' → logprob: -17.891035079956055
    8. '2' → logprob: -18.016035079956055
    9. '۱' → logprob: -18.016035079956055
    10. '<|end|>' → logprob: -18.141035079956055

Token 137: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '```' → logprob: -17.500009536743164
    4. '2' → logprob: -18.625009536743164
    5. '１' → logprob: -19.500009536743164
    6. '۱' → logprob: -19.625009536743164
    7. '>' → logprob: -19.750009536743164
    8. '<|end|>' → logprob: -19.875009536743164
    9. '   ' → logprob: -20.125009536743164
    10. ' ' → logprob: -20.375009536743164

Token 138: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0032131264451891184
    2. ':
' → logprob: -5.753212928771973
    3. '   ' → logprob: -11.003212928771973
    4. ' :' → logprob: -11.628212928771973
    5. '       ' → logprob: -12.003212928771973
    6. '):' → logprob: -13.378212928771973
    7. ' :
' → logprob: -14.628212928771973
    8. ':
' → logprob: -14.753212928771973
    9. ':return' → logprob: -15.253212928771973
    10. ':

' → logprob: -15.503212928771973

Token 139: '       ' (ID: 309)
  Prédit: ' factors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factors' → logprob: -0.2265162318944931
    2. '       ' → logprob: -1.6015162467956543
    3. 'f' → logprob: -7.351516246795654
    4. '   ' → logprob: -7.726516246795654
    5. ' facteurs' → logprob: -12.351515769958496
    6. ' factores' → logprob: -12.476515769958496
    7. ' f' → logprob: -12.851515769958496
    8. '	f' → logprob: -13.101515769958496
    9. 'Factors' → logprob: -13.851515769958496
    10. '    ' → logprob: -13.851515769958496

Token 140: ' factors' (ID: 11652)
  Prédit: ' factors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' factors' → logprob: -0.16031897068023682
    2. 'f' → logprob: -1.9103189706802368
    3. '   ' → logprob: -9.660319328308105
    4. '       ' → logprob: -11.535319328308105
    5. ' f' → logprob: -11.535319328308105
    6. ' factores' → logprob: -13.160319328308105
    7. '	f' → logprob: -13.160319328308105
    8. ' facteurs' → logprob: -13.285319328308105
    9. ' ' → logprob: -13.535319328308105
    10. 'factor' → logprob: -13.660319328308105

Token 141: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.011060673743486404
    2. '.' → logprob: -4.51106071472168
    3. ' .' → logprob: -11.88606071472168
    4. '.append' → logprob: -12.63606071472168
    5. '.setdefault' → logprob: -13.51106071472168
    6. '.Add' → logprob: -14.38606071472168
    7. ').' → logprob: -15.13606071472168
    8. '.put' → logprob: -16.13606071472168
    9. 'add' → logprob: -16.26106071472168
    10. '}.' → logprob: -16.76106071472168

Token 142: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -2.7729658540920354e-05
    2. '(' → logprob: -10.500027656555176
    3. ' (' → logprob: -16.125028610229492
    4. '(
' → logprob: -17.625028610229492
    5. 'n' → logprob: -20.125028610229492
    6. '(noun' → logprob: -20.625028610229492
    7. '((' → logprob: -20.750028610229492
    8. '(nn' → logprob: -21.125028610229492
    9. '(int' → logprob: -21.500028610229492
    10. '(nd' → logprob: -21.625028610229492

Token 143: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0006407116306945682
    2. ')
' → logprob: -7.375640869140625
    3. ')return' → logprob: -11.500640869140625
    4. ' )' → logprob: -12.625640869140625
    5. ')

' → logprob: -15.375640869140625
    6. ')
' → logprob: -15.375640869140625
    7. 'return' → logprob: -16.125640869140625
    8. '}' → logprob: -17.125640869140625
    9. ')#' → logprob: -17.750640869140625
    10. '   ' → logprob: -17.875640869140625

Token 144: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.009189510717988014
    2. 'return' → logprob: -4.759189605712891
    3. ' return' → logprob: -7.509189605712891
    4. '	return' → logprob: -11.75918960571289
    5. ':return' → logprob: -11.88418960571289
    6. '
' → logprob: -12.00918960571289
    7. '    
' → logprob: -12.25918960571289
    8. '```' → logprob: -15.50918960571289
    9. '_return' → logprob: -15.88418960571289
    10. ' ' → logprob: -15.88418960571289

Token 145: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.23965665698051453
    2. '   ' → logprob: -2.239656686782837
    3. ' return' → logprob: -2.239656686782837
    4. ':return' → logprob: -9.864656448364258
    5. '	return' → logprob: -10.989656448364258
    6. ' ' → logprob: -10.989656448364258
    7. '  ' → logprob: -11.864656448364258
    8. '    
' → logprob: -12.239656448364258
    9. '_return' → logprob: -12.489656448364258
    10. ')' → logprob: -12.989656448364258

Token 146: ' factors' (ID: 11652)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -0.006720705423504114
    2. ' factors' → logprob: -5.006720542907715
    3. 'factor' → logprob: -13.256720542907715
    4. ' f' → logprob: -13.506720542907715
    5. 'fact' → logprob: -14.256720542907715
    6. 'list' → logprob: -14.631720542907715
    7. '(f' → logprob: -15.131720542907715
    8. '	f' → logprob: -15.381720542907715
    9. 'fac' → logprob: -16.00672149658203
    10. 'fro' → logprob: -16.00672149658203

Token 147: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.044577982276678085
    2. '

' → logprob: -3.6695780754089355
    3. '<|end|>' → logprob: -4.9195780754089355
    4. '\n' → logprob: -5.5445780754089355
    5. 'newline' → logprob: -6.2945780754089355
    6. 'def' → logprob: -6.4195780754089355
    7. '\' → logprob: -7.0445780754089355
    8. '#' → logprob: -7.1695780754089355
    9. '```' → logprob: -7.9195780754089355
    10. '
' → logprob: -8.294577598571777

Token 148: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.674472987651825
    2. '
' → logprob: -0.924472987651825
    3. '#' → logprob: -2.6744730472564697
    4. 'class' → logprob: -4.799472808837891
    5. '

' → logprob: -5.174472808837891
    6. '```' → logprob: -5.549472808837891
    7. '\n' → logprob: -6.174472808837891
    8. '\' → logprob: -6.424472808837891
    9. '  
' → logprob: -6.924472808837891
    10. '
' → logprob: -7.424472808837891

Token 149: ' Recherche' (ID: 114815)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0076093473471701145
    2. 'class' → logprob: -5.3826093673706055
    3. ' def' → logprob: -6.1326093673706055
    4. '#' → logprob: -7.3826093673706055
    5. ' class' → logprob: -9.257609367370605
    6. 'if' → logprob: -10.382609367370605
    7. 'import' → logprob: -11.257609367370605
    8. 'thread' → logprob: -11.507609367370605
    9. 'lock' → logprob: -11.882609367370605
    10. 'input' → logprob: -12.007609367370605

Token 150: ' augment' (ID: 44474)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.08861223608255386
    2. '_' → logprob: -4.213612079620361
    3. 'des' → logprob: -4.213612079620361
    4. ' def' → logprob: -4.338612079620361
    5. '_des' → logprob: -4.338612079620361
    6. '_de' → logprob: -5.213612079620361
    7. ' des' → logprob: -5.588612079620361
    8. ' de' → logprob: -5.963612079620361
    9. 'de' → logprob: -6.088612079620361
    10. '_mult' → logprob: -6.213612079620361

Token 151: 'ante' (ID: 2116)
  Prédit: 'ée'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ée' → logprob: -0.14223173260688782
    2. 'ee' → logprob: -2.3922317028045654
    3. 'ed' → logprob: -3.7672317028045654
    4. 'é' → logprob: -4.2672319412231445
    5. 'e' → logprob: -6.0172319412231445
    6. 'er' → logprob: -7.3922319412231445
    7. '_' → logprob: -7.8922319412231445
    8. '#' → logprob: -8.767231941223145
    9. 'ation' → logprob: -9.267231941223145
    10. 'ing' → logprob: -9.392231941223145

Token 152: ' pour' (ID: 1930)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.05792563408613205
    2. '_' → logprob: -3.5579257011413574
    3. '(' → logprob: -4.307925701141357
    4. ' def' → logprob: -4.807925701141357
    5. '_matching' → logprob: -6.057925701141357
    6. '_match' → logprob: -7.307925701141357
    7. ' (' → logprob: -7.682925701141357
    8. '_path' → logprob: -7.932925701141357
    9. 's' → logprob: -8.4329252243042
    10. ' ' → logprob: -8.5579252243042

Token 153: ' trouver' (ID: 23195)
  Prédit: ' le'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' le' → logprob: -1.1022858619689941
    2. 'def' → logprob: -1.3522858619689941
    3. 'b' → logprob: -1.9772858619689941
    4. ' un' → logprob: -2.727285861968994
    5. ' la' → logprob: -3.227285861968994
    6. ' bip' → logprob: -3.227285861968994
    7. ' max' → logprob: -3.852285861968994
    8. 'max' → logprob: -3.852285861968994
    9. ' l' → logprob: -4.727285861968994
    10. 'le' → logprob: -4.977285861968994

Token 154: ' un' (ID: 537)
  Prédit: ' un'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.028096849098801613
    2. ' le' → logprob: -4.153096675872803
    3. 'le' → logprob: -5.903096675872803
    4. 'un' → logprob: -5.903096675872803
    5. ' matching' → logprob: -6.028096675872803
    6. ' une' → logprob: -6.778096675872803
    7. ' match' → logprob: -6.903096675872803
    8. ' l' → logprob: -7.778096675872803
    9. 'une' → logprob: -8.278097152709961
    10. 'l' → logprob: -8.778097152709961

Token 155: ' cou' (ID: 3840)
  Prédit: ' matching'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' matching' → logprob: -0.9019579887390137
    2. ' chemin' → logprob: -1.6519579887390137
    3. 'matching' → logprob: -2.0269579887390137
    4. '_matching' → logprob: -3.1519579887390137
    5. ' flow' → logprob: -3.5269579887390137
    6. 's' → logprob: -3.6519579887390137
    7. ' match' → logprob: -3.6519579887390137
    8. 'che' → logprob: -3.6519579887390137
    9. 'match' → logprob: -4.026957988739014
    10. 'e' → logprob: -4.026957988739014

Token 156: 'pl' (ID: 528)
  Prédit: 'rant'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rant' → logprob: -0.5186246037483215
    2. 'rt' → logprob: -1.5186245441436768
    3. 'nt' → logprob: -2.3936245441436768
    4. 'r' → logprob: -3.3936245441436768
    5. 'pl' → logprob: -3.7686245441436768
    6. 'plant' → logprob: -4.768624782562256
    7. 'rent' → logprob: -5.018624782562256
    8. 'p' → logprob: -5.643624782562256
    9. '#' → logprob: -5.643624782562256
    10. 'ple' → logprob: -5.768624782562256

Token 157: 'age' (ID: 477)
  Prédit: 'e'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'e' → logprob: -0.0002887490263674408
    2. 'é' → logprob: -8.750288963317871
    3. 'age' → logprob: -9.000288963317871
    4. 'е' → logprob: -12.750288963317871
    5. 'ing' → logprob: -13.250288963317871
    6. 'le' → logprob: -15.125288963317871
    7. 'es' → logprob: -15.250288963317871
    8. '_e' → logprob: -15.250288963317871
    9. '```' → logprob: -15.750288963317871
    10. 'o' → logprob: -15.875288963317871

Token 158: ' maximum' (ID: 10562)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.028724513947963715
    2. 'b' → logprob: -4.653724670410156
    3. 'B' → logprob: -5.278724670410156
    4. ' bip' → logprob: -5.778724670410156
    5. '_b' → logprob: -6.528724670410156
    6. '(graph' → logprob: -6.653724670410156
    7. ' (' → logprob: -6.653724670410156
    8. '(G' → logprob: -7.153724670410156
    9. '(M' → logprob: -7.653724670410156
    10. '(' → logprob: -8.028724670410156

Token 159: ' dans' (ID: 2671)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.000692420348059386
    2. '(' → logprob: -7.500692367553711
    3. '(
' → logprob: -9.375692367553711
    4. ' def' → logprob: -10.750692367553711
    5. '(def' → logprob: -11.750692367553711
    6. ':' → logprob: -12.375692367553711
    7. '(graph' → logprob: -12.750692367553711
    8. 'd' → logprob: -13.000692367553711
    9. 'de' → logprob: -13.125692367553711
    10. '(n' → logprob: -13.125692367553711

Token 160: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.032246459275484085
    2. ' un' → logprob: -3.6572463512420654
    3. 'le' → logprob: -5.9072465896606445
    4. 'b' → logprob: -6.5322465896606445
    5. 'une' → logprob: -7.4072465896606445
    6. '```' → logprob: -7.7822465896606445
    7. ''un' → logprob: -8.032246589660645
    8. 'graph' → logprob: -9.282246589660645
    9. ' le' → logprob: -10.157246589660645
    10. '#' → logprob: -10.407246589660645

Token 161: ' grap' (ID: 60955)
  Prédit: ' bip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bip' → logprob: -0.028947345912456512
    2. 'b' → logprob: -3.778947353363037
    3. ' graph' → logprob: -5.778947353363037
    4. 'graph' → logprob: -6.403947353363037
    5. ' grap' → logprob: -7.403947353363037
    6. '```' → logprob: -8.653946876525879
    7. ' b' → logprob: -10.403946876525879
    8. ' ' → logprob: -10.841446876525879
    9. 'gr' → logprob: -11.028946876525879
    10. '   ' → logprob: -11.403946876525879

Token 162: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.0035240522120147943
    2. 'h' → logprob: -5.753523826599121
    3. 'aphe' → logprob: -8.378523826599121
    4. 'heme' → logprob: -10.003523826599121
    5. 'phe' → logprob: -10.753523826599121
    6. 'e' → logprob: -12.378523826599121
    7. '```' → logprob: -12.378523826599121
    8. 'hé' → logprob: -12.628523826599121
    9. 'hep' → logprob: -12.878523826599121
    10. '#' → logprob: -12.878523826599121

Token 163: ' bip' (ID: 54467)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.007592791225761175
    2. ' bip' → logprob: -6.007592678070068
    3. 'b' → logprob: -6.132592678070068
    4. 'B' → logprob: -6.882592678070068
    5. 'class' → logprob: -6.882592678070068
    6. ' def' → logprob: -8.757593154907227
    7. ' (' → logprob: -9.007593154907227
    8. '(G' → logprob: -9.257593154907227
    9. '(graph' → logprob: -9.382593154907227
    10. '(' → logprob: -9.507593154907227

Token 164: 'art' (ID: 497)
  Prédit: 'art'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.07985307276248932
    2. 'arti' → logprob: -2.579853057861328
    3. 'ar' → logprob: -7.579853057861328
    4. 'arte' → logprob: -8.829853057861328
    5. 'arten' → logprob: -9.954853057861328
    6. 'арт' → logprob: -10.204853057861328
    7. 'part' → logprob: -10.204853057861328
    8. 'rt' → logprob: -10.579853057861328
    9. 'def' → logprob: -10.954853057861328
    10. 'artner' → logprob: -11.079853057861328

Token 165: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.0013736842665821314
    2. 'art' → logprob: -7.876373767852783
    3. 'it' → logprob: -8.001373291015625
    4. 'ie' → logprob: -8.626373291015625
    5. 'ité' → logprob: -9.126373291015625
    6. 'é' → logprob: -9.251373291015625
    7. '```' → logprob: -9.501373291015625
    8. '#' → logprob: -10.626373291015625
    9. 'e' → logprob: -10.751373291015625
    10. 'te' → logprob: -11.126373291015625

Token 166: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.005171616096049547
    2. 'class' → logprob: -6.130171775817871
    3. '(G' → logprob: -6.755171775817871
    4. '(graph' → logprob: -7.630171775817871
    5. '(' → logprob: -7.880171775817871
    6. 'G' → logprob: -8.005171775817871
    7. '(
' → logprob: -8.255171775817871
    8. ':' → logprob: -9.130171775817871
    9. '(g' → logprob: -10.005171775817871
    10. '(def' → logprob: -10.380171775817871

Token 167: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.0010893779108300805
    2. 'class' → logprob: -6.876089572906494
    3. ' def' → logprob: -9.876089096069336
    4. 'de' → logprob: -13.251089096069336
    5. '
' → logprob: -13.626089096069336
    6. ' class' → logprob: -14.376089096069336
    7. 'graph' → logprob: -15.001089096069336
    8. ':' → logprob: -15.251089096069336
    9. 'from' → logprob: -15.251089096069336
    10. '```' → logprob: -15.501089096069336

Token 168: ' try' (ID: 2075)
  Prédit: ' bpm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' bpm' → logprob: -0.271506130695343
    2. ' max' → logprob: -2.6465060710906982
    3. ' hop' → logprob: -3.6465060710906982
    4. ' maximum' → logprob: -3.6465060710906982
    5. ' bip' → logprob: -3.6465060710906982
    6. 'b' → logprob: -3.7715060710906982
    7. 'hop' → logprob: -3.8965060710906982
    8. 'max' → logprob: -4.271506309509277
    9. ' dfs' → logprob: -4.521506309509277
    10. ' augment' → logprob: -5.021506309509277

Token 169: '_match' (ID: 26039)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4225149154663086
    2. '_to' → logprob: -1.4225149154663086
    3. '_match' → logprob: -2.2975149154663086
    4. '_matching' → logprob: -8.047514915466309
    5. '_:' → logprob: -8.172514915466309
    6. '_b' → logprob: -8.547514915466309
    7. '_connect' → logprob: -8.672514915466309
    8. '_get' → logprob: -8.672514915466309
    9. 'ing' → logprob: -9.172514915466309
    10. '_u' → logprob: -9.172514915466309

Token 170: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -0.0020912576001137495
    2. '(graph' → logprob: -6.502091407775879
    3. '(' → logprob: -8.502091407775879
    4. '(node' → logprob: -8.627091407775879
    5. '(g' → logprob: -8.752091407775879
    6. ' (' → logprob: -11.377091407775879
    7. '(b' → logprob: -11.752091407775879
    8. '(m' → logprob: -12.127091407775879
    9. '(match' → logprob: -12.252091407775879
    10. '(user' → logprob: -12.252091407775879

Token 171: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011713240382960066
    2. ' ,' → logprob: -9.750117301940918
    3. ',u' → logprob: -10.125117301940918
    4. '):' → logprob: -11.875117301940918
    5. ',b' → logprob: -12.125117301940918
    6. ',m' → logprob: -13.125117301940918
    7. '   ' → logprob: -13.875117301940918
    8. ',p' → logprob: -14.375117301940918
    9. 'u' → logprob: -14.875117301940918
    10. ',
' → logprob: -15.000117301940918

Token 172: ' adj' (ID: 20251)
  Prédit: 'graph'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'graph' → logprob: -0.7396538257598877
    2. 'match' → logprob: -0.7396538257598877
    3. 'visited' → logprob: -4.364653587341309
    4. 'pair' → logprob: -4.364653587341309
    5. 'matches' → logprob: -4.489653587341309
    6. ' graph' → logprob: -6.114653587341309
    7. 'matched' → logprob: -6.239653587341309
    8. 'adj' → logprob: -6.364653587341309
    9. 'matching' → logprob: -6.364653587341309
    10. ' match' → logprob: -7.489653587341309

Token 173: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0069255344569683075
    2. 'acency' → logprob: -5.131925582885742
    3. 'acent' → logprob: -7.756925582885742
    4. '):' → logprob: -7.881925582885742
    5. ' ,' → logprob: -9.631925582885742
    6. ',u' → logprob: -9.756925582885742
    7. 'u' → logprob: -11.006925582885742
    8. '[u' → logprob: -11.006925582885742
    9. '):
' → logprob: -11.881925582885742
    10. '_list' → logprob: -12.006925582885742

Token 174: ' visited' (ID: 18416)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.012291006743907928
    2. 'visited' → logprob: -5.012290954589844
    3. 'matched' → logprob: -5.637290954589844
    4. ' match' → logprob: -6.512290954589844
    5. 'matching' → logprob: -8.137290954589844
    6. 'pair' → logprob: -9.512290954589844
    7. 'matches' → logprob: -9.762290954589844
    8. ' visited' → logprob: -10.262290954589844
    9. ' matched' → logprob: -10.637290954589844
    10. 'used' → logprob: -11.637290954589844

Token 175: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001847962848842144
    2. '):' → logprob: -6.626847743988037
    3. ' ,' → logprob: -7.626847743988037
    4. ' ):' → logprob: -11.876848220825195
    5. '):
' → logprob: -11.876848220825195
    6. ')' → logprob: -12.001848220825195
    7. ',u' → logprob: -12.001848220825195
    8. '),' → logprob: -13.751848220825195
    9. '_,' → logprob: -14.251848220825195
    10. '   ' → logprob: -14.251848220825195

Token 176: ' match' (ID: 3981)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.0009998210007324815
    2. ' match' → logprob: -7.125999927520752
    3. 'matching' → logprob: -9.125999450683594
    4. 'matches' → logprob: -10.250999450683594
    5. 'pair' → logprob: -10.625999450683594
    6. 'matched' → logprob: -10.625999450683594
    7. 'mate' → logprob: -14.250999450683594
    8. '   ' → logprob: -14.500999450683594
    9. 'matcher' → logprob: -14.500999450683594
    10. ' matching' → logprob: -14.500999450683594

Token 177: 'R' (ID: 49)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03784213215112686
    2. '):
' → logprob: -3.412842035293579
    3. ')' → logprob: -6.412842273712158
    4. ',' → logprob: -6.912842273712158
    5. '):
' → logprob: -7.537842273712158
    6. 'u' → logprob: -7.787842273712158
    7. '[u' → logprob: -8.912841796875
    8. 's' → logprob: -9.287841796875
    9. '_u' → logprob: -9.662841796875
    10. ')):' → logprob: -9.787841796875

Token 178: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.04488586261868477
    2. ',' → logprob: -3.7948858737945557
    3. '):
' → logprob: -3.9198858737945557
    4. ')' → logprob: -7.044885635375977
    5. '):
' → logprob: -8.044885635375977
    6. ' ):' → logprob: -8.669885635375977
    7. ',u' → logprob: -10.169885635375977
    8. '[u' → logprob: -10.294885635375977
    9. 'u' → logprob: -10.419885635375977
    10. '):

' → logprob: -10.919885635375977

Token 179: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10765764862298965
    2. ':' → logprob: -2.4826576709747314
    3. '):' → logprob: -4.357657432556152
    4. ' for' → logprob: -6.107657432556152
    5. '):
' → logprob: -6.607657432556152
    6. ':
' → logprob: -7.357657432556152
    7. 'for' → logprob: -7.482657432556152
    8. ')' → logprob: -7.607657432556152
    9. '```' → logprob: -8.732657432556152
    10. 'visited' → logprob: -9.857657432556152

Token 180: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.4297030568122864
    2. 'for' (adapté à ' for') → logprob: -1.1797029972076416
    3. '   ' → logprob: -3.1797029972076416
    4. '	for' → logprob: -8.304702758789062
    5. 'if' → logprob: -10.054702758789062
    6. ' if' → logprob: -10.679702758789062
    7. 'visited' → logprob: -11.679702758789062
    8. ' visited' → logprob: -13.054702758789062
    9. '    
' → logprob: -13.804702758789062
    10. '  ' → logprob: -13.804702758789062

Token 181: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0010332842357456684
    2. ' v' → logprob: -6.876033306121826
    3. ' ' → logprob: -15.251032829284668
    4. '	v' → logprob: -16.126033782958984
    5. '

' → logprob: -16.876033782958984
    6. '
' → logprob: -17.251033782958984
    7. 'w' → logprob: -17.876033782958984
    8. '   ' → logprob: -17.876033782958984
    9. '  ' → logprob: -18.001033782958984
    10. '(v' → logprob: -18.626033782958984

Token 182: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20152170956134796
    2. 'in' → logprob: -1.7015217542648315
    3. ' ' → logprob: -10.076521873474121
    4. '	in' → logprob: -10.451521873474121
    5. ')' → logprob: -11.826521873474121
    6. ',' → logprob: -12.201521873474121
    7. '   ' → logprob: -12.201521873474121
    8. 'import' → logprob: -12.701521873474121
    9. '  ' → logprob: -13.076521873474121
    10. 'n' → logprob: -13.076521873474121

Token 183: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.008615399710834026
    2. ' adj' → logprob: -4.758615493774414
    3. 'range' → logprob: -14.508615493774414
    4. '(adj' → logprob: -15.508615493774414
    5. ' range' → logprob: -16.883615493774414
    6. 'ad' → logprob: -17.383615493774414
    7. '   ' → logprob: -18.758615493774414
    8. ' ' → logprob: -19.508615493774414
    9. '_adj' → logprob: -20.383615493774414
    10. 'Adj' → logprob: -20.383615493774414

Token 184: '[u' (ID: 48750)
  Prédit: '[u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -6.511406809295295e-06
    2. 'u' → logprob: -12.125006675720215
    3. '[' → logprob: -14.500006675720215
    4. '(u' → logprob: -16.0000057220459
    5. ' [' → logprob: -16.1250057220459
    6. '   ' → logprob: -16.3750057220459
    7. ')' → logprob: -16.7500057220459
    8. ']' → logprob: -17.5000057220459
    9. '```' → logprob: -17.7500057220459
    10. ' u' → logprob: -18.0000057220459

Token 185: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.00027182576013728976
    2. ']:
' → logprob: -8.875271797180176
    3. ']' → logprob: -9.125271797180176
    4. ']:
' → logprob: -11.625271797180176
    5. ' ]' → logprob: -11.750271797180176
    6. '):' → logprob: -13.375271797180176
    7. ']):' → logprob: -13.750271797180176
    8. ':' → logprob: -13.750271797180176
    9. ']:

' → logprob: -14.500271797180176
    10. '"]:' → logprob: -14.750271797180176

Token 186: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.027034342288970947
    2. ' if' → logprob: -3.652034282684326
    3. '<|end|>' → logprob: -7.902034282684326
    4. 'if' → logprob: -8.527034759521484
    5. ':' → logprob: -10.277034759521484
    6. ':
' → logprob: -10.527034759521484
    7. ',' → logprob: -11.277034759521484
    8. '        
' → logprob: -11.277034759521484
    9. '	if' → logprob: -11.652034759521484
    10. '   ' → logprob: -11.777034759521484

Token 187: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.10059752315282822
    2. 'if' (adapté à ' if') → logprob: -2.350597620010376
    3. '       ' → logprob: -7.975597381591797
    4. ' not' → logprob: -10.225597381591797
    5. 'not' → logprob: -12.225597381591797
    6. '   ' → logprob: -12.850597381591797
    7. '	if' → logprob: -13.350597381591797
    8. '           ' → logprob: -14.100597381591797
    9. '```' → logprob: -15.100597381591797
    10. '
' → logprob: -15.350597381591797

Token 188: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.6438758373260498
    2. ' not' → logprob: -0.7688758373260498
    3. 'v' → logprob: -4.643876075744629
    4. ' v' → logprob: -6.768876075744629
    5. 'visited' → logprob: -8.018876075744629
    6. '	not' → logprob: -9.768876075744629
    7. '   ' → logprob: -10.768876075744629
    8. ' visited' → logprob: -10.893876075744629
    9. '(not' → logprob: -11.768876075744629
    10. ' ' → logprob: -12.518876075744629

Token 189: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.01815076172351837
    2. 'visited' → logprob: -4.018150806427002
    3. ' v' → logprob: -14.643150329589844
    4. 'v' → logprob: -15.143150329589844
    5. 'Visited' → logprob: -15.518150329589844
    6. ' visit' → logprob: -17.393150329589844
    7. 'vis' → logprob: -19.018150329589844
    8. 'visit' → logprob: -19.268150329589844
    9. '(v' → logprob: -19.518150329589844
    10. ' visite' → logprob: -19.768150329589844

Token 190: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -5.512236498361744e-07
    2. ' [' → logprob: -15.125000953674316
    3. '[' → logprob: -15.250000953674316
    4. 'v' → logprob: -16.75
    5. '[u' → logprob: -17.0
    6. '][' → logprob: -18.5
    7. '[V' → logprob: -19.125
    8. ' v' → logprob: -19.25
    9. '	v' → logprob: -19.625
    10. '
' → logprob: -19.625

Token 191: ']:
' (ID: 22152)
  Prédit: ']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']:' → logprob: -0.6936047673225403
    2. ']:
' → logprob: -0.6936047673225403
    3. ']' → logprob: -8.318604469299316
    4. ']:
' → logprob: -8.943604469299316
    5. ' ]' → logprob: -9.818604469299316
    6. ']:

' → logprob: -11.068604469299316
    7. ':' → logprob: -12.068604469299316
    8. ':
' → logprob: -12.568604469299316
    9. '[' → logprob: -13.818604469299316
    10. ']:


' → logprob: -13.943604469299316

Token 192: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3224742114543915
    2. ':
' → logprob: -1.8224742412567139
    3. ':' → logprob: -2.322474241256714
    4. '       ' → logprob: -5.322474002838135
    5. '<|end|>' → logprob: -5.447474002838135
    6. ' :
' → logprob: -5.822474002838135
    7. '<|end|>' → logprob: -7.197474002838135
    8. '               ' → logprob: -7.197474002838135
    9. ' :' → logprob: -7.572474002838135
    10. '():
' → logprob: -8.197474479675293

Token 193: ' visited' (ID: 18416)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.053071070462465286
    2. ' visited' → logprob: -3.6780710220336914
    3. '           ' → logprob: -4.178071022033691
    4. 'visited' (adapté à ' visited') → logprob: -4.678071022033691
    5. '
' → logprob: -7.803071022033691
    6. ' 
' → logprob: -7.928071022033691
    7. '```' → logprob: -8.178071022033691
    8. '                
' → logprob: -8.178071022033691
    9. '   ' → logprob: -9.803071022033691
    10. ' ' → logprob: -10.178071022033691

Token 194: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -1.8624639324116288e-06
    2. '[' → logprob: -13.250001907348633
    3. 'v' → logprob: -16.750001907348633
    4. '[u' → logprob: -17.000001907348633
    5. ' [' → logprob: -17.625001907348633
    6. '```' → logprob: -17.875001907348633
    7. '[V' → logprob: -18.000001907348633
    8. '][' → logprob: -18.125001907348633
    9. ']' → logprob: -18.250001907348633
    10. '	v' → logprob: -18.375001907348633

Token 195: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.00039944887976162136
    2. ']=' → logprob: -8.000399589538574
    3. '[v' → logprob: -10.000399589538574
    4. ' ]' → logprob: -11.625399589538574
    5. '=' → logprob: -12.125399589538574
    6. ' =' → logprob: -13.500399589538574
    7. 'v' → logprob: -13.625399589538574
    8. '[' → logprob: -14.625399589538574
    9. '=True' → logprob: -15.500399589538574
    10. '']' → logprob: -15.500399589538574

Token 196: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197451800107956
    2. ' =' → logprob: -2.81197452545166
    3. '=True' → logprob: -12.43697452545166
    4. ']' → logprob: -13.06197452545166
    5. ']=' → logprob: -14.43697452545166
    6. '[' → logprob: -15.93697452545166
    7. ' ' → logprob: -17.561973571777344
    8. '[v' → logprob: -18.061973571777344
    9. '=v' → logprob: -18.186973571777344
    10. '.=' → logprob: -18.311973571777344

Token 197: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.00861456897109747
    2. ' True' → logprob: -4.758614540100098
    3. '1' → logprob: -18.383615493774414
    4. '(True' → logprob: -20.258615493774414
    5. '=True' → logprob: -21.758615493774414
    6. 'true' → logprob: -21.883615493774414
    7. '   ' → logprob: -23.133615493774414
    8. ' ' → logprob: -23.508615493774414
    9. '.True' → logprob: -25.258615493774414
    10. 'TRUE' → logprob: -25.633615493774414

Token 198: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07401417940855026
    2. '
' → logprob: -2.824014186859131
    3. '       ' → logprob: -5.699014186859131
    4. '               ' → logprob: -5.824014186859131
    5. '<|end|>' → logprob: -6.199014186859131
    6. ',' → logprob: -6.699014186859131
    7. ':
' → logprob: -7.699014186859131
    8. ')' → logprob: -7.699014186859131
    9. '            
' → logprob: -7.824014186859131
    10. '   ' → logprob: -8.699013710021973

Token 199: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10864847898483276
    2. '       ' → logprob: -2.8586485385894775
    3. '
' → logprob: -3.3586485385894775
    4. ' if' → logprob: -5.108648300170898
    5. '<|end|>' → logprob: -6.858648300170898
    6. '               ' → logprob: -6.983648300170898
    7. '   ' → logprob: -7.108648300170898
    8. 'if' → logprob: -7.233648300170898
    9. ',' → logprob: -7.733648300170898
    10. ')' → logprob: -8.233648300170898

Token 200: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.008909170515835285
    2. ' if' → logprob: -4.758909225463867
    3. '           ' → logprob: -8.133909225463867
    4. '               ' → logprob: -13.883909225463867
    5. '            
' → logprob: -15.758909225463867
    6. '
' → logprob: -15.883909225463867
    7. '   ' → logprob: -17.133909225463867
    8. '	if' → logprob: -17.883909225463867
    9. 'match' → logprob: -18.258909225463867
    10. '       ' → logprob: -18.383909225463867

Token 201: ' match' (ID: 3981)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.029758360236883163
    2. ' match' → logprob: -3.5297584533691406
    3. '(match' → logprob: -12.40475845336914
    4. '	match' → logprob: -13.27975845336914
    5. '   ' → logprob: -13.77975845336914
    6. 'v' → logprob: -14.90475845336914
    7. ' v' → logprob: -15.15475845336914
    8. ' ' → logprob: -15.65475845336914
    9. '           ' → logprob: -16.27975845336914
    10. '  ' → logprob: -17.27975845336914

Token 202: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -5.9153885558771435e-06
    2. '[v' → logprob: -12.500005722045898
    3. '(v' → logprob: -13.375005722045898
    4. 'v' → logprob: -15.250005722045898
    5. '[' → logprob: -16.6250057220459
    6. ' R' → logprob: -17.0000057220459
    7. '[u' → logprob: -17.3750057220459
    8. '[R' → logprob: -17.3750057220459
    9. '(R' → logprob: -17.8750057220459
    10. 'u' → logprob: -19.0000057220459

Token 203: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: 0.0
    2. 'v' → logprob: -17.375
    3. '[' → logprob: -18.25
    4. ' [' → logprob: -20.5
    5. '[u' → logprob: -20.875
    6. '[V' → logprob: -20.875
    7. '[
' → logprob: -21.375
    8. '(v' → logprob: -21.5
    9. '<v' → logprob: -21.75
    10. '[j' → logprob: -22.0

Token 204: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14652575552463531
    2. ']==' → logprob: -2.8965258598327637
    3. '==-' → logprob: -3.0215258598327637
    4. '==' → logprob: -4.146525859832764
    5. '[' → logprob: -4.521525859832764
    6. '[u' → logprob: -6.146525859832764
    7. ')' → logprob: -6.271525859832764
    8. ' ==' → logprob: -7.646525859832764
    9. ' is' → logprob: -7.771525859832764
    10. 'is' → logprob: -8.771525382995605

Token 205: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.7604084014892578
    2. ' ==' → logprob: -1.1354084014892578
    3. '==-' → logprob: -1.6354084014892578
    4. ' is' → logprob: -4.135408401489258
    5. '[' → logprob: -8.635408401489258
    6. 'is' → logprob: -9.135408401489258
    7. '[-' → logprob: -10.635408401489258
    8. '===' → logprob: -10.885408401489258
    9. '<' → logprob: -11.135408401489258
    10. '=' → logprob: -12.135408401489258

Token 206: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -4.56102097814437e-05
    2. ' -' → logprob: -10.000045776367188
    3. 'None' → logprob: -16.375045776367188
    4. '   ' → logprob: -16.625045776367188
    5. ' ' → logprob: -20.250045776367188
    6. ' None' → logprob: -20.500045776367188
    7. '  ' → logprob: -21.250045776367188
    8. '	' → logprob: -22.625045776367188
    9. '−' → logprob: -23.125045776367188
    10. '\-' → logprob: -23.250045776367188

Token 207: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '-' → logprob: -19.0
    4. '１' → logprob: -20.0
    5. '   ' → logprob: -20.25
    6. '```' → logprob: -20.25
    7. ' -' → logprob: -20.5
    8. '4' → logprob: -21.3125
    9. '2' → logprob: -21.4375
    10. '  ' → logprob: -21.5

Token 208: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.0004341261519584805
    2. 'or' → logprob: -7.750433921813965
    3. ' ' → logprob: -13.375433921813965
    4. '	or' → logprob: -14.250433921813965
    5. ')' → logprob: -15.000433921813965
    6. '            ' → logprob: -15.500433921813965
    7. '    ' → logprob: -15.625433921813965
    8. '           ' → logprob: -16.25043487548828
    9. '               ' → logprob: -16.37543487548828
    10. '        ' → logprob: -16.50043487548828

Token 209: ' try' (ID: 2075)
  Prédit: ' try'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' try' → logprob: -0.5759667158126831
    2. 'try' → logprob: -0.8259667158126831
    3. '               ' → logprob: -10.825966835021973
    4. '           ' → logprob: -12.575966835021973
    5. '   ' → logprob: -13.575966835021973
    6. '            ' → logprob: -13.950966835021973
    7. '              ' → logprob: -14.575966835021973
    8. '             ' → logprob: -14.825966835021973
    9. '	try' → logprob: -15.450966835021973
    10. '.try' → logprob: -15.450966835021973

Token 210: '_match' (ID: 26039)
  Prédit: '_match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -1.0087516784551553e-05
    2. 'match' → logprob: -11.75001049041748
    3. '(u' → logprob: -13.87501049041748
    4. '_' → logprob: -15.25001049041748
    5. ' match' → logprob: -15.25001049041748
    6. 'u' → logprob: -15.50001049041748
    7. '_matching' → logprob: -16.375009536743164
    8. '_MATCH' → logprob: -16.625009536743164
    9. '_try' → logprob: -16.750009536743164
    10. '(v' → logprob: -16.875009536743164

Token 211: '(match' (ID: 61646)
  Prédit: '(match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(match' → logprob: -1.8550976164988242e-05
    2. '(' → logprob: -11.000018119812012
    3. '(
' → logprob: -14.125018119812012
    4. 'match' → logprob: -14.250018119812012
    5. ' (' → logprob: -15.625018119812012
    6. '(mat' → logprob: -16.125019073486328
    7. '(matches' → logprob: -17.000019073486328
    8. ' match' → logprob: -17.500019073486328
    9. '((' → logprob: -18.250019073486328
    10. '(m' → logprob: -18.375019073486328

Token 212: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -2.6656825866666622e-05
    2. 'match' → logprob: -11.62502670288086
    3. '(match' → logprob: -11.62502670288086
    4. '(u' → logprob: -12.37502670288086
    5. '[u' → logprob: -13.25002670288086
    6. '(v' → logprob: -13.75002670288086
    7. '   ' → logprob: -14.87502670288086
    8. '[v' → logprob: -15.12502670288086
    9. '[' → logprob: -15.62502670288086
    10. ' R' → logprob: -15.87502670288086

Token 213: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -0.0002671768015716225
    2. 'v' → logprob: -8.375267028808594
    3. '(v' → logprob: -10.750267028808594
    4. '[u' → logprob: -11.375267028808594
    5. '[' → logprob: -13.125267028808594
    6. ')v' → logprob: -15.000267028808594
    7. ',v' → logprob: -15.375267028808594
    8. '	v' → logprob: -15.625267028808594
    9. '[
' → logprob: -15.750267028808594
    10. ' v' → logprob: -16.000267028808594

Token 214: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00021641071361955255
    2. ' ,' → logprob: -9.000216484069824
    3. '],' → logprob: -10.250216484069824
    4. ',u' → logprob: -10.375216484069824
    5. '),' → logprob: -11.500216484069824
    6. 'u' → logprob: -12.250216484069824
    7. ',v' → logprob: -13.000216484069824
    8. '           ' → logprob: -13.125216484069824
    9. '   ' → logprob: -14.000216484069824
    10. ',
' → logprob: -14.000216484069824

Token 215: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0380435548722744
    2. ' adj' → logprob: -3.28804349899292
    3. '   ' → logprob: -14.038043975830078
    4. '(adj' → logprob: -14.413043975830078
    5. '    ' → logprob: -14.788043975830078
    6. 'ad' → logprob: -15.663043975830078
    7. ' ' → logprob: -16.663043975830078
    8. '           ' → logprob: -16.663043975830078
    9. '_adj' → logprob: -16.788043975830078
    10. 'Adj' → logprob: -16.913043975830078

Token 216: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.810037742368877e-05
    2. ' ,' → logprob: -10.250038146972656
    3. ',v' → logprob: -14.000038146972656
    4. '),' → logprob: -14.250038146972656
    5. '   ' → logprob: -15.375038146972656
    6. ',
' → logprob: -15.500038146972656
    7. '[v' → logprob: -15.625038146972656
    8. '           ' → logprob: -15.625038146972656
    9. '],' → logprob: -16.250038146972656
    10. '[' → logprob: -16.500038146972656

Token 217: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -3.547789674485102e-05
    2. ' visited' → logprob: -10.250035285949707
    3. '   ' → logprob: -16.375036239624023
    4. '           ' → logprob: -18.375036239624023
    5. '       ' → logprob: -19.250036239624023
    6. '	' → logprob: -19.500036239624023
    7. '    ' → logprob: -20.000036239624023
    8. '               ' → logprob: -20.000036239624023
    9. ' ' → logprob: -20.000036239624023
    10. '
' → logprob: -20.125036239624023

Token 218: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.65101717156358e-05
    2. ' ,' → logprob: -9.375096321105957
    3. 'match' → logprob: -12.500096321105957
    4. ')' → logprob: -13.000096321105957
    5. ' match' → logprob: -13.125096321105957
    6. ',v' → logprob: -13.750096321105957
    7. ',
' → logprob: -14.250096321105957
    8. '(match' → logprob: -14.375096321105957
    9. '):
' → logprob: -14.625096321105957
    10. '   ' → logprob: -15.750096321105957

Token 219: ' match' (ID: 3981)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.002476135268807411
    2. ' match' → logprob: -6.002476215362549
    3. '   ' → logprob: -15.12747573852539
    4. ' ' → logprob: -16.25247573852539
    5. '	match' → logprob: -17.12747573852539
    6. '(match' → logprob: -18.12747573852539
    7. '    ' → logprob: -18.37747573852539
    8. '           ' → logprob: -18.62747573852539
    9. '  ' → logprob: -18.75247573852539
    10. '
' → logprob: -19.00247573852539

Token 220: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -7.896309739408025e-07
    2. ' R' → logprob: -15.750000953674316
    3. 'match' → logprob: -15.875000953674316
    4. ')' → logprob: -16.0
    5. '_R' → logprob: -16.125
    6. '   ' → logprob: -16.25
    7. '           ' → logprob: -16.5
    8. '_match' → logprob: -17.0
    9. '       ' → logprob: -18.25
    10. '  ' → logprob: -18.5625

Token 221: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.07084783166646957
    2. '):
' → logprob: -3.320847749710083
    3. ')' → logprob: -3.445847749710083
    4. ' ):' → logprob: -8.445847511291504
    5. '):
' → logprob: -9.070847511291504
    6. '):

' → logprob: -9.945847511291504
    7. '   ' → logprob: -12.195847511291504
    8. ' ):
' → logprob: -12.570847511291504
    9. ' )' → logprob: -12.945847511291504
    10. ')):' → logprob: -13.195847511291504

Token 222: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.010584954172372818
    2. ':' → logprob: -4.760584831237793
    3. ':
' → logprob: -6.885584831237793
    4. '):
' → logprob: -8.635584831237793
    5. '):' → logprob: -8.760584831237793
    6. ' :' → logprob: -8.885584831237793
    7. '           ' → logprob: -8.885584831237793
    8. ')' → logprob: -8.885584831237793
    9. ' :
' → logprob: -9.760584831237793
    10. ':return' → logprob: -10.385584831237793

Token 223: ' match' (ID: 3981)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'match' (adapté à ' match') → logprob: -0.0019360085716471076
    2. ' match' → logprob: -6.251935958862305
    3. '               ' → logprob: -11.876935958862305
    4. '	match' → logprob: -15.751935958862305
    5. '                   ' → logprob: -16.001935958862305
    6. '           ' → logprob: -16.126935958862305
    7. '   ' → logprob: -16.876935958862305
    8. ' ' → logprob: -17.251935958862305
    9. '
' → logprob: -18.001935958862305
    10. '(match' → logprob: -19.251935958862305

Token 224: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: 0.0
    2. '           ' → logprob: -18.625
    3. ' R' → logprob: -19.0
    4. '                   ' → logprob: -19.875
    5. '               ' → logprob: -20.125
    6. 'ing' → logprob: -20.375
    7. '   ' → logprob: -20.5
    8. '_R' → logprob: -21.0
    9. 'ings' → logprob: -21.25
    10. '

' → logprob: -21.25

Token 225: '[v' (ID: 36561)
  Prédit: '[v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[v' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.875000953674316
    3. 'v' → logprob: -15.375000953674316
    4. '[u' → logprob: -17.5
    5. '	v' → logprob: -18.875
    6. '[val' → logprob: -19.0
    7. '][' → logprob: -19.125
    8. ' [' → logprob: -19.5
    9. '```' → logprob: -20.25
    10. ' v' → logprob: -20.625

Token 226: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -2.117345684382599e-05
    2. ']=' → logprob: -11.375020980834961
    3. ')' → logprob: -11.750020980834961
    4. ' ]' → logprob: -13.625020980834961
    5. '[u' → logprob: -15.625020980834961
    6. '])' → logprob: -16.25002098083496
    7. '[v' → logprob: -16.37502098083496
    8. '[' → logprob: -16.62502098083496
    9. '=' → logprob: -17.62502098083496
    10. ']
' → logprob: -18.87502098083496

Token 227: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20144344866275787
    2. ' =' → logprob: -1.7014434337615967
    3. '=u' → logprob: -10.951443672180176
    4. ')' → logprob: -12.201443672180176
    5. ')=' → logprob: -12.951443672180176
    6. '=v' → logprob: -12.951443672180176
    7. ']=' → logprob: -13.951443672180176
    8. ']' → logprob: -14.326443672180176
    9. '＝' → logprob: -14.951443672180176
    10. '=user' → logprob: -15.201443672180176

Token 228: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -3.547789674485102e-05
    2. ' u' → logprob: -10.250035285949707
    3. '	u' → logprob: -18.000036239624023
    4. '   ' → logprob: -21.125036239624023
    5. '[u' → logprob: -21.250036239624023
    6. ''u' → logprob: -22.875036239624023
    7. '
' → logprob: -23.500036239624023
    8. '<u' → logprob: -23.625036239624023
    9. '_u' → logprob: -23.625036239624023
    10. '*u' → logprob: -24.750036239624023

Token 229: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.000307575857732445
    2. ' return' → logprob: -8.8753080368042
    3. 'return' → logprob: -9.5003080368042
    4. '
' → logprob: -10.5003080368042
    5. '           ' → logprob: -10.6253080368042
    6. '                   ' → logprob: -11.2503080368042
    7. '       ' → logprob: -12.5003080368042
    8. '			' → logprob: -12.7503080368042
    9. ':return' → logprob: -12.8753080368042
    10. '		       ' → logprob: -13.0003080368042

Token 230: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.452426608419046e-05
    2. 'return' → logprob: -10.87503433227539
    3. ' return' → logprob: -11.62503433227539
    4. '           ' → logprob: -13.37503433227539
    5. '       ' → logprob: -13.62503433227539
    6. '<|end|>' → logprob: -14.12503433227539
    7. '		       ' → logprob: -14.12503433227539
    8. '                   ' → logprob: -14.25003433227539
    9. '			' → logprob: -14.87503433227539
    10. '
' → logprob: -15.00003433227539

Token 231: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.0003078142472077161
    2. ' return' → logprob: -8.2503080368042
    3. '               ' → logprob: -10.0003080368042
    4. ':return' → logprob: -14.6253080368042
    5. '                   ' → logprob: -15.2503080368042
    6. '
' → logprob: -15.8753080368042
    7. '	return' → logprob: -16.000307083129883
    8. '{return' → logprob: -16.875307083129883
    9. '@return' → logprob: -17.250307083129883
    10. '   ' → logprob: -17.500307083129883

Token 232: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.0485873706638813
    2. ' True' → logprob: -3.0485873222351074
    3. '(True' → logprob: -19.673587799072266
    4. '=True' → logprob: -21.923587799072266
    5. ' ' → logprob: -22.423587799072266
    6. 'true' → logprob: -23.173587799072266
    7. '   ' → logprob: -23.173587799072266
    8. ' ' → logprob: -23.548587799072266
    9. 'Tr' → logprob: -24.423587799072266
    10. '1' → logprob: -24.673587799072266

Token 233: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001109851524233818
    2. '       ' → logprob: -7.126110076904297
    3. ' return' → logprob: -9.251110076904297
    4. '
' → logprob: -9.501110076904297
    5. '           ' → logprob: -9.501110076904297
    6. 'return' → logprob: -10.501110076904297
    7. '	return' → logprob: -11.376110076904297
    8. '    
' → logprob: -11.626110076904297
    9. '    ' → logprob: -12.876110076904297
    10. '  ' → logprob: -13.626110076904297

Token 234: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0011966594029217958
    2. '       ' → logprob: -7.75119686126709
    3. ' return' → logprob: -7.87619686126709
    4. '	return' → logprob: -8.75119686126709
    5. 'return' → logprob: -9.50119686126709
    6. '
' → logprob: -9.87619686126709
    7. '           ' → logprob: -10.00119686126709
    8. '    ' → logprob: -11.25119686126709
    9. '  ' → logprob: -11.25119686126709
    10. '    
' → logprob: -11.62619686126709

Token 235: ' return' (ID: 622)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07010682672262192
    2. 'return' (adapté à ' return') → logprob: -2.8201067447662354
    3. ' return' → logprob: -4.9451069831848145
    4. '
' → logprob: -7.8201069831848145
    5. '       ' → logprob: -8.070106506347656
    6. '	return' → logprob: -9.445106506347656
    7. ' ' → logprob: -9.695106506347656
    8. 'False' → logprob: -10.195106506347656
    9. '               ' → logprob: -10.695106506347656
    10. '           ' → logprob: -10.695106506347656

Token 236: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.25192907452583313
    2. ' False' → logprob: -1.5019290447235107
    3. '(False' → logprob: -19.376928329467773
    4. '_false' → logprob: -21.251928329467773
    5. ' false' → logprob: -21.876928329467773
    6. '=False' → logprob: -22.251928329467773
    7. 'false' → logprob: -22.626928329467773
    8. '.False' → logprob: -23.126928329467773
    9. 'True' → logprob: -23.376928329467773
    10. ' ' → logprob: -23.376928329467773

Token 237: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.4024273455142975
    2. '
' → logprob: -1.402427315711975
    3. '<|end|>' → logprob: -2.5274274349212646
    4. '  
' → logprob: -6.6524271965026855
    5. '#' → logprob: -7.1524271965026855
    6. '\n' → logprob: -7.4024271965026855
    7. '<|end|>' → logprob: -7.5274271965026855
    8. '

' → logprob: -7.5274271965026855
    9. ' 
' → logprob: -8.027427673339844
    10. '\' → logprob: -8.027427673339844

Token 238: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.023090451955795288
    2. '#' → logprob: -3.898090362548828
    3. '
' → logprob: -6.023090362548828
    4. '  
' → logprob: -9.898090362548828
    5. '    
' → logprob: -11.273090362548828
    6. 'import' → logprob: -11.398090362548828
    7. '

' → logprob: -11.773090362548828
    8. '```' → logprob: -12.023090362548828
    9. '\' → logprob: -12.148090362548828
    10. ' 
' → logprob: -12.398090362548828

Token 239: ' main' (ID: 2758)
  Prédit: ' max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.6452212333679199
    2. ' main' → logprob: -0.8952212333679199
    3. ' maximum' → logprob: -2.89522123336792
    4. ' maximal' → logprob: -5.14522123336792
    5. ' solve' → logprob: -5.89522123336792
    6. ' bip' → logprob: -6.77022123336792
    7. ' find' → logprob: -7.14522123336792
    8. ' match' → logprob: -8.770221710205078
    9. ' maximize' → logprob: -8.895221710205078
    10. ' matching' → logprob: -8.895221710205078

Token 240: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -6.408677290892228e-05
    2. ' ():' → logprob: -10.5000638961792
    3. '():
' → logprob: -10.7500638961792
    4. '(' → logprob: -11.3750638961792
    5. '()' → logprob: -12.7500638961792
    6. '():
' → logprob: -15.3750638961792
    7. '(args' → logprob: -16.125064849853516
    8. '(":' → logprob: -16.625064849853516
    9. '(argv' → logprob: -16.750064849853516
    10. '():

' → logprob: -17.250064849853516

Token 241: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01078416220843792
    2. ' n' → logprob: -4.885784149169922
    3. ' import' → logprob: -6.135784149169922
    4. ' line' → logprob: -7.635784149169922
    5. 'n' → logprob: -8.885784149169922
    6. ' input' → logprob: -9.260784149169922
    7. 'import' → logprob: -9.885784149169922
    8. ' readline' → logprob: -9.885784149169922
    9. ' try' → logprob: -10.260784149169922
    10. ' lines' → logprob: -10.635784149169922

Token 242: ' input' (ID: 3422)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6436620354652405
    2. ' n' → logprob: -1.0186619758605957
    3. ' input' → logprob: -2.8936619758605957
    4. 'input' (adapté à ' input') → logprob: -3.3936619758605957
    5. 't' → logprob: -4.768661975860596
    6. '   ' → logprob: -5.018661975860596
    7. 'T' → logprob: -5.268661975860596
    8. ' t' → logprob: -6.143661975860596
    9. ' T' → logprob: -6.893661975860596
    10. 'N' → logprob: -7.143661975860596

Token 243: '_iter' (ID: 27043)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.03561410307884216
    2. '_line' → logprob: -3.910614013671875
    3. '_data' → logprob: -4.285614013671875
    4. '_lines' → logprob: -7.535614013671875
    5. '().' → logprob: -8.660614013671875
    6. ' =' → logprob: -9.035614013671875
    7. '=' → logprob: -9.410614013671875
    8. 'data' → logprob: -9.410614013671875
    9. '_' → logprob: -9.785614013671875
    10. 's' → logprob: -10.785614013671875

Token 244: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.07912012189626694
    2. ' =' → logprob: -2.57912015914917
    3. '()' → logprob: -9.329119682312012
    4. 'ator' → logprob: -9.579119682312012
    5. '=input' → logprob: -10.329119682312012
    6. '=sys' → logprob: -10.704119682312012
    7. '(' → logprob: -13.079119682312012
    8. 'er' → logprob: -13.079119682312012
    9. '=line' → logprob: -13.204119682312012
    10. '   ' → logprob: -13.204119682312012

Token 245: ' iter' (ID: 10621)
  Prédit: 'iter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'iter' → logprob: -0.07949398458003998
    2. ' iter' → logprob: -2.579493999481201
    3. 'sys' → logprob: -7.829493999481201
    4. '(iter' → logprob: -8.704493522644043
    5. ' sys' → logprob: -10.204493522644043
    6. '(sys' → logprob: -13.579493522644043
    7. '(' → logprob: -14.204493522644043
    8. '   ' → logprob: -14.329493522644043
    9. ' ' → logprob: -15.329493522644043
    10. '	iter' → logprob: -15.704493522644043

Token 246: '(sys' (ID: 41042)
  Prédit: '(sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(sys' → logprob: -0.00034392563975416124
    2. '(input' → logprob: -8.000344276428223
    3. 'sys' → logprob: -12.500344276428223
    4. '(' → logprob: -13.000344276428223
    5. '(stdin' → logprob: -13.500344276428223
    6. '=sys' → logprob: -15.125344276428223
    7. '(list' → logprob: -15.625344276428223
    8. '()' → logprob: -16.375343322753906
    9. '(s' → logprob: -16.625343322753906
    10. '(system' → logprob: -16.875343322753906

Token 247: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -1.1517960956552997e-05
    2. '.' → logprob: -11.750011444091797
    3. '.argv' → logprob: -12.625011444091797
    4. ' .' → logprob: -16.500011444091797
    5. '.input' → logprob: -16.500011444091797
    6. '.std' → logprob: -16.875011444091797
    7. '(stdin' → logprob: -16.875011444091797
    8. '().' → logprob: -17.250011444091797
    9. 'stdin' → logprob: -17.375011444091797
    10. '.stdout' → logprob: -17.500011444091797

Token 248: '.read' (ID: 7211)
  Prédit: '.readline'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.0005504102446138859
    2. ')' → logprob: -7.625550270080566
    3. '.readlines' → logprob: -9.750550270080566
    4. '.' → logprob: -12.875550270080566
    5. '.read' → logprob: -13.625550270080566
    6. ')
' → logprob: -15.375550270080566
    7. '())' → logprob: -16.125551223754883
    8. ' readline' → logprob: -16.625551223754883
    9. '))' → logprob: -18.000551223754883
    10. 'read' → logprob: -18.250551223754883

Token 249: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.03722842410206795
    2. '())' → logprob: -3.5372283458709717
    3. '()' → logprob: -4.912228584289551
    4. '(' → logprob: -9.41222858428955
    5. ')' → logprob: -12.91222858428955
    6. ' ())' → logprob: -13.16222858428955
    7. 'lines' → logprob: -13.41222858428955
    8. '()
' → logprob: -13.53722858428955
    9. 'line' → logprob: -14.28722858428955
    10. '()))' → logprob: -14.66222858428955

Token 250: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.014305122196674347
    2. 'strip' → logprob: -4.264305114746094
    3. 'read' → logprob: -9.389305114746094
    4. 'decode' → logprob: -9.889305114746094
    5. ' split' → logprob: -12.764305114746094
    6. 'rstrip' → logprob: -13.264305114746094
    7. 'replace' → logprob: -13.514305114746094
    8. '(split' → logprob: -14.389305114746094
    9. ')' → logprob: -15.639305114746094
    10. '```' → logprob: -15.764305114746094

Token 251: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.2522105574607849
    2. '()' → logprob: -1.5022106170654297
    3. 'lines' → logprob: -8.50221061706543
    4. '()\' → logprob: -10.37721061706543
    5. '('\' → logprob: -11.37721061706543
    6. '()
' → logprob: -11.37721061706543
    7. '())
' → logprob: -11.75221061706543
    8. '()]' → logprob: -11.87721061706543
    9. ')' → logprob: -13.25221061706543
    10. '(' → logprob: -13.25221061706543

Token 252: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1403929442167282
    2. 'n' → logprob: -2.265393018722534
    3. ' n' → logprob: -3.765393018722534
    4. '    
' → logprob: -6.140392780303955
    5. ' 
' → logprob: -7.640392780303955
    6. 'num' → logprob: -8.390393257141113
    7. '
' → logprob: -8.515393257141113
    8. ' num' → logprob: -8.765393257141113
    9. 't' → logprob: -9.015393257141113
    10. ' t' → logprob: -9.015393257141113

Token 253: ' while' (ID: 2049)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.2942609488964081
    2. 'T' → logprob: -2.2942609786987305
    3. 't' → logprob: -2.2942609786987305
    4. '   ' → logprob: -3.9192609786987305
    5. 'N' → logprob: -4.2942609786987305
    6. 'try' → logprob: -4.6692609786987305
    7. ' n' → logprob: -5.2942609786987305
    8. ' T' → logprob: -6.2942609786987305
    9. ' t' → logprob: -6.6692609786987305
    10. 'num' → logprob: -6.7942609786987305

Token 254: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.07040207087993622
    2. 'True' → logprob: -2.695402145385742
    3. '(True' → logprob: -7.945402145385742
    4. ' ' → logprob: -9.570402145385742
    5. '=True' → logprob: -11.570402145385742
    6. '1' → logprob: -11.945402145385742
    7. 'true' → logprob: -12.445402145385742
    8. '  ' → logprob: -12.570402145385742
    9. ' not' → logprob: -12.695402145385742
    10. 'len' → logprob: -12.820402145385742

Token 255: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0008164160535670817
    2. '       ' → logprob: -7.625816345214844
    3. '   ' → logprob: -9.000816345214844
    4. ' :' → logprob: -9.250816345214844
    5. ':
' → logprob: -9.500816345214844
    6. ',' → logprob: -11.250816345214844
    7. '):' → logprob: -11.500816345214844
    8. '():' → logprob: -12.125816345214844
    9. '=' → logprob: -13.125816345214844
    10. '    ' → logprob: -13.625816345214844

Token 256: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.056429073214530945
    2. 'try' → logprob: -3.431429147720337
    3. '       ' → logprob: -4.181428909301758
    4. ' try' → logprob: -4.931428909301758
    5. '	try' → logprob: -10.806428909301758
    6. '   ' → logprob: -11.931428909301758
    7. 'Try' → logprob: -13.556428909301758
    8. '.try' → logprob: -13.556428909301758
    9. '_try' → logprob: -13.806428909301758
    10. '    ' → logprob: -14.431428909301758

Token 257: ' #' (ID: 1069)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.011523911729454994
    2. '   ' → logprob: -4.511523723602295
    3. ' try' → logprob: -7.886523723602295
    4. 'n' → logprob: -9.761524200439453
    5. '       ' → logprob: -10.386524200439453
    6. '	try' → logprob: -11.886524200439453
    7. 't' → logprob: -12.886524200439453
    8. 'Try' → logprob: -14.511524200439453
    9. 'a' → logprob: -14.761524200439453
    10. 'm' → logprob: -15.511524200439453

Token 258: ' Lecture' (ID: 106534)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -3.2855416066013277e-05
    2. '   ' → logprob: -10.875032424926758
    3. ' try' → logprob: -11.500032424926758
    4. 't' → logprob: -13.000032424926758
    5. '       ' → logprob: -13.750032424926758
    6. '
' → logprob: -16.000032424926758
    7. 'n' → logprob: -16.625032424926758
    8. 'Try' → logprob: -16.625032424926758
    9. '	try' → logprob: -17.125032424926758
    10. '           ' → logprob: -17.125032424926758

Token 259: ' des' (ID: 731)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.14636316895484924
    2. ' try' → logprob: -2.3963632583618164
    3. 'n' → logprob: -4.271363258361816
    4. 'line' → logprob: -4.396363258361816
    5. '       ' → logprob: -4.771363258361816
    6. ' line' → logprob: -5.896363258361816
    7. ' n' → logprob: -5.896363258361816
    8. '   ' → logprob: -6.021363258361816
    9. 'token' → logprob: -8.021363258361816
    10. ':' → logprob: -8.521363258361816

Token 260: ' nombres' (ID: 76205)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.6642523407936096
    2. ' n' → logprob: -1.2892522811889648
    3. ' nombres' → logprob: -2.414252281188965
    4. ' try' → logprob: -3.414252281188965
    5. 'try' → logprob: -3.789252281188965
    6. 'nombre' → logprob: -4.289252281188965
    7. ' ' → logprob: -4.539252281188965
    8. 'tokens' → logprob: -4.789252281188965
    9. 'val' → logprob: -5.289252281188965
    10. ' tokens' → logprob: -5.414252281188965

Token 261: ' de' (ID: 334)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.10435811430215836
    2. ' try' → logprob: -2.354358196258545
    3. '   ' → logprob: -6.729358196258545
    4. '       ' → logprob: -7.104358196258545
    5. ':' → logprob: -7.229358196258545
    6. '	try' → logprob: -7.604358196258545
    7. '_try' → logprob: -8.729357719421387
    8. ' =' → logprob: -9.104357719421387
    9. 'n' → logprob: -9.479357719421387
    10. '.try' → logprob: -9.604357719421387

Token 262: ' cartes' (ID: 70753)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.7711820006370544
    2. 'n' → logprob: -1.8961820602416992
    3. 'machines' → logprob: -2.896182060241699
    4. 'som' → logprob: -3.146182060241699
    5. 'cases' → logprob: -3.146182060241699
    6. 'part' → logprob: -3.271182060241699
    7. 'p' → logprob: -3.771182060241699
    8. 'val' → logprob: -4.271182060241699
    9. 'élé' → logprob: -4.396182060241699
    10. 'points' → logprob: -4.396182060241699

Token 263: ' ble' (ID: 10483)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.05986298993229866
    2. ' try' → logprob: -3.4348630905151367
    3. ':' → logprob: -4.309863090515137
    4. '       ' → logprob: -5.434863090515137
    5. '   ' → logprob: -6.059863090515137
    6. '=' → logprob: -6.434863090515137
    7. ' =' → logprob: -6.684863090515137
    8. 'if' → logprob: -7.184863090515137
    9. 'n' → logprob: -7.809863090515137
    10. '	try' → logprob: -8.059863090515137

Token 264: 'ues' (ID: 1406)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.5294453501701355
    2. 'ues' → logprob: -0.9044453501701355
    3. 'ue' → logprob: -5.529445171356201
    4. 'us' → logprob: -6.279445171356201
    5. 'ttes' → logprob: -8.90444564819336
    6. 's' → logprob: -9.15444564819336
    7. '```' → logprob: -9.65444564819336
    8. '#' → logprob: -10.65444564819336
    9. 'es' → logprob: -11.02944564819336
    10. 'e' → logprob: -11.15444564819336

Token 265: ' et' (ID: 859)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.9274827837944031
    2. 'try' → logprob: -1.0524828433990479
    3. ' =' → logprob: -1.5524828433990479
    4. ',' → logprob: -3.802482843399048
    5. '   ' → logprob: -4.802482604980469
    6. ' try' → logprob: -5.177482604980469
    7. ':' → logprob: -6.052482604980469
    8. '_try' → logprob: -7.302482604980469
    9. '       ' → logprob: -7.427482604980469
    10. ' ,' → logprob: -7.427482604980469

Token 266: ' rouges' (ID: 143987)
  Prédit: 'rou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rou' → logprob: -0.11528719216585159
    2. ' rouges' → logprob: -2.4902873039245605
    3. ' jaunes' → logprob: -4.7402873039245605
    4. 'bl' → logprob: -5.1152873039245605
    5. 'ja' → logprob: -5.6152873039245605
    6. 'vert' → logprob: -5.6152873039245605
    7. 'verts' → logprob: -6.7402873039245605
    8. ' rouge' → logprob: -7.8652873039245605
    9. 'red' → logprob: -8.115286827087402
    10. ' bl' → logprob: -8.115286827087402

Token 267: '
' (ID: 198)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.14626461267471313
    2. '       ' → logprob: -2.6462645530700684
    3. ' try' → logprob: -3.3962645530700684
    4. '   ' → logprob: -3.7712645530700684
    5. ',' → logprob: -5.896264553070068
    6. '	try' → logprob: -6.021264553070068
    7. ':' → logprob: -7.771264553070068
    8. 'au' → logprob: -8.021265029907227
    9. 'n' → logprob: -8.021265029907227
    10. '=' → logprob: -8.146265029907227

Token 268: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.702135443687439
    2. '   ' → logprob: -1.077135443687439
    3. ':' → logprob: -2.2021355628967285
    4. ',' → logprob: -3.4521355628967285
    5. ' :' → logprob: -4.3271355628967285
    6. ' ,' → logprob: -6.8271355628967285
    7. ' ' → logprob: -6.8271355628967285
    8. 'try' → logprob: -6.8271355628967285
    9. ' =' → logprob: -6.9521355628967285
    10. ' try' → logprob: -7.4521355628967285

Token 269: ' m' (ID: 284)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.0005164555623196065
    2. ' try' → logprob: -8.250516891479492
    3. '   ' → logprob: -8.750516891479492
    4. '       ' → logprob: -10.500516891479492
    5. 'break' → logprob: -11.000516891479492
    6. 'b' → logprob: -11.250516891479492
    7. 'n' → logprob: -11.500516891479492
    8. '	try' → logprob: -11.750516891479492
    9. '        
' → logprob: -12.500516891479492
    10. '
' → logprob: -12.625516891479492

Token 270: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.37342631816864014
    2. '=' → logprob: -1.7484263181686401
    3. ',' → logprob: -1.9984263181686401
    4. '   ' → logprob: -7.37342643737793
    5. ' ,' → logprob: -7.49842643737793
    6. ' ' → logprob: -7.99842643737793
    7. '    ' → logprob: -8.99842643737793
    8. ')' → logprob: -8.99842643737793
    9. '  ' → logprob: -9.49842643737793
    10. '=int' → logprob: -9.99842643737793

Token 271: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03254086896777153
    2. ' int' → logprob: -3.782540798187256
    3. 'next' → logprob: -5.157540798187256
    4. ' next' → logprob: -5.657540798187256
    5. 'None' → logprob: -12.782541275024414
    6. ' None' → logprob: -14.032541275024414
    7. ' ' → logprob: -14.157541275024414
    8. '0' → logprob: -14.282541275024414
    9. '(int' → logprob: -15.657541275024414
    10. 'Next' → logprob: -17.032541275024414

Token 272: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -0.0067758806981146336
    2. '(input' → logprob: -5.131775856018066
    3. '(' → logprob: -7.131775856018066
    4. 'next' → logprob: -10.131775856018066
    5. ' (' → logprob: -12.506775856018066
    6. ' next' → logprob: -13.006775856018066
    7. '()' → logprob: -14.381775856018066
    8. 'input' → logprob: -14.631775856018066
    9. '(sys' → logprob: -15.381775856018066
    10. '(
' → logprob: -15.881775856018066

Token 273: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.008626393973827362
    2. 'input' → logprob: -4.758626461029053
    3. ' input' → logprob: -11.758625984191895
    4. '(' → logprob: -13.008625984191895
    5. '=input' → logprob: -14.383625984191895
    6. ',input' → logprob: -14.383625984191895
    7. ' (' → logprob: -15.133625984191895
    8. ')' → logprob: -15.258625984191895
    9. '[input' → logprob: -17.75862693786621
    10. '(
' → logprob: -18.00862693786621

Token 274: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -0.004135868512094021
    2. '(input' → logprob: -5.754136085510254
    3. '_input' → logprob: -7.504136085510254
    4. '_' → logprob: -9.004136085510254
    5. '_token' → logprob: -9.504136085510254
    6. '))' → logprob: -9.629136085510254
    7. '_iterator' → logprob: -10.504136085510254
    8. '_it' → logprob: -10.754136085510254
    9. 'input' → logprob: -10.879136085510254
    10. 'iter' → logprob: -11.004136085510254

Token 275: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0014141658321022987
    2. '))
' → logprob: -7.1264142990112305
    3. '()))' → logprob: -8.00141429901123
    4. ')' → logprob: -8.25141429901123
    5. '()' → logprob: -12.25141429901123
    6. ' ))' → logprob: -12.50141429901123
    7. '()))
' → logprob: -13.37641429901123
    8. '))

' → logprob: -14.12641429901123
    9. ')))' → logprob: -14.12641429901123
    10. '),' → logprob: -14.37641429901123

Token 276: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 277: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.027631139382719994
    2. ' n' → logprob: -3.7776310443878174
    3. 'if' → logprob: -5.7776312828063965
    4. '       ' → logprob: -7.1526312828063965
    5. ' if' → logprob: -8.652630805969238
    6. 'r' → logprob: -8.777630805969238
    7. '   ' → logprob: -9.402630805969238
    8. 'k' → logprob: -10.902630805969238
    9. 'm' → logprob: -11.027630805969238
    10. '0' → logprob: -11.152630805969238

Token 278: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38687217235565186
    2. '=' → logprob: -1.1368721723556519
    3. ')' → logprob: -14.511872291564941
    4. '   ' → logprob: -15.636872291564941
    5. ' ' → logprob: -15.761872291564941
    6. '=int' → logprob: -16.136871337890625
    7. ' ' → logprob: -17.136871337890625
    8. '<|end|>' → logprob: -17.261871337890625
    9. '(' → logprob: -17.636871337890625
    10. '  ' → logprob: -17.636871337890625

Token 279: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.02324652671813965
    2. ' int' → logprob: -3.7732465267181396
    3. '(int' → logprob: -14.023246765136719
    4. '=int' → logprob: -15.898246765136719
    5. '<int' → logprob: -16.77324676513672
    6. '[int' → logprob: -17.02324676513672
    7. '   ' → logprob: -17.89824676513672
    8. ' ' → logprob: -18.52324676513672
    9. '	int' → logprob: -19.02324676513672
    10. ':int' → logprob: -19.52324676513672

Token 280: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -4.320199877838604e-07
    2. 'next' → logprob: -15.0
    3. '[next' → logprob: -17.625
    4. ' next' → logprob: -18.5
    5. '(' → logprob: -19.75
    6. '.next' → logprob: -21.0
    7. '	next' → logprob: -21.125
    8. ' (' → logprob: -21.75
    9. ',next' → logprob: -22.0
    10. '(
' → logprob: -23.625

Token 281: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -2.1008713702030946e-06
    2. 'input' → logprob: -13.250001907348633
    3. ',input' → logprob: -16.250001907348633
    4. '=input' → logprob: -16.625001907348633
    5. '(' → logprob: -17.375001907348633
    6. ' (' → logprob: -17.750001907348633
    7. '[input' → logprob: -18.125001907348633
    8. ' input' → logprob: -18.500001907348633
    9. ')' → logprob: -18.875001907348633
    10. '(output' → logprob: -19.000001907348633

Token 282: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -5.512236498361744e-07
    2. 'iter' → logprob: -15.000000953674316
    3. 'Iter' → logprob: -16.0
    4. '(input' → logprob: -17.25
    5. '_iterator' → logprob: -18.0
    6. '_it' → logprob: -18.875
    7. '(iter' → logprob: -19.25
    8. '_inter' → logprob: -19.25
    9. '))' → logprob: -19.75
    10. '_iters' → logprob: -20.5

Token 283: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0018009616760537028
    2. '))
' → logprob: -6.376801013946533
    3. '()))' → logprob: -9.376800537109375
    4. '()' → logprob: -11.876800537109375
    5. ')' → logprob: -12.501800537109375
    6. '   ' → logprob: -13.751800537109375
    7. '()))
' → logprob: -14.251800537109375
    8. ' ))' → logprob: -14.626800537109375
    9. '))

' → logprob: -15.126800537109375
    10. '       ' → logprob: -15.251800537109375

Token 284: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007807997753843665
    2. ' if' → logprob: -7.3757805824279785
    3. 'if' → logprob: -9.500781059265137
    4. '<|end|>' → logprob: -10.250781059265137
    5. '   ' → logprob: -10.375781059265137
    6. '	' → logprob: -12.375781059265137
    7. '        
' → logprob: -13.250781059265137
    8. '	if' → logprob: -13.375781059265137
    9. '           ' → logprob: -13.500781059265137
    10. '	   ' → logprob: -14.000781059265137

Token 285: ' if' (ID: 538)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 286: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.023247340694069862
    2. ' m' → logprob: -3.773247241973877
    3. '(m' → logprob: -13.523247718811035
    4. ' ' → logprob: -15.273247718811035
    5. '(' → logprob: -16.52324676513672
    6. '	m' → logprob: -17.14824676513672
    7. ' (' → logprob: -17.27324676513672
    8. '   ' → logprob: -17.77324676513672
    9. ' ' → logprob: -18.89824676513672
    10. '  ' → logprob: -19.89824676513672

Token 287: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.2519896924495697
    2. '==' → logprob: -1.501989722251892
    3. ' <=' → logprob: -10.626989364624023
    4. '<=' → logprob: -10.876989364624023
    5. '=' → logprob: -11.626989364624023
    6. ' ' → logprob: -12.876989364624023
    7. ')==' → logprob: -13.376989364624023
    8. '0' → logprob: -13.626989364624023
    9. ')' → logprob: -14.501989364624023
    10. ' =' → logprob: -14.876989364624023

Token 288: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0380416102707386
    2. ' ' → logprob: -3.288041591644287
    3. 'n' → logprob: -16.413042068481445
    4. ' n' → logprob: -17.538042068481445
    5. ' ' → logprob: -17.663042068481445
    6. '   ' → logprob: -17.913042068481445
    7. '  ' → logprob: -18.163042068481445
    8. '=' → logprob: -19.663042068481445
    9. '۰' → logprob: -19.663042068481445
    10. '```' → logprob: -19.663042068481445

Token 289: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. 'n' → logprob: -17.000017166137695
    4. '-' → logprob: -17.375017166137695
    5. '   ' → logprob: -18.750017166137695
    6. '```' → logprob: -19.750017166137695
    7. '۰' → logprob: -19.750017166137695
    8. '  ' → logprob: -20.250017166137695
    9. ' n' → logprob: -20.625017166137695
    10. 'and' → logprob: -20.687517166137695

Token 290: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3868732452392578
    2. 'and' → logprob: -1.1368732452392578
    3. ' or' → logprob: -13.761873245239258
    4. ' ' → logprob: -13.886873245239258
    5. '	and' → logprob: -16.261873245239258
    6. 'or' → logprob: -16.511873245239258
    7. '   ' → logprob: -17.136873245239258
    8. '0' → logprob: -18.011873245239258
    9. '```' → logprob: -18.136873245239258
    10. ' ' → logprob: -18.261873245239258

Token 291: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.12692810595035553
    2. ' n' → logprob: -2.1269280910491943
    3. '	n' → logprob: -17.251928329467773
    4. '   ' → logprob: -18.001928329467773
    5. ' ' → logprob: -18.251928329467773
    6. ' ' → logprob: -19.001928329467773
    7. '  ' → logprob: -19.751928329467773
    8. '    ' → logprob: -19.876928329467773
    9. '
' → logprob: -20.501928329467773
    10. '       ' → logprob: -21.376928329467773

Token 292: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.575995683670044
    2. ' ==' → logprob: -0.825995683670044
    3. '<|end|>' → logprob: -10.950995445251465
    4. ')==' → logprob: -11.075995445251465
    5. ')' → logprob: -12.325995445251465
    6. ']==' → logprob: -12.450995445251465
    7. '=' → logprob: -12.450995445251465
    8. ' ' → logprob: -13.325995445251465
    9. '()==' → logprob: -13.325995445251465
    10. '0' → logprob: -13.575995445251465

Token 293: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03804149478673935
    2. ' ' → logprob: -3.288041591644287
    3. ' ' → logprob: -18.413042068481445
    4. '   ' → logprob: -18.538042068481445
    5. '  ' → logprob: -19.038042068481445
    6. '۰' → logprob: -19.913042068481445
    7. '```' → logprob: -20.850542068481445
    8. '	' → logprob: -21.788042068481445
    9. '=' → logprob: -21.850542068481445
    10. '00' → logprob: -22.163042068481445

Token 294: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '۰' → logprob: -17.625017166137695
    4. '<|end|>' → logprob: -19.250017166137695
    5. '০' → logprob: -19.687517166137695
    6. '   ' → logprob: -19.875017166137695
    7. '```' → logprob: -20.125017166137695
    8. '０' → logprob: -20.562517166137695
    9. '<|end|>' → logprob: -20.812517166137695
    10. '  ' → logprob: -20.875017166137695

Token 295: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10023945569992065
    2. ':
' → logprob: -2.3502395153045654
    3. '           ' → logprob: -11.100239753723145
    4. ':return' → logprob: -11.350239753723145
    5. ':
' → logprob: -13.475239753723145
    6. '       ' → logprob: -13.475239753723145
    7. '):
' → logprob: -14.100239753723145
    8. '():
' → logprob: -14.475239753723145
    9. '):' → logprob: -14.475239753723145
    10. ' :' → logprob: -14.600239753723145

Token 296: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017114708898589015
    2. '       ' → logprob: -6.376711368560791
    3. ' break' → logprob: -13.00171184539795
    4. '		' → logprob: -13.25171184539795
    5. '   ' → logprob: -13.25171184539795
    6. '               ' → logprob: -13.62671184539795
    7. '
' → logprob: -14.12671184539795
    8. '          ' → logprob: -14.87671184539795
    9. '	       ' → logprob: -15.00171184539795
    10. 'break' → logprob: -15.37671184539795

Token 297: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.13904570043087006
    2. ' break' → logprob: -2.1390457153320312
    3. 'return' → logprob: -4.639045715332031
    4. '           ' → logprob: -6.139045715332031
    5. ' return' → logprob: -9.014045715332031
    6. '       ' → logprob: -9.639045715332031
    7. '	break' → logprob: -10.514045715332031
    8. '               ' → logprob: -12.139045715332031
    9. '_break' → logprob: -14.389045715332031
    10. '   ' → logprob: -14.889045715332031

Token 298: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49963635206222534
    2. '
' → logprob: -1.3746364116668701
    3. '<|end|>' → logprob: -2.49963641166687
    4. '        
' → logprob: -2.99963641166687
    5. '    
' → logprob: -5.624636173248291
    6. '  
' → logprob: -5.874636173248291
    7. '<|end|>' → logprob: -7.499636173248291
    8. '            
' → logprob: -7.624636173248291
    9. '   ' → logprob: -8.12463665008545
    10. ' 
' → logprob: -8.62463665008545

Token 299: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14141160249710083
    2. '   ' → logprob: -2.266411542892456
    3. '```' → logprob: -4.266411781311035
    4. '        
' → logprob: -4.891411781311035
    5. '    
' → logprob: -5.391411781311035
    6. '  
' → logprob: -7.141411781311035
    7. '<|end|>' → logprob: -7.141411781311035
    8. '
' → logprob: -8.891411781311035
    9. '       
' → logprob: -9.766411781311035
    10. '   
' → logprob: -9.766411781311035

Token 300: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' (adapté à ' blue') → logprob: -0.1590704619884491
    2. 'ble' → logprob: -2.1590704917907715
    3. 'cards' → logprob: -4.6590704917907715
    4. '#' → logprob: -4.7840704917907715
    5. 'bl' → logprob: -5.1590704917907715
    6. '   ' → logprob: -5.7840704917907715
    7. '       ' → logprob: -6.7840704917907715
    8. 'B' → logprob: -6.9090704917907715
    9. 'b' → logprob: -7.0340704917907715
    10. 'a' → logprob: -7.9090704917907715

Token 301: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.2699207365512848
    2. '_f' → logprob: -1.6449207067489624
    3. 's' → logprob: -4.019920825958252
    4. '_' → logprob: -4.519920825958252
    5. '_numbers' → logprob: -5.519920825958252
    6. '_ids' → logprob: -6.394920825958252
    7. '_nums' → logprob: -6.394920825958252
    8. '_values' → logprob: -7.394920825958252
    9. '_counts' → logprob: -7.394920825958252
    10. ' =' → logprob: -7.394920825958252

Token 302: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5238439440727234
    2. '=' → logprob: -0.8988439440727234
    3. ',' → logprob: -7.273843765258789
    4. '=[]' → logprob: -11.273843765258789
    5. '   ' → logprob: -12.398843765258789
    6. ')' → logprob: -12.398843765258789
    7. '_' → logprob: -14.148843765258789
    8. ']' → logprob: -14.273843765258789
    9. ' ' → logprob: -14.273843765258789
    10. '	' → logprob: -14.398843765258789

Token 303: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.12133818864822388
    2. '[' → logprob: -2.871338129043579
    3. '[list' → logprob: -2.871338129043579
    4. '[int' → logprob: -7.371338367462158
    5. '[m' → logprob: -8.121337890625
    6. '[next' → logprob: -10.496337890625
    7. '[List' → logprob: -10.871337890625
    8. '[str' → logprob: -11.871337890625
    9. '[get' → logprob: -12.246337890625
    10. '[input' → logprob: -12.371337890625

Token 304: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.842555426876061e-06
    2. ' int' → logprob: -12.250004768371582
    3. '   ' → logprob: -16.7500057220459
    4. ']int' → logprob: -17.6250057220459
    5. '(int' → logprob: -18.6250057220459
    6. '<int' → logprob: -19.3750057220459
    7. '[int' → logprob: -19.5000057220459
    8. '
' → logprob: -19.8750057220459
    9. ' ' → logprob: -20.0000057220459
    10. ']' → logprob: -20.1250057220459

Token 305: '(next' (ID: 28757)
  Prédit: '(next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(next' → logprob: -4.000763510703109e-05
    2. '(' → logprob: -10.375040054321289
    3. 'next' → logprob: -12.375040054321289
    4. ']' → logprob: -13.250040054321289
    5. '(x' → logprob: -13.625040054321289
    6. '()]' → logprob: -14.125040054321289
    7. '()' → logprob: -15.125040054321289
    8. '(
' → logprob: -15.625040054321289
    9. ' (' → logprob: -15.875040054321289
    10. '[next' → logprob: -16.25004005432129

Token 306: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0031808018684387207
    2. 'input' → logprob: -5.753180980682373
    3. ',input' → logprob: -14.128180503845215
    4. ')' → logprob: -14.378180503845215
    5. '(' → logprob: -14.378180503845215
    6. ' input' → logprob: -14.503180503845215
    7. '=input' → logprob: -15.253180503845215
    8. '(
' → logprob: -15.628180503845215
    9. ' (' → logprob: -15.753180503845215
    10. '[input' → logprob: -17.25318145751953

Token 307: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -8.537868779967539e-06
    2. '(input' → logprob: -11.750008583068848
    3. '_iterator' → logprob: -15.750008583068848
    4. '_input' → logprob: -15.750008583068848
    5. '_it' → logprob: -16.37500762939453
    6. 'iter' → logprob: -17.00000762939453
    7. '_token' → logprob: -17.25000762939453
    8. '(iter' → logprob: -17.75000762939453
    9. '_tokens' → logprob: -18.12500762939453
    10. '))' → logprob: -18.25000762939453

Token 308: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.008869592100381851
    2. ')' → logprob: -4.758869647979736
    3. '()))' → logprob: -8.508869171142578
    4. '()' → logprob: -10.508869171142578
    5. ' ))' → logprob: -11.258869171142578
    6. '())' → logprob: -11.883869171142578
    7. '   ' → logprob: -13.008869171142578
    8. ' ' → logprob: -13.508869171142578
    9. '),' → logprob: -14.508869171142578
    10. ')]' → logprob: -14.508869171142578

Token 309: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2973073124885559
    2. ' for' → logprob: -1.5473072528839111
    3. 'for' → logprob: -3.297307252883911
    4. '()' → logprob: -4.92230749130249
    5. ' )' → logprob: -10.047307014465332
    6. '   ' → logprob: -10.422307014465332
    7. '       ' → logprob: -11.797307014465332
    8. ']' → logprob: -12.422307014465332
    9. ' ' → logprob: -12.547307014465332
    10. ')]' → logprob: -12.797307014465332

Token 310: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.005460355430841446
    2. ' _' → logprob: -6.005460262298584
    3. ' range' → logprob: -6.255460262298584
    4. '_range' → logprob: -6.880460262298584
    5. 'range' → logprob: -11.130460739135742
    6. ' ' → logprob: -12.255460739135742
    7. '_i' → logprob: -12.630460739135742
    8. ' in' → logprob: -12.630460739135742
    9. '_x' → logprob: -13.880460739135742
    10. '_blue' → logprob: -14.005460739135742

Token 311: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2581263780593872
    2. ' range' → logprob: -1.5081263780593872
    3. ' in' → logprob: -5.633126258850098
    4. 'in' → logprob: -6.008126258850098
    5. '_' → logprob: -9.258126258850098
    6. '_range' → logprob: -10.383126258850098
    7. ' ' → logprob: -12.258126258850098
    8. '	range' → logprob: -12.633126258850098
    9. 'm' → logprob: -12.883126258850098
    10. '(range' → logprob: -13.258126258850098

Token 312: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.004078639671206474
    2. ' range' → logprob: -5.5040788650512695
    3. '(range' → logprob: -16.379077911376953
    4. 'm' → logprob: -16.629077911376953
    5. '	range' → logprob: -17.754077911376953
    6. '   ' → logprob: -18.504077911376953
    7. ' ' → logprob: -18.754077911376953
    8. '
' → logprob: -19.504077911376953
    9. ' xrange' → logprob: -19.629077911376953
    10. 'x' → logprob: -20.254077911376953

Token 313: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -6.20603168499656e-05
    2. 'm' → logprob: -10.625061988830566
    3. ' (' → logprob: -10.750061988830566
    4. '(' → logprob: -11.625061988830566
    5. ' m' → logprob: -11.875061988830566
    6. '	m' → logprob: -15.875061988830566
    7. '   ' → logprob: -16.000062942504883
    8. ')m' → logprob: -16.000062942504883
    9. ')' → logprob: -17.625062942504883
    10. ' ' → logprob: -18.625062942504883

Token 314: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00012821101699955761
    2. ')]
' → logprob: -9.000127792358398
    3. ')' → logprob: -13.125127792358398
    4. ' )' → logprob: -14.000127792358398
    5. ']' → logprob: -14.125127792358398
    6. '       ' → logprob: -14.875127792358398
    7. ')]
' → logprob: -15.250127792358398
    8. '   ' → logprob: -15.500127792358398
    9. ')]

' → logprob: -16.2501277923584
    10. ' ]' → logprob: -16.6251277923584

Token 315: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05885545164346695
    2. 'red' → logprob: -3.5588555335998535
    3. ' red' → logprob: -3.5588555335998535
    4. '        
' → logprob: -9.183855056762695
    5. '
' → logprob: -10.183855056762695
    6. '   ' → logprob: -10.808855056762695
    7. '```' → logprob: -11.183855056762695
    8. ' rouge' → logprob: -11.308855056762695
    9. '_red' → logprob: -12.183855056762695
    10. '.red' → logprob: -12.558855056762695

Token 316: ' red' (ID: 3592)
  Prédit: 'red'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'red' (adapté à ' red') → logprob: -0.022051511332392693
    2. ' red' → logprob: -3.8970515727996826
    3. '       ' → logprob: -6.5220513343811035
    4. '   ' → logprob: -11.522051811218262
    5. 'r' → logprob: -12.272051811218262
    6. 'reds' → logprob: -12.397051811218262
    7. '        
' → logprob: -12.522051811218262
    8. 'rou' → logprob: -13.147051811218262
    9. '
' → logprob: -13.397051811218262
    10. ' ' → logprob: -13.522051811218262

Token 317: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -8.220573363360018e-05
    2. '_' → logprob: -10.000082015991211
    3. '_tokens' → logprob: -11.625082015991211
    4. '_codes' → logprob: -11.750082015991211
    5. ''_' → logprob: -13.125082015991211
    6. '_s' → logprob: -13.500082015991211
    7. '_cart' → logprob: -13.625082015991211
    8. ')_' → logprob: -13.750082015991211
    9. '_packets' → logprob: -14.000082015991211
    10. ' _' → logprob: -14.125082015991211

Token 318: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4740773141384125
    2. '=' → logprob: -0.9740773439407349
    3. ' ' → logprob: -16.099077224731445
    4. ']' → logprob: -17.099077224731445
    5. '=[' → logprob: -17.224077224731445
    6. ' =[' → logprob: -17.224077224731445
    7. '[' → logprob: -17.349077224731445
    8. '   ' → logprob: -17.474077224731445
    9. ')' → logprob: -17.599077224731445
    10. '＝' → logprob: -18.974077224731445

Token 319: ' [' (ID: 723)
  Prédit: ' ['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' [' → logprob: -0.4782767593860626
    2. '[int' → logprob: -0.9782767295837402
    3. '[' → logprob: -5.47827672958374
    4. '[Int' → logprob: -11.228277206420898
    5. ' ' → logprob: -14.478277206420898
    6. '[ind' → logprob: -15.728277206420898
    7. ' ' → logprob: -16.2282772064209
    8. '   ' → logprob: -16.8532772064209
    9. '[next' → logprob: -16.9782772064209
    10. '[str' → logprob: -16.9782772064209

Token 320: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -4.320199877838604e-07
    2. ' int' → logprob: -15.0
    3. '   ' → logprob: -17.5
    4. '[int' → logprob: -17.5
    5. '(int' → logprob: -17.625
    6. '
' → logprob: -18.875
    7. '<int' → logprob: -19.625
    8. '           ' → logprob: -19.875
    9. ' ' → logprob: -20.375
    10. '  ' → logprob: -20.375

Token 321: '(next' (ID: 28757)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 322: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.0014420190127566457
    2. 'input' → logprob: -7.001441955566406
    3. '(next' → logprob: -7.626441955566406
    4. 'next' → logprob: -10.126441955566406
    5. '_next' → logprob: -14.126441955566406
    6. '_input' → logprob: -14.251441955566406
    7. '(' → logprob: -14.376441955566406
    8. '<input' → logprob: -15.251441955566406
    9. '=input' → logprob: -15.376441955566406
    10. '```' → logprob: -16.001441955566406

Token 323: '_iter' (ID: 27043)
  Prédit: '_iter'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_iter' → logprob: -4.4060561776859686e-05
    2. 'iter' → logprob: -10.375043869018555
    3. '(input' → logprob: -11.500043869018555
    4. 'input' → logprob: -13.250043869018555
    5. '_iterator' → logprob: -14.750043869018555
    6. 'Iter' → logprob: -14.875043869018555
    7. '_it' → logprob: -16.750043869018555
    8. '_input' → logprob: -17.000043869018555
    9. '_iters' → logprob: -17.125043869018555
    10. '```' → logprob: -17.750043869018555

Token 324: '))' (ID: 915)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010259227827191353
    2. '))' → logprob: -4.88525915145874
    3. ')]' → logprob: -6.01025915145874
    4. ' )' → logprob: -9.260259628295898
    5. '())' → logprob: -10.385259628295898
    6. ')])' → logprob: -10.385259628295898
    7. '])' → logprob: -11.385259628295898
    8. '()' → logprob: -11.635259628295898
    9. '   ' → logprob: -12.385259628295898
    10. ')
' → logprob: -12.510259628295898

Token 325: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03374263271689415
    2. 'for' → logprob: -3.408742666244507
    3. ')' → logprob: -9.283742904663086
    4. ' ' → logprob: -13.408742904663086
    5. '	for' → logprob: -13.408742904663086
    6. ']' → logprob: -15.033742904663086
    7. ')]' → logprob: -15.783742904663086
    8. '   ' → logprob: -16.158742904663086
    9. '[' → logprob: -16.408742904663086
    10. ' )' → logprob: -16.533742904663086

Token 326: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.00019197762594558299
    2. ' _' → logprob: -8.625191688537598
    3. '_range' → logprob: -12.000191688537598
    4. ' range' → logprob: -12.625191688537598
    5. 'n' → logprob: -13.625191688537598
    6. 'range' → logprob: -14.500191688537598
    7. '_n' → logprob: -14.750191688537598
    8. ' n' → logprob: -15.000191688537598
    9. '_]' → logprob: -15.750191688537598
    10. '_
' → logprob: -16.125192642211914

Token 327: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0008697715820744634
    2. ' range' → logprob: -7.2508697509765625
    3. '(range' → logprob: -9.375869750976562
    4. '_' → logprob: -10.125869750976562
    5. '_range' → logprob: -10.375869750976562
    6. 'n' → logprob: -12.750869750976562
    7. '(' → logprob: -15.000869750976562
    8. '	range' → logprob: -15.250869750976562
    9. '(n' → logprob: -15.750869750976562
    10. '_n' → logprob: -15.750869750976562

Token 328: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001934469910338521
    2. ' range' → logprob: -6.25193452835083
    3. '(range' → logprob: -12.626934051513672
    4. 'n' → logprob: -13.126934051513672
    5. '_range' → logprob: -15.376934051513672
    6. '_' → logprob: -15.501934051513672
    7. '	range' → logprob: -17.126934051513672
    8. 'r' → logprob: -18.001934051513672
    9. '
' → logprob: -18.626934051513672
    10. '_n' → logprob: -18.876934051513672

Token 329: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.009824798442423344
    2. '(n' → logprob: -4.634824752807617
    3. ' n' → logprob: -9.634824752807617
    4. '
' → logprob: -13.384824752807617
    5. ' (' → logprob: -14.259824752807617
    6. '   ' → logprob: -15.009824752807617
    7. '(' → logprob: -15.134824752807617
    8. ')' → logprob: -15.884824752807617
    9. ' ' → logprob: -16.009824752807617
    10. ')n' → logprob: -16.259824752807617

Token 330: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -1.735893965815194e-05
    2. ')]
' → logprob: -11.625017166137695
    3. ')' → logprob: -12.500017166137695
    4. ']' → logprob: -13.250017166137695
    5. ')]

' → logprob: -13.875017166137695
    6. ' )' → logprob: -14.125017166137695
    7. ')]
' → logprob: -14.875017166137695
    8. '   ' → logprob: -15.750017166137695
    9. ')])' → logprob: -16.000017166137695
    10. '])]' → logprob: -16.125017166137695

Token 331: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0341348797082901
    2. '
' → logprob: -3.409134864807129
    3. '        
' → logprob: -8.159134864807129
    4. '   ' → logprob: -9.284134864807129
    5. 'adj' → logprob: -9.409134864807129
    6. '    
' → logprob: -11.284134864807129
    7. '  
' → logprob: -12.284134864807129
    8. '```' → logprob: -12.659134864807129
    9. ' adj' → logprob: -13.409134864807129
    10. '       
' → logprob: -13.909134864807129

Token 332: ' #' (ID: 1069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.043129127472639084
    2. '#' (adapté à ' #') → logprob: -3.1681292057037354
    3. '       ' → logprob: -9.793128967285156
    4. 'blue' → logprob: -9.918128967285156
    5. '   ' → logprob: -11.668128967285156
    6. ' adj' → logprob: -12.293128967285156
    7. '           ' → logprob: -12.418128967285156
    8. '        
' → logprob: -12.918128967285156
    9. ' #' → logprob: -14.418128967285156
    10. '
' → logprob: -14.418128967285156

Token 333: ' On' (ID: 2160)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0796205922961235
    2. '#' → logprob: -2.579620599746704
    3. 'blue' → logprob: -7.329620361328125
    4. '   ' → logprob: -10.329620361328125
    5. 'Adj' → logprob: -12.329620361328125
    6. ' adj' → logprob: -12.329620361328125
    7. '       ' → logprob: -12.579620361328125
    8. 'edges' → logprob: -12.579620361328125
    9. '
' → logprob: -12.954620361328125
    10. '           ' → logprob: -13.329620361328125

Token 334: ' va' (ID: 3423)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -1.1368470191955566
    2. 'adj' → logprob: -1.3868470191955566
    3. '       ' → logprob: -1.8868470191955566
    4. ' adj' → logprob: -2.0118470191955566
    5. 'prime' → logprob: -3.7618470191955566
    6. '=' → logprob: -3.8868470191955566
    7. ' =' → logprob: -4.136847019195557
    8. ' #' → logprob: -4.261847019195557
    9. '   ' → logprob: -4.386847019195557
    10. '           ' → logprob: -5.011847019195557

Token 335: ' construire' (ID: 92473)
  Prédit: ' construire'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' construire' → logprob: -0.011592607945203781
    2. ' créer' → logprob: -4.886592388153076
    3. 'build' → logprob: -6.136592388153076
    4. 'construct' → logprob: -8.011592864990234
    5. ' construir' → logprob: -8.011592864990234
    6. '   ' → logprob: -8.136592864990234
    7. '#' → logprob: -8.261592864990234
    8. ' ' → logprob: -8.636592864990234
    9. ' constru' → logprob: -9.261592864990234
    10. 'contin' → logprob: -9.761592864990234

Token 336: ' un' (ID: 537)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.1919000744819641
    2. 'l' → logprob: -1.9419000148773193
    3. 'un' → logprob: -4.066900253295898
    4. ' un' → logprob: -4.816900253295898
    5. 'une' → logprob: -6.191900253295898
    6. ' adj' → logprob: -6.441900253295898
    7. ' l' → logprob: -6.941900253295898
    8. 'a' → logprob: -7.691900253295898
    9. 'le' → logprob: -8.566900253295898
    10. ' une' → logprob: -8.816900253295898

Token 337: ' grap' (ID: 60955)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.34480586647987366
    2. 'graph' → logprob: -1.7198058366775513
    3. 'gr' → logprob: -2.344805955886841
    4. ' grap' → logprob: -4.469805717468262
    5. ' adj' → logprob: -5.719805717468262
    6. ' adjacency' → logprob: -6.969805717468262
    7. ' graph' → logprob: -7.344805717468262
    8. 'g' → logprob: -8.969805717468262
    9. 'd' → logprob: -9.844805717468262
    10. 'b' → logprob: -10.219805717468262

Token 338: 'he' (ID: 273)
  Prédit: 'he'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'he' → logprob: -0.14857985079288483
    2. 'h' → logprob: -2.0235798358917236
    3. 'aphe' → logprob: -5.273580074310303
    4. '       ' → logprob: -8.898579597473145
    5. 'ph' → logprob: -9.023579597473145
    6. '   ' → logprob: -9.023579597473145
    7. 'heme' → logprob: -9.023579597473145
    8. 'phe' → logprob: -10.148579597473145
    9. 'hé' → logprob: -10.148579597473145
    10. '#' → logprob: -10.148579597473145

Token 339: ' bip' (ID: 54467)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.36988621950149536
    2. '   ' → logprob: -2.4948861598968506
    3. ' adj' → logprob: -2.4948861598968506
    4. ' bip' → logprob: -2.6198861598968506
    5. 'b' → logprob: -2.9948861598968506
    6. ' adjacency' → logprob: -5.11988639831543
    7. '(adj' → logprob: -5.24488639831543
    8. ' d' → logprob: -6.36988639831543
    9. '_adj' → logprob: -6.36988639831543
    10. 'd' → logprob: -6.61988639831543

Token 340: 'art' (ID: 497)
  Prédit: 'art'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.015838798135519028
    2. 'arti' → logprob: -4.390838623046875
    3. 'ar' → logprob: -6.390838623046875
    4. '       ' → logprob: -7.265838623046875
    5. 'arte' → logprob: -7.890838623046875
    6. '   ' → logprob: -8.890838623046875
    7. 'raph' → logprob: -9.015838623046875
    8. '           ' → logprob: -10.140838623046875
    9. 'arat' → logprob: -10.265838623046875
    10. 'ur' → logprob: -10.390838623046875

Token 341: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.11701836436986923
    2. 'art' → logprob: -2.242018461227417
    3. 'ar' → logprob: -6.117018222808838
    4. 'arte' → logprob: -6.742018222808838
    5. 'arti' → logprob: -8.617018699645996
    6. 'ate' → logprob: -9.367018699645996
    7. 'it' → logprob: -9.617018699645996
    8. 'rt' → logprob: -9.992018699645996
    9. 'r' → logprob: -10.117018699645996
    10. 'ité' → logprob: -10.492018699645996

Token 342: ' où' (ID: 15113)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.38314247131347656
    2. ' adj' → logprob: -1.8831424713134766
    3. ',' → logprob: -2.6331424713134766
    4. '   ' → logprob: -3.1331424713134766
    5. '       ' → logprob: -3.8831424713134766
    6. '.' → logprob: -4.758142471313477
    7. ' avec' → logprob: -5.008142471313477
    8. ' où' → logprob: -5.633142471313477
    9. ' adjacency' → logprob: -6.133142471313477
    10. ' where' → logprob: -6.383142471313477

Token 343: ':
' (ID: 734)
  Prédit: ' les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' les' → logprob: -1.0258578062057495
    2. ' chaque' → logprob: -1.0258578062057495
    3. ' edges' → logprob: -2.400857925415039
    4. ' blue' → logprob: -3.525857925415039
    5. 'for' → logprob: -3.650857925415039
    6. ' each' → logprob: -3.775857925415039
    7. 'adj' → logprob: -3.775857925415039
    8. ' for' → logprob: -3.900857925415039
    9. '#' → logprob: -4.275857925415039
    10. ' adj' → logprob: -4.275857925415039

Token 344: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.007013140711933374
    2. ' blue' → logprob: -6.257013320922852
    3. 'adj' → logprob: -6.257013320922852
    4. ' adj' → logprob: -6.507013320922852
    5. '   ' → logprob: -7.257013320922852
    6. '#' → logprob: -7.757013320922852
    7. ' adjacency' → logprob: -8.632013320922852
    8. ' #' → logprob: -9.132013320922852
    9. 'blue' → logprob: -9.757013320922852
    10. ' ' → logprob: -10.382013320922852

Token 345: ' #' (ID: 1069)
  Prédit: ' adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.683541476726532
    2. '       ' → logprob: -1.3085415363311768
    3. 'adj' → logprob: -1.5585415363311768
    4. ' adjacency' → logprob: -5.183541297912598
    5. '   ' → logprob: -5.308541297912598
    6. '#' (adapté à ' #') → logprob: -6.308541297912598
    7. ' #' → logprob: -7.808541297912598
    8. '        ' → logprob: -7.933541297912598
    9. '        
' → logprob: -8.558541297912598
    10. ' ' → logprob: -8.683541297912598

Token 346: ' Chaque' (ID: 94758)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.0071832300163805485
    2. '#' → logprob: -5.382183074951172
    3. ' adj' → logprob: -6.257183074951172
    4. '       ' → logprob: -8.007183074951172
    5. 'blue' → logprob: -8.882183074951172
    6. '   ' → logprob: -9.257183074951172
    7. ' adjacency' → logprob: -10.882183074951172
    8. ' blue' → logprob: -11.132183074951172
    9. ' #' → logprob: -11.632183074951172
    10. '
' → logprob: -12.007183074951172

Token 347: ' bleu' (ID: 85778)
  Prédit: ' blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' blue' → logprob: -0.3644842505455017
    2. 'blue' → logprob: -2.1144843101501465
    3. ' bleu' → logprob: -2.3644843101501465
    4. '_blue' → logprob: -2.4894843101501465
    5. '_' → logprob: -5.9894843101501465
    6. '_ble' → logprob: -6.2394843101501465
    7. 'ble' → logprob: -6.3644843101501465
    8. ' _' → logprob: -7.6144843101501465
    9. 'u' → logprob: -9.239483833312988
    10. ' i' → logprob: -9.239483833312988

Token 348: ' est' (ID: 893)
  Prédit: '_card'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_card' → logprob: -0.6713994741439819
    2. '_' → logprob: -1.171399474143982
    3. '_cards' → logprob: -1.921399474143982
    4. '_ble' → logprob: -5.0463995933532715
    5. ' _' → logprob: -5.1713995933532715
    6. '_blue' → logprob: -5.1713995933532715
    7. '_cart' → logprob: -5.9213995933532715
    8. '_c' → logprob: -6.4213995933532715
    9. ' ' → logprob: -6.4213995933532715
    10. '_index' → logprob: -6.4213995933532715

Token 349: ' un' (ID: 537)
  Prédit: 'connect'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'connect' → logprob: -0.20127570629119873
    2. 'un' → logprob: -2.7012758255004883
    3. 'adj' → logprob: -2.7012758255004883
    4. 'lié' → logprob: -3.8262758255004883
    5. 'une' → logprob: -4.826275825500488
    6. 'index' → logprob: -4.951275825500488
    7. 're' → logprob: -5.451275825500488
    8. ' connecté' → logprob: -5.826275825500488
    9. ' connect' → logprob: -7.576275825500488
    10. ' reli' → logprob: -7.576275825500488

Token 350: ' noe' (ID: 49921)
  Prédit: 'som'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'som' → logprob: -0.6395244598388672
    2. 'no' → logprob: -2.014524459838867
    3. 'indice' → logprob: -2.014524459838867
    4. ' sommet' → logprob: -2.514524459838867
    5. 's' → logprob: -3.014524459838867
    6. 'n' → logprob: -3.639524459838867
    7. ' noe' → logprob: -3.764524459838867
    8. 'index' → logprob: -4.139524459838867
    9. 'node' → logprob: -6.389524459838867
    10. 'vertex' → logprob: -6.514524459838867

Token 351: 'ud' (ID: 527)
  Prédit: 'ud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ud' → logprob: -0.0017909705638885498
    2. 'd' → logprob: -6.376791000366211
    3. 'u' → logprob: -9.501791000366211
    4. ' ud' → logprob: -13.001791000366211
    5. 'уд' → logprob: -13.376791000366211
    6. 'uds' → logprob: -13.501791000366211
    7. '#' → logprob: -13.626791000366211
    8. '```' → logprob: -13.876791000366211
    9. '\xc2' → logprob: -14.251791000366211
    10. '{}' → logprob: -14.501791000366211

Token 352: ' à' (ID: 1221)
  Prédit: ' de'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -1.3963537216186523
    2. ' bleu' → logprob: -1.5213537216186523
    3. ' à' → logprob: -1.8963537216186523
    4. ' gauche' → logprob: -2.1463537216186523
    5. ' on' → logprob: -2.2713537216186523
    6. '   ' → logprob: -3.6463537216186523
    7. ' coté' → logprob: -3.8963537216186523
    8. '_left' → logprob: -3.8963537216186523
    9. ' dans' → logprob: -4.396353721618652
    10. '_ble' → logprob: -4.646353721618652

Token 353: ' gauche' (ID: 58367)
  Prédit: ' gauche'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' gauche' → logprob: -0.8323887586593628
    2. 'g' → logprob: -1.5823887586593628
    3. 'part' → logprob: -1.9573887586593628
    4. '0' → logprob: -3.0823888778686523
    5. ' ' → logprob: -3.2073888778686523
    6. 'l' → logprob: -3.2073888778686523
    7. 'index' → logprob: -3.4573888778686523
    8. 'indice' → logprob: -3.5823888778686523
    9. ' index' → logprob: -4.832388877868652
    10. ' part' → logprob: -5.082388877868652

Token 354: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3400517702102661
    2. ',' → logprob: -1.3400517702102661
    3. ' (' → logprob: -5.090051651000977
    4. '   ' → logprob: -5.340051651000977
    5. ' and' → logprob: -5.590051651000977
    6. '<|end|>' → logprob: -5.590051651000977
    7. ')' → logprob: -5.965051651000977
    8. ',
' → logprob: -6.590051651000977
    9. ' ,' → logprob: -6.590051651000977
    10. '.' → logprob: -7.965051651000977

Token 355: '0' (ID: 15)
  Prédit: 'index'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'index' → logprob: -0.8760865330696106
    2. 'indices' → logprob: -1.2510864734649658
    3. ' index' → logprob: -2.126086473464966
    4. ')' → logprob: -3.376086473464966
    5. ' indices' → logprob: -3.501086473464966
    6. '#' → logprob: -4.126086711883545
    7. '),' → logprob: -4.251086711883545
    8. 'range' → logprob: -4.501086711883545
    9. 'indice' → logprob: -4.501086711883545
    10. '0' → logprob: -4.626086711883545

Token 356: '..' (ID: 485)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011668718419969082
    2. '),' → logprob: -5.386668682098389
    3. ' )' → logprob: -5.511668682098389
    4. ',' → logprob: -6.886668682098389
    5. ')
' → logprob: -7.011668682098389
    6. '   ' → logprob: -8.261669158935547
    7. ')m' → logprob: -8.636669158935547
    8. ' à' → logprob: -9.386669158935547
    9. '...' → logprob: -9.761669158935547
    10. '       ' → logprob: -10.011669158935547

Token 357: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.018153805285692215
    2. ' m' → logprob: -4.018153667449951
    3. '   ' → logprob: -13.39315414428711
    4. ')m' → logprob: -13.39315414428711
    5. ')' → logprob: -14.89315414428711
    6. '	m' → logprob: -15.64315414428711
    7. '(m' → logprob: -15.89315414428711
    8. ' ' → logprob: -16.01815414428711
    9. '<m' → logprob: -17.39315414428711
    10. ' ' → logprob: -17.76815414428711

Token 358: '-' (ID: 12)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.34948718547821045
    2. '-' → logprob: -1.2244871854782104
    3. '),' → logprob: -7.8494873046875
    4. ')
' → logprob: -8.2244873046875
    5. ' -' → logprob: -8.3494873046875
    6. ' )' → logprob: -9.4744873046875
    7. '-)' → logprob: -10.0994873046875
    8. '   ' → logprob: -11.7244873046875
    9. ')-' → logprob: -12.0994873046875
    10. 'm' → logprob: -13.0994873046875

Token 359: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02424221858382225
    2. ')' → logprob: -3.7742421627044678
    3. ' ' → logprob: -7.274242401123047
    4. 'm' → logprob: -8.274242401123047
    5. ' )' → logprob: -11.024242401123047
    6. ' m' → logprob: -11.524242401123047
    7. '   ' → logprob: -11.524242401123047
    8. '-' → logprob: -13.649242401123047
    9. '')' → logprob: -13.649242401123047
    10. '```' → logprob: -13.649242401123047

Token 360: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47443369030952454
    2. ')
' → logprob: -0.9744336605072021
    3. '),' → logprob: -8.224433898925781
    4. ' )
' → logprob: -10.849433898925781
    5. '),
' → logprob: -10.849433898925781
    6. ')

' → logprob: -10.974433898925781
    7. ')
' → logprob: -11.099433898925781
    8. ' )' → logprob: -11.849433898925781
    9. '       ' → logprob: -12.224433898925781
    10. '   ' → logprob: -12.974433898925781

Token 361: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0016373354010283947
    2. ',' → logprob: -7.5016374588012695
    3. '#' → logprob: -7.7516374588012695
    4. '<|end|>' → logprob: -8.37663745880127
    5. ')' → logprob: -8.62663745880127
    6. ' #' → logprob: -9.00163745880127
    7. '   ' → logprob: -10.50163745880127
    8. '        
' → logprob: -11.12663745880127
    9. ' and' → logprob: -11.25163745880127
    10. ' ' → logprob: -11.25163745880127

Token 362: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.021559635177254677
    2. '#' (adapté à ' #') → logprob: -4.021559715270996
    3. ' #' → logprob: -6.146559715270996
    4. '
' → logprob: -7.646559715270996
    5. '   ' → logprob: -8.021559715270996
    6. ' ' → logprob: -8.271559715270996
    7. '        
' → logprob: -9.771559715270996
    8. ',' → logprob: -9.896559715270996
    9. ')' → logprob: -10.396559715270996
    10. '           ' → logprob: -11.396559715270996

Token 363: ' Chaque' (ID: 94758)
  Prédit: 'Chaque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Chaque' → logprob: -0.7098771333694458
    2. '#' → logprob: -1.3348771333694458
    3. ' Chaque' → logprob: -2.0848770141601562
    4. ' chaque' → logprob: -2.7098770141601562
    5. '       ' → logprob: -4.084877014160156
    6. 'Each' → logprob: -4.209877014160156
    7. 'right' → logprob: -5.084877014160156
    8. ' right' → logprob: -5.959877014160156
    9. 'adj' → logprob: -6.084877014160156
    10. '   ' → logprob: -6.209877014160156

Token 364: ' rouge' (ID: 56930)
  Prédit: 'rou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rou' → logprob: -0.4885508120059967
    2. 'red' → logprob: -1.2385507822036743
    3. ' rouge' → logprob: -2.488550901412964
    4. 'v' → logprob: -5.363550662994385
    5. 'no' → logprob: -5.488550662994385
    6. ' red' → logprob: -6.613550662994385
    7. 'right' → logprob: -6.988550662994385
    8. 'n' → logprob: -7.863550662994385
    9. 'ble' → logprob: -7.988550662994385
    10. '```' → logprob: -8.113551139831543

Token 365: ' est' (ID: 893)
  Prédit: 'est'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'est' → logprob: -0.3569207191467285
    2. ' est' → logprob: -1.2319207191467285
    3. ' à' → logprob: -5.7319207191467285
    4. 'à' → logprob: -6.1069207191467285
    5. ' is' → logprob: -6.8569207191467285
    6. ' ' → logprob: -7.3569207191467285
    7. ''est' → logprob: -8.35692024230957
    8. 'is' → logprob: -8.48192024230957
    9. ')' → logprob: -8.48192024230957
    10. ' ' → logprob: -8.98192024230957

Token 366: ' un' (ID: 537)
  Prédit: 'un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'un' → logprob: -0.2522085905075073
    2. ' un' → logprob: -1.5022085905075073
    3. ''un' → logprob: -8.502208709716797
    4. 'une' → logprob: -11.002208709716797
    5. ' ' → logprob: -11.502208709716797
    6. 'a' → logprob: -11.752208709716797
    7. 'à' → logprob: -11.877208709716797
    8. 'v' → logprob: -12.252208709716797
    9. 'n' → logprob: -12.377208709716797
    10. '0' → logprob: -12.502208709716797

Token 367: ' noe' (ID: 49921)
  Prédit: 'no'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'no' → logprob: -0.011334630660712719
    2. 'node' → logprob: -5.386334419250488
    3. ' noe' → logprob: -5.511334419250488
    4. 'n' → logprob: -6.136334419250488
    5. '0' → logprob: -9.011334419250488
    6. 'No' → logprob: -9.386334419250488
    7. '```' → logprob: -9.386334419250488
    8. ' ' → logprob: -10.136334419250488
    9. ' no' → logprob: -10.511334419250488
    10. '
' → logprob: -10.761334419250488

Token 368: 'ud' (ID: 527)
  Prédit: 'ud'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ud' → logprob: -0.027066368609666824
    2. 'd' → logprob: -3.652066469192505
    3. 'œ' → logprob: -8.402066230773926
    4. 'u' → logprob: -8.777066230773926
    5. '#' → logprob: -9.277066230773926
    6. 'e' → logprob: -9.402066230773926
    7. '\xc2' → logprob: -10.027066230773926
    8. '   ' → logprob: -10.277066230773926
    9. 'n' → logprob: -10.902066230773926
    10. 'de' → logprob: -11.027066230773926

Token 369: ' à' (ID: 1221)
  Prédit: ' à'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' à' → logprob: -0.28172263503074646
    2. 'à' → logprob: -1.4067226648330688
    3. ' ' → logprob: -8.906723022460938
    4. '   ' → logprob: -9.531723022460938
    5. '#' → logprob: -9.656723022460938
    6. ''à' → logprob: -9.656723022460938
    7. ' ' → logprob: -10.031723022460938
    8. 'a' → logprob: -10.156723022460938
    9. ')' → logprob: -10.156723022460938
    10. ' a' → logprob: -10.906723022460938

Token 370: ' droite' (ID: 61428)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.5094666481018066
    2. 'dro' → logprob: -1.5094666481018066
    3. ' droite' → logprob: -1.7594666481018066
    4. '0' → logprob: -5.759466648101807
    5. ' right' → logprob: -6.509466648101807
    6. '
' → logprob: -7.759466648101807
    7. 'range' → logprob: -8.759466171264648
    8. ' ' → logprob: -8.884466171264648
    9. 'd' → logprob: -9.134466171264648
    10. 'n' → logprob: -9.509466171264648

Token 371: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1148609146475792
    2. '(' → logprob: -2.239861011505127
    3. '       ' → logprob: -6.239861011505127
    4. '#' → logprob: -10.864860534667969
    5. ')' → logprob: -10.989860534667969
    6. '   ' → logprob: -11.739860534667969
    7. ',' → logprob: -11.739860534667969
    8. ' ' → logprob: -11.989860534667969
    9. '[' → logprob: -12.114860534667969
    10. '           ' → logprob: -12.864860534667969

Token 372: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0018380836118012667
    2. 'n' → logprob: -6.751838207244873
    3. 'range' → logprob: -8.001837730407715
    4. ' ' → logprob: -8.876837730407715
    5. '   ' → logprob: -10.126837730407715
    6. ' range' → logprob: -10.251837730407715
    7. ')' → logprob: -10.501837730407715
    8. ' n' → logprob: -10.626837730407715
    9. 'm' → logprob: -10.876837730407715
    10. '       ' → logprob: -11.001837730407715

Token 373: '..' (ID: 485)
  Prédit: '..'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '..' → logprob: -0.001780852908268571
    2. '-' → logprob: -6.376780986785889
    3. '...' → logprob: -9.75178050994873
    4. ')..' → logprob: -11.87678050994873
    5. '
' → logprob: -12.12678050994873
    6. '--' → logprob: -13.25178050994873
    7. '..
' → logprob: -14.25178050994873
    8. '   ' → logprob: -14.37678050994873
    9. ' -' → logprob: -14.50178050994873
    10. '..<' → logprob: -14.62678050994873

Token 374: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00030388421146199107
    2. ' n' → logprob: -8.125304222106934
    3. '(n' → logprob: -13.000304222106934
    4. '   ' → logprob: -13.375304222106934
    5. '
' → logprob: -13.625304222106934
    6. ')n' → logprob: -14.125304222106934
    7. ' ' → logprob: -14.375304222106934
    8. ')' → logprob: -14.500304222106934
    9. 'm' → logprob: -15.375304222106934
    10. '    ' → logprob: -15.875304222106934

Token 375: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -1.8550976164988242e-05
    2. ' -' → logprob: -11.250018119812012
    3. ')' → logprob: -12.250018119812012
    4. ')-' → logprob: -14.375018119812012
    5. '1' → logprob: -16.625019073486328
    6. '-)' → logprob: -16.750019073486328
    7. '   ' → logprob: -18.625019073486328
    8. 'n' → logprob: -19.000019073486328
    9. '[' → logprob: -19.125019073486328
    10. '))' → logprob: -19.375019073486328

Token 376: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.259079363080673e-05
    2. '-' → logprob: -11.625012397766113
    3. ' ' → logprob: -12.875012397766113
    4. 'n' → logprob: -14.750012397766113
    5. '0' → logprob: -15.875012397766113
    6. 'm' → logprob: -16.12501335144043
    7. ')' → logprob: -16.12501335144043
    8. '   ' → logprob: -16.50001335144043
    9. '
' → logprob: -17.43751335144043
    10. '2' → logprob: -17.62501335144043

Token 377: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.010800201445817947
    2. ')
' → logprob: -4.885800361633301
    3. '       ' → logprob: -5.760800361633301
    4. ')
' → logprob: -11.1358003616333
    5. ' )' → logprob: -11.8858003616333
    6. ')

' → logprob: -12.0108003616333
    7. ').' → logprob: -13.0108003616333
    8. '   ' → logprob: -13.1358003616333
    9. '),' → logprob: -13.6358003616333
    10. '#' → logprob: -13.8858003616333

Token 378: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06471921503543854
    2. '
' → logprob: -2.8147192001342773
    3. 'adj' → logprob: -6.564719200134277
    4. '        
' → logprob: -6.814719200134277
    5. '   ' → logprob: -9.689719200134277
    6. ' adj' → logprob: -10.314719200134277
    7. '#' → logprob: -10.314719200134277
    8. '    
' → logprob: -10.439719200134277
    9. '```' → logprob: -10.439719200134277
    10. '  
' → logprob: -10.814719200134277

Token 379: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10810285061597824
    2. 'adj' → logprob: -2.483102798461914
    3. ' adj' → logprob: -4.483102798461914
    4. '
' → logprob: -5.358102798461914
    5. '        
' → logprob: -6.483102798461914
    6. '#' (adapté à ' #') → logprob: -7.858102798461914
    7. ' adjacency' → logprob: -7.983102798461914
    8. '   ' → logprob: -8.233102798461914
    9. '```' → logprob: -9.483102798461914
    10. '_adj' → logprob: -9.733102798461914

Token 380: ' Il' (ID: 5329)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.002546885749325156
    2. '       ' → logprob: -6.252546787261963
    3. ' adj' → logprob: -7.627546787261963
    4. '#' → logprob: -9.377547264099121
    5. '   ' → logprob: -10.127547264099121
    6. '_adj' → logprob: -13.877547264099121
    7. '(adj' → logprob: -14.002547264099121
    8. 'import' → logprob: -14.002547264099121
    9. 'ad' → logprob: -14.127547264099121
    10. '        
' → logprob: -14.252547264099121

Token 381: ' y' (ID: 342)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7791510224342346
    2. ' =' → logprob: -1.0291509628295898
    3. 's' → logprob: -3.02915096282959
    4. 'f' → logprob: -3.52915096282959
    5. 'adj' → logprob: -3.65415096282959
    6. '#' → logprob: -4.15415096282959
    7. '   ' → logprob: -4.40415096282959
    8. ' faut' → logprob: -4.77915096282959
    9. '       ' → logprob: -5.02915096282959
    10. ')' → logprob: -5.65415096282959

Token 382: ' a' (ID: 261)
  Prédit: ' a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.540054202079773
    2. 'a' → logprob: -0.915054202079773
    3. ''a' → logprob: -4.4150543212890625
    4. ' aura' → logprob: -5.6650543212890625
    5. '#' → logprob: -7.4150543212890625
    6. '	a' → logprob: -9.415054321289062
    7. '#a' → logprob: -9.415054321289062
    8. '_a' → logprob: -9.415054321289062
    9. ' ' → logprob: -9.915054321289062
    10. ' have' → logprob: -10.165054321289062

Token 383: ' une' (ID: 2463)
  Prédit: ' un'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' un' → logprob: -0.6476412415504456
    2. ' une' → logprob: -1.0226411819458008
    3. 'une' → logprob: -2.647641181945801
    4. 'un' → logprob: -3.147641181945801
    5. ' an' → logprob: -7.272641181945801
    6. 'des' → logprob: -7.522641181945801
    7. 'edges' → logprob: -8.2726411819458
    8. ' ' → logprob: -8.3976411819458
    9. 'edge' → logprob: -8.3976411819458
    10. '   ' → logprob: -8.6476411819458

Token 384: ' ar' (ID: 646)
  Prédit: 'ar'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ar' → logprob: -0.43883582949638367
    2. ' ar' → logprob: -1.188835859298706
    3. 'are' → logprob: -3.688835859298706
    4. 'edge' → logprob: -4.938835620880127
    5. 'connexion' → logprob: -5.438835620880127
    6. ' are' → logprob: -6.063835620880127
    7. 'adj' → logprob: -6.313835620880127
    8. 'arest' → logprob: -6.688835620880127
    9. 'arre' → logprob: -6.938835620880127
    10. '   ' → logprob: -6.938835620880127

Token 385: 'ête' (ID: 16808)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.08167577534914017
    2. 'c' → logprob: -2.9566757678985596
    3. 'ête' → logprob: -4.456676006317139
    4. 'rete' → logprob: -4.581676006317139
    5. 're' → logprob: -6.331676006317139
    6. 'rc' → logprob: -7.331676006317139
    7. 't' → logprob: -8.08167552947998
    8. 'che' → logprob: -8.45667552947998
    9. 'te' → logprob: -8.45667552947998
    10. '
' → logprob: -8.70667552947998

Token 386: ' entre' (ID: 3853)
  Prédit: ' entre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' entre' → logprob: -1.0042515993118286
    2. ' between' → logprob: -1.2542515993118286
    3. ' ' → logprob: -1.7542515993118286
    4. '<|end|>' → logprob: -1.8792515993118286
    5. ' from' → logprob: -5.879251480102539
    6. 'from' → logprob: -6.004251480102539
    7. 's' → logprob: -6.004251480102539
    8. 'between' → logprob: -6.254251480102539
    9. 'entre' → logprob: -6.629251480102539
    10. '  ' → logprob: -6.754251480102539

Token 387: ' bleu' (ID: 85778)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.9579840302467346
    2. 'u' → logprob: -0.9579840302467346
    3. ' i' → logprob: -2.08298397064209
    4. ' u' → logprob: -2.45798397064209
    5. ' bleu' → logprob: -4.45798397064209
    6. ' blue' → logprob: -5.45798397064209
    7. 'blue' → logprob: -5.45798397064209
    8. 'ble' → logprob: -6.70798397064209
    9. 'b' → logprob: -7.95798397064209
    10. '   ' → logprob: -8.20798397064209

Token 388: ' i' (ID: 575)
  Prédit: '[u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[u' → logprob: -0.22830863296985626
    2. '[i' → logprob: -1.7283086776733398
    3. 'u' → logprob: -4.22830867767334
    4. ' u' → logprob: -4.97830867767334
    5. 'i' → logprob: -6.47830867767334
    6. '[' → logprob: -7.10330867767334
    7. ' [' → logprob: -7.22830867767334
    8. ' i' → logprob: -7.22830867767334
    9. 's' → logprob: -8.22830867767334
    10. '[node' → logprob: -8.35330867767334

Token 389: ' et' (ID: 859)
  Prédit: '[i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.45040974020957947
    2. '[u' → logprob: -1.7004097700119019
    3. '   ' → logprob: -3.2004096508026123
    4. ' if' → logprob: -3.4504096508026123
    5. ',' → logprob: -3.4504096508026123
    6. '[' → logprob: -4.200409889221191
    7. ' et' → logprob: -4.200409889221191
    8. 'if' → logprob: -4.325409889221191
    9. ' ' → logprob: -4.950409889221191
    10. ' and' → logprob: -5.200409889221191

Token 390: ' rouge' (ID: 56930)
  Prédit: 'rou'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rou' → logprob: -0.4291877746582031
    2. ' rouge' → logprob: -1.0541877746582031
    3. ' j' → logprob: -9.179187774658203
    4. 'j' → logprob: -9.554187774658203
    5. '```' → logprob: -9.679187774658203
    6. 'red' → logprob: -9.929187774658203
    7. ' rouges' → logprob: -10.179187774658203
    8. '   ' → logprob: -10.304187774658203
    9. ' ' → logprob: -10.679187774658203
    10. ' red' → logprob: -11.054187774658203

Token 391: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.06237521395087242
    2. 'j' → logprob: -2.81237530708313
    3. ' i' → logprob: -8.68737506866455
    4. '[j' → logprob: -8.81237506866455
    5. 'i' → logprob: -10.18737506866455
    6. ' ' → logprob: -10.43737506866455
    7. '_j' → logprob: -12.18737506866455
    8. '   ' → logprob: -12.43737506866455
    9. '[' → logprob: -12.81237506866455
    10. '	j' → logprob: -13.06237506866455

Token 392: ' si' (ID: 1784)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5789056420326233
    2. 'if' → logprob: -1.0789055824279785
    3. ' si' → logprob: -3.2039055824279785
    4. '       ' → logprob: -3.4539055824279785
    5. 'si' → logprob: -4.0789055824279785
    6. ' s' → logprob: -5.3289055824279785
    7. 's' → logprob: -6.4539055824279785
    8. ' iff' → logprob: -6.7039055824279785
    9. 'iff' → logprob: -7.2039055824279785
    10. '   ' → logprob: -7.3289055824279785

Token 393: ' gcd' (ID: 106918)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.1162916049361229
    2. 'len' → logprob: -2.2412915229797363
    3. 'blue' → logprob: -6.366291522979736
    4. 'math' → logprob: -7.366291522979736
    5. 'not' → logprob: -7.616291522979736
    6. ' prime' → logprob: -8.116291999816895
    7. '   ' → logprob: -8.616291999816895
    8. ' len' → logprob: -9.991291999816895
    9. 'g' → logprob: -10.616291999816895
    10. '(len' → logprob: -10.741291999816895

Token 394: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.957014556974173e-05
    2. ' (' → logprob: -10.000069618225098
    3. '(
' → logprob: -12.000069618225098
    4. 'blue' → logprob: -12.000069618225098
    5. ')' → logprob: -13.125069618225098
    6. '_blue' → logprob: -13.375069618225098
    7. '```' → logprob: -13.375069618225098
    8. '(i' → logprob: -14.125069618225098
    9. '(g' → logprob: -14.375069618225098
    10. '(`' → logprob: -14.500069618225098

Token 395: 'blue' (ID: 18789)
  Prédit: 'blue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.25758522748947144
    2. '(' → logprob: -1.5075852870941162
    3. ' blue' → logprob: -5.382585048675537
    4. ')' → logprob: -7.507585048675537
    5. ' (' → logprob: -8.257585525512695
    6. 'ble' → logprob: -9.507585525512695
    7. '(
' → logprob: -10.257585525512695
    8. '   ' → logprob: -10.507585525512695
    9. ' bleu' → logprob: -10.632585525512695
    10. ' ' → logprob: -11.507585525512695

Token 396: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -0.0013692846987396479
    2. '[i' → logprob: -6.876369476318359
    3. '[' → logprob: -9.00136947631836
    4. '(i' → logprob: -9.37636947631836
    5. ')' → logprob: -10.50136947631836
    6. '(' → logprob: -10.50136947631836
    7. '_' → logprob: -11.37636947631836
    8. 's' → logprob: -11.62636947631836
    9. '```' → logprob: -12.00136947631836
    10. '   ' → logprob: -12.12636947631836

Token 397: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.019754089415073395
    2. '[' → logprob: -4.019753932952881
    3. '(i' → logprob: -6.644753932952881
    4. '[j' → logprob: -9.519754409790039
    5. '(' → logprob: -9.644754409790039
    6. '[
' → logprob: -10.019754409790039
    7. ' [' → logprob: -10.394754409790039
    8. ')' → logprob: -10.894754409790039
    9. ')[' → logprob: -10.894754409790039
    10. '   ' → logprob: -11.394754409790039

Token 398: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17550881206989288
    2. '[j' → logprob: -2.550508737564087
    3. '[' → logprob: -2.675508737564087
    4. '),' → logprob: -4.675508975982666
    5. ')' → logprob: -6.300508975982666
    6. ' ,' → logprob: -7.050508975982666
    7. '[i' → logprob: -7.425508975982666
    8. '],' → logprob: -7.425508975982666
    9. '   ' → logprob: -8.300508499145508
    10. '[next' → logprob: -9.925508499145508

Token 399: ' red' (ID: 3592)
  Prédit: ' red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.28117358684539795
    2. 'red' → logprob: -1.406173586845398
    3. ')' → logprob: -11.781173706054688
    4. ' ' → logprob: -12.656173706054688
    5. '    ' → logprob: -13.031173706054688
    6. ' blue' → logprob: -13.156173706054688
    7. '   ' → logprob: -13.406173706054688
    8. 'blue' → logprob: -13.781173706054688
    9. '(red' → logprob: -13.906173706054688
    10. '_red' → logprob: -14.593673706054688

Token 400: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -2.7372048862162046e-05
    2. '[j' → logprob: -10.625027656555176
    3. '[' → logprob: -14.625027656555176
    4. '[i' → logprob: -15.000027656555176
    5. 'cards' → logprob: -15.000027656555176
    6. '```' → logprob: -15.250027656555176
    7. ')_' → logprob: -15.500027656555176
    8. ')' → logprob: -15.500027656555176
    9. 'Cards' → logprob: -15.625027656555176
    10. '[_' → logprob: -15.875027656555176

Token 401: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.000204851632588543
    2. '[' → logprob: -8.750205039978027
    3. '[
' → logprob: -11.125205039978027
    4. ')' → logprob: -12.000205039978027
    5. '
' → logprob: -12.000205039978027
    6. ' [' → logprob: -12.375205039978027
    7. '   ' → logprob: -12.625205039978027
    8. 'j' → logprob: -12.875205039978027
    9. '[i' → logprob: -12.875205039978027
    10. '```' → logprob: -13.125205039978027

Token 402: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0038830959238111973
    2. '])' → logprob: -5.628882884979248
    3. ')>' → logprob: -9.253883361816406
    4. '))' → logprob: -9.378883361816406
    5. '())' → logprob: -10.378883361816406
    6. '[j' → logprob: -10.878883361816406
    7. ')==' → logprob: -11.003883361816406
    8. ')!=' → logprob: -11.253883361816406
    9. '[i' → logprob: -11.753883361816406
    10. '})' → logprob: -11.878883361816406

Token 403: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.3752554655075073
    2. ' >' → logprob: -1.3752554655075073
    3. ')' → logprob: -3.000255584716797
    4. ')>' → logprob: -4.750255584716797
    5. '   ' → logprob: -7.375255584716797
    6. '()>' → logprob: -8.375255584716797
    7. '">' → logprob: -8.625255584716797
    8. ' ' → logprob: -8.625255584716797
    9. ' )' → logprob: -9.375255584716797
    10. '()' → logprob: -10.125255584716797

Token 404: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.018151583150029182
    2. ' ' → logprob: -4.018151760101318
    3. '   ' → logprob: -13.89315128326416
    4. ' ' → logprob: -15.01815128326416
    5. '  ' → logprob: -15.64315128326416
    6. '0' → logprob: -16.393152236938477
    7. '```' → logprob: -16.393152236938477
    8. '>' → logprob: -17.143152236938477
    9. '    ' → logprob: -17.893152236938477
    10. '     ' → logprob: -18.018152236938477

Token 405: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.635164754698053e-05
    2. ' ' → logprob: -9.625066757202148
    3. '0' → logprob: -15.875066757202148
    4. '   ' → logprob: -16.75006675720215
    5. '```' → logprob: -18.37506675720215
    6. ' ' → logprob: -18.50006675720215
    7. '  ' → logprob: -19.12506675720215
    8. '=' → logprob: -20.00006675720215
    9. '>' → logprob: -20.00006675720215
    10. '	' → logprob: -20.12506675720215

Token 406: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.031122179701924324
    2. '
' → logprob: -3.5311222076416016
    3. '        
' → logprob: -6.906122207641602
    4. ',' → logprob: -9.281122207641602
    5. '<|end|>' → logprob: -9.281122207641602
    6. '  
' → logprob: -10.031122207641602
    7. '.' → logprob: -10.656122207641602
    8. '\n' → logprob: -10.656122207641602
    9. '    
' → logprob: -10.906122207641602
    10. ')' → logprob: -10.906122207641602

Token 407: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011392037384212017
    2. '
' → logprob: -4.511392116546631
    3. '        
' → logprob: -8.886391639709473
    4. 'adj' → logprob: -9.261391639709473
    5. '   ' → logprob: -9.636391639709473
    6. ' adj' → logprob: -11.261391639709473
    7. '    
' → logprob: -11.261391639709473
    8. '  
' → logprob: -12.011391639709473
    9. '```' → logprob: -12.511391639709473
    10. ' 
' → logprob: -13.511391639709473

Token 408: ' #' (ID: 1069)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.018643829971551895
    2. '       ' → logprob: -4.018643856048584
    3. 'import' → logprob: -8.268643379211426
    4. ' adj' → logprob: -8.518643379211426
    5. 'from' → logprob: -10.893643379211426
    6. '   ' → logprob: -11.393643379211426
    7. '
' → logprob: -12.893643379211426
    8. '        
' → logprob: -13.268643379211426
    9. '#' (adapté à ' #') → logprob: -13.518643379211426
    10. 'ad' → logprob: -14.393643379211426

Token 409: ' Pour' (ID: 13931)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -8.399378566537052e-05
    2. '#' → logprob: -9.750083923339844
    3. ' adj' → logprob: -11.625083923339844
    4. 'from' → logprob: -12.000083923339844
    5. '   ' → logprob: -12.375083923339844
    6. 'import' → logprob: -13.125083923339844
    7. '       ' → logprob: -13.250083923339844
    8. 'Adj' → logprob: -14.125083923339844
    9. '           ' → logprob: -14.875083923339844
    10. 'def' → logprob: -14.875083923339844

Token 410: ' accél' (ID: 152966)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.15755394101142883
    2. ' adj' → logprob: -2.1575539112091064
    3. 'i' → logprob: -3.6575539112091064
    4. ' i' → logprob: -5.5325541496276855
    5. '_' → logprob: -9.282553672790527
    6. '_adj' → logprob: -9.532553672790527
    7. ' construire' → logprob: -9.657553672790527
    8. 'blue' → logprob: -9.657553672790527
    9. ' adjacency' → logprob: -10.282553672790527
    10. ' blue' → logprob: -11.157553672790527

Token 411: 'érer' (ID: 29097)
  Prédit: 'érer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'érer' → logprob: -0.0034152281004935503
    2. 'er' → logprob: -5.878415107727051
    3. 'erer' → logprob: -7.503415107727051
    4. 'rer' → logprob: -10.37841510772705
    5. 'è' → logprob: -12.25341510772705
    6. 'é' → logprob: -12.37841510772705
    7. '   ' → logprob: -12.62841510772705
    8. 'ér' → logprob: -12.75341510772705
    9. 'éer' → logprob: -12.75341510772705
    10. 'ération' → logprob: -13.25341510772705

Token 412: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 413: ' on' (ID: 402)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.011531091295182705
    2. 'from' → logprob: -5.761530876159668
    3. '#' → logprob: -6.011530876159668
    4. 'import' → logprob: -6.511530876159668
    5. 'prime' → logprob: -6.761530876159668
    6. 'blue' → logprob: -6.761530876159668
    7. '   ' → logprob: -7.636530876159668
    8. 'def' → logprob: -8.261530876159668
    9. '       ' → logprob: -8.511530876159668
    10. 'g' → logprob: -8.511530876159668

Token 414: ' peut' (ID: 9216)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -1.723587989807129
    2. 'from' → logprob: -1.973587989807129
    3. 'import' → logprob: -2.098587989807129
    4. 'prime' → logprob: -2.223587989807129
    5. 'build' → logprob: -2.473587989807129
    6. '#' → logprob: -2.598587989807129
    7. 'create' → logprob: -3.348587989807129
    8. 'blue' → logprob: -3.348587989807129
    9. 'for' → logprob: -3.473587989807129
    10. 'factor' → logprob: -3.848587989807129

Token 415: ' pré' (ID: 9424)
  Prédit: 'pre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'pre' → logprob: -1.032685399055481
    2. 'pré' → logprob: -1.407685399055481
    3. 'import' → logprob: -2.1576852798461914
    4. 'util' → logprob: -2.5326852798461914
    5. 'from' → logprob: -2.6576852798461914
    6. 'pr' → logprob: -3.2826852798461914
    7. 'build' → logprob: -4.032685279846191
    8. 'def' → logprob: -4.282685279846191
    9. 'factor' → logprob: -4.407685279846191
    10. 'optim' → logprob: -4.532685279846191

Token 416: '-cal' (ID: 84920)
  Prédit: 'compute'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'compute' → logprob: -0.34763458371162415
    2. 'calcul' → logprob: -1.4726345539093018
    3. 'comput' → logprob: -3.8476345539093018
    4. 'cal' → logprob: -4.597634792327881
    5. 'factor' → logprob: -4.597634792327881
    6. 'calc' → logprob: -4.972634792327881
    7. 'calculate' → logprob: -4.972634792327881
    8. 'c' → logprob: -6.347634792327881
    9. 'computed' → logprob: -6.472634792327881
    10. 'com' → logprob: -6.847634792327881

Token 417: 'cul' (ID: 2885)
  Prédit: 'cul'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cul' → logprob: -0.0008391655283048749
    2. 'c' → logprob: -7.8758392333984375
    3. 'uler' → logprob: -8.875839233398438
    4. 'cule' → logprob: -9.125839233398438
    5. 'ul' → logprob: -10.125839233398438
    6. '#' → logprob: -10.250839233398438
    7. '```' → logprob: -11.375839233398438
    8. '-' → logprob: -11.375839233398438
    9. 'culator' → logprob: -11.625839233398438
    10. ' cul' → logprob: -11.625839233398438

Token 418: 'er' (ID: 259)
  Prédit: 'er'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'er' → logprob: -0.017034761607646942
    2. 'uler' → logprob: -4.142034530639648
    3. 'ul' → logprob: -7.517034530639648
    4. '#' → logprob: -8.767034530639648
    5. 'uer' → logprob: -9.017034530639648
    6. 'cul' → logprob: -10.017034530639648
    7. 'ate' → logprob: -10.767034530639648
    8. '```' → logprob: -11.267034530639648
    9. 'rer' → logprob: -11.517034530639648
    10. 'l' → logprob: -11.767034530639648

Token 419: ' les' (ID: 1341)
  Prédit: 'les'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'les' → logprob: -0.5981923937797546
    2. 'prime' → logprob: -1.2231924533843994
    3. 'the' → logprob: -3.3481924533843994
    4. 'f' → logprob: -3.3481924533843994
    5. 'la' → logprob: -3.4731924533843994
    6. 'factor' → logprob: -4.22319221496582
    7. 'fact' → logprob: -4.22319221496582
    8. ' les' → logprob: -4.34819221496582
    9. 'le' → logprob: -5.47319221496582
    10. ' prime' → logprob: -5.97319221496582

Token 420: ' facteurs' (ID: 119657)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.6259496808052063
    2. 'prime' → logprob: -1.2509496212005615
    3. 'f' → logprob: -1.8759496212005615
    4. 'fact' → logprob: -4.625949859619141
    5. 'factor' → logprob: -5.125949859619141
    6. 'adj' → logprob: -5.500949859619141
    7. 'red' → logprob: -6.000949859619141
    8. 'pr' → logprob: -7.125949859619141
    9. '#' → logprob: -7.375949859619141
    10. 'g' → logprob: -8.25094985961914

Token 421: ' premiers' (ID: 59140)
  Prédit: 'prem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prem' → logprob: -0.0015759251546114683
    2. ' premiers' → logprob: -6.626575946807861
    3. 'ble' → logprob: -9.126575469970703
    4. '_p' → logprob: -10.126575469970703
    5. '_' → logprob: -10.501575469970703
    6. 'prime' → logprob: -10.626575469970703
    7. '_ble' → logprob: -10.876575469970703
    8. 'pr' → logprob: -12.626575469970703
    9. 'prim' → logprob: -12.751575469970703
    10. ' ble' → logprob: -13.001575469970703

Token 422: ' de' (ID: 334)
  Prédit: 'ble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ble' → logprob: -0.9768283367156982
    2. 'blue' → logprob: -1.2268283367156982
    3. 'des' → logprob: -1.8518283367156982
    4. 'de' → logprob: -2.8518283367156982
    5. 'prime' → logprob: -3.1018283367156982
    6. ' des' → logprob: -3.8518283367156982
    7. '   ' → logprob: -4.726828575134277
    8. 'for' → logprob: -5.226828575134277
    9. 'red' → logprob: -5.476828575134277
    10. '_blue' → logprob: -5.601828575134277

Token 423: ' toutes' (ID: 17502)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.15925489366054535
    2. 'each' → logprob: -2.659254789352417
    3. 'all' → logprob: -3.159254789352417
    4. ' blue' → logprob: -4.034255027770996
    5. 'red' → logprob: -5.534255027770996
    6. 'les' → logprob: -5.909255027770996
    7. 'ch' → logprob: -6.159255027770996
    8. 'ble' → logprob: -6.659255027770996
    9. ' each' → logprob: -6.659255027770996
    10. ' chaque' → logprob: -7.034255027770996

Token 424: ' cartes' (ID: 70753)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.039099596440792084
    2. 'ble' → logprob: -3.91409969329834
    3. ' blue' → logprob: -4.28909969329834
    4. 'cards' → logprob: -6.28909969329834
    5. 'les' → logprob: -6.78909969329834
    6. ' bleu' → logprob: -7.66409969329834
    7. 'la' → logprob: -8.16409969329834
    8. ' cartes' → logprob: -8.78909969329834
    9. 'card' → logprob: -9.16409969329834
    10. '(' → logprob: -9.53909969329834

Token 425: '
' (ID: 198)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.8984056115150452
    2. '       ' → logprob: -1.1484055519104004
    3. ' blue' → logprob: -2.1484055519104004
    4. '   ' → logprob: -2.2734055519104004
    5. '_blue' → logprob: -3.3984055519104004
    6. 'ble' → logprob: -4.7734055519104
    7. ' bleu' → logprob: -5.3984055519104
    8. ',' → logprob: -5.6484055519104
    9. '.' → logprob: -7.1484055519104
    10. 'prime' → logprob: -7.2734055519104

Token 426: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8273584246635437
    2. ' blue' → logprob: -1.0773584842681885
    3. 'blue' → logprob: -1.7023584842681885
    4. '   ' → logprob: -4.202358245849609
    5. 'prime' → logprob: -4.702358245849609
    6. ' prime' → logprob: -5.577358245849609
    7. ' bleu' → logprob: -5.702358245849609
    8. 'factor' → logprob: -5.952358245849609
    9. ' primes' → logprob: -6.827358245849609
    10. 'ble' → logprob: -7.077358245849609

Token 427: ' #' (ID: 1069)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.024879073724150658
    2. ' blue' → logprob: -4.649878978729248
    3. '       ' → logprob: -4.899878978729248
    4. 'prime' → logprob: -5.524878978729248
    5. '   ' → logprob: -5.774878978729248
    6. 'factor' → logprob: -8.899879455566406
    7. 'fact' → logprob: -9.024879455566406
    8. 'f' → logprob: -9.149879455566406
    9. '_blue' → logprob: -9.899879455566406
    10. ' prime' → logprob: -11.274879455566406

Token 428: ' Ensuite' (ID: 113884)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.023875167593359947
    2. 'prime' → logprob: -4.3988752365112305
    3. ' blue' → logprob: -4.7738752365112305
    4. '       ' → logprob: -6.6488752365112305
    5. '   ' → logprob: -7.0238752365112305
    6. 'f' → logprob: -8.02387523651123
    7. 'fact' → logprob: -8.89887523651123
    8. 'factor' → logprob: -9.52387523651123
    9. ' prime' → logprob: -10.02387523651123
    10. '_blue' → logprob: -10.89887523651123

Token 429: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6378675699234009
    2. 'blue' → logprob: -1.1378675699234009
    3. ' blue' → logprob: -2.1378674507141113
    4. ',' → logprob: -4.887867450714111
    5. '   ' → logprob: -5.137867450714111
    6. 'prime' → logprob: -5.137867450714111
    7. 'factor' → logprob: -5.262867450714111
    8. '#' → logprob: -6.012867450714111
    9. ' bleu' → logprob: -6.762867450714111
    10. 'f' → logprob: -7.012867450714111

Token 430: ' peut' (ID: 9216)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.9260804653167725
    2. '#' → logprob: -1.6760804653167725
    3. 'continue' → logprob: -2.0510804653167725
    4. 'blue' → logprob: -2.4260804653167725
    5. 'prem' → logprob: -3.0510804653167725
    6. 'factor' → logprob: -3.1760804653167725
    7. 'def' → logprob: -3.3010804653167725
    8. 'f' → logprob: -3.8010804653167725
    9. 'pr' → logprob: -4.801080703735352
    10. 'can' → logprob: -4.926080703735352

Token 431: ' comparer' (ID: 125081)
  Prédit: 'build'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'build' → logprob: -1.3244612216949463
    2. 'adj' → logprob: -1.6994612216949463
    3. 'blue' → logprob: -2.1994612216949463
    4. 'for' → logprob: -2.1994612216949463
    5. 'factor' → logprob: -2.3244612216949463
    6. '#' → logprob: -2.5744612216949463
    7. 'continue' → logprob: -3.0744612216949463
    8. 'create' → logprob: -3.8244612216949463
    9. 'prime' → logprob: -4.074460983276367
    10. 'util' → logprob: -4.699460983276367

Token 432: ' intersections' (ID: 143513)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.2252526581287384
    2. ' blue' → logprob: -2.600252628326416
    3. 'prime' → logprob: -3.350252628326416
    4. 'les' → logprob: -3.600252628326416
    5. ' les' → logprob: -4.475252628326416
    6. 'the' → logprob: -4.475252628326416
    7. 'f' → logprob: -5.100252628326416
    8. '   ' → logprob: -5.350252628326416
    9. 'factor' → logprob: -5.475252628326416
    10. 'for' → logprob: -5.975252628326416

Token 433: ' de' (ID: 334)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3525904715061188
    2. '       ' → logprob: -2.102590560913086
    3. 'blue' → logprob: -2.852590560913086
    4. ' blue' → logprob: -3.102590560913086
    5. 'ble' → logprob: -4.352590560913086
    6. ' =' → logprob: -4.477590560913086
    7. ' des' → logprob: -4.727590560913086
    8. ',' → logprob: -5.477590560913086
    9. ' bleu' → logprob: -5.602590560913086
    10. ' of' → logprob: -5.852590560913086

Token 434: ' facteurs' (ID: 119657)
  Prédit: 'prime'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'prime' → logprob: -0.6500903367996216
    2. 'f' → logprob: -1.5250903367996216
    3. 'blue' → logprob: -1.5250903367996216
    4. ' prime' → logprob: -3.900090217590332
    5. ' blue' → logprob: -5.025090217590332
    6. 'factor' → logprob: -5.275090217590332
    7. 'sets' → logprob: -5.650090217590332
    8. ' factors' → logprob: -5.900090217590332
    9. 'fact' → logprob: -5.900090217590332
    10. 'set' → logprob: -7.025090217590332

Token 435: ' premiers' (ID: 59140)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 436: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0079245800152421
    2. ' blue' → logprob: -5.632924556732178
    3. 'blue' → logprob: -6.007924556732178
    4. '
' → logprob: -7.882924556732178
    5. ',' → logprob: -8.007925033569336
    6. ' bleu' → logprob: -8.382925033569336
    7. '_blue' → logprob: -8.632925033569336
    8. '        
' → logprob: -8.632925033569336
    9. '   ' → logprob: -9.132925033569336
    10. 'ble' → logprob: -9.382925033569336

Token 437: ' décider' (ID: 155719)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5353779196739197
    2. ' i' → logprob: -1.9103779792785645
    3. ' chaque' → logprob: -2.2853779792785645
    4. ' construire' → logprob: -2.9103779792785645
    5. 'each' → logprob: -4.2853779792785645
    6. 'blue' → logprob: -4.5353779792785645
    7. 'les' → logprob: -4.5353779792785645
    8. ' each' → logprob: -4.7853779792785645
    9. ' déterminer' → logprob: -4.7853779792785645
    10. 'fast' → logprob: -5.0353779792785645

Token 438: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.054819658398628235
    2. ' if' → logprob: -3.9298195838928223
    3. ' de' → logprob: -4.554819583892822
    4. ' des' → logprob: -4.804819583892822
    5. 'if' → logprob: -5.054819583892822
    6. ' si' → logprob: -6.179819583892822
    7. '   ' → logprob: -6.929819583892822
    8. ' d' → logprob: -6.929819583892822
    9. '#' → logprob: -7.304819583892822
    10. 'import' → logprob: -7.554819583892822

Token 439: ' tester' (ID: 51819)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 440: ' gcd' (ID: 106918)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.6842175126075745
    2. 'l' → logprob: -2.6842174530029297
    3. ' if' → logprob: -2.6842174530029297
    4. 'g' → logprob: -3.1842174530029297
    5. ' la' → logprob: -3.5592174530029297
    6. 'la' → logprob: -3.5592174530029297
    7. '       ' → logprob: -3.6842174530029297
    8. 'les' → logprob: -3.6842174530029297
    9. 'import' → logprob: -3.8092174530029297
    10. '   ' → logprob: -3.8092174530029297

Token 441: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6640472412109375
    2. '   ' → logprob: -1.9140472412109375
    3. 'def' → logprob: -2.7890472412109375
    4. '(' → logprob: -3.1640472412109375
    5. 's' → logprob: -3.4140472412109375
    6. '_prime' → logprob: -3.5390472412109375
    7. 'prime' → logprob: -3.5390472412109375
    8. '.' → logprob: -4.0390472412109375
    9. '_' → logprob: -4.0390472412109375
    10. 'for' → logprob: -4.2890472412109375

Token 442: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012240608222782612
    2. '   ' → logprob: -5.637240409851074
    3. 'blue' → logprob: -5.887240409851074
    4. 'prime' → logprob: -6.637240409851074
    5. '
' → logprob: -6.762240409851074
    6. '        
' → logprob: -6.762240409851074
    7. ' blue' → logprob: -7.137240409851074
    8. ' prime' → logprob: -8.887240409851074
    9. 'factor' → logprob: -8.887240409851074
    10. '    
' → logprob: -9.137240409851074

Token 443: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.8029334545135498
    2. 'blue' → logprob: -1.3029334545135498
    3. ' blue' → logprob: -1.5529334545135498
    4. 'prime' → logprob: -3.30293345451355
    5. 'fact' → logprob: -4.677933692932129
    6. 'f' → logprob: -5.302933692932129
    7. ' prime' → logprob: -5.302933692932129
    8. 'factor' → logprob: -5.427933692932129
    9. '   ' → logprob: -5.552933692932129
    10. ' factors' → logprob: -6.552933692932129

Token 444: ' Mais' (ID: 13880)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 445: ' de' (ID: 334)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1836466789245605
    2. 'on' → logprob: -1.3086466789245605
    3. ' on' → logprob: -1.8086466789245605
    4. '#' → logprob: -3.5586466789245605
    5. 'pour' → logprob: -3.6836466789245605
    6. ' for' → logprob: -3.6836466789245605
    7. 'le' → logprob: -3.9336466789245605
    8. ' ici' → logprob: -3.9336466789245605
    9. ' vu' → logprob: -4.1836466789245605
    10. 'dans' → logprob: -4.3086466789245605

Token 446: ' base' (ID: 3611)
  Prédit: 'f'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'f' → logprob: -1.0450466871261597
    2. 'ja' → logprob: -1.9200466871261597
    3. 'jà' → logprob: -2.045046806335449
    4. 'ux' → logprob: -2.795046806335449
    5. '#' → logprob: -3.170046806335449
    6. 'main' → logprob: -3.295046806335449
    7. 's' → logprob: -3.545046806335449
    8. 'plus' → logprob: -4.170046806335449
    9. 't' → logprob: -4.170046806335449
    10. 'l' → logprob: -4.420046806335449

Token 447: ' on' (ID: 402)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.48637330532073975
    2. 'import' → logprob: -2.3613734245300293
    3. ':' → logprob: -2.4863734245300293
    4. '       ' → logprob: -2.7363734245300293
    5. ',' → logprob: -3.3613734245300293
    6. ' for' → logprob: -3.8613734245300293
    7. 'on' → logprob: -3.9863734245300293
    8. ' on' → logprob: -3.9863734245300293
    9. 'def' → logprob: -4.611373424530029
    10. '   ' → logprob: -4.736373424530029

Token 448: ' va' (ID: 3423)
  Prédit: 'pe'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pe' → logprob: -0.9289264678955078
    2. ' peut' → logprob: -1.3039264678955078
    3. ' va' → logprob: -1.9289264678955078
    4. 'va' → logprob: -3.428926467895508
    5. 'continue' → logprob: -3.803926467895508
    6. ' continue' → logprob: -4.178926467895508
    7. 'pour' → logprob: -4.178926467895508
    8. 'for' → logprob: -4.303926467895508
    9. 'f' → logprob: -4.303926467895508
    10. 'can' → logprob: -5.053926467895508

Token 449: ' faire' (ID: 8119)
  Prédit: 'faire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'faire' → logprob: -0.3416197896003723
    2. 'contin' → logprob: -1.9666197299957275
    3. 'util' → logprob: -2.8416197299957275
    4. 'just' → logprob: -3.5916197299957275
    5. ' utiliser' → logprob: -4.716619968414307
    6. ' continuer' → logprob: -5.216619968414307
    7. 'for' → logprob: -5.216619968414307
    8. 'tester' → logprob: -5.216619968414307
    9. 're' → logprob: -5.341619968414307
    10. 'calcul' → logprob: -5.466619968414307

Token 450: ' un' (ID: 537)
  Prédit: 'direct'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'direct' → logprob: -0.5414903163909912
    2. 'une' → logprob: -1.9164903163909912
    3. 'simple' → logprob: -2.416490316390991
    4. 'le' → logprob: -2.916490316390991
    5. 'un' → logprob: -3.041490316390991
    6. 'la' → logprob: -3.791490316390991
    7. 'cela' → logprob: -4.16649055480957
    8. 'for' → logprob: -5.41649055480957
    9. '```' → logprob: -5.41649055480957
    10. 'les' → logprob: -5.66649055480957

Token 451: ' test' (ID: 1746)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.23356305062770844
    2. 'simple' → logprob: -2.60856294631958
    3. 'import' → logprob: -2.98356294631958
    4. 'g' → logprob: -3.98356294631958
    5. 'pass' → logprob: -4.35856294631958
    6. 'br' → logprob: -4.48356294631958
    7. ' for' → logprob: -4.48356294631958
    8. ' simple' → logprob: -4.60856294631958
    9. 'double' → logprob: -5.10856294631958
    10. ':' → logprob: -5.98356294631958

Token 452: ' gcd' (ID: 106918)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 453: ' direct' (ID: 2823)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011552656069397926
    2. 'adj' → logprob: -4.636552810668945
    3. '
' → logprob: -7.261552810668945
    4. '        
' → logprob: -7.636552810668945
    5. ' adj' → logprob: -8.511552810668945
    6. '#' → logprob: -9.011552810668945
    7. ' adjacency' → logprob: -9.511552810668945
    8. 'import' → logprob: -10.011552810668945
    9. '   ' → logprob: -10.136552810668945
    10. '```' → logprob: -11.011552810668945

Token 454: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02365514263510704
    2. '
' → logprob: -3.8986551761627197
    3. '        
' → logprob: -6.148654937744141
    4. 'adj' → logprob: -8.02365493774414
    5. ',' → logprob: -9.14865493774414
    6. ' adjacency' → logprob: -9.64865493774414
    7. '#' → logprob: -9.89865493774414
    8. '<|end|>' → logprob: -10.27365493774414
    9. ' adj' → logprob: -10.46115493774414
    10. '```' → logprob: -10.46115493774414

Token 455: 'possible' (ID: 50714)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.19142068922519684
    2. 'for' → logprob: -2.441420793533325
    3. '       ' → logprob: -2.691420793533325
    4. ' for' → logprob: -5.566420555114746
    5. '           ' → logprob: -5.816420555114746
    6. 'import' → logprob: -5.941420555114746
    7. '):' → logprob: -5.941420555114746
    8. ' )' → logprob: -6.691420555114746
    9. '#' → logprob: -7.191420555114746
    10. 'pour' → logprob: -7.441420555114746

Token 456: ' car' (ID: 1669)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2761131227016449
    2. 'import' → logprob: -3.1511130332946777
    3. ',' → logprob: -3.2761130332946777
    4. ' mais' → logprob: -3.4011130332946777
    5. ' but' → logprob: -3.5261130332946777
    6. ' for' → logprob: -4.151113033294678
    7. 'for' → logprob: -4.776113033294678
    8. 'd' → logprob: -5.151113033294678
    9. ' pour' → logprob: -5.151113033294678
    10. ' ici' → logprob: -5.276113033294678

Token 457: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4785762429237366
    2. 'les' → logprob: -1.8535761833190918
    3. 'le' → logprob: -2.478576183319092
    4. ' les' → logprob: -3.353576183319092
    5. ' m' → logprob: -3.978576183319092
    6. 'lim' → logprob: -4.478576183319092
    7. 'la' → logprob: -4.603576183319092
    8. 'max' → logprob: -4.853576183319092
    9. ' le' → logprob: -4.978576183319092
    10. 'pas' → logprob: -5.353576183319092

Token 458: ',n' (ID: 18103)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 459: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.2275778204202652
    2. ' <=' → logprob: -1.727577805519104
    3. '   ' → logprob: -4.3525776863098145
    4. ')' → logprob: -5.3525776863098145
    5. ' and' → logprob: -5.9775776863098145
    6. '*' → logprob: -7.1025776863098145
    7. '<' → logprob: -7.2275776863098145
    8. '>' → logprob: -7.7275776863098145
    9. 'and' → logprob: -7.7275776863098145
    10. '≤' → logprob: -7.9775776863098145

Token 460: ' ' (ID: 220)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.11116541177034378
    2. '500' → logprob: -3.1111655235290527
    3. '200' → logprob: -3.4861655235290527
    4. ' ' → logprob: -3.9861655235290527
    5. '150' → logprob: -5.236165523529053
    6. '50' → logprob: -6.361165523529053
    7. '300' → logprob: -6.486165523529053
    8. '250' → logprob: -6.986165523529053
    9. '400' → logprob: -7.361165523529053
    10. '10' → logprob: -7.611165523529053

Token 461: '500' (ID: 3234)
  Prédit: '100'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '100' → logprob: -0.2908446490764618
    2. '500' → logprob: -1.7908446788787842
    3. '200' → logprob: -2.790844678878784
    4. '150' → logprob: -4.415844440460205
    5. '400' → logprob: -5.665844440460205
    6. '10' → logprob: -5.790844440460205
    7. '300' → logprob: -6.165844440460205
    8. '250' → logprob: -6.790844440460205
    9. '50' → logprob: -6.915844440460205
    10. '600' → logprob: -8.290844917297363

Token 462: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.001221774611622095
    2. ')
' → logprob: -7.626221656799316
    3. '):' → logprob: -8.001221656799316
    4. ' )' → logprob: -8.751221656799316
    5. ').' → logprob: -9.376221656799316
    6. ')

' → logprob: -10.001221656799316
    7. '       ' → logprob: -10.501221656799316
    8. '0' → logprob: -10.876221656799316
    9. '):
' → logprob: -11.376221656799316
    10. ')
' → logprob: -11.751221656799316

Token 463: ' donc' (ID: 14206)
  Prédit: 'et'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'et' → logprob: -1.5699652433395386
    2. ')' → logprob: -2.319965362548828
    3. '       ' → logprob: -2.319965362548828
    4. 'ce' → logprob: -2.319965362548828
    5. ' ce' → logprob: -2.444965362548828
    6. '   ' → logprob: -2.694965362548828
    7. ' et' → logprob: -2.819965362548828
    8. ' donc' → logprob: -2.819965362548828
    9. '500' → logprob: -3.944965362548828
    10. 'don' → logprob: -3.944965362548828

Token 464: ' max' (ID: 2999)
  Prédit: '250'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '250' → logprob: -0.02729746699333191
    2. '500' → logprob: -4.652297496795654
    3. 'acceptable' → logprob: -4.652297496795654
    4. 'en' → logprob: -7.027297496795654
    5. 'max' → logprob: -7.027297496795654
    6. '100' → logprob: -7.277297496795654
    7. 'calcul' → logprob: -7.777297496795654
    8. 'time' → logprob: -8.027297019958496
    9. 'temps' → logprob: -8.027297019958496
    10. 'import' → logprob: -8.152297019958496

Token 465: ' ' (ID: 220)
  Prédit: '250'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -0.028895694762468338
    2. '500' → logprob: -3.653895616531372
    3. '=' → logprob: -7.028895854949951
    4. '(' → logprob: -8.028895378112793
    5. ' ' → logprob: -8.028895378112793
    6. '*' → logprob: -8.153895378112793
    7. '100' → logprob: -8.653895378112793
    8. '```' → logprob: -8.778895378112793
    9. '   ' → logprob: -9.403895378112793
    10. '251' → logprob: -10.028895378112793

Token 466: '250' (ID: 6911)
  Prédit: '250'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '250' → logprob: -0.26529166102409363
    2. '500' → logprob: -1.765291690826416
    3. '100' → logprob: -3.390291690826416
    4. '10' → logprob: -3.640291690826416
    5. ' ' → logprob: -7.765291690826416
    6. '2' → logprob: -8.515291213989258
    7. '300' → logprob: -8.640291213989258
    8. '(' → logprob: -8.640291213989258
    9. '750' → logprob: -8.640291213989258
    10. '1' → logprob: -9.015291213989258

Token 467: '000' (ID: 1302)
  Prédit: '000'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '000' → logprob: -1.1517960956552997e-05
    2. '_' → logprob: -12.125011444091797
    3. ')' → logprob: -13.500011444091797
    4. '00' → logprob: -13.625011444091797
    5. ',' → logprob: -13.875011444091797
    6. ''' → logprob: -14.250011444091797
    7. '250' → logprob: -14.750011444091797
    8. ' ' → logprob: -14.875011444091797
    9. 'e' → logprob: -15.000011444091797
    10. '*' → logprob: -15.375011444091797

Token 468: ' tests' (ID: 10742)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.022794395685195923
    2. ' )' → logprob: -4.147794246673584
    3. ' edges' → logprob: -5.772794246673584
    4. ' tests' → logprob: -7.272794246673584
    5. 'edges' → logprob: -7.272794246673584
    6. ' ' → logprob: -7.522794246673584
    7. '   ' → logprob: -7.772794246673584
    8. ')
' → logprob: -8.272794723510742
    9. 'tests' → logprob: -8.647794723510742
    10. ' pairs' → logprob: -8.897794723510742

Token 469: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017355133313685656
    2. '):' → logprob: -7.001735687255859
    3. ').' → logprob: -7.501735687255859
    4. ' )' → logprob: -8.75173568725586
    5. ')
' → logprob: -9.75173568725586
    6. ')\' → logprob: -11.37673568725586
    7. '):
' → logprob: -11.75173568725586
    8. '   ' → logprob: -12.00173568725586
    9. ')**' → logprob: -12.12673568725586
    10. ',' → logprob: -12.25173568725586

Token 470: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025448701344430447
    2. 'adj' → logprob: -6.87754487991333
    3. '
' → logprob: -7.12754487991333
    4. '        
' → logprob: -7.37754487991333
    5. '```' → logprob: -10.752544403076172
    6. '    
' → logprob: -11.377544403076172
    7. '   ' → logprob: -11.752544403076172
    8. ' adj' → logprob: -11.752544403076172
    9. '  
' → logprob: -11.877544403076172
    10. ' adjacency' → logprob: -12.377544403076172

Token 471: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.043215442448854446
    2. 'adj' → logprob: -3.16821551322937
    3. '        
' → logprob: -9.29321575164795
    4. ' adj' → logprob: -9.66821575164795
    5. '
' → logprob: -11.16821575164795
    6. '#' (adapté à ' #') → logprob: -11.16821575164795
    7. '   ' → logprob: -11.66821575164795
    8. 'import' → logprob: -12.54321575164795
    9. ' adjacency' → logprob: -12.79321575164795
    10. '_adj' → logprob: -12.91821575164795

Token 472: ' Cela' (ID: 44403)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 473: ' reste' (ID: 26769)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.5891748070716858
    2. '=' → logprob: -1.464174747467041
    3. ' =' → logprob: -2.464174747467041
    4. '   ' → logprob: -3.589174747467041
    5. '#' → logprob: -3.839174747467041
    6. 'continue' → logprob: -3.964174747467041
    7. ' adj' → logprob: -4.339174747467041
    8. 'n' → logprob: -4.964174747467041
    9. 'for' → logprob: -4.964174747467041
    10. 'ad' → logprob: -5.464174747467041

Token 474: ' raisonn' (ID: 144705)
  Prédit: 'acceptable'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'acceptable' → logprob: -0.15355819463729858
    2. 'possible' → logprob: -2.9035582542419434
    3. ' raisonn' → logprob: -4.528558254241943
    4. 'efficient' → logprob: -4.778558254241943
    5. 'raison' → logprob: -4.903558254241943
    6. 'tout' → logprob: -4.903558254241943
    7. 'accept' → logprob: -5.028558254241943
    8. 'perform' → logprob: -5.153558254241943
    9. 'correct' → logprob: -5.153558254241943
    10. 'f' → logprob: -5.653558254241943

Token 475: 'able' (ID: 562)
  Prédit: 'able'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'able' → logprob: -0.03156302869319916
    2. 'ble' → logprob: -3.6565630435943604
    3. 'nable' → logprob: -5.406562805175781
    4. 'e' → logprob: -8.531562805175781
    5. '   ' → logprob: -8.531562805175781
    6. 'ablement' → logprob: -9.031562805175781
    7. 'ant' → logprob: -10.281562805175781
    8. ' able' → logprob: -10.406562805175781
    9. 'nt' → logprob: -10.656562805175781
    10. '```' → logprob: -10.656562805175781

Token 476: '.

' (ID: 364)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0054195658303797245
    2. '
' → logprob: -5.255419731140137
    3. '        
' → logprob: -8.755419731140137
    4. '   ' → logprob: -11.505419731140137
    5. 'adj' → logprob: -11.755419731140137
    6. '    
' → logprob: -12.630419731140137
    7. '
' → logprob: -13.380419731140137
    8. '

' → logprob: -14.130419731140137
    9. '```' → logprob: -14.255419731140137
    10. '           ' → logprob: -14.380419731140137

Token 477: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00032592954812571406
    2. 'adj' → logprob: -9.000326156616211
    3. '        
' → logprob: -9.125326156616211
    4. '
' → logprob: -9.500326156616211
    5. '   ' → logprob: -11.625326156616211
    6. '```' → logprob: -13.000326156616211
    7. '    
' → logprob: -13.250326156616211
    8. ' adj' → logprob: -13.375326156616211
    9. '           ' → logprob: -13.500326156616211
    10. '#' → logprob: -14.500326156616211

Token 478: ' adj' (ID: 20251)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 479: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0297551192343235
    2. ' =' → logprob: -3.529755115509033
    3. '=[' → logprob: -13.029755592346191
    4. '   ' → logprob: -13.779755592346191
    5. '[' → logprob: -14.029755592346191
    6. '=[]' → logprob: -14.654755592346191
    7. '	' → logprob: -17.029754638671875
    8. '＝' → logprob: -17.404754638671875
    9. ' ' → logprob: -17.904754638671875
    10. ' =[' → logprob: -17.904754638671875

Token 480: ' [[]' (ID: 182908)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.006716674659401178
    2. ' [[]' → logprob: -5.006716728210449
    3. '[[' → logprob: -14.38171672821045
    4. ' [' → logprob: -15.13171672821045
    5. '[]' → logprob: -15.25671672821045
    6. '   ' → logprob: -15.50671672821045
    7. '{' → logprob: -17.381715774536133
    8. '[i' → logprob: -18.881715774536133
    9. ' ' → logprob: -19.131715774536133
    10. '[
' → logprob: -19.256715774536133

Token 481: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.3886125981807709
    2. 'for' → logprob: -1.1386126279830933
    3. '(i' → logprob: -7.138612747192383
    4. '       ' → logprob: -8.138612747192383
    5. '[i' → logprob: -8.263612747192383
    6. ']' → logprob: -8.888612747192383
    7. 'i' → logprob: -9.638612747192383
    8. ',' → logprob: -9.888612747192383
    9. ' i' → logprob: -10.013612747192383
    10. '   ' → logprob: -10.138612747192383

Token 482: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3686174154281616
    2. ' range' → logprob: -1.8686174154281616
    3. 'range' → logprob: -1.9936174154281616
    4. ' _' → logprob: -4.868617534637451
    5. 'in' → logprob: -5.368617534637451
    6. ' in' → logprob: -5.368617534637451
    7. '_range' → logprob: -7.368617534637451
    8. 'i' → logprob: -9.618617057800293
    9. '(range' → logprob: -10.243617057800293
    10. '_blue' → logprob: -11.868617057800293

Token 483: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.16640274226665497
    2. 'in' → logprob: -1.9164026975631714
    3. ' range' → logprob: -5.666402816772461
    4. ' in' → logprob: -5.916402816772461
    5. ' ' → logprob: -12.916402816772461
    6. 'm' → logprob: -14.541402816772461
    7. 'blue' → logprob: -14.666402816772461
    8. '(range' → logprob: -14.791402816772461
    9. '   ' → logprob: -15.666402816772461
    10. '  ' → logprob: -15.916402816772461

Token 484: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.011059731245040894
    2. ' range' → logprob: -4.511059761047363
    3. 'blue' → logprob: -11.386059761047363
    4. ' ' → logprob: -15.261059761047363
    5. ' blue' → logprob: -15.761059761047363
    6. '   ' → logprob: -15.886059761047363
    7. '(range' → logprob: -17.011058807373047
    8. '	range' → logprob: -17.261058807373047
    9. '  ' → logprob: -17.511058807373047
    10. '    ' → logprob: -19.261058807373047

Token 485: '(m' (ID: 2145)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00016837897419463843
    2. '(m' → logprob: -9.125168800354004
    3. ' m' → logprob: -9.750168800354004
    4. ')m' → logprob: -14.375168800354004
    5. '   ' → logprob: -15.500168800354004
    6. ')' → logprob: -15.750168800354004
    7. '	m' → logprob: -16.625167846679688
    8. 'range' → logprob: -16.625167846679688
    9. ' (' → logprob: -17.625167846679688
    10. '           ' → logprob: -18.625167846679688

Token 486: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0008548821206204593
    2. ')]
' → logprob: -7.125854969024658
    3. ')]
' → logprob: -10.6258544921875
    4. ')' → logprob: -11.1258544921875
    5. ')]

' → logprob: -11.7508544921875
    6. ' )' → logprob: -12.7508544921875
    7. ']' → logprob: -14.7508544921875
    8. '   ' → logprob: -17.1258544921875
    9. '       ' → logprob: -17.6258544921875
    10. '')]' → logprob: -17.7508544921875

Token 487: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0007300666766241193
    2. 'for' → logprob: -7.750730037689209
    3. ' for' → logprob: -8.375730514526367
    4. '   ' → logprob: -9.625730514526367
    5. '	for' → logprob: -13.500730514526367
    6. '        
' → logprob: -14.375730514526367
    7. '           ' → logprob: -15.250730514526367
    8. '<|end|>' → logprob: -15.250730514526367
    9. '	   ' → logprob: -15.250730514526367
    10. '	' → logprob: -16.500730514526367

Token 488: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0043457369320094585
    2. '       ' → logprob: -5.754345893859863
    3. ' for' → logprob: -6.754345893859863
    4. '   ' → logprob: -13.879345893859863
    5. '	for' → logprob: -14.254345893859863
    6. '```' → logprob: -17.379344940185547
    7. '        
' → logprob: -18.004344940185547
    8. '
' → logprob: -19.754344940185547
    9. 'For' → logprob: -19.754344940185547
    10. '           ' → logprob: -20.004344940185547

Token 489: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.06197104603052139
    2. 'i' → logprob: -2.8119709491729736
    3. '	i' → logprob: -12.936970710754395
    4. 'u' → logprob: -15.311970710754395
    5. ' u' → logprob: -15.436970710754395
    6. ' ' → logprob: -15.936970710754395
    7. '_i' → logprob: -16.06197166442871
    8. '   ' → logprob: -16.81197166442871
    9. '(i' → logprob: -16.81197166442871
    10. ' ' → logprob: -17.06197166442871

Token 490: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014174672774970531
    2. 'in' → logprob: -4.264174461364746
    3. ' ' → logprob: -12.264174461364746
    4. '	in' → logprob: -13.139174461364746
    5. ',' → logprob: -13.514174461364746
    6. '   ' → logprob: -13.889174461364746
    7. 'import' → logprob: -14.139174461364746
    8. '0' → logprob: -14.889174461364746
    9. ' i' → logprob: -15.889174461364746
    10. '_' → logprob: -16.014175415039062

Token 491: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0040785204619169235
    2. ' range' → logprob: -5.504078388214111
    3. '   ' → logprob: -17.004077911376953
    4. ' ' → logprob: -17.129077911376953
    5. '	range' → logprob: -18.504077911376953
    6. '(range' → logprob: -18.879077911376953
    7. 'rang' → logprob: -19.254077911376953
    8. '  ' → logprob: -19.379077911376953
    9. ')' → logprob: -19.629077911376953
    10. 'ange' → logprob: -19.629077911376953

Token 492: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.00418299064040184
    2. 'm' → logprob: -5.504182815551758
    3. '(' → logprob: -9.379182815551758
    4. ' (' → logprob: -11.629182815551758
    5. '   ' → logprob: -12.129182815551758
    6. ' m' → logprob: -12.379182815551758
    7. ')' → logprob: -14.379182815551758
    8. '	m' → logprob: -14.629182815551758
    9. ')m' → logprob: -15.379182815551758
    10. '       ' → logprob: -16.004182815551758

Token 493: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.20186233520507812
    2. '):' → logprob: -1.7018623352050781
    3. '):
' → logprob: -7.826862335205078
    4. '   ' → logprob: -10.201862335205078
    5. '       ' → logprob: -12.576862335205078
    6. ')' → logprob: -12.701862335205078
    7. ' ):
' → logprob: -12.826862335205078
    8. ' ):' → logprob: -13.576862335205078
    9. '):

' → logprob: -13.701862335205078
    10. ':' → logprob: -14.201862335205078

Token 494: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014307129895314574
    2. ' for' → logprob: -6.751430511474609
    3. '   ' → logprob: -8.87643051147461
    4. '       ' → logprob: -9.87643051147461
    5. ':' → logprob: -10.62643051147461
    6. 'for' → logprob: -10.87643051147461
    7. ',' → logprob: -11.37643051147461
    8. ':
' → logprob: -11.87643051147461
    9. '	   ' → logprob: -12.87643051147461
    10. '	       ' → logprob: -13.37643051147461

Token 495: ' bi' (ID: 4424)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07842235267162323
    2. '           ' → logprob: -2.8284223079681396
    3. ' for' → logprob: -4.203422546386719
    4. '   ' → logprob: -6.953422546386719
    5. '       ' → logprob: -7.828422546386719
    6. 'j' → logprob: -11.578422546386719
    7. '               ' → logprob: -12.328422546386719
    8. ' ' → logprob: -12.578422546386719
    9. '	for' → logprob: -12.578422546386719
    10. 'if' → logprob: -14.578422546386719

Token 496: ' =' (ID: 314)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0420124530792236
    2. 'nd' → logprob: -1.6670124530792236
    3. '       ' → logprob: -1.9170124530792236
    4. 'for' → logprob: -3.1670124530792236
    5. 'f' → logprob: -3.2920124530792236
    6. '=' → logprob: -3.2920124530792236
    7. ']' → logprob: -3.4170124530792236
    8. ',' → logprob: -3.6670124530792236
    9. '   ' → logprob: -3.7920124530792236
    10. ' =' → logprob: -4.0420122146606445

Token 497: ' blue' (ID: 9861)
  Prédit: 'blue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'blue' → logprob: -0.009766949340701103
    2. ' blue' → logprob: -4.634767055511475
    3. '   ' → logprob: -11.759766578674316
    4. ' ' → logprob: -13.009766578674316
    5. '  ' → logprob: -15.009766578674316
    6. 'ble' → logprob: -16.009767532348633
    7. 'b' → logprob: -16.259767532348633
    8. '0' → logprob: -16.384767532348633
    9. 'blu' → logprob: -17.259767532348633
    10. '    ' → logprob: -17.384767532348633

Token 498: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -1.3544423381972592e-05
    2. '[i' → logprob: -12.62501335144043
    3. ')_' → logprob: -13.37501335144043
    4. ']_' → logprob: -13.75001335144043
    5. '_' → logprob: -13.87501335144043
    6. 'cards' → logprob: -14.00001335144043
    7. '   ' → logprob: -14.25001335144043
    8. '
' → logprob: -14.50001335144043
    9. 's' → logprob: -14.75001335144043
    10. '[' → logprob: -14.75001335144043

Token 499: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.07558899372816086
    2. '
' → logprob: -3.5755889415740967
    3. '           ' → logprob: -4.325589179992676
    4. '       ' → logprob: -4.450589179992676
    5. ')
' → logprob: -4.700589179992676
    6. '   ' → logprob: -5.450589179992676
    7. ']
' → logprob: -6.450589179992676
    8. ':
' → logprob: -6.950589179992676
    9. ')' → logprob: -7.075589179992676
    10. ']' → logprob: -7.450589179992676

Token 500: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.043710336089134216
    2. ')' → logprob: -3.668710231781006
    3. ']
' → logprob: -4.168710231781006
    4. ' )
' → logprob: -6.918710231781006
    5. ']' → logprob: -8.418710708618164
    6. '       ' → logprob: -8.668710708618164
    7. '):
' → logprob: -9.168710708618164
    8. '           ' → logprob: -9.418710708618164
    9. '])
' → logprob: -9.668710708618164
    10. '   ' → logprob: -9.668710708618164

Token 501: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0011833232128992677
    2. '       ' → logprob: -7.25118350982666
    3. ' for' → logprob: -7.75118350982666
    4. '	       ' → logprob: -11.25118350982666
    5. 'for' → logprob: -11.75118350982666
    6. '   ' → logprob: -11.75118350982666
    7. '	   ' → logprob: -12.37618350982666
    8. '               ' → logprob: -12.87618350982666
    9. ',' → logprob: -13.00118350982666
    10. '		' → logprob: -13.50118350982666

Token 502: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.7241073250770569
    2. '           ' → logprob: -1.099107265472412
    3. ' for' → logprob: -1.724107265472412
    4. '       ' → logprob: -5.724107265472412
    5. '   ' → logprob: -7.724107265472412
    6. '               ' → logprob: -11.84910774230957
    7. '	for' → logprob: -11.97410774230957
    8. ' ' → logprob: -12.47410774230957
    9. '	   ' → logprob: -12.59910774230957
    10. '	       ' → logprob: -12.97410774230957

Token 503: ' j' (ID: 441)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00012368128227535635
    2. ' j' → logprob: -9.000123977661133
    3. '	j' → logprob: -16.125123977661133
    4. '   ' → logprob: -17.000123977661133
    5. '$j' → logprob: -19.500123977661133
    6. '_j' → logprob: -21.625123977661133
    7. ' ' → logprob: -21.750123977661133
    8. ' ' → logprob: -21.875123977661133
    9. '```' → logprob: -21.875123977661133
    10. '    ' → logprob: -22.125123977661133

Token 504: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.004084335640072823
    2. 'in' → logprob: -5.50408411026001
    3. ' ' → logprob: -12.754084587097168
    4. '	in' → logprob: -13.004084587097168
    5. 'import' → logprob: -16.00408363342285
    6. '    ' → logprob: -16.00408363342285
    7. '   ' → logprob: -16.50408363342285
    8. 'n' → logprob: -16.75408363342285
    9. 'In' → logprob: -17.00408363342285
    10. ' ' → logprob: -17.25408363342285

Token 505: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12692894041538239
    2. ' range' → logprob: -2.1269290447235107
    3. '(range' → logprob: -14.37692928314209
    4. 'n' → logprob: -15.62692928314209
    5. '   ' → logprob: -16.751928329467773
    6. ' ' → logprob: -17.001928329467773
    7. '	range' → logprob: -17.001928329467773
    8. ' in' → logprob: -17.751928329467773
    9. 'in' → logprob: -18.626928329467773
    10. '    ' → logprob: -19.626928329467773

Token 506: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.8545109629631042
    2. '(n' → logprob: -1.104511022567749
    3. 'range' → logprob: -1.479511022567749
    4. ' range' → logprob: -4.22951078414917
    5. ' n' → logprob: -7.47951078414917
    6. '(range' → logprob: -8.979511260986328
    7. '       ' → logprob: -10.104511260986328
    8. '   ' → logprob: -10.479511260986328
    9. '           ' → logprob: -10.729511260986328
    10. ' (' → logprob: -11.604511260986328

Token 507: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.28145143389701843
    2. '):' → logprob: -1.4064514636993408
    3. '           ' → logprob: -9.156451225280762
    4. ')' → logprob: -9.531451225280762
    5. '):
' → logprob: -9.656451225280762
    6. '       ' → logprob: -10.906451225280762
    7. '   ' → logprob: -11.156451225280762
    8. '):

' → logprob: -11.406451225280762
    9. '               ' → logprob: -12.906451225280762
    10. ':' → logprob: -13.031451225280762

Token 508: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -7.016616291366518e-05
    2. ':' → logprob: -10.125070571899414
    3. ':
' → logprob: -11.500070571899414
    4. ',' → logprob: -12.500070571899414
    5. ' if' → logprob: -13.000070571899414
    6. '                   ' → logprob: -13.000070571899414
    7. '       ' → logprob: -13.000070571899414
    8. '           ' → logprob: -13.125070571899414
    9. ' :' → logprob: -13.125070571899414
    10. '                
' → logprob: -13.250070571899414

Token 509: ' r' (ID: 428)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.24663540720939636
    2. ' if' → logprob: -1.7466354370117188
    3. 'if' → logprob: -3.2466354370117188
    4. '                   ' → logprob: -5.246635437011719
    5. '           ' → logprob: -11.746635437011719
    6. '                       ' → logprob: -11.996635437011719
    7. '
' → logprob: -12.371635437011719
    8. ',' → logprob: -12.621635437011719
    9. 'If' → logprob: -12.746635437011719
    10. '                
' → logprob: -12.996635437011719

Token 510: 'j' (ID: 73)
  Prédit: 'ed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ed' → logprob: -0.2962336838245392
    2. ' =' → logprob: -2.046233654022217
    3. 'd' → logprob: -3.046233654022217
    4. '_cards' → logprob: -4.046233654022217
    5. 'red' → logprob: -4.171233654022217
    6. ' red' → logprob: -4.171233654022217
    7. '=' → logprob: -4.296233654022217
    8. 'e' → logprob: -6.046233654022217
    9. '   ' → logprob: -6.171233654022217
    10. 'eds' → logprob: -6.546233654022217

Token 511: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34848061203956604
    2. '=' → logprob: -1.2234805822372437
    3. ' ' → logprob: -11.098480224609375
    4. ')' → logprob: -11.848480224609375
    5. '   ' → logprob: -12.223480224609375
    6. '           ' → logprob: -12.723480224609375
    7. '               ' → logprob: -13.723480224609375
    8. '    ' → logprob: -13.973480224609375
    9. '  ' → logprob: -14.473480224609375
    10. '                   ' → logprob: -14.598480224609375

Token 512: ' red' (ID: 3592)
  Prédit: ' red'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' red' → logprob: -0.38687190413475037
    2. 'red' → logprob: -1.1368719339370728
    3. '               ' → logprob: -14.511872291564941
    4. '                   ' → logprob: -15.761872291564941
    5. '           ' → logprob: -16.636871337890625
    6. ' ' → logprob: -16.761871337890625
    7. '   ' → logprob: -16.886871337890625
    8. 'r' → logprob: -17.511871337890625
    9. '                       ' → logprob: -17.636871337890625
    10. '(red' → logprob: -18.386871337890625

Token 513: '_cards' (ID: 101651)
  Prédit: '_cards'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cards' → logprob: -1.5048530030981055e-06
    2. '[j' → logprob: -14.625001907348633
    3. 'cards' → logprob: -14.875001907348633
    4. '_' → logprob: -16.000001907348633
    5. '_j' → logprob: -16.000001907348633
    6. 'r' → logprob: -16.625001907348633
    7. 's' → logprob: -17.000001907348633
    8. '```' → logprob: -17.250001907348633
    9. 'red' → logprob: -17.375001907348633
    10. '_card' → logprob: -17.500001907348633

Token 514: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.00033200893085449934
    2. 'j' → logprob: -8.25033187866211
    3. '               ' → logprob: -10.50033187866211
    4. '                   ' → logprob: -10.50033187866211
    5. '           ' → logprob: -12.62533187866211
    6. '[' → logprob: -13.12533187866211
    7. ' j' → logprob: -13.50033187866211
    8. ' [' → logprob: -13.50033187866211
    9. 'import' → logprob: -13.75033187866211
    10. '```' → logprob: -13.87533187866211

Token 515: ']
' (ID: 1592)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.017471794039011
    2. '               ' → logprob: -4.642471790313721
    3. ')' → logprob: -4.892471790313721
    4. ')
' → logprob: -9.892472267150879
    5. '):
' → logprob: -9.892472267150879
    6. ' )
' → logprob: -10.142472267150879
    7. '           ' → logprob: -10.767472267150879
    8. '                   ' → logprob: -11.392472267150879
    9. ']
' → logprob: -12.517472267150879
    10. ')`
' → logprob: -13.642472267150879

Token 516: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -4.723352049040841e-06
    2. '                
' → logprob: -13.500004768371582
    3. '                   ' → logprob: -13.750004768371582
    4. '
' → logprob: -13.875004768371582
    5. '           ' → logprob: -15.375004768371582
    6. ' if' → logprob: -15.375004768371582
    7. '	           ' → logprob: -16.000003814697266
    8. '              ' → logprob: -16.000003814697266
    9. '			' → logprob: -16.250003814697266
    10. '<|end|>' → logprob: -16.250003814697266

Token 517: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.14316247403621674
    2. ' if' → logprob: -2.143162488937378
    3. 'if' → logprob: -4.143162250518799
    4. '                   ' → logprob: -8.518162727355957
    5. '	           ' → logprob: -11.893162727355957
    6. '			' → logprob: -12.143162727355957
    7. '
' → logprob: -12.393162727355957
    8. ' ' → logprob: -13.518162727355957
    9. '		       ' → logprob: -13.518162727355957
    10. 'If' → logprob: -13.643162727355957

Token 518: ' Si' (ID: 7832)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.11050576716661453
    2. ' if' → logprob: -2.4855058193206787
    3. '               ' → logprob: -3.8605058193206787
    4. '                   ' → logprob: -8.360506057739258
    5. 'If' → logprob: -11.360506057739258
    6. '           ' → logprob: -11.610506057739258
    7. '
' → logprob: -11.985506057739258
    8. 'import' → logprob: -12.735506057739258
    9. '	if' → logprob: -13.110506057739258
    10. '   ' → logprob: -13.360506057739258

Token 519: ' gcd' (ID: 106918)
  Prédit: ' math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.2811824679374695
    2. 'math' → logprob: -1.4061825275421143
    3. '(math' → logprob: -10.656182289123535
    4. ' ' → logprob: -12.906182289123535
    5. '   ' → logprob: -13.031182289123535
    6. '                   ' → logprob: -14.156182289123535
    7. 'import' → logprob: -14.281182289123535
    8. '               ' → logprob: -14.406182289123535
    9. '_math' → logprob: -14.906182289123535
    10. 'Math' → logprob: -15.031182289123535

Token 520: ' >' (ID: 1424)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0001487140398239717
    2. '(' → logprob: -8.87514877319336
    3. ' (' → logprob: -12.12514877319336
    4. '>' → logprob: -13.37514877319336
    5. '   ' → logprob: -15.12514877319336
    6. 'bi' → logprob: -15.25014877319336
    7. '(
' → logprob: -16.00014877319336
    8. ')' → logprob: -16.50014877319336
    9. ' ' → logprob: -16.50014877319336
    10. '(math' → logprob: -16.50014877319336

Token 521: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.02681015245616436
    2. ' ' → logprob: -3.6518101692199707
    3. '(' → logprob: -7.651810169219971
    4. ' (' → logprob: -10.776809692382812
    5. '<|end|>' → logprob: -12.151809692382812
    6. '>' → logprob: -13.526809692382812
    7. ' >' → logprob: -13.776809692382812
    8. ')' → logprob: -13.901809692382812
    9. '   ' → logprob: -14.026809692382812
    10. '  ' → logprob: -14.651809692382812

Token 522: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.946405094116926e-05
    2. ' ' → logprob: -9.500079154968262
    3. '>' → logprob: -12.875079154968262
    4. 'import' → logprob: -14.000079154968262
    5. '(' → logprob: -15.125079154968262
    6. '   ' → logprob: -15.750079154968262
    7. '                   ' → logprob: -15.875079154968262
    8. '               ' → logprob: -16.000080108642578
    9. '=' → logprob: -16.250080108642578
    10. ',' → logprob: -16.625080108642578

Token 523: ' alors' (ID: 17971)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06906135380268097
    2. ' ==' → logprob: -3.694061279296875
    3. '                   ' → logprob: -4.069061279296875
    4. ' !=' → logprob: -5.319061279296875
    5. ':' → logprob: -5.444061279296875
    6. ',' → logprob: -5.444061279296875
    7. ' >' → logprob: -5.569061279296875
    8. ' and' → logprob: -5.819061279296875
    9. '>' → logprob: -6.194061279296875
    10. '==' → logprob: -7.319061279296875

Token 524: ' on' (ID: 402)
  Prédit: ' adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' adj' → logprob: -0.2825622856616974
    2. '                   ' → logprob: -1.782562255859375
    3. 'adj' → logprob: -2.907562255859375
    4. '               ' → logprob: -3.782562255859375
    5. ' gcd' → logprob: -8.532562255859375
    6. '                       ' → logprob: -9.282562255859375
    7. 'import' → logprob: -10.532562255859375
    8. ',' → logprob: -10.532562255859375
    9. '           ' → logprob: -10.782562255859375
    10. '
' → logprob: -11.032562255859375

Token 525: ' peut' (ID: 9216)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -1.6340153217315674
    2. ' adj' → logprob: -1.8840153217315674
    3. ':' → logprob: -2.3840153217315674
    4. '.' → logprob: -2.3840153217315674
    5. '               ' → logprob: -2.5090153217315674
    6. '{
' → logprob: -2.7590153217315674
    7. 'adj' → logprob: -2.7590153217315674
    8. '                   ' → logprob: -3.1340153217315674
    9. ' ajoute' → logprob: -3.2590153217315674
    10. ' continue' → logprob: -3.3840153217315674

Token 526: ' connecter' (ID: 85351)
  Prédit: ' ajouter'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ajouter' → logprob: -1.020469307899475
    2. '                   ' → logprob: -1.145469307899475
    3. '               ' → logprob: -1.895469307899475
    4. ' add' → logprob: -3.8954691886901855
    5. ' créer' → logprob: -3.8954691886901855
    6. ' connecter' → logprob: -3.8954691886901855
    7. 'mettre' → logprob: -4.2704691886901855
    8. 'connect' → logprob: -4.5204691886901855
    9. ' match' → logprob: -4.7704691886901855
    10. 'aj' → logprob: -4.7704691886901855

Token 527: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.3006797432899475
    2. ' adj' → logprob: -2.0506796836853027
    3. '                   ' → logprob: -2.6756796836853027
    4. 'adj' → logprob: -3.3006796836853027
    5. ' (' → logprob: -4.675679683685303
    6. ' if' → logprob: -5.550679683685303
    7. '(adj' → logprob: -5.800679683685303
    8. ',' → logprob: -5.925679683685303
    9. '(i' → logprob: -6.675679683685303
    10. '(' → logprob: -6.675679683685303

Token 528: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00018542143516242504
    2. '                   ' → logprob: -9.750185012817383
    3. ',' → logprob: -10.000185012817383
    4. ' if' → logprob: -10.375185012817383
    5. '                
' → logprob: -10.875185012817383
    6. 'if' → logprob: -12.375185012817383
    7. ' =' → logprob: -12.625185012817383
    8. ' (' → logprob: -12.875185012817383
    9. '                ' → logprob: -13.125185012817383
    10. '(' → logprob: -13.375185012817383

Token 529: ' #' (ID: 1069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.07704976201057434
    2. ' if' → logprob: -2.952049732208252
    3. 'if' → logprob: -3.827049732208252
    4. '                   ' → logprob: -9.45205020904541
    5. '
' → logprob: -10.57705020904541
    6. '                
' → logprob: -11.45205020904541
    7. '           ' → logprob: -11.82705020904541
    8. 'import' → logprob: -12.32705020904541
    9. ',' → logprob: -12.32705020904541
    10. '       ' → logprob: -13.07705020904541

Token 530: ' math' (ID: 13324)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04636377468705177
    2. ' if' → logprob: -3.2963638305664062
    3. 'if' → logprob: -4.796363830566406
    4. '                   ' → logprob: -11.046363830566406
    5. '           ' → logprob: -12.921363830566406
    6. '			' → logprob: -12.921363830566406
    7. '	           ' → logprob: -13.546363830566406
    8. 'import' → logprob: -14.046363830566406
    9. ',' → logprob: -14.171363830566406
    10. 'If' → logprob: -14.296363830566406

Token 531: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.001817862968891859
    2. '.' → logprob: -6.50181770324707
    3. '.sqrt' → logprob: -8.50181770324707
    4. 'import' → logprob: -10.00181770324707
    5. ' .' → logprob: -10.87681770324707
    6. 'g' → logprob: -11.50181770324707
    7. '   ' → logprob: -11.50181770324707
    8. ' gcd' → logprob: -12.12681770324707
    9. '.ceil' → logprob: -12.25181770324707
    10. '```' → logprob: -12.62681770324707

Token 532: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -0.003326480044052005
    2. ' gcd' → logprob: -6.878326416015625
    3. '   ' → logprob: -7.253326416015625
    4. 'g' → logprob: -7.253326416015625
    5. '.g' → logprob: -7.628326416015625
    6. 'c' → logprob: -9.253326416015625
    7. '```' → logprob: -9.628326416015625
    8. 'cf' → logprob: -9.878326416015625
    9. '       ' → logprob: -10.628326416015625
    10. '.cd' → logprob: -11.003326416015625

Token 533: ' est' (ID: 893)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.0001717166742309928
    2. '(' → logprob: -8.875171661376953
    3. ' (' → logprob: -11.375171661376953
    4. ')' → logprob: -12.250171661376953
    5. '>' → logprob: -12.625171661376953
    6. '   ' → logprob: -13.125171661376953
    7. '(
' → logprob: -13.625171661376953
    8. '```' → logprob: -13.625171661376953
    9. '(math' → logprob: -13.625171661376953
    10. '               ' → logprob: -13.875171661376953

Token 534: ' efficace' (ID: 54338)
  Prédit: '(math'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(math' → logprob: -0.4838625490665436
    2. '(' → logprob: -1.1088625192642212
    3. '(b' → logprob: -3.7338626384735107
    4. 'math' → logprob: -3.9838626384735107
    5. ' math' → logprob: -4.858862400054932
    6. ')' → logprob: -6.733862400054932
    7. 'bi' → logprob: -7.608862400054932
    8. '>' → logprob: -7.858862400054932
    9. ' (' → logprob: -8.35886287689209
    10. '(g' → logprob: -8.48386287689209

Token 535: ' en' (ID: 469)
  Prédit: '(b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.012705997563898563
    2. '               ' → logprob: -5.1377058029174805
    3. '(' → logprob: -5.6377058029174805
    4. '                   ' → logprob: -6.2627058029174805
    5. ')' → logprob: -7.6377058029174805
    6. ',' → logprob: -8.38770580291748
    7. '(r' → logprob: -8.38770580291748
    8. '                       ' → logprob: -9.63770580291748
    9. '           ' → logprob: -10.38770580291748
    10. '>' → logprob: -10.38770580291748

Token 536: ' python' (ID: 22752)
  Prédit: ' C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' C' → logprob: -0.9904028177261353
    2. 'C' → logprob: -1.1154028177261353
    3. 'python' → logprob: -2.2404026985168457
    4. 'built' → logprob: -2.6154026985168457
    5. 'builtin' → logprob: -2.9904026985168457
    6. 'c' → logprob: -3.8654026985168457
    7. 'log' → logprob: -4.240402698516846
    8. 'Python' → logprob: -4.365402698516846
    9. ' Python' → logprob: -5.490402698516846
    10. 'import' → logprob: -5.615402698516846

Token 537: ' ' (ID: 220)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.718858540058136
    2. '               ' → logprob: -0.843858540058136
    3. '():
' → logprob: -3.593858480453491
    4. ')' → logprob: -3.843858480453491
    5. ':' → logprob: -4.59385871887207
    6. '():' → logprob: -5.46885871887207
    7. ',' → logprob: -5.59385871887207
    8. '(' → logprob: -5.84385871887207
    9. '):' → logprob: -6.21885871887207
    10. '                   ' → logprob: -6.34385871887207

Token 538: '3' (ID: 18)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.022974062711000443
    2. '()' → logprob: -5.022974014282227
    3. ',' → logprob: -5.397974014282227
    4. '                   ' → logprob: -5.772974014282227
    5. ')' → logprob: -6.022974014282227
    6. ' if' → logprob: -6.272974014282227
    7. ' and' → logprob: -7.147974014282227
    8. 'if' → logprob: -7.272974014282227
    9. ':' → logprob: -7.522974014282227
    10. '           ' → logprob: -7.647974014282227

Token 539: '.' (ID: 13)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2112240195274353
    2. '()' → logprob: -1.71122407913208
    3. ')' → logprob: -5.33622407913208
    4. '()
' → logprob: -7.21122407913208
    5. '():
' → logprob: -7.33622407913208
    6. ',' → logprob: -7.46122407913208
    7. ' if' → logprob: -7.58622407913208
    8. '()>' → logprob: -7.58622407913208
    9. '           ' → logprob: -7.71122407913208
    10. '())' → logprob: -8.336223602294922

Token 540: '5' (ID: 20)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03832191601395607
    2. '           ' → logprob: -4.0383219718933105
    3. ' if' → logprob: -5.0383219718933105
    4. '                   ' → logprob: -5.5383219718933105
    5. ')' → logprob: -6.0383219718933105
    6. 'if' → logprob: -6.2883219718933105
    7. '()' → logprob: -6.6633219718933105
    8. '   ' → logprob: -7.2883219718933105
    9. '       ' → logprob: -7.4133219718933105
    10. '):
' → logprob: -7.6633219718933105

Token 541: '+
' (ID: 29069)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2450224757194519
    2. ')' → logprob: -1.7450225353240967
    3. '()' → logprob: -3.4950225353240967
    4. ',' → logprob: -5.870022296905518
    5. ' and' → logprob: -6.370022296905518
    6. '):
' → logprob: -6.495022296905518
    7. '           ' → logprob: -7.245022296905518
    8. '())' → logprob: -7.245022296905518
    9. '():
' → logprob: -7.245022296905518
    10. ' if' → logprob: -7.370022296905518

Token 542: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -1.3306015716807451e-05
    2. ',' → logprob: -12.12501335144043
    3. ' if' → logprob: -13.00001335144043
    4. '                
' → logprob: -13.12501335144043
    5. '           ' → logprob: -14.25001335144043
    6. ')' → logprob: -14.75001335144043
    7. '	           ' → logprob: -14.87501335144043
    8. '			' → logprob: -14.87501335144043
    9. '                   ' → logprob: -15.12501335144043
    10. '              ' → logprob: -15.25001335144043

Token 543: ' if' (ID: 538)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.08316195756196976
    2. ' if' → logprob: -2.7081620693206787
    3. 'if' (adapté à ' if') → logprob: -4.3331618309021
    4. '                   ' → logprob: -12.708162307739258
    5. '			' → logprob: -12.708162307739258
    6. '           ' → logprob: -13.708162307739258
    7. ',' → logprob: -14.083162307739258
    8. '	           ' → logprob: -14.083162307739258
    9. '	if' → logprob: -14.583162307739258
    10. '   ' → logprob: -14.708162307739258

Token 544: ' math' (ID: 13324)
  Prédit: ' math'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' math' → logprob: -0.02324768900871277
    2. 'math' → logprob: -3.773247718811035
    3. 'Math' → logprob: -13.523247718811035
    4. '(math' → logprob: -14.273247718811035
    5. ' ' → logprob: -15.523247718811035
    6. ' Math' → logprob: -17.02324676513672
    7. '   ' → logprob: -17.02324676513672
    8. '_math' → logprob: -17.39824676513672
    9. 'import' → logprob: -18.52324676513672
    10. '.math' → logprob: -18.52324676513672

Token 545: '.g' (ID: 1940)
  Prédit: '.g'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.g' → logprob: -0.018287600949406624
    2. '.' → logprob: -4.018287658691406
    3. ' .' → logprob: -9.018287658691406
    4. '.sqrt' → logprob: -12.143287658691406
    5. '.gdx' → logprob: -13.393287658691406
    6. '.randint' → logprob: -14.018287658691406
    7. ' gcd' → logprob: -14.018287658691406
    8. ').' → logprob: -14.018287658691406
    9. '   ' → logprob: -14.143287658691406
    10. '.ceil' → logprob: -14.518287658691406

Token 546: 'cd' (ID: 8301)
  Prédit: 'cd'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cd' → logprob: -6.957014556974173e-05
    2. 'g' → logprob: -10.750069618225098
    3. '.g' → logprob: -11.125069618225098
    4. 'c' → logprob: -11.500069618225098
    5. '.cd' → logprob: -11.875069618225098
    6. 'CD' → logprob: -12.375069618225098
    7. 'd' → logprob: -12.625069618225098
    8. '.c' → logprob: -12.750069618225098
    9. 'dc' → logprob: -12.875069618225098
    10. ' gcd' → logprob: -14.625069618225098

Token 547: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.000157293034135364
    2. ' (' → logprob: -9.375157356262207
    3. '(' → logprob: -9.625157356262207
    4. ')' → logprob: -12.625157356262207
    5. ')(' → logprob: -13.625157356262207
    6. '(bl' → logprob: -15.000157356262207
    7. '(bt' → logprob: -15.125157356262207
    8. 'bi' → logprob: -15.250157356262207
    9. '(B' → logprob: -15.750157356262207
    10. '(be' → logprob: -15.875157356262207

Token 548: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.002636183984577656
    2. 'bi' → logprob: -6.752635955810547
    3. '_i' → logprob: -7.627635955810547
    4. '(i' → logprob: -8.252635955810547
    5. '[i' → logprob: -8.627635955810547
    6. '   ' → logprob: -9.502635955810547
    7. '           ' → logprob: -9.752635955810547
    8. '               ' → logprob: -9.877635955810547
    9. '                   ' → logprob: -10.127635955810547
    10. '(b' → logprob: -10.252635955810547

Token 549: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001527717337012291
    2. ',r' → logprob: -6.751527786254883
    3. ' ,' → logprob: -8.626527786254883
    4. 'r' → logprob: -9.376527786254883
    5. ',
' → logprob: -9.876527786254883
    6. ',b' → logprob: -11.376527786254883
    7. ',j' → logprob: -11.751527786254883
    8. '           ' → logprob: -12.126527786254883
    9. '[' → logprob: -12.626527786254883
    10. '               ' → logprob: -13.126527786254883

Token 550: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.0010330495424568653
    2. ' r' → logprob: -6.876032829284668
    3. '   ' → logprob: -15.626032829284668
    4. ' ' → logprob: -16.876033782958984
    5. '	r' → logprob: -17.876033782958984
    6. '                       ' → logprob: -18.376033782958984
    7. '  ' → logprob: -18.376033782958984
    8. '                   ' → logprob: -18.501033782958984
    9. '    ' → logprob: -18.626033782958984
    10. '               ' → logprob: -19.001033782958984

Token 551: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.1875571544806007e-05
    2. '[j' → logprob: -12.000011444091797
    3. 'r' → logprob: -13.750011444091797
    4. ')' → logprob: -13.750011444091797
    5. '_j' → logprob: -13.750011444091797
    6. ' j' → logprob: -14.250011444091797
    7. '   ' → logprob: -14.500011444091797
    8. '```' → logprob: -15.000011444091797
    9. ' ' → logprob: -15.750011444091797
    10. '[' → logprob: -16.375011444091797

Token 552: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -8.554343366995454e-05
    2. ')>' → logprob: -9.375085830688477
    3. ' )' → logprob: -14.875085830688477
    4. '>' → logprob: -15.750085830688477
    5. '   ' → logprob: -15.875085830688477
    6. '）' → logprob: -18.000085830688477
    7. ')
' → logprob: -18.125085830688477
    8. '[' → logprob: -18.250085830688477
    9. '`)' → logprob: -18.750085830688477
    10. ')`' → logprob: -19.000085830688477

Token 553: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.10207444429397583
    2. ' >' → logprob: -2.352074384689331
    3. ')' → logprob: -6.72707462310791
    4. ')>' → logprob: -7.35207462310791
    5. '()>' → logprob: -11.10207462310791
    6. '">' → logprob: -12.72707462310791
    7. '   ' → logprob: -12.72707462310791
    8. ' ' → logprob: -13.10207462310791
    9. ' )' → logprob: -14.22707462310791
    10. '()' → logprob: -14.85207462310791

Token 554: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -17.375051498413086
    4. '```' → logprob: -18.625051498413086
    5. '۱' → logprob: -20.375051498413086
    6. ' ' → logprob: -20.500051498413086
    7. '>' → logprob: -20.625051498413086
    8. '  ' → logprob: -20.875051498413086
    9. '१' → logprob: -21.000051498413086
    10. '１' → logprob: -21.000051498413086

Token 555: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '   ' → logprob: -20.125003814697266
    4. '```' → logprob: -20.625003814697266
    5. '１' → logprob: -21.375003814697266
    6. '>' → logprob: -21.625003814697266
    7. '۱' → logprob: -22.125003814697266
    8. '  ' → logprob: -22.500003814697266
    9. '`' → logprob: -22.812503814697266
    10. ' ' → logprob: -22.812503814697266

Token 556: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.20570984482765198
    2. ':
' → logprob: -1.7057098150253296
    3. '                   ' → logprob: -6.080709934234619
    4. '               ' → logprob: -6.455709934234619
    5. '):
' → logprob: -7.955709934234619
    6. '):' → logprob: -10.205709457397461
    7. '           ' → logprob: -11.080709457397461
    8. '                       ' → logprob: -11.705709457397461
    9. ' :
' → logprob: -12.330709457397461
    10. '():
' → logprob: -12.455709457397461

Token 557: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -8.554343366995454e-05
    2. '                       ' → logprob: -10.250085830688477
    3. '               ' → logprob: -10.875085830688477
    4. ' adj' → logprob: -11.875085830688477
    5. 'adj' → logprob: -12.125085830688477
    6. '                    
' → logprob: -12.250085830688477
    7. '):
' → logprob: -12.750085830688477
    8. ':' → logprob: -13.125085830688477
    9. ',' → logprob: -13.250085830688477
    10. ':
' → logprob: -13.875085830688477

Token 558: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' (adapté à ' adj') → logprob: -0.12827180325984955
    2. ' adj' → logprob: -2.1282718181610107
    3. '                   ' → logprob: -6.628271579742432
    4. '               ' → logprob: -11.00327205657959
    5. '                       ' → logprob: -13.37827205657959
    6. 'ad' → logprob: -14.12827205657959
    7. '(adj' → logprob: -14.25327205657959
    8. '           ' → logprob: -15.25327205657959
    9. ' ' → logprob: -15.50327205657959
    10. '   ' → logprob: -15.62827205657959

Token 559: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -2.1008713702030946e-06
    2. '[u' → logprob: -13.375001907348633
    3. '[' → logprob: -14.500001907348633
    4. ' [' → logprob: -18.125001907348633
    5. '[I' → logprob: -18.875001907348633
    6. '[j' → logprob: -19.500001907348633
    7. 'i' → logprob: -20.375001907348633
    8. '```' → logprob: -21.125001907348633
    9. '[m' → logprob: -21.500001907348633
    10. '
' → logprob: -21.500001907348633

Token 560: '].' (ID: 1651)
  Prédit: '].'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '].' → logprob: -0.0001625379954930395
    2. ').' → logprob: -9.125162124633789
    3. '.append' → logprob: -10.125162124633789
    4. ']' → logprob: -12.375162124633789
    5. '[j' → logprob: -12.375162124633789
    6. '[i' → logprob: -13.375162124633789
    7. '           ' → logprob: -14.000162124633789
    8. '.' → logprob: -14.125162124633789
    9. ' ].' → logprob: -14.125162124633789
    10. '   ' → logprob: -15.000162124633789

Token 561: 'append' (ID: 9132)
  Prédit: 'append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -3.128163257315464e-07
    2. '.append' → logprob: -16.0
    3. ' append' → logprob: -16.0
    4. 'appen' → logprob: -20.75
    5. '	append' → logprob: -20.875
    6. '_append' → logprob: -21.125
    7. 'app' → logprob: -22.375
    8. 'Append' → logprob: -22.375
    9. 'add' → logprob: -23.125
    10. 'push' → logprob: -24.0

Token 562: '(j' (ID: 4997)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.16022635996341705
    2. '(j' → logprob: -1.9102263450622559
    3. ' j' → logprob: -13.160226821899414
    4. '	j' → logprob: -15.410226821899414
    5. '[j' → logprob: -16.535226821899414
    6. '$j' → logprob: -18.035226821899414
    7. ',j' → logprob: -19.160226821899414
    8. '(' → logprob: -19.660226821899414
    9. '(
' → logprob: -19.785226821899414
    10. '_j' → logprob: -20.285226821899414

Token 563: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.248469718324486e-05
    2. ')
' → logprob: -10.750022888183594
    3. ' )' → logprob: -14.750022888183594
    4. '       ' → logprob: -15.125022888183594
    5. '               ' → logprob: -16.625022888183594
    6. '           ' → logprob: -16.750022888183594
    7. '                   ' → logprob: -17.125022888183594
    8. '   ' → logprob: -17.375022888183594
    9. ')return' → logprob: -18.125022888183594
    10. ')

' → logprob: -18.250022888183594

Token 564: '       ' (ID: 309)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 565: ' #' (ID: 1069)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.12774161994457245
    2. '       ' → logprob: -2.127741575241089
    3. '   ' → logprob: -7.752741813659668
    4. ' match' → logprob: -8.127741813659668
    5. '        
' → logprob: -10.252741813659668
    6. '```' → logprob: -11.002741813659668
    7. '           ' → logprob: -11.377741813659668
    8. '
' → logprob: -11.752741813659668
    9. '	match' → logprob: -11.752741813659668
    10. '               ' → logprob: -13.127741813659668

Token 566: ' Maintenant' (ID: 163349)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.0001593195047462359
    2. '       ' → logprob: -9.00015926361084
    3. '#' → logprob: -10.25015926361084
    4. '   ' → logprob: -14.87515926361084
    5. ' match' → logprob: -16.625160217285156
    6. '        
' → logprob: -16.625160217285156
    7. '
' → logprob: -16.750160217285156
    8. 'max' → logprob: -17.500160217285156
    9. '           ' → logprob: -18.000160217285156
    10. '

' → logprob: -19.625160217285156

Token 567: ' on' (ID: 402)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009990987367928028
    2. 'match' → logprob: -4.63499116897583
    3. ' match' → logprob: -9.384990692138672
    4. '   ' → logprob: -9.509990692138672
    5. '#' → logprob: -9.884990692138672
    6. '
' → logprob: -10.884990692138672
    7. '	match' → logprob: -12.884990692138672
    8. '      ' → logprob: -13.634990692138672
    9. '        
' → logprob: -13.634990692138672
    10. '           ' → logprob: -14.009990692138672

Token 568: ' cherche' (ID: 52345)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2198656052350998
    2. 'match' → logprob: -2.344865560531616
    3. '#' → logprob: -2.469865560531616
    4. ' match' → logprob: -5.344865798950195
    5. 'continue' → logprob: -5.594865798950195
    6. '=' → logprob: -6.844865798950195
    7. 'contin' → logprob: -6.969865798950195
    8. '   ' → logprob: -7.094865798950195
    9. ':' → logprob: -7.594865798950195
    10. 'est' → logprob: -7.719865798950195

Token 569: ' le' (ID: 505)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.26116061210632324
    2. 'match' → logprob: -1.6361606121063232
    3. 'le' → logprob: -3.5111606121063232
    4. 'la' → logprob: -6.761160850524902
    5. 'un' → logprob: -7.261160850524902
    6. ' match' → logprob: -7.636160850524902
    7. '#' → logprob: -7.761160850524902
    8. '   ' → logprob: -8.011160850524902
    9. ' le' → logprob: -8.011160850524902
    10. 'les' → logprob: -8.011160850524902

Token 570: ' cou' (ID: 3840)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.21548022329807281
    2. 'result' → logprob: -1.9654802083969116
    3. 'max' → logprob: -2.965480327606201
    4. 'res' → logprob: -6.715480327606201
    5. '#' → logprob: -7.965480327606201
    6. 'matching' → logprob: -8.090479850769043
    7. 'maximum' → logprob: -8.465479850769043
    8. ' match' → logprob: -9.465479850769043
    9. 'cou' → logprob: -10.465479850769043
    10. 'count' → logprob: -11.715479850769043

Token 571: 'pl' (ID: 528)
  Prédit: 'pl'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'pl' → logprob: -0.008467772975564003
    2. 'ple' → logprob: -5.633467674255371
    3. 'pling' → logprob: -6.508467674255371
    4. 'plement' → logprob: -6.758467674255371
    5. 'p' → logprob: -7.258467674255371
    6. 'page' → logprob: -7.258467674255371
    7. 'plant' → logprob: -8.258467674255371
    8. 'v' → logprob: -9.133467674255371
    9. 'pla' → logprob: -9.258467674255371
    10. 'rage' → logprob: -9.508467674255371

Token 572: 'age' (ID: 477)
  Prédit: 'age'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'age' → logprob: -0.0019449377432465553
    2. 'lage' → logprob: -6.3769450187683105
    3. 'page' → logprob: -8.876944541931152
    4. 'ge' → logprob: -10.751944541931152
    5. 'e' → logprob: -10.876944541931152
    6. 'pl' → logprob: -11.126944541931152
    7. 'le' → logprob: -11.251944541931152
    8. 'rage' → logprob: -11.626944541931152
    9. 'mage' → logprob: -12.251944541931152
    10. '   ' → logprob: -12.751944541931152

Token 573: ' maximum' (ID: 10562)
  Prédit: 'maximum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'maximum' → logprob: -0.024240119382739067
    2. 'max' → logprob: -4.024240016937256
    3. ' maximum' → logprob: -5.274240016937256
    4. '       ' → logprob: -7.274240016937256
    5. '   ' → logprob: -8.649240493774414
    6. ' maximal' → logprob: -10.649240493774414
    7. '        
' → logprob: -12.024240493774414
    8. '(max' → logprob: -12.274240493774414
    9. '     ' → logprob: -12.399240493774414
    10. 'Maximum' → logprob: -12.524240493774414

Token 574: ' pour' (ID: 1930)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011097692884504795
    2. 'match' → logprob: -4.8860979080200195
    3. '   ' → logprob: -5.7610979080200195
    4. ' match' → logprob: -8.38609790802002
    5. '(match' → logprob: -9.51109790802002
    6. '	match' → logprob: -10.88609790802002
    7. '           ' → logprob: -12.76109790802002
    8. '        
' → logprob: -13.01109790802002
    9. '      ' → logprob: -13.01109790802002
    10. '```' → logprob: -13.13609790802002

Token 575: ' optimiser' (ID: 195777)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.29891225695610046
    2. 'u' → logprob: -2.423912286758423
    3. 'j' → logprob: -2.923912286758423
    4. 'adj' → logprob: -3.298912286758423
    5. 'i' → logprob: -3.673912286758423
    6. '   ' → logprob: -4.923912048339844
    7. 'max' → logprob: -4.923912048339844
    8. 'match' → logprob: -5.048912048339844
    9. ' v' → logprob: -5.173912048339844
    10. ' u' → logprob: -6.173912048339844

Token 576: ' le' (ID: 505)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.2630401849746704
    2. '       ' → logprob: -1.6380401849746704
    3. 'max' → logprob: -3.888040065765381
    4. ' match' → logprob: -4.388040065765381
    5. 'le' → logprob: -7.138040065765381
    6. 'result' → logprob: -7.388040065765381
    7. '
' → logprob: -8.263040542602539
    8. '#' → logprob: -8.263040542602539
    9. 'matching' → logprob: -8.263040542602539
    10. '        
' → logprob: -8.513040542602539

Token 577: ' nombre' (ID: 9733)
  Prédit: 'nombre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nombre' → logprob: -0.014216157607734203
    2. 'matching' → logprob: -5.38921594619751
    3. 'result' → logprob: -6.01421594619751
    4. 'score' → logprob: -6.13921594619751
    5. 'nb' → logprob: -6.76421594619751
    6. 'match' → logprob: -6.88921594619751
    7. ' nombre' → logprob: -7.13921594619751
    8. '#' → logprob: -7.88921594619751
    9. 'nom' → logprob: -8.139216423034668
    10. 'print' → logprob: -8.389216423034668

Token 578: ' de' (ID: 334)
  Prédit: ' de'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' de' → logprob: -0.5808520913124084
    2. 'de' → logprob: -1.5808520317077637
    3. '       ' → logprob: -1.9558520317077637
    4. 'd' → logprob: -3.8308520317077637
    5. ' of' → logprob: -4.080852031707764
    6. '<|end|>' → logprob: -4.330852031707764
    7. ' d' → logprob: -4.455852031707764
    8. ' des' → logprob: -4.455852031707764
    9. '   ' → logprob: -5.080852031707764
    10. 'of' → logprob: -6.205852031707764

Token 579: ' p' (ID: 275)
  Prédit: 'p'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'p' → logprob: -0.7678693532943726
    2. 'matches' → logprob: -1.7678693532943726
    3. 'app' → logprob: -2.517869472503662
    4. ' p' → logprob: -2.517869472503662
    5. 'match' → logprob: -2.767869472503662
    6. ' matches' → logprob: -3.267869472503662
    7. ' match' → logprob: -3.892869472503662
    8. ' correspond' → logprob: -4.142869472503662
    9. ' app' → logprob: -4.517869472503662
    10. 'cou' → logprob: -4.642869472503662

Token 580: 'aires' (ID: 8507)
  Prédit: 'aires'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'aires' → logprob: -0.07825833559036255
    2. 'airs' → logprob: -3.2032582759857178
    3. 'a' → logprob: -4.828258514404297
    4. 'ar' → logprob: -4.828258514404297
    5. 'r' → logprob: -5.203258514404297
    6. 'air' → logprob: -5.953258514404297
    7. 'oints' → logprob: -6.328258514404297
    8. 'ai' → logprob: -6.578258514404297
    9. 'aire' → logprob: -6.828258514404297
    10. 'art' → logprob: -7.078258514404297

Token 581: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011864767409861088
    2. 'match' → logprob: -4.76186466217041
    3. ' match' → logprob: -6.26186466217041
    4. '(match' → logprob: -7.76186466217041
    5. '   ' → logprob: -7.88686466217041
    6. '
' → logprob: -8.01186466217041
    7. '        
' → logprob: -9.63686466217041
    8. '	match' → logprob: -10.63686466217041
    9. ',' → logprob: -10.76186466217041
    10. '.' → logprob: -11.13686466217041

Token 582: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017073895782232285
    2. '   ' → logprob: -4.392074108123779
    3. 'match' → logprob: -5.517074108123779
    4. ' match' → logprob: -8.142073631286621
    5. '
' → logprob: -9.392073631286621
    6. '```' → logprob: -9.642073631286621
    7. '	match' → logprob: -10.142073631286621
    8. '        
' → logprob: -10.642073631286621
    9. '(match' → logprob: -11.767073631286621
    10. '    
' → logprob: -12.017073631286621

Token 583: ' #' (ID: 1069)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.10431527346372604
    2. '       ' → logprob: -2.3543152809143066
    3. ' match' → logprob: -5.854315280914307
    4. '   ' → logprob: -6.729315280914307
    5. '	match' → logprob: -11.104314804077148
    6. ' ' → logprob: -11.979314804077148
    7. '        
' → logprob: -11.979314804077148
    8. '```' → logprob: -13.104314804077148
    9. '           ' → logprob: -13.604314804077148
    10. '(match' → logprob: -13.979314804077148

Token 584: ' Alg' (ID: 31776)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.008765721693634987
    2. '       ' → logprob: -4.758765697479248
    3. '   ' → logprob: -9.008766174316406
    4. ' match' → logprob: -10.633766174316406
    5. '
' → logprob: -13.133766174316406
    6. '        
' → logprob: -14.008766174316406
    7. 'max' → logprob: -14.508766174316406
    8. '	match' → logprob: -14.758766174316406
    9. '```' → logprob: -14.883766174316406
    10. 'visited' → logprob: -15.383766174316406

Token 585: 'orith' (ID: 9996)
  Prédit: 'orith'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orith' → logprob: -0.09261758625507355
    2. '   ' → logprob: -2.7176175117492676
    3. '=' → logprob: -4.842617511749268
    4. '       ' → logprob: -5.342617511749268
    5. 'orithm' → logprob: -5.717617511749268
    6. '#' → logprob: -5.967617511749268
    7. 'orit' → logprob: -7.092617511749268
    8. ' =' → logprob: -7.217617511749268
    9. 'max' → logprob: -7.217617511749268
    10. '    ' → logprob: -8.092617988586426

Token 586: 'me' (ID: 1047)
  Prédit: 'me'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'me' → logprob: -0.027646569535136223
    2. 'm' → logprob: -3.652646541595459
    3. '#' → logprob: -7.152646541595459
    4. '   ' → logprob: -8.652647018432617
    5. 'mie' → logprob: -9.152647018432617
    6. '=' → logprob: -9.652647018432617
    7. 'mes' → logprob: -9.902647018432617
    8. '       ' → logprob: -10.277647018432617
    9. 'import' → logprob: -10.402647018432617
    10. '
' → logprob: -11.152647018432617

Token 587: ' classique' (ID: 76895)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6930487155914307
    2. '       ' → logprob: -1.5680487155914307
    3. '=' → logprob: -1.8180487155914307
    4. '   ' → logprob: -3.0680487155914307
    5. ' de' → logprob: -3.5680487155914307
    6. 'de' → logprob: -3.6930487155914307
    7. '=max' → logprob: -4.818048477172852
    8. ':' → logprob: -5.068048477172852
    9. 'max' → logprob: -5.568048477172852
    10. '_match' → logprob: -6.318048477172852

Token 588: ' de' (ID: 334)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14917193353176117
    2. 'match' → logprob: -2.149171829223633
    3. ' match' → logprob: -4.149171829223633
    4. '(match' → logprob: -6.649171829223633
    5. '   ' → logprob: -6.774171829223633
    6. '
' → logprob: -6.899171829223633
    7. ':' → logprob: -7.024171829223633
    8. '```' → logprob: -7.399171829223633
    9. '        
' → logprob: -8.024171829223633
    10. '	match' → logprob: -9.024171829223633

Token 589: ' matching' (ID: 20238)
  Prédit: 'Hung'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Hung' → logprob: -0.3828606903553009
    2. 'Hop' → logprob: -1.2578606605529785
    3. 'K' → logprob: -4.6328606605529785
    4. 'hung' → logprob: -4.8828606605529785
    5. 'hop' → logprob: -5.0078606605529785
    6. 'for' → logprob: -6.1328606605529785
    7. 'matching' → logprob: -6.5078606605529785
    8. 'Hong' → logprob: -6.6328606605529785
    9. 'Ford' → logprob: -6.6328606605529785
    10. ' Hop' → logprob: -7.3828606605529785

Token 590: ' bip' (ID: 54467)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3124631941318512
    2. 'match' → logprob: -1.4374631643295288
    3. ' match' → logprob: -4.562463283538818
    4. '(match' → logprob: -4.937463283538818
    5. '
' → logprob: -5.062463283538818
    6. '   ' → logprob: -6.187463283538818
    7. 'visited' → logprob: -6.687463283538818
    8. '        
' → logprob: -6.937463283538818
    9. ':' → logprob: -7.312463283538818
    10. 'max' → logprob: -8.18746280670166

Token 591: 'art' (ID: 497)
  Prédit: 'art'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'art' → logprob: -0.004683357197791338
    2. 'arti' → logprob: -5.879683494567871
    3. 'ar' → logprob: -6.629683494567871
    4. 'arte' → logprob: -9.254683494567871
    5. 'artisan' → logprob: -9.754683494567871
    6. '
' → logprob: -10.567183494567871
    7. '#' → logprob: -10.629683494567871
    8. 'арт' → logprob: -10.754683494567871
    9. 'arit' → logprob: -10.754683494567871
    10. '

' → logprob: -11.004683494567871

Token 592: 'ite' (ID: 651)
  Prédit: 'ite'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ite' → logprob: -0.00012654215970542282
    2. 'art' → logprob: -9.125126838684082
    3. 'it' → logprob: -11.625126838684082
    4. 'e' → logprob: -12.875126838684082
    5. 'ité' → logprob: -13.625126838684082
    6. 'ate' → logprob: -14.000126838684082
    7. 'ie' → logprob: -14.250126838684082
    8. 'def' → logprob: -14.500126838684082
    9. 'iste' → logprob: -14.875126838684082
    10. 'é' → logprob: -15.250126838684082

Token 593: ':' (ID: 25)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02975442260503769
    2. 'match' → logprob: -3.779754400253296
    3. ' match' → logprob: -5.654754638671875
    4. '(match' → logprob: -6.654754638671875
    5. '   ' → logprob: -6.904754638671875
    6. '
' → logprob: -7.779754638671875
    7. '        
' → logprob: -9.904754638671875
    8. '	match' → logprob: -10.029754638671875
    9. '           ' → logprob: -10.529754638671875
    10. 'def' → logprob: -10.654754638671875

Token 594: ' Recherche' (ID: 114815)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'match' → logprob: -0.09104996919631958
    2. 'result' → logprob: -3.591049909591675
    3. 'max' → logprob: -3.716049909591675
    4. '       ' → logprob: -3.841049909591675
    5. ' match' → logprob: -4.716050148010254
    6. 'matched' → logprob: -6.841050148010254
    7. '   ' → logprob: -7.091050148010254
    8. ' result' → logprob: -7.216050148010254
    9. ' max' → logprob: -7.966050148010254
    10. 'res' → logprob: -8.091050148010254

Token 595: ' augment' (ID: 44474)
  Prédit: 'augment'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'augment' → logprob: -0.14283792674541473
    2. ' augment' → logprob: -2.8928380012512207
    3. '   ' → logprob: -3.7678380012512207
    4. 'max' → logprob: -4.642838001251221
    5. 'ing' → logprob: -4.767838001251221
    6. 'for' → logprob: -5.142838001251221
    7. '       ' → logprob: -5.267838001251221
    8. ' maximale' → logprob: -5.392838001251221
    9. 'augmentation' → logprob: -5.892838001251221
    10. '_aug' → logprob: -6.267838001251221

Token 596: 'ante' (ID: 2116)
  Prédit: 'ante'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ante' → logprob: -0.012869477272033691
    2. 'ing' → logprob: -4.762869358062744
    3. 'ative' → logprob: -6.762869358062744
    4. 'ée' → logprob: -6.887869358062744
    5. 'e' → logprob: -7.637869358062744
    6. 'ant' → logprob: -8.262869834899902
    7. 'ating' → logprob: -8.637869834899902
    8. 'ate' → logprob: -9.012869834899902
    9. 'ee' → logprob: -9.387869834899902
    10. '#' → logprob: -9.512869834899902

Token 597: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001276426832191646
    2. '   ' → logprob: -7.12627649307251
    3. 'match' → logprob: -8.626276016235352
    4. '
' → logprob: -8.876276016235352
    5. '        
' → logprob: -10.126276016235352
    6. '<|end|>' → logprob: -10.626276016235352
    7. '(match' → logprob: -10.876276016235352
    8. ',' → logprob: -11.001276016235352
    9. 'visited' → logprob: -11.251276016235352
    10. ' match' → logprob: -11.626276016235352

Token 598: 'Hung' (ID: 188671)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.33793893456459045
    2. ')' → logprob: -2.0879390239715576
    3. 'def' → logprob: -2.3379390239715576
    4. 'max' → logprob: -3.5879390239715576
    5. ' for' → logprob: -3.8379390239715576
    6. 'match' → logprob: -5.3379387855529785
    7. '           ' → logprob: -6.4629387855529785
    8. '   ' → logprob: -6.7129387855529785
    9. '#' → logprob: -6.9629387855529785
    10. '       ' → logprob: -7.0879387855529785

Token 599: 'arian' (ID: 21203)
  Prédit: 'arian'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'arian' → logprob: -0.0005293221911415458
    2. 'ary' → logprob: -7.6255292892456055
    3. 'ari' → logprob: -11.000529289245605
    4. 'ar' → logprob: -11.750529289245605
    5. 'aria' → logprob: -11.750529289245605
    6. '```' → logprob: -12.250529289245605
    7. 'arians' → logprob: -14.625529289245605
    8. 'a' → logprob: -14.750529289245605
    9. 'ariam' → logprob: -15.125529289245605
    10. '`' → logprob: -15.250529289245605

Token 600: ' /' (ID: 820)
  Prédit: ' method'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' method' → logprob: -1.1627517938613892
    2. ')' → logprob: -1.5377517938613892
    3. ' algorithm' → logprob: -1.9127517938613892
    4. 'Algorithm' → logprob: -2.0377516746520996
    5. 'method' → logprob: -2.4127516746520996
    6. 'algorithm' → logprob: -2.9127516746520996
    7. 'Method' → logprob: -3.6627516746520996
    8. '_algorithm' → logprob: -5.2877516746521
    9. ' Algorithm' → logprob: -5.5377516746521
    10. ' or' → logprob: -6.0377516746521

Token 601: ' Kuh' (ID: 132058)
  Prédit: 'Hop'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Hop' → logprob: -0.563912034034729
    2. 'K' → logprob: -0.938912034034729
    3. 'hop' → logprob: -4.8139119148254395
    4. 'Hung' → logprob: -4.8139119148254395
    5. ' Hop' → logprob: -4.9389119148254395
    6. 'dfs' → logprob: -5.4389119148254395
    7. 'Ford' → logprob: -6.0639119148254395
    8. '
' → logprob: -6.1889119148254395
    9. 'HK' → logprob: -6.6889119148254395
    10. '#' → logprob: -6.8139119148254395

Token 602: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -5.204720582696609e-05
    2. '```' → logprob: -10.750052452087402
    3. 'nian' → logprob: -11.250052452087402
    4. 'nai' → logprob: -11.625052452087402
    5. '``' → logprob: -12.250052452087402
    6. 'hn' → logprob: -14.875052452087402
    7. 'nan' → logprob: -15.125052452087402
    8. 'h' → logprob: -15.250052452087402
    9. '
' → logprob: -15.500052452087402
    10. 'nl' → logprob: -15.500052452087402

Token 603: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2186533659696579
    2. '-M' → logprob: -1.7186533212661743
    3. 'M' → logprob: -4.593653202056885
    4. '```' → logprob: -6.218653202056885
    5. ' algorithm' → logprob: -7.093653202056885
    6. ''s' → logprob: -7.218653202056885
    7. '_M' → logprob: -7.343653202056885
    8. ' )' → logprob: -7.968653202056885
    9. '   ' → logprob: -8.468653678894043
    10. '}' → logprob: -8.593653678894043

Token 604: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03076685592532158
    2. '   ' → logprob: -3.5307669639587402
    3. 'match' → logprob: -6.90576696395874
    4. ' match' → logprob: -11.405766487121582
    5. '	match' → logprob: -13.905766487121582
    6. '        
' → logprob: -14.405766487121582
    7. '```' → logprob: -14.405766487121582
    8. '    
' → logprob: -15.655766487121582
    9. '      ' → logprob: -16.1557674407959
    10. 'matches' → logprob: -16.2807674407959

Token 605: ' match' (ID: 3981)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'match' (adapté à ' match') → logprob: -0.049402374774217606
    2. '       ' → logprob: -3.0494024753570557
    3. '   ' → logprob: -7.299402236938477
    4. ' match' → logprob: -8.924402236938477
    5. '        
' → logprob: -13.424402236938477
    6. '```' → logprob: -14.049402236938477
    7. '
' → logprob: -14.174402236938477
    8. ' ' → logprob: -14.174402236938477
    9. '	match' → logprob: -14.174402236938477
    10. '           ' → logprob: -14.799402236938477

Token 606: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -6.704273118884885e-07
    2. '=' → logprob: -15.500000953674316
    3. ' =' → logprob: -15.750000953674316
    4. '_R' → logprob: -16.125
    5. ' R' → logprob: -16.25
    6. '[' → logprob: -18.125
    7. '```' → logprob: -18.125
    8. 'Ｒ' → logprob: -18.75
    9. '(' → logprob: -19.0
    10. '`' → logprob: -19.625

Token 607: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326520442962646
    2. '=' → logprob: -1.3132652044296265
    3. '=[' → logprob: -12.813264846801758
    4. '   ' → logprob: -15.438264846801758
    5. ' ' → logprob: -15.813264846801758
    6. ' =[' → logprob: -15.813264846801758
    7. '[' → logprob: -16.438264846801758
    8. ')' → logprob: -16.688264846801758
    9. '```' → logprob: -17.563264846801758
    10. '[:]' → logprob: -17.813264846801758

Token 608: ' [-' (ID: 20191)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -2.339278580620885e-06
    2. ' [-' → logprob: -13.000001907348633
    3. '   ' → logprob: -17.250001907348633
    4. '([-' → logprob: -17.625001907348633
    5. ' ' → logprob: -20.750001907348633
    6. '[' → logprob: -21.000001907348633
    7. '-' → logprob: -22.000001907348633
    8. '  ' → logprob: -22.250001907348633
    9. '[:-' → logprob: -23.125001907348633
    10. '`' → logprob: -23.500001907348633

Token 609: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.125
    3. '   ' → logprob: -19.75
    4. '-' → logprob: -20.25
    5. '１' → logprob: -20.5
    6. '```' → logprob: -20.5
    7. ' -' → logprob: -20.8125
    8. '۱' → logprob: -21.4375
    9. '  ' → logprob: -21.6875
    10. '

' → logprob: -22.25

Token 610: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09754578024148941
    2. ' for' → logprob: -2.597545862197876
    3. 'for' → logprob: -4.472545623779297
    4. ']*' → logprob: -4.972545623779297
    5. ' ]' → logprob: -8.972545623779297
    6. '   ' → logprob: -12.222545623779297
    7. ')' → logprob: -12.847545623779297
    8. '	for' → logprob: -13.097545623779297
    9. ']*(' → logprob: -14.222545623779297
    10. '}' → logprob: -14.347545623779297

Token 611: ' *' (ID: 425)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.25452637672424316
    2. ']' → logprob: -2.629526376724243
    3. 'for' → logprob: -2.754526376724243
    4. ' *' → logprob: -3.754526376724243
    5. '*' → logprob: -3.879526376724243
    6. ')' → logprob: -3.879526376724243
    7. ']*' → logprob: -4.129526138305664
    8. '   ' → logprob: -5.504526138305664
    9. '*n' → logprob: -6.379526138305664
    10. '       ' → logprob: -7.629526138305664

Token 612: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1472419600977446e-06
    2. ' n' → logprob: -14.250000953674316
    3. '(n' → logprob: -14.625000953674316
    4. '	n' → logprob: -19.250001907348633
    5. '   ' → logprob: -19.625001907348633
    6. '(' → logprob: -21.625001907348633
    7. 'len' → logprob: -23.000001907348633
    8. ')n' → logprob: -23.000001907348633
    9. '[n' → logprob: -23.250001907348633
    10. ' (' → logprob: -23.500001907348633

Token 613: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 614: ' #' (ID: 1069)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.46345254778862
    2. '<|end|>' → logprob: -1.5884525775909424
    3. '       ' → logprob: -2.2134525775909424
    4. '   ' → logprob: -4.088452339172363
    5. ' for' → logprob: -4.338452339172363
    6. '  
' → logprob: -4.588452339172363
    7. '        
' → logprob: -5.088452339172363
    8. '    
' → logprob: -5.088452339172363
    9. '<|end|>' → logprob: -6.338452339172363
    10. 'for' → logprob: -6.338452339172363

Token 615: ' match' (ID: 3981)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.048716362565755844
    2. '<|end|>' → logprob: -3.1737163066864014
    3. ' for' → logprob: -5.4237165451049805
    4. '0' → logprob: -7.9237165451049805
    5. '<|end|>' → logprob: -8.17371654510498
    6. '
' → logprob: -8.79871654510498
    7. 'def' → logprob: -9.17371654510498
    8. 'max' → logprob: -9.42371654510498
    9. 'm' → logprob: -9.54871654510498
    10. '#' → logprob: -9.92371654510498

Token 616: ' pour' (ID: 1930)
  Prédit: 'R'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'R' → logprob: -0.5588443279266357
    2. 'for' → logprob: -1.6838443279266357
    3. '<|end|>' → logprob: -2.5588443279266357
    4. ' for' → logprob: -3.0588443279266357
    5. '   ' → logprob: -3.4338443279266357
    6. '[]' → logprob: -3.5588443279266357
    7. '[' → logprob: -3.8088443279266357
    8. '<|end|>' → logprob: -5.308844566345215
    9. '       ' → logprob: -5.433844566345215
    10. ' =' → logprob: -5.558844566345215

Token 617: ' rouge' (ID: 56930)
  Prédit: 'cha'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cha' → logprob: -0.4805760979652405
    2. 'les' → logprob: -1.7305760383605957
    3. ' chaque' → logprob: -1.9805760383605957
    4. 'la' → logprob: -3.7305760383605957
    5. 'each' → logprob: -3.9805760383605957
    6. 'c' → logprob: -5.355576038360596
    7. ' les' → logprob: -5.480576038360596
    8. 'le' → logprob: -5.605576038360596
    9. 'ch' → logprob: -5.730576038360596
    10. 'rou' → logprob: -6.355576038360596

Token 618: ' j' (ID: 441)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 619: ' :' (ID: 712)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 620: ' indice' (ID: 90848)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0024762547109276056
    2. ' -' → logprob: -6.002476215362549
    3. '   ' → logprob: -15.127476692199707
    4. ' ' → logprob: -15.377476692199707
    5. '-j' → logprob: -17.50247573852539
    6. '  ' → logprob: -18.00247573852539
    7. '
' → logprob: -18.12747573852539
    8. '-i' → logprob: -18.37747573852539
    9. '-l' → logprob: -18.50247573852539
    10. 'None' → logprob: -18.62747573852539

Token 621: ' du' (ID: 1462)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -1.4870599508285522
    2. 'de' → logprob: -1.6120599508285522
    3. ' j' → logprob: -2.112060070037842
    4. ' de' → logprob: -2.362060070037842
    5. ' du' → logprob: -2.737060070037842
    6. ' of' → logprob: -2.862060070037842
    7. 'du' → logprob: -2.987060070037842
    8. ' des' → logprob: -3.487060070037842
    9. '   ' → logprob: -3.487060070037842
    10. 'd' → logprob: -3.612060070037842

Token 622: ' bleu' (ID: 85778)
  Prédit: 'ble'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ble' → logprob: -0.014668636955320835
    2. ' bleu' → logprob: -4.6396684646606445
    3. 'blue' → logprob: -5.8896684646606445
    4. 'no' → logprob: -7.3896684646606445
    5. '```' → logprob: -7.5146684646606445
    6. 'cou' → logprob: -8.514668464660645
    7. 'som' → logprob: -8.514668464660645
    8. ' sommet' → logprob: -9.389668464660645
    9. 'blu' → logprob: -9.514668464660645
    10. 'n' → logprob: -9.639668464660645

Token 623: ' i' (ID: 575)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.34311118721961975
    2. '<|end|>' → logprob: -2.718111276626587
    3. ' =' → logprob: -3.593111276626587
    4. ')' → logprob: -3.718111276626587
    5. '   ' → logprob: -3.718111276626587
    6. ',' → logprob: -4.343111038208008
    7. 'import' → logprob: -4.343111038208008
    8. '[i' → logprob: -4.468111038208008
    9. '
' → logprob: -4.843111038208008
    10. '[]' → logprob: -4.968111038208008

Token 624: ' associé' (ID: 152099)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.7952861785888672
    2. '
' → logprob: -1.1702861785888672
    3. '<|end|>' → logprob: -2.045286178588867
    4. '   ' → logprob: -3.170286178588867
    5. '        
' → logprob: -3.795286178588867
    6. ')' → logprob: -4.045286178588867
    7. '    
' → logprob: -5.045286178588867
    8. '  
' → logprob: -5.295286178588867
    9. '[' → logprob: -5.920286178588867
    10. '<|end|>' → logprob: -6.045286178588867

Token 625: ' (-' (ID: 21382)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.40258532762527466
    2. '
' → logprob: -1.6525852680206299
    3. '       ' → logprob: -2.15258526802063
    4. '<|end|>' → logprob: -4.402585506439209
    5. '    
' → logprob: -5.277585506439209
    6. '  
' → logprob: -6.027585506439209
    7. '        
' → logprob: -6.152585506439209
    8. '```' → logprob: -7.652585506439209
    9. ' for' → logprob: -8.27758502960205
    10. '  ' → logprob: -8.40258502960205

Token 626: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.320199877838604e-07
    2. ' ' → logprob: -15.125
    3. '   ' → logprob: -17.25
    4. '```' → logprob: -17.625
    5. ' -' → logprob: -17.75
    6. '-' → logprob: -18.4375
    7. '１' → logprob: -18.625
    8. '۱' → logprob: -18.6875
    9. ')' → logprob: -19.125
    10. '
' → logprob: -19.125

Token 627: ' si' (ID: 1784)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0002787359117064625
    2. ' )' → logprob: -9.00027847290039
    3. '<|end|>' → logprob: -9.12527847290039
    4. ')
' → logprob: -10.25027847290039
    5. '   ' → logprob: -12.87527847290039
    6. '),' → logprob: -14.12527847290039
    7. '')' → logprob: -14.25027847290039
    8. ')

' → logprob: -14.25027847290039
    9. ' for' → logprob: -14.37527847290039
    10. '<|end|>' → logprob: -14.62527847290039

Token 628: ' aucun' (ID: 41678)
  Prédit: 'auc'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'auc' → logprob: -0.025328505784273148
    2. 'pas' → logprob: -4.275328636169434
    3. 'non' → logprob: -5.775328636169434
    4. 'None' → logprob: -5.775328636169434
    5. ' aucun' → logprob: -5.775328636169434
    6. '-' → logprob: -7.525328636169434
    7. 'none' → logprob: -8.025328636169434
    8. '   ' → logprob: -8.150328636169434
    9. ' pas' → logprob: -8.525328636169434
    10. ' aucune' → logprob: -9.775328636169434

Token 629: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.894790981779806e-05
    2. ')
' → logprob: -10.125048637390137
    3. ' )' → logprob: -12.250048637390137
    4. ')
' → logprob: -13.375048637390137
    5. '),' → logprob: -14.875048637390137
    6. ')

' → logprob: -15.000048637390137
    7. ').' → logprob: -15.375048637390137
    8. '   ' → logprob: -15.500048637390137
    9. '')' → logprob: -15.875048637390137
    10. ' ' → logprob: -15.875048637390137

Token 630: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.059072494506836
    2. 'for' → logprob: -1.434072494506836
    3. '   ' → logprob: -1.559072494506836
    4. 'max' → logprob: -1.934072494506836
    5. ' for' → logprob: -3.059072494506836
    6. 'match' → logprob: -5.309072494506836
    7. 'result' → logprob: -5.559072494506836
    8. ' max' → logprob: -6.559072494506836
    9. 'matched' → logprob: -7.684072494506836
    10. '```' → logprob: -7.934072494506836

Token 631: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.0007481599459424615
    2. 'res' → logprob: -7.750748157501221
    3. 'max' → logprob: -8.500748634338379
    4. 'for' → logprob: -9.500748634338379
    5. '       ' → logprob: -10.875748634338379
    6. '   ' → logprob: -11.500748634338379
    7. ' result' → logprob: -12.000748634338379
    8. 'match' → logprob: -13.125748634338379
    9. 'count' → logprob: -14.625748634338379
    10. 'answer' → logprob: -14.875748634338379

Token 632: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10020699352025986
    2. '=' → logprob: -2.3502070903778076
    3. '   ' → logprob: -15.475207328796387
    4. ',' → logprob: -16.85020637512207
    5. '  ' → logprob: -17.85020637512207
    6. ' ' → logprob: -17.97520637512207
    7. '=int' → logprob: -18.10020637512207
    8. '	' → logprob: -18.22520637512207
    9. '```' → logprob: -19.35020637512207
    10. ' +=' → logprob: -19.35020637512207

Token 633: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.5491004129871726e-05
    2. ' ' → logprob: -10.000045776367188
    3. '   ' → logprob: -19.375045776367188
    4. '۰' → logprob: -20.375045776367188
    5. '```' → logprob: -21.375045776367188
    6. '=' → logprob: -22.125045776367188
    7. ' ' → logprob: -22.500045776367188
    8. '０' → logprob: -22.750045776367188
    9. '  ' → logprob: -22.875045776367188
    10. '000' → logprob: -23.500045776367188

Token 634: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '۰' → logprob: -21.375
    4. '   ' → logprob: -21.75
    5. '０' → logprob: -22.875
    6. '=' → logprob: -22.875
    7. '  ' → logprob: -22.875
    8. '000' → logprob: -23.0
    9. '```' → logprob: -23.25
    10. 'sum' → logprob: -23.75

Token 635: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.039773330092430115
    2. ' for' → logprob: -4.164773464202881
    3. '       ' → logprob: -4.289773464202881
    4. '  
' → logprob: -5.664773464202881
    5. '   ' → logprob: -6.164773464202881
    6. ' 
' → logprob: -6.539773464202881
    7. 'for' → logprob: -6.789773464202881
    8. '    
' → logprob: -7.664773464202881
    9. '        
' → logprob: -7.914773464202881
    10. '<|end|>' → logprob: -7.914773464202881

Token 636: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.7685813903808594
    2. '       ' → logprob: -0.8935813903808594
    3. '   ' → logprob: -3.1435813903808594
    4. '  
' → logprob: -3.5185813903808594
    5. ' for' → logprob: -3.6435813903808594
    6. '    
' → logprob: -4.393581390380859
    7. '        
' → logprob: -5.268581390380859
    8. '<|end|>' → logprob: -5.643581390380859
    9. ' 
' → logprob: -5.768581390380859
    10. 'for' → logprob: -6.143581390380859

Token 637: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.20756864547729492
    2. '       ' → logprob: -2.207568645477295
    3. 'for' (adapté à ' for') → logprob: -2.582568645477295
    4. '	for' → logprob: -6.332568645477295
    5. '   ' → logprob: -9.582569122314453
    6. ' 
' → logprob: -11.707569122314453
    7. '	   ' → logprob: -11.707569122314453
    8. ' ' → logprob: -12.082569122314453
    9. '<|end|>' → logprob: -12.082569122314453
    10. '
' → logprob: -12.207569122314453

Token 638: ' u' (ID: 337)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.04998619481921196
    2. 'i' → logprob: -3.0499861240386963
    3. ' u' → logprob: -6.674986362457275
    4. ' i' → logprob: -8.924985885620117
    5. '	u' → logprob: -13.674985885620117
    6. '   ' → logprob: -14.424985885620117
    7. '```' → logprob: -14.424985885620117
    8. '	i' → logprob: -16.299985885620117
    9. '`' → logprob: -16.299985885620117
    10. ' ' → logprob: -16.674985885620117

Token 639: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01815626211464405
    2. 'in' → logprob: -4.018156051635742
    3. ' ' → logprob: -12.268156051635742
    4. '	in' → logprob: -14.018156051635742
    5. 'import' → logprob: -15.143156051635742
    6. '  ' → logprob: -16.518156051635742
    7. 'u' → logprob: -16.768156051635742
    8. 'In' → logprob: -16.768156051635742
    9. '_in' → logprob: -16.893156051635742
    10. '    ' → logprob: -17.143156051635742

Token 640: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.7610454708337784e-05
    2. ' range' → logprob: -10.500027656555176
    3. '   ' → logprob: -19.12502670288086
    4. 'adj' → logprob: -19.37502670288086
    5. '(range' → logprob: -19.62502670288086
    6. '	range' → logprob: -20.37502670288086
    7. '  ' → logprob: -21.37502670288086
    8. ' ' → logprob: -21.37502670288086
    9. '    ' → logprob: -22.00002670288086
    10. '0' → logprob: -22.62502670288086

Token 641: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.0006379772676154971
    2. 'm' → logprob: -7.375638008117676
    3. '(' → logprob: -11.875638008117676
    4. ' (' → logprob: -12.875638008117676
    5. '	m' → logprob: -14.375638008117676
    6. '   ' → logprob: -14.625638008117676
    7. ' m' → logprob: -14.875638008117676
    8. '(
' → logprob: -15.500638008117676
    9. ')' → logprob: -16.37563705444336
    10. ')m' → logprob: -17.25063705444336

Token 642: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0237402506172657
    2. '):' → logprob: -3.773740291595459
    3. '   ' → logprob: -8.2737398147583
    4. '):
' → logprob: -9.8987398147583
    5. ' ):
' → logprob: -9.8987398147583
    6. ':
' → logprob: -10.1487398147583
    7. ':' → logprob: -10.1487398147583
    8. ')' → logprob: -10.5237398147583
    9. '       ' → logprob: -10.6487398147583
    10. '():
' → logprob: -12.2737398147583

Token 643: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0010512693552300334
    2. '   ' → logprob: -8.00105094909668
    3. ':' → logprob: -8.62605094909668
    4. '    
' → logprob: -9.25105094909668
    5. '            
' → logprob: -9.50105094909668
    6. '       ' → logprob: -9.50105094909668
    7. '	       ' → logprob: -9.75105094909668
    8. ':
' → logprob: -10.00105094909668
    9. '```' → logprob: -10.37605094909668
    10. '<|end|>' → logprob: -10.50105094909668

Token 644: ' visited' (ID: 18416)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05549664795398712
    2. 'visited' (adapté à ' visited') → logprob: -3.0554966926574707
    3. ' visited' → logprob: -5.055496692657471
    4. '   ' → logprob: -8.430496215820312
    5. '       ' → logprob: -8.555496215820312
    6. '               ' → logprob: -10.055496215820312
    7. '	       ' → logprob: -10.430496215820312
    8. '		' → logprob: -11.680496215820312
    9. '	   ' → logprob: -12.305496215820312
    10. '            
' → logprob: -12.680496215820312

Token 645: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10021205991506577
    2. '=' → logprob: -2.3502120971679688
    3. '=[' → logprob: -13.350212097167969
    4. '   ' → logprob: -13.850212097167969
    5. ' =[' → logprob: -13.850212097167969
    6. '[' → logprob: -14.100212097167969
    7. '    ' → logprob: -14.725212097167969
    8. ' ' → logprob: -15.350212097167969
    9. '[:]' → logprob: -15.600212097167969
    10. '	' → logprob: -15.725212097167969

Token 646: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.00010103991371579468
    2. '[v' → logprob: -9.625101089477539
    3. ' [' → logprob: -10.875101089477539
    4. '[u' → logprob: -11.750101089477539
    5. '[n' → logprob: -12.125101089477539
    6. '[node' → logprob: -14.250101089477539
    7. '[j' → logprob: -14.625101089477539
    8. '[new' → logprob: -15.125101089477539
    9. '[len' → logprob: -15.625101089477539
    10. '   ' → logprob: -15.875101089477539

Token 647: 'False' (ID: 8168)
  Prédit: 'False'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -5.512236498361744e-07
    2. ' False' → logprob: -14.500000953674316
    3. '(False' → logprob: -21.0
    4. '   ' → logprob: -21.75
    5. '0' → logprob: -22.0
    6. 'True' → logprob: -23.25
    7. 'false' → logprob: -24.375
    8. '=False' → logprob: -24.75
    9. '.False' → logprob: -25.5
    10. '[' → logprob: -25.625

Token 648: ']' (ID: 60)
  Prédit: ']*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.5508436560630798
    2. ']' → logprob: -1.1758437156677246
    3. ' for' → logprob: -2.4258437156677246
    4. 'for' → logprob: -4.675843715667725
    5. ')' → logprob: -4.675843715667725
    6. '*' → logprob: -5.925843715667725
    7. ')*' → logprob: -6.175843715667725
    8. '(n' → logprob: -6.425843715667725
    9. ' *' → logprob: -7.675843715667725
    10. '           ' → logprob: -8.425843238830566

Token 649: ' *' (ID: 425)
  Prédit: '(n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.24957959353923798
    2. '*' → logprob: -2.749579668045044
    3. ')' → logprob: -3.124579668045044
    4. '           ' → logprob: -3.499579668045044
    5. '*n' → logprob: -3.749579668045044
    6. ']' → logprob: -4.624579429626465
    7. '(' → logprob: -4.874579429626465
    8. '   ' → logprob: -5.124579429626465
    9. ' for' → logprob: -5.249579429626465
    10. '               ' → logprob: -5.374579429626465

Token 650: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.1875571544806007e-05
    2. ' n' → logprob: -11.375011444091797
    3. '(n' → logprob: -15.125011444091797
    4. '	n' → logprob: -18.750011444091797
    5. '   ' → logprob: -19.000011444091797
    6. 'len' → logprob: -19.125011444091797
    7. '           ' → logprob: -20.500011444091797
    8. '       ' → logprob: -21.375011444091797
    9. '[n' → logprob: -22.750011444091797
    10. 'length' → logprob: -23.125011444091797

Token 651: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013939710333943367
    2. '<|end|>' → logprob: -4.63893985748291
    3. '   ' → logprob: -6.63893985748291
    4. '       ' → logprob: -7.13893985748291
    5. '            
' → logprob: -7.88893985748291
    6. '<|end|>' → logprob: -8.13893985748291
    7. '          ' → logprob: -8.26393985748291
    8. '	       ' → logprob: -8.51393985748291
    9. '	   ' → logprob: -8.63893985748291
    10. '		' → logprob: -9.26393985748291

Token 652: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006302326801232994
    2. ' if' → logprob: -8.500630378723145
    3. '	       ' → logprob: -8.625630378723145
    4. '<|end|>' → logprob: -9.125630378723145
    5. '   ' → logprob: -10.125630378723145
    6. '	   ' → logprob: -11.125630378723145
    7. 'if' → logprob: -11.375630378723145
    8. '            
' → logprob: -11.625630378723145
    9. '          ' → logprob: -11.750630378723145
    10. '       ' → logprob: -11.750630378723145

Token 653: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -5.872261317563243e-05
    2. '           ' → logprob: -10.000059127807617
    3. ' if' → logprob: -11.250059127807617
    4. 'result' → logprob: -15.500059127807617
    5. '   ' → logprob: -18.625059127807617
    6. '```' → logprob: -18.750059127807617
    7. '       ' → logprob: -18.875059127807617
    8. '               ' → logprob: -19.375059127807617
    9. '	if' → logprob: -19.375059127807617
    10. '            ' → logprob: -20.250059127807617

Token 654: ' try' (ID: 2075)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.02975083328783512
    2. ' try' → logprob: -3.5297508239746094
    3. '   ' → logprob: -16.02975082397461
    4. '           ' → logprob: -16.27975082397461
    5. '.try' → logprob: -16.40475082397461
    6. '               ' → logprob: -18.15475082397461
    7. '	try' → logprob: -18.27975082397461
    8. ' ' → logprob: -18.27975082397461
    9. '_try' → logprob: -18.52975082397461
    10. ' ' → logprob: -18.90475082397461

Token 655: '_match' (ID: 26039)
  Prédit: '_match'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_match' → logprob: -3.173704271830502e-06
    2. 'match' → logprob: -12.87500286102295
    3. '_try' → logprob: -15.12500286102295
    4. '_matching' → logprob: -15.75000286102295
    5. '_' → logprob: -16.875003814697266
    6. ' match' → logprob: -16.875003814697266
    7. '```' → logprob: -18.000003814697266
    8. '_MATCH' → logprob: -18.125003814697266
    9. ' _' → logprob: -18.250003814697266
    10. '_merge' → logprob: -18.500003814697266

Token 656: '(u' (ID: 17057)
  Prédit: '(u'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(u' → logprob: -1.2113979209971149e-05
    2. ' (' → logprob: -12.000012397766113
    3. '(' → logprob: -12.375012397766113
    4. 'u' → logprob: -13.500012397766113
    5. ' u' → logprob: -15.375012397766113
    6. '[u' → logprob: -16.250011444091797
    7. '(
' → logprob: -16.625011444091797
    8. '	u' → logprob: -18.250011444091797
    9. '   ' → logprob: -18.625011444091797
    10. '(user' → logprob: -18.750011444091797

Token 657: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00044008632539771497
    2. ' ,' → logprob: -7.7504401206970215
    3. ',
' → logprob: -11.875439643859863
    4. '           ' → logprob: -14.125439643859863
    5. 'visited' → logprob: -14.625439643859863
    6. '   ' → logprob: -14.875439643859863
    7. '(' → logprob: -15.125439643859863
    8. '```' → logprob: -16.50044059753418
    9. '
' → logprob: -16.62544059753418
    10. '       ' → logprob: -16.87544059753418

Token 658: ' adj' (ID: 20251)
  Prédit: 'adj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'adj' → logprob: -0.010138041339814663
    2. 'visited' → logprob: -4.760138034820557
    3. ' adj' → logprob: -6.510138034820557
    4. ' visited' → logprob: -11.260138511657715
    5. '   ' → logprob: -11.510138511657715
    6. '           ' → logprob: -12.135138511657715
    7. '    ' → logprob: -13.885138511657715
    8. '       ' → logprob: -14.260138511657715
    9. ' ' → logprob: -14.385138511657715
    10. '  ' → logprob: -14.635138511657715

Token 659: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.096126576769166e-05
    2. ' ,' → logprob: -10.125041007995605
    3. '   ' → logprob: -15.125041007995605
    4. '           ' → logprob: -15.625041007995605
    5. 'visited' → logprob: -15.875041007995605
    6. ',
' → logprob: -16.00004005432129
    7. '```' → logprob: -17.37504005432129
    8. ',u' → logprob: -17.37504005432129
    9. '(),' → logprob: -17.62504005432129
    10. '(' → logprob: -17.62504005432129

Token 660: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -8.180258191714529e-06
    2. ' visited' → logprob: -11.750008583068848
    3. '   ' → logprob: -15.750008583068848
    4. '           ' → logprob: -17.87500762939453
    5. 'visit' → logprob: -18.75000762939453
    6. '       ' → logprob: -19.37500762939453
    7. ' ' → logprob: -20.00000762939453
    8. '               ' → logprob: -20.50000762939453
    9. '	' → logprob: -20.62500762939453
    10. '          ' → logprob: -20.75000762939453

Token 661: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06340598315000534
    2. ',' → logprob: -3.188405990600586
    3. '):
' → logprob: -3.938405990600586
    4. ')' → logprob: -7.563405990600586
    5. ' ):' → logprob: -9.063405990600586
    6. '):
' → logprob: -10.563405990600586
    7. ' ,' → logprob: -11.188405990600586
    8. ':' → logprob: -11.688405990600586
    9. '   ' → logprob: -11.688405990600586
    10. '=' → logprob: -12.313405990600586

Token 662: ' match' (ID: 3981)
  Prédit: 'match'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'match' → logprob: -1.5048530030981055e-06
    2. ' match' → logprob: -13.500001907348633
    3. '(match' → logprob: -20.875001907348633
    4. '
' → logprob: -21.375001907348633
    5. '   ' → logprob: -21.375001907348633
    6. ' ' → logprob: -22.250001907348633
    7. 'result' → logprob: -22.375001907348633
    8. ')' → logprob: -22.625001907348633
    9. '	match' → logprob: -22.750001907348633
    10. 'm' → logprob: -23.125001907348633

Token 663: 'R' (ID: 49)
  Prédit: 'R'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'R' → logprob: -3.128163257315464e-07
    2. ')' → logprob: -15.75
    3. '[' → logprob: -16.25
    4. ' R' → logprob: -17.625
    5. '```' → logprob: -17.75
    6. 'match' → logprob: -19.0
    7. '[u' → logprob: -19.5
    8. '(match' → logprob: -19.625
    9. 'L' → logprob: -19.875
    10. '_R' → logprob: -19.875

Token 664: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0003078142472077161
    2. '):' → logprob: -8.1253080368042
    3. '           ' → logprob: -12.3753080368042
    4. ':
' → logprob: -12.8753080368042
    5. '):
' → logprob: -13.2503080368042
    6. '               ' → logprob: -13.2503080368042
    7. '       ' → logprob: -14.6253080368042
    8. ' ):
' → logprob: -15.0003080368042
    9. '():
' → logprob: -15.3753080368042
    10. ':' → logprob: -15.8753080368042

Token 665: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0005953280488029122
    2. ' result' → logprob: -7.7505950927734375
    3. 'result' → logprob: -9.125595092773438
    4. '           ' → logprob: -10.375595092773438
    5. '   ' → logprob: -12.500595092773438
    6. '```' → logprob: -12.625595092773438
    7. ',result' → logprob: -12.750595092773438
    8. '<|end|>' → logprob: -12.750595092773438
    9. '<|end|>' → logprob: -13.125595092773438
    10. '                   ' → logprob: -13.375595092773438

Token 666: ' result' (ID: 1534)
  Prédit: ' result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' result' → logprob: -0.03828728571534157
    2. 'result' (adapté à ' result') → logprob: -3.538287401199341
    3. '               ' → logprob: -5.163287162780762
    4. '                   ' → logprob: -5.913287162780762
    5. '   ' → logprob: -10.663287162780762
    6. '           ' → logprob: -11.288287162780762
    7. ' ' → logprob: -11.413287162780762
    8. '	result' → logprob: -11.663287162780762
    9. ' ' → logprob: -12.163287162780762
    10. '                       ' → logprob: -12.663287162780762

Token 667: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.6931613087654114
    2. '+=' → logprob: -0.6931613087654114
    3. ']+=' → logprob: -11.443161010742188
    4. '+' → logprob: -13.193161010742188
    5. '   ' → logprob: -14.193161010742188
    6. '=' → logprob: -15.318161010742188
    7. '    ' → logprob: -16.318161010742188
    8. '+="' → logprob: -16.318161010742188
    9. '<|end|>' → logprob: -16.443161010742188
    10. ')' → logprob: -16.818161010742188

Token 668: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009114635176956654
    2. ' ' → logprob: -7.000911235809326
    3. ' ' → logprob: -21.875911712646484
    4. '   ' → logprob: -22.250911712646484
    5. '```' → logprob: -22.750911712646484
    6. '۱' → logprob: -23.125911712646484
    7. '  ' → logprob: -23.250911712646484
    8. '<|end|>' → logprob: -23.500911712646484
    9. '１' → logprob: -23.625911712646484
    10. '0' → logprob: -25.000911712646484

Token 669: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -17.375
    3. '```' → logprob: -22.625
    4. '   ' → logprob: -23.75
    5. '１' → logprob: -25.375
    6. '۱' → logprob: -25.75
    7. '+' → logprob: -26.0
    8. '
' → logprob: -26.75
    9. '१' → logprob: -26.75
    10. '১' → logprob: -26.75

Token 670: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5077946186065674
    2. '   ' → logprob: -1.0077946186065674
    3. '       ' → logprob: -4.132794380187988
    4. '    
' → logprob: -4.507794380187988
    5. 'print' → logprob: -5.882794380187988
    6. '<|end|>' → logprob: -6.382794380187988
    7. '        
' → logprob: -7.132794380187988
    8. '```' → logprob: -7.632794380187988
    9. '
' → logprob: -9.257794380187988
    10. '  
' → logprob: -9.257794380187988

Token 671: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.062350574880838394
    2. 'print' → logprob: -2.9373505115509033
    3. '
' → logprob: -5.187350749969482
    4. '       ' → logprob: -7.062350749969482
    5. '```' → logprob: -7.562350749969482
    6. '    
' → logprob: -7.812350749969482
    7. '<|end|>' → logprob: -10.812350273132324
    8. '        
' → logprob: -11.062350273132324
    9. '	print' → logprob: -11.437350273132324
    10. ' print' → logprob: -11.687350273132324

Token 672: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00018113377154804766
    2. '       ' → logprob: -8.750181198120117
    3. '   ' → logprob: -11.000181198120117
    4. '```' → logprob: -12.500181198120117
    5. ' print' → logprob: -13.125181198120117
    6. '
' → logprob: -16.000181198120117
    7. '        
' → logprob: -18.500181198120117
    8. '#print' → logprob: -18.875181198120117
    9. '	print' → logprob: -19.000181198120117
    10. '``' → logprob: -19.125181198120117

Token 673: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -2.816093228830141e-06
    2. '(' → logprob: -12.87500286102295
    3. 'result' → logprob: -16.375001907348633
    4. '(results' → logprob: -16.625001907348633
    5. '(f' → logprob: -17.750001907348633
    6. '(resultado' → logprob: -17.750001907348633
    7. '(res' → logprob: -18.500001907348633
    8. ' (' → logprob: -18.625001907348633
    9. '=result' → logprob: -18.875001907348633
    10. ',result' → logprob: -19.375001907348633

Token 674: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -5.080963092041202e-06
    2. ')
' → logprob: -12.500004768371582
    3. '())' → logprob: -14.375004768371582
    4. ' )' → logprob: -15.500004768371582
    5. ')`' → logprob: -15.625004768371582
    6. '()' → logprob: -16.2500057220459
    7. '   ' → logprob: -16.2500057220459
    8. '`)' → logprob: -17.2500057220459
    9. ')#' → logprob: -17.6250057220459
    10. '))' → logprob: -17.6250057220459

Token 675: '#' (ID: 2)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00023894020705483854
    2. 'thread' → logprob: -9.000239372253418
    3. '```' → logprob: -10.125239372253418
    4. '
' → logprob: -10.625239372253418
    5. '<|end|>' → logprob: -10.875239372253418
    6. ' if' → logprob: -11.250239372253418
    7. 'main' → logprob: -11.375239372253418
    8. '    
' → logprob: -12.875239372253418
    9. '#' → logprob: -13.125239372253418
    10. '  
' → logprob: -14.125239372253418

Token 676: ' Pour' (ID: 13931)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.00012403888104017824
    2. 'thread' → logprob: -9.000123977661133
    3. ' if' → logprob: -14.500123977661133
    4. ' threading' → logprob: -18.125123977661133
    5. '#' → logprob: -18.500123977661133
    6. '__' → logprob: -21.000123977661133
    7. '```' → logprob: -21.250123977661133
    8. 'sys' → logprob: -21.875123977661133
    9. '#if' → logprob: -22.375123977661133
    10. '    
' → logprob: -22.500123977661133

Token 677: ' éviter' (ID: 64013)
  Prédit: ' threading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' threading' → logprob: -0.13785484433174133
    2. 'thread' → logprob: -3.137854814529419
    3. '_thread' → logprob: -3.262854814529419
    4. '__' → logprob: -3.512854814529419
    5. ' thread' → logprob: -5.512855052947998
    6. ' __' → logprob: -6.137855052947998
    7. 'if' → logprob: -6.387855052947998
    8. '_pro' → logprob: -6.387855052947998
    9. '_' → logprob: -7.012855052947998
    10. '_main' → logprob: -7.512855052947998

Token 678: ' Rec' (ID: 14753)
  Prédit: ' threading'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' threading' → logprob: -0.10263055562973022
    2. 'if' → logprob: -2.977630615234375
    3. ' if' → logprob: -3.352630615234375
    4. '__' → logprob: -5.602630615234375
    5. '```' → logprob: -6.227630615234375
    6. 'thread' → logprob: -6.352630615234375
    7. ' la' → logprob: -6.852630615234375
    8. '_thread' → logprob: -7.852630615234375
    9. ' le' → logprob: -7.977630615234375
    10. '_threads' → logprob: -8.227630615234375

Token 679: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.000498701527249068
    2. 'ursive' → logprob: -7.7504987716674805
    3. 'urs' → logprob: -10.62549877166748
    4. 'usr' → logprob: -10.87549877166748
    5. 'usion' → logprob: -11.50049877166748
    6. 'import' → logprob: -12.25049877166748
    7. 'def' → logprob: -13.12549877166748
    8. '```' → logprob: -13.12549877166748
    9. '   ' → logprob: -13.25049877166748
    10. 'sys' → logprob: -13.75049877166748

Token 680: 'Error' (ID: 2255)
  Prédit: 'limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.0024000320117920637
    2. 'Limit' → logprob: -6.127399921417236
    3. ' limit' → logprob: -9.127400398254395
    4. 'def' → logprob: -10.377400398254395
    5. 'lim' → logprob: -10.502400398254395
    6. '_limit' → logprob: -10.752400398254395
    7. 'limits' → logprob: -11.627400398254395
    8. 'Error' → logprob: -12.752400398254395
    9. '(limit' → logprob: -13.002400398254395
    10. 'import' → logprob: -13.252400398254395

Token 681: ' sur' (ID: 1512)
  Prédit: 'thread'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'thread' → logprob: -0.3065353035926819
    2. 'if' → logprob: -1.806535243988037
    3. 'sys' → logprob: -2.306535243988037
    4. '
' → logprob: -9.056535720825195
    5. ' threading' → logprob: -10.556535720825195
    6. 'import' → logprob: -10.681535720825195
    7. '

' → logprob: -12.556535720825195
    8. ' if' → logprob: -12.681535720825195
    9. '    
' → logprob: -12.931535720825195
    10. '  
' → logprob: -13.431535720825195

Token 682: ' certains' (ID: 30681)
  Prédit: 'thread'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'thread' → logprob: -0.10821550339460373
    2. ' threading' → logprob: -2.358215570449829
    3. 'sys' → logprob: -4.98321533203125
    4. ' sys' → logprob: -7.23321533203125
    5. 'large' → logprob: -8.73321533203125
    6. ' le' → logprob: -9.48321533203125
    7. 'le' → logprob: -9.98321533203125
    8. 'les' → logprob: -11.23321533203125
    9. ' large' → logprob: -11.35821533203125
    10. '   ' → logprob: -11.35821533203125

Token 683: ' systèmes' (ID: 79573)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.46463820338249207
    2. ' systèmes' → logprob: -1.9646382331848145
    3. 'import' → logprob: -2.5896382331848145
    4. ' environ' → logprob: -3.0896382331848145
    5. ' sys' → logprob: -3.0896382331848145
    6. 'thread' → logprob: -3.7146382331848145
    7. 'systems' → logprob: -4.4646382331848145
    8. '#' → logprob: -5.2146382331848145
    9. 's' → logprob: -5.3396382331848145
    10. 'en' → logprob: -5.4646382331848145

Token 684: ' à' (ID: 1221)
  Prédit: 'thread'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'thread' → logprob: -0.00821489654481411
    2. 'sys' → logprob: -5.008214950561523
    3. 'if' → logprob: -6.508214950561523
    4. '
' → logprob: -12.758214950561523
    5. ' threading' → logprob: -13.008214950561523
    6. 'import' → logprob: -13.508214950561523
    7. '```' → logprob: -15.133214950561523
    8. '    
' → logprob: -15.758214950561523
    9. '

' → logprob: -16.133214950561523
    10. '_thread' → logprob: -16.633214950561523

Token 685: ' cause' (ID: 7075)
  Prédit: 'cause'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'cause' → logprob: -0.34401625394821167
    2. 'thread' → logprob: -1.5940163135528564
    3. 'rec' → logprob: -3.4690163135528564
    4. 'sys' → logprob: -4.469016075134277
    5. 'larg' → logprob: -4.594016075134277
    6. '100' → logprob: -4.719016075134277
    7. 'large' → logprob: -4.844016075134277
    8. '```' → logprob: -6.219016075134277
    9. 'stack' → logprob: -6.469016075134277
    10. 'long' → logprob: -6.469016075134277

Token 686: ' de' (ID: 334)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.04230113700032234
    2. 'sys' → logprob: -4.417301177978516
    3. 'd' → logprob: -5.042301177978516
    4. 'thread' → logprob: -5.167301177978516
    5. 'la' → logprob: -5.542301177978516
    6. ' la' → logprob: -6.042301177978516
    7. 'l' → logprob: -6.042301177978516
    8. ' l' → logprob: -6.417301177978516
    9. ' threading' → logprob: -6.667301177978516
    10. 'de' → logprob: -6.792301177978516

Token 687: ' profondeur' (ID: 128210)
  Prédit: 'thread'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'thread' → logprob: -0.020683543756604195
    2. 'sys' → logprob: -3.895683526992798
    3. 'la' → logprob: -9.520683288574219
    4. 'rec' → logprob: -11.520683288574219
    5. ' threading' → logprob: -11.520683288574219
    6. 'le' → logprob: -11.770683288574219
    7. 'import' → logprob: -12.020683288574219
    8. 'stack' → logprob: -12.145683288574219
    9. 'lim' → logprob: -12.270683288574219
    10. 'l' → logprob: -12.270683288574219

Token 688: ' de' (ID: 334)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.6357641816139221
    2. 'thread' → logprob: -0.8857641816139221
    3. 'if' → logprob: -2.8857641220092773
    4. ' threading' → logprob: -6.635764122009277
    5. 'def' → logprob: -8.010764122009277
    6. ' sys' → logprob: -8.635764122009277
    7. '   ' → logprob: -8.885764122009277
    8. ' if' → logprob: -9.010764122009277
    9. 'import' → logprob: -9.385764122009277
    10. '
' → logprob: -9.635764122009277

Token 689: ' réc' (ID: 36254)
  Prédit: 'rec'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.03957340493798256
    2. 'thread' → logprob: -4.0395731925964355
    3. 'la' → logprob: -4.2895731925964355
    4. 'sys' → logprob: -5.4145731925964355
    5. ' recursion' → logprob: -6.7895731925964355
    6. 'stack' → logprob: -7.6645731925964355
    7. 'l' → logprob: -7.6645731925964355
    8. 'r' → logprob: -8.164573669433594
    9. 'recursive' → logprob: -9.289573669433594
    10. 'python' → logprob: -9.289573669433594

Token 690: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.01482051145285368
    2. 'urs' → logprob: -4.889820575714111
    3. 'ur' → logprob: -5.139820575714111
    4. '```' → logprob: -7.139820575714111
    5. 'ursive' → logprob: -8.764820098876953
    6. 'urse' → logprob: -9.639820098876953
    7. '##' → logprob: -9.639820098876953
    8. 'u' → logprob: -9.764820098876953
    9. 'r' → logprob: -10.139820098876953
    10. 'c' → logprob: -10.389820098876953

Token 691: ' dans' (ID: 2671)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 692: ' DFS' (ID: 115767)
  Prédit: 'thread'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'thread' → logprob: -0.0011443839175626636
    2. '__' → logprob: -7.8761444091796875
    3. 'if' → logprob: -8.001144409179688
    4. 'main' → logprob: -8.126144409179688
    5. 'sys' → logprob: -9.626144409179688
    6. ' threading' → logprob: -9.751144409179688
    7. 'def' → logprob: -11.876144409179688
    8. '#' → logprob: -14.126144409179688
    9. '   ' → logprob: -14.251144409179688
    10. 'threads' → logprob: -16.126144409179688

Token 693: ' de' (ID: 334)
  Prédit: 'thread'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'thread' → logprob: -0.8344035148620605
    2. 'if' → logprob: -1.0844035148620605
    3. 'def' → logprob: -1.5844035148620605
    4. 'sys' → logprob: -4.3344035148620605
    5. '
' → logprob: -4.7094035148620605
    6. '    
' → logprob: -8.209403991699219
    7. '  
' → logprob: -9.459403991699219
    8. 'import' → logprob: -9.709403991699219
    9. ' threading' → logprob: -9.709403991699219
    10. '

' → logprob: -10.459403991699219

Token 694: ' matching' (ID: 20238)
  Prédit: 'thread'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'thread' → logprob: -0.0039006501901894808
    2. 'sys' → logprob: -5.878900527954102
    3. 'main' → logprob: -7.128900527954102
    4. '#' → logprob: -10.128900527954102
    5. 'le' → logprob: -10.128900527954102
    6. ' threading' → logprob: -10.128900527954102
    7. '   ' → logprob: -10.378900527954102
    8. 'if' → logprob: -10.378900527954102
    9. 'def' → logprob: -10.628900527954102
    10. 'try' → logprob: -10.878900527954102

Token 695: '
' (ID: 198)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.14034798741340637
    2. 'thread' → logprob: -2.140347957611084
    3. '
' → logprob: -4.515347957611084
    4. 'sys' → logprob: -6.390347957611084
    5. 'def' → logprob: -7.890347957611084
    6. '

' → logprob: -8.640348434448242
    7. ' threading' → logprob: -10.015348434448242
    8. '  
' → logprob: -10.390348434448242
    9. '    
' → logprob: -10.390348434448242
    10. ' if' → logprob: -10.515348434448242

Token 696: 'sys' (ID: 17324)
  Prédit: 'thread'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'thread' → logprob: -0.0052362410351634026
    2. 'if' → logprob: -5.2552361488342285
    3. ' threading' → logprob: -13.505236625671387
    4. 'sys' → logprob: -13.755236625671387
    5. ' if' → logprob: -17.88023567199707
    6. 'def' → logprob: -18.13023567199707
    7. '_thread' → logprob: -19.00523567199707
    8. 'Thread' → logprob: -19.38023567199707
    9. '
' → logprob: -19.88023567199707
    10. 'import' → logprob: -20.38023567199707

Token 697: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.00015347852604463696
    2. '.setdefault' → logprob: -9.000153541564941
    3. '.stdout' → logprob: -11.750153541564941
    4. '   ' → logprob: -12.125153541564941
    5. '.' → logprob: -12.375153541564941
    6. '.stdin' → logprob: -12.625153541564941
    7. 'rec' → logprob: -12.875153541564941
    8. 'set' → logprob: -13.625153541564941
    9. '.exit' → logprob: -13.625153541564941
    10. ' .' → logprob: -13.750153541564941

Token 698: 'rec' (ID: 9285)
  Prédit: 'rec'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rec' → logprob: -0.0002353640884393826
    2. 'set' → logprob: -8.500235557556152
    3. '_rec' → logprob: -10.750235557556152
    4. ' recursion' → logprob: -12.625235557556152
    5. 'Rec' → logprob: -12.875235557556152
    6. '.set' → logprob: -13.875235557556152
    7. 'sys' → logprob: -13.875235557556152
    8. 'limit' → logprob: -14.250235557556152
    9. '   ' → logprob: -14.375235557556152
    10. '_set' → logprob: -15.000235557556152

Token 699: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -6.869017852295656e-06
    2. 'ur' → logprob: -13.000006675720215
    3. 'limit' → logprob: -13.250006675720215
    4. 'urs' → logprob: -13.625006675720215
    5. '_limit' → logprob: -14.125006675720215
    6. 'usion' → logprob: -14.375006675720215
    7. 'ursive' → logprob: -15.250006675720215
    8. 'ursor' → logprob: -16.87500762939453
    9. 'ution' → logprob: -18.50000762939453
    10. 'ision' → logprob: -18.50000762939453

Token 700: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -9.088346359931165e-07
    2. 'lim' → logprob: -14.375000953674316
    3. '_limit' → logprob: -16.25
    4. 'depth' → logprob: -16.625
    5. ' limit' → logprob: -17.375
    6. '-' → logprob: -18.875
    7. 'limits' → logprob: -20.75
    8. '-limit' → logprob: -21.0
    9. '.limit' → logprob: -21.25
    10. '(limit' → logprob: -21.25

Token 701: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -2.816093228830141e-06
    2. ' (' → logprob: -13.12500286102295
    3. '((' → logprob: -15.00000286102295
    4. '(
' → logprob: -15.50000286102295
    5. '100' → logprob: -15.75000286102295
    6. '(int' → logprob: -17.250001907348633
    7. '250' → logprob: -18.125001907348633
    8. '(sys' → logprob: -18.125001907348633
    9. '10' → logprob: -18.500001907348633
    10. '()' → logprob: -18.500001907348633

Token 702: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.003178071230649948
    2. '100' → logprob: -5.753178119659424
    3. '200' → logprob: -15.503177642822266
    4. '１０' → logprob: -16.378177642822266
    5. '300' → logprob: -17.378177642822266
    6. '500' → logprob: -17.628177642822266
    7. '250' → logprob: -17.753177642822266
    8. '1' → logprob: -17.878177642822266
    9. '(' → logprob: -18.003177642822266
    10. '150' → logprob: -18.378177642822266

Token 703: '**' (ID: 410)
  Prédit: '**'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.014644562266767025
    2. '7' → logprob: -4.514644622802734
    3. '000' → logprob: -5.764644622802734
    4. '6' → logprob: -8.139644622802734
    5. '700' → logprob: -9.139644622802734
    6. '007' → logprob: -10.514644622802734
    7. '00' → logprob: -11.889644622802734
    8. '07' → logprob: -12.014644622802734
    9. '8' → logprob: -12.014644622802734
    10. '600' → logprob: -13.139644622802734

Token 704: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -9.114600834436715e-05
    2. '9' → logprob: -9.375091552734375
    3. '8' → logprob: -12.625091552734375
    4. '6' → logprob: -12.750091552734375
    5. '**' → logprob: -18.250091552734375
    6. '+' → logprob: -21.750091552734375
    7. '７' → logprob: -22.375091552734375
    8. '```' → logprob: -23.250091552734375
    9. '

' → logprob: -24.125091552734375
    10. '
' → logprob: -24.125091552734375

Token 705: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2383444905281067
    2. '
' → logprob: -1.738344430923462
    3. ')
' → logprob: -3.488344430923462
    4. '<|end|>' → logprob: -5.238344669342041
    5. 'thread' → logprob: -9.613344192504883
    6. '  
' → logprob: -10.113344192504883
    7. '#' → logprob: -10.113344192504883
    8. '
' → logprob: -10.238344192504883
    9. '<|end|>' → logprob: -10.238344192504883
    10. '    
' → logprob: -10.488344192504883

Token 706: 'thread' (ID: 9817)
  Prédit: 'thread'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'thread' → logprob: -0.06196914613246918
    2. 'if' → logprob: -2.811969041824341
    3. 'main' → logprob: -13.561968803405762
    4. ' threading' → logprob: -15.936968803405762
    5. ' if' → logprob: -18.561969757080078
    6. 't' → logprob: -18.561969757080078
    7. '(thread' → logprob: -19.186969757080078
    8. 'Thread' → logprob: -19.436969757080078
    9. '_thread' → logprob: -19.436969757080078
    10. '```' → logprob: -20.061969757080078

Token 707: 'ing' (ID: 289)
  Prédit: 'ing'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -1.0280383548888494e-06
    2. 'reading' → logprob: -14.625000953674316
    3. '=' → logprob: -14.875000953674316
    4. ' =' → logprob: -16.000001907348633
    5. 'ING' → logprob: -17.375001907348633
    6. '   ' → logprob: -17.500001907348633
    7. 'ading' → logprob: -18.000001907348633
    8. 'ding' → logprob: -18.625001907348633
    9. ' threading' → logprob: -19.000001907348633
    10. 'ed' → logprob: -19.375001907348633

Token 708: '.stack' (ID: 45133)
  Prédit: '.Thread'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Thread' → logprob: -0.0016600665403530002
    2. '.' → logprob: -6.501659870147705
    3. '.start' → logprob: -9.001660346984863
    4. '.Threading' → logprob: -11.001660346984863
    5. ' .' → logprob: -12.001660346984863
    6. '.thread' → logprob: -12.376660346984863
    7. '.stack' → logprob: -13.001660346984863
    8. '.Stack' → logprob: -13.376660346984863
    9. '.Popen' → logprob: -13.751660346984863
    10. '.Start' → logprob: -13.876660346984863

Token 709: '_size' (ID: 5044)
  Prédit: '_size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_size' → logprob: -0.0003612065047491342
    2. 'size' → logprob: -8.000361442565918
    3. '_SIZE' → logprob: -10.750361442565918
    4. '_set' → logprob: -14.250361442565918
    5. 'SIZE' → logprob: -14.250361442565918
    6. '_Size' → logprob: -14.750361442565918
    7. ' size' → logprob: -15.000361442565918
    8. 'Size' → logprob: -15.125361442565918
    9. '-size' → logprob: -15.250361442565918
    10. '\' → logprob: -15.250361442565918

Token 710: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.537868779967539e-06
    2. '((' → logprob: -12.125008583068848
    3. '()' → logprob: -13.625008583068848
    4. '(thread' → logprob: -14.000008583068848
    5. ' (' → logprob: -15.625008583068848
    6. '64' → logprob: -15.875008583068848
    7. '(int' → logprob: -15.875008583068848
    8. '409' → logprob: -16.37500762939453
    9. '(Thread' → logprob: -16.37500762939453
    10. '(pow' → logprob: -17.12500762939453

Token 711: '1' (ID: 16)
  Prédit: '134'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '134' → logprob: -0.26010197401046753
    2. '671' → logprob: -1.7601020336151123
    3. '1' → logprob: -3.1351020336151123
    4. '2' → logprob: -4.885101795196533
    5. '335' → logprob: -6.010101795196533
    6. '268' → logprob: -6.760101795196533
    7. '64' → logprob: -7.260101795196533
    8. '128' → logprob: -7.385101795196533
    9. '167' → logprob: -8.010102272033691
    10. '(' → logprob: -8.885102272033691

Token 712: ' <<' (ID: 2256)
  Prédit: '024'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '024' → logprob: -0.3064926564693451
    2. '048' → logprob: -1.8064926862716675
    3. '<<' → logprob: -3.181492567062378
    4. '073' → logprob: -4.556492805480957
    5. '344' → logprob: -5.056492805480957
    6. '027' → logprob: -5.556492805480957
    7. '347' → logprob: -5.556492805480957
    8. '346' → logprob: -5.681492805480957
    9. '072' → logprob: -5.931492805480957
    10. '486' → logprob: -6.431492805480957

Token 713: ' ' (ID: 220)
  Prédit: '27'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '27' → logprob: -0.002900686115026474
    2. '25' → logprob: -6.12790060043335
    3. '26' → logprob: -7.25290060043335
    4. '2' → logprob: -11.877901077270508
    5. '24' → logprob: -16.002901077270508
    6. '20' → logprob: -16.127901077270508
    7. '28' → logprob: -17.752901077270508
    8. '22' → logprob: -17.877901077270508
    9. '(' → logprob: -18.502901077270508
    10. '1' → logprob: -19.252901077270508

Token 714: '27' (ID: 2092)
  Prédit: '27'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '27' → logprob: -0.0026802949141710997
    2. '25' → logprob: -6.00268030166626
    3. '26' → logprob: -8.502679824829102
    4. '2' → logprob: -13.377679824829102
    5. '24' → logprob: -16.1276798248291
    6. '28' → logprob: -17.0026798248291
    7. '20' → logprob: -17.5026798248291
    8. '22' → logprob: -18.5026798248291
    9. '30' → logprob: -19.5026798248291
    10. '29' → logprob: -20.0026798248291

Token 715: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.062112435698509216
    2. ')' → logprob: -2.812112331390381
    3. ')

' → logprob: -8.937112808227539
    4. ')
' → logprob: -11.562112808227539
    5. ' )
' → logprob: -12.687112808227539
    6. ');
' → logprob: -16.43711280822754
    7. ')#' → logprob: -16.56211280822754
    8. '())
' → logprob: -16.68711280822754
    9. '),' → logprob: -16.81211280822754
    10. ' )' → logprob: -16.93711280822754

Token 716: 'thread' (ID: 9817)
  Prédit: 'thread'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'thread' → logprob: -0.0016034134896472096
    2. 't' → logprob: -6.501603603363037
    3. 'def' → logprob: -9.251603126525879
    4. 'if' → logprob: -12.376603126525879
    5. ' threading' → logprob: -15.001603126525879
    6. 'th' → logprob: -15.001603126525879
    7. 'Thread' → logprob: -15.376603126525879
    8. '_thread' → logprob: -17.376604080200195
    9. '```' → logprob: -18.126604080200195
    10. 'thr' → logprob: -18.251604080200195

Token 717: ' =' (ID: 314)
  Prédit: 'ing'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ing' → logprob: -1.6240566083070007e-06
    2. 'ING' → logprob: -13.750001907348633
    3. ' =' → logprob: -15.000001907348633
    4. '=' → logprob: -16.500001907348633
    5. 'ging' → logprob: -18.750001907348633
    6. 'инг' → logprob: -20.000001907348633
    7. '-ing' → logprob: -20.000001907348633
    8. '```' → logprob: -20.000001907348633
    9. 'ingt' → logprob: -20.125001907348633
    10. 'reading' → logprob: -20.375001907348633

Token 718: ' threading' (ID: 72047)
  Prédit: 'thread'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'thread' → logprob: -0.0031777136027812958
    2. ' threading' → logprob: -5.753177642822266
    3. 'Thread' → logprob: -19.628177642822266
    4. 'th' → logprob: -19.753177642822266
    5. '	thread' → logprob: -21.128177642822266
    6. '-thread' → logprob: -21.378177642822266
    7. 't' → logprob: -21.503177642822266
    8. '(thread' → logprob: -21.628177642822266
    9. '```' → logprob: -22.753177642822266
    10. '   ' → logprob: -22.878177642822266

Token 719: '.Thread' (ID: 15531)
  Prédit: '.Thread'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Thread' → logprob: -0.00013381359167397022
    2. '.thread' → logprob: -9.875133514404297
    3. '.' → logprob: -10.125133514404297
    4. '.Threading' → logprob: -10.875133514404297
    5. ' threading' → logprob: -11.250133514404297
    6. 'ing' → logprob: -11.625133514404297
    7. 'thread' → logprob: -14.000133514404297
    8. '(Thread' → logprob: -15.500133514404297
    9. '(thread' → logprob: -16.250133514404297
    10. ' .' → logprob: -16.875133514404297

Token 720: '(target' (ID: 16247)
  Prédit: '(target'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(target' → logprob: -0.0004900033236481249
    2. 'target' → logprob: -7.625490188598633
    3. ',target' → logprob: -14.625490188598633
    4. '```' → logprob: -14.625490188598633
    5. ' target' → logprob: -14.875490188598633
    6. '(' → logprob: -15.000490188598633
    7. '	target' → logprob: -15.375490188598633
    8. '[target' → logprob: -16.125490188598633
    9. 'Target' → logprob: -17.500490188598633
    10. 'TARGET' → logprob: -17.750490188598633

Token 721: '=' (ID: 28)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.03832352161407471
    2. '(main' → logprob: -3.288323402404785
    3. '=' → logprob: -8.288323402404785
    4. ' main' → logprob: -10.413323402404785
    5. '	main' → logprob: -15.163323402404785
    6. ')' → logprob: -15.288323402404785
    7. '(' → logprob: -16.4133243560791
    8. '.main' → logprob: -17.0383243560791
    9. '/main' → logprob: -17.9133243560791
    10. '_main' → logprob: -18.1633243560791

Token 722: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.25
    3. '	main' → logprob: -21.375
    4. '(main' → logprob: -21.5
    5. 'mainwindow' → logprob: -24.5
    6. '.main' → logprob: -24.75
    7. 'Main' → logprob: -26.625
    8. '/main' → logprob: -27.25
    9. '_main' → logprob: -27.25
    10. 'target' → logprob: -27.75

Token 723: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.011158766224980354
    2. ')
' → logprob: -4.5111589431762695
    3. ').' → logprob: -9.38615894317627
    4. 'start' → logprob: -12.13615894317627
    5. '),' → logprob: -12.26115894317627
    6. '()' → logprob: -12.26115894317627
    7. '())' → logprob: -12.38615894317627
    8. 'thread' → logprob: -13.38615894317627
    9. ')
' → logprob: -14.26115894317627
    10. 'target' → logprob: -14.51115894317627

Token 724: 'thread' (ID: 9817)
  Prédit: 'thread'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'thread' → logprob: -1.9361264946837764e-07
    2. ' thread' → logprob: -16.0
    3. '.thread' → logprob: -17.25
    4. 'start' → logprob: -20.375
    5. '(thread' → logprob: -21.125
    6. 'Thread' → logprob: -22.25
    7. '线程' → logprob: -23.125
    8. '_thread' → logprob: -23.375
    9. '	thread' → logprob: -23.375
    10. '-thread' → logprob: -23.625

Token 725: '.start' (ID: 10181)
  Prédit: '.start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.start' → logprob: -4.692145012086257e-05
    2. 'start' → logprob: -10.875046730041504
    3. '.run' → logprob: -11.125046730041504
    4. '.' → logprob: -11.250046730041504
    5. '.Start' → logprob: -16.75004768371582
    6. ':start' → logprob: -16.75004768371582
    7. ' start' → logprob: -17.87504768371582
    8. '.join' → logprob: -18.37504768371582
    9. '_start' → logprob: -19.37504768371582
    10. '	start' → logprob: -19.75004768371582

Token 726: '()
' (ID: 1234)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 727: 'thread' (ID: 9817)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 728: '.join' (ID: 11004)
  Prédit: '.join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.join' → logprob: -0.0015104549238458276
    2. '.' → logprob: -6.5015106201171875
    3. 'join' → logprob: -11.876510620117188
    4. '.j' → logprob: -14.376510620117188
    5. '.Join' → logprob: -14.626510620117188
    6. '.mainloop' → logprob: -17.001510620117188
    7. '.wait' → logprob: -17.251510620117188
    8. ' .' → logprob: -17.876510620117188
    9. '.run' → logprob: -17.876510620117188
    10. '.start' → logprob: -18.501510620117188

Token 729: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 727
Tokens correctement prédits (1ère position, stricte): 277
Tokens correctement prédits (1ère position, avec adaptation): 296
Tokens correctement prédits (top 10): 533
Précision stricte (1ère position): 38.10%
Précision adaptée (1ère position): 40.72%
Précision (top 10): 73.31%
================================================================================
