================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:17:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = 0
lines = []
try:
    while True:
        line = input()
        if line == '':
            break
        lines.append(list(map(int, line.split(','))))
        n += 1
except EOFError:
    pass

max_row = max(len(r) for r in lines)
dp = [0] * max_row
dp[0] = lines[0][0]

for i in range(1, n):
    row = lines[i]
    for j in range(len(row)-1, -1, -1):
        if j == 0:
            dp[j] = dp[j] + row[j]
        elif j == len(row)-1:
            dp[j] = dp[j-1] + row[j]
        else:
            dp[j] = max(dp[j-1], dp[j]) + row[j]

print(max(dp[:len(lines[-1])]))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: '0' (ID: 15)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.23482748866081238
    2. '5' → logprob: -1.7348275184631348
    3. '0' → logprob: -3.7348275184631348
    4. ' ' → logprob: -5.609827518463135
    5. '1' → logprob: -5.984827518463135
    6. '42' → logprob: -5.984827518463135
    7. '4' → logprob: -8.609827041625977
    8. '100' → logprob: -10.234827041625977
    9. '20' → logprob: -10.859827041625977
    10. 'int' → logprob: -11.109827041625977

Token 4: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.48354804515838623
    2. '\n' → logprob: -1.6085480451583862
    3. '\' → logprob: -2.233548164367676
    4. '```' → logprob: -3.358548164367676
    5. '<|end|>' → logprob: -3.983548164367676
    6. '
' → logprob: -4.733548164367676
    7. '#' → logprob: -5.608548164367676
    8. '' → logprob: -6.233548164367676
    9. 'n' → logprob: -6.733548164367676
    10. ' +' → logprob: -7.108548164367676

Token 5: 'lines' (ID: 10105)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2711007297039032
    2. '```' → logprob: -2.6461007595062256
    3. '\' → logprob: -2.7711007595062256
    4. '<|end|>' → logprob: -3.2711007595062256
    5. '
' → logprob: -4.5211005210876465
    6. '#' → logprob: -4.5211005210876465
    7. 'n' → logprob: -4.5211005210876465
    8. ' ' → logprob: -4.6461005210876465
    9. '+' → logprob: -5.6461005210876465
    10. '' → logprob: -5.8961005210876465

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6323596239089966
    2. '=' → logprob: -2.132359504699707
    3. '```' → logprob: -2.507359504699707
    4. '\' → logprob: -3.007359504699707
    5. ' =' → logprob: -3.132359504699707
    6. '+' → logprob: -3.132359504699707
    7. '.' → logprob: -3.507359504699707
    8. '[n' → logprob: -4.007359504699707
    9. '\n' → logprob: -4.132359504699707
    10. ''' → logprob: -4.257359504699707

Token 7: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.37711113691329956
    2. ' []' → logprob: -1.2521111965179443
    3. '[' → logprob: -3.8771111965179443
    4. ' [' → logprob: -6.127110958099365
    5. ''' → logprob: -6.627110958099365
    6. '```' → logprob: -6.752110958099365
    7. ' ' → logprob: -7.377110958099365
    8. '['' → logprob: -7.502110958099365
    9. '"' → logprob: -7.752110958099365
    10. '""' → logprob: -8.502111434936523

Token 8: 'try' (ID: 1806)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.982273280620575
    2. 'while' → logprob: -0.982273280620575
    3. '\' → logprob: -1.8572733402252197
    4. 'for' → logprob: -3.1072733402252197
    5. '```' → logprob: -4.357273101806641
    6. ' while' → logprob: -4.607273101806641
    7. '
' → logprob: -4.607273101806641
    8. 'n' → logprob: -4.857273101806641
    9. '=' → logprob: -6.107273101806641
    10. '#' → logprob: -6.607273101806641

Token 9: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -5.204720582696609e-05
    2. ':
' → logprob: -10.250052452087402
    3. ' :' → logprob: -11.250052452087402
    4. ':**' → logprob: -14.250052452087402
    5. '':' → logprob: -14.375052452087402
    6. ':n' → logprob: -14.625052452087402
    7. '':'' → logprob: -15.250052452087402
    8. '[:]' → logprob: -15.500052452087402
    9. '   ' → logprob: -15.625052452087402
    10. '":' → logprob: -15.875052452087402

Token 10: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18552856147289276
    2. ':' → logprob: -1.8105285167694092
    3. ' :' → logprob: -5.560528755187988
    4. ':
' → logprob: -7.185528755187988
    5. ' ' → logprob: -7.935528755187988
    6. ' to' → logprob: -9.185528755187988
    7. ' lines' → logprob: -9.310528755187988
    8. ' n' → logprob: -9.310528755187988
    9. ' except' → logprob: -9.310528755187988
    10. '[' → logprob: -9.685528755187988

Token 11: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2549264430999756
    2. ' lines' → logprob: -2.2549264430999756
    3. ' n' → logprob: -2.5049264430999756
    4. ' line' → logprob: -3.6299264430999756
    5. ' while' → logprob: -5.254926681518555
    6. ' readline' → logprob: -5.754926681518555
    7. '    ' → logprob: -6.629926681518555
    8. ' input' → logprob: -7.629926681518555
    9. 'n' → logprob: -7.879926681518555
    10. ' for' → logprob: -8.254926681518555

Token 12: ' True' (ID: 6432)
  Prédit: ' n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.16490302979946136
    2. ' True' → logprob: -1.9149030447006226
    3. ' ' → logprob: -5.914903163909912
    4. 'n' → logprob: -6.664903163909912
    5. ' lines' → logprob: -7.914903163909912
    6. 'True' → logprob: -8.789902687072754
    7. ' not' → logprob: -8.914902687072754
    8. ' ' → logprob: -10.914902687072754
    9. ' (' → logprob: -12.164902687072754
    10. ' a' → logprob: -12.664902687072754

Token 13: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002149802603526041
    2. ':
' → logprob: -9.500214576721191
    3. ' :' → logprob: -10.125214576721191
    4. '):' → logprob: -10.125214576721191
    5. '       ' → logprob: -10.500214576721191
    6. '   ' → logprob: -11.250214576721191
    7. ':n' → logprob: -12.125214576721191
    8. '():' → logprob: -12.375214576721191
    9. ':**' → logprob: -13.000214576721191
    10. '':' → logprob: -14.125214576721191

Token 14: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.43303370475769043
    2. '   ' → logprob: -1.0580337047576904
    3. ' lines' → logprob: -6.6830339431762695
    4. 'n' → logprob: -7.1830339431762695
    5. '\n' → logprob: -7.3080339431762695
    6. ' readline' → logprob: -8.05803394317627
    7. '    
' → logprob: -8.80803394317627
    8. ' line' → logprob: -8.93303394317627
    9. ' n' → logprob: -9.18303394317627
    10. '```' → logprob: -9.30803394317627

Token 15: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.6793060898780823
    2. '   ' → logprob: -0.8043060898780823
    3. 'line' (adapté à ' line') → logprob: -3.1793060302734375
    4. ' lines' → logprob: -6.1793060302734375
    5. ' ' → logprob: -7.5543060302734375
    6. '```' → logprob: -8.179306030273438
    7. ' s' → logprob: -8.429306030273438
    8. ' l' → logprob: -8.804306030273438
    9. 's' → logprob: -8.929306030273438
    10. ' input' → logprob: -9.304306030273438

Token 16: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.003180563682690263
    2. '=' → logprob: -5.753180503845215
    3. ' ' → logprob: -13.253180503845215
    4. 's' → logprob: -14.378180503845215
    5. ' +=' → logprob: -15.878180503845215
    6. '_' → logprob: -16.00318145751953
    7. ')' → logprob: -16.75318145751953
    8. '=input' → logprob: -17.12818145751953
    9. ' =)' → logprob: -17.37818145751953
    10. ' =
' → logprob: -17.62818145751953

Token 17: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.1128629818558693
    2. 'input' → logprob: -2.237863063812256
    3. ' ' → logprob: -10.237862586975098
    4. '   ' → logprob: -13.237862586975098
    5. '=input' → logprob: -13.737862586975098
    6. '(input' → logprob: -14.112862586975098
    7. '	input' → logprob: -15.612862586975098
    8. '<input' → logprob: -15.612862586975098
    9. ' raw' → logprob: -15.987862586975098
    10. '```' → logprob: -15.987862586975098

Token 18: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5348471999168396
    2. '(' → logprob: -0.9098471999168396
    3. '('' → logprob: -4.659847259521484
    4. '("("' → logprob: -6.784847259521484
    5. '("")' → logprob: -7.409847259521484
    6. '```' → logprob: -8.534847259521484
    7. '("' → logprob: -9.534847259521484
    8. ')' → logprob: -10.409847259521484
    9. '(
' → logprob: -11.159847259521484
    10. '`()' → logprob: -11.284847259521484

Token 19: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 20: ' if' (ID: 538)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.0190604105591774
    2. ' if' → logprob: -4.3940606117248535
    3. '       ' → logprob: -6.1440606117248535
    4. 'lines' → logprob: -6.7690606117248535
    5. ' n' → logprob: -7.3940606117248535
    6. '\n' → logprob: -7.6440606117248535
    7. '	lines' → logprob: -8.144060134887695
    8. 'n' → logprob: -8.269060134887695
    9. 'if' (adapté à ' if') → logprob: -8.269060134887695
    10. '   ' → logprob: -8.394060134887695

Token 21: ' line' (ID: 2543)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4787888526916504
    2. ' line' → logprob: -0.9787888526916504
    3. ' ' → logprob: -6.22878885269165
    4. ' n' → logprob: -6.85378885269165
    5. 'not' → logprob: -7.22878885269165
    6. 'line' → logprob: -7.60378885269165
    7. ' lines' → logprob: -8.228788375854492
    8. ' len' → logprob: -9.103788375854492
    9. 'n' → logprob: -10.103788375854492
    10. ' ' → logprob: -11.728788375854492

Token 22: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.029358139261603355
    2. '==' → logprob: -4.02935791015625
    3. '.startswith' → logprob: -5.02935791015625
    4. '.strip' → logprob: -5.90435791015625
    5. '.' → logprob: -7.02935791015625
    6. ' !=' → logprob: -8.52935791015625
    7. ' ' → logprob: -8.77935791015625
    8. ' .' → logprob: -8.90435791015625
    9. '.endswith' → logprob: -9.15435791015625
    10. '<|end|>' → logprob: -9.52935791015625

Token 23: ' '':
' (ID: 125614)
  Prédit: '""'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '""' → logprob: -0.6734948754310608
    2. '''' → logprob: -1.048494815826416
    3. ''' → logprob: -2.423494815826416
    4. '"' → logprob: -3.423494815826416
    5. '"":' → logprob: -4.798494815826416
    6. ' ""' → logprob: -5.173494815826416
    7. ' ''' → logprob: -5.548494815826416
    8. ' '' → logprob: -9.048495292663574
    9. ' "":
' → logprob: -9.298495292663574
    10. ' '':
' → logprob: -9.673495292663574

Token 24: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013296448159962893
    2. ' break' → logprob: -7.12632942199707
    3. '       ' → logprob: -9.00132942199707
    4. ' ' → logprob: -9.25132942199707
    5. ':' → logprob: -9.62632942199707
    6. '            
' → logprob: -10.25132942199707
    7. '   ' → logprob: -10.62632942199707
    8. '<|end|>' → logprob: -10.75132942199707
    9. '<|end|>' → logprob: -11.00132942199707
    10. '          ' → logprob: -11.00132942199707

Token 25: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.09940312802791595
    2. '           ' → logprob: -2.474403142929077
    3. 'break' (adapté à ' break') → logprob: -4.599402904510498
    4. ' ' → logprob: -8.974403381347656
    5. '       ' → logprob: -9.474403381347656
    6. '   ' → logprob: -9.724403381347656
    7. '	break' → logprob: -10.349403381347656
    8. '_break' → logprob: -10.724403381347656
    9. '```' → logprob: -11.224403381347656
    10. '               ' → logprob: -11.974403381347656

Token 26: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.756665050983429
    2. '\n' → logprob: -1.0066649913787842
    3. '
' → logprob: -2.256664991378784
    4. '<|end|>' → logprob: -4.006665229797363
    5. '        
' → logprob: -4.256665229797363
    6. '\' → logprob: -4.506665229797363
    7. '<|end|>' → logprob: -5.881665229797363
    8. '            
' → logprob: -6.131665229797363
    9. '        ' → logprob: -6.631665229797363
    10. '```' → logprob: -6.881665229797363

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0014448761940002441
    2. '
' → logprob: -7.6264448165893555
    3. '   ' → logprob: -8.501444816589355
    4. '           ' → logprob: -8.751444816589355
    5. '\n' → logprob: -9.001444816589355
    6. '        ' → logprob: -9.751444816589355
    7. '        
' → logprob: -9.751444816589355
    8. ')' → logprob: -10.001444816589355
    9. '<|end|>' → logprob: -10.001444816589355
    10. '\' → logprob: -10.376444816589355

Token 28: ' lines' (ID: 8698)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05273481085896492
    2. ' lines' → logprob: -3.052734851837158
    3. '   ' → logprob: -5.802734851837158
    4. 'n' → logprob: -7.677734851837158
    5. ' n' → logprob: -8.052734375
    6. '           ' → logprob: -8.552734375
    7. '```' → logprob: -10.177734375
    8. '	lines' → logprob: -10.177734375
    9. 'lines' (adapté à ' lines') → logprob: -10.552734375
    10. '(lines' → logprob: -12.552734375

Token 29: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008644713088870049
    2. '.' → logprob: -4.7586445808410645
    3. '.extend' → logprob: -10.508645057678223
    4. 'append' → logprob: -13.383645057678223
    5. '.app' → logprob: -14.508645057678223
    6. ' .' → logprob: -15.133645057678223
    7. '.push' → logprob: -16.258644104003906
    8. '.Append' → logprob: -16.258644104003906
    9. '.add' → logprob: -16.383644104003906
    10. '   ' → logprob: -16.758644104003906

Token 30: '(list' (ID: 13116)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.018151700496673584
    2. '(' → logprob: -4.018151760101318
    3. '(lines' → logprob: -14.51815128326416
    4. '(
' → logprob: -14.51815128326416
    5. ')' → logprob: -15.64315128326416
    6. '(Line' → logprob: -15.64315128326416
    7. '(

' → logprob: -15.89315128326416
    8. '('' → logprob: -16.268152236938477
    9. '[line' → logprob: -16.768152236938477
    10. '(l' → logprob: -17.143152236938477

Token 31: '(map' (ID: 16946)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.007624372839927673
    2. '(' → logprob: -4.88262414932251
    3. '(map' → logprob: -11.882624626159668
    4. ')' → logprob: -12.632624626159668
    5. '(
' → logprob: -12.757624626159668
    6. '(input' → logprob: -14.257624626159668
    7. '('' → logprob: -14.257624626159668
    8. '()' → logprob: -14.382624626159668
    9. '(

' → logprob: -14.507624626159668
    10. '(lines' → logprob: -15.257624626159668

Token 32: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06418507546186447
    2. '(str' → logprob: -2.81418514251709
    3. '(' → logprob: -6.18918514251709
    4. '(lambda' → logprob: -8.81418514251709
    5. ')' → logprob: -12.56418514251709
    6. 'str' → logprob: -12.93918514251709
    7. '(
' → logprob: -13.18918514251709
    8. 'int' → logprob: -13.31418514251709
    9. ' (' → logprob: -13.68918514251709
    10. '(ord' → logprob: -13.81418514251709

Token 33: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.002889159834012389
    2. '(' → logprob: -5.877889156341553
    3. ' (' → logprob: -10.377889633178711
    4. '(
' → logprob: -11.127889633178711
    5. ')' → logprob: -11.252889633178711
    6. ',line' → logprob: -12.002889633178711
    7. ',' → logprob: -12.377889633178711
    8. '(lines' → logprob: -12.627889633178711
    9. '(input' → logprob: -12.877889633178711
    10. '))' → logprob: -13.502889633178711

Token 34: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.1429724544286728
    2. 'line' → logprob: -2.017972469329834
    3. '(line' → logprob: -8.267971992492676
    4. '#line' → logprob: -11.142971992492676
    5. '	line' → logprob: -11.392971992492676
    6. '[line' → logprob: -12.017971992492676
    7. '=line' → logprob: -12.767971992492676
    8. ',line' → logprob: -13.142971992492676
    9. ')' → logprob: -14.267971992492676
    10. ' ' → logprob: -14.267971992492676

Token 35: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.9557665586471558
    2. '.split' → logprob: -0.9557665586471558
    3. '.strip' → logprob: -1.8307665586471558
    4. '.' → logprob: -2.7057666778564453
    5. ' .' → logprob: -5.955766677856445
    6. '()' → logprob: -7.205766677856445
    7. 'split' → logprob: -8.330766677856445
    8. 'strip' → logprob: -9.580766677856445
    9. '.rstrip' → logprob: -10.205766677856445
    10. '('.' → logprob: -10.580766677856445

Token 36: '(','' (ID: 170650)
  Prédit: '())))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '())))' → logprob: -0.11242756992578506
    2. '()))' → logprob: -2.8624274730682373
    3. ')))' → logprob: -4.237427711486816
    4. '())))
' → logprob: -4.362427711486816
    5. '()' → logprob: -4.487427711486816
    6. '('' → logprob: -5.237427711486816
    7. '())' → logprob: -5.362427711486816
    8. '')))' → logprob: -7.987427711486816
    9. '(' → logprob: -8.612427711486816
    10. '))))' → logprob: -9.237427711486816

Token 37: '))))
' (ID: 55084)
  Prédit: ')))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.05047685280442238
    2. '))))' → logprob: -3.0504767894744873
    3. ')' → logprob: -6.675477027893066
    4. ')))
' → logprob: -8.050477027893066
    5. '))))
' → logprob: -8.800477027893066
    6. '))' → logprob: -9.050477027893066
    7. '')))' → logprob: -11.425477027893066
    8. ')))

' → logprob: -12.050477027893066
    9. ')));' → logprob: -12.300477027893066
    10. '))))

' → logprob: -12.300477027893066

Token 38: '       ' (ID: 309)
  Prédit: ' except'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' except' → logprob: -0.7607128024101257
    2. '   ' → logprob: -1.2607128620147705
    3. 'except' → logprob: -1.6357128620147705
    4. ')' → logprob: -3.5107128620147705
    5. '       ' → logprob: -4.385712623596191
    6. '\n' → logprob: -6.260712623596191
    7. '	except' → logprob: -6.260712623596191
    8. '    
' → logprob: -6.510712623596191
    9. '
' → logprob: -6.635712623596191
    10. '```' → logprob: -7.010712623596191

Token 39: ' n' (ID: 297)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034632112830877304
    2. 'n' (adapté à ' n') → logprob: -4.159632205963135
    3. '   ' → logprob: -4.159632205963135
    4. ' n' → logprob: -6.409632205963135
    5. 'except' → logprob: -7.409632205963135
    6. ' except' → logprob: -7.659632205963135
    7. '           ' → logprob: -10.284631729125977
    8. ' ' → logprob: -10.409631729125977
    9. '  ' → logprob: -12.534631729125977
    10. '(n' → logprob: -12.534631729125977

Token 40: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.11320560425519943
    2. '+=' → logprob: -2.488205671310425
    3. '+' → logprob: -3.738205671310425
    4. ' +' → logprob: -8.863205909729004
    5. '=' → logprob: -11.363205909729004
    6. '++' → logprob: -11.738205909729004
    7. ' =' → logprob: -11.988205909729004
    8. ' ' → logprob: -12.863205909729004
    9. '+++' → logprob: -13.113205909729004
    10. '<|end|>' → logprob: -13.738205909729004

Token 41: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0067156096920371056
    2. ' ' → logprob: -5.006715774536133
    3. '   ' → logprob: -16.131715774536133
    4. '+' → logprob: -16.506715774536133
    5. '```' → logprob: -17.506715774536133
    6. ' ' → logprob: -17.569215774536133
    7. '  ' → logprob: -18.194215774536133
    8. ' +' → logprob: -18.256715774536133
    9. 'len' → logprob: -18.569215774536133
    10. '１' → logprob: -19.006715774536133

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9266199160483666e-05
    2. ' ' → logprob: -10.875019073486328
    3. 'len' → logprob: -15.125019073486328
    4. '   ' → logprob: -17.937519073486328
    5. '```' → logprob: -18.375019073486328
    6. '+' → logprob: -18.562519073486328
    7. '  ' → logprob: -18.687519073486328
    8. '<|end|>' → logprob: -19.062519073486328
    9. '１' → logprob: -19.187519073486328
    10. '2' → logprob: -19.375019073486328

Token 43: '
' (ID: 198)
  Prédit: 'except'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'except' → logprob: -0.6073057651519775
    2. '
' → logprob: -1.3573057651519775
    3. ' except' → logprob: -1.7323057651519775
    4. '\n' → logprob: -4.607305526733398
    5. '<|end|>' → logprob: -5.607305526733398
    6. '   ' → logprob: -6.607305526733398
    7. '```' → logprob: -6.607305526733398
    8. '    
' → logprob: -6.982305526733398
    9. '	except' → logprob: -7.482305526733398
    10. '<|end|>' → logprob: -7.857305526733398

Token 44: 'except' (ID: 25035)
  Prédit: 'except'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'except' → logprob: -0.2534118890762329
    2. ' except' → logprob: -1.753411889076233
    3. '
' → logprob: -4.003411769866943
    4. '   ' → logprob: -4.003411769866943
    5. '	except' → logprob: -5.628411769866943
    6. '<|end|>' → logprob: -5.628411769866943
    7. '    
' → logprob: -5.878411769866943
    8. '```' → logprob: -6.128411769866943
    9. '<|end|>' → logprob: -7.503411769866943
    10. '\n' → logprob: -8.628412246704102

Token 45: ' EOF' (ID: 72412)
  Prédit: ' EOF'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' EOF' → logprob: -0.0019769303034991026
    2. 'EOF' → logprob: -6.75197696685791
    3. ' ' → logprob: -7.12697696685791
    4. ' ' → logprob: -13.87697696685791
    5. ' Keyboard' → logprob: -14.37697696685791
    6. ' eof' → logprob: -14.50197696685791
    7. ' Exception' → logprob: -15.00197696685791
    8. '  ' → logprob: -15.75197696685791
    9. ' E' → logprob: -15.87697696685791
    10. ' 
' → logprob: -16.251976013183594

Token 46: 'Error' (ID: 2255)
  Prédit: 'Error'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Error' → logprob: -3.650518920039758e-06
    2. 'rror' → logprob: -12.625003814697266
    3. 'error' → logprob: -15.250003814697266
    4. ' Error' → logprob: -18.875003814697266
    5. '    ' → logprob: -19.250003814697266
    6. '```' → logprob: -19.250003814697266
    7. 'EOF' → logprob: -19.375003814697266
    8. '   ' → logprob: -19.375003814697266
    9. ':' → logprob: -19.375003814697266
    10. 'ERROR' → logprob: -19.500003814697266

Token 47: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.2987729102605954e-05
    2. ':
' → logprob: -10.125042915344238
    3. ':**' → logprob: -13.625042915344238
    4. '):' → logprob: -14.375042915344238
    5. ' :' → logprob: -15.375042915344238
    6. '():' → logprob: -15.750042915344238
    7. ':return' → logprob: -15.875042915344238
    8. '   ' → logprob: -16.125043869018555
    9. '<|end|>' → logprob: -16.125043869018555
    10. '>:' → logprob: -16.500043869018555

Token 48: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.020601212978363037
    2. ' pass' → logprob: -3.895601272583008
    3. 'pass' → logprob: -10.520601272583008
    4. '	pass' → logprob: -11.520601272583008
    5. ' break' → logprob: -11.520601272583008
    6. '   ' → logprob: -12.395601272583008
    7. '    ' → logprob: -12.895601272583008
    8. '       ' → logprob: -13.145601272583008
    9. ' ' → logprob: -13.520601272583008
    10. ' None' → logprob: -14.020601272583008

Token 49: ' pass' (ID: 1853)
  Prédit: ' pass'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' pass' → logprob: -0.06229659169912338
    2. 'pass' (adapté à ' pass') → logprob: -2.8122966289520264
    3. '   ' → logprob: -8.062296867370605
    4. '	pass' → logprob: -12.187296867370605
    5. ' break' → logprob: -12.687296867370605
    6. 'n' → logprob: -13.062296867370605
    7. ' None' → logprob: -13.937296867370605
    8. 'break' → logprob: -14.062296867370605
    9. 'pas' → logprob: -14.562296867370605
    10. ' ' → logprob: -14.812296867370605

Token 50: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 51: 'max' (ID: 3228)
  Prédit: 'matrix'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'matrix' → logprob: -0.9456250667572021
    2. 'max' → logprob: -1.3206250667572021
    3. 'result' → logprob: -2.320625066757202
    4. 'm' → logprob: -2.445625066757202
    5. 'for' → logprob: -3.070625066757202
    6. 'sum' → logprob: -3.570625066757202
    7. 'print' → logprob: -4.195625305175781
    8. 'n' → logprob: -4.195625305175781
    9. 'if' → logprob: -4.320625305175781
    10. 'dp' → logprob: -5.070625305175781

Token 52: '_row' (ID: 19157)
  Prédit: '_val'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_val' → logprob: -0.5798723697662354
    2. '_value' → logprob: -1.7048723697662354
    3. '_len' → logprob: -2.3298723697662354
    4. '_sum' → logprob: -2.4548723697662354
    5. '_' → logprob: -2.9548723697662354
    6. '_length' → logprob: -5.079872131347656
    7. '_line' → logprob: -5.704872131347656
    8. '_row' → logprob: -5.704872131347656
    9. '_values' → logprob: -6.079872131347656
    10. '_height' → logprob: -6.704872131347656

Token 53: ' =' (ID: 314)
  Prédit: '_sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sum' → logprob: -0.08401581645011902
    2. '_s' → logprob: -3.5840158462524414
    3. ' =' → logprob: -3.8340158462524414
    4. 's' → logprob: -3.9590158462524414
    5. '_length' → logprob: -5.459015846252441
    6. '_len' → logprob: -5.584015846252441
    7. 'sum' → logprob: -6.334015846252441
    8. '=' → logprob: -6.959015846252441
    9. '_index' → logprob: -7.959015846252441
    10. '_max' → logprob: -7.959015846252441

Token 54: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2553310990333557
    2. ' max' → logprob: -2.630331039428711
    3. '[max' → logprob: -2.755331039428711
    4. 'n' → logprob: -3.005331039428711
    5. 'len' → logprob: -4.130331039428711
    6. '0' → logprob: -4.630331039428711
    7. '[n' → logprob: -5.130331039428711
    8. ' n' → logprob: -5.630331039428711
    9. '[' → logprob: -6.005331039428711
    10. '[len' → logprob: -6.630331039428711

Token 55: '(len' (ID: 14990)
  Prédit: '(lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.05138693004846573
    2. '(n' → logprob: -3.676386833190918
    3. '(len' → logprob: -4.176386833190918
    4. '(max' → logprob: -5.051386833190918
    5. '(rows' → logprob: -6.551386833190918
    6. '(line' → logprob: -7.676386833190918
    7. '(sum' → logprob: -7.926386833190918
    8. '(' → logprob: -8.301386833190918
    9. '([' → logprob: -8.426386833190918
    10. '(row' → logprob: -9.051386833190918

Token 56: '(r' (ID: 4729)
  Prédit: '(row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -0.022693712264299393
    2. '(lines' → logprob: -4.272693634033203
    3. '(line' → logprob: -5.272693634033203
    4. '(rows' → logprob: -5.772693634033203
    5. '(r' → logprob: -9.272693634033203
    6. 'row' → logprob: -9.647693634033203
    7. '(' → logprob: -10.397693634033203
    8. '(l' → logprob: -11.022693634033203
    9. ' row' → logprob: -11.522693634033203
    10. ')' → logprob: -11.647693634033203

Token 57: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.05935109406709671
    2. 'ow' → logprob: -2.9343512058258057
    3. 'ows' → logprob: -5.434350967407227
    4. '))' → logprob: -10.184350967407227
    5. 'o' → logprob: -10.934350967407227
    6. 'e' → logprob: -11.684350967407227
    7. ' for' → logprob: -12.309350967407227
    8. 'for' → logprob: -12.559350967407227
    9. ' )' → logprob: -12.684350967407227
    10. '(row' → logprob: -12.684350967407227

Token 58: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.31153255701065063
    2. ' for' → logprob: -1.8115324974060059
    3. '(lines' → logprob: -2.686532497406006
    4. 'for' → logprob: -3.561532497406006
    5. '()' → logprob: -5.561532497406006
    6. '(' → logprob: -6.811532497406006
    7. '(line' → logprob: -7.061532497406006
    8. '(rows' → logprob: -7.811532497406006
    9. ' )' → logprob: -7.936532497406006
    10. '(r' → logprob: -8.186532974243164

Token 59: ' r' (ID: 428)
  Prédit: ' lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.05490518733859062
    2. 'lines' → logprob: -2.9299051761627197
    3. '(lines' → logprob: -11.05490493774414
    4. '	lines' → logprob: -12.05490493774414
    5. '_lines' → logprob: -15.05490493774414
    6. ' ' → logprob: -15.30490493774414
    7. ' linhas' → logprob: -15.55490493774414
    8. 'rows' → logprob: -15.92990493774414
    9. ' rows' → logprob: -16.17990493774414
    10. ' lignes' → logprob: -16.30490493774414

Token 60: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4294911026954651
    2. ' lines' → logprob: -1.5544910430908203
    3. 'lines' → logprob: -2.1794910430908203
    4. ' ' → logprob: -4.55449104309082
    5. '(lines' → logprob: -4.80449104309082
    6. '_lines' → logprob: -6.17949104309082
    7. ')' → logprob: -6.67949104309082
    8. 'ines' → logprob: -7.30449104309082
    9. '	lines' → logprob: -7.42949104309082
    10. 'in' → logprob: -8.30449104309082

Token 61: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.02630830556154251
    2. ' lines' → logprob: -3.651308298110962
    3. '(lines' → logprob: -12.151308059692383
    4. '	lines' → logprob: -13.276308059692383
    5. 'rows' → logprob: -14.776308059692383
    6. ')' → logprob: -15.026308059692383
    7. '.lines' → logprob: -16.401308059692383
    8. ' ' → logprob: -16.901308059692383
    9. '_lines' → logprob: -17.151308059692383
    10. 'line' → logprob: -17.276308059692383

Token 62: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00014776040916331112
    2. ' )' → logprob: -9.250147819519043
    3. ')
' → logprob: -10.000147819519043
    4. '))' → logprob: -12.750147819519043
    5. 'if' → logprob: -14.250147819519043
    6. ')+' → logprob: -14.750147819519043
    7. ')>' → logprob: -15.125147819519043
    8. ')

' → logprob: -15.375147819519043
    9. ' if' → logprob: -16.000146865844727
    10. '   ' → logprob: -16.000146865844727

Token 63: 'dp' (ID: 19037)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.2694188058376312
    2. 'result' → logprob: -2.519418716430664
    3. 'matrix' → logprob: -2.519418716430664
    4. '
' → logprob: -3.394418716430664
    5. 'print' → logprob: -4.144418716430664
    6. 'for' → logprob: -4.894418716430664
    7. 'm' → logprob: -5.269418716430664
    8. ' max' → logprob: -6.144418716430664
    9. ' for' → logprob: -6.394418716430664
    10. ' matrix' → logprob: -6.769418716430664

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0014122584834694862
    2. '=' → logprob: -6.626412391662598
    3. '[' → logprob: -9.876412391662598
    4. ' ' → logprob: -11.001412391662598
    5. ' =[' → logprob: -11.501412391662598
    6. '_' → logprob: -13.126412391662598
    7. '=[' → logprob: -13.876412391662598
    8. '=[]' → logprob: -13.876412391662598
    9. ' ' → logprob: -14.251412391662598
    10. '[]' → logprob: -14.626412391662598

Token 65: ' [' (ID: 723)
  Prédit: '[['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[[' → logprob: -0.45483672618865967
    2. ' [[' → logprob: -1.2048367261886597
    3. '[' → logprob: -2.829836845397949
    4. ' [' → logprob: -5.079836845397949
    5. '[n' → logprob: -8.07983684539795
    6. '[len' → logprob: -9.95483684539795
    7. 'lines' → logprob: -9.95483684539795
    8. ' lines' → logprob: -10.57983684539795
    9. '[]' → logprob: -12.20483684539795
    10. '[list' → logprob: -12.20483684539795

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03807041049003601
    2. '[' → logprob: -3.4130704402923584
    3. 'float' → logprob: -5.663070201873779
    4. ' [' → logprob: -8.163070678710938
    5. '-' → logprob: -8.413070678710938
    6. ' ' → logprob: -9.163070678710938
    7. '[-' → logprob: -9.163070678710938
    8. 'False' → logprob: -9.913070678710938
    9. '1' → logprob: -10.038070678710938
    10. '[int' → logprob: -10.413070678710938

Token 67: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.002463167766109109
    2. ']*' → logprob: -6.502463340759277
    3. ']*(' → logprob: -7.127463340759277
    4. ' ]' → logprob: -9.252463340759277
    5. ' for' → logprob: -10.252463340759277
    6. 'for' → logprob: -11.002463340759277
    7. ']+' → logprob: -12.252463340759277
    8. ',' → logprob: -13.752463340759277
    9. '[' → logprob: -14.252463340759277
    10. ')' → logprob: -14.252463340759277

Token 68: ' *' (ID: 425)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.3250526785850525
    2. ' *' → logprob: -1.4500527381896973
    3. ']' → logprob: -3.7000527381896973
    4. '*(' → logprob: -4.450052738189697
    5. ']*(' → logprob: -6.450052738189697
    6. ' for' → logprob: -6.700052738189697
    7. '+' → logprob: -6.700052738189697
    8. ']*' → logprob: -7.325052738189697
    9. '[' → logprob: -7.575052738189697
    10. '*[' → logprob: -7.700052738189697

Token 69: ' max' (ID: 2999)
  Prédit: '(max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.2037101686000824
    2. 'max' → logprob: -1.7037101984024048
    3. '(n' → logprob: -6.828710079193115
    4. ' (' → logprob: -7.703710079193115
    5. ' max' → logprob: -8.078710556030273
    6. '(' → logprob: -8.078710556030273
    7. '(m' → logprob: -9.453710556030273
    8. 'n' → logprob: -11.078710556030273
    9. 'm' → logprob: -11.203710556030273
    10. '[max' → logprob: -11.953710556030273

Token 70: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -7.278864359250292e-05
    2. '_' → logprob: -10.750072479248047
    3. 'row' → logprob: -11.000072479248047
    4. 'max' → logprob: -11.000072479248047
    5. '_max' → logprob: -12.000072479248047
    6. '(max' → logprob: -12.250072479248047
    7. '_col' → logprob: -13.500072479248047
    8. '_column' → logprob: -13.875072479248047
    9. '_rows' → logprob: -14.250072479248047
    10. '(' → logprob: -14.875072479248047

Token 71: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.029394833371043205
    2. '<|end|>' → logprob: -4.154394626617432
    3. 'for' → logprob: -5.154394626617432
    4. ' for' → logprob: -5.279394626617432
    5. '
' → logprob: -7.154394626617432
    6. ' 
' → logprob: -7.529394626617432
    7. '\n' → logprob: -8.40439510345459
    8. '  
' → logprob: -9.02939510345459
    9. '<|end|>' → logprob: -9.15439510345459
    10. '+' → logprob: -9.27939510345459

Token 72: 'dp' (ID: 19037)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.007217319216579199
    2. 'dp' → logprob: -5.3822174072265625
    3. ' for' → logprob: -6.1322174072265625
    4. 'max' → logprob: -8.507217407226562
    5. '0' → logprob: -9.257217407226562
    6. 'print' → logprob: -10.632217407226562
    7. 'result' → logprob: -10.757217407226562
    8. '[' → logprob: -11.132217407226562
    9. 'prev' → logprob: -11.382217407226562
    10. '```' → logprob: -12.132217407226562

Token 73: '[' (ID: 58)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 74: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029363270732574165
    2. '-' → logprob: -8.625293731689453
    3. ' ' → logprob: -9.500293731689453
    4. '[' → logprob: -11.500293731689453
    5. ']' → logprob: -11.875293731689453
    6. 'len' → logprob: -12.250293731689453
    7. ':' → logprob: -12.500293731689453
    8. 'lines' → logprob: -12.500293731689453
    9. ' -' → logprob: -13.062793731689453
    10. ')' → logprob: -13.312793731689453

Token 75: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0035160910338163376
    2. ' ]' → logprob: -6.25351619720459
    3. ']=' → logprob: -6.75351619720459
    4. '=' → logprob: -8.50351619720459
    5. ' =' → logprob: -8.62851619720459
    6. ']+=' → logprob: -10.87851619720459
    7. ',' → logprob: -12.50351619720459
    8. '[' → logprob: -12.50351619720459
    9. ')' → logprob: -13.00351619720459
    10. '],' → logprob: -13.12851619720459

Token 76: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.08927585929632187
    2. '=' → logprob: -2.46427583694458
    3. ' +=' → logprob: -8.089276313781738
    4. '+=' → logprob: -10.964276313781738
    5. ',' → logprob: -12.464276313781738
    6. ' ' → logprob: -12.589276313781738
    7. '<|end|>' → logprob: -13.839276313781738
    8. ' |=' → logprob: -13.964276313781738
    9. '+' → logprob: -14.589276313781738
    10. '[' → logprob: -15.214276313781738

Token 77: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.004126603715121746
    2. ' lines' → logprob: -5.50412654876709
    3. '0' → logprob: -10.25412654876709
    4. '1' → logprob: -12.37912654876709
    5. '(lines' → logprob: -13.12912654876709
    6. '   ' → logprob: -13.25412654876709
    7. '	lines' → logprob: -13.37912654876709
    8. '-lines' → logprob: -14.50412654876709
    9. '100' → logprob: -14.62912654876709
    10. ' ' → logprob: -14.75412654876709

Token 78: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.2200749754119897e-06
    2. '[n' → logprob: -14.000001907348633
    3. '0' → logprob: -14.875001907348633
    4. '\[' → logprob: -15.000001907348633
    5. '[-' → logprob: -15.500001907348633
    6. '```' → logprob: -15.875001907348633
    7. 's' → logprob: -16.375001907348633
    8. ' [' → logprob: -16.625001907348633
    9. '   ' → logprob: -18.000001907348633
    10. '[len' → logprob: -18.125001907348633

Token 79: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002712297427933663
    2. ' ' → logprob: -8.50027084350586
    3. '[' → logprob: -10.25027084350586
    4. '-' → logprob: -10.37527084350586
    5. ' -' → logprob: -15.12527084350586
    6. 'n' → logprob: -15.12527084350586
    7. '   ' → logprob: -15.62527084350586
    8. '1' → logprob: -16.00027084350586
    9. '```' → logprob: -16.43777084350586
    10. '00' → logprob: -16.50027084350586

Token 80: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07890917360782623
    2. '][' → logprob: -2.578909158706665
    3. '}[' → logprob: -11.703908920288086
    4. ']' → logprob: -12.453908920288086
    5. '0' → logprob: -12.828908920288086
    6. ''][' → logprob: -13.203908920288086
    7. ')[' → logprob: -13.453908920288086
    8. '"][' → logprob: -14.453908920288086
    9. ' ][' → logprob: -15.453908920288086
    10. '>[' → logprob: -15.578908920288086

Token 81: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1472419600977446e-06
    2. ' ' → logprob: -13.750000953674316
    3. '[' → logprob: -18.000001907348633
    4. '۰' → logprob: -19.000001907348633
    5. '   ' → logprob: -19.125001907348633
    6. '00' → logprob: -19.875001907348633
    7. '1' → logprob: -19.875001907348633
    8. '०' → logprob: -21.312501907348633
    9. '٠' → logprob: -21.375001907348633
    10. '０' → logprob: -21.437501907348633

Token 82: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008695332217030227
    2. '}' → logprob: -7.8758697509765625
    3. ']' → logprob: -8.250869750976562
    4. '<|end|>' → logprob: -8.500869750976562
    5. ' )' → logprob: -11.375869750976562
    6. ')
' → logprob: -12.875869750976562
    7. '<|end|>' → logprob: -13.250869750976562
    8. '）' → logprob: -13.375869750976562
    9. '']' → logprob: -13.375869750976562
    10. '```' → logprob: -13.375869750976562

Token 83: 'for' (ID: 1938)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6430603861808777
    2. 'for' → logprob: -0.8930603861808777
    3. ' for' → logprob: -3.0180604457855225
    4. '\n' → logprob: -4.393060207366943
    5. '<|end|>' → logprob: -6.268060207366943
    6. '```' → logprob: -6.518060207366943
    7. ' 
' → logprob: -10.018060684204102
    8. '\' → logprob: -10.143060684204102
    9. '
' → logprob: -10.143060684204102
    10. '

' → logprob: -10.643060684204102

Token 84: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.00025752498186193407
    2. 'i' → logprob: -8.37525749206543
    3. ' ' → logprob: -11.00025749206543
    4. ' r' → logprob: -12.62525749206543
    5. ' _' → logprob: -12.87525749206543
    6. ' ' → logprob: -13.62525749206543
    7. '	i' → logprob: -13.87525749206543
    8. ' row' → logprob: -14.00025749206543
    9. ' n' → logprob: -14.12525749206543
    10. ' range' → logprob: -16.00025749206543

Token 85: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0036378458607941866
    2. 'in' → logprob: -5.628637790679932
    3. ' ' → logprob: -10.25363826751709
    4. '	in' → logprob: -13.50363826751709
    5. ',' → logprob: -14.75363826751709
    6. ' i' → logprob: -16.003637313842773
    7. ' ' → logprob: -16.003637313842773
    8. 'range' → logprob: -16.128637313842773
    9. '1' → logprob: -16.253637313842773
    10. '  ' → logprob: -16.378637313842773

Token 86: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.003181159496307373
    2. 'range' → logprob: -5.753180980682373
    3. ' ' → logprob: -13.128181457519531
    4. '	range' → logprob: -14.003181457519531
    5. '(range' → logprob: -15.253181457519531
    6. ' xrange' → logprob: -15.378181457519531
    7. ' ' → logprob: -17.25318145751953
    8. '1' → logprob: -17.87818145751953
    9. '```' → logprob: -17.87818145751953
    10. '   ' → logprob: -18.12818145751953

Token 87: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -5.512236498361744e-07
    2. ' (' → logprob: -15.250000953674316
    3. '1' → logprob: -15.500000953674316
    4. '(len' → logprob: -17.375
    5. '(n' → logprob: -19.25
    6. '(
' → logprob: -20.125
    7. '[' → logprob: -21.625
    8. ' ' → logprob: -21.75
    9. 'len' → logprob: -22.375
    10. '()' → logprob: -23.25

Token 88: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004354373668320477
    2. ' ' → logprob: -7.7504353523254395
    3. 'n' → logprob: -12.875435829162598
    4. '   ' → logprob: -14.000435829162598
    5. '2' → logprob: -14.375435829162598
    6. 'len' → logprob: -15.000435829162598
    7. ' n' → logprob: -16.00043487548828
    8. ')' → logprob: -16.12543487548828
    9. '0' → logprob: -16.37543487548828
    10. '(' → logprob: -16.87543487548828

Token 89: ',' (ID: 11)
  Prédit: ' ,'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ,' → logprob: -1.055674433708191
    2. ',' → logprob: -1.180674433708191
    3. ' ):' → logprob: -1.305674433708191
    4. '):' → logprob: -3.4306745529174805
    5. ' )' → logprob: -3.5556745529174805
    6. ' ' → logprob: -5.5556745529174805
    7. ' :' → logprob: -5.6806745529174805
    8. ':' → logprob: -5.9306745529174805
    9. ')' → logprob: -6.4306745529174805
    10. ',len' → logprob: -7.9306745529174805

Token 90: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.014174087904393673
    2. ' n' → logprob: -4.264173984527588
    3. 'len' → logprob: -11.639174461364746
    4. ' len' → logprob: -13.514174461364746
    5. '	n' → logprob: -16.01417350769043
    6. ' ' → logprob: -16.38917350769043
    7. '   ' → logprob: -16.88917350769043
    8. ' ' → logprob: -17.51417350769043
    9. ')n' → logprob: -17.51417350769043
    10. ')' → logprob: -18.51417350769043

Token 91: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0040531097911298275
    2. ':' → logprob: -5.629053115844727
    3. ')' → logprob: -8.504053115844727
    4. '):
' → logprob: -9.129053115844727
    5. '+' → logprob: -9.504053115844727
    6. ' ):' → logprob: -9.754053115844727
    7. ']:' → logprob: -13.129053115844727
    8. '+:' → logprob: -13.379053115844727
    9. ',' → logprob: -14.129053115844727
    10. '}:' → logprob: -14.129053115844727

Token 92: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022877946496009827
    2. '   ' → logprob: -4.772878170013428
    3. '<|end|>' → logprob: -4.897878170013428
    4. ' ' → logprob: -5.647878170013428
    5. ':
' → logprob: -6.647878170013428
    6. '
' → logprob: -7.522878170013428
    7. ' :' → logprob: -8.27287769317627
    8. '    
' → logprob: -8.52287769317627
    9. '<|end|>' → logprob: -8.89787769317627
    10. ' 
' → logprob: -9.14787769317627

Token 93: ' row' (ID: 5225)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.4470902979373932
    2. ' dp' → logprob: -2.4470903873443604
    3. ' for' → logprob: -2.5720903873443604
    4. '    ' → logprob: -2.6970903873443604
    5. 'new' → logprob: -3.3220903873443604
    6. 'dp' → logprob: -3.3220903873443604
    7. ' ' → logprob: -3.3220903873443604
    8. 'for' → logprob: -4.197090148925781
    9. '   ' → logprob: -6.447090148925781
    10. '[' → logprob: -7.322090148925781

Token 94: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3775021433830261
    2. '_' → logprob: -1.877502202987671
    3. '_len' → logprob: -2.627502202987671
    4. '=' → logprob: -2.752502202987671
    5. ' ' → logprob: -4.502501964569092
    6. '_length' → logprob: -5.127501964569092
    7. '[' → logprob: -6.252501964569092
    8. 's' → logprob: -7.002501964569092
    9. '[:]' → logprob: -7.002501964569092
    10. ',' → logprob: -7.127501964569092

Token 95: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.31415876746177673
    2. 'lines' → logprob: -1.3141587972640991
    3. '[' → logprob: -7.814158916473389
    4. ' [' → logprob: -7.939158916473389
    5. ' len' → logprob: -10.43915843963623
    6. '	lines' → logprob: -10.68915843963623
    7. 'len' → logprob: -11.06415843963623
    8. ' ' → logprob: -11.31415843963623
    9. '(lines' → logprob: -11.43915843963623
    10. '0' → logprob: -11.56415843963623

Token 96: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -7.314625690924004e-05
    2. '[' → logprob: -9.625073432922363
    3. '[:]' → logprob: -12.375073432922363
    4. '[I' → logprob: -14.625073432922363
    5. '```' → logprob: -14.750073432922363
    6. ' [' → logprob: -14.875073432922363
    7. '[
' → logprob: -14.875073432922363
    8. '\[' → logprob: -15.500073432922363
    9. ' ' → logprob: -15.625073432922363
    10. '   ' → logprob: -15.750073432922363

Token 97: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.27267953753471375
    2. ')
' → logprob: -1.5226795673370361
    3. '   ' → logprob: -4.147679328918457
    4. ' )' → logprob: -6.522679328918457
    5. ']' → logprob: -6.772679328918457
    6. ']
' → logprob: -7.647679328918457
    7. ' ' → logprob: -7.772679328918457
    8. ' )
' → logprob: -7.772679328918457
    9. '
' → logprob: -8.272679328918457
    10. '[::-' → logprob: -8.772679328918457

Token 98: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.0807808637619019
    2. 'dp' → logprob: -1.5807808637619019
    3. '    ' → logprob: -2.2057809829711914
    4. ' new' → logprob: -2.7057809829711914
    5. ' dp' → logprob: -2.7057809829711914
    6. '   ' → logprob: -2.9557809829711914
    7. '     
' → logprob: -3.5807809829711914
    8. ' ' → logprob: -3.5807809829711914
    9. 'new' → logprob: -3.5807809829711914
    10. '    
' → logprob: -3.7057809829711914

Token 99: ' for' (ID: 395)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.6301854848861694
    2. 'for' (adapté à ' for') → logprob: -1.5051854848861694
    3. 'dp' → logprob: -2.005185604095459
    4. ' new' → logprob: -2.755185604095459
    5. ' for' → logprob: -3.880185604095459
    6. '   ' → logprob: -5.005185604095459
    7. 'prev' → logprob: -5.380185604095459
    8. 'temp' → logprob: -5.505185604095459
    9. ' dp' → logprob: -5.880185604095459
    10. 'tmp' → logprob: -5.880185604095459

Token 100: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.011050417087972164
    2. 'j' → logprob: -4.511050224304199
    3. ' ' → logprob: -13.3860502243042
    4. '	j' → logprob: -13.8860502243042
    5. '_j' → logprob: -16.511051177978516
    6. ' range' → logprob: -16.761051177978516
    7. '  ' → logprob: -17.886051177978516
    8. '   ' → logprob: -18.011051177978516
    9. ' ' → logprob: -18.136051177978516
    10. ',j' → logprob: -18.136051177978516

Token 101: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0035347328521311283
    2. 'in' → logprob: -5.75353479385376
    3. ' ' → logprob: -8.128534317016602
    4. '(' → logprob: -10.753534317016602
    5. '	in' → logprob: -11.753534317016602
    6. ')' → logprob: -12.128534317016602
    7. '   ' → logprob: -12.378534317016602
    8. '  ' → logprob: -12.503534317016602
    9. ' (' → logprob: -12.628534317016602
    10. '<|end|>' → logprob: -12.878534317016602

Token 102: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.10027071833610535
    2. 'range' → logprob: -2.3502707481384277
    3. ' xrange' → logprob: -10.35027027130127
    4. '	range' → logprob: -11.60027027130127
    5. ' len' → logprob: -11.72527027130127
    6. '(range' → logprob: -12.10027027130127
    7. 'len' → logprob: -12.72527027130127
    8. ' ' → logprob: -12.85027027130127
    9. '<|end|>' → logprob: -13.10027027130127
    10. ' reversed' → logprob: -13.72527027130127

Token 103: '(len' (ID: 14990)
  Prédit: '(len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(len' → logprob: -0.0009240844519808888
    2. '(' → logprob: -7.000924110412598
    3. ' (' → logprob: -12.250924110412598
    4. '(j' → logprob: -12.500924110412598
    5. '(i' → logprob: -12.875924110412598
    6. '(max' → logprob: -14.500924110412598
    7. '(length' → logprob: -15.250924110412598
    8. '(min' → logprob: -15.500924110412598
    9. ' len' → logprob: -15.625924110412598
    10. '(range' → logprob: -16.12592315673828

Token 104: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -4.644463479053229e-05
    2. 'row' → logprob: -10.375046730041504
    3. '(' → logprob: -11.625046730041504
    4. '(rows' → logprob: -12.625046730041504
    5. ' row' → logprob: -13.750046730041504
    6. '(r' → logprob: -14.625046730041504
    7. '(line' → logprob: -14.750046730041504
    8. '(dp' → logprob: -15.500046730041504
    9. '	row' → logprob: -15.625046730041504
    10. ')' → logprob: -15.750046730041504

Token 105: ')-' (ID: 14080)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.18615970015525818
    2. '-' → logprob: -2.436159610748291
    3. ')' → logprob: -3.436159610748291
    4. ')):' → logprob: -3.436159610748291
    5. ' -' → logprob: -4.186159610748291
    6. '):
' → logprob: -7.186159610748291
    7. '   ' → logprob: -7.686159610748291
    8. ')-' → logprob: -7.686159610748291
    9. ' ):' → logprob: -7.811159610748291
    10. '):-' → logprob: -8.31116008758545

Token 106: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.399378566537052e-05
    2. ' ' → logprob: -9.875083923339844
    3. '2' → logprob: -10.375083923339844
    4. '-' → logprob: -14.500083923339844
    5. '0' → logprob: -14.625083923339844
    6. ' -' → logprob: -15.500083923339844
    7. '```' → logprob: -18.187583923339844
    8. '   ' → logprob: -18.437583923339844
    9. ')' → logprob: -18.625083923339844
    10. '  ' → logprob: -19.187583923339844

Token 107: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.010380996391177177
    2. ' ,' → logprob: -4.76038122177124
    3. ',-' → logprob: -6.38538122177124
    4. '   ' → logprob: -11.010380744934082
    5. ' ,-' → logprob: -11.135380744934082
    6. '):' → logprob: -11.635380744934082
    7. '    ' → logprob: -11.885380744934082
    8. '),' → logprob: -12.135380744934082
    9. ' -' → logprob: -12.510380744934082
    10. ' ' → logprob: -12.510380744934082

Token 108: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0041103423573076725
    2. ' -' → logprob: -5.504110336303711
    3. '0' → logprob: -10.379110336303711
    4. ' ' → logprob: -14.129110336303711
    5. '   ' → logprob: -16.25411033630371
    6. '-j' → logprob: -17.12911033630371
    7. '  ' → logprob: -17.62911033630371
    8. '	' → logprob: -18.50411033630371
    9. '1' → logprob: -18.87911033630371
    10. '    ' → logprob: -19.75411033630371

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2127087504486553e-05
    2. ' ' → logprob: -10.875021934509277
    3. ' -' → logprob: -14.437521934509277
    4. '   ' → logprob: -14.687521934509277
    5. '```' → logprob: -14.812521934509277
    6. '-' → logprob: -15.375021934509277
    7. '

' → logprob: -15.562521934509277
    8. '2' → logprob: -15.625021934509277
    9. '
' → logprob: -15.750021934509277
    10. '  ' → logprob: -16.000022888183594

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.002587550552561879
    2. ' ,' → logprob: -6.12758731842041
    3. ',-' → logprob: -8.37758731842041
    4. '1' → logprob: -9.25258731842041
    5. '-' → logprob: -10.25258731842041
    6. ' ' → logprob: -11.37758731842041
    7. ' -' → logprob: -11.62758731842041
    8. '):' → logprob: -12.37758731842041
    9. ',j' → logprob: -12.75258731842041
    10. ' ,-' → logprob: -12.87758731842041

Token 111: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.47880104184150696
    2. ' -' → logprob: -0.9788010120391846
    3. '1' → logprob: -5.603801250457764
    4. ' ' → logprob: -7.103801250457764
    5. ')' → logprob: -9.728800773620605
    6. '0' → logprob: -9.853800773620605
    7. ' j' → logprob: -9.978800773620605
    8. '   ' → logprob: -11.103800773620605
    9. '```' → logprob: -11.603800773620605
    10. 'j' → logprob: -11.853800773620605

Token 112: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.15310683415737e-05
    2. ' ' → logprob: -10.875021934509277
    3. '```' → logprob: -13.750021934509277
    4. '   ' → logprob: -15.062521934509277
    5. ')' → logprob: -15.062521934509277
    6. '2' → logprob: -15.187521934509277
    7. '0' → logprob: -16.25002098083496
    8. '`' → logprob: -16.87502098083496
    9. '``' → logprob: -17.25002098083496
    10. '
' → logprob: -17.31252098083496

Token 113: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.06349056959152222
    2. '):
' → logprob: -2.938490629196167
    3. ':' → logprob: -4.938490390777588
    4. ')' → logprob: -7.438490390777588
    5. ' ):' → logprob: -7.563490390777588
    6. '):

' → logprob: -9.313490867614746
    7. ' ):
' → logprob: -9.563490867614746
    8. '):
' → logprob: -10.063490867614746
    9. ' :' → logprob: -10.563490867614746
    10. '   ' → logprob: -10.813490867614746

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17219918966293335
    2. ' ' → logprob: -3.297199249267578
    3. '<|end|>' → logprob: -3.297199249267578
    4. '   ' → logprob: -3.422199249267578
    5. ':' → logprob: -3.422199249267578
    6. '    ' → logprob: -4.547199249267578
    7. ' :' → logprob: -6.047199249267578
    8. '        ' → logprob: -6.672199249267578
    9. '        
' → logprob: -7.297199249267578
    10. '  ' → logprob: -7.297199249267578

Token 115: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.021242953836917877
    2. '<|end|>' → logprob: -5.146243095397949
    3. '        ' → logprob: -5.646243095397949
    4. ' 
' → logprob: -5.771243095397949
    5. '       ' → logprob: -6.021243095397949
    6. ''' → logprob: -6.646243095397949
    7. ' if' → logprob: -6.771243095397949
    8. '    ' → logprob: -7.021243095397949
    9. ' dp' → logprob: -7.271243095397949
    10. 'dp' → logprob: -8.14624309539795

Token 116: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.34844931960105896
    2. 'j' → logprob: -1.2234493494033813
    3. '	j' → logprob: -13.59844970703125
    4. '0' → logprob: -13.72344970703125
    5. ' ' → logprob: -14.47344970703125
    6. '   ' → logprob: -14.72344970703125
    7. ' ' → logprob: -15.22344970703125
    8. '    ' → logprob: -15.22344970703125
    9. '$j' → logprob: -15.22344970703125
    10. ':j' → logprob: -15.59844970703125

Token 117: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.20397314429283142
    2. '==' → logprob: -1.7039731740951538
    3. ' <' → logprob: -6.578973293304443
    4. '0' → logprob: -7.828973293304443
    5. '=' → logprob: -7.828973293304443
    6. '<' → logprob: -8.953972816467285
    7. ' =' → logprob: -9.953972816467285
    8. ' ' → logprob: -9.953972816467285
    9. '<|end|>' → logprob: -9.953972816467285
    10. ' >' → logprob: -11.078972816467285

Token 118: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11234064400196075
    2. 'len' → logprob: -2.6123406887054443
    3. ' len' → logprob: -4.112340450286865
    4. ' ' → logprob: -4.112340450286865
    5. '(len' → logprob: -10.237340927124023
    6. '	len' → logprob: -10.362340927124023
    7. 'i' → logprob: -10.362340927124023
    8. '=len' → logprob: -11.112340927124023
    9. '<len' → logprob: -11.237340927124023
    10. ' i' → logprob: -12.049840927124023

Token 119: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00914155412465334
    2. 'len' → logprob: -5.009141445159912
    3. ' ' → logprob: -6.134141445159912
    4. ' len' → logprob: -8.38414192199707
    5. 'i' → logprob: -11.00914192199707
    6. '	len' → logprob: -12.75914192199707
    7. '(len' → logprob: -12.88414192199707
    8. '<|end|>' → logprob: -13.25914192199707
    9. '<len' → logprob: -14.00914192199707
    10. '=len' → logprob: -14.63414192199707

Token 120: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0017240844899788499
    2. ' or' → logprob: -7.1267242431640625
    3. '<|end|>' → logprob: -7.6267242431640625
    4. ':
' → logprob: -8.001724243164062
    5. '):' → logprob: -10.126724243164062
    6. '<|end|>' → logprob: -11.251724243164062
    7. ' :' → logprob: -11.376724243164062
    8. ')' → logprob: -12.251724243164062
    9. ' and' → logprob: -12.251724243164062
    10. ':

' → logprob: -12.251724243164062

Token 121: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.878289520740509
    2. ' dp' → logprob: -0.878289520740509
    3. 'dp' → logprob: -2.3782894611358643
    4. '           ' → logprob: -3.2532894611358643
    5. '<|end|>' → logprob: -3.8782894611358643
    6. '       ' → logprob: -5.003289699554443
    7. '(dp' → logprob: -5.878289699554443
    8. '	dp' → logprob: -6.003289699554443
    9. ' ' → logprob: -6.628289699554443
    10. ':
' → logprob: -7.503289699554443

Token 122: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.048798900097608566
    2. ' dp' → logprob: -3.0487987995147705
    3. '	dp' → logprob: -9.423798561096191
    4. '
' → logprob: -9.548798561096191
    5. '_dp' → logprob: -10.048798561096191
    6. '(dp' → logprob: -12.048798561096191
    7. '<|end|>' → logprob: -12.423798561096191
    8. '.dp' → logprob: -13.298798561096191
    9. '           ' → logprob: -13.548798561096191
    10. ':' → logprob: -14.298798561096191

Token 123: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -7.3458322731312364e-06
    2. '[' → logprob: -12.375007629394531
    3. '```' → logprob: -13.000007629394531
    4. '[js' → logprob: -14.750007629394531
    5. '\[' → logprob: -16.00000762939453
    6. '0' → logprob: -16.87500762939453
    7. '][' → logprob: -16.87500762939453
    8. 'j' → logprob: -17.12500762939453
    9. ' [' → logprob: -17.37500762939453
    10. '[i' → logprob: -18.00000762939453

Token 124: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0035206025931984186
    2. ']+=' → logprob: -5.753520488739014
    3. ']=' → logprob: -8.878520965576172
    4. ' ]' → logprob: -9.253520965576172
    5. '=' → logprob: -9.878520965576172
    6. ' =' → logprob: -10.128520965576172
    7. ' +=' → logprob: -12.003520965576172
    8. ']+' → logprob: -12.378520965576172
    9. ')' → logprob: -13.378520965576172
    10. ' ' → logprob: -13.378520965576172

Token 125: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.8016301393508911
    2. ' =' → logprob: -1.1766301393508911
    3. ' +=' → logprob: -1.8016301393508911
    4. '+=' → logprob: -2.5516300201416016
    5. ']+=' → logprob: -9.676630020141602
    6. '+' → logprob: -10.926630020141602
    7. ' ' → logprob: -11.301630020141602
    8. ']' → logprob: -12.926630020141602
    9. ' +' → logprob: -13.301630020141602
    10. '[' → logprob: -13.676630020141602

Token 126: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.009761640802025795
    2. ' dp' → logprob: -4.634761810302734
    3. '	dp' → logprob: -13.509761810302734
    4. '(dp' → logprob: -13.634761810302734
    5. 'row' → logprob: -14.009761810302734
    6. 'lines' → logprob: -14.509761810302734
    7. 'd' → logprob: -14.634761810302734
    8. ' lines' → logprob: -14.884761810302734
    9. '```' → logprob: -15.759761810302734
    10. 'line' → logprob: -16.009761810302734

Token 127: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.02054842747747898
    2. '[' → logprob: -3.8955483436584473
    3. '[js' → logprob: -12.645548820495605
    4. 'j' → logprob: -13.270548820495605
    5. ' [' → logprob: -14.895548820495605
    6. '0' → logprob: -15.020548820495605
    7. '[
' → logprob: -15.520548820495605
    8. '<|end|>' → logprob: -15.520548820495605
    9. '[q' → logprob: -16.27054786682129
    10. '[i' → logprob: -16.27054786682129

Token 128: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.0017465773271396756
    2. ']+' → logprob: -6.626746654510498
    3. '0' → logprob: -8.87674617767334
    4. '+' → logprob: -9.12674617767334
    5. '[' → logprob: -9.62674617767334
    6. ' ]' → logprob: -9.75174617767334
    7. ' +' → logprob: -11.62674617767334
    8. '```' → logprob: -11.62674617767334
    9. 'j' → logprob: -12.00174617767334
    10. ')' → logprob: -12.12674617767334

Token 129: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.008750018663704395
    2. ' +' → logprob: -5.008749961853027
    3. '<|end|>' → logprob: -6.508749961853027
    4. '+j' → logprob: -8.633749961853027
    5. '0' → logprob: -8.883749961853027
    6. ']' → logprob: -9.883749961853027
    7. ']+' → logprob: -9.883749961853027
    8. '[' → logprob: -10.383749961853027
    9. '```' → logprob: -10.508749961853027
    10. ')' → logprob: -10.633749961853027

Token 130: ' row' (ID: 5225)
  Prédit: 'row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'row' → logprob: -0.00524098752066493
    2. ' row' → logprob: -5.2552409172058105
    3. 'rows' → logprob: -12.255241394042969
    4. 'line' → logprob: -13.255241394042969
    5. 'lines' → logprob: -15.130241394042969
    6. '	row' → logprob: -16.00524139404297
    7. 'r' → logprob: -16.38024139404297
    8. ' lines' → logprob: -16.63024139404297
    9. '(row' → logprob: -16.88024139404297
    10. '   ' → logprob: -17.50524139404297

Token 131: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -3.225939872208983e-05
    2. '[' → logprob: -10.375032424926758
    3. '[js' → logprob: -14.500032424926758
    4. 'j' → logprob: -16.000032424926758
    5. ' [' → logprob: -16.125032424926758
    6. '```' → logprob: -16.125032424926758
    7. '[
' → logprob: -16.375032424926758
    8. '][' → logprob: -18.125032424926758
    9. '0' → logprob: -18.125032424926758
    10. '[i' → logprob: -18.250032424926758

Token 132: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.8415164351463318
    2. ']
' → logprob: -0.9665164351463318
    3. ')' → logprob: -1.9665164947509766
    4. ')
' → logprob: -3.2165164947509766
    5. '<|end|>' → logprob: -5.966516494750977
    6. '
' → logprob: -6.341516494750977
    7. '       ' → logprob: -6.341516494750977
    8. ']
' → logprob: -7.216516494750977
    9. '']' → logprob: -7.966516494750977
    10. '}
' → logprob: -8.091516494750977

Token 133: '       ' (ID: 309)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.9494048357009888
    2. '<|end|>' → logprob: -1.4494048357009888
    3. 'else' → logprob: -1.5744048357009888
    4. '
' → logprob: -2.199404716491699
    5. 'elif' → logprob: -3.324404716491699
    6. ' elif' → logprob: -4.324404716491699
    7. ' 
' → logprob: -5.199404716491699
    8. ' ' → logprob: -6.074404716491699
    9. '  
' → logprob: -6.949404716491699
    10. '       ' → logprob: -7.699404716491699

Token 134: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.3963721692562103
    2. ' else' → logprob: -1.1463721990585327
    3. 'elif' (adapté à ' elif') → logprob: -4.771372318267822
    4. ' elif' → logprob: -7.146372318267822
    5. '       ' → logprob: -8.646371841430664
    6. '	else' → logprob: -11.771371841430664
    7. '   ' → logprob: -11.896371841430664
    8. '<|end|>' → logprob: -13.146371841430664
    9. '	elif' → logprob: -13.146371841430664
    10. ' ' → logprob: -13.396371841430664

Token 135: ' j' (ID: 441)
  Prédit: ' j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.390079140663147
    2. 'j' → logprob: -1.140079140663147
    3. ' dp' → logprob: -6.390079021453857
    4. 'dp' → logprob: -7.015079021453857
    5. ' ' → logprob: -7.890079021453857
    6. '0' → logprob: -8.640079498291016
    7. ' ' → logprob: -10.765079498291016
    8. '	j' → logprob: -10.890079498291016
    9. '  ' → logprob: -12.390079498291016
    10. '   ' → logprob: -12.390079498291016

Token 136: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03888829052448273
    2. '==' → logprob: -3.7888882160186768
    3. ' <' → logprob: -4.288888454437256
    4. ' <=' → logprob: -6.663888454437256
    5. '<|end|>' → logprob: -8.413887977600098
    6. '<' → logprob: -9.288887977600098
    7. ' ' → logprob: -10.038887977600098
    8. ' >=' → logprob: -10.038887977600098
    9. '<=' → logprob: -10.413887977600098
    10. ' >' → logprob: -10.913887977600098

Token 137: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.5705487132072449
    2. 'j' → logprob: -1.4455487728118896
    3. ' len' → logprob: -2.3205487728118896
    4. ' j' → logprob: -2.5705487728118896
    5. 'i' → logprob: -4.6955485343933105
    6. '0' → logprob: -4.9455485343933105
    7. ' ' → logprob: -5.6955485343933105
    8. ' i' → logprob: -6.0705485343933105
    9. 'n' → logprob: -6.9455485343933105
    10. 'dp' → logprob: -7.9455485343933105

Token 138: '(row' (ID: 15945)
  Prédit: '(row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(row' → logprob: -6.396757089532912e-05
    2. 'row' → logprob: -9.7500638961792
    3. '[row' → logprob: -12.6250638961792
    4. '(' → logprob: -13.7500638961792
    5. '(dp' → logprob: -15.1250638961792
    6. '(rows' → logprob: -15.2500638961792
    7. ' row' → logprob: -15.3750638961792
    8. '	row' → logprob: -16.000064849853516
    9. '(j' → logprob: -16.125064849853516
    10. '(r' → logprob: -16.875064849853516

Token 139: ')-' (ID: 14080)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10725145041942596
    2. ')-' → logprob: -3.3572514057159424
    3. '-' → logprob: -3.4822514057159424
    4. '[j' → logprob: -3.6072514057159424
    5. ' -' → logprob: -5.2322516441345215
    6. '[' → logprob: -7.1072516441345215
    7. '')' → logprob: -7.7322516441345215
    8. '   ' → logprob: -7.9822516441345215
    9. '):
' → logprob: -7.9822516441345215
    10. ' )' → logprob: -8.107251167297363

Token 140: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020008347928524017
    2. ' ' → logprob: -8.750200271606445
    3. '2' → logprob: -11.125200271606445
    4. '   ' → logprob: -11.250200271606445
    5. '```' → logprob: -12.375200271606445
    6. '       ' → logprob: -13.375200271606445
    7. '           ' → logprob: -13.375200271606445
    8. ')' → logprob: -13.687700271606445
    9. '-' → logprob: -13.812700271606445
    10. ',' → logprob: -14.562700271606445

Token 141: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0013938075862824917
    2. ':
' → logprob: -6.626393795013428
    3. '):' → logprob: -10.126394271850586
    4. '           ' → logprob: -12.126394271850586
    5. ' :' → logprob: -12.501394271850586
    6. '=' → logprob: -12.751394271850586
    7. ':

' → logprob: -13.001394271850586
    8. '):
' → logprob: -13.251394271850586
    9. 'dp' → logprob: -13.376394271850586
    10. ']:' → logprob: -13.501394271850586

Token 142: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.28339138627052307
    2. '           ' → logprob: -1.9083913564682007
    3. ' dp' → logprob: -2.6583914756774902
    4. 'dp' → logprob: -4.28339147567749
    5. '       ' → logprob: -5.03339147567749
    6. ':
' → logprob: -5.53339147567749
    7. '(dp' → logprob: -6.65839147567749
    8. '<|end|>' → logprob: -7.15839147567749
    9. '	dp' → logprob: -7.28339147567749
    10. '_dp' → logprob: -8.658390998840332

Token 143: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' (adapté à ' dp') → logprob: -0.00673360750079155
    2. ' dp' → logprob: -5.006733417510986
    3. '	dp' → logprob: -11.256733894348145
    4. '           ' → logprob: -13.006733894348145
    5. '_dp' → logprob: -13.881733894348145
    6. '(dp' → logprob: -14.256733894348145
    7. '       ' → logprob: -15.131733894348145
    8. '.dp' → logprob: -15.381733894348145
    9. 'd' → logprob: -15.381733894348145
    10. '   ' → logprob: -15.506733894348145

Token 144: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -4.60414821645827e-06
    2. ']' → logprob: -13.750004768371582
    3. '[' → logprob: -14.000004768371582
    4. '```' → logprob: -14.500004768371582
    5. '   ' → logprob: -14.750004768371582
    6. '
' → logprob: -15.125004768371582
    7. '[
' → logprob: -15.375004768371582
    8. ' [' → logprob: -15.375004768371582
    9. '][' → logprob: -15.375004768371582
    10. 'j' → logprob: -15.500004768371582

Token 145: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.006721298210322857
    2. '=' → logprob: -5.381721496582031
    3. ']=' → logprob: -6.256721496582031
    4. ' =' → logprob: -9.131721496582031
    5. ' ]' → logprob: -10.006721496582031
    6. ')' → logprob: -10.881721496582031
    7. '-' → logprob: -12.256721496582031
    8. '   ' → logprob: -13.756721496582031
    9. '```' → logprob: -14.381721496582031
    10. ')=' → logprob: -14.631721496582031

Token 146: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022798418998718
    2. ' =' → logprob: -1.9102280139923096
    3. ']' → logprob: -13.03522777557373
    4. ']=' → logprob: -14.53522777557373
    5. ')' → logprob: -15.16022777557373
    6. '=
' → logprob: -16.160228729248047
    7. '+=' → logprob: -16.160228729248047
    8. ' +=' → logprob: -16.410228729248047
    9. '=

' → logprob: -16.535228729248047
    10. ')=' → logprob: -16.660228729248047

Token 147: ' dp' (ID: 21546)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.007619171869009733
    2. ' dp' → logprob: -4.882619380950928
    3. '	dp' → logprob: -12.00761890411377
    4. '   ' → logprob: -12.75761890411377
    5. '(dp' → logprob: -13.50761890411377
    6. ' ' → logprob: -13.88261890411377
    7. 'd' → logprob: -14.50761890411377
    8. 'max' → logprob: -15.13261890411377
    9. '```' → logprob: -15.50761890411377
    10. '_dp' → logprob: -15.75761890411377

Token 148: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -6.153795766294934e-06
    2. 'j' → logprob: -12.500005722045898
    3. '[' → logprob: -13.500005722045898
    4. '-' → logprob: -14.500005722045898
    5. '```' → logprob: -15.625005722045898
    6. '[js' → logprob: -16.8750057220459
    7. '[
' → logprob: -17.0000057220459
    8. '
' → logprob: -17.0000057220459
    9. '   ' → logprob: -17.2500057220459
    10. '\[' → logprob: -17.3750057220459

Token 149: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.012808750383555889
    2. ' -' → logprob: -4.387808799743652
    3. ']' → logprob: -8.137808799743652
    4. '`]' → logprob: -13.512808799743652
    5. '1' → logprob: -14.137808799743652
    6. ']-' → logprob: -14.387808799743652
    7. '']' → logprob: -14.512808799743652
    8. '-j' → logprob: -14.762808799743652
    9. ' ]' → logprob: -14.762808799743652
    10. '   ' → logprob: -14.762808799743652

Token 150: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00020926215802319348
    2. ' ' → logprob: -9.125208854675293
    3. ']' → logprob: -9.250208854675293
    4. ']+' → logprob: -13.250208854675293
    5. '```' → logprob: -14.125208854675293
    6. '+' → logprob: -14.750208854675293
    7. ' ]' → logprob: -15.000208854675293
    8. 'j' → logprob: -15.250208854675293
    9. ')' → logprob: -15.375208854675293
    10. '   ' → logprob: -16.37520980834961

Token 151: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0015024791937321424
    2. '+' → logprob: -6.501502513885498
    3. ')' → logprob: -16.251502990722656
    4. ' ' → logprob: -16.626502990722656
    5. ' +
' → logprob: -18.126502990722656
    6. ' ' → logprob: -18.376502990722656
    7. ')+' → logprob: -18.751502990722656
    8. ']' → logprob: -19.126502990722656
    9. ']+' → logprob: -19.376502990722656
    10. ' +
' → logprob: -19.501502990722656

Token 152: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.06196768581867218
    2. '+' → logprob: -2.811967611312866
    3. ' ' → logprob: -17.186967849731445
    4. ' ' → logprob: -17.561967849731445
    5. ' +
' → logprob: -17.811967849731445
    6. ' plus' → logprob: -18.936967849731445
    7. '+
' → logprob: -19.936967849731445
    8. ' +
' → logprob: -20.186967849731445
    9. '+j' → logprob: -20.561967849731445
    10. ' +

' → logprob: -20.561967849731445

Token 153: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.20141683518886566
    2. 'row' → logprob: -1.7014168500900269
    3. '	row' → logprob: -14.076416969299316
    4. ' line' → logprob: -14.326416969299316
    5. 'line' → logprob: -14.576416969299316
    6. 'rows' → logprob: -14.701416969299316
    7. ' rows' → logprob: -14.701416969299316
    8. '(row' → logprob: -15.076416969299316
    9. '[row' → logprob: -15.326416969299316
    10. ' ' → logprob: -15.701416969299316

Token 154: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -5.512236498361744e-07
    2. '[' → logprob: -15.125000953674316
    3. 'j' → logprob: -16.125
    4. '```' → logprob: -16.25
    5. ' [' → logprob: -17.5
    6. '[
' → logprob: -17.75
    7. '[js' → logprob: -17.875
    8. '[i' → logprob: -18.5
    9. '\[' → logprob: -19.875
    10. '][' → logprob: -20.375

Token 155: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008738245232962072
    2. ')
' → logprob: -7.500874042510986
    3. '       ' → logprob: -8.125873565673828
    4. '<|end|>' → logprob: -11.000873565673828
    5. '}' → logprob: -12.625873565673828
    6. '   ' → logprob: -13.625873565673828
    7. '```' → logprob: -13.875873565673828
    8. ']' → logprob: -14.000873565673828
    9. ' )' → logprob: -14.750873565673828
    10. ')}' → logprob: -15.125873565673828

Token 156: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04458265379071236
    2. 'else' → logprob: -3.2945826053619385
    3. ' else' → logprob: -5.044582843780518
    4. '<|end|>' → logprob: -9.79458236694336
    5. '	else' → logprob: -11.91958236694336
    6. '   ' → logprob: -11.91958236694336
    7. '	' → logprob: -13.04458236694336
    8. ')' → logprob: -13.54458236694336
    9. '```' → logprob: -13.66958236694336
    10. 'elif' → logprob: -14.54458236694336

Token 157: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.047384437173604965
    2. '       ' → logprob: -3.54738450050354
    3. ' else' → logprob: -4.047384262084961
    4. '	else' → logprob: -11.797384262084961
    5. ')' → logprob: -13.797384262084961
    6. '   ' → logprob: -13.797384262084961
    7. 'elif' → logprob: -14.797384262084961
    8. '_else' → logprob: -14.797384262084961
    9. '<|end|>' → logprob: -14.797384262084961
    10. '```' → logprob: -15.422384262084961

Token 158: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01696678437292576
    2. ':
' → logprob: -4.266966819763184
    3. '           ' → logprob: -6.016966819763184
    4. '(dp' → logprob: -9.266966819763184
    5. '       ' → logprob: -9.641966819763184
    6. 'dp' → logprob: -10.141966819763184
    7. ' dp' → logprob: -10.266966819763184
    8. '(' → logprob: -10.391966819763184
    9. '   ' → logprob: -10.516966819763184
    10. '=' → logprob: -11.266966819763184

Token 159: '           ' (ID: 352)
  Prédit: ' dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.3371320366859436
    2. 'dp' → logprob: -1.3371319770812988
    3. '           ' → logprob: -4.337131977081299
    4. '       ' → logprob: -4.587131977081299
    5. '   ' → logprob: -8.962132453918457
    6. '	dp' → logprob: -9.337132453918457
    7. '(dp' → logprob: -9.587132453918457
    8. ' ' → logprob: -10.712132453918457
    9. '_dp' → logprob: -12.087132453918457
    10. '        ' → logprob: -12.337132453918457

Token 160: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.3868929147720337
    2. 'dp' (adapté à ' dp') → logprob: -1.1368929147720337
    3. '	dp' → logprob: -11.886893272399902
    4. '
' → logprob: -12.636893272399902
    5. ' ' → logprob: -12.761893272399902
    6. '   ' → logprob: -13.261893272399902
    7. '_dp' → logprob: -13.261893272399902
    8. '           ' → logprob: -13.386893272399902
    9. 'd' → logprob: -13.636893272399902
    10. '(dp' → logprob: -14.136893272399902

Token 161: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.5822400857578032e-05
    2. '[' → logprob: -10.625025749206543
    3. '[js' → logprob: -14.625025749206543
    4. '[i' → logprob: -15.250025749206543
    5. ' [' → logprob: -16.00002670288086
    6. '<|end|>' → logprob: -16.25002670288086
    7. '```' → logprob: -16.25002670288086
    8. 'j' → logprob: -17.12502670288086
    9. '[
' → logprob: -17.12502670288086
    10. '[idx' → logprob: -17.12502670288086

Token 162: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.02844160795211792
    2. '=' → logprob: -3.7784416675567627
    3. ']=' → logprob: -5.528441429138184
    4. ' =' → logprob: -6.778441429138184
    5. ')' → logprob: -9.653441429138184
    6. 'max' → logprob: -13.028441429138184
    7. ' ]' → logprob: -13.403441429138184
    8. '}' → logprob: -13.903441429138184
    9. ')=' → logprob: -14.028441429138184
    10. '>' → logprob: -14.028441429138184

Token 163: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20141392946243286
    2. ' =' → logprob: -1.701413869857788
    3. '=max' → logprob: -14.951414108276367
    4. 'max' → logprob: -15.826414108276367
    5. ']=' → logprob: -16.576414108276367
    6. ']' → logprob: -16.576414108276367
    7. ')' → logprob: -16.951414108276367
    8. ' ' → logprob: -17.201414108276367
    9. '.=' → logprob: -17.951414108276367
    10. '=

' → logprob: -18.451414108276367

Token 164: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.16027134656906128
    2. ' max' → logprob: -1.910271406173706
    3. 'min' → logprob: -10.285271644592285
    4. ' min' → logprob: -11.535271644592285
    5. 'row' → logprob: -13.285271644592285
    6. ' ' → logprob: -14.660271644592285
    7. '   ' → logprob: -15.160271644592285
    8. '	max' → logprob: -15.285271644592285
    9. ' row' → logprob: -15.285271644592285
    10. '(max' → logprob: -15.785271644592285

Token 165: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -0.0001238004770129919
    2. '(' → logprob: -9.000123977661133
    3. 'dp' → logprob: -15.125123977661133
    4. '(
' → logprob: -16.125123977661133
    5. '	dp' → logprob: -18.000123977661133
    6. ' (' → logprob: -18.125123977661133
    7. '(

' → logprob: -18.875123977661133
    8. ' dp' → logprob: -19.250123977661133
    9. '(d' → logprob: -19.250123977661133
    10. '(dt' → logprob: -19.375123977661133

Token 166: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -7.896309739408025e-07
    2. '[' → logprob: -15.625000953674316
    3. ' [' → logprob: -16.0
    4. '[
' → logprob: -16.5
    5. 'j' → logprob: -16.75
    6. ')' → logprob: -16.875
    7. '[js' → logprob: -18.0
    8. ',j' → logprob: -18.25
    9. '```' → logprob: -18.375
    10. '(j' → logprob: -18.5

Token 167: '-' (ID: 12)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.29339590668678284
    2. ' ,' → logprob: -1.4183958768844604
    3. ',j' → logprob: -4.41839599609375
    4. 'j' → logprob: -10.54339599609375
    5. '[j' → logprob: -10.91839599609375
    6. '-' → logprob: -11.29339599609375
    7. '],' → logprob: -11.29339599609375
    8. ',d' → logprob: -11.41839599609375
    9. ' j' → logprob: -11.66839599609375
    10. '),' → logprob: -11.91839599609375

Token 168: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.8219583075260743e-05
    2. ' ' → logprob: -10.250038146972656
    3. ')' → logprob: -13.875038146972656
    4. '```' → logprob: -14.437538146972656
    5. '   ' → logprob: -14.875038146972656
    6. '0' → logprob: -15.125038146972656
    7. ',' → logprob: -16.000038146972656
    8. '-' → logprob: -16.312538146972656
    9. '),' → logprob: -17.125038146972656
    10. 's' → logprob: -17.312538146972656

Token 169: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03366322070360184
    2. ' ,' → logprob: -3.408663272857666
    3. ' dp' → logprob: -12.158662796020508
    4. ',j' → logprob: -12.408662796020508
    5. ',d' → logprob: -13.033662796020508
    6. ' +' → logprob: -13.283662796020508
    7. '+' → logprob: -13.783662796020508
    8. ' ' → logprob: -14.033662796020508
    9. '),' → logprob: -15.158662796020508
    10. '(dp' → logprob: -15.158662796020508

Token 170: ' dp' (ID: 21546)
  Prédit: ' dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dp' → logprob: -0.0485910028219223
    2. 'dp' → logprob: -3.048590898513794
    3. '	dp' → logprob: -13.173590660095215
    4. '(dp' → logprob: -13.798590660095215
    5. '_dp' → logprob: -14.798590660095215
    6. '.dp' → logprob: -15.923590660095215
    7. ' ' → logprob: -16.17359161376953
    8. ' ' → logprob: -16.54859161376953
    9. 'd' → logprob: -17.42359161376953
    10. '    ' → logprob: -17.54859161376953

Token 171: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -2.339278580620885e-06
    2. 'j' → logprob: -13.375001907348633
    3. '[' → logprob: -14.500001907348633
    4. '[
' → logprob: -16.250001907348633
    5. '[js' → logprob: -16.625001907348633
    6. ' [' → logprob: -17.000001907348633
    7. ' j' → logprob: -18.250001907348633
    8. '<|end|>' → logprob: -19.375001907348633
    9. '```' → logprob: -19.625001907348633
    10. ')' → logprob: -19.875001907348633

Token 172: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.1395311802625656
    2. ')' → logprob: -2.514531135559082
    3. '[j' → logprob: -3.139531135559082
    4. 'j' → logprob: -5.389531135559082
    5. ']' → logprob: -6.639531135559082
    6. '[' → logprob: -10.514531135559082
    7. '   ' → logprob: -10.639531135559082
    8. '])[' → logprob: -11.264531135559082
    9. '])
' → logprob: -11.889531135559082
    10. ' )' → logprob: -11.889531135559082

Token 173: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.048628244549036026
    2. '+' → logprob: -3.048628330230713
    3. ')' → logprob: -10.173627853393555
    4. ' ' → logprob: -13.673627853393555
    5. ' ' → logprob: -14.673627853393555
    6. ')+' → logprob: -14.798627853393555
    7. ' +
' → logprob: -15.798627853393555
    8. '```' → logprob: -16.548627853393555
    9. '+j' → logprob: -16.548627853393555
    10. ' )' → logprob: -16.673627853393555

Token 174: ' row' (ID: 5225)
  Prédit: ' row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.006117794197052717
    2. 'row' → logprob: -5.131117820739746
    3. ' ' → logprob: -8.881117820739746
    4. ' line' → logprob: -11.506117820739746
    5. '(row' → logprob: -11.756117820739746
    6. ' rows' → logprob: -11.881117820739746
    7. '[row' → logprob: -12.256117820739746
    8. ' ' → logprob: -12.256117820739746
    9. ''' → logprob: -12.381117820739746
    10. '	row' → logprob: -12.506117820739746

Token 175: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -1.259079363080673e-05
    2. '[' → logprob: -11.500012397766113
    3. '```' → logprob: -13.750012397766113
    4. '[js' → logprob: -14.750012397766113
    5. '[i' → logprob: -15.000012397766113
    6. ' [' → logprob: -15.625012397766113
    7. '   ' → logprob: -15.875012397766113
    8. '`' → logprob: -16.12501335144043
    9. 'j' → logprob: -16.25001335144043
    10. '[
' → logprob: -17.25001335144043

Token 176: ']

' (ID: 3144)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.4498052223643754e-05
    2. ')
' → logprob: -11.250014305114746
    3. '}' → logprob: -14.000014305114746
    4. '<|end|>' → logprob: -14.875014305114746
    5. ' )' → logprob: -16.500015258789062
    6. '```' → logprob: -16.875015258789062
    7. ')}' → logprob: -17.250015258789062
    8. '),' → logprob: -17.250015258789062
    9. ')

' → logprob: -18.000015258789062
    10. ')`' → logprob: -18.125015258789062

Token 177: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0005570820067077875
    2. '
' → logprob: -7.500556945800781
    3. '```' → logprob: -13.000556945800781
    4. '

' → logprob: -14.000556945800781
    5. '    
' → logprob: -14.750556945800781
    6. 'result' → logprob: -15.125556945800781
    7. ' print' → logprob: -15.750556945800781
    8. '  
' → logprob: -16.12555694580078
    9. 'max' → logprob: -17.00055694580078
    10. 'answer' → logprob: -17.50055694580078

Token 178: '(max' (ID: 17178)
  Prédit: '(max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(max' → logprob: -0.0619787760078907
    2. '(' → logprob: -2.811978816986084
    3. '(dp' → logprob: -12.061978340148926
    4. '(min' → logprob: -12.936978340148926
    5. '(
' → logprob: -14.061978340148926
    6. 'max' → logprob: -14.311978340148926
    7. '(np' → logprob: -14.686978340148926
    8. '(sum' → logprob: -15.061978340148926
    9. '('' → logprob: -15.186978340148926
    10. '()' → logprob: -15.436978340148926

Token 179: '(dp' (ID: 68843)
  Prédit: '(dp'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dp' → logprob: -7.896309739408025e-07
    2. 'dp' → logprob: -15.000000953674316
    3. '(' → logprob: -15.250000953674316
    4. ')' → logprob: -16.5
    5. '(df' → logprob: -18.625
    6. '	dp' → logprob: -19.375
    7. '(max' → logprob: -19.875
    8. ' dp' → logprob: -20.0
    9. '(dt' → logprob: -20.0
    10. '_dp' → logprob: -20.625

Token 180: '[:' (ID: 7808)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '))' → logprob: -0.014195243827998638
    2. ')' → logprob: -4.264195442199707
    3. '()))' → logprob: -10.639195442199707
    4. '))
' → logprob: -12.639195442199707
    5. '())' → logprob: -12.889195442199707
    6. ')))' → logprob: -13.889195442199707
    7. '()' → logprob: -14.264195442199707
    8. ' ))' → logprob: -15.639195442199707
    9. '])' → logprob: -15.889195442199707
    10. '})' → logprob: -16.51419448852539

Token 181: 'len' (ID: 3303)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00011486753646750003
    2. 'len' → logprob: -9.125114440917969
    3. ' n' → logprob: -12.250114440917969
    4. '(n' → logprob: -14.250114440917969
    5. 'max' → logprob: -16.25011444091797
    6. ')' → logprob: -16.62511444091797
    7. '[n' → logprob: -17.00011444091797
    8. '   ' → logprob: -17.00011444091797
    9. 'length' → logprob: -17.00011444091797
    10. ')n' → logprob: -17.12511444091797

Token 182: '(lines' (ID: 73839)
  Prédit: '(lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(lines' → logprob: -0.06936592608690262
    2. '(row' → logprob: -2.819365978240967
    3. '(rows' → logprob: -4.944365978240967
    4. '(line' → logprob: -8.694365501403809
    5. '(dp' → logprob: -10.069365501403809
    6. '(' → logprob: -10.944365501403809
    7. 'lines' → logprob: -11.319365501403809
    8. 'row' → logprob: -12.319365501403809
    9. ' lines' → logprob: -13.444365501403809
    10. 'rows' → logprob: -15.194365501403809

Token 183: '[-' (ID: 17503)
  Prédit: '[n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[n' → logprob: -0.09352495521306992
    2. '[' → logprob: -2.718524932861328
    3. '[-' → logprob: -3.843524932861328
    4. '[i' → logprob: -7.093524932861328
    5. '(n' → logprob: -7.593524932861328
    6. ')' → logprob: -8.218524932861328
    7. ')])' → logprob: -8.343524932861328
    8. '[j' → logprob: -11.093524932861328
    9. '(' → logprob: -11.468524932861328
    10. ')n' → logprob: -12.468524932861328

Token 184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.37176239490509033
    2. '[-' → logprob: -1.9967623949050903
    3. ')])' → logprob: -3.121762275695801
    4. '(' → logprob: -3.621762275695801
    5. '(lines' → logprob: -3.621762275695801
    6. '()' → logprob: -3.871762275695801
    7. '(-' → logprob: -4.496762275695801
    8. '-' → logprob: -4.496762275695801
    9. ')' → logprob: -4.621762275695801
    10. '()]' → logprob: -5.496762275695801

Token 185: '])' (ID: 4636)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.005445654969662428
    2. '])' → logprob: -6.38044548034668
    3. '())' → logprob: -6.50544548034668
    4. ')])' → logprob: -6.50544548034668
    5. '])))' → logprob: -8.38044548034668
    6. '()' → logprob: -8.75544548034668
    7. ']))' → logprob: -8.75544548034668
    8. ')' → logprob: -8.88044548034668
    9. '()]' → logprob: -10.88044548034668
    10. '))' → logprob: -11.00544548034668

Token 186: ']))' (ID: 20259)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0025923040229827166
    2. ')' → logprob: -6.252592086791992
    3. ')))' → logprob: -7.377592086791992
    4. ']))' → logprob: -10.627592086791992
    5. '))
' → logprob: -12.002592086791992
    6. '}))' → logprob: -12.877592086791992
    7. '])' → logprob: -13.002592086791992
    8. '()))' → logprob: -13.127592086791992
    9. ')])' → logprob: -15.002592086791992
    10. ' ))' → logprob: -15.252592086791992


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 184
Tokens correctement prédits (1ère position, stricte): 89
Tokens correctement prédits (1ère position, avec adaptation): 92
Tokens correctement prédits (top 10): 167
Précision stricte (1ère position): 48.37%
Précision adaptée (1ère position): 50.00%
Précision (top 10): 90.76%
================================================================================
