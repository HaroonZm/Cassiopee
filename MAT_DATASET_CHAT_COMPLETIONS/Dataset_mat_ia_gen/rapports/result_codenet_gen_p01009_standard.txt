================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:23
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)
input=sys.stdin.readline

N,Q=map(int,input().split())
parent=[i for i in range(N+1)]
dist=[0]*(N+1)

def find(x):
    if parent[x]==x:
        return x
    r=find(parent[x])
    dist[x]+=dist[parent[x]]
    parent[x]=r
    return r

def union(a,b,c):
    ra=find(a)
    rb=find(b)
    if ra!=rb:
        parent[rb]=ra
        dist[rb]=dist[a]-dist[b]+c

for _ in range(Q):
    line=input().split()
    if line[0]=="IN":
        A,B,C=map(int,line[1:])
        union(A,B,C)
    else:
        A,B=map(int,line[1:])
        ra=find(A)
        rb=find(B)
        if ra!=rb:
            print("WARNING")
        else:
            print(dist[B]-dist[A])
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.21183791756629944
    2. '.' → logprob: -2.3368380069732666
    3. '<|end|>' → logprob: -2.8368380069732666
    4. '\' → logprob: -4.7118377685546875
    5. 'newline' → logprob: -5.0868377685546875
    6. 'import' → logprob: -5.0868377685546875
    7. '
' → logprob: -5.7118377685546875
    8. '' → logprob: -5.8368377685546875
    9. '<|end|>' → logprob: -5.8368377685546875
    10. '\r' → logprob: -6.3368377685546875

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -9.078839502763003e-05
    2. '[' → logprob: -11.250090599060059
    3. '.import' → logprob: -11.625090599060059
    4. '.readline' → logprob: -11.750090599060059
    5. '```' → logprob: -11.750090599060059
    6. ' .' → logprob: -12.000090599060059
    7. '.
' → logprob: -12.500090599060059
    8. '.`' → logprob: -12.625090599060059
    9. '`.' → logprob: -12.875090599060059
    10. '.user' → logprob: -12.875090599060059

Token 5: 'rec' (ID: 9285)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8270372748374939
    2. '_trace' → logprob: -2.0770373344421387
    3. 's' → logprob: -2.7020373344421387
    4. '_sys' → logprob: -3.0770373344421387
    5. 'trace' → logprob: -3.0770373344421387
    6. 'sys' → logprob: -3.2020373344421387
    7. '_soft' → logprob: -3.3270373344421387
    8. 'default' → logprob: -3.5770373344421387
    9. ' _' → logprob: -3.8270373344421387
    10. '_default' → logprob: -3.9520373344421387

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0007874715374782681
    2. 'ursive' → logprob: -7.375787258148193
    3. 'urs' → logprob: -10.000787734985352
    4. 'ursor' → logprob: -10.875787734985352
    5. 'ision' → logprob: -11.250787734985352
    6. 'alc' → logprob: -11.625787734985352
    7. 'set' → logprob: -11.625787734985352
    8. '_limit' → logprob: -11.750787734985352
    9. 'ursively' → logprob: -11.875787734985352
    10. 't' → logprob: -12.125787734985352

Token 7: 'limit' (ID: 19698)
  Prédit: '_limit'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_limit' → logprob: -0.48526206612586975
    2. 'limit' → logprob: -0.9852620363235474
    3. '_depth' → logprob: -4.610261917114258
    4. 'depth' → logprob: -7.485261917114258
    5. '_' → logprob: -8.485261917114258
    6. '_rate' → logprob: -10.110261917114258
    7. 'lim' → logprob: -10.235261917114258
    8. '(' → logprob: -10.485261917114258
    9. '_factor' → logprob: -10.485261917114258
    10. '_stack' → logprob: -10.735261917114258

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.7835754988482222e-05
    2. '(
' → logprob: -11.625018119812012
    3. ' (' → logprob: -12.375018119812012
    4. '(

' → logprob: -13.375018119812012
    5. '(.' → logprob: -14.000018119812012
    6. '("("' → logprob: -14.500018119812012
    7. '((' → logprob: -14.750018119812012
    8. '('' → logprob: -15.000018119812012
    9. '```' → logprob: -15.125018119812012
    10. '(()' → logprob: -15.875018119812012

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.6933095455169678
    2. '100' → logprob: -0.6933095455169678
    3. ' ' → logprob: -9.443309783935547
    4. '500' → logprob: -9.818309783935547
    5. '300' → logprob: -11.443309783935547
    6. '999' → logprob: -12.568309783935547
    7. '1' → logprob: -12.818309783935547
    8. '250' → logprob: -12.818309783935547
    9. '150' → logprob: -12.943309783935547
    10. '200' → logprob: -13.318309783935547

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04912445321679115
    2. '00' → logprob: -3.6741244792938232
    3. '000' → logprob: -3.7991244792938232
    4. '4' → logprob: -9.049124717712402
    5. '6' → logprob: -10.799124717712402
    6. '2' → logprob: -11.049124717712402
    7. '**' → logprob: -11.674124717712402
    8. '3' → logprob: -12.674124717712402
    9. ')' → logprob: -12.674124717712402
    10. '5' → logprob: -13.049124717712402

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00714417127892375
    2. '9' → logprob: -5.632143974304199
    3. '6' → logprob: -5.757143974304199
    4. '8' → logprob: -7.882143974304199
    5. '```' → logprob: -15.7571439743042
    6. ' ' → logprob: -16.507144927978516
    7. '(' → logprob: -17.132144927978516
    8. '5' → logprob: -17.757144927978516
    9. '``' → logprob: -18.257144927978516
    10. '999' → logprob: -18.382144927978516

Token 12: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3663626305060461e-05
    2. '))' → logprob: -11.75001335144043
    3. ' )' → logprob: -12.12501335144043
    4. ')
' → logprob: -15.62501335144043
    5. ')))' → logprob: -16.75001335144043
    6. ')`' → logprob: -17.00001335144043
    7. ' ' → logprob: -17.25001335144043
    8. '）' → logprob: -18.12501335144043
    9. '`)' → logprob: -18.12501335144043
    10. '```' → logprob: -18.37501335144043

Token 13: 'input' (ID: 2586)
  Prédit: '\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\' → logprob: -0.2842516005039215
    2. ')' → logprob: -2.9092516899108887
    3. '\n' → logprob: -3.0342516899108887
    4. 'def' → logprob: -3.5342516899108887
    5. '
' → logprob: -3.7842516899108887
    6. '(' → logprob: -4.034251689910889
    7. '
' → logprob: -4.284251689910889
    8. '' → logprob: -4.534251689910889
    9. 'sys' → logprob: -4.534251689910889
    10. '#' → logprob: -4.909251689910889

Token 14: '=sys' (ID: 149200)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.5421491265296936
    2. '()' → logprob: -0.9171491265296936
    3. '```' → logprob: -5.167149066925049
    4. '_data' → logprob: -5.292149066925049
    5. '40' → logprob: -6.167149066925049
    6. '().' → logprob: -7.042149066925049
    7. '=' → logprob: -7.417149066925049
    8. 'data' → logprob: -7.417149066925049
    9. '('' → logprob: -7.542149066925049
    10. '_str' → logprob: -7.792149066925049

Token 15: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.030276840552687645
    2. '.readline' → logprob: -3.6552767753601074
    3. '.stdin' → logprob: -5.780276775360107
    4. ' .' → logprob: -7.280276775360107
    5. '.stdout' → logprob: -10.155277252197266
    6. '.read' → logprob: -10.530277252197266
    7. '.input' → logprob: -10.780277252197266
    8. '.​' → logprob: -10.905277252197266
    9. '().' → logprob: -12.030277252197266
    10. '..' → logprob: -12.030277252197266

Token 16: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.002098871860653162
    2. '.read' → logprob: -6.25209903717041
    3. '.' → logprob: -8.87709903717041
    4. 'read' → logprob: -10.75209903717041
    5. '.readlines' → logprob: -12.62709903717041
    6. '.Read' → logprob: -13.50209903717041
    7. ' readline' → logprob: -13.87709903717041
    8. '<|end|>' → logprob: -13.87709903717041
    9. '.buffer' → logprob: -14.00209903717041
    10. '```' → logprob: -15.50209903717041

Token 17: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.510441780090332
    2. '()
' → logprob: -2.135441780090332
    3. 'def' → logprob: -2.260441780090332
    4. '()

' → logprob: -2.635441780090332
    5. '(' → logprob: -3.010441780090332
    6. '
' → logprob: -3.385441780090332
    7. '

' → logprob: -5.385441780090332
    8. '\n' → logprob: -5.510441780090332
    9. '(
' → logprob: -5.635441780090332
    10. '()\' → logprob: -6.010441780090332

Token 18: 'N' (ID: 45)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.023760391399264336
    2. 'n' → logprob: -3.7737603187561035
    3. 'd' → logprob: -8.023760795593262
    4. '\' → logprob: -9.523760795593262
    5. 'class' → logprob: -10.273760795593262
    6. 'N' → logprob: -10.773760795593262
    7. '```' → logprob: -10.898760795593262
    8. 'from' → logprob: -11.898760795593262
    9. '(n' → logprob: -12.023760795593262
    10. 'for' → logprob: -12.023760795593262

Token 19: ',Q' (ID: 130136)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6582960486412048
    2. '=' → logprob: -0.9082960486412048
    3. ' ' → logprob: -2.9082961082458496
    4. '<|end|>' → logprob: -4.65829610824585
    5. ')' → logprob: -4.78329610824585
    6. ',' → logprob: -5.53329610824585
    7. '[' → logprob: -7.65829610824585
    8. '>' → logprob: -7.78329610824585
    9. '=int' → logprob: -8.533295631408691
    10. '.' → logprob: -8.533295631408691

Token 20: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.6329229474067688
    2. '=' → logprob: -0.7579229474067688
    3. ',' → logprob: -8.882923126220703
    4. '=int' → logprob: -9.507923126220703
    5. ' =
' → logprob: -10.257923126220703
    6. '=input' → logprob: -10.757923126220703
    7. ' ' → logprob: -10.882923126220703
    8. '<|end|>' → logprob: -11.882923126220703
    9. ' ,' → logprob: -12.132923126220703
    10. ' =[' → logprob: -12.507923126220703

Token 21: 'map' (ID: 3726)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.10649813711643219
    2. ' int' → logprob: -2.6064982414245605
    3. 'map' → logprob: -3.8564982414245605
    4. ' map' → logprob: -5.1064982414245605
    5. '[int' → logprob: -10.981497764587402
    6. '10' → logprob: -12.481497764587402
    7. '=int' → logprob: -13.106497764587402
    8. '(int' → logprob: -13.106497764587402
    9. '<int' → logprob: -13.231497764587402
    10. ' ' → logprob: -13.481497764587402

Token 22: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.43319064378738403
    2. '(' → logprob: -1.1831905841827393
    3. '(lambda' → logprob: -3.1831905841827393
    4. '(str' → logprob: -5.808190822601318
    5. '(input' → logprob: -7.933190822601318
    6. '(len' → logprob: -8.68319034576416
    7. 'int' → logprob: -9.68319034576416
    8. '(
' → logprob: -10.43319034576416
    9. '[int' → logprob: -10.93319034576416
    10. '()' → logprob: -11.05819034576416

Token 23: ',input' (ID: 123014)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.4017142057418823
    2. ',input' → logprob: -1.2767142057418823
    3. ',(' → logprob: -3.526714324951172
    4. ',int' → logprob: -4.151714324951172
    5. '(' → logprob: -5.526714324951172
    6. '(sys' → logprob: -7.026714324951172
    7. ',System' → logprob: -8.026714324951172
    8. '(input' → logprob: -8.026714324951172
    9. ',user' → logprob: -8.526714324951172
    10. ',line' → logprob: -8.651714324951172

Token 24: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.4875718951225281
    2. '())' → logprob: -0.9875718951225281
    3. '()' → logprob: -4.362571716308594
    4. ')' → logprob: -7.612571716308594
    5. '()))' → logprob: -9.612571716308594
    6. '(' → logprob: -9.987571716308594
    7. '()[' → logprob: -11.612571716308594
    8. '());' → logprob: -11.862571716308594
    9. '();)' → logprob: -11.862571716308594
    10. '()),' → logprob: -11.987571716308594

Token 25: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.001705771079286933
    2. 'strip' → logprob: -6.501705646514893
    3. 'rstrip' → logprob: -8.50170612335205
    4. ' split' → logprob: -16.376705169677734
    5. 'read' → logprob: -16.876705169677734
    6. '```' → logprob: -17.251705169677734
    7. ')' → logprob: -17.501705169677734
    8. 'spl' → logprob: -17.751705169677734
    9. '(split' → logprob: -17.751705169677734
    10. 's' → logprob: -18.376705169677734

Token 26: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0019001978216692805
    2. '))' → logprob: -6.7519001960754395
    3. '())' → logprob: -7.3769001960754395
    4. '()' → logprob: -9.251900672912598
    5. '),' → logprob: -13.001900672912598
    6. '`)' → logprob: -13.751900672912598
    7. '(' → logprob: -14.251900672912598
    8. ' )' → logprob: -14.501900672912598
    9. ')))' → logprob: -14.626900672912598
    10. ')")' → logprob: -14.626900672912598

Token 27: 'parent' (ID: 4903)
  Prédit: 'tree'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tree' → logprob: -1.8112285137176514
    2. 'graph' → logprob: -2.1862285137176514
    3. 'a' → logprob: -2.3112285137176514
    4. 'A' → logprob: -2.4362285137176514
    5. '
' → logprob: -2.5612285137176514
    6. '```' → logprob: -3.0612285137176514
    7. '
' → logprob: -3.3112285137176514
    8. ' 
' → logprob: -3.3112285137176514
    9. 'data' → logprob: -3.5612285137176514
    10. ')' → logprob: -3.6862285137176514

Token 28: '=[' (ID: 13370)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26374882459640503
    2. '=' → logprob: -1.7637488842010498
    3. '[' → logprob: -3.51374888420105
    4. 's' → logprob: -3.63874888420105
    5. '=[' → logprob: -6.888748645782471
    6. '=[]' → logprob: -7.388748645782471
    7. ' =[' → logprob: -7.513748645782471
    8. ' ' → logprob: -7.888748645782471
    9. ',' → logprob: -8.138749122619629
    10. '[]' → logprob: -8.138749122619629

Token 29: 'i' (ID: 72)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.026712896302342415
    2. '-i' → logprob: -3.9017128944396973
    3. 'i' → logprob: -5.151712894439697
    4. '0' → logprob: -8.276713371276855
    5. ' -' → logprob: -9.776713371276855
    6. ' i' → logprob: -10.651713371276855
    7. '-int' → logprob: -11.776713371276855
    8. '_i' → logprob: -12.901713371276855
    9. '-_' → logprob: -12.901713371276855
    10. 'None' → logprob: -13.026713371276855

Token 30: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04864288866519928
    2. 'for' → logprob: -3.048642873764038
    3. ' ' → logprob: -10.048643112182617
    4. '-' → logprob: -12.298643112182617
    5. ')' → logprob: -12.923643112182617
    6. '	for' → logprob: -13.173643112182617
    7. ' in' → logprob: -14.298643112182617
    8. ' f' → logprob: -14.923643112182617
    9. 'in' → logprob: -15.048643112182617
    10. 'parent' → logprob: -15.048643112182617

Token 31: ' i' (ID: 575)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.002613355638459325
    2. 'range' → logprob: -6.002613544464111
    3. ' i' → logprob: -9.127613067626953
    4. ' ' → logprob: -11.627613067626953
    5. ' in' → logprob: -12.002613067626953
    6. '(range' → logprob: -12.002613067626953
    7. '	range' → logprob: -12.127613067626953
    8. '_range' → logprob: -14.002613067626953
    9. '  ' → logprob: -14.127613067626953
    10. 'i' → logprob: -14.502613067626953

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.019961290061473846
    2. 'in' → logprob: -4.394961357116699
    3. ' range' → logprob: -5.019961357116699
    4. 'range' → logprob: -7.144961357116699
    5. ' ' → logprob: -10.7699613571167
    6. '(range' → logprob: -12.1449613571167
    7. ' xrange' → logprob: -13.8949613571167
    8. '  ' → logprob: -14.0199613571167
    9. '	range' → logprob: -14.8949613571167
    10. ')' → logprob: -15.2074613571167

Token 33: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.03804194927215576
    2. ' range' → logprob: -3.2880420684814453
    3. '(range' → logprob: -15.413042068481445
    4. '	range' → logprob: -15.663042068481445
    5. '_range' → logprob: -17.163042068481445
    6. 'ange' → logprob: -18.788042068481445
    7. '.range' → logprob: -18.913042068481445
    8. 'Range' → logprob: -19.288042068481445
    9. ' ' → logprob: -19.413042068481445
    10. 'rang' → logprob: -19.663042068481445

Token 34: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -0.0004320996522437781
    2. '(' → logprob: -7.750432014465332
    3. '(n' → logprob: -13.875432014465332
    4. 'N' → logprob: -15.625432014465332
    5. ' (' → logprob: -15.875432014465332
    6. '(
' → logprob: -17.00043296813965
    7. ')' → logprob: -17.12543296813965
    8. '((' → logprob: -17.37543296813965
    9. ')(' → logprob: -17.37543296813965
    10. '(Q' → logprob: -17.50043296813965

Token 35: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.73314929776825e-05
    2. ')]
' → logprob: -10.25008773803711
    3. ')' → logprob: -10.62508773803711
    4. '+' → logprob: -11.62508773803711
    5. ')])' → logprob: -11.75008773803711
    6. ' )' → logprob: -12.00008773803711
    7. ']' → logprob: -13.75008773803711
    8. '])]' → logprob: -14.00008773803711
    9. ')]

' → logprob: -14.25008773803711
    10. ')],' → logprob: -14.50008773803711

Token 36: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.931863051955588e-05
    2. ' ' → logprob: -9.750059127807617
    3. '2' → logprob: -14.750059127807617
    4. '１' → logprob: -15.937559127807617
    5. '```' → logprob: -16.000059127807617
    6. ')' → logprob: -16.500059127807617
    7. '(' → logprob: -16.750059127807617
    8. '7' → logprob: -17.687559127807617
    9. '   ' → logprob: -17.875059127807617
    10. '3' → logprob: -18.125059127807617

Token 37: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0003963569179177284
    2. ')' → logprob: -8.000396728515625
    3. ']' → logprob: -9.875396728515625
    4. ')]
' → logprob: -12.375396728515625
    5. ')])' → logprob: -13.500396728515625
    6. ' )' → logprob: -13.625396728515625
    7. '])' → logprob: -14.375396728515625
    8. ')],' → logprob: -14.625396728515625
    9. '])]' → logprob: -14.625396728515625
    10. ' ]' → logprob: -15.625396728515625

Token 38: 'dist' (ID: 24126)
  Prédit: 'rank'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rank' → logprob: -0.7852234840393066
    2. 'def' → logprob: -1.1602234840393066
    3. 'size' → logprob: -1.5352234840393066
    4. '
' → logprob: -5.160223484039307
    5. '```' → logprob: -5.660223484039307
    6. 'parent' → logprob: -6.285223484039307
    7. 'depth' → logprob: -6.535223484039307
    8. ' 
' → logprob: -7.410223484039307
    9. ' size' → logprob: -8.035223007202148
    10. 'child' → logprob: -8.535223007202148

Token 39: '=[' (ID: 13370)
  Prédit: '=['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[' → logprob: -0.20954400300979614
    2. '=' → logprob: -1.7095439434051514
    3. ' =' → logprob: -5.4595441818237305
    4. ' =[' → logprob: -5.9595441818237305
    5. '=[]' → logprob: -7.0845441818237305
    6. '[' → logprob: -7.9595441818237305
    7. '=[[' → logprob: -10.70954418182373
    8. 's' → logprob: -11.58454418182373
    9. '=np' → logprob: -12.08454418182373
    10. '=[
' → logprob: -12.45954418182373

Token 40: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010509284038562328
    2. ' ' → logprob: -9.500104904174805
    3. '-' → logprob: -10.500104904174805
    4. '[' → logprob: -13.250104904174805
    5. '1' → logprob: -15.125104904174805
    6. 'float' → logprob: -15.750104904174805
    7. ' -' → logprob: -16.125104904174805
    8. ' [' → logprob: -16.250104904174805
    9. '[int' → logprob: -17.500104904174805
    10. '(' → logprob: -17.625104904174805

Token 41: ']*(' (ID: 92627)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.4792936444282532
    2. ']*(' → logprob: -0.9792936444282532
    3. ' for' → logprob: -5.6042938232421875
    4. 'for' → logprob: -6.9792938232421875
    5. ']*' → logprob: -7.7292938232421875
    6. ']+' → logprob: -9.604293823242188
    7. ',' → logprob: -10.354293823242188
    8. ')' → logprob: -10.729293823242188
    9. ' ]' → logprob: -11.104293823242188
    10. ')]' → logprob: -12.729293823242188

Token 42: 'N' (ID: 45)
  Prédit: 'N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -7.3458322731312364e-06
    2. ' N' → logprob: -11.875007629394531
    3. '(N' → logprob: -15.125007629394531
    4. '(' → logprob: -17.00000762939453
    5. ')' → logprob: -18.50000762939453
    6. 'n' → logprob: -18.87500762939453
    7. '0' → logprob: -19.00000762939453
    8. ' ' → logprob: -19.00000762939453
    9. '{' → logprob: -19.25000762939453
    10. '	N' → logprob: -19.50000762939453

Token 43: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -3.128163257315464e-07
    2. ' +' → logprob: -15.625
    3. '+
' → logprob: -16.25
    4. '+)' → logprob: -16.875
    5. ')' → logprob: -17.375
    6. '1' → logprob: -17.75
    7. '＋' → logprob: -18.375
    8. ')+' → logprob: -18.75
    9. '```' → logprob: -19.625
    10. '+[' → logprob: -20.125

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.625001907348633
    3. '2' → logprob: -14.125001907348633
    4. '+' → logprob: -16.125001907348633
    5. '```' → logprob: -17.062501907348633
    6. '１' → logprob: -17.187501907348633
    7. '7' → logprob: -17.750001907348633
    8. '5' → logprob: -17.937501907348633
    9. ')' → logprob: -17.937501907348633
    10. '0' → logprob: -18.062501907348633

Token 45: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.981667537620524e-06
    2. ')
' → logprob: -13.750001907348633
    3. '<|end|>' → logprob: -15.000001907348633
    4. ' )' → logprob: -15.375001907348633
    5. '),' → logprob: -16.500001907348633
    6. ')

' → logprob: -16.875001907348633
    7. '))' → logprob: -17.500001907348633
    8. '```' → logprob: -17.625001907348633
    9. ')
' → logprob: -17.750001907348633
    10. '）' → logprob: -18.000001907348633

Token 46: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -7.004696090007201e-05
    2. 'for' → logprob: -9.625069618225098
    3. '
' → logprob: -13.500069618225098
    4. '```' → logprob: -13.625069618225098
    5. '\' → logprob: -14.500069618225098
    6. ' def' → logprob: -15.375069618225098
    7. '-def' → logprob: -15.750069618225098
    8. 'de' → logprob: -16.375070571899414
    9. '	def' → logprob: -16.375070571899414
    10. ':def' → logprob: -16.375070571899414

Token 47: ' find' (ID: 1646)
  Prédit: ' find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.030040424317121506
    2. 'find' → logprob: -3.5300405025482178
    3. ' root' → logprob: -8.530040740966797
    4. ' union' → logprob: -10.530040740966797
    5. 'root' → logprob: -10.780040740966797
    6. '	find' → logprob: -11.530040740966797
    7. ' fin' → logprob: -11.655040740966797
    8. 'f' → logprob: -12.280040740966797
    9. ' ' → logprob: -12.405040740966797
    10. 'union' → logprob: -12.655040740966797

Token 48: '(x' (ID: 4061)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.19055263698101044
    2. '(x' → logprob: -1.9405525922775269
    3. '(u' → logprob: -3.8155527114868164
    4. '(parent' → logprob: -5.690552711486816
    5. '(i' → logprob: -6.190552711486816
    6. '(a' → logprob: -7.065552711486816
    7. '_parent' → logprob: -7.315552711486816
    8. '(n' → logprob: -8.190552711486816
    9. '(node' → logprob: -8.315552711486816
    10. '(v' → logprob: -8.940552711486816

Token 49: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0013985719997435808
    2. '):
' → logprob: -6.62639856338501
    3. ')' → logprob: -9.626399040222168
    4. ' ):' → logprob: -12.751399040222168
    5. '):
' → logprob: -12.876399040222168
    6. ':' → logprob: -13.876399040222168
    7. '):

' → logprob: -16.12639808654785
    8. ')：' → logprob: -16.12639808654785
    9. '）：' → logprob: -17.00139808654785
    10. '}:' → logprob: -17.75139808654785

Token 50: '   ' (ID: 271)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1030869111418724
    2. '   ' → logprob: -2.7280869483947754
    3. 'if' → logprob: -3.4780869483947754
    4. ' ' → logprob: -7.353086948394775
    5. '	if' → logprob: -7.728086948394775
    6. ' while' → logprob: -7.853086948394775
    7. ' 
' → logprob: -9.353086471557617
    8. '
' → logprob: -9.603086471557617
    9. 'while' → logprob: -10.353086471557617
    10. '  ' → logprob: -11.353086471557617

Token 51: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.5765119791030884
    2. ' if' → logprob: -0.8265119791030884
    3. '   ' → logprob: -7.826511859893799
    4. ' while' → logprob: -9.201512336730957
    5. 'while' → logprob: -9.576512336730957
    6. '	if' → logprob: -12.951512336730957
    7. ' ' → logprob: -14.951512336730957
    8. '    ' → logprob: -16.20151138305664
    9. 'global' → logprob: -16.20151138305664
    10. '
' → logprob: -16.20151138305664

Token 52: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' → logprob: -0.023625344038009644
    2. ' parent' → logprob: -3.773625373840332
    3. 'x' → logprob: -7.898625373840332
    4. ' x' → logprob: -11.773625373840332
    5. '(parent' → logprob: -14.898625373840332
    6. '	parent' → logprob: -15.148625373840332
    7. 'par' → logprob: -16.773624420166016
    8. '[parent' → logprob: -16.898624420166016
    9. ',parent' → logprob: -17.023624420166016
    10. '_parent' → logprob: -17.273624420166016

Token 53: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -6.704273118884885e-07
    2. '[' → logprob: -14.500000953674316
    3. '[i' → logprob: -16.125
    4. '[parent' → logprob: -18.5
    5. '[
' → logprob: -19.125
    6. '[int' → logprob: -19.25
    7. '[I' → logprob: -19.5
    8. 'x' → logprob: -19.625
    9. ' [' → logprob: -19.75
    10. '[node' → logprob: -20.5

Token 54: ']==' (ID: 34128)
  Prédit: ']!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']!=' → logprob: -0.34739622473716736
    2. '!=' → logprob: -1.5973962545394897
    3. ']' → logprob: -2.8473961353302
    4. ']==' → logprob: -3.4723961353302
    5. '==' → logprob: -6.472396373748779
    6. ' !=' → logprob: -8.472395896911621
    7. ')!=' → logprob: -8.472395896911621
    8. ']=' → logprob: -11.347395896911621
    9. 'x' → logprob: -11.597395896911621
    10. '']==' → logprob: -12.472395896911621

Token 55: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.935296834039036e-06
    2. ' x' → logprob: -12.75000286102295
    3. '	x' → logprob: -19.250003814697266
    4. ')x' → logprob: -19.375003814697266
    5. '>x' → logprob: -21.500003814697266
    6. '{x' → logprob: -23.000003814697266
    7. ',x' → logprob: -23.250003814697266
    8. '"x' → logprob: -23.500003814697266
    9. '<|end|>' → logprob: -23.625003814697266
    10. '<x' → logprob: -23.625003814697266

Token 56: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0027361628599464893
    2. ':
' → logprob: -6.3777360916137695
    3. ':return' → logprob: -7.0027360916137695
    4. '):' → logprob: -9.12773609161377
    5. ' :' → logprob: -11.62773609161377
    6. '):
' → logprob: -13.37773609161377
    7. ':def' → logprob: -13.50273609161377
    8. '   ' → logprob: -13.62773609161377
    9. ')' → logprob: -13.87773609161377
    10. '():' → logprob: -14.62773609161377

Token 57: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6180478930473328
    2. '       ' → logprob: -1.3680479526519775
    3. ' return' → logprob: -1.7430479526519775
    4. '	return' → logprob: -4.368047714233398
    5. 'return' → logprob: -4.493047714233398
    6. '
' → logprob: -6.118047714233398
    7. ':return' → logprob: -6.243047714233398
    8. ' ' → logprob: -6.993047714233398
    9. '    ' → logprob: -8.118047714233398
    10. '\t' → logprob: -8.243047714233398

Token 58: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.023350296542048454
    2. ' return' → logprob: -4.023350238800049
    3. '   ' → logprob: -5.398350238800049
    4. '       ' → logprob: -7.398350238800049
    5. ':return' → logprob: -10.648350715637207
    6. '	return' → logprob: -10.773350715637207
    7. '{return' → logprob: -13.648350715637207
    8. '    ' → logprob: -13.648350715637207
    9. ' ' → logprob: -13.773350715637207
    10. '
' → logprob: -14.273350715637207

Token 59: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.001170225441455841
    2. ' x' → logprob: -6.7511701583862305
    3. '	x' → logprob: -20.876171112060547
    4. ' ' → logprob: -22.626171112060547
    5. '(x' → logprob: -22.751171112060547
    6. 'parent' → logprob: -22.876171112060547
    7. ',x' → logprob: -23.126171112060547
    8. '```' → logprob: -23.626171112060547
    9. ')x' → logprob: -23.751171112060547
    10. '{x' → logprob: -24.001171112060547

Token 60: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.21517737209796906
    2. '
' → logprob: -1.7151774168014526
    3. '    
' → logprob: -4.840177536010742
    4. '<|end|>' → logprob: -5.840177536010742
    5. '\n' → logprob: -7.590177536010742
    6. '  
' → logprob: -7.590177536010742
    7. ' 
' → logprob: -7.840177536010742
    8. '   
' → logprob: -7.965177536010742
    9. ' else' → logprob: -8.340177536010742
    10. 'else' → logprob: -8.465177536010742

Token 61: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2080181986093521
    2. '
' → logprob: -1.708018183708191
    3. '    
' → logprob: -5.3330183029174805
    4. '  
' → logprob: -7.7080183029174805
    5. '<|end|>' → logprob: -7.7080183029174805
    6. '   
' → logprob: -8.08301830291748
    7. ' 
' → logprob: -8.95801830291748
    8. '\n' → logprob: -8.95801830291748
    9. '```' → logprob: -9.83301830291748
    10. '  ' → logprob: -9.95801830291748

Token 62: ' r' (ID: 428)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.4897851049900055
    2. 'parent' → logprob: -1.239785075187683
    3. ' parent' → logprob: -2.4897851943969727
    4. '   ' → logprob: -5.239785194396973
    5. '    
' → logprob: -5.739785194396973
    6. 'p' → logprob: -6.614785194396973
    7. ' p' → logprob: -6.739785194396973
    8. ' 
' → logprob: -6.739785194396973
    9. '
' → logprob: -7.489785194396973
    10. '```' → logprob: -7.864785194396973

Token 63: '=find' (ID: 88179)
  Prédit: 'oot'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'oot' → logprob: -0.6983745098114014
    2. '=' → logprob: -1.0733745098114014
    3. '=find' → logprob: -1.9483745098114014
    4. 'et' → logprob: -4.5733747482299805
    5. '=root' → logprob: -5.8233747482299805
    6. 'eturn' → logprob: -5.8233747482299805
    7. ' =' → logprob: -7.1983747482299805
    8. '=f' → logprob: -8.07337474822998
    9. 'parent' → logprob: -8.19837474822998
    10. '_parent' → logprob: -8.82337474822998

Token 64: '(parent' (ID: 24729)
  Prédit: '(parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(parent' → logprob: -0.0003600144700612873
    2. 'parent' → logprob: -8.125360488891602
    3. '(' → logprob: -9.750360488891602
    4. '(paren' → logprob: -12.625360488891602
    5. '[parent' → logprob: -14.125360488891602
    6. ',parent' → logprob: -14.375360488891602
    7. ' parent' → logprob: -15.000360488891602
    8. '(x' → logprob: -15.375360488891602
    9. '	parent' → logprob: -16.0003604888916
    10. '(
' → logprob: -16.3753604888916

Token 65: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.5048530030981055e-06
    2. 'x' → logprob: -14.125001907348633
    3. '[' → logprob: -14.750001907348633
    4. '(x' → logprob: -15.375001907348633
    5. ' x' → logprob: -17.500001907348633
    6. '[parent' → logprob: -17.625001907348633
    7. '```' → logprob: -17.750001907348633
    8. ' [' → logprob: -17.750001907348633
    9. '{x' → logprob: -18.000001907348633
    10. ')x' → logprob: -18.125001907348633

Token 66: '])
' (ID: 5169)
  Prédit: '[x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0007755621336400509
    2. 'x' → logprob: -7.250775337219238
    3. '])' → logprob: -10.875775337219238
    4. ')' → logprob: -11.125775337219238
    5. ' x' → logprob: -11.250775337219238
    6. ')x' → logprob: -11.500775337219238
    7. '(x' → logprob: -12.250775337219238
    8. '[' → logprob: -13.000775337219238
    9. ']' → logprob: -13.750775337219238
    10. '{x' → logprob: -15.375775337219238

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.4208196997642517
    2. 'parent' → logprob: -1.5458197593688965
    3. 'dist' → logprob: -2.2958197593688965
    4. '	parent' → logprob: -4.5458197593688965
    5. '
' → logprob: -5.4208197593688965
    6. ')' → logprob: -5.5458197593688965
    7. '```' → logprob: -5.9208197593688965
    8. ' parent' → logprob: -6.0458197593688965
    9. '	dist' → logprob: -6.7958197593688965
    10. ' dist' → logprob: -6.9208197593688965

Token 68: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -0.0028751306235790253
    2. 'parent' → logprob: -6.002875328063965
    3. '   ' → logprob: -7.877875328063965
    4. ' dist' → logprob: -11.002875328063965
    5. '	dist' → logprob: -13.502875328063965
    6. ' parent' → logprob: -13.877875328063965
    7. '```' → logprob: -14.502875328063965
    8. '	parent' → logprob: -15.877875328063965
    9. '(dist' → logprob: -16.37787437438965
    10. '.dist' → logprob: -16.50287437438965

Token 69: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.004904619418084621
    2. 'x' → logprob: -5.379904747009277
    3. '[' → logprob: -8.879904747009277
    4. '```' → logprob: -9.629904747009277
    5. '(x' → logprob: -10.004904747009277
    6. ' x' → logprob: -11.754904747009277
    7. '[r' → logprob: -12.254904747009277
    8. ')' → logprob: -12.879904747009277
    9. '<|end|>' → logprob: -13.254904747009277
    10. ']' → logprob: -13.254904747009277

Token 70: ']+=' (ID: 123635)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09285640716552734
    2. ']+=' → logprob: -2.4678564071655273
    3. ']+' → logprob: -5.592856407165527
    4. '[' → logprob: -9.217856407165527
    5. ')' → logprob: -9.967856407165527
    6. ']^' → logprob: -10.967856407165527
    7. ' ]' → logprob: -11.967856407165527
    8. '+=' → logprob: -12.717856407165527
    9. ']=' → logprob: -12.842856407165527
    10. '^' → logprob: -12.842856407165527

Token 71: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -4.56102097814437e-05
    2. ' dist' → logprob: -10.000045776367188
    3. '	dist' → logprob: -16.875045776367188
    4. '   ' → logprob: -17.000045776367188
    5. '(dist' → logprob: -17.375045776367188
    6. 'diff' → logprob: -20.250045776367188
    7. 'd' → logprob: -20.750045776367188
    8. '  ' → logprob: -21.125045776367188
    9. '.dist' → logprob: -21.250045776367188
    10. '_dist' → logprob: -21.250045776367188

Token 72: '[parent' (ID: 186852)
  Prédit: '[parent'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[parent' → logprob: -0.003199108177796006
    2. 'parent' → logprob: -5.753199100494385
    3. '(parent' → logprob: -11.253199577331543
    4. '[' → logprob: -12.003199577331543
    5. ' parent' → logprob: -13.628199577331543
    6. '	parent' → logprob: -14.628199577331543
    7. ',parent' → logprob: -15.253199577331543
    8. '.parent' → logprob: -15.503199577331543
    9. '_parent' → logprob: -16.128198623657227
    10. '-parent' → logprob: -16.628198623657227

Token 73: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -0.0017287296941503882
    2. 'x' → logprob: -6.376728534698486
    3. '[' → logprob: -10.876729011535645
    4. ' x' → logprob: -12.376729011535645
    5. ']' → logprob: -13.376729011535645
    6. '(x' → logprob: -14.251729011535645
    7. ')x' → logprob: -15.251729011535645
    8. ',x' → logprob: -15.626729011535645
    9. '][' → logprob: -15.751729011535645
    10. '	x' → logprob: -16.001728057861328

Token 74: ']]
' (ID: 29446)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.41355636715888977
    2. '])' → logprob: -1.1635563373565674
    3. 'x' → logprob: -3.7885563373565674
    4. '[x' → logprob: -6.0385565757751465
    5. '])
' → logprob: -7.1635565757751465
    6. ']
' → logprob: -8.913556098937988
    7. ']]' → logprob: -9.538556098937988
    8. '])
' → logprob: -9.788556098937988
    9. ']])' → logprob: -9.788556098937988
    10. ' ])' → logprob: -10.163556098937988

Token 75: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3065207302570343
    2. 'parent' → logprob: -2.556520700454712
    3. '[parent' → logprob: -2.931520700454712
    4. '
' → logprob: -3.431520700454712
    5. '	parent' → logprob: -3.431520700454712
    6. '(parent' → logprob: -4.306520938873291
    7. '<|end|>' → logprob: -4.431520938873291
    8. '```' → logprob: -5.306520938873291
    9. ',parent' → logprob: -5.306520938873291
    10. ' 
' → logprob: -5.431520938873291

Token 76: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.0015812820056453347
    2. ' parent' → logprob: -6.501581192016602
    3. '   ' → logprob: -9.501581192016602
    4. '	parent' → logprob: -13.501581192016602
    5. '.parent' → logprob: -13.751581192016602
    6. ',parent' → logprob: -14.001581192016602
    7. '[parent' → logprob: -14.626581192016602
    8. '(parent' → logprob: -14.876581192016602
    9. '_parent' → logprob: -16.0015811920166
    10. '```' → logprob: -16.8765811920166

Token 77: '[x' (ID: 17295)
  Prédit: '[x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[x' → logprob: -1.5213274309644476e-05
    2. '[' → logprob: -11.125015258789062
    3. '[user' → logprob: -15.875015258789062
    4. 'x' → logprob: -16.375015258789062
    5. '<|end|>' → logprob: -16.625015258789062
    6. '```' → logprob: -17.750015258789062
    7. '[parent' → logprob: -18.000015258789062
    8. '[
' → logprob: -18.125015258789062
    9. '\[' → logprob: -18.625015258789062
    10. '[ix' → logprob: -18.750015258789062

Token 78: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.30737611651420593
    2. '=' → logprob: -1.8073761463165283
    3. ']' → logprob: -2.3073761463165283
    4. '=x' → logprob: -7.432375907897949
    5. ' =' → logprob: -8.43237590789795
    6. ')=' → logprob: -9.30737590789795
    7. '[x' → logprob: -9.93237590789795
    8. ']==' → logprob: -10.05737590789795
    9. '[' → logprob: -11.80737590789795
    10. ')' → logprob: -12.43237590789795

Token 79: 'r' (ID: 81)
  Prédit: 'r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -1.1472419600977446e-06
    2. ' r' → logprob: -13.750000953674316
    3. '<|end|>' → logprob: -19.125001907348633
    4. '	r' → logprob: -21.250001907348633
    5. '(r' → logprob: -22.000001907348633
    6. '<|end|>' → logprob: -22.625001907348633
    7. ' ' → logprob: -22.750001907348633
    8. 'rstrip' → logprob: -23.000001907348633
    9. '_r' → logprob: -23.625001907348633
    10. '[r' → logprob: -23.875001907348633

Token 80: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013332931324839592
    2. 'return' → logprob: -4.513332843780518
    3. ' return' → logprob: -6.513332843780518
    4. '	return' → logprob: -7.888332843780518
    5. '
' → logprob: -8.138333320617676
    6. ':return' → logprob: -9.513333320617676
    7. '<|end|>' → logprob: -11.263333320617676
    8. '    
' → logprob: -11.513333320617676
    9. '```' → logprob: -11.513333320617676
    10. '  ' → logprob: -11.888333320617676

Token 81: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015414038207381964
    2. 'return' → logprob: -6.501541614532471
    3. ' return' → logprob: -10.251541137695312
    4. '	return' → logprob: -13.001541137695312
    5. '  ' → logprob: -14.626541137695312
    6. ':return' → logprob: -14.876541137695312
    7. '```' → logprob: -15.126541137695312
    8. '<|end|>' → logprob: -15.376541137695312
    9. '   ' → logprob: -15.751541137695312
    10. ' ' → logprob: -17.501541137695312

Token 82: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.043138716369867325
    2. '   ' → logprob: -3.2931387424468994
    3. ' return' → logprob: -5.29313850402832
    4. '	return' → logprob: -10.04313850402832
    5. ':return' → logprob: -11.41813850402832
    6. '  ' → logprob: -13.66813850402832
    7. '```' → logprob: -14.04313850402832
    8. 'eturn' → logprob: -14.16813850402832
    9. ' ' → logprob: -14.54313850402832
    10. ')return' → logprob: -15.79313850402832

Token 83: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.03808819502592087
    2. 'parent' → logprob: -3.288088083267212
    3. ' parent' → logprob: -10.288087844848633
    4. ' r' → logprob: -11.288087844848633
    5. '(parent' → logprob: -15.913087844848633
    6. '[parent' → logprob: -16.913087844848633
    7. '	parent' → logprob: -17.913087844848633
    8. 'x' → logprob: -18.163087844848633
    9. '.parent' → logprob: -18.538087844848633
    10. '_parent' → logprob: -19.413087844848633

Token 84: '

' (ID: 279)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4937129616737366
    2. '<|end|>' → logprob: -0.9937129616737366
    3. 'def' → logprob: -4.993712902069092
    4. '```' → logprob: -5.243712902069092
    5. '<|end|>' → logprob: -6.118712902069092
    6. '\' → logprob: -6.868712902069092
    7. '\n' → logprob: -7.243712902069092
    8. ' ' → logprob: -7.493712902069092
    9. '_' → logprob: -7.993712902069092
    10. '
' → logprob: -7.993712902069092

Token 85: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.3261110782623291
    2. ')' → logprob: -1.326111078262329
    3. '```' → logprob: -4.70111083984375
    4. ' def' → logprob: -7.20111083984375
    5. '
' → logprob: -7.32611083984375
    6. '<|end|>' → logprob: -7.82611083984375
    7. 'x' → logprob: -8.32611083984375
    8. '(' → logprob: -8.45111083984375
    9. '#' → logprob: -8.70111083984375
    10. ' ' → logprob: -8.70111083984375

Token 86: ' union' (ID: 22208)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' → logprob: -0.13992427289485931
    2. 'un' → logprob: -2.1399242877960205
    3. ' unite' → logprob: -5.139924049377441
    4. ' union' → logprob: -5.139924049377441
    5. 'solve' → logprob: -7.639924049377441
    6. 'merge' → logprob: -8.639924049377441
    7. 'root' → logprob: -9.014924049377441
    8. 'unit' → logprob: -9.639924049377441
    9. 'update' → logprob: -10.014924049377441
    10. 'uni' → logprob: -10.014924049377441

Token 87: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.03829323872923851
    2. '(x' → logprob: -3.2882931232452393
    3. '(' → logprob: -8.91329288482666
    4. '(u' → logprob: -9.28829288482666
    5. '(A' → logprob: -11.91329288482666
    6. '(p' → logprob: -11.91329288482666
    7. ' (' → logprob: -12.53829288482666
    8. '(l' → logprob: -12.66329288482666
    9. '(b' → logprob: -13.91329288482666
    10. '(r' → logprob: -14.41329288482666

Token 88: ',b' (ID: 17568)
  Prédit: ',b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',b' → logprob: -0.5767945051193237
    2. ',' → logprob: -0.8267945051193237
    3. ' ,' → logprob: -7.076794624328613
    4. 'b' → logprob: -11.951794624328613
    5. ' b' → logprob: -13.951794624328613
    6. ',a' → logprob: -13.951794624328613
    7. ',int' → logprob: -14.201794624328613
    8. '，' → logprob: -14.951794624328613
    9. '_,' → logprob: -15.701794624328613
    10. ',
' → logprob: -15.701794624328613

Token 89: ',c' (ID: 22261)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11573388427495956
    2. ',c' → logprob: -2.7407338619232178
    3. ',d' → logprob: -3.8657338619232178
    4. ',k' → logprob: -4.865734100341797
    5. ',x' → logprob: -4.990734100341797
    6. ' ,' → logprob: -5.365734100341797
    7. ',v' → logprob: -6.240734100341797
    8. ',t' → logprob: -7.990734100341797
    9. ',val' → logprob: -7.990734100341797
    10. ',r' → logprob: -8.240734100341797

Token 90: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002665788633748889
    2. ')' → logprob: -6.627665996551514
    3. '):
' → logprob: -6.627665996551514
    4. ' ):' → logprob: -11.752665519714355
    5. '):
' → logprob: -12.002665519714355
    6. ')：' → logprob: -14.377665519714355
    7. '):

' → logprob: -15.002665519714355
    8. '   ' → logprob: -15.502665519714355
    9. ':' → logprob: -15.752665519714355
    10. '）：' → logprob: -16.002666473388672

Token 91: '   ' (ID: 271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.05630850791931152
    2. 'ra' → logprob: -3.3063085079193115
    3. 'pa' → logprob: -4.306308746337891
    4. '   ' → logprob: -5.681308746337891
    5. ' a' → logprob: -7.056308746337891
    6. 'root' → logprob: -9.80630874633789
    7. '(pa' → logprob: -9.93130874633789
    8. '```' → logprob: -10.30630874633789
    9. '#a' → logprob: -10.55630874633789
    10. '	a' → logprob: -10.55630874633789

Token 92: ' ra' (ID: 4409)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.1349366158246994
    2. 'pa' → logprob: -2.509936571121216
    3. 'ra' (adapté à ' ra') → logprob: -3.134936571121216
    4. 'root' → logprob: -7.259936809539795
    5. 'parent' → logprob: -8.134936332702637
    6. 'fa' → logprob: -8.759936332702637
    7. 'r' → logprob: -9.134936332702637
    8. 'def' → logprob: -9.759936332702637
    9. ' a' → logprob: -9.884936332702637
    10. '   ' → logprob: -10.884936332702637

Token 93: '=find' (ID: 88179)
  Prédit: '=find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=find' → logprob: -0.0006353547796607018
    2. '=' → logprob: -7.500635147094727
    3. ' =' → logprob: -10.625635147094727
    4. '=a' → logprob: -11.250635147094727
    5. ',' → logprob: -11.375635147094727
    6. '=int' → logprob: -12.125635147094727
    7. '=root' → logprob: -12.125635147094727
    8. '=get' → logprob: -12.375635147094727
    9. 'a' → logprob: -12.500635147094727
    10. 'find' → logprob: -12.750635147094727

Token 94: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.00033415461075492203
    2. '(b' → logprob: -8.750333786010742
    3. 'a' → logprob: -9.000333786010742
    4. '(' → logprob: -10.000333786010742
    5. 'b' → logprob: -12.000333786010742
    6. ')a' → logprob: -15.125333786010742
    7. '(
' → logprob: -15.875333786010742
    8. ' a' → logprob: -16.000333786010742
    9. ' (' → logprob: -16.375333786010742
    10. ')' → logprob: -16.500333786010742

Token 95: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.0008697715820744634
    2. ')' → logprob: -7.2508697509765625
    3. ')
' → logprob: -8.750869750976562
    4. ')b' → logprob: -14.000869750976562
    5. ' )
' → logprob: -14.750869750976562
    6. '),' → logprob: -16.250869750976562
    7. ')

' → logprob: -16.500869750976562
    8. 'b' → logprob: -18.500869750976562
    9. ')`
' → logprob: -18.875869750976562
    10. ');' → logprob: -19.000869750976562

Token 96: '   ' (ID: 271)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -0.0001342903997283429
    2. '   ' → logprob: -9.375134468078613
    3. ' rb' → logprob: -10.000134468078613
    4. 'Rb' → logprob: -13.750134468078613
    5. '_rb' → logprob: -14.000134468078613
    6. 'r' → logprob: -14.375134468078613
    7. '  ' → logprob: -14.625134468078613
    8. '(rb' → logprob: -14.625134468078613
    9. 'ra' → logprob: -15.375134468078613
    10. '
' → logprob: -16.500133514404297

Token 97: ' rb' (ID: 39441)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' (adapté à ' rb') → logprob: -6.511406809295295e-06
    2. ' rb' → logprob: -12.000006675720215
    3. 'Rb' → logprob: -16.0000057220459
    4. '_rb' → logprob: -16.3750057220459
    5. '(rb' → logprob: -18.6250057220459
    6. 'r' → logprob: -19.2500057220459
    7. '   ' → logprob: -19.5000057220459
    8. '  ' → logprob: -20.7500057220459
    9. '.rb' → logprob: -21.5000057220459
    10. 'RB' → logprob: -22.1250057220459

Token 98: '=find' (ID: 88179)
  Prédit: '=find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=find' → logprob: -0.00021807955636177212
    2. '=' → logprob: -8.500218391418457
    3. '(find' → logprob: -11.500218391418457
    4. ' =' → logprob: -13.875218391418457
    5. '=get' → logprob: -14.000218391418457
    6. ')find' → logprob: -14.000218391418457
    7. ')=' → logprob: -14.625218391418457
    8. '=
' → logprob: -15.000218391418457
    9. 'find' → logprob: -15.500218391418457
    10. '=int' → logprob: -15.625218391418457

Token 99: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -6.034592388459714e-06
    2. 'b' → logprob: -12.250005722045898
    3. '(' → logprob: -14.500005722045898
    4. '(rb' → logprob: -14.750005722045898
    5. ')b' → logprob: -16.0000057220459
    6. ' (' → logprob: -16.3750057220459
    7. '<|end|>' → logprob: -17.5000057220459
    8. '[b' → logprob: -17.6250057220459
    9. ')' → logprob: -18.1250057220459
    10. ' b' → logprob: -18.3750057220459

Token 100: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.07891049981117249
    2. ')
' → logprob: -2.5789105892181396
    3. ')
' → logprob: -11.078910827636719
    4. ')

' → logprob: -12.953910827636719
    5. '   ' → logprob: -13.453910827636719
    6. 'def' → logprob: -14.828910827636719
    7. '):
' → logprob: -14.828910827636719
    8. ' )' → logprob: -15.453910827636719
    9. ')return' → logprob: -15.953910827636719
    10. ' )
' → logprob: -16.45391082763672

Token 101: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.33814263343811035
    2. ' if' → logprob: -1.3381426334381104
    3. 'if' → logprob: -3.8381426334381104
    4. '```' → logprob: -6.213142395019531
    5. '<|end|>' → logprob: -7.463142395019531
    6. '
' → logprob: -8.588142395019531
    7. ')' → logprob: -9.338142395019531
    8. ' ' → logprob: -9.963142395019531
    9. '	if' → logprob: -10.713142395019531
    10. '  ' → logprob: -11.088142395019531

Token 102: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004310718737542629
    2. ' if' → logprob: -5.504310607910156
    3. '   ' → logprob: -8.504310607910156
    4. 'parent' → logprob: -11.129310607910156
    5. '```' → logprob: -11.254310607910156
    6. '	if' → logprob: -14.504310607910156
    7. '[parent' → logprob: -15.004310607910156
    8. '    
' → logprob: -15.004310607910156
    9. '
' → logprob: -15.379310607910156
    10. ' parent' → logprob: -16.254310607910156

Token 103: ' ra' (ID: 4409)
  Prédit: 'ra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.011047814972698689
    2. ' ra' → logprob: -4.511047840118408
    3. '_ra' → logprob: -18.63604736328125
    4. '-ra' → logprob: -18.76104736328125
    5. 'raid' → logprob: -19.38604736328125
    6. 'Ra' → logprob: -21.51104736328125
    7. '.ra' → logprob: -21.51104736328125
    8. '   ' → logprob: -21.51104736328125
    9. '(' → logprob: -21.63604736328125
    10. ' ' → logprob: -21.88604736328125

Token 104: '!=' (ID: 11408)
  Prédit: '!='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.47439974546432495
    2. '==' → logprob: -0.974399745464325
    3. ' !=' → logprob: -8.59939956665039
    4. ' ==' → logprob: -9.22439956665039
    5. '=' → logprob: -10.72439956665039
    6. '!==' → logprob: -12.72439956665039
    7. ']!=' → logprob: -13.09939956665039
    8. '==-' → logprob: -13.09939956665039
    9. '()!=' → logprob: -13.34939956665039
    10. ']==' → logprob: -13.47439956665039

Token 105: 'rb' (ID: 21588)
  Prédit: 'rb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -0.0002619318547658622
    2. ' rb' → logprob: -8.250262260437012
    3. '(rb' → logprob: -14.500262260437012
    4. '_rb' → logprob: -16.875261306762695
    5. 'r' → logprob: -17.500261306762695
    6. '.rb' → logprob: -17.875261306762695
    7. ' ' → logprob: -18.375261306762695
    8. '   ' → logprob: -19.250261306762695
    9. 'rd' → logprob: -19.500261306762695
    10. 'rc' → logprob: -19.500261306762695

Token 106: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.11308647692203522
    2. ':
' → logprob: -2.238086462020874
    3. '):
' → logprob: -8.988086700439453
    4. '):' → logprob: -8.988086700439453
    5. ':

' → logprob: -11.988086700439453
    6. ':
' → logprob: -12.863086700439453
    7. '():
' → logprob: -13.863086700439453
    8. '=' → logprob: -14.113086700439453
    9. ')' → logprob: -14.113086700439453
    10. '   ' → logprob: -14.613086700439453

Token 107: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10223040729761124
    2. '```' → logprob: -3.2272303104400635
    3. ' parent' → logprob: -3.8522303104400635
    4. 'parent' → logprob: -3.9772303104400635
    5. '   ' → logprob: -4.227230548858643
    6. '[parent' → logprob: -6.727230548858643
    7. ',parent' → logprob: -7.602230548858643
    8. '	parent' → logprob: -7.852230548858643
    9. '(parent' → logprob: -8.102230072021484
    10. '``' → logprob: -8.477230072021484

Token 108: ' parent' (ID: 5980)
  Prédit: 'parent'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parent' (adapté à ' parent') → logprob: -0.004858480300754309
    2. ' parent' → logprob: -5.504858493804932
    3. '       ' → logprob: -7.254858493804932
    4. '   ' → logprob: -9.879858016967773
    5. '	parent' → logprob: -11.004858016967773
    6. '```' → logprob: -12.379858016967773
    7. '           ' → logprob: -14.754858016967773
    8. ',parent' → logprob: -15.379858016967773
    9. '[parent' → logprob: -15.879858016967773
    10. '.parent' → logprob: -16.004858016967773

Token 109: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.9361264946837764e-07
    2. '```' → logprob: -15.875
    3. ' [' → logprob: -17.0
    4. '[r' → logprob: -17.75
    5. 'rb' → logprob: -18.625
    6. '(rb' → logprob: -19.0
    7. '       ' → logprob: -19.0
    8. '   ' → logprob: -19.0
    9. '[root' → logprob: -19.0
    10. '\[' → logprob: -19.125

Token 110: 'rb' (ID: 21588)
  Prédit: 'rb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -0.0005672106635756791
    2. 'ra' → logprob: -7.500567436218262
    3. ' rb' → logprob: -12.000567436218262
    4. '(rb' → logprob: -12.750567436218262
    5. '[' → logprob: -12.875567436218262
    6. 'r' → logprob: -13.625567436218262
    7. '_rb' → logprob: -13.750567436218262
    8. 'b' → logprob: -16.125566482543945
    9. '.rb' → logprob: -16.375566482543945
    10. '```' → logprob: -16.625566482543945

Token 111: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03977688029408455
    2. ']=' → logprob: -3.2897768020629883
    3. ' =' → logprob: -6.664776802062988
    4. ']' → logprob: -7.914776802062988
    5. '=r' → logprob: -9.664776802062988
    6. ')=' → logprob: -10.539776802062988
    7. ' ]' → logprob: -13.664776802062988
    8. '"]=' → logprob: -14.664776802062988
    9. '=a' → logprob: -14.664776802062988
    10. ')' → logprob: -15.164776802062988

Token 112: 'ra' (ID: 614)
  Prédit: 'ra'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -5.512236498361744e-07
    2. ' ra' → logprob: -14.500000953674316
    3. 'r' → logprob: -18.125
    4. '   ' → logprob: -19.0
    5. 'raid' → logprob: -19.0
    6. '_ra' → logprob: -19.0
    7. '
' → logprob: -19.625
    8. '-ra' → logprob: -19.75
    9. 'rap' → logprob: -20.5
    10. 'va' → logprob: -20.5

Token 113: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2998334765434265
    2. '
' → logprob: -1.6748335361480713
    3. 'dist' → logprob: -2.6748335361480713
    4. ' dist' → logprob: -6.674833297729492
    5. '
' → logprob: -7.799833297729492
    6. '   ' → logprob: -7.799833297729492
    7. '	dist' → logprob: -8.424833297729492
    8. '           ' → logprob: -8.799833297729492
    9. '        
' → logprob: -8.924833297729492
    10. '<|end|>' → logprob: -9.549833297729492

Token 114: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.030643273144960403
    2. 'dist' → logprob: -3.6556432247161865
    3. '
' → logprob: -6.155643463134766
    4. ' dist' → logprob: -6.780643463134766
    5. '   ' → logprob: -7.905643463134766
    6. '<|end|>' → logprob: -8.155643463134766
    7. '	dist' → logprob: -8.780643463134766
    8. '        
' → logprob: -9.155643463134766
    9. ',' → logprob: -9.905643463134766
    10. '           ' → logprob: -10.030643463134766

Token 115: ' dist' (ID: 3601)
  Prédit: 'dist'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' (adapté à ' dist') → logprob: -1.2664456789934775e-06
    2. ' dist' → logprob: -13.625000953674316
    3. '       ' → logprob: -17.750001907348633
    4. '	dist' → logprob: -17.875001907348633
    5. '_dist' → logprob: -20.000001907348633
    6. 'diff' → logprob: -20.125001907348633
    7. '(dist' → logprob: -20.375001907348633
    8. 'Dist' → logprob: -20.750001907348633
    9. '.dist' → logprob: -21.125001907348633
    10. 'distance' → logprob: -21.250001907348633

Token 116: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -2.45848218582978e-06
    2. '[b' → logprob: -13.25000286102295
    3. '(rb' → logprob: -15.50000286102295
    4. 'rb' → logprob: -15.50000286102295
    5. '[r' → logprob: -15.62500286102295
    6. '```' → logprob: -17.750001907348633
    7. ' [' → logprob: -18.125001907348633
    8. '_rb' → logprob: -18.500001907348633
    9. '][' → logprob: -19.125001907348633
    10. 'b' → logprob: -19.125001907348633

Token 117: 'rb' (ID: 21588)
  Prédit: 'rb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -6.051066520740278e-05
    2. 'b' → logprob: -9.750060081481934
    3. ' rb' → logprob: -13.750060081481934
    4. '(rb' → logprob: -13.875060081481934
    5. '_rb' → logprob: -15.750060081481934
    6. 'ra' → logprob: -17.50006103515625
    7. 'Rb' → logprob: -19.12506103515625
    8. '[' → logprob: -19.50006103515625
    9. 'RB' → logprob: -19.50006103515625
    10. '```' → logprob: -20.00006103515625

Token 118: ']=' (ID: 9539)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006630708463490009
    2. '=c' → logprob: -5.381630897521973
    3. ' =' → logprob: -6.631630897521973
    4. ']=' → logprob: -8.381630897521973
    5. ')=' → logprob: -9.006630897521973
    6. '+=' → logprob: -9.131630897521973
    7. '=d' → logprob: -9.631630897521973
    8. '=cut' → logprob: -10.256630897521973
    9. '=data' → logprob: -11.131630897521973
    10. '=C' → logprob: -11.381630897521973

Token 119: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.003691643476486206
    2. 'c' → logprob: -5.878691673278809
    3. ' dist' → logprob: -7.128691673278809
    4. '-dist' → logprob: -10.253691673278809
    5. '	dist' → logprob: -11.003691673278809
    6. '   ' → logprob: -11.253691673278809
    7. '(dist' → logprob: -11.753691673278809
    8. '-' → logprob: -12.503691673278809
    9. 'Dist' → logprob: -13.878691673278809
    10. '.dist' → logprob: -13.878691673278809

Token 120: '[a' (ID: 32035)
  Prédit: '[a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[a' → logprob: -0.0009157438762485981
    2. 'a' → logprob: -7.00091552734375
    3. '[b' → logprob: -12.37591552734375
    4. '[' → logprob: -16.75091552734375
    5. ' a' → logprob: -18.00091552734375
    6. '[c' → logprob: -18.50091552734375
    7. '(a' → logprob: -19.00091552734375
    8. '	a' → logprob: -19.12591552734375
    9. ',a' → logprob: -19.25091552734375
    10. 'b' → logprob: -19.50091552734375

Token 121: ']-' (ID: 27107)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ']' → logprob: -0.9715205430984497
    2. ']+' → logprob: -0.9715205430984497
    3. '+' → logprob: -1.7215205430984497
    4. '[' → logprob: -3.34652042388916
    5. '+c' → logprob: -4.47152042388916
    6. '-' → logprob: -4.97152042388916
    7. ' +' → logprob: -5.47152042388916
    8. ')' → logprob: -6.47152042388916
    9. ')+' → logprob: -6.97152042388916
    10. '[c' → logprob: -6.97152042388916

Token 122: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -0.00014203863975126296
    2. '(dist' → logprob: -9.250142097473145
    3. ' dist' → logprob: -10.000142097473145
    4. '	dist' → logprob: -15.375142097473145
    5. '[' → logprob: -16.375141143798828
    6. 'c' → logprob: -16.500141143798828
    7. '.dist' → logprob: -17.250141143798828
    8. '-dist' → logprob: -17.500141143798828
    9. '
' → logprob: -17.875141143798828
    10. '(' → logprob: -18.500141143798828

Token 123: '[b' (ID: 40800)
  Prédit: '[b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[b' → logprob: -0.005437589716166258
    2. 'b' → logprob: -5.25543737411499
    3. '[' → logprob: -8.505437850952148
    4. '(b' → logprob: -14.255437850952148
    5. ' b' → logprob: -15.755437850952148
    6. '+b' → logprob: -16.38043785095215
    7. ',b' → logprob: -16.50543785095215
    8. ')b' → logprob: -16.50543785095215
    9. '[
' → logprob: -16.63043785095215
    10. '[x' → logprob: -16.75543785095215

Token 124: ']+' (ID: 15344)
  Prédit: '+c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+c' → logprob: -0.3142513930797577
    2. '+' → logprob: -1.31425142288208
    3. ' +' → logprob: -6.93925142288208
    4. '+C' → logprob: -10.939250946044922
    5. ')+' → logprob: -14.564250946044922
    6. '+r' → logprob: -14.689250946044922
    7. ']+' → logprob: -15.064250946044922
    8. '-c' → logprob: -15.314250946044922
    9. '-' → logprob: -15.439250946044922
    10. '+t' → logprob: -16.439250946044922

Token 125: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.127333340875339e-06
    2. ' c' → logprob: -12.500003814697266
    3. '-c' → logprob: -15.875003814697266
    4. ')c' → logprob: -16.250003814697266
    5. '-' → logprob: -16.375003814697266
    6. '	c' → logprob: -18.000003814697266
    7. '+c' → logprob: -18.000003814697266
    8. '<|end|>' → logprob: -18.000003814697266
    9. '[c' → logprob: -18.250003814697266
    10. '%c' → logprob: -18.875003814697266

Token 126: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 127: 'for' (ID: 1938)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 128: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.12695057690143585
    2. '_' → logprob: -2.12695050239563
    3. ' i' → logprob: -11.00195026397705
    4. '_i' → logprob: -12.50195026397705
    5. ' ' → logprob: -14.00195026397705
    6. ' range' → logprob: -14.50195026397705
    7. ' ' → logprob: -14.62695026397705
    8. 'i' → logprob: -15.75195026397705
    9. '_range' → logprob: -16.376951217651367
    10. ' in' → logprob: -16.501951217651367

Token 129: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18014831840991974
    2. 'in' → logprob: -1.8051483631134033
    3. 'range' → logprob: -8.430148124694824
    4. ' ' → logprob: -8.930148124694824
    5. '_' → logprob: -10.805148124694824
    6. '  ' → logprob: -11.680148124694824
    7. ' range' → logprob: -12.430148124694824
    8. '   ' → logprob: -12.680148124694824
    9. ' _' → logprob: -13.180148124694824
    10. ',' → logprob: -13.180148124694824

Token 130: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -1.259079363080673e-05
    2. ' range' → logprob: -11.500012397766113
    3. 'ange' → logprob: -13.625012397766113
    4. '(range' → logprob: -13.875012397766113
    5. 'input' → logprob: -15.500012397766113
    6. 'in' → logprob: -17.37501335144043
    7. 'r' → logprob: -17.62501335144043
    8. 'sys' → logprob: -17.62501335144043
    9. 'rang' → logprob: -17.75001335144043
    10. '	range' → logprob: -17.87501335144043

Token 131: '(Q' (ID: 14437)
  Prédit: '(Q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Q' → logprob: -4.2987729102605954e-05
    2. '(' → logprob: -10.750042915344238
    3. ' (' → logprob: -10.875042915344238
    4. ' Q' → logprob: -13.125042915344238
    5. 'Q' → logprob: -14.875042915344238
    6. '(int' → logprob: -16.125043869018555
    7. '(
' → logprob: -18.375043869018555
    8. '	Q' → logprob: -19.125043869018555
    9. ' ' → logprob: -19.500043869018555
    10. '(q' → logprob: -20.500043869018555

Token 132: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.024932673200964928
    2. ':' → logprob: -4.149932861328125
    3. '):
' → logprob: -5.774932861328125
    4. ',' → logprob: -6.024932861328125
    5. ' ):' → logprob: -6.399932861328125
    6. '():' → logprob: -6.524932861328125
    7. ')' → logprob: -9.524932861328125
    8. ' :' → logprob: -10.024932861328125
    9. '   ' → logprob: -11.149932861328125
    10. ',input' → logprob: -11.524932861328125

Token 133: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.014414401724934578
    2. 'a' → logprob: -5.139414310455322
    3. 't' → logprob: -6.639414310455322
    4. 'tokens' → logprob: -6.639414310455322
    5. ' line' → logprob: -7.014414310455322
    6. 'line' → logprob: -7.139414310455322
    7. 's' → logprob: -7.514414310455322
    8. ' parts' → logprob: -7.514414310455322
    9. '	line' → logprob: -7.764414310455322
    10. ' ' → logprob: -7.764414310455322

Token 134: ' line' (ID: 2543)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.8911507725715637
    2. 'query' → logprob: -1.391150712966919
    3. 'l' → logprob: -2.141150712966919
    4. 'q' → logprob: -2.641150712966919
    5. 'cmd' → logprob: -2.641150712966919
    6. 'command' → logprob: -3.891150712966919
    7. 'line' (adapté à ' line') → logprob: -4.641150951385498
    8. 'com' → logprob: -4.891150951385498
    9. 's' → logprob: -4.891150951385498
    10. 'c' → logprob: -5.016150951385498

Token 135: '=input' (ID: 87911)
  Prédit: '=line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=line' → logprob: -0.16038081049919128
    2. '=' → logprob: -1.9103808403015137
    3. ' =' → logprob: -9.035380363464355
    4. '=list' → logprob: -10.535380363464355
    5. '=input' → logprob: -12.035380363464355
    6. '_=' → logprob: -12.535380363464355
    7. '=_' → logprob: -14.910380363464355
    8. 'line' → logprob: -14.910380363464355
    9. '=sys' → logprob: -15.660380363464355
    10. 's' → logprob: -15.910380363464355

Token 136: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.002476724097505212
    2. '()' → logprob: -6.002476692199707
    3. '()
' → logprob: -14.502476692199707
    4. '(' → logprob: -15.502476692199707
    5. ' ().' → logprob: -16.127477645874023
    6. '()

' → logprob: -16.377477645874023
    7. 'split' → logprob: -17.127477645874023
    8. '=' → logprob: -17.377477645874023
    9. '.split' → logprob: -17.502477645874023
    10. '.rstrip' → logprob: -18.002477645874023

Token 137: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.3992341160774231
    2. 'split' → logprob: -1.1492340564727783
    3. 'rstrip' → logprob: -4.399234294891357
    4. ' strip' → logprob: -16.399234771728516
    5. 'decode' → logprob: -16.649234771728516
    6. ' split' → logprob: -16.774234771728516
    7. 'spl' → logprob: -18.149234771728516
    8. 'rs' → logprob: -18.649234771728516
    9. '(split' → logprob: -19.774234771728516
    10. 'str' → logprob: -19.774234771728516

Token 138: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00030304977553896606
    2. '(' → logprob: -8.500303268432617
    3. '()
' → logprob: -9.375303268432617
    4. '()]' → logprob: -12.000303268432617
    5. '()

' → logprob: -13.500303268432617
    6. '())' → logprob: -13.500303268432617
    7. '(
' → logprob: -13.625303268432617
    8. '()[' → logprob: -14.125303268432617
    9. '()>' → logprob: -14.375303268432617
    10. '()`' → logprob: -14.625303268432617

Token 139: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.20957492291927338
    2. ' if' → logprob: -2.4595749378204346
    3. '[' → logprob: -2.8345749378204346
    4. '<|end|>' → logprob: -3.7095749378204346
    5. ' ' → logprob: -4.7095746994018555
    6. 'if' → logprob: -6.0845746994018555
    7. '    
' → logprob: -6.3345746994018555
    8. ' 
' → logprob: -6.4595746994018555
    9. '  ' → logprob: -6.5845746994018555
    10. '	if' → logprob: -6.7095746994018555

Token 140: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.20723073184490204
    2. 't' → logprob: -1.7072306871414185
    3. 'i' → logprob: -6.207230567932129
    4. 'q' → logprob: -6.332230567932129
    5. ' if' → logprob: -7.707230567932129
    6. 'c' → logprob: -8.207230567932129
    7. 'l' → logprob: -8.457230567932129
    8. 'cmd' → logprob: -8.582230567932129
    9. ' t' → logprob: -8.832230567932129
    10. 'a' → logprob: -9.082230567932129

Token 141: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.029983963817358017
    2. ' line' → logprob: -3.5299839973449707
    3. 'len' → logprob: -8.404983520507812
    4. '[line' → logprob: -12.529983520507812
    5. '(line' → logprob: -13.154983520507812
    6. ' len' → logprob: -13.654983520507812
    7. '	line' → logprob: -13.904983520507812
    8. '#line' → logprob: -13.904983520507812
    9. ' ' → logprob: -14.904983520507812
    10. '   ' → logprob: -15.029983520507812

Token 142: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -6.749814019713085e-06
    2. '==' → logprob: -12.250006675720215
    3. '```' → logprob: -13.500006675720215
    4. 'and' → logprob: -15.750006675720215
    5. ' [' → logprob: -16.25000762939453
    6. '\[' → logprob: -16.37500762939453
    7. '[
' → logprob: -16.62500762939453
    8. ' and' → logprob: -16.87500762939453
    9. '   ' → logprob: -17.25000762939453
    10. ' ==' → logprob: -18.00000762939453

Token 143: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020497082732617855
    2. ' ' → logprob: -8.750205039978027
    3. ''' → logprob: -10.375205039978027
    4. '1' → logprob: -11.875205039978027
    5. ''s' → logprob: -12.625205039978027
    6. '[' → logprob: -13.750205039978027
    7. ']' → logprob: -14.625205039978027
    8. '2' → logprob: -14.937705039978027
    9. '   ' → logprob: -15.000205039978027
    10. '3' → logprob: -15.250205039978027

Token 144: ']=="' (ID: 164578)
  Prédit: '==''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=='' → logprob: -0.5977045893669128
    2. '==' → logprob: -0.8477045893669128
    3. '=="' → logprob: -3.8477046489715576
    4. ' ==' → logprob: -9.097704887390137
    5. '=' → logprob: -10.722704887390137
    6. ']=='' → logprob: -10.972704887390137
    7. '==='' → logprob: -11.597704887390137
    8. '==
' → logprob: -11.597704887390137
    9. '[' → logprob: -11.722704887390137
    10. ']==' → logprob: -11.722704887390137

Token 145: 'IN' (ID: 965)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6074922680854797
    2. '!' → logprob: -1.357492208480835
    3. '?' → logprob: -1.982492208480835
    4. '"' → logprob: -3.357492208480835
    5. '1' → logprob: -4.732492446899414
    6. '!")' → logprob: -5.857492446899414
    7. ''' → logprob: -5.982492446899414
    8. '-' → logprob: -6.357492446899414
    9. '!"' → logprob: -6.357492446899414
    10. 'I' → logprob: -6.482492446899414

Token 146: '":
' (ID: 9213)
  Prédit: 'C'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'C' → logprob: -0.49729081988334656
    2. '"):
' → logprob: -1.872290849685669
    3. '">
' → logprob: -3.372290849685669
    4. '">' → logprob: -3.497290849685669
    5. 'T' → logprob: -3.872290849685669
    6. 'F' → logprob: -4.12229061126709
    7. 'CLUDE' → logprob: -4.24729061126709
    8. 'E' → logprob: -4.49729061126709
    9. 'I' → logprob: -4.62229061126709
    10. '"' → logprob: -4.62229061126709

Token 147: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5000816583633423
    2. ':' → logprob: -1.2500816583633423
    3. ' a' → logprob: -3.8750815391540527
    4. ',a' → logprob: -3.8750815391540527
    5. ' ' → logprob: -4.375081539154053
    6. 'a' → logprob: -4.625081539154053
    7. ',' → logprob: -5.000081539154053
    8. ':
' → logprob: -5.000081539154053
    9. '[a' → logprob: -5.500081539154053
    10. '       ' → logprob: -5.500081539154053

Token 148: ' A' (ID: 355)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.007270221132785082
    2. ' a' → logprob: -5.132270336151123
    3. 'A' (adapté à ' A') → logprob: -7.632270336151123
    4. '_,' → logprob: -8.632269859313965
    5. 'u' → logprob: -8.757269859313965
    6. ',' → logprob: -8.757269859313965
    7. 'x' → logprob: -8.882269859313965
    8. '   ' → logprob: -9.132269859313965
    9. ',a' → logprob: -10.507269859313965
    10. '  ' → logprob: -11.757269859313965

Token 149: ',B' (ID: 19853)
  Prédit: '=int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=int' → logprob: -0.3170563280582428
    2. '=' → logprob: -1.4420562982559204
    3. ',' → logprob: -4.067056179046631
    4. '=line' → logprob: -4.567056179046631
    5. '=B' → logprob: -5.817056179046631
    6. '=A' → logprob: -6.192056179046631
    7. ' =' → logprob: -6.692056179046631
    8. ',B' → logprob: -6.942056179046631
    9. ',int' → logprob: -9.067056655883789
    10. '=input' → logprob: -9.692056655883789

Token 150: ',C' (ID: 26924)
  Prédit: ',C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',C' → logprob: -0.03989613801240921
    2. ',c' → logprob: -3.414896249771118
    3. '=' → logprob: -5.914896011352539
    4. ',int' → logprob: -6.539896011352539
    5. '=int' → logprob: -7.039896011352539
    6. ',' → logprob: -7.039896011352539
    7. '=C' → logprob: -8.914896011352539
    8. ' =' → logprob: -10.289896011352539
    9. ',A' → logprob: -10.289896011352539
    10. ',line' → logprob: -10.539896011352539

Token 151: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0322965532541275
    2. '=int' → logprob: -3.657296657562256
    3. ' =' → logprob: -5.907296657562256
    4. '=line' → logprob: -6.032296657562256
    5. '=A' → logprob: -7.407296657562256
    6. '=list' → logprob: -8.782296180725098
    7. '=C' → logprob: -10.282296180725098
    8. '=[' → logprob: -11.157296180725098
    9. '=a' → logprob: -12.032296180725098
    10. '=
' → logprob: -12.282296180725098

Token 152: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.3892366886138916
    2. 'int' → logprob: -1.1392366886138916
    3. ' map' → logprob: -6.1392364501953125
    4. ' int' → logprob: -8.514236450195312
    5. '   ' → logprob: -12.639236450195312
    6. 'list' → logprob: -13.514236450195312
    7. '[int' → logprob: -15.139236450195312
    8. '(map' → logprob: -15.514236450195312
    9. '  ' → logprob: -15.639236450195312
    10. '	map' → logprob: -15.889236450195312

Token 153: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0002929174806922674
    2. 'int' → logprob: -8.250292778015137
    3. '(str' → logprob: -10.500292778015137
    4. '(lambda' → logprob: -12.625292778015137
    5. '```' → logprob: -14.750292778015137
    6. '(' → logprob: -15.625292778015137
    7. '[int' → logprob: -16.625293731689453
    8. 'str' → logprob: -17.000293731689453
    9. ' int' → logprob: -17.125293731689453
    10. ',int' → logprob: -17.125293731689453

Token 154: ',line' (ID: 171132)
  Prédit: ',line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',line' → logprob: -0.005645882338285446
    2. '(line' → logprob: -5.505645751953125
    3. ',' → logprob: -6.505645751953125
    4. ',(' → logprob: -9.880645751953125
    5. 'line' → logprob: -11.255645751953125
    6. '#line' → logprob: -12.255645751953125
    7. '[line' → logprob: -14.130645751953125
    8. ' line' → logprob: -14.380645751953125
    9. '=line' → logprob: -14.505645751953125
    10. '(' → logprob: -15.755645751953125

Token 155: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -4.127333340875339e-06
    2. ')' → logprob: -13.250003814697266
    3. '(' → logprob: -14.250003814697266
    4. '1' → logprob: -14.375003814697266
    5. '```' → logprob: -14.875003814697266
    6. ' [' → logprob: -15.000003814697266
    7. '[
' → logprob: -16.000003814697266
    8. ')
' → logprob: -16.625003814697266
    9. ')[' → logprob: -16.875003814697266
    10. '   ' → logprob: -17.125003814697266

Token 156: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014181148260831833
    2. '[' → logprob: -4.264181137084961
    3. '```' → logprob: -12.014181137084961
    4. '(' → logprob: -12.514181137084961
    5. '   ' → logprob: -13.139181137084961
    6. ' ' → logprob: -13.514181137084961
    7. '
' → logprob: -14.014181137084961
    8. '2' → logprob: -14.139181137084961
    9. 'slice' → logprob: -14.139181137084961
    10. ' [' → logprob: -14.139181137084961

Token 157: ':])
' (ID: 109592)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0007675791857764125
    2. ',' → logprob: -7.500767707824707
    3. '])' → logprob: -9.750767707824707
    4. ':],' → logprob: -9.875767707824707
    5. ':]' → logprob: -10.375767707824707
    6. ':])
' → logprob: -10.750767707824707
    7. '1' → logprob: -11.750767707824707
    8. ':].' → logprob: -12.125767707824707
    9. '3' → logprob: -12.250767707824707
    10. '(' → logprob: -12.250767707824707

Token 158: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17995993793010712
    2. ')' → logprob: -2.054960012435913
    3. ')
' → logprob: -3.929960012435913
    4. '
' → logprob: -5.554959774017334
    5. '<|end|>' → logprob: -5.554959774017334
    6. 'union' → logprob: -5.679959774017334
    7. '        
' → logprob: -6.304959774017334
    8. '   ' → logprob: -6.929959774017334
    9. ' union' → logprob: -7.054959774017334
    10. ',' → logprob: -7.679959774017334

Token 159: ' union' (ID: 22208)
  Prédit: 'union'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'union' (adapté à ' union') → logprob: -0.0002953015500679612
    2. ' union' → logprob: -8.500295639038086
    3. '
' → logprob: -9.750295639038086
    4. '       ' → logprob: -10.625295639038086
    5. 'if' → logprob: -12.500295639038086
    6. '   ' → logprob: -12.750295639038086
    7. '```' → logprob: -14.125295639038086
    8. '        
' → logprob: -14.375295639038086
    9. '	union' → logprob: -14.500295639038086
    10. '.union' → logprob: -14.750295639038086

Token 160: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -2.7968066206085496e-05
    2. '(' → logprob: -10.500027656555176
    3. '(
' → logprob: -15.250027656555176
    4. '(B' → logprob: -17.375028610229492
    5. ' (' → logprob: -17.500028610229492
    6. 'A' → logprob: -18.000028610229492
    7. '(a' → logprob: -18.125028610229492
    8. '((' → logprob: -19.250028610229492
    9. '<|end|>' → logprob: -19.500028610229492
    10. ')(' → logprob: -19.875028610229492

Token 161: ',B' (ID: 19853)
  Prédit: ',B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.02330871857702732
    2. ',' → logprob: -3.773308753967285
    3. ' ,' → logprob: -10.648308753967285
    4. 'B' → logprob: -10.648308753967285
    5. ',b' → logprob: -11.398308753967285
    6. ',C' → logprob: -13.148308753967285
    7. ',
' → logprob: -15.273308753967285
    8. ',A' → logprob: -15.398308753967285
    9. '   ' → logprob: -15.648308753967285
    10. ' ' → logprob: -15.648308753967285

Token 162: ',C' (ID: 26924)
  Prédit: ',C'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',C' → logprob: -0.011224891059100628
    2. ',' → logprob: -4.511224746704102
    3. ',c' → logprob: -9.386224746704102
    4. 'C' → logprob: -9.636224746704102
    5. ' ,' → logprob: -10.886224746704102
    6. ',
' → logprob: -13.261224746704102
    7. ' C' → logprob: -13.636224746704102
    8. '+C' → logprob: -13.886224746704102
    9. ',int' → logprob: -14.136224746704102
    10. ')' → logprob: -14.136224746704102

Token 163: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.4391956685576588e-05
    2. ')
' → logprob: -10.625024795532227
    3. ')

' → logprob: -17.375024795532227
    4. ' )' → logprob: -17.375024795532227
    5. '   ' → logprob: -18.000024795532227
    6. '))' → logprob: -18.250024795532227
    7. ')
' → logprob: -18.500024795532227
    8. ')return' → logprob: -18.750024795532227
    9. '")' → logprob: -19.250024795532227
    10. ')#' → logprob: -19.250024795532227

Token 164: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.10207099467515945
    2. 'elif' → logprob: -2.3520710468292236
    3. ' elif' → logprob: -6.8520708084106445
    4. 'else' → logprob: -7.3520708084106445
    5. '	elif' → logprob: -8.977070808410645
    6. '<|end|>' → logprob: -10.977070808410645
    7. '```' → logprob: -11.352070808410645
    8. ' else' → logprob: -11.852070808410645
    9. '    
' → logprob: -14.102070808410645
    10. '#elif' → logprob: -15.227070808410645

Token 165: ' else' (ID: 1203)
  Prédit: 'elif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'elif' → logprob: -0.07511436939239502
    2. '   ' → logprob: -2.8251142501831055
    3. ' elif' → logprob: -4.8251142501831055
    4. 'else' (adapté à ' else') → logprob: -5.3251142501831055
    5. '	elif' → logprob: -8.825114250183105
    6. ' else' → logprob: -10.950114250183105
    7. 'if' → logprob: -13.575114250183105
    8. '    
' → logprob: -14.825114250183105
    9. '```' → logprob: -15.075114250183105
    10. ' ' → logprob: -15.700114250183105

Token 166: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002208900870755315
    2. ' if' → logprob: -6.877208709716797
    3. ':
' → logprob: -7.502208709716797
    4. ' :' → logprob: -8.002208709716797
    5. 'if' → logprob: -8.252208709716797
    6. '{' → logprob: -12.002208709716797
    7. '[' → logprob: -12.127208709716797
    8. '   ' → logprob: -12.377208709716797
    9. 'If' → logprob: -13.002208709716797
    10. ',' → logprob: -13.002208709716797

Token 167: '       ' (ID: 309)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' → logprob: -0.3880681097507477
    2. '   ' → logprob: -1.2630680799484253
    3. ' A' → logprob: -3.263068199157715
    4. '       ' → logprob: -8.388068199157715
    5. '	A' → logprob: -9.388068199157715
    6. ',A' → logprob: -9.763068199157715
    7. '    ' → logprob: -10.013068199157715
    8. '    
' → logprob: -10.388068199157715
    9. ' ' → logprob: -10.638068199157715
    10. ',' → logprob: -10.763068199157715

Token 168: ' A' (ID: 355)
  Prédit: 'A'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'A' (adapté à ' A') → logprob: -0.006073721684515476
    2. 'X' → logprob: -5.881073951721191
    3. 'a' → logprob: -6.256073951721191
    4. 'x' → logprob: -7.131073951721191
    5. ' A' → logprob: -8.006073951721191
    6. '   ' → logprob: -8.756073951721191
    7. 'C' → logprob: -10.256073951721191
    8. 'D' → logprob: -12.881073951721191
    9. '       ' → logprob: -13.256073951721191
    10. 'U' → logprob: -13.256073951721191

Token 169: ',B' (ID: 19853)
  Prédit: ',B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',B' → logprob: -0.001599248731508851
    2. ',' → logprob: -6.501599311828613
    3. '=' → logprob: -10.626599311828613
    4. ',b' → logprob: -10.876599311828613
    5. ',C' → logprob: -10.876599311828613
    6. ',int' → logprob: -11.126599311828613
    7. 'B' → logprob: -11.501599311828613
    8. '=B' → logprob: -12.626599311828613
    9. ',Q' → logprob: -13.501599311828613
    10. ',A' → logprob: -13.751599311828613

Token 170: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03387043997645378
    2. '=find' → logprob: -3.4088704586029053
    3. '=A' → logprob: -8.783870697021484
    4. ',' → logprob: -10.783870697021484
    5. ' =' → logprob: -10.908870697021484
    6. '=int' → logprob: -11.283870697021484
    7. ',A' → logprob: -11.908870697021484
    8. 'A' → logprob: -12.533870697021484
    9. '=a' → logprob: -13.533870697021484
    10. '=query' → logprob: -13.658870697021484

Token 171: 'map' (ID: 3726)
  Prédit: 'map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -1.0325924449716695e-05
    2. 'int' → logprob: -11.87501049041748
    3. ' map' → logprob: -12.62501049041748
    4. '(map' → logprob: -18.500009536743164
    5. '   ' → logprob: -18.875009536743164
    6. '	map' → logprob: -19.000009536743164
    7. 'list' → logprob: -19.750009536743164
    8. 'm' → logprob: -21.250009536743164
    9. '.map' → logprob: -21.750009536743164
    10. '  ' → logprob: -21.875009536743164

Token 172: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06205686554312706
    2. 'int' → logprob: -2.81205677986145
    3. ',int' → logprob: -10.437056541442871
    4. ' int' → logprob: -10.562056541442871
    5. '=int' → logprob: -10.562056541442871
    6. '<int' → logprob: -12.562056541442871
    7. '[int' → logprob: -12.562056541442871
    8. ':int' → logprob: -14.312056541442871
    9. ']int' → logprob: -15.062056541442871
    10. '	int' → logprob: -15.562056541442871

Token 173: ',line' (ID: 171132)
  Prédit: ',line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',line' → logprob: -2.3438327843905427e-05
    2. ',' → logprob: -11.00002384185791
    3. '(line' → logprob: -12.00002384185791
    4. ',int' → logprob: -15.12502384185791
    5. 'line' → logprob: -16.000022888183594
    6. '[line' → logprob: -16.125022888183594
    7. '#line' → logprob: -17.250022888183594
    8. ',(' → logprob: -17.625022888183594
    9. '=line' → logprob: -18.375022888183594
    10. ',input' → logprob: -18.625022888183594

Token 174: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -1.981667537620524e-06
    2. '1' → logprob: -13.250001907348633
    3. '(' → logprob: -16.625001907348633
    4. '```' → logprob: -17.375001907348633
    5. 'from' → logprob: -18.500001907348633
    6. '2' → logprob: -19.375001907348633
    7. 's' → logprob: -19.375001907348633
    8. '()[' → logprob: -20.000001907348633
    9. '   ' → logprob: -20.125001907348633
    10. '[-' → logprob: -21.000001907348633

Token 175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.429896944202483e-05
    2. '2' → logprob: -10.500043869018555
    3. '[' → logprob: -11.000043869018555
    4. ' ' → logprob: -17.000043869018555
    5. '   ' → logprob: -17.375043869018555
    6. '```' → logprob: -17.500043869018555
    7. ']' → logprob: -18.250043869018555
    8. '
' → logprob: -18.250043869018555
    9. '3' → logprob: -18.750043869018555
    10. '-' → logprob: -19.000043869018555

Token 176: ':])
' (ID: 109592)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004377022560220212
    2. ':])
' → logprob: -8.37543773651123
    3. ':]' → logprob: -8.87543773651123
    4. ':)' → logprob: -10.75043773651123
    5. '])' → logprob: -10.75043773651123
    6. '2' → logprob: -11.25043773651123
    7. ':],' → logprob: -12.37543773651123
    8. '1' → logprob: -13.37543773651123
    9. ')' → logprob: -13.75043773651123
    10. '()' → logprob: -14.25043773651123

Token 177: '       ' (ID: 309)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10526229441165924
    2. 'r' → logprob: -3.230262279510498
    3. 'ra' → logprob: -3.230262279510498
    4. '   ' → logprob: -4.480262279510498
    5. '```' → logprob: -5.105262279510498
    6. ' if' → logprob: -6.730262279510498
    7. '       ' → logprob: -6.855262279510498
    8. '
' → logprob: -7.980262279510498
    9. '``' → logprob: -8.605262756347656
    10. 'a' → logprob: -9.355262756347656

Token 178: ' ra' (ID: 4409)
  Prédit: 'ra'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' (adapté à ' ra') → logprob: -0.2532232999801636
    2. 'if' → logprob: -1.5032232999801636
    3. 'fa' → logprob: -7.503223419189453
    4. 'r' → logprob: -7.628223419189453
    5. 'find' → logprob: -8.628223419189453
    6. '```' → logprob: -10.378223419189453
    7. 'root' → logprob: -11.003223419189453
    8. 'RA' → logprob: -12.253223419189453
    9. 'ru' → logprob: -12.378223419189453
    10. '   ' → logprob: -12.378223419189453

Token 179: '=find' (ID: 88179)
  Prédit: '=find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=find' → logprob: -6.754368223482743e-05
    2. ',' → logprob: -10.000067710876465
    3. '=' → logprob: -11.125067710876465
    4. 'find' → logprob: -12.250067710876465
    5. ' =' → logprob: -14.375067710876465
    6. '=
' → logprob: -14.500067710876465
    7. '(find' → logprob: -14.750067710876465
    8. ')find' → logprob: -15.000067710876465
    9. 'a' → logprob: -15.750067710876465
    10. '=get' → logprob: -15.875067710876465

Token 180: '(A' (ID: 10706)
  Prédit: '(A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(A' → logprob: -5.0020742492051795e-05
    2. 'A' → logprob: -10.750049591064453
    3. '(a' → logprob: -10.875049591064453
    4. '(' → logprob: -11.625049591064453
    5. '(B' → logprob: -14.750049591064453
    6. '(
' → logprob: -15.625049591064453
    7. '<|end|>' → logprob: -17.250049591064453
    8. 'a' → logprob: -17.500049591064453
    9. ')' → logprob: -18.375049591064453
    10. '(`' → logprob: -19.000049591064453

Token 181: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.12806658446788788
    2. ')' → logprob: -2.1280665397644043
    3. 'rb' → logprob: -7.003066539764404
    4. '),' → logprob: -10.003067016601562
    5. ')
' → logprob: -10.003067016601562
    6. '_rb' → logprob: -10.128067016601562
    7. ',' → logprob: -10.253067016601562
    8. '       ' → logprob: -11.128067016601562
    9. '(rb' → logprob: -11.128067016601562
    10. ');' → logprob: -11.253067016601562

Token 182: '       ' (ID: 309)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -0.0013780910521745682
    2. '   ' → logprob: -6.626378059387207
    3. ' rb' → logprob: -10.501378059387207
    4. '       ' → logprob: -11.501378059387207
    5. '_rb' → logprob: -11.876378059387207
    6. '(rb' → logprob: -12.876378059387207
    7. '.rb' → logprob: -13.126378059387207
    8. 'rc' → logprob: -14.001378059387207
    9. 'rub' → logprob: -14.251378059387207
    10. 'r' → logprob: -14.751378059387207

Token 183: ' rb' (ID: 39441)
  Prédit: 'rb'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' (adapté à ' rb') → logprob: -4.842555426876061e-06
    2. ' rb' → logprob: -12.250004768371582
    3. '_rb' → logprob: -17.2500057220459
    4. '
' → logprob: -19.3750057220459
    5. '   ' → logprob: -19.6250057220459
    6. '(rb' → logprob: -20.1250057220459
    7. 'Rb' → logprob: -20.2500057220459
    8. '.rb' → logprob: -20.3750057220459
    9. 'r' → logprob: -21.3750057220459
    10. ' ' → logprob: -21.3750057220459

Token 184: '=find' (ID: 88179)
  Prédit: '=find'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=find' → logprob: -0.00011999329581158236
    2. '(find' → logprob: -9.375120162963867
    3. '=' → logprob: -10.500120162963867
    4. '=b' → logprob: -12.375120162963867
    5. ')find' → logprob: -13.625120162963867
    6. ')=' → logprob: -13.875120162963867
    7. '=int' → logprob: -15.375120162963867
    8. '=get' → logprob: -15.750120162963867
    9. ' =' → logprob: -15.875120162963867
    10. '=sys' → logprob: -16.000120162963867

Token 185: '(B' (ID: 8409)
  Prédit: '(B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(B' → logprob: -4.811348480870947e-05
    2. '(rb' → logprob: -10.25004768371582
    3. '(' → logprob: -12.25004768371582
    4. 'B' → logprob: -12.50004768371582
    5. '(b' → logprob: -13.00004768371582
    6. 'rb' → logprob: -14.00004768371582
    7. '(A' → logprob: -14.50004768371582
    8. 'find' → logprob: -15.37504768371582
    9. '(R' → logprob: -16.50004768371582
    10. 'b' → logprob: -16.75004768371582

Token 186: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0619756355881691
    2. ')
' → logprob: -2.8119757175445557
    3. '   ' → logprob: -12.561975479125977
    4. ')
' → logprob: -13.311975479125977
    5. 'if' → logprob: -14.186975479125977
    6. ')

' → logprob: -14.561975479125977
    7. ')return' → logprob: -15.061975479125977
    8. ')#' → logprob: -15.311975479125977
    9. '),' → logprob: -15.811975479125977
    10. '))' → logprob: -16.311975479125977

Token 187: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4768437445163727
    2. 'if' → logprob: -1.1018437147140503
    3. ' if' → logprob: -3.22684383392334
    4. '   ' → logprob: -5.60184383392334
    5. '<|end|>' → logprob: -6.47684383392334
    6. 'print' → logprob: -7.10184383392334
    7. '	if' → logprob: -7.22684383392334
    8. '
' → logprob: -8.97684383392334
    9. '```' → logprob: -9.60184383392334
    10. ';if' → logprob: -9.60184383392334

Token 188: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -9.014684110297821e-06
    2. ' if' → logprob: -12.250008583068848
    3. '
' → logprob: -12.875008583068848
    4. 'print' → logprob: -13.500008583068848
    5. '       ' → logprob: -15.125008583068848
    6. '```' → logprob: -16.750009536743164
    7. '        
' → logprob: -17.125009536743164
    8. '   ' → logprob: -18.000009536743164
    9. '	if' → logprob: -18.750009536743164
    10. '``' → logprob: -19.375009536743164

Token 189: ' ra' (ID: 4409)
  Prédit: 'ra'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ra' → logprob: -0.0024758970830589533
    2. ' ra' → logprob: -6.002475738525391
    3. 'raid' → logprob: -15.50247573852539
    4. '_ra' → logprob: -17.12747573852539
    5. 'rb' → logprob: -18.87747573852539
    6. ' ' → logprob: -19.25247573852539
    7. '```' → logprob: -19.50247573852539
    8. '   ' → logprob: -19.50247573852539
    9. 'raq' → logprob: -19.75247573852539
    10. 'r' → logprob: -19.87747573852539

Token 190: '!=' (ID: 11408)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.038159001618623734
    2. '!=' → logprob: -3.288158893585205
    3. '[' → logprob: -9.663159370422363
    4. ' ==' → logprob: -10.163159370422363
    5. ' !=' → logprob: -12.038159370422363
    6. ']==' → logprob: -12.663159370422363
    7. '=' → logprob: -12.913159370422363
    8. '```' → logprob: -13.038159370422363
    9. '==
' → logprob: -14.663159370422363
    10. ')==' → logprob: -15.038159370422363

Token 191: 'rb' (ID: 21588)
  Prédit: 'rb'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rb' → logprob: -1.0445127372804563e-05
    2. ' rb' → logprob: -11.50001049041748
    3. '(rb' → logprob: -15.37501049041748
    4. '_rb' → logprob: -16.875009536743164
    5. ' ' → logprob: -17.875009536743164
    6. '.rb' → logprob: -18.375009536743164
    7. 'r' → logprob: -18.750009536743164
    8. 'Rb' → logprob: -19.250009536743164
    9. '0' → logprob: -19.625009536743164
    10. '```' → logprob: -20.125009536743164

Token 192: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04636605083942413
    2. ' or' → logprob: -3.796365976333618
    3. ':
' → logprob: -4.046366214752197
    4. '           ' → logprob: -5.921366214752197
    5. 'print' → logprob: -6.296366214752197
    6. 'or' → logprob: -8.046365737915039
    7. '       ' → logprob: -8.171365737915039
    8. '=' → logprob: -9.546365737915039
    9. ' print' → logprob: -10.171365737915039
    10. ')' → logprob: -10.671365737915039

Token 193: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.4762532413005829
    2. '           ' → logprob: -0.9762532711029053
    3. '-' → logprob: -6.726253032684326
    4. '```' → logprob: -7.351253032684326
    5. ' print' → logprob: -9.101253509521484
    6. '	       ' → logprob: -9.476253509521484
    7. '       ' → logprob: -10.226253509521484
    8. '	print' → logprob: -10.226253509521484
    9. '   ' → logprob: -10.726253509521484
    10. '``' → logprob: -11.601253509521484

Token 194: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00016539888747502118
    2. '           ' → logprob: -8.875164985656738
    3. '```' → logprob: -10.875164985656738
    4. ' print' → logprob: -13.375164985656738
    5. '	print' → logprob: -13.500164985656738
    6. '-' → logprob: -13.750164985656738
    7. '``' → logprob: -13.875164985656738
    8. '   ' → logprob: -14.000164985656738
    9. '       ' → logprob: -15.625164985656738
    10. 'printf' → logprob: -16.250165939331055

Token 195: '("' (ID: 568)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-' → logprob: -0.10184331983327866
    2. 'Unknown' → logprob: -2.8518433570861816
    3. 'UNKNOWN' → logprob: -3.7268433570861816
    4. '"' → logprob: -5.101843357086182
    5. 'No' → logprob: -6.351843357086182
    6. '?' → logprob: -6.601843357086182
    7. 'NA' → logprob: -6.851843357086182
    8. 'Sorry' → logprob: -7.351843357086182
    9. 'None' → logprob: -7.601843357086182
    10. '"No' → logprob: -7.726843357086182

Token 196: 'WARNING' (ID: 72786)
  Prédit: 'UNKNOWN'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'UNKNOWN' → logprob: -0.1932840496301651
    2. '"' → logprob: -2.443284034729004
    3. '?' → logprob: -3.318284034729004
    4. '?"' → logprob: -3.568284034729004
    5. '"?' → logprob: -5.568284034729004
    6. 'Unknown' → logprob: -5.693284034729004
    7. 'NA' → logprob: -5.693284034729004
    8. 'unknown' → logprob: -5.693284034729004
    9. 'nan' → logprob: -5.818284034729004
    10. '"No' → logprob: -6.443284034729004

Token 197: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '")' → logprob: -0.004804141819477081
    2. '!")' → logprob: -5.7548041343688965
    3. ':' → logprob: -7.3798041343688965
    4. ')' → logprob: -7.8798041343688965
    5. '!' → logprob: -8.254804611206055
    6. '"' → logprob: -9.129804611206055
    7. '-' → logprob: -9.879804611206055
    8. '#' → logprob: -10.379804611206055
    9. ')")' → logprob: -10.379804611206055
    10. '!!!' → logprob: -10.379804611206055

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005035575479269028
    2. 'else' → logprob: -5.380035400390625
    3. ' else' → logprob: -8.005035400390625
    4. '<|end|>' → logprob: -9.880035400390625
    5. 'elif' → logprob: -12.130035400390625
    6. ',' → logprob: -12.130035400390625
    7. ')' → logprob: -12.255035400390625
    8. '	' → logprob: -12.505035400390625
    9. '           ' → logprob: -13.005035400390625
    10. '   ' → logprob: -13.130035400390625

Token 199: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4322938621044159
    2. 'else' (adapté à ' else') → logprob: -1.0572938919067383
    3. ' else' → logprob: -5.807293891906738
    4. 'elif' → logprob: -7.682293891906738
    5. '	else' → logprob: -9.432293891906738
    6. '	' → logprob: -11.182293891906738
    7. '   ' → logprob: -12.057293891906738
    8. '<|end|>' → logprob: -12.307293891906738
    9. '	elif' → logprob: -12.682293891906738
    10. '#else' → logprob: -12.682293891906738

Token 200: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2021651715040207
    2. ':
' → logprob: -1.952165126800537
    3. '           ' → logprob: -3.202165126800537
    4. 'print' → logprob: -9.202165603637695
    5. '       ' → logprob: -9.327165603637695
    6. ' print' → logprob: -10.202165603637695
    7. '<|end|>' → logprob: -10.702165603637695
    8. '               ' → logprob: -10.827165603637695
    9. '	       ' → logprob: -10.827165603637695
    10. '		' → logprob: -10.827165603637695

Token 201: '           ' (ID: 352)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002924110507592559
    2. '       ' → logprob: -6.002923965454102
    3. ' print' → logprob: -7.877923965454102
    4. '```' → logprob: -9.877923965454102
    5. '           ' → logprob: -11.377923965454102
    6. '   ' → logprob: -12.252923965454102
    7. '	print' → logprob: -14.252923965454102
    8. '``' → logprob: -15.002923965454102
    9. '        
' → logprob: -15.002923965454102
    10. '               ' → logprob: -16.2529239654541

Token 202: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -1.9743012671824545e-05
    2. '           ' → logprob: -11.375020027160645
    3. ' print' → logprob: -11.750020027160645
    4. '            
' → logprob: -15.250020027160645
    5. 'abs' → logprob: -17.375019073486328
    6. 'ans' → logprob: -18.625019073486328
    7. '```' → logprob: -19.375019073486328
    8. 'answer' → logprob: -19.625019073486328
    9. '	print' → logprob: -19.750019073486328
    10. 'diff' → logprob: -19.750019073486328

Token 203: '(dist' (ID: 78981)
  Prédit: '(abs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(abs' → logprob: -0.38698050379753113
    2. '(dist' → logprob: -1.1369805335998535
    3. 'abs' → logprob: -10.011980056762695
    4. '(' → logprob: -10.011980056762695
    5. 'dist' → logprob: -11.011980056762695
    6. '((' → logprob: -13.386980056762695
    7. '(int' → logprob: -14.511980056762695
    8. ' abs' → logprob: -15.261980056762695
    9. '(diff' → logprob: -15.261980056762695
    10. '(distance' → logprob: -15.761980056762695

Token 204: '[B' (ID: 95385)
  Prédit: '[B'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[B' → logprob: -2.3319124011322856e-05
    2. 'B' → logprob: -11.375022888183594
    3. '[A' → logprob: -12.000022888183594
    4. '[' → logprob: -12.375022888183594
    5. '[b' → logprob: -14.000022888183594
    6. '```' → logprob: -16.000022888183594
    7. '(B' → logprob: -16.250022888183594
    8. '"B' → logprob: -16.375022888183594
    9. '[
' → logprob: -16.500022888183594
    10. '	B' → logprob: -17.000022888183594

Token 205: ']-' (ID: 27107)
  Prédit: '-dist'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '-dist' → logprob: -0.05023586004972458
    2. '-' → logprob: -3.0502357482910156
    3. ' -' → logprob: -6.425235748291016
    4. '[' → logprob: -11.050235748291016
    5. '-d' → logprob: -12.425235748291016
    6. '-D' → logprob: -12.925235748291016
    7. '-dis' → logprob: -12.925235748291016
    8. '-distance' → logprob: -15.050235748291016
    9. '-div' → logprob: -15.425235748291016
    10. ')-' → logprob: -15.425235748291016

Token 206: 'dist' (ID: 24126)
  Prédit: 'dist'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dist' → logprob: -1.1472419600977446e-06
    2. ' dist' → logprob: -13.750000953674316
    3. '(dist' → logprob: -17.625001907348633
    4. '	dist' → logprob: -19.500001907348633
    5. 'print' → logprob: -21.750001907348633
    6. 'diff' → logprob: -22.000001907348633
    7. '
' → logprob: -22.250001907348633
    8. '.dist' → logprob: -22.375001907348633
    9. 'distance' → logprob: -22.500001907348633
    10. '-dist' → logprob: -23.625001907348633

Token 207: '[A' (ID: 58391)
  Prédit: '[A'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[A' → logprob: -0.00012773419439326972
    2. 'A' → logprob: -9.000127792358398
    3. '[a' → logprob: -13.250127792358398
    4. '[
' → logprob: -13.750127792358398
    5. '[' → logprob: -14.125127792358398
    6. '(A' → logprob: -15.500127792358398
    7. '[B' → logprob: -15.625127792358398
    8. '```' → logprob: -16.3751277923584
    9. ' A' → logprob: -16.8751277923584
    10. '	A' → logprob: -17.0001277923584

Token 208: '])' (ID: 4636)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. '))' → logprob: -13.250003814697266
    3. ' )' → logprob: -13.625003814697266
    4. ')}' → logprob: -14.750003814697266
    5. ')")' → logprob: -15.125003814697266
    6. ')}}' → logprob: -16.000003814697266
    7. '})' → logprob: -16.375003814697266
    8. ')`' → logprob: -16.500003814697266
    9. ')
' → logprob: -16.750003814697266
    10. '")' → logprob: -17.000003814697266


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 206
Tokens correctement prédits (1ère position, stricte): 95
Tokens correctement prédits (1ère position, avec adaptation): 112
Tokens correctement prédits (top 10): 182
Précision stricte (1ère position): 46.12%
Précision adaptée (1ère position): 54.37%
Précision (top 10): 88.35%
================================================================================
