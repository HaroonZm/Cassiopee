================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:10:08
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
n = 0
points = []
import sys
for line in sys.stdin:
    line=line.strip()
    if not line:
        continue
    x_str,y_str = line.split(',')
    x,y = float(x_str), float(y_str)
    points.append((x,y))
n = len(points)

area = 0.0
for i in range(n):
    x1,y1 = points[i]
    x2,y2 = points[(i+1)%n]
    area += x1*y2 - y1*x2
area = abs(area)/2.0
print(f"{area:.6f}")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'n' (ID: 77)
  → Token d'amorce (pas de prédiction)

Token 1: ' =' (ID: 314)
  → Token d'amorce (pas de prédiction)

Token 2: ' ' (ID: 220)
  → Token d'amorce (pas de prédiction)

Token 3: '0' (ID: 15)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.23482748866081238
    2. '5' → logprob: -1.7348275184631348
    3. '0' → logprob: -3.7348275184631348
    4. ' ' → logprob: -5.609827518463135
    5. '1' → logprob: -5.984827518463135
    6. '42' → logprob: -5.984827518463135
    7. '4' → logprob: -8.609827041625977
    8. '100' → logprob: -10.234827041625977
    9. '20' → logprob: -10.859827041625977
    10. 'int' → logprob: -11.109827041625977

Token 4: '
' (ID: 198)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.15774770081043243
    2. '\n' → logprob: -3.032747745513916
    3. '\' → logprob: -3.157747745513916
    4. '```' → logprob: -4.407747745513916
    5. ' ' → logprob: -4.532747745513916
    6. 'n' → logprob: -4.907747745513916
    7. '<|end|>' → logprob: -4.907747745513916
    8. '
' → logprob: -5.282747745513916
    9. '=' → logprob: -6.282747745513916
    10. '#' → logprob: -6.407747745513916

Token 5: 'points' (ID: 14011)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.2711007297039032
    2. '```' → logprob: -2.6461007595062256
    3. '\' → logprob: -2.7711007595062256
    4. '<|end|>' → logprob: -3.2711007595062256
    5. '
' → logprob: -4.5211005210876465
    6. '#' → logprob: -4.5211005210876465
    7. 'n' → logprob: -4.5211005210876465
    8. ' ' → logprob: -4.6461005210876465
    9. '+' → logprob: -5.6461005210876465
    10. '' → logprob: -5.8961005210876465

Token 6: ' =' (ID: 314)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.21444621682167053
    2. '.' → logprob: -2.0894463062286377
    3. '=' → logprob: -3.0894463062286377
    4. ' =' → logprob: -4.839446067810059
    5. '[n' → logprob: -5.214446067810059
    6. '+' → logprob: -5.464446067810059
    7. ''' → logprob: -6.964446067810059
    8. '```' → logprob: -7.089446067810059
    9. '_' → logprob: -7.214446067810059
    10. ']' → logprob: -7.714446067810059

Token 7: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.051021769642829895
    2. '[]' → logprob: -3.0510218143463135
    3. ' ' → logprob: -6.551021575927734
    4. ' [' → logprob: -7.551021575927734
    5. '0' → logprob: -8.051021575927734
    6. '[' → logprob: -8.926021575927734
    7. '[]}' → logprob: -12.051021575927734
    8. ' {}' → logprob: -12.301021575927734
    9. '```' → logprob: -13.051021575927734
    10. ' set' → logprob: -13.801021575927734

Token 8: 'import' (ID: 561)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.7141323089599609
    2. '=' → logprob: -1.589132308959961
    3. '\' → logprob: -2.464132308959961
    4. 'n' → logprob: -2.964132308959961
    5. '+' → logprob: -3.589132308959961
    6. '.' → logprob: -3.714132308959961
    7. ' =' → logprob: -3.714132308959961
    8. '[' → logprob: -3.964132308959961
    9. 'for' → logprob: -3.964132308959961
    10. '`' → logprob: -4.464132308959961

Token 9: ' sys' (ID: 12228)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.10644786804914474
    2. ' random' → logprob: -2.98144793510437
    3. ' math' → logprob: -3.35644793510437
    4. ' numpy' → logprob: -4.856447696685791
    5. ' os' → logprob: -6.106447696685791
    6. '_' → logprob: -6.231447696685791
    7. ' space' → logprob: -6.731447696685791
    8. ' matplotlib' → logprob: -7.731447696685791
    9. ' pandas' → logprob: -7.731447696685791
    10. ' collections' → logprob: -7.981447696685791

Token 10: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8999547958374023
    2. '\n' → logprob: -1.0249547958374023
    3. '\' → logprob: -2.5249547958374023
    4. '' → logprob: -2.6499547958374023
    5. 'for' → logprob: -3.6499547958374023
    6. 'n' → logprob: -3.8999547958374023
    7. 'import' → logprob: -5.024954795837402
    8. '```' → logprob: -5.149954795837402
    9. '.' → logprob: -5.274954795837402
    10. '
' → logprob: -5.649954795837402

Token 11: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.993515133857727
    2. 'n' → logprob: -1.618515133857727
    3. '\n' → logprob: -2.1185150146484375
    4. '.' → logprob: -2.6185150146484375
    5. '=' → logprob: -2.7435150146484375
    6. '```' → logprob: -3.3685150146484375
    7. ',' → logprob: -3.6185150146484375
    8. '
' → logprob: -3.7435150146484375
    9. '\' → logprob: -3.8685150146484375
    10. 'if' → logprob: -4.4935150146484375

Token 12: ' line' (ID: 2543)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.001976811094209552
    2. ' n' → logprob: -7.00197696685791
    3. ' i' → logprob: -7.50197696685791
    4. '  ' → logprob: -7.62697696685791
    5. ' ' → logprob: -11.87697696685791
    6. ' line' → logprob: -12.37697696685791
    7. ' points' → logprob: -12.62697696685791
    8. ' range' → logprob: -14.00197696685791
    9. ' ‌' → logprob: -14.00197696685791
    10. 'n' → logprob: -14.12697696685791

Token 13: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.007897736504673958
    2. 'in' → logprob: -4.882897853851318
    3. ' ' → logprob: -8.75789737701416
    4. ' =' → logprob: -10.00789737701416
    5. '<|end|>' → logprob: -11.00789737701416
    6. ':' → logprob: -11.25789737701416
    7. '[' → logprob: -11.63289737701416
    8. '<|end|>' → logprob: -11.75789737701416
    9. '=' → logprob: -12.00789737701416
    10. '```' → logprob: -12.38289737701416

Token 14: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.2519730031490326
    2. 'sys' → logprob: -1.501973032951355
    3. '=sys' → logprob: -10.501973152160645
    4. '	sys' → logprob: -11.626973152160645
    5. '(sys' → logprob: -12.251973152160645
    6. ' iter' → logprob: -13.251973152160645
    7. 'stdin' → logprob: -15.251973152160645
    8. 'iter' → logprob: -15.376973152160645
    9. '```' → logprob: -16.501972198486328
    10. '_sys' → logprob: -17.001972198486328

Token 15: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.003901246003806591
    2. '.' → logprob: -5.628901481628418
    3. '.readline' → logprob: -9.378901481628418
    4. '.argv' → logprob: -9.378901481628418
    5. '.stdout' → logprob: -9.503901481628418
    6. ' .' → logprob: -10.878901481628418
    7. '.std' → logprob: -11.128901481628418
    8. 'stdin' → logprob: -12.003901481628418
    9. ' stdin' → logprob: -12.128901481628418
    10. '.input' → logprob: -12.503901481628418

Token 16: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001858982432167977
    2. ' :' → logprob: -8.8751859664917
    3. ':
' → logprob: -10.5001859664917
    4. ':**' → logprob: -11.8751859664917
    5. '[:]' → logprob: -12.7501859664917
    6. '():' → logprob: -13.1251859664917
    7. '>:' → logprob: -13.2501859664917
    8. '   ' → logprob: -14.1251859664917
    9. '.' → logprob: -14.7501859664917
    10. '.readline' → logprob: -14.8751859664917

Token 17: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.1105446144938469
    2. ' n' → logprob: -2.3605446815490723
    3. '<|end|>' → logprob: -5.360544681549072
    4. '    
' → logprob: -6.610544681549072
    5. ' points' → logprob: -6.860544681549072
    6. ' ' → logprob: -7.485544681549072
    7. ' if' → logprob: -7.610544681549072
    8. 'n' → logprob: -7.610544681549072
    9. ' tokens' → logprob: -7.735544681549072
    10. '    ' → logprob: -7.860544681549072

Token 18: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3002648651599884
    2. ' n' → logprob: -1.800264835357666
    3. ' points' → logprob: -2.925264835357666
    4. ' if' → logprob: -3.550264835357666
    5. '   ' → logprob: -5.425264835357666
    6. 'n' → logprob: -5.675264835357666
    7. ' lines' → logprob: -6.675264835357666
    8. ' stripped' → logprob: -6.925264835357666
    9. 'line' (adapté à ' line') → logprob: -7.050264835357666
    10. 'points' → logprob: -8.550265312194824

Token 19: '=line' (ID: 192488)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06736605614423752
    2. '.strip' → logprob: -3.067366123199463
    3. ' =' → logprob: -4.442366123199463
    4. '.' → logprob: -5.817366123199463
    5. '.rstrip' → logprob: -5.942366123199463
    6. 's' → logprob: -7.942366123199463
    7. '.split' → logprob: -8.192365646362305
    8. '.=' → logprob: -8.692365646362305
    9. '=line' → logprob: -9.192365646362305
    10. 'split' → logprob: -9.442365646362305

Token 20: '.strip' (ID: 40613)
  Prédit: '.strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.strip' → logprob: -0.03641745448112488
    2. '.' → logprob: -3.5364174842834473
    3. '.rstrip' → logprob: -5.036417484283447
    4. '.split' → logprob: -9.286417007446289
    5. '.replace' → logprob: -10.036417007446289
    6. 'strip' → logprob: -11.911417007446289
    7. ' .' → logprob: -13.036417007446289
    8. 'rstrip' → logprob: -13.911417007446289
    9. '.lower' → logprob: -14.411417007446289
    10. '.trim' → logprob: -15.411417007446289

Token 21: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.011276880279183388
    2. '(' → logprob: -4.511276721954346
    3. '('' → logprob: -9.136277198791504
    4. '().' → logprob: -11.136277198791504
    5. '"' → logprob: -11.386277198791504
    6. ''' → logprob: -11.636277198791504
    7. '()`' → logprob: -11.761277198791504
    8. '(),' → logprob: -11.886277198791504
    9. ' ()' → logprob: -12.011277198791504
    10. '()
' → logprob: -12.136277198791504

Token 22: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19783136248588562
    2. ' if' → logprob: -2.072831392288208
    3. 'if' → logprob: -3.572831392288208
    4. '<|end|>' → logprob: -3.822831392288208
    5. '<|end|>' → logprob: -6.822831153869629
    6. 'n' → logprob: -7.197831153869629
    7. '    ' → logprob: -8.197831153869629
    8. ' ' → logprob: -8.322831153869629
    9. '```' → logprob: -8.322831153869629
    10. '    
' → logprob: -8.697831153869629

Token 23: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.10108691453933716
    2. ' if' → logprob: -2.4760868549346924
    3. 'n' → logprob: -4.8510870933532715
    4. '   ' → logprob: -5.9760870933532715
    5. 'i' → logprob: -7.3510870933532715
    6. '```' → logprob: -7.4760870933532715
    7. 'points' → logprob: -9.226086616516113
    8. ',' → logprob: -9.851086616516113
    9. '<|end|>' → logprob: -10.101086616516113
    10. ')' → logprob: -10.101086616516113

Token 24: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.059614263474941254
    2. ' line' → logprob: -3.0596141815185547
    3. ' n' → logprob: -4.809614181518555
    4. 'not' → logprob: -6.559614181518555
    5. ' ' → logprob: -7.559614181518555
    6. 'line' → logprob: -8.059614181518555
    7. 'n' → logprob: -8.059614181518555
    8. ' len' → logprob: -8.434614181518555
    9. 'len' → logprob: -11.934614181518555
    10. ' ' → logprob: -12.309614181518555

Token 25: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.014167038723826408
    2. 'line' → logprob: -4.264166831970215
    3. ' ' → logprob: -12.764166831970215
    4. ' lines' → logprob: -15.264166831970215
    5. '(line' → logprob: -15.389166831970215
    6. '	line' → logprob: -16.63916778564453
    7. ' len' → logprob: -16.76416778564453
    8. ' n' → logprob: -17.26416778564453
    9. ' points' → logprob: -17.63916778564453
    10. ' ' → logprob: -18.01416778564453

Token 26: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00496393209323287
    2. ' :' → logprob: -5.6299638748168945
    3. ' or' → logprob: -6.7549638748168945
    4. ':
' → logprob: -9.129963874816895
    5. '.startswith' → logprob: -10.629963874816895
    6. '.' → logprob: -10.879963874816895
    7. ':return' → logprob: -11.754963874816895
    8. '):' → logprob: -11.754963874816895
    9. '<|end|>' → logprob: -12.379963874816895
    10. ' continue' → logprob: -12.504963874816895

Token 27: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008000391535460949
    2. ' continue' → logprob: -5.383000373840332
    3. '   ' → logprob: -5.883000373840332
    4. ' break' → logprob: -8.008000373840332
    5. 'continue' → logprob: -8.883000373840332
    6. '    ' → logprob: -10.133000373840332
    7. ' ' → logprob: -10.383000373840332
    8. ' continues' → logprob: -11.883000373840332
    9. '```' → logprob: -12.133000373840332
    10. 'break' → logprob: -12.508000373840332

Token 28: ' continue' (ID: 4901)
  Prédit: ' break'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.003944113850593567
    2. 'break' → logprob: -6.378943920135498
    3. '   ' → logprob: -6.503943920135498
    4. ' continue' → logprob: -7.378943920135498
    5. '    ' → logprob: -10.503944396972656
    6. '       ' → logprob: -10.503944396972656
    7. '	break' → logprob: -10.628944396972656
    8. ' ' → logprob: -11.128944396972656
    9. 'continue' (adapté à ' continue') → logprob: -11.753944396972656
    10. '_break' → logprob: -12.253944396972656

Token 29: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008372962474822998
    2. 'n' → logprob: -5.383372783660889
    3. '    
' → logprob: -6.133372783660889
    4. ' n' → logprob: -7.008372783660889
    5. '<|end|>' → logprob: -7.633372783660889
    6. '<|end|>' → logprob: -10.508373260498047
    7. ',' → logprob: -10.758373260498047
    8. '
' → logprob: -11.133373260498047
    9. ')' → logprob: -11.258373260498047
    10. ' 
' → logprob: -11.758373260498047

Token 30: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001487600733526051
    2. 'n' → logprob: -7.001487731933594
    3. ' n' → logprob: -8.376487731933594
    4. '<|end|>' → logprob: -8.751487731933594
    5. '```' → logprob: -9.501487731933594
    6. '    
' → logprob: -9.501487731933594
    7. '
' → logprob: -11.876487731933594
    8. ',' → logprob: -12.376487731933594
    9. ' if' → logprob: -12.376487731933594
    10. '<|end|>' → logprob: -12.376487731933594

Token 31: ' x' (ID: 1215)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0307255983352661
    2. 'x' (adapté à ' x') → logprob: -1.1557255983352661
    3. ' n' → logprob: -2.1557254791259766
    4. ' parts' → logprob: -2.2807254791259766
    5. ' x' → logprob: -3.2807254791259766
    6. 'parts' → logprob: -3.4057254791259766
    7. 'points' → logprob: -4.655725479125977
    8. '   ' → logprob: -5.030725479125977
    9. 'tokens' → logprob: -5.030725479125977
    10. 'p' → logprob: -5.780725479125977

Token 32: '_str' (ID: 6182)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.02277587167918682
    2. ' =' → logprob: -4.022775650024414
    3. '=' → logprob: -5.522775650024414
    4. ',y' → logprob: -8.147775650024414
    5. ' ,' → logprob: -9.147775650024414
    6. 's' → logprob: -9.522775650024414
    7. ',x' → logprob: -10.397775650024414
    8. ',s' → logprob: -10.647775650024414
    9. ')' → logprob: -10.897775650024414
    10. ' ' → logprob: -11.022775650024414

Token 33: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2700275182723999
    2. '=' → logprob: -2.0200276374816895
    3. ' =' → logprob: -2.2700276374816895
    4. ' ,' → logprob: -7.5200276374816895
    5. ' ' → logprob: -10.145027160644531
    6. ')' → logprob: -10.895027160644531
    7. 's' → logprob: -11.145027160644531
    8. ',x' → logprob: -11.645027160644531
    9. '<|end|>' → logprob: -11.770027160644531
    10. '   ' → logprob: -12.020027160644531

Token 34: '_str' (ID: 6182)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5913095474243164
    2. ' =' → logprob: -1.4663095474243164
    3. '_str' → logprob: -1.7163095474243164
    4. '_' → logprob: -3.4663095474243164
    5. ',' → logprob: -6.091309547424316
    6. '<|end|>' → logprob: -7.091309547424316
    7. '=str' → logprob: -8.216309547424316
    8. '_=' → logprob: -8.341309547424316
    9. '_split' → logprob: -8.466309547424316
    10. '=_' → logprob: -8.466309547424316

Token 35: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.25202858448028564
    2. ' =' → logprob: -1.5020285844802856
    3. '=line' → logprob: -9.502028465270996
    4. ',' → logprob: -10.752028465270996
    5. '=user' → logprob: -14.627028465270996
    6. '=input' → logprob: -14.627028465270996
    7. '=

' → logprob: -15.002028465270996
    8. ' ' → logprob: -15.377028465270996
    9. '=`' → logprob: -15.502028465270996
    10. ')' → logprob: -15.752028465270996

Token 36: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.048590436577796936
    2. 'line' → logprob: -3.0485904216766357
    3. '	line' → logprob: -13.548590660095215
    4. '[line' → logprob: -14.048590660095215
    5. '=line' → logprob: -14.423590660095215
    6. '(line' → logprob: -15.923590660095215
    7. '#line' → logprob: -16.6735897064209
    8. '<|end|>' → logprob: -16.9235897064209
    9. ',line' → logprob: -17.2985897064209
    10. 'token' → logprob: -17.6735897064209

Token 37: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.0021961715538054705
    2. '.' → logprob: -6.127196311950684
    3. ' .' → logprob: -12.627196311950684
    4. '.strip' → logprob: -12.752196311950684
    5. '.Split' → logprob: -13.627196311950684
    6. 'split' → logprob: -13.752196311950684
    7. '.readline' → logprob: -14.002196311950684
    8. '.rstrip' → logprob: -14.377196311950684
    9. '.startswith' → logprob: -14.877196311950684
    10. ' split' → logprob: -15.502196311950684

Token 38: '(',')
' (ID: 161318)
  Prédit: '(''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '('' → logprob: -0.18804718554019928
    2. '(',' → logprob: -1.938047170639038
    3. '(' → logprob: -3.688047170639038
    4. '("("' → logprob: -6.438047409057617
    5. '(','' → logprob: -7.563047409057617
    6. '(",' → logprob: -8.563047409057617
    7. '(',',' → logprob: -10.063047409057617
    8. '()' → logprob: -10.313047409057617
    9. '("' → logprob: -11.813047409057617
    10. '(('' → logprob: -11.938047409057617

Token 39: '   ' (ID: 271)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.7266271114349365
    2. '   ' → logprob: -1.2266271114349365
    3. '<|end|>' → logprob: -1.8516271114349365
    4. ' n' → logprob: -4.101627349853516
    5. 'n' → logprob: -4.601627349853516
    6. '    ' → logprob: -4.976627349853516
    7. ' 
' → logprob: -4.976627349853516
    8. ' )' → logprob: -5.226627349853516
    9. ')' → logprob: -5.351627349853516
    10. ' x' → logprob: -5.351627349853516

Token 40: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.6986802816390991
    2. ' ' → logprob: -1.0736802816390991
    3. 'x' (adapté à ' x') → logprob: -2.0736804008483887
    4. ' n' → logprob: -3.8236804008483887
    5. 'n' → logprob: -4.948680400848389
    6. '<|end|>' → logprob: -6.073680400848389
    7. ' points' → logprob: -6.073680400848389
    8. '    ' → logprob: -7.948680400848389
    9. 'points' → logprob: -8.19867992401123
    10. ' `' → logprob: -8.57367992401123

Token 41: ',y' (ID: 16103)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06196846812963486
    2. ' =' → logprob: -2.9369685649871826
    3. '=int' → logprob: -5.8119683265686035
    4. '_' → logprob: -5.9369683265686035
    5. ',' → logprob: -6.9369683265686035
    6. '_=' → logprob: -8.561968803405762
    7. '_str' → logprob: -9.436968803405762
    8. '=_' → logprob: -10.311968803405762
    9. '=float' → logprob: -10.311968803405762
    10. ')' → logprob: -10.561968803405762

Token 42: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132704198360443
    2. ' =' → logprob: -1.3132704496383667
    3. '=int' → logprob: -11.938270568847656
    4. ',' → logprob: -15.063270568847656
    5. ')' → logprob: -15.063270568847656
    6. '=

' → logprob: -15.313270568847656
    7. '＝' → logprob: -15.688270568847656
    8. '<|end|>' → logprob: -15.688270568847656
    9. ' =)' → logprob: -16.188270568847656
    10. '=
' → logprob: -16.188270568847656

Token 43: ' float' (ID: 4428)
  Prédit: ' int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.48288431763648987
    2. ' float' → logprob: -1.2328842878341675
    3. 'int' → logprob: -2.607884407043457
    4. 'float' → logprob: -4.607884407043457
    5. ' map' → logprob: -4.857884407043457
    6. 'map' → logprob: -9.107884407043457
    7. '[int' → logprob: -13.107884407043457
    8. ' ' → logprob: -13.232884407043457
    9. ' ' → logprob: -14.732884407043457
    10. '=int' → logprob: -14.732884407043457

Token 44: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.2014542669057846
    2. '(' → logprob: -1.7014542818069458
    3. '(y' → logprob: -10.951454162597656
    4. '('' → logprob: -11.076454162597656
    5. '(
' → logprob: -12.576454162597656
    6. '("("' → logprob: -12.951454162597656
    7. '((' → logprob: -14.201454162597656
    8. '(`' → logprob: -14.701454162597656
    9. '(

' → logprob: -14.951454162597656
    10. ' (' → logprob: -15.701454162597656

Token 45: '_str' (ID: 6182)
  Prédit: '_str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_str' → logprob: -0.0018283381359651685
    2. ')' → logprob: -6.876828193664551
    3. '),' → logprob: -7.376828193664551
    4. ',' → logprob: -9.37682819366455
    5. '[' → logprob: -10.37682819366455
    6. 'str' → logprob: -10.75182819366455
    7. 'Str' → logprob: -12.25182819366455
    8. '```' → logprob: -12.25182819366455
    9. '.strip' → logprob: -12.87682819366455
    10. '_STR' → logprob: -13.25182819366455

Token 46: '),' (ID: 936)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4756389856338501
    2. '),' → logprob: -1.10063898563385
    3. ',' → logprob: -3.1006388664245605
    4. ',y' → logprob: -8.350639343261719
    5. ' ),' → logprob: -8.725639343261719
    6. ' )' → logprob: -8.850639343261719
    7. ',)' → logprob: -8.975639343261719
    8. '),(' → logprob: -9.600639343261719
    9. ' ,' → logprob: -9.850639343261719
    10. ')y' → logprob: -11.975639343261719

Token 47: ' float' (ID: 4428)
  Prédit: ' float'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' float' → logprob: -0.1276102513074875
    2. 'float' → logprob: -2.127610206604004
    3. ' y' → logprob: -7.627610206604004
    4. ',float' → logprob: -9.627610206604004
    5. '(float' → logprob: -10.127610206604004
    6. 'y' → logprob: -10.127610206604004
    7. '=float' → logprob: -10.627610206604004
    8. '<float' → logprob: -11.377610206604004
    9. '	float' → logprob: -12.252610206604004
    10. '_float' → logprob: -12.377610206604004

Token 48: '(y' (ID: 14684)
  Prédit: '(y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(y' → logprob: -0.00886994693428278
    2. '(' → logprob: -4.8838701248168945
    3. 'y' → logprob: -6.7588701248168945
    4. ' y' → logprob: -10.008870124816895
    5. ')' → logprob: -10.383870124816895
    6. ' (' → logprob: -11.258870124816895
    7. ''y' → logprob: -12.633870124816895
    8. ')y' → logprob: -12.883870124816895
    9. '('' → logprob: -13.258870124816895
    10. '(x' → logprob: -13.258870124816895

Token 49: '_str' (ID: 6182)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6330488920211792
    2. '_str' → logprob: -0.7580488920211792
    3. '_)' → logprob: -8.633049011230469
    4. ')_' → logprob: -9.258049011230469
    5. 'str' → logprob: -9.383049011230469
    6. ')
' → logprob: -10.633049011230469
    7. '[' → logprob: -11.883049011230469
    8. ' )' → logprob: -12.008049011230469
    9. 'Str' → logprob: -12.133049011230469
    10. '+' → logprob: -12.258049011230469

Token 50: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.167648876318708e-05
    2. ')
' → logprob: -10.125041961669922
    3. ' )' → logprob: -13.750041961669922
    4. '   ' → logprob: -15.875041961669922
    5. ')

' → logprob: -15.875041961669922
    6. '),' → logprob: -16.750041961669922
    7. '<|end|>' → logprob: -16.875041961669922
    8. '))' → logprob: -17.000041961669922
    9. ')
' → logprob: -17.250041961669922
    10. ')`' → logprob: -17.250041961669922

Token 51: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017368825152516365
    2. '
' → logprob: -4.892368793487549
    3. ' points' → logprob: -5.517368793487549
    4. 'points' → logprob: -6.392368793487549
    5. '<|end|>' → logprob: -6.392368793487549
    6. '    
' → logprob: -7.392368793487549
    7. ',' → logprob: -7.892368793487549
    8. '	points' → logprob: -8.017369270324707
    9. ')' → logprob: -8.392369270324707
    10. '(points' → logprob: -8.517369270324707

Token 52: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.40313291549682617
    2. 'points' (adapté à ' points') → logprob: -1.1531329154968262
    3. ' if' → logprob: -4.903132915496826
    4. '   ' → logprob: -5.653132915496826
    5. ' n' → logprob: -5.778132915496826
    6. 'n' → logprob: -6.653132915496826
    7. 'if' → logprob: -7.403132915496826
    8. '	points' → logprob: -9.778133392333984
    9. '    ' → logprob: -10.278133392333984
    10. '(points' → logprob: -10.903133392333984

Token 53: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.16027763485908508
    2. '.' → logprob: -1.9102776050567627
    3. ' .' → logprob: -10.660277366638184
    4. '.push' → logprob: -11.535277366638184
    5. '.app' → logprob: -12.410277366638184
    6. 'append' → logprob: -12.660277366638184
    7. '.extend' → logprob: -12.910277366638184
    8. '.Append' → logprob: -12.910277366638184
    9. '.setdefault' → logprob: -12.910277366638184
    10. '.add' → logprob: -13.535277366638184

Token 54: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.10048766434192657
    2. '(' → logprob: -2.35048770904541
    3. '(x' → logprob: -8.22548770904541
    4. '(points' → logprob: -12.60048770904541
    5. '(
' → logprob: -12.72548770904541
    6. '([' → logprob: -13.10048770904541
    7. '(y' → logprob: -13.22548770904541
    8. ' (' → logprob: -13.85048770904541
    9. '(p' → logprob: -14.97548770904541
    10. '(point' → logprob: -15.47548770904541

Token 55: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -7.941850526549388e-06
    2. ' x' → logprob: -11.750007629394531
    3. '   ' → logprob: -18.87500762939453
    4. ' ' → logprob: -18.87500762939453
    5. '(x' → logprob: -19.37500762939453
    6. ')x' → logprob: -19.75000762939453
    7. '	x' → logprob: -20.62500762939453
    8. ')' → logprob: -20.87500762939453
    9. '  ' → logprob: -21.12500762939453
    10. '"x' → logprob: -21.25000762939453

Token 56: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020574938505887985
    2. ',y' → logprob: -3.8955750465393066
    3. ' ,' → logprob: -10.645574569702148
    4. ',
' → logprob: -12.395574569702148
    5. '<|end|>' → logprob: -13.145574569702148
    6. ')' → logprob: -13.895574569702148
    7. ',n' → logprob: -14.520574569702148
    8. ',)' → logprob: -14.895574569702148
    9. ',x' → logprob: -15.145574569702148
    10. ',user' → logprob: -15.145574569702148

Token 57: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003219422185793519
    2. '))' → logprob: -5.7532196044921875
    3. ')
' → logprob: -10.128219604492188
    4. ')))' → logprob: -13.878219604492188
    5. ' )' → logprob: -15.003219604492188
    6. '))
' → logprob: -15.753219604492188
    7. '),' → logprob: -16.378219604492188
    8. ')

' → logprob: -17.128219604492188
    9. ')`' → logprob: -17.253219604492188
    10. '   ' → logprob: -17.378219604492188

Token 58: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.09999775141477585
    2. '
' → logprob: -2.5999977588653564
    3. '<|end|>' → logprob: -4.849997520446777
    4. '\n' → logprob: -5.474997520446777
    5. 'for' → logprob: -5.974997520446777
    6. '   ' → logprob: -6.599997520446777
    7. 'if' → logprob: -6.724997520446777
    8. '    
' → logprob: -7.224997520446777
    9. '```' → logprob: -7.349997520446777
    10. '#' → logprob: -7.349997520446777

Token 59: ' =' (ID: 314)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.4088471233844757
    2. ' +=' → logprob: -1.4088470935821533
    3. '+=' → logprob: -2.4088470935821533
    4. '++' → logprob: -7.908847332000732
    5. ' +' → logprob: -8.033846855163574
    6. '=' → logprob: -8.533846855163574
    7. ' =' → logprob: -9.033846855163574
    8. '<|end|>' → logprob: -9.158846855163574
    9. ' ' → logprob: -9.408846855163574
    10. '+++' → logprob: -11.158846855163574

Token 60: ' len' (ID: 4631)
  Prédit: ' len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' len' → logprob: -0.02324955351650715
    2. 'len' → logprob: -3.773249626159668
    3. '(len' → logprob: -12.773249626159668
    4. ' n' → logprob: -14.398249626159668
    5. '=len' → logprob: -15.398249626159668
    6. '[len' → logprob: -15.648249626159668
    7. '	len' → logprob: -16.39824867248535
    8. '0' → logprob: -16.64824867248535
    9. ' ' → logprob: -16.64824867248535
    10. ' int' → logprob: -17.39824867248535

Token 61: '(points' (ID: 72131)
  Prédit: '(points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(points' → logprob: -4.644463479053229e-05
    2. '(' → logprob: -10.000046730041504
    3. ' points' → logprob: -14.875046730041504
    4. 'points' → logprob: -14.875046730041504
    5. '(point' → logprob: -15.375046730041504
    6. '(
' → logprob: -17.375045776367188
    7. '(p' → logprob: -17.875045776367188
    8. '(parts' → logprob: -17.875045776367188
    9. '	points' → logprob: -17.875045776367188
    10. ' (' → logprob: -18.375045776367188

Token 62: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.676981345459353e-06
    2. ')
' → logprob: -12.375005722045898
    3. ' )' → logprob: -14.500005722045898
    4. '))' → logprob: -15.250005722045898
    5. ')#' → logprob: -15.500005722045898
    6. '<|end|>' → logprob: -15.875005722045898
    7. ')n' → logprob: -15.875005722045898
    8. ')

' → logprob: -17.1250057220459
    9. '),' → logprob: -17.2500057220459
    10. ')return' → logprob: -17.6250057220459

Token 63: 'area' (ID: 7502)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.83650141954422
    2. 'if' → logprob: -2.086501359939575
    3. 'n' → logprob: -2.461501359939575
    4. 'points' → logprob: -2.461501359939575
    5. 'for' → logprob: -3.086501359939575
    6. 'import' → logprob: -3.336501359939575
    7. '#' → logprob: -3.711501359939575
    8. '' → logprob: -3.961501359939575
    9. '```' → logprob: -4.211501598358154
    10. 'm' → logprob: -4.211501598358154

Token 64: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.0890895128250122
    2. ' =' → logprob: -1.3390895128250122
    3. '(' → logprob: -1.4640895128250122
    4. '=' → logprob: -1.9640895128250122
    5. 's' → logprob: -3.9640893936157227
    6. '<|end|>' → logprob: -5.714089393615723
    7. ' ' → logprob: -6.339089393615723
    8. '_points' → logprob: -7.089089393615723
    9. '_area' → logprob: -7.089089393615723
    10. ')' → logprob: -7.214089393615723

Token 65: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005243718158453703
    2. ' ' → logprob: -5.25524377822876
    3. 'abs' → logprob: -12.630243301391602
    4. 'sum' → logprob: -12.880243301391602
    5. '   ' → logprob: -14.005243301391602
    6. ' abs' → logprob: -14.005243301391602
    7. ' sum' → logprob: -14.130243301391602
    8. '1' → logprob: -14.505243301391602
    9. '(' → logprob: -15.317743301391602
    10. '.' → logprob: -16.3177433013916

Token 66: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.438573680294212e-06
    2. ' ' → logprob: -12.750005722045898
    3. 'abs' → logprob: -13.750005722045898
    4. 'sum' → logprob: -14.625005722045898
    5. '   ' → logprob: -16.1250057220459
    6. 'points' → logprob: -16.1250057220459
    7. '.' → logprob: -16.2500057220459
    8. '1' → logprob: -16.3750057220459
    9. 'n' → logprob: -16.3750057220459
    10. 'polygon' → logprob: -16.6250057220459

Token 67: '.' (ID: 13)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -1.1266177892684937
    2. '<|end|>' → logprob: -1.1266177892684937
    3. 'for' → logprob: -1.1266177892684937
    4. ' ' → logprob: -4.376617908477783
    5. '
' → logprob: -4.626617908477783
    6. '<|end|>' → logprob: -7.251617908477783
    7. '_' → logprob: -7.251617908477783
    8. ',' → logprob: -7.376617908477783
    9. ' 
' → logprob: -7.751617908477783
    10. '=' → logprob: -7.876617908477783

Token 68: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010902655776590109
    2. '6' → logprob: -9.25010871887207
    3. '5' → logprob: -12.75010871887207
    4. '<|end|>' → logprob: -13.12510871887207
    5. '```' → logprob: -13.50010871887207
    6. ' ' → logprob: -13.62510871887207
    7. 'f' → logprob: -13.62510871887207
    8. '2' → logprob: -14.25010871887207
    9. '1' → logprob: -14.25010871887207
    10. '+' → logprob: -14.50010871887207

Token 69: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.6649695634841919
    2. ' for' → logprob: -0.9149695634841919
    3. '
' → logprob: -2.7899694442749023
    4. '<|end|>' → logprob: -3.7899694442749023
    5. ' ' → logprob: -8.039969444274902
    6. 'i' → logprob: -8.539969444274902
    7. ' 
' → logprob: -8.664969444274902
    8. 'n' → logprob: -9.414969444274902
    9. '```' → logprob: -9.539969444274902
    10. '' → logprob: -9.789969444274902

Token 70: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.11187993735074997
    2. 'i' → logprob: -2.361879825592041
    3. ' for' → logprob: -4.486879825592041
    4. 'f' → logprob: -8.3618803024292
    5. ' i' → logprob: -9.8618803024292
    6. '```' → logprob: -11.4868803024292
    7. 'n' → logprob: -11.9868803024292
    8. ',' → logprob: -12.1118803024292
    9. 'j' → logprob: -12.4868803024292
    10. '`' → logprob: -12.4868803024292

Token 71: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.0013871431583538651
    2. 'i' → logprob: -6.626387119293213
    3. ' ' → logprob: -10.001387596130371
    4. ' _' → logprob: -11.376387596130371
    5. '_' → logprob: -12.876387596130371
    6. '_i' → logprob: -14.251387596130371
    7. '	i' → logprob: -14.251387596130371
    8. ' ' → logprob: -15.126387596130371
    9. ' range' → logprob: -15.501387596130371
    10. ' I' → logprob: -17.001386642456055

Token 72: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.006462405435740948
    2. 'in' → logprob: -5.631462574005127
    3. ' ' → logprob: -5.881462574005127
    4. '<|end|>' → logprob: -10.131462097167969
    5. '  ' → logprob: -11.631462097167969
    6. ',' → logprob: -12.381462097167969
    7. '+' → logprob: -13.131462097167969
    8. '	in' → logprob: -13.131462097167969
    9. '```' → logprob: -13.256462097167969
    10. 'range' → logprob: -13.381462097167969

Token 73: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0052392068319022655
    2. 'range' → logprob: -5.255239009857178
    3. ' xrange' → logprob: -13.005239486694336
    4. ' ' → logprob: -13.630239486694336
    5. '	range' → logprob: -13.630239486694336
    6. '(range' → logprob: -14.755239486694336
    7. '```' → logprob: -16.380239486694336
    8. '  ' → logprob: -16.380239486694336
    9. '   ' → logprob: -16.505239486694336
    10. '.range' → logprob: -17.255239486694336

Token 74: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.12713755667209625
    2. '(' → logprob: -2.1271376609802246
    3. ' (' → logprob: -8.752137184143066
    4. '(len' → logprob: -10.002137184143066
    5. '(
' → logprob: -12.627137184143066
    6. ' ' → logprob: -14.377137184143066
    7. ' n' → logprob: -14.627137184143066
    8. 'n' → logprob: -14.752137184143066
    9. '(

' → logprob: -15.002137184143066
    10. '<|end|>' → logprob: -15.502137184143066

Token 75: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.283440500497818
    2. '):' → logprob: -1.7834404706954956
    3. ' )' → logprob: -2.908440589904785
    4. ' ):' → logprob: -4.533440589904785
    5. '-' → logprob: -4.658440589904785
    6. ' -' → logprob: -6.283440589904785
    7. '):
' → logprob: -6.658440589904785
    8. ' ' → logprob: -7.908440589904785
    9. '   ' → logprob: -8.658440589904785
    10. ' ):
' → logprob: -8.908440589904785

Token 76: '   ' (ID: 271)
  Prédit: ' j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' j' → logprob: -0.5627523064613342
    2. '   ' → logprob: -0.9377523064613342
    3. 'j' → logprob: -3.8127522468566895
    4. ' points' → logprob: -4.5627522468566895
    5. '    ' → logprob: -6.3127522468566895
    6. ' next' → logprob: -6.9377522468566895
    7. 'points' → logprob: -7.0627522468566895
    8. ' i' → logprob: -7.0627522468566895
    9. '  ' → logprob: -7.6877522468566895
    10. ' ' → logprob: -7.8127522468566895

Token 77: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.9616071581840515
    2. 'j' → logprob: -1.2116072177886963
    3. ' j' → logprob: -1.7116072177886963
    4. ' x' → logprob: -2.4616072177886963
    5. '   ' → logprob: -2.9616072177886963
    6. 'area' → logprob: -7.086606979370117
    7. ' area' → logprob: -7.586606979370117
    8. '```' → logprob: -8.586606979370117
    9. '    
' → logprob: -9.336606979370117
    10. ' ' → logprob: -9.336606979370117

Token 78: '1' (ID: 16)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05438056215643883
    2. '0' → logprob: -3.3043806552886963
    3. '1' → logprob: -5.054380416870117
    4. ',y' → logprob: -5.804380416870117
    5. '_,' → logprob: -6.054380416870117
    6. ',i' → logprob: -6.679380416870117
    7. ' ,' → logprob: -7.054380416870117
    8. '_' → logprob: -7.679380416870117
    9. '```' → logprob: -7.679380416870117
    10. '_i' → logprob: -8.054380416870117

Token 79: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.04311200976371765
    2. ',y' → logprob: -3.16811203956604
    3. ',x' → logprob: -9.793111801147461
    4. ' ,' → logprob: -9.918111801147461
    5. 'y' → logprob: -12.418111801147461
    6. '<|end|>' → logprob: -13.418111801147461
    7. ' y' → logprob: -14.668111801147461
    8. ',i' → logprob: -15.168111801147461
    9. '_,' → logprob: -15.418111801147461
    10. ',n' → logprob: -15.668111801147461

Token 80: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.27390167117118835
    2. '<|end|>' → logprob: -2.0239017009735107
    3. ' =' → logprob: -2.3989017009735107
    4. '=' → logprob: -4.648901462554932
    5. ',' → logprob: -5.773901462554932
    6. '   ' → logprob: -7.023901462554932
    7. ')' → logprob: -7.023901462554932
    8. '_' → logprob: -7.273901462554932
    9. '0' → logprob: -7.773901462554932
    10. 'i' → logprob: -8.27390193939209

Token 81: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.4854393005371094
    2. '=' → logprob: -0.9854393005371094
    3. ',' → logprob: -4.485439300537109
    4. ' ,' → logprob: -11.86043930053711
    5. ' ' → logprob: -12.23543930053711
    6. '<|end|>' → logprob: -12.36043930053711
    7. ')' → logprob: -12.86043930053711
    8. '=line' → logprob: -13.61043930053711
    9. ',x' → logprob: -13.86043930053711
    10. ' =)' → logprob: -14.23543930053711

Token 82: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.2519335150718689
    2. 'points' → logprob: -1.5019335746765137
    3. '	points' → logprob: -12.751933097839355
    4. '(points' → logprob: -13.501933097839355
    5. '_points' → logprob: -16.751934051513672
    6. '.points' → logprob: -17.001934051513672
    7. 'oints' → logprob: -18.001934051513672
    8. ' pontos' → logprob: -18.751934051513672
    9. '<|end|>' → logprob: -18.751934051513672
    10. ' puntos' → logprob: -19.001934051513672

Token 83: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -15.625
    3. '[
' → logprob: -20.0
    4. '[I' → logprob: -21.0
    5. '[int' → logprob: -21.125
    6. '[(' → logprob: -21.25
    7. ' [' → logprob: -21.375
    8. 'i' → logprob: -21.5
    9. '[n' → logprob: -21.75
    10. '[index' → logprob: -22.25

Token 84: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.2553951144218445
    2. ']
' → logprob: -1.8803951740264893
    3. ')' → logprob: -3.0053951740264893
    4. ')
' → logprob: -3.8803951740264893
    5. ']
' → logprob: -6.88039493560791
    6. '])' → logprob: -7.88039493560791
    7. '<|end|>' → logprob: -8.00539493560791
    8. '])
' → logprob: -8.00539493560791
    9. '   ' → logprob: -8.88039493560791
    10. ')
' → logprob: -9.13039493560791

Token 85: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19451192021369934
    2. '
' → logprob: -2.444511890411377
    3. '<|end|>' → logprob: -3.194511890411377
    4. ' for' → logprob: -3.819511890411377
    5. ' 
' → logprob: -4.944511890411377
    6. 'for' → logprob: -5.444511890411377
    7. ' ' → logprob: -5.569511890411377
    8. ',' → logprob: -5.694511890411377
    9. '    
' → logprob: -5.944511890411377
    10. '[i' → logprob: -6.444511890411377

Token 86: ' x' (ID: 1215)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.11118514090776443
    2. ' x' → logprob: -2.486185073852539
    3. 'x' (adapté à ' x') → logprob: -3.861185073852539
    4. ' i' → logprob: -8.611185073852539
    5. ' ' → logprob: -9.236185073852539
    6. ',' → logprob: -9.236185073852539
    7. '    ' → logprob: -9.236185073852539
    8. '    
' → logprob: -9.611185073852539
    9. ' (' → logprob: -9.736185073852539
    10. 'i' → logprob: -9.861185073852539

Token 87: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01683328114449978
    2. '2' → logprob: -5.016833305358887
    3. '+' → logprob: -6.016833305358887
    4. '_,' → logprob: -6.016833305358887
    5. ',' → logprob: -6.516833305358887
    6. '0' → logprob: -6.766833305358887
    7. '_' → logprob: -6.891833305358887
    8. '```' → logprob: -7.516833305358887
    9. '_next' → logprob: -8.266833305358887
    10. '_prev' → logprob: -8.516833305358887

Token 88: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16554725170135498
    2. ',y' → logprob: -1.915547251701355
    3. ' ,' → logprob: -5.4155473709106445
    4. ',x' → logprob: -7.9155473709106445
    5. ',n' → logprob: -8.790547370910645
    6. ' =' → logprob: -9.415547370910645
    7. '<|end|>' → logprob: -9.790547370910645
    8. ',j' → logprob: -10.415547370910645
    9. ',user' → logprob: -10.665547370910645
    10. ',i' → logprob: -10.790547370910645

Token 89: '2' (ID: 17)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11864718794822693
    2. '1' → logprob: -3.9936470985412598
    3. ',next' → logprob: -3.9936470985412598
    4. ',i' → logprob: -4.49364709854126
    5. ',j' → logprob: -4.61864709854126
    6. 'points' → logprob: -4.99364709854126
    7. '```' → logprob: -5.11864709854126
    8. '<|end|>' → logprob: -5.11864709854126
    9. '_points' → logprob: -5.36864709854126
    10. '[' → logprob: -5.49364709854126

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.20141403377056122
    2. '=' → logprob: -1.7014139890670776
    3. ' ' → logprob: -15.576414108276367
    4. '<|end|>' → logprob: -15.826414108276367
    5. ')' → logprob: -15.951414108276367
    6. ',' → logprob: -15.951414108276367
    7. ' =
' → logprob: -16.701414108276367
    8. '   ' → logprob: -16.951414108276367
    9. ' =)' → logprob: -16.951414108276367
    10. '  ' → logprob: -17.951414108276367

Token 91: ' points' (ID: 5571)
  Prédit: ' points'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' points' → logprob: -0.04859646037220955
    2. 'points' → logprob: -3.0485963821411133
    3. '(points' → logprob: -12.173596382141113
    4. '	points' → logprob: -13.173596382141113
    5. '.points' → logprob: -14.548596382141113
    6. '<|end|>' → logprob: -14.798596382141113
    7. ' ' → logprob: -15.173596382141113
    8. '_points' → logprob: -15.423596382141113
    9. 'oints' → logprob: -15.923596382141113
    10. ' pontos' → logprob: -15.923596382141113

Token 92: '[(' (ID: 20542)
  Prédit: '[('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.0033681849017739296
    2. '[' → logprob: -6.253368377685547
    3. '[i' → logprob: -7.128368377685547
    4. '[
' → logprob: -7.878368377685547
    5. '[((' → logprob: -9.128368377685547
    6. '[next' → logprob: -9.253368377685547
    7. ' [(' → logprob: -11.253368377685547
    8. '(points' → logprob: -11.878368377685547
    9. '((' → logprob: -12.378368377685547
    10. ')' → logprob: -12.378368377685547

Token 93: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.00594372907653451
    2. '(i' → logprob: -5.130943775177002
    3. ' i' → logprob: -11.505943298339844
    4. '{i' → logprob: -13.380943298339844
    5. ' (' → logprob: -14.005943298339844
    6. ')i' → logprob: -14.380943298339844
    7. '```' → logprob: -14.505943298339844
    8. '_i' → logprob: -14.630943298339844
    9. '(' → logprob: -14.880943298339844
    10. '`' → logprob: -15.630943298339844

Token 94: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.03366333618760109
    2. ' +' → logprob: -3.408663272857666
    3. '1' → logprob: -11.158663749694824
    4. ' ' → logprob: -13.533663749694824
    5. '+
' → logprob: -13.783663749694824
    6. '+i' → logprob: -15.033663749694824
    7. ' +
' → logprob: -15.533663749694824
    8. ' plus' → logprob: -15.908663749694824
    9. '+j' → logprob: -16.283662796020508
    10. '0' → logprob: -16.408662796020508

Token 95: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.25000286102295
    3. ')' → logprob: -14.25000286102295
    4. '```' → logprob: -15.50000286102295
    5. '   ' → logprob: -16.625001907348633
    6. '`' → logprob: -17.375001907348633
    7. '+' → logprob: -18.125001907348633
    8. '
' → logprob: -18.562501907348633
    9. '``' → logprob: -18.562501907348633
    10. '     ' → logprob: -19.375001907348633

Token 96: ')%' (ID: 57656)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.012921606190502644
    2. ')%' → logprob: -4.3879218101501465
    3. ')]' → logprob: -8.637921333312988
    4. '%' → logprob: -9.387921333312988
    5. ' )' → logprob: -9.387921333312988
    6. ' %' → logprob: -9.887921333312988
    7. ']' → logprob: -12.012921333312988
    8. ']%' → logprob: -12.762921333312988
    9. '%n' → logprob: -13.012921333312988
    10. ')])' → logprob: -13.762921333312988

Token 97: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.0206720617134124e-05
    2. ' n' → logprob: -11.50001049041748
    3. '	n' → logprob: -18.375009536743164
    4. '`' → logprob: -20.750009536743164
    5. '(n' → logprob: -21.000009536743164
    6. '```' → logprob: -21.000009536743164
    7. ')n' → logprob: -21.375009536743164
    8. '\' → logprob: -21.625009536743164
    9. '
' → logprob: -22.000009536743164
    10. '%n' → logprob: -22.500009536743164

Token 98: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.14805786311626434
    2. ')' → logprob: -2.0230579376220703
    3. ')]' → logprob: -5.52305793762207
    4. '])' → logprob: -6.64805793762207
    5. '   ' → logprob: -10.89805793762207
    6. ' ]' → logprob: -11.02305793762207
    7. ')])' → logprob: -11.39805793762207
    8. ']
' → logprob: -11.52305793762207
    9. ' )' → logprob: -12.14805793762207
    10. ')
' → logprob: -12.64805793762207

Token 99: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.08014710992574692
    2. '
' → logprob: -2.9551470279693604
    3. '    
' → logprob: -4.4551472663879395
    4. ' 
' → logprob: -5.0801472663879395
    5. ' area' → logprob: -5.4551472663879395
    6. '   
' → logprob: -6.7051472663879395
    7. 'area' → logprob: -6.9551472663879395
    8. '  
' → logprob: -7.7051472663879395
    9. '<|end|>' → logprob: -10.205146789550781
    10. '  ' → logprob: -10.455146789550781

Token 100: ' area' (ID: 3624)
  Prédit: 'area'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' (adapté à ' area') → logprob: -0.5885876417160034
    2. ' area' → logprob: -1.4635876417160034
    3. '   ' → logprob: -1.5885876417160034
    4. ' 
' → logprob: -5.713587760925293
    5. '    
' → logprob: -5.963587760925293
    6. ' ' → logprob: -6.713587760925293
    7. 'space' → logprob: -7.338587760925293
    8. 'a' → logprob: -7.463587760925293
    9. '    ' → logprob: -8.713587760925293
    10. ' space' → logprob: -8.963587760925293

Token 101: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.0013027378590777516
    2. '+=' → logprob: -6.751302719116211
    3. '+' → logprob: -10.001302719116211
    4. ' ' → logprob: -10.126302719116211
    5. '	' → logprob: -11.126302719116211
    6. '+=(' → logprob: -12.001302719116211
    7. ' ' → logprob: -12.126302719116211
    8. ' +' → logprob: -12.501302719116211
    9. '+='' → logprob: -12.626302719116211
    10. 'space' → logprob: -13.001302719116211

Token 102: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.36210328340530396
    2. '(x' → logprob: -1.2371032238006592
    3. ' x' → logprob: -4.487103462219238
    4. ' (' → logprob: -6.112103462219238
    5. '(' → logprob: -9.487103462219238
    6. '   ' → logprob: -11.362103462219238
    7. ' ' → logprob: -12.112103462219238
    8. '	x' → logprob: -13.362103462219238
    9. '  ' → logprob: -14.737103462219238
    10. '((' → logprob: -14.987103462219238

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.04893774166703224
    2. '_' → logprob: -3.1739377975463867
    3. '*' → logprob: -5.423937797546387
    4. '*_' → logprob: -6.798937797546387
    5. '_*' → logprob: -8.673937797546387
    6. '```' → logprob: -9.298937797546387
    7. '[' → logprob: -10.423937797546387
    8. '`' → logprob: -10.673937797546387
    9. '*y' → logprob: -11.298937797546387
    10. '_[' → logprob: -11.298937797546387

Token 104: '*y' (ID: 83575)
  Prédit: '*'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '*' → logprob: -0.05570998415350914
    2. ' *' → logprob: -2.9307100772857666
    3. '*y' → logprob: -7.1807098388671875
    4. '**' → logprob: -10.055709838867188
    5. '*x' → logprob: -12.430709838867188
    6. ' ' → logprob: -12.930709838867188
    7. ' ' → logprob: -13.055709838867188
    8. '*object' → logprob: -13.305709838867188
    9. ''*' → logprob: -13.555709838867188
    10. ' **' → logprob: -13.555709838867188

Token 105: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.0
    3. '<|end|>' → logprob: -17.5
    4. '-' → logprob: -17.875
    5. '+' → logprob: -17.875
    6. '۲' → logprob: -18.0
    7. '```' → logprob: -18.5
    8. '1' → logprob: -18.625
    9. '২' → logprob: -19.0
    10. '₂' → logprob: -19.25

Token 106: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.07890234887599945
    2. '-' → logprob: -2.578902244567871
    3. ' ' → logprob: -12.078902244567871
    4. ' -
' → logprob: -12.078902244567871
    5. '-area' → logprob: -15.703902244567871
    6. '-
' → logprob: -15.828902244567871
    7. ' -

' → logprob: -15.828902244567871
    8. '    ' → logprob: -16.328903198242188
    9. ' ' → logprob: -16.453903198242188
    10. ''' → logprob: -16.453903198242188

Token 107: ' y' (ID: 342)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.7762647867202759
    2. 'y' → logprob: -1.0262647867202759
    3. ' y' → logprob: -1.7762647867202759
    4. ' x' → logprob: -4.401264667510986
    5. '<|end|>' → logprob: -13.276265144348145
    6. '	y' → logprob: -13.401265144348145
    7. ' ' → logprob: -14.526265144348145
    8. '	x' → logprob: -15.151265144348145
    9. '1' → logprob: -15.651265144348145
    10. '```' → logprob: -16.151264190673828

Token 108: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.512236498361744e-07
    2. '_' → logprob: -15.000000953674316
    3. '<|end|>' → logprob: -16.25
    4. ' ' → logprob: -17.0
    5. '```' → logprob: -17.125
    6. 'x' → logprob: -17.625
    7. '2' → logprob: -17.75
    8. '１' → logprob: -18.6875
    9. '*' → logprob: -18.8125
    10. '১' → logprob: -18.9375

Token 109: '*x' (ID: 46987)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00026407750556245446
    2. ' x' → logprob: -8.250264167785645
    3. '*x' → logprob: -13.125264167785645
    4. ''x' → logprob: -14.875264167785645
    5. '<|end|>' → logprob: -15.875264167785645
    6. '"x' → logprob: -16.125263214111328
    7. '	x' → logprob: -16.125263214111328
    8. ')x' → logprob: -17.000263214111328
    9. '```' → logprob: -18.250263214111328
    10. '   ' → logprob: -18.500263214111328

Token 110: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6327401399612427
    2. '1' → logprob: -0.7577401399612427
    3. '```' → logprob: -10.132740020751953
    4. '[i' → logprob: -10.257740020751953
    5. '0' → logprob: -10.632740020751953
    6. 'i' → logprob: -11.007740020751953
    7. '+' → logprob: -11.132740020751953
    8. '[' → logprob: -12.882740020751953
    9. '(i' → logprob: -13.382740020751953
    10. ']' → logprob: -13.882740020751953

Token 111: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0830475464463234
    2. ' 
' → logprob: -3.45804762840271
    3. 'area' → logprob: -3.95804762840271
    4. '  
' → logprob: -4.083047389984131
    5. ' area' → logprob: -5.708047389984131
    6. '*' → logprob: -6.208047389984131
    7. ' ' → logprob: -6.458047389984131
    8. '/' → logprob: -7.333047389984131
    9. '' → logprob: -7.583047389984131
    10. '    
' → logprob: -7.708047389984131

Token 112: 'area' (ID: 7502)
  Prédit: 'area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -0.11401877552270889
    2. '
' → logprob: -2.364018678665161
    3. ' 
' → logprob: -5.23901891708374
    4. ' area' → logprob: -5.48901891708374
    5. '  
' → logprob: -5.86401891708374
    6. ' ' → logprob: -8.239018440246582
    7. '    
' → logprob: -8.239018440246582
    8. 'a' → logprob: -8.864018440246582
    9. '
' → logprob: -9.239018440246582
    10. ')
' → logprob: -9.489018440246582

Token 113: ' =' (ID: 314)
  Prédit: '/'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '/' → logprob: -0.012435123324394226
    2. '=' → logprob: -4.887434959411621
    3. '<|end|>' → logprob: -6.137434959411621
    4. ' /' → logprob: -7.137434959411621
    5. '/=' → logprob: -7.887434959411621
    6. '
' → logprob: -8.387434959411621
    7. '```' → logprob: -8.512434959411621
    8. '0' → logprob: -8.637434959411621
    9. '/
' → logprob: -9.012434959411621
    10. 's' → logprob: -9.387434959411621

Token 114: ' abs' (ID: 8443)
  Prédit: ' abs'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' abs' → logprob: -0.23193112015724182
    2. 'abs' → logprob: -1.6069310903549194
    3. ' area' → logprob: -5.356931209564209
    4. '0' → logprob: -6.981931209564209
    5. 'area' → logprob: -7.231931209564209
    6. ' ' → logprob: -8.98193073272705
    7. '(abs' → logprob: -12.98193073272705
    8. '.abs' → logprob: -14.48193073272705
    9. '   ' → logprob: -14.73193073272705
    10. ' ' → logprob: -15.23193073272705

Token 115: '(area' (ID: 115185)
  Prédit: '(area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(area' → logprob: -0.0024792237672954798
    2. '(' → logprob: -6.002479076385498
    3. 'area' → logprob: -12.627479553222656
    4. '(
' → logprob: -16.002479553222656
    5. '(space' → logprob: -17.252479553222656
    6. '(angle' → logprob: -17.252479553222656
    7. '-area' → logprob: -17.377479553222656
    8. '_area' → logprob: -17.627479553222656
    9. '(

' → logprob: -17.877479553222656
    10. ' (' → logprob: -18.002479553222656

Token 116: ')/' (ID: 11876)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007044489029794931
    2. ')/' → logprob: -7.375704288482666
    3. '/' → logprob: -9.750704765319824
    4. ' )' → logprob: -11.000704765319824
    5. ' /' → logprob: -13.250704765319824
    6. '）' → logprob: -15.250704765319824
    7. '`)' → logprob: -15.750704765319824
    8. '")' → logprob: -15.875704765319824
    9. '0' → logprob: -16.000703811645508
    10. ' ' → logprob: -16.125703811645508

Token 117: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.512236498361744e-07
    2. ' ' → logprob: -14.625000953674316
    3. '   ' → logprob: -20.375
    4. '
' → logprob: -20.5
    5. '２' → logprob: -20.75
    6. '```' → logprob: -21.375
    7. '(' → logprob: -21.625
    8. '.' → logprob: -21.875
    9. '

' → logprob: -22.75
    10. '۲' → logprob: -22.75

Token 118: '.' (ID: 13)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.1315559595823288
    2. '
' → logprob: -2.1315560340881348
    3. '<|end|>' → logprob: -5.631556034088135
    4. ' print' → logprob: -7.881556034088135
    5. '\n' → logprob: -8.756555557250977
    6. '#' → logprob: -8.756555557250977
    7. 'n' → logprob: -9.256555557250977
    8. '```' → logprob: -9.631555557250977
    9. '.' → logprob: -10.131555557250977
    10. '*' → logprob: -10.631555557250977

Token 119: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.75
    3. '6' → logprob: -17.0
    4. '```' → logprob: -18.75
    5. '5' → logprob: -19.625
    6. '1' → logprob: -19.875
    7. '<|end|>' → logprob: -20.625
    8. 'float' → logprob: -20.75
    9. '2' → logprob: -21.25
    10. 'area' → logprob: -22.125

Token 120: '
' (ID: 198)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.002911265939474106
    2. '
' → logprob: -6.12791109085083
    3. '<|end|>' → logprob: -7.75291109085083
    4. ' print' → logprob: -8.877911567687988
    5. '```' → logprob: -10.252911567687988
    6. '#' → logprob: -10.252911567687988
    7. 'return' → logprob: -11.002911567687988
    8. 'n' → logprob: -11.002911567687988
    9. 'for' → logprob: -11.502911567687988
    10. '\n' → logprob: -11.752911567687988

Token 121: 'print' (ID: 1598)
  Prédit: 'print'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.040865425020456314
    2. 'p' → logprob: -3.790865421295166
    3. '
' → logprob: -4.415865421295166
    4. '\n' → logprob: -6.165865421295166
    5. '#' → logprob: -6.665865421295166
    6. '```' → logprob: -7.915865421295166
    7. 'pr' → logprob: -8.165865898132324
    8. 'r' → logprob: -8.290865898132324
    9. '\' → logprob: -8.790865898132324
    10. '' → logprob: -9.040865898132324

Token 122: '(f' (ID: 1526)
  Prédit: '(area'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(area' → logprob: -0.048595886677503586
    2. '(' → logprob: -3.048595905303955
    3. '(`' → logprob: -13.298595428466797
    4. '('' → logprob: -13.298595428466797
    5. '(f' → logprob: -13.423595428466797
    6. '("("' → logprob: -13.673595428466797
    7. '(round' → logprob: -13.798595428466797
    8. 'area' → logprob: -14.673595428466797
    9. ' (' → logprob: -15.048595428466797
    10. '((' → logprob: -15.298595428466797

Token 123: '"{' (ID: 27510)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.11633723974227905
    2. '(area' → logprob: -2.366337299346924
    3. '("' → logprob: -5.366337299346924
    4. '"' → logprob: -5.491337299346924
    5. '("("' → logprob: -6.116337299346924
    6. '('' → logprob: -6.241337299346924
    7. '("{' → logprob: -6.866337299346924
    8. '({' → logprob: -7.491337299346924
    9. 'area' → logprob: -7.991337299346924
    10. '(f' → logprob: -8.491336822509766

Token 124: 'area' (ID: 7502)
  Prédit: 'area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'area' → logprob: -2.5107177862082608e-05
    2. ' area' → logprob: -10.625024795532227
    3. 'round' → logprob: -15.500024795532227
    4. ' ' → logprob: -16.125024795532227
    5. ''' → logprob: -16.250024795532227
    6. 'are' → logprob: -16.625024795532227
    7. '   ' → logprob: -16.750024795532227
    8. '  ' → logprob: -17.125024795532227
    9. '-area' → logprob: -17.375024795532227
    10. '(area' → logprob: -17.375024795532227

Token 125: ':.' (ID: 27474)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -0.018139179795980453
    2. ':.' → logprob: -4.393139362335205
    3. ':' → logprob: -5.393139362335205
    4. '}' → logprob: -7.268139362335205
    5. ' }' → logprob: -8.018138885498047
    6. '")' → logprob: -10.518138885498047
    7. '}")
' → logprob: -12.643138885498047
    8. '}"' → logprob: -13.018138885498047
    9. ':,' → logprob: -14.018138885498047
    10. ')' → logprob: -14.018138885498047

Token 126: '6' (ID: 21)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.30020880699157715
    2. '6' → logprob: -1.4252088069915771
    3. '3' → logprob: -4.300209045410156
    4. '1' → logprob: -5.800209045410156
    5. '4' → logprob: -6.425209045410156
    6. '5' → logprob: -7.925209045410156
    7. '8' → logprob: -8.675209045410156
    8. '7' → logprob: -9.550209045410156
    9. '0' → logprob: -10.800209045410156
    10. '9' → logprob: -10.925209045410156

Token 127: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: -4.320199877838604e-07
    2. 'g' → logprob: -15.0
    3. '}' → logprob: -17.25
    4. 'e' → logprob: -19.25
    5. '
' → logprob: -19.5
    6. ' f' → logprob: -20.0
    7. '```' → logprob: -20.25
    8. ''f' → logprob: -20.25
    9. '}")' → logprob: -20.5
    10. '	f' → logprob: -20.625

Token 128: '}")' (ID: 122365)
  Prédit: '}")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -3.309382373117842e-05
    2. '}")
' → logprob: -11.000033378601074
    3. '")' → logprob: -12.250033378601074
    4. ')")' → logprob: -12.375033378601074
    5. '}"' → logprob: -12.750033378601074
    6. '}")

' → logprob: -13.000033378601074
    7. ' }' → logprob: -13.875033378601074
    8. '}' → logprob: -14.375033378601074
    9. '}")
' → logprob: -14.750033378601074
    10. '})' → logprob: -16.375032424926758


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 126
Tokens correctement prédits (1ère position, stricte): 64
Tokens correctement prédits (1ère position, avec adaptation): 67
Tokens correctement prédits (top 10): 113
Précision stricte (1ère position): 50.79%
Précision adaptée (1ère position): 53.17%
Précision (top 10): 89.68%
================================================================================
