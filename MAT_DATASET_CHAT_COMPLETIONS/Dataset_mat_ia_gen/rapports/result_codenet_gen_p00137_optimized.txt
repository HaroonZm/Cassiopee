================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:11:14
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
d=int(input())
for i in range(1,d+1):
    s=int(input())
    print(f"Case {i}:")
    for _ in range(10):
        sq=str(s*s).zfill(8)
        s=int(sq[2:6])
        print(s)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'd' (ID: 67)
  → Token d'amorce (pas de prédiction)

Token 1: '=int' (ID: 37431)
  → Token d'amorce (pas de prédiction)

Token 2: '(input' (ID: 10054)
  → Token d'amorce (pas de prédiction)

Token 3: '())
' (ID: 4574)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.27813294529914856
    2. ')' → logprob: -1.7781329154968262
    3. '()' → logprob: -2.778132915496826
    4. '())' → logprob: -4.528132915496826
    5. '(
' → logprob: -8.778133392333984
    6. '))' → logprob: -9.153133392333984
    7. '```' → logprob: -9.403133392333984
    8. '")' → logprob: -9.653133392333984
    9. '(()' → logprob: -9.903133392333984
    10. '[' → logprob: -9.903133392333984

Token 4: 'for' (ID: 1938)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.3127801716327667
    2. '*' → logprob: -2.4377801418304443
    3. 'if' → logprob: -2.9377801418304443
    4. '%' → logprob: -3.0627801418304443
    5. 'i' → logprob: -3.9377801418304443
    6. '\n' → logprob: -4.062780380249023
    7. '#' → logprob: -4.187780380249023
    8. ')' → logprob: -5.312780380249023
    9. 'for' → logprob: -5.812780380249023
    10. ''' → logprob: -5.937780380249023

Token 5: ' i' (ID: 575)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.013551933690905571
    2. '  ' → logprob: -5.013551712036133
    3. ' i' → logprob: -5.013551712036133
    4. 'i' → logprob: -9.263551712036133
    5. ' d' → logprob: -10.763551712036133
    6. '_' → logprob: -10.763551712036133
    7. ' ‌' → logprob: -11.513551712036133
    8. ' ' → logprob: -12.013551712036133
    9. ' )' → logprob: -12.763551712036133
    10. ')' → logprob: -13.763551712036133

Token 6: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.23481608927249908
    2. 'n' → logprob: -2.234816074371338
    3. 'in' → logprob: -2.984816074371338
    4. ' n' → logprob: -3.234816074371338
    5. ' ' → logprob: -4.484816074371338
    6. '  ' → logprob: -8.359816551208496
    7. ')' → logprob: -8.484816551208496
    8. '(n' → logprob: -9.109816551208496
    9. ' i' → logprob: -9.359816551208496
    10. ' range' → logprob: -9.609816551208496

Token 7: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.029763683676719666
    2. 'range' → logprob: -3.529763698577881
    3. ' ' → logprob: -11.279763221740723
    4. '	range' → logprob: -15.029763221740723
    5. '(range' → logprob: -16.90476417541504
    6. ' d' → logprob: -17.15476417541504
    7. 'Range' → logprob: -17.77976417541504
    8. ' in' → logprob: -17.90476417541504
    9. 'd' → logprob: -17.90476417541504
    10. '_range' → logprob: -18.02976417541504

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00019889144459739327
    2. '(d' → logprob: -8.750199317932129
    3. '(i' → logprob: -10.875199317932129
    4. ' (' → logprob: -11.875199317932129
    5. '(n' → logprob: -12.000199317932129
    6. '(len' → logprob: -12.250199317932129
    7. '((' → logprob: -13.875199317932129
    8. '(`' → logprob: -14.500199317932129
    9. '(
' → logprob: -14.875199317932129
    10. '(s' → logprob: -15.000199317932129

Token 9: '1' (ID: 16)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.000284696085145697
    2. '1' → logprob: -8.250285148620605
    3. ' d' → logprob: -11.125285148620605
    4. '(' → logprob: -12.375285148620605
    5. '(d' → logprob: -12.625285148620605
    6. '0' → logprob: -15.000285148620605
    7. ')d' → logprob: -15.125285148620605
    8. ')' → logprob: -15.625285148620605
    9. '2' → logprob: -15.625285148620605
    10. ' ' → logprob: -16.00028419494629

Token 10: ',d' (ID: 26159)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0037062542978674173
    2. ',d' → logprob: -6.253706455230713
    3. ' ,' → logprob: -7.003706455230713
    4. '+' → logprob: -7.628706455230713
    5. '+,' → logprob: -9.003705978393555
    6. '(' → logprob: -9.128705978393555
    7. ',n' → logprob: -10.253705978393555
    8. ',+' → logprob: -10.253705978393555
    9. ',(' → logprob: -10.503705978393555
    10. '(d' → logprob: -11.253705978393555

Token 11: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0002222516923211515
    2. ' +' → logprob: -8.500222206115723
    3. '):' → logprob: -11.375222206115723
    4. '+:' → logprob: -12.750222206115723
    5. '+,' → logprob: -13.500222206115723
    6. ',' → logprob: -13.875222206115723
    7. '+i' → logprob: -14.750222206115723
    8. '+d' → logprob: -15.125222206115723
    9. ')' → logprob: -15.250222206115723
    10. '+n' → logprob: -15.250222206115723

Token 12: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7848862373502925e-05
    2. ' ' → logprob: -10.500027656555176
    3. '2' → logprob: -16.125028610229492
    4. '   ' → logprob: -17.500028610229492
    5. '```' → logprob: -17.875028610229492
    6. 'd' → logprob: -18.125028610229492
    7. '  ' → logprob: -18.375028610229492
    8. ')' → logprob: -18.562528610229492
    9. '11' → logprob: -19.375028610229492
    10. 'i' → logprob: -19.500028610229492

Token 13: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0034081125631928444
    2. ')' → logprob: -6.378407955169678
    3. ':' → logprob: -6.378407955169678
    4. '):
' → logprob: -12.753408432006836
    5. ':)' → logprob: -13.003408432006836
    6. ' ):' → logprob: -14.753408432006836
    7. '():' → logprob: -15.253408432006836
    8. ':**' → logprob: -15.628408432006836
    9. '}:' → logprob: -16.003408432006836
    10. ',' → logprob: -16.628408432006836

Token 14: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7388284802436829
    2. ':' → logprob: -1.238828420639038
    3. ' ' → logprob: -2.238828420639038
    4. '    ' → logprob: -2.363828420639038
    5. '```' → logprob: -4.738828659057617
    6. ' :' → logprob: -5.613828659057617
    7. '  ' → logprob: -5.738828659057617
    8. '\' → logprob: -6.238828659057617
    9. '     
' → logprob: -6.363828659057617
    10. '    
' → logprob: -6.363828659057617

Token 15: ' s' (ID: 265)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.6548298597335815
    2. ' print' → logprob: -1.0298298597335815
    3. ' ' → logprob: -2.529829978942871
    4. '    ' → logprob: -3.779829978942871
    5. '   ' → logprob: -4.029829978942871
    6. ' if' → logprob: -7.654829978942871
    7. '```' → logprob: -7.654829978942871
    8. ' for' → logprob: -7.904829978942871
    9. ' ```' → logprob: -8.404829978942871
    10. 'if' → logprob: -8.404829978942871

Token 16: '=int' (ID: 37431)
  Prédit: 'tr'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'tr' → logprob: -0.6156631112098694
    2. '=' → logprob: -1.6156630516052246
    3. 't' → logprob: -1.8656630516052246
    4. ' ' → logprob: -3.6156630516052246
    5. ' =' → logprob: -3.8656630516052246
    6. '   ' → logprob: -4.365663051605225
    7. 'r' → logprob: -4.365663051605225
    8. ' +=' → logprob: -5.740663051605225
    9. 'trip' → logprob: -5.865663051605225
    10. '[' → logprob: -5.865663051605225

Token 17: '(input' (ID: 10054)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.042333584278821945
    2. '(input' → logprob: -3.2923336029052734
    3. '(s' → logprob: -5.792333602905273
    4. '()' → logprob: -7.792333602905273
    5. '(
' → logprob: -8.417333602905273
    6. 's' → logprob: -8.542333602905273
    7. '('' → logprob: -8.917333602905273
    8. ' (' → logprob: -9.417333602905273
    9. 'input' → logprob: -10.542333602905273
    10. ')' → logprob: -10.542333602905273

Token 18: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.25735124945640564
    2. '()' → logprob: -2.0073511600494385
    3. ')' → logprob: -2.3823511600494385
    4. '()))' → logprob: -9.63235092163086
    5. '(' → logprob: -9.75735092163086
    6. '))' → logprob: -9.88235092163086
    7. ' ())' → logprob: -10.25735092163086
    8. '())
' → logprob: -12.13235092163086
    9. '()
' → logprob: -13.13235092163086
    10. ' )' → logprob: -13.25735092163086

Token 19: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16358904540538788
    2. ')' → logprob: -2.5385890007019043
    3. ':' → logprob: -3.4135890007019043
    4. '<|end|>' → logprob: -4.413589000701904
    5. ' ' → logprob: -5.413589000701904
    6. ' if' → logprob: -5.538589000701904
    7. 'if' → logprob: -5.663589000701904
    8. '    ' → logprob: -5.663589000701904
    9. '    
' → logprob: -6.538589000701904
    10. '  ' → logprob: -7.038589000701904

Token 20: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2129088193178177
    2. 'if' → logprob: -2.4629087448120117
    3. ' if' → logprob: -3.7129087448120117
    4. ')' → logprob: -3.9629087448120117
    5. 'for' → logprob: -4.337908744812012
    6. 'print' (adapté à ' print') → logprob: -4.712908744812012
    7. '    ' → logprob: -4.712908744812012
    8. 'sum' → logprob: -4.837908744812012
    9. ' ' → logprob: -5.712908744812012
    10. 'n' → logprob: -5.837908744812012

Token 21: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.3903624415397644
    2. '(s' → logprob: -1.1403625011444092
    3. '(i' → logprob: -6.14036226272583
    4. '('' → logprob: -7.14036226272583
    5. '()' → logprob: -8.640362739562988
    6. 's' → logprob: -8.640362739562988
    7. '((' → logprob: -9.640362739562988
    8. '("("' → logprob: -10.515362739562988
    9. '("' → logprob: -10.765362739562988
    10. '(sum' → logprob: -11.015362739562988

Token 22: '"' (ID: 1)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6088684797286987
    2. '{' → logprob: -1.8588684797286987
    3. '"{' → logprob: -1.9838684797286987
    4. ''{' → logprob: -2.7338685989379883
    5. '"' → logprob: -2.9838685989379883
    6. '({' → logprob: -3.7338685989379883
    7. '{s' → logprob: -5.108868598937988
    8. ')' → logprob: -5.483868598937988
    9. ''' → logprob: -5.608868598937988
    10. 's' → logprob: -5.983868598937988

Token 23: 'Case' (ID: 6187)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.47133326530456543
    2. 'Day' → logprob: -2.5963332653045654
    3. 'Case' → logprob: -2.7213332653045654
    4. '{i' → logprob: -2.8463332653045654
    5. '{s' → logprob: -3.7213332653045654
    6. 'The' → logprob: -3.7213332653045654
    7. 'Hello' → logprob: -3.9713332653045654
    8. '"' → logprob: -4.0963335037231445
    9. 's' → logprob: -4.0963335037231445
    10. 'Value' → logprob: -4.9713335037231445

Token 24: ' {' (ID: 354)
  Prédit: ' #{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' #{' → logprob: -0.5477425456047058
    2. ' {' → logprob: -0.9227425456047058
    3. ' #' → logprob: -4.1727423667907715
    4. ' ' → logprob: -5.0477423667907715
    5. '{i' → logprob: -6.4227423667907715
    6. '{' → logprob: -7.5477423667907715
    7. '#{' → logprob: -8.67274284362793
    8. ' i' → logprob: -9.67274284362793
    9. '  ' → logprob: -10.54774284362793
    10. ' #%' → logprob: -10.67274284362793

Token 25: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.014598394744098186
    2. '{i' → logprob: -4.264598369598389
    3. ' i' → logprob: -7.764598369598389
    4. '{' → logprob: -11.639598846435547
    5. ' {' → logprob: -13.764598846435547
    6. ' ' → logprob: -15.514598846435547
    7. '	i' → logprob: -16.639598846435547
    8. '}' → logprob: -17.389598846435547
    9. '   ' → logprob: -17.639598846435547
    10. '{}' → logprob: -18.139598846435547

Token 26: '}:' (ID: 33132)
  Prédit: '}:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}:' → logprob: -5.455048449221067e-05
    2. '},' → logprob: -10.000054359436035
    3. '}' → logprob: -12.375054359436035
    4. '}:{' → logprob: -12.625054359436035
    5. ' }:' → logprob: -14.375054359436035
    6. '}",' → logprob: -14.750054359436035
    7. '}")' → logprob: -15.000054359436035
    8. ':' → logprob: -16.00005531311035
    9. '}}' → logprob: -17.12505531311035
    10. '},"' → logprob: -17.25005531311035

Token 27: '")
' (ID: 1896)
  Prédit: '{s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{s' → logprob: -0.43417420983314514
    2. '{' → logprob: -1.6841741800308228
    3. ' {' → logprob: -1.8091741800308228
    4. 's' → logprob: -6.559174060821533
    5. ' s' → logprob: -7.059174060821533
    6. '{i' → logprob: -7.934174060821533
    7. '")' → logprob: -9.934174537658691
    8. ' ")' → logprob: -10.559174537658691
    9. '{}' → logprob: -10.809174537658691
    10. ' ' → logprob: -11.184174537658691

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008153409697115421
    2. 'print' → logprob: -6.008153438568115
    3. '<|end|>' → logprob: -6.133153438568115
    4. '    ' → logprob: -6.258153438568115
    5. ' print' → logprob: -7.133153438568115
    6. ')' → logprob: -9.258152961730957
    7. '   ' → logprob: -9.383152961730957
    8. '    
' → logprob: -9.633152961730957
    9. 's' → logprob: -9.633152961730957
    10. ' {' → logprob: -9.883152961730957

Token 29: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0456736758351326
    2. 'print' → logprob: -3.7956736087799072
    3. '    ' → logprob: -4.920673847198486
    4. ' print' → logprob: -5.420673847198486
    5. ' for' → logprob: -5.670673847198486
    6. '<|end|>' → logprob: -6.045673847198486
    7. ' if' → logprob: -6.295673847198486
    8. 'for' (adapté à ' for') → logprob: -7.295673847198486
    9. ' ' → logprob: -7.795673847198486
    10. 'if' → logprob: -8.045673370361328

Token 30: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.07639893889427185
    2. ' j' → logprob: -3.2013988494873047
    3. 'range' → logprob: -3.9513988494873047
    4. ' ' → logprob: -4.576398849487305
    5. ' _' → logprob: -6.326398849487305
    6. ' in' → logprob: -7.326398849487305
    7. ' s' → logprob: -8.326398849487305
    8. '_' → logprob: -8.451398849487305
    9. 'j' → logprob: -9.076398849487305
    10. ' r' → logprob: -9.576398849487305

Token 31: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005288542713969946
    2. 'in' → logprob: -5.255288600921631
    3. ' ' → logprob: -10.130288124084473
    4. ' i' → logprob: -12.630288124084473
    5. 'range' → logprob: -12.880288124084473
    6. ' _' → logprob: -13.505288124084473
    7. ' range' → logprob: -13.630288124084473
    8. 's' → logprob: -13.630288124084473
    9. '_' → logprob: -13.755288124084473
    10. ',' → logprob: -14.380288124084473

Token 32: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.1426943689584732
    2. ' range' → logprob: -2.0176944732666016
    3. 's' → logprob: -11.892694473266602
    4. '	range' → logprob: -12.517694473266602
    5. '(range' → logprob: -13.017694473266602
    6. ' ' → logprob: -13.017694473266602
    7. '[' → logprob: -14.392694473266602
    8. '(' → logprob: -14.642694473266602
    9. 'rang' → logprob: -14.767694473266602
    10. '  ' → logprob: -15.017694473266602

Token 33: '(' (ID: 7)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.04051152244210243
    2. '(' → logprob: -3.2905116081237793
    3. ' (' → logprob: -6.040511608123779
    4. ' s' → logprob: -10.040511131286621
    5. 's' → logprob: -10.415511131286621
    6. ' ' → logprob: -12.540511131286621
    7. '(range' → logprob: -12.665511131286621
    8. '1' → logprob: -13.790511131286621
    9. '((' → logprob: -14.290511131286621
    10. ')' → logprob: -14.540511131286621

Token 34: '10' (ID: 702)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.006888241972774267
    2. ' s' → logprob: -5.131888389587402
    3. '1' → logprob: -7.131888389587402
    4. '   ' → logprob: -9.756888389587402
    5. '0' → logprob: -10.006888389587402
    6. '2' → logprob: -10.506888389587402
    7. ' ' → logprob: -12.006888389587402
    8. '3' → logprob: -12.256888389587402
    9. '5' → logprob: -13.131888389587402
    10. '	s' → logprob: -13.131888389587402

Token 35: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '):' → logprob: -0.9051194190979004
    2. ' s' → logprob: -1.6551194190979004
    3. ')' → logprob: -2.1551194190979004
    4. ' )' → logprob: -2.6551194190979004
    5. ' ):' → logprob: -2.9051194190979004
    6. '   ' → logprob: -3.0301194190979004
    7. ' ,' → logprob: -3.4051194190979004
    8. '    ' → logprob: -4.1551194190979
    9. 's' → logprob: -4.1551194190979
    10. ',' → logprob: -4.4051194190979

Token 36: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03981194272637367
    2. ' print' → logprob: -4.414812088012695
    3. '    ' → logprob: -4.539812088012695
    4. '   ' → logprob: -4.789812088012695
    5. '<|end|>' → logprob: -5.789812088012695
    6. 'print' → logprob: -6.289812088012695
    7. ' ' → logprob: -7.414812088012695
    8. ' s' → logprob: -7.664812088012695
    9. '	   ' → logprob: -8.539812088012695
    10. '        
' → logprob: -8.664812088012695

Token 37: ' sq' (ID: 24743)
  Prédit: ' print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' print' → logprob: -0.39292895793914795
    2. '       ' → logprob: -1.892928957939148
    3. 'print' → logprob: -2.2679290771484375
    4. ' s' → logprob: -3.7679290771484375
    5. '    ' → logprob: -4.0179290771484375
    6. '   ' → logprob: -4.5179290771484375
    7. ' if' → logprob: -4.6429290771484375
    8. ' ' → logprob: -5.6429290771484375
    9. '        ' → logprob: -7.0179290771484375
    10. 's' → logprob: -7.5179290771484375

Token 38: '=str' (ID: 36106)
  Prédit: 'u'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'u' → logprob: -0.10446474701166153
    2. 'ua' → logprob: -3.4794647693634033
    3. '=s' → logprob: -3.8544647693634033
    4. '=u' → logprob: -3.9794647693634033
    5. '=' → logprob: -4.479464530944824
    6. ' =' → logprob: -4.854464530944824
    7. 'r' → logprob: -5.354464530944824
    8. '*u' → logprob: -7.229464530944824
    9. '=i' → logprob: -7.354464530944824
    10. '**' → logprob: -7.729464530944824

Token 39: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.03362010791897774
    2. '(int' → logprob: -3.7836201190948486
    3. '(' → logprob: -5.6586198806762695
    4. 'int' → logprob: -5.7836198806762695
    5. '(i' → logprob: -6.5336198806762695
    6. 's' → logprob: -7.5336198806762695
    7. '(_' → logprob: -7.9086198806762695
    8. '((' → logprob: -8.03361988067627
    9. '(pow' → logprob: -8.15861988067627
    10. 'sq' → logprob: -8.28361988067627

Token 40: '*s' (ID: 71191)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '**' → logprob: -0.2232961654663086
    2. '*' → logprob: -2.3482961654663086
    3. '*s' → logprob: -2.3482961654663086
    4. '*i' → logprob: -5.348296165466309
    5. ')' → logprob: -6.223296165466309
    6. ' **' → logprob: -6.973296165466309
    7. '*j' → logprob: -8.223296165466309
    8. '**)' → logprob: -8.348296165466309
    9. ' *' → logprob: -8.473296165466309
    10. '***' → logprob: -9.223296165466309

Token 41: ').' (ID: 741)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007463791989721358
    2. ')
' → logprob: -7.625746250152588
    3. '))' → logprob: -9.250746726989746
    4. ' )' → logprob: -10.000746726989746
    5. ')+' → logprob: -10.750746726989746
    6. ')`' → logprob: -11.000746726989746
    7. '       ' → logprob: -11.375746726989746
    8. '[' → logprob: -11.625746726989746
    9. '+' → logprob: -11.750746726989746
    10. '   ' → logprob: -12.000746726989746

Token 42: 'z' (ID: 89)
  Prédit: 'startswith'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'startswith' → logprob: -0.4662632346153259
    2. 'z' → logprob: -1.2162632942199707
    3. 'r' → logprob: -3.4662632942199707
    4. 'count' → logprob: -3.5912632942199707
    5. 'ends' → logprob: -4.966263294219971
    6. 'l' → logprob: -5.591263294219971
    7. 'rstrip' → logprob: -5.841263294219971
    8. 'replace' → logprob: -6.466263294219971
    9. 'find' → logprob: -6.716263294219971
    10. 'strip' → logprob: -7.716263294219971

Token 43: 'fill' (ID: 12413)
  Prédit: 'fill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'fill' → logprob: -0.0003267639840487391
    2. 'f' → logprob: -8.125327110290527
    3. '_fill' → logprob: -11.750327110290527
    4. 'p' → logprob: -12.625327110290527
    5. '```' → logprob: -12.875327110290527
    6. 'filled' → logprob: -13.000327110290527
    7. 'fi' → logprob: -13.000327110290527
    8. 'e' → logprob: -13.500327110290527
    9. 'z' → logprob: -13.625327110290527
    10. 'l' → logprob: -13.750327110290527

Token 44: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -1.5928495486150496e-05
    2. '(
' → logprob: -11.750016212463379
    3. '((' → logprob: -12.125016212463379
    4. ' (' → logprob: -13.375016212463379
    5. '6' → logprob: -15.750016212463379
    6. '```' → logprob: -16.125015258789062
    7. '3' → logprob: -16.250015258789062
    8. '('' → logprob: -16.250015258789062
    9. '4' → logprob: -16.250015258789062
    10. '(

' → logprob: -16.500015258789062

Token 45: '8' (ID: 23)
  Prédit: '20'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '20' → logprob: -0.42023155093193054
    2. '10' → logprob: -1.420231580734253
    3. '5' → logprob: -3.045231580734253
    4. '2' → logprob: -3.420231580734253
    5. '4' → logprob: -4.420231342315674
    6. '1' → logprob: -5.420231342315674
    7. '8' → logprob: -6.670231342315674
    8. '3' → logprob: -7.420231342315674
    9. '19' → logprob: -7.420231342315674
    10. '6' → logprob: -7.420231342315674

Token 46: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0030606575310230255
    2. ')
' → logprob: -6.003060817718506
    3. '))' → logprob: -8.003060340881348
    4. '       ' → logprob: -9.503060340881348
    5. '   ' → logprob: -10.378060340881348
    6. ')))' → logprob: -10.378060340881348
    7. ' )' → logprob: -10.503060340881348
    8. '[' → logprob: -10.503060340881348
    9. ')
' → logprob: -11.878060340881348
    10. ')[' → logprob: -12.128060340881348

Token 47: '       ' (ID: 309)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.3808499872684479
    2. '       ' → logprob: -1.7558499574661255
    3. '\n' → logprob: -3.130850076675415
    4. '<|end|>' → logprob: -3.505850076675415
    5. '[
' → logprob: -4.630849838256836
    6. '        
' → logprob: -5.005849838256836
    7. '
' → logprob: -5.130849838256836
    8. '[s' → logprob: -5.255849838256836
    9. '[:]' → logprob: -5.505849838256836
    10. ')' → logprob: -5.505849838256836

Token 48: ' s' (ID: 265)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' (adapté à ' s') → logprob: -0.8157529830932617
    2. '       ' → logprob: -0.9407529830932617
    3. '\n' → logprob: -3.0657529830932617
    4. '        
' → logprob: -3.3157529830932617
    5. ' s' → logprob: -4.065752983093262
    6. '   ' → logprob: -5.315752983093262
    7. ''\' → logprob: -5.440752983093262
    8. 'print' → logprob: -5.440752983093262
    9. ' ' → logprob: -5.565752983093262
    10. 'n' → logprob: -5.815752983093262

Token 49: '=int' (ID: 37431)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.15916970372200012
    2. ' =' → logprob: -2.2841696739196777
    3. '+=' → logprob: -3.1591696739196777
    4. ' +=' → logprob: -6.659169673919678
    5. '*=' → logprob: -7.034169673919678
    6. '=s' → logprob: -7.784169673919678
    7. '%=' → logprob: -9.909170150756836
    8. '+' → logprob: -10.034170150756836
    9. ' *=' → logprob: -10.159170150756836
    10. '=int' → logprob: -10.284170150756836

Token 50: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.00015753143816255033
    2. '(' → logprob: -9.750157356262207
    3. '(str' → logprob: -9.750157356262207
    4. '((' → logprob: -11.000157356262207
    5. '(input' → logprob: -11.500157356262207
    6. '('' → logprob: -12.250157356262207
    7. '(f' → logprob: -13.125157356262207
    8. '(square' → logprob: -13.125157356262207
    9. '(len' → logprob: -14.125157356262207
    10. '("' → logprob: -14.250157356262207

Token 51: 'q' (ID: 80)
  Prédit: '**'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '**' → logprob: -0.16228821873664856
    2. '*' → logprob: -2.537288188934326
    3. '*s' → logprob: -3.162288188934326
    4. 'sq' → logprob: -4.287288188934326
    5. 's' → logprob: -5.412288188934326
    6. ')' → logprob: -6.037288188934326
    7. '[' → logprob: -6.537288188934326
    8. '***' → logprob: -7.037288188934326
    9. ')*' → logprob: -7.162288188934326
    10. '**)' → logprob: -7.537288188934326

Token 52: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.07230580598115921
    2. '[-' → logprob: -2.697305917739868
    3. '[:' → logprob: -6.697305679321289
    4. ')' → logprob: -7.447305679321289
    5. '[len' → logprob: -8.072305679321289
    6. '[::-' → logprob: -9.197305679321289
    7. '[i' → logprob: -10.322305679321289
    8. '[int' → logprob: -11.072305679321289
    9. '[s' → logprob: -11.322305679321289
    10. '[:-' → logprob: -11.322305679321289

Token 53: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.6370209455490112
    2. '-' → logprob: -0.8870209455490112
    3. '4' → logprob: -2.887021064758301
    4. '::-' → logprob: -6.762021064758301
    5. '3' → logprob: -7.887021064758301
    6. ' -' → logprob: -8.0120210647583
    7. ' ' → logprob: -8.1370210647583
    8. '0' → logprob: -8.2620210647583
    9. '1' → logprob: -8.2620210647583
    10. 'len' → logprob: -8.3870210647583

Token 54: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0003694205661304295
    2. ':-' → logprob: -8.12536907196045
    3. '4' → logprob: -10.12536907196045
    4. ':]' → logprob: -11.12536907196045
    5. '6' → logprob: -11.87536907196045
    6. ' :' → logprob: -12.62536907196045
    7. '])' → logprob: -13.37536907196045
    8. '-' → logprob: -13.75036907196045
    9. ':])
' → logprob: -14.12536907196045
    10. ' ' → logprob: -14.37536907196045

Token 55: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.010982506908476353
    2. ' ' → logprob: -5.260982513427734
    3. '])' → logprob: -5.760982513427734
    4. '8' → logprob: -6.635982513427734
    5. '-' → logprob: -7.260982513427734
    6. '2' → logprob: -8.635982513427734
    7. '10' → logprob: -9.135982513427734
    8. ']' → logprob: -9.135982513427734
    9. '4' → logprob: -10.010982513427734
    10. '   ' → logprob: -10.823482513427734

Token 56: '])
' (ID: 5169)
  Prédit: '])'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.0011075903894379735
    2. '])
' → logprob: -6.876107692718506
    3. '       ' → logprob: -10.751107215881348
    4. ' ])' → logprob: -10.751107215881348
    5. '])
' → logprob: -11.876107215881348
    6. ')' → logprob: -12.376107215881348
    7. '   ' → logprob: -12.501107215881348
    8. '])

' → logprob: -12.751107215881348
    9. ']' → logprob: -12.876107215881348
    10. '"])' → logprob: -13.501107215881348

Token 57: '       ' (ID: 309)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.7269324064254761
    2. '<|end|>' → logprob: -1.101932406425476
    3. '
' → logprob: -1.726932406425476
    4. '   ' → logprob: -5.976932525634766
    5. ')' → logprob: -7.101932525634766
    6. '```' → logprob: -7.476932525634766
    7. '    
' → logprob: -7.601932525634766
    8. '       ' → logprob: -7.851932525634766
    9. '    ' → logprob: -8.601932525634766
    10. '<|end|>' → logprob: -8.601932525634766

Token 58: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.06530478596687317
    2. '       ' → logprob: -3.065304756164551
    3. ' print' → logprob: -4.190304756164551
    4. '   ' → logprob: -6.815304756164551
    5. '```' → logprob: -8.19030475616455
    6. ' ' → logprob: -10.56530475616455
    7. '        
' → logprob: -11.44030475616455
    8. '``' → logprob: -11.69030475616455
    9. '    
' → logprob: -12.31530475616455
    10. '	print' → logprob: -12.94030475616455

Token 59: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.003213245654478669
    2. '(f' → logprob: -6.128213405609131
    3. '(' → logprob: -7.003213405609131
    4. '()' → logprob: -9.878212928771973
    5. '(str' → logprob: -10.753212928771973
    6. 's' → logprob: -11.503212928771973
    7. '(int' → logprob: -11.878212928771973
    8. '(i' → logprob: -11.878212928771973
    9. '(q' → logprob: -12.503212928771973
    10. '((' → logprob: -12.628212928771973

Token 60: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.816093228830141e-06
    2. ')
' → logprob: -13.00000286102295
    3. ' )' → logprob: -15.62500286102295
    4. '   ' → logprob: -16.375001907348633
    5. '))' → logprob: -16.500001907348633
    6. '')' → logprob: -17.750001907348633
    7. '")' → logprob: -18.125001907348633
    8. ')`' → logprob: -18.250001907348633
    9. ')")' → logprob: -19.250001907348633
    10. ' ' → logprob: -19.375001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 58
Tokens correctement prédits (1ère position, stricte): 22
Tokens correctement prédits (1ère position, avec adaptation): 24
Tokens correctement prédits (top 10): 47
Précision stricte (1ère position): 37.93%
Précision adaptée (1ère position): 41.38%
Précision (top 10): 81.03%
================================================================================
