================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:15:32
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
class RefreshmentAreaProblem:
    class Grid:
        def __init__(self, n: int, m: int, grid_map: list[str]):
            self.n = n
            self.m = m
            self.grid_map = grid_map

        def is_cell_free(self, row: int, col: int) -> bool:
            return self.grid_map[row][col] == '.'

        def segment_free(self, start_row: int, start_col: int, length: int, direction: 'Coordinates.Direction') -> bool:
            for k in range(length):
                if direction == Coordinates.Direction.HORIZONTAL:
                    if not self.is_cell_free(start_row, start_col + k):
                        return False
                else:
                    if not self.is_cell_free(start_row + k, start_col):
                        return False
            return True

    class Coordinates:
        from enum import Enum
        class Direction(Enum):
            HORIZONTAL = 0
            VERTICAL = 1

    def __init__(self, n: int, m: int, d: int, grid_map: list[str]):
        self.n = n
        self.m = m
        self.d = d
        self.grid = self.Grid(n, m, grid_map)

    def count_positions(self) -> int:
        count = 0
        # Count horizontal candidates
        for r in range(self.n):
            for c in range(self.m - self.d + 1):
                if self.grid.segment_free(r, c, self.d, self.Coordinates.Direction.HORIZONTAL):
                    count += 1
        # Count vertical candidates
        for c in range(self.m):
            for r in range(self.n - self.d + 1):
                if self.grid.segment_free(r, c, self.d, self.Coordinates.Direction.VERTICAL):
                    count += 1
        
        # Special case: if d == 1, count each free cell once (not in the problem constraints but general)
        # Here d >= 2 by problem statement, so no need to handle overlapped counting

        return count


def main():
    class InputProcessor:
        @staticmethod
        def parse_input():
            n, m, d = map(int, input().split())
            grid_map = [input() for _ in range(n)]
            return n, m, d, grid_map

    class OutputProcessor:
        @staticmethod
        def output_result(result: int):
            print(result)

    n, m, d, grid_map = InputProcessor.parse_input()
    problem = RefreshmentAreaProblem(n, m, d, grid_map)
    result = problem.count_positions()
    OutputProcessor.output_result(result)


if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'class' (ID: 1444)
  → Token d'amorce (pas de prédiction)

Token 1: ' Refresh' (ID: 55155)
  → Token d'amorce (pas de prédiction)

Token 2: 'ment' (ID: 508)
  → Token d'amorce (pas de prédiction)

Token 3: 'Area' (ID: 10280)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.33156076073646545
    2. ':' → logprob: -1.456560730934143
    3. '{' → logprob: -3.5815608501434326
    4. '.' → logprob: -3.9565608501434326
    5. ' {' → logprob: -6.9565606117248535
    6. 's' → logprob: -7.5815606117248535
    7. ' ' → logprob: -8.456561088562012
    8. '```' → logprob: -9.206561088562012
    9. ' (' → logprob: -9.331561088562012
    10. '[' → logprob: -9.456561088562012

Token 4: 'Problem' (ID: 36177)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '{' → logprob: -0.4344770908355713
    2. ':' → logprob: -1.1844770908355713
    3. '(' → logprob: -3.3094770908355713
    4. '.' → logprob: -5.059476852416992
    5. ' {' → logprob: -5.684476852416992
    6. '```' → logprob: -9.809476852416992
    7. ' ' → logprob: -10.309476852416992
    8. '(:' → logprob: -10.809476852416992
    9. '[' → logprob: -10.934476852416992
    10. ' :' → logprob: -11.059476852416992

Token 5: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.215865820646286
    2. '(' → logprob: -2.2158658504486084
    3. '{' → logprob: -2.5908658504486084
    4. '.' → logprob: -4.715865612030029
    5. ' {' → logprob: -7.340865612030029
    6. '(:' → logprob: -8.590866088867188
    7. '```' → logprob: -8.840866088867188
    8. ' :' → logprob: -10.090866088867188
    9. '({' → logprob: -10.840866088867188
    10. ' ' → logprob: -10.965866088867188

Token 6: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4802674353122711
    2. '(' → logprob: -0.9802674055099487
    3. '   ' → logprob: -5.980267524719238
    4. '```' → logprob: -6.355267524719238
    5. ':
' → logprob: -7.230267524719238
    6. '(
' → logprob: -7.480267524719238
    7. '():' → logprob: -8.855267524719238
    8. '.' → logprob: -8.855267524719238
    9. ' :' → logprob: -9.855267524719238
    10. ' ' → logprob: -9.980267524719238

Token 7: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6658443212509155
    2. ' ' → logprob: -1.1658443212509155
    3. '```' → logprob: -3.165844440460205
    4. '    ' → logprob: -3.290844440460205
    5. ' def' → logprob: -4.165844440460205
    6. '\' → logprob: -4.165844440460205
    7. '(' → logprob: -4.290844440460205
    8. ' 
' → logprob: -4.665844440460205
    9. '_' → logprob: -5.290844440460205
    10. ':' → logprob: -5.665844440460205

Token 8: ' Grid' (ID: 18087)
  Prédit: ' Refresh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Refresh' → logprob: -0.1512027233839035
    2. ' Visitor' → logprob: -3.02620267868042
    3. ' Solution' → logprob: -3.15120267868042
    4. ' Room' → logprob: -5.27620267868042
    5. '   ' → logprob: -5.90120267868042
    6. ' ' → logprob: -6.02620267868042
    7. ' Worker' → logprob: -6.27620267868042
    8. ' Node' → logprob: -6.27620267868042
    9. ' Factory' → logprob: -6.40120267868042
    10. ' Restaurant' → logprob: -6.52620267868042

Token 9: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16939646005630493
    2. '(' → logprob: -2.16939640045166
    3. '[' → logprob: -4.04439640045166
    4. '.' → logprob: -4.16939640045166
    5. '   ' → logprob: -6.16939640045166
    6. ' (' → logprob: -6.16939640045166
    7. '    ' → logprob: -7.16939640045166
    8. ' :' → logprob: -7.29439640045166
    9. '(
' → logprob: -7.91939640045166
    10. '(Grid' → logprob: -7.91939640045166

Token 10: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.17510685324668884
    2. '\' → logprob: -3.4251067638397217
    3. '   ' → logprob: -3.4251067638397217
    4. '    ' → logprob: -3.4251067638397217
    5. '<|end|>' → logprob: -4.050107002258301
    6. '(' → logprob: -4.175107002258301
    7. '(n' → logprob: -4.675107002258301
    8. '[' → logprob: -5.425107002258301
    9. '\n' → logprob: -6.050107002258301
    10. '        ' → logprob: -6.050107002258301

Token 11: ' def' (ID: 1056)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -1.484783411026001
    2. '(n' → logprob: -1.859783411026001
    3. '_' → logprob: -1.984783411026001
    4. 'n' → logprob: -1.984783411026001
    5. '       ' → logprob: -2.484783411026001
    6. ' ' → logprob: -2.734783411026001
    7. '        ' → logprob: -2.984783411026001
    8. '\' → logprob: -3.234783411026001
    9. '   ' → logprob: -4.109783172607422
    10. '[' → logprob: -4.234783172607422

Token 12: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.008383725769817829
    2. '__' → logprob: -5.633383750915527
    3. ' init' → logprob: -6.508383750915527
    4. ' _' → logprob: -6.508383750915527
    5. ' ' → logprob: -7.008383750915527
    6. '_' → logprob: -8.258383750915527
    7. ' find' → logprob: -8.758383750915527
    8. ' add' → logprob: -9.508383750915527
    9. ' constructor' → logprob: -9.758383750915527
    10. 'init' → logprob: -9.758383750915527

Token 13: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -7.52919222577475e-05
    2. ' init' → logprob: -9.625075340270996
    3. 'ini' → logprob: -11.750075340270996
    4. 'i' → logprob: -14.500075340270996
    5. 'in' → logprob: -15.125075340270996
    6. '_init' → logprob: -15.625075340270996
    7. '   ' → logprob: -16.87507438659668
    8. '	init' → logprob: -16.87507438659668
    9. 'inite' → logprob: -17.25007438659668
    10. 'int' → logprob: -17.25007438659668

Token 14: '__(' (ID: 8241)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.34767505526542664
    2. '__(' → logprob: -2.097675085067749
    3. ' (' → logprob: -2.347675085067749
    4. '(self' → logprob: -3.097675085067749
    5. '<|end|>' → logprob: -3.972675085067749
    6. '__' → logprob: -5.97267484664917
    7. '__(
' → logprob: -6.34767484664917
    8. 'self' → logprob: -6.47267484664917
    9. ')(' → logprob: -6.72267484664917
    10. '_' → logprob: -7.22267484664917

Token 15: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.05493927001953125
    2. ' self' → logprob: -2.9299392700195312
    3. ')' → logprob: -10.429939270019531
    4. ' )' → logprob: -11.429939270019531
    5. '(self' → logprob: -12.054939270019531
    6. '        ' → logprob: -12.929939270019531
    7. ' ' → logprob: -13.179939270019531
    8. ',' → logprob: -13.679939270019531
    9. '       ' → logprob: -13.679939270019531
    10. '<|end|>' → logprob: -14.054939270019531

Token 16: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.05389305576682091
    2. ' ,' → logprob: -3.1788930892944336
    3. 'self' → logprob: -4.928893089294434
    4. ')' → logprob: -7.303893089294434
    5. ' self' → logprob: -7.303893089294434
    6. '(self' → logprob: -7.428893089294434
    7. ' )' → logprob: -7.928893089294434
    8. ' ' → logprob: -8.053893089294434
    9. ',self' → logprob: -8.053893089294434
    10. ' (' → logprob: -9.178893089294434

Token 17: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.49798470735549927
    2. ' self' → logprob: -0.9979847073554993
    3. 'rows' → logprob: -5.122984886169434
    4. ' grid' → logprob: -5.247984886169434
    5. ' rows' → logprob: -5.372984886169434
    6. ' width' → logprob: -5.997984886169434
    7. 'width' → logprob: -6.247984886169434
    8. 'grid' → logprob: -6.247984886169434
    9. ' size' → logprob: -7.622984886169434
    10. 'size' → logprob: -8.622984886169434

Token 18: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.17274364829063416
    2. ')' → logprob: -2.922743558883667
    3. '):' → logprob: -2.922743558883667
    4. ' ,' → logprob: -3.922743558883667
    5. ':' → logprob: -4.547743797302246
    6. ' ):' → logprob: -4.547743797302246
    7. ' )' → logprob: -4.797743797302246
    8. ' ' → logprob: -7.047743797302246
    9. '_' → logprob: -7.547743797302246
    10. '_cells' → logprob: -9.047743797302246

Token 19: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.06994788348674774
    2. 'int' → logprob: -2.6949479579925537
    3. '=int' → logprob: -12.444948196411133
    4. ':int' → logprob: -12.569948196411133
    5. ')' → logprob: -14.069948196411133
    6. '[int' → logprob: -14.194948196411133
    7. ' ' → logprob: -14.694948196411133
    8. ' )' → logprob: -14.819948196411133
    9. ']int' → logprob: -15.319948196411133
    10. ',int' → logprob: -15.444948196411133

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.11648154258728027
    2. '):' → logprob: -2.4914815425872803
    3. ')' → logprob: -3.6164815425872803
    4. ' ,' → logprob: -9.61648178100586
    5. '):
' → logprob: -9.74148178100586
    6. '),' → logprob: -10.36648178100586
    7. '       ' → logprob: -10.49148178100586
    8. ',n' → logprob: -10.74148178100586
    9. '   ' → logprob: -11.11648178100586
    10. '<|end|>' → logprob: -11.24148178100586

Token 21: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.017271699383854866
    2. ' grid' → logprob: -4.767271518707275
    3. 'm' → logprob: -4.892271518707275
    4. ' ' → logprob: -7.892271518707275
    5. ' k' → logprob: -8.142271995544434
    6. 'grid' → logprob: -8.767271995544434
    7. ' width' → logprob: -10.517271995544434
    8. ' data' → logprob: -10.892271995544434
    9. 'k' → logprob: -11.017271995544434
    10. ' w' → logprob: -11.079771995544434

Token 22: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2641385793685913
    2. ')' → logprob: -1.6391385793685913
    3. ':' → logprob: -3.514138698577881
    4. ',' → logprob: -4.889138698577881
    5. ' ):' → logprob: -7.639138698577881
    6. ' )' → logprob: -10.139138221740723
    7. '   ' → logprob: -10.389138221740723
    8. ' ' → logprob: -10.639138221740723
    9. '):
' → logprob: -10.764138221740723
    10. ':int' → logprob: -11.014138221740723

Token 23: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.16027987003326416
    2. 'int' → logprob: -1.9102798700332642
    3. ':int' → logprob: -10.660280227661133
    4. ']int' → logprob: -11.910280227661133
    5. '=int' → logprob: -12.160280227661133
    6. ')' → logprob: -12.285280227661133
    7. '<int' → logprob: -12.410280227661133
    8. '[int' → logprob: -12.785280227661133
    9. '(int' → logprob: -13.035280227661133
    10. '	int' → logprob: -13.285280227661133

Token 24: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03552275896072388
    2. ')' → logprob: -3.785522699356079
    3. ',' → logprob: -4.410522937774658
    4. '):
' → logprob: -10.2855224609375
    5. ' ):' → logprob: -12.4105224609375
    6. '   ' → logprob: -13.0355224609375
    7. ':' → logprob: -13.0355224609375
    8. '       ' → logprob: -13.0355224609375
    9. '),' → logprob: -13.1605224609375
    10. ' ,' → logprob: -13.5355224609375

Token 25: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.007879757322371006
    2. ' obstacles' → logprob: -6.382879734039307
    3. ' matrix' → logprob: -6.757879734039307
    4. 'grid' → logprob: -7.257879734039307
    5. ' cells' → logprob: -7.382879734039307
    6. ' data' → logprob: -7.382879734039307
    7. ' blocked' → logprob: -7.507879734039307
    8. ' board' → logprob: -8.382880210876465
    9. ' ' → logprob: -8.632880210876465
    10. ' refresh' → logprob: -8.882880210876465

Token 26: '_map' (ID: 11824)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.030357440933585167
    2. '):' → logprob: -3.5303573608398438
    3. '_data' → logprob: -8.530357360839844
    4. ' :' → logprob: -8.905357360839844
    5. ' ):' → logprob: -9.405357360839844
    6. ')' → logprob: -9.655357360839844
    7. '_lines' → logprob: -11.155357360839844
    8. '_values' → logprob: -11.155357360839844
    9. '_:' → logprob: -11.405357360839844
    10. ',' → logprob: -11.405357360839844

Token 27: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0671430379152298
    2. '):' → logprob: -2.817142963409424
    3. ')' → logprob: -5.817142963409424
    4. ' ):' → logprob: -6.442142963409424
    5. ' :' → logprob: -7.692142963409424
    6. ' )' → logprob: -9.567143440246582
    7. ',' → logprob: -11.067143440246582
    8. '=' → logprob: -11.192143440246582
    9. '):
' → logprob: -11.442143440246582
    10. '=None' → logprob: -12.317143440246582

Token 28: ' list' (ID: 1562)
  Prédit: 'List'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'List' → logprob: -0.49887052178382874
    2. ' List' → logprob: -1.3738704919815063
    3. ' list' → logprob: -2.498870611190796
    4. 'list' → logprob: -3.623870611190796
    5. ')' → logprob: -4.498870372772217
    6. '[List' → logprob: -5.123870372772217
    7. ' ' → logprob: -5.748870372772217
    8. ' )' → logprob: -6.373870372772217
    9. '[list' → logprob: -6.373870372772217
    10. ' [' → logprob: -6.623870372772217

Token 29: '[str' (ID: 33439)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.01835513487458229
    2. '[int' → logprob: -4.893355369567871
    3. '):
' → logprob: -5.518355369567871
    4. '[list' → logprob: -5.768355369567871
    5. '[' → logprob: -6.268355369567871
    6. ':' → logprob: -7.143355369567871
    7. '[str' → logprob: -8.518355369567871
    8. '[List' → logprob: -8.643355369567871
    9. ')' → logprob: -8.893355369567871
    10. '   ' → logprob: -9.143355369567871

Token 30: ']):
' (ID: 51989)
  Prédit: ']):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):' → logprob: -0.6387587785720825
    2. '])' → logprob: -0.8887587785720825
    3. ']' → logprob: -2.888758659362793
    4. '],' → logprob: -6.513758659362793
    5. ']:' → logprob: -6.513758659362793
    6. ']):
' → logprob: -7.138758659362793
    7. ']])' → logprob: -7.513758659362793
    8. '[str' → logprob: -8.263758659362793
    9. ']]' → logprob: -8.638758659362793
    10. ')' → logprob: -9.013758659362793

Token 31: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.694661557674408
    2. '):' → logprob: -0.819661557674408
    3. ')' → logprob: -3.5696616172790527
    4. '       ' → logprob: -3.6946616172790527
    5. ',' → logprob: -5.569661617279053
    6. '):
' → logprob: -6.819661617279053
    7. '           ' → logprob: -7.694661617279053
    8. '   ' → logprob: -7.944661617279053
    9. '```' → logprob: -8.194661140441895
    10. ':
' → logprob: -8.444661140441895

Token 32: ' self' (ID: 1051)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.018621373921632767
    2. 'self' (adapté à ' self') → logprob: -4.518621444702148
    3. '       ' → logprob: -5.643621444702148
    4. '           ' → logprob: -6.018621444702148
    5. ' self' → logprob: -7.518621444702148
    6. '```' → logprob: -7.893621444702148
    7. '   ' → logprob: -8.643621444702148
    8. ' ' → logprob: -9.643621444702148
    9. '                   ' → logprob: -9.768621444702148
    10. '\' → logprob: -10.018621444702148

Token 33: '.n' (ID: 1835)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.028214482590556145
    2. '.grid' → logprob: -4.028214454650879
    3. '.n' → logprob: -4.653214454650879
    4. ' .' → logprob: -8.153214454650879
    5. ' ' → logprob: -10.528214454650879
    6. ' n' → logprob: -11.028214454650879
    7. '._' → logprob: -11.153214454650879
    8. '   ' → logprob: -11.278214454650879
    9. 'n' → logprob: -11.278214454650879
    10. '.data' → logprob: -11.403214454650879

Token 34: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 35: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.023246875032782555
    2. 'n' → logprob: -3.7732467651367188
    3. ' ' → logprob: -14.148246765136719
    4. ' ' → logprob: -14.648246765136719
    5. '	n' → logprob: -16.39824676513672
    6. '_n' → logprob: -17.27324676513672
    7. ')n' → logprob: -17.77324676513672
    8. '=n' → logprob: -18.27324676513672
    9. '```' → logprob: -18.64824676513672
    10. ' ‌' → logprob: -19.02324676513672

Token 36: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 37: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 38: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6600931882858276
    2. 'self' (adapté à ' self') → logprob: -1.1600931882858276
    3. ' self' → logprob: -1.7850931882858276
    4. '       ' → logprob: -6.660093307495117
    5. ' ' → logprob: -8.160093307495117
    6. '   ' → logprob: -8.285093307495117
    7. '            ' → logprob: -10.160093307495117
    8. '        ' → logprob: -10.535093307495117
    9. '               ' → logprob: -10.660093307495117
    10. '         ' → logprob: -10.910093307495117

Token 39: '.m' (ID: 1021)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.05024073272943497
    2. '.m' → logprob: -3.4252407550811768
    3. '.grid' → logprob: -4.175240516662598
    4. ' .' → logprob: -7.425240516662598
    5. '.n' → logprob: -7.925240516662598
    6. '.Grid' → logprob: -10.425240516662598
    7. ' ' → logprob: -10.675240516662598
    8. 'm' → logprob: -11.675240516662598
    9. '   ' → logprob: -11.925240516662598
    10. '.x' → logprob: -12.300240516662598

Token 40: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 41: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.06993665546178818
    2. 'm' → logprob: -2.694936752319336
    3. ' ' → logprob: -15.694936752319336
    4. ' ' → logprob: -16.569936752319336
    5. '	m' → logprob: -16.694936752319336
    6. '    ' → logprob: -17.194936752319336
    7. '   ' → logprob: -18.069936752319336
    8. '<m' → logprob: -18.194936752319336
    9. '```' → logprob: -18.319936752319336
    10. ')m' → logprob: -18.507436752319336

Token 42: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006700330879539251
    2. '<|end|>' → logprob: -5.38170051574707
    3. '       ' → logprob: -6.38170051574707
    4. '   ' → logprob: -8.75670051574707
    5. '
' → logprob: -9.75670051574707
    6. '<|end|>' → logprob: -10.25670051574707
    7. '```' → logprob: -10.63170051574707
    8. 'self' → logprob: -11.00670051574707
    9. 'newline' → logprob: -11.25670051574707
    10. '               ' → logprob: -11.25670051574707

Token 43: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.002679463941603899
    2. '       ' → logprob: -6.627679347991943
    3. '<|end|>' → logprob: -7.502679347991943
    4. 'self' → logprob: -7.877679347991943
    5. '```' → logprob: -9.127679824829102
    6. '   ' → logprob: -9.752679824829102
    7. '            
' → logprob: -9.752679824829102
    8. '               ' → logprob: -10.252679824829102
    9. '            ' → logprob: -10.377679824829102
    10. '\' → logprob: -10.877679824829102

Token 44: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.3197529911994934
    2. ' self' → logprob: -1.4447529315948486
    3. '           ' → logprob: -3.5697529315948486
    4. 'grid' → logprob: -5.069753170013428
    5. ' grid' → logprob: -5.819753170013428
    6. '   ' → logprob: -8.69475269317627
    7. '               ' → logprob: -9.19475269317627
    8. '            ' → logprob: -9.44475269317627
    9. '       ' → logprob: -10.06975269317627
    10. ' ' → logprob: -10.56975269317627

Token 45: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.00030817187507636845
    2. '.' → logprob: -8.3753080368042
    3. ' .' → logprob: -9.6253080368042
    4. '._' → logprob: -12.1253080368042
    5. '.Grid' → logprob: -12.8753080368042
    6. '.map' → logprob: -13.5003080368042
    7. '.g' → logprob: -14.3753080368042
    8. 'grid' → logprob: -15.2503080368042
    9. '.gr' → logprob: -15.8753080368042
    10. '_grid' → logprob: -16.000308990478516

Token 46: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.001578182796947658
    2. '_' → logprob: -6.501578330993652
    3. '=' → logprob: -10.001578330993652
    4. ' =' → logprob: -10.626578330993652
    5. '_maps' → logprob: -13.001578330993652
    6. '=_' → logprob: -13.251578330993652
    7. '[' → logprob: -14.126578330993652
    8. 'Map' → logprob: -14.751578330993652
    9. ' _' → logprob: -15.251578330993652
    10. 'map' → logprob: -16.001577377319336

Token 47: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6223171949386597
    2. ' =' → logprob: -1.2473171949386597
    3. '[' → logprob: -1.7473171949386597
    4. '[:]' → logprob: -7.122317314147949
    5. '<|end|>' → logprob: -7.997317314147949
    6. ']' → logprob: -8.99731731414795
    7. '.append' → logprob: -9.62231731414795
    8. ')' → logprob: -9.62231731414795
    9. '[]' → logprob: -10.24731731414795
    10. '[
' → logprob: -10.24731731414795

Token 48: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.474082350730896
    2. ' grid' → logprob: -0.974082350730896
    3. '[' → logprob: -13.224081993103027
    4. ' [' → logprob: -13.349081993103027
    5. '(grid' → logprob: -14.474081993103027
    6. '	grid' → logprob: -15.099081993103027
    7. '[]' → logprob: -15.599081993103027
    8. ' ' → logprob: -15.724081993103027
    9. '.grid' → logprob: -15.724081993103027
    10. ':grid' → logprob: -16.224082946777344

Token 49: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.00033081689616665244
    2. '_' → logprob: -8.250330924987793
    3. '[_' → logprob: -10.625330924987793
    4. '._' → logprob: -11.250330924987793
    5. ' _' → logprob: -11.625330924987793
    6. '[' → logprob: -12.000330924987793
    7. '_MAP' → logprob: -13.000330924987793
    8. '```' → logprob: -13.250330924987793
    9. '`' → logprob: -13.625330924987793
    10. 'Map' → logprob: -13.875330924987793

Token 50: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6683411002159119
    2. '       ' → logprob: -1.5433411598205566
    3. '<|end|>' → logprob: -1.5433411598205566
    4. '        
' → logprob: -4.043341159820557
    5. '    
' → logprob: -4.293341159820557
    6. '   ' → logprob: -4.918341159820557
    7. '\n' → logprob: -4.918341159820557
    8. '```' → logprob: -5.168341159820557
    9. '\' → logprob: -6.293341159820557
    10. '<|end|>' → logprob: -6.543341159820557

Token 51: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.0347850322723389
    2. '<|end|>' → logprob: -1.2847850322723389
    3. '       ' → logprob: -1.6597850322723389
    4. '   ' → logprob: -2.534785032272339
    5. '    
' → logprob: -2.659785032272339
    6. '        
' → logprob: -4.534785270690918
    7. 'def' → logprob: -5.784785270690918
    8. '\n' → logprob: -5.909785270690918
    9. '```' → logprob: -6.284785270690918
    10. '<|end|>' → logprob: -6.534785270690918

Token 52: ' def' (ID: 1056)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6095378398895264
    2. '       ' → logprob: -1.3595378398895264
    3. '<|end|>' → logprob: -2.6095378398895264
    4. 'def' (adapté à ' def') → logprob: -2.7345378398895264
    5. '        
' → logprob: -3.3595378398895264
    6. '    
' → logprob: -5.1095380783081055
    7. '<|end|>' → logprob: -5.2345380783081055
    8. '   ' → logprob: -5.2345380783081055
    9. ' def' → logprob: -5.6095380783081055
    10. '        
        
' → logprob: -7.1095380783081055

Token 53: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.9401842951774597
    2. ' get' → logprob: -0.9401842951774597
    3. ' in' → logprob: -2.6901843547821045
    4. ' ' → logprob: -3.0651843547821045
    5. 'is' → logprob: -3.3151843547821045
    6. '_' → logprob: -3.8151843547821045
    7. ' _' → logprob: -5.065184116363525
    8. '_is' → logprob: -5.065184116363525
    9. 'get' → logprob: -5.565184116363525
    10. ' check' → logprob: -5.815184116363525

Token 54: '_cell' (ID: 39197)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.657340943813324
    2. '_access' → logprob: -1.4073410034179688
    3. '_valid' → logprob: -1.7823410034179688
    4. ' _' → logprob: -3.7823410034179688
    5. '_empty' → logprob: -4.282341003417969
    6. '_open' → logprob: -4.657341003417969
    7. '_pass' → logprob: -5.407341003417969
    8. '_walk' → logprob: -5.532341003417969
    9. '_available' → logprob: -5.657341003417969
    10. '_free' → logprob: -5.782341003417969

Token 55: '_free' (ID: 21204)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.5949748754501343
    2. '_valid' → logprob: -1.5949748754501343
    3. '_free' → logprob: -1.5949748754501343
    4. '_access' → logprob: -1.9699748754501343
    5. '_open' → logprob: -2.094974994659424
    6. '_empty' → logprob: -3.469974994659424
    7. '_pass' → logprob: -3.844974994659424
    8. '_walk' → logprob: -3.969974994659424
    9. '_safe' → logprob: -4.094974994659424
    10. '_available' → logprob: -4.219974994659424

Token 56: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.030271288007497787
    2. '(self' → logprob: -3.530271291732788
    3. ' (' → logprob: -8.780271530151367
    4. '_' → logprob: -9.405271530151367
    5. '(cell' → logprob: -9.780271530151367
    6. '<|end|>' → logprob: -9.905271530151367
    7. ' ' → logprob: -10.030271530151367
    8. 'self' → logprob: -10.155271530151367
    9. '(
' → logprob: -10.655271530151367
    10. ')' → logprob: -11.530271530151367

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004654999356716871
    2. ')' → logprob: -6.004654884338379
    3. ' ,' → logprob: -6.504654884338379
    4. 'self' → logprob: -8.254654884338379
    5. '(x' → logprob: -9.129654884338379
    6. ',x' → logprob: -9.629654884338379
    7. '(cell' → logprob: -9.879654884338379
    8. ' ' → logprob: -10.504654884338379
    9. '(self' → logprob: -11.004654884338379
    10. '(row' → logprob: -11.379654884338379

Token 58: ' row' (ID: 5225)
  Prédit: ' x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.2262895256280899
    2. ' row' → logprob: -2.3512895107269287
    3. 'x' → logprob: -3.1012895107269287
    4. ' self' → logprob: -3.7262895107269287
    5. ' i' → logprob: -3.8512895107269287
    6. 'row' → logprob: -4.976289749145508
    7. ' r' → logprob: -5.726289749145508
    8. 'self' → logprob: -6.351289749145508
    9. ' y' → logprob: -6.476289749145508
    10. 'i' → logprob: -6.476289749145508

Token 59: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005477551836520433
    2. ')' → logprob: -5.755477428436279
    3. ' ,' → logprob: -6.505477428436279
    4. ',row' → logprob: -7.505477428436279
    5. '<|end|>' → logprob: -8.755477905273438
    6. '<|end|>' → logprob: -10.380477905273438
    7. '[row' → logprob: -11.630477905273438
    8. '):' → logprob: -11.755477905273438
    9. '[' → logprob: -12.130477905273438
    10. ' ' → logprob: -12.505477905273438

Token 60: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.5534448623657227
    2. ' )' → logprob: -1.5534448623657227
    3. ')' → logprob: -1.6784448623657227
    4. ',' → logprob: -4.553444862365723
    5. ' ,' → logprob: -4.553444862365723
    6. '<|end|>' → logprob: -5.928444862365723
    7. 'int' → logprob: -6.178444862365723
    8. ' row' → logprob: -8.428444862365723
    9. ' ' → logprob: -8.803444862365723
    10. ' int' → logprob: -9.178444862365723

Token 61: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.864272967912257e-05
    2. ' ,' → logprob: -9.375088691711426
    3. ')' → logprob: -13.250088691711426
    4. '‌,' → logprob: -14.625088691711426
    5. ',row' → logprob: -15.000088691711426
    6. '<|end|>' → logprob: -15.000088691711426
    7. ',int' → logprob: -15.125088691711426
    8. ',
' → logprob: -16.00008773803711
    9. ',column' → logprob: -16.12508773803711
    10. ' ' → logprob: -16.37508773803711

Token 62: ' col' (ID: 996)
  Prédit: ' col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' col' → logprob: -0.0053771180100739
    2. 'col' → logprob: -5.255377292633057
    3. ' column' → logprob: -8.880376815795898
    4. 'column' → logprob: -12.880376815795898
    5. '	col' → logprob: -13.630376815795898
    6. ' coli' → logprob: -15.630376815795898
    7. ' colspan' → logprob: -16.6303768157959
    8. '_col' → logprob: -16.6303768157959
    9. 'colm' → logprob: -17.2553768157959
    10. ')' → logprob: -17.7553768157959

Token 63: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2828255593776703
    2. ')' → logprob: -1.4078255891799927
    3. ':' → logprob: -6.907825469970703
    4. '):
' → logprob: -7.532825469970703
    5. ' ):' → logprob: -9.907825469970703
    6. '   ' → logprob: -10.657825469970703
    7. ',' → logprob: -10.907825469970703
    8. ' )' → logprob: -11.157825469970703
    9. ' ' → logprob: -11.407825469970703
    10. '```' → logprob: -12.157825469970703

Token 64: ' int' (ID: 677)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.29003816843032837
    2. 'int' → logprob: -1.4150381088256836
    3. ' )' → logprob: -5.040038108825684
    4. ' int' → logprob: -7.165038108825684
    5. '):' → logprob: -7.165038108825684
    6. ' ' → logprob: -7.915038108825684
    7. '   ' → logprob: -8.165038108825684
    8. '  ' → logprob: -10.290038108825684
    9. ':int' → logprob: -10.290038108825684
    10. ' ):' → logprob: -10.415038108825684

Token 65: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.029819805175065994
    2. '):' → logprob: -3.5298197269439697
    3. '):
' → logprob: -9.90481948852539
    4. ' )' → logprob: -11.90481948852539
    5. ')->' → logprob: -12.27981948852539
    6. ':' → logprob: -12.90481948852539
    7. '   ' → logprob: -13.40481948852539
    8. ' ):' → logprob: -14.02981948852539
    9. ' ' → logprob: -14.27981948852539
    10. ',' → logprob: -14.65481948852539

Token 66: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4327540695667267
    2. ':' → logprob: -1.4327540397644043
    3. '):' → logprob: -2.8077540397644043
    4. '->' → logprob: -3.9327540397644043
    5. ' ->' → logprob: -4.057754039764404
    6. ')->' → logprob: -4.307754039764404
    7. '):
' → logprob: -7.557754039764404
    8. '       ' → logprob: -8.307754516601562
    9. ':return' → logprob: -8.557754516601562
    10. '   ' → logprob: -8.807754516601562

Token 67: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.0318714864552021
    2. ' ' → logprob: -3.7818715572357178
    3. 'bool' → logprob: -4.781871318817139
    4. ' ' → logprob: -9.656871795654297
    5. '  ' → logprob: -9.906871795654297
    6. ' int' → logprob: -10.031871795654297
    7. ' '' → logprob: -11.531871795654297
    8. ' "' → logprob: -11.781871795654297
    9. ' None' → logprob: -12.156871795654297
    10. 'int' → logprob: -12.281871795654297

Token 68: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0012210593558847904
    2. '):' → logprob: -7.251221179962158
    3. ':return' → logprob: -7.876221179962158
    4. '():' → logprob: -9.251220703125
    5. ':
' → logprob: -11.126220703125
    6. ':**' → logprob: -12.001220703125
    7. ' :' → logprob: -12.376220703125
    8. '       ' → logprob: -12.751220703125
    9. '>:' → logprob: -13.251220703125
    10. '<|end|>' → logprob: -13.501220703125

Token 69: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3487265110015869
    2. '           ' → logprob: -1.973726511001587
    3. '<|end|>' → logprob: -2.723726511001587
    4. ' return' → logprob: -3.723726511001587
    5. '       ' → logprob: -3.973726511001587
    6. ':return' → logprob: -4.348726272583008
    7. ')' → logprob: -4.473726272583008
    8. '               ' → logprob: -4.973726272583008
    9. ':
' → logprob: -5.723726272583008
    10. '):' → logprob: -5.848726272583008

Token 70: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.5926477313041687
    2. 'return' (adapté à ' return') → logprob: -0.8426477313041687
    3. '           ' → logprob: -4.592647552490234
    4. '               ' → logprob: -5.217647552490234
    5. '            ' → logprob: -8.467647552490234
    6. ' ' → logprob: -8.467647552490234
    7. '       ' → logprob: -8.592647552490234
    8. '   ' → logprob: -8.842647552490234
    9. '```' → logprob: -9.592647552490234
    10. '
' → logprob: -10.342647552490234

Token 71: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2023661732673645
    2. 'self' → logprob: -1.7023661136627197
    3. '0' → logprob: -7.077366352081299
    4. ' ' → logprob: -9.32736587524414
    5. '           ' → logprob: -12.57736587524414
    6. ' (' → logprob: -12.70236587524414
    7. '(self' → logprob: -12.70236587524414
    8. ' not' → logprob: -12.95236587524414
    9. ' ' → logprob: -13.20236587524414
    10. ' row' → logprob: -13.32736587524414

Token 72: '.grid' (ID: 19269)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.12077229470014572
    2. '.grid' → logprob: -2.245772361755371
    3. ' .' → logprob: -5.245772361755371
    4. '.n' → logprob: -6.120772361755371
    5. '.s' → logprob: -8.995772361755371
    6. '.g' → logprob: -9.870772361755371
    7. '.space' → logprob: -10.245772361755371
    8. '.cell' → logprob: -10.370772361755371
    9. '.m' → logprob: -10.495772361755371
    10. '.user' → logprob: -10.995772361755371

Token 73: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -5.200166469876422e-06
    2. '._' → logprob: -12.375004768371582
    3. '[_' → logprob: -15.500004768371582
    4. '_' → logprob: -16.0000057220459
    5. ' _' → logprob: -16.0000057220459
    6. '_maps' → logprob: -16.0000057220459
    7. '_MAP' → logprob: -16.6250057220459
    8. ''_' → logprob: -17.0000057220459
    9. '.' → logprob: -17.3750057220459
    10. '```' → logprob: -17.7500057220459

Token 74: '[row' (ID: 35899)
  Prédit: '[row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[row' → logprob: -9.088346359931165e-07
    2. ' [' → logprob: -15.125000953674316
    3. '[col' → logprob: -15.375000953674316
    4. '[' → logprob: -15.750000953674316
    5. '[self' → logprob: -16.5
    6. '[line' → logprob: -17.25
    7. '[
' → logprob: -17.5
    8. '```' → logprob: -18.0
    9. '   ' → logprob: -18.25
    10. '\[' → logprob: -18.25

Token 75: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.00028159678913652897
    2. '[col' → logprob: -8.25028133392334
    3. ']' → logprob: -11.25028133392334
    4. ' ][' → logprob: -12.50028133392334
    5. '"][' → logprob: -13.87528133392334
    6. '[row' → logprob: -14.00028133392334
    7. ''][' → logprob: -14.12528133392334
    8. '[' → logprob: -15.12528133392334
    9. '           ' → logprob: -15.50028133392334
    10. 'col' → logprob: -15.75028133392334

Token 76: 'col' (ID: 1798)
  Prédit: 'col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'col' → logprob: -0.0002969703928101808
    2. ' col' → logprob: -8.125296592712402
    3. 'c' → logprob: -15.125296592712402
    4. '	col' → logprob: -15.125296592712402
    5. ' ' → logprob: -16.75029754638672
    6. 'colm' → logprob: -16.87529754638672
    7. 'coli' → logprob: -17.00029754638672
    8. '[col' → logprob: -17.25029754638672
    9. '_col' → logprob: -17.25029754638672
    10. 'co' → logprob: -17.37529754638672

Token 77: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.01654031313955784
    2. ' ]' → logprob: -4.64154052734375
    3. ')' → logprob: -5.76654052734375
    4. ''' → logprob: -6.26654052734375
    5. ' ==' → logprob: -7.51654052734375
    6. ' !=' → logprob: -7.64154052734375
    7. ']==' → logprob: -9.01654052734375
    8. ' )' → logprob: -9.14154052734375
    9. '==' → logprob: -9.26654052734375
    10. '!=' → logprob: -9.51654052734375

Token 78: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3860281705856323
    2. ' !=' → logprob: -1.3860281705856323
    3. '.' → logprob: -3.886028289794922
    4. ''' → logprob: -4.011028289794922
    5. '==' → logprob: -4.261028289794922
    6. '!=' → logprob: -4.386028289794922
    7. '=' → logprob: -7.136028289794922
    8. ' ' → logprob: -7.261028289794922
    9. '"' → logprob: -7.511028289794922
    10. ' '' → logprob: -7.636028289794922

Token 79: ' '.' (ID: 12662)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08049187064170837
    2. ''.' → logprob: -2.705491781234741
    3. ' '' → logprob: -4.83049201965332
    4. ' '.'' → logprob: -6.08049201965332
    5. '"' → logprob: -8.83049201965332
    6. ''o' → logprob: -10.95549201965332
    7. '"."' → logprob: -11.20549201965332
    8. '.' → logprob: -11.45549201965332
    9. ' ' → logprob: -11.95549201965332
    10. ''-' → logprob: -12.33049201965332

Token 80: ''

' (ID: 7497)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '"' → logprob: -0.1802472621202469
    2. ''' → logprob: -1.8052473068237305
    3. '"'' → logprob: -8.30524730682373
    4. ''"' → logprob: -8.55524730682373
    5. '```' → logprob: -10.55524730682373
    6. ''''' → logprob: -11.18024730682373
    7. '"
' → logprob: -12.68024730682373
    8. '"""' → logprob: -12.68024730682373
    9. '`' → logprob: -12.68024730682373
    10. '"`' → logprob: -12.93024730682373

Token 81: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 82: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18414364755153656
    2. '       ' → logprob: -3.184143543243408
    3. '    
' → logprob: -3.559143543243408
    4. ' 
' → logprob: -3.684143543243408
    5. '
' → logprob: -4.059143543243408
    6. ' ' → logprob: -4.184143543243408
    7. '    ' → logprob: -4.309143543243408
    8. '        
' → logprob: -5.059143543243408
    9. 'def' (adapté à ' def') → logprob: -5.184143543243408
    10. 'n' → logprob: -5.184143543243408

Token 83: ' segment' (ID: 14806)
  Prédit: ' neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' neighbors' → logprob: -0.6476401090621948
    2. ' valid' → logprob: -1.7726401090621948
    3. ' in' → logprob: -2.0226402282714844
    4. 'neighbors' → logprob: -3.0226402282714844
    5. ' get' → logprob: -3.1476402282714844
    6. ' is' → logprob: -3.2726402282714844
    7. ' neighbours' → logprob: -4.647640228271484
    8. ' ' → logprob: -5.272640228271484
    9. ' bfs' → logprob: -5.272640228271484
    10. '_neighbors' → logprob: -5.522640228271484

Token 84: '_free' (ID: 21204)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.5574175715446472
    2. '_' → logprob: -1.057417631149292
    3. '_s' → logprob: -3.682417631149292
    4. '_length' → logprob: -4.057417392730713
    5. '_size' → logprob: -4.432417392730713
    6. '_lengths' → logprob: -4.932417392730713
    7. '_cells' → logprob: -5.182417392730713
    8. '_at' → logprob: -5.682417392730713
    9. '_positions' → logprob: -5.932417392730713
    10. '_sizes' → logprob: -6.182417392730713

Token 85: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1406286060810089
    2. '(self' → logprob: -2.5156285762786865
    3. '_' → logprob: -3.3906285762786865
    4. '_from' → logprob: -5.390628814697266
    5. 's' → logprob: -5.765628814697266
    6. '_at' → logprob: -5.890628814697266
    7. '_length' → logprob: -7.015628814697266
    8. '_count' → logprob: -7.015628814697266
    9. '_cells' → logprob: -7.265628814697266
    10. '_in' → logprob: -7.390628814697266

Token 86: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.16426637768745422
    2. '(' → logprob: -1.9142663478851318
    3. '_' → logprob: -6.789266586303711
    4. 's' → logprob: -7.164266586303711
    5. 'self' → logprob: -7.414266586303711
    6. ' (' → logprob: -7.539266586303711
    7. ')' → logprob: -7.914266586303711
    8. '(s' → logprob: -8.414266586303711
    9. '_between' → logprob: -9.289266586303711
    10. ',' → logprob: -9.914266586303711

Token 87: ' start' (ID: 1604)
  Prédit: ' self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2867533564567566
    2. ' row' → logprob: -1.6617534160614014
    3. 'self' → logprob: -2.9117534160614014
    4. 'row' → logprob: -5.411753177642822
    5. ' start' → logprob: -7.911753177642822
    6. ')' → logprob: -8.53675365447998
    7. 'start' → logprob: -10.16175365447998
    8. 'r' → logprob: -11.78675365447998
    9. ' col' → logprob: -12.28675365447998
    10. ' ' → logprob: -12.28675365447998

Token 88: '_row' (ID: 19157)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.21435365080833435
    2. '<|end|>' → logprob: -2.464353561401367
    3. '_row' → logprob: -3.089353561401367
    4. ')' → logprob: -3.589353561401367
    5. '_col' → logprob: -4.714353561401367
    6. ' ,' → logprob: -4.714353561401367
    7. '<|end|>' → logprob: -4.714353561401367
    8. ':' → logprob: -5.464353561401367
    9. '_' → logprob: -7.089353561401367
    10. '_cell' → logprob: -7.464353561401367

Token 89: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00041398804751224816
    2. '<|end|>' → logprob: -8.50041389465332
    3. ' ,' → logprob: -9.12541389465332
    4. ':' → logprob: -9.62541389465332
    5. '<|end|>' → logprob: -10.62541389465332
    6. ')' → logprob: -12.00041389465332
    7. ':int' → logprob: -13.50041389465332
    8. '=' → logprob: -14.25041389465332
    9. '‌,' → logprob: -14.37541389465332
    10. ',int' → logprob: -14.50041389465332

Token 90: ' int' (ID: 677)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.747814349073451e-05
    2. ' ,' → logprob: -11.250017166137695
    3. ',
' → logprob: -13.500017166137695
    4. ')' → logprob: -13.750017166137695
    5. '<|end|>' → logprob: -14.625017166137695
    6. ':' → logprob: -14.875017166137695
    7. '<|end|>' → logprob: -15.000017166137695
    8. '‌,' → logprob: -15.375017166137695
    9. ',int' → logprob: -15.375017166137695
    10. ',

' → logprob: -15.875017166137695

Token 92: ' start' (ID: 1604)
  Prédit: ' end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.3076370656490326
    2. ' start' → logprob: -1.557637095451355
    3. 'end' → logprob: -3.3076369762420654
    4. 'start' → logprob: -4.1826372146606445
    5. ' col' → logprob: -6.8076372146606445
    6. ' ' → logprob: -7.4326372146606445
    7. ',' → logprob: -8.557637214660645
    8. ')' → logprob: -9.057637214660645
    9. ' row' → logprob: -9.307637214660645
    10. '    ' → logprob: -9.807637214660645

Token 93: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -0.4843107759952545
    2. '_row' → logprob: -1.1093107461929321
    3. '_' → logprob: -2.9843108654022217
    4. '<|end|>' → logprob: -6.984310626983643
    5. ')' → logprob: -7.484310626983643
    6. '_cell' → logprob: -7.609310626983643
    7. '_column' → logprob: -7.734310626983643
    8. ',' → logprob: -8.3593111038208
    9. 'col' → logprob: -8.4843111038208
    10. ':' → logprob: -8.9843111038208

Token 94: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017636561824474484
    2. ':' → logprob: -8.875176429748535
    3. ')' → logprob: -10.875176429748535
    4. '<|end|>' → logprob: -12.125176429748535
    5. ' ,' → logprob: -12.250176429748535
    6. '):' → logprob: -12.250176429748535
    7. '=' → logprob: -14.125176429748535
    8. '<|end|>' → logprob: -14.625176429748535
    9. '‌,' → logprob: -15.500176429748535
    10. ',
' → logprob: -15.875176429748535

Token 95: ' int' (ID: 677)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07701434195041656
    2. ' ,' → logprob: -3.327014446258545
    3. ' int' → logprob: -4.077014446258545
    4. 'int' → logprob: -4.452014446258545
    5. ',int' → logprob: -4.952014446258545
    6. ' ' → logprob: -6.202014446258545
    7. ')' → logprob: -8.827013969421387
    8. ':int' → logprob: -8.952013969421387
    9. '<|end|>' → logprob: -8.952013969421387
    10. '<|end|>' → logprob: -10.827013969421387

Token 96: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.249780638725497e-05
    2. ' ,' → logprob: -10.375032424926758
    3. ')' → logprob: -14.375032424926758
    4. ',
' → logprob: -14.625032424926758
    5. '),' → logprob: -16.875032424926758
    6. ',end' → logprob: -17.000032424926758
    7. ' ' → logprob: -17.375032424926758
    8. '   ' → logprob: -17.750032424926758
    9. '‌,' → logprob: -18.000032424926758
    10. ',start' → logprob: -18.125032424926758

Token 97: ' length' (ID: 5517)
  Prédit: ' end'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' end' → logprob: -0.028277764096856117
    2. 'end' → logprob: -3.77827787399292
    3. '    ' → logprob: -6.90327787399292
    4. '        ' → logprob: -7.02827787399292
    5. ' length' → logprob: -7.15327787399292
    6. '                            ' → logprob: -7.27827787399292
    7. ' direction' → logprob: -8.153277397155762
    8. '                             ' → logprob: -8.403277397155762
    9. '                                ' → logprob: -8.653277397155762
    10. 'length' → logprob: -9.028277397155762

Token 98: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016305554658174515
    2. ',' → logprob: -4.141305446624756
    3. '):' → logprob: -8.516305923461914
    4. ':int' → logprob: -10.391305923461914
    5. ' :' → logprob: -10.516305923461914
    6. ' ,' → logprob: -11.641305923461914
    7. ')' → logprob: -12.891305923461914
    8. ' ):' → logprob: -15.016305923461914
    9. '):
' → logprob: -15.141305923461914
    10. ':,' → logprob: -15.266305923461914

Token 99: ' int' (ID: 677)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9272997379302979
    2. ' int' → logprob: -0.9272997379302979
    3. 'int' → logprob: -1.6772997379302979
    4. ')' → logprob: -4.677299499511719
    5. ' )' → logprob: -4.927299499511719
    6. ' ):' → logprob: -6.802299499511719
    7. ',' → logprob: -7.052299499511719
    8. ' ,' → logprob: -7.177299499511719
    9. ':int' → logprob: -7.427299499511719
    10. ':' → logprob: -7.552299499511719

Token 100: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0022173458710312843
    2. ')' → logprob: -6.2522172927856445
    3. ' ,' → logprob: -8.752217292785645
    4. '):' → logprob: -9.002217292785645
    5. ':' → logprob: -12.627217292785645
    6. ' )' → logprob: -13.377217292785645
    7. ' ' → logprob: -13.752217292785645
    8. ',
' → logprob: -14.752217292785645
    9. '):
' → logprob: -15.002217292785645
    10. ' ):' → logprob: -15.127217292785645

Token 101: ' direction' (ID: 9262)
  Prédit: ' horizontal'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' horizontal' → logprob: -0.10932207107543945
    2. ' direction' → logprob: -3.1093220710754395
    3. 'horizontal' → logprob: -3.6093220710754395
    4. ' is' → logprob: -3.7343220710754395
    5. ' vertical' → logprob: -6.2343220710754395
    6. ' horizontally' → logprob: -6.2343220710754395
    7. ' ' → logprob: -6.7343220710754395
    8. '   ' → logprob: -7.2343220710754395
    9. ' orientation' → logprob: -7.3593220710754395
    10. ' horiz' → logprob: -8.109321594238281

Token 102: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.10068041831254959
    2. '):' → logprob: -2.350680351257324
    3. ',' → logprob: -8.975680351257324
    4. ')' → logprob: -8.975680351257324
    5. ' :' → logprob: -9.225680351257324
    6. ' ):' → logprob: -9.350680351257324
    7. '<|end|>' → logprob: -11.100680351257324
    8. '):
' → logprob: -11.850680351257324
    9. ' ' → logprob: -12.850680351257324
    10. '=' → logprob: -13.225680351257324

Token 103: ' '' (ID: 461)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.4908086657524109
    2. ' '' → logprob: -0.9908086657524109
    3. ')' → logprob: -4.740808486938477
    4. ''' → logprob: -6.240808486938477
    5. ' )' → logprob: -6.365808486938477
    6. ' "' → logprob: -6.740808486938477
    7. ' str' → logprob: -6.865808486938477
    8. ''s' → logprob: -7.365808486938477
    9. ' ')' → logprob: -8.490808486938477
    10. ':' → logprob: -8.865808486938477

Token 104: 'Coordinates' (ID: 49736)
  Prédit: 'str'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'str' → logprob: -0.004195098299533129
    2. 'int' → logprob: -6.629195213317871
    3. 'tuple' → logprob: -7.254195213317871
    4. 'Tuple' → logprob: -7.504195213317871
    5. '')' → logprob: -8.379195213317871
    6. 'horizontal' → logprob: -8.504195213317871
    7. ' str' → logprob: -8.629195213317871
    8. ''' → logprob: -8.754195213317871
    9. 's' → logprob: -8.754195213317871
    10. 'Grid' → logprob: -9.254195213317871

Token 105: '.Direction' (ID: 107082)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '')' → logprob: -0.008180840872228146
    2. ''):' → logprob: -5.258180618286133
    3. ')' → logprob: -6.758180618286133
    4. ''):
' → logprob: -7.258180618286133
    5. ''' → logprob: -7.383180618286133
    6. '',' → logprob: -8.383180618286133
    7. ' ')' → logprob: -9.758180618286133
    8. '[' → logprob: -10.383180618286133
    9. '')->' → logprob: -10.758180618286133
    10. '['' → logprob: -10.883180618286133

Token 106: '')' (ID: 1542)
  Prédit: '')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.002238993300125003
    2. ')' → logprob: -6.752239227294922
    3. ''):' → logprob: -7.377239227294922
    4. ''):
' → logprob: -8.127239227294922
    5. ''' → logprob: -9.502239227294922
    6. '.')' → logprob: -10.627239227294922
    7. '',' → logprob: -11.127239227294922
    8. ''):
' → logprob: -12.002239227294922
    9. ' ')' → logprob: -12.127239227294922
    10. '`)' → logprob: -12.502239227294922

Token 107: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001123668160289526
    2. '):' → logprob: -7.001123905181885
    3. ' :' → logprob: -8.876123428344727
    4. ':
' → logprob: -11.126123428344727
    5. ')' → logprob: -11.126123428344727
    6. '<|end|>' → logprob: -11.126123428344727
    7. ' ->' → logprob: -11.501123428344727
    8. '->' → logprob: -12.626123428344727
    9. ')->' → logprob: -12.626123428344727
    10. ':**' → logprob: -13.126123428344727

Token 108: ' bool' (ID: 3792)
  Prédit: ' bool'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' bool' → logprob: -0.01256545726209879
    2. 'bool' → logprob: -4.387565612792969
    3. ' ' → logprob: -10.762565612792969
    4. ' 
' → logprob: -11.887565612792969
    5. ' True' → logprob: -11.887565612792969
    6. '	bool' → logprob: -12.012565612792969
    7. ' ' → logprob: -12.137565612792969
    8. '<bool' → logprob: -13.137565612792969
    9. '   ' → logprob: -13.637565612792969
    10. ' None' → logprob: -13.887565612792969

Token 109: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00044318195432424545
    2. '):' → logprob: -8.000443458557129
    3. ' :' → logprob: -10.000443458557129
    4. ':
' → logprob: -10.000443458557129
    5. '<|end|>' → logprob: -11.625443458557129
    6. ':return' → logprob: -13.125443458557129
    7. ':**' → logprob: -13.625443458557129
    8. '():' → logprob: -13.875443458557129
    9. ',' → logprob: -14.000443458557129
    10. ')' → logprob: -14.000443458557129

Token 110: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.7015783786773682
    2. ' ' → logprob: -1.4515783786773682
    3. ' :' → logprob: -1.4515783786773682
    4. '        ' → logprob: -3.951578378677368
    5. '            ' → logprob: -5.576578140258789
    6. '           ' → logprob: -6.076578140258789
    7. '):' → logprob: -6.576578140258789
    8. ')' → logprob: -6.826578140258789
    9. ' ):' → logprob: -6.826578140258789
    10. '       ' → logprob: -6.951578140258789

Token 111: ' for' (ID: 395)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.029438480734825134
    2. ' 
' → logprob: -4.279438495635986
    3. '        ' → logprob: -5.404438495635986
    4. '       ' → logprob: -5.904438495635986
    5. ':' → logprob: -6.154438495635986
    6. 'n' → logprob: -6.654438495635986
    7. '  
' → logprob: -7.029438495635986
    8. '<|end|>' → logprob: -7.404438495635986
    9. '
' → logprob: -7.529438495635986
    10. ',' → logprob: -8.029438018798828

Token 112: ' k' (ID: 372)
  Prédit: ' i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' i' → logprob: -9.865583706414327e-05
    2. 'i' → logprob: -10.00009822845459
    3. ' offset' → logprob: -10.87509822845459
    4. ' ' → logprob: -10.87509822845459
    5. ' _' → logprob: -11.62509822845459
    6. ' step' → logprob: -13.25009822845459
    7. ' d' → logprob: -13.87509822845459
    8. '	i' → logprob: -14.00009822845459
    9. '```' → logprob: -14.50009822845459
    10. ' idx' → logprob: -14.87509822845459

Token 113: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0010016091400757432
    2. 'in' → logprob: -7.001001834869385
    3. ' ' → logprob: -9.501001358032227
    4. '<|end|>' → logprob: -11.376001358032227
    5. ',' → logprob: -13.626001358032227
    6. '	in' → logprob: -14.126001358032227
    7. 's' → logprob: -15.126001358032227
    8. 'In' → logprob: -15.376001358032227
    9. '<|end|>' → logprob: -15.376001358032227
    10. '  ' → logprob: -15.501001358032227

Token 114: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.008615042082965374
    2. 'range' → logprob: -4.758615016937256
    3. '	range' → logprob: -15.133615493774414
    4. ' ' → logprob: -16.383615493774414
    5. '(range' → logprob: -17.133615493774414
    6. ' xrange' → logprob: -17.758615493774414
    7. '.range' → logprob: -18.633615493774414
    8. '_range' → logprob: -19.133615493774414
    9. '```' → logprob: -19.133615493774414
    10. 'rang' → logprob: -19.508615493774414

Token 115: '(length' (ID: 47037)
  Prédit: '(length'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(length' → logprob: -1.9146995327901095e-05
    2. 'length' → logprob: -11.625019073486328
    3. ' length' → logprob: -12.125019073486328
    4. '(' → logprob: -13.375019073486328
    5. '[length' → logprob: -14.000019073486328
    6. '(len' → logprob: -14.125019073486328
    7. ',length' → logprob: -14.250019073486328
    8. '	length' → logprob: -14.875019073486328
    9. '(l' → logprob: -15.125019073486328
    10. ' (' → logprob: -15.625019073486328

Token 116: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03840096667408943
    2. '):
' → logprob: -3.288400888442993
    3. ' ):' → logprob: -8.288400650024414
    4. ':' → logprob: -9.788400650024414
    5. ' ):
' → logprob: -10.913400650024414
    6. '<|end|>' → logprob: -11.538400650024414
    7. '):
' → logprob: -11.913400650024414
    8. '):

' → logprob: -12.288400650024414
    9. '           ' → logprob: -13.038400650024414
    10. ')' → logprob: -13.038400650024414

Token 117: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 118: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.03106173872947693
    2. '<|end|>' → logprob: -4.03106164932251
    3. ' 
' → logprob: -4.40606164932251
    4. '                ' → logprob: -8.656062126159668
    5. '               ' → logprob: -9.656062126159668
    6. ' if' → logprob: -9.656062126159668
    7. '
' → logprob: -9.781062126159668
    8. '            ' → logprob: -9.906062126159668
    9. '<|end|>' → logprob: -10.406062126159668
    10. ')' → logprob: -10.656062126159668

Token 119: ' direction' (ID: 9262)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1799507737159729
    2. ' direction' → logprob: -2.304950714111328
    3. 'not' → logprob: -3.054950714111328
    4. 'direction' → logprob: -4.054950714111328
    5. '                   ' → logprob: -8.429950714111328
    6. '(direction' → logprob: -9.804950714111328
    7. '               ' → logprob: -10.054950714111328
    8. '(not' → logprob: -10.554950714111328
    9. '                ' → logprob: -11.242450714111328
    10. '
                    
' → logprob: -11.367450714111328

Token 120: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.049971677362918854
    2. '==' → logprob: -3.049971580505371
    3. '.value' → logprob: -7.049971580505371
    4. 'is' → logprob: -8.549971580505371
    5. ' is' → logprob: -8.674971580505371
    6. '.is' → logprob: -9.924971580505371
    7. '<|end|>' → logprob: -10.674971580505371
    8. '.' → logprob: -11.549971580505371
    9. ' ' → logprob: -11.549971580505371
    10. 'value' → logprob: -11.924971580505371

Token 121: ' Coordinates' (ID: 128904)
  Prédit: ' Coordinates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Coordinates' → logprob: -0.16877585649490356
    2. 'Coordinates' → logprob: -1.9187757968902588
    3. ' '' → logprob: -5.293776035308838
    4. ' self' → logprob: -7.168776035308838
    5. ''' → logprob: -7.293776035308838
    6. ' ' → logprob: -7.543776035308838
    7. 'self' → logprob: -7.668776035308838
    8. ' Directions' → logprob: -7.793776035308838
    9. '            ' → logprob: -9.16877555847168
    10. '_coordinates' → logprob: -9.29377555847168

Token 122: '.Direction' (ID: 107082)
  Prédit: '.Direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Direction' → logprob: -0.03934512287378311
    2. '.' → logprob: -3.2893450260162354
    3. '.Horizontal' → logprob: -7.0393452644348145
    4. '.Right' → logprob: -9.039344787597656
    5. '.Down' → logprob: -9.539344787597656
    6. ''.' → logprob: -10.414344787597656
    7. '.Vertical' → logprob: -10.664344787597656
    8. '.Up' → logprob: -10.914344787597656
    9. '
' → logprob: -11.039344787597656
    10. 'Direction' → logprob: -11.039344787597656

Token 123: '.HORIZONTAL' (ID: 131895)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.6723527312278748
    2. '.HORIZONTAL' → logprob: -1.5473527908325195
    3. '.Horizontal' → logprob: -2.1723527908325195
    4. '.RIGHT' → logprob: -2.5473527908325195
    5. '.UP' → logprob: -3.2973527908325195
    6. '.Right' → logprob: -3.7973527908325195
    7. '.H' → logprob: -5.2973527908325195
    8. '.VERTICAL' → logprob: -5.2973527908325195
    9. '.DOWN' → logprob: -5.4223527908325195
    10. '.Up' → logprob: -5.7973527908325195

Token 124: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.35504791140556335
    2. ' and' → logprob: -1.3550479412078857
    3. ':
' → logprob: -3.3550479412078857
    4. 'and' → logprob: -5.980047702789307
    5. ' :' → logprob: -6.355047702789307
    6. ' ' → logprob: -7.730047702789307
    7. '<|end|>' → logprob: -7.730047702789307
    8. ' :
' → logprob: -8.480048179626465
    9. '):
' → logprob: -8.605048179626465
    10. '):' → logprob: -8.605048179626465

Token 125: '                   ' (ID: 699)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.7368306517601013
    2. '<|end|>' → logprob: -1.361830711364746
    3. ' ' → logprob: -1.736830711364746
    4. '               ' → logprob: -3.236830711364746
    5. ':' → logprob: -3.736830711364746
    6. ':
' → logprob: -4.486830711364746
    7. '                ' → logprob: -5.861830711364746
    8. ' 
' → logprob: -5.986830711364746
    9. '<|end|>' → logprob: -6.236830711364746
    10. 'and' → logprob: -6.611830711364746

Token 126: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.6771267652511597
    2. 'if' (adapté à ' if') → logprob: -0.8021267652511597
    3. '
' → logprob: -3.927126884460449
    4. '                   ' → logprob: -5.052126884460449
    5. '               ' → logprob: -5.677126884460449
    6. ' and' → logprob: -5.927126884460449
    7. ' 
' → logprob: -6.177126884460449
    8. ' ' → logprob: -6.552126884460449
    9. '                       ' → logprob: -6.677126884460449
    10. '                    
' → logprob: -6.677126884460449

Token 127: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.3517123758792877
    2. ' not' → logprob: -1.3517123460769653
    3. 'start' → logprob: -3.351712465286255
    4. ' start' → logprob: -6.101712226867676
    5. '           ' → logprob: -9.226712226867676
    6. '                   ' → logprob: -9.351712226867676
    7. 'self' → logprob: -9.476712226867676
    8. '(not' → logprob: -9.726712226867676
    9. '               ' → logprob: -10.101712226867676
    10. '   ' → logprob: -10.476712226867676

Token 128: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.42877551913261414
    2. 'self' → logprob: -1.0537755489349365
    3. '(self' → logprob: -10.053775787353516
    4. ' (' → logprob: -11.303775787353516
    5. '0' → logprob: -11.553775787353516
    6. ' ' → logprob: -12.303775787353516
    7. '(' → logprob: -13.053775787353516
    8. ' ' → logprob: -13.553775787353516
    9. '	self' → logprob: -13.928775787353516
    10. '1' → logprob: -15.428775787353516

Token 129: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -8.435139898210764e-05
    2. 'is' → logprob: -9.750083923339844
    3. '.' → logprob: -10.750083923339844
    4. '.grid' → logprob: -13.125083923339844
    5. ' .' → logprob: -13.125083923339844
    6. '_.' → logprob: -15.250083923339844
    7. '.cell' → logprob: -16.750083923339844
    8. '._' → logprob: -16.875083923339844
    9. '..' → logprob: -17.125083923339844
    10. '       ' → logprob: -17.250083923339844

Token 130: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -4.60414821645827e-06
    2. '_' → logprob: -12.375004768371582
    3. '_Cell' → logprob: -15.750004768371582
    4. ' _' → logprob: -16.125003814697266
    5. '_CELL' → logprob: -17.125003814697266
    6. '_c' → logprob: -17.500003814697266
    7. '_cells' → logprob: -17.500003814697266
    8. 'cell' → logprob: -18.000003814697266
    9. '<Cell' → logprob: -18.125003814697266
    10. ' cell' → logprob: -18.625003814697266

Token 131: '_free' (ID: 21204)
  Prédit: '_free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_free' → logprob: -2.3080716346157715e-05
    2. '_' → logprob: -11.125022888183594
    3. '_f' → logprob: -12.000022888183594
    4. '_safe' → logprob: -13.875022888183594
    5. '_fr' → logprob: -14.875022888183594
    6. 'free' → logprob: -15.625022888183594
    7. '_cell' → logprob: -15.875022888183594
    8. '_Free' → logprob: -15.875022888183594
    9. ' _' → logprob: -16.000022888183594
    10. '_FREE' → logprob: -16.250022888183594

Token 132: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.03809209540486336
    2. '(' → logprob: -3.2880921363830566
    3. '(
' → logprob: -10.038091659545898
    4. '(row' → logprob: -12.538091659545898
    5. '(

' → logprob: -13.788091659545898
    6. '(end' → logprob: -14.288091659545898
    7. 'start' → logprob: -14.413091659545898
    8. '(s' → logprob: -15.038091659545898
    9. '((' → logprob: -15.163091659545898
    10. ' (' → logprob: -15.788091659545898

Token 133: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -0.0009252764866687357
    2. '_col' → logprob: -7.000925064086914
    3. '_' → logprob: -12.250925064086914
    4. 'row' → logprob: -12.500925064086914
    5. ' _' → logprob: -14.125925064086914
    6. '_Row' → logprob: -14.375925064086914
    7. '(row' → logprob: -14.750925064086914
    8. '_cell' → logprob: -14.750925064086914
    9. 'Row' → logprob: -15.125925064086914
    10. ' ' → logprob: -15.125925064086914

Token 134: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015314090996980667
    2. ' ,' → logprob: -6.626531600952148
    3. ',start' → logprob: -8.876531600952148
    4. ',
' → logprob: -9.751531600952148
    5. '<|end|>' → logprob: -13.626531600952148
    6. '[start' → logprob: -13.751531600952148
    7. 'start' → logprob: -14.126531600952148
    8. ' ' → logprob: -14.251531600952148
    9. ',

' → logprob: -14.251531600952148
    10. ')' → logprob: -14.376531600952148

Token 135: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.2519460618495941
    2. ' start' → logprob: -1.5019460916519165
    3. ' ' → logprob: -11.751946449279785
    4. '(start' → logprob: -12.876946449279785
    5. '
' → logprob: -13.376946449279785
    6. '[start' → logprob: -13.626946449279785
    7. '```' → logprob: -13.876946449279785
    8. ')' → logprob: -14.376946449279785
    9. '=start' → logprob: -14.751946449279785
    10. '   ' → logprob: -15.001946449279785

Token 136: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -2.3676733690081164e-05
    2. '_' → logprob: -12.25002384185791
    3. 'col' → logprob: -12.50002384185791
    4. '+' → logprob: -12.50002384185791
    5. '_row' → logprob: -12.75002384185791
    6. '_cols' → logprob: -13.62502384185791
    7. '_COL' → logprob: -13.75002384185791
    8. '_c' → logprob: -13.75002384185791
    9. '_column' → logprob: -13.87502384185791
    10. '_co' → logprob: -14.00002384185791

Token 137: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.03389948233962059
    2. '+' → logprob: -4.033899307250977
    3. '+k' → logprob: -4.158899307250977
    4. ' ' → logprob: -13.783899307250977
    5. ' ' → logprob: -16.033899307250977
    6. ' +
' → logprob: -17.033899307250977
    7. '   ' → logprob: -17.158899307250977
    8. '＋' → logprob: -17.158899307250977
    9. '    ' → logprob: -17.158899307250977
    10. 'k' → logprob: -17.283899307250977

Token 138: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.02324605919420719
    2. ' k' → logprob: -3.7732460498809814
    3. '	k' → logprob: -15.273245811462402
    4. ' ' → logprob: -15.898245811462402
    5. '
' → logprob: -16.27324676513672
    6. '   ' → logprob: -17.52324676513672
    7. '{k' → logprob: -18.52324676513672
    8. ' к' → logprob: -19.27324676513672
    9. '[k' → logprob: -19.64824676513672
    10. '    ' → logprob: -19.64824676513672

Token 139: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.11492903530597687
    2. '):
' → logprob: -2.364928960800171
    3. ')' → logprob: -4.23992919921875
    4. '):
' → logprob: -9.73992919921875
    5. ':' → logprob: -9.86492919921875
    6. ' ):' → logprob: -10.11492919921875
    7. '):

' → logprob: -10.61492919921875
    8. ' ):
' → logprob: -11.73992919921875
    9. '           ' → logprob: -12.23992919921875
    10. '               ' → logprob: -12.23992919921875

Token 140: '                       ' (ID: 968)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.062631368637085
    2. '               ' → logprob: -1.062631368637085
    3. '):
' → logprob: -2.062631368637085
    4. '):' → logprob: -2.937631368637085
    5. ':
' → logprob: -2.937631368637085
    6. '                       ' → logprob: -3.687631368637085
    7. ')' → logprob: -3.687631368637085
    8. '                   ' → logprob: -4.187631607055664
    9. '           ' → logprob: -5.562631607055664
    10. ' or' → logprob: -5.937631607055664

Token 141: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.2679862082004547
    2. 'return' (adapté à ' return') → logprob: -1.5179861783981323
    3. '                   ' → logprob: -5.517986297607422
    4. '
' → logprob: -5.517986297607422
    5. ' 
' → logprob: -5.767986297607422
    6. '               ' → logprob: -5.767986297607422
    7. '                       ' → logprob: -7.392986297607422
    8. '                           ' → logprob: -8.392986297607422
    9. '                ' → logprob: -8.767986297607422
    10. '                               ' → logprob: -8.892986297607422

Token 142: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -0.0009114635176956654
    2. ' False' → logprob: -7.000911235809326
    3. '(False' → logprob: -20.125911712646484
    4. 'false' → logprob: -21.875911712646484
    5. 'True' → logprob: -21.875911712646484
    6. '_false' → logprob: -22.000911712646484
    7. '=False' → logprob: -22.125911712646484
    8. 'F' → logprob: -23.625911712646484
    9. '.False' → logprob: -24.125911712646484
    10. 'FALSE' → logprob: -25.125911712646484

Token 143: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6517294049263
    2. '               ' → logprob: -1.4017293453216553
    3. '<|end|>' → logprob: -1.5267293453216553
    4. ')' → logprob: -5.651729583740234
    5. '\n' → logprob: -6.276729583740234
    6. '            ' → logprob: -6.901729583740234
    7. '<|end|>' → logprob: -6.901729583740234
    8. '       ' → logprob: -7.026729583740234
    9. '
' → logprob: -7.151729583740234
    10. ' return' → logprob: -7.276729583740234

Token 144: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.11974509060382843
    2. '           ' → logprob: -2.2447450160980225
    3. ')' → logprob: -6.244745254516602
    4. 'return' → logprob: -6.494745254516602
    5. '<|end|>' → logprob: -6.869745254516602
    6. ' return' → logprob: -7.619745254516602
    7. '       ' → logprob: -7.619745254516602
    8. 'else' → logprob: -8.494745254516602
    9. '                   ' → logprob: -8.869745254516602
    10. '	           ' → logprob: -9.119745254516602

Token 145: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.6898983716964722
    2. '               ' → logprob: -1.1898983716964722
    3. ' else' → logprob: -1.6898983716964722
    4. 'elif' → logprob: -4.814898490905762
    5. '           ' → logprob: -7.064898490905762
    6. ' elif' → logprob: -7.814898490905762
    7. ' or' → logprob: -9.939898490905762
    8. '                   ' → logprob: -10.314898490905762
    9. '	else' → logprob: -10.439898490905762
    10. ':
' → logprob: -11.314898490905762

Token 146: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2606346905231476
    2. ':
' → logprob: -1.5106346607208252
    3. '                   ' → logprob: -4.885634899139404
    4. ' if' → logprob: -7.760634899139404
    5. '           ' → logprob: -8.760634422302246
    6. '               ' → logprob: -8.760634422302246
    7. ' :' → logprob: -9.635634422302246
    8. ' :
' → logprob: -9.760634422302246
    9. '                    ' → logprob: -9.760634422302246
    10. 'if' → logprob: -10.010634422302246

Token 147: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.013595313765108585
    2. ' if' → logprob: -5.013595104217529
    3. '               ' → logprob: -6.013595104217529
    4. 'if' → logprob: -6.263595104217529
    5. '           ' → logprob: -6.388595104217529
    6. '                       ' → logprob: -8.638595581054688
    7. ':' → logprob: -9.013595581054688
    8. '                  ' → logprob: -9.138595581054688
    9. '                    ' → logprob: -9.138595581054688
    10. '```' → logprob: -9.888595581054688

Token 148: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.47410106658935547
    2. ' if' → logprob: -0.9741010665893555
    3. '                   ' → logprob: -10.724101066589355
    4. '               ' → logprob: -13.724101066589355
    5. ' ' → logprob: -14.974101066589355
    6. '           ' → logprob: -15.224101066589355
    7. '                       ' → logprob: -16.099102020263672
    8. '
' → logprob: -16.349102020263672
    9. '   ' → logprob: -16.474102020263672
    10. 'for' → logprob: -16.599102020263672

Token 149: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.1602257490158081
    2. 'not' → logprob: -1.910225749015808
    3. '                   ' → logprob: -14.910225868225098
    4. '(not' → logprob: -15.410225868225098
    5. '               ' → logprob: -15.535225868225098
    6. '	not' → logprob: -15.660225868225098
    7. '
' → logprob: -16.16022491455078
    8. '   ' → logprob: -16.16022491455078
    9. ' ' → logprob: -16.16022491455078
    10. '```' → logprob: -16.28522491455078

Token 150: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.34845712780952454
    2. ' self' → logprob: -1.2234570980072021
    3. ' ' → logprob: -12.473457336425781
    4. '(self' → logprob: -12.848457336425781
    5. '	self' → logprob: -13.723457336425781
    6. ' ' → logprob: -13.848457336425781
    7. '[self' → logprob: -14.535957336425781
    8. 'Self' → logprob: -14.535957336425781
    9. '
' → logprob: -14.723457336425781
    10. '```' → logprob: -15.473457336425781

Token 151: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -2.856408536899835e-05
    2. 'is' → logprob: -10.500028610229492
    3. '.' → logprob: -14.625028610229492
    4. '.user' → logprob: -15.375028610229492
    5. ' is' → logprob: -16.000028610229492
    6. '<|end|>' → logprob: -16.875028610229492
    7. ' .' → logprob: -17.250028610229492
    8. '.isnan' → logprob: -17.500028610229492
    9. 'user' → logprob: -18.625028610229492

Token 152: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -4.36574100604048e-06
    2. 'cell' → logprob: -13.250004768371582
    3. 'Cell' → logprob: -13.625004768371582
    4. '_Cell' → logprob: -14.250004768371582
    5. '_CELL' → logprob: -15.250004768371582
    6. '_cells' → logprob: -15.625004768371582
    7. '<Cell' → logprob: -15.875004768371582
    8. '_' → logprob: -16.625003814697266
    9. '-cell' → logprob: -17.750003814697266
    10. '.cell' → logprob: -17.750003814697266

Token 153: '_free' (ID: 21204)
  Prédit: '_free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_free' → logprob: -0.00525154173374176
    2. 'free' → logprob: -5.255251407623291
    3. 'Free' → logprob: -11.75525188446045
    4. '_cell' → logprob: -11.75525188446045
    5. '-free' → logprob: -14.63025188446045
    6. '_safe' → logprob: -14.75525188446045
    7. '.free' → logprob: -15.13025188446045
    8. 'row' → logprob: -15.25525188446045
    9. '_FREE' → logprob: -15.25525188446045
    10. ' free' → logprob: -15.63025188446045

Token 154: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -4.656383680412546e-05
    2. '(' → logprob: -10.000046730041504
    3. ' (' → logprob: -13.750046730041504
    4. 'start' → logprob: -16.625045776367188
    5. '(
' → logprob: -16.875045776367188
    6. '(st' → logprob: -17.375045776367188
    7. '(end' → logprob: -17.875045776367188
    8. '(s' → logprob: -18.625045776367188
    9. '[start' → logprob: -18.625045776367188
    10. ' start' → logprob: -18.875045776367188

Token 155: '_row' (ID: 19157)
  Prédit: '_row'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_row' → logprob: -3.0948158382670954e-05
    2. 'row' → logprob: -10.500030517578125
    3. ',' → logprob: -13.875030517578125
    4. 'Row' → logprob: -14.000030517578125
    5. '_col' → logprob: -14.625030517578125
    6. ' row' → logprob: -15.375030517578125
    7. '_,' → logprob: -15.375030517578125
    8. '_' → logprob: -15.500030517578125
    9. '```' → logprob: -16.625030517578125
    10. ' ' → logprob: -16.750030517578125

Token 156: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.021396523341536522
    2. '+' → logprob: -4.146396636962891
    3. ',' → logprob: -5.521396636962891
    4. ' ,' → logprob: -7.396396636962891
    5. ' ' → logprob: -7.771396636962891
    6. '+k' → logprob: -8.27139663696289
    7. ' +
' → logprob: -10.77139663696289
    8. '<|end|>' → logprob: -11.02139663696289
    9. ' ' → logprob: -12.52139663696289
    10. ')' → logprob: -12.89639663696289

Token 157: ' k' (ID: 372)
  Prédit: 'k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'k' → logprob: -0.16022604703903198
    2. ' k' → logprob: -1.9102261066436768
    3. ' ' → logprob: -13.785225868225098
    4. '
' → logprob: -14.535225868225098
    5. '1' → logprob: -16.160226821899414
    6. '	k' → logprob: -16.410226821899414
    7. '_k' → logprob: -17.410226821899414
    8. '<|end|>' → logprob: -17.535226821899414
    9. '{k' → logprob: -17.535226821899414
    10. ' к' → logprob: -17.785226821899414

Token 158: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.3425219549390022e-05
    2. ' ,' → logprob: -11.37501335144043
    3. ',start' → logprob: -13.50001335144043
    4. ',
' → logprob: -14.75001335144043
    5. ')' → logprob: -17.25001335144043
    6. 'start' → logprob: -17.37501335144043
    7. '```' → logprob: -17.37501335144043
    8. '`,' → logprob: -17.37501335144043
    9. '),' → logprob: -17.75001335144043
    10. '[start' → logprob: -18.00001335144043

Token 159: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.38687509298324585
    2. ' start' → logprob: -1.1368751525878906
    3. ' ' → logprob: -13.38687515258789
    4. '[start' → logprob: -13.88687515258789
    5. '
' → logprob: -14.38687515258789
    6. 'end' → logprob: -14.76187515258789
    7. '(start' → logprob: -15.88687515258789
    8. '           ' → logprob: -16.51187515258789
    9. ',start' → logprob: -16.76187515258789
    10. '=start' → logprob: -17.01187515258789

Token 160: '_col' (ID: 7255)
  Prédit: '_col'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_col' → logprob: -3.6789137084269896e-05
    2. 'col' → logprob: -10.37503719329834
    3. ',' → logprob: -12.87503719329834
    4. 'Col' → logprob: -13.12503719329834
    5. '_COL' → logprob: -14.87503719329834
    6. '_row' → logprob: -15.50003719329834
    7. ',col' → logprob: -16.250036239624023
    8. '```' → logprob: -16.625036239624023
    9. ',_' → logprob: -17.125036239624023
    10. '-col' → logprob: -17.125036239624023

Token 161: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.3870804011821747
    2. '):' → logprob: -1.137080430984497
    3. ' ):
' → logprob: -9.387080192565918
    4. ')' → logprob: -10.137080192565918
    5. ' ):' → logprob: -10.137080192565918
    6. '):
' → logprob: -10.762080192565918
    7. '):

' → logprob: -11.262080192565918
    8. ':' → logprob: -11.637080192565918
    9. '                       ' → logprob: -14.137080192565918
    10. ':
' → logprob: -14.512080192565918

Token 162: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.04165666177868843
    2. '                   ' → logprob: -3.416656732559204
    3. 'return' → logprob: -5.791656494140625
    4. '               ' → logprob: -5.916656494140625
    5. '           ' → logprob: -6.916656494140625
    6. ' return' → logprob: -7.041656494140625
    7. '       ' → logprob: -9.041656494140625
    8. '
' → logprob: -9.041656494140625
    9. '   ' → logprob: -9.666656494140625
    10. ':return' → logprob: -10.791656494140625

Token 163: ' return' (ID: 622)
  Prédit: ' return'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6969114542007446
    2. 'return' (adapté à ' return') → logprob: -0.6969114542007446
    3. 'False' → logprob: -5.696911334991455
    4. ' False' → logprob: -7.946911334991455
    5. '                       ' → logprob: -10.821911811828613
    6. '                   ' → logprob: -10.946911811828613
    7. '               ' → logprob: -12.696911811828613
    8. '
' → logprob: -13.571911811828613
    9. ':return' → logprob: -13.696911811828613
    10. '   ' → logprob: -13.946911811828613

Token 164: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -5.836499985889532e-05
    2. ' False' → logprob: -9.7500581741333
    3. 'F' → logprob: -20.250059127807617
    4. '=False' → logprob: -21.375059127807617
    5. '(False' → logprob: -21.500059127807617
    6. 'True' → logprob: -21.875059127807617
    7. 'false' → logprob: -22.125059127807617
    8. '_false' → logprob: -22.375059127807617
    9. '.False' → logprob: -23.000059127807617
    10. 'Fal' → logprob: -24.125059127807617

Token 165: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.012138623744249344
    2. '       ' → logprob: -4.512138843536377
    3. 'return' → logprob: -7.137138843536377
    4. '   ' → logprob: -9.012138366699219
    5. ' return' → logprob: -9.387138366699219
    6. '
' → logprob: -10.262138366699219
    7. '		' → logprob: -10.887138366699219
    8. '	return' → logprob: -11.387138366699219
    9. '            
' → logprob: -12.512138366699219
    10. '               ' → logprob: -12.512138366699219

Token 166: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.035176053643226624
    2. '       ' → logprob: -3.4101760387420654
    3. 'return' → logprob: -7.0351762771606445
    4. '   ' → logprob: -7.9101762771606445
    5. ' return' → logprob: -9.035176277160645
    6. '
' → logprob: -9.035176277160645
    7. '	return' → logprob: -11.535176277160645
    8. '		' → logprob: -11.660176277160645
    9. '	   ' → logprob: -12.785176277160645
    10. '```' → logprob: -12.785176277160645

Token 167: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.9029864072799683
    2. 'return' (adapté à ' return') → logprob: -1.0279864072799683
    3. '           ' → logprob: -1.7779864072799683
    4. ' return' → logprob: -2.902986526489258
    5. '   ' → logprob: -4.402986526489258
    6. '	return' → logprob: -7.402986526489258
    7. '
' → logprob: -9.027986526489258
    8. ' ' → logprob: -10.652986526489258
    9. '    ' → logprob: -11.027986526489258
    10. 'eturn' → logprob: -11.402986526489258

Token 168: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.25192907452583313
    2. ' True' → logprob: -1.5019290447235107
    3. '(True' → logprob: -17.501928329467773
    4. 'Tr' → logprob: -18.876928329467773
    5. ' ' → logprob: -19.501928329467773
    6. ' Tru' → logprob: -20.501928329467773
    7. '=True' → logprob: -21.251928329467773
    8. 'true' → logprob: -21.251928329467773
    9. 'False' → logprob: -21.751928329467773
    10. '   ' → logprob: -22.751928329467773

Token 169: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 170: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.43859145045280457
    2. '       ' → logprob: -2.063591480255127
    3. '<|end|>' → logprob: -2.313591480255127
    4. ' ' → logprob: -2.563591480255127
    5. ' 
' → logprob: -3.813591480255127
    6. '
' → logprob: -5.063591480255127
    7. ')' → logprob: -5.438591480255127
    8. '    ' → logprob: -6.063591480255127
    9. '```' → logprob: -6.313591480255127
    10. 'def' → logprob: -6.313591480255127

Token 171: ' class' (ID: 744)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.8992719650268555
    2. 'class' (adapté à ' class') → logprob: -0.8992719650268555
    3. ' class' → logprob: -2.0242719650268555
    4. '<|end|>' → logprob: -3.1492719650268555
    5. 'from' → logprob: -5.2742719650268555
    6. 'def' → logprob: -6.7742719650268555
    7. ' ' → logprob: -6.8992719650268555
    8. ' from' → logprob: -7.0242719650268555
    9. '<|end|>' → logprob: -7.2742719650268555
    10. 'import' → logprob: -7.6492719650268555

Token 172: ' Coordinates' (ID: 128904)
  Prédit: ' Coordinates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Coordinates' → logprob: -0.08022180199623108
    2. 'Coordinates' → logprob: -2.5802218914031982
    3. ' Solver' → logprob: -8.455222129821777
    4. '_coordinates' → logprob: -8.830222129821777
    5. 'coordinates' → logprob: -9.080222129821777
    6. ' Directions' → logprob: -10.017722129821777
    7. ' Point' → logprob: -10.080222129821777
    8. ' Queue' → logprob: -10.080222129821777
    9. ' Direction' → logprob: -10.455222129821777
    10. 'Solver' → logprob: -10.455222129821777

Token 173: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011100994423031807
    2. ':
' → logprob: -4.511100769042969
    3. '.' → logprob: -11.636100769042969
    4. '.Direction' → logprob: -11.636100769042969
    5. ':

' → logprob: -11.886100769042969
    6. '):' → logprob: -12.136100769042969
    7. '(Enum' → logprob: -12.386100769042969
    8. '(' → logprob: -12.511100769042969
    9. ':def' → logprob: -13.386100769042969
    10. ':**' → logprob: -13.511100769042969

Token 174: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.18448111414909363
    2. 'from' → logprob: -2.434481143951416
    3. 'import' → logprob: -3.309481143951416
    4. ' from' → logprob: -3.309481143951416
    5. ' class' → logprob: -5.684481143951416
    6. ' import' → logprob: -6.184481143951416
    7. '    ' → logprob: -7.434481143951416
    8. 'class' → logprob: -7.559481143951416
    9. '<|end|>' → logprob: -7.684481143951416
    10. ' ' → logprob: -8.309480667114258

Token 175: ' from' (ID: 591)
  Prédit: 'from'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'from' (adapté à ' from') → logprob: -0.006857215892523527
    2. ' from' → logprob: -5.006857395172119
    3. 'import' → logprob: -8.881856918334961
    4. 'class' → logprob: -13.006856918334961
    5. '   ' → logprob: -15.381856918334961
    6. ' class' → logprob: -15.631856918334961
    7. ' import' → logprob: -15.756856918334961
    8. '```' → logprob: -16.13185691833496
    9. '	from' → logprob: -16.88185691833496
    10. ' ' → logprob: -19.38185691833496

Token 176: ' enum' (ID: 15238)
  Prédit: ' enum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' enum' → logprob: -0.0015031944494694471
    2. 'enum' → logprob: -6.501502990722656
    3. ' ' → logprob: -15.001502990722656
    4. '	enum' → logprob: -15.001502990722656
    5. ' typing' → logprob: -16.001502990722656
    6. '_enum' → logprob: -16.876502990722656
    7. 'Enum' → logprob: -18.126502990722656
    8. ' abc' → logprob: -18.126502990722656
    9. '__' → logprob: -18.626502990722656
    10. '  ' → logprob: -18.626502990722656

Token 177: ' import' (ID: 1588)
  Prédit: ' import'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' import' → logprob: -0.004988605156540871
    2. 'import' → logprob: -5.379988670349121
    3. '<|end|>' → logprob: -8.004988670349121
    4. '	import' → logprob: -11.129988670349121
    5. '.Enum' → logprob: -11.879988670349121
    6. '<|end|>' → logprob: -12.004988670349121
    7. ' ' → logprob: -12.379988670349121
    8. ' ' → logprob: -13.629988670349121
    9. ' importar' → logprob: -15.004988670349121
    10. '.' → logprob: -15.754988670349121

Token 178: ' Enum' (ID: 35827)
  Prédit: ' Enum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Enum' → logprob: -0.002512996783480048
    2. 'Enum' → logprob: -6.0025129318237305
    3. ' Int' → logprob: -10.62751293182373
    4. '.Enum' → logprob: -11.37751293182373
    5. '(Enum' → logprob: -14.12751293182373
    6. 'Int' → logprob: -14.87751293182373
    7. '_enum' → logprob: -15.37751293182373
    8. '	Int' → logprob: -15.75251293182373
    9. 'enum' → logprob: -17.002513885498047
    10. '	' → logprob: -17.627513885498047

Token 179: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6351748108863831
    2. '       ' → logprob: -1.6351747512817383
    3. '<|end|>' → logprob: -1.6351747512817383
    4. 'class' → logprob: -3.2601747512817383
    5. '        
' → logprob: -4.260174751281738
    6. '<|end|>' → logprob: -4.510174751281738
    7. ' class' → logprob: -5.260174751281738
    8. '   ' → logprob: -5.635174751281738
    9. ' ' → logprob: -6.010174751281738
    10. '

' → logprob: -6.135174751281738

Token 180: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0511150024831295
    2. '<|end|>' → logprob: -3.301115036010742
    3. 'class' → logprob: -5.426115036010742
    4. '

' → logprob: -5.926115036010742
    5. '       ' → logprob: -6.051115036010742
    6. '<|end|>' → logprob: -6.551115036010742
    7. ' class' → logprob: -6.926115036010742
    8. '   ' → logprob: -7.926115036010742
    9. '        
' → logprob: -8.551115036010742
    10. ' ' → logprob: -8.801115036010742

Token 181: ' class' (ID: 744)
  Prédit: ' class'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' class' → logprob: -0.4744222164154053
    2. 'class' (adapté à ' class') → logprob: -0.9744222164154053
    3. '   ' → logprob: -8.724422454833984
    4. '	class' → logprob: -9.474422454833984
    5. '
' → logprob: -10.474422454833984
    6. 'from' → logprob: -10.849422454833984
    7. ' Direction' → logprob: -11.099422454833984
    8. ' from' → logprob: -11.849422454833984
    9. ' 
' → logprob: -11.849422454833984
    10. '    
' → logprob: -11.849422454833984

Token 182: ' Direction' (ID: 39049)
  Prédit: ' Direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Direction' → logprob: -0.07889385521411896
    2. 'Direction' → logprob: -2.5788938999176025
    3. '.Direction' → logprob: -13.078893661499023
    4. '_direction' → logprob: -14.828893661499023
    5. ' direction' → logprob: -15.078893661499023
    6. '(Direction' → logprob: -15.328893661499023
    7. 'class' → logprob: -15.453893661499023
    8. ' class' → logprob: -15.453893661499023
    9. ' Enum' → logprob: -15.828893661499023
    10. ' ' → logprob: -16.078893661499023

Token 183: '(Enum' (ID: 99859)
  Prédit: '(Enum'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Enum' → logprob: -0.00026538874953985214
    2. '(' → logprob: -8.250265121459961
    3. '(enum' → logprob: -12.500265121459961
    4. ':' → logprob: -15.750265121459961
    5. '(Environment' → logprob: -16.37526512145996
    6. '(Exception' → logprob: -16.50026512145996
    7. ' (' → logprob: -16.75026512145996
    8. '.Enum' → logprob: -17.87526512145996
    9. '(E' → logprob: -18.00026512145996
    10. '(Icons' → logprob: -18.25026512145996

Token 184: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002578751416876912
    2. '):
' → logprob: -6.3775787353515625
    3. ':' → logprob: -7.2525787353515625
    4. ',' → logprob: -9.627578735351562
    5. ')' → logprob: -9.877578735351562
    6. ' ):' → logprob: -10.502578735351562
    7. '<|end|>' → logprob: -11.877578735351562
    8. '>:' → logprob: -12.502578735351562
    9. '):

' → logprob: -12.877578735351562
    10. ' ' → logprob: -13.127578735351562

Token 185: '           ' (ID: 352)
  Prédit: ' H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.020197192206978798
    2. '.HORIZONTAL' → logprob: -4.52019739151001
    3. '           ' → logprob: -5.02019739151001
    4. 'H' → logprob: -6.77019739151001
    5. ' ' → logprob: -7.52019739151001
    6. '0' → logprob: -8.770196914672852
    7. '.VERTICAL' → logprob: -9.020196914672852
    8. '1' → logprob: -9.395196914672852
    9. ':' → logprob: -9.520196914672852
    10. ' =' → logprob: -9.770196914672852

Token 186: ' H' (ID: 487)
  Prédit: ' H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' H' → logprob: -0.5759796500205994
    2. 'H' (adapté à ' H') → logprob: -0.8259796500205994
    3. '.HORIZONTAL' → logprob: -11.200979232788086
    4. 'VERT' → logprob: -11.450979232788086
    5. ' ' → logprob: -12.200979232788086
    6. '_HORIZONTAL' → logprob: -12.200979232788086
    7. '   ' → logprob: -12.825979232788086
    8. '	H' → logprob: -13.700979232788086
    9. ' horizontal' → logprob: -14.700979232788086
    10. ' V' → logprob: -14.825979232788086

Token 187: 'ORIZONTAL' (ID: 76451)
  Prédit: 'ORIZONTAL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ORIZONTAL' → logprob: -0.008917202241718769
    2. 'O' → logprob: -4.758917331695557
    3. 'ORIZ' → logprob: -8.258916854858398
    4. 'OR' → logprob: -10.633916854858398
    5. 'orizontal' → logprob: -11.508916854858398
    6. '_HORIZONTAL' → logprob: -12.133916854858398
    7. 'ERTICAL' → logprob: -13.133916854858398
    8. '   ' → logprob: -14.883916854858398
    9. 'ORI' → logprob: -15.008916854858398
    10. '.HORIZONTAL' → logprob: -15.133916854858398

Token 188: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6940034627914429
    2. ' =' → logprob: -0.6940034627914429
    3. ',' → logprob: -7.069003582000732
    4. ':' → logprob: -13.444003105163574
    5. ' ' → logprob: -13.694003105163574
    6. '   ' → logprob: -14.069003105163574
    7. ' ,' → logprob: -14.944003105163574
    8. '<|end|>' → logprob: -15.194003105163574
    9. '    ' → logprob: -15.694003105163574
    10. '_' → logprob: -15.694003105163574

Token 189: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2526809275150299
    2. ' ' → logprob: -1.5026808977127075
    3. '1' → logprob: -7.502680778503418
    4. ''' → logprob: -9.127680778503418
    5. ' '' → logprob: -9.502680778503418
    6. ''H' → logprob: -11.252680778503418
    7. ''h' → logprob: -13.127680778503418
    8. '"' → logprob: -13.877680778503418
    9. ' "' → logprob: -14.752680778503418
    10. ''S' → logprob: -16.502681732177734

Token 190: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.11438002437353134
    2. ''' → logprob: -2.364380121231079
    3. '1' → logprob: -4.6143798828125
    4. ''H' → logprob: -5.6143798828125
    5. '"' → logprob: -8.3643798828125
    6. ' ' → logprob: -8.7393798828125
    7. ''h' → logprob: -9.1143798828125
    8. '"H' → logprob: -11.9893798828125
    9. ' '' → logprob: -12.1143798828125
    10. 'horizontal' → logprob: -13.2393798828125

Token 191: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.13916021585464478
    2. 'VERT' → logprob: -2.76416015625
    3. ' V' → logprob: -2.88916015625
    4. 'V' → logprob: -5.26416015625
    5. ',' → logprob: -6.26416015625
    6. '
' → logprob: -6.76416015625
    7. '.VERTICAL' → logprob: -7.01416015625
    8. ' ' → logprob: -7.38916015625
    9. ' vertical' → logprob: -7.76416015625
    10. '_VERTICAL' → logprob: -8.51416015625

Token 192: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.20122472941875458
    2. 'VERT' → logprob: -2.2012248039245605
    3. ' V' → logprob: -2.7012248039245605
    4. 'V' → logprob: -5.7012248039245605
    5. '   ' → logprob: -7.5762248039245605
    6. '       ' → logprob: -8.576224327087402
    7. '.VERTICAL' → logprob: -9.201224327087402
    8. ' ' → logprob: -9.201224327087402
    9. ' vertical' → logprob: -9.951224327087402
    10. '
' → logprob: -10.451224327087402

Token 193: ' V' (ID: 631)
  Prédit: 'VERT'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'VERT' → logprob: -0.08190162479877472
    2. ' V' → logprob: -2.5819015502929688
    3. 'V' (adapté à ' V') → logprob: -5.831901550292969
    4. '.VERTICAL' → logprob: -10.331901550292969
    5. '_VERTICAL' → logprob: -11.206901550292969
    6. ' vertical' → logprob: -11.706901550292969
    7. 'vertical' → logprob: -11.831901550292969
    8. '	V' → logprob: -12.456901550292969
    9. ' ' → logprob: -12.956901550292969
    10. 'Vertical' → logprob: -12.956901550292969

Token 194: 'ERTICAL' (ID: 104789)
  Prédit: 'ERTICAL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ERTICAL' → logprob: -0.0024842156562954187
    2. 'ERT' → logprob: -6.002484321594238
    3. 'VERT' → logprob: -12.002484321594238
    4. 'ert' → logprob: -14.127484321594238
    5. 'ER' → logprob: -14.252484321594238
    6. '_VERTICAL' → logprob: -14.877484321594238
    7. 'ORIZONTAL' → logprob: -15.252484321594238
    8. '   ' → logprob: -15.502484321594238
    9. 'E' → logprob: -15.752484321594238
    10. 'ERTA' → logprob: -16.627483367919922

Token 195: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 196: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.016035189852118492
    2. ' ' → logprob: -4.141035079956055
    3. '0' → logprob: -14.641035079956055
    4. '   ' → logprob: -15.641035079956055
    5. '           ' → logprob: -15.641035079956055
    6. ' ' → logprob: -16.766035079956055
    7. '  ' → logprob: -16.891035079956055
    8. '```' → logprob: -18.453535079956055
    9. '               ' → logprob: -18.516035079956055
    10. '       ' → logprob: -18.703535079956055

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.676292231422849e-05
    2. ' ' → logprob: -11.000017166137695
    3. '0' → logprob: -16.750017166137695
    4. '   ' → logprob: -17.500017166137695
    5. '```' → logprob: -19.125017166137695
    6. '  ' → logprob: -19.750017166137695
    7. '１' → logprob: -20.312517166137695
    8. '       ' → logprob: -20.937517166137695
    9. '۱' → logprob: -20.937517166137695
    10. ' ' → logprob: -21.187517166137695

Token 198: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 199: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 200: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.14151757955551147
    2. '   ' → logprob: -2.3915176391601562
    3. ' def' → logprob: -3.5165176391601562
    4. 'class' → logprob: -5.141517639160156
    5. '<|end|>' → logprob: -5.516517639160156
    6. '<|end|>' → logprob: -8.391517639160156
    7. '	def' → logprob: -8.766517639160156
    8. ' ' → logprob: -8.891517639160156
    9. '       ' → logprob: -9.266517639160156
    10. '
' → logprob: -9.391517639160156

Token 201: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.06145741045475006
    2. ' find' → logprob: -3.436457395553589
    3. ' place' → logprob: -3.811457395553589
    4. ' _' → logprob: -6.436457633972168
    5. ' solve' → logprob: -6.811457633972168
    6. ' ' → logprob: -7.061457633972168
    7. '__' → logprob: -7.311457633972168
    8. ' def' → logprob: -7.811457633972168
    9. ' calculate' → logprob: -8.686457633972168
    10. '_' → logprob: -8.811457633972168

Token 202: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.05104691535234451
    2. ' init' → logprob: -3.176046848297119
    3. ' _' → logprob: -5.426046848297119
    4. ' i' → logprob: -6.301046848297119
    5. '_init' → logprob: -7.176046848297119
    6. 'i' → logprob: -7.926046848297119
    7. ' ' → logprob: -8.176047325134277
    8. ' __' → logprob: -9.176047325134277
    9. '_' → logprob: -9.676047325134277
    10. '   ' → logprob: -9.801047325134277

Token 203: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0008423840627074242
    2. '(self' → logprob: -8.125842094421387
    3. '__' → logprob: -8.375842094421387
    4. '(' → logprob: -8.875842094421387
    5. '__(
' → logprob: -8.875842094421387
    6. '_(' → logprob: -11.000842094421387
    7. ' (' → logprob: -12.250842094421387
    8. '__((' → logprob: -12.875842094421387
    9. '<|end|>' → logprob: -13.000842094421387
    10. '<>(' → logprob: -13.125842094421387

Token 204: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007553085451945662
    2. ' self' → logprob: -7.250755310058594
    3. '
' → logprob: -10.375755310058594
    4. ')' → logprob: -12.000755310058594
    5. '   ' → logprob: -12.125755310058594
    6. ' ' → logprob: -13.750755310058594
    7. '0' → logprob: -14.375755310058594
    8. ',' → logprob: -15.625755310058594
    9. 'n' → logprob: -15.625755310058594
    10. '  ' → logprob: -16.000755310058594

Token 205: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0035841530188918114
    2. 'self' → logprob: -5.753584384918213
    3. ' self' → logprob: -8.253583908081055
    4. ' ,' → logprob: -9.753583908081055
    5. '<|end|>' → logprob: -10.503583908081055
    6. '(self' → logprob: -10.753583908081055
    7. '   ' → logprob: -12.003583908081055
    8. ',self' → logprob: -12.003583908081055
    9. ')' → logprob: -12.128583908081055
    10. ' ' → logprob: -12.128583908081055

Token 206: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.654435396194458
    2. 'self' → logprob: -1.529435396194458
    3. 'n' → logprob: -2.029435396194458
    4. ' self' → logprob: -2.029435396194458
    5. ' grid' → logprob: -7.654435157775879
    6. '   ' → logprob: -9.029435157775879
    7. 'grid' → logprob: -9.529435157775879
    8. ' ' → logprob: -9.904435157775879
    9. '```' → logprob: -11.341935157775879
    10. ')' → logprob: -11.591935157775879

Token 207: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015434302622452378
    2. ':' → logprob: -6.5015435218811035
    3. ' ,' → logprob: -10.501543045043945
    4. ':int' → logprob: -11.501543045043945
    5. ')' → logprob: -13.501543045043945
    6. '):' → logprob: -14.126543045043945
    7. '=' → logprob: -14.626543045043945
    8. '<|end|>' → logprob: -15.376543045043945
    9. ',int' → logprob: -16.001543045043945
    10. '‌,' → logprob: -16.126543045043945

Token 208: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.31413769721984863
    2. ' int' → logprob: -1.3141376972198486
    3. ',' → logprob: -8.18913745880127
    4. 'self' → logprob: -8.93913745880127
    5. '0' → logprob: -9.06413745880127
    6. ' self' → logprob: -9.56413745880127
    7. ':int' → logprob: -9.68913745880127
    8. ',int' → logprob: -9.93913745880127
    9. ' None' → logprob: -10.43913745880127
    10. ' ' → logprob: -10.56413745880127

Token 209: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.057743949990254e-05
    2. ' ,' → logprob: -11.000020980834961
    3. ':' → logprob: -13.375020980834961
    4. '<|end|>' → logprob: -14.125020980834961
    5. ',
' → logprob: -15.250020980834961
    6. ',int' → logprob: -15.500020980834961
    7. '‌,' → logprob: -15.625020980834961
    8. ',m' → logprob: -15.750020980834961
    9. '=' → logprob: -15.875020980834961
    10. ',n' → logprob: -15.875020980834961

Token 210: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.16023053228855133
    2. ' m' → logprob: -1.9102305173873901
    3. '   ' → logprob: -12.41023063659668
    4. '    ' → logprob: -14.03523063659668
    5. ' ' → logprob: -15.03523063659668
    6. ',' → logprob: -15.28523063659668
    7. 'n' → logprob: -15.66023063659668
    8. '  ' → logprob: -16.16023063659668
    9. '	m' → logprob: -16.53523063659668
    10. '```' → logprob: -16.66023063659668

Token 211: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00038717821007594466
    2. ':' → logprob: -8.250387191772461
    3. ' ,' → logprob: -9.750387191772461
    4. '=' → logprob: -10.875387191772461
    5. '):' → logprob: -10.875387191772461
    6. ')' → logprob: -11.375387191772461
    7. ':int' → logprob: -11.875387191772461
    8. '<|end|>' → logprob: -12.000387191772461
    9. ',int' → logprob: -12.875387191772461
    10. '<|end|>' → logprob: -14.250387191772461

Token 212: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.12695656716823578
    2. ' int' → logprob: -2.1269564628601074
    3. ':int' → logprob: -11.376956939697266
    4. ',int' → logprob: -12.376956939697266
    5. 'm' → logprob: -12.751956939697266
    6. '=int' → logprob: -13.001956939697266
    7. ',' → logprob: -13.251956939697266
    8. '<int' → logprob: -13.626956939697266
    9. '[int' → logprob: -13.626956939697266
    10. '(int' → logprob: -13.751956939697266

Token 213: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.8624639324116288e-06
    2. ' ,' → logprob: -13.375001907348633
    3. ',int' → logprob: -16.125001907348633
    4. ',
' → logprob: -16.625001907348633
    5. '):' → logprob: -16.875001907348633
    6. ')' → logprob: -17.375001907348633
    7. ',n' → logprob: -18.125001907348633
    8. '‌,' → logprob: -18.250001907348633
    9. ' ' → logprob: -18.500001907348633
    10. ',m' → logprob: -18.625001907348633

Token 214: ' d' (ID: 272)
  Prédit: ' grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.34860798716545105
    2. 'grid' → logprob: -1.2236080169677734
    3. '   ' → logprob: -10.098608016967773
    4. 'k' → logprob: -10.723608016967773
    5. ' ' → logprob: -11.223608016967773
    6. ' grids' → logprob: -11.411108016967773
    7. 'refresh' → logprob: -11.661108016967773
    8. ' k' → logprob: -11.723608016967773
    9. 'g' → logprob: -11.848608016967773
    10. '	grid' → logprob: -12.161108016967773

Token 215: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01827203668653965
    2. ',' → logprob: -5.1432719230651855
    3. '):' → logprob: -6.2682719230651855
    4. 'ata' → logprob: -6.6432719230651855
    5. ':int' → logprob: -6.6432719230651855
    6. 'ef' → logprob: -6.6432719230651855
    7. 'istance' → logprob: -6.7682719230651855
    8. 'ist' → logprob: -6.7682719230651855
    9. ')' → logprob: -7.2682719230651855
    10. 'e' → logprob: -7.6432719230651855

Token 216: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.059940118342638016
    2. ' int' → logprob: -2.9349400997161865
    3. ':int' → logprob: -5.559940338134766
    4. ')' → logprob: -7.559940338134766
    5. '[int' → logprob: -7.809940338134766
    6. ':' → logprob: -9.434940338134766
    7. ',' → logprob: -9.934940338134766
    8. '(int' → logprob: -10.184940338134766
    9. ',int' → logprob: -10.559940338134766
    10. '   ' → logprob: -11.184940338134766

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004213858861476183
    2. '):' → logprob: -5.504213809967041
    3. ')' → logprob: -9.0042142868042
    4. ' ,' → logprob: -12.0042142868042
    5. '):
' → logprob: -12.8792142868042
    6. ' ):' → logprob: -13.2542142868042
    7. ',
' → logprob: -13.6292142868042
    8. ':' → logprob: -15.6292142868042
    9. '),' → logprob: -16.004213333129883
    10. '   ' → logprob: -16.004213333129883

Token 218: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.36539778113365173
    2. ' grid' → logprob: -1.3653978109359741
    3. 'k' → logprob: -3.7403976917266846
    4. 'g' → logprob: -5.615397930145264
    5. 'l' → logprob: -5.990397930145264
    6. 'r' → logprob: -5.990397930145264
    7. 'p' → logprob: -6.240397930145264
    8. '   ' → logprob: -6.365397930145264
    9. 't' → logprob: -6.365397930145264
    10. 's' → logprob: -6.615397930145264

Token 219: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.00023762896307744086
    2. ':' → logprob: -9.250237464904785
    3. '_maps' → logprob: -9.875237464904785
    4. '_' → logprob: -10.000237464904785
    5. '):' → logprob: -10.500237464904785
    6. ')' → logprob: -11.500237464904785
    7. '_:' → logprob: -12.875237464904785
    8. 'map' → logprob: -13.750237464904785
    9. ')_' → logprob: -14.000237464904785
    10. 'Map' → logprob: -15.000237464904785

Token 220: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.016413090750575066
    2. '):' → logprob: -4.14141321182251
    3. '):
' → logprob: -8.266412734985352
    4. ')' → logprob: -9.141412734985352
    5. ' ):' → logprob: -11.641412734985352
    6. '=' → logprob: -13.516412734985352
    7. ':list' → logprob: -13.766412734985352
    8. '):

' → logprob: -13.891412734985352
    9. ' :' → logprob: -13.891412734985352
    10. ',' → logprob: -14.641412734985352

Token 221: ' list' (ID: 1562)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.16025713086128235
    2. ' list' → logprob: -1.91025710105896
    3. '[list' → logprob: -11.160257339477539
    4. 'List' → logprob: -11.410257339477539
    5. ')' → logprob: -12.285257339477539
    6. ':list' → logprob: -13.285257339477539
    7. ' ' → logprob: -15.035257339477539
    8. '(list' → logprob: -15.535257339477539
    9. '<|end|>' → logprob: -15.660257339477539
    10. '	list' → logprob: -16.16025733947754

Token 222: '[str' (ID: 33439)
  Prédit: '[str'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[str' → logprob: -1.981667537620524e-06
    2. '[
' → logprob: -13.625001907348633
    3. '<|end|>' → logprob: -15.000001907348633
    4. '[' → logprob: -15.375001907348633
    5. ')' → logprob: -16.000001907348633
    6. '[int' → logprob: -16.875001907348633
    7. ':str' → logprob: -17.625001907348633
    8. '):' → logprob: -18.250001907348633
    9. '):
' → logprob: -18.375001907348633
    10. '[String' → logprob: -18.500001907348633

Token 223: ']):
' (ID: 51989)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.23912379145622253
    2. ']):' → logprob: -1.739123821258545
    3. ')' → logprob: -3.864123821258545
    4. '):
' → logprob: -4.739123821258545
    5. ']):
' → logprob: -5.114123821258545
    6. ']' → logprob: -7.364123821258545
    7. '])' → logprob: -8.239123344421387
    8. ']:' → logprob: -8.364123344421387
    9. ':' → logprob: -10.239123344421387
    10. ',' → logprob: -10.614123344421387

Token 224: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012190674431622028
    2. '       ' → logprob: -5.012190818786621
    3. '):' → logprob: -6.012190818786621
    4. ':
' → logprob: -6.137190818786621
    5. ')' → logprob: -7.762190818786621
    6. '   ' → logprob: -8.762190818786621
    7. ',' → logprob: -9.012190818786621
    8. '):
' → logprob: -9.137190818786621
    9. ' :' → logprob: -10.887190818786621
    10. '<|end|>' → logprob: -12.137190818786621

Token 225: ' self' (ID: 1051)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6672046780586243
    2. 'self' (adapté à ' self') → logprob: -1.0422046184539795
    3. ' self' → logprob: -2.0422046184539795
    4. '   ' → logprob: -5.542204856872559
    5. '
' → logprob: -8.417204856872559
    6. '	self' → logprob: -9.542204856872559
    7. '        
' → logprob: -9.667204856872559
    8. '```' → logprob: -9.667204856872559
    9. ' ' → logprob: -10.792204856872559
    10. '           ' → logprob: -11.792204856872559

Token 226: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.004220620729029179
    2. '.' → logprob: -5.629220485687256
    3. ' .' → logprob: -7.629220485687256
    4. 'n' → logprob: -9.254220962524414
    5. '.grid' → logprob: -10.254220962524414
    6. '.m' → logprob: -13.879220962524414
    7. '.Grid' → logprob: -14.629220962524414
    8. ' n' → logprob: -15.004220962524414
    9. '.py' → logprob: -16.004220962524414
    10. '._' → logprob: -16.004220962524414

Token 227: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07009248435497284
    2. '=' → logprob: -2.6950924396514893
    3. ',' → logprob: -8.94509220123291
    4. '<|end|>' → logprob: -11.19509220123291
    5. ' ' → logprob: -12.07009220123291
    6. ' =
' → logprob: -12.94509220123291
    7. ')' → logprob: -14.44509220123291
    8. ' ,' → logprob: -14.94509220123291
    9. '=int' → logprob: -15.07009220123291
    10. '=n' → logprob: -15.07009220123291

Token 228: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.3868713676929474
    2. 'n' → logprob: -1.136871337890625
    3. '	n' → logprob: -15.886871337890625
    4. '<|end|>' → logprob: -16.761871337890625
    5. ')n' → logprob: -17.261871337890625
    6. '_n' → logprob: -17.261871337890625
    7. ' ' → logprob: -18.011871337890625
    8. '=n' → logprob: -18.386871337890625
    9. '$n' → logprob: -18.886871337890625
    10. '<|end|>' → logprob: -19.261871337890625

Token 229: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24989449977874756
    2. '<|end|>' → logprob: -2.374894618988037
    3. '
' → logprob: -2.874894618988037
    4. 'self' → logprob: -2.999894618988037
    5. ',' → logprob: -5.124894618988037
    6. 'm' → logprob: -5.499894618988037
    7. ' self' → logprob: -5.749894618988037
    8. '        
' → logprob: -6.124894618988037
    9. '<|end|>' → logprob: -6.249894618988037
    10. ' 
' → logprob: -6.374894618988037

Token 230: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.4306986331939697
    2. 'self' → logprob: -1.1806986331939697
    3. ' self' → logprob: -3.3056986331939697
    4. 'm' → logprob: -5.430698394775391
    5. '   ' → logprob: -7.305698394775391
    6. ' ' → logprob: -7.555698394775391
    7. ',' → logprob: -8.30569839477539
    8. '	self' → logprob: -9.18069839477539
    9. '        ' → logprob: -9.30569839477539
    10. '           ' → logprob: -10.55569839477539

Token 231: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.019314881414175034
    2. 'm' → logprob: -4.019314765930176
    3. ' self' → logprob: -6.769314765930176
    4. '       ' → logprob: -11.644314765930176
    5. '   ' → logprob: -12.269314765930176
    6. ' m' → logprob: -13.519314765930176
    7. ' ' → logprob: -15.144314765930176
    8. '  ' → logprob: -15.644314765930176
    9. 's' → logprob: -15.894314765930176
    10. '
' → logprob: -16.144315719604492

Token 232: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.07034030556678772
    2. '.' → logprob: -2.695340394973755
    3. 'm' → logprob: -8.445340156555176
    4. ' .' → logprob: -8.695340156555176
    5. ' m' → logprob: -11.320340156555176
    6. ',' → logprob: -12.070340156555176
    7. '   ' → logprob: -14.320340156555176
    8. ',m' → logprob: -14.320340156555176
    9. ' ' → logprob: -14.695340156555176
    10. ' =' → logprob: -14.820340156555176

Token 233: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.32465192675590515
    2. '=' → logprob: -1.3246519565582275
    3. '<|end|>' → logprob: -4.574651718139648
    4. ',' → logprob: -7.324651718139648
    5. ' ' → logprob: -8.449651718139648
    6. 'd' → logprob: -10.199651718139648
    7. '<|end|>' → logprob: -10.324651718139648
    8. ' =
' → logprob: -10.824651718139648
    9. 'm' → logprob: -10.949651718139648
    10. ')' → logprob: -11.449651718139648

Token 234: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.16022463142871857
    2. ' m' → logprob: -1.9102246761322021
    3. '<|end|>' → logprob: -14.910224914550781
    4. '	m' → logprob: -16.66022491455078
    5. ' ' → logprob: -17.41022491455078
    6. ' ' → logprob: -17.53522491455078
    7. '
' → logprob: -18.03522491455078
    8. '<|end|>' → logprob: -18.16022491455078
    9. 'м' → logprob: -18.41022491455078
    10. '=m' → logprob: -18.66022491455078

Token 235: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10392415523529053
    2. 'self' → logprob: -2.85392427444458
    3. '
' → logprob: -3.85392427444458
    4. ' self' → logprob: -4.85392427444458
    5. 'd' → logprob: -5.35392427444458
    6. '        
' → logprob: -6.10392427444458
    7. ',' → logprob: -6.10392427444458
    8. ' 
' → logprob: -7.10392427444458
    9. ' ' → logprob: -7.85392427444458
    10. '  
' → logprob: -7.85392427444458

Token 236: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47653576731681824
    2. ' self' → logprob: -1.2265357971191406
    3. 'd' → logprob: -2.6015357971191406
    4. ' d' → logprob: -4.851535797119141
    5. '       ' → logprob: -5.601535797119141
    6. ' ' → logprob: -9.97653579711914
    7. '   ' → logprob: -11.35153579711914
    8. '
' → logprob: -11.72653579711914
    9. '	self' → logprob: -11.85153579711914
    10. ' ' → logprob: -11.97653579711914

Token 237: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07892371714115143
    2. 'd' → logprob: -2.5789237022399902
    3. ' self' → logprob: -10.453924179077148
    4. '       ' → logprob: -12.453924179077148
    5. ' d' → logprob: -14.328924179077148
    6. '   ' → logprob: -15.703924179077148
    7. 's' → logprob: -15.953924179077148
    8. '
' → logprob: -16.82892417907715
    9. '        
' → logprob: -16.95392417907715
    10. '	self' → logprob: -17.57892417907715

Token 238: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.00014537633978761733
    2. '.grid' → logprob: -9.500144958496094
    3. 'd' → logprob: -10.500144958496094
    4. '.' → logprob: -10.625144958496094
    5. ' .' → logprob: -11.125144958496094
    6. 'self' → logprob: -14.125144958496094
    7. 'grid' → logprob: -14.750144958496094
    8. '
' → logprob: -15.125144958496094
    9. '.D' → logprob: -15.125144958496094
    10. ' d' → logprob: -15.250144958496094

Token 239: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.008705805987119675
    2. '=' → logprob: -4.7587056159973145
    3. '<|end|>' → logprob: -10.008706092834473
    4. ' ' → logprob: -10.133706092834473
    5. ',' → logprob: -12.633706092834473
    6. ' =
' → logprob: -13.383706092834473
    7. '_' → logprob: -15.133706092834473
    8. ' ,' → logprob: -15.258706092834473
    9. ' +=' → logprob: -15.383706092834473
    10. ')' → logprob: -15.508706092834473

Token 240: ' d' (ID: 272)
  Prédit: ' d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' d' → logprob: -0.002475777640938759
    2. 'd' → logprob: -6.002475738525391
    3. ' ' → logprob: -17.25247573852539
    4. ' ' → logprob: -18.62747573852539
    5. '	d' → logprob: -18.75247573852539
    6. '_d' → logprob: -20.37747573852539
    7. ' 
' → logprob: -20.62747573852539
    8. ')d' → logprob: -21.12747573852539
    9. ' д' → logprob: -21.62747573852539
    10. '=d' → logprob: -21.62747573852539

Token 241: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.40023311972618103
    2. 'self' → logprob: -1.4002331495285034
    3. '
' → logprob: -2.775233030319214
    4. '<|end|>' → logprob: -4.525233268737793
    5. ' self' → logprob: -5.025233268737793
    6. '   ' → logprob: -6.400233268737793
    7. ',' → logprob: -8.025233268737793
    8. ' 
' → logprob: -8.400233268737793
    9. '```' → logprob: -8.525233268737793
    10. '        
' → logprob: -8.650233268737793

Token 242: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10927964746952057
    2. 'self' → logprob: -2.3592796325683594
    3. ' self' → logprob: -4.734279632568359
    4. '
' → logprob: -8.98427963256836
    5. '   ' → logprob: -10.23427963256836
    6. '<|end|>' → logprob: -10.60927963256836
    7. '           ' → logprob: -10.73427963256836
    8. '	self' → logprob: -11.85927963256836
    9. ' ' → logprob: -11.98427963256836
    10. ',' → logprob: -12.35927963256836

Token 243: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -6.098748053773306e-05
    2. '       ' → logprob: -10.37506103515625
    3. ' self' → logprob: -10.50006103515625
    4. 'grid' → logprob: -14.12506103515625
    5. 'from' → logprob: -14.87506103515625
    6. '
' → logprob: -15.00006103515625
    7. '        
' → logprob: -15.62506103515625
    8. '   ' → logprob: -15.62506103515625
    9. 'def' → logprob: -15.62506103515625
    10. 'refresh' → logprob: -16.62506103515625

Token 244: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.002387422136962414
    2. '.' → logprob: -6.502387523651123
    3. '.Grid' → logprob: -7.127387523651123
    4. ' .' → logprob: -9.627387046813965
    5. '.refresh' → logprob: -11.877387046813965
    6. '.area' → logprob: -12.627387046813965
    7. '.g' → logprob: -13.377387046813965
    8. '._' → logprob: -14.502387046813965
    9. '.map' → logprob: -14.752387046813965
    10. '.gr' → logprob: -14.877387046813965

Token 245: ' =' (ID: 314)
  Prédit: '_map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_map' → logprob: -7.465036105713807e-06
    2. '_area' → logprob: -11.875007629394531
    3. '_' → logprob: -15.375007629394531
    4. 'map' → logprob: -16.00000762939453
    5. '=_' → logprob: -16.87500762939453
    6. '_maps' → logprob: -17.12500762939453
    7. 'Map' → logprob: -18.00000762939453
    8. '_mapping' → logprob: -18.37500762939453
    9. '=' → logprob: -19.00000762939453
    10. '_Map' → logprob: -19.37500762939453

Token 246: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.2017749547958374
    2. ' self' → logprob: -1.7017749547958374
    3. 'Refresh' → logprob: -7.951775074005127
    4. ' Refresh' → logprob: -11.576774597167969
    5. '=self' → logprob: -16.57677459716797
    6. '	self' → logprob: -17.70177459716797
    7. ' refresh' → logprob: -18.07677459716797
    8. '(self' → logprob: -18.32677459716797
    9. 'Self' → logprob: -18.32677459716797
    10. 'refresh' → logprob: -18.70177459716797

Token 247: '.Grid' (ID: 38455)
  Prédit: '.Grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Grid' → logprob: -0.00022594700567424297
    2. '.' → logprob: -8.500226020812988
    3. '.Refresh' → logprob: -10.750226020812988
    4. '.Graph' → logprob: -15.250226020812988
    5. '.Gr' → logprob: -15.875226020812988
    6. '<Grid' → logprob: -16.125225067138672
    7. '.Graphics' → logprob: -16.250225067138672
    8. '.grid' → logprob: -16.500225067138672
    9. '.Code' → logprob: -16.875225067138672
    10. '.Game' → logprob: -17.000225067138672

Token 248: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.018488438799977303
    2. '(grid' → logprob: -4.01848840713501
    3. '(' → logprob: -8.018488883972168
    4. '(self' → logprob: -12.393488883972168
    5. ' (' → logprob: -13.393488883972168
    6. '(m' → logprob: -13.393488883972168
    7. '(
' → logprob: -14.268488883972168
    8. 'grid' → logprob: -14.643488883972168
    9. '((' → logprob: -15.018488883972168
    10. '(g' → logprob: -16.26848793029785

Token 249: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001105762057704851
    2. ',m' → logprob: -9.125110626220703
    3. ' ,' → logprob: -13.500110626220703
    4. 'm' → logprob: -16.250110626220703
    5. ',
' → logprob: -16.500110626220703
    6. ')' → logprob: -18.125110626220703
    7. '‌,' → logprob: -18.125110626220703
    8. ',self' → logprob: -18.625110626220703
    9. ',

' → logprob: -19.625110626220703
    10. '```' → logprob: -19.875110626220703

Token 250: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.10020710527896881
    2. ' m' → logprob: -2.3502070903778076
    3. '<|end|>' → logprob: -15.100207328796387
    4. ')m' → logprob: -16.72520637512207
    5. '	m' → logprob: -17.10020637512207
    6. ' ' → logprob: -17.10020637512207
    7. ')' → logprob: -17.47520637512207
    8. '   ' → logprob: -18.60020637512207
    9. '```' → logprob: -18.72520637512207
    10. '
' → logprob: -18.85020637512207

Token 251: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.704273118884885e-07
    2. ' ,' → logprob: -14.625000953674316
    3. 'grid' → logprob: -16.125
    4. ',
' → logprob: -16.375
    5. ',

' → logprob: -18.75
    6. '(grid' → logprob: -19.125
    7. ')' → logprob: -19.625
    8. ' grid' → logprob: -20.25
    9. '),' → logprob: -21.75
    10. ',
' → logprob: -22.125

Token 252: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.1269284337759018
    2. ' grid' → logprob: -2.1269283294677734
    3. ')' → logprob: -16.001928329467773
    4. '	grid' → logprob: -16.751928329467773
    5. '(grid' → logprob: -17.001928329467773
    6. ' ' → logprob: -17.126928329467773
    7. '.grid' → logprob: -17.876928329467773
    8. '_grid' → logprob: -18.376928329467773
    9. '   ' → logprob: -18.626928329467773
    10. 'gr' → logprob: -19.001928329467773

Token 253: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -2.451116051815916e-05
    2. 'map' → logprob: -10.625024795532227
    3. 'Map' → logprob: -16.125024795532227
    4. '_MAP' → logprob: -18.125024795532227
    5. 'ermap' → logprob: -18.375024795532227
    6. '_' → logprob: -18.750024795532227
    7. 'ormap' → logprob: -18.750024795532227
    8. 'self' → logprob: -19.125024795532227
    9. '-map' → logprob: -19.250024795532227
    10. 'emap' → logprob: -19.250024795532227

Token 254: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.4849443838757e-06
    2. ' )' → logprob: -13.000004768371582
    3. ')
' → logprob: -13.125004768371582
    4. '<|end|>' → logprob: -16.750003814697266
    5. ')

' → logprob: -17.250003814697266
    6. '),' → logprob: -18.000003814697266
    7. '   ' → logprob: -18.500003814697266
    8. ')#' → logprob: -18.500003814697266
    9. ' ' → logprob: -18.750003814697266
    10. ')return' → logprob: -18.875003814697266

Token 255: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 256: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.00028862981707789004
    2. ' def' → logprob: -8.250288963317871
    3. 'from' → logprob: -11.125288963317871
    4. '   ' → logprob: -11.375288963317871
    5. 'import' → logprob: -14.000288963317871
    6. '	def' → logprob: -16.750288009643555
    7. '#' → logprob: -17.125288009643555
    8. ' ' → logprob: -17.625288009643555
    9. '```' → logprob: -17.625288009643555
    10. ')' → logprob: -17.750288009643555

Token 257: ' count' (ID: 3605)
  Prédit: ' find'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' find' → logprob: -0.07239207625389099
    2. ' count' → logprob: -4.072391986846924
    3. ' solve' → logprob: -4.197391986846924
    4. ' max' → logprob: -4.697391986846924
    5. ' def' → logprob: -4.822391986846924
    6. ' can' → logprob: -4.822391986846924
    7. 'find' → logprob: -5.822391986846924
    8. ' maximize' → logprob: -6.447391986846924
    9. 'max' → logprob: -6.822391986846924
    10. ' get' → logprob: -6.947391986846924

Token 258: '_positions' (ID: 93193)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.8042414784431458
    2. '_free' → logprob: -1.179241418838501
    3. '_segments' → logprob: -1.929241418838501
    4. '_refresh' → logprob: -3.554241418838501
    5. '_possible' → logprob: -4.05424165725708
    6. '_spaces' → logprob: -4.55424165725708
    7. '_positions' → logprob: -4.80424165725708
    8. '_cells' → logprob: -5.42924165725708
    9. '_available' → logprob: -5.55424165725708
    10. '_places' → logprob: -5.55424165725708

Token 259: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.11326541751623154
    2. '(' → logprob: -2.2382655143737793
    3. ' (' → logprob: -7.863265514373779
    4. '(
' → logprob: -10.363265037536621
    5. '(s' → logprob: -12.113265037536621
    6. 'self' → logprob: -12.363265037536621
    7. '_for' → logprob: -12.488265037536621
    8. '_' → logprob: -13.113265037536621
    9. ' ' → logprob: -13.238265037536621
    10. ' self' → logprob: -13.238265037536621

Token 260: ')' (ID: 8)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.018474046140909195
    2. '):' → logprob: -4.268474102020264
    3. ' ,' → logprob: -5.643474102020264
    4. ' ):' → logprob: -8.393473625183105
    5. ')' → logprob: -8.518473625183105
    6. 'self' → logprob: -8.643473625183105
    7. ',row' → logprob: -10.018473625183105
    8. ',self' → logprob: -10.768473625183105
    9. '):
' → logprob: -10.893473625183105
    10. '   ' → logprob: -11.768473625183105

Token 261: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.4358653426170349
    2. ':' → logprob: -1.3108654022216797
    3. '(' → logprob: -2.5608654022216797
    4. 'self' → logprob: -5.31086540222168
    5. '   ' → logprob: -7.56086540222168
    6. '(
' → logprob: -8.68586540222168
    7. ')' → logprob: -9.06086540222168
    8. '():' → logprob: -9.06086540222168
    9. ' self' → logprob: -9.56086540222168
    10. '       ' → logprob: -9.56086540222168

Token 262: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.38689637184143066
    2. ' int' → logprob: -1.1368963718414307
    3. '   ' → logprob: -12.011896133422852
    4. '(int' → logprob: -12.011896133422852
    5. 'self' → logprob: -12.636896133422852
    6. ' self' → logprob: -12.636896133422852
    7. '0' → logprob: -12.886896133422852
    8. ' ' → logprob: -13.136896133422852
    9. '[int' → logprob: -14.511896133422852
    10. '    ' → logprob: -15.136896133422852

Token 263: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.009950041770935059
    2. '(' → logprob: -5.384950160980225
    3. '(self' → logprob: -6.134950160980225
    4. ':
' → logprob: -6.509950160980225
    5. '   ' → logprob: -7.634950160980225
    6. '(
' → logprob: -8.009949684143066
    7. '       ' → logprob: -8.134949684143066
    8. ',' → logprob: -8.509949684143066
    9. '=' → logprob: -9.509949684143066
    10. ' =' → logprob: -9.884949684143066

Token 264: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05235069617629051
    2. ' ' → logprob: -3.4273507595062256
    3. ' 
' → logprob: -4.5523505210876465
    4. '
' → logprob: -5.5523505210876465
    5. '    ' → logprob: -6.6773505210876465
    6. '        ' → logprob: -6.6773505210876465
    7. '        
' → logprob: -7.3023505210876465
    8. '<|end|>' → logprob: -8.302350997924805
    9. '' → logprob: -8.927350997924805
    10. '   ' → logprob: -9.052350997924805

Token 265: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.02596978098154068
    2. ' count' → logprob: -4.400969982147217
    3. '       ' → logprob: -4.650969982147217
    4. 'result' → logprob: -5.775969982147217
    5. 'total' → logprob: -7.525969982147217
    6. ' result' → logprob: -9.275969505310059
    7. 'counter' → logprob: -10.650969505310059
    8. ' total' → logprob: -10.900969505310059
    9. 'positions' → logprob: -11.400969505310059
    10. '
' → logprob: -11.650969505310059

Token 266: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.012193736620247364
    2. '=' → logprob: -4.76219367980957
    3. ' ' → logprob: -5.63719367980957
    4. ' =
' → logprob: -12.38719367980957
    5. ' +=' → logprob: -13.38719367980957
    6. '_' → logprob: -13.63719367980957
    7. '  ' → logprob: -14.26219367980957
    8. ' =)' → logprob: -14.26219367980957
    9. ')' → logprob: -14.38719367980957
    10. '<|end|>' → logprob: -15.51219367980957

Token 267: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.2014133334159851
    2. ' ' → logprob: -1.7014133930206299
    3. ' ' → logprob: -17.701414108276367
    4. '   ' → logprob: -19.576414108276367
    5. '۰' → logprob: -20.701414108276367
    6. '  ' → logprob: -21.326414108276367
    7. '1' → logprob: -21.326414108276367
    8. 's' → logprob: -21.576414108276367
    9. 'self' → logprob: -21.701414108276367
    10. '```' → logprob: -21.701414108276367

Token 268: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.688212614681106e-05
    2. ' ' → logprob: -11.000017166137695
    3. '   ' → logprob: -15.750017166137695
    4. 'sum' → logprob: -18.437517166137695
    5. '```' → logprob: -18.750017166137695
    6. '       ' → logprob: -18.812517166137695
    7. '۰' → logprob: -18.875017166137695
    8. 'self' → logprob: -19.125017166137695
    9. '  ' → logprob: -19.125017166137695
    10. '1' → logprob: -19.312517166137695

Token 269: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.10627317428588867
    2. '       ' → logprob: -2.3562731742858887
    3. '        
' → logprob: -6.106273174285889
    4. ' for' → logprob: -6.481273174285889
    5. '<|end|>' → logprob: -6.856273174285889
    6. ' 
' → logprob: -7.106273174285889
    7. 'for' → logprob: -8.981273651123047
    8. '  
' → logprob: -9.356273651123047
    9. '
' → logprob: -9.481273651123047
    10. '    
' → logprob: -10.106273651123047

Token 270: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5495115518569946
    2. '
' → logprob: -0.9245115518569946
    3. ' for' → logprob: -4.049511432647705
    4. '        
' → logprob: -5.299511432647705
    5. 'for' → logprob: -6.549511432647705
    6. '<|end|>' → logprob: -6.799511432647705
    7. ' 
' → logprob: -7.549511432647705
    8. '  
' → logprob: -8.424511909484863
    9. '
' → logprob: -9.549511909484863
    10. '        ' → logprob: -9.674511909484863

Token 271: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.023209134116768837
    2. ' for' → logprob: -3.8982090950012207
    3. '       ' → logprob: -6.148209095001221
    4. 'if' → logprob: -8.273209571838379
    5. 'direction' → logprob: -8.523209571838379
    6. ' direction' → logprob: -10.523209571838379
    7. 'd' → logprob: -11.023209571838379
    8. ' if' → logprob: -11.398209571838379
    9. 'dire' → logprob: -11.773209571838379
    10. '   ' → logprob: -12.773209571838379

Token 272: ' Count' (ID: 6789)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0034059707541018724
    2. 'if' → logprob: -5.753406047821045
    3. ' for' → logprob: -8.503405570983887
    4. '       ' → logprob: -11.128405570983887
    5. 'direction' → logprob: -11.753405570983887
    6. ' if' → logprob: -13.503405570983887
    7. 'd' → logprob: -15.378405570983887
    8. '#' → logprob: -15.378405570983887
    9. 'dire' → logprob: -15.378405570983887
    10. 'from' → logprob: -15.503405570983887

Token 273: ' horizontal' (ID: 25511)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.057140205055475235
    2. 'for' → logprob: -2.9321401119232178
    3. ' if' → logprob: -6.557140350341797
    4. ' positions' → logprob: -8.182140350341797
    5. ' horizontal' → logprob: -9.557140350341797
    6. ' ' → logprob: -9.682140350341797
    7. '<|end|>' → logprob: -9.932140350341797
    8. 'if' → logprob: -10.057140350341797
    9. ' all' → logprob: -10.057140350341797
    10. ' =' → logprob: -10.182140350341797

Token 274: ' candidates' (ID: 18116)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.9527743458747864
    2. ' for' → logprob: -1.2027742862701416
    3. 'positions' → logprob: -1.5777742862701416
    4. ' positions' → logprob: -2.9527742862701416
    5. 'segments' → logprob: -3.7027742862701416
    6. ' segments' → logprob: -3.8277742862701416
    7. '_positions' → logprob: -6.077774524688721
    8. '       ' → logprob: -6.327774524688721
    9. '
' → logprob: -7.702774524688721
    10. ' lines' → logprob: -7.702774524688721

Token 275: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8353715538978577
    2. ' for' → logprob: -0.8353715538978577
    3. '<|end|>' → logprob: -2.835371494293213
    4. '       ' → logprob: -3.210371494293213
    5. 'for' → logprob: -3.585371494293213
    6. '        
' → logprob: -5.960371494293213
    7. '<|end|>' → logprob: -6.585371494293213
    8. '        ' → logprob: -7.710371494293213
    9. ' 
' → logprob: -8.210371971130371
    10. '  
' → logprob: -8.460371971130371

Token 276: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2644335627555847
    2. ' for' → logprob: -1.6394336223602295
    3. 'for' → logprob: -3.2644336223602295
    4. '   ' → logprob: -11.139433860778809
    5. '<|end|>' → logprob: -11.514433860778809
    6. ',' → logprob: -12.014433860778809
    7. '	for' → logprob: -12.014433860778809
    8. '
' → logprob: -12.639433860778809
    9. '        
' → logprob: -13.014433860778809
    10. ' ' → logprob: -13.139433860778809

Token 277: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.008793015964329243
    2. ' for' → logprob: -4.758792877197266
    3. '       ' → logprob: -8.633792877197266
    4. '   ' → logprob: -15.633792877197266
    5. '```' → logprob: -15.883792877197266
    6. 'if' → logprob: -16.133792877197266
    7. '	for' → logprob: -16.758792877197266
    8. '
' → logprob: -17.133792877197266
    9. ' ' → logprob: -17.633792877197266
    10. '        
' → logprob: -18.133792877197266

Token 278: ' r' (ID: 428)
  Prédit: ' row'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' row' → logprob: -0.27854040265083313
    2. 'row' → logprob: -2.1535403728485107
    3. ' i' → logprob: -2.4035403728485107
    4. 'i' → logprob: -3.5285403728485107
    5. 'r' → logprob: -5.27854061126709
    6. ' r' → logprob: -6.15354061126709
    7. '   ' → logprob: -10.52854061126709
    8. '	row' → logprob: -11.40354061126709
    9. 'x' → logprob: -11.90354061126709
    10. ' ' → logprob: -12.65354061126709

Token 279: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0027391354087740183
    2. 'in' → logprob: -6.002738952636719
    3. ' ' → logprob: -8.252738952636719
    4. '  ' → logprob: -14.752738952636719
    5. 'space' → logprob: -14.752738952636719
    6. 'range' → logprob: -15.252738952636719
    7. '	in' → logprob: -15.252738952636719
    8. ' i' → logprob: -15.377738952636719
    9. ',' → logprob: -15.377738952636719
    10. ' ' → logprob: -15.377738952636719

Token 280: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31326204538345337
    2. 'range' → logprob: -1.3132619857788086
    3. 'ange' → logprob: -15.563261985778809
    4. '(range' → logprob: -16.688262939453125
    5. '	range' → logprob: -16.938262939453125
    6. ' ' → logprob: -18.688262939453125
    7. ' xrange' → logprob: -19.938262939453125
    8. '   ' → logprob: -20.188262939453125
    9. '_range' → logprob: -20.313262939453125
    10. '.range' → logprob: -20.438262939453125

Token 281: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.333223139634356e-05
    2. '(' → logprob: -10.375033378601074
    3. '(
' → logprob: -14.000033378601074
    4. 'self' → logprob: -14.000033378601074
    5. ' self' → logprob: -15.000033378601074
    6. '       ' → logprob: -17.375032424926758
    7. ' (' → logprob: -17.875032424926758
    8. '	self' → logprob: -17.875032424926758
    9. ':self' → logprob: -18.125032424926758
    10. '[self' → logprob: -18.250032424926758

Token 282: '.n' (ID: 1835)
  Prédit: '.n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.n' → logprob: -0.0002798087371047586
    2. '.' → logprob: -8.250279426574707
    3. ' .' → logprob: -11.500279426574707
    4. 'n' → logprob: -11.750279426574707
    5. ' ' → logprob: -16.250280380249023
    6. '	n' → logprob: -16.250280380249023
    7. '.
' → logprob: -16.875280380249023
    8. ' n' → logprob: -16.875280380249023
    9. ').' → logprob: -17.250280380249023
    10. '
' → logprob: -17.500280380249023

Token 283: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.16041716933250427
    2. '):' → logprob: -1.9104171991348267
    3. '       ' → logprob: -9.410417556762695
    4. '):
' → logprob: -10.035417556762695
    5. '   ' → logprob: -10.785417556762695
    6. ' ):
' → logprob: -11.035417556762695
    7. ' ):' → logprob: -11.285417556762695
    8. ')' → logprob: -11.785417556762695
    9. ' ' → logprob: -12.285417556762695
    10. ':' → logprob: -13.285417556762695

Token 284: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.559302568435669
    2. '           ' → logprob: -1.184302568435669
    3. '<|end|>' → logprob: -2.934302568435669
    4. '       ' → logprob: -3.059302568435669
    5. ' ' → logprob: -5.30930233001709
    6. ':
' → logprob: -5.55930233001709
    7. '   ' → logprob: -5.80930233001709
    8. ' :' → logprob: -5.93430233001709
    9. '<|end|>' → logprob: -6.05930233001709
    10. ' for' → logprob: -6.55930233001709

Token 285: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.011140016838908195
    2. ' for' → logprob: -4.511139869689941
    3. '           ' → logprob: -9.386139869689941
    4. 'c' → logprob: -12.636139869689941
    5. '       ' → logprob: -12.761139869689941
    6. '   ' → logprob: -13.386139869689941
    7. '	for' → logprob: -15.136139869689941
    8. ' ' → logprob: -15.136139869689941
    9. '
' → logprob: -17.011140823364258
    10. '               ' → logprob: -17.136140823364258

Token 286: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10020828247070312
    2. ' c' → logprob: -2.350208282470703
    3. '   ' → logprob: -14.225208282470703
    4. '	c' → logprob: -14.975208282470703
    5. ' ' → logprob: -15.475208282470703
    6. ')c' → logprob: -16.100208282470703
    7. '
' → logprob: -16.600208282470703
    8. '       ' → logprob: -16.850208282470703
    9. '(c' → logprob: -17.350208282470703
    10. 'start' → logprob: -17.475208282470703

Token 287: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.020889626815915108
    2. 'in' → logprob: -3.8958895206451416
    3. ' ' → logprob: -8.020889282226562
    4. 'import' → logprob: -12.395889282226562
    5. '<|end|>' → logprob: -13.270889282226562
    6. '(' → logprob: -13.395889282226562
    7. ')' → logprob: -13.395889282226562
    8. 'to' → logprob: -13.395889282226562
    9. ',' → logprob: -13.645889282226562
    10. '=' → logprob: -14.145889282226562

Token 288: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.14395102858543396
    2. ' range' → logprob: -2.143950939178467
    3. 'self' → logprob: -4.143950939178467
    4. ' self' → logprob: -6.893950939178467
    5. '(self' → logprob: -12.643951416015625
    6. ' ' → logprob: -14.268951416015625
    7. '(range' → logprob: -14.393951416015625
    8. '0' → logprob: -15.393951416015625
    9. ' (' → logprob: -16.893951416015625
    10. '[self' → logprob: -17.018951416015625

Token 289: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00010342398309148848
    2. '(' → logprob: -9.250102996826172
    3. ' (' → logprob: -12.250102996826172
    4. '(s' → logprob: -13.250102996826172
    5. 'self' → logprob: -14.750102996826172
    6. ' self' → logprob: -15.875102996826172
    7. '(
' → logprob: -16.625102996826172
    8. ' ' → logprob: -17.375102996826172
    9. '(sel' → logprob: -17.375102996826172
    10. '=self' → logprob: -17.750102996826172

Token 290: '.m' (ID: 1021)
  Prédit: '.m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.m' → logprob: -0.0020317768212407827
    2. 'm' → logprob: -6.2520318031311035
    3. '.' → logprob: -9.377031326293945
    4. ' .' → logprob: -11.877031326293945
    5. ' m' → logprob: -12.752031326293945
    6. '.d' → logprob: -12.752031326293945
    7. 'd' → logprob: -13.627031326293945
    8. '	m' → logprob: -14.002031326293945
    9. '-m' → logprob: -14.377031326293945
    10. ',m' → logprob: -14.627031326293945

Token 291: ' -' (ID: 533)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5591387748718262
    2. ' -' → logprob: -1.0591387748718262
    3. '):
' → logprob: -2.684138774871826
    4. '-' → logprob: -4.434138774871826
    5. ' ):' → logprob: -7.309138774871826
    6. ')' → logprob: -7.684138774871826
    7. '):

' → logprob: -9.309139251708984
    8. ' ):
' → logprob: -10.184139251708984
    9. '   ' → logprob: -10.684139251708984
    10. ':' → logprob: -10.809139251708984

Token 292: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.011116556823253632
    2. ' self' → logprob: -4.5111165046691895
    3. '(self' → logprob: -9.636116981506348
    4. '           ' → logprob: -13.886116981506348
    5. '       ' → logprob: -14.011116981506348
    6. '[self' → logprob: -14.261116981506348
    7. '
' → logprob: -14.886116981506348
    8. ' (' → logprob: -15.511116981506348
    9. '               ' → logprob: -16.38611602783203
    10. '=self' → logprob: -16.38611602783203

Token 293: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.00026407750556245446
    2. 'd' → logprob: -8.250264167785645
    3. '.' → logprob: -13.000264167785645
    4. ' .' → logprob: -15.500264167785645
    5. '	d' → logprob: -16.000263214111328
    6. ' d' → logprob: -16.250263214111328
    7. 'self' → logprob: -17.250263214111328
    8. '.
' → logprob: -18.875263214111328
    9. '```' → logprob: -18.875263214111328
    10. '
' → logprob: -19.000263214111328

Token 294: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.47408542037010193
    2. '+' → logprob: -0.9740854501724243
    3. ' ' → logprob: -12.599085807800293
    4. ' plus' → logprob: -13.224085807800293
    5. ')' → logprob: -13.849085807800293
    6. ')+' → logprob: -14.349085807800293
    7. '1' → logprob: -15.599085807800293
    8. ' +
' → logprob: -15.599085807800293
    9. '+
' → logprob: -15.599085807800293
    10. '```' → logprob: -15.599085807800293

Token 295: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0021852378267794847
    2. ' ' → logprob: -6.127185344696045
    3. '   ' → logprob: -16.252185821533203
    4. ')' → logprob: -17.127185821533203
    5. '```' → logprob: -17.127185821533203
    6. '    ' → logprob: -18.939685821533203
    7. '
' → logprob: -19.127185821533203
    8. '  ' → logprob: -19.127185821533203
    9. '' → logprob: -19.189685821533203
    10. '0' → logprob: -19.627185821533203

Token 296: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00015908108616713434
    2. ' ' → logprob: -8.75015926361084
    3. '   ' → logprob: -15.50015926361084
    4. '```' → logprob: -16.125158309936523
    5. ')' → logprob: -16.625158309936523
    6. '0' → logprob: -17.000158309936523
    7. '{' → logprob: -17.750158309936523
    8. '
' → logprob: -17.812658309936523
    9. '`' → logprob: -18.437658309936523
    10. '``' → logprob: -18.500158309936523

Token 297: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.022917913272976875
    2. '):
' → logprob: -4.022917747497559
    3. ' ):' → logprob: -5.772917747497559
    4. ')' → logprob: -6.522917747497559
    5. ' ):
' → logprob: -9.147917747497559
    6. ' )' → logprob: -10.022917747497559
    7. ':' → logprob: -11.397917747497559
    8. '):
' → logprob: -12.397917747497559
    9. '):

' → logprob: -12.647917747497559
    10. '       ' → logprob: -13.272917747497559

Token 298: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001649220648687333
    2. '           ' → logprob: -9.250164985656738
    3. ' if' → logprob: -10.125164985656738
    4. '                
' → logprob: -11.500164985656738
    5. '<|end|>' → logprob: -12.250164985656738
    6. '                   ' → logprob: -13.000164985656738
    7. '
' → logprob: -13.000164985656738
    8. ',' → logprob: -13.375164985656738
    9. '              ' → logprob: -13.500164985656738
    10. '```' → logprob: -13.875164985656738

Token 299: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.548575758934021
    2. '                   ' → logprob: -1.923575758934021
    3. '           ' → logprob: -2.0485758781433105
    4. '               ' → logprob: -2.7985758781433105
    5. 'if' (adapté à ' if') → logprob: -3.1735758781433105
    6. '
' → logprob: -3.1735758781433105
    7. '                    
' → logprob: -7.2985758781433105
    8. '            
' → logprob: -7.7985758781433105
    9. '            ' → logprob: -8.173575401306152
    10. ' 
' → logprob: -8.173575401306152

Token 300: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.009767069481313229
    2. 'self' → logprob: -4.634767055511475
    3. ' ' → logprob: -12.259767532348633
    4. '(self' → logprob: -12.884767532348633
    5. '	self' → logprob: -13.384767532348633
    6. ' not' → logprob: -13.884767532348633
    7. ' ' → logprob: -14.384767532348633
    8. 'Self' → logprob: -15.509767532348633
    9. '<|end|>' → logprob: -15.759767532348633
    10. '_self' → logprob: -16.134767532348633

Token 301: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -4.632542913896032e-05
    2. '.' → logprob: -10.375046730041504
    3. ' .' → logprob: -11.250046730041504
    4. 'grid' → logprob: -13.500046730041504
    5. ' grid' → logprob: -14.750046730041504
    6. ':grid' → logprob: -16.125045776367188
    7. '	grid' → logprob: -16.625045776367188
    8. '.segment' → logprob: -17.000045776367188
    9. ').' → logprob: -17.125045776367188
    10. '.Grid' → logprob: -17.250045776367188

Token 302: '.segment' (ID: 137597)
  Prédit: '.segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.segment' → logprob: -1.0683535037969705e-05
    2. '.' → logprob: -11.50001049041748
    3. ' .' → logprob: -15.25001049041748
    4. 'segment' → logprob: -16.250011444091797
    5. '.seg' → logprob: -16.375011444091797
    6. '.se' → logprob: -18.750011444091797
    7. '.section' → logprob: -19.000011444091797
    8. '.grid' → logprob: -19.250011444091797
    9. ' segment' → logprob: -19.875011444091797
    10. '   ' → logprob: -20.000011444091797

Token 303: '_free' (ID: 21204)
  Prédit: '_free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_free' → logprob: -5.9153885558771435e-06
    2. 'free' → logprob: -12.250005722045898
    3. 'Free' → logprob: -15.250005722045898
    4. '_' → logprob: -15.500005722045898
    5. ' free' → logprob: -15.750005722045898
    6. '```' → logprob: -15.750005722045898
    7. '_FREE' → logprob: -16.0000057220459
    8. ')_' → logprob: -17.2500057220459
    9. '-free' → logprob: -17.2500057220459
    10. '_Free' → logprob: -17.3750057220459

Token 304: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -2.165027217415627e-05
    2. '(' → logprob: -10.750021934509277
    3. '(
' → logprob: -16.62502098083496
    4. ' (' → logprob: -19.50002098083496
    5. 'r' → logprob: -20.75002098083496
    6. '(c' → logprob: -20.87502098083496
    7. '(

' → logprob: -21.25002098083496
    8. '(row' → logprob: -22.50002098083496
    9. '(R' → logprob: -22.75002098083496
    10. '((' → logprob: -23.37502098083496

Token 305: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006757391383871436
    2. ',c' → logprob: -8.000676155090332
    3. ' ,' → logprob: -8.000676155090332
    4. '<|end|>' → logprob: -13.250676155090332
    5. ',
' → logprob: -14.125676155090332
    6. '‌,' → logprob: -14.250676155090332
    7. '   ' → logprob: -14.875676155090332
    8. '           ' → logprob: -15.125676155090332
    9. 'c' → logprob: -15.250676155090332
    10. '_,' → logprob: -15.750676155090332

Token 306: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.10020817816257477
    2. ' c' → logprob: -2.350208282470703
    3. ' ' → logprob: -14.475208282470703
    4. ')c' → logprob: -14.975208282470703
    5. '   ' → logprob: -15.475208282470703
    6. '	c' → logprob: -15.850208282470703
    7. '    ' → logprob: -16.725208282470703
    8. '<|end|>' → logprob: -16.975208282470703
    9. ')' → logprob: -17.600208282470703
    10. '  ' → logprob: -17.850208282470703

Token 307: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000516813131980598
    2. ' ,' → logprob: -7.625516891479492
    3. ',self' → logprob: -11.250516891479492
    4. 'self' → logprob: -11.250516891479492
    5. ',
' → logprob: -14.375516891479492
    6. '           ' → logprob: -14.625516891479492
    7. ')' → logprob: -14.875516891479492
    8. '```' → logprob: -15.000516891479492
    9. '   ' → logprob: -15.625516891479492
    10. '       ' → logprob: -16.000516891479492

Token 308: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008617881685495377
    2. ' self' → logprob: -4.758617877960205
    3. 'd' → logprob: -13.008618354797363
    4. '(self' → logprob: -14.508618354797363
    5. '           ' → logprob: -15.758618354797363
    6. '[self' → logprob: -15.758618354797363
    7. '       ' → logprob: -17.133617401123047
    8. '               ' → logprob: -17.258617401123047
    9. ')' → logprob: -17.383617401123047
    10. '=self' → logprob: -17.508617401123047

Token 309: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -5.228561349213123e-05
    2. '.' → logprob: -10.375052452087402
    3. 'd' → logprob: -11.000052452087402
    4. ' .' → logprob: -12.500052452087402
    5. '	d' → logprob: -15.500052452087402
    6. ').' → logprob: -16.250051498413086
    7. ',d' → logprob: -16.750051498413086
    8. ')' → logprob: -17.500051498413086
    9. ' ' → logprob: -17.625051498413086
    10. ')d' → logprob: -17.750051498413086

Token 310: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016098834748845547
    2. ' ,' → logprob: -9.000161170959473
    3. 'self' → logprob: -10.500161170959473
    4. ',self' → logprob: -13.125161170959473
    5. '   ' → logprob: -13.500161170959473
    6. ')' → logprob: -13.500161170959473
    7. 'import' → logprob: -13.750161170959473
    8. '           ' → logprob: -14.375161170959473
    9. '),' → logprob: -15.000161170959473
    10. '    ' → logprob: -15.000161170959473

Token 311: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.2018478363752365
    2. 'self' → logprob: -1.701847791671753
    3. 'Refresh' → logprob: -8.451848030090332
    4. ' Refresh' → logprob: -8.701848030090332
    5. 'Coordinates' → logprob: -10.576848030090332
    6. ' Coordinates' → logprob: -11.326848030090332
    7. '	self' → logprob: -12.326848030090332
    8. ' ' → logprob: -12.826848030090332
    9. 'Self' → logprob: -12.951848030090332
    10. '(self' → logprob: -13.826848030090332

Token 312: '.Co' (ID: 102505)
  Prédit: '.Co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Co' → logprob: -6.778209353797138e-05
    2. '.' → logprob: -10.000067710876465
    3. '.CO' → logprob: -11.750067710876465
    4. ' .' → logprob: -12.625067710876465
    5. '.C' → logprob: -12.875067710876465
    6. '.Class' → logprob: -13.250067710876465
    7. '.Refresh' → logprob: -13.750067710876465
    8. '.Columns' → logprob: -13.875067710876465
    9. 'Coordinates' → logprob: -13.875067710876465
    10. '.Grid' → logprob: -13.875067710876465

Token 313: 'ordinates' (ID: 15343)
  Prédit: 'ordinates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordinates' → logprob: -1.9623810658231378e-05
    2. 'rd' → logprob: -11.500020027160645
    3. 'ord' → logprob: -13.375020027160645
    4. 'ordin' → logprob: -13.500020027160645
    5. 'ordi' → logprob: -13.500020027160645
    6. 'ords' → logprob: -13.625020027160645
    7. 'odin' → logprob: -13.625020027160645
    8. 'ordan' → logprob: -14.750020027160645
    9. 'ordinate' → logprob: -14.875020027160645
    10. ' ordin' → logprob: -15.125020027160645

Token 314: '.Direction' (ID: 107082)
  Prédit: '.Direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Direction' → logprob: -0.00014358828775584698
    2. '.' → logprob: -9.000144004821777
    3. '.Direct' → logprob: -11.625144004821777
    4. ' .' → logprob: -12.250144004821777
    5. '.Dimension' → logprob: -13.250144004821777
    6. '.D' → logprob: -14.250144004821777
    7. '.Directory' → logprob: -14.375144004821777
    8. '.Co' → logprob: -14.500144004821777
    9. '.Distance' → logprob: -14.750144004821777
    10. '(Direction' → logprob: -15.375144004821777

Token 315: '.HORIZONTAL' (ID: 131895)
  Prédit: '.HORIZONTAL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.HORIZONTAL' → logprob: -0.0004273315134923905
    2. '.' → logprob: -7.87542724609375
    3. '.H' → logprob: -10.12542724609375
    4. ' .' → logprob: -12.62542724609375
    5. '.Horizontal' → logprob: -13.25042724609375
    6. '_HORIZONTAL' → logprob: -14.50042724609375
    7. '   ' → logprob: -14.75042724609375
    8. '.)' → logprob: -15.25042724609375
    9. '.HOUR' → logprob: -15.50042724609375
    10. '.VERTICAL' → logprob: -15.87542724609375

Token 316: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12857648730278015
    2. '):
' → logprob: -2.1285765171051025
    3. ')' → logprob: -7.003576278686523
    4. '               ' → logprob: -8.003576278686523
    5. '):
' → logprob: -9.253576278686523
    6. ' ):' → logprob: -9.253576278686523
    7. ':' → logprob: -9.378576278686523
    8. '                   ' → logprob: -9.753576278686523
    9. ' ):
' → logprob: -10.378576278686523
    10. '):

' → logprob: -10.628576278686523

Token 317: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0014117816463112831
    2. ':' → logprob: -8.126411437988281
    3. '):
' → logprob: -8.251411437988281
    4. '                  ' → logprob: -8.751411437988281
    5. ':
' → logprob: -9.001411437988281
    6. '                       ' → logprob: -9.376411437988281
    7. '                    
' → logprob: -9.376411437988281
    8. '):' → logprob: -9.501411437988281
    9. '                    ' → logprob: -9.626411437988281
    10. ')' → logprob: -9.626411437988281

Token 318: ' count' (ID: 3605)
  Prédit: ' count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' count' → logprob: -0.5800344347953796
    2. 'count' (adapté à ' count') → logprob: -0.8300344347953796
    3. '                   ' → logprob: -5.830034255981445
    4. '                       ' → logprob: -6.830034255981445
    5. '[count' → logprob: -10.705034255981445
    6. '                    ' → logprob: -11.205034255981445
    7. '               ' → logprob: -12.205034255981445
    8. '	count' → logprob: -12.330034255981445
    9. '
' → logprob: -12.455034255981445
    10. '                ' → logprob: -12.830034255981445

Token 319: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.04859680309891701
    2. '+=' → logprob: -3.0485968589782715
    3. ']+=' → logprob: -12.548596382141113
    4. '+' → logprob: -12.923596382141113
    5. ' ' → logprob: -13.048596382141113
    6. '<|end|>' → logprob: -15.173596382141113
    7. '+='' → logprob: -15.798596382141113
    8. ')' → logprob: -16.04859733581543
    9. '    ' → logprob: -16.17359733581543
    10. '=' → logprob: -16.29859733581543

Token 320: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0028048718813806772
    2. ' ' → logprob: -5.877804756164551
    3. '   ' → logprob: -19.127805709838867
    4. '```' → logprob: -19.252805709838867
    5. ' ' → logprob: -19.377805709838867
    6. '
' → logprob: -19.377805709838867
    7. '           ' → logprob: -20.252805709838867
    8. '2' → logprob: -20.377805709838867
    9. '0' → logprob: -21.377805709838867
    10. '۱' → logprob: -21.502805709838867

Token 321: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.5776860184123507e-06
    2. ' ' → logprob: -12.87500286102295
    3. '   ' → logprob: -18.375001907348633
    4. '           ' → logprob: -18.750001907348633
    5. '
' → logprob: -19.062501907348633
    6. '```' → logprob: -19.625001907348633
    7. '１' → logprob: -19.937501907348633
    8. '2' → logprob: -20.000001907348633
    9. '                       ' → logprob: -20.000001907348633
    10. '                   ' → logprob: -20.125001907348633

Token 322: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.028766563162207603
    2. '       ' → logprob: -3.653766632080078
    3. '        
' → logprob: -6.653766632080078
    4. ' 
' → logprob: -7.903766632080078
    5. 'return' → logprob: -8.403766632080078
    6. '
' → logprob: -9.028766632080078
    7. '  
' → logprob: -9.153766632080078
    8. '<|end|>' → logprob: -9.403766632080078
    9. '\n' → logprob: -9.653766632080078
    10. 'newline' → logprob: -10.153766632080078

Token 323: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.299452006816864
    2. '       ' → logprob: -1.4244520664215088
    3. '        
' → logprob: -4.42445182800293
    4. 'return' → logprob: -5.42445182800293
    5. '
' → logprob: -7.17445182800293
    6. ' return' → logprob: -7.54945182800293
    7. '' → logprob: -9.42445182800293
    8. '
        
' → logprob: -9.79945182800293
    9. ' 
' → logprob: -10.17445182800293
    10. '```' → logprob: -10.29945182800293

Token 324: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6451206207275391
    2. '
' → logprob: -0.8951206207275391
    3. 'for' → logprob: -3.270120620727539
    4. '#' (adapté à ' #') → logprob: -4.020120620727539
    5. ' for' → logprob: -5.145120620727539
    6. '        
' → logprob: -5.520120620727539
    7. '   ' → logprob: -8.270120620727539
    8. 'return' → logprob: -8.270120620727539
    9. '
' → logprob: -8.645120620727539
    10. '  
' → logprob: -9.645120620727539

Token 325: ' Count' (ID: 6789)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.005044829100370407
    2. ' for' → logprob: -5.755044937133789
    3. '#' → logprob: -6.380044937133789
    4. 'if' → logprob: -9.630044937133789
    5. '       ' → logprob: -9.755044937133789
    6. 'Count' → logprob: -11.130044937133789
    7. '   ' → logprob: -11.255044937133789
    8. 'return' → logprob: -11.880044937133789
    9. 'count' → logprob: -12.505044937133789
    10. ' #' → logprob: -12.505044937133789

Token 326: ' vertical' (ID: 17679)
  Prédit: ' vertical'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' vertical' → logprob: -0.020619550719857216
    2. 'vertical' → logprob: -3.8956196308135986
    3. '_vertical' → logprob: -9.77061939239502
    4. '(vertical' → logprob: -11.27061939239502
    5. 'Vertical' → logprob: -13.14561939239502
    6. 'vert' → logprob: -13.64561939239502
    7. ' for' → logprob: -13.89561939239502
    8. ' ' → logprob: -14.27061939239502
    9. ' verticale' → logprob: -14.39561939239502
    10. ' vert' → logprob: -14.52061939239502

Token 327: ' candidates' (ID: 18116)
  Prédit: ' candidates'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' candidates' → logprob: -0.08222778141498566
    2. ' for' → logprob: -2.8322277069091797
    3. 'for' → logprob: -3.9572277069091797
    4. ' positions' → logprob: -7.45722770690918
    5. 'c' → logprob: -8.70722770690918
    6. '_candidates' → logprob: -9.33222770690918
    7. 'positions' → logprob: -9.83222770690918
    8. '   ' → logprob: -10.70722770690918
    9. 'Candidates' → logprob: -11.83222770690918
    10. 's' → logprob: -11.83222770690918

Token 328: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2344357818365097
    2. '
' → logprob: -1.734435796737671
    3. ' for' → logprob: -3.859435796737671
    4. 'for' → logprob: -4.484435558319092
    5. '        
' → logprob: -9.23443603515625
    6. '   ' → logprob: -11.98443603515625
    7. '    
' → logprob: -12.35943603515625
    8. '  
' → logprob: -12.73443603515625
    9. '           ' → logprob: -13.23443603515625
    10. '
' → logprob: -13.35943603515625

Token 329: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03960021585226059
    2. ' for' → logprob: -3.539600133895874
    3. 'for' → logprob: -4.664600372314453
    4. '
' → logprob: -8.289600372314453
    5. '   ' → logprob: -9.289600372314453
    6. '        
' → logprob: -10.789600372314453
    7. '           ' → logprob: -12.164600372314453
    8. '     ' → logprob: -13.664600372314453
    9. ' ' → logprob: -13.914600372314453
    10. '	for' → logprob: -13.914600372314453

Token 330: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.3133528530597687
    2. ' for' → logprob: -1.3133528232574463
    3. '       ' → logprob: -9.313352584838867
    4. '   ' → logprob: -14.313352584838867
    5. '
' → logprob: -15.563352584838867
    6. '	for' → logprob: -16.688352584838867
    7. ' ' → logprob: -18.813352584838867
    8. '        
' → logprob: -19.438352584838867
    9. '    ' → logprob: -19.563352584838867
    10. '```' → logprob: -19.938352584838867

Token 331: ' c' (ID: 274)
  Prédit: ' r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' r' → logprob: -0.1269317865371704
    2. 'r' → logprob: -2.126931667327881
    3. ' c' → logprob: -12.876932144165039
    4. 'c' → logprob: -14.126932144165039
    5. '_r' → logprob: -15.876932144165039
    6. '	r' → logprob: -16.00193214416504
    7. ' ' → logprob: -16.50193214416504
    8. '   ' → logprob: -17.37693214416504
    9. 'self' → logprob: -17.37693214416504
    10. 's' → logprob: -17.87693214416504

Token 332: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001703983056358993
    2. 'in' → logprob: -6.376704216003418
    3. ' ' → logprob: -13.751704216003418
    4. 'range' → logprob: -14.626704216003418
    5. ' range' → logprob: -15.876704216003418
    6. 'In' → logprob: -16.7517032623291
    7. '<|end|>' → logprob: -16.8767032623291
    8. 'n' → logprob: -17.0017032623291
    9. 'int' → logprob: -17.5017032623291
    10. '	in' → logprob: -17.8767032623291

Token 333: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.16023214161396027
    2. 'range' → logprob: -1.9102321863174438
    3. ' in' → logprob: -12.035232543945312
    4. 'in' → logprob: -13.535232543945312
    5. '(range' → logprob: -14.785232543945312
    6. ' ' → logprob: -15.785232543945312
    7. '0' → logprob: -16.535232543945312
    8. 'rang' → logprob: -17.410232543945312
    9. 'ran' → logprob: -18.035232543945312
    10. '	range' → logprob: -18.160232543945312

Token 334: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00023321842309087515
    2. '(' → logprob: -8.37523365020752
    3. 'self' → logprob: -13.12523365020752
    4. ' (' → logprob: -15.00023365020752
    5. '(
' → logprob: -16.625232696533203
    6. 's' → logprob: -16.625232696533203
    7. '(s' → logprob: -16.875232696533203
    8. ' self' → logprob: -17.375232696533203
    9. '[self' → logprob: -18.250232696533203
    10. '       ' → logprob: -18.750232696533203

Token 335: '.m' (ID: 1021)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003369611920788884
    2. ' self' → logprob: -6.3783698081970215
    3. 'm' → logprob: -6.7533698081970215
    4. '.m' → logprob: -8.003369331359863
    5. '(self' → logprob: -8.753369331359863
    6. '[self' → logprob: -12.878369331359863
    7. 's' → logprob: -14.003369331359863
    8. '.' → logprob: -14.003369331359863
    9. '	self' → logprob: -14.003369331359863
    10. '.self' → logprob: -14.503369331359863

Token 336: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.01820332556962967
    2. '):' → logprob: -4.018203258514404
    3. ':
' → logprob: -10.393203735351562
    4. ':' → logprob: -11.768203735351562
    5. '       ' → logprob: -12.268203735351562
    6. '   ' → logprob: -12.643203735351562
    7. '):
' → logprob: -13.143203735351562
    8. ' ):
' → logprob: -13.643203735351562
    9. '           ' → logprob: -13.893203735351562
    10. '():
' → logprob: -14.143203735351562

Token 337: '           ' (ID: 352)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6380800008773804
    2. '   ' → logprob: -0.7630800008773804
    3. 'for' → logprob: -5.76308012008667
    4. '       ' → logprob: -6.38808012008667
    5. '	for' → logprob: -7.63808012008667
    6. '           ' → logprob: -9.138079643249512
    7. ' ' → logprob: -10.138079643249512
    8. '	   ' → logprob: -11.888079643249512
    9. '	       ' → logprob: -13.638079643249512
    10. '```' → logprob: -13.888079643249512

Token 338: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.006716079078614712
    2. ' for' → logprob: -5.006716251373291
    3. '   ' → logprob: -14.381715774536133
    4. '       ' → logprob: -16.256715774536133
    5. '
' → logprob: -17.381715774536133
    6. ' ' → logprob: -18.381715774536133
    7. '	for' → logprob: -19.006715774536133
    8. '           ' → logprob: -20.256715774536133
    9. '```' → logprob: -20.631715774536133
    10. '        
' → logprob: -22.006715774536133

Token 339: ' r' (ID: 428)
  Prédit: 'r'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'r' → logprob: -0.04858759790658951
    2. ' r' → logprob: -3.0485875606536865
    3. '	r' → logprob: -16.423587799072266
    4. '_r' → logprob: -16.673587799072266
    5. ' ' → logprob: -17.048587799072266
    6. '(r' → logprob: -17.673587799072266
    7. 't' → logprob: -18.048587799072266
    8. 'def' → logprob: -18.298587799072266
    9. 'for' → logprob: -18.548587799072266
    10. '   ' → logprob: -18.548587799072266

Token 340: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001516173011623323
    2. 'in' → logprob: -6.501516342163086
    3. '<|end|>' → logprob: -11.376516342163086
    4. ' ' → logprob: -14.251516342163086
    5. 'range' → logprob: -15.126516342163086
    6. ' range' → logprob: -15.751516342163086
    7. '        ' → logprob: -15.751516342163086
    8. 'In' → logprob: -15.751516342163086
    9. '<|end|>' → logprob: -16.001516342163086
    10. ' for' → logprob: -16.126516342163086

Token 341: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3132758140563965
    2. 'range' → logprob: -1.3132758140563965
    3. '(range' → logprob: -11.188276290893555
    4. '0' → logprob: -16.438276290893555
    5. 'self' → logprob: -16.563276290893555
    6. '_range' → logprob: -17.063276290893555
    7. '	range' → logprob: -17.063276290893555
    8. ' self' → logprob: -17.188276290893555
    9. '(self' → logprob: -18.438276290893555
    10. '.range' → logprob: -18.438276290893555

Token 342: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.4736459888808895e-05
    2. '(' → logprob: -11.750014305114746
    3. ' (' → logprob: -12.375014305114746
    4. 'self' → logprob: -13.250014305114746
    5. ' self' → logprob: -14.750014305114746
    6. '[self' → logprob: -16.125015258789062
    7. '(s' → logprob: -16.500015258789062
    8. '(
' → logprob: -16.875015258789062
    9. 'range' → logprob: -17.250015258789062
    10. '+self' → logprob: -17.750015258789062

Token 343: '.n' (ID: 1835)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.26058682799339294
    2. '(self' → logprob: -1.5105868577957153
    3. ' self' → logprob: -5.135586738586426
    4. '       ' → logprob: -7.760586738586426
    5. '.' → logprob: -7.885586738586426
    6. '[self' → logprob: -8.010586738586426
    7. 's' → logprob: -8.135586738586426
    8. ' (' → logprob: -8.135586738586426
    9. '.self' → logprob: -8.135586738586426
    10. '           ' → logprob: -9.260586738586426

Token 344: ' -' (ID: 533)
  Prédit: ' -'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.0019677700474858284
    2. '-' → logprob: -6.251967906951904
    3. ' ' → logprob: -10.626967430114746
    4. ' self' → logprob: -13.251967430114746
    5. ')' → logprob: -13.501967430114746
    6. '):
' → logprob: -13.501967430114746
    7. '-self' → logprob: -13.501967430114746
    8. '       ' → logprob: -13.626967430114746
    9. '        ' → logprob: -13.751967430114746
    10. '           ' → logprob: -13.751967430114746

Token 345: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10021066665649414
    2. ' self' → logprob: -2.350210666656494
    3. '(self' → logprob: -13.350210189819336
    4. 'd' → logprob: -13.600210189819336
    5. '           ' → logprob: -15.100210189819336
    6. '       ' → logprob: -15.350210189819336
    7. '[self' → logprob: -15.850210189819336
    8. 's' → logprob: -16.225210189819336
    9. '	self' → logprob: -16.850210189819336
    10. ' ' → logprob: -16.975210189819336

Token 346: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -0.12751404941082
    2. 'd' → logprob: -2.127514123916626
    3. 'self' → logprob: -7.502513885498047
    4. '.' → logprob: -11.377513885498047
    5. '       ' → logprob: -12.127513885498047
    6. 's' → logprob: -12.752513885498047
    7. '           ' → logprob: -13.252513885498047
    8. '               ' → logprob: -13.752513885498047
    9. '_d' → logprob: -13.752513885498047
    10. '   ' → logprob: -14.002513885498047

Token 347: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.20141343772411346
    2. '+' → logprob: -1.7014133930206299
    3. ' ' → logprob: -16.576414108276367
    4. ' ' → logprob: -17.701414108276367
    5. ' +
' → logprob: -18.326414108276367
    6. '＋' → logprob: -18.451414108276367
    7. ' plus' → logprob: -18.576414108276367
    8. '+
' → logprob: -18.826414108276367
    9. '    ' → logprob: -19.076414108276367
    10. '[' → logprob: -19.326414108276367

Token 348: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001275353948585689
    2. ' ' → logprob: -6.876275539398193
    3. '+' → logprob: -8.376275062561035
    4. ' +' → logprob: -11.376275062561035
    5. '   ' → logprob: -15.501275062561035
    6. '0' → logprob: -15.501275062561035
    7. '           ' → logprob: -16.12627601623535
    8. '```' → logprob: -16.87627601623535
    9. '                   ' → logprob: -17.12627601623535
    10. '<|end|>' → logprob: -17.37627601623535

Token 349: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.010044100694358349
    2. '+' → logprob: -4.635044097900391
    3. ' ' → logprob: -8.76004409790039
    4. ' +' → logprob: -9.01004409790039
    5. '0' → logprob: -12.01004409790039
    6. '   ' → logprob: -13.13504409790039
    7. '       ' → logprob: -15.13504409790039
    8. '```' → logprob: -15.76004409790039
    9. '           ' → logprob: -16.01004409790039
    10. '    ' → logprob: -16.63504409790039

Token 350: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.2521003186702728
    2. '):
' → logprob: -1.5021003484725952
    3. ':' → logprob: -9.627099990844727
    4. ')' → logprob: -10.502099990844727
    5. '               ' → logprob: -10.627099990844727
    6. '           ' → logprob: -10.752099990844727
    7. '):
' → logprob: -11.127099990844727
    8. ' ):' → logprob: -12.252099990844727
    9. '):

' → logprob: -12.377099990844727
    10. '       ' → logprob: -12.627099990844727

Token 351: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00011844364780699834
    2. '           ' → logprob: -9.875118255615234
    3. 'if' → logprob: -10.000118255615234
    4. ' if' → logprob: -11.375118255615234
    5. '                   ' → logprob: -12.375118255615234
    6. '	           ' → logprob: -12.875118255615234
    7. '		       ' → logprob: -14.250118255615234
    8. '<|end|>' → logprob: -14.250118255615234
    9. '       ' → logprob: -15.000118255615234
    10. '```' → logprob: -15.250118255615234

Token 352: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.031505271792411804
    2. ' if' → logprob: -3.5315053462982178
    3. '               ' → logprob: -6.406505107879639
    4. '           ' → logprob: -9.781505584716797
    5. '                   ' → logprob: -10.031505584716797
    6. '   ' → logprob: -14.156505584716797
    7. '
' → logprob: -15.406505584716797
    8. '	if' → logprob: -15.656505584716797
    9. '       ' → logprob: -15.781505584716797
    10. '```' → logprob: -15.906505584716797

Token 353: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.04865594953298569
    2. 'self' → logprob: -3.0486559867858887
    3. '(self' → logprob: -9.92365550994873
    4. '	self' → logprob: -12.17365550994873
    5. '<|end|>' → logprob: -12.29865550994873
    6. '```' → logprob: -13.29865550994873
    7. '[self' → logprob: -13.42365550994873
    8. ' ' → logprob: -13.67365550994873
    9. '_self' → logprob: -13.67365550994873
    10. 'Self' → logprob: -13.67365550994873

Token 354: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -2.999452772201039e-05
    2. 'grid' → logprob: -10.500029563903809
    3. '.' → logprob: -13.750029563903809
    4. ' grid' → logprob: -14.625029563903809
    5. ' .' → logprob: -15.125029563903809
    6. '	grid' → logprob: -15.125029563903809
    7. 'self' → logprob: -15.375029563903809
    8. ':grid' → logprob: -16.125030517578125
    9. '.Grid' → logprob: -18.250030517578125

Token 355: '.segment' (ID: 137597)
  Prédit: '.segment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.segment' → logprob: -1.8624639324116288e-06
    2. '.' → logprob: -13.500001907348633
    3. ' .' → logprob: -15.375001907348633
    4. 'segment' → logprob: -15.750001907348633
    5. '.section' → logprob: -18.250001907348633
    6. '.seg' → logprob: -18.375001907348633
    7. '.se' → logprob: -19.375001907348633
    8. '   ' → logprob: -20.500001907348633
    9. ' segment' → logprob: -20.750001907348633
    10. '.sequence' → logprob: -21.500001907348633

Token 356: '_free' (ID: 21204)
  Prédit: '_free'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_free' → logprob: -2.339278580620885e-06
    2. 'free' → logprob: -13.750001907348633
    3. '.free' → logprob: -13.875001907348633
    4. 'Free' → logprob: -15.750001907348633
    5. '._' → logprob: -16.750001907348633
    6. '_FREE' → logprob: -17.250001907348633
    7. '-free' → logprob: -17.375001907348633
    8. '_safe' → logprob: -17.875001907348633
    9. '.Free' → logprob: -18.000001907348633
    10. ' free' → logprob: -18.375001907348633

Token 357: '(r' (ID: 4729)
  Prédit: '(r'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(r' → logprob: -2.5776860184123507e-06
    2. '(' → logprob: -13.00000286102295
    3. '(
' → logprob: -15.75000286102295
    4. 'r' → logprob: -15.87500286102295
    5. '   ' → logprob: -17.875001907348633
    6. ' (' → logprob: -18.500001907348633
    7. '           ' → logprob: -18.750001907348633
    8. '               ' → logprob: -18.750001907348633
    9. '       ' → logprob: -19.125001907348633
    10. '[r' → logprob: -20.500001907348633

Token 358: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.7755875129951164e-05
    2. ' ,' → logprob: -10.25004768371582
    3. ',c' → logprob: -11.62504768371582
    4. 'c' → logprob: -13.37504768371582
    5. '               ' → logprob: -14.12504768371582
    6. '           ' → logprob: -14.62504768371582
    7. 's' → logprob: -15.75004768371582
    8. ',
' → logprob: -15.75004768371582
    9. '                   ' → logprob: -15.87504768371582
    10. '(c' → logprob: -16.62504768371582

Token 359: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.014164687134325504
    2. ' c' → logprob: -4.264164924621582
    3. '           ' → logprob: -15.139164924621582
    4. '   ' → logprob: -15.389164924621582
    5. '       ' → logprob: -16.139163970947266
    6. ')c' → logprob: -16.264163970947266
    7. '               ' → logprob: -16.389163970947266
    8. ' ' → logprob: -16.389163970947266
    9. '                   ' → logprob: -16.514163970947266
    10. '(c' → logprob: -16.639163970947266

Token 360: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.93710636976175e-05
    2. ' ,' → logprob: -9.500099182128906
    3. ',self' → logprob: -11.125099182128906
    4. 'self' → logprob: -11.750099182128906
    5. ' self' → logprob: -14.750099182128906
    6. '           ' → logprob: -14.750099182128906
    7. '               ' → logprob: -15.125099182128906
    8. '(self' → logprob: -15.375099182128906
    9. ',
' → logprob: -15.625099182128906
    10. '                   ' → logprob: -16.375099182128906

Token 361: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.003183182328939438
    2. ' self' → logprob: -5.753183364868164
    3. '               ' → logprob: -13.128183364868164
    4. '                   ' → logprob: -13.753183364868164
    5. '           ' → logprob: -14.253183364868164
    6. '[self' → logprob: -14.503183364868164
    7. '(self' → logprob: -15.253183364868164
    8. '                               ' → logprob: -15.503183364868164
    9. '<|end|>' → logprob: -15.753183364868164
    10. 'd' → logprob: -16.128183364868164

Token 362: '.d' (ID: 1380)
  Prédit: '.d'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.d' → logprob: -2.629921436891891e-05
    2. 'self' → logprob: -10.87502670288086
    3. 'd' → logprob: -12.50002670288086
    4. '.' → logprob: -13.00002670288086
    5. ',' → logprob: -14.25002670288086
    6. ',d' → logprob: -15.00002670288086
    7. ' .' → logprob: -17.00002670288086
    8. ' self' → logprob: -17.25002670288086
    9. '   ' → logprob: -17.50002670288086
    10. '
' → logprob: -18.12502670288086

Token 363: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.319370302458992e-06
    2. ' ,' → logprob: -12.625005722045898
    3. 'self' → logprob: -13.500005722045898
    4. ',self' → logprob: -15.250005722045898
    5. ',
' → logprob: -16.0000057220459
    6. '),' → logprob: -16.8750057220459
    7. '',' → logprob: -17.0000057220459
    8. 's' → logprob: -17.2500057220459
    9. '           ' → logprob: -17.5000057220459
    10. ')' → logprob: -17.7500057220459

Token 364: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007617863826453686
    2. ' self' → logprob: -4.882617950439453
    3. '           ' → logprob: -12.382617950439453
    4. '               ' → logprob: -12.632617950439453
    5. '                   ' → logprob: -13.007617950439453
    6. '                               ' → logprob: -15.007617950439453
    7. '(self' → logprob: -15.007617950439453
    8. '                       ' → logprob: -15.132617950439453
    9. '                           ' → logprob: -15.632617950439453
    10. '   ' → logprob: -15.757617950439453

Token 365: '.Co' (ID: 102505)
  Prédit: '.Co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Co' → logprob: -0.0001037815964082256
    2. 'self' → logprob: -9.375103950500488
    3. 'Coordinates' → logprob: -11.375103950500488
    4. ' self' → logprob: -12.375103950500488
    5. '.Refresh' → logprob: -14.125103950500488
    6. 'Co' → logprob: -14.375103950500488
    7. '.' → logprob: -14.375103950500488
    8. '.CO' → logprob: -14.625103950500488
    9. '.Com' → logprob: -15.625103950500488
    10. ' .' → logprob: -15.875103950500488

Token 366: 'ordinates' (ID: 15343)
  Prédit: 'rd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rd' → logprob: -0.05105677247047424
    2. 'ordinates' → logprob: -3.0510568618774414
    3. 'r' → logprob: -6.176056861877441
    4. 'ords' → logprob: -8.176056861877441
    5. 'ord' → logprob: -10.426056861877441
    6. 'rt' → logprob: -11.301056861877441
    7. 'd' → logprob: -11.301056861877441
    8. 'Coordinates' → logprob: -11.801056861877441
    9. 'Rd' → logprob: -12.051056861877441
    10. 'fficients' → logprob: -12.301056861877441

Token 367: '.Direction' (ID: 107082)
  Prédit: '.Direction'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.Direction' → logprob: -2.339278580620885e-06
    2. '(Direction' → logprob: -13.750001907348633
    3. 'Direction' → logprob: -14.625001907348633
    4. '.' → logprob: -14.625001907348633
    5. '.Direct' → logprob: -16.000001907348633
    6. ' .' → logprob: -16.250001907348633
    7. ' Direction' → logprob: -17.625001907348633
    8. '.D' → logprob: -17.750001907348633
    9. '_DIRECTION' → logprob: -18.500001907348633
    10. '.Dimension' → logprob: -18.625001907348633

Token 368: '.VERTICAL' (ID: 126864)
  Prédit: '.VERTICAL'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.VERTICAL' → logprob: -0.0004377022560220212
    2. 'VERT' → logprob: -7.7504377365112305
    3. '.' → logprob: -12.37543773651123
    4. '.V' → logprob: -13.12543773651123
    5. '.HORIZONTAL' → logprob: -15.12543773651123
    6. 'vertical' → logprob: -15.75043773651123
    7. '.Vertical' → logprob: -16.500436782836914
    8. ' .' → logprob: -16.625436782836914
    9. '_VERTICAL' → logprob: -17.125436782836914
    10. 'Vertical' → logprob: -17.875436782836914

Token 369: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03834429010748863
    2. '):' → logprob: -3.288344383239746
    3. '               ' → logprob: -9.038344383239746
    4. '                   ' → logprob: -9.288344383239746
    5. '):
' → logprob: -9.663344383239746
    6. '           ' → logprob: -11.913344383239746
    7. ' ):
' → logprob: -12.038344383239746
    8. '):

' → logprob: -12.663344383239746
    9. ')' → logprob: -12.663344383239746
    10. ':
' → logprob: -12.788344383239746

Token 370: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0030428392346948385
    2. 'count' → logprob: -6.003042697906494
    3. ' count' → logprob: -7.753042697906494
    4. '                       ' → logprob: -9.753043174743652
    5. '               ' → logprob: -10.128043174743652
    6. '                  ' → logprob: -11.128043174743652
    7. '           ' → logprob: -11.128043174743652
    8. '                    ' → logprob: -12.003043174743652
    9. '                 ' → logprob: -13.878043174743652
    10. '       ' → logprob: -14.378043174743652

Token 371: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.03829507902264595
    2. ' count' → logprob: -3.288295030593872
    3. '                       ' → logprob: -8.788294792175293
    4. '                   ' → logprob: -9.288294792175293
    5. '
' → logprob: -12.663294792175293
    6. '               ' → logprob: -13.413294792175293
    7. ' ' → logprob: -13.538294792175293
    8. '[count' → logprob: -14.538294792175293
    9. '                    ' → logprob: -14.913294792175293
    10. '	count' → logprob: -15.163294792175293

Token 372: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.31331807374954224
    2. '+=' → logprob: -1.3133180141448975
    3. ']+=' → logprob: -10.188318252563477
    4. '                   ' → logprob: -12.563318252563477
    5. '           ' → logprob: -12.813318252563477
    6. '+' → logprob: -12.938318252563477
    7. '               ' → logprob: -13.313318252563477
    8. '            ' → logprob: -13.313318252563477
    9. '          ' → logprob: -13.563318252563477
    10. '                    ' → logprob: -13.688318252563477

Token 373: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.014164329506456852
    2. ' ' → logprob: -4.264164447784424
    3. '                   ' → logprob: -15.389163970947266
    4. '(' → logprob: -15.764163970947266
    5. '   ' → logprob: -16.139163970947266
    6. '               ' → logprob: -16.264163970947266
    7. '           ' → logprob: -16.264163970947266
    8. '                       ' → logprob: -16.764163970947266
    9. '```' → logprob: -16.764163970947266
    10. '
' → logprob: -16.889163970947266

Token 374: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.4121114822482923e-06
    2. ' ' → logprob: -12.625003814697266
    3. '   ' → logprob: -18.125003814697266
    4. '```' → logprob: -19.000003814697266
    5. '<|end|>' → logprob: -19.750003814697266
    6. '0' → logprob: -20.000003814697266
    7. '           ' → logprob: -20.000003814697266
    8. '                   ' → logprob: -20.125003814697266
    9. '       ' → logprob: -20.125003814697266
    10. ')' → logprob: -20.250003814697266

Token 375: '
        
' (ID: 20417)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11094222962856293
    2. '
' → logprob: -3.1109421253204346
    3. 'return' → logprob: -3.1109421253204346
    4. ' return' → logprob: -4.860942363739014
    5. '	return' → logprob: -5.610942363739014
    6. '   ' → logprob: -5.735942363739014
    7. '<|end|>' → logprob: -7.610942363739014
    8. '        
' → logprob: -8.485941886901855
    9. '```' → logprob: -8.735941886901855
    10. '	' → logprob: -9.110941886901855

Token 376: '       ' (ID: 309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.02326982282102108
    2. '       ' → logprob: -3.7732698917388916
    3. ' return' → logprob: -10.773269653320312
    4. '   ' → logprob: -12.773269653320312
    5. '	return' → logprob: -14.648269653320312
    6. '```' → logprob: -16.273269653320312
    7. '{return' → logprob: -17.148269653320312
    8. ')return' → logprob: -19.148269653320312
    9. ':return' → logprob: -19.148269653320312
    10. '           ' → logprob: -19.273269653320312

Token 377: ' #' (ID: 1069)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -5.5577775128767826e-06
    2. '       ' → logprob: -12.250005722045898
    3. ' return' → logprob: -14.250005722045898
    4. '   ' → logprob: -17.0000057220459
    5. '```' → logprob: -18.2500057220459
    6. '	return' → logprob: -18.7500057220459
    7. '
' → logprob: -19.2500057220459
    8. '{return' → logprob: -19.5000057220459
    9. '        
' → logprob: -20.6250057220459
    10. 'ret' → logprob: -20.7500057220459

Token 378: ' Special' (ID: 12586)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -2.451116051815916e-05
    2. ' return' → logprob: -10.750024795532227
    3. '       ' → logprob: -12.750024795532227
    4. '
' → logprob: -17.125024795532227
    5. 'if' → logprob: -17.625024795532227
    6. '   ' → logprob: -18.750024795532227
    7. 'Return' → logprob: -18.875024795532227
    8. '        
' → logprob: -19.625024795532227
    9. '	return' → logprob: -20.375024795532227
    10. '```' → logprob: -20.500024795532227

Token 379: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.5761201977729797
    2. ' case' → logprob: -0.9511201977729797
    3. 'if' → logprob: -3.451120138168335
    4. ' if' → logprob: -4.076120376586914
    5. '
' → logprob: -6.951120376586914
    6. 'return' → logprob: -7.326120376586914
    7. ' return' → logprob: -7.576120376586914
    8. '_case' → logprob: -8.701120376586914
    9. 'cases' → logprob: -8.826120376586914
    10. 'c' → logprob: -9.326120376586914

Token 380: ':' (ID: 25)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.08855058997869492
    2. 'if' → logprob: -2.588550567626953
    3. '       ' → logprob: -5.463550567626953
    4. ':' → logprob: -5.463550567626953
    5. ' when' → logprob: -7.338550567626953
    6. ' for' → logprob: -8.213550567626953
    7. '<|end|>' → logprob: -8.963550567626953
    8. 'when' → logprob: -10.963550567626953
    9. '        
' → logprob: -11.338550567626953
    10. '	if' → logprob: -11.588550567626953

Token 381: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.005247748922556639
    2. ' if' → logprob: -5.255247592926025
    3. 'self' → logprob: -12.255248069763184
    4. '       ' → logprob: -12.380248069763184
    5. 'If' → logprob: -12.755248069763184
    6. '
' → logprob: -14.255248069763184
    7. 'return' → logprob: -14.755248069763184
    8. '1' → logprob: -15.005248069763184
    9. '   ' → logprob: -15.505248069763184
    10. '0' → logprob: -15.755248069763184

Token 382: ' d' (ID: 272)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.3905079960823059
    2. ' self' → logprob: -1.1405079364776611
    3. 'd' → logprob: -5.64050817489624
    4. ' d' → logprob: -9.890507698059082
    5. '(self' → logprob: -11.765507698059082
    6. '	self' → logprob: -11.890507698059082
    7. ' ' → logprob: -12.140507698059082
    8. '
' → logprob: -12.765507698059082
    9. '   ' → logprob: -13.265507698059082
    10. '<|end|>' → logprob: -14.015507698059082

Token 383: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.42949002981185913
    2. ' ==' → logprob: -1.054490089416504
    3. '=' → logprob: -7.429490089416504
    4. '>' → logprob: -9.429490089416504
    5. '```' → logprob: -10.054490089416504
    6. ')' → logprob: -11.554490089416504
    7. ' =' → logprob: -11.554490089416504
    8. '===' → logprob: -11.804490089416504
    9. '==
' → logprob: -11.804490089416504
    10. ' is' → logprob: -12.179490089416504

Token 384: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0010353106772527099
    2. ' ' → logprob: -6.876035213470459
    3. '=' → logprob: -13.751035690307617
    4. '==' → logprob: -14.876035690307617
    5. '   ' → logprob: -15.251035690307617
    6. '```' → logprob: -15.938535690307617
    7. '>' → logprob: -16.126035690307617
    8. '  ' → logprob: -16.501035690307617
    9. '2' → logprob: -16.501035690307617
    10. 'length' → logprob: -16.563535690307617

Token 385: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5690089639974758e-05
    2. ' ' → logprob: -11.125015258789062
    3. '   ' → logprob: -16.062515258789062
    4. 'length' → logprob: -16.125015258789062
    5. '2' → logprob: -16.500015258789062
    6. '=' → logprob: -17.000015258789062
    7. '0' → logprob: -17.125015258789062
    8. '１' → logprob: -17.312515258789062
    9. '==' → logprob: -17.375015258789062
    10. '```' → logprob: -17.625015258789062

Token 386: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34400123357772827
    2. ':
' → logprob: -1.344001293182373
    3. ' and' → logprob: -3.719001293182373
    4. ':return' → logprob: -6.469001293182373
    5. '           ' → logprob: -6.969001293182373
    6. '   ' → logprob: -6.969001293182373
    7. ',' → logprob: -7.344001293182373
    8. 'and' → logprob: -7.344001293182373
    9. '       ' → logprob: -7.469001293182373
    10. ' :' → logprob: -8.219000816345215

Token 387: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.05583839863538742
    2. 'return' → logprob: -3.0558383464813232
    3. ' count' → logprob: -5.180838584899902
    4. ' return' → logprob: -6.680838584899902
    5. '       ' → logprob: -8.055838584899902
    6. '#' → logprob: -11.555838584899902
    7. 'divide' → logprob: -11.805838584899902
    8. '   ' → logprob: -12.180838584899902
    9. 'subtract' → logprob: -13.430838584899902
    10. '
' → logprob: -14.305838584899902

Token 388: ' each' (ID: 2454)
  Prédit: ' //'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' //' → logprob: -0.3641517162322998
    2. '//=' → logprob: -1.3641517162322998
    3. '//' → logprob: -3.7391517162323
    4. '=' → logprob: -4.364151954650879
    5. '-=' → logprob: -4.739151954650879
    6. ' -=' → logprob: -6.364151954650879
    7. '+=' → logprob: -6.989151954650879
    8. 'count' → logprob: -7.489151954650879
    9. ' =' → logprob: -8.364151954650879
    10. '/=' → logprob: -8.489151954650879

Token 389: ' free' (ID: 2240)
  Prédit: 'free'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'free' → logprob: -0.29284217953681946
    2. 'cell' → logprob: -1.667842149734497
    3. '.' → logprob: -3.417842149734497
    4. 'empty' → logprob: -3.917842149734497
    5. ''.' → logprob: -5.292842388153076
    6. 'position' → logprob: -6.042842388153076
    7. ' free' → logprob: -6.417842388153076
    8. ' cell' → logprob: -6.917842388153076
    9. 'occupied' → logprob: -7.542842388153076
    10. 'segment' → logprob: -7.917842388153076

Token 390: ' cell' (ID: 4206)
  Prédit: 'cell'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cell' → logprob: -0.2256668210029602
    2. ' cell' → logprob: -1.6006667613983154
    3. '.' → logprob: -9.225666999816895
    4. 'position' → logprob: -10.225666999816895
    5. 'space' → logprob: -10.475666999816895
    6. '_cell' → logprob: -10.975666999816895
    7. '.cell' → logprob: -11.100666999816895
    8. '	cell' → logprob: -11.350666999816895
    9. 'cells' → logprob: -11.350666999816895
    10. '
' → logprob: -11.725666999816895

Token 391: ' once' (ID: 4730)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.49105584621429443
    2. ' //' → logprob: -0.9910558462142944
    3. '//' → logprob: -5.366055965423584
    4. '           ' → logprob: -5.741055965423584
    5. '        ' → logprob: -6.491055965423584
    6. ' >>=' → logprob: -6.866055965423584
    7. ' for' → logprob: -6.991055965423584
    8. ',' → logprob: -7.366055965423584
    9. ' return' → logprob: -7.491055965423584
    10. '   ' → logprob: -7.491055965423584

Token 392: ' (' (ID: 350)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05520767346024513
    2. ',' → logprob: -3.4302077293395996
    3. '           ' → logprob: -4.1802077293396
    4. '
' → logprob: -6.5552077293396
    5. ' instead' → logprob: -6.6802077293396
    6. ' and' → logprob: -6.9302077293396
    7. ' because' → logprob: -7.8052077293396
    8. '.' → logprob: -7.8052077293396
    9. ' return' → logprob: -8.180207252502441
    10. ',
' → logprob: -8.430207252502441

Token 393: 'not' (ID: 2878)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.4480162262916565
    2. 'return' → logprob: -2.0730161666870117
    3. ' count' → logprob: -2.6980161666870117
    4. ')' → logprob: -2.8230161666870117
    5. ' return' → logprob: -2.8230161666870117
    6. '       ' → logprob: -3.3230161666870117
    7. '
' → logprob: -5.073016166687012
    8. '           ' → logprob: -6.198016166687012
    9. ')
' → logprob: -6.323016166687012
    10. ',' → logprob: -7.073016166687012

Token 394: ' in' (ID: 306)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -1.071602702140808
    2. 'double' → logprob: -1.571602702140808
    3. '*' → logprob: -1.696602702140808
    4. ' double' → logprob: -2.3216028213500977
    5. ' doubled' → logprob: -3.0716028213500977
    6. ' twice' → logprob: -3.8216028213500977
    7. 'halve' → logprob: -3.9466028213500977
    8. ' ' → logprob: -4.071602821350098
    9. 'd' → logprob: -4.196602821350098
    10. 'multiply' → logprob: -4.696602821350098

Token 395: ' the' (ID: 290)
  Prédit: ' both'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' both' → logprob: -0.357555627822876
    2. 'both' → logprob: -1.357555627822876
    3. ' two' → logprob: -4.232555389404297
    4. 'count' → logprob: -5.232555389404297
    5. ' this' → logprob: -5.357555389404297
    6. 'horizontal' → logprob: -5.857555389404297
    7. ' horizontal' → logprob: -6.482555389404297
    8. 'this' → logprob: -6.482555389404297
    9. 'two' → logprob: -6.482555389404297
    10. 'self' → logprob: -6.607555389404297

Token 396: ' problem' (ID: 4792)
  Prédit: ' code'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' code' → logprob: -1.1615583896636963
    2. 'else' → logprob: -1.7865583896636963
    3. 'count' → logprob: -2.5365583896636963
    4. ' next' → logprob: -2.6615583896636963
    5. 'code' → logprob: -2.9115583896636963
    6. 'next' → logprob: -3.1615583896636963
    7. 'second' → logprob: -3.4115583896636963
    8. 'if' → logprob: -3.4115583896636963
    9. 'horizontal' → logprob: -3.5365583896636963
    10. ' second' → logprob: -3.9115583896636963

Token 397: ' constraints' (ID: 31060)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6945343017578125
    2. ')
' → logprob: -1.0695343017578125
    3. '       ' → logprob: -2.0695343017578125
    4. 'return' → logprob: -4.3195343017578125
    5. 'else' → logprob: -5.6945343017578125
    6. ',' → logprob: -5.6945343017578125
    7. ' else' → logprob: -6.1945343017578125
    8. '
' → logprob: -6.3195343017578125
    9. '   ' → logprob: -6.9445343017578125
    10. '           ' → logprob: -7.1945343017578125

Token 398: ' but' (ID: 889)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6755326390266418
    2. ')' → logprob: -1.300532579421997
    3. ',' → logprob: -1.800532579421997
    4. '           ' → logprob: -3.925532579421997
    5. '
' → logprob: -4.800532817840576
    6. ' if' → logprob: -5.800532817840576
    7. ' and' → logprob: -6.175532817840576
    8. ' return' → logprob: -6.175532817840576
    9. '.' → logprob: -6.300532817840576
    10. '),' → logprob: -6.425532817840576

Token 399: ' general' (ID: 5985)
  Prédit: ' return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' return' → logprob: -0.6358915567398071
    2. 'return' → logprob: -0.8858915567398071
    3. '       ' → logprob: -3.2608914375305176
    4. ')' → logprob: -5.635891437530518
    5. ' correct' → logprob: -5.885891437530518
    6. ' possible' → logprob: -5.885891437530518
    7. '           ' → logprob: -6.635891437530518
    8. ':return' → logprob: -6.635891437530518
    9. '
' → logprob: -7.010891437530518
    10. '    ' → logprob: -7.260891437530518

Token 400: ')
' (ID: 446)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.6438049674034119
    2. ' case' → logprob: -1.0188050270080566
    3. 'ize' → logprob: -3.5188050270080566
    4. 'izing' → logprob: -4.018805027008057
    5. ' practice' → logprob: -4.268805027008057
    6. 'ized' → logprob: -4.643805027008057
    7. 'ization' → logprob: -4.893805027008057
    8. ' code' → logprob: -5.268805027008057
    9. ' logic' → logprob: -5.518805027008057
    10. ')' → logprob: -5.768805027008057

Token 401: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0023519801907241344
    2. '        
' → logprob: -7.377351760864258
    3. ' return' → logprob: -7.877351760864258
    4. '
' → logprob: -7.877351760864258
    5. ' if' → logprob: -8.002351760864258
    6. '           ' → logprob: -8.127351760864258
    7. 'return' → logprob: -8.877351760864258
    8. ',' → logprob: -9.877351760864258
    9. '        ' → logprob: -10.002351760864258
    10. '   ' → logprob: -10.377351760864258

Token 402: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.316266268491745
    2. 'if' → logprob: -1.8162662982940674
    3. ' if' → logprob: -2.5662662982940674
    4. 'return' → logprob: -3.5662662982940674
    5. ' return' → logprob: -5.941266059875488
    6. '
' → logprob: -7.941266059875488
    7. '   ' → logprob: -8.441266059875488
    8. '        
' → logprob: -9.441266059875488
    9. '```' → logprob: -9.566266059875488
    10. ' ' → logprob: -10.816266059875488

Token 403: ' Here' (ID: 7306)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5720585584640503
    2. '       ' → logprob: -1.1970585584640503
    3. 'if' → logprob: -2.19705867767334
    4. ' return' → logprob: -4.44705867767334
    5. ' if' → logprob: -4.57205867767334
    6. '
' → logprob: -8.82205867767334
    7. '   ' → logprob: -9.19705867767334
    8. '        
' → logprob: -9.94705867767334
    9. '```' → logprob: -10.69705867767334
    10. ' ' → logprob: -11.57205867767334

Token 404: ' d' (ID: 272)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23512229323387146
    2. ' if' → logprob: -2.1101222038269043
    3. '        ' → logprob: -3.1101222038269043
    4. ',' → logprob: -4.360122203826904
    5. ':' → logprob: -4.985122203826904
    6. '
' → logprob: -5.485122203826904
    7. 'return' → logprob: -5.485122203826904
    8. ' return' → logprob: -5.485122203826904
    9. '        
' → logprob: -5.735122203826904
    10. ' is' → logprob: -6.735122203826904

Token 405: ' >=' (ID: 5064)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1876429170370102
    2. '==' → logprob: -1.9376429319381714
    3. ' !=' → logprob: -3.937642812728882
    4. ' >' → logprob: -5.187643051147461
    5. '>' → logprob: -6.812643051147461
    6. '!=' → logprob: -7.312643051147461
    7. '=' → logprob: -9.062643051147461
    8. ' ' → logprob: -10.562643051147461
    9. ' =' → logprob: -10.937643051147461
    10. '   ' → logprob: -12.437643051147461

Token 406: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.013574988581240177
    2. '1' → logprob: -4.388575077056885
    3. ' ' → logprob: -6.888575077056885
    4. '```' → logprob: -10.888574600219727
    5. '   ' → logprob: -12.013574600219727
    6. '>' → logprob: -12.263574600219727
    7. '3' → logprob: -12.826074600219727
    8. '=' → logprob: -13.263574600219727
    9. 'self' → logprob: -13.263574600219727
    10. '...' → logprob: -14.513574600219727

Token 407: '2' (ID: 17)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.5231873393058777
    2. '2' → logprob: -0.8981873393058777
    3. ' ' → logprob: -10.398187637329102
    4. '```' → logprob: -11.023187637329102
    5. '>' → logprob: -12.460687637329102
    6. '   ' → logprob: -12.835687637329102
    7. '
' → logprob: -13.335687637329102
    8. '...' → logprob: -13.460687637329102
    9. 'self' → logprob: -14.335687637329102
    10. '0' → logprob: -14.773187637329102

Token 408: ' by' (ID: 656)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006973597686737776
    2. 'return' → logprob: -5.006973743438721
    3. ' return' → logprob: -8.631973266601562
    4. '   ' → logprob: -10.131973266601562
    5. '
' → logprob: -10.881973266601562
    6. '	return' → logprob: -11.131973266601562
    7. '	' → logprob: -12.756973266601562
    8. '        
' → logprob: -13.631973266601562
    9. '           ' → logprob: -13.881973266601562
    10. '```' → logprob: -14.631973266601562

Token 409: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.00036382899270392954
    2. ' problem' → logprob: -8.250364303588867
    3. 'definition' → logprob: -9.500364303588867
    4. 'the' → logprob: -10.625364303588867
    5. 'constraint' → logprob: -13.125364303588867
    6. 'default' → logprob: -14.625364303588867
    7. 'constraints' → logprob: -14.875364303588867
    8. 'description' → logprob: -15.750364303588867
    9. 'statement' → logprob: -16.000364303588867
    10. '(problem' → logprob: -16.250364303588867

Token 410: ' statement' (ID: 9710)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.061686184257268906
    2. ' return' → logprob: -3.1866862773895264
    3. '
' → logprob: -4.436686038970947
    4. 'return' → logprob: -5.311686038970947
    5. '<|end|>' → logprob: -7.186686038970947
    6. '   ' → logprob: -8.186686515808105
    7. '        
' → logprob: -8.686686515808105
    8. ':return' → logprob: -8.811686515808105
    9. ' ' → logprob: -9.561686515808105
    10. '               ' → logprob: -9.561686515808105

Token 411: ',' (ID: 11)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023836404085159302
    2. 'return' → logprob: -3.773836374282837
    3. ' return' → logprob: -7.773836612701416
    4. '   ' → logprob: -9.398836135864258
    5. '	return' → logprob: -9.898836135864258
    6. '	' → logprob: -11.523836135864258
    7. '<|end|>' → logprob: -11.523836135864258
    8. '
' → logprob: -11.773836135864258
    9. '           ' → logprob: -12.773836135864258
    10. '        
' → logprob: -13.523836135864258

Token 412: ' so' (ID: 813)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.6042715907096863
    2. '       ' → logprob: -1.104271650314331
    3. ' return' → logprob: -2.104271650314331
    4. '   ' → logprob: -9.47927188873291
    5. '	return' → logprob: -10.85427188873291
    6. ' ' → logprob: -11.72927188873291
    7. '           ' → logprob: -11.85427188873291
    8. '      ' → logprob: -12.22927188873291
    9. '
' → logprob: -12.35427188873291
    10. ':return' → logprob: -12.47927188873291

Token 413: ' no' (ID: 860)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.042292334139347076
    2. ' return' → logprob: -3.417292356491089
    3. 'pass' → logprob: -5.29229211807251
    4. '       ' → logprob: -5.91729211807251
    5. ' pass' → logprob: -7.16729211807251
    6. '   ' → logprob: -9.292292594909668
    7. '           ' → logprob: -12.292292594909668
    8. 'count' → logprob: -12.542292594909668
    9. '    ' → logprob: -12.667292594909668
    10. '```' → logprob: -13.167292594909668

Token 414: ' need' (ID: 1309)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.07217594236135483
    2. ' return' → logprob: -3.697175979614258
    3. 'special' → logprob: -3.697175979614258
    4. 'else' → logprob: -5.197175979614258
    5. 'need' → logprob: -5.197175979614258
    6. ' adjustment' → logprob: -5.947175979614258
    7. 'adjust' → logprob: -6.197175979614258
    8. ' special' → logprob: -7.072175979614258
    9. 'additional' → logprob: -7.072175979614258
    10. ' need' → logprob: -7.072175979614258

Token 415: ' to' (ID: 316)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02718355506658554
    2. 'return' → logprob: -4.152183532714844
    3. ' return' → logprob: -4.527183532714844
    4. '   ' → logprob: -8.777183532714844
    5. '	return' → logprob: -9.777183532714844
    6. '           ' → logprob: -11.277183532714844
    7. '.' → logprob: -11.402183532714844
    8. '      ' → logprob: -11.527183532714844
    9. ':return' → logprob: -11.652183532714844
    10. '               ' → logprob: -12.277183532714844

Token 416: ' handle' (ID: 5318)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.18767039477825165
    2. 'handle' → logprob: -3.0626704692840576
    3. 'adjust' → logprob: -3.1876704692840576
    4. 'else' → logprob: -3.3126704692840576
    5. 'add' → logprob: -3.9376704692840576
    6. 'special' → logprob: -4.6876702308654785
    7. 'change' → logprob: -5.5626702308654785
    8. ' return' → logprob: -5.5626702308654785
    9. 'subtract' → logprob: -5.8126702308654785
    10. 'ded' → logprob: -6.0626702308654785

Token 417: ' overl' (ID: 44297)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.5952561497688293
    2. '       ' → logprob: -0.8452561497688293
    3. ' return' → logprob: -3.9702560901641846
    4. '	return' → logprob: -8.720255851745605
    5. '   ' → logprob: -9.845255851745605
    6. '<|end|>' → logprob: -11.345255851745605
    7. ':return' → logprob: -11.720255851745605
    8. '      ' → logprob: -12.220255851745605
    9. '	' → logprob: -12.720255851745605
    10. '{return' → logprob: -12.720255851745605

Token 418: 'apped' (ID: 9035)
  Prédit: 'ap'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ap' → logprob: -0.3463687300682068
    2. 'oad' → logprob: -2.0963687896728516
    3. 'apping' → logprob: -2.0963687896728516
    4. 'apped' → logprob: -3.7213687896728516
    5. 'aps' → logprob: -4.471368789672852
    6. 'ow' → logprob: -6.096368789672852
    7. 'ooks' → logprob: -6.721368789672852
    8. 'app' → logprob: -6.846368789672852
    9. 'aping' → logprob: -6.971368789672852
    10. 'count' → logprob: -7.096368789672852

Token 419: ' counting' (ID: 43276)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.40691590309143066
    2. '       ' → logprob: -1.4069159030914307
    3. ' return' → logprob: -2.5319159030914307
    4. '
' → logprob: -4.906915664672852
    5. '        
' → logprob: -6.156915664672852
    6. '   ' → logprob: -9.156915664672852
    7. 'count' → logprob: -9.406915664672852
    8. ':return' → logprob: -10.281915664672852
    9. '```' → logprob: -10.406915664672852
    10. '<|end|>' → logprob: -10.406915664672852

Token 420: '

' (ID: 279)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0028662122786045074
    2. 'return' → logprob: -6.002866268157959
    3. ' return' → logprob: -9.0028657913208
    4. '
' → logprob: -9.2528657913208
    5. '	return' → logprob: -9.6278657913208
    6. '	' → logprob: -9.8778657913208
    7. '   ' → logprob: -10.1278657913208
    8. '        
' → logprob: -12.3778657913208
    9. '<|end|>' → logprob: -12.3778657913208
    10. '           ' → logprob: -13.2528657913208

Token 421: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04928753525018692
    2. 'return' → logprob: -3.0492875576019287
    3. '   ' → logprob: -7.67428731918335
    4. ' return' → logprob: -8.549287796020508
    5. '	return' → logprob: -10.549287796020508
    6. '```' → logprob: -12.049287796020508
    7. '           ' → logprob: -12.674287796020508
    8. '
' → logprob: -13.174287796020508
    9. '{return' → logprob: -13.424287796020508
    10. '	' → logprob: -13.799287796020508

Token 422: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.02980082668364048
    2. '       ' → logprob: -3.5298008918762207
    3. ' return' → logprob: -10.029800415039062
    4. '   ' → logprob: -12.154800415039062
    5. '	return' → logprob: -14.654800415039062
    6. '{return' → logprob: -14.904800415039062
    7. '```' → logprob: -15.654800415039062
    8. ':return' → logprob: -16.904800415039062
    9. '
' → logprob: -17.779800415039062
    10. '           ' → logprob: -18.029800415039062

Token 423: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0031777136027812958
    2. ' count' → logprob: -5.753177642822266
    3. '	count' → logprob: -19.503177642822266
    4. '[count' → logprob: -20.378177642822266
    5. '   ' → logprob: -21.378177642822266
    6. '$count' → logprob: -21.378177642822266
    7. '(count' → logprob: -21.628177642822266
    8. 'c' → logprob: -22.003177642822266
    9. 'counts' → logprob: -22.003177642822266
    10. '<count' → logprob: -22.253177642822266

Token 424: '


' (ID: 2499)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 425: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 426: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.01495158951729536
    2. ' solve' → logprob: -4.264951705932617
    3. ' test' → logprob: -7.889951705932617
    4. ' refresh' → logprob: -8.889951705932617
    5. ' solution' → logprob: -9.139951705932617
    6. ' process' → logprob: -10.014951705932617
    7. ' run' → logprob: -10.514951705932617
    8. ' parse' → logprob: -10.889951705932617
    9. ' example' → logprob: -11.139951705932617
    10. ' read' → logprob: -11.639951705932617

Token 427: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -5.431207682704553e-05
    2. ' ():' → logprob: -10.375054359436035
    3. '():
' → logprob: -10.750054359436035
    4. '()' → logprob: -13.375054359436035
    5. '()>' → logprob: -16.87505340576172
    6. '():
' → logprob: -17.12505340576172
    7. '(' → logprob: -17.37505340576172
    8. '():

' → logprob: -18.12505340576172
    9. ':' → logprob: -18.62505340576172
    10. '().' → logprob: -19.00005340576172

Token 428: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3596484363079071
    2. ' n' → logprob: -1.6096484661102295
    3. ' import' → logprob: -2.7346484661102295
    4. 'n' → logprob: -3.3596484661102295
    5. 'import' → logprob: -6.73464822769165
    6. ' if' → logprob: -7.60964822769165
    7. ' input' → logprob: -7.98464822769165
    8. '    ' → logprob: -9.484648704528809
    9. '<|end|>' → logprob: -9.984648704528809
    10. ' readline' → logprob: -10.609648704528809

Token 429: ' class' (ID: 744)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20453323423862457
    2. 'import' → logprob: -2.329533338546753
    3. ' n' → logprob: -2.829533338546753
    4. ' import' → logprob: -3.704533338546753
    5. '   ' → logprob: -5.579533100128174
    6. 't' → logprob: -9.329533576965332
    7. '	n' → logprob: -10.454533576965332
    8. 'nm' → logprob: -10.454533576965332
    9. ' t' → logprob: -11.329533576965332
    10. 'if' → logprob: -11.704533576965332

Token 430: ' Input' (ID: 10090)
  Prédit: ' Refresh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Refresh' → logprob: -0.0145009970292449
    2. 'Refresh' → logprob: -5.264501094818115
    3. ' Solution' → logprob: -5.389501094818115
    4. ' Solver' → logprob: -6.764501094818115
    5. '_refresh' → logprob: -7.139501094818115
    6. ' Code' → logprob: -7.139501094818115
    7. 'Solution' → logprob: -7.764501094818115
    8. ' Input' → logprob: -7.889501094818115
    9. '_' → logprob: -8.139500617980957
    10. '_code' → logprob: -8.639500617980957

Token 431: 'Processor' (ID: 22334)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.2458832859992981
    2. '():' → logprob: -2.9958832263946533
    3. 'Reader' → logprob: -2.9958832263946533
    4. '():
' → logprob: -3.1208832263946533
    5. ':
' → logprob: -3.2458832263946533
    6. 'Data' → logprob: -3.6208832263946533
    7. 'Parser' → logprob: -5.870883464813232
    8. 'Handler' → logprob: -6.120883464813232
    9. 'data' → logprob: -7.245883464813232
    10. 'Tokenizer' → logprob: -7.745883464813232

Token 432: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012898662127554417
    2. ':
' → logprob: -4.3878984451293945
    3. '<|end|>' → logprob: -8.762898445129395
    4. '):' → logprob: -8.887898445129395
    5. '():' → logprob: -10.387898445129395
    6. '():
' → logprob: -10.512898445129395
    7. '(object' → logprob: -11.137898445129395
    8. '):
' → logprob: -11.887898445129395
    9. ':

' → logprob: -12.262898445129395
    10. '<|end|>' → logprob: -13.012898445129395

Token 433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.12080007791519165
    2. '<|end|>' → logprob: -2.370800018310547
    3. ':' → logprob: -4.620800018310547
    4. '<|end|>' → logprob: -5.495800018310547
    5. '   ' → logprob: -5.870800018310547
    6. ':
' → logprob: -6.245800018310547
    7. 'def' → logprob: -6.995800018310547
    8. ' def' → logprob: -8.245800018310547
    9. '
' → logprob: -8.870800018310547
    10. '	   ' → logprob: -10.245800018310547

Token 434: ' @' (ID: 759)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.03450325131416321
    2. 'def' → logprob: -3.784503221511841
    3. ' @' → logprob: -4.53450345993042
    4. '@' (adapté à ' @') → logprob: -8.159502983093262
    5. '   ' → logprob: -8.659502983093262
    6. '	def' → logprob: -14.034502983093262
    7. ' from' → logprob: -15.034502983093262
    8. 'import' → logprob: -15.034502983093262
    9. ' ' → logprob: -15.034502983093262
    10. 'from' → logprob: -15.284502983093262

Token 435: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -4.008129963040119e-06
    2. 'dat' → logprob: -13.250003814697266
    3. 'static' → logprob: -13.500003814697266
    4. 'classmethod' → logprob: -14.000003814697266
    5. 'property' → logprob: -20.750003814697266
    6. ' static' → logprob: -21.125003814697266
    7. 'st' → logprob: -22.875003814697266
    8. 'stat' → logprob: -23.375003814697266
    9. '__' → logprob: -24.750003814697266
    10. 'Static' → logprob: -25.125003814697266

Token 436: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.027098041027784348
    2. ' def' → logprob: -3.6520979404449463
    3. '
' → logprob: -7.277098178863525
    4. '<|end|>' → logprob: -9.902097702026367
    5. '   ' → logprob: -10.902097702026367
    6. '       ' → logprob: -11.402097702026367
    7. '        
' → logprob: -12.152097702026367
    8. '(def' → logprob: -12.277097702026367
    9. '(' → logprob: -12.777097702026367
    10. '	def' → logprob: -12.902097702026367

Token 437: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013423854485154152
    2. ' def' → logprob: -4.388423919677734
    3. '
' → logprob: -7.513423919677734
    4. '       ' → logprob: -8.888423919677734
    5. '   ' → logprob: -9.013423919677734
    6. '	def' → logprob: -9.638423919677734
    7. '<|end|>' → logprob: -10.513423919677734
    8. ' ' → logprob: -12.013423919677734
    9. '        
' → logprob: -12.763423919677734
    10. '           ' → logprob: -13.138423919677734

Token 438: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.0012957158032804728
    2. ' def' → logprob: -6.751295566558838
    3. 'read' → logprob: -9.751296043395996
    4. 'input' → logprob: -10.001296043395996
    5. '
' → logprob: -11.001296043395996
    6. 'staticmethod' → logprob: -12.876296043395996
    7. 'property' → logprob: -14.251296043395996
    8. 'lambda' → logprob: -14.376296043395996
    9. 'int' → logprob: -15.001296043395996
    10. 'get' → logprob: -15.126296043395996

Token 439: ' parse' (ID: 8420)
  Prédit: 'read'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'read' → logprob: -0.14869770407676697
    2. ' read' → logprob: -2.5236976146698
    3. 'parse' → logprob: -4.023697853088379
    4. 'process' → logprob: -4.648697853088379
    5. 'input' → logprob: -4.898697853088379
    6. ' input' → logprob: -5.023697853088379
    7. ' readline' → logprob: -5.148697853088379
    8. ' process' → logprob: -5.273697853088379
    9. ' parse' → logprob: -6.023697853088379
    10. 'from' → logprob: -6.523697853088379

Token 440: '_input' (ID: 12507)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.5746055245399475
    2. '():
' → logprob: -1.3246054649353027
    3. 'int' → logprob: -2.1996054649353027
    4. 'input' → logprob: -3.5746054649353027
    5. '()' → logprob: -4.324605464935303
    6. '(int' → logprob: -4.824605464935303
    7. '_input' → logprob: -5.324605464935303
    8. ':int' → logprob: -7.324605464935303
    9. 'line' → logprob: -7.449605464935303
    10. 'def' → logprob: -7.699605464935303

Token 441: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.022882256656885147
    2. '():
' → logprob: -3.8978822231292725
    3. ' ():' → logprob: -6.897882461547852
    4. '(line' → logprob: -7.397882461547852
    5. '()' → logprob: -7.772882461547852
    6. '(input' → logprob: -8.772882461547852
    7. '(lines' → logprob: -9.522882461547852
    8. '(' → logprob: -11.022882461547852
    9. '(prompt' → logprob: -11.522882461547852
    10. ' ()' → logprob: -11.897882461547852

Token 442: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026873981580138206
    2. '       ' → logprob: -3.90187406539917
    3. 'n' → logprob: -6.15187406539917
    4. ' return' → logprob: -7.02687406539917
    5. ' line' → logprob: -7.52687406539917
    6. '()' → logprob: -7.52687406539917
    7. 'return' → logprob: -7.90187406539917
    8. ' n' → logprob: -7.90187406539917
    9. '   ' → logprob: -8.151873588562012
    10. '<|end|>' → logprob: -9.026873588562012

Token 443: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.19158515334129333
    2. ' n' → logprob: -1.8165851831436157
    3. 'import' → logprob: -4.816585063934326
    4. ' import' → logprob: -5.691585063934326
    5. '   ' → logprob: -9.691585540771484
    6. ' input' → logprob: -10.066585540771484
    7. 'input' → logprob: -10.066585540771484
    8. '       ' → logprob: -10.316585540771484
    9. 'return' → logprob: -10.441585540771484
    10. 'N' → logprob: -11.066585540771484

Token 444: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0024842156562954187
    2. ',m' → logprob: -6.127484321594238
    3. ' ,' → logprob: -8.377484321594238
    4. ' =' → logprob: -10.502484321594238
    5. '=' → logprob: -10.877484321594238
    6. 'm' → logprob: -12.002484321594238
    7. ',n' → logprob: -12.377484321594238
    8. ',c' → logprob: -13.002484321594238
    9. '<|end|>' → logprob: -13.002484321594238
    10. ',int' → logprob: -13.252484321594238

Token 445: ' m' (ID: 284)
  Prédit: ' m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.5237324833869934
    2. 'm' → logprob: -0.8987324833869934
    3. ' ' → logprob: -7.898732662200928
    4. '<|end|>' → logprob: -8.39873218536377
    5. '    ' → logprob: -13.14873218536377
    6. '  ' → logprob: -13.27373218536377
    7. ' 
' → logprob: -13.27373218536377
    8. ' =' → logprob: -13.52373218536377
    9. '=' → logprob: -13.77373218536377
    10. '*m' → logprob: -14.02373218536377

Token 446: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.23272272944450378
    2. '=' → logprob: -1.7327227592468262
    3. ' =' → logprob: -3.482722759246826
    4. ' ,' → logprob: -9.857722282409668
    5. '<|end|>' → logprob: -11.232722282409668
    6. '=input' → logprob: -11.607722282409668
    7. ',n' → logprob: -12.857722282409668
    8. ' ' → logprob: -13.107722282409668
    9. ',input' → logprob: -13.232722282409668
    10. ',c' → logprob: -13.357722282409668

Token 447: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.04859623312950134
    2. ' d' → logprob: -3.048596143722534
    3. '*d' → logprob: -12.798596382141113
    4. '	d' → logprob: -13.173596382141113
    5. '_d' → logprob: -13.673596382141113
    6. ' ' → logprob: -14.048596382141113
    7. ' =' → logprob: -14.673596382141113
    8. ',d' → logprob: -15.298596382141113
    9. '*' → logprob: -15.423596382141113
    10. '   ' → logprob: -15.423596382141113

Token 448: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.7586825489997864
    2. ' =' → logprob: -0.7586825489997864
    3. ',' → logprob: -2.7586824893951416
    4. ' ,' → logprob: -10.133682250976562
    5. '=input' → logprob: -11.508682250976562
    6. ',input' → logprob: -13.133682250976562
    7. ' ' → logprob: -13.633682250976562
    8. ' =
' → logprob: -13.633682250976562
    9. '<|end|>' → logprob: -14.258682250976562
    10. '=line' → logprob: -14.633682250976562

Token 449: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.3868791460990906
    2. 'map' → logprob: -1.1368792057037354
    3. '[' → logprob: -12.886878967285156
    4. ' ' → logprob: -13.011878967285156
    5. '	map' → logprob: -13.261878967285156
    6. '(map' → logprob: -14.761878967285156
    7. 'm' → logprob: -14.886878967285156
    8. '   ' → logprob: -15.261878967285156
    9. '0' → logprob: -15.386878967285156
    10. 'input' → logprob: -15.886878967285156

Token 450: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0008364312816411257
    2. '(' → logprob: -7.250836372375488
    3. '(input' → logprob: -9.750836372375488
    4. 'int' → logprob: -10.250836372375488
    5. '(str' → logprob: -10.375836372375488
    6. ' (' → logprob: -14.500836372375488
    7. '(
' → logprob: -14.750836372375488
    8. 'input' → logprob: -14.750836372375488
    9. ' int' → logprob: -15.375836372375488
    10. '<int' → logprob: -16.625837326049805

Token 451: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6159015893936157
    2. 'input' → logprob: -1.3659015893936157
    3. '(input' → logprob: -2.115901470184326
    4. ',input' → logprob: -2.490901470184326
    5. ' input' → logprob: -7.240901470184326
    6. ')' → logprob: -7.740901470184326
    7. '(' → logprob: -9.365901947021484
    8. '=input' → logprob: -9.615901947021484
    9. '[input' → logprob: -11.990901947021484
    10. '<input' → logprob: -12.115901947021484

Token 452: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00020354038861114532
    2. ' input' → logprob: -8.500203132629395
    3. '   ' → logprob: -18.62520408630371
    4. '(input' → logprob: -18.75020408630371
    5. '	input' → logprob: -19.12520408630371
    6. '=input' → logprob: -19.12520408630371
    7. '<input' → logprob: -19.37520408630371
    8. ')' → logprob: -20.75020408630371
    9. ',input' → logprob: -21.12520408630371
    10. '_input' → logprob: -21.25020408630371

Token 453: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.511406809295295e-06
    2. '()' → logprob: -12.000006675720215
    3. ' ().' → logprob: -15.375006675720215
    4. '(' → logprob: -17.7500057220459
    5. '.split' → logprob: -18.6250057220459
    6. '()
' → logprob: -19.2500057220459
    7. '())' → logprob: -19.6250057220459
    8. '   ' → logprob: -19.8750057220459
    9. '.' → logprob: -20.3750057220459
    10. '('').' → logprob: -20.3750057220459

Token 454: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0002614550176076591
    2. 'strip' → logprob: -8.250261306762695
    3. '().' → logprob: -17.125261306762695
    4. '(split' → logprob: -17.125261306762695
    5. 'rstrip' → logprob: -17.375261306762695
    6. 'spl' → logprob: -17.625261306762695
    7. ' split' → logprob: -17.625261306762695
    8. 'read' → logprob: -18.875261306762695
    9. 's' → logprob: -20.125261306762695
    10. '.split' → logprob: -20.625261306762695

Token 455: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.007347258739173412
    2. '()' → logprob: -5.507347106933594
    3. ')' → logprob: -5.757347106933594
    4. '('' → logprob: -10.382347106933594
    5. '()))' → logprob: -10.382347106933594
    6. '(' → logprob: -10.632347106933594
    7. '())
' → logprob: -11.257347106933594
    8. '))' → logprob: -13.507347106933594
    9. ' ())' → logprob: -13.757347106933594
    10. '(','' → logprob: -14.007347106933594

Token 456: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027816968504339457
    2. '<|end|>' → logprob: -7.002781867980957
    3. '		' → logprob: -7.127781867980957
    4. '            
' → logprob: -8.377781867980957
    5. 'grid' → logprob: -8.752781867980957
    6. '
' → logprob: -9.002781867980957
    7. 'return' → logprob: -9.002781867980957
    8. 'n' → logprob: -9.252781867980957
    9. '       ' → logprob: -10.002781867980957
    10. '	       ' → logprob: -10.252781867980957

Token 457: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' (adapté à ' grid') → logprob: -0.006831994745880365
    2. ' grid' → logprob: -5.006832122802734
    3. '           ' → logprob: -9.131832122802734
    4. 'return' → logprob: -13.006832122802734
    5. '	grid' → logprob: -13.506832122802734
    6. 'map' → logprob: -13.631832122802734
    7. 'g' → logprob: -14.506832122802734
    8. 'lines' → logprob: -14.756832122802734
    9. '_grid' → logprob: -14.756832122802734
    10. '.grid' → logprob: -15.381832122802734

Token 458: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.00033034008811227977
    2. '_lines' → logprob: -8.250329971313477
    3. '_' → logprob: -9.875329971313477
    4. '_data' → logprob: -11.625329971313477
    5. '_input' → logprob: -12.125329971313477
    6. '_list' → logprob: -14.375329971313477
    7. 'map' → logprob: -14.500329971313477
    8. '_maps' → logprob: -14.750329971313477
    9. '=_' → logprob: -15.000329971313477
    10. ' =' → logprob: -15.000329971313477

Token 459: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2521151304244995
    2. ' =' → logprob: -1.5021151304244995
    3. '=[]' → logprob: -8.627115249633789
    4. '=[' → logprob: -12.752115249633789
    5. ' =[' → logprob: -13.377115249633789
    6. '[' → logprob: -13.752115249633789
    7. '=[]
' → logprob: -14.502115249633789
    8. '[:]' → logprob: -14.877115249633789
    9. '[]' → logprob: -15.377115249633789
    10. 's' → logprob: -16.25211524963379

Token 460: ' [' (ID: 723)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.12932957708835602
    2. '[input' → logprob: -2.1293296813964844
    3. '[list' → logprob: -7.129329681396484
    4. '[n' → logprob: -7.379329681396484
    5. '[int' → logprob: -8.379329681396484
    6. '[str' → logprob: -8.879329681396484
    7. '[ind' → logprob: -9.254329681396484
    8. ' [' → logprob: -9.754329681396484
    9. '[List' → logprob: -9.879329681396484
    10. '[item' → logprob: -9.879329681396484

Token 461: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -1.1472419600977446e-06
    2. ' input' → logprob: -13.750000953674316
    3. '<input' → logprob: -19.625001907348633
    4. '(input' → logprob: -22.250001907348633
    5. '	input' → logprob: -22.625001907348633
    6. '=input' → logprob: -22.875001907348633
    7. '
' → logprob: -23.000001907348633
    8. '[input' → logprob: -23.875001907348633
    9. 'list' → logprob: -24.375001907348633
    10. '_input' → logprob: -24.625001907348633

Token 462: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.16023021936416626
    2. '().' → logprob: -1.9102301597595215
    3. ' ()' → logprob: -12.28523063659668
    4. '()
' → logprob: -14.03523063659668
    5. '()]' → logprob: -15.78523063659668
    6. '(' → logprob: -16.16023063659668
    7. ' ().' → logprob: -16.53523063659668
    8. '（）' → logprob: -16.78523063659668
    9. '()`' → logprob: -16.91023063659668
    10. '()[' → logprob: -17.41023063659668

Token 463: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.17735958099365234
    2. '.strip' → logprob: -2.4273595809936523
    3. 'for' → logprob: -2.9273595809936523
    4. '()' → logprob: -4.677359580993652
    5. '().' → logprob: -5.052359580993652
    6. '.rstrip' → logprob: -5.552359580993652
    7. '	for' → logprob: -8.177359580993652
    8. 'rstrip' → logprob: -8.177359580993652
    9. 'strip' → logprob: -8.802359580993652
    10. ')' → logprob: -8.802359580993652

Token 464: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3132830560207367
    2. ' _' → logprob: -1.313283085823059
    3. ' range' → logprob: -11.56328296661377
    4. '_range' → logprob: -12.18828296661377
    5. ' ' → logprob: -13.06328296661377
    6. ' ' → logprob: -13.81328296661377
    7. 'range' → logprob: -13.81328296661377
    8. ' in' → logprob: -13.93828296661377
    9. '_in' → logprob: -14.81328296661377
    10. '_i' → logprob: -14.93828296661377

Token 465: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.150120347738266
    2. 'range' → logprob: -2.400120258331299
    3. 'in' → logprob: -3.150120258331299
    4. ' range' → logprob: -5.150120258331299
    5. ' ' → logprob: -10.525120735168457
    6. '  ' → logprob: -11.525120735168457
    7. 'n' → logprob: -13.150120735168457
    8. '   ' → logprob: -13.650120735168457
    9. '    ' → logprob: -13.775120735168457
    10. 'i' → logprob: -13.900120735168457

Token 466: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0019286326132714748
    2. ' range' → logprob: -6.251928806304932
    3. '_range' → logprob: -18.001928329467773
    4. '_' → logprob: -18.376928329467773
    5. '	range' → logprob: -19.376928329467773
    6. '(range' → logprob: -19.876928329467773
    7. ' ' → logprob: -20.251928329467773
    8. '   ' → logprob: -20.501928329467773
    9. '  ' → logprob: -20.626928329467773
    10. 'r' → logprob: -21.376928329467773

Token 467: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.500000953674316
    3. 'n' → logprob: -15.250000953674316
    4. ' (' → logprob: -16.25
    5. ' n' → logprob: -19.25
    6. '	n' → logprob: -19.5
    7. '(
' → logprob: -20.75
    8. ')n' → logprob: -21.125
    9. '   ' → logprob: -21.75
    10. '<n' → logprob: -21.875

Token 468: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.011162301525473595
    2. ')' → logprob: -5.136162281036377
    3. ']' → logprob: -5.261162281036377
    4. ')]
' → logprob: -11.136162757873535
    5. ']
' → logprob: -12.386162757873535
    6. ')
' → logprob: -12.886162757873535
    7. ')])' → logprob: -13.261162757873535
    8. '])' → logprob: -13.386162757873535
    9. '       ' → logprob: -13.511162757873535
    10. '   ' → logprob: -14.136162757873535

Token 469: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -7.278864359250292e-05
    2. '       ' → logprob: -10.375072479248047
    3. 'return' → logprob: -10.625072479248047
    4. '
' → logprob: -12.250072479248047
    5. ' return' → logprob: -12.375072479248047
    6. '		' → logprob: -12.625072479248047
    7. '               ' → logprob: -13.625072479248047
    8. '<|end|>' → logprob: -13.750072479248047
    9. '          ' → logprob: -14.125072479248047
    10. '   ' → logprob: -14.500072479248047

Token 470: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -4.453737710718997e-05
    2. '           ' → logprob: -10.500044822692871
    3. ' return' → logprob: -11.000044822692871
    4. '       ' → logprob: -16.000043869018555
    5. '
' → logprob: -16.625043869018555
    6. '   ' → logprob: -17.625043869018555
    7. '            
' → logprob: -17.625043869018555
    8. '               ' → logprob: -19.500043869018555
    9. '	return' → logprob: -20.500043869018555
    10. 'refresh' → logprob: -20.750043869018555

Token 471: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0010971187148243189
    2. ' n' → logprob: -7.751097202301025
    3. '(n' → logprob: -7.751097202301025
    4. 'Refresh' → logprob: -8.376096725463867
    5. ' Refresh' → logprob: -13.251096725463867
    6. '(' → logprob: -14.001096725463867
    7. ' (' → logprob: -14.001096725463867
    8. '[n' → logprob: -14.001096725463867
    9. '	n' → logprob: -14.001096725463867
    10. 'refresh' → logprob: -16.001096725463867

Token 472: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.01417032815515995
    2. ',m' → logprob: -4.264170169830322
    3. ' ,' → logprob: -12.01417064666748
    4. 'm' → logprob: -14.88917064666748
    5. ',n' → logprob: -15.63917064666748
    6. ',
' → logprob: -16.764169692993164
    7. ',user' → logprob: -17.514169692993164
    8. ' m' → logprob: -17.889169692993164
    9. ',M' → logprob: -18.389169692993164
    10. '‌,' → logprob: -18.389169692993164

Token 473: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.4740770161151886
    2. ' m' → logprob: -0.9740769863128662
    3. '	m' → logprob: -16.974077224731445
    4. ',m' → logprob: -17.724077224731445
    5. ',' → logprob: -17.849077224731445
    6. ' ' → logprob: -18.099077224731445
    7. '<|end|>' → logprob: -18.224077224731445
    8. ' ' → logprob: -18.474077224731445
    9. '```' → logprob: -19.349077224731445
    10. ' м' → logprob: -19.724077224731445

Token 474: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002516839886084199
    2. ',d' → logprob: -8.500251770019531
    3. ' ,' → logprob: -10.000251770019531
    4. 'd' → logprob: -13.000251770019531
    5. ',
' → logprob: -15.375251770019531
    6. '<|end|>' → logprob: -15.375251770019531
    7. '‌,' → logprob: -17.50025177001953
    8. '```' → logprob: -17.62525177001953
    9. '`,' → logprob: -17.75025177001953
    10. ' d' → logprob: -18.25025177001953

Token 475: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.0015023599844425917
    2. ' d' → logprob: -6.501502513885498
    3. '   ' → logprob: -19.126502990722656
    4. '	d' → logprob: -19.251502990722656
    5. ' ' → logprob: -20.501502990722656
    6. '       ' → logprob: -21.376502990722656
    7. '    ' → logprob: -22.001502990722656
    8. '
' → logprob: -22.251502990722656
    9. '  ' → logprob: -22.501502990722656
    10. '```' → logprob: -22.876502990722656

Token 476: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.47495681833243e-05
    2. ' ,' → logprob: -11.250024795532227
    3. '<|end|>' → logprob: -11.875024795532227
    4. ',
' → logprob: -13.000024795532227
    5. ',input' → logprob: -14.500024795532227
    6. 'grid' → logprob: -15.250024795532227
    7. ',user' → logprob: -15.625024795532227
    8. '
' → logprob: -15.625024795532227
    9. ',None' → logprob: -15.750024795532227
    10. ',\
' → logprob: -16.000024795532227

Token 477: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.4740770161151886
    2. 'grid' → logprob: -0.9740769863128662
    3. '	grid' → logprob: -17.474077224731445
    4. '(grid' → logprob: -17.724077224731445
    5. '_grid' → logprob: -19.849077224731445
    6. 'Grid' → logprob: -19.974077224731445
    7. '.grid' → logprob: -20.224077224731445
    8. ':grid' → logprob: -21.474077224731445
    9. ' grids' → logprob: -21.474077224731445
    10. '/grid' → logprob: -21.599077224731445

Token 478: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -5.080963092041202e-06
    2. 'map' → logprob: -12.250004768371582
    3. '_' → logprob: -15.750004768371582
    4. ' _' → logprob: -17.2500057220459
    5. '_MAP' → logprob: -18.3750057220459
    6. '   ' → logprob: -18.8750057220459
    7. 'Map' → logprob: -20.1250057220459
    8. 'm' → logprob: -20.2500057220459
    9. 'n' → logprob: -20.3750057220459
    10. ' map' → logprob: -20.5000057220459

Token 479: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8300397992134094
    2. '   ' → logprob: -0.9550397992134094
    3. '<|end|>' → logprob: -1.8300397396087646
    4. 'return' → logprob: -5.080039978027344
    5. 'n' → logprob: -5.705039978027344
    6. '    
' → logprob: -5.830039978027344
    7. '

' → logprob: -5.830039978027344
    8. '<|end|>' → logprob: -6.455039978027344
    9. '       ' → logprob: -7.830039978027344
    10. '        
' → logprob: -8.830039978027344

Token 480: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022377852350473404
    2. 'n' → logprob: -4.022377967834473
    3. '
' → logprob: -5.897377967834473
    4. ' n' → logprob: -7.522377967834473
    5. '    
' → logprob: -8.147377967834473
    6. '<|end|>' → logprob: -8.147377967834473
    7. 'def' → logprob: -8.272377967834473
    8. '       ' → logprob: -10.397377967834473
    9. 'return' → logprob: -11.272377967834473
    10. '<|end|>' → logprob: -11.772377967834473

Token 481: ' class' (ID: 744)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.0012058269931003451
    2. '   ' → logprob: -6.876205921173096
    3. 'def' → logprob: -9.251205444335938
    4. 'if' → logprob: -9.751205444335938
    5. ' n' → logprob: -11.001205444335938
    6. '    
' → logprob: -14.751205444335938
    7. '	n' → logprob: -14.876205444335938
    8. '
' → logprob: -15.001205444335938
    9. 'input' → logprob: -15.751205444335938
    10. 'args' → logprob: -16.251205444335938

Token 482: ' Output' (ID: 18315)
  Prédit: ' Output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Output' → logprob: -0.44376885890960693
    2. 'Output' → logprob: -1.193768858909607
    3. ' Refresh' → logprob: -3.3187689781188965
    4. ' Solver' → logprob: -5.0687689781188965
    5. ' Solution' → logprob: -5.1937689781188965
    6. 'Refresh' → logprob: -6.0687689781188965
    7. 'Solution' → logprob: -6.1937689781188965
    8. 'Solver' → logprob: -7.5687689781188965
    9. ' Input' → logprob: -7.8187689781188965
    10. ' Test' → logprob: -8.443768501281738

Token 483: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: -0.5105783343315125
    2. 'Writer' → logprob: -1.3855783939361572
    3. 'ter' → logprob: -2.8855783939361572
    4. 'Printer' → logprob: -3.0105783939361572
    5. 'Handler' → logprob: -3.6355783939361572
    6. 'Formatter' → logprob: -4.260578155517578
    7. 'Generator' → logprob: -6.510578155517578
    8. 'Manager' → logprob: -7.260578155517578
    9. 'er' → logprob: -7.510578155517578
    10. ':
' → logprob: -7.760578155517578

Token 484: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.018155913800001144
    2. ':
' → logprob: -4.018156051635742
    3. ':

' → logprob: -13.143156051635742
    4. ':def' → logprob: -13.768156051635742
    5. '):' → logprob: -14.018156051635742
    6. '<|end|>' → logprob: -14.268156051635742
    7. ':
' → logprob: -14.768156051635742
    8. '   ' → logprob: -15.393156051635742
    9. '():' → logprob: -15.768156051635742
    10. '```' → logprob: -15.768156051635742

Token 485: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00761869503185153
    2. '   ' → logprob: -4.8826189041137695
    3. '@' → logprob: -11.75761890411377
    4. ' @' → logprob: -13.13261890411377
    5. '	   ' → logprob: -14.13261890411377
    6. '     ' → logprob: -14.25761890411377
    7. '           ' → logprob: -14.50761890411377
    8. 'def' → logprob: -15.38261890411377
    9. '    ' → logprob: -15.75761890411377
    10. 'staticmethod' → logprob: -15.88261890411377

Token 486: ' @' (ID: 759)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' (adapté à ' @') → logprob: -0.06263793259859085
    2. ' @' → logprob: -2.8126380443573
    3. '   ' → logprob: -7.312637805938721
    4. 'staticmethod' → logprob: -12.937638282775879
    5. '       ' → logprob: -15.062638282775879
    6. ' ' → logprob: -16.187637329101562
    7. '
' → logprob: -16.562637329101562
    8. 'def' → logprob: -17.687637329101562
    9. '    ' → logprob: -17.812637329101562
    10. '```' → logprob: -18.437637329101562

Token 487: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: 0.0
    2. 'static' → logprob: -16.75
    3. 'classmethod' → logprob: -19.25
    4. 'dat' → logprob: -19.75
    5. '
' → logprob: -22.375
    6. '

' → logprob: -23.0
    7. 'property' → logprob: -23.25
    8. 'stat' → logprob: -24.125
    9. '@' → logprob: -24.5
    10. ' static' → logprob: -24.75

Token 488: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.1575234830379486
    2. ' def' → logprob: -2.4075233936309814
    3. '   ' → logprob: -2.9075233936309814
    4. '       ' → logprob: -7.6575236320495605
    5. '
' → logprob: -7.7825236320495605
    6. '	def' → logprob: -8.657523155212402
    7. ' ' → logprob: -11.532523155212402
    8. '  ' → logprob: -12.282523155212402
    9. '    ' → logprob: -12.782523155212402
    10. '<|end|>' → logprob: -12.782523155212402

Token 489: '       ' (ID: 309)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.00495207030326128
    2. '
' → logprob: -5.5049519538879395
    3. ' def' → logprob: -7.5049519538879395
    4. '       ' → logprob: -8.379952430725098
    5. '   ' → logprob: -9.504952430725098
    6. '	def' → logprob: -11.004952430725098
    7. '
' → logprob: -14.004952430725098
    8. '           ' → logprob: -15.004952430725098
    9. '```' → logprob: -15.004952430725098
    10. ' ' → logprob: -15.504952430725098

Token 490: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.47640925645828247
    2. 'print' → logprob: -0.9764092564582825
    3. 'write' → logprob: -6.851409435272217
    4. 'println' → logprob: -6.976409435272217
    5. ' def' → logprob: -8.601408958435059
    6. 'output' → logprob: -9.851408958435059
    7. 'process' → logprob: -9.976408958435059
    8. 'parse' → logprob: -11.601408958435059
    9. '   ' → logprob: -11.851408958435059
    10. 'put' → logprob: -12.351408958435059

Token 491: ' output' (ID: 4733)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.001603771117515862
    2. ' print' → logprob: -6.751603603363037
    3. 'write' → logprob: -8.376604080200195
    4. 'output' → logprob: -9.376604080200195
    5. 'display' → logprob: -9.501604080200195
    6. 'process' → logprob: -10.876604080200195
    7. 'println' → logprob: -11.876604080200195
    8. ' output' → logprob: -12.251604080200195
    9. 'format' → logprob: -12.626604080200195
    10. 'produce' → logprob: -12.876604080200195

Token 492: '_result' (ID: 11623)
  Prédit: '(count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -0.3589257597923279
    2. '(result' → logprob: -1.2339258193969727
    3. '(value' → logprob: -5.608925819396973
    4. '(' → logprob: -5.733925819396973
    5. '_result' → logprob: -7.108925819396973
    6. 'result' → logprob: -7.108925819396973
    7. 'def' → logprob: -7.983925819396973
    8. '_count' → logprob: -8.108925819396973
    9. 'count' → logprob: -8.108925819396973
    10. '(data' → logprob: -8.858925819396973

Token 493: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.25401216745376587
    2. '(count' → logprob: -1.504012107849121
    3. '(value' → logprob: -6.754012107849121
    4. '(' → logprob: -8.004012107849121
    5. 'result' → logprob: -8.629012107849121
    6. '(res' → logprob: -8.629012107849121
    7. '(output' → logprob: -9.129012107849121
    8. 'count' → logprob: -10.504012107849121
    9. '(cnt' → logprob: -10.754012107849121
    10. '(answer' → logprob: -11.004012107849121

Token 494: ':' (ID: 25)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.02658277563750744
    2. '(result' → logprob: -3.901582717895508
    3. '(' → logprob: -6.151582717895508
    4. '):
' → logprob: -6.401582717895508
    5. ':' → logprob: -7.276582717895508
    6. 'result' → logprob: -8.026582717895508
    7. ')' → logprob: -8.026582717895508
    8. '   ' → logprob: -8.401582717895508
    9. '(count' → logprob: -8.651582717895508
    10. 'print' → logprob: -8.776582717895508

Token 495: ' int' (ID: 677)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.059761255979537964
    2. 'int' → logprob: -2.9347612857818604
    3. ' print' → logprob: -5.434761047363281
    4. ')' → logprob: -8.059761047363281
    5. ' int' → logprob: -9.309761047363281
    6. '   ' → logprob: -9.559761047363281
    7. 'str' → logprob: -11.184761047363281
    8. '
' → logprob: -12.934761047363281
    9. '):
' → logprob: -12.934761047363281
    10. ')
' → logprob: -13.309761047363281

Token 496: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.20542767643928528
    2. '):
' → logprob: -1.705427646636963
    3. ')' → logprob: -5.580427646636963
    4. '):
' → logprob: -8.455428123474121
    5. ':' → logprob: -11.080428123474121
    6. '   ' → logprob: -12.205428123474121
    7. ')->' → logprob: -14.330428123474121
    8. ' ):' → logprob: -14.580428123474121
    9. '       ' → logprob: -14.705428123474121
    10. ' ):
' → logprob: -15.205428123474121

Token 497: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.018185297027230263
    2. 'print' → logprob: -4.018185138702393
    3. ' print' → logprob: -10.26818561553955
    4. '       ' → logprob: -14.64318561553955
    5. '               ' → logprob: -16.018184661865234
    6. '   ' → logprob: -16.018184661865234
    7. '          ' → logprob: -17.893184661865234
    8. '		' → logprob: -19.018184661865234
    9. '```' → logprob: -19.018184661865234
    10. '	print' → logprob: -19.143184661865234

Token 498: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -2.7729658540920354e-05
    2. ' print' → logprob: -10.500027656555176
    3. '           ' → logprob: -16.000028610229492
    4. '   ' → logprob: -18.500028610229492
    5. '       ' → logprob: -18.500028610229492
    6. '	print' → logprob: -21.625028610229492
    7. '```' → logprob: -21.625028610229492
    8. '               ' → logprob: -22.875028610229492
    9. 'pr' → logprob: -25.000028610229492
    10. '.print' → logprob: -25.375028610229492

Token 499: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -2.2246291337069124e-05
    2. 'result' → logprob: -10.750021934509277
    3. '(' → logprob: -14.125021934509277
    4. '=result' → logprob: -19.125022888183594
    5. ' result' → logprob: -20.000022888183594
    6. ',result' → logprob: -20.250022888183594
    7. '(f' → logprob: -20.500022888183594
    8. ' (' → logprob: -21.250022888183594
    9. '(results' → logprob: -21.250022888183594
    10. '(res' → logprob: -21.250022888183594

Token 500: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.320199877838604e-07
    2. ')
' → logprob: -15.75
    3. ' )' → logprob: -16.375
    4. '))' → logprob: -18.0
    5. '()' → logprob: -18.625
    6. ')`' → logprob: -18.625
    7. '())' → logprob: -18.75
    8. ')}' → logprob: -18.75
    9. ')

' → logprob: -20.125
    10. '   ' → logprob: -20.25

Token 501: '   ' (ID: 271)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.40220049023628235
    2. '   ' → logprob: -1.15220046043396
    3. 'if' → logprob: -4.527200698852539
    4. ' n' → logprob: -6.277200698852539
    5. '    
' → logprob: -7.027200698852539
    6. '
' → logprob: -7.277200698852539
    7. 'def' → logprob: -7.652200698852539
    8. ' if' → logprob: -7.902200698852539
    9. '	n' → logprob: -10.152200698852539
    10. '  
' → logprob: -11.277200698852539

Token 502: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' (adapté à ' n') → logprob: -0.00035369666875340044
    2. 'if' → logprob: -8.125353813171387
    3. '   ' → logprob: -10.250353813171387
    4. 'def' → logprob: -10.875353813171387
    5. ' n' → logprob: -12.750353813171387
    6. '    
' → logprob: -15.875353813171387
    7. '
' → logprob: -16.00035285949707
    8. 'np' → logprob: -16.75035285949707
    9. '	n' → logprob: -16.87535285949707
    10. ' if' → logprob: -16.87535285949707

Token 503: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0008093867218121886
    2. ',m' → logprob: -7.125809192657471
    3. ' ,' → logprob: -13.250809669494629
    4. 'm' → logprob: -13.625809669494629
    5. ',
' → logprob: -14.875809669494629
    6. '‌,' → logprob: -15.125809669494629
    7. ',,' → logprob: -15.125809669494629
    8. '<|end|>' → logprob: -15.125809669494629
    9. ',d' → logprob: -15.375809669494629
    10. '```' → logprob: -16.125808715820312

Token 504: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.07889242470264435
    2. ' m' → logprob: -2.578892469406128
    3. '<|end|>' → logprob: -13.078892707824707
    4. ',m' → logprob: -15.328892707824707
    5. ',' → logprob: -16.20389175415039
    6. ' ' → logprob: -16.32889175415039
    7. '	m' → logprob: -16.95389175415039
    8. '_m' → logprob: -17.32889175415039
    9. '*m' → logprob: -18.95389175415039
    10. '  ' → logprob: -19.32889175415039

Token 505: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.1093578804284334e-05
    2. ',d' → logprob: -10.125051498413086
    3. ' ,' → logprob: -11.500051498413086
    4. 'd' → logprob: -14.125051498413086
    5. '<|end|>' → logprob: -16.250051498413086
    6. '_,' → logprob: -17.125051498413086
    7. '‌,' → logprob: -17.500051498413086
    8. ',
' → logprob: -18.750051498413086
    9. ',,' → logprob: -19.125051498413086
    10. '=' → logprob: -19.625051498413086

Token 506: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.048587486147880554
    2. ' d' → logprob: -3.0485875606536865
    3. '<|end|>' → logprob: -16.173587799072266
    4. ' ' → logprob: -17.548587799072266
    5. '	d' → logprob: -18.798587799072266
    6. '_d' → logprob: -21.048587799072266
    7. '*d' → logprob: -21.173587799072266
    8. ')d' → logprob: -21.173587799072266
    9. '  ' → logprob: -21.173587799072266
    10. ',d' → logprob: -21.298587799072266

Token 507: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.961759259458631e-06
    2. ' ,' → logprob: -12.250004768371582
    3. '_,' → logprob: -17.7500057220459
    4. '‌,' → logprob: -17.8750057220459
    5. ',user' → logprob: -18.5000057220459
    6. ',,' → logprob: -18.7500057220459
    7. ',input' → logprob: -18.7500057220459
    8. '<|end|>' → logprob: -19.0000057220459
    9. 'grid' → logprob: -19.3750057220459
    10. ',d' → logprob: -19.5000057220459

Token 508: ' grid' (ID: 10586)
  Prédit: ' grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' grid' → logprob: -0.4740787148475647
    2. 'grid' → logprob: -0.9740787148475647
    3. '	grid' → logprob: -13.849079132080078
    4. '(grid' → logprob: -15.099079132080078
    5. '.grid' → logprob: -16.224079132080078
    6. '_grid' → logprob: -16.224079132080078
    7. ':grid' → logprob: -16.474079132080078
    8. 'g' → logprob: -16.974079132080078
    9. '<|end|>' → logprob: -16.974079132080078
    10. ' ' → logprob: -17.724079132080078

Token 509: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -1.4855663721391466e-05
    2. 'map' → logprob: -12.125015258789062
    3. '_processor' → logprob: -12.625015258789062
    4. '=_' → logprob: -13.000015258789062
    5. '=' → logprob: -13.500015258789062
    6. ' =' → logprob: -13.625015258789062
    7. ',_' → logprob: -14.250015258789062
    8. '_maps' → logprob: -16.125015258789062
    9. '   ' → logprob: -16.500015258789062
    10. '_input' → logprob: -16.750015258789062

Token 510: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3134312927722931
    2. '=' → logprob: -1.3134312629699707
    3. ',' → logprob: -8.688431739807129
    4. '=n' → logprob: -14.688431739807129
    5. '<|end|>' → logprob: -15.438431739807129
    6. ' =
' → logprob: -16.438430786132812
    7. '=
' → logprob: -16.438430786132812
    8. ' ,' → logprob: -17.438430786132812
    9. ' ' → logprob: -17.563430786132812
    10. '    ' → logprob: -17.813430786132812

Token 511: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -0.006716436706483364
    2. ' Input' → logprob: -5.006716251373291
    3. '	Input' → logprob: -14.50671672821045
    4. 'Refresh' → logprob: -14.75671672821045
    5. '_Input' → logprob: -17.006715774536133
    6. '_input' → logprob: -17.756715774536133
    7. '<Input' → logprob: -17.881715774536133
    8. '\Input' → logprob: -18.131715774536133
    9. 'input' → logprob: -18.381715774536133
    10. ' Refresh' → logprob: -19.381715774536133

Token 512: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: -7.896309739408025e-07
    2. '_processor' → logprob: -14.250000953674316
    3. 'processor' → logprob: -17.0
    4. ' Processor' → logprob: -18.5
    5. 'Processors' → logprob: -18.875
    6. 'Parser' → logprob: -19.375
    7. 'Process' → logprob: -19.75
    8. '()' → logprob: -19.75
    9. '().' → logprob: -20.75
    10. '_' → logprob: -20.75

Token 513: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -1.1756367712223437e-05
    2. '.' → logprob: -11.375011444091797
    3. ' .' → logprob: -16.125011444091797
    4. '().' → logprob: -17.000011444091797
    5. '=parse' → logprob: -17.875011444091797
    6. '.process' → logprob: -18.000011444091797
    7. 'parse' → logprob: -19.000011444091797
    8. '.decode' → logprob: -20.250011444091797
    9. '.Parse' → logprob: -20.750011444091797
    10. '```' → logprob: -20.875011444091797

Token 514: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -1.981667537620524e-06
    2. '_' → logprob: -13.375001907348633
    3. 'input' → logprob: -16.000001907348633
    4. '_in' → logprob: -16.625001907348633
    5. '_output' → logprob: -16.625001907348633
    6. '_inputs' → logprob: -17.000001907348633
    7. ' _' → logprob: -18.125001907348633
    8. '_Input' → logprob: -18.250001907348633
    9. 'Input' → logprob: -18.375001907348633
    10. '```' → logprob: -18.750001907348633

Token 515: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0013980952790006995
    2. '   ' → logprob: -6.751398086547852
    3. '    
' → logprob: -9.501398086547852
    4. '
' → logprob: -10.376398086547852
    5. ' 
' → logprob: -10.751398086547852
    6. 'refresh' → logprob: -10.876398086547852
    7. 'Refresh' → logprob: -10.876398086547852
    8. '  
' → logprob: -11.126398086547852
    9. ' problem' → logprob: -11.626398086547852
    10. '()
' → logprob: -11.876398086547852

Token 516: '   ' (ID: 271)
  Prédit: ' problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' problem' → logprob: -0.19410760700702667
    2. 'problem' → logprob: -2.5691075325012207
    3. ' refresh' → logprob: -3.4441075325012207
    4. ' p' → logprob: -3.6941075325012207
    5. ' solution' → logprob: -3.8191075325012207
    6. '   ' → logprob: -4.569107532501221
    7. 'p' → logprob: -5.069107532501221
    8. 'refresh' → logprob: -5.944107532501221
    9. 'solution' → logprob: -7.694107532501221
    10. ' Refresh' → logprob: -8.444108009338379

Token 517: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' (adapté à ' problem') → logprob: -0.003976885695010424
    2. 'rap' → logprob: -6.878976821899414
    3. ' problem' → logprob: -7.378976821899414
    4. 'p' → logprob: -7.378976821899414
    5. 'prob' → logprob: -7.378976821899414
    6. 'refresh' → logprob: -7.753976821899414
    7. 'solution' → logprob: -8.253976821899414
    8. 'solver' → logprob: -9.003976821899414
    9. 'pap' → logprob: -9.503976821899414
    10. 'sap' → logprob: -10.128976821899414

Token 518: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06196891888976097
    2. '=' → logprob: -2.8119688034057617
    3. '.' → logprob: -14.936968803405762
    4. '_' → logprob: -15.186968803405762
    5. ' ' → logprob: -15.436968803405762
    6. ')' → logprob: -15.936968803405762
    7. '<|end|>' → logprob: -16.061969757080078
    8. '_instance' → logprob: -16.311969757080078
    9. '	' → logprob: -16.561969757080078
    10. '   ' → logprob: -17.561969757080078

Token 519: ' Refresh' (ID: 55155)
  Prédit: 'Refresh'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Refresh' → logprob: -0.3868711292743683
    2. ' Refresh' → logprob: -1.136871099472046
    3. '.Refresh' → logprob: -16.761871337890625
    4. ' refresh' → logprob: -17.636871337890625
    5. '_refresh' → logprob: -18.261871337890625
    6. 'Refreshing' → logprob: -19.136871337890625
    7. '_REFRESH' → logprob: -20.386871337890625
    8. 'refresh' → logprob: -20.511871337890625
    9. ' ' → logprob: -21.636871337890625
    10. ' ' → logprob: -23.136871337890625

Token 520: 'ment' (ID: 508)
  Prédit: 'ment'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ment' → logprob: -5.512236498361744e-07
    2. 'refresh' → logprob: -15.250000953674316
    3. 'Refresh' → logprob: -15.250000953674316
    4. '```' → logprob: -19.25
    5. 'мент' → logprob: -19.625
    6. ' refresh' → logprob: -20.5
    7. '_refresh' → logprob: -20.5
    8. ' Refresh' → logprob: -20.875
    9. '   ' → logprob: -21.25
    10. '.refresh' → logprob: -21.375

Token 521: 'Area' (ID: 10280)
  Prédit: 'Area'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Area' → logprob: -7.896309739408025e-07
    2. ' Area' → logprob: -14.250000953674316
    3. 'Are' → logprob: -18.5
    4. '_area' → logprob: -19.0
    5. 'area' → logprob: -20.5
    6. 'Areas' → logprob: -21.125
    7. ' area' → logprob: -21.25
    8. '.Area' → logprob: -21.5
    9. '   ' → logprob: -21.75
    10. '_AREA' → logprob: -22.125

Token 522: 'Problem' (ID: 36177)
  Prédit: 'Problem'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Problem' → logprob: -4.320199877838604e-07
    2. 'problem' → logprob: -15.25
    3. ' Problem' → logprob: -16.25
    4. ' problem' → logprob: -17.25
    5. '_problem' → logprob: -17.375
    6. 'Proble' → logprob: -18.125
    7. 'Area' → logprob: -18.5
    8. 'Prob' → logprob: -20.25
    9. '   ' → logprob: -20.5
    10. 'Problems' → logprob: -20.75

Token 523: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0002067588793579489
    2. '(' → logprob: -8.62520694732666
    3. ' (' → logprob: -11.37520694732666
    4. '=' → logprob: -12.12520694732666
    5. ' =' → logprob: -12.50020694732666
    6. 'n' → logprob: -13.12520694732666
    7. '.' → logprob: -13.50020694732666
    8. '(
' → logprob: -14.12520694732666
    9. '   ' → logprob: -14.37520694732666
    10. '.n' → logprob: -14.50020694732666

Token 524: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00030566859641112387
    2. ',m' → logprob: -8.125306129455566
    3. ' ,' → logprob: -11.625306129455566
    4. 'm' → logprob: -14.625306129455566
    5. ',
' → logprob: -15.375306129455566
    6. '<|end|>' → logprob: -17.12530517578125
    7. '‌,' → logprob: -18.75030517578125
    8. ')' → logprob: -18.87530517578125
    9. '=' → logprob: -19.25030517578125
    10. ' m' → logprob: -19.25030517578125

Token 525: ' m' (ID: 284)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.004078401252627373
    2. ' m' → logprob: -5.504078388214111
    3. '	m' → logprob: -21.004077911376953
    4. '   ' → logprob: -21.754077911376953
    5. '<|end|>' → logprob: -22.254077911376953
    6. ')m' → logprob: -22.629077911376953
    7. ',m' → logprob: -22.879077911376953
    8. '
' → logprob: -23.254077911376953
    9. '  ' → logprob: -23.379077911376953
    10. ',' → logprob: -23.379077911376953

Token 526: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0004438971809577197
    2. ',d' → logprob: -7.750443935394287
    3. ' ,' → logprob: -11.250443458557129
    4. 'd' → logprob: -15.625443458557129
    5. ',
' → logprob: -17.000444412231445
    6. ',m' → logprob: -17.125444412231445
    7. '```' → logprob: -18.125444412231445
    8. '   ' → logprob: -18.250444412231445
    9. ')' → logprob: -19.000444412231445
    10. ',D' → logprob: -19.250444412231445

Token 527: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.005234002135694027
    2. ' d' → logprob: -5.2552337646484375
    3. 'm' → logprob: -15.880233764648438
    4. '	d' → logprob: -18.755233764648438
    5. '   ' → logprob: -18.880233764648438
    6. ')d' → logprob: -19.005233764648438
    7. '       ' → logprob: -20.880233764648438
    8. ' m' → logprob: -20.880233764648438
    9. '```' → logprob: -21.130233764648438
    10. ' ' → logprob: -21.130233764648438

Token 528: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.896309739408025e-07
    2. ' ,' → logprob: -14.250000953674316
    3. ',
' → logprob: -17.75
    4. ')' → logprob: -20.375
    5. '   ' → logprob: -21.125
    6. '```' → logprob: -21.125
    7. ',
' → logprob: -21.875
    8. 'grid' → logprob: -22.0
    9. '‌,' → logprob: -22.0
    10. '(grid' → logprob: -22.5

Token 529: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.06196768581867218
    2. ' grid' → logprob: -2.811967611312866
    3. '	grid' → logprob: -17.811967849731445
    4. '(grid' → logprob: -18.186967849731445
    5. '   ' → logprob: -18.811967849731445
    6. 'Grid' → logprob: -19.061967849731445
    7. '_grid' → logprob: -19.811967849731445
    8. ' ' → logprob: -19.936967849731445
    9. '.grid' → logprob: -19.936967849731445
    10. 'gr' → logprob: -20.061967849731445

Token 530: '_map' (ID: 11824)
  Prédit: '_map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_map' → logprob: -0.00010616567305987701
    2. 'map' → logprob: -9.625105857849121
    3. '.map' → logprob: -10.500105857849121
    4. '._' → logprob: -11.750105857849121
    5. '.grid' → logprob: -12.875105857849121
    6. '_grid' → logprob: -14.125105857849121
    7. 'grid' → logprob: -14.875105857849121
    8. 'Map' → logprob: -15.125105857849121
    9. ')' → logprob: -15.500105857849121
    10. '.' → logprob: -15.875105857849121

Token 531: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.47515761852264404
    2. ')
' → logprob: -0.975157618522644
    3. '   ' → logprob: -6.850157737731934
    4. ')
' → logprob: -11.350157737731934
    5. '
' → logprob: -12.350157737731934
    6. ')

' → logprob: -13.975157737731934
    7. ' ' → logprob: -14.225157737731934
    8. ' )
' → logprob: -14.475157737731934
    9. ' )' → logprob: -14.725157737731934
    10. '<|end|>' → logprob: -14.725157737731934

Token 532: '   ' (ID: 271)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.21122904121875763
    2. 'print' → logprob: -1.7112290859222412
    3. '   ' → logprob: -4.711228847503662
    4. ' result' → logprob: -7.211228847503662
    5. ' print' → logprob: -10.58622932434082
    6. '```' → logprob: -11.83622932434082
    7. 'res' → logprob: -13.71122932434082
    8. '
' → logprob: -14.08622932434082
    9. '	result' → logprob: -14.83622932434082
    10. 'output' → logprob: -15.21122932434082

Token 533: ' result' (ID: 1534)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'result' (adapté à ' result') → logprob: -0.01061468105763197
    2. 'print' → logprob: -4.76061487197876
    3. 'Output' → logprob: -6.26061487197876
    4. 'res' → logprob: -10.135614395141602
    5. ' result' → logprob: -10.260614395141602
    6. 'output' → logprob: -11.510614395141602
    7. 'count' → logprob: -13.885614395141602
    8. '```' → logprob: -14.260614395141602
    9. '   ' → logprob: -14.510614395141602
    10. 'answer' → logprob: -15.510614395141602

Token 534: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.10023600608110428
    2. '=' → logprob: -2.350235939025879
    3. '.' → logprob: -10.600235939025879
    4. ' ' → logprob: -12.850235939025879
    5. '.=' → logprob: -14.225235939025879
    6. ')' → logprob: -14.475235939025879
    7. ' =
' → logprob: -15.225235939025879
    8. ' =)' → logprob: -15.725235939025879
    9. '=result' → logprob: -15.975235939025879
    10. '   ' → logprob: -17.225236892700195

Token 535: ' problem' (ID: 4792)
  Prédit: 'problem'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'problem' → logprob: -0.0031777136027812958
    2. ' problem' → logprob: -5.753177642822266
    3. '(problem' → logprob: -19.753177642822266
    4. 'proble' → logprob: -22.628177642822266
    5. '.problem' → logprob: -23.628177642822266
    6. 'prob' → logprob: -23.878177642822266
    7. '_problem' → logprob: -24.253177642822266
    8. 'Problem' → logprob: -24.628177642822266
    9. 'pro' → logprob: -24.753177642822266
    10. 'program' → logprob: -26.003177642822266

Token 536: '.count' (ID: 14019)
  Prédit: '.count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.count' → logprob: -1.771655115589965e-05
    2. '.' → logprob: -11.000018119812012
    3. 'count' → logprob: -14.250018119812012
    4. ' .' → logprob: -15.750018119812012
    5. '	count' → logprob: -16.375017166137695
    6. '.findall' → logprob: -17.125017166137695
    7. '.Count' → logprob: -17.625017166137695
    8. ' count' → logprob: -18.500017166137695
    9. '=count' → logprob: -18.625017166137695
    10. '.mainloop' → logprob: -18.625017166137695

Token 537: '_positions' (ID: 93193)
  Prédit: '_positions'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_positions' → logprob: -3.128163257315464e-07
    2. 'positions' → logprob: -15.5
    3. 'Positions' → logprob: -16.625
    4. '_pos' → logprob: -17.125
    5. '_' → logprob: -18.375
    6. ' positions' → logprob: -19.0
    7. '_places' → logprob: -19.0
    8. '_points' → logprob: -19.125
    9. ' _' → logprob: -19.5
    10. '_locations' → logprob: -20.875

Token 538: '()
' (ID: 1234)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.3939116299152374
    2. '()
' → logprob: -1.268911600112915
    3. '()' → logprob: -3.643911600112915
    4. 'Output' → logprob: -4.268911838531494
    5. '   ' → logprob: -5.768911838531494
    6. '    
' → logprob: -7.518911838531494
    7. '(Output' → logprob: -8.268911361694336
    8. '  
' → logprob: -9.518911361694336
    9. '	Output' → logprob: -9.643911361694336
    10. '(
' → logprob: -10.018911361694336

Token 539: '   ' (ID: 271)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.007683650124818087
    2. '   ' → logprob: -5.257683753967285
    3. '
' → logprob: -6.507683753967285
    4. ' Output' → logprob: -7.007683753967285
    5. '	Output' → logprob: -10.132683753967285
    6. '    
' → logprob: -12.257683753967285
    7. '(Output' → logprob: -13.007683753967285
    8. '_Output' → logprob: -13.257683753967285
    9. '```' → logprob: -14.632683753967285
    10. '_output' → logprob: -15.132683753967285

Token 540: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' (adapté à ' Output') → logprob: -1.5048530030981055e-06
    2. ' Output' → logprob: -14.000001907348633
    3. 'print' → logprob: -14.500001907348633
    4. 'output' → logprob: -16.875001907348633
    5. '	Output' → logprob: -17.000001907348633
    6. '
' → logprob: -18.625001907348633
    7. '_output' → logprob: -19.500001907348633
    8. '_Output' → logprob: -20.250001907348633
    9. '    
' → logprob: -20.375001907348633
    10. '   ' → logprob: -21.125001907348633

Token 541: 'Processor' (ID: 22334)
  Prédit: 'Processor'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Processor' → logprob: 0.0
    2. '_processor' → logprob: -19.5
    3. ' Processor' → logprob: -20.75
    4. 'processor' → logprob: -22.125
    5. 'Process' → logprob: -22.125
    6. 'Processors' → logprob: -23.75
    7. 'Processed' → logprob: -24.5
    8. 'Proces' → logprob: -24.75
    9. 'Producer' → logprob: -25.0
    10. 'Processing' → logprob: -25.0

Token 542: '.output' (ID: 27521)
  Prédit: '.output'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.output' → logprob: -8.2994620242971e-06
    2. '.' → logprob: -11.875008583068848
    3. 'output' → logprob: -14.250008583068848
    4. ' .' → logprob: -14.750008583068848
    5. '().' → logprob: -15.875008583068848
    6. '(output' → logprob: -17.37500762939453
    7. '.input' → logprob: -18.12500762939453
    8. '.out' → logprob: -18.50000762939453
    9. '	output' → logprob: -18.50000762939453
    10. '.stdout' → logprob: -18.62500762939453

Token 543: '_result' (ID: 11623)
  Prédit: '_result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_result' → logprob: -1.9361264946837764e-07
    2. 'result' → logprob: -16.625
    3. 'Result' → logprob: -18.25
    4. '_RESULT' → logprob: -18.875
    5. '_Result' → logprob: -19.625
    6. '_results' → logprob: -21.75
    7. ' result' → logprob: -22.25
    8. '_' → logprob: -22.375
    9. '	Result' → logprob: -22.625
    10. '   ' → logprob: -22.625

Token 544: '(result' (ID: 8111)
  Prédit: '(result'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(result' → logprob: -0.0002624086628202349
    2. '(' → logprob: -8.250262260437012
    3. '(results' → logprob: -14.250262260437012
    4. ' (' → logprob: -15.500262260437012
    5. '(res' → logprob: -16.375263214111328
    6. '(resultado' → logprob: -16.625263214111328
    7. '(response' → logprob: -17.500263214111328
    8. '(
' → logprob: -17.750263214111328
    9. '(problem' → logprob: -18.375263214111328
    10. 'result' → logprob: -18.750263214111328

Token 545: ')


' (ID: 7861)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1813165247440338
    2. '(result' → logprob: -2.056316614151001
    3. '(' → logprob: -3.431316614151001
    4. '())' → logprob: -5.806316375732422
    5. '()' → logprob: -6.056316375732422
    6. '(
' → logprob: -8.806316375732422
    7. ' )' → logprob: -11.931316375732422
    8. '(results' → logprob: -12.056316375732422
    9. '(response' → logprob: -12.181316375732422
    10. '(data' → logprob: -12.306316375732422

Token 546: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -6.2729995988775045e-06
    2. ' if' → logprob: -12.500006675720215
    3. '```' → logprob: -13.750006675720215
    4. 'main' → logprob: -14.000006675720215
    5. '#' → logprob: -14.875006675720215
    6. '<|end|>' → logprob: -15.875006675720215
    7. '
' → logprob: -16.0000057220459
    8. 'If' → logprob: -17.0000057220459
    9. '	if' → logprob: -18.6250057220459
    10. 'import' → logprob: -18.6250057220459

Token 547: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.11389068514108658
    2. '__' → logprob: -2.2388906478881836
    3. '_name' → logprob: -7.363890647888184
    4. 'name' → logprob: -8.363890647888184
    5. '_' → logprob: -8.738890647888184
    6. '___' → logprob: -10.488890647888184
    7. ' ' → logprob: -11.988890647888184
    8. 'Name' → logprob: -13.363890647888184
    9. ' "__' → logprob: -13.738890647888184
    10. ' _' → logprob: -14.238890647888184

Token 548: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.19142915308475494
    2. '==' → logprob: -2.1914291381835938
    3. ' ==' → logprob: -2.8164291381835938
    4. '=="' → logprob: -6.441429138183594
    5. '=='' → logprob: -7.691429138183594
    6. 'name' → logprob: -8.191429138183594
    7. '__.__' → logprob: -9.191429138183594
    8. ' __' → logprob: -9.691429138183594
    9. 'main' → logprob: -10.691429138183594
    10. '[' → logprob: -10.691429138183594

Token 549: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -5.512236498361744e-07
    2. '__.__' → logprob: -14.875000953674316
    3. '==' → logprob: -16.5
    4. '____' → logprob: -17.25
    5. '_' → logprob: -18.25
    6. '__
' → logprob: -18.25
    7. '__.' → logprob: -18.375
    8. '___' → logprob: -18.875
    9. '______' → logprob: -19.625
    10. 'name' → logprob: -19.75

Token 550: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.12883295118808746
    2. '==' → logprob: -2.128833055496216
    3. ' ==' → logprob: -6.378832817077637
    4. '=="' → logprob: -9.128832817077637
    5. '=' → logprob: -9.878832817077637
    6. '_' → logprob: -10.378832817077637
    7. '=='' → logprob: -11.878832817077637
    8. '===' → logprob: -13.253832817077637
    9. ' ' → logprob: -13.378832817077637
    10. '==
' → logprob: -13.878832817077637

Token 551: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.03806639462709427
    2. ''' → logprob: -3.2880663871765137
    3. ' "__' → logprob: -10.913066864013672
    4. '__' → logprob: -12.038066864013672
    5. ' '__' → logprob: -14.413066864013672
    6. '"name' → logprob: -16.288066864013672
    7. '"user' → logprob: -16.788066864013672
    8. ''"' → logprob: -16.913066864013672
    9. '("__' → logprob: -18.163066864013672
    10. '"class' → logprob: -18.288066864013672

Token 552: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.3871537148952484
    2. 'main' → logprob: -1.1371537446975708
    3. '"' → logprob: -8.262153625488281
    4. '_main' → logprob: -11.012153625488281
    5. 'name' → logprob: -13.262153625488281
    6. ''' → logprob: -13.512153625488281
    7. '__
' → logprob: -13.512153625488281
    8. '__":
' → logprob: -13.637153625488281
    9. ' main' → logprob: -14.137153625488281
    10. '___' → logprob: -14.262153625488281

Token 553: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.03893587365746498
    2. '__' → logprob: -3.288935899734497
    3. '__':
' → logprob: -7.038935661315918
    4. '__
' → logprob: -11.913935661315918
    5. '__.' → logprob: -12.163935661315918
    6. '__.__' → logprob: -12.663935661315918
    7. '__
' → logprob: -13.788935661315918
    8. '__["' → logprob: -14.413935661315918
    9. '__",' → logprob: -16.288936614990234
    10. '"' → logprob: -16.288936614990234

Token 554: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -7.076218025758862e-05
    2. ' main' → logprob: -10.000070571899414
    3. '__' → logprob: -10.625070571899414
    4. '	main' → logprob: -14.000070571899414
    5. '   ' → logprob: -15.500070571899414
    6. '_main' → logprob: -16.500070571899414
    7. ' __' → logprob: -19.750070571899414
    8. '____' → logprob: -19.875070571899414
    9. '___' → logprob: -20.000070571899414
    10. '"' → logprob: -20.375070571899414

Token 555: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -1.9361264946837764e-07
    2. ' main' → logprob: -16.25
    3. '	main' → logprob: -21.375
    4. 'import' → logprob: -24.25
    5. '   ' → logprob: -26.0
    6. '.main' → logprob: -26.125
    7. '_main' → logprob: -26.25
    8. '(main' → logprob: -27.375
    9. '
' → logprob: -27.875
    10. 'mai' → logprob: -28.25

Token 556: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 554
Tokens correctement prédits (1ère position, stricte): 252
Tokens correctement prédits (1ère position, avec adaptation): 281
Tokens correctement prédits (top 10): 477
Précision stricte (1ère position): 45.49%
Précision adaptée (1ère position): 50.72%
Précision (top 10): 86.10%
================================================================================
