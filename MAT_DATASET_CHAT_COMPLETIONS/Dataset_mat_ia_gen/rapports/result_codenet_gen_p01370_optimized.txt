================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:15:20
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
sys.setrecursionlimit(10**7)

# 隣接6方向の相対座標
dirs = [(1,0),(0,1),(-1,1),(-1,0),(0,-1),(1,-1)]

def bfs(t, obstacles, start):
    from collections import deque
    visited = set()
    visited.add(start)
    queue = deque()
    queue.append((start[0], start[1], 0))
    while queue:
        x, y, d = queue.popleft()
        if d == t:
            continue
        for dx, dy in dirs:
            nx, ny = x+dx, y+dy
            if (nx, ny) not in obstacles and (nx, ny) not in visited and -30 <= nx <= 30 and -30 <= ny <= 30:
                visited.add((nx, ny))
                queue.append((nx, ny, d+1))
    return len(visited)

def main():
    import sys
    input = sys.stdin.readline
    while True:
        line = input()
        if not line:
            break
        t, n = map(int, line.split())
        if t == 0 and n == 0:
            break
        obstacles = set()
        for _ in range(n):
            x, y = map(int, input().split())
            obstacles.add((x, y))
        sx, sy = map(int, input().split())
        print(bfs(t, obstacles, (sx, sy)))

if __name__=="__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'sys' (ID: 17324)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20001201331615448
    2. '.' → logprob: -2.450011968612671
    3. '<|end|>' → logprob: -2.825011968612671
    4. '\' → logprob: -4.70001220703125
    5. 'newline' → logprob: -5.07501220703125
    6. 'import' → logprob: -5.07501220703125
    7. '' → logprob: -5.82501220703125
    8. '
' → logprob: -5.82501220703125
    9. '<|end|>' → logprob: -5.82501220703125
    10. '\r' → logprob: -6.32501220703125

Token 4: '.set' (ID: 1230)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -9.078839502763003e-05
    2. '[' → logprob: -11.250090599060059
    3. '.import' → logprob: -11.625090599060059
    4. '.readline' → logprob: -11.750090599060059
    5. '```' → logprob: -11.750090599060059
    6. ' .' → logprob: -12.000090599060059
    7. '.
' → logprob: -12.500090599060059
    8. '.`' → logprob: -12.625090599060059
    9. '`.' → logprob: -12.875090599060059
    10. '.user' → logprob: -12.875090599060059

Token 5: 'rec' (ID: 9285)
  Prédit: 'trace'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'trace' → logprob: -0.7549012303352356
    2. 's' → logprob: -1.1299011707305908
    3. 't' → logprob: -3.004901170730591
    4. 'sys' → logprob: -3.254901170730591
    5. 'set' → logprob: -3.629901170730591
    6. 'soft' → logprob: -4.00490140914917
    7. 'default' → logprob: -4.25490140914917
    8. '_' → logprob: -5.00490140914917
    9. 'ex' → logprob: -5.00490140914917
    10. 'suffix' → logprob: -5.12990140914917

Token 6: 'ursion' (ID: 41658)
  Prédit: 'ursion'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ursion' → logprob: -0.0037507908418774605
    2. 'ursive' → logprob: -6.378750801086426
    3. 'limit' → logprob: -7.003750801086426
    4. 'ur' → logprob: -7.503750801086426
    5. 'urse' → logprob: -9.253750801086426
    6. 'urs' → logprob: -9.503750801086426
    7. '_limit' → logprob: -9.628750801086426
    8. 'ut' → logprob: -9.753750801086426
    9. 'u' → logprob: -10.003750801086426
    10. 't' → logprob: -10.128750801086426

Token 7: 'limit' (ID: 19698)
  Prédit: 'limit'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'limit' → logprob: -0.2565893828868866
    2. '_limit' → logprob: -1.631589412689209
    3. '_depth' → logprob: -3.756589412689209
    4. 'depth' → logprob: -5.006589412689209
    5. 'error' → logprob: -9.50658893585205
    6. '('_' → logprob: -9.50658893585205
    7. '_' → logprob: -9.63158893585205
    8. ' limit' → logprob: -9.75658893585205
    9. '(' → logprob: -9.88158893585205
    10. '_stack' → logprob: -10.25658893585205

Token 8: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -8.494741632603109e-05
    2. '(
' → logprob: -10.25008487701416
    3. ' (' → logprob: -11.12508487701416
    4. '40' → logprob: -11.62508487701416
    5. '(

' → logprob: -12.25008487701416
    6. '```' → logprob: -12.50008487701416
    7. '((' → logprob: -12.62508487701416
    8. '(.' → logprob: -12.75008487701416
    9. '('' → logprob: -12.87508487701416
    10. '("("' → logprob: -13.12508487701416

Token 9: '10' (ID: 702)
  Prédit: '10'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '10' → logprob: -0.12741151452064514
    2. '100' → logprob: -2.1274116039276123
    3. ' ' → logprob: -8.002411842346191
    4. '500' → logprob: -9.752411842346191
    5. '300' → logprob: -9.877411842346191
    6. '250' → logprob: -10.752411842346191
    7. '  ' → logprob: -12.252411842346191
    8. '   ' → logprob: -12.502411842346191
    9. '200' → logprob: -12.877411842346191
    10. '150' → logprob: -13.127411842346191

Token 10: '**' (ID: 410)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006857931148260832
    2. '000' → logprob: -5.756857872009277
    3. '00' → logprob: -5.881857872009277
    4. '4' → logprob: -7.256857872009277
    5. '6' → logprob: -8.881857872009277
    6. '5' → logprob: -11.506857872009277
    7. '```' → logprob: -12.006857872009277
    8. ')' → logprob: -12.256857872009277
    9. '3' → logprob: -12.381857872009277
    10. '**' → logprob: -12.381857872009277

Token 11: '7' (ID: 22)
  Prédit: '7'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '7' → logprob: -0.00762082589790225
    2. '9' → logprob: -5.507620811462402
    3. '6' → logprob: -5.757620811462402
    4. '8' → logprob: -7.882620811462402
    5. '```' → logprob: -15.757620811462402
    6. ' ' → logprob: -16.38262176513672
    7. '(' → logprob: -17.13262176513672
    8. '5' → logprob: -17.75762176513672
    9. '``' → logprob: -18.25762176513672
    10. '999' → logprob: -18.38262176513672

Token 12: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.676292231422849e-05
    2. '))' → logprob: -11.375017166137695
    3. ' )' → logprob: -12.250017166137695
    4. ')
' → logprob: -15.875017166137695
    5. ')`' → logprob: -16.000017166137695
    6. ')))' → logprob: -16.625017166137695
    7. '`)' → logprob: -17.000017166137695
    8. ' ' → logprob: -17.750017166137695
    9. '）' → logprob: -17.875017166137695
    10. '),' → logprob: -17.875017166137695

Token 13: '#' (ID: 2)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.046520017087459564
    2. '
' → logprob: -3.5465199947357178
    3. '

' → logprob: -4.921520233154297
    4. '```' → logprob: -5.296520233154297
    5. '\' → logprob: -6.421520233154297
    6. '
' → logprob: -7.046520233154297
    7. 'class' → logprob: -7.546520233154297
    8. '\n' → logprob: -7.671520233154297
    9. 'import' → logprob: -8.046520233154297
    10. ')' → logprob: -8.921520233154297

Token 14: ' �' (ID: 80337)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.9329507946968079
    2. ' def' → logprob: -1.932950735092163
    3. ' stack' → logprob: -2.432950735092163
    4. 'stack' → logprob: -2.432950735092163
    5. 'rec' → logprob: -2.557950735092163
    6. 'd' → logprob: -2.932950735092163
    7. ' sys' → logprob: -3.057950735092163
    8. ' recursion' → logprob: -3.557950735092163
    9. 'sys' → logprob: -4.432950973510742
    10. 'Rec' → logprob: -4.557950973510742

Token 15: '�' (ID: 96)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.526969313621521
    2. '#' → logprob: -0.901969313621521
    3. 'def' → logprob: -6.6519694328308105
    4. 'de' → logprob: -7.6519694328308105
    5. '-' → logprob: -8.276968955993652
    6. '=' → logprob: -8.526968955993652
    7. ' ' → logprob: -8.651968955993652
    8. ':' → logprob: -8.776968955993652
    9. ' #' → logprob: -8.901968955993652
    10. ' de' → logprob: -9.151968955993652

Token 16: '接' (ID: 9878)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.02600230649113655
    2. ')' → logprob: -4.276002407073975
    3. 'def' → logprob: -5.651002407073975
    4. '/' → logprob: -6.151002407073975
    5. ' ' → logprob: -6.401002407073975
    6. '\' → logprob: -7.526002407073975
    7. 'd' → logprob: -7.651002407073975
    8. '=' → logprob: -7.651002407073975
    9. '-' → logprob: -7.901002407073975
    10. '' → logprob: -8.026001930236816

Token 17: '6' (ID: 21)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.19546417891979218
    2. 'def' → logprob: -2.6954641342163086
    3. '_' → logprob: -3.5704641342163086
    4. ')' → logprob: -4.070464134216309
    5. ':' → logprob: -4.570464134216309
    6. '.' → logprob: -4.570464134216309
    7. 'd' → logprob: -5.820464134216309
    8. 'n' → logprob: -6.070464134216309
    9. ' ' → logprob: -6.195464134216309
    10. '=' → logprob: -6.195464134216309

Token 18: '方向' (ID: 101892)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.34119459986686707
    2. '#' → logprob: -1.7161946296691895
    3. ')' → logprob: -3.3411946296691895
    4. '-' → logprob: -4.0911946296691895
    5. '.' → logprob: -4.8411946296691895
    6. ',' → logprob: -5.0911946296691895
    7. ' ' → logprob: -5.0911946296691895
    8. '_' → logprob: -5.3411946296691895
    9. '：' → logprob: -5.3411946296691895
    10. '=' → logprob: -5.7161946296691895

Token 19: 'の' (ID: 3385)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.0017591944197192788
    2. 'd' → logprob: -8.37675952911377
    3. '6' → logprob: -8.62675952911377
    4. ':' → logprob: -8.75175952911377
    5. '_' → logprob: -8.87675952911377
    6. '\' → logprob: -9.12675952911377
    7. ',' → logprob: -9.37675952911377
    8. '[' → logprob: -9.50175952911377
    9. ' ' → logprob: -9.62675952911377
    10. '-' → logprob: -9.87675952911377

Token 20: '相' (ID: 11949)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.6360695362091064
    2. '探索' → logprob: -2.1360695362091064
    3. 'dfs' → logprob: -2.2610695362091064
    4. 'neighbor' → logprob: -2.2610695362091064
    5. ' neighbors' → logprob: -2.7610695362091064
    6. '移' → logprob: -4.136069297790527
    7. '#' → logprob: -4.886069297790527
    8. 'def' → logprob: -5.386069297790527
    9. 'import' → logprob: -5.386069297790527
    10. '\xe9\x9a' → logprob: -5.386069297790527

Token 21: '対' (ID: 44518)
  Prédit: '続'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '続' → logprob: -0.2713621258735657
    2. '関' → logprob: -2.271362066268921
    3. '対' → logprob: -2.646362066268921
    4. '互' → logprob: -3.521362066268921
    5. '```' → logprob: -3.771362066268921
    6. '補' → logprob: -5.2713623046875
    7. '#' → logprob: -5.8963623046875
    8. '性' → logprob: -8.1463623046875
    9. '``' → logprob: -8.1463623046875
    10. '変' → logprob: -8.3963623046875

Token 22: '座' (ID: 34158)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[' → logprob: -1.1862335205078125
    2. 'dx' → logprob: -1.4362335205078125
    3. 'pos' → logprob: -1.9362335205078125
    4. 'positions' → logprob: -2.9362335205078125
    5. '```' → logprob: -3.1862335205078125
    6. '[-' → logprob: -3.6862335205078125
    7. 'x' → logprob: -3.6862335205078125
    8. 'dire' → logprob: -3.6862335205078125
    9. 'coords' → logprob: -3.9362335205078125
    10. '(' → logprob: -4.1862335205078125

Token 23: '標' (ID: 88257)
  Prédit: '標'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '標' → logprob: -0.00025406808708794415
    2. '表' → logprob: -9.125253677368164
    3. '```' → logprob: -9.750253677368164
    4. '标' → logprob: -10.125253677368164
    5. '표' → logprob: -10.750253677368164
    6. '{' → logprob: -11.875253677368164
    7. '像' → logprob: -13.125253677368164
    8. '{"' → logprob: -13.250253677368164
    9. '席' → logprob: -13.375253677368164
    10. '``' → logprob: -13.375253677368164

Token 24: '
' (ID: 198)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.32704484462738037
    2. 'neighbors' → logprob: -1.9520448446273804
    3. 'dirs' → logprob: -3.57704496383667
    4. '```' → logprob: -3.70204496383667
    5. 'd' → logprob: -4.32704496383667
    6. 'dx' → logprob: -4.32704496383667
    7. 'neighbor' → logprob: -4.45204496383667
    8. '#' → logprob: -4.82704496383667
    9. ' directions' → logprob: -4.95204496383667
    10. '[
' → logprob: -5.07704496383667

Token 25: 'dirs' (ID: 132921)
  Prédit: 'dire'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dire' → logprob: -0.14057940244674683
    2. 'neighbors' → logprob: -3.0155794620513916
    3. 'dx' → logprob: -3.1405794620513916
    4. '```' → logprob: -4.0155792236328125
    5. 'neighbor' → logprob: -5.3905792236328125
    6. ' directions' → logprob: -5.3905792236328125
    7. 'dirs' → logprob: -5.6405792236328125
    8. 'd' → logprob: -6.0155792236328125
    9. 'D' → logprob: -7.1405792236328125
    10. 'six' → logprob: -7.2655792236328125

Token 26: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0028168857097625732
    2. '=' → logprob: -5.877816677093506
    3. '＝' → logprob: -12.252817153930664
    4. ' =[' → logprob: -12.752817153930664
    5. '=[' → logprob: -12.877817153930664
    6. ':' → logprob: -13.627817153930664
    7. ' ' → logprob: -16.002817153930664
    8. '6' → logprob: -16.002817153930664
    9. '[' → logprob: -16.627817153930664
    10. ' =
' → logprob: -16.752817153930664

Token 27: ' [(' (ID: 43900)
  Prédit: '[('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[(' → logprob: -0.1292354017496109
    2. '[' → logprob: -2.1292355060577393
    3. '[
' → logprob: -6.75423526763916
    4. '[[' → logprob: -7.12923526763916
    5. ' [(' → logprob: -8.12923526763916
    6. '[((' → logprob: -10.50423526763916
    7. ' [' → logprob: -11.62923526763916
    8. '(' → logprob: -13.37923526763916
    9. '((' → logprob: -13.50423526763916
    10. '[]' → logprob: -13.62923526763916

Token 28: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3537639081478119
    2. '0' → logprob: -1.4787639379501343
    3. '-' → logprob: -2.8537638187408447
    4. ' ' → logprob: -4.478764057159424
    5. '(' → logprob: -7.103764057159424
    6. '(-' → logprob: -8.603763580322266
    7. ' -' → logprob: -10.103763580322266
    8. ' (' → logprob: -11.353763580322266
    9. '   ' → logprob: -13.228763580322266
    10. '```' → logprob: -13.478763580322266

Token 29: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003710894088726491
    2. '0' → logprob: -8.250370979309082
    3. ' ,' → logprob: -9.125370979309082
    4. ',),' → logprob: -14.875370979309082
    5. ' ' → logprob: -15.625370979309082
    6. ',)' → logprob: -16.0003719329834
    7. '，' → logprob: -16.2503719329834
    8. '),' → logprob: -17.1253719329834
    9. '```' → logprob: -17.3753719329834
    10. ')' → logprob: -17.6253719329834

Token 30: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.008615161292254925
    2. ' ' → logprob: -4.758615016937256
    3. '  ' → logprob: -15.258615493774414
    4. '   ' → logprob: -15.758615493774414
    5. '```' → logprob: -17.133615493774414
    6. '０' → logprob: -17.321115493774414
    7. ' ' → logprob: -17.508615493774414
    8. '-' → logprob: -17.633615493774414
    9. '۰' → logprob: -17.696115493774414
    10. '1' → logprob: -17.758615493774414

Token 31: '),(' (ID: 54876)
  Prédit: '),'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.027567250654101372
    2. '),(' → logprob: -3.652567148208618
    3. ')' → logprob: -6.902567386627197
    4. '),
' → logprob: -8.652566909790039
    5. ',' → logprob: -9.777566909790039
    6. '),

' → logprob: -11.402566909790039
    7. ' ),' → logprob: -11.777566909790039
    8. ',),' → logprob: -11.902566909790039
    9. '),
' → logprob: -13.777566909790039
    10. ')、' → logprob: -13.902566909790039

Token 32: '0' (ID: 15)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0015089125372469425
    2. '0' → logprob: -6.501508712768555
    3. ' -' → logprob: -12.501508712768555
    4. ' ' → logprob: -13.126508712768555
    5. '−' → logprob: -14.751508712768555
    6. '1' → logprob: -15.376508712768555
    7. '```' → logprob: -16.939008712768555
    8. ')' → logprob: -16.939008712768555
    9. '-)' → logprob: -17.626508712768555
    10. ',-' → logprob: -18.251508712768555

Token 33: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00042923877481371164
    2. ',-' → logprob: -8.125429153442383
    3. '1' → logprob: -9.000429153442383
    4. ' ,' → logprob: -11.750429153442383
    5. '-' → logprob: -14.625429153442383
    6. '，' → logprob: -14.875429153442383
    7. ' ' → logprob: -14.875429153442383
    8. '

' → logprob: -15.375429153442383
    9. '```' → logprob: -16.500429153442383
    10. ',
' → logprob: -16.562929153442383

Token 34: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00220687803812325
    2. '-' → logprob: -6.127206802368164
    3. ' ' → logprob: -10.877206802368164
    4. ' -' → logprob: -13.627206802368164
    5. '１' → logprob: -14.252206802368164
    6. '0' → logprob: -14.814706802368164
    7. '```' → logprob: -15.377206802368164
    8. '−' → logprob: -15.877206802368164
    9. ')' → logprob: -17.189706802368164
    10. '``' → logprob: -17.189706802368164

Token 35: '),' (ID: 936)
  Prédit: '),('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.0013553560711443424
    2. '),' → logprob: -6.626355171203613
    3. ')' → logprob: -10.501355171203613
    4. ' ),' → logprob: -14.376355171203613
    5. '),
' → logprob: -15.126355171203613
    6. ',' → logprob: -15.501355171203613
    7. ')(' → logprob: -15.751355171203613
    8. ' ' → logprob: -16.00135612487793
    9. '(' → logprob: -16.12635612487793
    10. ')]' → logprob: -16.12635612487793

Token 36: '(-' (ID: 8087)
  Prédit: '(-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.029807429760694504
    2. '(' → logprob: -3.5298073291778564
    3. ' (-' → logprob: -10.029807090759277
    4. ' (' → logprob: -11.279807090759277
    5. ' ' → logprob: -16.404808044433594
    6. '-' → logprob: -16.404808044433594
    7. '0' → logprob: -16.904808044433594
    8. '（' → logprob: -17.279808044433594
    9. '   ' → logprob: -18.779808044433594
    10. '(-(' → logprob: -18.904808044433594

Token 37: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '１' → logprob: -15.000000953674316
    3. ' ' → logprob: -15.250000953674316
    4. '0' → logprob: -15.250000953674316
    5. '```' → logprob: -16.437501907348633
    6. '۱' → logprob: -17.500001907348633
    7. '१' → logprob: -17.562501907348633
    8. '১' → logprob: -17.687501907348633
    9. '

' → logprob: -17.750001907348633
    10. ',' → logprob: -18.187501907348633

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007690866477787495
    2. '0' → logprob: -4.882690906524658
    3. ' ,' → logprob: -9.3826904296875
    4. ' ' → logprob: -15.0076904296875
    5. '，' → logprob: -16.3826904296875
    6. '```' → logprob: -16.3826904296875
    7. '<|end|>' → logprob: -17.3826904296875
    8. ')' → logprob: -18.0701904296875
    9. '1' → logprob: -18.2576904296875
    10. '‌,' → logprob: -18.7576904296875

Token 39: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.0445127372804563e-05
    2. ' ' → logprob: -11.50001049041748
    3. '０' → logprob: -16.125009536743164
    4. ',' → logprob: -16.500009536743164
    5. '۰' → logprob: -17.000009536743164
    6. '```' → logprob: -18.187509536743164
    7. '1' → logprob: -18.250009536743164
    8. '-' → logprob: -19.312509536743164
    9. ')' → logprob: -19.437509536743164
    10. '<|end|>' → logprob: -20.000009536743164

Token 40: '),' (ID: 936)
  Prédit: '),('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.2027418464422226
    2. '),' → logprob: -1.7027418613433838
    3. ')' → logprob: -6.702741622924805
    4. ')]' → logprob: -9.827741622924805
    5. ' ),' → logprob: -10.952741622924805
    6. '0' → logprob: -11.077741622924805
    7. '(' → logprob: -13.077741622924805
    8. '),
' → logprob: -13.577741622924805
    9. ')(' → logprob: -13.702741622924805
    10. ',' → logprob: -13.702741622924805

Token 41: '(-' (ID: 8087)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.019262494519352913
    2. ' (' → logprob: -4.644262313842773
    3. '(-' → logprob: -4.769262313842773
    4. ',' → logprob: -7.269262313842773
    5. '0' → logprob: -8.644262313842773
    6. ',(' → logprob: -9.769262313842773
    7. ' (-' → logprob: -10.644262313842773
    8. ' ' → logprob: -11.519262313842773
    9. '),(' → logprob: -12.769262313842773
    10. ',-' → logprob: -13.394262313842773

Token 42: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.7491250875755213e-05
    2. '0' → logprob: -10.875027656555176
    3. '-' → logprob: -13.375027656555176
    4. '１' → logprob: -13.812527656555176
    5. ' ' → logprob: -13.937527656555176
    6. '2' → logprob: -13.937527656555176
    7. '```' → logprob: -14.062527656555176
    8. '

' → logprob: -14.500027656555176
    9. ',' → logprob: -14.812527656555176
    10. '
' → logprob: -15.250027656555176

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.005498529877513647
    2. '0' → logprob: -5.25549840927124
    3. ' ,' → logprob: -8.255498886108398
    4. '，' → logprob: -13.130498886108398
    5. ' ' → logprob: -14.005498886108398
    6. ',-' → logprob: -14.067998886108398
    7. ')' → logprob: -15.130498886108398
    8. '<|end|>' → logprob: -15.317998886108398
    9. '、' → logprob: -15.817998886108398
    10. '‌,' → logprob: -16.6304988861084

Token 44: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0005305142258293927
    2. '-' → logprob: -7.62553071975708
    3. ' ' → logprob: -10.125530242919922
    4. '1' → logprob: -14.250530242919922
    5. ',' → logprob: -14.625530242919922
    6. ' -' → logprob: -14.750530242919922
    7. ')' → logprob: -15.125530242919922
    8. '０' → logprob: -15.438030242919922
    9. '۰' → logprob: -16.125530242919922
    10. '```' → logprob: -16.938030242919922

Token 45: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.34871312975883484
    2. ',(' → logprob: -1.9737131595611572
    3. ',' → logprob: -2.3487131595611572
    4. '),' → logprob: -2.8487131595611572
    5. ')' → logprob: -6.223712921142578
    6. '(' → logprob: -10.973712921142578
    7. ' ,' → logprob: -10.973712921142578
    8. ' ),' → logprob: -11.598712921142578
    9. ',[' → logprob: -11.723712921142578
    10. ',)' → logprob: -11.973712921142578

Token 46: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006815896835178137
    2. '-' → logprob: -5.0068159103393555
    3. '1' → logprob: -9.631815910339355
    4. '(' → logprob: -11.006815910339355
    5. ',' → logprob: -11.881815910339355
    6. ',-' → logprob: -12.381815910339355
    7. ' ' → logprob: -12.506815910339355
    8. '(-' → logprob: -13.631815910339355
    9. ' -' → logprob: -14.006815910339355
    10. ')' → logprob: -14.631815910339355

Token 47: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.01253802701830864
    2. ',' → logprob: -4.637537956237793
    3. '-' → logprob: -5.887537956237793
    4. ' -' → logprob: -13.637537956237793
    5. '1' → logprob: -14.512537956237793
    6. ',-

' → logprob: -14.762537956237793
    7. ' ,-' → logprob: -15.137537956237793
    8. ',-
' → logprob: -15.137537956237793
    9. '-,' → logprob: -15.262537956237793
    10. '",-' → logprob: -15.387537956237793

Token 48: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. '-' → logprob: -12.125006675720215
    3. ' ' → logprob: -14.875006675720215
    4. '１' → logprob: -15.375006675720215
    5. '```' → logprob: -16.3125057220459
    6. ')' → logprob: -16.7500057220459
    7. '۱' → logprob: -17.8750057220459
    8. '१' → logprob: -18.1250057220459
    9. ' -' → logprob: -18.3125057220459
    10. '2' → logprob: -18.7500057220459

Token 49: '),(' (ID: 54876)
  Prédit: '),('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),(' → logprob: -0.6550925970077515
    2. '),' → logprob: -0.7800925970077515
    3. ')' → logprob: -4.405092716217041
    4. ',' → logprob: -5.405092716217041
    5. ')]' → logprob: -5.405092716217041
    6. ',(' → logprob: -7.030092716217041
    7. ' ),' → logprob: -10.280092239379883
    8. ',-' → logprob: -10.655092239379883
    9. ')],' → logprob: -10.655092239379883
    10. ',)' → logprob: -11.030092239379883

Token 50: '1' (ID: 16)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.0031822288874536753
    2. '1' → logprob: -5.753182411193848
    3. '(-' → logprob: -12.753182411193848
    4. ')' → logprob: -14.753182411193848
    5. '0' → logprob: -15.003182411193848
    6. '(' → logprob: -15.128182411193848
    7. ' -' → logprob: -15.253182411193848
    8. '```' → logprob: -15.878182411193848
    9. ',-' → logprob: -16.00318145751953
    10. '−' → logprob: -16.62818145751953

Token 51: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.012805217877030373
    2. '-' → logprob: -4.887804985046387
    3. ',' → logprob: -5.262804985046387
    4. '0' → logprob: -12.887804985046387
    5. '1' → logprob: -13.887804985046387
    6. ',-

' → logprob: -14.887804985046387
    7. ')' → logprob: -15.137804985046387
    8. ' -' → logprob: -15.512804985046387
    9. ' ' → logprob: -15.887804985046387
    10. ',-
' → logprob: -15.887804985046387

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009151478880085051
    2. '-' → logprob: -7.000915050506592
    3. '0' → logprob: -12.62591552734375
    4. ')' → logprob: -16.25091552734375
    5. '１' → logprob: -16.50091552734375
    6. '```' → logprob: -16.75091552734375
    7. '-)' → logprob: -18.37591552734375
    8. ' ' → logprob: -18.75091552734375
    9. '−' → logprob: -19.00091552734375
    10. ' -' → logprob: -19.50091552734375

Token 53: ')]

' (ID: 56882)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.049177005887031555
    2. ')]' → logprob: -3.0491769313812256
    3. ']' → logprob: -7.549177169799805
    4. '),' → logprob: -9.924177169799805
    5. '）' → logprob: -11.424177169799805
    6. ')])' → logprob: -13.799177169799805
    7. '))' → logprob: -14.424177169799805
    8. ')}' → logprob: -14.674177169799805
    9. ')],' → logprob: -15.049177169799805
    10. '])' → logprob: -15.424177169799805

Token 54: 'def' (ID: 1314)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' → logprob: -0.334110289812088
    2. ')' → logprob: -2.2091102600097656
    3. ',' → logprob: -2.7091102600097656
    4. ':' → logprob: -3.4591102600097656
    5. 'def' → logprob: -3.7091102600097656
    6. '
' → logprob: -3.8341102600097656
    7. ' ' → logprob: -4.584110260009766
    8. 'd' → logprob: -5.709110260009766
    9. '```' → logprob: -5.709110260009766
    10. '\' → logprob: -5.834110260009766

Token 55: ' bfs' (ID: 147571)
  Prédit: ' dfs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dfs' → logprob: -0.06381663680076599
    2. ' ' → logprob: -2.813816547393799
    3. ' bfs' → logprob: -6.938816547393799
    4. ' search' → logprob: -8.563817024230957
    5. ' f' → logprob: -8.688817024230957
    6. ' solve' → logprob: -9.063817024230957
    7. '  ' → logprob: -9.688817024230957
    8. ' hex' → logprob: -9.938817024230957
    9. ' main' → logprob: -10.063817024230957
    10. 'dfs' → logprob: -10.438817024230957

Token 56: '(t' (ID: 2025)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00026848804554902017
    2. '_' → logprob: -8.750268936157227
    3. ':' → logprob: -10.625268936157227
    4. ' (' → logprob: -11.125268936157227
    5. '():' → logprob: -11.125268936157227
    6. '(node' → logprob: -11.250268936157227
    7. '(user' → logprob: -12.125268936157227
    8. '(x' → logprob: -12.125268936157227
    9. '(space' → logprob: -12.750268936157227
    10. '_(' → logprob: -13.500268936157227

Token 57: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.9450507164001465
    2. 'o' → logprob: -1.4450507164001465
    3. '):' → logprob: -1.6950507164001465
    4. 'arget' → logprob: -2.8200507164001465
    5. ')' → logprob: -2.8200507164001465
    6. 'a' → logprob: -3.6950507164001465
    7. '(' → logprob: -3.9450507164001465
    8. 'e' → logprob: -5.8200507164001465
    9. 'u' → logprob: -5.8200507164001465
    10. '_' → logprob: -5.9450507164001465

Token 58: ' obstacles' (ID: 46430)
  Prédit: 'h'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'h' → logprob: -1.520208477973938
    2. 's' → logprob: -1.770208477973938
    3. 'q' → logprob: -2.2702083587646484
    4. ' s' → logprob: -2.6452083587646484
    5. ' start' → logprob: -2.8952083587646484
    6. ' h' → logprob: -2.8952083587646484
    7. 'x' → logprob: -3.0202083587646484
    8. ' q' → logprob: -3.3952083587646484
    9. ' grid' → logprob: -3.3952083587646484
    10. 'start' → logprob: -3.5202083587646484

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2820778489112854
    2. '):' → logprob: -1.4070777893066406
    3. ')' → logprob: -7.032077789306641
    4. ',t' → logprob: -12.03207778930664
    5. ' ,' → logprob: -12.40707778930664
    6. ' ):' → logprob: -12.40707778930664
    7. ',p' → logprob: -12.53207778930664
    8. '):
' → logprob: -12.78207778930664
    9. ',n' → logprob: -12.90707778930664
    10. ')：' → logprob: -12.90707778930664

Token 60: ' start' (ID: 1604)
  Prédit: ' start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' start' → logprob: -0.38264405727386475
    2. 'start' → logprob: -2.0076441764831543
    3. 'h' → logprob: -2.7576441764831543
    4. ' h' → logprob: -3.1326441764831543
    5. 's' → logprob: -4.507644176483154
    6. ' s' → logprob: -4.507644176483154
    7. 'q' → logprob: -5.132644176483154
    8. ')' → logprob: -5.382644176483154
    9. ' grid' → logprob: -5.382644176483154
    10. ' queue' → logprob: -5.507644176483154

Token 61: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.12961925566196442
    2. ',' → logprob: -2.1296193599700928
    3. ')' → logprob: -6.004619121551514
    4. ' ):' → logprob: -8.879619598388672
    5. ':' → logprob: -10.254619598388672
    6. '):
' → logprob: -10.879619598388672
    7. ' ,' → logprob: -12.004619598388672
    8. ')：' → logprob: -12.629619598388672
    9. ' ' → logprob: -12.879619598388672
    10. ')):' → logprob: -13.254619598388672

Token 62: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13984529674053192
    2. '   ' → logprob: -2.764845371246338
    3. ' :' → logprob: -3.514845371246338
    4. ' ' → logprob: -3.889845371246338
    5. '):' → logprob: -4.889845371246338
    6. ',' → logprob: -5.264845371246338
    7. '  ' → logprob: -7.389845371246338
    8. ' ):' → logprob: -7.639845371246338
    9. '(queue' → logprob: -7.764845371246338
    10. '	queue' → logprob: -7.889845371246338

Token 63: ' from' (ID: 591)
  Prédit: ' from'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' from' → logprob: -0.23086592555046082
    2. 'from' (adapté à ' from') → logprob: -1.8558659553527832
    3. '   ' → logprob: -3.730865955352783
    4. ' queue' → logprob: -3.855865955352783
    5. 'queue' → logprob: -6.230865955352783
    6. '    ' → logprob: -6.355865955352783
    7. ' ' → logprob: -8.230865478515625
    8. ' visited' → logprob: -8.605865478515625
    9. '	from' → logprob: -9.355865478515625
    10. '  ' → logprob: -9.480865478515625

Token 64: ' collections' (ID: 22690)
  Prédit: ' collections'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' collections' → logprob: -2.7610454708337784e-05
    2. ' queue' → logprob: -11.250027656555176
    3. ' collection' → logprob: -11.625027656555176
    4. 'collections' → logprob: -12.125027656555176
    5. ' cole' → logprob: -16.87502670288086
    6. ' kole' → logprob: -17.25002670288086
    7. ' colle' → logprob: -17.75002670288086
    8. ' ' → logprob: -18.12502670288086
    9. ' code' → logprob: -19.50002670288086
    10. ' queues' → logprob: -19.50002670288086

Token 65: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.14521537721157074
    2. ' import' → logprob: -2.7702152729034424
    3. 'deque' → logprob: -4.1452155113220215
    4. 'n' → logprob: -4.1452155113220215
    5. 'de' → logprob: -4.2702155113220215
    6. '```' → logprob: -4.8952155113220215
    7. 't' → logprob: -5.7702155113220215
    8. 'collections' → logprob: -5.8952155113220215
    9. 'nd' → logprob: -6.0202155113220215
    10. '.' → logprob: -6.3952155113220215

Token 66: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.04858975484967232
    2. 'deque' → logprob: -3.0485897064208984
    3. 'de' → logprob: -13.048589706420898
    4. ' defaultdict' → logprob: -16.5485897064209
    5. 'collections' → logprob: -17.4235897064209
    6. ' de' → logprob: -17.5485897064209
    7. '.de' → logprob: -17.6735897064209
    8. ' dequeue' → logprob: -18.0485897064209
    9. '```' → logprob: -18.0485897064209
    10. 'Deque' → logprob: -18.4235897064209

Token 67: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -1.1666699647903442
    2. ')' → logprob: -1.4166699647903442
    3. '   ' → logprob: -1.6666699647903442
    4. '    
' → logprob: -2.6666698455810547
    5. 'd' → logprob: -3.2916698455810547
    6. ' 
' → logprob: -3.6666698455810547
    7. ':' → logprob: -3.9166698455810547
    8. '(queue' → logprob: -4.541669845581055
    9. '(' → logprob: -4.666669845581055
    10. '    ' → logprob: -4.791669845581055

Token 68: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.369034081697464
    2. '
' → logprob: -2.2440340518951416
    3. ')' → logprob: -2.9940340518951416
    4. ':' → logprob: -3.1190340518951416
    5. '    
' → logprob: -3.3690340518951416
    6. 'd' → logprob: -3.7440340518951416
    7. ' ' → logprob: -5.244034290313721
    8. ' 
' → logprob: -5.494034290313721
    9. '    ' → logprob: -5.619034290313721
    10. '```' → logprob: -5.619034290313721

Token 69: ' visited' (ID: 18416)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -1.224186658859253
    2. 'q' → logprob: -1.474186658859253
    3. ' q' → logprob: -1.474186658859253
    4. '   ' → logprob: -2.224186658859253
    5. 'queue' → logprob: -2.349186658859253
    6. '    
' → logprob: -5.474186897277832
    7. '    ' → logprob: -5.599186897277832
    8. ' dq' → logprob: -5.599186897277832
    9. '```' → logprob: -5.724186897277832
    10. ' que' → logprob: -5.849186897277832

Token 70: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0007135047344490886
    2. '=' → logprob: -7.250713348388672
    3. ' ' → logprob: -13.500713348388672
    4. '[' → logprob: -14.125713348388672
    5. ',' → logprob: -15.125713348388672
    6. ')' → logprob: -15.375713348388672
    7. '.add' → logprob: -15.750713348388672
    8. '<|end|>' → logprob: -16.125713348388672
    9. ' =[' → logprob: -16.125713348388672
    10. '=set' → logprob: -16.250713348388672

Token 71: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.029567532241344452
    2. 'set' → logprob: -4.404567718505859
    3. ' deque' → logprob: -4.904567718505859
    4. ' {' → logprob: -5.029567718505859
    5. 'deque' → logprob: -6.029567718505859
    6. '{' → logprob: -7.904567718505859
    7. ' {(' → logprob: -9.02956771850586
    8. ' ' → logprob: -10.77956771850586
    9. '	set' → logprob: -10.77956771850586
    10. ' defaultdict' → logprob: -11.90456771850586

Token 72: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0009949409868568182
    2. '(' → logprob: -7.00099515914917
    3. '()
' → logprob: -10.000994682312012
    4. '(start' → logprob: -11.250994682312012
    5. ' ()' → logprob: -12.000994682312012
    6. '()\' → logprob: -12.000994682312012
    7. '([' → logprob: -12.375994682312012
    8. '()

' → logprob: -13.500994682312012
    9. '();' → logprob: -13.750994682312012
    10. '((' → logprob: -13.875994682312012

Token 73: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.024339959025382996
    2. '    
' → logprob: -5.0243401527404785
    3. 'queue' → logprob: -5.3993401527404785
    4. '	queue' → logprob: -5.8993401527404785
    5. ' queue' → logprob: -6.0243401527404785
    6. '    ' → logprob: -6.1493401527404785
    7. 'deque' → logprob: -6.2743401527404785
    8. ')' → logprob: -6.7743401527404785
    9. '
' → logprob: -7.2743401527404785
    10. '  ' → logprob: -7.6493401527404785

Token 74: ' visited' (ID: 18416)
  Prédit: ' queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.19732564687728882
    2. 'queue' → logprob: -1.9473257064819336
    3. ' q' → logprob: -3.8223257064819336
    4. '   ' → logprob: -5.197325706481934
    5. ' que' → logprob: -5.447325706481934
    6. 'q' → logprob: -6.572325706481934
    7. 'deque' → logprob: -6.572325706481934
    8. ' deque' → logprob: -7.447325706481934
    9. ' dq' → logprob: -7.697325706481934
    10. '	queue' → logprob: -8.072325706481934

Token 75: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0016293596709147096
    2. '.' → logprob: -6.62662935256958
    3. '<|end|>' → logprob: -8.376629829406738
    4. 'add' → logprob: -10.251629829406738
    5. ' .' → logprob: -10.751629829406738
    6. '<|end|>' → logprob: -12.501629829406738
    7. '.setdefault' → logprob: -12.751629829406738
    8. '().' → logprob: -13.376629829406738
    9. '.append' → logprob: -13.626629829406738
    10. '.Add' → logprob: -13.626629829406738

Token 76: '(start' (ID: 20008)
  Prédit: '(start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.0001652796781854704
    2. '(' → logprob: -8.750164985656738
    3. '((' → logprob: -12.000164985656738
    4. 'start' → logprob: -15.250164985656738
    5. '(tuple' → logprob: -15.875164985656738
    6. '(st' → logprob: -16.500165939331055
    7. '(end' → logprob: -16.750165939331055
    8. ' (' → logprob: -17.625165939331055
    9. '(s' → logprob: -17.875165939331055
    10. '(
' → logprob: -18.000165939331055

Token 77: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0683535037969705e-05
    2. ')
' → logprob: -12.00001049041748
    3. ' )' → logprob: -12.37501049041748
    4. '))' → logprob: -16.750011444091797
    5. '）' → logprob: -17.250011444091797
    6. '),' → logprob: -17.500011444091797
    7. '   ' → logprob: -18.000011444091797
    8. ')
' → logprob: -18.000011444091797
    9. '`)' → logprob: -18.250011444091797
    10. ')

' → logprob: -18.625011444091797

Token 78: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.35476118326187134
    2. '   ' → logprob: -1.4797611236572266
    3. ')' → logprob: -3.4797611236572266
    4. '    
' → logprob: -3.6047611236572266
    5. '<|end|>' → logprob: -4.979761123657227
    6. ')
' → logprob: -6.479761123657227
    7. ',' → logprob: -6.854761123657227
    8. '  
' → logprob: -7.479761123657227
    9. ',
' → logprob: -7.729761123657227
    10. '\n' → logprob: -7.729761123657227

Token 79: ' queue' (ID: 13661)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.49137169122695923
    2. ' queue' → logprob: -1.3663716316223145
    3. 'queue' (adapté à ' queue') → logprob: -2.4913716316223145
    4. 'q' → logprob: -4.7413716316223145
    5. '	queue' → logprob: -4.7413716316223145
    6. 'deque' → logprob: -4.8663716316223145
    7. '   ' → logprob: -5.1163716316223145
    8. '    
' → logprob: -5.3663716316223145
    9. '```' → logprob: -5.4913716316223145
    10. ')' → logprob: -5.7413716316223145

Token 80: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0620700865983963
    2. '=' → logprob: -2.81207013130188
    3. '.' → logprob: -9.9370698928833
    4. ')' → logprob: -10.8120698928833
    5. '.append' → logprob: -10.8120698928833
    6. '<|end|>' → logprob: -12.6870698928833
    7. '=[]' → logprob: -13.0620698928833
    8. '＝' → logprob: -13.3120698928833
    9. ' =)' → logprob: -13.8120698928833
    10. '(' → logprob: -13.9370698928833

Token 81: ' deque' (ID: 90347)
  Prédit: ' deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' deque' → logprob: -0.2014152854681015
    2. 'deque' → logprob: -1.7014153003692627
    3. 'Deque' → logprob: -13.576415061950684
    4. 'de' → logprob: -15.451415061950684
    5. ' collections' → logprob: -15.701415061950684
    6. 'collections' → logprob: -16.076416015625
    7. '	de' → logprob: -16.951416015625
    8. '(de' → logprob: -17.076416015625
    9. ' de' → logprob: -17.076416015625
    10. ' dequeue' → logprob: -17.201416015625

Token 82: '()
' (ID: 1234)
  Prédit: '(['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '([' → logprob: -0.3231576979160309
    2. '([(' → logprob: -1.3231576681137085
    3. '(' → logprob: -4.948157787322998
    4. '()' → logprob: -5.948157787322998
    5. '([]' → logprob: -9.82315731048584
    6. '[(' → logprob: -10.32315731048584
    7. '((' → logprob: -11.07315731048584
    8. '([
' → logprob: -11.07315731048584
    9. '(start' → logprob: -11.94815731048584
    10. '([...' → logprob: -12.07315731048584

Token 83: '   ' (ID: 271)
  Prédit: '(queue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(queue' → logprob: -0.50914067029953
    2. ' queue' → logprob: -1.1341407299041748
    3. 'queue' → logprob: -2.634140729904175
    4. '[' → logprob: -5.884140491485596
    5. ' [' → logprob: -6.759140491485596
    6. '[start' → logprob: -7.509140491485596
    7. '   ' → logprob: -8.009140968322754
    8. '	queue' → logprob: -8.634140968322754
    9. '(' → logprob: -9.134140968322754
    10. ' (' → logprob: -9.259140968322754

Token 84: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.06224058195948601
    2. 'queue' (adapté à ' queue') → logprob: -2.8122406005859375
    3. '(queue' → logprob: -8.437240600585938
    4. '	queue' → logprob: -10.187240600585938
    5. '   ' → logprob: -11.187240600585938
    6. '.queue' → logprob: -13.562240600585938
    7. '[' → logprob: -13.937240600585938
    8. 'deque' → logprob: -14.562240600585938
    9. ' [' → logprob: -14.687240600585938
    10. '```' → logprob: -14.812240600585938

Token 85: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.002098156837746501
    2. '.' → logprob: -6.377098083496094
    3. '.extend' → logprob: -8.002098083496094
    4. '.enqueue' → logprob: -10.002098083496094
    5. '.put' → logprob: -11.877098083496094
    6. '_append' → logprob: -13.127098083496094
    7. '.p' → logprob: -13.877098083496094
    8. ').' → logprob: -13.877098083496094
    9. 'append' → logprob: -13.877098083496094
    10. '.Append' → logprob: -14.252098083496094

Token 86: '((' (ID: 2054)
  Prédit: '(start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(start' → logprob: -0.0031048692762851715
    2. '((' → logprob: -6.0031046867370605
    3. '(' → logprob: -7.3781046867370605
    4. ' (' → logprob: -13.253105163574219
    5. 'start' → logprob: -13.878105163574219
    6. '(st' → logprob: -14.253105163574219
    7. '(s' → logprob: -15.503105163574219
    8. '(
' → logprob: -16.12810516357422
    9. '(t' → logprob: -16.25310516357422
    10. ',start' → logprob: -16.62810516357422

Token 87: 'start' (ID: 5236)
  Prédit: 'start'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.0007682943833060563
    2. 't' → logprob: -7.500768184661865
    3. ' start' → logprob: -8.750768661499023
    4. '0' → logprob: -10.000768661499023
    5. '(start' → logprob: -12.125768661499023
    6. ')' → logprob: -13.000768661499023
    7. ' t' → logprob: -14.125768661499023
    8. '[start' → logprob: -14.250768661499023
    9. ')t' → logprob: -14.625768661499023
    10. ',start' → logprob: -14.875768661499023

Token 88: '[' (ID: 58)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037561915814876556
    2. ')' → logprob: -8.125375747680664
    3. ' ,' → logprob: -9.750375747680664
    4. ',)' → logprob: -12.500375747680664
    5. '))' → logprob: -12.625375747680664
    6. ',t' → logprob: -12.875375747680664
    7. '),' → logprob: -12.875375747680664
    8. '0' → logprob: -13.250375747680664
    9. ',None' → logprob: -13.375375747680664
    10. '```' → logprob: -13.500375747680664

Token 89: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.4498052223643754e-05
    2. ' ' → logprob: -11.500014305114746
    3. '1' → logprob: -13.750014305114746
    4. ')' → logprob: -14.312514305114746
    5. '

' → logprob: -14.937514305114746
    6. '
' → logprob: -14.937514305114746
    7. '```' → logprob: -15.500014305114746
    8. '),' → logprob: -15.687514305114746
    9. '])' → logprob: -16.000015258789062
    10. ')]' → logprob: -16.187515258789062

Token 90: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014258584938943386
    2. ',start' → logprob: -4.26425838470459
    3. ' ,' → logprob: -9.76425838470459
    4. ',current' → logprob: -11.88925838470459
    5. ',next' → logprob: -12.38925838470459
    6. '],' → logprob: -12.51425838470459
    7. '‌,' → logprob: -12.88925838470459
    8. '),' → logprob: -13.13925838470459
    9. ',end' → logprob: -13.13925838470459
    10. ',last' → logprob: -13.26425838470459

Token 91: ' start' (ID: 1604)
  Prédit: 'start'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'start' → logprob: -0.005929274018853903
    2. ' start' → logprob: -5.130929470062256
    3. '[start' → logprob: -15.630928993225098
    4. '	start' → logprob: -15.755928993225098
    5. ' ' → logprob: -16.005929946899414
    6. '  ' → logprob: -16.380929946899414
    7. ')' → logprob: -17.005929946899414
    8. '(start' → logprob: -17.005929946899414
    9. ',start' → logprob: -17.380929946899414
    10. 'star' → logprob: -17.630929946899414

Token 92: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0010536498157307506
    2. '1' → logprob: -6.876053810119629
    3. '   ' → logprob: -11.751053810119629
    4. '][' → logprob: -12.376053810119629
    5. '0' → logprob: -13.376053810119629
    6. ' ' → logprob: -13.376053810119629
    7. ' [' → logprob: -13.501053810119629
    8. '```' → logprob: -13.626053810119629
    9. ',' → logprob: -14.251053810119629
    10. ')' → logprob: -14.251053810119629

Token 93: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '0' → logprob: -14.750000953674316
    3. ' ' → logprob: -15.375000953674316
    4. '```' → logprob: -15.875000953674316
    5. '
' → logprob: -16.375001907348633
    6. '   ' → logprob: -17.125001907348633
    7. '

' → logprob: -17.875001907348633
    8. '])' → logprob: -17.875001907348633
    9. '2' → logprob: -18.000001907348633
    10. '' → logprob: -18.937501907348633

Token 94: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5701943039894104
    2. '),' → logprob: -1.1951942443847656
    3. '],' → logprob: -2.4451942443847656
    4. ']))' → logprob: -3.4451942443847656
    5. ')' → logprob: -4.570194244384766
    6. ')])' → logprob: -6.445194244384766
    7. ')))' → logprob: -7.820194244384766
    8. '))' → logprob: -8.570194244384766
    9. ']' → logprob: -8.820194244384766
    10. ' ,' → logprob: -9.070194244384766

Token 95: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031922089401632547
    2. ' ' → logprob: -5.75319242477417
    3. 't' → logprob: -11.753191947937012
    4. '   ' → logprob: -13.003191947937012
    5. ')' → logprob: -13.253191947937012
    6. '1' → logprob: -13.628191947937012
    7. ' t' → logprob: -14.503191947937012
    8. '  ' → logprob: -14.628191947937012
    9. ' ' → logprob: -17.190692901611328
    10. ',' → logprob: -17.253192901611328

Token 96: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -7.827200897736475e-05
    2. ' ' → logprob: -9.625078201293945
    3. 't' → logprob: -11.500078201293945
    4. '1' → logprob: -13.250078201293945
    5. '   ' → logprob: -16.375078201293945
    6. ')' → logprob: -16.500078201293945
    7. ' t' → logprob: -17.437578201293945
    8. 'start' → logprob: -17.500078201293945
    9. '０' → logprob: -18.187578201293945
    10. '  ' → logprob: -18.250078201293945

Token 97: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2519550323486328
    2. ')' → logprob: -1.5019550323486328
    3. '))
' → logprob: -11.501955032348633
    4. ')))' → logprob: -12.126955032348633
    5. ')
' → logprob: -12.251955032348633
    6. ' ))' → logprob: -13.126955032348633
    7. '),' → logprob: -13.626955032348633
    8. '));' → logprob: -14.001955032348633
    9. ' )' → logprob: -14.376955032348633
    10. '   ' → logprob: -15.876955032348633

Token 98: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6243054866790771
    2. ')' → logprob: -1.4993054866790771
    3. '
' → logprob: -1.6243054866790771
    4. '<|end|>' → logprob: -3.999305486679077
    5. '    
' → logprob: -4.249305725097656
    6. '  
' → logprob: -5.999305725097656
    7. ',' → logprob: -6.124305725097656
    8. '<|end|>' → logprob: -6.374305725097656
    9. ' while' → logprob: -7.124305725097656
    10. '\n' → logprob: -7.249305725097656

Token 99: ' while' (ID: 2049)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5164302587509155
    2. ' while' → logprob: -1.3914302587509155
    3. 'while' (adapté à ' while') → logprob: -1.8914302587509155
    4. '    
' → logprob: -6.641430377960205
    5. '	while' → logprob: -7.016430377960205
    6. ')' → logprob: -7.391430377960205
    7. ' ' → logprob: -7.516430377960205
    8. '  ' → logprob: -9.016429901123047
    9. '
' → logprob: -9.141429901123047
    10. '    ' → logprob: -9.891429901123047

Token 100: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.020596543326973915
    2. 'queue' → logprob: -3.895596504211426
    3. '(queue' → logprob: -10.270596504211426
    4. '	queue' → logprob: -11.270596504211426
    5. ' len' → logprob: -12.395596504211426
    6. 'que' → logprob: -14.020596504211426
    7. 'len' → logprob: -14.270596504211426
    8. '.queue' → logprob: -14.770596504211426
    9. 'True' → logprob: -15.395596504211426
    10. 'Queue' → logprob: -15.520596504211426

Token 101: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002038202714174986
    2. '):' → logprob: -6.25203800201416
    3. '>:' → logprob: -10.62703800201416
    4. ')' → logprob: -10.62703800201416
    5. '():' → logprob: -11.12703800201416
    6. ':**' → logprob: -12.00203800201416
    7. 'and' → logprob: -12.12703800201416
    8. ':not' → logprob: -12.12703800201416
    9. '.' → logprob: -12.62703800201416
    10. '[' → logprob: -13.12703800201416

Token 102: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.011243632063269615
    2. ',' → logprob: -4.76124382019043
    3. '        
' → logprob: -6.88624382019043
    4. '    ' → logprob: -7.88624382019043
    5. '        ' → logprob: -8.38624382019043
    6. '      ' → logprob: -8.38624382019043
    7. ' ' → logprob: -8.88624382019043
    8. ':' → logprob: -9.13624382019043
    9. 'n' → logprob: -9.26124382019043
    10. '     ' → logprob: -9.38624382019043

Token 103: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' (adapté à ' x') → logprob: -0.3138556182384491
    2. ' x' → logprob: -1.3138556480407715
    3. '           ' → logprob: -7.8138556480407715
    4. '        ' → logprob: -9.938855171203613
    5. '       ' → logprob: -10.188855171203613
    6. ' y' → logprob: -11.188855171203613
    7. 'y' → logprob: -11.188855171203613
    8. 'r' → logprob: -11.313855171203613
    9. '(x' → logprob: -11.438855171203613
    10. 'i' → logprob: -11.938855171203613

Token 104: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013963071396574378
    2. ',y' → logprob: -6.626396179199219
    3. ' ,' → logprob: -9.751396179199219
    4. ',x' → logprob: -12.126396179199219
    5. ',n' → logprob: -12.751396179199219
    6. ',user' → logprob: -14.876396179199219
    7. ',w' → logprob: -14.876396179199219
    8. ',next' → logprob: -15.126396179199219
    9. ',t' → logprob: -15.501396179199219
    10. ',current' → logprob: -15.501396179199219

Token 105: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.014163628220558167
    2. ' y' → logprob: -4.264163494110107
    3. '<|end|>' → logprob: -17.014163970947266
    4. '	y' → logprob: -17.514163970947266
    5. '    ' → logprob: -17.889163970947266
    6. ' ' → logprob: -18.264163970947266
    7. '   ' → logprob: -18.889163970947266
    8. '        ' → logprob: -19.139163970947266
    9. '```' → logprob: -19.764163970947266
    10. ',y' → logprob: -19.889163970947266

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.5577775128767826e-06
    2. ' ,' → logprob: -12.125005722045898
    3. '，' → logprob: -18.0000057220459
    4. ',z' → logprob: -18.0000057220459
    5. ',length' → logprob: -18.2500057220459
    6. '‌,' → logprob: -18.6250057220459
    7. '،' → logprob: -18.7500057220459
    8. ',n' → logprob: -18.7500057220459
    9. ',count' → logprob: -18.8750057220459
    10. ',current' → logprob: -19.2500057220459

Token 107: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.17655310034751892
    2. 'dist' → logprob: -1.9265531301498413
    3. 'depth' → logprob: -4.676553249359131
    4. ' d' → logprob: -5.426553249359131
    5. ' dist' → logprob: -6.926553249359131
    6. 'steps' → logprob: -7.301553249359131
    7. 'cost' → logprob: -8.176552772521973
    8. 'distance' → logprob: -8.301552772521973
    9. 'step' → logprob: -8.801552772521973
    10. 'z' → logprob: -9.676552772521973

Token 108: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38691937923431396
    2. '=' → logprob: -1.136919379234314
    3. ')' → logprob: -10.261919021606445
    4. ',' → logprob: -12.261919021606445
    5. 'istance' → logprob: -13.386919021606445
    6. ' =)' → logprob: -13.386919021606445
    7. ' ' → logprob: -13.511919021606445
    8. 'ist' → logprob: -13.886919021606445
    9. ' )' → logprob: -14.386919021606445
    10. '=int' → logprob: -14.886919021606445

Token 109: ' queue' (ID: 13661)
  Prédit: ' queue'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' queue' → logprob: -0.02325328253209591
    2. 'queue' → logprob: -3.7732532024383545
    3. '(queue' → logprob: -12.273253440856934
    4. '	queue' → logprob: -12.898253440856934
    5. '.queue' → logprob: -14.523253440856934
    6. ' ' → logprob: -15.898253440856934
    7. ' que' → logprob: -17.273252487182617
    8. 'que' → logprob: -17.773252487182617
    9. '_queue' → logprob: -18.273252487182617
    10. '<|end|>' → logprob: -18.648252487182617

Token 110: '.p' (ID: 1201)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.25194522738456726
    2. '=' → logprob: -1.5019452571868896
    3. '.pop' → logprob: -11.751945495605469
    4. ' ' → logprob: -12.501945495605469
    5. ')' → logprob: -13.126945495605469
    6. '   ' → logprob: -14.626945495605469
    7. '.' → logprob: -14.876945495605469
    8. ',' → logprob: -15.376945495605469
    9. '.p' → logprob: -15.501945495605469
    10. 'pop' → logprob: -15.751945495605469

Token 111: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -6.432518421206623e-05
    2. 'op' → logprob: -9.7500638961792
    3. 'opl' → logprob: -12.6250638961792
    4. 'ople' → logprob: -12.8750638961792
    5. 'opf' → logprob: -17.875064849853516
    6. 'opped' → logprob: -18.500064849853516
    7. 'opup' → logprob: -18.750064849853516
    8. 'opt' → logprob: -19.000064849853516
    9. '	op' → logprob: -19.500064849853516
    10. 'oplevel' → logprob: -19.500064849853516

Token 112: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.01841154508292675
    2. ')' → logprob: -4.018411636352539
    3. '(' → logprob: -9.268411636352539
    4. '()
' → logprob: -9.268411636352539
    5. '())' → logprob: -9.768411636352539
    6. '():' → logprob: -12.518411636352539
    7. ' ()' → logprob: -12.893411636352539
    8. '();' → logprob: -13.518411636352539
    9. ' )' → logprob: -13.893411636352539
    10. '()

' → logprob: -14.018411636352539

Token 113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.3271729052066803
    2. '<|end|>' → logprob: -1.327172875404358
    3. ' ' → logprob: -4.827172756195068
    4. '<|end|>' → logprob: -6.327172756195068
    5. '
' → logprob: -6.702172756195068
    6. '        ' → logprob: -7.452172756195068
    7. ')' → logprob: -7.702172756195068
    8. '   ' → logprob: -8.077173233032227
    9. ' if' → logprob: -8.202173233032227
    10. ',' → logprob: -8.452173233032227

Token 114: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.049962833523750305
    2. ' if' → logprob: -3.5499627590179443
    3. '       ' → logprob: -3.9249627590179443
    4. 'for' → logprob: -8.674962997436523
    5. ' for' → logprob: -10.424962997436523
    6. '
' → logprob: -10.924962997436523
    7. '<|end|>' → logprob: -11.174962997436523
    8. '        
' → logprob: -11.424962997436523
    9. 'yield' → logprob: -12.174962997436523
    10. 'i' → logprob: -12.299962997436523

Token 115: ' d' (ID: 272)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.1930047571659088
    2. ' t' → logprob: -2.943004846572876
    3. '(x' → logprob: -3.068004846572876
    4. ' d' → logprob: -3.568004846572876
    5. 'd' → logprob: -3.818004846572876
    6. '(t' → logprob: -4.693004608154297
    7. '(' → logprob: -4.818004608154297
    8. 't' → logprob: -4.943004608154297
    9. '(d' → logprob: -7.068004608154297
    10. ' ' → logprob: -7.568004608154297

Token 116: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.13145259022712708
    2. ' >=' → logprob: -2.3814525604248047
    3. '==' → logprob: -3.6314525604248047
    4. '>=' → logprob: -5.881452560424805
    5. ' >' → logprob: -6.756452560424805
    6. '>' → logprob: -8.756452560424805
    7. '=' → logprob: -10.006452560424805
    8. ' ' → logprob: -10.131452560424805
    9. ' =' → logprob: -10.381452560424805
    10. ' <=' → logprob: -10.756452560424805

Token 117: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0004891689168289304
    2. ' t' → logprob: -7.625489234924316
    3. '3' → logprob: -15.000489234924316
    4. ' ' → logprob: -15.250489234924316
    5. '6' → logprob: -15.500489234924316
    6. '2' → logprob: -16.37548828125
    7. '	t' → logprob: -16.50048828125
    8. '5' → logprob: -17.12548828125
    9. '1' → logprob: -17.50048828125
    10. '0' → logprob: -17.62548828125

Token 118: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004071971052326262
    2. ':return' → logprob: -8.250407218933105
    3. ' :' → logprob: -9.000407218933105
    4. '):' → logprob: -11.375407218933105
    5. ':
' → logprob: -11.875407218933105
    6. ')' → logprob: -13.000407218933105
    7. '：' → logprob: -13.875407218933105
    8. '+:' → logprob: -16.00040626525879
    9. ' ):' → logprob: -16.37540626525879
    10. ' or' → logprob: -16.62540626525879

Token 119: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.4037230908870697
    2. 'return' → logprob: -1.278723120689392
    3. ' return' → logprob: -3.2787230014801025
    4. 'continue' → logprob: -4.403723239898682
    5. ' continue' → logprob: -6.153723239898682
    6. 'break' → logprob: -6.653723239898682
    7. ' break' → logprob: -8.653722763061523
    8. 'yield' → logprob: -9.153722763061523
    9. '       ' → logprob: -10.153722763061523
    10. '
' → logprob: -10.528722763061523

Token 120: ' continue' (ID: 4901)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.37305134534835815
    2. 'continue' (adapté à ' continue') → logprob: -1.998051404953003
    3. ' return' → logprob: -2.373051404953003
    4. '           ' → logprob: -2.623051404953003
    5. ' continue' → logprob: -4.873051166534424
    6. 'break' → logprob: -6.373051166534424
    7. 'yield' → logprob: -7.998051166534424
    8. ' break' → logprob: -8.998051643371582
    9. '
' → logprob: -10.373051643371582
    10. '       ' → logprob: -10.373051643371582

Token 121: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 122: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.11725523322820663
    2. '<|end|>' → logprob: -2.242255210876465
    3. ' for' → logprob: -6.117255210876465
    4. 'for' → logprob: -7.242255210876465
    5. ')' → logprob: -8.117255210876465
    6. '<|end|>' → logprob: -8.117255210876465
    7. '   ' → logprob: -8.242255210876465
    8. ' ' → logprob: -8.742255210876465
    9. ',' → logprob: -9.367255210876465
    10. 'n' → logprob: -9.492255210876465

Token 123: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.09512818604707718
    2. 'for' (adapté à ' for') → logprob: -2.470128297805786
    3. '       ' → logprob: -5.220128059387207
    4. '        
' → logprob: -8.345128059387207
    5. '   ' → logprob: -8.595128059387207
    6. '	for' → logprob: -9.095128059387207
    7. '<|end|>' → logprob: -9.595128059387207
    8. ' 
' → logprob: -10.470128059387207
    9. '    
' → logprob: -10.720128059387207
    10. ' ' → logprob: -10.720128059387207

Token 124: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.3870224356651306
    2. ' dx' → logprob: -1.1370224952697754
    3. 'nx' → logprob: -9.887022018432617
    4. '_dx' → logprob: -10.012022018432617
    5. '(dx' → logprob: -10.262022018432617
    6. '```' → logprob: -11.512022018432617
    7. ' nx' → logprob: -11.762022018432617
    8. '   ' → logprob: -14.262022018432617
    9. '

' → logprob: -14.262022018432617
    10. '.dx' → logprob: -14.637022018432617

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.45848218582978e-06
    2. ' ,' → logprob: -13.12500286102295
    3. ',d' → logprob: -16.125001907348633
    4. ',
' → logprob: -16.375001907348633
    5. 'dy' → logprob: -16.875001907348633
    6. '，' → logprob: -17.250001907348633
    7. '‌,' → logprob: -17.500001907348633
    8. ',y' → logprob: -17.500001907348633
    9. ' dy' → logprob: -17.750001907348633
    10. ',

' → logprob: -17.875001907348633

Token 126: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.10020667314529419
    2. ' dy' → logprob: -2.3502066135406494
    3. '.dy' → logprob: -17.22520637512207
    4. 'Dy' → logprob: -17.97520637512207
    5. 'd' → logprob: -18.47520637512207
    6. '<|end|>' → logprob: -18.72520637512207
    7. 'dym' → logprob: -18.85020637512207
    8. 'ddy' → logprob: -21.10020637512207
    9. ' dyd' → logprob: -21.10020637512207
    10. ' ' → logprob: -21.10020637512207

Token 127: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011060673743486404
    2. 'in' → logprob: -4.51106071472168
    3. ',' → logprob: -12.51106071472168
    4. '<|end|>' → logprob: -12.88606071472168
    5. ')' → logprob: -13.01106071472168
    6. 'In' → logprob: -14.01106071472168
    7. ' ' → logprob: -14.01106071472168
    8. ':' → logprob: -14.26106071472168
    9. '	in' → logprob: -14.88606071472168
    10. '<|end|>' → logprob: -15.07356071472168

Token 128: ' dirs' (ID: 99999)
  Prédit: 'dirs'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dirs' → logprob: -0.1269349306821823
    2. ' dirs' → logprob: -2.1269350051879883
    3. 'dire' → logprob: -13.001935005187988
    4. '_dirs' → logprob: -13.501935005187988
    5. '
' → logprob: -14.126935005187988
    6. 'Dirs' → logprob: -14.501935005187988
    7. '```' → logprob: -14.501935005187988
    8. 'dims' → logprob: -14.751935005187988
    9. 'dir' → logprob: -14.751935005187988
    10. 'd' → logprob: -15.501935005187988

Token 129: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001830410328693688
    2. ':
' → logprob: -9.37518310546875
    3. '):' → logprob: -9.50018310546875
    4. '<|end|>' → logprob: -11.50018310546875
    5. ',' → logprob: -12.37518310546875
    6. ' :' → logprob: -12.62518310546875
    7. ':**' → logprob: -13.12518310546875
    8. '：' → logprob: -13.75018310546875
    9. '<|end|>' → logprob: -14.12518310546875
    10. '):
' → logprob: -15.00018310546875

Token 130: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 131: ' nx' (ID: 50118)
  Prédit: ' nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.0018265502294525504
    2. ' new' → logprob: -7.251826763153076
    3. 'nx' (adapté à ' nx') → logprob: -7.501826763153076
    4. ' x' → logprob: -8.751826286315918
    5. ' nxt' → logprob: -8.876826286315918
    6. '(nx' → logprob: -9.126826286315918
    7. ' ' → logprob: -10.001826286315918
    8. ' next' → logprob: -10.251826286315918
    9. ' tx' → logprob: -10.751826286315918
    10. ' 
' → logprob: -11.626826286315918

Token 132: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.26762109994888306
    2. ',' → logprob: -2.1426210403442383
    3. ' =' → logprob: -2.1426210403442383
    4. '=n' → logprob: -10.142621040344238
    5. ',n' → logprob: -10.392621040344238
    6. '=x' → logprob: -11.267621040344238
    7. ' ,' → logprob: -11.267621040344238
    8. '＝' → logprob: -12.642621040344238
    9. '<|end|>' → logprob: -13.142621040344238
    10. ',x' → logprob: -13.517621040344238

Token 133: ' ny' (ID: 4423)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.18280094861984253
    2. ' y' → logprob: -1.8078010082244873
    3. ' ny' → logprob: -6.057800769805908
    4. 'ny' → logprob: -7.432800769805908
    5. ' dy' → logprob: -9.807801246643066
    6. '<|end|>' → logprob: -10.557801246643066
    7. 'dy' → logprob: -11.432801246643066
    8. 'x' → logprob: -11.682801246643066
    9. 'ay' → logprob: -12.057801246643066
    10. ' ' → logprob: -12.182801246643066

Token 134: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38688376545906067
    2. '=' → logprob: -1.1368837356567383
    3. ')' → logprob: -12.011883735656738
    4. ',' → logprob: -12.761883735656738
    5. ')=' → logprob: -13.886883735656738
    6. '<|end|>' → logprob: -14.261883735656738
    7. '＝' → logprob: -14.386883735656738
    8. ' =
' → logprob: -15.136883735656738
    9. '=n' → logprob: -15.136883735656738
    10. ' ' → logprob: -15.511883735656738

Token 135: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.20141683518886566
    2. 'x' → logprob: -1.7014168500900269
    3. '(x' → logprob: -12.826416969299316
    4. ' ' → logprob: -14.826416969299316
    5. '	x' → logprob: -15.451416969299316
    6. ' (' → logprob: -15.701416969299316
    7. ')x' → logprob: -16.326416015625
    8. '<|end|>' → logprob: -16.701416015625
    9. '"x' → logprob: -17.826416015625
    10. '(' → logprob: -18.451416015625

Token 136: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.22542642056941986
    2. ' +' → logprob: -1.600426435470581
    3. '+,' → logprob: -12.47542667388916
    4. '<|end|>' → logprob: -12.97542667388916
    5. '+x' → logprob: -13.22542667388916
    6. ',' → logprob: -13.22542667388916
    7. '＋' → logprob: -13.97542667388916
    8. ' plus' → logprob: -14.10042667388916
    9. ' +
' → logprob: -14.22542667388916
    10. ' ,' → logprob: -14.97542667388916

Token 137: 'dx' (ID: 22100)
  Prédit: 'dx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -8.518582762917504e-05
    2. ' dx' → logprob: -9.37508487701416
    3. '(dx' → logprob: -15.50008487701416
    4. '_dx' → logprob: -16.250085830688477
    5. '.dx' → logprob: -18.375085830688477
    6. ' ' → logprob: -18.750085830688477
    7. 'Dx' → logprob: -18.875085830688477
    8. '
' → logprob: -19.750085830688477
    9. 'int' → logprob: -19.750085830688477
    10. 'tx' → logprob: -20.000085830688477

Token 138: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0010685354936867952
    2. ' ,' → logprob: -7.126068592071533
    3. ',y' → logprob: -8.251068115234375
    4. ',
' → logprob: -13.376068115234375
    5. ',n' → logprob: -14.001068115234375
    6. '，' → logprob: -14.626068115234375
    7. '‌,' → logprob: -16.751068115234375
    8. ',

' → logprob: -17.126068115234375
    9. '_,' → logprob: -17.251068115234375
    10. '、' → logprob: -17.376068115234375

Token 139: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.6931478977203369
    2. ' y' → logprob: -0.6931478977203369
    3. '	y' → logprob: -14.693147659301758
    4. '<|end|>' → logprob: -15.193147659301758
    5. ' ' → logprob: -17.193147659301758
    6. '(y' → logprob: -17.568147659301758
    7. ''y' → logprob: -18.693147659301758
    8. ')y' → logprob: -19.068147659301758
    9. ',y' → logprob: -19.318147659301758
    10. '   ' → logprob: -19.318147659301758

Token 140: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.240481914370321e-05
    2. '+y' → logprob: -9.875052452087402
    3. ' +' → logprob: -14.000052452087402
    4. '+d' → logprob: -17.250051498413086
    5. '＋' → logprob: -17.625051498413086
    6. 'y' → logprob: -18.625051498413086
    7. 'dy' → logprob: -18.875051498413086
    8. '+
' → logprob: -19.125051498413086
    9. '+xml' → logprob: -20.250051498413086
    10. '<|end|>' → logprob: -20.375051498413086

Token 141: 'dy' (ID: 7593)
  Prédit: 'dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.00012797261297237128
    2. ' dy' → logprob: -9.000127792358398
    3. 'y' → logprob: -12.375127792358398
    4. 'ny' → logprob: -16.1251277923584
    5. 'dx' → logprob: -16.7501277923584
    6. '.dy' → logprob: -16.7501277923584
    7. 'Dy' → logprob: -17.5001277923584
    8. '0' → logprob: -17.8751277923584
    9. '1' → logprob: -18.1251277923584
    10. 'py' → logprob: -18.2501277923584

Token 142: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 143: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 144: ' if' (ID: 538)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 145: ' (' (ID: 350)
  Prédit: '(nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.8873324990272522
    2. ' (' → logprob: -1.1373324394226074
    3. '(' → logprob: -1.7623324394226074
    4. '(n' → logprob: -2.5123324394226074
    5. '(x' → logprob: -4.762332439422607
    6. '(not' → logprob: -5.387332439422607
    7. '0' → logprob: -7.387332439422607
    8. ' ' → logprob: -7.637332439422607
    9. '(abs' → logprob: -9.012332916259766
    10. ' not' → logprob: -9.262332916259766

Token 146: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.05545920133590698
    2. '(nx' → logprob: -3.1804592609405518
    3. '0' → logprob: -4.680459022521973
    4. ' nx' → logprob: -5.805459022521973
    5. ' (' → logprob: -10.055459022521973
    6. ' ' → logprob: -10.555459022521973
    7. '(n' → logprob: -11.305459022521973
    8. '(' → logprob: -11.680459022521973
    9. 'not' → logprob: -13.680459022521973
    10. 'ny' → logprob: -13.805459022521973

Token 147: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.652451464906335e-05
    2. ',n' → logprob: -11.500016212463379
    3. ' ,' → logprob: -12.250016212463379
    4. ',y' → logprob: -14.250016212463379
    5. '<|end|>' → logprob: -14.750016212463379
    6. ',
' → logprob: -15.000016212463379
    7. ',None' → logprob: -17.125017166137695
    8. '‌,' → logprob: -17.125017166137695
    9. '<|end|>' → logprob: -17.125017166137695
    10. ',num' → logprob: -17.375017166137695

Token 148: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.02324792370200157
    2. ' ny' → logprob: -3.7732479572296143
    3. 'dy' → logprob: -14.773247718811035
    4. 'y' → logprob: -14.773247718811035
    5. 'nyi' → logprob: -14.898247718811035
    6. '
' → logprob: -15.273247718811035
    7. ' ' → logprob: -15.273247718811035
    8. 'yn' → logprob: -15.648247718811035
    9. 'Ny' → logprob: -15.898247718811035
    10. 'iy' → logprob: -16.27324867248535

Token 149: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.357988178730011
    2. ' not' → logprob: -1.2329881191253662
    3. 'not' → logprob: -5.357988357543945
    4. ' )' → logprob: -5.732988357543945
    5. ' in' → logprob: -6.482988357543945
    6. 'in' → logprob: -11.107988357543945
    7. ',' → logprob: -13.482988357543945
    8. '	not' → logprob: -13.857988357543945
    9. 'Not' → logprob: -13.982988357543945
    10. '）' → logprob: -14.357988357543945

Token 150: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.019677648320794106
    2. ' in' → logprob: -4.019677639007568
    3. 'not' → logprob: -6.519677639007568
    4. 'in' → logprob: -9.894678115844727
    5. ' ' → logprob: -13.894678115844727
    6. ')' → logprob: -14.144678115844727
    7. '	not' → logprob: -15.644678115844727
    8. ' )' → logprob: -17.269678115844727
    9. '<|end|>' → logprob: -17.269678115844727
    10. ',' → logprob: -18.144678115844727

Token 151: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06654002517461777
    2. 'in' → logprob: -3.191540002822876
    3. ' obstacles' → logprob: -4.066540241241455
    4. 'ob' → logprob: -5.316540241241455
    5. '<|end|>' → logprob: -7.691540241241455
    6. ' ob' → logprob: -7.941540241241455
    7. ')' → logprob: -8.191539764404297
    8. '	ob' → logprob: -10.191539764404297
    9. ',' → logprob: -10.941539764404297
    10. '_ob' → logprob: -11.191539764404297

Token 152: ' obstacles' (ID: 46430)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.605248212814331
    2. ' obstacles' → logprob: -0.980248212814331
    3. 'visited' → logprob: -2.855248212814331
    4. ' visited' → logprob: -3.855248212814331
    5. ' ob' → logprob: -9.98024845123291
    6. '	ob' → logprob: -10.48024845123291
    7. '(ob' → logprob: -11.35524845123291
    8. 'obs' → logprob: -11.48024845123291
    9. ' obstacle' → logprob: -11.60524845123291
    10. '
' → logprob: -12.79274845123291

Token 153: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0036282234359532595
    2. 'and' → logprob: -5.628628253936768
    3. '<|end|>' → logprob: -11.37862777709961
    4. ' ' → logprob: -11.87862777709961
    5. ')' → logprob: -13.00362777709961
    6. '           ' → logprob: -13.00362777709961
    7. '            ' → logprob: -13.12862777709961
    8. ':' → logprob: -13.75362777709961
    9. '	and' → logprob: -14.25362777709961
    10. ',' → logprob: -14.37862777709961

Token 154: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.03424559161067009
    2. '(nx' → logprob: -3.534245491027832
    3. '(n' → logprob: -5.409245491027832
    4. ' ' → logprob: -12.659245491027832
    5. '(x' → logprob: -12.784245491027832
    6. '(not' → logprob: -13.534245491027832
    7. ' not' → logprob: -13.909245491027832
    8. '(nn' → logprob: -14.409245491027832
    9. '(ns' → logprob: -15.534245491027832
    10. '(' → logprob: -15.784245491027832

Token 155: 'nx' (ID: 45103)
  Prédit: ' nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nx' → logprob: -0.3802712559700012
    2. 'nx' → logprob: -1.7552711963653564
    3. '(nx' → logprob: -2.0052711963653564
    4. ' (' → logprob: -4.7552714347839355
    5. '(n' → logprob: -9.505270957946777
    6. ' not' → logprob: -9.630270957946777
    7. ' ny' → logprob: -10.630270957946777
    8. ' ' → logprob: -10.880270957946777
    9. '
' → logprob: -11.630270957946777
    10. 'n' → logprob: -11.755270957946777

Token 156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0052428836934268475
    2. ' ,' → logprob: -5.380242824554443
    3. ' not' → logprob: -7.505242824554443
    4. ',n' → logprob: -10.505243301391602
    5. 'not' → logprob: -10.880243301391602
    6. ',y' → logprob: -11.755243301391602
    7. ')' → logprob: -11.755243301391602
    8. ',
' → logprob: -12.255243301391602
    9. '<|end|>' → logprob: -13.505243301391602
    10. ' )' → logprob: -14.630243301391602

Token 157: ' ny' (ID: 4423)
  Prédit: ' ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ny' → logprob: -0.5759212970733643
    2. 'ny' → logprob: -1.0759212970733643
    3. '(n' → logprob: -2.4509212970733643
    4. ' (' → logprob: -5.325921058654785
    5. '(nx' → logprob: -5.450921058654785
    6. '(' → logprob: -6.700921058654785
    7. 'y' → logprob: -9.950921058654785
    8. ')' → logprob: -10.075921058654785
    9. 'Ny' → logprob: -10.200921058654785
    10. 'nx' → logprob: -11.075921058654785

Token 158: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3292800784111023
    2. ' not' → logprob: -1.329280138015747
    3. ' )' → logprob: -4.204279899597168
    4. 'not' → logprob: -6.954279899597168
    5. ' ' → logprob: -13.454279899597168
    6. ' and' → logprob: -14.579279899597168
    7. '	not' → logprob: -14.704279899597168
    8. 'and' → logprob: -14.829279899597168
    9. '）' → logprob: -15.204279899597168
    10. '
' → logprob: -15.204279899597168

Token 159: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.0008055794751271605
    2. 'not' → logprob: -7.125805377960205
    3. ')' → logprob: -14.000805854797363
    4. ' and' → logprob: -16.000804901123047
    5. '	not' → logprob: -17.000804901123047
    6. ' ' → logprob: -17.250804901123047
    7. 'and' → logprob: -17.500804901123047
    8. '<|end|>' → logprob: -18.250804901123047
    9. ' )' → logprob: -18.625804901123047
    10. ' in' → logprob: -19.125804901123047

Token 160: ' in' (ID: 306)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 161: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.0009122979827225208
    2. ' visited' → logprob: -7.000912189483643
    3. '   ' → logprob: -15.0009126663208
    4. '
' → logprob: -15.1259126663208
    5. 'visit' → logprob: -16.625911712646484
    6. '```' → logprob: -17.625911712646484
    7. 'vis' → logprob: -17.875911712646484
    8. '       ' → logprob: -18.250911712646484
    9. 'Visited' → logprob: -18.750911712646484
    10. '           ' → logprob: -18.750911712646484

Token 162: ' and' (ID: 326)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0067156096920371056
    2. ':
' → logprob: -5.381715774536133
    3. '):' → logprob: -6.506715774536133
    4. ' and' → logprob: -7.881715774536133
    5. '):
' → logprob: -9.381715774536133
    6. '<|end|>' → logprob: -10.381715774536133
    7. ',' → logprob: -10.506715774536133
    8. '           ' → logprob: -10.631715774536133
    9. ')' → logprob: -10.631715774536133
    10. 'and' → logprob: -11.756715774536133

Token 163: ' -' (ID: 533)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03126625716686249
    2. ' ' → logprob: -4.031266212463379
    3. '(nx' → logprob: -5.281266212463379
    4. 'nx' → logprob: -5.906266212463379
    5. ' nx' → logprob: -6.031266212463379
    6. '(' → logprob: -6.406266212463379
    7. ' (' → logprob: -7.281266212463379
    8. '-' → logprob: -9.406266212463379
    9. 'x' → logprob: -10.031266212463379
    10. ' -' → logprob: -10.281266212463379

Token 164: '30' (ID: 1130)
  Prédit: '10'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '10' → logprob: -0.5747019648551941
    2. 't' → logprob: -1.4497020244598389
    3. '100' → logprob: -1.8247020244598389
    4. '200' → logprob: -3.824702024459839
    5. '1' → logprob: -4.94970178604126
    6. '50' → logprob: -6.19970178604126
    7. '150' → logprob: -6.32470178604126
    8. '2' → logprob: -6.57470178604126
    9. '500' → logprob: -6.82470178604126
    10. '5' → logprob: -6.82470178604126

Token 165: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.2813975214958191
    2. '<=' → logprob: -1.4063975811004639
    3. '<|end|>' → logprob: -9.281397819519043
    4. '0' → logprob: -9.906397819519043
    5. ')<=' → logprob: -10.781397819519043
    6. '<' → logprob: -11.031397819519043
    7. ' <' → logprob: -11.156397819519043
    8. ']<=' → logprob: -11.406397819519043
    9. ',' → logprob: -11.906397819519043
    10. '```' → logprob: -12.031397819519043

Token 166: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.16091863811016083
    2. ' nx' → logprob: -1.9109185934066772
    3. '(nx' → logprob: -7.285918712615967
    4. 'ny' → logprob: -12.035918235778809
    5. ' ny' → logprob: -13.660918235778809
    6. 'n' → logprob: -14.410918235778809
    7. '```' → logprob: -14.410918235778809
    8. ' ' → logprob: -15.410918235778809
    9. 'xn' → logprob: -15.785918235778809
    10. '
' → logprob: -16.160919189453125

Token 167: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.7012059688568115
    2. '<=' → logprob: -1.0762059688568115
    3. ' and' → logprob: -2.2012059688568115
    4. 'and' → logprob: -2.9512059688568115
    5. ' ' → logprob: -9.70120620727539
    6. ',' → logprob: -10.07620620727539
    7. '<|end|>' → logprob: -11.20120620727539
    8. '          ' → logprob: -11.57620620727539
    9. '           ' → logprob: -11.95120620727539
    10. ')<=' → logprob: -12.07620620727539

Token 168: ' ' (ID: 220)
  Prédit: '30'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -0.00037979125045239925
    2. ' ' → logprob: -8.25037956237793
    3. '31' → logprob: -10.62537956237793
    4. '40' → logprob: -10.87537956237793
    5. '60' → logprob: -11.00037956237793
    6. '29' → logprob: -11.12537956237793
    7. '50' → logprob: -11.62537956237793
    8. '35' → logprob: -12.00037956237793
    9. '100' → logprob: -12.56287956237793
    10. '300' → logprob: -12.81287956237793

Token 169: '30' (ID: 1130)
  Prédit: '30'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -0.00017481597024016082
    2. '40' → logprob: -10.250174522399902
    3. '31' → logprob: -10.250174522399902
    4. '29' → logprob: -10.500174522399902
    5. '60' → logprob: -10.875174522399902
    6. ' ' → logprob: -11.375174522399902
    7. '50' → logprob: -11.625174522399902
    8. '35' → logprob: -12.000174522399902
    9. '300' → logprob: -12.375174522399902
    10. '100' → logprob: -12.500174522399902

Token 170: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.03807225078344345
    2. 'and' → logprob: -3.288072347640991
    3. '           ' → logprob: -10.78807258605957
    4. ' ' → logprob: -12.78807258605957
    5. '	and' → logprob: -12.91307258605957
    6. '               ' → logprob: -13.41307258605957
    7. '            ' → logprob: -13.41307258605957
    8. ',' → logprob: -14.53807258605957
    9. '<|end|>' → logprob: -14.91307258605957
    10. ':' → logprob: -15.16307258605957

Token 171: ' -' (ID: 533)
  Prédit: '-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.03814740478992462
    2. ' -' → logprob: -3.288147449493408
    3. '30' → logprob: -9.91314697265625
    4. 'ny' → logprob: -10.28814697265625
    5. ' ny' → logprob: -11.28814697265625
    6. 'nx' → logprob: -12.53814697265625
    7. ' ' → logprob: -12.91314697265625
    8. '-n' → logprob: -13.78814697265625
    9. '   ' → logprob: -13.91314697265625
    10. ' nx' → logprob: -15.03814697265625

Token 172: '30' (ID: 1130)
  Prédit: '30'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -5.550411151489243e-05
    2. '31' → logprob: -10.250055313110352
    3. '20' → logprob: -12.375055313110352
    4. '15' → logprob: -12.625055313110352
    5. '60' → logprob: -13.125055313110352
    6. '50' → logprob: -13.500055313110352
    7. '35' → logprob: -13.625055313110352
    8. '29' → logprob: -13.812555313110352
    9. '40' → logprob: -13.812555313110352
    10. '300' → logprob: -13.875055313110352

Token 173: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.11292196810245514
    2. '<=' → logprob: -2.237921953201294
    3. ' >=' → logprob: -10.737921714782715
    4. ' ' → logprob: -10.862921714782715
    5. ' and' → logprob: -11.237921714782715
    6. '>=' → logprob: -11.362921714782715
    7. '<|end|>' → logprob: -11.362921714782715
    8. '```' → logprob: -12.237921714782715
    9. ')<=' → logprob: -12.362921714782715
    10. 'and' → logprob: -12.487921714782715

Token 174: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.0619698166847229
    2. ' ny' → logprob: -2.811969757080078
    3. ' ' → logprob: -14.311969757080078
    4. ' ' → logprob: -14.686969757080078
    5. '30' → logprob: -15.811969757080078
    6. 'nyi' → logprob: -15.811969757080078
    7. 'nym' → logprob: -15.936969757080078
    8. 'nx' → logprob: -16.186969757080078
    9. ''ny' → logprob: -16.311969757080078
    10. 'iny' → logprob: -16.436969757080078

Token 175: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.5759641528129578
    2. '<=' → logprob: -0.8259641528129578
    3. ')<=' → logprob: -11.325963973999023
    4. ']<=' → logprob: -12.325963973999023
    5. '<|end|>' → logprob: -12.450963973999023
    6. ' ' → logprob: -13.450963973999023
    7. '<' → logprob: -13.700963973999023
    8. ')' → logprob: -15.200963973999023
    9. '30' → logprob: -15.575963973999023
    10. '>=' → logprob: -15.575963973999023

Token 176: ' ' (ID: 220)
  Prédit: '30'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -0.000158842682139948
    2. ' ' → logprob: -8.75015926361084
    3. '３０' → logprob: -16.000158309936523
    4. '۳۰' → logprob: -16.750158309936523
    5. '3' → logprob: -17.000158309936523
    6. '60' → logprob: -17.125158309936523
    7. '31' → logprob: -17.625158309936523
    8. '   ' → logprob: -18.500158309936523
    9. '  ' → logprob: -18.625158309936523
    10. '300' → logprob: -18.812658309936523

Token 177: '30' (ID: 1130)
  Prédit: '30'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '30' → logprob: -1.723973582556937e-05
    2. ' ' → logprob: -11.000017166137695
    3. '３０' → logprob: -15.625017166137695
    4. '۳۰' → logprob: -16.000017166137695
    5. '60' → logprob: -17.312517166137695
    6. '3' → logprob: -17.562517166137695
    7. '300' → logprob: -17.687517166137695
    8. '31' → logprob: -18.125017166137695
    9. '३०' → logprob: -18.125017166137695
    10. '৩০' → logprob: -18.687517166137695

Token 178: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.008199763484299183
    2. ':
' → logprob: -5.258199691772461
    3. '):' → logprob: -6.133199691772461
    4. ' and' → logprob: -8.133199691772461
    5. '           ' → logprob: -8.633199691772461
    6. '):
' → logprob: -8.758199691772461
    7. '<|end|>' → logprob: -9.758199691772461
    8. ',' → logprob: -10.133199691772461
    9. ' :' → logprob: -10.383199691772461
    10. '               ' → logprob: -11.508199691772461

Token 179: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -8.73314929776825e-05
    2. '           ' → logprob: -10.50008773803711
    3. '<|end|>' → logprob: -10.50008773803711
    4. ')' → logprob: -12.00008773803711
    5. '```' → logprob: -12.25008773803711
    6. '              ' → logprob: -12.62508773803711
    7. ' visited' → logprob: -12.75008773803711
    8. '                   ' → logprob: -12.75008773803711
    9. '                
' → logprob: -13.00008773803711
    10. ',' → logprob: -13.25008773803711

Token 180: ' visited' (ID: 18416)
  Prédit: ' visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' visited' → logprob: -0.38815027475357056
    2. 'visited' (adapté à ' visited') → logprob: -1.1381502151489258
    3. '                   ' → logprob: -7.263150215148926
    4. '               ' → logprob: -7.513150215148926
    5. '                ' → logprob: -11.138150215148926
    6. ' queue' → logprob: -12.263150215148926
    7. ' visit' → logprob: -12.888150215148926
    8. 'queue' → logprob: -13.263150215148926
    9. 'Visited' → logprob: -13.263150215148926
    10. 'visit' → logprob: -13.763150215148926

Token 181: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0004317420825827867
    2. '.' → logprob: -7.750431537628174
    3. ' .' → logprob: -14.375432014465332
    4. '.Add' → logprob: -15.625432014465332
    5. '.append' → logprob: -16.125431060791016
    6. 'add' → logprob: -16.625431060791016
    7. ')add' → logprob: -17.625431060791016
    8. '<|end|>' → logprob: -17.750431060791016
    9. '.remove' → logprob: -18.000431060791016
    10. '.setdefault' → logprob: -19.125431060791016

Token 182: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00017243190086446702
    2. '(' → logprob: -9.00017261505127
    3. '(nx' → logprob: -10.00017261505127
    4. ' ((' → logprob: -13.00017261505127
    5. ' (' → logprob: -14.12517261505127
    6. '(n' → logprob: -14.75017261505127
    7. '(
' → logprob: -16.125171661376953
    8. ' ' → logprob: -18.250171661376953
    9. '  ' → logprob: -18.750171661376953
    10. '   ' → logprob: -18.750171661376953

Token 183: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.00015181333583313972
    2. ' nx' → logprob: -9.000151634216309
    3. '(nx' → logprob: -10.500151634216309
    4. 'n' → logprob: -14.625151634216309
    5. 'xn' → logprob: -16.625152587890625
    6. 'ny' → logprob: -16.750152587890625
    7. '   ' → logprob: -16.750152587890625
    8. '```' → logprob: -17.000152587890625
    9. 'nn' → logprob: -17.250152587890625
    10. '
' → logprob: -17.375152587890625

Token 184: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0012633290607482195
    2. '(nx' → logprob: -7.25126314163208
    3. ' ,' → logprob: -8.126263618469238
    4. 'ny' → logprob: -8.876263618469238
    5. ',n' → logprob: -9.501263618469238
    6. 'nx' → logprob: -11.376263618469238
    7. '[' → logprob: -11.876263618469238
    8. '(n' → logprob: -11.876263618469238
    9. ' ny' → logprob: -11.876263618469238
    10. ',y' → logprob: -12.376263618469238

Token 185: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.018153687939047813
    2. ' ny' → logprob: -4.018153667449951
    3. 'nyi' → logprob: -13.14315414428711
    4. 'y' → logprob: -15.14315414428711
    5. 'Ny' → logprob: -15.39315414428711
    6. ' ' → logprob: -15.76815414428711
    7. 'nym' → logprob: -16.01815414428711
    8. ' Ny' → logprob: -16.39315414428711
    9. 'nyt' → logprob: -16.51815414428711
    10. 'iy' → logprob: -16.51815414428711

Token 186: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003797465469688177
    2. ')
' → logprob: -5.62879753112793
    3. '))' → logprob: -8.87879753112793
    4. '               ' → logprob: -9.87879753112793
    5. '))
' → logprob: -13.00379753112793
    6. ')
' → logprob: -13.00379753112793
    7. '),' → logprob: -14.75379753112793
    8. ')`' → logprob: -15.12879753112793
    9. ' )' → logprob: -15.37879753112793
    10. '                   ' → logprob: -15.50379753112793

Token 187: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0018788971938192844
    2. ' queue' → logprob: -7.12687873840332
    3. 'queue' → logprob: -7.25187873840332
    4. '			' → logprob: -8.62687873840332
    5. '                
' → logprob: -9.37687873840332
    6. '	queue' → logprob: -10.75187873840332
    7. '		       ' → logprob: -11.37687873840332
    8. '(queue' → logprob: -11.37687873840332
    9. '<|end|>' → logprob: -11.62687873840332
    10. '```' → logprob: -11.75187873840332

Token 188: ' queue' (ID: 13661)
  Prédit: 'queue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'queue' (adapté à ' queue') → logprob: -0.049717627465724945
    2. ' queue' → logprob: -3.049717664718628
    3. '               ' → logprob: -6.799717426300049
    4. '           ' → logprob: -12.174717903137207
    5. '   ' → logprob: -12.549717903137207
    6. '```' → logprob: -13.049717903137207
    7. '       ' → logprob: -13.549717903137207
    8. '                   ' → logprob: -13.674717903137207
    9. '	queue' → logprob: -13.799717903137207
    10. ' ' → logprob: -14.924717903137207

Token 189: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -6.630610641877865e-06
    2. '.' → logprob: -13.125006675720215
    3. '.extend' → logprob: -13.125006675720215
    4. '.enqueue' → logprob: -13.750006675720215
    5. '.app' → logprob: -14.625006675720215
    6. ').' → logprob: -14.875006675720215
    7. 'append' → logprob: -15.125006675720215
    8. ' .' → logprob: -15.625006675720215
    9. '.Append' → logprob: -16.6250057220459
    10. '.p' → logprob: -16.8750057220459

Token 190: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -3.273621405242011e-05
    2. '(' → logprob: -11.125032424926758
    3. '(nx' → logprob: -11.750032424926758
    4. ' ((' → logprob: -12.000032424926758
    5. '(((' → logprob: -12.500032424926758
    6. '(n' → logprob: -16.750032424926758
    7. ' (' → logprob: -17.125032424926758
    8. ')((' → logprob: -17.500032424926758
    9. '(
' → logprob: -17.625032424926758
    10. '>((' → logprob: -17.875032424926758

Token 191: 'nx' (ID: 45103)
  Prédit: 'nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.3875619173049927
    2. '(nx' → logprob: -1.1375619173049927
    3. ' nx' → logprob: -7.387561798095703
    4. ' (' → logprob: -9.637561798095703
    5. 'n' → logprob: -13.637561798095703
    6. '(' → logprob: -13.637561798095703
    7. '(n' → logprob: -13.887561798095703
    8. 'Nx' → logprob: -14.012561798095703
    9. ')' → logprob: -14.387561798095703
    10. '   ' → logprob: -15.012561798095703

Token 192: ',' (ID: 11)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.06659935414791107
    2. ',' → logprob: -2.8165993690490723
    3. '(nx' → logprob: -5.691599369049072
    4. ',n' → logprob: -8.316598892211914
    5. '(' → logprob: -8.441598892211914
    6. '+' → logprob: -8.441598892211914
    7. '(n' → logprob: -9.316598892211914
    8. ',(' → logprob: -9.566598892211914
    9. ')' → logprob: -9.816598892211914
    10. ' ,' → logprob: -10.191598892211914

Token 193: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.02979758381843567
    2. ' ny' → logprob: -3.5297975540161133
    3. '(nx' → logprob: -10.154797554016113
    4. 'nx' → logprob: -12.154797554016113
    5. '(n' → logprob: -13.404797554016113
    6. '(' → logprob: -14.779797554016113
    7. ' (' → logprob: -15.029797554016113
    8. ' nx' → logprob: -15.404797554016113
    9. 'Ny' → logprob: -15.529797554016113
    10. ' Ny' → logprob: -17.40479850769043

Token 194: ',' (ID: 11)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.29535219073295593
    2. ',' → logprob: -1.7953522205352783
    3. ')' → logprob: -2.4203522205352783
    4. '),' → logprob: -7.545351982116699
    5. ' ,' → logprob: -9.7953519821167
    6. ')))' → logprob: -9.9203519821167
    7. ' ))' → logprob: -10.0453519821167
    8. ' )' → logprob: -10.9203519821167
    9. '))
' → logprob: -11.1703519821167
    10. '   ' → logprob: -11.2953519821167

Token 195: ' d' (ID: 272)
  Prédit: 'd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'd' → logprob: -0.02975071594119072
    2. ' d' → logprob: -3.5297508239746094
    3. ')d' → logprob: -15.52975082397461
    4. ' ' → logprob: -17.52975082397461
    5. ')' → logprob: -17.52975082397461
    6. '	d' → logprob: -18.27975082397461
    7. '   ' → logprob: -19.27975082397461
    8. '
' → logprob: -19.90475082397461
    9. '                   ' → logprob: -20.02975082397461
    10. '```' → logprob: -20.02975082397461

Token 196: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00038038729690015316
    2. ' +' → logprob: -7.875380516052246
    3. '＋' → logprob: -15.875380516052246
    4. '+
' → logprob: -17.00037956237793
    5. '1' → logprob: -18.00037956237793
    6. ')+' → logprob: -18.37537956237793
    7. '+)' → logprob: -19.75037956237793
    8. ')' → logprob: -19.87537956237793
    9. '+t' → logprob: -20.12537956237793
    10. '+k' → logprob: -20.37537956237793

Token 197: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.511406809295295e-06
    2. ' ' → logprob: -12.000006675720215
    3. ')' → logprob: -15.875006675720215
    4. '```' → logprob: -16.2500057220459
    5. '))' → logprob: -17.6250057220459
    6. '   ' → logprob: -18.2500057220459
    7. ' )' → logprob: -19.9375057220459
    8. '１' → logprob: -20.2500057220459
    9. '  ' → logprob: -20.6250057220459
    10. ')))' → logprob: -20.7500057220459

Token 198: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.2014487087726593
    2. ')' → logprob: -1.701448678970337
    3. '))
' → logprob: -11.201448440551758
    4. ')))' → logprob: -11.201448440551758
    5. ')
' → logprob: -12.076448440551758
    6. '               ' → logprob: -14.326448440551758
    7. ' ))' → logprob: -14.326448440551758
    8. '           ' → logprob: -14.951448440551758
    9. ' )' → logprob: -15.326448440551758
    10. '       ' → logprob: -15.576448440551758

Token 199: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07954814285039902
    2. ')' → logprob: -3.3295481204986572
    3. '               ' → logprob: -3.8295481204986572
    4. 'return' → logprob: -4.579548358917236
    5. ' return' → logprob: -5.454548358917236
    6. '#' → logprob: -7.204548358917236
    7. '       ' → logprob: -7.454548358917236
    8. ',' → logprob: -7.454548358917236
    9. '<|end|>' → logprob: -7.579548358917236
    10. '           ' → logprob: -7.829548358917236

Token 200: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.07398229092359543
    2. ' return' → logprob: -3.0739822387695312
    3. '   ' → logprob: -3.6989822387695312
    4. ')' → logprob: -8.698982238769531
    5. ' ' → logprob: -10.073982238769531
    6. '    
' → logprob: -10.448982238769531
    7. '       ' → logprob: -10.948982238769531
    8. '{return' → logprob: -11.573982238769531
    9. ':return' → logprob: -11.823982238769531
    10. '  ' → logprob: -12.073982238769531

Token 201: ' len' (ID: 4631)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.08254044502973557
    2. 'len' → logprob: -2.707540512084961
    3. ' visited' → logprob: -4.582540512084961
    4. ' len' → logprob: -6.082540512084961
    5. '(len' → logprob: -11.582540512084961
    6. '   ' → logprob: -13.832540512084961
    7. '{' → logprob: -14.332540512084961
    8. ' ' → logprob: -14.582540512084961
    9. '(' → logprob: -14.832540512084961
    10. '[len' → logprob: -15.207540512084961

Token 202: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -4.644463479053229e-05
    2. 'visited' → logprob: -10.000046730041504
    3. '(vis' → logprob: -14.125046730041504
    4. '(visitor' → logprob: -16.250045776367188
    5. ' visited' → logprob: -16.750045776367188
    6. ' (' → logprob: -17.250045776367188
    7. '```' → logprob: -17.750045776367188
    8. '(
' → logprob: -18.750045776367188
    9. 'vis' → logprob: -19.250045776367188
    10. '((' → logprob: -19.875045776367188

Token 203: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -7.703443770878948e-06
    2. '(' → logprob: -12.250007629394531
    3. ' visited' → logprob: -12.875007629394531
    4. ')' → logprob: -15.250007629394531
    5. 'visit' → logprob: -19.62500762939453
    6. 'Visited' → logprob: -20.75000762939453
    7. 'vis' → logprob: -20.87500762939453
    8. 'visitor' → logprob: -21.87500762939453
    9. 'visible' → logprob: -21.87500762939453
    10. '   ' → logprob: -22.25000762939453

Token 204: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -3.4121114822482923e-06
    2. ' )' → logprob: -13.000003814697266
    3. ')
' → logprob: -14.625003814697266
    4. '}' → logprob: -15.250003814697266
    5. '+' → logprob: -15.625003814697266
    6. '）' → logprob: -17.750003814697266
    7. '()' → logprob: -18.000003814697266
    8. '),' → logprob: -18.375003814697266
    9. '#' → logprob: -18.500003814697266
    10. ']' → logprob: -18.500003814697266

Token 205: 'def' (ID: 1314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 206: ' main' (ID: 2758)
  Prédit: ' main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.038043782114982605
    2. 'main' → logprob: -3.288043737411499
    3. ' solve' → logprob: -13.538043975830078
    4. 'solve' → logprob: -14.163043975830078
    5. '	main' → logprob: -16.413043975830078
    6. ' solution' → logprob: -17.413043975830078
    7. ' ' → logprob: -17.538043975830078
    8. ' run' → logprob: -17.788043975830078
    9. ' calculate' → logprob: -18.163043975830078
    10. ' input' → logprob: -18.538043975830078

Token 207: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -1.4140441635390744e-05
    2. ' ():' → logprob: -11.625014305114746
    3. '()' → logprob: -13.000014305114746
    4. '(' → logprob: -13.500014305114746
    5. '():
' → logprob: -13.625014305114746
    6. '(t' → logprob: -15.375014305114746
    7. '(":' → logprob: -17.87501335144043
    8. '()>' → logprob: -18.00001335144043
    9. '():
' → logprob: -18.25001335144043
    10. '_' → logprob: -18.87501335144043

Token 208: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2127772867679596
    2. ' t' → logprob: -2.0877773761749268
    3. 't' → logprob: -2.7127773761749268
    4. '(t' → logprob: -7.837777137756348
    5. '```' → logprob: -8.337777137756348
    6. 'import' → logprob: -8.462777137756348
    7. ' import' → logprob: -9.462777137756348
    8. 'n' → logprob: -9.587777137756348
    9. ',' → logprob: -9.587777137756348
    10. ',t' → logprob: -9.837777137756348

Token 209: ' import' (ID: 1588)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.010344297625124454
    2. ' t' → logprob: -4.635344505310059
    3. 'T' → logprob: -7.760344505310059
    4. '   ' → logprob: -9.510344505310059
    5. 'import' (adapté à ' import') → logprob: -9.635344505310059
    6. 'n' → logprob: -11.385344505310059
    7. ' T' → logprob: -11.885344505310059
    8. 'input' → logprob: -13.385344505310059
    9. ' import' → logprob: -13.510344505310059
    10. '	t' → logprob: -14.760344505310059

Token 210: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -7.946405094116926e-05
    2. ' sys' → logprob: -9.500079154968262
    3. 'math' → logprob: -12.625079154968262
    4. '=sys' → logprob: -14.625079154968262
    5. 'collections' → logprob: -15.375079154968262
    6. 'io' → logprob: -16.000080108642578
    7. 'built' → logprob: -16.125080108642578
    8. 'os' → logprob: -16.625080108642578
    9. 'random' → logprob: -16.750080108642578
    10. '```' → logprob: -17.125080108642578

Token 211: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01632384955883026
    2. 'input' → logprob: -4.516324043273926
    3. 'n' → logprob: -6.016324043273926
    4. ' readline' → logprob: -6.766324043273926
    5. ' input' → logprob: -6.891324043273926
    6. '
' → logprob: -9.016324043273926
    7. '    
' → logprob: -9.391324043273926
    8. 'data' → logprob: -9.516324043273926
    9. '.readline' → logprob: -9.516324043273926
    10. '_' → logprob: -9.641324043273926

Token 212: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.09633776545524597
    2. 'input' → logprob: -2.4713377952575684
    3. ' input' → logprob: -5.346337795257568
    4. 'n' → logprob: -6.471337795257568
    5. ' readline' → logprob: -7.346337795257568
    6. 'data' → logprob: -8.72133731842041
    7. '
' → logprob: -9.84633731842041
    8. '    
' → logprob: -10.34633731842041
    9. 't' → logprob: -10.59633731842041
    10. '.readline' → logprob: -10.97133731842041

Token 213: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.6612741351127625
    2. ' input' → logprob: -0.9112741351127625
    3. '   ' → logprob: -2.6612741947174072
    4. 't' → logprob: -5.286273956298828
    5. ' t' → logprob: -5.661273956298828
    6. 'n' → logprob: -5.911273956298828
    7. ' readline' → logprob: -8.411273956298828
    8. 'r' → logprob: -8.911273956298828
    9. ' n' → logprob: -8.911273956298828
    10. 'data' → logprob: -9.536273956298828

Token 214: ' =' (ID: 314)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10091698914766312
    2. ' =' → logprob: -2.600917100906372
    3. '=' → logprob: -3.975917100906372
    4. '_data' → logprob: -6.600916862487793
    5. '().' → logprob: -7.600916862487793
    6. '_line' → logprob: -7.975916862487793
    7. '.readline' → logprob: -8.850916862487793
    8. 'data' → logprob: -8.975916862487793
    9. '(' → logprob: -9.350916862487793
    10. '_lines' → logprob: -9.600916862487793

Token 215: ' sys' (ID: 12228)
  Prédit: 'sys'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sys' → logprob: -0.006716079078614712
    2. ' sys' → logprob: -5.006716251373291
    3. '=sys' → logprob: -14.756715774536133
    4. 'input' → logprob: -15.756715774536133
    5. '	sys' → logprob: -16.006715774536133
    6. '(sys' → logprob: -17.631715774536133
    7. 'lambda' → logprob: -20.381715774536133
    8. 'stdin' → logprob: -21.006715774536133
    9. '_sys' → logprob: -21.131715774536133
    10. '/sys' → logprob: -22.131715774536133

Token 216: '.stdin' (ID: 93480)
  Prédit: '.stdin'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.stdin' → logprob: -0.16317111253738403
    2. '.readline' → logprob: -2.1631710529327393
    3. '.' → logprob: -3.4131710529327393
    4. '.input' → logprob: -6.413171291351318
    5. ' .' → logprob: -8.03817081451416
    6. '().' → logprob: -9.03817081451416
    7. '。.' → logprob: -9.53817081451416
    8. '.stdout' → logprob: -9.66317081451416
    9. '.read' → logprob: -9.78817081451416
    10. '.​' → logprob: -9.78817081451416

Token 217: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -8.423219696851447e-05
    2. '.read' → logprob: -9.750083923339844
    3. '.buffer' → logprob: -11.000083923339844
    4. 'read' → logprob: -11.875083923339844
    5. 'buffer' → logprob: -14.000083923339844
    6. '.' → logprob: -14.750083923339844
    7. '.readlines' → logprob: -14.875083923339844
    8. '_read' → logprob: -15.875083923339844
    9. '.reader' → logprob: -16.125083923339844
    10. '.stdin' → logprob: -16.125083923339844

Token 218: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.022395333275198936
    2. '
' → logprob: -4.147395133972168
    3. '    
' → logprob: -6.022395133972168
    4. 't' → logprob: -6.397395133972168
    5. '<|end|>' → logprob: -7.522395133972168
    6. '()' → logprob: -7.772395133972168
    7. '  
' → logprob: -7.897395133972168
    8. '(t' → logprob: -8.272395133972168
    9. ' t' → logprob: -8.647395133972168
    10. '()
' → logprob: -8.772395133972168

Token 219: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009379047551192343
    2. '    
' → logprob: -7.1259379386901855
    3. 't' → logprob: -9.375937461853027
    4. '
' → logprob: -10.750937461853027
    5. '(t' → logprob: -12.000937461853027
    6. '  
' → logprob: -12.125937461853027
    7. ' t' → logprob: -13.125937461853027
    8. '()' → logprob: -13.250937461853027
    9. '   
' → logprob: -13.250937461853027
    10. '	t' → logprob: -13.375937461853027

Token 220: ' while' (ID: 2049)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -0.0023468725848942995
    2. 'T' → logprob: -6.252346992492676
    3. '   ' → logprob: -8.377346992492676
    4. ' t' → logprob: -8.627346992492676
    5. 'n' → logprob: -11.877346992492676
    6. ' T' → logprob: -14.127346992492676
    7. '	t' → logprob: -15.127346992492676
    8. '_t' → logprob: -15.377346992492676
    9. '`t' → logprob: -15.502346992492676
    10. 'N' → logprob: -15.627346992492676

Token 221: ' True' (ID: 6432)
  Prédit: ' True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' True' → logprob: -0.2519538402557373
    2. 'True' → logprob: -1.5019538402557373
    3. '(True' → logprob: -10.626954078674316
    4. '=True' → logprob: -15.251954078674316
    5. '1' → logprob: -16.376953125
    6. ' Tru' → logprob: -16.751953125
    7. ' ' → logprob: -17.751953125
    8. 'true' → logprob: -17.876953125
    9. 't' → logprob: -17.876953125
    10. '_true' → logprob: -18.501953125

Token 222: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01442744955420494
    2. ':
' → logprob: -4.639427661895752
    3. ',' → logprob: -5.889427661895752
    4. '():' → logprob: -7.139427661895752
    5. '       ' → logprob: -7.639427661895752
    6. '   ' → logprob: -7.889427661895752
    7. '):' → logprob: -9.514427185058594
    8. '():
' → logprob: -10.014427185058594
    9. ' :' → logprob: -10.514427185058594
    10. '):
' → logprob: -11.014427185058594

Token 223: '       ' (ID: 309)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.08761566877365112
    2. '       ' → logprob: -3.212615728378296
    3. '   ' → logprob: -3.462615728378296
    4. 'line' → logprob: -4.462615489959717
    5. '	line' → logprob: -8.462615966796875
    6. ' s' → logprob: -8.587615966796875
    7. 't' → logprob: -9.337615966796875
    8. ' t' → logprob: -9.712615966796875
    9. ' n' → logprob: -10.087615966796875
    10. 'n' → logprob: -10.212615966796875

Token 224: ' line' (ID: 2543)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' → logprob: -0.3524153232574463
    2. 'line' (adapté à ' line') → logprob: -1.4774153232574463
    3. 'T' → logprob: -3.4774153232574463
    4. 's' → logprob: -3.9774153232574463
    5. '   ' → logprob: -4.602415084838867
    6. ' line' → logprob: -5.352415084838867
    7. 'l' → logprob: -6.227415084838867
    8. 'n' → logprob: -7.602415084838867
    9. 'S' → logprob: -7.727415084838867
    10. '       ' → logprob: -7.852415084838867

Token 225: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889606058597565
    2. '=' → logprob: -2.5788960456848145
    3. '=line' → logprob: -12.078896522521973
    4. '＝' → logprob: -14.828896522521973
    5. ' =
' → logprob: -16.203895568847656
    6. ' ' → logprob: -16.578895568847656
    7. 's' → logprob: -16.953895568847656
    8. '=input' → logprob: -17.203895568847656
    9. ' =)' → logprob: -18.203895568847656
    10. 'line' → logprob: -18.453895568847656

Token 226: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.014166564680635929
    2. ' input' → logprob: -4.264166355133057
    3. 'sys' → logprob: -12.764166831970215
    4. ' sys' → logprob: -15.389166831970215
    5. '=input' → logprob: -18.2641658782959
    6. '(input' → logprob: -18.6391658782959
    7. '_input' → logprob: -19.3891658782959
    8. '	input' → logprob: -20.0141658782959
    9. '   ' → logprob: -20.5141658782959
    10. '<input' → logprob: -20.8891658782959

Token 227: '()
' (ID: 1234)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.3868838846683502
    2. '()' → logprob: -1.1368838548660278
    3. '()
' → logprob: -12.136883735656738
    4. '(' → logprob: -12.761883735656738
    5. '();' → logprob: -13.386883735656738
    6. '()>' → logprob: -13.761883735656738
    7. '()

' → logprob: -15.386883735656738
    8. '()">' → logprob: -15.511883735656738
    9. '（）' → logprob: -15.511883735656738
    10. '.strip' → logprob: -15.636883735656738

Token 228: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.36020806431770325
    2. '.strip' → logprob: -1.3602080345153809
    3. '.rstrip' → logprob: -3.360208034515381
    4. '        
' → logprob: -5.735208034515381
    5. ' if' → logprob: -5.860208034515381
    6. '   ' → logprob: -6.485208034515381
    7. 'rstrip' → logprob: -7.110208034515381
    8. '<|end|>' → logprob: -7.485208034515381
    9. '
' → logprob: -7.735208034515381
    10. ' =' → logprob: -7.860208034515381

Token 229: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.023622550070285797
    2. 'if' (adapté à ' if') → logprob: -3.773622512817383
    3. '       ' → logprob: -7.898622512817383
    4. '	if' → logprob: -13.273622512817383
    5. '   ' → logprob: -13.773622512817383
    6. ' ' → logprob: -14.148622512817383
    7. 'If' → logprob: -14.648622512817383
    8. ' line' → logprob: -14.773622512817383
    9. ' break' → logprob: -15.148622512817383
    10. ' If' → logprob: -15.648622512817383

Token 230: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.008630049414932728
    2. 'not' → logprob: -4.758630275726318
    3. ' line' → logprob: -11.25862979888916
    4. 'line' → logprob: -12.88362979888916
    5. '!' → logprob: -16.758630752563477
    6. '#line' → logprob: -16.883630752563477
    7. ' ' → logprob: -18.133630752563477
    8. '	not' → logprob: -18.133630752563477
    9. '[line' → logprob: -19.383630752563477
    10. '(not' → logprob: -19.883630752563477

Token 231: ' line' (ID: 2543)
  Prédit: ' line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.3868757486343384
    2. 'line' → logprob: -1.1368757486343384
    3. '#line' → logprob: -13.261876106262207
    4. '(line' → logprob: -13.386876106262207
    5. '[line' → logprob: -14.386876106262207
    6. '=line' → logprob: -14.386876106262207
    7. '	line' → logprob: -15.011876106262207
    8. ' ' → logprob: -17.88687515258789
    9. ',line' → logprob: -18.88687515258789
    10. '_line' → logprob: -19.38687515258789

Token 232: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.13810843229293823
    2. ':
' → logprob: -2.763108491897583
    3. '.strip' → logprob: -2.763108491897583
    4. '.' → logprob: -7.138108253479004
    5. '.rstrip' → logprob: -7.263108253479004
    6. ')' → logprob: -7.888108253479004
    7. '.startswith' → logprob: -8.638108253479004
    8. ':return' → logprob: -8.888108253479004
    9. '.split' → logprob: -9.263108253479004
    10. '):
' → logprob: -9.513108253479004

Token 233: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.357401043176651
    2. '           ' → logprob: -1.2324010133743286
    3. '   ' → logprob: -4.857400894165039
    4. ' ' → logprob: -7.482400894165039
    5. ':' → logprob: -8.982400894165039
    6. ',' → logprob: -9.107400894165039
    7. ' break' → logprob: -9.982400894165039
    8. '     ' → logprob: -10.232400894165039
    9. '	' → logprob: -10.482400894165039
    10. '	   ' → logprob: -10.482400894165039

Token 234: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.5906038284301758
    2. 'break' (adapté à ' break') → logprob: -0.8406038284301758
    3. '           ' → logprob: -4.465603828430176
    4. 'return' → logprob: -6.215603828430176
    5. '       ' → logprob: -7.465603828430176
    6. '	break' → logprob: -8.590603828430176
    7. ' return' → logprob: -8.715603828430176
    8. '   ' → logprob: -9.590603828430176
    9. '               ' → logprob: -9.965603828430176
    10. '_break' → logprob: -11.340603828430176

Token 235: '
' (ID: 198)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 236: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006227265694178641
    2. ',' → logprob: -8.500622749328613
    3. '   ' → logprob: -8.875622749328613
    4. '        
' → logprob: -9.375622749328613
    5. '<|end|>' → logprob: -9.625622749328613
    6. ' t' → logprob: -10.125622749328613
    7. 't' → logprob: -10.250622749328613
    8. 'tokens' → logprob: -11.000622749328613
    9. ' ' → logprob: -12.250622749328613
    10. '	' → logprob: -12.375622749328613

Token 237: ' t' (ID: 260)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 't' (adapté à ' t') → logprob: -0.014062304981052876
    2. 'T' → logprob: -4.764062404632568
    3. ' t' → logprob: -5.514062404632568
    4. '       ' → logprob: -6.764062404632568
    5. '   ' → logprob: -10.01406192779541
    6. 'parts' → logprob: -10.01406192779541
    7. 'n' → logprob: -10.13906192779541
    8. 's' → logprob: -10.38906192779541
    9. 'tokens' → logprob: -10.76406192779541
    10. ' T' → logprob: -11.13906192779541

Token 238: ',' (ID: 11)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5488956570625305
    2. ' =' → logprob: -0.9238956570625305
    3. ',' → logprob: -3.6738955974578857
    4. '=int' → logprob: -10.673895835876465
    5. ' ,' → logprob: -11.048895835876465
    6. '=line' → logprob: -11.298895835876465
    7. ' ' → logprob: -12.173895835876465
    8. '＝' → logprob: -13.173895835876465
    9. ')' → logprob: -13.548895835876465
    10. ',t' → logprob: -14.048895835876465

Token 239: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'n' → logprob: -1.3493101596832275
    2. 'a' → logprob: -1.9743101596832275
    3. 's' → logprob: -2.0993101596832275
    4. 'x' → logprob: -2.4743101596832275
    5. 'k' → logprob: -2.7243101596832275
    6. 'w' → logprob: -2.8493101596832275
    7. 'm' → logprob: -2.8493101596832275
    8. 'ob' → logprob: -2.9743101596832275
    9. 'h' → logprob: -4.224309921264648
    10. 'o' → logprob: -4.224309921264648

Token 240: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31327590346336365
    2. '=' → logprob: -1.313275933265686
    3. ')' → logprob: -11.813276290893555
    4. ',' → logprob: -12.563276290893555
    5. '=line' → logprob: -13.063276290893555
    6. ')=' → logprob: -14.813276290893555
    7. ' ' → logprob: -15.188276290893555
    8. '＝' → logprob: -15.813276290893555
    9. '=int' → logprob: -16.063276290893555
    10. '=input' → logprob: -16.938276290893555

Token 241: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.1269298940896988
    2. ' map' → logprob: -2.126929998397827
    3. 'line' → logprob: -13.376930236816406
    4. 'm' → logprob: -16.001930236816406
    5. ' line' → logprob: -16.376930236816406
    6. '	map' → logprob: -16.626930236816406
    7. '(map' → logprob: -17.126930236816406
    8. 'list' → logprob: -17.626930236816406
    9. '_map' → logprob: -18.876930236816406
    10. ' ' → logprob: -18.876930236816406

Token 242: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0005822229431942105
    2. '(' → logprob: -7.625582218170166
    3. '(str' → logprob: -9.500582695007324
    4. '(lambda' → logprob: -11.375582695007324
    5. '[int' → logprob: -12.750582695007324
    6. 'int' → logprob: -12.875582695007324
    7. '=int' → logprob: -14.125582695007324
    8. '<int' → logprob: -14.875582695007324
    9. '(tuple' → logprob: -15.250582695007324
    10. '(in' → logprob: -15.375582695007324

Token 243: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.01683398336172104
    2. ')' → logprob: -4.141833782196045
    3. '(' → logprob: -8.141834259033203
    4. ',line' → logprob: -8.141834259033203
    5. 'line' → logprob: -9.641834259033203
    6. '#line' → logprob: -10.266834259033203
    7. '()' → logprob: -10.391834259033203
    8. '=line' → logprob: -10.641834259033203
    9. '[line' → logprob: -10.766834259033203
    10. ' line' → logprob: -10.891834259033203

Token 244: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0002639582962729037
    2. ' line' → logprob: -8.250264167785645
    3. '(line' → logprob: -13.375264167785645
    4. ')' → logprob: -14.000264167785645
    5. '=line' → logprob: -15.875264167785645
    6. '[line' → logprob: -16.250263214111328
    7. '#line' → logprob: -16.625263214111328
    8. '	line' → logprob: -16.875263214111328
    9. 'input' → logprob: -18.500263214111328
    10. ',line' → logprob: -19.000263214111328

Token 245: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.0004965558764524758
    2. '.strip' → logprob: -8.000496864318848
    3. '.split' → logprob: -8.750496864318848
    4. '.' → logprob: -14.125496864318848
    5. '()' → logprob: -14.375496864318848
    6. 'split' → logprob: -14.625496864318848
    7. '.readline' → logprob: -15.000496864318848
    8. 'strip' → logprob: -15.250496864318848
    9. '.rstrip' → logprob: -15.625496864318848
    10. '())' → logprob: -15.875496864318848

Token 246: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.08150196075439453
    2. ')' → logprob: -2.5815019607543945
    3. '()' → logprob: -5.9565019607543945
    4. '())
' → logprob: -11.206501960754395
    5. '(' → logprob: -12.331501960754395
    6. ' )' → logprob: -14.956501960754395
    7. '))' → logprob: -15.331501960754395
    8. '()))' → logprob: -15.581501960754395
    9. '()
' → logprob: -15.831501960754395
    10. '('' → logprob: -15.831501960754395

Token 247: '       ' (ID: 309)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 248: ' if' (ID: 538)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.02188776805996895
    2. ' obstacles' → logprob: -3.89688777923584
    3. 'obs' → logprob: -7.14688777923584
    4. 'if' (adapté à ' if') → logprob: -8.64688777923584
    5. '	ob' → logprob: -9.27188777923584
    6. 'o' → logprob: -9.39688777923584
    7. '       ' → logprob: -9.39688777923584
    8. ' ob' → logprob: -9.52188777923584
    9. ' obst' → logprob: -11.52188777923584
    10. ' if' → logprob: -11.77188777923584

Token 249: ' t' (ID: 260)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 250: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4740971028804779
    2. '==' → logprob: -0.9740971326828003
    3. '=' → logprob: -11.72409725189209
    4. '<=' → logprob: -13.09909725189209
    5. '()==' → logprob: -13.34909725189209
    6. ' <=' → logprob: -13.84909725189209
    7. ' ' → logprob: -13.84909725189209
    8. '0' → logprob: -13.84909725189209
    9. '==-' → logprob: -13.84909725189209
    10. '<' → logprob: -13.97409725189209

Token 251: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0004309076175559312
    2. ' ' → logprob: -7.750431060791016
    3. '-' → logprob: -15.375431060791016
    4. ' -' → logprob: -18.000431060791016
    5. '０' → logprob: -19.125431060791016
    6. 'and' → logprob: -19.625431060791016
    7. '۰' → logprob: -19.750431060791016
    8. '  ' → logprob: -19.875431060791016
    9. '=' → logprob: -20.125431060791016
    10. 'EOF' → logprob: -20.625431060791016

Token 252: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.3954463510308415e-05
    2. ' ' → logprob: -9.875054359436035
    3. '-' → logprob: -13.000054359436035
    4. ' -' → logprob: -16.87505340576172
    5. '０' → logprob: -18.25005340576172
    6. 't' → logprob: -19.25005340576172
    7. '۰' → logprob: -19.37505340576172
    8. 'and' → logprob: -20.00005340576172
    9. '```' → logprob: -20.06255340576172
    10. 's' → logprob: -20.18755340576172

Token 253: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02054760977625847
    2. 'and' → logprob: -3.89554762840271
    3. '	and' → logprob: -13.145547866821289
    4. ' ' → logprob: -13.270547866821289
    5. '   ' → logprob: -13.395547866821289
    6. ':' → logprob: -15.770547866821289
    7. ' a' → logprob: -16.27054786682129
    8. ' ' → logprob: -16.52054786682129
    9. '       ' → logprob: -17.27054786682129
    10. '    ' → logprob: -17.39554786682129

Token 254: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.5759396553039551
    2. ' n' → logprob: -0.8259396553039551
    3. '	n' → logprob: -15.325939178466797
    4. '   ' → logprob: -17.700939178466797
    5. ' ' → logprob: -18.075939178466797
    6. ' ' → logprob: -18.700939178466797
    7. '  ' → logprob: -20.450939178466797
    8. '\n' → logprob: -21.950939178466797
    9. '    ' → logprob: -22.575939178466797
    10. '
' → logprob: -22.700939178466797

Token 255: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.5235517621040344
    2. ' ==' → logprob: -0.8985517621040344
    3. '0' → logprob: -8.148551940917969
    4. '=' → logprob: -9.898551940917969
    5. ')==' → logprob: -10.648551940917969
    6. ')' → logprob: -11.273551940917969
    7. '<|end|>' → logprob: -11.273551940917969
    8. ' ' → logprob: -11.398551940917969
    9. ' ' → logprob: -11.773551940917969
    10. '()==' → logprob: -11.898551940917969

Token 256: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.494741632603109e-05
    2. ' ' → logprob: -9.37508487701416
    3. '<|end|>' → logprob: -19.000085830688477
    4. '۰' → logprob: -20.875085830688477
    5. '  ' → logprob: -22.500085830688477
    6. '
' → logprob: -22.625085830688477
    7. '０' → logprob: -22.750085830688477
    8. '০' → logprob: -23.250085830688477
    9. ' ' → logprob: -23.375085830688477
    10. '=' → logprob: -23.625085830688477

Token 257: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. ' ' → logprob: -11.625008583068848
    3. '۰' → logprob: -19.125009536743164
    4. '０' → logprob: -20.500009536743164
    5. '০' → logprob: -20.750009536743164
    6. '<|end|>' → logprob: -21.125009536743164
    7. '०' → logprob: -21.375009536743164
    8. '<|end|>' → logprob: -22.062509536743164
    9. '```' → logprob: -22.125009536743164
    10. ')' → logprob: -22.187509536743164

Token 258: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03807488828897476
    2. ':
' → logprob: -3.2880749702453613
    3. '           ' → logprob: -11.288074493408203
    4. ':return' → logprob: -11.413074493408203
    5. '       ' → logprob: -12.288074493408203
    6. '   ' → logprob: -12.788074493408203
    7. ':
' → logprob: -14.788074493408203
    8. '):
' → logprob: -14.913074493408203
    9. ',' → logprob: -15.038074493408203
    10. ' :' → logprob: -15.038074493408203

Token 259: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.282920129597187e-05
    2. '       ' → logprob: -12.000012397766113
    3. '		' → logprob: -12.500012397766113
    4. '          ' → logprob: -13.625012397766113
    5. '               ' → logprob: -14.250012397766113
    6. '   ' → logprob: -15.125012397766113
    7. '	       ' → logprob: -15.500012397766113
    8. '         ' → logprob: -15.875012397766113
    9. 'break' → logprob: -16.87501335144043
    10. '            ' → logprob: -17.12501335144043

Token 260: ' break' (ID: 2338)
  Prédit: ' break'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' break' → logprob: -0.8180345892906189
    2. 'break' (adapté à ' break') → logprob: -0.8180345892906189
    3. 'return' → logprob: -2.8180346488952637
    4. '           ' → logprob: -3.0680346488952637
    5. ' return' → logprob: -4.568034648895264
    6. '               ' → logprob: -7.193034648895264
    7. '	break' → logprob: -10.693034172058105
    8. '       ' → logprob: -11.568034172058105
    9. '   ' → logprob: -12.818034172058105
    10. ' ' → logprob: -13.943034172058105

Token 261: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001297258073464036
    2. '<|end|>' → logprob: -7.376297473907471
    3. '        
' → logprob: -7.626297473907471
    4. '
' → logprob: -9.001296997070312
    5. ',' → logprob: -11.376296997070312
    6. '<|end|>' → logprob: -11.876296997070312
    7. '   ' → logprob: -12.001296997070312
    8. ' obstacles' → logprob: -12.251296997070312
    9. '```' → logprob: -12.376296997070312
    10. '	' → logprob: -12.751296997070312

Token 262: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05797075852751732
    2. ' obstacles' → logprob: -3.5579707622528076
    3. 'ob' → logprob: -4.3079705238342285
    4. '	ob' → logprob: -4.8079705238342285
    5. '```' → logprob: -5.8079705238342285
    6. '        
' → logprob: -6.8079705238342285
    7. ' ob' → logprob: -7.1829705238342285
    8. '(ob' → logprob: -7.3079705238342285
    9. '<|end|>' → logprob: -8.432971000671387
    10. '_ob' → logprob: -9.182971000671387

Token 263: ' obstacles' (ID: 46430)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.0457155816257
    2. ' obstacles' → logprob: -3.170715570449829
    3. '       ' → logprob: -6.420715808868408
    4. 'obs' → logprob: -7.795715808868408
    5. ' ob' → logprob: -7.795715808868408
    6. '	ob' → logprob: -8.54571533203125
    7. '_ob' → logprob: -11.17071533203125
    8. '(ob' → logprob: -11.29571533203125
    9. ' obs' → logprob: -11.92071533203125
    10. 'o' → logprob: -12.04571533203125

Token 264: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014164801687002182
    2. '=' → logprob: -4.264164924621582
    3. ',' → logprob: -14.264164924621582
    4. '＝' → logprob: -15.139164924621582
    5. '=set' → logprob: -15.639164924621582
    6. ' =
' → logprob: -16.014163970947266
    7. '.' → logprob: -16.389163970947266
    8. '.add' → logprob: -17.014163970947266
    9. ' =
' → logprob: -17.139163970947266
    10. ')' → logprob: -17.639163970947266

Token 265: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.000467730569653213
    2. '{' → logprob: -7.750467777252197
    3. ' set' → logprob: -10.250467300415039
    4. '{
' → logprob: -14.125467300415039
    5. '=set' → logprob: -14.750467300415039
    6. '{s' → logprob: -15.875467300415039
    7. '	set' → logprob: -16.12546730041504
    8. '{}' → logprob: -16.12546730041504
    9. '   ' → logprob: -17.12546730041504
    10. '(set' → logprob: -17.37546730041504

Token 266: '()
' (ID: 1234)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 267: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0032707606442272663
    2. ' for' → logprob: -6.003270626068115
    3. 'for' → logprob: -7.753270626068115
    4. '<|end|>' → logprob: -8.878271102905273
    5. '   ' → logprob: -9.128271102905273
    6. '	' → logprob: -9.628271102905273
    7. '	for' → logprob: -10.378271102905273
    8. '	   ' → logprob: -12.003271102905273
    9. ' ' → logprob: -12.628271102905273
    10. '        
' → logprob: -13.378271102905273

Token 268: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.03892521187663078
    2. ' for' → logprob: -3.2889251708984375
    3. '       ' → logprob: -7.0389251708984375
    4. '   ' → logprob: -12.163925170898438
    5. '	for' → logprob: -13.913925170898438
    6. ' ' → logprob: -15.663925170898438
    7. '```' → logprob: -20.038925170898438
    8. '           ' → logprob: -20.288925170898438
    9. ' ' → logprob: -21.038925170898438
    10. '        
' → logprob: -21.288925170898438

Token 269: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -3.5597102396423e-05
    2. ' _' → logprob: -10.250035285949707
    3. '_i' → logprob: -16.375036239624023
    4. '_range' → logprob: -16.750036239624023
    5. '_in' → logprob: -19.750036239624023
    6. '_=' → logprob: -19.750036239624023
    7. ' in' → logprob: -20.000036239624023
    8. '_

' → logprob: -20.125036239624023
    9. '_
' → logprob: -20.375036239624023
    10. '_,' → logprob: -21.375036239624023

Token 270: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.07989576458930969
    2. 'in' → logprob: -2.5798957347869873
    3. 'range' → logprob: -7.079895973205566
    4. ' range' → logprob: -8.954895973205566
    5. ' ' → logprob: -10.579895973205566
    6. '  ' → logprob: -12.579895973205566
    7. '_' → logprob: -13.204895973205566
    8. '   ' → logprob: -14.079895973205566
    9. '    ' → logprob: -14.329895973205566
    10. ' _' → logprob: -14.579895973205566

Token 271: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -4.0126840758603066e-05
    2. ' range' → logprob: -10.125040054321289
    3. '(range' → logprob: -18.12504005432129
    4. '	range' → logprob: -18.12504005432129
    5. 'r' → logprob: -18.62504005432129
    6. 'ange' → logprob: -19.25004005432129
    7. 'rang' → logprob: -19.37504005432129
    8. 'ra' → logprob: -20.00004005432129
    9. '[' → logprob: -20.50004005432129
    10. 'ran' → logprob: -20.62504005432129

Token 272: '(n' (ID: 2406)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.00010390079842181876
    2. '(n' → logprob: -9.750103950500488
    3. ' n' → logprob: -10.000103950500488
    4. '	n' → logprob: -16.125102996826172
    5. '   ' → logprob: -19.500102996826172
    6. '_n' → logprob: -19.625102996826172
    7. ')n' → logprob: -19.625102996826172
    8. 'range' → logprob: -20.875102996826172
    9. '
' → logprob: -21.000102996826172
    10. ',n' → logprob: -21.375102996826172

Token 273: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.023710796609520912
    2. '):' → logprob: -3.7737107276916504
    3. ':
' → logprob: -8.773711204528809
    4. '       ' → logprob: -9.273711204528809
    5. '():
' → logprob: -9.523711204528809
    6. '   ' → logprob: -9.773711204528809
    7. '):
' → logprob: -10.273711204528809
    8. ':' → logprob: -10.273711204528809
    9. ' ):
' → logprob: -11.648711204528809
    10. ')' → logprob: -13.273711204528809

Token 274: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0013729690108448267
    2. '   ' → logprob: -8.126373291015625
    3. ' x' → logprob: -8.126373291015625
    4. 'x' → logprob: -8.376373291015625
    5. ' line' → logprob: -8.376373291015625
    6. '	       ' → logprob: -9.001373291015625
    7. 'line' → logprob: -9.876373291015625
    8. '```' → logprob: -10.376373291015625
    9. '       ' → logprob: -10.626373291015625
    10. '    	   ' → logprob: -11.501373291015625

Token 275: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.5783954858779907
    2. 'x' (adapté à ' x') → logprob: -0.8283954858779907
    3. 'ox' → logprob: -6.953395366668701
    4. '           ' → logprob: -7.578395366668701
    5. ' ox' → logprob: -7.703395366668701
    6. 'ax' → logprob: -9.20339584350586
    7. 'line' → logprob: -9.32839584350586
    8. ' ax' → logprob: -9.32839584350586
    9. ' line' → logprob: -9.82839584350586
    10. 'xi' → logprob: -10.45339584350586

Token 276: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 277: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.07891799509525299
    2. ' y' → logprob: -2.578917980194092
    3. ',' → logprob: -10.95391845703125
    4. ',y' → logprob: -11.45391845703125
    5. '	y' → logprob: -16.07891845703125
    6. ' ' → logprob: -17.57891845703125
    7. '<|end|>' → logprob: -18.07891845703125
    8. '_y' → logprob: -18.32891845703125
    9. ' ,' → logprob: -18.70391845703125
    10. '    ' → logprob: -19.57891845703125

Token 278: ' =' (ID: 314)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 279: ' map' (ID: 4014)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.4740857183933258
    2. ' map' → logprob: -0.9740856885910034
    3. '           ' → logprob: -11.849085807800293
    4. '	map' → logprob: -13.599085807800293
    5. '    ' → logprob: -15.724085807800293
    6. '            ' → logprob: -16.349084854125977
    7. 'tuple' → logprob: -17.474084854125977
    8. '   ' → logprob: -17.849084854125977
    9. ' tuple' → logprob: -19.099084854125977
    10. ' ' → logprob: -19.099084854125977

Token 280: '(int' (ID: 2742)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 281: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.25252723693847656
    2. ',input' → logprob: -1.5025272369384766
    3. ',line' → logprob: -7.502527236938477
    4. 'input' → logprob: -10.752527236938477
    5. '(),' → logprob: -11.502527236938477
    6. '(input' → logprob: -11.752527236938477
    7. '(' → logprob: -13.502527236938477
    8. ',x' → logprob: -13.627527236938477
    9. '           ' → logprob: -14.002527236938477
    10. ',int' → logprob: -14.127527236938477

Token 282: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.00317783304490149
    2. ' input' → logprob: -5.753177642822266
    3. 'sys' → logprob: -15.753177642822266
    4. ' sys' → logprob: -18.503177642822266
    5. '_input' → logprob: -18.503177642822266
    6. '	input' → logprob: -19.128177642822266
    7. '(input' → logprob: -19.253177642822266
    8. '=input' → logprob: -20.128177642822266
    9. '<input' → logprob: -20.253177642822266
    10. 'line' → logprob: -21.128177642822266

Token 283: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -4.668304245569743e-05
    2. '()' → logprob: -10.000046730041504
    3. '())' → logprob: -14.375046730041504
    4. '()
' → logprob: -14.875046730041504
    5. '.readline' → logprob: -15.625046730041504
    6. '(' → logprob: -16.250045776367188
    7. ')' → logprob: -17.500045776367188
    8. '().__' → logprob: -17.875045776367188
    9. '()[' → logprob: -18.375045776367188
    10. '().
' → logprob: -18.375045776367188

Token 284: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.0003382038848940283
    2. 'strip' → logprob: -8.000338554382324
    3. 'rstrip' → logprob: -13.000338554382324
    4. ' split' → logprob: -15.375338554382324
    5. '(split' → logprob: -16.000337600708008
    6. 'read' → logprob: -16.375337600708008
    7. '.split' → logprob: -17.750337600708008
    8. 'spl' → logprob: -18.250337600708008
    9. ')' → logprob: -18.375337600708008
    10. '_split' → logprob: -18.500337600708008

Token 285: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.08440252393484116
    2. ')
' → logprob: -2.584402561187744
    3. '())' → logprob: -5.459402561187744
    4. '())
' → logprob: -6.834402561187744
    5. '()' → logprob: -8.959402084350586
    6. ')
' → logprob: -11.209402084350586
    7. '()
' → logprob: -12.084402084350586
    8. '       ' → logprob: -12.334402084350586
    9. ')`
' → logprob: -12.709402084350586
    10. '))' → logprob: -12.959402084350586

Token 286: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014992679934948683
    2. ' obstacles' → logprob: -7.501499176025391
    3. 'ob' → logprob: -7.876499176025391
    4. '       ' → logprob: -8.25149917602539
    5. '<|end|>' → logprob: -9.00149917602539
    6. '               ' → logprob: -10.25149917602539
    7. '(ob' → logprob: -10.25149917602539
    8. '	ob' → logprob: -10.25149917602539
    9. '   ' → logprob: -11.37649917602539
    10. '          ' → logprob: -11.37649917602539

Token 287: ' obstacles' (ID: 46430)
  Prédit: 'ob'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ob' → logprob: -0.593041181564331
    2. ' obstacles' → logprob: -0.843041181564331
    3. '           ' → logprob: -4.09304141998291
    4. '       ' → logprob: -9.09304141998291
    5. '	ob' → logprob: -9.59304141998291
    6. ' ob' → logprob: -9.96804141998291
    7. '   ' → logprob: -10.71804141998291
    8. 'obs' → logprob: -11.84304141998291
    9. '(ob' → logprob: -12.96804141998291
    10. '               ' → logprob: -13.21804141998291

Token 288: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0019342314917594194
    2. '.' → logprob: -6.251934051513672
    3. ' .' → logprob: -13.001934051513672
    4. ').' → logprob: -13.251934051513672
    5. '.append' → logprob: -14.751934051513672
    6. '.setdefault' → logprob: -15.001934051513672
    7. '.update' → logprob: -15.251934051513672
    8. ')add' → logprob: -15.751934051513672
    9. '.Add' → logprob: -15.876934051513672
    10. 'add' → logprob: -15.876934051513672

Token 289: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0001049736310960725
    2. '(' → logprob: -9.750104904174805
    3. '(x' → logprob: -10.000104904174805
    4. ' (' → logprob: -13.875104904174805
    5. ' ((' → logprob: -15.500104904174805
    6. '(
' → logprob: -16.875104904174805
    7. ' ' → logprob: -18.250104904174805
    8. '[(' → logprob: -18.750104904174805
    9. '(tuple' → logprob: -19.000104904174805
    10. '   ' → logprob: -19.375104904174805

Token 290: 'x' (ID: 87)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 291: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 292: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0019286326132714748
    2. ' y' → logprob: -6.251928806304932
    3. '<|end|>' → logprob: -17.626928329467773
    4. '	y' → logprob: -18.001928329467773
    5. ')y' → logprob: -18.501928329467773
    6. ',y' → logprob: -19.001928329467773
    7. ' ' → logprob: -19.376928329467773
    8. '
' → logprob: -20.501928329467773
    9. ''y' → logprob: -20.751928329467773
    10. ',' → logprob: -20.876928329467773

Token 293: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.008643528446555138
    2. '))' → logprob: -4.758643627166748
    3. ')
' → logprob: -10.50864315032959
    4. '))
' → logprob: -13.63364315032959
    5. ')))' → logprob: -14.63364315032959
    6. ')}' → logprob: -17.883644104003906
    7. '       ' → logprob: -18.008644104003906
    8. '           ' → logprob: -18.008644104003906
    9. ')return' → logprob: -18.258644104003906
    10. ' )' → logprob: -18.508644104003906

Token 294: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.013572866097092628
    2. '<|end|>' → logprob: -4.513572692871094
    3. '
' → logprob: -6.513572692871094
    4. '        
' → logprob: -7.388572692871094
    5. '   ' → logprob: -8.763572692871094
    6. ')' → logprob: -9.388572692871094
    7. '<|end|>' → logprob: -9.638572692871094
    8. '	' → logprob: -10.388572692871094
    9. '		
' → logprob: -11.763572692871094
    10. '  
' → logprob: -11.888572692871094

Token 295: ' sx' (ID: 39428)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.7770814299583435
    2. ' print' → logprob: -1.5270814895629883
    3. 'result' → logprob: -1.9020814895629883
    4. ' result' → logprob: -2.6520814895629883
    5. '       ' → logprob: -3.0270814895629883
    6. 'res' → logprob: -3.2770814895629883
    7. ' res' → logprob: -4.402081489562988
    8. ' r' → logprob: -6.777081489562988
    9. 'r' → logprob: -6.902081489562988
    10. ' ans' → logprob: -7.277081489562988

Token 296: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.56102097814437e-05
    2. ' ,' → logprob: -10.500045776367188
    3. ',s' → logprob: -11.000045776367188
    4. ',y' → logprob: -13.875045776367188
    5. '=' → logprob: -15.750045776367188
    6. ' =' → logprob: -16.000045776367188
    7. '_,' → logprob: -16.500045776367188
    8. ',S' → logprob: -17.125045776367188
    9. ',start' → logprob: -17.250045776367188
    10. 's' → logprob: -17.625045776367188

Token 297: ' sy' (ID: 6157)
  Prédit: 'sy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sy' → logprob: -0.38343265652656555
    2. ' sy' → logprob: -1.6334326267242432
    3. '0' → logprob: -2.133432626724243
    4. ' ' → logprob: -5.508432865142822
    5. '_sy' → logprob: -7.258432865142822
    6. 'sys' → logprob: -11.758432388305664
    7. 'syz' → logprob: -11.883432388305664
    8. 'sx' → logprob: -11.883432388305664
    9. 's' → logprob: -12.508432388305664
    10. 'Sy' → logprob: -13.133432388305664

Token 298: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5759539604187012
    2. ' =' → logprob: -0.8259539604187012
    3. ',' → logprob: -12.07595443725586
    4. ')' → logprob: -12.20095443725586
    5. '<|end|>' → logprob: -13.57595443725586
    6. ')=' → logprob: -14.07595443725586
    7. ' =)' → logprob: -14.57595443725586
    8. ' ' → logprob: -15.82595443725586
    9. '＝' → logprob: -15.82595443725586
    10. '=s' → logprob: -15.82595443725586

Token 299: ' map' (ID: 4014)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.08210095763206482
    2. 'map' → logprob: -2.7071008682250977
    3. ' map' → logprob: -4.707100868225098
    4. ' ' → logprob: -5.832100868225098
    5. '(' → logprob: -9.457100868225098
    6. '(map' → logprob: -11.207100868225098
    7. ' (' → logprob: -11.707100868225098
    8. '    ' → logprob: -11.957100868225098
    9. '        ' → logprob: -12.332100868225098
    10. '   ' → logprob: -12.582100868225098

Token 300: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -7.719917630311102e-05
    2. 'int' → logprob: -10.375077247619629
    3. '=int' → logprob: -10.500077247619629
    4. '[int' → logprob: -11.750077247619629
    5. ',int' → logprob: -11.750077247619629
    6. '<int' → logprob: -13.000077247619629
    7. ':int' → logprob: -15.750077247619629
    8. ']int' → logprob: -16.125076293945312
    9. '(' → logprob: -16.875076293945312
    10. 'tuple' → logprob: -18.125076293945312

Token 301: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 302: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.005234475247561932
    2. ' input' → logprob: -5.255234241485596
    3. 'sys' → logprob: -14.630234718322754
    4. '(input' → logprob: -15.880234718322754
    5. 'int' → logprob: -16.755233764648438
    6. ' sys' → logprob: -17.755233764648438
    7. '=input' → logprob: -19.755233764648438
    8. ',input' → logprob: -20.255233764648438
    9. '[input' → logprob: -20.505233764648438
    10. '_input' → logprob: -20.505233764648438

Token 303: '().' (ID: 1454)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 304: 'split' (ID: 13627)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 305: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.35331612825393677
    2. '())' → logprob: -1.353316068649292
    3. '()' → logprob: -3.853316068649292
    4. ')
' → logprob: -4.603316307067871
    5. '())
' → logprob: -4.853316307067871
    6. '()
' → logprob: -8.478316307067871
    7. '(' → logprob: -11.603316307067871
    8. ')
' → logprob: -12.853316307067871
    9. '())
' → logprob: -13.103316307067871
    10. '))' → logprob: -13.228316307067871

Token 306: '       ' (ID: 309)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 307: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0006349971517920494
    2. 'result' → logprob: -8.125635147094727
    3. ' print' → logprob: -8.375635147094727
    4. '       ' → logprob: -9.875635147094727
    5. 'res' → logprob: -9.875635147094727
    6. 'r' → logprob: -13.375635147094727
    7. '        
' → logprob: -13.875635147094727
    8. 'ans' → logprob: -14.250635147094727
    9. ' result' → logprob: -14.750635147094727
    10. 'count' → logprob: -14.750635147094727

Token 308: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.00021152703266125172
    2. 'b' → logprob: -8.500211715698242
    3. '(' → logprob: -11.875211715698242
    4. ' bfs' → logprob: -13.750211715698242
    5. '(
' → logprob: -17.375211715698242
    6. ')b' → logprob: -18.250211715698242
    7. ' (' → logprob: -18.375211715698242
    8. '=b' → logprob: -18.500211715698242
    9. '(len' → logprob: -19.000211715698242
    10. ' b' → logprob: -19.250211715698242

Token 309: 'fs' (ID: 6469)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 310: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0007142199319787323
    2. '(' → logprob: -7.875714302062988
    3. '(s' → logprob: -8.500714302062988
    4. ' (' → logprob: -9.250714302062988
    5. ')' → logprob: -10.625714302062988
    6. ')(' → logprob: -12.125714302062988
    7. '(
' → logprob: -13.625714302062988
    8. 't' → logprob: -14.250714302062988
    9. '((' → logprob: -14.250714302062988
    10. '(T' → logprob: -14.375714302062988

Token 311: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0009408812038600445
    2. ',s' → logprob: -7.125940799713135
    3. ' ,' → logprob: -9.500941276550293
    4. '(' → logprob: -10.250941276550293
    5. ',(' → logprob: -11.375941276550293
    6. ',
' → logprob: -12.375941276550293
    7. '(s' → logprob: -12.875941276550293
    8. 's' → logprob: -13.250941276550293
    9. ')' → logprob: -13.250941276550293
    10. ',S' → logprob: -13.500941276550293

Token 312: ' obstacles' (ID: 46430)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 313: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00017946491425391287
    2. '(s' → logprob: -8.750179290771484
    3. ' ,' → logprob: -11.750179290771484
    4. '(' → logprob: -12.125179290771484
    5. ',(' → logprob: -12.125179290771484
    6. ' (' → logprob: -13.750179290771484
    7. ',s' → logprob: -14.250179290771484
    8. '   ' → logprob: -16.000179290771484
    9. ')' → logprob: -16.125179290771484
    10. '(x' → logprob: -16.250179290771484

Token 314: ' (' (ID: 350)
  Prédit: '(s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.0031791406217962503
    2. ' (' → logprob: -5.75317907333374
    3. '   ' → logprob: -14.003179550170898
    4. '(x' → logprob: -15.128179550170898
    5. '(si' → logprob: -15.628179550170898
    6. '(sr' → logprob: -16.1281795501709
    7. '(sz' → logprob: -16.7531795501709
    8. ' ' → logprob: -16.8781795501709
    9. '(' → logprob: -17.7531795501709
    10. '(S' → logprob: -17.7531795501709

Token 315: 'sx' (ID: 102754)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 316: ',' (ID: 11)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 317: ' sy' (ID: 6157)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 318: ')))

' (ID: 46526)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 319: 'if' (ID: 366)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 320: ' __' (ID: 2516)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 321: 'name' (ID: 897)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 322: '__' (ID: 771)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 323: '=="' (ID: 24027)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 324: '__' (ID: 771)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 325: 'main' (ID: 7731)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 326: '__":
' (ID: 49892)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 327: '   ' (ID: 271)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 328: ' main' (ID: 2758)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 329: '()' (ID: 416)
  Prédit: 'ERROR'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 327
Tokens correctement prédits (1ère position, stricte): 146
Tokens correctement prédits (1ère position, avec adaptation): 154
Tokens correctement prédits (top 10): 262
Précision stricte (1ère position): 44.65%
Précision adaptée (1ère position): 47.09%
Précision (top 10): 80.12%
================================================================================
