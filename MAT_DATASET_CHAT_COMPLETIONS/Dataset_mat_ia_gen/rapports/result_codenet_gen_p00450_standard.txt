================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:13:47
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys
input = sys.stdin.readline

while True:
    n = int(input())
    if n == 0:
        break
    stones = [int(input()) for _ in range(n)]
    stack = []  # (color, count)
    for i, c in enumerate(stones, 1):
        if i % 2 == 1:
            # odd i: just add new stone
            if stack and stack[-1][0] == c:
                stack[-1] = (c, stack[-1][1] + 1)
            else:
                stack.append((c, 1))
        else:
            if not stack:
                stack.append((c,1))
            else:
                right_color = stack[-1][0]
                if c == right_color:
                    # same color: just add
                    stack[-1] = (c, stack[-1][1] + 1)
                else:
                    # different: remove right-end consecutive stones
                    tail_count = stack[-1][1]
                    stack.pop()
                    # replace with c repeated tail_count times
                    if stack and stack[-1][0] == c:
                        stack[-1] = (c, stack[-1][1] + tail_count)
                    else:
                        stack.append((c, tail_count))
                    # then put c stone at right end
                    stack[-1] = (c, stack[-1][1] + 1)

    # count white stones (color 0)
    ans = sum(count for color, count in stack if color == 0)
    print(ans)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '
' (ID: 198)
  → Token d'amorce (pas de prédiction)

Token 3: 'input' (ID: 2586)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.026953943073749542
    2. '\n' → logprob: -3.901953935623169
    3. '<|end|>' → logprob: -6.651954174041748
    4. 'import' → logprob: -7.151954174041748
    5. 'newline' → logprob: -7.151954174041748
    6. '\' → logprob: -7.151954174041748
    7. '```' → logprob: -7.526954174041748
    8. '' → logprob: -7.901954174041748
    9. '<|end|>' → logprob: -7.901954174041748
    10. 'print' → logprob: -8.27695369720459

Token 4: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0024087082128971815
    2. '.' → logprob: -7.002408504486084
    3. '()' → logprob: -7.127408504486084
    4. '(
' → logprob: -8.877408981323242
    5. '=' → logprob: -9.002408981323242
    6. ')' → logprob: -9.252408981323242
    7. '_' → logprob: -9.502408981323242
    8. ' (' → logprob: -10.002408981323242
    9. '```' → logprob: -10.002408981323242
    10. ' =' → logprob: -10.252408981323242

Token 5: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.014413704164326191
    2. 'sys' → logprob: -4.264413833618164
    3. ' input' → logprob: -8.514413833618164
    4. 'input' → logprob: -10.389413833618164
    5. ' ' → logprob: -12.014413833618164
    6. '=sys' → logprob: -12.139413833618164
    7. '	sys' → logprob: -12.389413833618164
    8. '(sys' → logprob: -12.889413833618164
    9. ' system' → logprob: -14.514413833618164
    10. ' lambda' → logprob: -16.514413833618164

Token 6: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.010973773896694183
    2. ' .' → logprob: -4.885973930358887
    3. '.stdin' → logprob: -6.010973930358887
    4. '.import' → logprob: -7.885973930358887
    5. '.readline' → logprob: -8.885973930358887
    6. '.argv' → logprob: -9.135973930358887
    7. '.input' → logprob: -9.885973930358887
    8. '.stdout' → logprob: -10.135973930358887
    9. '.
' → logprob: -10.635973930358887
    10. '.exit' → logprob: -10.760973930358887

Token 7: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.5011351704597473
    2. '.' → logprob: -1.0011351108551025
    3. '.read' → logprob: -3.6261351108551025
    4. '.readlines' → logprob: -10.876134872436523
    5. '.Read' → logprob: -10.876134872436523
    6. 'read' → logprob: -11.126134872436523
    7. '```' → logprob: -12.001134872436523
    8. ' .' → logprob: -12.251134872436523
    9. '.

' → logprob: -13.501134872436523
    10. '.
' → logprob: -13.626134872436523

Token 8: '

' (ID: 279)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.056260839104652405
    2. '(' → logprob: -3.056260824203491
    3. '()
' → logprob: -5.68126106262207
    4. '(
' → logprob: -6.80626106262207
    5. '().' → logprob: -7.05626106262207
    6. '
' → logprob: -7.43126106262207
    7. '()\' → logprob: -7.43126106262207
    8. '\n' → logprob: -7.55626106262207
    9. '\' → logprob: -8.43126106262207
    10. '()

' → logprob: -9.05626106262207

Token 9: 'while' (ID: 7032)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.34941408038139343
    2. '(' → logprob: -1.2244141101837158
    3. '().' → logprob: -7.849413871765137
    4. '(
' → logprob: -8.599413871765137
    5. '()
' → logprob: -8.724413871765137
    6. '()

' → logprob: -10.474413871765137
    7. 'a' → logprob: -10.599413871765137
    8. ')' → logprob: -10.849413871765137
    9. '.' → logprob: -10.849413871765137
    10. '#' → logprob: -11.224413871765137

Token 10: ' True' (ID: 6432)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0014905771240592003
    2. ' True' → logprob: -6.876490592956543
    3. '  ' → logprob: -7.876490592956543
    4. ' (' → logprob: -10.126490592956543
    5. ' not' → logprob: -11.751490592956543
    6. ' )' → logprob: -11.876490592956543
    7. '(' → logprob: -12.501490592956543
    8. '    ' → logprob: -12.501490592956543
    9. ' i' → logprob: -13.501490592956543
    10. 'True' → logprob: -13.501490592956543

Token 11: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0006746663711965084
    2. '():' → logprob: -7.625674724578857
    3. ' :' → logprob: -8.8756742477417
    4. ':**' → logprob: -10.6256742477417
    5. '):' → logprob: -12.2506742477417
    6. ':
' → logprob: -12.7506742477417
    7. '(:' → logprob: -13.0006742477417
    8. ':return' → logprob: -13.0006742477417
    9. '':'' → logprob: -13.6256742477417
    10. ' ():' → logprob: -13.7506742477417

Token 12: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.013149288482964039
    2. '    
' → logprob: -4.888149261474609
    3. '    ' → logprob: -6.138149261474609
    4. '(' → logprob: -6.513149261474609
    5. ':' → logprob: -7.638149261474609
    6. '  
' → logprob: -8.51314926147461
    7. '():' → logprob: -8.76314926147461
    8. 'input' → logprob: -8.88814926147461
    9. ' 
' → logprob: -9.26314926147461
    10. ' (' → logprob: -9.26314926147461

Token 13: ' n' (ID: 297)
  Prédit: ' line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' line' → logprob: -0.05033494532108307
    2. 'line' → logprob: -3.550334930419922
    3. ' user' → logprob: -5.300334930419922
    4. '   ' → logprob: -5.300334930419922
    5. 'user' → logprob: -5.550334930419922
    6. 'data' → logprob: -5.675334930419922
    7. ' data' → logprob: -6.925334930419922
    8. '    ' → logprob: -7.175334930419922
    9. ' inp' → logprob: -7.425334930419922
    10. ' ' → logprob: -8.800334930419922

Token 14: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3190760314464569
    2. '=' → logprob: -1.3190760612487793
    3. ' ==' → logprob: -5.569076061248779
    4. ' ' → logprob: -6.569076061248779
    5. '==' → logprob: -8.569075584411621
    6. '=int' → logprob: -8.694075584411621
    7. ' :=' → logprob: -9.069075584411621
    8. '=input' → logprob: -10.319075584411621
    9. ':=' → logprob: -11.319075584411621
    10. ' =)' → logprob: -11.569075584411621

Token 15: ' int' (ID: 677)
  Prédit: ' input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.6114721298217773
    2. 'input' → logprob: -1.3614721298217773
    3. ' int' → logprob: -2.2364721298217773
    4. 'int' → logprob: -2.3614721298217773
    5. '=input' → logprob: -10.986472129821777
    6. '=int' → logprob: -11.236472129821777
    7. ' ' → logprob: -12.111472129821777
    8. '   ' → logprob: -12.861472129821777
    9. '(input' → logprob: -13.236472129821777
    10. 'n' → logprob: -13.736472129821777

Token 16: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.005301942583173513
    2. '(' → logprob: -5.2553019523620605
    3. 'input' → logprob: -9.630301475524902
    4. ' (' → logprob: -13.505301475524902
    5. '(in' → logprob: -15.380301475524902
    6. '(
' → logprob: -15.380301475524902
    7. ' input' → logprob: -15.630301475524902
    8. '()' → logprob: -15.880301475524902
    9. '=input' → logprob: -16.50530242919922
    10. ',input' → logprob: -17.00530242919922

Token 17: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.0019006747752428055
    2. '()))' → logprob: -7.126900672912598
    3. '()' → logprob: -7.251900672912598
    4. ')' → logprob: -8.001900672912598
    5. '().' → logprob: -10.626900672912598
    6. ' ())' → logprob: -11.001900672912598
    7. '(' → logprob: -12.501900672912598
    8. '))' → logprob: -12.626900672912598
    9. '())
' → logprob: -13.001900672912598
    10. '()),' → logprob: -15.251900672912598

Token 18: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.02636021375656128
    2. '    
' → logprob: -4.651360034942627
    3. '<|end|>' → logprob: -5.026360034942627
    4. ' if' → logprob: -5.901360034942627
    5. '\n' → logprob: -6.401360034942627
    6. '    ' → logprob: -6.526360034942627
    7. '
' → logprob: -6.776360034942627
    8. ' ' → logprob: -7.026360034942627
    9. ')' → logprob: -7.651360034942627
    10. '  
' → logprob: -7.776360034942627

Token 19: ' if' (ID: 538)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.9660005569458008
    2. ' if' → logprob: -1.2160005569458008
    3. '    ' → logprob: -1.7160005569458008
    4. '   ' → logprob: -2.341000556945801
    5. '<|end|>' → logprob: -4.091000556945801
    6. 'if' (adapté à ' if') → logprob: -4.841000556945801
    7. '  ' → logprob: -4.966000556945801
    8. '\n' → logprob: -5.591000556945801
    9. ' 
' → logprob: -5.716000556945801
    10. '    
' → logprob: -6.091000556945801

Token 20: ' n' (ID: 297)
  Prédit: ' n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' n' → logprob: -0.009419816546142101
    2. ' not' → logprob: -4.759419918060303
    3. 'n' → logprob: -7.134419918060303
    4. 'not' → logprob: -12.009419441223145
    5. ' ' → logprob: -14.009419441223145
    6. '	n' → logprob: -14.509419441223145
    7. ' ' → logprob: -14.884419441223145
    8. ' н' → logprob: -18.38442039489746
    9. '   ' → logprob: -18.75942039489746
    10. '	not' → logprob: -18.88442039489746

Token 21: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.004164471756666899
    2. '==' → logprob: -5.504164695739746
    3. ' <=' → logprob: -9.754164695739746
    4. ' <' → logprob: -10.754164695739746
    5. ' ' → logprob: -13.379164695739746
    6. '   ' → logprob: -13.754164695739746
    7. '<=' → logprob: -14.004164695739746
    8. ')' → logprob: -14.254164695739746
    9. '<' → logprob: -14.379164695739746
    10. '=' → logprob: -14.379164695739746

Token 22: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.048587825149297714
    2. '0' → logprob: -3.0485877990722656
    3. ' ' → logprob: -14.798587799072266
    4. ' EOF' → logprob: -17.611087799072266
    5. '  ' → logprob: -17.673587799072266
    6. ' a' → logprob: -18.048587799072266
    7. '_' → logprob: -18.673587799072266
    8. '```' → logprob: -18.861087799072266
    9. 'EOF' → logprob: -18.923587799072266
    10. '=' → logprob: -18.986087799072266

Token 23: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00043138445471413434
    2. ' ' → logprob: -7.750431537628174
    3. '-' → logprob: -15.000431060791016
    4. '```' → logprob: -16.375431060791016
    5. '1' → logprob: -17.000431060791016
    6. '   ' → logprob: -17.687931060791016
    7. '  ' → logprob: -17.687931060791016
    8. ''' → logprob: -17.750431060791016
    9. '42' → logprob: -17.937931060791016
    10. ' -' → logprob: -17.937931060791016

Token 24: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0001499060745118186
    2. ':
' → logprob: -8.875149726867676
    3. '   ' → logprob: -12.125149726867676
    4. ' :' → logprob: -13.375149726867676
    5. ':return' → logprob: -13.875149726867676
    6. '	break' → logprob: -14.125149726867676
    7. ' break' → logprob: -14.500149726867676
    8. '       ' → logprob: -15.000149726867676
    9. '.' → logprob: -16.250150680541992
    10. '<|end|>' → logprob: -16.375150680541992

Token 25: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006833644583821297
    2. '   ' → logprob: -7.500683307647705
    3. ' break' → logprob: -9.500683784484863
    4. '	break' → logprob: -11.375683784484863
    5. '\n' → logprob: -11.375683784484863
    6. '    ' → logprob: -11.500683784484863
    7. '      ' → logprob: -12.375683784484863
    8. 'break' → logprob: -12.500683784484863
    9. '     ' → logprob: -12.625683784484863
    10. '<|end|>' → logprob: -13.000683784484863

Token 26: ' break' (ID: 2338)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09665568917989731
    2. ' break' → logprob: -2.4716556072235107
    3. 'break' (adapté à ' break') → logprob: -5.72165584564209
    4. '	break' → logprob: -6.22165584564209
    5. '   ' → logprob: -6.22165584564209
    6. '\n' → logprob: -7.97165584564209
    7. '\t' → logprob: -10.59665584564209
    8. '	' → logprob: -11.59665584564209
    9. '    ' → logprob: -11.84665584564209
    10. '_break' → logprob: -11.97165584564209

Token 27: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.04023604840040207
    2. '    
' → logprob: -4.040235996246338
    3. '\n' → logprob: -4.790235996246338
    4. '<|end|>' → logprob: -4.915235996246338
    5. ')' → logprob: -6.165235996246338
    6. '\' → logprob: -7.165235996246338
    7. '```' → logprob: -7.790235996246338
    8. '
' → logprob: -7.790235996246338
    9. '    ' → logprob: -7.915235996246338
    10. '  ' → logprob: -7.915235996246338

Token 28: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.007839066907763481
    2. '    
' → logprob: -5.007839202880859
    3. '<|end|>' → logprob: -7.757839202880859
    4. 'print' → logprob: -8.50783920288086
    5. '[' → logprob: -9.13283920288086
    6. '    ' → logprob: -9.50783920288086
    7. '```' → logprob: -9.50783920288086
    8. ')' → logprob: -9.88283920288086
    9. '\n' → logprob: -10.25783920288086
    10. '\' → logprob: -10.75783920288086

Token 29: ' stones' (ID: 38940)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5837270617485046
    2. ' ' → logprob: -0.9587270617485046
    3. '    ' → logprob: -3.7087271213531494
    4. 'sum' → logprob: -4.58372688293457
    5. 's' → logprob: -5.58372688293457
    6. '    
' → logprob: -5.83372688293457
    7. '  ' → logprob: -5.95872688293457
    8. ' sum' → logprob: -6.33372688293457
    9. '[' → logprob: -6.58372688293457
    10. 'result' → logprob: -6.83372688293457

Token 30: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.00772895710542798
    2. '=' → logprob: -5.0077290534973145
    3. '.' → logprob: -7.7577290534973145
    4. '[' → logprob: -8.132728576660156
    5. '_' → logprob: -9.132728576660156
    6. '.append' → logprob: -10.132728576660156
    7. '[:]' → logprob: -10.382728576660156
    8. ' ' → logprob: -10.632728576660156
    9. ',' → logprob: -11.632728576660156
    10. ')' → logprob: -11.632728576660156

Token 31: ' [' (ID: 723)
  Prédit: 'list'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'list' → logprob: -0.10109886527061462
    2. ' list' → logprob: -2.3510987758636475
    3. '[list' → logprob: -7.476099014282227
    4. '[' → logprob: -8.226099014282227
    5. '[]' → logprob: -10.351099014282227
    6. ' [' → logprob: -10.976099014282227
    7. '[input' → logprob: -12.226099014282227
    8. 'input' → logprob: -13.601099014282227
    9. ' []' → logprob: -14.601099014282227
    10. '=list' → logprob: -14.851099014282227

Token 32: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.06596744805574417
    2. ' int' → logprob: -2.815967559814453
    3. 'list' → logprob: -5.940967559814453
    4. '0' → logprob: -7.065967559814453
    5. ' list' → logprob: -8.440967559814453
    6. '*' → logprob: -9.690967559814453
    7. ']int' → logprob: -9.690967559814453
    8. ']' → logprob: -9.815967559814453
    9. '   ' → logprob: -10.815967559814453
    10. 'input' → logprob: -11.190967559814453

Token 33: '(input' (ID: 10054)
  Prédit: '(input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.014310291036963463
    2. '(' → logprob: -4.264310359954834
    3. '(x' → logprob: -9.014309883117676
    4. '()' → logprob: -11.639309883117676
    5. '(i' → logprob: -11.889309883117676
    6. 'input' → logprob: -12.264309883117676
    7. '(
' → logprob: -13.764309883117676
    8. ')' → logprob: -14.264309883117676
    9. ' (' → logprob: -14.389309883117676
    10. ']' → logprob: -14.514309883117676

Token 34: '())' (ID: 3516)
  Prédit: '())'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -7.457669562427327e-05
    2. '()' → logprob: -9.87507438659668
    3. '()]' → logprob: -11.25007438659668
    4. '())
' → logprob: -12.62507438659668
    5. '().' → logprob: -12.75007438659668
    6. '()),' → logprob: -13.62507438659668
    7. ' ())' → logprob: -13.75007438659668
    8. '()))' → logprob: -14.25007438659668
    9. ')' → logprob: -15.37507438659668
    10. '()
' → logprob: -15.50007438659668

Token 35: ' for' (ID: 395)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6854129433631897
    2. '()' → logprob: -0.8104129433631897
    3. ' for' → logprob: -3.685412883758545
    4. 'for' → logprob: -3.810412883758545
    5. '(' → logprob: -6.685412883758545
    6. ')]' → logprob: -7.185412883758545
    7. '())' → logprob: -7.310412883758545
    8. '   ' → logprob: -7.560412883758545
    9. '()]' → logprob: -8.435413360595703
    10. ']' → logprob: -8.435413360595703

Token 36: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.002773609245195985
    2. '_' → logprob: -6.877773761749268
    3. ' _' → logprob: -7.002773761749268
    4. 'range' → logprob: -7.252773761749268
    5. ' ' → logprob: -9.62777328491211
    6. '	range' → logprob: -10.75277328491211
    7. '_range' → logprob: -11.00277328491211
    8. '(range' → logprob: -11.25277328491211
    9. ' xrange' → logprob: -12.87777328491211
    10. ' i' → logprob: -13.75277328491211

Token 37: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.7868067622184753
    2. 'range' → logprob: -1.2868068218231201
    3. 'in' → logprob: -1.4118068218231201
    4. ' range' → logprob: -3.78680682182312
    5. ' ' → logprob: -6.411806583404541
    6. '_' → logprob: -8.7868070602417
    7. '  ' → logprob: -8.7868070602417
    8. 'ran' → logprob: -10.1618070602417
    9. '	range' → logprob: -10.5368070602417
    10. 'n' → logprob: -10.7868070602417

Token 38: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00023333763238042593
    2. ' range' → logprob: -8.37523365020752
    3. '(range' → logprob: -14.37523365020752
    4. ')' → logprob: -14.62523365020752
    5. '   ' → logprob: -14.75023365020752
    6. ' ' → logprob: -15.12523365020752
    7. ']' → logprob: -15.50023365020752
    8. '  ' → logprob: -15.62523365020752
    9. 'rang' → logprob: -15.75023365020752
    10. 'r' → logprob: -16.250232696533203

Token 39: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0005535095697268844
    2. '(' → logprob: -7.500553607940674
    3. ' (' → logprob: -15.000553131103516
    4. 'n' → logprob: -16.125553131103516
    5. '(
' → logprob: -17.875553131103516
    6. ' n' → logprob: -18.125553131103516
    7. '(s' → logprob: -19.500553131103516
    8. ')n' → logprob: -19.500553131103516
    9. '((' → logprob: -19.875553131103516
    10. '(N' → logprob: -19.875553131103516

Token 40: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.00012928384239785373
    2. ')' → logprob: -9.125129699707031
    3. ']' → logprob: -11.625129699707031
    4. ' )' → logprob: -12.125129699707031
    5. ')]
' → logprob: -13.250129699707031
    6. '   ' → logprob: -13.375129699707031
    7. '))' → logprob: -14.875129699707031
    8. ')}' → logprob: -15.000129699707031
    9. '')]' → logprob: -15.250129699707031
    10. ')])' → logprob: -15.250129699707031

Token 41: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00886711198836565
    2. '    
' → logprob: -5.383867263793945
    3. '<|end|>' → logprob: -6.508867263793945
    4. '    ' → logprob: -7.133867263793945
    5. '
' → logprob: -7.258867263793945
    6. '[' → logprob: -8.008867263793945
    7. ' ' → logprob: -8.883867263793945
    8. ' 
' → logprob: -9.633867263793945
    9. ')' → logprob: -9.633867263793945
    10. ' stones' → logprob: -9.758867263793945

Token 42: ' stack' (ID: 10825)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.7061667442321777
    2. 'dp' → logprob: -1.7061667442321777
    3. 'stones' → logprob: -1.7061667442321777
    4. ' stones' → logprob: -2.0811667442321777
    5. 'sum' → logprob: -2.3311667442321777
    6. ' dp' → logprob: -2.9561667442321777
    7. 'diff' → logprob: -3.2061667442321777
    8. 's' → logprob: -3.9561667442321777
    9. 'm' → logprob: -4.081166744232178
    10. 'count' → logprob: -4.331166744232178

Token 43: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.026431504637002945
    2. '=' → logprob: -3.6514315605163574
    3. '=[]' → logprob: -9.0264310836792
    4. '.append' → logprob: -12.1514310836792
    5. '.' → logprob: -12.9014310836792
    6. ' ' → logprob: -13.5264310836792
    7. '=[]
' → logprob: -14.9014310836792
    8. '[:]' → logprob: -15.5264310836792
    9. '[]' → logprob: -15.6514310836792
    10. '[' → logprob: -15.7764310836792

Token 44: ' []' (ID: 6126)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.012225063517689705
    2. ' []' → logprob: -4.512225151062012
    3. '[' → logprob: -6.762225151062012
    4. ' [' → logprob: -11.262225151062012
    5. '[]}' → logprob: -12.762225151062012
    6. '[s' → logprob: -13.387225151062012
    7. '[]>' → logprob: -13.762225151062012
    8. '[]
' → logprob: -14.387225151062012
    9. '[])' → logprob: -15.637225151062012
    10. '[-' → logprob: -16.012224197387695

Token 45: ' ' (ID: 220)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.6405190825462341
    2. '
' → logprob: -1.640519142150879
    3. ' for' → logprob: -1.765519142150879
    4. '    
' → logprob: -3.265519142150879
    5. 'for' → logprob: -3.390519142150879
    6. ' 
' → logprob: -3.765519142150879
    7. '  
' → logprob: -5.765519142150879
    8. '<|end|>' → logprob: -5.765519142150879
    9. '   
' → logprob: -6.015519142150879
    10. ':' → logprob: -7.015519142150879

Token 46: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.07548563927412033
    2. ' for' → logprob: -3.0754857063293457
    3. '   ' → logprob: -3.8254857063293457
    4. '    
' → logprob: -6.450485706329346
    5. 'if' → logprob: -7.200485706329346
    6. 'max' → logprob: -7.700485706329346
    7. 'valid' → logprob: -8.575485229492188
    8. ')' → logprob: -8.700485229492188
    9. '
' → logprob: -8.700485229492188
    10. ' ' → logprob: -8.825485229492188

Token 47: ' (' (ID: 350)
  Prédit: ' stones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stones' → logprob: -1.4559749364852905
    2. '0' → logprob: -1.7059749364852905
    3. '[]' → logprob: -1.7059749364852905
    4. ' ' → logprob: -2.33097505569458
    5. '(' → logprob: -2.83097505569458
    6. ')' → logprob: -3.20597505569458
    7. 'stones' → logprob: -3.95597505569458
    8. ' []' → logprob: -4.08097505569458
    9. '[' → logprob: -4.20597505569458
    10. 'stack' → logprob: -4.20597505569458

Token 48: 'color' (ID: 4991)
  Prédit: 'height'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'height' → logprob: -0.8241543769836426
    2. 'stone' → logprob: -1.8241543769836426
    3. 'weight' → logprob: -2.8241543769836426
    4. ')' → logprob: -2.9491543769836426
    5. 'value' → logprob: -3.0741543769836426
    6. 'number' → logprob: -3.1991543769836426
    7. 'index' → logprob: -3.3241543769836426
    8. ' stone' → logprob: -3.4491543769836426
    9. 'size' → logprob: -3.5741543769836426
    10. 'length' → logprob: -4.074154376983643

Token 49: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00012011249782517552
    2. ' ,' → logprob: -9.250120162963867
    3. ')' → logprob: -11.750120162963867
    4. ',size' → logprob: -12.500120162963867
    5. ',)' → logprob: -12.875120162963867
    6. ',color' → logprob: -13.000120162963867
    7. ',length' → logprob: -13.625120162963867
    8. ',count' → logprob: -13.625120162963867
    9. ',value' → logprob: -14.125120162963867
    10. ' ' → logprob: -14.125120162963867

Token 50: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6561117768287659
    2. ' count' → logprob: -0.7811117768287659
    3. ' length' → logprob: -4.281111717224121
    4. 'length' → logprob: -4.906111717224121
    5. ' ' → logprob: -7.531111717224121
    6. '1' → logprob: -8.281111717224121
    7. 'height' → logprob: -8.531111717224121
    8. ')' → logprob: -9.031111717224121
    9. ' size' → logprob: -9.031111717224121
    10. ' height' → logprob: -9.156111717224121

Token 51: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -9.849109119386412e-06
    2. ')
' → logprob: -12.500009536743164
    3. ' )' → logprob: -12.500009536743164
    4. ',' → logprob: -13.750009536743164
    5. '   ' → logprob: -14.625009536743164
    6. '),' → logprob: -15.875009536743164
    7. ')

' → logprob: -15.875009536743164
    8. ']' → logprob: -16.000009536743164
    9. ' ' → logprob: -16.375009536743164
    10. '）' → logprob: -16.625009536743164

Token 52: '   ' (ID: 271)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5054858326911926
    2. 'for' → logprob: -1.1304857730865479
    3. '   ' → logprob: -2.630485773086548
    4. '    
' → logprob: -7.005486011505127
    5. 'result' → logprob: -8.380485534667969
    6. ' 
' → logprob: -8.880485534667969
    7. '
' → logprob: -8.880485534667969
    8. '<|end|>' → logprob: -9.255485534667969
    9. '```' → logprob: -9.880485534667969
    10. ' result' → logprob: -10.005485534667969

Token 53: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.39976513385772705
    2. ' for' → logprob: -1.149765133857727
    3. '   ' → logprob: -5.2747650146484375
    4. 'result' → logprob: -6.0247650146484375
    5. 'valid' → logprob: -6.3997650146484375
    6. 'possible' → logprob: -6.6497650146484375
    7. 'answer' → logprob: -7.7747650146484375
    8. ' valid' → logprob: -7.7747650146484375
    9. 'count' → logprob: -8.774765014648438
    10. 'is' → logprob: -9.024765014648438

Token 54: ' i' (ID: 575)
  Prédit: ' stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' stone' → logprob: -0.30327096581459045
    2. 'stone' → logprob: -1.428270936012268
    3. 'color' → logprob: -4.5532708168029785
    4. ' color' → logprob: -5.1782708168029785
    5. 'c' → logprob: -5.8032708168029785
    6. 's' → logprob: -6.5532708168029785
    7. ' s' → logprob: -7.0532708168029785
    8. ' c' → logprob: -8.303271293640137
    9. 'col' → logprob: -10.053271293640137
    10. 'st' → logprob: -11.053271293640137

Token 55: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0855030044913292
    2. ',' → logprob: -3.210503101348877
    3. 'in' → logprob: -3.210503101348877
    4. ' ,' → logprob: -7.585503101348877
    5. ' ' → logprob: -7.710503101348877
    6. 'n' → logprob: -8.585502624511719
    7. '   ' → logprob: -10.585502624511719
    8. 's' → logprob: -11.210502624511719
    9. '  ' → logprob: -11.335502624511719
    10. '_in' → logprob: -11.460502624511719

Token 56: ' c' (ID: 274)
  Prédit: 'stone'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stone' → logprob: -0.1947595775127411
    2. 'color' → logprob: -2.1947596073150635
    3. ' stone' → logprob: -3.3197596073150635
    4. 's' → logprob: -4.069759368896484
    5. 'c' → logprob: -4.694759368896484
    6. ' color' → logprob: -6.569759368896484
    7. 'v' → logprob: -7.194759368896484
    8. ' s' → logprob: -8.319759368896484
    9. 'st' → logprob: -8.819759368896484
    10. 'num' → logprob: -8.819759368896484

Token 57: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.09047092497348785
    2. 'in' → logprob: -2.465471029281616
    3. 'n' → logprob: -7.340470790863037
    4. 's' → logprob: -7.590470790863037
    5. ' ' → logprob: -8.965471267700195
    6. ',' → logprob: -9.465471267700195
    7. '   ' → logprob: -10.840471267700195
    8. 'i' → logprob: -10.840471267700195
    9. '	in' → logprob: -10.840471267700195
    10. 'on' → logprob: -10.965471267700195

Token 58: ' enumerate' (ID: 29671)
  Prédit: 'stones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stones' → logprob: -0.8451884388923645
    2. ' enumerate' → logprob: -1.4701883792877197
    3. ' stones' → logprob: -1.4701883792877197
    4. 'enumer' → logprob: -2.2201883792877197
    5. ' range' → logprob: -7.845188617706299
    6. 'st' → logprob: -7.970188617706299
    7. ' ' → logprob: -8.47018814086914
    8. 'range' → logprob: -8.53268814086914
    9. 's' → logprob: -8.84518814086914
    10. 'ston' → logprob: -8.90768814086914

Token 59: '(st' (ID: 4065)
  Prédit: 'stones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stones' → logprob: -0.3171648681163788
    2. '(st' → logprob: -1.3171648979187012
    3. 'st' → logprob: -5.817164897918701
    4. ' stones' → logprob: -7.317164897918701
    5. 'ston' → logprob: -9.067164421081543
    6. 'stone' → logprob: -10.067164421081543
    7. ' (' → logprob: -10.192164421081543
    8. '	st' → logprob: -10.317164421081543
    9. ')' → logprob: -11.692164421081543
    10. ' st' → logprob: -11.942164421081543

Token 60: 'ones' (ID: 3617)
  Prédit: 'ones'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ones' → logprob: -0.00024192029377445579
    2. 'stones' → logprob: -8.750242233276367
    3. '[' → logprob: -11.375242233276367
    4. 'es' → logprob: -11.500242233276367
    5. 'one' → logprob: -11.625242233276367
    6. ')' → logprob: -12.125242233276367
    7. 'tones' → logprob: -12.250242233276367
    8. '>' → logprob: -12.250242233276367
    9. '   ' → logprob: -12.375242233276367
    10. '```' → logprob: -12.500242233276367

Token 61: ',' (ID: 11)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.004125419072806835
    2. ':' → logprob: -5.629125595092773
    3. '):
' → logprob: -8.254125595092773
    4. ' ):' → logprob: -8.504125595092773
    5. ')' → logprob: -10.254125595092773
    6. '   ' → logprob: -11.379125595092773
    7. ',' → logprob: -12.004125595092773
    8. ' :' → logprob: -12.879125595092773
    9. ']:' → logprob: -13.129125595092773
    10. '():' → logprob: -13.629125595092773

Token 62: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3050561845302582
    2. ' ' → logprob: -2.055056095123291
    3. 'start' → logprob: -2.180056095123291
    4. ' start' → logprob: -5.055056095123291
    5. 'lambda' → logprob: -5.555056095123291
    6. '):' → logprob: -6.055056095123291
    7. 'c' → logprob: -6.180056095123291
    8. 'stones' → logprob: -6.305056095123291
    9. '   ' → logprob: -6.680056095123291
    10. '0' → logprob: -6.680056095123291

Token 63: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.09339294582605362
    2. 'start' → logprob: -2.468392848968506
    3. ' ' → logprob: -5.968392848968506
    4. '0' → logprob: -7.093392848968506
    5. ' start' → logprob: -7.218392848968506
    6. 'c' → logprob: -8.218393325805664
    7. ')' → logprob: -10.593393325805664
    8. '):' → logprob: -11.593393325805664
    9. 'range' → logprob: -12.843393325805664
    10. 'key' → logprob: -12.968393325805664

Token 64: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.007516834419220686
    2. ':' → logprob: -5.007516860961914
    3. '):
' → logprob: -7.382516860961914
    4. ' ):' → logprob: -9.507516860961914
    5. '   ' → logprob: -9.632516860961914
    6. ')' → logprob: -10.632516860961914
    7. ',' → logprob: -12.007516860961914
    8. '       ' → logprob: -13.132516860961914
    9. ' :' → logprob: -13.507516860961914
    10. '):
' → logprob: -13.757516860961914

Token 65: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.20947225391864777
    2. '   ' → logprob: -2.084472179412842
    3. '    ' → logprob: -3.084472179412842
    4. ' if' → logprob: -4.334472179412842
    5. ' ' → logprob: -6.334472179412842
    6. '<|end|>' → logprob: -6.709472179412842
    7. 'if' → logprob: -6.834472179412842
    8. '     ' → logprob: -8.20947265625
    9. '    
' → logprob: -8.70947265625
    10. '      ' → logprob: -8.95947265625

Token 66: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.2264692783355713
    2. ' if' → logprob: -1.6014692783355713
    3. '       ' → logprob: -7.726469039916992
    4. '   ' → logprob: -8.101469039916992
    5. 'while' → logprob: -8.851469039916992
    6. ' while' → logprob: -10.101469039916992
    7. 'count' → logprob: -10.226469039916992
    8. 'If' → logprob: -10.726469039916992
    9. '    ' → logprob: -10.976469039916992
    10. ' ' → logprob: -11.351469039916992

Token 67: ' i' (ID: 575)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.28441405296325684
    2. 'not' → logprob: -1.6594140529632568
    3. ' stack' → logprob: -3.534414052963257
    4. 'stack' → logprob: -3.659414052963257
    5. 'len' → logprob: -6.534414291381836
    6. ' len' → logprob: -7.159414291381836
    7. ' ' → logprob: -10.159414291381836
    8. '	not' → logprob: -11.034414291381836
    9. '(stack' → logprob: -11.159414291381836
    10. 'i' → logprob: -11.409414291381836

Token 68: ' %' (ID: 1851)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.4208885729312897
    2. '==' → logprob: -1.5458885431289673
    3. ' >' → logprob: -2.420888662338257
    4. '>' → logprob: -3.670888662338257
    5. ' %' → logprob: -5.295888423919678
    6. '%' → logprob: -5.420888423919678
    7. ' ' → logprob: -6.295888423919678
    8. ' <=' → logprob: -6.920888423919678
    9. '=' → logprob: -7.545888423919678
    10. '-' → logprob: -7.545888423919678

Token 69: ' ' (ID: 220)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.060870274901390076
    2. '3' → logprob: -2.9358701705932617
    3. ' ' → logprob: -5.310870170593262
    4. '200' → logprob: -8.060870170593262
    5. '64' → logprob: -8.810870170593262
    6. '100' → logprob: -8.935870170593262
    7. '10' → logprob: -9.310870170593262
    8. 'c' → logprob: -9.810870170593262
    9. 'm' → logprob: -9.935870170593262
    10. '5' → logprob: -10.185870170593262

Token 70: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.005272653419524431
    2. '3' → logprob: -5.50527286529541
    3. '100' → logprob: -8.00527286529541
    4. '200' → logprob: -8.38027286529541
    5. '10' → logprob: -8.63027286529541
    6. '5' → logprob: -9.25527286529541
    7. ' ' → logprob: -9.50527286529541
    8. 'm' → logprob: -10.13027286529541
    9. '4' → logprob: -10.50527286529541
    10. '20' → logprob: -10.63027286529541

Token 71: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.03389475494623184
    2. '==' → logprob: -3.4088947772979736
    3. ' !=' → logprob: -8.783894538879395
    4. ' ' → logprob: -10.408894538879395
    5. ' =' → logprob: -10.783894538879395
    6. ':' → logprob: -11.033894538879395
    7. '=' → logprob: -11.283894538879395
    8. '0' → logprob: -11.658894538879395
    9. '!=' → logprob: -12.783894538879395
    10. '1' → logprob: -14.033894538879395

Token 72: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7020524740219116
    2. '1' → logprob: -0.8270524740219116
    3. ' ' → logprob: -2.702052593231201
    4. '2' → logprob: -11.264552116394043
    5. '==' → logprob: -12.952052116394043
    6. '   ' → logprob: -13.389552116394043
    7. '  ' → logprob: -13.452052116394043
    8. 'c' → logprob: -13.452052116394043
    9. '```' → logprob: -13.764552116394043
    10. ' ==' → logprob: -13.952052116394043

Token 73: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.18013973534107208
    2. '1' → logprob: -1.8051397800445557
    3. ' ' → logprob: -8.430139541625977
    4. '2' → logprob: -8.680139541625977
    5. '```' → logprob: -14.117639541625977
    6. '3' → logprob: -14.180139541625977
    7. 'c' → logprob: -14.367639541625977
    8. '  ' → logprob: -14.492639541625977
    9. '   ' → logprob: -14.617639541625977
    10. 's' → logprob: -15.492639541625977

Token 74: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.09759551286697388
    2. ' and' → logprob: -2.472595453262329
    3. ' :' → logprob: -5.222595691680908
    4. 'and' → logprob: -6.472595691680908
    5. ':
' → logprob: -7.347595691680908
    6. ' or' → logprob: -7.722595691680908
    7. ' ==' → logprob: -8.09759521484375
    8. '==' → logprob: -9.22259521484375
    9. ' ' → logprob: -9.84759521484375
    10. '   ' → logprob: -10.22259521484375

Token 75: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3896028697490692
    2. ' and' → logprob: -1.6396028995513916
    3. '       ' → logprob: -2.2646028995513916
    4. ':
' → logprob: -4.8896026611328125
    5. '           ' → logprob: -5.1396026611328125
    6. ' :' → logprob: -5.3896026611328125
    7. 'and' → logprob: -6.5146026611328125
    8. ' or' → logprob: -6.8896026611328125
    9. '   ' → logprob: -7.0146026611328125
    10. '        ' → logprob: -7.2646026611328125

Token 76: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8300832509994507
    2. ' if' → logprob: -1.4550832509994507
    3. 'stack' → logprob: -1.5800832509994507
    4. '       ' → logprob: -2.5800833702087402
    5. ' stack' → logprob: -3.7050833702087402
    6. '           ' → logprob: -4.20508337020874
    7. '   ' → logprob: -5.33008337020874
    8. '#' (adapté à ' #') → logprob: -7.08008337020874
    9. 'while' → logprob: -7.33008337020874
    10. 'continue' → logprob: -7.58008337020874

Token 77: ' odd' (ID: 14210)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.7596088647842407
    2. ' if' → logprob: -0.7596088647842407
    3. 'stack' → logprob: -3.384608745574951
    4. ' stack' → logprob: -3.884608745574951
    5. '           ' → logprob: -5.759608745574951
    6. '       ' → logprob: -6.384608745574951
    7. ' while' → logprob: -6.759608745574951
    8. 'while' → logprob: -6.884608745574951
    9. 'continue' → logprob: -7.384608745574951
    10. ' continue' → logprob: -7.884608745574951

Token 78: ' i' (ID: 575)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3974851965904236
    2. 'if' → logprob: -1.2724852561950684
    3. '       ' → logprob: -3.8974852561950684
    4. '           ' → logprob: -4.647485256195068
    5. 'color' → logprob: -5.022485256195068
    6. 'stack' → logprob: -6.022485256195068
    7. 'count' → logprob: -6.397485256195068
    8. ',' → logprob: -6.772485256195068
    9. '   ' → logprob: -6.772485256195068
    10. '<|end|>' → logprob: -6.772485256195068

Token 79: ':' (ID: 25)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5062921047210693
    2. ' if' → logprob: -1.7562921047210693
    3. '       ' → logprob: -2.1312921047210693
    4. ' and' → logprob: -3.3812921047210693
    5. ':' → logprob: -3.7562921047210693
    6. 'if' → logprob: -4.256292343139648
    7. ',' → logprob: -4.631292343139648
    8. '<|end|>' → logprob: -5.381292343139648
    9. '        ' → logprob: -5.506292343139648
    10. '<|end|>' → logprob: -6.006292343139648

Token 80: ' just' (ID: 1327)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5511534214019775
    2. 'if' → logprob: -0.9261534214019775
    3. '           ' → logprob: -3.9261534214019775
    4. '       ' → logprob: -5.301153182983398
    5. '#' → logprob: -7.051153182983398
    6. 'stack' → logprob: -7.301153182983398
    7. ' #' → logprob: -7.801153182983398
    8. '   ' → logprob: -8.301153182983398
    9. ' stack' → logprob: -8.426153182983398
    10. 'while' → logprob: -9.176153182983398

Token 81: ' add' (ID: 1147)
  Prédit: 'append'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'append' → logprob: -0.4149695634841919
    2. 'stack' → logprob: -1.914969563484192
    3. ' append' → logprob: -2.2899694442749023
    4. ' stack' → logprob: -3.1649694442749023
    5. '   ' → logprob: -3.9149694442749023
    6. 'push' → logprob: -4.039969444274902
    7. ' push' → logprob: -5.414969444274902
    8. ' add' → logprob: -6.289969444274902
    9. 'continue' → logprob: -6.789969444274902
    10. 'add' → logprob: -7.039969444274902

Token 82: ' new' (ID: 620)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.1365898847579956
    2. ' (' → logprob: -1.8865898847579956
    3. '           ' → logprob: -1.8865898847579956
    4. '(stack' → logprob: -1.8865898847579956
    5. ' stack' → logprob: -2.511590003967285
    6. 'stack' → logprob: -2.636590003967285
    7. ',' → logprob: -4.011590003967285
    8. '               ' → logprob: -4.136590003967285
    9. '(' → logprob: -4.886590003967285
    10. 'if' → logprob: -4.886590003967285

Token 83: ' stone' (ID: 14352)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0426265001296997
    2. 'stack' → logprob: -1.4176265001296997
    3. ' stack' → logprob: -1.9176265001296997
    4. '(stack' → logprob: -2.41762638092041
    5. ',' → logprob: -2.54262638092041
    6. ' if' → logprob: -3.41762638092041
    7. '               ' → logprob: -4.41762638092041
    8. '       ' → logprob: -4.66762638092041
    9. ' or' → logprob: -5.04262638092041
    10. ' (' → logprob: -5.04262638092041

Token 84: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.017052341252565384
    2. '           ' → logprob: -5.392052173614502
    3. '<|end|>' → logprob: -5.392052173614502
    4. ',' → logprob: -5.517052173614502
    5. '(stack' → logprob: -7.142052173614502
    6. '(' → logprob: -7.767052173614502
    7. '   ' → logprob: -8.01705265045166
    8. ')' → logprob: -8.14205265045166
    9. '        ' → logprob: -8.14205265045166
    10. '        
' → logprob: -8.39205265045166

Token 85: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.5232802033424377
    2. '           ' → logprob: -1.023280143737793
    3. 'stack' → logprob: -3.148280143737793
    4. '(stack' → logprob: -5.898280143737793
    5. ' stack' → logprob: -7.523280143737793
    6. ',' → logprob: -7.773280143737793
    7. '<|end|>' → logprob: -8.023280143737793
    8. '        
' → logprob: -8.148280143737793
    9. '               ' → logprob: -8.773280143737793
    10. '	stack' → logprob: -9.398280143737793

Token 86: ' if' (ID: 538)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.08413056284189224
    2. ' stack' → logprob: -2.8341305255889893
    3. '           ' → logprob: -4.209130764007568
    4. ' if' → logprob: -5.709130764007568
    5. '       ' → logprob: -5.959130764007568
    6. 'if' (adapté à ' if') → logprob: -7.209130764007568
    7. '   ' → logprob: -8.70913028717041
    8. '	stack' → logprob: -8.70913028717041
    9. '               ' → logprob: -10.83413028717041
    10. '_stack' → logprob: -11.08413028717041

Token 87: ' stack' (ID: 10825)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.6330121159553528
    2. 'not' → logprob: -1.508012056350708
    3. 'stack' → logprob: -2.008012056350708
    4. ' stack' → logprob: -2.258012056350708
    5. 'len' → logprob: -5.133012294769287
    6. ' len' → logprob: -5.883012294769287
    7. '(stack' → logprob: -10.008011817932129
    8. ' ' → logprob: -10.570511817932129
    9. '(not' → logprob: -10.695511817932129
    10. '	stack' → logprob: -11.508011817932129

Token 88: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.16027134656906128
    2. ' and' → logprob: -1.910271406173706
    3. '==' → logprob: -10.910271644592285
    4. '           ' → logprob: -11.660271644592285
    5. '	and' → logprob: -11.910271644592285
    6. ' ' → logprob: -12.660271644592285
    7. '   ' → logprob: -12.785271644592285
    8. '          ' → logprob: -13.160271644592285
    9. '```' → logprob: -14.410271644592285
    10. '  ' → logprob: -14.660271644592285

Token 89: ' stack' (ID: 10825)
  Prédit: ' stack'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.6931875348091125
    2. 'stack' → logprob: -0.6931875348091125
    3. '(stack' → logprob: -10.818187713623047
    4. '	stack' → logprob: -11.193187713623047
    5. 'c' → logprob: -13.193187713623047
    6. ' c' → logprob: -13.693187713623047
    7. '.stack' → logprob: -14.068187713623047
    8. ' ' → logprob: -14.443187713623047
    9. '_stack' → logprob: -14.818187713623047
    10. 'st' → logprob: -14.818187713623047

Token 90: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -5.967624019831419e-05
    2. ' and' → logprob: -10.125060081481934
    3. 'and' → logprob: -11.000060081481934
    4. '[' → logprob: -13.125060081481934
    5. '-' → logprob: -14.875060081481934
    6. '][-' → logprob: -15.250060081481934
    7. ' [-' → logprob: -16.000059127807617
    8. '```' → logprob: -16.125059127807617
    9. '>' → logprob: -17.500059127807617
    10. '[
' → logprob: -17.625059127807617

Token 91: '1' (ID: 16)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.7466463446617126
    2. '][' → logprob: -0.8716463446617126
    3. '1' → logprob: -3.4966464042663574
    4. '()[' → logprob: -3.7466464042663574
    5. ' [' → logprob: -3.7466464042663574
    6. ' ' → logprob: -4.121646404266357
    7. ' ][' → logprob: -5.121646404266357
    8. '0' → logprob: -5.996646404266357
    9. '   ' → logprob: -6.621646404266357
    10. ')[' → logprob: -6.996646404266357

Token 92: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.0003888470819219947
    2. ' [' → logprob: -8.375389099121094
    3. '][' → logprob: -9.000389099121094
    4. '()[' → logprob: -11.125389099121094
    5. ')[' → logprob: -11.875389099121094
    6. ' ][' → logprob: -12.750389099121094
    7. ' and' → logprob: -13.125389099121094
    8. '```' → logprob: -13.500389099121094
    9. 'and' → logprob: -14.125389099121094
    10. ''][' → logprob: -14.125389099121094

Token 93: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00011307948443572968
    2. '1' → logprob: -9.625113487243652
    3. ' ' → logprob: -10.000113487243652
    4. '
' → logprob: -15.000113487243652
    5. '   ' → logprob: -15.375113487243652
    6. '```' → logprob: -15.625113487243652
    7. '۰' → logprob: -16.312612533569336
    8. 'color' → logprob: -16.375112533569336
    9. '[' → logprob: -16.562612533569336
    10. '  ' → logprob: -16.625112533569336

Token 94: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5853181481361389
    2. '==' → logprob: -1.2103180885314941
    3. ']' → logprob: -2.710318088531494
    4. ']==' → logprob: -2.835318088531494
    5. ' ' → logprob: -4.585318088531494
    6. ')' → logprob: -4.960318088531494
    7. ' ]' → logprob: -6.960318088531494
    8. ')==' → logprob: -7.335318088531494
    9. '<|end|>' → logprob: -8.710318565368652
    10. '']==' → logprob: -8.960318565368652

Token 95: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.3887905776500702
    2. '==' → logprob: -1.1387906074523926
    3. ' !=' → logprob: -7.013790607452393
    4. ' ' → logprob: -7.638790607452393
    5. '!=' → logprob: -7.763790607452393
    6. '=' → logprob: -9.513790130615234
    7. ']==' → logprob: -12.138790130615234
    8. '[' → logprob: -12.576290130615234
    9. 'c' → logprob: -12.576290130615234
    10. ')' → logprob: -12.701290130615234

Token 96: ' c' (ID: 274)
  Prédit: ' c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' c' → logprob: -0.47410693764686584
    2. 'c' → logprob: -0.9741069078445435
    3. ' ' → logprob: -10.974106788635254
    4. ''' → logprob: -13.099106788635254
    5. ' '' → logprob: -13.599106788635254
    6. ')c' → logprob: -13.599106788635254
    7. 'color' → logprob: -13.786606788635254
    8. '<|end|>' → logprob: -14.036606788635254
    9. '(c' → logprob: -14.849106788635254
    10. '"' → logprob: -15.036606788635254

Token 97: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04375495761632919
    2. ':
' → logprob: -3.168755054473877
    3. '):
' → logprob: -8.543754577636719
    4. '               ' → logprob: -8.918754577636719
    5. '           ' → logprob: -9.168754577636719
    6. '       ' → logprob: -9.418754577636719
    7. '):' → logprob: -9.543754577636719
    8. ' and' → logprob: -10.293754577636719
    9. ' :' → logprob: -10.793754577636719
    10. ',' → logprob: -10.918754577636719

Token 98: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.47067463397979736
    2. ':
' → logprob: -1.2206746339797974
    3. ':' → logprob: -2.720674514770508
    4. '           ' → logprob: -5.345674514770508
    5. '(stack' → logprob: -6.220674514770508
    6. ',' → logprob: -6.595674514770508
    7. '[' → logprob: -6.970674514770508
    8. ' stack' → logprob: -7.095674514770508
    9. 'stack' → logprob: -7.345674514770508
    10. ' :
' → logprob: -7.345674514770508

Token 99: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.129916712641716
    2. ' stack' → logprob: -2.1299166679382324
    3. '                   ' → logprob: -6.629916667938232
    4. '(stack' → logprob: -6.879916667938232
    5. '               ' → logprob: -7.754916667938232
    6. 'count' → logprob: -9.12991714477539
    7. '	stack' → logprob: -10.00491714477539
    8. ' count' → logprob: -11.37991714477539
    9. ' (' → logprob: -11.62991714477539
    10. '           ' → logprob: -11.62991714477539

Token 100: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00011749001714633778
    2. '][-' → logprob: -9.625117301940918
    3. '=' → logprob: -10.250117301940918
    4. '[' → logprob: -12.125117301940918
    5. '-' → logprob: -12.125117301940918
    6. ' [-' → logprob: -13.250117301940918
    7. ' =' → logprob: -13.500117301940918
    8. '[:-' → logprob: -14.500117301940918
    9. '.append' → logprob: -15.000117301940918
    10. ']' → logprob: -15.250117301940918

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.953082341467962e-05
    2. ' ' → logprob: -10.375039100646973
    3. '-' → logprob: -12.500039100646973
    4. '[' → logprob: -13.875039100646973
    5. '][' → logprob: -14.125039100646973
    6. '11' → logprob: -14.250039100646973
    7. '   ' → logprob: -14.500039100646973
    8. '2' → logprob: -15.000039100646973
    9. '```' → logprob: -15.750039100646973
    10. '+' → logprob: -16.00004005432129

Token 102: ']' (ID: 60)
  Prédit: ']['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.35011348128318787
    2. ']' → logprob: -1.6001135110855103
    3. '=' → logprob: -2.8501133918762207
    4. '[' → logprob: -4.350113391876221
    5. ']=' → logprob: -4.850113391876221
    6. ']=(' → logprob: -5.225113391876221
    7. '(' → logprob: -5.600113391876221
    8. ' =' → logprob: -5.850113391876221
    9. '=(' → logprob: -6.850113391876221
    10. ' (' → logprob: -7.350113391876221

Token 103: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.041541632264852524
    2. ' =' → logprob: -3.416541576385498
    3. '=(' → logprob: -5.166541576385498
    4. '[' → logprob: -6.166541576385498
    5. ' =(' → logprob: -10.166542053222656
    6. '(' → logprob: -11.541542053222656
    7. '=[' → logprob: -11.916542053222656
    8. ' (' → logprob: -13.416542053222656
    9. '+=' → logprob: -13.541542053222656
    10. ' ' → logprob: -14.041542053222656

Token 104: ' (' (ID: 350)
  Prédit: '(stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(stack' → logprob: -0.20300033688545227
    2. '(c' → logprob: -1.7030003070831299
    3. ' (' → logprob: -6.453000545501709
    4. '(st' → logprob: -12.07800006866455
    5. '(ci' → logprob: -14.32800006866455
    6. '(chain' → logprob: -14.45300006866455
    7. '(' → logprob: -14.82800006866455
    8. ' ' → logprob: -14.95300006866455
    9. '(color' → logprob: -14.95300006866455
    10. '   ' → logprob: -15.07800006866455

Token 105: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001237133634276688
    2. ' c' → logprob: -6.751236915588379
    3. 'stack' → logprob: -9.626236915588379
    4. ' stack' → logprob: -14.501236915588379
    5. ' ' → logprob: -15.501236915588379
    6. '	c' → logprob: -16.751237869262695
    7. '   ' → logprob: -17.126237869262695
    8. ')c' → logprob: -17.626237869262695
    9. 'с' → logprob: -19.063737869262695
    10. '  ' → logprob: -19.251237869262695

Token 106: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003253335307817906
    2. ' ,' → logprob: -8.125325202941895
    3. 'stack' → logprob: -10.500325202941895
    4. '   ' → logprob: -14.375325202941895
    5. ' stack' → logprob: -14.375325202941895
    6. '(stack' → logprob: -15.750325202941895
    7. '       ' → logprob: -16.25032615661621
    8. '	stack' → logprob: -16.50032615661621
    9. ',
' → logprob: -16.62532615661621
    10. '```' → logprob: -17.00032615661621

Token 107: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.011049000546336174
    2. ' stack' → logprob: -4.511048793792725
    3. '	stack' → logprob: -14.136049270629883
    4. '(stack' → logprob: -15.386049270629883
    5. ' ' → logprob: -16.761049270629883
    6. '   ' → logprob: -17.011049270629883
    7. 'stackoverflow' → logprob: -17.011049270629883
    8. '.stack' → logprob: -17.011049270629883
    9. 'st' → logprob: -17.511049270629883
    10. '_stack' → logprob: -17.636049270629883

Token 108: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.0016004408244043589
    2. '-' → logprob: -6.50160026550293
    3. '1' → logprob: -9.25160026550293
    4. '][-' → logprob: -14.00160026550293
    5. '[' → logprob: -14.12660026550293
    6. '   ' → logprob: -15.62660026550293
    7. '−' → logprob: -16.25160026550293
    8. '2' → logprob: -16.62660026550293
    9. '```' → logprob: -17.00160026550293
    10. '#' → logprob: -17.12660026550293

Token 109: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. '11' → logprob: -13.875001907348633
    3. ' ' → logprob: -15.062501907348633
    4. '```' → logprob: -16.250001907348633
    5. '-' → logprob: -16.562501907348633
    6. '   ' → logprob: -16.687501907348633
    7. '[' → logprob: -16.875001907348633
    8. '10' → logprob: -16.937501907348633
    9. '111' → logprob: -17.000001907348633
    10. '127' → logprob: -17.125001907348633

Token 110: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001094734645448625
    2. '1' → logprob: -7.376094818115234
    3. '[' → logprob: -7.751094818115234
    4. '   ' → logprob: -11.876094818115234
    5. ' ][' → logprob: -12.001094818115234
    6. '-' → logprob: -12.126094818115234
    7. ']' → logprob: -12.251094818115234
    8. '2' → logprob: -13.001094818115234
    9. '"][' → logprob: -13.001094818115234
    10. ')[' → logprob: -13.001094818115234

Token 111: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. ' ' → logprob: -15.375000953674316
    3. '
' → logprob: -15.500000953674316
    4. '[' → logprob: -16.250001907348633
    5. '```' → logprob: -16.250001907348633
    6. '' → logprob: -16.750001907348633
    7. '   ' → logprob: -17.000001907348633
    8. '۱' → logprob: -17.500001907348633
    9. '

' → logprob: -17.687501907348633
    10. '-' → logprob: -18.000001907348633

Token 112: ']' (ID: 60)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.47407835721969604
    2. ' +' → logprob: -0.974078357219696
    3. ')' → logprob: -14.224078178405762
    4. ')+' → logprob: -15.474078178405762
    5. ' ' → logprob: -15.724078178405762
    6. ' plus' → logprob: -16.099079132080078
    7. '   ' → logprob: -16.849079132080078
    8. '()+' → logprob: -16.849079132080078
    9. ' ' → logprob: -17.349079132080078
    10. '＋' → logprob: -17.474079132080078

Token 113: ' +' (ID: 659)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.5759403109550476
    2. ' +' → logprob: -0.8259403109550476
    3. ' ' → logprob: -15.700940132141113
    4. ' ' → logprob: -16.07594108581543
    5. ' plus' → logprob: -16.20094108581543
    6. '＋' → logprob: -16.70094108581543
    7. ')' → logprob: -16.82594108581543
    8. '+c' → logprob: -16.95094108581543
    9. '()+' → logprob: -17.07594108581543
    10. ')+' → logprob: -17.20094108581543

Token 114: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00018232580623589456
    2. ' ' → logprob: -8.625182151794434
    3. '   ' → logprob: -13.000182151794434
    4. ')' → logprob: -14.750182151794434
    5. '  ' → logprob: -17.43768310546875
    6. '```' → logprob: -18.06268310546875
    7. '[' → logprob: -18.43768310546875
    8. '    ' → logprob: -18.50018310546875
    9. ' ' → logprob: -18.50018310546875
    10. '       ' → logprob: -18.56268310546875

Token 115: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.1424973713001236e-05
    2. ' ' → logprob: -10.375031471252441
    3. '   ' → logprob: -16.500030517578125
    4. ')' → logprob: -18.500030517578125
    5. '-' → logprob: -20.062530517578125
    6. '2' → logprob: -20.125030517578125
    7. '  ' → logprob: -20.250030517578125
    8. '```' → logprob: -20.500030517578125
    9. ' ' → logprob: -20.687530517578125
    10. '3' → logprob: -21.000030517578125

Token 116: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.11262538284063339
    2. ')
' → logprob: -2.7376253604888916
    3. '           ' → logprob: -3.2376253604888916
    4. '       ' → logprob: -5.987625598907471
    5. '               ' → logprob: -11.487625122070312
    6. ')

' → logprob: -12.487625122070312
    7. ')
' → logprob: -12.612625122070312
    8. ' )' → logprob: -13.112625122070312
    9. '   ' → logprob: -13.237625122070312
    10. 'else' → logprob: -14.112625122070312

Token 117: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03757177293300629
    2. '       ' → logprob: -3.787571668624878
    3. 'else' → logprob: -4.287571907043457
    4. ' else' → logprob: -7.662571907043457
    5. '```' → logprob: -11.537571907043457
    6. '<|end|>' → logprob: -13.412571907043457
    7. '               ' → logprob: -13.662571907043457
    8. 'elif' → logprob: -13.787571907043457
    9. '   ' → logprob: -14.162571907043457
    10. '	       ' → logprob: -14.162571907043457

Token 118: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.34625715017318726
    2. '           ' → logprob: -1.596257209777832
    3. '       ' → logprob: -2.721257209777832
    4. ' else' → logprob: -3.721257209777832
    5. '   ' → logprob: -11.471257209777832
    6. '	else' → logprob: -12.721257209777832
    7. '               ' → logprob: -13.096257209777832
    8. '```' → logprob: -13.471257209777832
    9. ' ' → logprob: -14.346257209777832
    10. '          ' → logprob: -14.471257209777832

Token 119: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.44566264748573303
    2. '               ' → logprob: -1.1956626176834106
    3. ':
' → logprob: -2.9456627368927
    4. '           ' → logprob: -5.570662498474121
    5. ' :' → logprob: -8.070662498474121
    6. ' :
' → logprob: -8.820662498474121
    7. '[' → logprob: -9.570662498474121
    8. '       ' → logprob: -10.195662498474121
    9. '            ' → logprob: -10.570662498474121
    10. '              ' → logprob: -11.070662498474121

Token 120: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013997425325214863
    2. 'stack' → logprob: -5.013997554779053
    3. ' stack' → logprob: -5.013997554779053
    4. '           ' → logprob: -7.638997554779053
    5. '	stack' → logprob: -9.388997077941895
    6. '   ' → logprob: -11.388997077941895
    7. '(stack' → logprob: -12.013997077941895
    8. '	       ' → logprob: -12.138997077941895
    9. '       ' → logprob: -12.138997077941895
    10. 'Stack' → logprob: -12.388997077941895

Token 121: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.5760132670402527
    2. ' stack' → logprob: -0.8260132670402527
    3. '               ' → logprob: -9.576013565063477
    4. '	stack' → logprob: -13.076013565063477
    5. '   ' → logprob: -14.451013565063477
    6. '           ' → logprob: -14.576013565063477
    7. '                   ' → logprob: -14.701013565063477
    8. '(stack' → logprob: -14.951013565063477
    9. '_stack' → logprob: -15.076013565063477
    10. '.stack' → logprob: -16.076013565063477

Token 122: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.00016301481809932739
    2. '.' → logprob: -8.750163078308105
    3. ').' → logprob: -13.000163078308105
    4. ' .' → logprob: -13.875163078308105
    5. 'append' → logprob: -14.125163078308105
    6. '.push' → logprob: -15.250163078308105
    7. '.extend' → logprob: -15.625163078308105
    8. '.Append' → logprob: -16.25016212463379
    9. '].' → logprob: -17.25016212463379
    10. '_append' → logprob: -17.25016212463379

Token 123: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0043077534064650536
    2. '(c' → logprob: -5.879307746887207
    3. '(' → logprob: -6.504307746887207
    4. ' (' → logprob: -12.879307746887207
    5. ' ' → logprob: -13.629307746887207
    6. ' ((' → logprob: -14.129307746887207
    7. '   ' → logprob: -15.879307746887207
    8. '  ' → logprob: -16.754308700561523
    9. '[(' → logprob: -17.129308700561523
    10. '(
' → logprob: -17.254308700561523

Token 124: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.320199877838604e-07
    2. ' c' → logprob: -14.875
    3. ')c' → logprob: -17.0
    4. '   ' → logprob: -19.875
    5. '	c' → logprob: -20.625
    6. '(c' → logprob: -21.125
    7. 'с' → logprob: -21.625
    8. ',c' → logprob: -22.125
    9. '_c' → logprob: -22.5
    10. '$c' → logprob: -22.625

Token 125: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0006242761737667024
    2. ',c' → logprob: -8.250624656677246
    3. '))' → logprob: -8.375624656677246
    4. ')' → logprob: -9.375624656677246
    5. ' ,' → logprob: -10.125624656677246
    6. ',
' → logprob: -13.125624656677246
    7. 'c' → logprob: -13.250624656677246
    8. ')c' → logprob: -13.375624656677246
    9. '),' → logprob: -14.125624656677246
    10. '   ' → logprob: -14.625624656677246

Token 126: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ' ' → logprob: -11.50001049041748
    3. '   ' → logprob: -17.875009536743164
    4. '  ' → logprob: -20.000009536743164
    5. ')' → logprob: -21.500009536743164
    6. '```' → logprob: -22.000009536743164
    7. '    ' → logprob: -22.250009536743164
    8. '۱' → logprob: -22.500009536743164
    9. '１' → logprob: -23.000009536743164
    10. '     ' → logprob: -23.125009536743164

Token 127: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8624639324116288e-06
    2. ' ' → logprob: -13.250001907348633
    3. '   ' → logprob: -17.500001907348633
    4. ')' → logprob: -18.875001907348633
    5. '  ' → logprob: -20.250001907348633
    6. '
' → logprob: -21.125001907348633
    7. '```' → logprob: -21.125001907348633
    8. 'count' → logprob: -21.250001907348633
    9. '0' → logprob: -21.437501907348633
    10. '))' → logprob: -21.562501907348633

Token 128: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.004886823706328869
    2. '))' → logprob: -5.754886627197266
    3. ')
' → logprob: -6.379886627197266
    4. '))
' → logprob: -12.129886627197266
    5. '       ' → logprob: -12.254886627197266
    6. ')))' → logprob: -14.129886627197266
    7. ')

' → logprob: -14.629886627197266
    8. ' )' → logprob: -14.879886627197266
    9. '   ' → logprob: -15.379886627197266
    10. ')
' → logprob: -15.754886627197266

Token 129: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.10065776854753494
    2. 'else' → logprob: -2.3506577014923096
    3. ' else' → logprob: -8.10065746307373
    4. 'elif' → logprob: -9.10065746307373
    5. '   ' → logprob: -10.85065746307373
    6. '```' → logprob: -11.35065746307373
    7. '           ' → logprob: -12.72565746307373
    8. ' elif' → logprob: -14.60065746307373
    9. '<|end|>' → logprob: -14.85065746307373
    10. ')' → logprob: -14.85065746307373

Token 130: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.07754132896661758
    2. '       ' → logprob: -3.0775413513183594
    3. ' else' → logprob: -3.5775413513183594
    4. 'elif' → logprob: -8.07754135131836
    5. '   ' → logprob: -8.20254135131836
    6. ' elif' → logprob: -11.95254135131836
    7. '	else' → logprob: -14.07754135131836
    8. '```' → logprob: -14.07754135131836
    9. '           ' → logprob: -14.57754135131836
    10. ' ' → logprob: -14.70254135131836

Token 131: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.043915946036577225
    2. ':
' → logprob: -3.1689159870147705
    3. '       ' → logprob: -7.793915748596191
    4. '           ' → logprob: -7.793915748596191
    5. ' :' → logprob: -10.418915748596191
    6. '   ' → logprob: -10.918915748596191
    7. '        ' → logprob: -11.293915748596191
    8. ',' → logprob: -12.293915748596191
    9. '{' → logprob: -12.293915748596191
    10. ':

' → logprob: -12.293915748596191

Token 132: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.30771487951278687
    2. '       ' → logprob: -1.9327149391174316
    3. 'if' → logprob: -2.4327149391174316
    4. '#' → logprob: -3.8077149391174316
    5. ' if' → logprob: -4.682714939117432
    6. ' #' → logprob: -7.307714939117432
    7. '   ' → logprob: -9.057714462280273
    8. '               ' → logprob: -10.932714462280273
    9. '```' → logprob: -11.307714462280273
    10. '        ' → logprob: -11.432714462280273

Token 133: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -1.0964586734771729
    2. '#' → logprob: -1.5964586734771729
    3. 'if' (adapté à ' if') → logprob: -1.5964586734771729
    4. ' #' → logprob: -1.7214586734771729
    5. '       ' → logprob: -2.846458673477173
    6. '           ' → logprob: -4.346458435058594
    7. 'count' → logprob: -5.971458435058594
    8. ' while' → logprob: -6.221458435058594
    9. 'while' → logprob: -6.346458435058594
    10. ' count' → logprob: -6.471458435058594

Token 134: ' not' (ID: 625)
  Prédit: ' stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' stack' → logprob: -0.6393229961395264
    2. 'stack' → logprob: -0.7643229961395264
    3. ' not' → logprob: -5.5143232345581055
    4. 'not' → logprob: -7.0143232345581055
    5. ' c' → logprob: -7.2643232345581055
    6. 'c' → logprob: -7.5143232345581055
    7. ' len' → logprob: -8.764323234558105
    8. 'len' → logprob: -9.139323234558105
    9. '(stack' → logprob: -10.139323234558105
    10. ' ' → logprob: -10.264323234558105

Token 135: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.20143848657608032
    2. ' stack' → logprob: -1.7014384269714355
    3. '(stack' → logprob: -11.826438903808594
    4. '	stack' → logprob: -12.326438903808594
    5. 's' → logprob: -13.076438903808594
    6. 'st' → logprob: -13.076438903808594
    7. 'Stack' → logprob: -13.451438903808594
    8. 'not' → logprob: -13.826438903808594
    9. ' ' → logprob: -13.826438903808594
    10. '   ' → logprob: -14.326438903808594

Token 136: ':
' (ID: 734)
  Prédit: ' or'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.1472589671611786
    2. 'or' → logprob: -2.022258996963501
    3. ':
' → logprob: -5.647258758544922
    4. ':' → logprob: -7.022258758544922
    5. '           ' → logprob: -9.272258758544922
    6. '   ' → logprob: -11.397258758544922
    7. '               ' → logprob: -11.772258758544922
    8. '[' → logprob: -12.022258758544922
    9. '          ' → logprob: -12.022258758544922
    10. '       ' → logprob: -12.022258758544922

Token 137: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.10758699476718903
    2. ':' → logprob: -2.4825870990753174
    3. ':
' → logprob: -4.357586860656738
    4. ' or' → logprob: -5.982586860656738
    5. '           ' → logprob: -6.232586860656738
    6. ' and' → logprob: -8.732586860656738
    7. ' continue' → logprob: -8.857586860656738
    8. '[' → logprob: -9.357586860656738
    9. ')' → logprob: -9.357586860656738
    10. '   ' → logprob: -9.607586860656738

Token 138: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.24331532418727875
    2. ' stack' → logprob: -1.86831533908844
    3. '               ' → logprob: -3.2433152198791504
    4. '                   ' → logprob: -4.86831521987915
    5. ' continue' → logprob: -4.99331521987915
    6. 'continue' → logprob: -4.99331521987915
    7. '   ' → logprob: -8.618315696716309
    8. '```' → logprob: -8.618315696716309
    9. ' break' → logprob: -8.993315696716309
    10. '(stack' → logprob: -9.118315696716309

Token 139: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009473071550019085
    2. '.' → logprob: -7.00094747543335
    3. '=' → logprob: -11.000946998596191
    4. 'append' → logprob: -12.250946998596191
    5. '[-' → logprob: -12.375946998596191
    6. '           ' → logprob: -12.500946998596191
    7. '.pop' → logprob: -12.875946998596191
    8. ' .' → logprob: -13.250946998596191
    9. '.extend' → logprob: -15.000946998596191
    10. '.
' → logprob: -15.625946998596191

Token 140: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -1.8193366486229934e-05
    2. '(' → logprob: -11.000018119812012
    3. ' ' → logprob: -14.500018119812012
    4. ' ((' → logprob: -14.625018119812012
    5. '(c' → logprob: -15.000018119812012
    6. '(('' → logprob: -16.625019073486328
    7. '   ' → logprob: -17.000019073486328
    8. '  ' → logprob: -17.250019073486328
    9. ' (' → logprob: -17.375019073486328
    10. '(None' → logprob: -18.125019073486328

Token 141: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00041577612864784896
    2. ' c' → logprob: -8.000415802001953
    3. '(c' → logprob: -9.625415802001953
    4. ')c' → logprob: -11.250415802001953
    5. '(' → logprob: -14.750415802001953
    6. ',c' → logprob: -14.875415802001953
    7. ')' → logprob: -15.625415802001953
    8. ' (' → logprob: -15.750415802001953
    9. '   ' → logprob: -16.625415802001953
    10. '	c' → logprob: -17.125415802001953

Token 142: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.057743949990254e-05
    2. ' ,' → logprob: -10.875020980834961
    3. '),' → logprob: -15.000020980834961
    4. '1' → logprob: -15.000020980834961
    5. '))' → logprob: -15.125020980834961
    6. ',
' → logprob: -15.500020980834961
    7. '   ' → logprob: -16.00002098083496
    8. '```' → logprob: -16.37502098083496
    9. '‌,' → logprob: -16.75002098083496
    10. ' ' → logprob: -17.00002098083496

Token 143: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.01106221228837967
    2. ' ' → logprob: -4.511062145233154
    3. '0' → logprob: -12.136062622070312
    4. '2' → logprob: -12.636062622070312
    5. '))' → logprob: -13.511062622070312
    6. '   ' → logprob: -14.073562622070312
    7. ',' → logprob: -14.198562622070312
    8. ' -' → logprob: -14.323562622070312
    9. '-' → logprob: -14.448562622070312
    10. ')' → logprob: -14.698562622070312

Token 144: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.6993910670280457
    2. '))
' → logprob: -0.6993910670280457
    3. '           ' → logprob: -5.824390888214111
    4. ')' → logprob: -6.324390888214111
    5. ')
' → logprob: -6.699390888214111
    6. '               ' → logprob: -8.44939136505127
    7. '       ' → logprob: -11.44939136505127
    8. '))
' → logprob: -11.69939136505127
    9. '))

' → logprob: -12.32439136505127
    10. ')))' → logprob: -12.94939136505127

Token 145: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010784516111016273
    2. 'else' → logprob: -5.01078462600708
    3. '               ' → logprob: -6.01078462600708
    4. 'elif' → logprob: -7.26078462600708
    5. ' else' → logprob: -7.38578462600708
    6. '<|end|>' → logprob: -9.385784149169922
    7. ' elif' → logprob: -9.510784149169922
    8. '       ' → logprob: -9.760784149169922
    9. ')' → logprob: -10.885784149169922
    10. '```' → logprob: -11.510784149169922

Token 146: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.08849865943193436
    2. 'elif' → logprob: -3.463498592376709
    3. '           ' → logprob: -3.588498592376709
    4. ' else' → logprob: -3.838498592376709
    5. '       ' → logprob: -5.713498592376709
    6. ' elif' → logprob: -7.088498592376709
    7. '               ' → logprob: -10.463499069213867
    8. ')' → logprob: -10.963499069213867
    9. ',' → logprob: -11.713499069213867
    10. '	elif' → logprob: -12.713499069213867

Token 147: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5360435843467712
    2. ':' → logprob: -0.9110435843467712
    3. '               ' → logprob: -4.411043643951416
    4. ' if' → logprob: -8.036043167114258
    5. '           ' → logprob: -9.161043167114258
    6. ',' → logprob: -9.661043167114258
    7. ' and' → logprob: -9.786043167114258
    8. ':

' → logprob: -10.536043167114258
    9. '):
' → logprob: -10.786043167114258
    10. ' :
' → logprob: -10.911043167114258

Token 148: '               ' (ID: 506)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3464054763317108
    2. '               ' → logprob: -1.4714055061340332
    3. 'if' → logprob: -3.221405506134033
    4. ' c' → logprob: -4.346405506134033
    5. ' last' → logprob: -5.596405506134033
    6. 'c' → logprob: -6.346405506134033
    7. ' top' → logprob: -7.096405506134033
    8. 'last' → logprob: -7.596405506134033
    9. 'color' → logprob: -7.846405506134033
    10. 'top' → logprob: -7.846405506134033

Token 149: ' right' (ID: 1849)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.228541374206543
    2. 'color' → logprob: -1.353541374206543
    3. 'top' → logprob: -2.103541374206543
    4. ' if' → logprob: -2.603541374206543
    5. ' top' → logprob: -2.853541374206543
    6. 'c' → logprob: -3.103541374206543
    7. 'last' → logprob: -3.103541374206543
    8. ' color' → logprob: -3.478541374206543
    9. 'prev' → logprob: -4.228541374206543
    10. ' c' → logprob: -4.353541374206543

Token 150: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.026977136731147766
    2. '_c' → logprob: -4.151977062225342
    3. '_stack' → logprob: -5.901977062225342
    4. ' =' → logprob: -6.026977062225342
    5. 'color' → logprob: -6.276977062225342
    6. '=' → logprob: -6.276977062225342
    7. 'c' → logprob: -6.776977062225342
    8. '[-' → logprob: -8.7769775390625
    9. '_' → logprob: -9.0269775390625
    10. '[' → logprob: -9.1519775390625

Token 151: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.10525757074356079
    2. ' =' → logprob: -2.355257511138916
    3. ',' → logprob: -5.355257511138916
    4. '==' → logprob: -8.355257987976074
    5. ' ==' → logprob: -9.980257987976074
    6. ')' → logprob: -11.105257987976074
    7. ',c' → logprob: -12.230257987976074
    8. ' ,' → logprob: -12.480257987976074
    9. '=c' → logprob: -13.605257987976074
    10. '_stack' → logprob: -14.230257987976074

Token 152: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.17793120443820953
    2. ' stack' → logprob: -2.177931308746338
    3. 'c' → logprob: -3.177931308746338
    4. ' c' → logprob: -4.927931308746338
    5. 'stones' → logprob: -7.552931308746338
    6. ' stones' → logprob: -9.17793083190918
    7. 'st' → logprob: -9.80293083190918
    8. 'stone' → logprob: -10.30293083190918
    9. '(stack' → logprob: -10.92793083190918
    10. '   ' → logprob: -11.05293083190918

Token 153: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.1472419600977446e-06
    2. '-' → logprob: -14.250000953674316
    3. '][-' → logprob: -14.875000953674316
    4. '```' → logprob: -16.750001907348633
    5. '[' → logprob: -18.125001907348633
    6. '.pop' → logprob: -19.000001907348633
    7. ' [-' → logprob: -19.125001907348633
    8. '   ' → logprob: -19.500001907348633
    9. '`' → logprob: -19.750001907348633
    10. '(-' → logprob: -19.875001907348633

Token 154: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. '-' → logprob: -14.00000286102295
    3. '[' → logprob: -14.00000286102295
    4. ' ' → logprob: -14.62500286102295
    5. '```' → logprob: -14.62500286102295
    6. '][' → logprob: -15.25000286102295
    7. '   ' → logprob: -16.312503814697266
    8. '
' → logprob: -16.750003814697266
    9. '0' → logprob: -17.250003814697266
    10. ']' → logprob: -17.562503814697266

Token 155: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.11339709162712097
    2. '[' → logprob: -2.2383971214294434
    3. ')[' → logprob: -7.738397121429443
    4. '0' → logprob: -9.863396644592285
    5. '>[' → logprob: -10.488396644592285
    6. '}[' → logprob: -11.363396644592285
    7. ']' → logprob: -11.363396644592285
    8. ' ][' → logprob: -11.613396644592285
    9. ' [' → logprob: -12.238396644592285
    10. '"][' → logprob: -12.613396644592285

Token 156: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010783452307805419
    2. '1' → logprob: -9.250107765197754
    3. ' ' → logprob: -12.437607765197754
    4. '
' → logprob: -13.750107765197754
    5. '```' → logprob: -13.875107765197754
    6. '۰' → logprob: -14.312607765197754
    7. '-' → logprob: -14.375107765197754
    8. '[' → logprob: -14.437607765197754
    9. 'color' → logprob: -14.875107765197754
    10. '٠' → logprob: -14.875107765197754

Token 157: ']
' (ID: 1592)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.6133347749710083
    2. ',' → logprob: -1.7383347749710083
    3. '==' → logprob: -2.3633346557617188
    4. ' ==' → logprob: -2.8633346557617188
    5. ')
' → logprob: -3.2383346557617188
    6. '               ' → logprob: -3.3633346557617188
    7. ',c' → logprob: -3.4883346557617188
    8. ')c' → logprob: -5.113334655761719
    9. ')==' → logprob: -5.238334655761719
    10. ',
' → logprob: -5.613334655761719

Token 158: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06438494473695755
    2. ' if' → logprob: -3.689384937286377
    3. '
' → logprob: -4.314384937286377
    4. '                
' → logprob: -4.814384937286377
    5. '<|end|>' → logprob: -5.189384937286377
    6. ' 
' → logprob: -6.064384937286377
    7. '                ' → logprob: -6.314384937286377
    8. ',' → logprob: -6.689384937286377
    9. '           ' → logprob: -7.189384937286377
    10. 'if' → logprob: -7.439384937286377

Token 159: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.12265969812870026
    2. 'right' → logprob: -2.247659683227539
    3. 'count' → logprob: -4.872659683227539
    4. ' if' → logprob: -6.497659683227539
    5. 'left' → logprob: -9.122659683227539
    6. 'stack' → logprob: -9.372659683227539
    7. '               ' → logprob: -9.497659683227539
    8. ' right' → logprob: -9.622659683227539
    9. 'cnt' → logprob: -9.747659683227539
    10. '#' → logprob: -10.247659683227539

Token 160: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.7210560441017151
    2. ' right' → logprob: -1.2210559844970703
    3. 'right' → logprob: -2.0960559844970703
    4. ' c' → logprob: -2.3460559844970703
    5. 'stack' → logprob: -9.97105598449707
    6. ' stack' → logprob: -10.28355598449707
    7. '   ' → logprob: -11.03355598449707
    8. ' ' → logprob: -11.22105598449707
    9. 'Right' → logprob: -12.15855598449707
    10. '	right' → logprob: -12.59605598449707

Token 161: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5780147910118103
    2. '==' → logprob: -0.8280147910118103
    3. ' !=' → logprob: -6.828014850616455
    4. '!=' → logprob: -6.953014850616455
    5. ')' → logprob: -11.578014373779297
    6. ' ' → logprob: -11.828014373779297
    7. '[' → logprob: -12.703014373779297
    8. '>' → logprob: -12.703014373779297
    9. ' ' → logprob: -12.828014373779297
    10. '==
' → logprob: -13.453014373779297

Token 162: ' right' (ID: 1849)
  Prédit: 'right'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'right' → logprob: -0.20142464339733124
    2. ' right' → logprob: -1.7014245986938477
    3. ' ' → logprob: -12.201424598693848
    4. 'stack' → logprob: -12.326424598693848
    5. '	right' → logprob: -13.826424598693848
    6. '   ' → logprob: -14.826424598693848
    7. ' stack' → logprob: -15.576424598693848
    8. '  ' → logprob: -16.451425552368164
    9. 'left' → logprob: -16.451425552368164
    10. '0' → logprob: -16.576425552368164

Token 163: '_color' (ID: 15576)
  Prédit: '_color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -4.584861744660884e-05
    2. 'color' → logprob: -10.125045776367188
    3. '[' → logprob: -13.125045776367188
    4. ')' → logprob: -13.625045776367188
    5. '   ' → logprob: -14.875045776367188
    6. '_c' → logprob: -15.000045776367188
    7. '```' → logprob: -15.250045776367188
    8. 'Color' → logprob: -15.500045776367188
    9. '_COLOR' → logprob: -15.750045776367188
    10. '[-' → logprob: -15.875045776367188

Token 164: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4235211908817291
    2. ':' → logprob: -1.5485211610794067
    3. '                   ' → logprob: -2.0485212802886963
    4. ' and' → logprob: -6.923521041870117
    5. 'stack' → logprob: -7.048521041870117
    6. '               ' → logprob: -7.423521041870117
    7. '):
' → logprob: -8.173521041870117
    8. '(stack' → logprob: -8.423521041870117
    9. '_stack' → logprob: -8.798521041870117
    10. ' stack' → logprob: -8.923521041870117

Token 165: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.057292524725198746
    2. ':
' → logprob: -3.5572924613952637
    3. 'stack' → logprob: -3.9322924613952637
    4. ' stack' → logprob: -5.807292461395264
    5. '               ' → logprob: -6.057292461395264
    6. ':' → logprob: -6.807292461395264
    7. '(stack' → logprob: -7.682292461395264
    8. '):
' → logprob: -9.057292938232422
    9. '                       ' → logprob: -9.307292938232422
    10. ',' → logprob: -9.807292938232422

Token 166: ' #' (ID: 1069)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.168365940451622
    2. ' stack' → logprob: -2.293365955352783
    3. '                   ' → logprob: -3.043365955352783
    4. 'count' → logprob: -5.668365955352783
    5. '                       ' → logprob: -6.168365955352783
    6. ' count' → logprob: -8.418365478515625
    7. '               ' → logprob: -9.043365478515625
    8. 'continue' → logprob: -9.668365478515625
    9. '(stack' → logprob: -9.668365478515625
    10. '	stack' → logprob: -9.668365478515625

Token 167: ' same' (ID: 2684)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.09342604875564575
    2. ' stack' → logprob: -2.593425989151001
    3. 'count' → logprob: -4.59342622756958
    4. ' count' → logprob: -6.34342622756958
    5. '                   ' → logprob: -6.46842622756958
    6. 'cnt' → logprob: -8.093425750732422
    7. '#' → logprob: -8.843425750732422
    8. 'continue' → logprob: -9.468425750732422
    9. '               ' → logprob: -9.968425750732422
    10. 'if' → logprob: -9.968425750732422

Token 168: ' color' (ID: 3089)
  Prédit: '_color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_color' → logprob: -1.0060279369354248
    2. '_count' → logprob: -1.1310279369354248
    3. 'color' → logprob: -1.7560279369354248
    4. 'count' → logprob: -2.756027936935425
    5. 'stack' → logprob: -3.256027936935425
    6. '_stack' → logprob: -4.506028175354004
    7. '                   ' → logprob: -4.881028175354004
    8. ',' → logprob: -5.006028175354004
    9. '_c' → logprob: -5.631028175354004
    10. ':
' → logprob: -6.506028175354004

Token 169: ':' (ID: 25)
  Prédit: ':
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.30186721682548523
    2. '                   ' → logprob: -1.8018672466278076
    3. ',' → logprob: -3.4268672466278076
    4. '                       ' → logprob: -3.8018672466278076
    5. '):
' → logprob: -4.3018670082092285
    6. ':' → logprob: -4.4268670082092285
    7. 'stack' → logprob: -5.5518670082092285
    8. '               ' → logprob: -5.8018670082092285
    9. ',
' → logprob: -6.1768670082092285
    10. ' and' → logprob: -6.6768670082092285

Token 170: ' just' (ID: 1327)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.6391470432281494
    2. ' stack' → logprob: -0.7641470432281494
    3. '                   ' → logprob: -5.13914680480957
    4. '                       ' → logprob: -8.13914680480957
    5. 'count' → logprob: -9.01414680480957
    6. ' count' → logprob: -9.63914680480957
    7. '	stack' → logprob: -9.63914680480957
    8. '               ' → logprob: -10.38914680480957
    9. '(stack' → logprob: -11.26414680480957
    10. '       ' → logprob: -11.63914680480957

Token 171: ' add' (ID: 1147)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.4360014796257019
    2. ' stack' → logprob: -1.0610015392303467
    3. '                   ' → logprob: -5.311001300811768
    4. 'continue' → logprob: -7.811001300811768
    5. 'increase' → logprob: -7.936001300811768
    6. 'increment' → logprob: -8.186001777648926
    7. 'append' → logprob: -8.311001777648926
    8. ' continue' → logprob: -8.436001777648926
    9. ' increment' → logprob: -8.436001777648926
    10. '(stack' → logprob: -9.061001777648926

Token 172: '
' (ID: 198)
  Prédit: '(stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(stack' → logprob: -0.33896294236183167
    2. 'stack' → logprob: -1.5889629125595093
    3. ' (' → logprob: -3.963963031768799
    4. '                   ' → logprob: -4.088963031768799
    5. ' stack' → logprob: -4.713963031768799
    6. '(' → logprob: -4.713963031768799
    7. '(count' → logprob: -5.213963031768799
    8. '               ' → logprob: -5.338963031768799
    9. ' to' → logprob: -5.588963031768799
    10. '(token' → logprob: -5.963963031768799

Token 173: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.029366936534643173
    2. '               ' → logprob: -3.654366970062256
    3. '                       ' → logprob: -6.654366970062256
    4. '           ' → logprob: -7.654366970062256
    5. '                    
' → logprob: -8.654366493225098
    6. '       ' → logprob: -8.779366493225098
    7. '<|end|>' → logprob: -9.029366493225098
    8. ')' → logprob: -9.029366493225098
    9. 'stack' → logprob: -9.154366493225098
    10. '(stack' → logprob: -9.154366493225098

Token 174: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.04591858759522438
    2. ' stack' → logprob: -3.1709187030792236
    3. '                   ' → logprob: -5.9209184646606445
    4. '               ' → logprob: -8.670918464660645
    5. '(stack' → logprob: -11.170918464660645
    6. '	stack' → logprob: -11.170918464660645
    7. '                       ' → logprob: -11.795918464660645
    8. '   ' → logprob: -12.170918464660645
    9. '           ' → logprob: -12.170918464660645
    10. '```' → logprob: -12.545918464660645

Token 175: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.9361264946837764e-07
    2. '-' → logprob: -16.875
    3. '=' → logprob: -17.0
    4. '[' → logprob: -17.25
    5. '.append' → logprob: -17.75
    6. '][-' → logprob: -18.125
    7. '
' → logprob: -18.375
    8. ' [-' → logprob: -18.75
    9. '[:-' → logprob: -19.0
    10. '`' → logprob: -19.5

Token 176: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.127333340875339e-06
    2. '(' → logprob: -13.500003814697266
    3. ' ' → logprob: -13.500003814697266
    4. '[' → logprob: -14.812503814697266
    5. '```' → logprob: -16.000003814697266
    6. '2' → logprob: -16.500003814697266
    7. '0' → logprob: -16.687503814697266
    8. ']' → logprob: -16.875003814697266
    9. '11' → logprob: -16.937503814697266
    10. '-' → logprob: -16.937503814697266

Token 177: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.14749188721179962
    2. ' =' → logprob: -2.772491931915283
    3. ']' → logprob: -3.147491931915283
    4. '[' → logprob: -4.147491931915283
    5. ')' → logprob: -4.647491931915283
    6. '=(' → logprob: -5.397491931915283
    7. ']=' → logprob: -6.897491931915283
    8. ']=(' → logprob: -8.022491455078125
    9. ')=' → logprob: -9.147491455078125
    10. '   ' → logprob: -9.397491455078125

Token 178: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0181527491658926
    2. ' =' → logprob: -4.018152713775635
    3. '=(' → logprob: -12.768153190612793
    4. '[' → logprob: -17.393152236938477
    5. '(' → logprob: -17.643152236938477
    6. '   ' → logprob: -17.643152236938477
    7. ' =(' → logprob: -18.393152236938477
    8. ' ' → logprob: -18.518152236938477
    9. '=
' → logprob: -18.893152236938477
    10. ')=' → logprob: -18.893152236938477

Token 179: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4750415086746216
    2. '(c' → logprob: -0.9750415086746216
    3. '(right' → logprob: -6.975041389465332
    4. '(stack' → logprob: -10.475041389465332
    5. ' ' → logprob: -15.725041389465332
    6. '(left' → logprob: -16.35004234313965
    7. '(current' → logprob: -16.35004234313965
    8. ' right' → logprob: -16.47504234313965
    9. '(' → logprob: -16.47504234313965
    10. 'right' → logprob: -16.72504234313965

Token 180: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.03032771684229374
    2. '(c' → logprob: -3.530327796936035
    3. 'right' → logprob: -8.155327796936035
    4. ' c' → logprob: -8.280327796936035
    5. ')c' → logprob: -11.405327796936035
    6. ' (' → logprob: -11.780327796936035
    7. '(right' → logprob: -12.030327796936035
    8. ' right' → logprob: -12.155327796936035
    9. 'color' → logprob: -12.780327796936035
    10. '	c' → logprob: -14.280327796936035

Token 181: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -7.107425062713446e-06
    2. ' ,' → logprob: -11.875006675720215
    3. 'stack' → logprob: -17.12500762939453
    4. '(stack' → logprob: -18.25000762939453
    5. '),' → logprob: -18.62500762939453
    6. ',
' → logprob: -18.87500762939453
    7. '   ' → logprob: -19.00000762939453
    8. ' ' → logprob: -19.12500762939453
    9. '1' → logprob: -19.62500762939453
    10. ' stack' → logprob: -19.75000762939453

Token 182: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.018150994554162025
    2. ' stack' → logprob: -4.018150806427002
    3. '(stack' → logprob: -14.64315128326416
    4. ' ' → logprob: -15.39315128326416
    5. '	stack' → logprob: -15.39315128326416
    6. '   ' → logprob: -15.64315128326416
    7. '  ' → logprob: -17.393150329589844
    8. '.stack' → logprob: -17.643150329589844
    9. '    ' → logprob: -18.143150329589844
    10. 'stackoverflow' → logprob: -18.393150329589844

Token 183: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.5570885807392187e-05
    2. '-' → logprob: -11.125015258789062
    3. '1' → logprob: -14.875015258789062
    4. '][-' → logprob: -16.125015258789062
    5. '```' → logprob: -16.375015258789062
    6. '[' → logprob: -16.875015258789062
    7. '[:-' → logprob: -17.625015258789062
    8. '−' → logprob: -17.750015258789062
    9. '``' → logprob: -18.250015258789062
    10. '28' → logprob: -18.500015258789062

Token 184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.8789383830153383e-05
    2. '-' → logprob: -11.000019073486328
    3. '[' → logprob: -14.750019073486328
    4. ' ' → logprob: -14.937519073486328
    5. '```' → logprob: -15.312519073486328
    6. '[-' → logprob: -16.000019073486328
    7. '
' → logprob: -16.125019073486328
    8. '11' → logprob: -16.187519073486328
    9. ']' → logprob: -16.562519073486328
    10. '   ' → logprob: -16.875019073486328

Token 185: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.6999964118003845
    2. '][' → logprob: -1.0749964714050293
    3. '1' → logprob: -1.8249964714050293
    4. '-' → logprob: -8.449995994567871
    5. ')[' → logprob: -8.449995994567871
    6. ' ][' → logprob: -8.949995994567871
    7. ''][' → logprob: -9.324995994567871
    8. '   ' → logprob: -9.824995994567871
    9. '"][' → logprob: -10.324995994567871
    10. ']' → logprob: -11.074995994567871

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0802738870552275e-05
    2. '[' → logprob: -11.75001049041748
    3. '
' → logprob: -14.00001049041748
    4. ' ' → logprob: -14.62501049041748
    5. '-' → logprob: -14.75001049041748
    6. '0' → logprob: -15.12501049041748
    7. '```' → logprob: -15.43751049041748
    8. '   ' → logprob: -16.562511444091797
    9. '

' → logprob: -16.812511444091797
    10. '`' → logprob: -17.000011444091797

Token 187: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.04300456494092941
    2. '+' → logprob: -3.1680045127868652
    3. ')' → logprob: -12.543004989624023
    4. ' ' → logprob: -13.918004989624023
    5. ')+' → logprob: -15.168004989624023
    6. ' plus' → logprob: -15.793004989624023
    7. ' ' → logprob: -15.918004989624023
    8. ' )' → logprob: -16.293004989624023
    9. '[' → logprob: -17.293004989624023
    10. '+)' → logprob: -17.418004989624023

Token 188: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.16022635996341705
    2. '+' → logprob: -1.9102263450622559
    3. '+)' → logprob: -14.160226821899414
    4. ')' → logprob: -14.535226821899414
    5. ' plus' → logprob: -15.160226821899414
    6. ' ' → logprob: -15.160226821899414
    7. ' +
' → logprob: -15.910226821899414
    8. ' ' → logprob: -16.035226821899414
    9. ')+' → logprob: -16.660226821899414
    10. '+
' → logprob: -16.785226821899414

Token 189: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.009778641164302826
    2. ' ' → logprob: -4.6347784996032715
    3. '2' → logprob: -10.88477897644043
    4. '   ' → logprob: -12.88477897644043
    5. ')' → logprob: -14.75977897644043
    6. '3' → logprob: -15.38477897644043
    7. '```' → logprob: -15.63477897644043
    8. '           ' → logprob: -16.00977897644043
    9. '0' → logprob: -16.00977897644043
    10. '  ' → logprob: -16.32227897644043

Token 190: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.869017852295656e-06
    2. ' ' → logprob: -12.250006675720215
    3. '2' → logprob: -13.500006675720215
    4. ')' → logprob: -15.500006675720215
    5. '   ' → logprob: -15.937506675720215
    6. '```' → logprob: -16.06250762939453
    7. 'count' → logprob: -17.87500762939453
    8. '0' → logprob: -18.00000762939453
    9. '100' → logprob: -18.18750762939453
    10. '           ' → logprob: -18.43750762939453

Token 191: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.5770057439804077
    2. ')' → logprob: -0.8270057439804077
    3. '               ' → logprob: -6.952005863189697
    4. ')
' → logprob: -9.952005386352539
    5. '                   ' → logprob: -10.702005386352539
    6. '       ' → logprob: -11.077005386352539
    7. '           ' → logprob: -11.327005386352539
    8. ')

' → logprob: -12.577005386352539
    9. ' )
' → logprob: -13.202005386352539
    10. '   ' → logprob: -13.577005386352539

Token 192: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2650206387042999
    2. 'else' → logprob: -1.5150206089019775
    3. ' else' → logprob: -4.390020847320557
    4. '       ' → logprob: -8.140020370483398
    5. '```' → logprob: -9.015020370483398
    6. 'elif' → logprob: -9.640020370483398
    7. '<|end|>' → logprob: -9.765020370483398
    8. '           ' → logprob: -10.515020370483398
    9. '                   ' → logprob: -11.265020370483398
    10. ')' → logprob: -11.765020370483398

Token 193: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.10447914898395538
    2. ' else' → logprob: -2.3544790744781494
    3. '               ' → logprob: -5.4794793128967285
    4. '           ' → logprob: -9.72947883605957
    5. 'elif' → logprob: -10.72947883605957
    6. '       ' → logprob: -12.60447883605957
    7. '                   ' → logprob: -13.35447883605957
    8. '```' → logprob: -13.60447883605957
    9. ' elif' → logprob: -13.85447883605957
    10. '   ' → logprob: -14.10447883605957

Token 194: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.4879061281681061
    2. ':' → logprob: -1.1129060983657837
    3. '                   ' → logprob: -2.8629062175750732
    4. '               ' → logprob: -8.612906455993652
    5. '           ' → logprob: -10.237906455993652
    6. '```' → logprob: -10.862906455993652
    7. ' :
' → logprob: -10.862906455993652
    8. '):
' → logprob: -11.112906455993652
    9. ':

' → logprob: -11.112906455993652
    10. '                       ' → logprob: -11.362906455993652

Token 195: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04240111634135246
    2. ' if' → logprob: -4.917401313781738
    3. 'stack' → logprob: -4.917401313781738
    4. 'if' → logprob: -5.417401313781738
    5. '               ' → logprob: -5.542401313781738
    6. 'count' → logprob: -5.792401313781738
    7. 'while' → logprob: -5.917401313781738
    8. ' while' → logprob: -6.042401313781738
    9. '```' → logprob: -6.042401313781738
    10. '           ' → logprob: -6.417401313781738

Token 196: ' #' (ID: 1069)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.6244616508483887
    2. ' count' → logprob: -1.6244616508483887
    3. ' while' → logprob: -2.8744616508483887
    4. 'while' → logprob: -2.9994616508483887
    5. ' if' → logprob: -3.7494616508483887
    6. 'if' → logprob: -3.7494616508483887
    7. 'cnt' → logprob: -3.7494616508483887
    8. ' cnt' → logprob: -4.374461650848389
    9. '#' (adapté à ' #') → logprob: -4.499461650848389
    10. 'left' → logprob: -4.624461650848389

Token 197: ' different' (ID: 2647)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.688027560710907
    2. 'while' → logprob: -2.0630276203155518
    3. 'if' → logprob: -2.4380276203155518
    4. ' count' → logprob: -2.4380276203155518
    5. ' while' → logprob: -2.8130276203155518
    6. '#' → logprob: -2.9380276203155518
    7. ' if' → logprob: -3.3130276203155518
    8. 'cnt' → logprob: -5.063027381896973
    9. ' #' → logprob: -5.188027381896973
    10. 'right' → logprob: -5.313027381896973

Token 198: ':' (ID: 25)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -1.1504343748092651
    2. ':' → logprob: -1.4004343748092651
    3. '                   ' → logprob: -1.7754343748092651
    4. ':
' → logprob: -2.1504344940185547
    5. ' color' → logprob: -2.7754344940185547
    6. 'count' → logprob: -3.9004344940185547
    7. 'if' → logprob: -3.9004344940185547
    8. '_color' → logprob: -3.9004344940185547
    9. ' if' → logprob: -4.525434494018555
    10. '                       ' → logprob: -4.900434494018555

Token 199: ' remove' (ID: 6234)
  Prédit: ' count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' count' → logprob: -1.02552330493927
    2. 'count' → logprob: -1.15052330493927
    3. ' if' → logprob: -2.2755231857299805
    4. ' while' → logprob: -2.6505231857299805
    5. 'if' → logprob: -3.4005231857299805
    6. 'while' → logprob: -3.9005231857299805
    7. '                   ' → logprob: -3.9005231857299805
    8. ' cnt' → logprob: -4.4005231857299805
    9. 'stack' → logprob: -4.6505231857299805
    10. '#' → logprob: -5.0255231857299805

Token 200: ' right' (ID: 1849)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.38345175981521606
    2. 'count' → logprob: -2.0084517002105713
    3. ' stack' → logprob: -2.1334517002105713
    4. '                   ' → logprob: -4.00845193862915
    5. ' count' → logprob: -4.50845193862915
    6. 'if' → logprob: -4.75845193862915
    7. ' last' → logprob: -5.50845193862915
    8. ' stones' → logprob: -5.50845193862915
    9. 'last' → logprob: -5.63345193862915
    10. ' if' → logprob: -5.63345193862915

Token 201: '-end' (ID: 18507)
  Prédit: '_color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.49677956104278564
    2. '[-' → logprob: -1.3717795610427856
    3. '_count' → logprob: -3.246779441833496
    4. '][-' → logprob: -3.746779441833496
    5. '][' → logprob: -4.371779441833496
    6. '                   ' → logprob: -4.621779441833496
    7. '[' → logprob: -4.746779441833496
    8. ',' → logprob: -5.121779441833496
    9. ']' → logprob: -5.496779441833496
    10. ')' → logprob: -5.496779441833496

Token 202: ' consecutive' (ID: 40840)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.8510172963142395
    2. '_count' → logprob: -1.7260172367095947
    3. ' =' → logprob: -2.6010172367095947
    4. ' stone' → logprob: -2.9760172367095947
    5. '                   ' → logprob: -3.1010172367095947
    6. '[' → logprob: -3.3510172367095947
    7. ' count' → logprob: -3.6010172367095947
    8. ',' → logprob: -3.7260172367095947
    9. 'stack' → logprob: -3.7260172367095947
    10. '=' → logprob: -4.226017475128174

Token 203: ' stones' (ID: 38940)
  Prédit: 'stones'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stones' → logprob: -0.1098870187997818
    2. ' stones' → logprob: -3.10988712310791
    3. 'stack' → logprob: -3.48488712310791
    4. 'count' → logprob: -4.23488712310791
    5. 'stone' → logprob: -4.98488712310791
    6. ' stone' → logprob: -5.98488712310791
    7. ')' → logprob: -7.35988712310791
    8. '_count' → logprob: -7.85988712310791
    9. ',' → logprob: -7.85988712310791
    10. ' stack' → logprob: -8.10988712310791

Token 204: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06653991341590881
    2. ',' → logprob: -3.066540002822876
    3. '               ' → logprob: -6.191539764404297
    4. '                    
' → logprob: -6.316539764404297
    5. ' if' → logprob: -6.441539764404297
    6. '           ' → logprob: -6.441539764404297
    7. 'while' → logprob: -6.816539764404297
    8. ' =' → logprob: -6.816539764404297
    9. ' while' → logprob: -6.941539764404297
    10. '                       ' → logprob: -7.066539764404297

Token 205: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.082699254155159
    2. ',' → logprob: -3.2076992988586426
    3. '```' → logprob: -4.207699298858643
    4. '               ' → logprob: -5.332699298858643
    5. 'stack' → logprob: -5.832699298858643
    6. '           ' → logprob: -6.332699298858643
    7. '(stack' → logprob: -6.457699298858643
    8. '(-' → logprob: -6.582699298858643
    9. '(' → logprob: -6.707699298858643
    10. '[-' → logprob: -6.832699298858643

Token 206: ' tail' (ID: 12742)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.7120944857597351
    2. 'stack' → logprob: -0.9620944857597351
    3. 'while' → logprob: -2.46209454536438
    4. 'cnt' → logprob: -4.212094306945801
    5. ' while' → logprob: -5.087094306945801
    6. ' count' → logprob: -5.337094306945801
    7. 'if' → logprob: -5.337094306945801
    8. '                   ' → logprob: -5.587094306945801
    9. ' stack' → logprob: -5.712094306945801
    10. 'x' → logprob: -7.212094306945801

Token 207: '_count' (ID: 7536)
  Prédit: '_color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_color' → logprob: -0.46962255239486694
    2. '_count' → logprob: -1.2196226119995117
    3. ' =' → logprob: -2.5946226119995117
    4. '_len' → logprob: -6.094622611999512
    5. '=' → logprob: -6.594622611999512
    6. ',' → logprob: -7.969622611999512
    7. '_cnt' → logprob: -8.219622611999512
    8. '_size' → logprob: -8.844622611999512
    9. '_length' → logprob: -9.219622611999512
    10. '=_' → logprob: -10.094622611999512

Token 208: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.029761601239442825
    2. '=' → logprob: -3.529761552810669
    3. ',' → logprob: -11.65476131439209
    4. ' ' → logprob: -13.90476131439209
    5. ' ,' → logprob: -15.02976131439209
    6. '                   ' → logprob: -15.27976131439209
    7. '   ' → logprob: -15.65476131439209
    8. ')' → logprob: -15.65476131439209
    9. '```' → logprob: -16.654762268066406
    10. '=count' → logprob: -16.779762268066406

Token 209: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.014171505346894264
    2. ' stack' → logprob: -4.264171600341797
    3. '0' → logprob: -12.389171600341797
    4. '	stack' → logprob: -13.389171600341797
    5. '(stack' → logprob: -13.764171600341797
    6. '1' → logprob: -15.139171600341797
    7. '   ' → logprob: -15.514171600341797
    8. '                   ' → logprob: -15.764171600341797
    9. ' ' → logprob: -16.264171600341797
    10. 'Stack' → logprob: -16.389171600341797

Token 210: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.7954958821064793e-05
    2. '-' → logprob: -11.125018119812012
    3. '][-' → logprob: -12.875018119812012
    4. '.pop' → logprob: -15.250018119812012
    5. '```' → logprob: -15.250018119812012
    6. '...' → logprob: -16.875017166137695
    7. '`' → logprob: -17.000017166137695
    8. '(-' → logprob: -17.000017166137695
    9. '
' → logprob: -17.875017166137695
    10. '=-' → logprob: -18.125017166137695

Token 211: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -15.375000953674316
    3. '2' → logprob: -16.1875
    4. '```' → logprob: -16.5
    5. '11' → logprob: -16.625
    6. '-' → logprob: -16.6875
    7. 'len' → logprob: -16.6875
    8. '[' → logprob: -17.625
    9. '
' → logprob: -17.6875
    10. '   ' → logprob: -18.25

Token 212: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.2530107796192169
    2. '][' → logprob: -1.5030107498168945
    3. ')[' → logprob: -7.1280107498168945
    4. ' [' → logprob: -9.503010749816895
    5. ' ][' → logprob: -9.503010749816895
    6. ']' → logprob: -10.753010749816895
    7. '```' → logprob: -10.878010749816895
    8. '-' → logprob: -11.253010749816895
    9. ',' → logprob: -11.503010749816895
    10. ')][' → logprob: -11.503010749816895

Token 213: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.5094070477061905e-05
    2. ' ' → logprob: -12.000015258789062
    3. '[' → logprob: -13.125015258789062
    4. '```' → logprob: -13.250015258789062
    5. '-' → logprob: -13.812515258789062
    6. '
' → logprob: -14.000015258789062
    7. '   ' → logprob: -14.437515258789062
    8. '' → logprob: -15.187515258789062
    9. '0' → logprob: -15.687515258789062
    10. '][' → logprob: -15.875015258789062

Token 214: ']
' (ID: 1592)
  Prédit: ' -'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' -' → logprob: -0.14589792490005493
    2. '-' → logprob: -2.14589786529541
    3. ')' → logprob: -4.02089786529541
    4. '                   ' → logprob: -7.39589786529541
    5. ',' → logprob: -9.27089786529541
    6. ']' → logprob: -10.39589786529541
    7. ')-' → logprob: -10.89589786529541
    8. ')
' → logprob: -11.02089786529541
    9. ' )' → logprob: -11.52089786529541
    10. '[' → logprob: -11.64589786529541

Token 215: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.033095281571149826
    2. 'stack' → logprob: -3.533095359802246
    3. '               ' → logprob: -7.033095359802246
    4. '```' → logprob: -7.533095359802246
    5. '<|end|>' → logprob: -7.783095359802246
    6. '           ' → logprob: -7.908095359802246
    7. ' stack' → logprob: -7.908095359802246
    8. 'if' → logprob: -8.783095359802246
    9. '   ' → logprob: -9.658095359802246
    10. ')' → logprob: -9.658095359802246

Token 216: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.028648756444454193
    2. 'if' → logprob: -4.028648853302002
    3. '                   ' → logprob: -5.028648853302002
    4. 'while' → logprob: -6.028648853302002
    5. 'count' → logprob: -7.903648853302002
    6. 'del' → logprob: -8.403648376464844
    7. 'tail' → logprob: -8.653648376464844
    8. 'new' → logprob: -9.153648376464844
    9. 'total' → logprob: -9.153648376464844
    10. '               ' → logprob: -9.403648376464844

Token 217: '.pop' (ID: 15746)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.31328174471855164
    2. '.pop' → logprob: -1.313281774520874
    3. 'pop' → logprob: -11.063282012939453
    4. '=' → logprob: -12.563282012939453
    5. '[:-' → logprob: -14.563282012939453
    6. '][-' → logprob: -16.188282012939453
    7. '=-' → logprob: -16.688282012939453
    8. '.' → logprob: -17.063282012939453
    9. '-' → logprob: -17.188282012939453
    10. 'Pop' → logprob: -17.313282012939453

Token 218: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0007114782347343862
    2. '()
' → logprob: -7.250711441040039
    3. '()

' → logprob: -14.125711441040039
    4. '()\' → logprob: -15.250711441040039
    5. '(' → logprob: -15.500711441040039
    6. '())' → logprob: -16.37571144104004
    7. '()
' → logprob: -16.50071144104004
    8. '()]' → logprob: -16.62571144104004
    9. '()`' → logprob: -17.12571144104004
    10. '()</' → logprob: -17.37571144104004

Token 219: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0027314056642353535
    2. '<|end|>' → logprob: -6.8777313232421875
    3. 'if' → logprob: -7.3777313232421875
    4. '               ' → logprob: -7.6277313232421875
    5. '           ' → logprob: -8.752731323242188
    6. '                    
' → logprob: -9.127731323242188
    7. '```' → logprob: -9.377731323242188
    8. ' if' → logprob: -9.627731323242188
    9. '                    ' → logprob: -10.752731323242188
    10. '<|end|>' → logprob: -11.002731323242188

Token 220: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10297087579965591
    2. 'while' → logprob: -2.852970838546753
    3. '                   ' → logprob: -3.977970838546753
    4. 'count' → logprob: -4.477971076965332
    5. 'tail' → logprob: -6.477971076965332
    6. 'new' → logprob: -6.602971076965332
    7. 'total' → logprob: -6.852971076965332
    8. 'for' → logprob: -6.977971076965332
    9. 'stack' → logprob: -7.102971076965332
    10. ' if' → logprob: -7.227971076965332

Token 221: ' replace' (ID: 13284)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.046340785920619965
    2. 'while' → logprob: -3.9213407039642334
    3. 'count' → logprob: -4.6713409423828125
    4. 'removed' → logprob: -6.0463409423828125
    5. 'rem' → logprob: -6.5463409423828125
    6. 'left' → logprob: -6.5463409423828125
    7. 'new' → logprob: -6.6713409423828125
    8. ' if' → logprob: -6.7963409423828125
    9. 'remain' → logprob: -6.7963409423828125
    10. 'tail' → logprob: -6.9213409423828125

Token 222: ' with' (ID: 483)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.8574851751327515
    2. '                   ' → logprob: -1.6074851751327515
    3. 'stack' → logprob: -1.6074851751327515
    4. '(c' → logprob: -2.982485294342041
    5. '(stack' → logprob: -3.732485294342041
    6. 'with' → logprob: -3.982485294342041
    7. ' if' → logprob: -4.107485294342041
    8. '(' → logprob: -4.107485294342041
    9. 'tail' → logprob: -4.482485294342041
    10. 'right' → logprob: -4.732485294342041

Token 223: ' c' (ID: 274)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.00020711649267468601
    2. 'stack' → logprob: -9.50020694732666
    3. 'right' → logprob: -10.00020694732666
    4. '(right' → logprob: -10.25020694732666
    5. ' (' → logprob: -10.87520694732666
    6. '[(' → logprob: -11.37520694732666
    7. '(stack' → logprob: -12.25020694732666
    8. '(' → logprob: -13.25020694732666
    9. '[c' → logprob: -13.37520694732666
    10. '                   ' → logprob: -13.50020694732666

Token 224: ' repeated' (ID: 24161)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.009976114146411419
    2. 'stack' → logprob: -5.759975910186768
    3. 'if' → logprob: -6.134975910186768
    4. '(stack' → logprob: -6.134975910186768
    5. ',' → logprob: -7.009975910186768
    6. '               ' → logprob: -7.759975910186768
    7. '(' → logprob: -7.884975910186768
    8. ' if' → logprob: -8.384976387023926
    9. '           ' → logprob: -8.634976387023926
    10. '                    
' → logprob: -9.759976387023926

Token 225: ' tail' (ID: 12742)
  Prédit: '(t'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.6416383981704712
    2. 'tail' → logprob: -0.8916383981704712
    3. 'stack' → logprob: -3.7666382789611816
    4. '(stack' → logprob: -4.016638278961182
    5. '(c' → logprob: -4.891638278961182
    6. '(' → logprob: -5.141638278961182
    7. '                   ' → logprob: -5.516638278961182
    8. 't' → logprob: -7.391638278961182
    9. '(count' → logprob: -7.516638278961182
    10. 'tails' → logprob: -7.516638278961182

Token 226: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.23881280422210693
    2. '(t' → logprob: -2.4888129234313965
    3. '                   ' → logprob: -3.1138129234313965
    4. '(' → logprob: -3.2388129234313965
    5. 'tail' → logprob: -3.7388129234313965
    6. '               ' → logprob: -4.9888129234313965
    7. ',' → logprob: -5.3638129234313965
    8. 'count' → logprob: -5.8638129234313965
    9. 'tails' → logprob: -6.7388129234313965
    10. ' (' → logprob: -6.8638129234313965

Token 227: ' times' (ID: 4238)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.016428925096988678
    2. 'stack' → logprob: -4.3914289474487305
    3. 'if' → logprob: -6.5164289474487305
    4. '(stack' → logprob: -7.0164289474487305
    5. ',' → logprob: -7.2664289474487305
    6. '               ' → logprob: -8.39142894744873
    7. '           ' → logprob: -8.76642894744873
    8. ' if' → logprob: -8.89142894744873
    9. '(' → logprob: -9.01642894744873
    10. '                    
' → logprob: -10.39142894744873

Token 228: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.31759732961654663
    2. 'stack' → logprob: -1.3175973892211914
    3. 'if' → logprob: -6.817597389221191
    4. '           ' → logprob: -7.067597389221191
    5. '               ' → logprob: -7.192597389221191
    6. 'for' → logprob: -7.317597389221191
    7. '(stack' → logprob: -7.442597389221191
    8. 'while' → logprob: -9.442597389221191
    9. ' stack' → logprob: -9.692597389221191
    10. ',' → logprob: -9.692597389221191

Token 229: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.10089370608329773
    2. 'stack' → logprob: -2.47589373588562
    3. '(stack' → logprob: -5.225893497467041
    4. '               ' → logprob: -6.100893497467041
    5. '           ' → logprob: -6.975893497467041
    6. '(' → logprob: -7.225893497467041
    7. '```' → logprob: -7.475893497467041
    8. 'if' → logprob: -7.600893497467041
    9. ',' → logprob: -8.1008939743042
    10. 'for' → logprob: -8.3508939743042

Token 230: ' if' (ID: 538)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.2383555918931961
    2. 'for' → logprob: -1.7383556365966797
    3. 'if' (adapté à ' if') → logprob: -3.3633556365966797
    4. '                   ' → logprob: -6.86335563659668
    5. 'while' → logprob: -7.98835563659668
    6. '               ' → logprob: -9.23835563659668
    7. ' stack' → logprob: -10.23835563659668
    8. 'new' → logprob: -10.23835563659668
    9. ' for' → logprob: -10.61335563659668
    10. '   ' → logprob: -11.23835563659668

Token 231: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.3453614413738251
    2. 'tail' → logprob: -1.9703614711761475
    3. 'c' → logprob: -2.0953614711761475
    4. ' stack' → logprob: -4.220361232757568
    5. ' tail' → logprob: -5.220361232757568
    6. ' c' → logprob: -5.220361232757568
    7. 'not' → logprob: -5.970361232757568
    8. ' not' → logprob: -7.220361232757568
    9. '   ' → logprob: -8.470361709594727
    10. 'len' → logprob: -8.720361709594727

Token 232: ' and' (ID: 326)
  Prédit: 'and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'and' → logprob: -0.009782649576663971
    2. ' and' → logprob: -4.634782791137695
    3. '           ' → logprob: -10.884782791137695
    4. '               ' → logprob: -12.884782791137695
    5. '          ' → logprob: -14.009782791137695
    6. '                   ' → logprob: -14.509782791137695
    7. '[-' → logprob: -14.634782791137695
    8. '       ' → logprob: -14.884782791137695
    9. '            ' → logprob: -14.884782791137695
    10. ')' → logprob: -14.884782791137695

Token 233: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -3.5954712075181305e-05
    2. ' stack' → logprob: -10.250036239624023
    3. '                   ' → logprob: -16.125036239624023
    4. '               ' → logprob: -16.250036239624023
    5. '(stack' → logprob: -16.250036239624023
    6. '                       ' → logprob: -16.500036239624023
    7. '	stack' → logprob: -16.875036239624023
    8. '   ' → logprob: -18.750036239624023
    9. '                               ' → logprob: -18.750036239624023
    10. '           ' → logprob: -18.750036239624023

Token 234: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -6.392202976712724e-06
    2. 'and' → logprob: -13.000006675720215
    3. '[' → logprob: -13.125006675720215
    4. ' and' → logprob: -13.375006675720215
    5. '[
' → logprob: -15.500006675720215
    6. '][-' → logprob: -15.875006675720215
    7. '```' → logprob: -16.2500057220459
    8. '...' → logprob: -17.8750057220459
    9. '``' → logprob: -18.6250057220459
    10. ''s' → logprob: -18.8750057220459

Token 235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021224225929472595
    2. '-' → logprob: -8.500212669372559
    3. '[-' → logprob: -12.375212669372559
    4. ' ' → logprob: -14.250212669372559
    5. '```' → logprob: -14.562712669372559
    6. '2' → logprob: -14.625212669372559
    7. ']' → logprob: -14.750212669372559
    8. '[' → logprob: -14.875212669372559
    9. '0' → logprob: -15.312712669372559
    10. '   ' → logprob: -15.750212669372559

Token 236: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -7.755678961984813e-05
    2. '][' → logprob: -9.625077247619629
    3. ')[' → logprob: -12.375077247619629
    4. ' [' → logprob: -13.000077247619629
    5. '0' → logprob: -13.375077247619629
    6. '```' → logprob: -13.875077247619629
    7. '()[' → logprob: -13.875077247619629
    8. '(' → logprob: -15.125077247619629
    9. '[
' → logprob: -15.500077247619629
    10. ')' → logprob: -16.250078201293945

Token 237: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0007418495370075107
    2. '[' → logprob: -7.250741958618164
    3. '1' → logprob: -10.875741958618164
    4. ' ' → logprob: -11.625741958618164
    5. '
' → logprob: -13.375741958618164
    6. '   ' → logprob: -14.250741958618164
    7. '(' → logprob: -14.750741958618164
    8. '```' → logprob: -15.250741958618164
    9. '][' → logprob: -15.563241958618164
    10. '۰' → logprob: -16.063241958618164

Token 238: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.016590142622590065
    2. '==' → logprob: -4.141590118408203
    3. ')' → logprob: -7.891590118408203
    4. ']' → logprob: -9.516590118408203
    5. ']==' → logprob: -9.641590118408203
    6. ')==' → logprob: -10.516590118408203
    7. ' !=' → logprob: -11.891590118408203
    8. ' ' → logprob: -12.516590118408203
    9. '```' → logprob: -13.516590118408203
    10. '[' → logprob: -13.641590118408203

Token 239: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.1800111085176468
    2. '==' → logprob: -1.8050111532211304
    3. ' !=' → logprob: -8.430010795593262
    4. '!=' → logprob: -10.180010795593262
    5. ' ' → logprob: -13.180010795593262
    6. '```' → logprob: -13.555010795593262
    7. '[' → logprob: -13.680010795593262
    8. ')==' → logprob: -13.680010795593262
    9. ')' → logprob: -13.930010795593262
    10. '==
' → logprob: -14.055010795593262

Token 240: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0036006635054945946
    2. ' c' → logprob: -5.628600597381592
    3. '   ' → logprob: -15.25360107421875
    4. '                   ' → logprob: -16.75360107421875
    5. '               ' → logprob: -16.75360107421875
    6. '	c' → logprob: -17.00360107421875
    7. '(c' → logprob: -17.25360107421875
    8. ' ' → logprob: -17.37860107421875
    9. ')c' → logprob: -17.37860107421875
    10. '           ' → logprob: -17.75360107421875

Token 241: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.2546153664588928
    2. ':' → logprob: -1.504615306854248
    3. '                       ' → logprob: -6.504615306854248
    4. '):
' → logprob: -7.129615306854248
    5. ',' → logprob: -9.254615783691406
    6. '<|end|>' → logprob: -9.379615783691406
    7. '                   ' → logprob: -10.004615783691406
    8. '       ' → logprob: -10.629615783691406
    9. '(stack' → logprob: -10.629615783691406
    10. '():
' → logprob: -10.879615783691406

Token 242: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.007637627888470888
    2. 'stack' → logprob: -5.1326375007629395
    3. '(stack' → logprob: -7.7576375007629395
    4. '                        
' → logprob: -7.7576375007629395
    5. '                   ' → logprob: -8.257637977600098
    6. '               ' → logprob: -8.382637977600098
    7. ' stack' → logprob: -8.882637977600098
    8. '       ' → logprob: -9.632637977600098
    9. '   ' → logprob: -10.882637977600098
    10. '```' → logprob: -10.882637977600098

Token 243: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.011753556318581104
    2. ' stack' → logprob: -4.511753559112549
    3. '(stack' → logprob: -7.261753559112549
    4. ' (' → logprob: -13.38675308227539
    5. '(' → logprob: -14.26175308227539
    6. '                           ' → logprob: -14.76175308227539
    7. '
' → logprob: -15.13675308227539
    8. '	stack' → logprob: -15.26175308227539
    9. '_stack' → logprob: -15.88675308227539
    10. '                               ' → logprob: -16.01175308227539

Token 244: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: 0.0
    2. '-' → logprob: -18.375
    3. '
' → logprob: -19.5
    4. '][-' → logprob: -19.75
    5. '=' → logprob: -19.875
    6. '[' → logprob: -20.125
    7. '           ' → logprob: -21.0
    8. '(-' → logprob: -21.0
    9. '[:-' → logprob: -21.375
    10. '```' → logprob: -21.625

Token 245: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. '-' → logprob: -13.37500286102295
    3. '[-' → logprob: -14.50000286102295
    4. '2' → logprob: -15.37500286102295
    5. '(' → logprob: -16.250001907348633
    6. '[' → logprob: -16.812501907348633
    7. '```' → logprob: -16.937501907348633
    8. '(-' → logprob: -17.375001907348633
    9. '
' → logprob: -17.500001907348633
    10. ' ' → logprob: -17.687501907348633

Token 246: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.28139275312423706
    2. ' =' → logprob: -1.4063928127288818
    3. ']' → logprob: -9.031393051147461
    4. '[' → logprob: -10.281393051147461
    5. '=(' → logprob: -10.406393051147461
    6. ')' → logprob: -10.531393051147461
    7. ']=' → logprob: -10.531393051147461
    8. ')=' → logprob: -13.281393051147461
    9. '=
' → logprob: -14.906393051147461
    10. '           ' → logprob: -14.906393051147461

Token 247: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.008617527782917023
    2. ' =' → logprob: -4.758617401123047
    3. '=(' → logprob: -12.758617401123047
    4. '(' → logprob: -16.258617401123047
    5. '[' → logprob: -16.383617401123047
    6. '=
' → logprob: -17.008617401123047
    7. ')' → logprob: -18.258617401123047
    8. '＝' → logprob: -18.383617401123047
    9. '=

' → logprob: -18.758617401123047
    10. ' ' → logprob: -19.133617401123047

Token 248: ' (' (ID: 350)
  Prédit: ' ('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.4756203889846802
    2. '(c' → logprob: -0.9756203889846802
    3. '(stack' → logprob: -6.475620269775391
    4. '(st' → logprob: -14.47562026977539
    5. ' stack' → logprob: -15.35062026977539
    6. 'stack' → logprob: -15.60062026977539
    7. '(' → logprob: -15.60062026977539
    8. ' c' → logprob: -15.72562026977539
    9. ' ' → logprob: -15.85062026977539
    10. '(s' → logprob: -16.10062026977539

Token 249: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.001987994182854891
    2. ' c' → logprob: -6.251987934112549
    3. '(c' → logprob: -9.751988410949707
    4. ')c' → logprob: -14.251988410949707
    5. 'stack' → logprob: -15.251988410949707
    6. ' (' → logprob: -15.751988410949707
    7. '	c' → logprob: -17.00198745727539
    8. '(' → logprob: -17.12698745727539
    9. '_c' → logprob: -17.25198745727539
    10. '%c' → logprob: -17.75198745727539

Token 250: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.2200749754119897e-06
    2. ' ,' → logprob: -13.625001907348633
    3. 'stack' → logprob: -14.250001907348633
    4. '(stack' → logprob: -15.625001907348633
    5. ',
' → logprob: -16.375001907348633
    6. '[' → logprob: -17.250001907348633
    7. ' stack' → logprob: -17.375001907348633
    8. '),' → logprob: -17.625001907348633
    9. ')' → logprob: -18.375001907348633
    10. '‌,' → logprob: -18.375001907348633

Token 251: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.001171056181192398
    2. ' stack' → logprob: -6.751171112060547
    3. '(stack' → logprob: -14.626171112060547
    4. '	stack' → logprob: -16.126171112060547
    5. '                           ' → logprob: -17.001171112060547
    6. 'stackoverflow' → logprob: -17.001171112060547
    7. '                       ' → logprob: -17.751171112060547
    8. '                               ' → logprob: -17.876171112060547
    9. ' ' → logprob: -18.376171112060547
    10. '.stack' → logprob: -18.626171112060547

Token 252: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.6240566083070007e-06
    2. '-' → logprob: -13.375001907348633
    3. '][-' → logprob: -17.250001907348633
    4. '[' → logprob: -18.625001907348633
    5. '
' → logprob: -19.250001907348633
    6. '1' → logprob: -19.625001907348633
    7. '```' → logprob: -20.500001907348633
    8. '#' → logprob: -20.625001907348633
    9. '{-' → logprob: -20.625001907348633
    10. '``' → logprob: -21.000001907348633

Token 253: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00012487331696320325
    2. '-' → logprob: -9.12512493133545
    3. '[' → logprob: -11.75012493133545
    4. '[-' → logprob: -12.12512493133545
    5. '
' → logprob: -14.50012493133545
    6. ' ' → logprob: -14.68762493133545
    7. 'last' → logprob: -15.50012493133545
    8. '][-' → logprob: -16.312623977661133
    9. ' -' → logprob: -16.562623977661133
    10. '   ' → logprob: -16.562623977661133

Token 254: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.06371631473302841
    2. '[' → logprob: -2.813716411590576
    3. '1' → logprob: -6.438716411590576
    4. ' ][' → logprob: -10.188715934753418
    5. ')[' → logprob: -10.438715934753418
    6. ''][' → logprob: -10.438715934753418
    7. '-' → logprob: -10.688715934753418
    8. '"][' → logprob: -11.688715934753418
    9. '   ' → logprob: -12.188715934753418
    10. ']' → logprob: -13.438715934753418

Token 255: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -4.334533878136426e-05
    2. '[' → logprob: -10.125042915344238
    3. '
' → logprob: -13.875042915344238
    4. ' ' → logprob: -14.000042915344238
    5. '0' → logprob: -14.812542915344238
    6. '```' → logprob: -15.687542915344238
    7. '   ' → logprob: -15.937542915344238
    8. '(' → logprob: -16.187543869018555
    9. '۱' → logprob: -16.687543869018555
    10. '１' → logprob: -16.812543869018555

Token 256: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.023246755823493004
    2. '+' → logprob: -3.7732467651367188
    3. ' ' → logprob: -14.023246765136719
    4. ')' → logprob: -15.773246765136719
    5. ' +
' → logprob: -16.39824676513672
    6. ' plus' → logprob: -16.64824676513672
    7. ' ' → logprob: -16.64824676513672
    8. ')+' → logprob: -17.39824676513672
    9. ' )' → logprob: -18.27324676513672
    10. '＋' → logprob: -18.64824676513672

Token 257: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.10020710527896881
    2. '+' → logprob: -2.3502070903778076
    3. ' +
' → logprob: -15.100207328796387
    4. ' ' → logprob: -15.850207328796387
    5. '+
' → logprob: -17.10020637512207
    6. ' ' → logprob: -17.60020637512207
    7. '＋' → logprob: -18.35020637512207
    8. ' +=' → logprob: -18.60020637512207
    9. ' +
' → logprob: -18.85020637512207
    10. '+t' → logprob: -18.85020637512207

Token 258: ' tail' (ID: 12742)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.2254161536693573
    2. ' tail' → logprob: -1.6004161834716797
    3. '   ' → logprob: -13.60041618347168
    4. ' ' → logprob: -14.22541618347168
    5. 'tails' → logprob: -14.85041618347168
    6. '           ' → logprob: -15.47541618347168
    7. '    ' → logprob: -15.47541618347168
    8. '-tail' → logprob: -15.85041618347168
    9. '.tail' → logprob: -16.10041618347168
    10. '_tail' → logprob: -16.10041618347168

Token 259: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.3080716346157715e-05
    2. 'count' → logprob: -10.750022888183594
    3. 'Count' → logprob: -14.000022888183594
    4. ' count' → logprob: -16.250022888183594
    5. '[' → logprob: -16.375022888183594
    6. '_COUNT' → logprob: -16.625022888183594
    7. '-count' → logprob: -16.875022888183594
    8. '                   ' → logprob: -17.000022888183594
    9. '   ' → logprob: -17.000022888183594
    10. '               ' → logprob: -17.125022888183594

Token 260: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.07036574184894562
    2. ')' → logprob: -2.6953656673431396
    3. '                   ' → logprob: -7.820365905761719
    4. ')
' → logprob: -11.320365905761719
    5. '                       ' → logprob: -12.320365905761719
    6. ')

' → logprob: -12.945365905761719
    7. '               ' → logprob: -12.945365905761719
    8. ' )
' → logprob: -12.945365905761719
    9. '           ' → logprob: -13.820365905761719
    10. '```' → logprob: -14.445365905761719

Token 261: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.024451525881886482
    2. 'else' → logprob: -3.899451494216919
    3. '```' → logprob: -5.649451732635498
    4. '               ' → logprob: -8.14945125579834
    5. ' else' → logprob: -9.77445125579834
    6. '           ' → logprob: -10.77445125579834
    7. '                       ' → logprob: -12.27445125579834
    8. '                  ' → logprob: -12.52445125579834
    9. '   ' → logprob: -13.27445125579834
    10. '<|end|>' → logprob: -13.52445125579834

Token 262: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.1744636446237564
    2. ' else' → logprob: -2.4244637489318848
    3. '                   ' → logprob: -2.7994637489318848
    4. '               ' → logprob: -4.549463748931885
    5. '```' → logprob: -9.424463272094727
    6. '	else' → logprob: -10.924463272094727
    7. '   ' → logprob: -11.299463272094727
    8. '           ' → logprob: -11.674463272094727
    9. '       ' → logprob: -12.174463272094727
    10. ' ' → logprob: -12.424463272094727

Token 263: ':
' (ID: 734)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.001420472632162273
    2. '                   ' → logprob: -7.501420497894287
    3. '               ' → logprob: -8.126420021057129
    4. ':' → logprob: -8.376420021057129
    5. '       ' → logprob: -9.501420021057129
    6. '(stack' → logprob: -9.751420021057129
    7. 'stack' → logprob: -9.876420021057129
    8. ' stack' → logprob: -10.626420021057129
    9. ':
' → logprob: -10.876420021057129
    10. '                               ' → logprob: -11.251420021057129

Token 264: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.013723374344408512
    2. 'stack' → logprob: -4.763723373413086
    3. '                   ' → logprob: -5.638723373413086
    4. '               ' → logprob: -7.138723373413086
    5. '       ' → logprob: -7.888723373413086
    6. ' stack' → logprob: -8.263723373413086
    7. '           ' → logprob: -10.013723373413086
    8. '   ' → logprob: -11.138723373413086
    9. '	stack' → logprob: -11.138723373413086
    10. '```' → logprob: -11.513723373413086

Token 265: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.0025611496530473232
    2. ' stack' → logprob: -6.002561092376709
    3. '                       ' → logprob: -9.502561569213867
    4. '   ' → logprob: -12.877561569213867
    5. '           ' → logprob: -13.127561569213867
    6. '               ' → logprob: -13.252561569213867
    7. '                   ' → logprob: -13.377561569213867
    8. '       ' → logprob: -13.877561569213867
    9. '	stack' → logprob: -14.127561569213867
    10. ' ' → logprob: -14.752561569213867

Token 266: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -1.3782830137643032e-05
    2. '.' → logprob: -11.25001335144043
    3. 'append' → logprob: -15.37501335144043
    4. '.app' → logprob: -16.00001335144043
    5. ').' → logprob: -16.37501335144043
    6. '.extend' → logprob: -16.75001335144043
    7. '.Append' → logprob: -16.75001335144043
    8. ' .' → logprob: -17.25001335144043
    9. 'Append' → logprob: -18.75001335144043
    10. '].' → logprob: -18.75001335144043

Token 267: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.00023214559769257903
    2. '(c' → logprob: -8.875231742858887
    3. '(' → logprob: -9.375231742858887
    4. ' (' → logprob: -12.375231742858887
    5. ' ((' → logprob: -12.875231742858887
    6. ' ' → logprob: -15.250231742858887
    7. '(
' → logprob: -15.875231742858887
    8. '   ' → logprob: -16.375232696533203
    9. '```' → logprob: -16.750232696533203
    10. '[(' → logprob: -17.500232696533203

Token 268: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -4.127333340875339e-06
    2. '(c' → logprob: -12.625003814697266
    3. ' c' → logprob: -14.500003814697266
    4. ')c' → logprob: -15.125003814697266
    5. '   ' → logprob: -17.750003814697266
    6. '	c' → logprob: -18.750003814697266
    7. ',c' → logprob: -19.375003814697266
    8. ' (' → logprob: -19.625003814697266
    9. '```' → logprob: -20.625003814697266
    10. 'с' → logprob: -20.750003814697266

Token 269: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.954393079970032e-05
    2. ' ,' → logprob: -10.125049591064453
    3. '),' → logprob: -12.500049591064453
    4. 'tail' → logprob: -12.625049591064453
    5. ',
' → logprob: -13.625049591064453
    6. ',t' → logprob: -14.625049591064453
    7. '‌,' → logprob: -15.875049591064453
    8. ' tail' → logprob: -16.500049591064453
    9. ',),' → logprob: -16.750049591064453
    10. '```' → logprob: -16.750049591064453

Token 270: ' tail' (ID: 12742)
  Prédit: 'tail'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'tail' → logprob: -0.0052350712940096855
    2. ' tail' → logprob: -5.255235195159912
    3. 'tails' → logprob: -14.380234718322754
    4. '   ' → logprob: -15.005234718322754
    5. '           ' → logprob: -16.00523567199707
    6. 't' → logprob: -16.88023567199707
    7. ' ' → logprob: -16.88023567199707
    8. '.tail' → logprob: -17.38023567199707
    9. '-tail' → logprob: -17.75523567199707
    10. 'Tail' → logprob: -17.88023567199707

Token 271: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -5.319370302458992e-06
    2. 'count' → logprob: -12.625005722045898
    3. '_COUNT' → logprob: -14.500005722045898
    4. 'tail' → logprob: -15.000005722045898
    5. '[' → logprob: -15.250005722045898
    6. '   ' → logprob: -15.500005722045898
    7. '1' → logprob: -15.875005722045898
    8. 'Count' → logprob: -15.875005722045898
    9. ' _' → logprob: -16.1250057220459
    10. ']_' → logprob: -16.8750057220459

Token 272: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.0013790446100756526
    2. '))
' → logprob: -7.001379013061523
    3. ')' → logprob: -7.876379013061523
    4. ' ))' → logprob: -9.626379013061523
    5. '+' → logprob: -11.501379013061523
    6. ')))' → logprob: -11.876379013061523
    7. ')
' → logprob: -14.251379013061523
    8. '))

' → logprob: -14.376379013061523
    9. ' )' → logprob: -14.626379013061523
    10. '   ' → logprob: -14.626379013061523

Token 273: '                   ' (ID: 699)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15513890981674194
    2. '   ' → logprob: -2.0301389694213867
    3. '<|end|>' → logprob: -5.155138969421387
    4. 'for' → logprob: -6.405138969421387
    5. '```' → logprob: -6.405138969421387
    6. ')' → logprob: -6.530138969421387
    7. ' print' → logprob: -8.030138969421387
    8. '    
' → logprob: -8.155138969421387
    9. 'if' → logprob: -8.530138969421387
    10. '       ' → logprob: -8.530138969421387

Token 274: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5569888949394226
    2. '   ' → logprob: -1.6819889545440674
    3. 'if' → logprob: -2.4319889545440674
    4. 'while' → logprob: -3.6819889545440674
    5. 'for' → logprob: -3.8069889545440674
    6. ' if' → logprob: -3.9319889545440674
    7. '       ' → logprob: -4.056988716125488
    8. ' for' → logprob: -4.681988716125488
    9. '<|end|>' → logprob: -4.681988716125488
    10. '                   ' → logprob: -4.806988716125488

Token 275: ' then' (ID: 1815)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -1.127898931503296
    2. 'if' → logprob: -1.752898931503296
    3. 'print' → logprob: -1.877898931503296
    4. '#' → logprob: -2.002898931503296
    5. 'for' → logprob: -3.252898931503296
    6. '   ' → logprob: -3.627898931503296
    7. 'continue' → logprob: -3.627898931503296
    8. '                   ' → logprob: -3.877898931503296
    9. 'stack' → logprob: -4.002899169921875
    10. 'result' → logprob: -4.252899169921875

Token 276: ' put' (ID: 3006)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -1.3305890560150146
    2. 'while' → logprob: -1.5805890560150146
    3. '#' → logprob: -1.7055890560150146
    4. 'stack' → logprob: -1.9555890560150146
    5. '                   ' → logprob: -2.7055890560150146
    6. ' if' → logprob: -3.3305890560150146
    7. ' while' → logprob: -3.7055890560150146
    8. ' #' → logprob: -4.330589294433594
    9. ' stack' → logprob: -4.455589294433594
    10. '               ' → logprob: -4.580589294433594

Token 277: ' c' (ID: 274)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.06815087050199509
    2. 'stack' → logprob: -3.068150758743286
    3. '(stack' → logprob: -4.568150997161865
    4. ' (' → logprob: -5.193150997161865
    5. '(' → logprob: -6.568150997161865
    6. '((' → logprob: -6.943150997161865
    7. ' stack' → logprob: -7.818150997161865
    8. 'right' → logprob: -9.568150520324707
    9. 'new' → logprob: -9.693150520324707
    10. '(new' → logprob: -9.818150520324707

Token 278: ' stone' (ID: 14352)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.5537221431732178
    2. '.append' → logprob: -0.9287221431732178
    3. '[-' → logprob: -3.6787221431732178
    4. ',
' → logprob: -6.678722381591797
    5. ',-' → logprob: -6.928722381591797
    6. ' ,' → logprob: -6.928722381591797
    7. 'append' → logprob: -7.678722381591797
    8. 'stack' → logprob: -8.303722381591797
    9. '   ' → logprob: -9.053722381591797
    10. '[' → logprob: -9.428722381591797

Token 279: ' at' (ID: 540)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.23815879225730896
    2. '.append' → logprob: -2.613158702850342
    3. 'stack' → logprob: -3.238158702850342
    4. '[-' → logprob: -3.863158702850342
    5. '[' → logprob: -4.113158702850342
    6. ' =' → logprob: -4.363158702850342
    7. '               ' → logprob: -4.488158702850342
    8. '           ' → logprob: -4.738158702850342
    9. '(stack' → logprob: -4.988158702850342
    10. ',' → logprob: -5.113158702850342

Token 280: ' right' (ID: 1849)
  Prédit: 'the'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'the' → logprob: -0.41223204135894775
    2. 'stack' → logprob: -1.2872320413589478
    3. ' the' → logprob: -4.037231922149658
    4. '(stack' → logprob: -4.662231922149658
    5. 'top' → logprob: -4.787231922149658
    6. '-' → logprob: -4.912231922149658
    7. ' stack' → logprob: -5.037231922149658
    8. '(' → logprob: -5.537231922149658
    9. 'end' → logprob: -5.537231922149658
    10. '(-' → logprob: -6.162231922149658

Token 281: ' end' (ID: 1268)
  Prédit: '[-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00940612144768238
    2. '-' → logprob: -4.884406089782715
    3. '-end' → logprob: -6.884406089782715
    4. 'end' → logprob: -8.384406089782715
    5. '.append' → logprob: -8.634406089782715
    6. '```' → logprob: -9.134406089782715
    7. '][-' → logprob: -9.759406089782715
    8. '_end' → logprob: -10.384406089782715
    9. '           ' → logprob: -10.884406089782715
    10. '   ' → logprob: -11.009406089782715

Token 282: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.005939463619142771
    2. '           ' → logprob: -6.005939483642578
    3. '               ' → logprob: -6.630939483642578
    4. '                    
' → logprob: -7.130939483642578
    5. '       ' → logprob: -8.130939483642578
    6. '[' → logprob: -8.630939483642578
    7. '   ' → logprob: -8.755939483642578
    8. 'stack' → logprob: -8.880939483642578
    9. ',' → logprob: -9.380939483642578
    10. '(stack' → logprob: -9.380939483642578

Token 283: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0037322607822716236
    2. 'stack' → logprob: -6.628732204437256
    3. '           ' → logprob: -7.128732204437256
    4. '               ' → logprob: -7.503732204437256
    5. '   ' → logprob: -8.003732681274414
    6. '```' → logprob: -8.878732681274414
    7. '       ' → logprob: -9.128732681274414
    8. '[' → logprob: -9.253732681274414
    9. '                       ' → logprob: -9.378732681274414
    10. '<|end|>' → logprob: -9.628732681274414

Token 284: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' (adapté à ' stack') → logprob: -0.03765064477920532
    2. 'if' → logprob: -3.7876505851745605
    3. ' stack' → logprob: -4.5376505851745605
    4. ' if' → logprob: -6.1626505851745605
    5. '(stack' → logprob: -7.1626505851745605
    6. '                   ' → logprob: -7.5376505851745605
    7. ' (' → logprob: -9.537651062011719
    8. '(' → logprob: -10.037651062011719
    9. '                       ' → logprob: -11.162651062011719
    10. '               ' → logprob: -11.162651062011719

Token 285: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -0.00010950337309623137
    2. '.append' → logprob: -9.125109672546387
    3. '=' → logprob: -15.750109672546387
    4. '```' → logprob: -16.50010871887207
    5. '   ' → logprob: -16.75010871887207
    6. '       ' → logprob: -16.87510871887207
    7. '
' → logprob: -17.00010871887207
    8. '][-' → logprob: -17.12510871887207
    9. '`' → logprob: -17.50010871887207
    10. '-' → logprob: -17.50010871887207

Token 286: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.7432603272027336e-06
    2. '(' → logprob: -14.625001907348633
    3. '[' → logprob: -15.000001907348633
    4. '2' → logprob: -15.125001907348633
    5. ']' → logprob: -15.437501907348633
    6. ' ' → logprob: -16.000001907348633
    7. '```' → logprob: -16.125001907348633
    8. ')' → logprob: -17.312501907348633
    9. '[-' → logprob: -17.625001907348633
    10. '0' → logprob: -17.687501907348633

Token 287: ']' (ID: 60)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.01695599965751171
    2. ']' → logprob: -4.516955852508545
    3. ' =' → logprob: -5.266955852508545
    4. '=(' → logprob: -7.891955852508545
    5. ')' → logprob: -8.891956329345703
    6. ']=' → logprob: -9.016956329345703
    7. '[' → logprob: -9.641956329345703
    8. ']=(' → logprob: -10.516956329345703
    9. ')=' → logprob: -12.641956329345703
    10. '   ' → logprob: -14.266956329345703

Token 288: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.00020509003661572933
    2. ' =' → logprob: -8.500205039978027
    3. '=(' → logprob: -13.375205039978027
    4. '=c' → logprob: -17.750205993652344
    5. '[' → logprob: -19.250205993652344
    6. '(' → logprob: -19.500205993652344
    7. '=

' → logprob: -20.000205993652344
    8. '=
' → logprob: -20.375205993652344
    9. '+=' → logprob: -20.500205993652344
    10. '＝' → logprob: -20.500205993652344

Token 289: ' (' (ID: 350)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.012631134130060673
    2. ' (' → logprob: -5.012630939483643
    3. '(stack' → logprob: -5.137630939483643
    4. '(st' → logprob: -10.7626314163208
    5. 'stack' → logprob: -13.0126314163208
    6. '(C' → logprob: -13.8876314163208
    7. '(s' → logprob: -14.1376314163208
    8. ' stack' → logprob: -14.3876314163208
    9. '(' → logprob: -14.7626314163208
    10. '(chain' → logprob: -16.512630462646484

Token 290: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0007696056272834539
    2. ' c' → logprob: -7.25076961517334
    3. 'stack' → logprob: -9.75076961517334
    4. ' stack' → logprob: -14.62576961517334
    5. ')c' → logprob: -14.75076961517334
    6. '(c' → logprob: -15.37576961517334
    7. '	c' → logprob: -16.125768661499023
    8. '(stack' → logprob: -16.875768661499023
    9. '   ' → logprob: -17.063268661499023
    10. '_c' → logprob: -17.500768661499023

Token 291: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.4121114822482923e-06
    2. ' ,' → logprob: -12.875003814697266
    3. 'stack' → logprob: -14.250003814697266
    4. ',
' → logprob: -16.875003814697266
    5. '(stack' → logprob: -16.875003814697266
    6. '`,' → logprob: -17.500003814697266
    7. ' stack' → logprob: -17.625003814697266
    8. '[' → logprob: -17.625003814697266
    9. '‌,' → logprob: -17.875003814697266
    10. '),' → logprob: -19.000003814697266

Token 292: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -1.9266199160483666e-05
    2. ' stack' → logprob: -10.875019073486328
    3. 'tail' → logprob: -16.125019073486328
    4. '   ' → logprob: -17.750019073486328
    5. '	stack' → logprob: -17.750019073486328
    6. '(stack' → logprob: -18.000019073486328
    7. 'stone' → logprob: -18.375019073486328
    8. '               ' → logprob: -19.125019073486328
    9. '                   ' → logprob: -19.125019073486328
    10. 'st' → logprob: -19.125019073486328

Token 293: '[-' (ID: 17503)
  Prédit: '[-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[-' → logprob: -1.2664456789934775e-06
    2. '-' → logprob: -13.875000953674316
    3. '[' → logprob: -15.500000953674316
    4. '][-' → logprob: -17.625001907348633
    5. '1' → logprob: -17.750001907348633
    6. '```' → logprob: -18.375001907348633
    7. '`' → logprob: -19.250001907348633
    8. '
' → logprob: -19.375001907348633
    9. '``' → logprob: -19.375001907348633
    10. '[:-' → logprob: -19.625001907348633

Token 294: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.4391956685576588e-05
    2. '-' → logprob: -10.875024795532227
    3. '[' → logprob: -13.250024795532227
    4. '[-' → logprob: -13.750024795532227
    5. ' ' → logprob: -13.812524795532227
    6. '
' → logprob: -14.687524795532227
    7. '```' → logprob: -15.500024795532227
    8. '   ' → logprob: -15.812524795532227
    9. '１' → logprob: -16.562524795532227
    10. '`' → logprob: -16.750024795532227

Token 295: '][' (ID: 2696)
  Prédit: '['
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.4301404356956482
    2. '][' → logprob: -1.055140495300293
    3. '-' → logprob: -7.430140495300293
    4. '[-' → logprob: -8.055140495300293
    5. '1' → logprob: -8.430140495300293
    6. ')[' → logprob: -9.180140495300293
    7. ']' → logprob: -9.930140495300293
    8. '][-' → logprob: -10.055140495300293
    9. ' ][' → logprob: -10.180140495300293
    10. '   ' → logprob: -10.680140495300293

Token 296: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00041220002458430827
    2. '-' → logprob: -8.125411987304688
    3. '[' → logprob: -9.375411987304688
    4. ' ' → logprob: -11.250411987304688
    5. 'stack' → logprob: -11.750411987304688
    6. '
' → logprob: -13.000411987304688
    7. '   ' → logprob: -13.250411987304688
    8. '0' → logprob: -13.937911987304688
    9. '１' → logprob: -14.125411987304688
    10. '[-' → logprob: -14.312911987304688

Token 297: ']' (ID: 60)
  Prédit: ' +'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.023248620331287384
    2. '+' → logprob: -3.7732486724853516
    3. ')' → logprob: -13.273248672485352
    4. ' ' → logprob: -14.023248672485352
    5. ' ' → logprob: -15.148248672485352
    6. ' plus' → logprob: -15.148248672485352
    7. ' )' → logprob: -17.27324867248535
    8. ')+' → logprob: -18.14824867248535
    9. ' +
' → logprob: -18.27324867248535
    10. '   ' → logprob: -18.39824867248535

Token 298: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.2519311308860779
    2. '+' → logprob: -1.5019311904907227
    3. ')' → logprob: -13.626931190490723
    4. ' ' → logprob: -14.626931190490723
    5. ' plus' → logprob: -15.626931190490723
    6. ' ' → logprob: -16.501930236816406
    7. '+)' → logprob: -17.126930236816406
    8. ' )' → logprob: -17.251930236816406
    9. ' +
' → logprob: -17.251930236816406
    10. ')+' → logprob: -17.626930236816406

Token 299: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004623203072696924
    2. ' ' → logprob: -5.3796234130859375
    3. '   ' → logprob: -13.129623413085938
    4. '0' → logprob: -14.879623413085938
    5. ')' → logprob: -14.879623413085938
    6. '  ' → logprob: -16.567123413085938
    7. '2' → logprob: -16.942123413085938
    8. ' ' → logprob: -17.129623413085938
    9. '                   ' → logprob: -17.192123413085938
    10. '           ' → logprob: -17.254623413085938

Token 300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00010962257510982454
    2. ' ' → logprob: -9.125109672546387
    3. '   ' → logprob: -14.500109672546387
    4. ')' → logprob: -16.75010871887207
    5. '```' → logprob: -17.00010871887207
    6. '  ' → logprob: -17.25010871887207
    7. '
' → logprob: -18.18760871887207
    8. '           ' → logprob: -18.31260871887207
    9. '0' → logprob: -18.37510871887207
    10. '       ' → logprob: -18.75010871887207

Token 301: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001613459608051926
    2. ')
' → logprob: -8.750161170959473
    3. '       ' → logprob: -13.625161170959473
    4. ' )' → logprob: -14.250161170959473
    5. '   ' → logprob: -14.375161170959473
    6. '<|end|>' → logprob: -16.12516212463379
    7. '```' → logprob: -16.62516212463379
    8. '")' → logprob: -16.87516212463379
    9. '`)' → logprob: -17.25016212463379
    10. '))' → logprob: -17.37516212463379

Token 302: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.5250594615936279
    2. '<|end|>' → logprob: -1.275059461593628
    3. '```' → logprob: -2.400059461593628
    4. '   ' → logprob: -3.775059461593628
    5. 'for' → logprob: -5.025059700012207
    6. ')' → logprob: -5.775059700012207
    7. 'if' → logprob: -6.775059700012207
    8. '
' → logprob: -7.025059700012207
    9. '#' → logprob: -7.400059700012207
    10. '``' → logprob: -7.650059700012207

Token 303: ' #' (ID: 1069)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.06475574523210526
    2. 'result' → logprob: -3.43975567817688
    3. 'total' → logprob: -4.189755916595459
    4. 'for' → logprob: -4.939755916595459
    5. 'if' → logprob: -6.064755916595459
    6. 'answer' → logprob: -6.439755916595459
    7. 'count' → logprob: -6.564755916595459
    8. 'max' → logprob: -7.064755916595459
    9. 'length' → logprob: -7.564755916595459
    10. 'res' → logprob: -7.689755916595459

Token 304: ' count' (ID: 3605)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0035019537899643183
    2. 'if' → logprob: -6.503501892089844
    3. 'result' → logprob: -7.128501892089844
    4. 'for' → logprob: -7.878501892089844
    5. 'total' → logprob: -8.128501892089844
    6. ' print' → logprob: -8.378501892089844
    7. '   ' → logprob: -9.378501892089844
    8. 'count' → logprob: -9.628501892089844
    9. 'answer' → logprob: -10.003501892089844
    10. 'max' → logprob: -10.128501892089844

Token 305: ' white' (ID: 6461)
  Prédit: 'result'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'result' → logprob: -0.8530901074409485
    2. '=' → logprob: -1.1030900478363037
    3. 'total' → logprob: -2.1030900478363037
    4. '   ' → logprob: -3.2280900478363037
    5. ' =' → logprob: -3.4780900478363037
    6. 'stones' → logprob: -3.7280900478363037
    7. 'answer' → logprob: -4.728090286254883
    8. 'res' → logprob: -5.228090286254883
    9. 'count' → logprob: -6.103090286254883
    10. '_result' → logprob: -6.478090286254883

Token 306: ' stones' (ID: 38940)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.4665603041648865
    2. '_count' → logprob: -1.7165603637695312
    3. ' =' → logprob: -2.0915603637695312
    4. 'count' → logprob: -3.4665603637695312
    5. ',' → logprob: -3.8415603637695312
    6. 'stones' → logprob: -5.341560363769531
    7. '_st' → logprob: -5.341560363769531
    8. '   ' → logprob: -6.591560363769531
    9. '_sum' → logprob: -6.716560363769531
    10. 'white' → logprob: -7.216560363769531

Token 307: ' (' (ID: 350)
  Prédit: 'white'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'white' → logprob: -0.19694559276103973
    2. '   ' → logprob: -1.8219455480575562
    3. 'count' → logprob: -4.321945667266846
    4. 'total' → logprob: -6.071945667266846
    5. 'result' → logprob: -7.196945667266846
    6. 'w' → logprob: -8.446945190429688
    7. '    
' → logprob: -8.571945190429688
    8. ' white' → logprob: -9.446945190429688
    9. 'answer' → logprob: -9.821945190429688
    10. 'wh' → logprob: -9.821945190429688

Token 308: 'color' (ID: 4991)
  Prédit: 'sum'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'sum' → logprob: -0.25207874178886414
    2. ' sum' → logprob: -2.2520787715911865
    3. 'white' → logprob: -2.3770787715911865
    4. 'ans' → logprob: -5.377078533172607
    5. ' white' → logprob: -5.502078533172607
    6. 'stones' → logprob: -5.877078533172607
    7. 'w' → logprob: -6.002078533172607
    8. 'count' → logprob: -6.252078533172607
    9. 'res' → logprob: -6.252078533172607
    10. 'stack' → logprob: -6.377078533172607

Token 309: ' ' (ID: 220)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.09345535933971405
    2. ' ==' → logprob: -2.5934553146362305
    3. '=' → logprob: -4.3434553146362305
    4. ',' → logprob: -7.8434553146362305
    5. ' =' → logprob: -7.9684553146362305
    6. '0' → logprob: -8.09345531463623
    7. ')' → logprob: -8.84345531463623
    8. ' ' → logprob: -9.46845531463623
    9. '   ' → logprob: -10.59345531463623
    10. '(' → logprob: -10.71845531463623

Token 310: '0' (ID: 15)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0482967384159565
    2. '0' → logprob: -3.4232966899871826
    3. '1' → logprob: -4.923296928405762
    4. '=' → logprob: -5.423296928405762
    5. ' ==' → logprob: -6.173296928405762
    6. '==
' → logprob: -8.798296928405762
    7. '2' → logprob: -9.048296928405762
    8. '   ' → logprob: -9.298296928405762
    9. '```' → logprob: -9.298296928405762
    10. ',' → logprob: -9.423296928405762

Token 311: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.035386186093091965
    2. ')
' → logprob: -3.535386085510254
    3. '   ' → logprob: -5.410386085510254
    4. ',' → logprob: -7.660386085510254
    5. '=' → logprob: -8.785386085510254
    6. ' )' → logprob: -8.910386085510254
    7. ')

' → logprob: -9.785386085510254
    8. '0' → logprob: -10.160386085510254
    9. 'if' → logprob: -10.160386085510254
    10. ')=' → logprob: -10.410386085510254

Token 312: '   ' (ID: 271)
  Prédit: 'white'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'white' → logprob: -0.05357921123504639
    2. 'count' → logprob: -3.803579330444336
    3. 'total' → logprob: -3.928579330444336
    4. 'w' → logprob: -5.053579330444336
    5. '   ' → logprob: -6.303579330444336
    6. 'result' → logprob: -7.803579330444336
    7. '```' → logprob: -8.053579330444336
    8. 'num' → logprob: -8.428579330444336
    9. '
' → logprob: -8.803579330444336
    10. '0' → logprob: -8.928579330444336

Token 313: ' ans' (ID: 3345)
  Prédit: 'white'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'white' → logprob: -0.0649549588561058
    2. 'count' → logprob: -2.939954996109009
    3. 'result' → logprob: -5.56495475769043
    4. 'total' → logprob: -6.31495475769043
    5. ' white' → logprob: -6.56495475769043
    6. 'w' → logprob: -6.81495475769043
    7. '   ' → logprob: -7.43995475769043
    8. 'ans' (adapté à ' ans') → logprob: -8.06495475769043
    9. 'answer' → logprob: -8.31495475769043
    10. 'cnt' → logprob: -8.31495475769043

Token 314: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132622241973877
    2. ' =' → logprob: -1.3132622241973877
    3. '   ' → logprob: -15.938261985778809
    4. ',' → logprob: -16.188262939453125
    5. '  ' → logprob: -16.188262939453125
    6. ' ' → logprob: -16.563262939453125
    7. '＝' → logprob: -17.563262939453125
    8. '_' → logprob: -17.563262939453125
    9. '=sum' → logprob: -17.563262939453125
    10. '=int' → logprob: -17.688262939453125

Token 315: ' sum' (ID: 4215)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3795376718044281
    2. 'sum' → logprob: -1.3795377016067505
    3. ' sum' → logprob: -2.754537582397461
    4. ' ' → logprob: -7.629537582397461
    5. '   ' → logprob: -13.129537582397461
    6. '(sum' → logprob: -15.004537582397461
    7. '	sum' → logprob: -15.004537582397461
    8. '  ' → logprob: -15.629537582397461
    9. '=sum' → logprob: -15.879537582397461
    10. '.sum' → logprob: -17.25453758239746

Token 316: '(count' (ID: 25892)
  Prédit: '(c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.43893998861312866
    2. '(count' → logprob: -1.8139400482177734
    3. '(' → logprob: -2.4389400482177734
    4. '(cnt' → logprob: -2.9389400482177734
    5. '(st' → logprob: -3.4389400482177734
    6. '(x' → logprob: -5.063940048217773
    7. '(s' → logprob: -5.313940048217773
    8. '((' → logprob: -5.813940048217773
    9. 'count' → logprob: -6.188940048217773
    10. '(color' → logprob: -7.063940048217773

Token 317: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0788973867893219
    2. ' for' → logprob: -2.578897476196289
    3. 'if' → logprob: -12.453897476196289
    4. ' ' → logprob: -13.578897476196289
    5. '   ' → logprob: -13.703897476196289
    6. '	for' → logprob: -13.953897476196289
    7. ' if' → logprob: -15.828897476196289
    8. '       ' → logprob: -16.45389747619629
    9. '
' → logprob: -16.45389747619629
    10. '           ' → logprob: -17.07889747619629

Token 318: ' color' (ID: 3089)
  Prédit: 'color'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'color' → logprob: -0.001544141792692244
    2. ' color' → logprob: -6.876543998718262
    3. 'c' → logprob: -8.126543998718262
    4. '(color' → logprob: -8.626543998718262
    5. 'col' → logprob: -10.501543998718262
    6. '(c' → logprob: -11.876543998718262
    7. '(' → logprob: -14.751543998718262
    8. ' c' → logprob: -14.876543998718262
    9. ',color' → logprob: -15.001543998718262
    10. ' (' → logprob: -15.501543998718262

Token 319: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0075377789326012135
    2. ',count' → logprob: -5.007537841796875
    3. ',color' → logprob: -7.132537841796875
    4. ' ,' → logprob: -11.007537841796875
    5. ',value' → logprob: -12.757537841796875
    6. '==' → logprob: -13.507537841796875
    7. ',c' → logprob: -14.507537841796875
    8. 'color' → logprob: -14.757537841796875
    9. ',num' → logprob: -15.007537841796875
    10. ',sum' → logprob: -15.507537841796875

Token 320: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.011049943044781685
    2. ' count' → logprob: -4.511049747467041
    3. 'color' → logprob: -13.1360502243042
    4. '(count' → logprob: -15.8860502243042
    5. ' color' → logprob: -17.511049270629883
    6. ' ' → logprob: -18.886049270629883
    7. '	count' → logprob: -19.261049270629883
    8. '   ' → logprob: -19.886049270629883
    9. '  ' → logprob: -19.886049270629883
    10. '[count' → logprob: -20.386049270629883

Token 321: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.00764851039275527
    2. 'in' → logprob: -4.882648468017578
    3. ' if' → logprob: -10.882648468017578
    4. ',' → logprob: -11.757648468017578
    5. 'if' → logprob: -12.007648468017578
    6. ' ' → logprob: -12.382648468017578
    7. '   ' → logprob: -12.882648468017578
    8. '    ' → logprob: -13.257648468017578
    9. ',color' → logprob: -15.507648468017578
    10. '  ' → logprob: -15.632648468017578

Token 322: ' stack' (ID: 10825)
  Prédit: 'stack'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'stack' → logprob: -0.14619964361190796
    2. ' stack' → logprob: -2.0211997032165527
    3. '(stack' → logprob: -6.146199703216553
    4. 'stones' → logprob: -7.271199703216553
    5. ' (' → logprob: -8.646199226379395
    6. ')' → logprob: -9.646199226379395
    7. ' ' → logprob: -9.771199226379395
    8. ' stones' → logprob: -9.958699226379395
    9. 'st' → logprob: -10.208699226379395
    10. '(' → logprob: -10.333699226379395

Token 323: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.01819407381117344
    2. 'if' → logprob: -4.018194198608398
    3. '	if' → logprob: -10.143194198608398
    4. '   ' → logprob: -13.143194198608398
    5. '    ' → logprob: -13.893194198608398
    6. ' ' → logprob: -14.518194198608398
    7. '        ' → logprob: -14.643194198608398
    8. '       ' → logprob: -16.0181941986084
    9. '           ' → logprob: -16.0181941986084
    10. '            ' → logprob: -16.0181941986084

Token 324: ' color' (ID: 3089)
  Prédit: ' color'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' color' → logprob: -0.693148672580719
    2. 'color' → logprob: -0.693148672580719
    3. '	color' → logprob: -14.943148612976074
    4. '(color' → logprob: -15.443148612976074
    5. '    ' → logprob: -15.818148612976074
    6. '   ' → logprob: -15.818148612976074
    7. '0' → logprob: -16.06814956665039
    8. ' not' → logprob: -16.06814956665039
    9. ' ' → logprob: -16.44314956665039
    10. '=color' → logprob: -16.44314956665039

Token 325: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5759458541870117
    2. '==' → logprob: -0.8259458541870117
    3. '==
' → logprob: -12.825945854187012
    4. ')==' → logprob: -13.450945854187012
    5. ' ' → logprob: -14.325945854187012
    6. '=' → logprob: -14.700945854187012
    7. ')' → logprob: -15.075945854187012
    8. '```' → logprob: -15.450945854187012
    9. ' ==
' → logprob: -15.575945854187012
    10. ']==' → logprob: -15.575945854187012

Token 326: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012509774416685104
    2. ' ' → logprob: -4.387509822845459
    3. '   ' → logprob: -16.637510299682617
    4. ' ' → logprob: -17.887510299682617
    5. '1' → logprob: -18.387510299682617
    6. '```' → logprob: -18.825010299682617
    7. '  ' → logprob: -19.137510299682617
    8. ')' → logprob: -19.325010299682617
    9. '۰' → logprob: -19.575010299682617
    10. '=' → logprob: -20.012510299682617

Token 327: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -12.87500286102295
    3. '```' → logprob: -18.875001907348633
    4. '   ' → logprob: -19.375001907348633
    5. '1' → logprob: -20.000001907348633
    6. '۰' → logprob: -20.562501907348633
    7. ')' → logprob: -21.062501907348633
    8. '=' → logprob: -21.625001907348633
    9. '  ' → logprob: -21.937501907348633
    10. '`' → logprob: -22.000001907348633

Token 328: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.246537173457909e-06
    2. ')
' → logprob: -13.000003814697266
    3. ' )' → logprob: -13.750003814697266
    4. '   ' → logprob: -14.000003814697266
    5. '))' → logprob: -17.875003814697266
    6. ')

' → logprob: -18.625003814697266
    7. '())' → logprob: -19.000003814697266
    8. ')#' → logprob: -19.000003814697266
    9. ')**' → logprob: -19.250003814697266
    10. ')`' → logprob: -19.625003814697266

Token 329: '   ' (ID: 271)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.014223918318748474
    2. '   ' → logprob: -4.264224052429199
    3. ' print' → logprob: -10.1392240524292
    4. '	print' → logprob: -11.3892240524292
    5. '
' → logprob: -12.2642240524292
    6. '```' → logprob: -13.0142240524292
    7. '    
' → logprob: -13.7642240524292
    8. '<|end|>' → logprob: -13.8892240524292
    9. '#print' → logprob: -15.3892240524292
    10. '(print' → logprob: -16.014223098754883

Token 330: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.0015135504072532058
    2. '   ' → logprob: -6.501513481140137
    3. '```' → logprob: -11.501513481140137
    4. ' print' → logprob: -13.751513481140137
    5. '``' → logprob: -17.876514434814453
    6. '	print' → logprob: -18.126514434814453
    7. '    
' → logprob: -19.126514434814453
    8. '
' → logprob: -19.251514434814453
    9. '`' → logprob: -19.501514434814453
    10. '#print' → logprob: -21.001514434814453

Token 331: '(ans' (ID: 70054)
  Prédit: '(ans'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(ans' → logprob: -1.981667537620524e-06
    2. 'ans' → logprob: -13.250001907348633
    3. '(' → logprob: -15.875001907348633
    4. '()' → logprob: -17.875001907348633
    5. '(answer' → logprob: -18.875001907348633
    6. ' (' → logprob: -18.875001907348633
    7. '(abs' → logprob: -19.500001907348633
    8. '	ans' → logprob: -20.000001907348633
    9. '(
' → logprob: -20.500001907348633
    10. ' ans' → logprob: -21.625001907348633

Token 332: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.3856492842023727e-06
    2. ')
' → logprob: -14.125000953674316
    3. ' )' → logprob: -15.000000953674316
    4. ')`' → logprob: -16.250001907348633
    5. '`)' → logprob: -17.250001907348633
    6. '))' → logprob: -17.500001907348633
    7. '())' → logprob: -18.625001907348633
    8. ')}' → logprob: -18.875001907348633
    9. '   ' → logprob: -19.125001907348633
    10. '()' → logprob: -19.250001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 330
Tokens correctement prédits (1ère position, stricte): 137
Tokens correctement prédits (1ère position, avec adaptation): 154
Tokens correctement prédits (top 10): 266
Précision stricte (1ère position): 41.52%
Précision adaptée (1ère position): 46.67%
Précision (top 10): 80.61%
================================================================================
