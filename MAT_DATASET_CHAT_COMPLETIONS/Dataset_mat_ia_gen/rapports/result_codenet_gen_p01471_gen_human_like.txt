================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:17:43
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
import sys

def main():
    input = sys.stdin.readline
    N, W = map(int, input().split())
    items = []
    for _ in range(N):
        w, v = map(int, input().split())
        if w != 0:
            ratio = v / w
        else:
            # Si w=0, on doit prendre x=1 si v>0, sinon x=0
            ratio = float('inf') if v > 0 else float('-inf')
        items.append((ratio, w, v))

    # Trier selon ratio décroissant
    items.sort(key=lambda x: x[0], reverse=True)

    total_value = 0.0
    capacity = W

    for ratio, w, v in items:
        if w > 0:
            # Poids positif
            if capacity <= 0:
                break
            # On peut prendre au maximum un poids de capacity
            x = min(1, capacity / w)
            total_value += v * x
            capacity -= w * x
        elif w < 0:
            # Poids négatif
            # Prendre au max possible (x=1) augmente la capacité
            # On prend x=1 si ratio > 0
            if ratio <= 0:
                # ne pas prendre d'items avec poids negatif si ratio <=0 (pas rentable)
                continue
            # Prendre x=1
            total_value += v
            capacity -= w  # w<0 donc capacity augmente
        else:
            # w=0
            # Prendre x=1 si v>0, sinon x=0
            if v > 0:
                total_value += v

    print(f"{total_value:.6f}")

if __name__ == "__main__":
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'import' (ID: 561)
  → Token d'amorce (pas de prédiction)

Token 1: ' sys' (ID: 12228)
  → Token d'amorce (pas de prédiction)

Token 2: '

' (ID: 279)
  → Token d'amorce (pas de prédiction)

Token 3: 'def' (ID: 1314)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.03585657849907875
    2. '\n' → logprob: -4.0358567237854
    3. 'import' → logprob: -4.7858567237854
    4. '<|end|>' → logprob: -5.2858567237854
    5. '\' → logprob: -7.0358567237854
    6. '<|end|>' → logprob: -7.5358567237854
    7. 'newline' → logprob: -7.9108567237854
    8. ',' → logprob: -8.160856246948242
    9. '[' → logprob: -8.285856246948242
    10. '' → logprob: -8.285856246948242

Token 4: ' main' (ID: 2758)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.0201973095536232
    2. ' ' → logprob: -5.39519739151001
    3. '  ' → logprob: -6.39519739151001
    4. '<|end|>' → logprob: -6.39519739151001
    5. ' process' → logprob: -6.52019739151001
    6. ' space' → logprob: -6.77019739151001
    7. ' sys' → logprob: -6.89519739151001
    8. ' main' → logprob: -6.89519739151001
    9. ' a' → logprob: -7.02019739151001
    10. ')' → logprob: -7.27019739151001

Token 5: '():
' (ID: 8595)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.03178084269165993
    2. '():' → logprob: -3.656780958175659
    3. ':' → logprob: -5.90678071975708
    4. '(:' → logprob: -6.03178071975708
    5. '(
' → logprob: -9.531781196594238
    6. '```' → logprob: -9.781781196594238
    7. '):' → logprob: -10.031781196594238
    8. '(":' → logprob: -10.281781196594238
    9. ' (' → logprob: -10.281781196594238
    10. '(`' → logprob: -10.656781196594238

Token 6: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.07582879811525345
    2. '(' → logprob: -3.450828790664673
    3. '    ' → logprob: -4.325829029083252
    4. '\' → logprob: -4.825829029083252
    5. ':' → logprob: -5.200829029083252
    6. 'print' → logprob: -5.450829029083252
    7. '():' → logprob: -5.575829029083252
    8. ' ' → logprob: -6.325829029083252
    9. '(sys' → logprob: -6.950829029083252
    10. '()' → logprob: -7.450829029083252

Token 7: ' input' (ID: 3422)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.07744193822145462
    2. '   ' → logprob: -2.827441930770874
    3. 'pass' → logprob: -4.952442169189453
    4. ' print' → logprob: -5.952442169189453
    5. '    ' → logprob: -6.577442169189453
    6. 'p' → logprob: -7.077442169189453
    7. 'if' → logprob: -7.202442169189453
    8. ' ' → logprob: -7.327442169189453
    9. 'prin' → logprob: -7.827442169189453
    10. 'pr' → logprob: -7.952442169189453

Token 8: ' =' (ID: 314)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.010709501802921295
    2. '()' → logprob: -5.385709285736084
    3. '_' → logprob: -5.760709285736084
    4. '.' → logprob: -6.635709285736084
    5. 's' → logprob: -8.385709762573242
    6. ' ' → logprob: -8.385709762573242
    7. '_data' → logprob: -8.510709762573242
    8. ' (' → logprob: -8.510709762573242
    9. ')' → logprob: -9.010709762573242
    10. '[' → logprob: -9.010709762573242

Token 9: ' sys' (ID: 12228)
  Prédit: ' sys'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' sys' → logprob: -0.10217024385929108
    2. ' input' → logprob: -2.72717022895813
    3. 'sys' → logprob: -3.97717022895813
    4. 'input' → logprob: -4.352170467376709
    5. ' ' → logprob: -9.47716999053955
    6. '	sys' → logprob: -11.97716999053955
    7. '=sys' → logprob: -12.22716999053955
    8. '   ' → logprob: -12.22716999053955
    9. '(sys' → logprob: -12.60216999053955
    10. '```' → logprob: -13.85216999053955

Token 10: '.stdin' (ID: 93480)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.005174466408789158
    2. '.stdin' → logprob: -5.38017463684082
    3. ' .' → logprob: -8.00517463684082
    4. '.input' → logprob: -9.50517463684082
    5. '.readline' → logprob: -9.88017463684082
    6. '.argv' → logprob: -10.13017463684082
    7. '.stdout' → logprob: -10.63017463684082
    8. '.import' → logprob: -11.00517463684082
    9. '.user' → logprob: -13.38017463684082
    10. '.get' → logprob: -13.38017463684082

Token 11: '.readline' (ID: 74673)
  Prédit: '.readline'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.readline' → logprob: -0.36504918336868286
    2. '.' → logprob: -1.365049123764038
    3. '.read' → logprob: -2.990049123764038
    4. '.Read' → logprob: -8.990049362182617
    5. '.readlines' → logprob: -10.615049362182617
    6. 'read' → logprob: -11.740049362182617
    7. ' .' → logprob: -11.990049362182617
    8. ')' → logprob: -11.990049362182617
    9. '.READ' → logprob: -12.490049362182617
    10. ' readline' → logprob: -12.865049362182617

Token 12: '
' (ID: 198)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '()' → logprob: -0.5813416838645935
    2. '(' → logprob: -0.8313416838645935
    3. '(
' → logprob: -6.331341743469238
    4. '().' → logprob: -6.581341743469238
    5. ')' → logprob: -7.831341743469238
    6. '('' → logprob: -8.081341743469238
    7. '("("' → logprob: -8.581341743469238
    8. ' ()' → logprob: -8.831341743469238
    9. '()
' → logprob: -8.956341743469238
    10. ' ' → logprob: -8.956341743469238

Token 13: '   ' (ID: 271)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.022128241136670113
    2. '(' → logprob: -3.8971283435821533
    3. '()
' → logprob: -6.897128105163574
    4. '(
' → logprob: -8.272128105163574
    5. '   ' → logprob: -9.022128105163574
    6. '()

' → logprob: -9.397128105163574
    7. ' ()' → logprob: -11.147128105163574
    8. ' ' → logprob: -11.147128105163574
    9. '().' → logprob: -11.147128105163574
    10. ')' → logprob: -11.522128105163574

Token 14: ' N' (ID: 478)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.6332637667655945
    2. '()' → logprob: -0.7582637667655945
    3. '   ' → logprob: -8.13326358795166
    4. '(
' → logprob: -9.50826358795166
    5. ' ' → logprob: -10.00826358795166
    6. ')' → logprob: -10.13326358795166
    7. ' ()' → logprob: -10.38326358795166
    8. '('' → logprob: -10.50826358795166
    9. ' (' → logprob: -10.75826358795166
    10. '()
' → logprob: -10.75826358795166

Token 15: ',' (ID: 11)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8277958035469055
    2. '=' → logprob: -1.2027957439422607
    3. ' ' → logprob: -1.9527957439422607
    4. ')' → logprob: -2.5777957439422607
    5. '[' → logprob: -3.9527957439422607
    6. '<|end|>' → logprob: -5.57779598236084
    7. ',' → logprob: -5.70279598236084
    8. '>' → logprob: -5.82779598236084
    9. '  ' → logprob: -6.20279598236084
    10. ' )' → logprob: -6.32779598236084

Token 16: ' W' (ID: 486)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.033792078495025635
    2. 'input' → logprob: -4.658792018890381
    3. '<|end|>' → logprob: -4.908792018890381
    4. ' input' → logprob: -5.033792018890381
    5. ')' → logprob: -5.658792018890381
    6. ' )' → logprob: -6.658792018890381
    7. '  ' → logprob: -6.783792018890381
    8. '    ' → logprob: -6.783792018890381
    9. ' =' → logprob: -7.033792018890381
    10. ' N' → logprob: -8.158792495727539

Token 17: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2519797682762146
    2. '=' → logprob: -1.5019798278808594
    3. ',' → logprob: -10.12697982788086
    4. ' ' → logprob: -11.75197982788086
    5. '=input' → logprob: -14.00197982788086
    6. '   ' → logprob: -14.87697982788086
    7. '  ' → logprob: -15.25197982788086
    8. ' ,' → logprob: -15.50197982788086
    9. ')' → logprob: -15.75197982788086
    10. '=int' → logprob: -15.75197982788086

Token 18: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.00977190863341093
    2. 'map' → logprob: -4.634771823883057
    3. ' input' → logprob: -11.884772300720215
    4. ' list' → logprob: -12.384772300720215
    5. ' ' → logprob: -12.884772300720215
    6. ' [' → logprob: -14.509772300720215
    7. ' tuple' → logprob: -14.759772300720215
    8. 'input' → logprob: -14.884772300720215
    9. '	map' → logprob: -15.134772300720215
    10. 'list' → logprob: -15.634772300720215

Token 19: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.1923910677433014
    2. '(int' → logprob: -2.3173911571502686
    3. '(lambda' → logprob: -2.6923911571502686
    4. '(str' → logprob: -4.8173909187316895
    5. '(input' → logprob: -8.067391395568848
    6. '(
' → logprob: -8.942391395568848
    7. '(list' → logprob: -10.067391395568848
    8. '<|end|>' → logprob: -10.192391395568848
    9. '(eval' → logprob: -10.817391395568848
    10. ')' → logprob: -10.817391395568848

Token 20: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.016880054026842117
    2. ',input' → logprob: -4.141880035400391
    3. '(' → logprob: -8.01688003540039
    4. '(input' → logprob: -8.26688003540039
    5. 'input' → logprob: -9.14188003540039
    6. ' ,' → logprob: -9.64188003540039
    7. '(sys' → logprob: -10.26688003540039
    8. ')' → logprob: -10.89188003540039
    9. '),' → logprob: -12.01688003540039
    10. ',line' → logprob: -12.64188003540039

Token 21: ' input' (ID: 3422)
  Prédit: ' input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' input' → logprob: -0.3133161664009094
    2. 'input' → logprob: -1.3133161067962646
    3. ')' → logprob: -10.188316345214844
    4. ' sys' → logprob: -11.688316345214844
    5. ' ' → logprob: -12.813316345214844
    6. ' )' → logprob: -13.438316345214844
    7. 'sys' → logprob: -13.813316345214844
    8. ',input' → logprob: -13.813316345214844
    9. '=input' → logprob: -14.313316345214844
    10. '   ' → logprob: -14.313316345214844

Token 22: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.00040338258258998394
    2. '()' → logprob: -7.87540340423584
    3. '())' → logprob: -10.75040340423584
    4. '()))' → logprob: -14.37540340423584
    5. ' ().' → logprob: -15.12540340423584
    6. '(' → logprob: -15.25040340423584
    7. '()
' → logprob: -15.37540340423584
    8. ')' → logprob: -15.37540340423584
    9. '()[' → logprob: -16.125402450561523
    10. '().'' → logprob: -18.000402450561523

Token 23: 'split' (ID: 13627)
  Prédit: 'strip'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.11417053639888763
    2. 'split' → logprob: -2.614170551300049
    3. 'rstrip' → logprob: -3.364170551300049
    4. ')' → logprob: -9.98917007446289
    5. 'read' → logprob: -11.48917007446289
    6. '())' → logprob: -12.11417007446289
    7. ' strip' → logprob: -12.11417007446289
    8. 'decode' → logprob: -13.11417007446289
    9. '()' → logprob: -13.11417007446289
    10. '().' → logprob: -13.61417007446289

Token 24: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.3326641619205475
    2. ')' → logprob: -1.332664132118225
    3. '()' → logprob: -3.9576642513275146
    4. '))' → logprob: -10.082664489746094
    5. '())
' → logprob: -10.207664489746094
    6. '(' → logprob: -11.457664489746094
    7. '()))' → logprob: -12.207664489746094
    8. '(),' → logprob: -12.707664489746094
    9. ')
' → logprob: -13.207664489746094
    10. '`)' → logprob: -13.707664489746094

Token 25: '   ' (ID: 271)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.4146081805229187
    2. '   ' → logprob: -1.1646082401275635
    3. '<|end|>' → logprob: -4.664608001708984
    4. '
' → logprob: -5.539608001708984
    5. ' ' → logprob: -6.164608001708984
    6. '```' → logprob: -6.414608001708984
    7. '    
' → logprob: -6.539608001708984
    8. ' items' → logprob: -6.664608001708984
    9. '\n' → logprob: -6.789608001708984
    10. 'items' → logprob: -7.289608001708984

Token 26: ' items' (ID: 4732)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' (adapté à ' items') → logprob: -1.0923455953598022
    2. ' items' → logprob: -1.3423455953598022
    3. ' ' → logprob: -1.4673455953598022
    4. 'weights' → logprob: -2.967345714569092
    5. 'w' → logprob: -3.842345714569092
    6. ' weights' → logprob: -4.092345714569092
    7. '   ' → logprob: -4.217345714569092
    8. 'a' → logprob: -4.342345714569092
    9. ')' → logprob: -4.467345714569092
    10. 'dp' → logprob: -4.842345714569092

Token 27: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.028295837342739105
    2. '=' → logprob: -3.6532957553863525
    3. '[' → logprob: -6.903295993804932
    4. '=[]' → logprob: -8.153295516967773
    5. '[:]' → logprob: -8.778295516967773
    6. '   ' → logprob: -9.153295516967773
    7. '[]' → logprob: -9.403295516967773
    8. 's' → logprob: -9.528295516967773
    9. ')' → logprob: -9.653295516967773
    10. ' ' → logprob: -9.903295516967773

Token 28: ' []
' (ID: 8911)
  Prédit: ' []'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' []' → logprob: -0.6027823686599731
    2. '[]' → logprob: -0.8527823686599731
    3. '[' → logprob: -3.8527822494506836
    4. ' [' → logprob: -5.477782249450684
    5. '[int' → logprob: -7.102782249450684
    6. '[list' → logprob: -8.852782249450684
    7. '[len' → logprob: -10.852782249450684
    8. '[List' → logprob: -11.102782249450684
    9. 'list' → logprob: -11.477782249450684
    10. '[str' → logprob: -12.102782249450684

Token 29: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.015179156325757504
    2. 'for' → logprob: -4.64017915725708
    3. ' for' → logprob: -5.76517915725708
    4. '    
' → logprob: -6.64017915725708
    5. '<|end|>' → logprob: -8.140178680419922
    6. '\n' → logprob: -9.015178680419922
    7. '	for' → logprob: -9.015178680419922
    8. ')' → logprob: -9.265178680419922
    9. '\' → logprob: -9.265178680419922
    10. '    ' → logprob: -9.765178680419922

Token 30: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.2839461863040924
    2. ' for' → logprob: -1.40894615650177
    3. '	for' → logprob: -6.2839460372924805
    4. '   ' → logprob: -7.4089460372924805
    5. '<|end|>' → logprob: -8.53394603729248
    6. '
' → logprob: -10.28394603729248
    7. '\n' → logprob: -10.90894603729248
    8. '<|end|>' → logprob: -11.15894603729248
    9. '```' → logprob: -11.28394603729248
    10. '    
' → logprob: -11.65894603729248

Token 31: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.05238214135169983
    2. '_' → logprob: -3.552382230758667
    3. ' i' → logprob: -3.802382230758667
    4. ' ' → logprob: -10.177382469177246
    5. 'i' → logprob: -11.052382469177246
    6. '_i' → logprob: -12.427382469177246
    7. ' ' → logprob: -14.052382469177246
    8. ' ‌' → logprob: -14.677382469177246
    9. '	i' → logprob: -15.552382469177246
    10. ' I' → logprob: -15.927382469177246

Token 32: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20344135165214539
    2. 'in' → logprob: -1.7034413814544678
    3. ' ' → logprob: -6.578441143035889
    4. 'i' → logprob: -8.203441619873047
    5. '  ' → logprob: -9.328441619873047
    6. '_' → logprob: -9.953441619873047
    7. ' i' → logprob: -10.078441619873047
    8. 'n' → logprob: -10.703441619873047
    9. '   ' → logprob: -10.953441619873047
    10. ' _' → logprob: -10.953441619873047

Token 33: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.005234475247561932
    2. ' range' → logprob: -5.255234241485596
    3. '(range' → logprob: -15.630234718322754
    4. '	range' → logprob: -15.630234718322754
    5. ' ' → logprob: -15.880234718322754
    6. '```' → logprob: -16.880233764648438
    7. 'ran' → logprob: -17.130233764648438
    8. '  ' → logprob: -17.380233764648438
    9. 'rang' → logprob: -17.880233764648438
    10. '_' → logprob: -17.880233764648438

Token 34: '(N' (ID: 10564)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12715761363506317
    2. '(N' → logprob: -2.252157688140869
    3. ' (' → logprob: -4.377157688140869
    4. ' N' → logprob: -7.252157688140869
    5. '(range' → logprob: -7.502157688140869
    6. '(int' → logprob: -8.752157211303711
    7. ' ' → logprob: -9.127157211303711
    8. ' range' → logprob: -9.877157211303711
    9. '(n' → logprob: -10.877157211303711
    10. '(
' → logprob: -11.127157211303711

Token 35: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0018558192532509565
    2. '):
' → logprob: -6.626855850219727
    3. ')' → logprob: -7.626855850219727
    4. ' ):' → logprob: -11.001855850219727
    5. ':' → logprob: -11.126855850219727
    6. '   ' → logprob: -11.876855850219727
    7. ',' → logprob: -14.126855850219727
    8. '):
' → logprob: -14.251855850219727
    9. '():' → logprob: -14.626855850219727
    10. ')：' → logprob: -15.126855850219727

Token 36: '       ' (ID: 309)
  Prédit: '    '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '    ' → logprob: -0.4447440207004547
    2. '   ' → logprob: -1.3197439908981323
    3. '       ' → logprob: -3.444744110107422
    4. '<|end|>' → logprob: -3.444744110107422
    5. ' ' → logprob: -4.069744110107422
    6. ' items' → logprob: -5.694744110107422
    7. '    
' → logprob: -6.694744110107422
    8. '        ' → logprob: -6.819744110107422
    9. '<|end|>' → logprob: -6.819744110107422
    10. 'items' → logprob: -7.194744110107422

Token 37: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.35744917392730713
    2. 'w' (adapté à ' w') → logprob: -1.2324491739273071
    3. ' weight' → logprob: -5.607449054718018
    4. 'weight' → logprob: -5.982449054718018
    5. ' v' → logprob: -6.482449054718018
    6. 'v' → logprob: -6.857449054718018
    7. '   ' → logprob: -10.232449531555176
    8. ' ' → logprob: -10.482449531555176
    9. 'wt' → logprob: -10.857449531555176
    10. 'x' → logprob: -11.232449531555176

Token 38: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005943780997768044
    2. ',v' → logprob: -7.750594615936279
    3. ' ,' → logprob: -9.125594139099121
    4. ',i' → logprob: -11.125594139099121
    5. ',value' → logprob: -11.875594139099121
    6. ',t' → logprob: -12.125594139099121
    7. ',e' → logprob: -12.625594139099121
    8. 't' → logprob: -12.875594139099121
    9. ',a' → logprob: -13.125594139099121
    10. ',n' → logprob: -13.125594139099121

Token 39: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.01603659801185131
    2. ' v' → logprob: -4.141036510467529
    3. 'c' → logprob: -14.516036987304688
    4. ' ' → logprob: -14.641036987304688
    5. '	v' → logprob: -14.641036987304688
    6. 'p' → logprob: -14.891036987304688
    7. '_v' → logprob: -15.891036987304688
    8. '   ' → logprob: -15.891036987304688
    9. 'value' → logprob: -16.141036987304688
    10. '```' → logprob: -16.641036987304688

Token 40: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868805766105652
    2. '=' → logprob: -1.13688063621521
    3. ' ' → logprob: -12.011880874633789
    4. ',' → logprob: -14.636880874633789
    5. '   ' → logprob: -14.636880874633789
    6. ')' → logprob: -14.636880874633789
    7. 'w' → logprob: -14.886880874633789
    8. '=int' → logprob: -14.886880874633789
    9. '=input' → logprob: -14.886880874633789
    10. '＝' → logprob: -15.261880874633789

Token 41: ' map' (ID: 4014)
  Prédit: ' map'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' map' → logprob: -0.003180563682690263
    2. 'map' → logprob: -5.753180503845215
    3. '	map' → logprob: -13.878180503845215
    4. '   ' → logprob: -14.503180503845215
    5. '    ' → logprob: -14.878180503845215
    6. ' ' → logprob: -14.878180503845215
    7. ' ' → logprob: -15.628180503845215
    8. ' list' → logprob: -15.878180503845215
    9. ' m' → logprob: -15.878180503845215
    10. ' tuple' → logprob: -16.25318145751953

Token 42: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.00024858469259925187
    2. '(' → logprob: -8.375248908996582
    3. '(str' → logprob: -12.375248908996582
    4. '(lambda' → logprob: -12.500248908996582
    5. '<int' → logprob: -12.875248908996582
    6. '[int' → logprob: -13.000248908996582
    7. ' (' → logprob: -13.250248908996582
    8. 'int' → logprob: -13.625248908996582
    9. '(input' → logprob: -14.250248908996582
    10. '(
' → logprob: -14.500248908996582

Token 43: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025685220025479794
    2. ',input' → logprob: -6.00256872177124
    3. '(' → logprob: -10.252568244934082
    4. '(),' → logprob: -10.502568244934082
    5. '(input' → logprob: -11.127568244934082
    6. ' ,' → logprob: -11.877568244934082
    7. 'input' → logprob: -13.877568244934082
    8. '<|end|>' → logprob: -13.877568244934082
    9. '`,' → logprob: -14.002568244934082
    10. '，' → logprob: -14.127568244934082

Token 44: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.25193455815315247
    2. ' input' → logprob: -1.50193452835083
    3. ')' → logprob: -12.751935005187988
    4. '_input' → logprob: -14.126935005187988
    5. '	input' → logprob: -14.376935005187988
    6. '=input' → logprob: -15.251935005187988
    7. ',input' → logprob: -15.251935005187988
    8. ' ' → logprob: -15.376935005187988
    9. '(input' → logprob: -15.376935005187988
    10. '<input' → logprob: -16.001934051513672

Token 45: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.869017852295656e-06
    2. '()' → logprob: -12.000006675720215
    3. ' ().' → logprob: -15.625006675720215
    4. '.' → logprob: -16.25000762939453
    5. '(' → logprob: -16.37500762939453
    6. '())' → logprob: -16.50000762939453
    7. ')' → logprob: -17.37500762939453
    8. '.split' → logprob: -17.50000762939453
    9. '());' → logprob: -17.50000762939453
    10. '.readline' → logprob: -18.12500762939453

Token 46: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -2.2200749754119897e-06
    2. 'strip' → logprob: -13.250001907348633
    3. ' split' → logprob: -16.125001907348633
    4. '(split' → logprob: -16.125001907348633
    5. 'rstrip' → logprob: -16.375001907348633
    6. ')' → logprob: -17.875001907348633
    7. 'spl' → logprob: -18.500001907348633
    8. 'plit' → logprob: -19.125001907348633
    9. '.split' → logprob: -19.500001907348633
    10. 'sp' → logprob: -21.250001907348633

Token 47: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.18026408553123474
    2. '())' → logprob: -1.9302641153335571
    3. '()' → logprob: -3.9302639961242676
    4. '())
' → logprob: -9.180264472961426
    5. ')
' → logprob: -9.805264472961426
    6. '))' → logprob: -10.555264472961426
    7. '(' → logprob: -12.430264472961426
    8. '()
' → logprob: -12.430264472961426
    9. '   ' → logprob: -12.805264472961426
    10. ' )' → logprob: -13.805264472961426

Token 48: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010660445317626
    2. '   ' → logprob: -5.385660648345947
    3. '<|end|>' → logprob: -6.010660648345947
    4. ')' → logprob: -6.260660648345947
    5. '        
' → logprob: -7.010660648345947
    6. '    
' → logprob: -8.510660171508789
    7. ',' → logprob: -9.135660171508789
    8. '\n' → logprob: -9.635660171508789
    9. ' 
' → logprob: -9.760660171508789
    10. '
' → logprob: -9.760660171508789

Token 49: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24868114292621613
    2. ' items' → logprob: -1.9986811876296997
    3. 'items' → logprob: -2.62368106842041
    4. '	items' → logprob: -5.87368106842041
    5. '   ' → logprob: -5.99868106842041
    6. '<|end|>' → logprob: -6.24868106842041
    7. '.items' → logprob: -6.62368106842041
    8. '(items' → logprob: -6.99868106842041
    9. '        
' → logprob: -7.37368106842041
    10. ')' → logprob: -7.62368106842041

Token 50: ' w' (ID: 286)
  Prédit: ' w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' w' → logprob: -0.0021877337712794542
    2. 'w' → logprob: -6.127187728881836
    3. ' v' → logprob: -13.502187728881836
    4. ' ' → logprob: -14.627187728881836
    5. '	w' → logprob: -16.252187728881836
    6. ' (' → logprob: -16.252187728881836
    7. '    ' → logprob: -16.377187728881836
    8. ' ' → logprob: -16.502187728881836
    9. '(w' → logprob: -16.627187728881836
    10. '_w' → logprob: -16.627187728881836

Token 51: ' !=' (ID: 1666)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.01123962365090847
    2. '<=' → logprob: -4.511239528656006
    3. ' ' → logprob: -9.636240005493164
    4. '[' → logprob: -9.761240005493164
    5. ' >' → logprob: -11.011240005493164
    6. ')' → logprob: -12.136240005493164
    7. '<|end|>' → logprob: -12.386240005493164
    8. '   ' → logprob: -12.511240005493164
    9. '*' → logprob: -12.636240005493164
    10. ')<=' → logprob: -12.636240005493164

Token 52: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.7498627305030823
    2. ' ' → logprob: -0.7498627305030823
    3. '=' → logprob: -3.3748626708984375
    4. ' W' → logprob: -4.7498626708984375
    5. ' w' → logprob: -5.2498626708984375
    6. 'W' → logprob: -5.6248626708984375
    7. 'w' → logprob: -6.1248626708984375
    8. '=W' → logprob: -7.9998626708984375
    9. '=w' → logprob: -8.624862670898438
    10. '  ' → logprob: -8.874862670898438

Token 53: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.053415924310684204
    2. 'W' → logprob: -3.5534160137176514
    3. 'w' → logprob: -4.303415775299072
    4. ' ' → logprob: -4.803415775299072
    5. ' W' → logprob: -7.303415775299072
    6. '=' → logprob: -8.80341625213623
    7. '1' → logprob: -8.92841625213623
    8. '-' → logprob: -9.05341625213623
    9. ' w' → logprob: -9.30341625213623
    10. 'v' → logprob: -9.67841625213623

Token 54: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.032721083611249924
    2. ' and' → logprob: -3.6577210426330566
    3. ' :' → logprob: -5.157721042633057
    4. '):' → logprob: -8.157721519470215
    5. 'and' → logprob: -8.407721519470215
    6. ',' → logprob: -10.032721519470215
    7. ':
' → logprob: -10.157721519470215
    8. '   ' → logprob: -10.907721519470215
    9. ')' → logprob: -11.657721519470215
    10. ' ' → logprob: -12.782721519470215

Token 55: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.009631535969674587
    2. '       ' → logprob: -5.759631633758545
    3. ':' → logprob: -6.009631633758545
    4. ' items' → logprob: -6.884631633758545
    5. '<|end|>' → logprob: -7.259631633758545
    6. ',' → logprob: -7.384631633758545
    7. ' and' → logprob: -8.134631156921387
    8. '        ' → logprob: -8.259631156921387
    9. '            ' → logprob: -8.759631156921387
    10. 'items' → logprob: -8.884631156921387

Token 56: ' ratio' (ID: 18051)
  Prédit: ' items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' items' → logprob: -0.022705012932419777
    2. 'items' → logprob: -4.647705078125
    3. '           ' → logprob: -4.897705078125
    4. '               ' → logprob: -6.022705078125
    5. '            ' → logprob: -6.272705078125
    6. '	items' → logprob: -8.147705078125
    7. '(items' → logprob: -8.147705078125
    8. '.items' → logprob: -8.772705078125
    9. ' ' → logprob: -9.397705078125
    10. '_items' → logprob: -10.022705078125

Token 57: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.034371379762887955
    2. '=' → logprob: -3.4093713760375977
    3. 's' → logprob: -7.659371376037598
    4. '.append' → logprob: -8.784371376037598
    5. ' ' → logprob: -10.284371376037598
    6. '   ' → logprob: -11.034371376037598
    7. ',' → logprob: -11.159371376037598
    8. '_' → logprob: -11.409371376037598
    9. '    ' → logprob: -12.034371376037598
    10. ')' → logprob: -12.159371376037598

Token 58: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.054883524775505066
    2. 'v' → logprob: -2.9298834800720215
    3. '	v' → logprob: -14.92988395690918
    4. ' ' → logprob: -15.17988395690918
    5. ' ' → logprob: -15.80488395690918
    6. '    ' → logprob: -16.30488395690918
    7. '/v' → logprob: -16.55488395690918
    8. ')v' → logprob: -16.67988395690918
    9. '-v' → logprob: -16.92988395690918
    10. '<v' → logprob: -17.42988395690918

Token 59: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.25311169028282166
    2. '/' → logprob: -1.503111720085144
    3. '/w' → logprob: -6.753111839294434
    4. '/v' → logprob: -13.128111839294434
    5. '/W' → logprob: -13.128111839294434
    6. ' ' → logprob: -13.253111839294434
    7. '           ' → logprob: -14.503111839294434
    8. '/n' → logprob: -14.503111839294434
    9. '   ' → logprob: -14.628111839294434
    10. ' /
' → logprob: -14.753111839294434

Token 60: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0076065086759626865
    2. ' w' → logprob: -4.882606506347656
    3. ' ' → logprob: -16.382606506347656
    4. '	w' → logprob: -16.382606506347656
    5. '_w' → logprob: -16.882606506347656
    6. '   ' → logprob: -17.007606506347656
    7. 'W' → logprob: -17.757606506347656
    8. '    ' → logprob: -18.882606506347656
    9. 'v' → logprob: -19.007606506347656
    10. 'float' → logprob: -19.007606506347656

Token 61: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08388768136501312
    2. ')' → logprob: -3.4588875770568848
    3. '       ' → logprob: -3.4588875770568848
    4. '            
' → logprob: -4.583887577056885
    5. '<|end|>' → logprob: -6.208887577056885
    6. '\n' → logprob: -6.708887577056885
    7. '        
' → logprob: -7.083887577056885
    8. ',' → logprob: -7.208887577056885
    9. '               ' → logprob: -7.958887577056885
    10. '
' → logprob: -8.208888053894043

Token 62: '       ' (ID: 309)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.003412847639992833
    2. '       ' → logprob: -5.87841272354126
    3. '            
' → logprob: -8.378413200378418
    4. ')' → logprob: -8.878413200378418
    5. '<|end|>' → logprob: -8.878413200378418
    6. '        
' → logprob: -10.878413200378418
    7. '   ' → logprob: -11.128413200378418
    8. ',' → logprob: -11.128413200378418
    9. '
' → logprob: -11.378413200378418
    10. '               ' → logprob: -11.503413200378418

Token 63: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.28652656078338623
    2. ' else' → logprob: -1.5365265607833862
    3. 'else' (adapté à ' else') → logprob: -3.661526679992676
    4. '           ' → logprob: -4.911526679992676
    5. '   ' → logprob: -8.536526679992676
    6. '	else' → logprob: -9.036526679992676
    7. ')' → logprob: -9.161526679992676
    8. '        
' → logprob: -9.286526679992676
    9. '
' → logprob: -9.911526679992676
    10. ' elif' → logprob: -10.036526679992676

Token 64: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.037480153143405914
    2. ' :' → logprob: -3.787480115890503
    3. '           ' → logprob: -4.412480354309082
    4. ':
' → logprob: -6.912480354309082
    5. '       ' → logprob: -7.912480354309082
    6. '        ' → logprob: -9.037480354309082
    7. '            ' → logprob: -9.037480354309082
    8. '   ' → logprob: -9.412480354309082
    9. ' ' → logprob: -9.537480354309082
    10. ' :
' → logprob: -9.662480354309082

Token 65: '           ' (ID: 352)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.10138198733329773
    2. ' ' → logprob: -2.60138201713562
    3. '           ' → logprob: -3.85138201713562
    4. ' float' → logprob: -8.4763822555542
    5. '            ' → logprob: -8.8513822555542
    6. '1' → logprob: -9.2263822555542
    7. '               ' → logprob: -9.3513822555542
    8. 'float' → logprob: -9.3513822555542
    9. ' continue' → logprob: -9.3513822555542
    10. ' v' → logprob: -9.4763822555542

Token 66: ' #' (ID: 1069)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.09558593481779099
    2. 'ratio' → logprob: -2.970585823059082
    3. '           ' → logprob: -4.470585823059082
    4. 'float' → logprob: -4.595585823059082
    5. ' ' → logprob: -5.095585823059082
    6. ' ratio' → logprob: -5.220585823059082
    7. 'v' → logprob: -5.970585823059082
    8. 'continue' → logprob: -6.845585823059082
    9. ' float' → logprob: -7.095585823059082
    10. ' continue' → logprob: -7.595585823059082

Token 67: ' Si' (ID: 7832)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.3948885202407837
    2. 'continue' → logprob: -1.8948885202407837
    3. 'items' → logprob: -2.019888401031494
    4. 'ratio' → logprob: -2.394888401031494
    5. 'pass' → logprob: -2.519888401031494
    6. ' continue' → logprob: -2.519888401031494
    7. ' items' → logprob: -2.894888401031494
    8. ' ratio' → logprob: -3.144888401031494
    9. ' pass' → logprob: -3.269888401031494
    10. '```' → logprob: -4.519888401031494

Token 68: ' w' (ID: 286)
  Prédit: ' #'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' #' → logprob: -2.209404468536377
    2. 'raise' → logprob: -2.209404468536377
    3. '   ' → logprob: -2.334404468536377
    4. '#' → logprob: -2.459404468536377
    5. ' raise' → logprob: -2.459404468536377
    6. '       ' → logprob: -2.584404468536377
    7. 'ng' → logprob: -2.709404468536377
    8. 'n' → logprob: -3.084404468536377
    9. ' n' → logprob: -3.209404468536377
    10. 'm' → logprob: -3.209404468536377

Token 69: '=' (ID: 28)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.16258879005908966
    2. '==' → logprob: -2.0375888347625732
    3. '=' → logprob: -4.412588596343994
    4. ' ' → logprob: -6.037588596343994
    5. ' =' → logprob: -6.912588596343994
    6. 's' → logprob: -7.287588596343994
    7. 'n' → logprob: -7.287588596343994
    8. 'w' → logprob: -7.287588596343994
    9. ' >' → logprob: -8.037589073181152
    10. ' !=' → logprob: -8.037589073181152

Token 70: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17975956201553345
    2. ' ' → logprob: -1.8047595024108887
    3. '```' → logprob: -12.679759979248047
    4. '=' → logprob: -12.929759979248047
    5. '   ' → logprob: -13.242259979248047
    6. ' ' → logprob: -13.929759979248047
    7. '1' → logprob: -14.054759979248047
    8. '  ' → logprob: -14.179759979248047
    9. '==' → logprob: -14.554759979248047
    10. 'w' → logprob: -14.929759979248047

Token 71: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.796598494052887
    2. ':' → logprob: -1.0465984344482422
    3. '           ' → logprob: -2.171598434448242
    4. ':
' → logprob: -2.796598434448242
    5. '       ' → logprob: -5.421598434448242
    6. ' and' → logprob: -5.921598434448242
    7. ' continue' → logprob: -6.171598434448242
    8. 'continue' → logprob: -6.171598434448242
    9. ' :' → logprob: -6.296598434448242
    10. ',
' → logprob: -6.421598434448242

Token 72: ' on' (ID: 402)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5900008678436279
    2. ' ratio' → logprob: -1.965000867843628
    3. ' continue' → logprob: -2.090000867843628
    4. ' v' → logprob: -2.590000867843628
    5. 'ratio' → logprob: -3.465000867843628
    6. 'continue' → logprob: -3.965000867843628
    7. ' items' → logprob: -4.090001106262207
    8. '       ' → logprob: -5.090001106262207
    9. 'v' → logprob: -5.090001106262207
    10. '   ' → logprob: -5.090001106262207

Token 73: ' doit' (ID: 21822)
  Prédit: ' continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' continue' → logprob: -0.19910041987895966
    2. ' prend' → logprob: -2.9491004943847656
    3. ' consider' → logprob: -3.8241004943847656
    4. ' print' → logprob: -4.199100494384766
    5. 'continue' → logprob: -4.199100494384766
    6. ' take' → logprob: -4.824100494384766
    7. ' ignore' → logprob: -5.699100494384766
    8. ' assume' → logprob: -5.824100494384766
    9. 'contin' → logprob: -5.824100494384766
    10. ' ajoute' → logprob: -5.824100494384766

Token 74: ' prendre' (ID: 24257)
  Prédit: 'contin'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'contin' → logprob: -0.537919282913208
    2. ' continuer' → logprob: -2.037919282913208
    3. ' continue' → logprob: -2.662919282913208
    4. ' prendre' → logprob: -2.912919282913208
    5. 'continue' → logprob: -3.287919282913208
    6. 'prendre' → logprob: -3.912919282913208
    7. ' skip' → logprob: -4.412919044494629
    8. 'pass' → logprob: -4.662919044494629
    9. '   ' → logprob: -4.787919044494629
    10. 'skip' → logprob: -4.912919044494629

Token 75: ' x' (ID: 1215)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.6348599195480347
    2. ' ' → logprob: -1.6348599195480347
    3. '           ' → logprob: -2.759860038757324
    4. 'items' → logprob: -2.884860038757324
    5. '0' → logprob: -3.009860038757324
    6. ' items' → logprob: -3.134860038757324
    7. '   ' → logprob: -4.509860038757324
    8. 'continue' → logprob: -5.009860038757324
    9. '       ' → logprob: -5.259860038757324
    10. '            ' → logprob: -5.634860038757324

Token 76: '=' (ID: 28)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.13016435503959656
    2. '=' → logprob: -2.130164384841919
    3. 'max' → logprob: -7.25516414642334
    4. '=max' → logprob: -7.75516414642334
    5. ' ' → logprob: -8.00516414642334
    6. '=float' → logprob: -8.50516414642334
    7. '<|end|>' → logprob: -8.63016414642334
    8. ',' → logprob: -8.75516414642334
    9. '1' → logprob: -9.00516414642334
    10. '0' → logprob: -9.13016414642334

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03985615074634552
    2. '0' → logprob: -3.539856195449829
    3. ' ' → logprob: -5.16485595703125
    4. 'float' → logprob: -5.78985595703125
    5. ' float' → logprob: -7.91485595703125
    6. 'W' → logprob: -8.16485595703125
    7. 'v' → logprob: -8.41485595703125
    8. 'inf' → logprob: -9.41485595703125
    9. '10' → logprob: -9.91485595703125
    10. '100' → logprob: -9.91485595703125

Token 78: ' si' (ID: 1784)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.274488627910614
    2. '           ' → logprob: -2.024488687515259
    3. ',' → logprob: -2.774488687515259
    4. ':' → logprob: -4.14948844909668
    5. '
' → logprob: -4.52448844909668
    6. '   ' → logprob: -5.27448844909668
    7. '<|end|>' → logprob: -5.39948844909668
    8. ')' → logprob: -6.89948844909668
    9. ':
' → logprob: -7.14948844909668
    10. '            
' → logprob: -7.27448844909668

Token 79: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.38711804151535034
    2. ' v' → logprob: -1.1371181011199951
    3. 'w' → logprob: -9.887118339538574
    4. ' w' → logprob: -10.387118339538574
    5. 'x' → logprob: -10.512118339538574
    6. '	v' → logprob: -10.824618339538574
    7. '0' → logprob: -10.949618339538574
    8. '```' → logprob: -11.699618339538574
    9. 'ratio' → logprob: -11.762118339538574
    10. ' ' → logprob: -11.824618339538574

Token 80: '>' (ID: 29)
  Prédit: ' >'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.6349086165428162
    2. '>' → logprob: -0.7599086165428162
    3. '>=' → logprob: -7.009908676147461
    4. ' ' → logprob: -7.884908676147461
    5. ' >=' → logprob: -7.884908676147461
    6. '<|end|>' → logprob: -8.259908676147461
    7. '&gt' → logprob: -9.759908676147461
    8. '<=' → logprob: -10.134908676147461
    9. '==' → logprob: -10.197408676147461
    10. '<|end|>' → logprob: -10.634908676147461

Token 81: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002333547454327345
    2. ' ' → logprob: -6.127333641052246
    3. '<|end|>' → logprob: -9.002333641052246
    4. '>' → logprob: -11.877333641052246
    5. '<|end|>' → logprob: -11.877333641052246
    6. '=' → logprob: -12.252333641052246
    7. 'v' → logprob: -13.752333641052246
    8. '  ' → logprob: -14.127333641052246
    9. '1' → logprob: -14.627333641052246
    10. ' ' → logprob: -14.752333641052246

Token 82: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5052655935287476
    2. '       ' → logprob: -1.6302655935287476
    3. ',' → logprob: -2.630265712738037
    4. ':' → logprob: -3.130265712738037
    5. ' and' → logprob: -3.630265712738037
    6. ' else' → logprob: -3.755265712738037
    7. '   ' → logprob: -5.130265712738037
    8. '<|end|>' → logprob: -5.255265712738037
    9. '               ' → logprob: -5.380265712738037
    10. ' or' → logprob: -5.505265712738037

Token 83: ' sinon' (ID: 52915)
  Prédit: ' else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.18334195017814636
    2. '           ' → logprob: -2.8083419799804688
    3. ' x' → logprob: -3.0583419799804688
    4. ' ' → logprob: -4.058341979980469
    5. '            ' → logprob: -4.183341979980469
    6. 'else' → logprob: -4.808341979980469
    7. '1' → logprob: -5.183341979980469
    8. ',' → logprob: -6.058341979980469
    9. ' v' → logprob: -6.183341979980469
    10. 'x' → logprob: -6.433341979980469

Token 84: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.8263447284698486
    2. 'x' → logprob: -0.9513447284698486
    3. ' ' → logprob: -2.8263447284698486
    4. '0' → logprob: -3.0763447284698486
    5. ' continue' → logprob: -3.2013447284698486
    6. 'continue' → logprob: -3.9513447284698486
    7. ' continuer' → logprob: -5.8263444900512695
    8. ' on' → logprob: -6.2013444900512695
    9. ' pass' → logprob: -6.3263444900512695
    10. '   ' → logprob: -7.3263444900512695

Token 85: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.001145337475463748
    2. ' =' → logprob: -6.876145362854004
    3. '<|end|>' → logprob: -10.001145362854004
    4. '=False' → logprob: -10.876145362854004
    5. '0' → logprob: -11.251145362854004
    6. '==' → logprob: -11.626145362854004
    7. '=None' → logprob: -12.251145362854004
    8. ' ' → logprob: -12.376145362854004
    9. '=-' → logprob: -13.001145362854004
    10. '=int' → logprob: -13.126145362854004

Token 86: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006334125529974699
    2. '1' → logprob: -5.13133430480957
    3. ' ' → logprob: -7.88133430480957
    4. '-' → logprob: -11.50633430480957
    5. '<|end|>' → logprob: -12.81883430480957
    6. '```' → logprob: -13.38133430480957
    7. '۰' → logprob: -13.81883430480957
    8. 'x' → logprob: -13.81883430480957
    9. '<|end|>' → logprob: -13.81883430480957
    10. '   ' → logprob: -14.56883430480957

Token 87: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7310144901275635
    2. '       ' → logprob: -0.9810144901275635
    3. '
' → logprob: -2.4810144901275635
    4. 'x' → logprob: -4.356014251708984
    5. '   ' → logprob: -4.481014251708984
    6. '\n' → logprob: -4.606014251708984
    7. ' if' → logprob: -5.356014251708984
    8. '<|end|>' → logprob: -5.981014251708984
    9. 'if' → logprob: -6.106014251708984
    10. ' x' → logprob: -6.231014251708984

Token 88: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.24798472225666046
    2. '
' → logprob: -1.872984766960144
    3. '           ' → logprob: -3.2479846477508545
    4. '        
' → logprob: -4.997984886169434
    5. '   ' → logprob: -5.122984886169434
    6. '\n' → logprob: -5.622984886169434
    7. 'x' → logprob: -6.122984886169434
    8. '    
' → logprob: -6.372984886169434
    9. ' 
' → logprob: -6.497984886169434
    10. '<|end|>' → logprob: -6.872984886169434

Token 89: ' ratio' (ID: 18051)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.18203848600387573
    2. ' x' → logprob: -1.9320385456085205
    3. ' if' → logprob: -4.557038307189941
    4. '           ' → logprob: -5.307038307189941
    5. 'if' → logprob: -5.432038307189941
    6. '   ' → logprob: -7.932038307189941
    7. '       ' → logprob: -8.057038307189941
    8. ' items' → logprob: -8.307038307189941
    9. 'items' → logprob: -8.557038307189941
    10. ' return' → logprob: -8.682038307189941

Token 90: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.11293859034776688
    2. '=' → logprob: -2.237938642501831
    3. ' ' → logprob: -9.36293888092041
    4. ',' → logprob: -11.23793888092041
    5. ')' → logprob: -12.36293888092041
    6. ' >' → logprob: -13.48793888092041
    7. '>' → logprob: -13.86293888092041
    8. 's' → logprob: -13.86293888092041
    9. '<|end|>' → logprob: -13.86293888092041
    10. ' +=' → logprob: -14.11293888092041

Token 91: ' float' (ID: 4428)
  Prédit: 'float'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'float' → logprob: -0.28891411423683167
    2. ' float' → logprob: -1.7889140844345093
    3. 'v' → logprob: -3.413914203643799
    4. '1' → logprob: -3.538914203643799
    5. ' v' → logprob: -4.538914203643799
    6. ' ' → logprob: -5.163914203643799
    7. '0' → logprob: -5.413914203643799
    8. '100' → logprob: -8.03891372680664
    9. '999' → logprob: -8.41391372680664
    10. '10' → logprob: -9.03891372680664

Token 92: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.12830013036727905
    2. ''in' → logprob: -2.378300189971924
    3. ''' → logprob: -4.003300189971924
    4. 'inf' → logprob: -5.128300189971924
    5. ''il' → logprob: -7.503300189971924
    6. '('-' → logprob: -7.753300189971924
    7. ''a' → logprob: -8.253299713134766
    8. ''op' → logprob: -8.503299713134766
    9. ''x' → logprob: -8.753299713134766
    10. ''i' → logprob: -8.878299713134766

Token 93: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -0.00047535591875202954
    2. '-inf' → logprob: -8.12547492980957
    3. ''in' → logprob: -9.00047492980957
    4. ''' → logprob: -10.37547492980957
    5. 'in' → logprob: -12.00047492980957
    6. '.inf' → logprob: -12.87547492980957
    7. '1' → logprob: -13.00047492980957
    8. ''i' → logprob: -13.25047492980957
    9. 'Inf' → logprob: -13.37547492980957
    10. 'i' → logprob: -13.50047492980957

Token 94: '')' (ID: 1542)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00942998006939888
    2. '')' → logprob: -5.009429931640625
    3. ' if' → logprob: -6.134429931640625
    4. ')
' → logprob: -8.134429931640625
    5. 'if' → logprob: -8.884429931640625
    6. ' )' → logprob: -9.884429931640625
    7. '}' → logprob: -11.009429931640625
    8. '')
' → logprob: -11.384429931640625
    9. '),' → logprob: -11.884429931640625
    10. '   ' → logprob: -12.634429931640625

Token 95: ' if' (ID: 538)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.08121281862258911
    2. '
' → logprob: -3.0812127590179443
    3. ')' → logprob: -4.081212997436523
    4. '<|end|>' → logprob: -4.956212997436523
    5. ',' → logprob: -5.831212997436523
    6. '   ' → logprob: -6.456212997436523
    7. ')
' → logprob: -6.456212997436523
    8. '        
' → logprob: -7.456212997436523
    9. '<|end|>' → logprob: -7.831212997436523
    10. '
' → logprob: -8.331212997436523

Token 96: ' v' (ID: 323)
  Prédit: ' v'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' v' → logprob: -0.0336495004594326
    2. 'v' → logprob: -3.408649444580078
    3. '	v' → logprob: -13.408649444580078
    4. ' ' → logprob: -13.658649444580078
    5. '(v' → logprob: -15.658649444580078
    6. ' ' → logprob: -15.783649444580078
    7. ')v' → logprob: -16.033649444580078
    8. '  ' → logprob: -16.283649444580078
    9. ' w' → logprob: -16.658649444580078
    10. 'w' → logprob: -16.783649444580078

Token 97: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.05494186654686928
    2. ' >' → logprob: -2.9299418926239014
    3. ' ' → logprob: -10.80494213104248
    4. '<|end|>' → logprob: -10.80494213104248
    5. '&gt' → logprob: -11.42994213104248
    6. '0' → logprob: -13.55494213104248
    7. '＞' → logprob: -14.17994213104248
    8. ')' → logprob: -14.17994213104248
    9. ' ' → logprob: -14.30494213104248
    10. '<|end|>' → logprob: -14.55494213104248

Token 98: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3132726848125458
    2. ' ' → logprob: -1.3132727146148682
    3. '<|end|>' → logprob: -11.688272476196289
    4. '  ' → logprob: -13.313272476196289
    5. ' ' → logprob: -15.188272476196289
    6. '   ' → logprob: -15.813272476196289
    7. '<|end|>' → logprob: -16.31327247619629
    8. '۰' → logprob: -16.50077247619629
    9. '    ' → logprob: -16.81327247619629
    10. '1' → logprob: -17.12577247619629

Token 99: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00020401719666551799
    2. ' ' → logprob: -8.500204086303711
    3. '<|end|>' → logprob: -15.250204086303711
    4. '۰' → logprob: -17.00020408630371
    5. '  ' → logprob: -17.12520408630371
    6. '０' → logprob: -18.81270408630371
    7. '```' → logprob: -19.00020408630371
    8. ' ' → logprob: -19.00020408630371
    9. '٠' → logprob: -19.12520408630371
    10. '00' → logprob: -19.43770408630371

Token 100: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.048906631767749786
    2. 'else' → logprob: -3.0489065647125244
    3. '       ' → logprob: -8.673906326293945
    4. '        ' → logprob: -9.298906326293945
    5. ' ' → logprob: -11.173906326293945
    6. '           ' → logprob: -11.548906326293945
    7. '	else' → logprob: -11.548906326293945
    8. '   ' → logprob: -11.798906326293945
    9. '    ' → logprob: -12.173906326293945
    10. '<|end|>' → logprob: -12.673906326293945

Token 101: ' float' (ID: 4428)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6943172216415405
    2. ' ' → logprob: -0.6943172216415405
    3. ' -' → logprob: -7.31931734085083
    4. '-' → logprob: -8.069316864013672
    5. ' float' → logprob: -9.194316864013672
    6. 'float' → logprob: -9.819316864013672
    7. '  ' → logprob: -11.069316864013672
    8. '   ' → logprob: -11.944316864013672
    9. ' ' → logprob: -12.069316864013672
    10. '-f' → logprob: -13.444316864013672

Token 102: '('-' (ID: 33343)
  Prédit: '('-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('-' → logprob: -0.004764626733958721
    2. '('' → logprob: -5.754764556884766
    3. '(' → logprob: -6.754764556884766
    4. ''-' → logprob: -8.129764556884766
    5. '-' → logprob: -10.754764556884766
    6. '(
' → logprob: -10.879764556884766
    7. '("-' → logprob: -11.004764556884766
    8. '('--' → logprob: -11.254764556884766
    9. '32' → logprob: -11.504764556884766
    10. ''s' → logprob: -12.129764556884766

Token 103: 'inf' (ID: 22226)
  Prédit: 'inf'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'inf' → logprob: -4.320199877838604e-07
    2. ' inf' → logprob: -16.5
    3. '1' → logprob: -17.0
    4. '_inf' → logprob: -17.125
    5. '.inf' → logprob: -17.125
    6. 'in' → logprob: -17.5
    7. '100' → logprob: -17.5
    8. '-inf' → logprob: -17.75
    9. 'i' → logprob: -18.25
    10. '

' → logprob: -18.75

Token 104: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.00763703603297472
    2. ')' → logprob: -5.007637023925781
    3. '')
' → logprob: -7.007637023925781
    4. ''' → logprob: -12.382637023925781
    5. '')

' → logprob: -13.132637023925781
    6. ''))' → logprob: -13.257637023925781
    7. '       ' → logprob: -13.507637023925781
    8. ')
' → logprob: -13.507637023925781
    9. '")' → logprob: -13.757637023925781
    10. '   ' → logprob: -13.882637023925781

Token 105: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003058873349800706
    2. '   ' → logprob: -5.878058910369873
    3. 'items' → logprob: -9.503058433532715
    4. '           ' → logprob: -9.878058433532715
    5. ' items' → logprob: -10.003058433532715
    6. '<|end|>' → logprob: -10.128058433532715
    7. ')' → logprob: -10.753058433532715
    8. '        
' → logprob: -12.253058433532715
    9. ',' → logprob: -12.378058433532715
    10. '<|end|>' → logprob: -12.628058433532715

Token 106: ' items' (ID: 4732)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0286544281989336
    2. '   ' → logprob: -3.6536543369293213
    3. ' items' → logprob: -6.6536545753479
    4. 'items' (adapté à ' items') → logprob: -6.9036545753479
    5. '           ' → logprob: -10.653654098510742
    6. '      ' → logprob: -12.403654098510742
    7. '
' → logprob: -12.528654098510742
    8. '        
' → logprob: -12.528654098510742
    9. '<|end|>' → logprob: -12.778654098510742
    10. ' ' → logprob: -12.778654098510742

Token 107: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0011823695385828614
    2. '.' → logprob: -6.751182556152344
    3. ' .' → logprob: -12.626182556152344
    4. '   ' → logprob: -12.876182556152344
    5. '.extend' → logprob: -13.501182556152344
    6. '.add' → logprob: -13.751182556152344
    7. '.setdefault' → logprob: -14.126182556152344
    8. '       ' → logprob: -14.251182556152344
    9. '.app' → logprob: -14.626182556152344
    10. '.push' → logprob: -14.751182556152344

Token 108: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.000386105413781479
    2. '(' → logprob: -7.8753862380981445
    3. '(((' → logprob: -13.125386238098145
    4. '([' → logprob: -13.625386238098145
    5. '({'' → logprob: -14.000386238098145
    6. '(w' → logprob: -14.500386238098145
    7. ' ((' → logprob: -14.500386238098145
    8. '   ' → logprob: -15.250386238098145
    9. '(('' → logprob: -15.750386238098145
    10. '(
' → logprob: -15.875386238098145

Token 109: 'ratio' (ID: 81339)
  Prédit: 'ratio'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ratio' → logprob: -0.06518104672431946
    2. 'w' → logprob: -2.815181016921997
    3. ' ratio' → logprob: -5.940181255340576
    4. '   ' → logprob: -8.440180778503418
    5. 'v' → logprob: -8.940180778503418
    6. ' w' → logprob: -9.190180778503418
    7. 'weight' → logprob: -10.065180778503418
    8. 'ration' → logprob: -11.440180778503418
    9. 'r' → logprob: -11.690180778503418
    10. '-w' → logprob: -11.815180778503418

Token 110: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -8.900034299585968e-05
    2. ' ,' → logprob: -10.000088691711426
    3. ',w' → logprob: -10.125088691711426
    4. ',
' → logprob: -14.000088691711426
    5. '),' → logprob: -14.125088691711426
    6. '   ' → logprob: -14.375088691711426
    7. ')' → logprob: -14.875088691711426
    8. 'w' → logprob: -15.000088691711426
    9. ',n' → logprob: -16.250089645385742
    10. ',v' → logprob: -16.250089645385742

Token 111: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.03812732920050621
    2. ' w' → logprob: -3.2881274223327637
    3. 'v' → logprob: -10.038126945495605
    4. '   ' → logprob: -10.788126945495605
    5. ' v' → logprob: -12.163126945495605
    6. '    ' → logprob: -12.538126945495605
    7. ' ' → logprob: -12.538126945495605
    8. ')' → logprob: -12.663126945495605
    9. '	w' → logprob: -14.163126945495605
    10. '  ' → logprob: -14.413126945495605

Token 112: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018542143516242504
    2. ' ,' → logprob: -9.250185012817383
    3. ',v' → logprob: -9.375185012817383
    4. ',
' → logprob: -13.000185012817383
    5. '   ' → logprob: -14.375185012817383
    6. ')' → logprob: -14.750185012817383
    7. ',w' → logprob: -15.250185012817383
    8. 'v' → logprob: -15.375185012817383
    9. '))' → logprob: -15.625185012817383
    10. '),' → logprob: -15.875185012817383

Token 113: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.012515541166067123
    2. ' v' → logprob: -4.387515544891357
    3. ' ' → logprob: -12.8875150680542
    4. '   ' → logprob: -13.5125150680542
    5. ')v' → logprob: -14.8875150680542
    6. ')' → logprob: -15.2625150680542
    7. '	v' → logprob: -15.3875150680542
    8. '  ' → logprob: -15.5750150680542
    9. 'w' → logprob: -15.9500150680542
    10. '    ' → logprob: -15.9500150680542

Token 114: '))

' (ID: 9746)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.02981541119515896
    2. ')' → logprob: -3.529815435409546
    3. '))
' → logprob: -9.779815673828125
    4. ')))' → logprob: -13.154815673828125
    5. ')
' → logprob: -13.279815673828125
    6. ' ))' → logprob: -13.404815673828125
    7. '),' → logprob: -14.029815673828125
    8. '   ' → logprob: -14.279815673828125
    9. ',' → logprob: -14.404815673828125
    10. '))

' → logprob: -15.029815673828125

Token 115: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.248517245054245
    2. 'items' → logprob: -1.6235172748565674
    3. ' items' → logprob: -3.9985172748565674
    4. '
' → logprob: -6.123517036437988
    5. '    
' → logprob: -6.248517036437988
    6. '	items' → logprob: -8.998517036437988
    7. '```' → logprob: -9.873517036437988
    8. '.items' → logprob: -9.998517036437988
    9. ')' → logprob: -10.373517036437988
    10. '        
' → logprob: -11.373517036437988

Token 116: ' #' (ID: 1069)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.009741685353219509
    2. '   ' → logprob: -4.88474178314209
    3. ' items' → logprob: -6.25974178314209
    4. '    
' → logprob: -8.75974178314209
    5. '#' (adapté à ' #') → logprob: -11.00974178314209
    6. 'sorted' → logprob: -11.25974178314209
    7. '
' → logprob: -11.50974178314209
    8. '	items' → logprob: -11.88474178314209
    9. '.items' → logprob: -12.25974178314209
    10. ' ' → logprob: -12.75974178314209

Token 117: ' Trier' (ID: 191551)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.12991566956043243
    2. ' items' → logprob: -2.129915714263916
    3. '#' → logprob: -6.254915714263916
    4. '   ' → logprob: -7.129915714263916
    5. ' #' → logprob: -10.004915237426758
    6. 'sorted' → logprob: -10.129915237426758
    7. '.items' → logprob: -10.379915237426758
    8. '(items' → logprob: -10.879915237426758
    9. '	items' → logprob: -10.879915237426758
    10. '```' → logprob: -11.004915237426758

Token 118: ' selon' (ID: 27571)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.0989278107881546
    2. ' items' → logprob: -2.5989277362823486
    3. '   ' → logprob: -4.973927974700928
    4. '(items' → logprob: -5.473927974700928
    5. ' les' → logprob: -5.598927974700928
    6. 'les' → logprob: -6.098927974700928
    7. 's' → logprob: -6.723927974700928
    8. '_items' → logprob: -7.723927974700928
    9. '	items' → logprob: -7.848927974700928
    10. '.items' → logprob: -7.973927974700928

Token 119: ' ratio' (ID: 18051)
  Prédit: ' lambda'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lambda' → logprob: -1.2570031881332397
    2. ' reverse' → logprob: -1.5070031881332397
    3. ' ratio' → logprob: -1.8820031881332397
    4. 'lambda' → logprob: -2.0070033073425293
    5. 'reverse' → logprob: -2.6320033073425293
    6. '=lambda' → logprob: -3.2570033073425293
    7. ' la' → logprob: -3.6320033073425293
    8. 'ratio' → logprob: -3.7570033073425293
    9. '   ' → logprob: -4.007003307342529
    10. ' le' → logprob: -4.382003307342529

Token 120: ' décro' (ID: 176854)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.40773794054985046
    2. ',' → logprob: -1.2827379703521729
    3. 's' → logprob: -4.032737731933594
    4. '=' → logprob: -4.032737731933594
    5. '   ' → logprob: -5.032737731933594
    6. ' items' → logprob: -5.407737731933594
    7. ' =' → logprob: -5.532737731933594
    8. ',
' → logprob: -6.407737731933594
    9. '.items' → logprob: -6.907737731933594
    10. '_items' → logprob: -7.157737731933594

Token 121: 'issant' (ID: 31359)
  Prédit: 'nd'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nd' → logprob: -0.06746713072061539
    2. 'issant' → logprob: -3.567467212677002
    3. 'd' → logprob: -3.942467212677002
    4. 'ss' → logprob: -4.817467212677002
    5. 'dent' → logprob: -5.692467212677002
    6. 's' → logprob: -6.817467212677002
    7. 'rand' → logprob: -6.942467212677002
    8. 'r' → logprob: -7.192467212677002
    9. 'sd' → logprob: -7.192467212677002
    10. 'rend' → logprob: -7.317467212677002

Token 122: '
' (ID: 198)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.300886869430542
    2. ',' → logprob: -1.425886869430542
    3. ',
' → logprob: -4.425887107849121
    4. ' items' → logprob: -6.050887107849121
    5. '   ' → logprob: -6.425887107849121
    6. '(items' → logprob: -7.175887107849121
    7. 's' → logprob: -7.425887107849121
    8. '.items' → logprob: -7.550887107849121
    9. '
' → logprob: -7.675887107849121
    10. '_items' → logprob: -8.050887107849121

Token 123: '   ' (ID: 271)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' → logprob: -0.10533075034618378
    2. ',' → logprob: -2.9803307056427
    3. '   ' → logprob: -3.6053307056427
    4. ' items' → logprob: -4.105330944061279
    5. '.items' → logprob: -6.730330944061279
    6. ',
' → logprob: -6.855330944061279
    7. ')' → logprob: -7.230330944061279
    8. '(items' → logprob: -7.355330944061279
    9. 's' → logprob: -7.855330944061279
    10. '
' → logprob: -7.980330944061279

Token 124: ' items' (ID: 4732)
  Prédit: 'items'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'items' (adapté à ' items') → logprob: -0.5783540606498718
    2. ' items' → logprob: -0.8283540606498718
    3. '   ' → logprob: -6.0783538818359375
    4. '	items' → logprob: -10.328353881835938
    5. '.items' → logprob: -10.578353881835938
    6. 'sorted' → logprob: -11.328353881835938
    7. '    
' → logprob: -11.578353881835938
    8. '_items' → logprob: -11.828353881835938
    9. ' sorted' → logprob: -11.953353881835938
    10. 's' → logprob: -12.328353881835938

Token 125: '.sort' (ID: 19551)
  Prédit: '.sort'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.sort' → logprob: -0.001706963055767119
    2. '.' → logprob: -6.376707077026367
    3. ' .' → logprob: -13.376707077026367
    4. '.sorted' → logprob: -13.751707077026367
    5. '=' → logprob: -14.501707077026367
    6. 'sort' → logprob: -14.501707077026367
    7. '	sort' → logprob: -15.251707077026367
    8. '_sorted' → logprob: -15.501707077026367
    9. '.s' → logprob: -15.751707077026367
    10. '.Sort' → logprob: -15.876707077026367

Token 126: '(key' (ID: 8932)
  Prédit: '(reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(reverse' → logprob: -0.004090274218469858
    2. '(key' → logprob: -5.504090309143066
    3. 'reverse' → logprob: -11.379090309143066
    4. '(' → logprob: -15.254090309143066
    5. ' reverse' → logprob: -16.50408935546875
    6. '.reverse' → logprob: -16.75408935546875
    7. '_reverse' → logprob: -18.12908935546875
    8. '()' → logprob: -18.75408935546875
    9. 'Reverse' → logprob: -19.25408935546875
    10. '(re' → logprob: -19.62908935546875

Token 127: '=lambda' (ID: 64865)
  Prédit: '=lambda'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=lambda' → logprob: -0.0005530327325686812
    2. '=' → logprob: -7.500553131103516
    3. 'lambda' → logprob: -17.500553131103516
    4. '=
' → logprob: -18.000553131103516
    5. '=_' → logprob: -18.875553131103516
    6. '=item' → logprob: -19.375553131103516
    7. '=l' → logprob: -20.250553131103516
    8. ' =' → logprob: -20.250553131103516
    9. '=\' → logprob: -20.500553131103516
    10. '＝' → logprob: -20.750553131103516

Token 128: ' x' (ID: 1215)
  Prédit: ' x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' x' → logprob: -0.026703722774982452
    2. 'x' → logprob: -3.6517038345336914
    3. ' item' → logprob: -8.401703834533691
    4. 'item' → logprob: -8.651703834533691
    5. 't' → logprob: -13.901703834533691
    6. ' items' → logprob: -14.651703834533691
    7. ' i' → logprob: -14.776703834533691
    8. ' ' → logprob: -14.901703834533691
    9. 'items' → logprob: -15.026703834533691
    10. '	x' → logprob: -15.026703834533691

Token 129: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010123264510184526
    2. ' :' → logprob: -7.501012325286865
    3. 'x' → logprob: -8.251012802124023
    4. ':x' → logprob: -8.626012802124023
    5. ' x' → logprob: -11.626012802124023
    6. ':
' → logprob: -13.001012802124023
    7. '1' → logprob: -13.501012802124023
    8. ' ' → logprob: -13.876012802124023
    9. '[' → logprob: -13.876012802124023
    10. '-' → logprob: -14.501012802124023

Token 130: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.3428260087966919
    2. ' x' → logprob: -1.342826008796692
    3. ' -' → logprob: -3.8428258895874023
    4. '-x' → logprob: -5.342825889587402
    5. '-' → logprob: -5.842825889587402
    6. '	x' → logprob: -11.717825889587402
    7. '   ' → logprob: -13.342825889587402
    8. ')x' → logprob: -13.717825889587402
    9. ' ' → logprob: -13.967825889587402
    10. '(-' → logprob: -14.342825889587402

Token 131: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.005858874414116144
    2. ':' → logprob: -5.380858898162842
    3. '0' → logprob: -7.505858898162842
    4. '-' → logprob: -7.630858898162842
    5. 'x' → logprob: -9.255858421325684
    6. '.' → logprob: -10.505858421325684
    7. '   ' → logprob: -11.255858421325684
    8. '[-' → logprob: -11.255858421325684
    9. ',' → logprob: -11.505858421325684
    10. ')' → logprob: -11.630858421325684

Token 132: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013778526335954666
    2. '-' → logprob: -7.626378059387207
    3. '1' → logprob: -7.876378059387207
    4. ' ' → logprob: -8.501378059387207
    5. '[' → logprob: -8.751378059387207
    6. ')' → logprob: -10.813878059387207
    7. '   ' → logprob: -10.876378059387207
    8. '2' → logprob: -11.251378059387207
    9. '])' → logprob: -11.313878059387207
    10. '```' → logprob: -11.501378059387207

Token 133: '],' (ID: 2155)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.735893965815194e-05
    2. ' ,' → logprob: -11.375017166137695
    3. '),' → logprob: -12.250017166137695
    4. '},' → logprob: -14.375017166137695
    5. '],' → logprob: -16.625017166137695
    6. '>,' → logprob: -16.625017166137695
    7. ')' → logprob: -16.750017166137695
    8. '   ' → logprob: -17.000017166137695
    9. ',
' → logprob: -17.250017166137695
    10. '[::-' → logprob: -17.625017166137695

Token 134: ' reverse' (ID: 18199)
  Prédit: 'reverse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'reverse' → logprob: -0.006715967319905758
    2. ' reverse' → logprob: -5.006715774536133
    3. '   ' → logprob: -15.006715774536133
    4. 'True' → logprob: -15.756715774536133
    5. '_reverse' → logprob: -16.381715774536133
    6. 'Reverse' → logprob: -17.256715774536133
    7. '.reverse' → logprob: -17.381715774536133
    8. '(reverse' → logprob: -18.131715774536133
    9. ' True' → logprob: -18.506715774536133
    10. 're' → logprob: -19.006715774536133

Token 135: '=True' (ID: 7827)
  Prédit: '=True'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=True' → logprob: -0.00013333676906768233
    2. '=' → logprob: -9.000133514404297
    3. ')' → logprob: -11.750133514404297
    4. 'True' → logprob: -13.500133514404297
    5. '(True' → logprob: -15.625133514404297
    6. ' True' → logprob: -16.000133514404297
    7. ')=' → logprob: -16.375133514404297
    8. ',' → logprob: -16.750133514404297
    9. '=T' → logprob: -16.750133514404297
    10. '=
' → logprob: -17.250133514404297

Token 136: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.045823566731997e-05
    2. ')
' → logprob: -10.875020027160645
    3. '   ' → logprob: -14.250020027160645
    4. ' )' → logprob: -14.375020027160645
    5. ')

' → logprob: -15.750020027160645
    6. '))' → logprob: -17.12502098083496
    7. ')`' → logprob: -17.25002098083496
    8. ')
' → logprob: -18.12502098083496
    9. ')#' → logprob: -18.62502098083496
    10. ')}' → logprob: -18.62502098083496

Token 137: '   ' (ID: 271)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.21023927628993988
    2. 'result' → logprob: -2.5852391719818115
    3. '   ' → logprob: -3.7102391719818115
    4. 'capacity' → logprob: -3.7102391719818115
    5. 'weight' → logprob: -4.210239410400391
    6. 'answer' → logprob: -4.460239410400391
    7. 'remaining' → logprob: -4.835239410400391
    8. 'res' → logprob: -4.960239410400391
    9. 'amount' → logprob: -5.460239410400391
    10. 'current' → logprob: -5.585239410400391

Token 138: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.34020379185676575
    2. 'res' → logprob: -2.7152037620544434
    3. 'result' → logprob: -2.9652037620544434
    4. 'weight' → logprob: -3.3402037620544434
    5. 'remaining' → logprob: -3.4652037620544434
    6. 'capacity' → logprob: -3.5902037620544434
    7. 'rem' → logprob: -4.340203762054443
    8. 'value' → logprob: -4.465203762054443
    9. 'dp' → logprob: -4.590203762054443
    10. 'taken' → logprob: -4.965203762054443

Token 139: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -0.0028871409595012665
    2. '_' → logprob: -6.25288724899292
    3. '_weight' → logprob: -7.87788724899292
    4. '_val' → logprob: -8.002886772155762
    5. ' =' → logprob: -9.377886772155762
    6. '=' → logprob: -9.877886772155762
    7. '_w' → logprob: -10.127886772155762
    8. '_v' → logprob: -10.252886772155762
    9. 'value' → logprob: -11.002886772155762
    10. 'Value' → logprob: -11.377886772155762

Token 140: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0550384446978569
    2. '=' → logprob: -2.9300384521484375
    3. ',' → logprob: -8.805038452148438
    4. ' ' → logprob: -12.930038452148438
    5. ' ,' → logprob: -13.430038452148438
    6. ' +=' → logprob: -13.805038452148438
    7. ')' → logprob: -14.680038452148438
    8. ' =
' → logprob: -15.305038452148438
    9. '  ' → logprob: -15.680038452148438
    10. '<|end|>' → logprob: -16.180038452148438

Token 141: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.02324768900871277
    2. ' ' → logprob: -3.773247718811035
    3. '   ' → logprob: -13.523247718811035
    4. ' ' → logprob: -15.273247718811035
    5. '  ' → logprob: -15.460747718811035
    6. '```' → logprob: -17.08574676513672
    7. 'float' → logprob: -17.46074676513672
    8. '۰' → logprob: -17.46074676513672
    9. '=' → logprob: -17.64824676513672
    10. '.' → logprob: -17.83574676513672

Token 142: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.5822400857578032e-05
    2. ' ' → logprob: -10.625025749206543
    3. 'float' → logprob: -14.937525749206543
    4. '   ' → logprob: -15.250025749206543
    5. 'sum' → logprob: -15.500025749206543
    6. 'total' → logprob: -16.00002670288086
    7. 'fraction' → logprob: -16.31252670288086
    8. '```' → logprob: -16.56252670288086
    9. '.' → logprob: -16.68752670288086
    10. '  ' → logprob: -16.81252670288086

Token 143: '.' (ID: 13)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.027130527421832085
    2. '    
' → logprob: -4.527130603790283
    3. '   ' → logprob: -5.152130603790283
    4. ',' → logprob: -5.652130603790283
    5. '.' → logprob: -5.902130603790283
    6. ',
' → logprob: -7.152130603790283
    7. '  
' → logprob: -7.277130603790283
    8. '   
' → logprob: -7.277130603790283
    9. '
' → logprob: -7.777130603790283
    10. ' 
' → logprob: -8.027130126953125

Token 144: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -1.1875571544806007e-05
    2. 'rstrip' → logprob: -12.750011444091797
    3. 'py' → logprob: -13.250011444091797
    4. '5' → logprob: -13.375011444091797
    5. '6' → logprob: -13.500011444091797
    6. 'float' → logprob: -13.875011444091797
    7. 'def' → logprob: -14.125011444091797
    8. '1' → logprob: -15.000011444091797
    9. 'python' → logprob: -15.125011444091797
    10. '```' → logprob: -15.250011444091797

Token 145: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7091531157493591
    2. '
' → logprob: -0.8341531157493591
    3. 'remaining' → logprob: -3.709153175354004
    4. ' remaining' → logprob: -4.209153175354004
    5. 'capacity' → logprob: -4.834153175354004
    6. '    
' → logprob: -4.959153175354004
    7. ' capacity' → logprob: -4.959153175354004
    8. 'current' → logprob: -5.459153175354004
    9. ' current' → logprob: -6.709153175354004
    10. ',' → logprob: -6.709153175354004

Token 146: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.011030968278646469
    2. 'remaining' → logprob: -6.136031150817871
    3. 'capacity' → logprob: -6.136031150817871
    4. ' capacity' → logprob: -6.261031150817871
    5. '
' → logprob: -6.511031150817871
    6. ' remaining' → logprob: -6.636031150817871
    7. '    
' → logprob: -7.261031150817871
    8. 'current' → logprob: -8.011031150817871
    9. ' current' → logprob: -8.636031150817871
    10. 'weight' → logprob: -8.886031150817871

Token 147: ' capacity' (ID: 12241)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' (adapté à ' capacity') → logprob: -0.5006270408630371
    2. 'remaining' → logprob: -1.000627040863037
    3. 'weight' → logprob: -4.250627040863037
    4. 'remain' → logprob: -5.250627040863037
    5. 'total' → logprob: -6.000627040863037
    6. 'rem' → logprob: -6.500627040863037
    7. 'current' → logprob: -6.875627040863037
    8. 'W' → logprob: -7.625627040863037
    9. 'for' → logprob: -7.750627040863037
    10. ' capacity' → logprob: -8.375627517700195

Token 148: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07010293006896973
    2. '=' → logprob: -2.6951029300689697
    3. '_remaining' → logprob: -8.94510269165039
    4. '_' → logprob: -10.57010269165039
    5. ' ' → logprob: -12.44510269165039
    6. '   ' → logprob: -12.82010269165039
    7. '_left' → logprob: -14.32010269165039
    8. 'Remaining' → logprob: -14.82010269165039
    9. '_available' → logprob: -15.07010269165039
    10. '  ' → logprob: -15.07010269165039

Token 149: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.11285137385129929
    2. ' W' → logprob: -2.23785138130188
    3. '   ' → logprob: -10.9878511428833
    4. '	W' → logprob: -12.4878511428833
    5. ' ' → logprob: -12.6128511428833
    6. 'float' → logprob: -13.2378511428833
    7. '  ' → logprob: -13.4878511428833
    8. ' float' → logprob: -15.2378511428833
    9. ' ' → logprob: -15.3628511428833
    10. '0' → logprob: -15.4878511428833

Token 150: '

' (ID: 279)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '
' → logprob: -0.12732334434986115
    2. '   ' → logprob: -2.8773233890533447
    3. ' for' → logprob: -3.3773233890533447
    4. 'for' → logprob: -4.252323150634766
    5. '    
' → logprob: -4.502323150634766
    6. '<|end|>' → logprob: -6.627323150634766
    7. '  
' → logprob: -7.252323150634766
    8. '
' → logprob: -7.752323150634766
    9. '	for' → logprob: -8.127323150634766
    10. '\n' → logprob: -8.252323150634766

Token 151: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.3825714886188507
    2. ' for' → logprob: -1.8825714588165283
    3. 'for' → logprob: -1.8825714588165283
    4. '
' → logprob: -4.382571697235107
    5. '    
' → logprob: -7.007571697235107
    6. ' 
' → logprob: -10.50757122039795
    7. '	for' → logprob: -10.63257122039795
    8. '  
' → logprob: -11.00757122039795
    9. '<|end|>' → logprob: -11.38257122039795
    10. '   
' → logprob: -12.00757122039795

Token 152: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -7.696077227592468e-05
    2. ' for' → logprob: -10.000077247619629
    3. '   ' → logprob: -10.375077247619629
    4. '
' → logprob: -16.250076293945312
    5. '    
' → logprob: -16.625076293945312
    6. '	for' → logprob: -16.875076293945312
    7. '  ' → logprob: -19.125076293945312
    8. '```' → logprob: -20.000076293945312
    9. 'while' → logprob: -20.000076293945312
    10. ' ' → logprob: -20.250076293945312

Token 153: ' ratio' (ID: 18051)
  Prédit: ' ratio'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ratio' → logprob: -0.33431577682495117
    2. 'ratio' → logprob: -1.3343157768249512
    3. '_,' → logprob: -4.209315776824951
    4. '_ratio' → logprob: -5.709315776824951
    5. ',' → logprob: -6.709315776824951
    6. ' _,' → logprob: -7.084315776824951
    7. '   ' → logprob: -8.33431625366211
    8. ' ,' → logprob: -8.95931625366211
    9. 'ration' → logprob: -10.20931625366211
    10. '```' → logprob: -10.77181625366211

Token 154: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.0339031834737398e-05
    2. ' ,' → logprob: -11.000020027160645
    3. ',
' → logprob: -13.500020027160645
    4. '_,' → logprob: -13.625020027160645
    5. ' in' → logprob: -15.500020027160645
    6. ',w' → logprob: -15.625020027160645
    7. '‌,' → logprob: -16.75002098083496
    8. ',r' → logprob: -16.87502098083496
    9. ',item' → logprob: -17.25002098083496
    10. ',value' → logprob: -17.25002098083496

Token 155: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.029852306470274925
    2. ' w' → logprob: -3.5298523902893066
    3. 'weight' → logprob: -9.279851913452148
    4. ' weight' → logprob: -11.779851913452148
    5. '   ' → logprob: -14.529851913452148
    6. '	w' → logprob: -16.15485191345215
    7. ' ' → logprob: -16.15485191345215
    8. 'wt' → logprob: -16.77985191345215
    9. '    ' → logprob: -17.02985191345215
    10. '  ' → logprob: -17.40485191345215

Token 156: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -3.893480243277736e-05
    2. ' ,' → logprob: -10.250039100646973
    3. ',v' → logprob: -12.875039100646973
    4. ',value' → logprob: -14.875039100646973
    5. ',w' → logprob: -15.250039100646973
    6. '‌,' → logprob: -16.750038146972656
    7. '_,' → logprob: -17.000038146972656
    8. '   ' → logprob: -17.250038146972656
    9. ',user' → logprob: -17.500038146972656
    10. ' in' → logprob: -17.625038146972656

Token 157: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0005532711511477828
    2. ' v' → logprob: -7.500553131103516
    3. ' ' → logprob: -16.125553131103516
    4. '   ' → logprob: -16.625553131103516
    5. '	v' → logprob: -16.750553131103516
    6. '  ' → logprob: -17.875553131103516
    7. '_v' → logprob: -18.125553131103516
    8. 'value' → logprob: -18.375553131103516
    9. '    ' → logprob: -18.500553131103516
    10. '```' → logprob: -19.000553131103516

Token 158: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03367059677839279
    2. 'in' → logprob: -3.408670663833618
    3. ',' → logprob: -11.533670425415039
    4. '   ' → logprob: -12.158670425415039
    5. ':' → logprob: -12.533670425415039
    6. ' ' → logprob: -12.908670425415039
    7. '  ' → logprob: -13.408670425415039
    8. 's' → logprob: -14.533670425415039
    9. '	in' → logprob: -14.658670425415039
    10. ' i' → logprob: -15.533670425415039

Token 159: ' items' (ID: 4732)
  Prédit: ' items'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' items' → logprob: -0.4288185238838196
    2. 'items' → logprob: -1.0538184642791748
    3. '(items' → logprob: -10.053818702697754
    4. '	items' → logprob: -10.428818702697754
    5. '_items' → logprob: -11.053818702697754
    6. '.items' → logprob: -11.303818702697754
    7. ' ' → logprob: -12.053818702697754
    8. 'tems' → logprob: -12.553818702697754
    9. 's' → logprob: -13.428818702697754
    10. '   ' → logprob: -13.553818702697754

Token 160: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00038288687937892973
    2. ':
' → logprob: -7.875382900238037
    3. ':**' → logprob: -13.625382423400879
    4. '):' → logprob: -13.875382423400879
    5. ',' → logprob: -15.625382423400879
    6. ' :' → logprob: -15.625382423400879
    7. '   ' → logprob: -16.125383377075195
    8. '):
' → logprob: -16.250383377075195
    9. ':

' → logprob: -16.750383377075195
    10. ':
' → logprob: -17.000383377075195

Token 161: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.21763931214809418
    2. '       ' → logprob: -1.9676393270492554
    3. '   ' → logprob: -3.217639207839966
    4. ':
' → logprob: -5.342639446258545
    5. ' if' → logprob: -5.342639446258545
    6. '<|end|>' → logprob: -6.092639446258545
    7. ',' → logprob: -6.342639446258545
    8. '    ' → logprob: -7.217639446258545
    9. ' :' → logprob: -8.342638969421387
    10. '    
' → logprob: -8.967638969421387

Token 162: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5499508380889893
    2. 'if' (adapté à ' if') → logprob: -1.1749508380889893
    3. '       ' → logprob: -2.1749508380889893
    4. 'x' → logprob: -8.54995059967041
    5. '   ' → logprob: -8.54995059967041
    6. ' x' → logprob: -9.79995059967041
    7. '	if' → logprob: -10.42495059967041
    8. '        
' → logprob: -10.54995059967041
    9. 'amount' → logprob: -11.04995059967041
    10. ' amount' → logprob: -11.29995059967041

Token 163: ' w' (ID: 286)
  Prédit: ' capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' capacity' → logprob: -0.04022139310836792
    2. 'capacity' → logprob: -3.7902214527130127
    3. ' w' → logprob: -4.165221214294434
    4. 'w' → logprob: -6.790221214294434
    5. ' ' → logprob: -9.290221214294434
    6. '   ' → logprob: -10.540221214294434
    7. ' cap' → logprob: -11.415221214294434
    8. '  ' → logprob: -11.540221214294434
    9. ' not' → logprob: -12.352721214294434
    10. '	w' → logprob: -12.477721214294434

Token 164: ' >' (ID: 1424)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.2818202078342438
    2. ' <=' → logprob: -1.4068201780319214
    3. '==' → logprob: -7.781820297241211
    4. '>' → logprob: -9.281820297241211
    5. '=' → logprob: -9.906820297241211
    6. ' ==' → logprob: -10.031820297241211
    7. ' >' → logprob: -11.406820297241211
    8. ' ' → logprob: -11.656820297241211
    9. '0' → logprob: -11.781820297241211
    10. ' and' → logprob: -12.406820297241211

Token 165: ' ' (ID: 220)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.19764746725559235
    2. '0' → logprob: -2.4476475715637207
    3. ' capacity' → logprob: -2.4476475715637207
    4. '=' → logprob: -5.322647571563721
    5. ' ' → logprob: -6.572647571563721
    6. 'capac' → logprob: -10.572647094726562
    7. 'cap' → logprob: -10.822647094726562
    8. '_capacity' → logprob: -12.947647094726562
    9. '  ' → logprob: -12.947647094726562
    10. '   ' → logprob: -13.135147094726562

Token 166: '0' (ID: 15)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.05025048553943634
    2. '0' → logprob: -3.55025053024292
    3. ' capacity' → logprob: -3.92525053024292
    4. '=' → logprob: -8.050250053405762
    5. ' ' → logprob: -8.550250053405762
    6. 'cap' → logprob: -11.175250053405762
    7. 'capac' → logprob: -11.175250053405762
    8. '   ' → logprob: -13.237750053405762
    9. '_capacity' → logprob: -13.362750053405762
    10. '  ' → logprob: -13.550250053405762

Token 167: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.012873590923845768
    2. 'and' → logprob: -4.762873649597168
    3. ':' → logprob: -6.262873649597168
    4. '<=' → logprob: -6.637873649597168
    5. ' <=' → logprob: -7.012873649597168
    6. ':
' → logprob: -10.387873649597168
    7. ')' → logprob: -10.762873649597168
    8. '   ' → logprob: -11.012873649597168
    9. '>' → logprob: -11.137873649597168
    10. '==' → logprob: -11.762873649597168

Token 168: '           ' (ID: 352)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -1.312753438949585
    2. '           ' → logprob: -1.312753438949585
    3. '       ' → logprob: -1.562753438949585
    4. ' if' → logprob: -2.187753438949585
    5. ':' → logprob: -2.687753438949585
    6. '<|end|>' → logprob: -3.687753438949585
    7. ')' → logprob: -4.437753677368164
    8. ' ' → logprob: -4.687753677368164
    9. 'if' → logprob: -5.312753677368164
    10. '0' → logprob: -5.687753677368164

Token 169: ' #' (ID: 1069)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5497050285339355
    2. ' take' → logprob: -1.5497050285339355
    3. ' amount' → logprob: -2.7997050285339355
    4. '       ' → logprob: -3.2997050285339355
    5. 'take' → logprob: -3.2997050285339355
    6. '           ' → logprob: -3.4247050285339355
    7. 'if' → logprob: -4.4247050285339355
    8. ' x' → logprob: -4.7997050285339355
    9. ' can' → logprob: -5.0497050285339355
    10. ' taken' → logprob: -5.5497050285339355

Token 170: ' Po' (ID: 12692)
  Prédit: 'take'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'take' → logprob: -0.7816592454910278
    2. ' take' → logprob: -1.0316592454910278
    3. ' amount' → logprob: -2.4066591262817383
    4. '           ' → logprob: -3.9066591262817383
    5. 'amount' → logprob: -4.156659126281738
    6. ' x' → logprob: -4.531659126281738
    7. '       ' → logprob: -4.656659126281738
    8. ' if' → logprob: -4.781659126281738
    9. ' can' → logprob: -4.906659126281738
    10. ' taken' → logprob: -5.281659126281738

Token 171: 'ids' (ID: 3375)
  Prédit: 'ids'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ids' → logprob: -0.4068884253501892
    2. 'ss' → logprob: -1.781888484954834
    3. 'ur' → logprob: -2.031888484954834
    4. 'nds' → logprob: -4.656888484954834
    5. 'sible' → logprob: -4.656888484954834
    6. 'r' → logprob: -5.281888484954834
    7. 'nd' → logprob: -5.781888484954834
    8. '```' → logprob: -6.781888484954834
    9. 'id' → logprob: -6.906888484954834
    10. 'ds' → logprob: -7.406888484954834

Token 172: ' positif' (ID: 89008)
  Prédit: ' <='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.3105155825614929
    2. '<=' → logprob: -1.4355156421661377
    3. '=' → logprob: -4.310515403747559
    4. ' =' → logprob: -4.435515403747559
    5. '   ' → logprob: -6.435515403747559
    6. '>' → logprob: -7.935515403747559
    7. ' >' → logprob: -7.935515403747559
    8. ' >=' → logprob: -8.435515403747559
    9. '>=' → logprob: -8.435515403747559
    10. ')' → logprob: -8.935515403747559

Token 173: '
' (ID: 198)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.34995338320732117
    2. '           ' → logprob: -1.5999534130096436
    3. '       ' → logprob: -3.8499534130096436
    4. ' if' → logprob: -4.0999531745910645
    5. ',' → logprob: -4.4749531745910645
    6. '=' → logprob: -4.5999531745910645
    7. ':' → logprob: -4.7249531745910645
    8. '<|end|>' → logprob: -4.7249531745910645
    9. 'and' → logprob: -4.8499531745910645
    10. '<|end|>' → logprob: -5.9749531745910645

Token 174: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6380869746208191
    2. ' if' → logprob: -1.1380870342254639
    3. '           ' → logprob: -2.513087034225464
    4. ' and' → logprob: -3.013087034225464
    5. 'if' → logprob: -4.513086795806885
    6. ',' → logprob: -6.138086795806885
    7. ')' → logprob: -6.888086795806885
    8. ' amount' → logprob: -7.013086795806885
    9. 'and' → logprob: -7.138086795806885
    10. ':' → logprob: -7.138086795806885

Token 175: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.38924556970596313
    2. 'if' (adapté à ' if') → logprob: -1.5142455101013184
    3. 'take' → logprob: -3.2642455101013184
    4. ' take' → logprob: -3.8892455101013184
    5. '           ' → logprob: -4.139245510101318
    6. ' x' → logprob: -4.514245510101318
    7. 'x' → logprob: -5.514245510101318
    8. ' amount' → logprob: -5.889245510101318
    9. '       ' → logprob: -6.014245510101318
    10. 'amount' → logprob: -6.389245510101318

Token 176: ' capacity' (ID: 12241)
  Prédit: ' capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' capacity' → logprob: -0.0644371435046196
    2. 'capacity' → logprob: -3.0644371509552
    3. ' w' → logprob: -4.439436912536621
    4. 'w' → logprob: -5.564436912536621
    5. ' weight' → logprob: -10.814436912536621
    6. 'W' → logprob: -10.939436912536621
    7. '   ' → logprob: -11.439436912536621
    8. 'Capacity' → logprob: -11.939436912536621
    9. ' W' → logprob: -12.064436912536621
    10. 'cap' → logprob: -12.314436912536621

Token 177: ' <=' (ID: 5017)
  Prédit: '>='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>=' → logprob: -0.0640590712428093
    2. ' >=' → logprob: -2.939059019088745
    3. '<=' → logprob: -5.064059257507324
    4. '==' → logprob: -6.064059257507324
    5. ' <=' → logprob: -8.189059257507324
    6. '>' → logprob: -8.939059257507324
    7. ' ==' → logprob: -9.814059257507324
    8. '   ' → logprob: -11.564059257507324
    9. '=' → logprob: -12.189059257507324
    10. ' >' → logprob: -12.564059257507324

Token 178: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.012516953982412815
    2. ' ' → logprob: -4.387516975402832
    3. '   ' → logprob: -12.387516975402832
    4. ' ' → logprob: -13.887516975402832
    5. '  ' → logprob: -14.137516975402832
    6. '```' → logprob: -14.762516975402832
    7. '    ' → logprob: -15.387516975402832
    8. '     ' → logprob: -16.012516021728516
    9. '	' → logprob: -16.262516021728516
    10. '۰' → logprob: -16.450016021728516

Token 179: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00012368128227535635
    2. ' ' → logprob: -9.000123977661133
    3. '   ' → logprob: -15.875123977661133
    4. '00' → logprob: -16.875123977661133
    5. '```' → logprob: -16.875123977661133
    6. '000' → logprob: -17.500123977661133
    7. '  ' → logprob: -17.750123977661133
    8. '۰' → logprob: -17.750123977661133
    9. '٠' → logprob: -18.625123977661133
    10. '  ' → logprob: -18.750123977661133

Token 180: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.1009879857301712
    2. ':
' → logprob: -2.3509879112243652
    3. '           ' → logprob: -7.475987911224365
    4. ' or' → logprob: -9.600988388061523
    5. ':return' → logprob: -9.725988388061523
    6. '               ' → logprob: -10.225988388061523
    7. ':
' → logprob: -10.850988388061523
    8. '       ' → logprob: -11.725988388061523
    9. ' :' → logprob: -12.100988388061523
    10. '   ' → logprob: -12.350988388061523

Token 181: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.013484072871506214
    2. '           ' → logprob: -4.638484001159668
    3. ' break' → logprob: -5.763484001159668
    4. 'break' → logprob: -8.388484001159668
    5. ' continue' → logprob: -8.763484001159668
    6. 'continue' → logprob: -10.013484001159668
    7. '       ' → logprob: -10.138484001159668
    8. ':' → logprob: -10.638484001159668
    9. '   ' → logprob: -10.763484001159668
    10. '                   ' → logprob: -11.513484001159668

Token 182: ' break' (ID: 2338)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.765385091304779
    2. 'break' (adapté à ' break') → logprob: -1.0153851509094238
    3. ' break' → logprob: -1.7653851509094238
    4. '               ' → logprob: -6.765385150909424
    5. '	break' → logprob: -9.015384674072266
    6. '       ' → logprob: -9.265384674072266
    7. '   ' → logprob: -10.265384674072266
    8. '
' → logprob: -10.265384674072266
    9. '```' → logprob: -11.640384674072266
    10. '_break' → logprob: -12.015384674072266

Token 183: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.6265882849693298
    2. '           ' → logprob: -1.1265883445739746
    3. '       ' → logprob: -2.3765883445739746
    4. '        
' → logprob: -3.8765883445739746
    5. '            
' → logprob: -4.251588344573975
    6. ' 
' → logprob: -4.501588344573975
    7. '    
' → logprob: -7.376588344573975
    8. '  
' → logprob: -7.876588344573975
    9. '        ' → logprob: -8.126587867736816
    10. '                
' → logprob: -8.751587867736816

Token 184: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005803655367344618
    2. '           ' → logprob: -5.75580358505249
    3. '        
' → logprob: -6.75580358505249
    4. '        ' → logprob: -7.50580358505249
    5. '
' → logprob: -7.88080358505249
    6. '            
' → logprob: -9.005804061889648
    7. ')' → logprob: -9.880804061889648
    8. '   ' → logprob: -10.005804061889648
    9. ',' → logprob: -10.130804061889648
    10. ' else' → logprob: -10.255804061889648

Token 185: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.8240784406661987
    2. ' amount' → logprob: -1.8240784406661987
    3. ' take' → logprob: -1.9490784406661987
    4. ' x' → logprob: -2.5740785598754883
    5. ' if' → logprob: -2.8240785598754883
    6. 'amount' → logprob: -3.5740785598754883
    7. ' fraction' → logprob: -3.6990785598754883
    8. 'take' → logprob: -3.9490785598754883
    9. 'x' → logprob: -4.574078559875488
    10. '
' → logprob: -5.199078559875488

Token 186: ' On' (ID: 2160)
  Prédit: 'take'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'take' → logprob: -0.27542945742607117
    2. ' take' → logprob: -1.6504294872283936
    3. ' amount' → logprob: -4.2754292488098145
    4. 'amount' → logprob: -4.9004292488098145
    5. ' if' → logprob: -5.1504292488098145
    6. 'if' → logprob: -5.5254292488098145
    7. 'taken' → logprob: -5.6504292488098145
    8. '   ' → logprob: -6.2754292488098145
    9. 'to' → logprob: -6.4004292488098145
    10. 'can' → logprob: -6.7754292488098145

Token 187: ' peut' (ID: 9216)
  Prédit: 't'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 't' → logprob: -1.6859025955200195
    2. '=' → logprob: -1.9359025955200195
    3. ' prend' → logprob: -2.5609025955200195
    4. ' =' → logprob: -2.8109025955200195
    5. '   ' → logprob: -3.0609025955200195
    6. ' prends' → logprob: -3.1859025955200195
    7. 'take' → logprob: -3.4359025955200195
    8. ' continue' → logprob: -3.6859025955200195
    9. 'amount' → logprob: -3.8109025955200195
    10. 'pr' → logprob: -3.8109025955200195

Token 188: ' prendre' (ID: 24257)
  Prédit: 'prendre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prendre' → logprob: -0.06402597576379776
    2. ' prendre' → logprob: -2.81402587890625
    3. 'pr' → logprob: -6.93902587890625
    4. '   ' → logprob: -8.31402587890625
    5. 'take' → logprob: -8.68902587890625
    6. '```' → logprob: -9.06402587890625
    7. ' take' → logprob: -9.18902587890625
    8. 'pris' → logprob: -9.68902587890625
    9. 'pre' → logprob: -9.93902587890625
    10. 'mettre' → logprob: -10.56402587890625

Token 189: ' au' (ID: 2791)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.18044811487197876
    2. 'min' → logprob: -1.805448055267334
    3. ' fraction' → logprob: -8.680448532104492
    4. '   ' → logprob: -9.180448532104492
    5. ' w' → logprob: -9.430448532104492
    6. '1' → logprob: -9.680448532104492
    7. ' amount' → logprob: -9.805448532104492
    8. ' x' → logprob: -10.305448532104492
    9. '=min' → logprob: -10.305448532104492
    10. 'w' → logprob: -10.555448532104492

Token 190: ' maximum' (ID: 10562)
  Prédit: 'moins'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'moins' → logprob: -0.010132374241948128
    2. 'minimum' → logprob: -5.635132312774658
    3. ' moins' → logprob: -6.135132312774658
    4. 'max' → logprob: -6.260132312774658
    5. 'maximum' → logprob: -7.010132312774658
    6. 'min' → logprob: -7.635132312774658
    7. 'mo' → logprob: -7.760132312774658
    8. 'plus' → logprob: -8.010132789611816
    9. 'menos' → logprob: -9.260132789611816
    10. 'po' → logprob: -10.135132789611816

Token 191: ' un' (ID: 537)
  Prédit: ' min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' min' → logprob: -0.31635165214538574
    2. 'min' → logprob: -1.3163516521453857
    3. ' fraction' → logprob: -6.316351890563965
    4. ' amount' → logprob: -7.941351890563965
    5. '=min' → logprob: -8.066351890563965
    6. 'fraction' → logprob: -9.066351890563965
    7. 'amount' → logprob: -9.566351890563965
    8. '   ' → logprob: -9.816351890563965
    9. ' quantity' → logprob: -10.066351890563965
    10. ' portion' → logprob: -10.316351890563965

Token 192: ' poids' (ID: 56058)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.6041430830955505
    2. ' min' → logprob: -0.8541430830955505
    3. 'ité' → logprob: -4.854143142700195
    4. '1' → logprob: -5.604143142700195
    5. 'x' → logprob: -6.104143142700195
    6. '   ' → logprob: -6.354143142700195
    7. ' fraction' → logprob: -6.854143142700195
    8. ' minimum' → logprob: -6.979143142700195
    9. '=min' → logprob: -6.979143142700195
    10. 'n' → logprob: -7.104143142700195

Token 193: ' de' (ID: 334)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.2775086760520935
    2. '=min' → logprob: -1.9025087356567383
    3. ' min' → logprob: -2.5275087356567383
    4. '=' → logprob: -4.527508735656738
    5. ' =' → logprob: -6.652508735656738
    6. '           ' → logprob: -8.402508735656738
    7. 'equal' → logprob: -8.527508735656738
    8. '   ' → logprob: -9.152508735656738
    9. '[min' → logprob: -9.152508735656738
    10. '	min' → logprob: -9.652508735656738

Token 194: ' capacity' (ID: 12241)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.2729397118091583
    2. ' capacity' → logprob: -1.897939682006836
    3. 'min' → logprob: -2.897939682006836
    4. ' min' → logprob: -3.397939682006836
    5. 'cap' → logprob: -7.897939682006836
    6. 'capac' → logprob: -11.522939682006836
    7. '```' → logprob: -12.772939682006836
    8. '=min' → logprob: -12.897939682006836
    9. ' cap' → logprob: -13.022939682006836
    10. '(cap' → logprob: -13.272939682006836

Token 195: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6020409464836121
    2. '=' → logprob: -2.352041006088257
    3. ' =' → logprob: -2.352041006088257
    4. ',' → logprob: -2.727041006088257
    5. ')' → logprob: -3.352041006088257
    6. ':' → logprob: -3.477041006088257
    7. '       ' → logprob: -3.602041006088257
    8. '            ' → logprob: -3.977041006088257
    9. ' and' → logprob: -4.602040767669678
    10. '               ' → logprob: -4.727040767669678

Token 196: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006876045372337103
    2. ',' → logprob: -5.756875991821289
    3. '       ' → logprob: -6.256875991821289
    4. ' =' → logprob: -7.881875991821289
    5. '            
' → logprob: -8.506875991821289
    6. '=' → logprob: -8.756875991821289
    7. ' fraction' → logprob: -8.756875991821289
    8. '               ' → logprob: -9.006875991821289
    9. 'amount' → logprob: -9.631875991821289
    10. ' if' → logprob: -9.756875991821289

Token 197: ' x' (ID: 1215)
  Prédit: 'take'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'take' → logprob: -0.2623705565929413
    2. ' take' → logprob: -1.8873705863952637
    3. 'x' (adapté à ' x') → logprob: -4.012370586395264
    4. ' x' → logprob: -4.137370586395264
    5. 'amount' → logprob: -4.387370586395264
    6. ' amount' → logprob: -4.637370586395264
    7. 'weight' → logprob: -4.762370586395264
    8. ' weight' → logprob: -5.637370586395264
    9. 'taken' → logprob: -5.762370586395264
    10. '   ' → logprob: -5.762370586395264

Token 198: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.014168919064104557
    2. '=' → logprob: -4.264168739318848
    3. '=min' → logprob: -12.639168739318848
    4. ' ' → logprob: -14.764168739318848
    5. '_amount' → logprob: -14.889168739318848
    6. '=max' → logprob: -15.014168739318848
    7. '=int' → logprob: -15.764168739318848
    8. '   ' → logprob: -16.014169692993164
    9. ',' → logprob: -16.389169692993164
    10. '=float' → logprob: -16.514169692993164

Token 199: ' min' (ID: 1349)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.06398358941078186
    2. 'capacity' → logprob: -3.313983678817749
    3. ' min' → logprob: -3.688983678817749
    4. ' capacity' → logprob: -7.43898344039917
    5. '1' → logprob: -12.063983917236328
    6. 'float' → logprob: -12.188983917236328
    7. '	min' → logprob: -12.688983917236328
    8. '(min' → logprob: -13.063983917236328
    9. '   ' → logprob: -13.188983917236328
    10. 'cap' → logprob: -13.438983917236328

Token 200: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7989363670349121
    2. '(w' → logprob: -1.173936367034912
    3. '(cap' → logprob: -1.423936367034912
    4. 'w' → logprob: -9.17393684387207
    5. 'capacity' → logprob: -9.67393684387207
    6. '1' → logprob: -10.54893684387207
    7. '(
' → logprob: -11.04893684387207
    8. '(c' → logprob: -11.04893684387207
    9. ' (' → logprob: -11.29893684387207
    10. '(weight' → logprob: -11.42393684387207

Token 201: '1' (ID: 16)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.10075336694717407
    2. 'capacity' → logprob: -2.3507533073425293
    3. '(w' → logprob: -8.850753784179688
    4. ' w' → logprob: -9.225753784179688
    5. ' capacity' → logprob: -9.350753784179688
    6. '1' → logprob: -9.350753784179688
    7. '(cap' → logprob: -9.475753784179688
    8. '   ' → logprob: -10.725753784179688
    9. 'cap' → logprob: -11.225753784179688
    10. 'weight' → logprob: -12.225753784179688

Token 202: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00018113377154804766
    2. ' ,' → logprob: -8.625181198120117
    3. ',x' → logprob: -14.500181198120117
    4. '   ' → logprob: -14.500181198120117
    5. '),' → logprob: -15.875181198120117
    6. ')' → logprob: -16.000181198120117
    7. ',w' → logprob: -16.375181198120117
    8. '```' → logprob: -16.750181198120117
    9. ',float' → logprob: -16.750181198120117
    10. 'capacity' → logprob: -17.000181198120117

Token 203: ' capacity' (ID: 12241)
  Prédit: ' capacity'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' capacity' → logprob: -0.1269323080778122
    2. 'capacity' → logprob: -2.126932382583618
    3. '(cap' → logprob: -13.626932144165039
    4. '   ' → logprob: -13.876932144165039
    5. ' ' → logprob: -14.251932144165039
    6. 'capac' → logprob: -14.876932144165039
    7. 'cap' → logprob: -15.001932144165039
    8. '.capacity' → logprob: -15.251932144165039
    9. 'Capacity' → logprob: -16.50193214416504
    10. '_capacity' → logprob: -16.62693214416504

Token 204: ' /' (ID: 820)
  Prédit: ' /'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' /' → logprob: -0.024344725534319878
    2. '/' → logprob: -4.1493449211120605
    3. '/w' → logprob: -5.1493449211120605
    4. ')' → logprob: -6.1493449211120605
    5. '   ' → logprob: -9.024344444274902
    6. ',' → logprob: -9.149344444274902
    7. 'w' → logprob: -11.149344444274902
    8. '       ' → logprob: -11.149344444274902
    9. ' /
' → logprob: -11.274344444274902
    10. '           ' → logprob: -11.399344444274902

Token 205: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -5.836499985889532e-05
    2. ' w' → logprob: -9.7500581741333
    3. '   ' → logprob: -16.875059127807617
    4. '	w' → logprob: -19.625059127807617
    5. 'float' → logprob: -21.125059127807617
    6. '       ' → logprob: -21.250059127807617
    7. ' ' → logprob: -21.625059127807617
    8. '_w' → logprob: -21.750059127807617
    9. 'weight' → logprob: -22.250059127807617
    10. '  ' → logprob: -22.500059127807617

Token 206: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.003182348096743226
    2. ')
' → logprob: -5.753182411193848
    3. ' )' → logprob: -12.753182411193848
    4. ')
' → logprob: -14.128182411193848
    5. ')

' → logprob: -14.753182411193848
    6. '       ' → logprob: -15.003182411193848
    7. '   ' → logprob: -15.753182411193848
    8. '           ' → logprob: -16.87818145751953
    9. ' )
' → logprob: -16.87818145751953
    10. ')`' → logprob: -17.75318145751953

Token 207: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.10994713753461838
    2. '
' → logprob: -2.4849472045898438
    3. '       ' → logprob: -3.9849472045898438
    4. '        
' → logprob: -7.484947204589844
    5. '            
' → logprob: -7.609947204589844
    6. 'total' → logprob: -7.609947204589844
    7. '<|end|>' → logprob: -9.109947204589844
    8. '    
' → logprob: -9.234947204589844
    9. ' 
' → logprob: -9.734947204589844
    10. 'capacity' → logprob: -9.859947204589844

Token 208: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.3040401041507721
    2. '           ' → logprob: -1.9290400743484497
    3. ' total' → logprob: -3.0540401935577393
    4. '       ' → logprob: -3.0540401935577393
    5. '
' → logprob: -4.55403995513916
    6. 'capacity' → logprob: -5.17903995513916
    7. '        
' → logprob: -5.80403995513916
    8. ' capacity' → logprob: -6.92903995513916
    9. '   ' → logprob: -7.05403995513916
    10. '            
' → logprob: -7.17903995513916

Token 209: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.1398757123970427e-05
    2. '_' → logprob: -11.750011444091797
    3. 'value' → logprob: -12.750011444091797
    4. '_val' → logprob: -15.750011444091797
    5. '+=' → logprob: -16.250011444091797
    6. ' +=' → logprob: -16.625011444091797
    7. 'Value' → logprob: -17.250011444091797
    8. ' _' → logprob: -17.750011444091797
    9. '_VALUE' → logprob: -18.000011444091797
    10. '_Value' → logprob: -18.125011444091797

Token 210: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.08909552544355392
    2. '+=' → logprob: -2.4640955924987793
    3. '+' → logprob: -8.839095115661621
    4. ']+=' → logprob: -12.714095115661621
    5. '   ' → logprob: -12.964095115661621
    6. ' +' → logprob: -13.464095115661621
    7. '    ' → logprob: -13.839095115661621
    8. '+=(' → logprob: -14.089095115661621
    9. '```' → logprob: -14.714095115661621
    10. '=' → logprob: -14.839095115661621

Token 211: ' v' (ID: 323)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.8547713160514832
    2. 'v' → logprob: -1.229771375656128
    3. ' v' → logprob: -1.979771375656128
    4. ' x' → logprob: -1.979771375656128
    5. ' ratio' → logprob: -5.604771137237549
    6. 'ratio' → logprob: -6.104771137237549
    7. '   ' → logprob: -9.604771614074707
    8. '           ' → logprob: -9.854771614074707
    9. ' ' → logprob: -12.229771614074707
    10. 'r' → logprob: -12.479771614074707

Token 212: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.0002622894535306841
    2. '*' → logprob: -8.250262260437012
    3. '*x' → logprob: -14.250262260437012
    4. ' ' → logprob: -16.500263214111328
    5. '<|end|>' → logprob: -16.625263214111328
    6. '*object' → logprob: -16.750263214111328
    7. ' ' → logprob: -17.625263214111328
    8. ')' → logprob: -19.125263214111328
    9. '   ' → logprob: -19.375263214111328
    10. ' **' → logprob: -19.625263214111328

Token 213: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.061967797577381134
    2. ' x' → logprob: -2.8119678497314453
    3. '	x' → logprob: -17.186967849731445
    4. '<|end|>' → logprob: -17.186967849731445
    5. ')x' → logprob: -19.061967849731445
    6. '*x' → logprob: -19.686967849731445
    7. '(x' → logprob: -20.311967849731445
    8. '```' → logprob: -20.436967849731445
    9. ' ' → logprob: -20.561967849731445
    10. '$x' → logprob: -20.811967849731445

Token 214: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015236717881634831
    2. '
' → logprob: -6.501523494720459
    3. '            
' → logprob: -12.251523971557617
    4. '       ' → logprob: -12.376523971557617
    5. '               ' → logprob: -12.751523971557617
    6. ' capacity' → logprob: -13.126523971557617
    7. 'capacity' → logprob: -13.251523971557617
    8. ' 
' → logprob: -13.751523971557617
    9. '   ' → logprob: -13.876523971557617
    10. ',' → logprob: -14.251523971557617

Token 215: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0015569974202662706
    2. '
' → logprob: -6.501556873321533
    3. '            
' → logprob: -10.501557350158691
    4. 'capacity' → logprob: -11.001557350158691
    5. ' capacity' → logprob: -12.376557350158691
    6. ' 
' → logprob: -13.376557350158691
    7. '       ' → logprob: -13.876557350158691
    8. '        
' → logprob: -14.126557350158691
    9. '               ' → logprob: -14.126557350158691
    10. '   ' → logprob: -14.876557350158691

Token 216: ' capacity' (ID: 12241)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' (adapté à ' capacity') → logprob: -0.02635580487549305
    2. ' capacity' → logprob: -3.776355743408203
    3. '           ' → logprob: -5.776355743408203
    4. '   ' → logprob: -12.276355743408203
    5. '       ' → logprob: -14.526355743408203
    6. '容量' → logprob: -16.401355743408203
    7. 'cap' → logprob: -16.651355743408203
    8. '.capacity' → logprob: -17.526355743408203
    9. 'capac' → logprob: -17.776355743408203
    10. '               ' → logprob: -17.901355743408203

Token 217: ' -=' (ID: 12583)
  Prédit: ' -='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' -=' → logprob: -0.25285574793815613
    2. '-=' → logprob: -1.5028557777404785
    3. '-' → logprob: -7.0028557777404785
    4. ' -' → logprob: -11.75285530090332
    5. '=' → logprob: -12.25285530090332
    6. '   ' → logprob: -12.87785530090332
    7. '```' → logprob: -14.12785530090332
    8. ' ' → logprob: -15.25285530090332
    9. '    ' → logprob: -15.50285530090332
    10. '	' → logprob: -15.62785530090332

Token 218: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0008105786982923746
    2. ' w' → logprob: -7.125810623168945
    3. 'x' → logprob: -12.250810623168945
    4. '   ' → logprob: -13.625810623168945
    5. '           ' → logprob: -15.875810623168945
    6. '	w' → logprob: -16.750810623168945
    7. '       ' → logprob: -17.500810623168945
    8. 'v' → logprob: -17.500810623168945
    9. 'wx' → logprob: -18.000810623168945
    10. '    ' → logprob: -18.500810623168945

Token 219: ' *' (ID: 425)
  Prédit: ' *'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' *' → logprob: -0.029975291341543198
    2. '*' → logprob: -3.529975175857544
    3. '*x' → logprob: -8.404974937438965
    4. ' ' → logprob: -14.279974937438965
    5. '```' → logprob: -16.15497589111328
    6. ' ' → logprob: -16.27997589111328
    7. 'x' → logprob: -16.65497589111328
    8. ' x' → logprob: -16.77997589111328
    9. '   ' → logprob: -16.90497589111328
    10. '*object' → logprob: -17.52997589111328

Token 220: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.00033546582562848926
    2. ' x' → logprob: -8.000335693359375
    3. '	x' → logprob: -19.250335693359375
    4. ')x' → logprob: -21.750335693359375
    5. '   ' → logprob: -22.000335693359375
    6. '*x' → logprob: -22.250335693359375
    7. '<|end|>' → logprob: -23.250335693359375
    8. '```' → logprob: -23.500335693359375
    9. '>x' → logprob: -23.625335693359375
    10. '"x' → logprob: -23.875335693359375

Token 221: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.16678442060947418
    2. '<|end|>' → logprob: -1.916784405708313
    3. '\n' → logprob: -5.166784286499023
    4. '   ' → logprob: -8.416784286499023
    5. '<|end|>' → logprob: -8.416784286499023
    6. '```' → logprob: -9.166784286499023
    7. '
' → logprob: -9.666784286499023
    8. '    
' → logprob: -10.166784286499023
    9. '       ' → logprob: -10.166784286499023
    10. '  
' → logprob: -10.541784286499023

Token 222: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.5672808885574341
    2. '<|end|>' → logprob: -0.9422808885574341
    3. '   ' → logprob: -3.8172807693481445
    4. '       ' → logprob: -4.9422807693481445
    5. '\n' → logprob: -4.9422807693481445
    6. '```' → logprob: -6.3172807693481445
    7. ' return' → logprob: -7.0672807693481445
    8. 'return' → logprob: -7.0672807693481445
    9. '    
' → logprob: -7.0672807693481445
    10. ' if' → logprob: -8.192280769348145

Token 223: ' elif' (ID: 9497)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.092352956533432
    2. '       ' → logprob: -2.967352867126465
    3. ' else' → logprob: -3.842352867126465
    4. '   ' → logprob: -4.467352867126465
    5. 'elif' (adapté à ' elif') → logprob: -5.592352867126465
    6. '	else' → logprob: -9.717352867126465
    7. ' elif' → logprob: -10.092352867126465
    8. '```' → logprob: -11.842352867126465
    9. '    ' → logprob: -12.592352867126465
    10. '	elif' → logprob: -12.592352867126465

Token 224: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.703103244304657
    2. ' w' → logprob: -0.703103244304657
    3. ' ratio' → logprob: -5.453103065490723
    4. 'ratio' → logprob: -6.078103065490723
    5. '0' → logprob: -6.828103065490723
    6. 'v' → logprob: -7.203103065490723
    7. ' v' → logprob: -7.578103065490723
    8. ' ' → logprob: -7.828103065490723
    9. 'capacity' → logprob: -8.578103065490723
    10. ' capacity' → logprob: -8.953103065490723

Token 225: ' <' (ID: 464)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7336321473121643
    2. '==' → logprob: -0.9836321473121643
    3. ' <' → logprob: -2.3586320877075195
    4. '<' → logprob: -2.9836320877075195
    5. '0' → logprob: -7.9836320877075195
    6. '=' → logprob: -8.23363208770752
    7. ' ' → logprob: -10.35863208770752
    8. '<=' → logprob: -10.98363208770752
    9. ' <=' → logprob: -11.23363208770752
    10. ' =' → logprob: -11.35863208770752

Token 226: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.17975448071956635
    2. ' ' → logprob: -1.8047544956207275
    3. '   ' → logprob: -12.554754257202148
    4. '1' → logprob: -13.179754257202148
    5. '=' → logprob: -13.679754257202148
    6. '  ' → logprob: -14.367254257202148
    7. '>' → logprob: -15.242254257202148
    8. '```' → logprob: -15.492254257202148
    9. ' ' → logprob: -15.617254257202148
    10. '    ' → logprob: -15.804754257202148

Token 227: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.001176416757516563
    2. ' ' → logprob: -6.751176357269287
    3. '1' → logprob: -13.376176834106445
    4. '   ' → logprob: -13.501176834106445
    5. '=' → logprob: -13.751176834106445
    6. '
' → logprob: -15.188676834106445
    7. 'w' → logprob: -15.251176834106445
    8. '       ' → logprob: -15.376176834106445
    9. ',' → logprob: -16.188676834106445
    10. '>' → logprob: -16.188676834106445

Token 228: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.31438660621643066
    2. ':
' → logprob: -1.3143866062164307
    3. '       ' → logprob: -6.939386367797852
    4. ' and' → logprob: -9.689386367797852
    5. '           ' → logprob: -9.814386367797852
    6. ' or' → logprob: -11.814386367797852
    7. ':
' → logprob: -12.189386367797852
    8. ',' → logprob: -12.314386367797852
    9. ':

' → logprob: -12.439386367797852
    10. '   ' → logprob: -12.439386367797852

Token 229: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.087615728378296
    2. '           ' → logprob: -1.337615728378296
    3. ' if' → logprob: -1.712615728378296
    4. '#' → logprob: -2.212615728378296
    5. ' #' → logprob: -2.712615728378296
    6. 'if' → logprob: -3.712615728378296
    7. ' continue' → logprob: -4.712615966796875
    8. 'continue' → logprob: -5.837615966796875
    9. ' break' → logprob: -5.962615966796875
    10. '```' → logprob: -6.337615966796875

Token 230: ' #' (ID: 1069)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '#' (adapté à ' #') → logprob: -0.6047319769859314
    2. ' capacity' → logprob: -1.7297320365905762
    3. 'capacity' → logprob: -2.354732036590576
    4. '           ' → logprob: -3.104732036590576
    5. ' if' → logprob: -3.229732036590576
    6. 'if' → logprob: -3.604732036590576
    7. '       ' → logprob: -3.729732036590576
    8. ' #' → logprob: -3.854732036590576
    9. ' total' → logprob: -4.854732036590576
    10. 'total' → logprob: -5.354732036590576

Token 231: ' Po' (ID: 12692)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.7715929746627808
    2. 'capacity' → logprob: -1.2715929746627808
    3. 'if' → logprob: -1.7715929746627808
    4. ' capacity' → logprob: -3.2715930938720703
    5. ' if' → logprob: -3.8965930938720703
    6. ' #' → logprob: -5.39659309387207
    7. 'break' → logprob: -5.52159309387207
    8. 'pass' → logprob: -5.64659309387207
    9. 'cap' → logprob: -5.77159309387207
    10. '   ' → logprob: -5.89659309387207

Token 232: 'ids' (ID: 3375)
  Prédit: 'ss'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ss' → logprob: -0.2459716647863388
    2. 's' → logprob: -2.1209716796875
    3. 'w' → logprob: -3.4959716796875
    4. 'pass' → logprob: -3.6209716796875
    5. 'ass' → logprob: -4.2459716796875
    6. 'r' → logprob: -4.7459716796875
    7. 'ur' → logprob: -5.6209716796875
    8. 'u' → logprob: -5.7459716796875
    9. '#' → logprob: -6.1209716796875
    10. 'int' → logprob: -6.2459716796875

Token 233: ' nég' (ID: 55805)
  Prédit: ' nég'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nég' → logprob: -0.11722332239151001
    2. ' negatif' → logprob: -2.8672232627868652
    3. ' positif' → logprob: -3.4922232627868652
    4. 'neg' → logprob: -4.367223262786865
    5. ' negative' → logprob: -5.492223262786865
    6. 'negative' → logprob: -6.492223262786865
    7. 'n' → logprob: -7.117223262786865
    8. '=' → logprob: -7.492223262786865
    9. '   ' → logprob: -7.867223262786865
    10. 'posit' → logprob: -7.992223262786865

Token 234: 'atif' (ID: 23984)
  Prédit: 'atif'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'atif' → logprob: -1.676292231422849e-05
    2. 'at' → logprob: -12.000017166137695
    3. 'if' → logprob: -12.500017166137695
    4. 'atifs' → logprob: -12.625017166137695
    5. '   ' → logprob: -14.000017166137695
    6. 'itif' → logprob: -14.375017166137695
    7. '```' → logprob: -14.750017166137695
    8. '       ' → logprob: -15.375017166137695
    9. '<' → logprob: -15.875017166137695
    10. '-' → logprob: -16.000017166137695

Token 235: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.14297029376029968
    2. '
' → logprob: -2.892970323562622
    3. '       ' → logprob: -3.017970323562622
    4. ',' → logprob: -4.892970085144043
    5. ' if' → logprob: -5.017970085144043
    6. '#' → logprob: -5.642970085144043
    7. 'if' → logprob: -6.017970085144043
    8. '            
' → logprob: -6.267970085144043
    9. ':' → logprob: -6.642970085144043
    10. '        
' → logprob: -7.267970085144043

Token 236: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3299204409122467
    2. 'if' → logprob: -2.829920530319214
    3. ' if' → logprob: -2.954920530319214
    4. 'total' → logprob: -2.954920530319214
    5. '#' → logprob: -3.204920530319214
    6. '       ' → logprob: -3.204920530319214
    7. ' total' → logprob: -4.079920291900635
    8. 'capacity' → logprob: -4.829920291900635
    9. ' capacity' → logprob: -5.204920291900635
    10. ' #' → logprob: -6.454920291900635

Token 237: ' #' (ID: 1069)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.23318102955818176
    2. 'total' → logprob: -1.9831809997558594
    3. 'if' → logprob: -3.8581809997558594
    4. '#' (adapté à ' #') → logprob: -3.9831809997558594
    5. ' capacity' → logprob: -4.483180999755859
    6. 'x' → logprob: -4.608180999755859
    7. 'continue' → logprob: -5.858180999755859
    8. ' total' → logprob: -6.233180999755859
    9. '           ' → logprob: -6.233180999755859
    10. '   ' → logprob: -6.983180999755859

Token 238: ' Pr' (ID: 2284)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.7478510141372681
    2. 'if' → logprob: -1.122851014137268
    3. '#' → logprob: -2.3728508949279785
    4. 'total' → logprob: -2.4978508949279785
    5. ' capacity' → logprob: -4.8728508949279785
    6. 'x' → logprob: -5.2478508949279785
    7. ' if' → logprob: -5.4978508949279785
    8. '           ' → logprob: -6.3728508949279785
    9. ' total' → logprob: -6.3728508949279785
    10. 'cap' → logprob: -6.3728508949279785

Token 239: 'endre' (ID: 9574)
  Prédit: 'endre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endre' → logprob: -0.3361333906650543
    2. 'end' → logprob: -1.836133360862732
    3. 'int' → logprob: -2.4611334800720215
    4. 'ends' → logprob: -4.5861334800720215
    5. 'om' → logprob: -5.2111334800720215
    6. 'o' → logprob: -5.3361334800720215
    7. 'e' → logprob: -5.4611334800720215
    8. 'enez' → logprob: -6.2111334800720215
    9. 'ed' → logprob: -6.3361334800720215
    10. 'ef' → logprob: -6.4611334800720215

Token 240: ' au' (ID: 2791)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.860245406627655
    2. '1' → logprob: -0.985245406627655
    3. ' min' → logprob: -1.8602454662322998
    4. 'max' → logprob: -3.9852454662323
    5. 'x' → logprob: -4.110245227813721
    6. 'abs' → logprob: -5.360245227813721
    7. ' ' → logprob: -5.610245227813721
    8. ' x' → logprob: -6.235245227813721
    9. ' max' → logprob: -7.110245227813721
    10. 'if' → logprob: -7.485245227813721

Token 241: ' max' (ID: 2999)
  Prédit: 'min'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'min' → logprob: -0.7062942981719971
    2. '1' → logprob: -0.8312942981719971
    3. 'max' → logprob: -3.081294298171997
    4. 'minimum' → logprob: -3.956294298171997
    5. 'maximum' → logprob: -5.206294059753418
    6. 'most' → logprob: -8.456294059753418
    7. 'moins' → logprob: -9.456294059753418
    8. ' min' → logprob: -9.956294059753418
    9. ' minimum' → logprob: -10.456294059753418
    10. '-' → logprob: -10.706294059753418

Token 242: ' possible' (ID: 4149)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '1' → logprob: -0.011247405782341957
    2. 'x' → logprob: -5.136247634887695
    3. 'min' → logprob: -6.386247634887695
    4. '(' → logprob: -6.511247634887695
    5. ' ' → logprob: -6.636247634887695
    6. '0' → logprob: -8.511247634887695
    7. ' x' → logprob: -8.886247634887695
    8. '=' → logprob: -9.261247634887695
    9. '-' → logprob: -9.261247634887695
    10. ' min' → logprob: -9.386247634887695

Token 243: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1432672142982483
    2. 'x' → logprob: -3.2682671546936035
    3. ' x' → logprob: -3.5182671546936035
    4. '1' → logprob: -3.8932671546936035
    5. ' =' → logprob: -4.3932671546936035
    6. ' if' → logprob: -4.5182671546936035
    7. '=' → logprob: -4.6432671546936035
    8. ',' → logprob: -5.1432671546936035
    9. '0' → logprob: -6.5182671546936035
    10. ' ' → logprob: -6.5182671546936035

Token 244: 'x' (ID: 87)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.012871482409536839
    2. 'x' → logprob: -4.637871265411377
    3. 'min' → logprob: -6.262871265411377
    4. ' ' → logprob: -7.887871265411377
    5. '0' → logprob: -8.512871742248535
    6. ')' → logprob: -8.637871742248535
    7. ' min' → logprob: -9.137871742248535
    8. 'if' → logprob: -9.137871742248535
    9. ' x' → logprob: -9.387871742248535
    10. '           ' → logprob: -10.387871742248535

Token 245: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20144617557525635
    2. ' =' → logprob: -1.7014461755752563
    3. ')' → logprob: -11.201446533203125
    4. '=min' → logprob: -11.201446533203125
    5. '=max' → logprob: -13.451446533203125
    6. '<=' → logprob: -13.701446533203125
    7. 'min' → logprob: -14.201446533203125
    8. 'max' → logprob: -14.576446533203125
    9. ' <=' → logprob: -15.076446533203125
    10. '           ' → logprob: -15.326446533203125

Token 246: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.76628842484206e-05
    2. ' ' → logprob: -10.500067710876465
    3. 'min' → logprob: -10.500067710876465
    4. 'float' → logprob: -11.875067710876465
    5. ')' → logprob: -13.500067710876465
    6. '0' → logprob: -13.750067710876465
    7. '100' → logprob: -14.875067710876465
    8. 'abs' → logprob: -14.875067710876465
    9. '10' → logprob: -15.125067710876465
    10. ' min' → logprob: -15.562567710876465

Token 247: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0062009734101593494
    2. ')
' → logprob: -5.131200790405273
    3. ' )' → logprob: -9.631200790405273
    4. '           ' → logprob: -9.631200790405273
    5. '),' → logprob: -9.756200790405273
    6. ')

' → logprob: -11.006200790405273
    7. 'if' → logprob: -11.381200790405273
    8. '       ' → logprob: -11.381200790405273
    9. ',' → logprob: -11.506200790405273
    10. ' if' → logprob: -11.631200790405273

Token 248: ' augmente' (ID: 150199)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06207345053553581
    2. ' if' → logprob: -3.8120734691619873
    3. '
' → logprob: -4.062073230743408
    4. 'x' → logprob: -5.062073230743408
    5. ' x' → logprob: -5.437073230743408
    6. '       ' → logprob: -5.937073230743408
    7. ',' → logprob: -5.937073230743408
    8. '            
' → logprob: -6.437073230743408
    9. 'if' → logprob: -7.062073230743408
    10. ')' → logprob: -7.562073230743408

Token 249: ' la' (ID: 557)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.30133694410324097
    2. 'total' → logprob: -2.0513370037078857
    3. 'la' → logprob: -2.3013370037078857
    4. ' capacity' → logprob: -4.176336765289307
    5. ' la' → logprob: -4.801336765289307
    6. 'le' → logprob: -6.176336765289307
    7. 'cap' → logprob: -6.551336765289307
    8. 'value' → logprob: -6.676336765289307
    9. ' total' → logprob: -6.801336765289307
    10. 'l' → logprob: -7.301336765289307

Token 250: ' capacité' (ID: 62575)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.2605118751525879
    2. 'total' → logprob: -2.260511875152588
    3. 'cap' → logprob: -2.635511875152588
    4. 'val' → logprob: -3.885511875152588
    5. ' total' → logprob: -4.635511875152588
    6. ' capacity' → logprob: -4.885511875152588
    7. ' capacité' → logprob: -5.260511875152588
    8. 'value' → logprob: -5.260511875152588
    9. 'capac' → logprob: -5.510511875152588
    10. ' valeur' → logprob: -7.760511875152588

Token 251: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31143468618392944
    2. '       ' → logprob: -1.5614347457885742
    3. ',' → logprob: -3.311434745788574
    4. '.' → logprob: -4.811434745788574
    5. ' and' → logprob: -5.186434745788574
    6. '<|end|>' → logprob: -6.936434745788574
    7. ' (' → logprob: -7.186434745788574
    8. '=' → logprob: -7.186434745788574
    9. ' if' → logprob: -7.311434745788574
    10. '            
' → logprob: -7.436434745788574

Token 252: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015488249249756336
    2. 'x' → logprob: -4.640488147735596
    3. '       ' → logprob: -6.015488147735596
    4. ' x' → logprob: -6.265488147735596
    5. 'total' → logprob: -7.640488147735596
    6. ',' → logprob: -7.765488147735596
    7. ' total' → logprob: -8.765488624572754
    8. ' if' → logprob: -9.265488624572754
    9. '   ' → logprob: -9.390488624572754
    10. 'if' → logprob: -10.015488624572754

Token 253: ' #' (ID: 1069)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.08338078111410141
    2. '           ' → logprob: -3.083380699157715
    3. 'x' → logprob: -4.083380699157715
    4. 'capacity' → logprob: -4.708380699157715
    5. ' total' → logprob: -4.958380699157715
    6. 'if' → logprob: -7.083380699157715
    7. ' capacity' → logprob: -8.958380699157715
    8. '       ' → logprob: -9.208380699157715
    9. '   ' → logprob: -9.458380699157715
    10. ' x' → logprob: -10.083380699157715

Token 254: ' On' (ID: 2160)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'total' → logprob: -0.03472837433218956
    2. '           ' → logprob: -4.284728527069092
    3. ' total' → logprob: -4.659728527069092
    4. 'x' → logprob: -4.784728527069092
    5. 'capacity' → logprob: -6.409728527069092
    6. 'if' → logprob: -7.409728527069092
    7. '       ' → logprob: -9.409728050231934
    8. '   ' → logprob: -9.534728050231934
    9. ' capacity' → logprob: -10.284728050231934
    10. ' x' → logprob: -10.534728050231934

Token 255: ' prend' (ID: 37463)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.9214836955070496
    2. '       ' → logprob: -1.2964837551116943
    3. 'if' → logprob: -2.0464837551116943
    4. ' continue' → logprob: -3.0464837551116943
    5. 'capacity' → logprob: -3.5464837551116943
    6. '           ' → logprob: -3.7964837551116943
    7. ' if' → logprob: -3.9214837551116943
    8. 'for' → logprob: -4.171483516693115
    9. 'contin' → logprob: -4.546483516693115
    10. '#' → logprob: -4.671483516693115

Token 256: ' x' (ID: 1215)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1429901272058487
    2. 'x' → logprob: -2.5179901123046875
    3. ' ' → logprob: -3.7679901123046875
    4. ' x' → logprob: -4.2679901123046875
    5. 'max' → logprob: -5.2679901123046875
    6. 'min' → logprob: -5.3929901123046875
    7. ' min' → logprob: -5.8929901123046875
    8. ' max' → logprob: -6.8929901123046875
    9. ' at' → logprob: -8.142990112304688
    10. '   ' → logprob: -8.392990112304688

Token 257: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11283592879772186
    2. ' =' → logprob: -2.2378358840942383
    3. 'max' → logprob: -13.112835884094238
    4. ' +=' → logprob: -13.112835884094238
    5. '+=' → logprob: -13.362835884094238
    6. '1' → logprob: -13.362835884094238
    7. 'x' → logprob: -13.737835884094238
    8. '=max' → logprob: -14.237835884094238
    9. '           ' → logprob: -14.362835884094238
    10. '=min' → logprob: -14.487835884094238

Token 258: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0002889874158427119
    2. ' ' → logprob: -8.250288963317871
    3. 'min' → logprob: -11.000288963317871
    4. '0' → logprob: -11.875288963317871
    5. ' min' → logprob: -13.250288963317871
    6. '-' → logprob: -14.125288963317871
    7. 'float' → logprob: -14.750288963317871
    8. '   ' → logprob: -14.875288963317871
    9. '```' → logprob: -15.500288963317871
    10. 'max' → logprob: -15.500288963317871

Token 259: ' si' (ID: 1784)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02193162590265274
    2. '       ' → logprob: -4.0219316482543945
    3. '<|end|>' → logprob: -6.0219316482543945
    4. ',' → logprob: -7.1469316482543945
    5. '
' → logprob: -8.271931648254395
    6. '            
' → logprob: -10.146931648254395
    7. ')' → logprob: -10.146931648254395
    8. '<|end|>' → logprob: -10.271931648254395
    9. '.' → logprob: -10.521931648254395
    10. ' =' → logprob: -10.521931648254395

Token 260: ' ratio' (ID: 18051)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.014118727296590805
    2. ' v' → logprob: -4.764118671417236
    3. 'ratio' → logprob: -5.764118671417236
    4. 'capacity' → logprob: -6.639118671417236
    5. ' ratio' → logprob: -7.889118671417236
    6. 'w' → logprob: -8.514119148254395
    7. ' capacity' → logprob: -8.889119148254395
    8. '(v' → logprob: -9.514119148254395
    9. '   ' → logprob: -9.889119148254395
    10. 'x' → logprob: -10.014119148254395

Token 261: ' >' (ID: 1424)
  Prédit: ' >'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' >' → logprob: -0.2538689076900482
    2. '>' → logprob: -1.5038689374923706
    3. ' >=' → logprob: -6.50386905670166
    4. '>=' → logprob: -7.87886905670166
    5. ' <' → logprob: -11.00386905670166
    6. '[' → logprob: -11.00386905670166
    7. ' ==' → logprob: -11.87886905670166
    8. '==' → logprob: -11.87886905670166
    9. '<' → logprob: -12.12886905670166
    10. ' ' → logprob: -13.12886905670166

Token 262: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0015337858349084854
    2. ' ' → logprob: -6.5015339851379395
    3. 'float' → logprob: -11.126533508300781
    4. '1' → logprob: -11.876533508300781
    5. '-' → logprob: -12.501533508300781
    6. ' float' → logprob: -12.626533508300781
    7. '>' → logprob: -14.626533508300781
    8. ' -' → logprob: -14.751533508300781
    9. '=float' → logprob: -14.751533508300781
    10. '   ' → logprob: -15.189033508300781

Token 263: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00029244067263789475
    2. ' ' → logprob: -8.500292778015137
    3. '-' → logprob: -10.000292778015137
    4. 'float' → logprob: -10.500292778015137
    5. '1' → logprob: -11.250292778015137
    6. ' float' → logprob: -13.750292778015137
    7. ' -' → logprob: -14.500292778015137
    8. '2' → logprob: -15.812792778015137
    9. '```' → logprob: -16.25029182434082
    10. '  ' → logprob: -16.37529182434082

Token 264: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.19237522780895233
    2. '           ' → logprob: -2.3173751831054688
    3. ' and' → logprob: -2.8173751831054688
    4. ' or' → logprob: -4.942375183105469
    5. ',' → logprob: -5.442375183105469
    6. ':' → logprob: -6.692375183105469
    7. ' if' → logprob: -6.942375183105469
    8. '
' → logprob: -7.442375183105469
    9. 'and' → logprob: -7.567375183105469
    10. ' else' → logprob: -8.192375183105469

Token 265: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6353235244750977
    2. '       ' → logprob: -0.7603235244750977
    3. ' or' → logprob: -7.135323524475098
    4. ',' → logprob: -7.385323524475098
    5. ' and' → logprob: -7.760323524475098
    6. ' if' → logprob: -8.135323524475098
    7. '   ' → logprob: -8.510323524475098
    8. '               ' → logprob: -9.260323524475098
    9. '```' → logprob: -9.635323524475098
    10. 'if' → logprob: -10.135323524475098

Token 266: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.5473618507385254
    2. 'if' (adapté à ' if') → logprob: -1.4223618507385254
    3. '1' → logprob: -1.7973618507385254
    4. '           ' → logprob: -4.297361850738525
    5. ' ' → logprob: -7.547361850738525
    6. 'x' → logprob: -8.047361373901367
    7. ' x' → logprob: -9.297361373901367
    8. '       ' → logprob: -9.547361373901367
    9. '   ' → logprob: -11.172361373901367
    10. '               ' → logprob: -12.672361373901367

Token 267: ' ratio' (ID: 18051)
  Prédit: 'ratio'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ratio' → logprob: -0.01823446713387966
    2. ' ratio' → logprob: -4.0182342529296875
    3. 'capacity' → logprob: -10.143234252929688
    4. 'ration' → logprob: -11.018234252929688
    5. '   ' → logprob: -11.268234252929688
    6. 'rat' → logprob: -12.518234252929688
    7. 'x' → logprob: -12.893234252929688
    8. 'r' → logprob: -12.893234252929688
    9. ' ' → logprob: -13.393234252929688
    10. ' capacity' → logprob: -13.393234252929688

Token 268: ' <=' (ID: 5017)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.31329846382141113
    2. ' >' → logprob: -1.3132984638214111
    3. '<=' → logprob: -10.938298225402832
    4. ' <=' → logprob: -11.063298225402832
    5. ' ' → logprob: -13.688298225402832
    6. '>=' → logprob: -14.063298225402832
    7. ' >=' → logprob: -15.563298225402832
    8. ')>' → logprob: -15.563298225402832
    9. ')' → logprob: -15.813298225402832
    10. '">' → logprob: -15.938298225402832

Token 269: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031790214125066996
    2. ' ' → logprob: -5.75317907333374
    3. 'float' → logprob: -14.253178596496582
    4. '1' → logprob: -14.878178596496582
    5. '   ' → logprob: -15.878178596496582
    6. ' float' → logprob: -16.6281795501709
    7. '  ' → logprob: -16.9406795501709
    8. '۰' → logprob: -17.4406795501709
    9. '```' → logprob: -17.5656795501709
    10. '-' → logprob: -17.9406795501709

Token 270: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -8.685467764735222e-05
    2. ' ' → logprob: -9.375086784362793
    3. 'float' → logprob: -13.375086784362793
    4. '-' → logprob: -15.250086784362793
    5. '1' → logprob: -16.25008773803711
    6. '   ' → logprob: -16.37508773803711
    7. ' float' → logprob: -17.00008773803711
    8. '  ' → logprob: -17.75008773803711
    9. '۰' → logprob: -18.56258773803711
    10. '    ' → logprob: -18.75008773803711

Token 271: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23641666769981384
    2. ':
' → logprob: -1.7364166975021362
    3. '           ' → logprob: -3.4864165782928467
    4. '               ' → logprob: -6.361416816711426
    5. '       ' → logprob: -6.986416816711426
    6. ' or' → logprob: -7.736416816711426
    7. ' continue' → logprob: -8.111416816711426
    8. 'continue' → logprob: -8.861416816711426
    9. ':return' → logprob: -9.861416816711426
    10. '   ' → logprob: -9.861416816711426

Token 272: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.5763430595397949
    2. '               ' → logprob: -0.9513430595397949
    3. 'continue' → logprob: -3.451343059539795
    4. ' continue' → logprob: -3.951343059539795
    5. '       ' → logprob: -8.451343536376953
    6. '   ' → logprob: -9.326343536376953
    7. 'x' → logprob: -9.326343536376953
    8. '
' → logprob: -9.326343536376953
    9. '0' → logprob: -9.451343536376953
    10. '	       ' → logprob: -9.826343536376953

Token 273: ' #' (ID: 1069)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.2353084832429886
    2. '           ' → logprob: -2.1103084087371826
    3. ' continue' → logprob: -2.8603084087371826
    4. '               ' → logprob: -3.4853084087371826
    5. '	continue' → logprob: -8.485308647155762
    6. '   ' → logprob: -8.735308647155762
    7. '       ' → logprob: -8.860308647155762
    8. 'break' → logprob: -10.985308647155762
    9. '```' → logprob: -10.985308647155762
    10. '	       ' → logprob: -11.735308647155762

Token 274: ' ne' (ID: 453)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.09140308201313019
    2. ' continue' → logprob: -3.216403007507324
    3. '           ' → logprob: -3.841403007507324
    4. 'break' → logprob: -3.966403007507324
    5. ' break' → logprob: -6.091403007507324
    6. '               ' → logprob: -6.216403007507324
    7. '   ' → logprob: -6.341403007507324
    8. '       ' → logprob: -7.841403007507324
    9. '```' → logprob: -8.841403007507324
    10. '	continue' → logprob: -9.841403007507324

Token 275: ' pas' (ID: 2173)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.05449571833014488
    2. ' continue' → logprob: -3.1794958114624023
    3. 'pas' → logprob: -5.054495811462402
    4. '           ' → logprob: -6.304495811462402
    5. 'contin' → logprob: -6.554495811462402
    6. '   ' → logprob: -6.804495811462402
    7. 'pass' → logprob: -8.429495811462402
    8. '       ' → logprob: -8.429495811462402
    9. '	continue' → logprob: -9.554495811462402
    10. ' pas' → logprob: -9.804495811462402

Token 276: ' prendre' (ID: 24257)
  Prédit: 'prendre'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'prendre' → logprob: -0.013987782411277294
    2. 'contin' → logprob: -4.513988018035889
    3. 'continue' → logprob: -6.263988018035889
    4. ' prendre' → logprob: -7.138988018035889
    5. 'pass' → logprob: -9.38898754119873
    6. 'pr' → logprob: -9.51398754119873
    7. 'take' → logprob: -9.88898754119873
    8. ' continuer' → logprob: -11.88898754119873
    9. 'prise' → logprob: -11.88898754119873
    10. 'pas' → logprob: -12.26398754119873

Token 277: ' d' (ID: 272)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.22785739600658417
    2. 'continue' → logprob: -2.2278573513031006
    3. ' continue' → logprob: -2.3528573513031006
    4. '               ' → logprob: -7.22785758972168
    5. '       ' → logprob: -9.10285758972168
    6. '	continue' → logprob: -10.47785758972168
    7. '```' → logprob: -11.60285758972168
    8. '
' → logprob: -12.10285758972168
    9. '		' → logprob: -12.10285758972168
    10. '   ' → logprob: -12.10285758972168

Token 278: ''' (ID: 6)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.06083438917994499
    2. 'eux' → logprob: -4.5608344078063965
    3. 'obj' → logprob: -5.0608344078063965
    4. 'elif' → logprob: -5.1858344078063965
    5. 'élé' → logprob: -5.4358344078063965
    6. 'items' → logprob: -5.5608344078063965
    7. '```' → logprob: -5.6858344078063965
    8. ' x' → logprob: -5.8108344078063965
    9. '<|end|>' → logprob: -5.8108344078063965
    10. ''objet' → logprob: -5.8108344078063965

Token 279: 'items' (ID: 6918)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -1.1375178098678589
    2. 'élé' → logprob: -1.1375178098678589
    3. 'obj' → logprob: -2.3875179290771484
    4. 'objet' → logprob: -2.7625179290771484
    5. 'item' → logprob: -3.5125179290771484
    6. 'e' → logprob: -4.012517929077148
    7. ' x' → logprob: -4.137517929077148
    8. 'article' → logprob: -4.137517929077148
    9. 'él' → logprob: -4.137517929077148
    10. '```' → logprob: -4.137517929077148

Token 280: ' avec' (ID: 3937)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05486130341887474
    2. 'continue' → logprob: -3.554861307144165
    3. ' continue' → logprob: -4.304861068725586
    4. '               ' → logprob: -4.554861068725586
    5. '       ' → logprob: -7.554861068725586
    6. ',' → logprob: -10.054861068725586
    7. '		' → logprob: -10.179861068725586
    8. '	continue' → logprob: -10.304861068725586
    9. '	       ' → logprob: -10.429861068725586
    10. ';' → logprob: -10.554861068725586

Token 281: ' poids' (ID: 56058)
  Prédit: 'ratio'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ratio' → logprob: -0.014581941068172455
    2. 'w' → logprob: -5.01458215713501
    3. ' ratio' → logprob: -5.26458215713501
    4. 'x' → logprob: -6.88958215713501
    5. 'negative' → logprob: -7.01458215713501
    6. 'un' → logprob: -8.139581680297852
    7. 'neg' → logprob: -9.639581680297852
    8. 'une' → logprob: -9.639581680297852
    9. 'rat' → logprob: -10.014581680297852
    10. '0' → logprob: -10.014581680297852

Token 282: ' negatif' (ID: 195227)
  Prédit: ' nég'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' nég' → logprob: -0.08605256676673889
    2. 'neg' → logprob: -2.961052656173706
    3. '<' → logprob: -4.836052417755127
    4. 'n' → logprob: -4.836052417755127
    5. ' negatif' → logprob: -4.836052417755127
    6. 'negative' → logprob: -5.711052417755127
    7. ' <' → logprob: -6.836052417755127
    8. ' negative' → logprob: -7.461052417755127
    9. '0' → logprob: -7.461052417755127
    10. '   ' → logprob: -8.336052894592285

Token 283: ' si' (ID: 1784)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7543199062347412
    2. 'continue' → logprob: -1.5043199062347412
    3. ' continue' → logprob: -1.7543199062347412
    4. '
' → logprob: -2.129319906234741
    5. '               ' → logprob: -4.25432014465332
    6. '\n' → logprob: -7.87932014465332
    7. '	continue' → logprob: -8.62932014465332
    8. '       ' → logprob: -8.87932014465332
    9. ',' → logprob: -8.87932014465332
    10. '		' → logprob: -9.25432014465332

Token 284: ' ratio' (ID: 18051)
  Prédit: 'ratio'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ratio' → logprob: -0.0844634398818016
    2. ' ratio' → logprob: -2.834463357925415
    3. 'not' → logprob: -4.584463596343994
    4. 'x' → logprob: -6.084463596343994
    5. 'False' → logprob: -6.334463596343994
    6. 'True' → logprob: -6.709463596343994
    7. ' not' → logprob: -6.959463596343994
    8. 'leur' → logprob: -7.084463596343994
    9. '```' → logprob: -7.459463596343994
    10. ' ils' → logprob: -7.709463596343994

Token 285: ' <=' (ID: 5017)
  Prédit: '<='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<=' → logprob: -0.3669690191745758
    2. ' <=' → logprob: -1.4919689893722534
    3. '<' → logprob: -2.616969108581543
    4. ' <' → logprob: -4.741969108581543
    5. '>=' → logprob: -8.366969108581543
    6. ' >=' → logprob: -9.366969108581543
    7. '>' → logprob: -9.616969108581543
    8. '==' → logprob: -10.366969108581543
    9. '   ' → logprob: -11.366969108581543
    10. '0' → logprob: -11.491969108581543

Token 286: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.014163863845169544
    2. ' ' → logprob: -4.264163970947266
    3. '   ' → logprob: -15.139163970947266
    4. '```' → logprob: -17.014163970947266
    5. '  ' → logprob: -17.264163970947266
    6. ' ' → logprob: -19.014163970947266
    7. ')' → logprob: -19.514163970947266
    8. '۰' → logprob: -19.764163970947266
    9. '    ' → logprob: -20.014163970947266
    10. '<|end|>' → logprob: -20.514163970947266

Token 287: ' (' (ID: 350)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.2927412986755371
    2. '               ' → logprob: -1.542741298675537
    3. ' continue' → logprob: -3.667741298675537
    4. 'continue' → logprob: -4.292741298675537
    5. '
' → logprob: -7.292741298675537
    6. '                   ' → logprob: -10.417741775512695
    7. '       ' → logprob: -10.667741775512695
    8. '	continue' → logprob: -11.542741775512695
    9. ',' → logprob: -12.167741775512695
    10. ' continues' → logprob: -12.292741775512695

Token 288: 'pas' (ID: 21122)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6828327775001526
    2. 'True' → logprob: -1.5578327178955078
    3. 'continue' → logprob: -2.307832717895508
    4. ' True' → logprob: -2.432832717895508
    5. ' continue' → logprob: -3.057832717895508
    6. '               ' → logprob: -3.557832717895508
    7. ')
' → logprob: -5.307832717895508
    8. ')' → logprob: -5.307832717895508
    9. 'False' → logprob: -5.307832717895508
    10. '       ' → logprob: -6.932832717895508

Token 289: ' rentable' (ID: 172065)
  Prédit: ' positif'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' positif' → logprob: -1.611871361732483
    2. ' de' → logprob: -1.861871361732483
    3. ' positive' → logprob: -1.986871361732483
    4. ' bénéf' → logprob: -2.7368712425231934
    5. 'de' → logprob: -2.8618712425231934
    6. '   ' → logprob: -3.3618712425231934
    7. ' beneficial' → logprob: -3.4868712425231934
    8. ' possible' → logprob: -3.4868712425231934
    9. ' bon' → logprob: -3.6118712425231934
    10. 'strict' → logprob: -3.6118712425231934

Token 290: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.6433022618293762
    2. ')' → logprob: -1.3933022022247314
    3. '           ' → logprob: -1.5183022022247314
    4. '               ' → logprob: -5.0183024406433105
    5. '       ' → logprob: -9.268301963806152
    6. ')
' → logprob: -9.393301963806152
    7. 'continue' → logprob: -9.393301963806152
    8. ' )
' → logprob: -10.018301963806152
    9. ',' → logprob: -10.268301963806152
    10. ' continue' → logprob: -10.518301963806152

Token 291: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.047868531197309494
    2. '               ' → logprob: -3.422868490219116
    3. 'continue' → logprob: -4.547868728637695
    4. ' continue' → logprob: -5.672868728637695
    5. '       ' → logprob: -9.922868728637695
    6. '```' → logprob: -12.047868728637695
    7. '	continue' → logprob: -12.172868728637695
    8. '                   ' → logprob: -12.172868728637695
    9. '		' → logprob: -12.297868728637695
    10. '	       ' → logprob: -12.422868728637695

Token 292: ' continue' (ID: 4901)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' (adapté à ' continue') → logprob: -0.02564367838203907
    2. '           ' → logprob: -4.400643825531006
    3. ' continue' → logprob: -4.775643825531006
    4. '               ' → logprob: -5.400643825531006
    5. '	continue' → logprob: -10.525643348693848
    6. '   ' → logprob: -10.650643348693848
    7. '```' → logprob: -11.150643348693848
    8. 'break' → logprob: -11.275643348693848
    9. '       ' → logprob: -11.275643348693848
    10. '                   ' → logprob: -12.025643348693848

Token 293: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1123688668012619
    2. '           ' → logprob: -2.4873688220977783
    3. 'x' → logprob: -3.8623688220977783
    4. 'else' → logprob: -6.737369060516357
    5. '        
' → logprob: -8.3623685836792
    6. '```' → logprob: -8.8623685836792
    7. ' x' → logprob: -8.9873685836792
    8. '
' → logprob: -9.1123685836792
    9. '            
' → logprob: -9.6123685836792
    10. ' else' → logprob: -10.1123685836792

Token 294: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.18831589818000793
    2. '           ' → logprob: -1.8133158683776855
    3. 'x' → logprob: -4.8133158683776855
    4. 'else' → logprob: -8.313316345214844
    5. '```' → logprob: -10.188316345214844
    6. '        
' → logprob: -10.313316345214844
    7. ' x' → logprob: -10.313316345214844
    8. '   ' → logprob: -11.063316345214844
    9. '            
' → logprob: -11.063316345214844
    10. ' else' → logprob: -11.438316345214844

Token 295: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.47033795714378357
    2. '       ' → logprob: -1.470337986946106
    3. 'x' → logprob: -1.970337986946106
    4. 'total' → logprob: -5.595337867736816
    5. ' x' → logprob: -6.345337867736816
    6. ' total' → logprob: -8.720337867736816
    7. 'else' → logprob: -9.470337867736816
    8. '   ' → logprob: -9.595337867736816
    9. '```' → logprob: -10.220337867736816
    10. '        
' → logprob: -10.470337867736816

Token 296: ' Pr' (ID: 2284)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.09967237710952759
    2. 'total' → logprob: -2.474672317504883
    3. '           ' → logprob: -4.974672317504883
    4. ' total' → logprob: -6.599672317504883
    5. ' x' → logprob: -6.974672317504883
    6. 'capacity' → logprob: -7.599672317504883
    7. '#' → logprob: -8.099672317504883
    8. '       ' → logprob: -8.599672317504883
    9. '   ' → logprob: -8.599672317504883
    10. 'if' → logprob: -9.224672317504883

Token 297: 'endre' (ID: 9574)
  Prédit: 'endre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endre' → logprob: -0.0033167421352118254
    2. 'end' → logprob: -6.128316879272461
    3. 'is' → logprob: -7.628316879272461
    4. 'en' → logprob: -8.503316879272461
    5. '   ' → logprob: -9.253316879272461
    6. 'ends' → logprob: -9.378316879272461
    7. 'e' → logprob: -9.503316879272461
    8. 'a' → logprob: -9.878316879272461
    9. 'endr' → logprob: -10.378316879272461
    10. 'ise' → logprob: -11.253316879272461

Token 298: ' x' (ID: 1215)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.18904471397399902
    2. 'x' → logprob: -1.814044713973999
    3. ' x' → logprob: -4.939044952392578
    4. ' ' → logprob: -6.189044952392578
    5. '=' → logprob: -11.314044952392578
    6. '           ' → logprob: -11.814044952392578
    7. '(' → logprob: -12.189044952392578
    8. '   ' → logprob: -12.439044952392578
    9. 'max' → logprob: -12.814044952392578
    10. ' =' → logprob: -12.939044952392578

Token 299: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.005234121344983578
    2. ' =' → logprob: -5.255234241485596
    3. '=min' → logprob: -16.630233764648438
    4. '=int' → logprob: -16.880233764648438
    5. '   ' → logprob: -16.880233764648438
    6. '=max' → logprob: -17.130233764648438
    7. ',' → logprob: -17.505233764648438
    8. '＝' → logprob: -17.630233764648438
    9. '1' → logprob: -17.630233764648438
    10. '=float' → logprob: -18.255233764648438

Token 300: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.392202976712724e-06
    2. ' ' → logprob: -12.000006675720215
    3. 'min' → logprob: -15.750006675720215
    4. '0' → logprob: -17.7500057220459
    5. '```' → logprob: -17.8750057220459
    6. '   ' → logprob: -18.8750057220459
    7. ' min' → logprob: -19.5000057220459
    8. '１' → logprob: -20.1875057220459
    9. '.' → logprob: -20.2500057220459
    10. '<|end|>' → logprob: -20.2500057220459

Token 301: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0042500621639192104
    2. '       ' → logprob: -6.0042500495910645
    3. '<|end|>' → logprob: -7.1292500495910645
    4. '
' → logprob: -7.3792500495910645
    5. ',' → logprob: -9.129250526428223
    6. '            
' → logprob: -9.879250526428223
    7. 'total' → logprob: -10.754250526428223
    8. '               ' → logprob: -10.754250526428223
    9. ' =' → logprob: -10.754250526428223
    10. '        
' → logprob: -11.004250526428223

Token 302: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01627236045897007
    2. '
' → logprob: -4.14127254486084
    3. '       ' → logprob: -9.26627254486084
    4. ',' → logprob: -9.64127254486084
    5. '		' → logprob: -11.01627254486084
    6. '            
' → logprob: -11.26627254486084
    7. '
' → logprob: -11.39127254486084
    8. '   ' → logprob: -12.26627254486084
    9. ' =' → logprob: -12.64127254486084
    10. '               ' → logprob: -12.64127254486084

Token 303: ' total' (ID: 3609)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.05073614791035652
    2. 'total' (adapté à ' total') → logprob: -3.17573618888855
    3. '           ' → logprob: -5.550735950469971
    4. ' capacity' → logprob: -5.675735950469971
    5. ' total' → logprob: -8.800736427307129
    6. '   ' → logprob: -9.175736427307129
    7. 'x' → logprob: -9.175736427307129
    8. 'cap' → logprob: -11.300736427307129
    9. 'quantity' → logprob: -11.925736427307129
    10. '       ' → logprob: -12.425736427307129

Token 304: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -1.580929347255733e-05
    2. 'value' → logprob: -11.500016212463379
    3. '_' → logprob: -13.000016212463379
    4. '+=' → logprob: -13.625016212463379
    5. ' +=' → logprob: -14.125016212463379
    6. '=' → logprob: -14.500016212463379
    7. '   ' → logprob: -15.625016212463379
    8. ' =' → logprob: -15.625016212463379
    9. '_values' → logprob: -16.500015258789062
    10. '_capacity' → logprob: -16.625015258789062

Token 305: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.06197956204414368
    2. '+=' → logprob: -2.8119795322418213
    3. '+' → logprob: -11.686979293823242
    4. '   ' → logprob: -13.936979293823242
    5. ']+=' → logprob: -13.936979293823242
    6. '    ' → logprob: -14.311979293823242
    7. ' +' → logprob: -14.811979293823242
    8. '+=(' → logprob: -15.311979293823242
    9. '```' → logprob: -15.311979293823242
    10. ' ' → logprob: -16.561979293823242

Token 306: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.0007100477814674377
    2. ' v' → logprob: -7.2507100105285645
    3. '	v' → logprob: -17.750709533691406
    4. '   ' → logprob: -18.000709533691406
    5. '           ' → logprob: -19.000709533691406
    6. ' ' → logprob: -19.875709533691406
    7. '
' → logprob: -20.000709533691406
    8. '       ' → logprob: -20.250709533691406
    9. '    ' → logprob: -20.375709533691406
    10. '$v' → logprob: -20.375709533691406

Token 307: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 308: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0054356930777430534
    2. 'capacity' → logprob: -5.880435466766357
    3. '       ' → logprob: -6.255435466766357
    4. ' capacity' → logprob: -7.380435466766357
    5. '   ' → logprob: -9.880435943603516
    6. '               ' → logprob: -10.755435943603516
    7. 'capac' → logprob: -11.880435943603516
    8. '            
' → logprob: -13.630435943603516
    9. '                   ' → logprob: -14.005435943603516
    10. 'cap' → logprob: -14.505435943603516

Token 309: ' capacity' (ID: 12241)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' (adapté à ' capacity') → logprob: -0.0006638261256739497
    2. ' capacity' → logprob: -7.500663757324219
    3. '           ' → logprob: -9.125663757324219
    4. '   ' → logprob: -13.250663757324219
    5. 'cap' → logprob: -16.12566375732422
    6. 'capac' → logprob: -17.00066375732422
    7. '       ' → logprob: -17.12566375732422
    8. '               ' → logprob: -18.12566375732422
    9. '+' → logprob: -18.50066375732422
    10. '容量' → logprob: -18.62566375732422

Token 310: ' -=' (ID: 12583)
  Prédit: ' +='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.47539645433425903
    2. '+=' → logprob: -0.975396454334259
    3. '+' → logprob: -6.725396633148193
    4. ' +' → logprob: -9.475396156311035
    5. '    ' → logprob: -10.600396156311035
    6. '   ' → logprob: -11.475396156311035
    7. '=' → logprob: -13.100396156311035
    8. ' -=' → logprob: -13.350396156311035
    9. ' ' → logprob: -14.475396156311035
    10. ']+=' → logprob: -14.725396156311035

Token 311: ' w' (ID: 286)
  Prédit: 'w'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'w' → logprob: -0.0040831477381289005
    2. ' w' → logprob: -5.504083156585693
    3. '-' → logprob: -13.004082679748535
    4. ' -' → logprob: -13.629082679748535
    5. '-w' → logprob: -14.754082679748535
    6. '           ' → logprob: -15.254082679748535
    7. '	w' → logprob: -15.504082679748535
    8. '   ' → logprob: -16.37908363342285
    9. '(w' → logprob: -16.50408363342285
    10. '       ' → logprob: -16.62908363342285

Token 312: ' ' (ID: 220)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 313: ' #' (ID: 1069)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 314: ' w' (ID: 286)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 315: '<' (ID: 27)
  Prédit: ' is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -0.9138220548629761
    2. 'is' → logprob: -1.038822054862976
    3. '<' → logprob: -1.663822054862976
    4. '*' → logprob: -3.1638221740722656
    5. ' *' → logprob: -4.913822174072266
    6. '<|end|>' → logprob: -5.913822174072266
    7. ' <' → logprob: -6.663822174072266
    8. ')' → logprob: -6.788822174072266
    9. '=' → logprob: -8.663822174072266
    10. 'negative' → logprob: -9.288822174072266

Token 316: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00023071514442563057
    2. ' ' → logprob: -8.37523078918457
    3. '=' → logprob: -16.75023078918457
    4. '1' → logprob: -18.25023078918457
    5. '   ' → logprob: -18.50023078918457
    6. '```' → logprob: -18.62523078918457
    7. ' ' → logprob: -19.00023078918457
    8. '<' → logprob: -19.87523078918457
    9. ')' → logprob: -20.12523078918457
    10. 'w' → logprob: -20.68773078918457

Token 317: ' donc' (ID: 14206)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 318: ' capacity' (ID: 12241)
  Prédit: 'capacity'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'capacity' → logprob: -0.03701569139957428
    2. '-cap' → logprob: -4.037015914916992
    3. '-' → logprob: -4.912015914916992
    4. 'cap' → logprob: -4.912015914916992
    5. ' capacity' → logprob: -7.037015914916992
    6. '+' → logprob: -7.537015914916992
    7. 'on' → logprob: -7.912015914916992
    8. '-c' → logprob: -8.287015914916992
    9. 'c' → logprob: -8.412015914916992
    10. '-w' → logprob: -8.537015914916992

Token 319: ' augmente' (ID: 150199)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.038138460367918015
    2. ' +=' → logprob: -3.2881383895874023
    3. '=' → logprob: -9.788138389587402
    4. '+' → logprob: -11.413138389587402
    5. ']+=' → logprob: -11.538138389587402
    6. 'increase' → logprob: -12.288138389587402
    7. '+=(' → logprob: -12.913138389587402
    8. ' augmente' → logprob: -13.038138389587402
    9. '   ' → logprob: -13.288138389587402
    10. '+="' → logprob: -13.288138389587402

Token 320: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0923527404665947
    2. '<|end|>' → logprob: -2.8423526287078857
    3. '   ' → logprob: -4.342352867126465
    4. 'continue' → logprob: -4.842352867126465
    5. '```' → logprob: -5.467352867126465
    6. '           ' → logprob: -6.592352867126465
    7. ' continue' → logprob: -7.592352867126465
    8. ')' → logprob: -7.717352867126465
    9. '
' → logprob: -7.717352867126465
    10. 'else' → logprob: -7.842352867126465

Token 321: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.028887586668133736
    2. '   ' → logprob: -4.278887748718262
    3. 'continue' → logprob: -5.028887748718262
    4. '<|end|>' → logprob: -5.278887748718262
    5. '```' → logprob: -7.028887748718262
    6. 'else' → logprob: -7.153887748718262
    7. ' continue' → logprob: -8.028887748718262
    8. 'return' → logprob: -8.403887748718262
    9. ')' → logprob: -8.903887748718262
    10. ' else' → logprob: -8.903887748718262

Token 322: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6323608756065369
    2. 'else' (adapté à ' else') → logprob: -1.2573609352111816
    3. '   ' → logprob: -2.1323609352111816
    4. ' else' → logprob: -3.3823609352111816
    5. 'elif' → logprob: -4.382360935211182
    6. '```' → logprob: -5.257360935211182
    7. 'return' → logprob: -5.382360935211182
    8. ')' → logprob: -6.007360935211182
    9. 'x' → logprob: -6.632360935211182
    10. 'continue' → logprob: -6.632360935211182

Token 323: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6838355660438538
    2. '           ' → logprob: -1.308835506439209
    3. ':
' → logprob: -1.808835506439209
    4. '       ' → logprob: -2.808835506439209
    5. '        ' → logprob: -8.433835983276367
    6. '   ' → logprob: -8.558835983276367
    7. '               ' → logprob: -8.933835983276367
    8. '
' → logprob: -9.058835983276367
    9. '```' → logprob: -9.183835983276367
    10. '0' → logprob: -10.433835983276367

Token 324: '           ' (ID: 352)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6915169358253479
    2. '           ' → logprob: -1.0665168762207031
    3. ' if' → logprob: -2.316516876220703
    4. 'if' → logprob: -2.941516876220703
    5. '#' → logprob: -6.191516876220703
    6. ' #' → logprob: -7.316516876220703
    7. 'x' → logprob: -8.191516876220703
    8. 'continue' → logprob: -8.816516876220703
    9. ' continue' → logprob: -8.816516876220703
    10. '   ' → logprob: -9.066516876220703

Token 325: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.09634404629468918
    2. '           ' → logprob: -3.471343994140625
    3. 'x' → logprob: -3.596343994140625
    4. '#' (adapté à ' #') → logprob: -3.846343994140625
    5. ' if' → logprob: -5.096343994140625
    6. 'total' → logprob: -5.471343994140625
    7. '       ' → logprob: -7.096343994140625
    8. 'continue' → logprob: -7.346343994140625
    9. '   ' → logprob: -9.596343994140625
    10. ' #' → logprob: -10.596343994140625

Token 326: ' w' (ID: 286)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.22928529977798462
    2. '#' → logprob: -2.10428524017334
    3. 'x' → logprob: -3.10428524017334
    4. ' if' → logprob: -3.85428524017334
    5. 'total' → logprob: -4.85428524017334
    6. 'ratio' → logprob: -5.22928524017334
    7. '   ' → logprob: -6.47928524017334
    8. 'v' → logprob: -7.35428524017334
    9. ' #' → logprob: -7.60428524017334
    10. '           ' → logprob: -8.10428524017334

Token 327: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6161572933197021
    2. '==' → logprob: -0.9911572933197021
    3. ' ==' → logprob: -2.491157293319702
    4. ' =' → logprob: -5.366157531738281
    5. '>' → logprob: -7.491157531738281
    6. '!=' → logprob: -7.991157531738281
    7. ' !=' → logprob: -8.866157531738281
    8. '<=' → logprob: -9.866157531738281
    9. ',' → logprob: -10.366157531738281
    10. '0' → logprob: -10.366157531738281

Token 328: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00015955790877342224
    2. ' ' → logprob: -9.00015926361084
    3. '=' → logprob: -10.37515926361084
    4. '1' → logprob: -13.12515926361084
    5. '   ' → logprob: -14.50015926361084
    6. '==' → logprob: -14.75015926361084
    7. '           ' → logprob: -14.75015926361084
    8. '  ' → logprob: -15.12515926361084
    9. '       ' → logprob: -15.12515926361084
    10. '```' → logprob: -15.81265926361084

Token 329: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.727808952331543
    2. '           ' → logprob: -1.102808952331543
    3. ' if' → logprob: -2.227808952331543
    4. 'if' → logprob: -2.852808952331543
    5. '
' → logprob: -3.977808952331543
    6. '   ' → logprob: -8.352808952331543
    7. '<|end|>' → logprob: -8.602808952331543
    8. '               ' → logprob: -9.102808952331543
    9. '        
' → logprob: -9.602808952331543
    10. ',' → logprob: -9.602808952331543

Token 330: '           ' (ID: 352)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.10002364963293076
    2. '           ' → logprob: -3.2250237464904785
    3. ' if' → logprob: -3.3500237464904785
    4. 'total' → logprob: -4.6000237464904785
    5. 'x' → logprob: -4.8500237464904785
    6. '       ' → logprob: -6.3500237464904785
    7. '   ' → logprob: -8.10002326965332
    8. 'continue' → logprob: -8.60002326965332
    9. ' total' → logprob: -8.85002326965332
    10. '#' → logprob: -10.97502326965332

Token 331: ' #' (ID: 1069)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.012698116712272167
    2. 'total' → logprob: -5.137698173522949
    3. ' if' → logprob: -5.887698173522949
    4. '           ' → logprob: -6.137698173522949
    5. 'x' → logprob: -6.387698173522949
    6. '       ' → logprob: -9.63769817352295
    7. ' total' → logprob: -10.63769817352295
    8. '   ' → logprob: -10.63769817352295
    9. 'continue' → logprob: -12.38769817352295
    10. '               ' → logprob: -12.51269817352295

Token 332: ' Pr' (ID: 2284)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.01367751881480217
    2. 'x' → logprob: -5.138677597045898
    3. 'total' → logprob: -5.138677597045898
    4. '           ' → logprob: -6.513677597045898
    5. ' if' → logprob: -8.263677597045898
    6. '#' → logprob: -10.013677597045898
    7. '       ' → logprob: -10.263677597045898
    8. '   ' → logprob: -11.138677597045898
    9. '               ' → logprob: -11.888677597045898
    10. ' total' → logprob: -12.888677597045898

Token 333: 'endre' (ID: 9574)
  Prédit: 'endre'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'endre' → logprob: -0.003080505644902587
    2. 'end' → logprob: -5.878080368041992
    3. 'endif' → logprob: -10.003080368041992
    4. 'is' → logprob: -10.003080368041992
    5. 'if' → logprob: -10.253080368041992
    6. '           ' → logprob: -10.503080368041992
    7. 'ends' → logprob: -11.003080368041992
    8. 'enant' → logprob: -11.128080368041992
    9. 'enez' → logprob: -11.253080368041992
    10. '   ' → logprob: -11.378080368041992

Token 334: ' x' (ID: 1215)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.1872997283935547
    2. 'total' → logprob: -1.6872997283935547
    3. ' total' → logprob: -1.8122997283935547
    4. 'x' → logprob: -1.8122997283935547
    5. 'if' → logprob: -2.3122997283935547
    6. ' x' → logprob: -3.1872997283935547
    7. ' if' → logprob: -3.4372997283935547
    8. ' ' → logprob: -4.937299728393555
    9. 'max' → logprob: -6.562299728393555
    10. '0' → logprob: -7.437299728393555

Token 335: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03375750035047531
    2. ' =' → logprob: -3.408757448196411
    3. '=int' → logprob: -9.658757209777832
    4. '1' → logprob: -10.908757209777832
    5. '=max' → logprob: -11.158757209777832
    6. '=min' → logprob: -12.408757209777832
    7. '0' → logprob: -12.658757209777832
    8. 'if' → logprob: -13.158757209777832
    9. ' ' → logprob: -13.283757209777832
    10. '=float' → logprob: -13.533757209777832

Token 336: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00021295747137628496
    2. 'min' → logprob: -9.500212669372559
    3. '0' → logprob: -9.625212669372559
    4. ' ' → logprob: -10.000212669372559
    5. 'float' → logprob: -11.000212669372559
    6. '(' → logprob: -13.125212669372559
    7. 'max' → logprob: -13.625212669372559
    8. ' min' → logprob: -13.625212669372559
    9. '(float' → logprob: -14.000212669372559
    10. '(min' → logprob: -14.125212669372559

Token 337: ' si' (ID: 1784)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1202344074845314
    2. ' if' → logprob: -2.245234489440918
    3. 'if' → logprob: -4.995234489440918
    4. '<|end|>' → logprob: -8.370234489440918
    5. '       ' → logprob: -8.870234489440918
    6. ',' → logprob: -9.620234489440918
    7. ' =' → logprob: -10.120234489440918
    8. '
' → logprob: -10.495234489440918
    9. '<|end|>' → logprob: -10.745234489440918
    10. '   ' → logprob: -10.995234489440918

Token 338: ' v' (ID: 323)
  Prédit: 'ratio'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ratio' → logprob: -0.6809758543968201
    2. 'v' → logprob: -1.3059759140014648
    3. ' ratio' → logprob: -1.6809759140014648
    4. ' v' → logprob: -3.305975914001465
    5. '   ' → logprob: -10.430975914001465
    6. 'r' → logprob: -11.243475914001465
    7. ' ' → logprob: -11.305975914001465
    8. 'value' → logprob: -11.993475914001465
    9. 'ration' → logprob: -12.118475914001465
    10. '_ratio' → logprob: -12.243475914001465

Token 339: '>' (ID: 29)
  Prédit: '>'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.17974939942359924
    2. ' >' → logprob: -1.8047493696212769
    3. '&gt' → logprob: -13.554749488830566
    4. '<|end|>' → logprob: -14.429749488830566
    5. '()>' → logprob: -14.804749488830566
    6. '```' → logprob: -15.054749488830566
    7. ')>' → logprob: -15.304749488830566
    8. ' ' → logprob: -15.429749488830566
    9. ' ' → logprob: -15.554749488830566
    10. '＞' → logprob: -15.554749488830566

Token 340: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0013296448159962893
    2. ' ' → logprob: -6.62632942199707
    3. '>' → logprob: -12.87632942199707
    4. '=' → logprob: -14.75132942199707
    5. '   ' → logprob: -15.12632942199707
    6. '```' → logprob: -15.75132942199707
    7. ' ' → logprob: -16.50132942199707
    8. '۰' → logprob: -17.12632942199707
    9. '  ' → logprob: -17.25132942199707
    10. '.' → logprob: -17.75132942199707

Token 341: ',' (ID: 11)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.05939792841672897
    2. '       ' → logprob: -2.9343979358673096
    3. ',' → logprob: -6.9343976974487305
    4. '
' → logprob: -6.9343976974487305
    5. ' if' → logprob: -7.0593976974487305
    6. '               ' → logprob: -7.5593976974487305
    7. 'if' → logprob: -8.30939769744873
    8. '   ' → logprob: -8.68439769744873
    9. ' or' → logprob: -8.68439769744873
    10. '<|end|>' → logprob: -8.80939769744873

Token 342: ' sinon' (ID: 52915)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.3006186783313751
    2. 'total' → logprob: -1.6756186485290527
    3. ' total' → logprob: -2.9256186485290527
    4. 'x' → logprob: -4.800618648529053
    5. '               ' → logprob: -5.425618648529053
    6. ' if' → logprob: -6.425618648529053
    7. ' x' → logprob: -6.425618648529053
    8. 'if' → logprob: -6.800618648529053
    9. '       ' → logprob: -6.800618648529053
    10. 'continue' → logprob: -8.175619125366211

Token 343: ' x' (ID: 1215)
  Prédit: 'continue'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'continue' → logprob: -0.17263242602348328
    2. ' continue' → logprob: -1.9226324558258057
    3. '           ' → logprob: -4.797632217407227
    4. '               ' → logprob: -6.422632217407227
    5. 'x' → logprob: -6.672632217407227
    6. '0' → logprob: -7.297632217407227
    7. 'pass' → logprob: -8.797632217407227
    8. ' x' → logprob: -9.172632217407227
    9. '	continue' → logprob: -9.297632217407227
    10. ' pass' → logprob: -10.297632217407227

Token 344: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -1.1756367712223437e-05
    2. ' =' → logprob: -11.375011444091797
    3. '=int' → logprob: -16.250011444091797
    4. '0' → logprob: -17.250011444091797
    5. '=
' → logprob: -18.000011444091797
    6. '==' → logprob: -18.500011444091797
    7. '＝' → logprob: -18.625011444091797
    8. '=False' → logprob: -19.000011444091797
    9. 'x' → logprob: -19.250011444091797
    10. '=}' → logprob: -19.500011444091797

Token 345: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '1' → logprob: -17.0
    4. '۰' → logprob: -18.5
    5. 'continue' → logprob: -19.25
    6. '```' → logprob: -20.0
    7. '   ' → logprob: -20.375
    8. '=' → logprob: -20.625
    9. '０' → logprob: -21.125
    10. '০' → logprob: -21.375

Token 346: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.017631685361266136
    2. '       ' → logprob: -4.517631530761719
    3. '
' → logprob: -5.267631530761719
    4. 'if' → logprob: -7.392631530761719
    5. ' if' → logprob: -7.392631530761719
    6. '               ' → logprob: -10.142631530761719
    7. '            
' → logprob: -10.267631530761719
    8. '   ' → logprob: -10.642631530761719
    9. '		' → logprob: -10.892631530761719
    10. '        
' → logprob: -11.267631530761719

Token 347: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.6905657649040222
    2. '       ' → logprob: -0.9405657649040222
    3. 'if' → logprob: -2.940565824508667
    4. ' if' → logprob: -2.940565824508667
    5. '
' → logprob: -6.690565586090088
    6. '   ' → logprob: -6.690565586090088
    7. '```' → logprob: -10.315566062927246
    8. '               ' → logprob: -10.440566062927246
    9. '        
' → logprob: -11.690566062927246
    10. 'x' → logprob: -11.690566062927246

Token 348: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.004615964833647013
    2. '           ' → logprob: -6.379615783691406
    3. 'x' → logprob: -6.504615783691406
    4. 'total' → logprob: -7.254615783691406
    5. ' if' → logprob: -7.379615783691406
    6. '       ' → logprob: -9.504615783691406
    7. '   ' → logprob: -12.379615783691406
    8. '               ' → logprob: -13.629615783691406
    9. '```' → logprob: -13.754615783691406
    10. ' total' → logprob: -14.629615783691406

Token 349: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.048587825149297714
    2. ' v' → logprob: -3.0485877990722656
    3. '   ' → logprob: -15.548587799072266
    4. '	v' → logprob: -16.173587799072266
    5. '(v' → logprob: -17.048587799072266
    6. '>' → logprob: -17.423587799072266
    7. 'ratio' → logprob: -17.423587799072266
    8. ' ' → logprob: -17.548587799072266
    9. '_v' → logprob: -17.798587799072266
    10. '  ' → logprob: -18.048587799072266

Token 350: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.0032100381795316935
    2. ' >' → logprob: -5.753210067749023
    3. '<=' → logprob: -10.378210067749023
    4. ' <=' → logprob: -14.128210067749023
    5. ')>' → logprob: -16.003210067749023
    6. '()>' → logprob: -16.003210067749023
    7. '>
' → logprob: -16.378210067749023
    8. '＞' → logprob: -16.628210067749023
    9. '">' → logprob: -17.003210067749023
    10. ' ' → logprob: -17.003210067749023

Token 351: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.157039049663581e-05
    2. ' ' → logprob: -9.875051498413086
    3. '   ' → logprob: -19.000051498413086
    4. '۰' → logprob: -20.750051498413086
    5. '<|end|>' → logprob: -21.500051498413086
    6. '  ' → logprob: -21.500051498413086
    7. '>' → logprob: -21.625051498413086
    8. '```' → logprob: -22.875051498413086
    9. '    ' → logprob: -23.000051498413086
    10. '０' → logprob: -23.125051498413086

Token 352: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.088346359931165e-07
    2. ' ' → logprob: -14.000000953674316
    3. '   ' → logprob: -20.375
    4. '۰' → logprob: -20.75
    5. '<|end|>' → logprob: -21.875
    6. '```' → logprob: -22.875
    7. '  ' → logprob: -22.875
    8. '=' → logprob: -23.125
    9. '０' → logprob: -23.25
    10. '٠' → logprob: -23.625

Token 353: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23096102476119995
    2. ':
' → logprob: -1.6059610843658447
    3. '               ' → logprob: -5.730960845947266
    4. '           ' → logprob: -6.105960845947266
    5. '):
' → logprob: -10.480960845947266
    6. ',' → logprob: -12.105960845947266
    7. ':

' → logprob: -12.480960845947266
    8. ':
' → logprob: -12.480960845947266
    9. '):' → logprob: -12.605960845947266
    10. '       ' → logprob: -12.855960845947266

Token 354: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.700180172920227
    2. '               ' → logprob: -0.700180172920227
    3. 'total' → logprob: -5.2001800537109375
    4. ' total' → logprob: -6.5751800537109375
    5. '       ' → logprob: -9.450180053710938
    6. '   ' → logprob: -12.200180053710938
    7. '                   ' → logprob: -12.825180053710938
    8. '		' → logprob: -12.950180053710938
    9. '(total' → logprob: -13.450180053710938
    10. 'continue' → logprob: -13.575180053710938

Token 355: ' total' (ID: 3609)
  Prédit: 'total'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' (adapté à ' total') → logprob: -0.03224506974220276
    2. ' total' → logprob: -3.53224515914917
    3. '               ' → logprob: -6.03224515914917
    4. '                   ' → logprob: -10.032244682312012
    5. '           ' → logprob: -10.032244682312012
    6. '   ' → logprob: -13.282244682312012
    7. '       ' → logprob: -13.782244682312012
    8. '	total' → logprob: -14.657244682312012
    9. ' ' → logprob: -15.657244682312012
    10. '(total' → logprob: -16.032245635986328

Token 356: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -3.128163257315464e-07
    2. 'value' → logprob: -15.5
    3. '_VALUE' → logprob: -18.0
    4. '_' → logprob: -19.0
    5. 'Value' → logprob: -19.75
    6. 'alue' → logprob: -19.875
    7. '_val' → logprob: -19.875
    8. '           ' → logprob: -20.625
    9. '   ' → logprob: -20.875
    10. '=' → logprob: -21.0

Token 357: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.3868732452392578
    2. '+=' → logprob: -1.1368732452392578
    3. '+' → logprob: -13.511873245239258
    4. ']+=' → logprob: -14.761873245239258
    5. '   ' → logprob: -15.011873245239258
    6. '+=(' → logprob: -16.136873245239258
    7. '+="' → logprob: -17.636873245239258
    8. ' +' → logprob: -17.636873245239258
    9. '+='' → logprob: -17.761873245239258
    10. '=' → logprob: -18.136873245239258

Token 358: ' v' (ID: 323)
  Prédit: 'v'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'v' → logprob: -0.06196768581867218
    2. ' v' → logprob: -2.811967611312866
    3. '	v' → logprob: -17.686967849731445
    4. '   ' → logprob: -19.061967849731445
    5. 'value' → logprob: -19.061967849731445
    6. '1' → logprob: -19.311967849731445
    7. ' ' → logprob: -19.561967849731445
    8. '_v' → logprob: -20.561967849731445
    9. '.v' → logprob: -20.936967849731445
    10. ' ' → logprob: -20.936967849731445

Token 359: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 360: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.8717330098152161
    2. 'if' → logprob: -1.7467329502105713
    3. '```' → logprob: -1.7467329502105713
    4. '<|end|>' → logprob: -2.1217329502105713
    5. '   ' → logprob: -2.2467329502105713
    6. '``' → logprob: -6.37173318862915
    7. '\n' → logprob: -6.49673318862915
    8. '    
' → logprob: -6.74673318862915
    9. ' if' → logprob: -7.24673318862915
    10. '

' → logprob: -7.62173318862915

Token 361: ' print' (ID: 2123)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.018806928768754005
    2. 'print' (adapté à ' print') → logprob: -4.2688069343566895
    3. 'if' → logprob: -5.8938069343566895
    4. 'return' → logprob: -6.7688069343566895
    5. '
' → logprob: -7.5188069343566895
    6. '    
' → logprob: -9.643806457519531
    7. '```' → logprob: -9.768806457519531
    8. ' return' → logprob: -10.393806457519531
    9. ' if' → logprob: -11.518806457519531
    10. ' print' → logprob: -11.643806457519531

Token 362: '(f' (ID: 1526)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.7097753882408142
    2. '(total' → logprob: -0.7097753882408142
    3. '(round' → logprob: -4.459775447845459
    4. '(f' → logprob: -5.584775447845459
    5. '()' → logprob: -7.584775447845459
    6. '('' → logprob: -8.0847749710083
    7. '("' → logprob: -8.9597749710083
    8. '(int' → logprob: -9.2097749710083
    9. '("{' → logprob: -9.8347749710083
    10. '(float' → logprob: -10.9597749710083

Token 363: '"{' (ID: 27510)
  Prédit: '"{'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"{' → logprob: -0.3138570189476013
    2. '{' → logprob: -1.313857078552246
    3. ''{' → logprob: -7.438857078552246
    4. 'total' → logprob: -12.563857078552246
    5. '(total' → logprob: -13.063857078552246
    6. '"' → logprob: -14.813857078552246
    7. 'Total' → logprob: -15.563857078552246
    8. '{"' → logprob: -16.18885612487793
    9. '("{' → logprob: -16.18885612487793
    10. '{text' → logprob: -16.18885612487793

Token 364: 'total' (ID: 9577)
  Prédit: 'total'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'total' → logprob: -6.704273118884885e-07
    2. ' total' → logprob: -14.250000953674316
    3. '(total' → logprob: -21.125
    4. '0' → logprob: -22.0
    5. '.total' → logprob: -22.25
    6. 'round' → logprob: -22.875
    7. 'to' → logprob: -23.125
    8. 'tot' → logprob: -23.125
    9. '	total' → logprob: -23.25
    10. '{' → logprob: -23.375

Token 365: '_value' (ID: 6734)
  Prédit: '_value'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_value' → logprob: -5.512236498361744e-07
    2. 'value' → logprob: -14.625000953674316
    3. '_val' → logprob: -17.625
    4. '_' → logprob: -19.25
    5. 'alue' → logprob: -19.75
    6. 'Value' → logprob: -20.375
    7. 'total' → logprob: -20.5
    8. '_VALUE' → logprob: -20.5
    9. '_total' → logprob: -20.875
    10. '_Value' → logprob: -21.25

Token 366: ':.' (ID: 27474)
  Prédit: ':.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':.' → logprob: -0.0004587903094943613
    2. ' :.' → logprob: -7.750458717346191
    3. '}")' → logprob: -11.250458717346191
    4. ':' → logprob: -11.875458717346191
    5. ' .' → logprob: -12.625458717346191
    6. '.' → logprob: -12.625458717346191
    7. '}' → logprob: -13.750458717346191
    8. ' }' → logprob: -15.000458717346191
    9. ' :' → logprob: -15.750458717346191
    10. ':f' → logprob: -17.250459671020508

Token 367: '6' (ID: 21)
  Prédit: '6'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '6' → logprob: -0.15945126116275787
    2. '10' → logprob: -2.6594512462615967
    3. '9' → logprob: -2.7844512462615967
    4. '4' → logprob: -5.159451484680176
    5. '2' → logprob: -6.034451484680176
    6. '3' → logprob: -6.034451484680176
    7. '12' → logprob: -6.284451484680176
    8. '8' → logprob: -6.909451484680176
    9. '7' → logprob: -7.034451484680176
    10. '5' → logprob: -7.159451484680176

Token 368: 'f' (ID: 69)
  Prédit: 'f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'f' → logprob: 0.0
    2. 'g' → logprob: -20.0
    3. 'lf' → logprob: -20.125
    4. 'e' → logprob: -21.25
    5. '	f' → logprob: -22.5
    6. '}' → logprob: -22.875
    7. '```' → logprob: -23.0
    8. '
' → logprob: -23.125
    9. ' f' → logprob: -23.375
    10. ''f' → logprob: -24.0

Token 369: '}")

' (ID: 119200)
  Prédit: '}")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}")' → logprob: -4.513339445111342e-05
    2. '}")
' → logprob: -10.625044822692871
    3. '")' → logprob: -11.000044822692871
    4. ')")' → logprob: -12.500044822692871
    5. '}")

' → logprob: -16.000045776367188
    6. ' }' → logprob: -16.375045776367188
    7. '})' → logprob: -16.750045776367188
    8. '}")
' → logprob: -17.000045776367188
    9. '}"' → logprob: -18.000045776367188
    10. ')}' → logprob: -18.250045776367188

Token 370: 'if' (ID: 366)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 371: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.054992079734802246
    2. '__' → logprob: -2.929992198944092
    3. '_' → logprob: -10.554991722106934
    4. ' ' → logprob: -10.679991722106934
    5. '  ' → logprob: -11.179991722106934
    6. ' ' → logprob: -11.429991722106934
    7. 'name' → logprob: -11.429991722106934
    8. 'if' → logprob: -11.554991722106934
    9. '_name' → logprob: -11.929991722106934
    10. '___' → logprob: -12.929991722106934

Token 372: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.09231458604335785
    2. ' ==' → logprob: -3.0923144817352295
    3. '==' → logprob: -3.2173144817352295
    4. '=="' → logprob: -6.592314720153809
    5. ' __' → logprob: -7.092314720153809
    6. '.__' → logprob: -8.217314720153809
    7. '__.' → logprob: -9.717314720153809
    8. '=='' → logprob: -10.592314720153809
    9. '[' → logprob: -10.842314720153809
    10. '__.__' → logprob: -10.842314720153809

Token 373: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.0003017385315615684
    2. '__.__' → logprob: -8.250301361083984
    3. '==' → logprob: -10.500301361083984
    4. '__.' → logprob: -11.750301361083984
    5. '=="' → logprob: -13.000301361083984
    6. '__["' → logprob: -13.625301361083984
    7. '___' → logprob: -14.625301361083984
    8. '____' → logprob: -15.375301361083984
    9. '__('' → logprob: -15.625301361083984
    10. ' ==' → logprob: -15.875301361083984

Token 374: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.6292370557785034
    2. '==' → logprob: -1.0042370557785034
    3. '=="' → logprob: -2.379237174987793
    4. '__' → logprob: -4.879237174987793
    5. '=='' → logprob: -7.879237174987793
    6. '=' → logprob: -10.754237174987793
    7. '"' → logprob: -11.504237174987793
    8. '==
' → logprob: -11.629237174987793
    9. ' =="' → logprob: -11.879237174987793
    10. '===' → logprob: -12.004237174987793

Token 375: ' "__' (ID: 27367)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0024829115718603134
    2. ''' → logprob: -6.002482891082764
    3. ' "__' → logprob: -12.502483367919922
    4. '__' → logprob: -12.877483367919922
    5. '"user' → logprob: -14.127483367919922
    6. '"name' → logprob: -16.877483367919922
    7. '("__' → logprob: -17.627483367919922
    8. '"class' → logprob: -17.627483367919922
    9. '"is' → logprob: -18.377483367919922
    10. '"log' → logprob: -18.502483367919922

Token 376: 'main' (ID: 7731)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.2710283696651459
    2. 'main' → logprob: -1.5210283994674683
    3. '"' → logprob: -4.021028518676758
    4. ''' → logprob: -7.021028518676758
    5. 'name' → logprob: -9.896028518676758
    6. '__":
' → logprob: -10.521028518676758
    7. '__':
' → logprob: -13.021028518676758
    8. '   ' → logprob: -13.146028518676758
    9. '"name' → logprob: -13.396028518676758
    10. '__
' → logprob: -13.896028518676758

Token 377: '__":
' (ID: 49892)
  Prédit: '__":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__":
' → logprob: -0.0028128400444984436
    2. '__' → logprob: -6.12781286239624
    3. '__':
' → logprob: -7.37781286239624
    4. '__.' → logprob: -14.002812385559082
    5. '__["' → logprob: -14.002812385559082
    6. '__:' → logprob: -15.502812385559082
    7. '__
' → logprob: -15.877812385559082
    8. '__.__' → logprob: -16.0028133392334
    9. '():
' → logprob: -16.1278133392334
    10. '```' → logprob: -16.1278133392334

Token 378: '   ' (ID: 271)
  Prédit: ' main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' main' → logprob: -0.06441958993673325
    2. 'main' → logprob: -2.9394195079803467
    3. '   ' → logprob: -4.939419746398926
    4. '	main' → logprob: -6.064419746398926
    5. '(main' → logprob: -12.689419746398926
    6. ' ' → logprob: -13.064419746398926
    7. '    
' → logprob: -13.439419746398926
    8. '_main' → logprob: -14.189419746398926
    9. '```' → logprob: -14.564419746398926
    10. '  ' → logprob: -15.564419746398926

Token 379: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: -2.935296834039036e-06
    2. ' main' → logprob: -12.75000286102295
    3. '	main' → logprob: -19.000003814697266
    4. '   ' → logprob: -21.875003814697266
    5. '_main' → logprob: -23.500003814697266
    6. '(main' → logprob: -23.625003814697266
    7. '.main' → logprob: -24.125003814697266
    8. 'Main' → logprob: -25.125003814697266
    9. 'mainwindow' → logprob: -26.625003814697266
    10. '  ' → logprob: -26.875003814697266

Token 380: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 378
Tokens correctement prédits (1ère position, stricte): 139
Tokens correctement prédits (1ère position, avec adaptation): 153
Tokens correctement prédits (top 10): 300
Précision stricte (1ère position): 36.77%
Précision adaptée (1ère position): 40.48%
Précision (top 10): 79.37%
================================================================================
