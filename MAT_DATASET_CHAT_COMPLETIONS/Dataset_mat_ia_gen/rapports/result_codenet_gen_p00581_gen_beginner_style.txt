================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 17:16:00
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
H, W = map(int, input().split())
S = [input() for _ in range(H)]

count = 0
for i in range(H):
    for j in range(W):
        if S[i][j] == 'J':
            for k in range(i+1, H):
                for l in range(j+1, W):
                    if S[i][l] == 'O' and S[k][j] == 'I':
                        count += 1

print(count)
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'H' (ID: 39)
  → Token d'amorce (pas de prédiction)

Token 1: ',' (ID: 11)
  → Token d'amorce (pas de prédiction)

Token 2: ' W' (ID: 486)
  → Token d'amorce (pas de prédiction)

Token 3: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.2962391674518585
    2. ',' → logprob: -1.4212391376495361
    3. ' =' → logprob: -4.796239376068115
    4. '*' → logprob: -5.921239376068115
    5. ':' → logprob: -6.796239376068115
    6. ')' → logprob: -6.921239376068115
    7. '```' → logprob: -6.921239376068115
    8. '-' → logprob: -8.296238899230957
    9. '.' → logprob: -8.921238899230957
    10. '+' → logprob: -9.171238899230957

Token 4: ' map' (ID: 4014)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.02370345965027809
    2. '32' → logprob: -5.273703575134277
    3. ' map' → logprob: -5.898703575134277
    4. '100' → logprob: -6.273703575134277
    5. ' img' → logprob: -6.398703575134277
    6. ' image' → logprob: -6.523703575134277
    7. '224' → logprob: -6.773703575134277
    8. '128' → logprob: -6.898703575134277
    9. '256' → logprob: -6.898703575134277
    10. '64' → logprob: -6.898703575134277

Token 5: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.12087190896272659
    2. '(int' → logprob: -2.8708720207214355
    3. '(lambda' → logprob: -3.4958720207214355
    4. '(str' → logprob: -3.7458720207214355
    5. '```' → logprob: -7.2458720207214355
    6. '(input' → logprob: -7.7458720207214355
    7. '(len' → logprob: -7.8708720207214355
    8. '(range' → logprob: -8.370871543884277
    9. '[int' → logprob: -8.745871543884277
    10. '(open' → logprob: -8.870871543884277

Token 6: ',' (ID: 11)
  Prédit: '(input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(input' → logprob: -0.08012377470731735
    2. '(' → logprob: -2.8301236629486084
    3. ')' → logprob: -4.2051239013671875
    4. '(int' → logprob: -6.9551239013671875
    5. '(str' → logprob: -7.0801239013671875
    6. 'input' → logprob: -7.5801239013671875
    7. '(user' → logprob: -9.455123901367188
    8. '(raw' → logprob: -9.705123901367188
    9. '```' → logprob: -9.705123901367188
    10. '[input' → logprob: -9.830123901367188

Token 7: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.04859350249171257
    2. ' input' → logprob: -3.048593521118164
    3. '(input' → logprob: -12.173593521118164
    4. ',input' → logprob: -14.798593521118164
    5. ')' → logprob: -15.298593521118164
    6. '<input' → logprob: -16.423593521118164
    7. ' ' → logprob: -17.048593521118164
    8. '	input' → logprob: -17.173593521118164
    9. '```' → logprob: -17.298593521118164
    10. '=input' → logprob: -17.423593521118164

Token 8: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.4792563021183014
    2. '())' → logprob: -0.979256272315979
    3. '().' → logprob: -6.9792561531066895
    4. '()`' → logprob: -7.2292561531066895
    5. '());' → logprob: -7.3542561531066895
    6. '('' → logprob: -7.6042561531066895
    7. '(' → logprob: -7.8542561531066895
    8. ')' → logprob: -8.104256629943848
    9. '();)' → logprob: -8.229256629943848
    10. '()))' → logprob: -8.479256629943848

Token 9: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -0.00021366903092712164
    2. 'strip' → logprob: -8.500213623046875
    3. ' split' → logprob: -12.500213623046875
    4. ')' → logprob: -12.625213623046875
    5. 'rstrip' → logprob: -13.125213623046875
    6. 'read' → logprob: -14.125213623046875
    7. '(split' → logprob: -15.250213623046875
    8. 'spl' → logprob: -16.375213623046875
    9. 'startswith' → logprob: -17.250213623046875
    10. 'replace' → logprob: -17.750213623046875

Token 10: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.06376339495182037
    2. '())' → logprob: -3.063763380050659
    3. '))' → logprob: -4.313763618469238
    4. '()' → logprob: -7.313763618469238
    5. '(' → logprob: -7.813763618469238
    6. '`)' → logprob: -8.063763618469238
    7. '()))' → logprob: -9.063763618469238
    8. '')' → logprob: -9.938763618469238
    9. '('' → logprob: -9.938763618469238
    10. ')`' → logprob: -11.063763618469238

Token 11: 'S' (ID: 50)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -1.0181647539138794
    2. 'x' → logprob: -1.5181647539138794
    3. ',' → logprob: -1.8931647539138794
    4. ')' → logprob: -2.64316463470459
    5. '#' → logprob: -2.89316463470459
    6. '\n' → logprob: -3.14316463470459
    7. '
' → logprob: -4.26816463470459
    8. 'print' → logprob: -4.26816463470459
    9. 's' → logprob: -5.01816463470459
    10. '`' → logprob: -5.01816463470459

Token 12: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12881441414356232
    2. ' =' → logprob: -2.503814458847046
    3. '[' → logprob: -3.503814458847046
    4. '.' → logprob: -5.128814220428467
    5. '[:]' → logprob: -7.253814220428467
    6. '_' → logprob: -7.628814220428467
    7. '[]' → logprob: -8.253814697265625
    8. '=input' → logprob: -8.253814697265625
    9. '=[]' → logprob: -8.378814697265625
    10. '.=' → logprob: -9.003814697265625

Token 13: ' [' (ID: 723)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.10056744515895844
    2. ' input' → logprob: -2.35056734085083
    3. 'list' → logprob: -8.475567817687988
    4. '[input' → logprob: -9.225567817687988
    5. ' list' → logprob: -10.725567817687988
    6. '[' → logprob: -11.475567817687988
    7. ' [' → logprob: -12.475567817687988
    8. '[]' → logprob: -12.475567817687988
    9. ' ' → logprob: -12.600567817687988
    10. '(input' → logprob: -13.100567817687988

Token 14: 'input' (ID: 2586)
  Prédit: 'input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0028313882648944855
    2. 'list' → logprob: -5.87783145904541
    3. ' input' → logprob: -10.75283145904541
    4. '(input' → logprob: -13.00283145904541
    5. 'str' → logprob: -13.75283145904541
    6. 'int' → logprob: -14.37783145904541
    7. ']' → logprob: -15.25283145904541
    8. ' list' → logprob: -15.50283145904541
    9. '[input' → logprob: -15.50283145904541
    10. '.input' → logprob: -15.87783145904541

Token 15: '()' (ID: 416)
  Prédit: '()]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()]' → logprob: -0.001269993488676846
    2. '()' → logprob: -6.751269817352295
    3. '())' → logprob: -9.251270294189453
    4. '().' → logprob: -13.626270294189453
    5. '()}' → logprob: -14.126270294189453
    6. '()].' → logprob: -14.751270294189453
    7. '()][' → logprob: -14.751270294189453
    8. '()]
' → logprob: -15.501270294189453
    9. '()],' → logprob: -15.751270294189453
    10. ']()' → logprob: -15.876270294189453

Token 16: ' for' (ID: 395)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.10211867839097977
    2. ')' → logprob: -2.352118730545044
    3. '())' → logprob: -6.602118492126465
    4. '()]' → logprob: -8.102118492126465
    5. 'for' → logprob: -8.977118492126465
    6. ')]' → logprob: -9.977118492126465
    7. ' for' → logprob: -10.602118492126465
    8. ']' → logprob: -10.727118492126465
    9. '().' → logprob: -11.727118492126465
    10. '(' → logprob: -11.852118492126465

Token 17: ' _' (ID: 1175)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.0002407282590866089
    2. ' ' → logprob: -8.875240325927734
    3. '_' → logprob: -10.875240325927734
    4. 'range' → logprob: -10.875240325927734
    5. '_range' → logprob: -11.125240325927734
    6. ' i' → logprob: -11.125240325927734
    7. '(range' → logprob: -11.250240325927734
    8. ' _' → logprob: -11.625240325927734
    9. '	range' → logprob: -11.750240325927734
    10. ' xrange' → logprob: -13.375240325927734

Token 18: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.057687342166900635
    2. ' range' → logprob: -2.932687282562256
    3. '(range' → logprob: -6.932687282562256
    4. 'in' → logprob: -7.307687282562256
    5. ' in' → logprob: -7.432687282562256
    6. '_' → logprob: -7.807687282562256
    7. '_range' → logprob: -9.932687759399414
    8. '	range' → logprob: -10.432687759399414
    9. 'int' → logprob: -10.682687759399414
    10. '(H' → logprob: -11.057687759399414

Token 19: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0067156096920371056
    2. ' range' → logprob: -5.006715774536133
    3. '(range' → logprob: -16.631715774536133
    4. '	range' → logprob: -16.756715774536133
    5. '.range' → logprob: -19.631715774536133
    6. '_range' → logprob: -20.006715774536133
    7. ' ' → logprob: -20.006715774536133
    8. 'rang' → logprob: -20.631715774536133
    9. 'ran' → logprob: -21.006715774536133
    10. '   ' → logprob: -21.381715774536133

Token 20: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.001930301426909864
    2. '(' → logprob: -6.251930236816406
    3. '(W' → logprob: -14.001930236816406
    4. 'H' → logprob: -14.501930236816406
    5. ' (' → logprob: -16.251930236816406
    6. '(
' → logprob: -16.501930236816406
    7. '(int' → logprob: -17.001930236816406
    8. ')' → logprob: -17.251930236816406
    9. '(E' → logprob: -17.501930236816406
    10. '((' → logprob: -17.876930236816406

Token 21: ')]

' (ID: 56882)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')]' → logprob: -9.031157969729975e-05
    2. ')' → logprob: -9.750090599060059
    3. ']' → logprob: -10.375090599060059
    4. ')]
' → logprob: -15.500090599060059
    5. '')]' → logprob: -15.750090599060059
    6. '])]' → logprob: -16.125089645385742
    7. ')])' → logprob: -16.250089645385742
    8. ')],' → logprob: -16.750089645385742
    9. ')].' → logprob: -16.750089645385742
    10. '))' → logprob: -16.875089645385742

Token 22: 'count' (ID: 5420)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.1320323944091797
    2. 'dp' → logprob: -3.2570323944091797
    3. 'r' → logprob: -3.6320323944091797
    4. 'result' → logprob: -4.50703239440918
    5. 'max' → logprob: -4.88203239440918
    6. 'count' → logprob: -4.88203239440918
    7. 'ans' → logprob: -5.63203239440918
    8. 'h' → logprob: -5.63203239440918
    9. 'x' → logprob: -5.75703239440918
    10. 'd' → logprob: -6.13203239440918

Token 23: ' =' (ID: 314)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.4867400527000427
    2. '(' → logprob: -0.9867400527000427
    3. '[' → logprob: -4.7367401123046875
    4. 's' → logprob: -6.3617401123046875
    5. '=' → logprob: -6.4867401123046875
    6. ')' → logprob: -9.111740112304688
    7. ' =' → logprob: -9.111740112304688
    8. ']' → logprob: -10.486740112304688
    9. ' ' → logprob: -10.486740112304688
    10. '_space' → logprob: -10.611740112304688

Token 24: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.1602337658405304
    2. ' ' → logprob: -1.910233736038208
    3. '{' → logprob: -13.660233497619629
    4. '1' → logprob: -13.785233497619629
    5. '[' → logprob: -13.785233497619629
    6. '{}' → logprob: -13.785233497619629
    7. ' {' → logprob: -13.910233497619629
    8. ' sum' → logprob: -14.035233497619629
    9. 'sum' → logprob: -14.160233497619629
    10. ' {}' → logprob: -14.285233497619629

Token 25: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0001818489981815219
    2. 'sum' → logprob: -9.000182151794434
    3. '1' → logprob: -10.625182151794434
    4. '[' → logprob: -11.375182151794434
    5. 'H' → logprob: -11.875182151794434
    6. '[[' → logprob: -12.375182151794434
    7. ' ' → logprob: -12.500182151794434
    8. '4' → logprob: -13.625182151794434
    9. '3' → logprob: -14.000182151794434
    10. '2' → logprob: -14.125182151794434

Token 26: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08265942335128784
    2. ' for' → logprob: -3.0826594829559326
    3. '
' → logprob: -3.4576594829559326
    4. '\n' → logprob: -6.7076592445373535
    5. '<|end|>' → logprob: -7.5826592445373535
    6. '' → logprob: -9.207659721374512
    7. '\' → logprob: -10.207659721374512
    8. ' ' → logprob: -10.457659721374512
    9. '```' → logprob: -10.582659721374512
    10. ' 
' → logprob: -11.207659721374512

Token 27: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0033263610675930977
    2. ' for' → logprob: -6.378326416015625
    3. '\n' → logprob: -6.878326416015625
    4. '
' → logprob: -7.628326416015625
    5. '\' → logprob: -9.628326416015625
    6. '```' → logprob: -10.503326416015625
    7. '<|end|>' → logprob: -12.003326416015625
    8. '' → logprob: -13.253326416015625
    9. '	for' → logprob: -13.878326416015625
    10. '``' → logprob: -14.628326416015625

Token 28: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.07102496922016144
    2. ' ' → logprob: -3.0710248947143555
    3. ' h' → logprob: -4.4460248947143555
    4. ' _' → logprob: -5.0710248947143555
    5. 'i' → logprob: -6.4460248947143555
    6. ' r' → logprob: -7.3210248947143555
    7. '_' → logprob: -7.3210248947143555
    8. ' row' → logprob: -7.3210248947143555
    9. ' y' → logprob: -7.5710248947143555
    10. 'r' → logprob: -10.946024894714355

Token 29: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018261270597577095
    2. 'in' → logprob: -4.018261432647705
    3. ' ' → logprob: -9.393260955810547
    4. 'n' → logprob: -11.768260955810547
    5. '<|end|>' → logprob: -12.643260955810547
    6. ')' → logprob: -12.768260955810547
    7. '  ' → logprob: -12.893260955810547
    8. ',' → logprob: -13.268260955810547
    9. 'range' → logprob: -13.393260955810547
    10. '	in' → logprob: -13.518260955810547

Token 30: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.03804229199886322
    2. 'range' → logprob: -3.2880423069000244
    3. ' ' → logprob: -15.288042068481445
    4. ')' → logprob: -15.538042068481445
    5. '	range' → logprob: -15.913042068481445
    6. '(range' → logprob: -16.913042068481445
    7. ' xrange' → logprob: -17.038042068481445
    8. ' H' → logprob: -17.163042068481445
    9. ' ran' → logprob: -17.538042068481445
    10. ' r' → logprob: -17.788042068481445

Token 31: '(H' (ID: 20904)
  Prédit: '(H'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(H' → logprob: -0.078914575278759
    2. '(' → logprob: -2.5789146423339844
    3. '(W' → logprob: -11.203914642333984
    4. ' (' → logprob: -12.203914642333984
    5. '(len' → logprob: -13.203914642333984
    6. '(
' → logprob: -13.578914642333984
    7. '(S' → logprob: -14.703914642333984
    8. ' H' → logprob: -14.828914642333984
    9. '(count' → logprob: -14.828914642333984
    10. '(I' → logprob: -15.328914642333984

Token 32: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0006705015548504889
    2. '):
' → logprob: -7.625670433044434
    3. ')' → logprob: -9.125670433044434
    4. ':' → logprob: -10.125670433044434
    5. ' ):' → logprob: -10.750670433044434
    6. '-' → logprob: -11.625670433044434
    7. '   ' → logprob: -14.625670433044434
    8. ']:' → logprob: -14.625670433044434
    9. '+' → logprob: -14.625670433044434
    10. ' ' → logprob: -14.875670433044434

Token 33: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01631505787372589
    2. '<|end|>' → logprob: -4.89131498336792
    3. ' ' → logprob: -5.14131498336792
    4. ' for' → logprob: -6.64131498336792
    5. '    ' → logprob: -7.01631498336792
    6. '  ' → logprob: -8.391315460205078
    7. '<|end|>' → logprob: -8.891315460205078
    8. '```' → logprob: -9.766315460205078
    9. '       ' → logprob: -10.516315460205078
    10. '	for' → logprob: -10.516315460205078

Token 34: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6055127382278442
    2. 'for' (adapté à ' for') → logprob: -0.8555127382278442
    3. '   ' → logprob: -3.7305126190185547
    4. 'range' → logprob: -5.980512619018555
    5. ' range' → logprob: -6.480512619018555
    6. ' ' → logprob: -7.105512619018555
    7. '```' → logprob: -9.730512619018555
    8. '  ' → logprob: -9.730512619018555
    9. '<|end|>' → logprob: -9.980512619018555
    10. ' W' → logprob: -10.980512619018555

Token 35: ' j' (ID: 441)
  Prédit: ' W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' W' → logprob: -0.16145101189613342
    2. 'W' → logprob: -1.911450982093811
    3. ' range' → logprob: -7.0364508628845215
    4. 'range' → logprob: -8.16145133972168
    5. ' (' → logprob: -11.53645133972168
    6. ' ' → logprob: -11.78645133972168
    7. ')' → logprob: -11.91145133972168
    8. 'w' → logprob: -12.03645133972168
    9. '(W' → logprob: -12.03645133972168
    10. '   ' → logprob: -12.53645133972168

Token 36: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018457774072885513
    2. 'in' → logprob: -4.018457889556885
    3. '+' → logprob: -8.643457412719727
    4. ' ' → logprob: -9.268457412719727
    5. '   ' → logprob: -11.643457412719727
    6. '	in' → logprob: -11.893457412719727
    7. '    ' → logprob: -12.268457412719727
    8. ')' → logprob: -12.768457412719727
    9. '(' → logprob: -12.893457412719727
    10. '  ' → logprob: -13.018457412719727

Token 37: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.3935169577598572
    2. 'range' → logprob: -1.143517017364502
    3. 'W' → logprob: -6.143517017364502
    4. '(W' → logprob: -6.143517017364502
    5. '(range' → logprob: -6.768517017364502
    6. ' W' → logprob: -7.893517017364502
    7. '(' → logprob: -8.143516540527344
    8. ' (' → logprob: -8.268516540527344
    9. '(H' → logprob: -8.893516540527344
    10. ')' → logprob: -9.893516540527344

Token 38: '(W' (ID: 26031)
  Prédit: '(W'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(W' → logprob: -0.020832763984799385
    2. '(' → logprob: -4.270832538604736
    3. '(H' → logprob: -5.020832538604736
    4. ')' → logprob: -10.645833015441895
    5. ' (' → logprob: -11.645833015441895
    6. 'W' → logprob: -12.895833015441895
    7. '(range' → logprob: -13.395833015441895
    8. '(w' → logprob: -13.645833015441895
    9. '((' → logprob: -13.770833015441895
    10. ' ' → logprob: -13.770833015441895

Token 39: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5188868641853333
    2. '):' → logprob: -1.3938868045806885
    3. '+' → logprob: -1.8938868045806885
    4. ' )' → logprob: -5.768887042999268
    5. ' ):' → logprob: -6.518887042999268
    6. ':' → logprob: -7.143887042999268
    7. ' +' → logprob: -8.64388656616211
    8. 'if' → logprob: -8.89388656616211
    9. '-' → logprob: -9.14388656616211
    10. '):
' → logprob: -9.26888656616211

Token 40: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.012014128267765045
    2. '   ' → logprob: -5.262013912200928
    3. 'if' → logprob: -6.012013912200928
    4. ' if' → logprob: -6.387013912200928
    5. ':' → logprob: -7.137013912200928
    6. ' ' → logprob: -7.387013912200928
    7. '    ' → logprob: -7.637013912200928
    8. '(' → logprob: -9.387014389038086
    9. ',' → logprob: -9.387014389038086
    10. '[' → logprob: -9.512014389038086

Token 41: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.4875079393386841
    2. ' if' → logprob: -0.9875079393386841
    3. '           ' → logprob: -4.7375078201293945
    4. '       ' → logprob: -5.6125078201293945
    5. '   ' → logprob: -7.4875078201293945
    6. '        ' → logprob: -9.987507820129395
    7. 'count' → logprob: -9.987507820129395
    8. ':' → logprob: -10.112507820129395
    9. 'i' → logprob: -10.237507820129395
    10. ' ' → logprob: -10.487507820129395

Token 42: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.07264009863138199
    2. 'S' → logprob: -2.6976401805877686
    3. ' ' → logprob: -6.0726399421691895
    4. ' j' → logprob: -8.947640419006348
    5. ' i' → logprob: -9.697640419006348
    6. 'j' → logprob: -10.322640419006348
    7. '    ' → logprob: -10.447640419006348
    8. ')' → logprob: -10.447640419006348
    9. 'i' → logprob: -10.947640419006348
    10. ' (' → logprob: -10.947640419006348

Token 43: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.001619003596715629
    2. '[j' → logprob: -6.5016188621521
    3. '[' → logprob: -9.501619338989258
    4. '[I' → logprob: -10.126619338989258
    5. '[int' → logprob: -14.876619338989258
    6. '[
' → logprob: -15.751619338989258
    7. '[h' → logprob: -15.751619338989258
    8. '[ii' → logprob: -16.251619338989258
    9. '[k' → logprob: -16.251619338989258
    10. 'i' → logprob: -16.376619338989258

Token 44: '][' (ID: 2696)
  Prédit: '[j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.008070160634815693
    2. '][' → logprob: -5.63306999206543
    3. '[' → logprob: -5.75806999206543
    4. '[i' → logprob: -7.00806999206543
    5. '==' → logprob: -8.75806999206543
    6. '[J' → logprob: -9.13306999206543
    7. '[I' → logprob: -10.50806999206543
    8. ']' → logprob: -10.75806999206543
    9. '[
' → logprob: -11.25806999206543
    10. ''[' → logprob: -11.75806999206543

Token 45: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.0016967225819826126
    2. '0' → logprob: -7.001696586608887
    3. '#' → logprob: -8.001696586608887
    4. ''' → logprob: -8.876696586608887
    5. ')' → logprob: -9.126696586608887
    6. ''#' → logprob: -9.501696586608887
    7. ']' → logprob: -10.501696586608887
    8. '']' → logprob: -10.876696586608887
    9. ' ' → logprob: -11.376696586608887
    10. '1' → logprob: -11.501696586608887

Token 46: ']' (ID: 60)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.49279341101646423
    2. '==' → logprob: -1.3677934408187866
    3. '=' → logprob: -2.242793321609497
    4. ')' → logprob: -4.117793560028076
    5. ']' → logprob: -4.992793560028076
    6. ':' → logprob: -6.992793560028076
    7. ' ' → logprob: -7.117793560028076
    8. ' =' → logprob: -7.117793560028076
    9. '>' → logprob: -7.867793560028076
    10. ' !=' → logprob: -8.242793083190918

Token 47: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0934523344039917
    2. ' ==' → logprob: -2.5934524536132812
    3. '=='' → logprob: -5.093452453613281
    4. '=' → logprob: -5.218452453613281
    5. '!=' → logprob: -6.843452453613281
    6. '.' → logprob: -7.968452453613281
    7. '=="' → logprob: -8.093452453613281
    8. '#' → logprob: -8.593452453613281
    9. 'a' → logprob: -9.468452453613281
    10. '>' → logprob: -9.530952453613281

Token 48: ' '' (ID: 461)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.3025479316711426
    2. ''' → logprob: -1.6775479316711426
    3. ''.' → logprob: -3.1775479316711426
    4. ''*' → logprob: -5.052547931671143
    5. ''C' → logprob: -5.427547931671143
    6. '#' → logprob: -5.552547931671143
    7. '"#' → logprob: -5.677547931671143
    8. ''S' → logprob: -5.677547931671143
    9. ''o' → logprob: -5.802547931671143
    10. ''O' → logprob: -6.052547931671143

Token 49: 'J' (ID: 41)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.17163214087486267
    2. ''#' → logprob: -1.921632170677185
    3. ''' → logprob: -5.171632289886475
    4. '.' → logprob: -6.046632289886475
    5. ''.' → logprob: -6.671632289886475
    6. 'o' → logprob: -7.046632289886475
    7. '#:' → logprob: -8.046631813049316
    8. 's' → logprob: -8.171631813049316
    9. '#.' → logprob: -9.671631813049316
    10. ''C' → logprob: -9.671631813049316

Token 50: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '':' → logprob: -0.05621667578816414
    2. ''' → logprob: -2.9312167167663574
    3. 'u' → logprob: -8.3062162399292
    4. '#' → logprob: -8.5562162399292
    5. 'R' → logprob: -8.8062162399292
    6. '':'' → logprob: -9.1812162399292
    7. 'C' → logprob: -9.4312162399292
    8. ''U' → logprob: -10.0562162399292
    9. ''):' → logprob: -10.0562162399292
    10. 'e' → logprob: -10.3062162399292

Token 51: '           ' (ID: 352)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.23999261856079102
    2. ' and' → logprob: -1.864992618560791
    3. 'and' → logprob: -3.614992618560791
    4. ' :' → logprob: -4.364992618560791
    5. ' ' → logprob: -4.614992618560791
    6. '           ' → logprob: -5.614992618560791
    7. '   ' → logprob: -7.114992618560791
    8. '       ' → logprob: -7.114992618560791
    9. ':
' → logprob: -7.614992618560791
    10. ' or' → logprob: -7.989992618560791

Token 52: ' for' (ID: 395)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.28258827328681946
    2. 'for' (adapté à ' for') → logprob: -1.907588243484497
    3. ' count' → logprob: -3.032588243484497
    4. ' for' → logprob: -3.157588243484497
    5. 'if' → logprob: -6.032588481903076
    6. '           ' → logprob: -6.532588481903076
    7. ' if' → logprob: -7.282588481903076
    8. ' ' → logprob: -7.907588481903076
    9. '               ' → logprob: -8.032588005065918
    10. 'continue' → logprob: -8.407588005065918

Token 53: ' k' (ID: 372)
  Prédit: ' di'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' di' → logprob: -0.3364408314228058
    2. ' range' → logprob: -2.5864408016204834
    3. ' (' → logprob: -3.0864408016204834
    4. ' dx' → logprob: -3.0864408016204834
    5. ' k' → logprob: -3.4614408016204834
    6. ' i' → logprob: -4.4614410400390625
    7. 'di' → logprob: -4.5864410400390625
    8. ' ni' → logprob: -4.9614410400390625
    9. ' ' → logprob: -5.0864410400390625
    10. ' ii' → logprob: -5.4614410400390625

Token 54: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005207313224673271
    2. ' ' → logprob: -5.880207538604736
    3. 'in' → logprob: -6.380207538604736
    4. 'range' → logprob: -7.880207538604736
    5. ' i' → logprob: -10.005207061767578
    6. 'j' → logprob: -10.130207061767578
    7. 'd' → logprob: -10.505207061767578
    8. 'k' → logprob: -10.505207061767578
    9. ' range' → logprob: -10.755207061767578
    10. '1' → logprob: -10.880207061767578

Token 55: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.09034284949302673
    2. 'range' → logprob: -2.4653427600860596
    3. '[-' → logprob: -7.340342998504639
    4. ' [-' → logprob: -8.21534252166748
    5. '[' → logprob: -8.59034252166748
    6. ' [' → logprob: -9.71534252166748
    7. ' ' → logprob: -10.09034252166748
    8. '(range' → logprob: -10.71534252166748
    9. ' ran' → logprob: -10.84034252166748
    10. ' rang' → logprob: -10.90284252166748

Token 56: '(i' (ID: 3649)
  Prédit: '(i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(i' → logprob: -1.2528661489486694
    2. '(W' → logprob: -1.5028661489486694
    3. '(j' → logprob: -1.6278661489486694
    4. '(' → logprob: -1.8778661489486694
    5. '(H' → logprob: -2.002866268157959
    6. '(max' → logprob: -6.002866268157959
    7. '(-' → logprob: -6.127866268157959
    8. '(k' → logprob: -6.752866268157959
    9. '(I' → logprob: -7.627866268157959
    10. '(J' → logprob: -8.0028657913208

Token 57: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.027299324050545692
    2. ' +' → logprob: -3.777299404144287
    3. ',' → logprob: -5.777299404144287
    4. '-' → logprob: -7.527299404144287
    5. '):' → logprob: -8.402298927307129
    6. ' -' → logprob: -9.777298927307129
    7. ')' → logprob: -9.777298927307129
    8. ' ,' → logprob: -10.652298927307129
    9. '   ' → logprob: -11.277298927307129
    10. '):
' → logprob: -12.152298927307129

Token 58: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00027301779482513666
    2. ' ' → logprob: -8.250272750854492
    3. '2' → logprob: -12.500272750854492
    4. '0' → logprob: -13.375272750854492
    5. 'H' → logprob: -13.375272750854492
    6. '3' → logprob: -13.937772750854492
    7. 'W' → logprob: -14.375272750854492
    8. '   ' → logprob: -14.562772750854492
    9. ' H' → logprob: -14.937772750854492
    10. '4' → logprob: -14.937772750854492

Token 59: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.017384406179189682
    2. ',W' → logprob: -4.5173845291137695
    3. ',H' → logprob: -5.2673845291137695
    4. ' ,' → logprob: -6.8923845291137695
    5. ',j' → logprob: -10.76738452911377
    6. 'H' → logprob: -11.01738452911377
    7. ')' → logprob: -11.14238452911377
    8. ',w' → logprob: -11.14238452911377
    9. ',n' → logprob: -11.39238452911377
    10. 'W' → logprob: -11.39238452911377

Token 60: ' H' (ID: 487)
  Prédit: 'H'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'H' → logprob: -0.014188306406140327
    2. ' H' → logprob: -4.264188289642334
    3. ')' → logprob: -12.389188766479492
    4. ' ' → logprob: -12.701688766479492
    5. 'W' → logprob: -12.951688766479492
    6. '	H' → logprob: -13.076688766479492
    7. 'i' → logprob: -13.139188766479492
    8. 'I' → logprob: -13.639188766479492
    9. '<|end|>' → logprob: -13.639188766479492
    10. '<H' → logprob: -14.014188766479492

Token 61: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0005405236734077334
    2. '):
' → logprob: -7.875540733337402
    3. ':' → logprob: -9.250540733337402
    4. '+' → logprob: -10.500540733337402
    5. ')' → logprob: -10.625540733337402
    6. ' ):' → logprob: -12.625540733337402
    7. ',' → logprob: -13.000540733337402
    8. '       ' → logprob: -13.875540733337402
    9. '):
' → logprob: -14.000540733337402
    10. 'if' → logprob: -14.375540733337402

Token 62: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.01045366283506155
    2. ':' → logprob: -5.135453701019287
    3. '           ' → logprob: -6.010453701019287
    4. '<|end|>' → logprob: -6.385453701019287
    5. ' ' → logprob: -9.010453224182129
    6. ' if' → logprob: -10.135453224182129
    7. '              ' → logprob: -10.135453224182129
    8. '                
' → logprob: -10.760453224182129
    9. '                ' → logprob: -10.885453224182129
    10. '<|end|>' → logprob: -11.010453224182129

Token 63: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.2965584993362427
    2. ' if' → logprob: -2.296558380126953
    3. '                   ' → logprob: -2.296558380126953
    4. '               ' → logprob: -3.046558380126953
    5. ' ' → logprob: -5.796558380126953
    6. '                ' → logprob: -6.546558380126953
    7. '           ' → logprob: -6.546558380126953
    8. '<|end|>' → logprob: -7.296558380126953
    9. '                       ' → logprob: -7.671558380126953
    10. '                               ' → logprob: -9.046558380126953

Token 64: ' l' (ID: 305)
  Prédit: 'l'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.32043057680130005
    2. ' l' → logprob: -1.3204305171966553
    3. 'm' → logprob: -5.695430755615234
    4. 'j' → logprob: -6.820430755615234
    5. ' m' → logprob: -6.820430755615234
    6. 'k' → logprob: -7.945430755615234
    7. ' j' → logprob: -8.070430755615234
    8. ' ' → logprob: -8.695430755615234
    9. 'w' → logprob: -8.820430755615234
    10. ' k' → logprob: -9.195430755615234

Token 65: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0699399933218956
    2. 'in' → logprob: -2.6949400901794434
    3. ' ' → logprob: -13.444939613342285
    4. 'range' → logprob: -14.444939613342285
    5. '<|end|>' → logprob: -14.819939613342285
    6. ')' → logprob: -15.569939613342285
    7. ' range' → logprob: -15.944939613342285
    8. 'for' → logprob: -16.0699405670166
    9. '	in' → logprob: -16.0699405670166
    10. '   ' → logprob: -16.1949405670166

Token 66: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.2560044527053833
    2. ' range' → logprob: -1.5060044527053833
    3. '(range' → logprob: -5.506004333496094
    4. '(' → logprob: -13.756004333496094
    5. '	range' → logprob: -13.881004333496094
    6. ' (' → logprob: -14.381004333496094
    7. '_range' → logprob: -14.631004333496094
    8. '.range' → logprob: -14.881004333496094
    9. '-range' → logprob: -15.256004333496094
    10. 'Range' → logprob: -15.506004333496094

Token 67: '(j' (ID: 4997)
  Prédit: '(j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(j' → logprob: -0.02650974690914154
    2. '(W' → logprob: -3.7765097618103027
    3. '(' → logprob: -5.776509761810303
    4. '(J' → logprob: -9.276509284973145
    5. '(w' → logprob: -10.276509284973145
    6. ' (' → logprob: -10.901509284973145
    7. '(k' → logprob: -12.276509284973145
    8. '((' → logprob: -13.276509284973145
    9. '(l' → logprob: -13.526509284973145
    10. 'W' → logprob: -13.776509284973145

Token 68: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.0006288022268563509
    2. ',' → logprob: -8.375628471374512
    3. '+,' → logprob: -8.500628471374512
    4. ' +' → logprob: -8.625628471374512
    5. ' ,' → logprob: -11.750628471374512
    6. ',j' → logprob: -13.625628471374512
    7. '+j' → logprob: -13.750628471374512
    8. ')' → logprob: -13.875628471374512
    9. '-' → logprob: -14.125628471374512
    10. '+)' → logprob: -14.625628471374512

Token 69: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9743012671824545e-05
    2. '+' → logprob: -11.250020027160645
    3. ' ' → logprob: -12.500020027160645
    4. ',' → logprob: -13.375020027160645
    5. '2' → logprob: -15.000020027160645
    6. '```' → logprob: -15.500020027160645
    7. 'W' → logprob: -15.875020027160645
    8. '   ' → logprob: -16.000019073486328
    9. '0' → logprob: -16.250019073486328
    10. ')' → logprob: -16.375019073486328

Token 70: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00037728800089098513
    2. ',W' → logprob: -8.125377655029297
    3. ' ,' → logprob: -9.500377655029297
    4. '<|end|>' → logprob: -13.375377655029297
    5. ',w' → logprob: -13.500377655029297
    6. ')' → logprob: -13.750377655029297
    7. ',
' → logprob: -15.125377655029297
    8. '‌,' → logprob: -15.250377655029297
    9. ',H' → logprob: -15.375377655029297
    10. '',' → logprob: -15.625377655029297

Token 71: ' W' (ID: 486)
  Prédit: 'W'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'W' → logprob: -0.1797526776790619
    2. ' W' → logprob: -1.8047527074813843
    3. '   ' → logprob: -12.929752349853516
    4. ' ' → logprob: -12.929752349853516
    5. '	W' → logprob: -13.804752349853516
    6. ')' → logprob: -14.554752349853516
    7. '<W' → logprob: -14.804752349853516
    8. '<|end|>' → logprob: -14.929752349853516
    9. '  ' → logprob: -15.679752349853516
    10. '```' → logprob: -15.804752349853516

Token 72: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0007075481698848307
    2. '):
' → logprob: -7.750707626342773
    3. ')' → logprob: -8.500707626342773
    4. ':' → logprob: -10.125707626342773
    5. '                   ' → logprob: -11.375707626342773
    6. '               ' → logprob: -12.000707626342773
    7. ' ):' → logprob: -12.750707626342773
    8. ''):' → logprob: -12.875707626342773
    9. '           ' → logprob: -13.000707626342773
    10. '                       ' → logprob: -13.500707626342773

Token 73: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.04338520020246506
    2. '               ' → logprob: -3.5433852672576904
    3. ' if' → logprob: -5.668385028839111
    4. '                       ' → logprob: -5.918385028839111
    5. 'if' → logprob: -6.418385028839111
    6. '                           ' → logprob: -6.543385028839111
    7. ' ' → logprob: -6.668385028839111
    8. '                    ' → logprob: -7.168385028839111
    9. '                ' → logprob: -7.293385028839111
    10. '           ' → logprob: -7.668385028839111

Token 74: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.05884803459048271
    2. '                       ' → logprob: -3.1838481426239014
    3. ' if' → logprob: -4.183847904205322
    4. '                   ' → logprob: -8.05884838104248
    5. '                        ' → logprob: -9.93384838104248
    6. '               ' → logprob: -10.18384838104248
    7. '                           ' → logprob: -10.80884838104248
    8. ' ' → logprob: -11.05884838104248
    9. '                    ' → logprob: -11.18384838104248
    10. '                               ' → logprob: -11.55884838104248

Token 75: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.08905114233493805
    2. 'S' → logprob: -2.4640512466430664
    3. ' ' → logprob: -9.839051246643066
    4. '                ' → logprob: -11.714051246643066
    5. '                           ' → logprob: -11.714051246643066
    6. '                   ' → logprob: -11.839051246643066
    7. ' (' → logprob: -12.589051246643066
    8. ' not' → logprob: -12.589051246643066
    9. '                    ' → logprob: -12.901551246643066
    10. '               ' → logprob: -12.964051246643066

Token 76: '[i' (ID: 1768)
  Prédit: '[k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.0005350403371267021
    2. '[i' → logprob: -7.625535011291504
    3. '[' → logprob: -10.375535011291504
    4. '[l' → logprob: -11.875535011291504
    5. ' [' → logprob: -12.875535011291504
    6. '[I' → logprob: -13.375535011291504
    7. '][' → logprob: -14.000535011291504
    8. 'k' → logprob: -14.750535011291504
    9. '[j' → logprob: -14.750535011291504
    10. '[m' → logprob: -14.875535011291504

Token 77: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.029707442969083786
    2. '[k' → logprob: -3.779707431793213
    3. '[l' → logprob: -5.154707431793213
    4. ']' → logprob: -8.279707908630371
    5. '[' → logprob: -9.154707908630371
    6. ' ][' → logprob: -9.279707908630371
    7. ' [' → logprob: -10.279707908630371
    8. ''][' → logprob: -10.279707908630371
    9. '"][' → logprob: -10.404707908630371
    10. 'k' → logprob: -10.779707908630371

Token 78: 'l' (ID: 75)
  Prédit: 'l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'l' → logprob: -0.09579772502183914
    2. 'j' → logprob: -2.8457977771759033
    3. 'k' → logprob: -3.4707977771759033
    4. '][' → logprob: -6.345797538757324
    5. '[l' → logprob: -8.345797538757324
    6. '[j' → logprob: -9.720797538757324
    7. ']' → logprob: -10.470797538757324
    8. ' l' → logprob: -10.595797538757324
    9. '[k' → logprob: -11.783297538757324
    10. '```' → logprob: -11.908297538757324

Token 79: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.09024863690137863
    2. ']==' → logprob: -3.3402485847473145
    3. ' ==' → logprob: -3.4652485847473145
    4. '==' → logprob: -4.4652485847473145
    5. '']' → logprob: -4.9652485847473145
    6. ']=='' → logprob: -8.090249061584473
    7. '']==' → logprob: -8.465249061584473
    8. ' ]' → logprob: -8.715249061584473
    9. ''' → logprob: -9.215249061584473
    10. '']=='' → logprob: -9.590249061584473

Token 80: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.5766027569770813
    2. '==' → logprob: -0.8266027569770813
    3. '=='' → logprob: -8.326602935791016
    4. '!=' → logprob: -8.576602935791016
    5. ' !=' → logprob: -9.326602935791016
    6. ' =='' → logprob: -10.451602935791016
    7. ' in' → logprob: -10.951602935791016
    8. '=' → logprob: -10.951602935791016
    9. '                           ' → logprob: -11.451602935791016
    10. ''' → logprob: -11.701602935791016

Token 81: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.02878010831773281
    2. ''S' → logprob: -4.153779983520508
    3. ''C' → logprob: -5.403779983520508
    4. ''O' → logprob: -6.028779983520508
    5. ''H' → logprob: -6.653779983520508
    6. ''A' → logprob: -7.028779983520508
    7. ''I' → logprob: -7.028779983520508
    8. ''L' → logprob: -7.278779983520508
    9. ''D' → logprob: -8.028779983520508
    10. ' '' → logprob: -8.278779983520508

Token 82: 'O' (ID: 46)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.08217529952526093
    2. ''S' → logprob: -3.2071752548217773
    3. 'J' → logprob: -3.9571752548217773
    4. ''O' → logprob: -5.082175254821777
    5. ''D' → logprob: -5.832175254821777
    6. ''C' → logprob: -5.832175254821777
    7. ''I' → logprob: -6.332175254821777
    8. ''#' → logprob: -6.832175254821777
    9. '#' → logprob: -6.957175254821777
    10. ''A' → logprob: -7.457175254821777

Token 83: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0018941258313134313
    2. ' and' → logprob: -6.751893997192383
    3. 'and' → logprob: -8.501893997192383
    4. 'J' → logprob: -8.626893997192383
    5. ' '' → logprob: -9.126893997192383
    6. 'O' → logprob: -9.751893997192383
    7. ''O' → logprob: -10.251893997192383
    8. ''s' → logprob: -10.876893997192383
    9. ''N' → logprob: -11.501893997192383
    10. '                           ' → logprob: -11.626893997192383

Token 84: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.02763972245156765
    2. 'and' → logprob: -3.652639627456665
    3. ' ' → logprob: -7.652639865875244
    4. '                           ' → logprob: -8.402639389038086
    5. ':' → logprob: -8.527639389038086
    6. '                       ' → logprob: -8.652639389038086
    7. '                            ' → logprob: -9.652639389038086
    8. '<|end|>' → logprob: -9.777639389038086
    9. '                               ' → logprob: -9.902639389038086
    10. '                        ' → logprob: -10.777639389038086

Token 85: ' S' (ID: 336)
  Prédit: ' S'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' S' → logprob: -0.6329818367958069
    2. 'S' → logprob: -0.7579818367958069
    3. '                           ' → logprob: -9.00798225402832
    4. ' ' → logprob: -10.38298225402832
    5. '                   ' → logprob: -10.38298225402832
    6. 's' → logprob: -10.50798225402832
    7. '   ' → logprob: -10.63298225402832
    8. '    ' → logprob: -10.75798225402832
    9. '                               ' → logprob: -10.88298225402832
    10. '                       ' → logprob: -11.38298225402832

Token 86: '[k' (ID: 14298)
  Prédit: '[k'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[k' → logprob: -0.00010926496179308742
    2. '[' → logprob: -9.250109672546387
    3. '[K' → logprob: -12.625109672546387
    4. 'k' → logprob: -13.250109672546387
    5. '```' → logprob: -13.375109672546387
    6. '<|end|>' → logprob: -13.375109672546387
    7. '	k' → logprob: -13.875109672546387
    8. '[i' → logprob: -14.500109672546387
    9. '][' → logprob: -14.750109672546387

Token 87: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.001998819876462221
    2. ''][' → logprob: -7.3769989013671875
    3. '[j' → logprob: -7.5019989013671875
    4. '[l' → logprob: -8.126998901367188
    5. ']' → logprob: -8.251998901367188
    6. '"][' → logprob: -9.626998901367188
    7. '[' → logprob: -9.626998901367188
    8. '<|end|>' → logprob: -10.251998901367188
    9. '[k' → logprob: -10.751998901367188
    10. ' ][' → logprob: -11.126998901367188

Token 88: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.00106436712667346
    2. 'l' → logprob: -6.876064300537109
    3. ' j' → logprob: -10.75106430053711
    4. 'k' → logprob: -12.12606430053711
    5. '	j' → logprob: -13.75106430053711
    6. '<|end|>' → logprob: -14.25106430053711
    7. '```' → logprob: -14.50106430053711
    8. 'm' → logprob: -14.87606430053711
    9. ']' → logprob: -15.25106430053711
    10. '_j' → logprob: -15.50106430053711

Token 89: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.005589225795120001
    2. ']==' → logprob: -5.880589008331299
    3. '']' → logprob: -6.130589008331299
    4. ' ]' → logprob: -7.630589008331299
    5. ']=='' → logprob: -9.880589485168457
    6. '==' → logprob: -10.380589485168457
    7. ' ==' → logprob: -11.630589485168457
    8. '']==' → logprob: -12.130589485168457
    9. ' ']' → logprob: -12.130589485168457
    10. '`]' → logprob: -12.255589485168457

Token 90: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.13894589245319366
    2. '==' → logprob: -2.1389458179473877
    3. ']' → logprob: -4.638946056365967
    4. ']==' → logprob: -6.513946056365967
    5. '<|end|>' → logprob: -8.263945579528809
    6. ' ' → logprob: -9.013945579528809
    7. ')' → logprob: -9.388945579528809
    8. '[' → logprob: -9.513945579528809
    9. '=='' → logprob: -9.888945579528809
    10. '']' → logprob: -10.263945579528809

Token 91: ' '' (ID: 461)
  Prédit: ''O'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''O' → logprob: -0.9192366003990173
    2. ' '' → logprob: -1.044236660003662
    3. ''' → logprob: -1.419236660003662
    4. 'O' → logprob: -6.419236660003662
    5. ''S' → logprob: -6.419236660003662
    6. ' O' → logprob: -6.544236660003662
    7. ''o' → logprob: -6.919236660003662
    8. ' ' → logprob: -7.169236660003662
    9. ' ' → logprob: -9.169236183166504
    10. '"O' → logprob: -9.294236183166504

Token 92: 'I' (ID: 40)
  Prédit: 'J'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'J' → logprob: -0.1102997288107872
    2. 'O' → logprob: -2.360299825668335
    3. 'S' → logprob: -5.485299587249756
    4. ''' → logprob: -5.735299587249756
    5. 'I' → logprob: -6.735299587249756
    6. 'H' → logprob: -6.860299587249756
    7. ''O' → logprob: -8.485300064086914
    8. ''S' → logprob: -9.985300064086914
    9. '')' → logprob: -10.672800064086914
    10. 'B' → logprob: -11.110300064086914

Token 93: '':
' (ID: 7669)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.387808233499527
    2. ''' → logprob: -1.2628082036972046
    3. 'and' → logprob: -3.262808322906494
    4. ' '' → logprob: -8.762807846069336
    5. '`' → logprob: -10.387807846069336
    6. '':' → logprob: -10.387807846069336
    7. '':
' → logprob: -10.637807846069336
    8. ''s' → logprob: -10.762807846069336
    9. '```' → logprob: -11.387807846069336
    10. '']' → logprob: -11.887807846069336

Token 94: '                       ' (ID: 968)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.3402857482433319
    2. '                       ' → logprob: -1.3402857780456543
    3. ':' → logprob: -3.8402857780456543
    4. '                        ' → logprob: -6.465285778045654
    5. 'and' → logprob: -6.715285778045654
    6. '                           ' → logprob: -7.590285778045654
    7. ' :' → logprob: -7.715285778045654
    8. '<|end|>' → logprob: -7.840285778045654
    9. '                               ' → logprob: -8.590285301208496
    10. ' ' → logprob: -8.590285301208496

Token 95: ' count' (ID: 3605)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.9826295971870422
    2. 'if' → logprob: -1.3576295375823975
    3. '                           ' → logprob: -1.6076295375823975
    4. 'count' (adapté à ' count') → logprob: -2.3576295375823975
    5. '                       ' → logprob: -2.8576295375823975
    6. ' count' → logprob: -4.982629776000977
    7. '                               ' → logprob: -5.232629776000977
    8. ' ' → logprob: -6.482629776000977
    9. '           ' → logprob: -7.857629776000977
    10. '               ' → logprob: -8.107629776000977

Token 96: ' +=' (ID: 2757)
  Prédit: ' +='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +=' → logprob: -0.17985208332538605
    2. '+=' → logprob: -1.8048521280288696
    3. '+' → logprob: -9.304852485656738
    4. ']+=' → logprob: -12.179852485656738
    5. '=' → logprob: -12.554852485656738
    6. ' ' → logprob: -13.429852485656738
    7. ' +' → logprob: -13.429852485656738
    8. ' =' → logprob: -13.554852485656738
    9. '++' → logprob: -14.304852485656738
    10. '<|end|>' → logprob: -14.429852485656738

Token 97: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0003806257154792547
    2. ' ' → logprob: -7.875380516052246
    3. '0' → logprob: -15.875380516052246
    4. '(' → logprob: -16.500381469726562
    5. 'l' → logprob: -16.750381469726562
    6. '   ' → logprob: -16.875381469726562
    7. '2' → logprob: -17.250381469726562
    8. 'S' → logprob: -17.375381469726562
    9. ' (' → logprob: -17.437881469726562
    10. '100' → logprob: -17.625381469726562

Token 98: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.8802491215174086e-05
    2. ' ' → logprob: -10.500028610229492
    3. '(' → logprob: -15.000028610229492
    4. '(k' → logprob: -15.000028610229492
    5. 'k' → logprob: -15.625028610229492
    6. 'S' → logprob: -16.000028610229492
    7. 'l' → logprob: -16.875028610229492
    8. '0' → logprob: -17.000028610229492
    9. ' (' → logprob: -17.250028610229492
    10. '(S' → logprob: -17.250028610229492

Token 99: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 100: 'print' (ID: 1598)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 101: '(count' (ID: 25892)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.04859282076358795
    2. '(count' → logprob: -3.0485928058624268
    3. '('' → logprob: -13.548592567443848
    4. '((' → logprob: -13.923592567443848
    5. '(`' → logprob: -14.048592567443848
    6. ' (' → logprob: -14.173592567443848
    7. '(
' → logprob: -14.298592567443848
    8. '("("' → logprob: -14.923592567443848
    9. '()' → logprob: -15.548592567443848
    10. '(sum' → logprob: -16.048593521118164

Token 102: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.339278580620885e-06
    2. ' )' → logprob: -13.500001907348633
    3. ')
' → logprob: -15.000001907348633
    4. '))' → logprob: -15.625001907348633
    5. ')`' → logprob: -15.750001907348633
    6. '+' → logprob: -16.250001907348633
    7. '()' → logprob: -16.875001907348633
    8. '(' → logprob: -17.875001907348633
    9. ')}' → logprob: -17.875001907348633
    10. '`)' → logprob: -18.000001907348633


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 100
Tokens correctement prédits (1ère position, stricte): 47
Tokens correctement prédits (1ère position, avec adaptation): 49
Tokens correctement prédits (top 10): 88
Précision stricte (1ère position): 47.00%
Précision adaptée (1ère position): 49.00%
Précision (top 10): 88.00%
================================================================================
