================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:08:10
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
from typing import List, Set, Tuple, Iterator

class Coordinate3D:
    __slots__ = ('x', 'y', 'z')
    def __init__(self, x: int, y: int, z: int):
        self.x = x
        self.y = y
        self.z = z
    def neighbors(self, max_dim: int) -> Iterator['Coordinate3D']:
        # Generate all 26 neighbors in 3D, excluding self
        for dz in (-1, 0, 1):
            nz = self.z + dz
            if 0 <= nz < max_dim:
                for dy in (-1, 0, 1):
                    ny = self.y + dy
                    if 0 <= ny < max_dim:
                        for dx in (-1, 0, 1):
                            nx = self.x + dx
                            if 0 <= nx < max_dim:
                                if dx != 0 or dy != 0 or dz != 0:
                                    yield Coordinate3D(nx, ny, nz)
    def __eq__(self, other):
        return (self.x, self.y, self.z) == (other.x, other.y, other.z)
    def __hash__(self):
        return hash((self.x, self.y, self.z))

class Grid3D:
    def __init__(self, size: int):
        self.size = size
        # Represent 3D grid as set of occupied Coordinates for efficiency
        self.occupied: Set[Coordinate3D] = set()
    def set_cell(self, coord: Coordinate3D, alive: bool) -> None:
        if alive:
            self.occupied.add(coord)
        else:
            self.occupied.discard(coord)
    def is_alive(self, coord: Coordinate3D) -> bool:
        return coord in self.occupied
    def alive_neighbors_count(self, coord: Coordinate3D) -> int:
        count = 0
        for n in coord.neighbors(self.size):
            if n in self.occupied:
                count += 1
        return count
    def all_coordinates(self) -> Iterator[Coordinate3D]:
        for z in range(self.size):
            for y in range(self.size):
                for x in range(self.size):
                    yield Coordinate3D(x, y, z)
    def copy(self) -> 'Grid3D':
        new_grid = Grid3D(self.size)
        new_grid.occupied = set(self.occupied)
        return new_grid
    def __str__(self):
        # For output formatting per layer z=0..4
        layers = []
        for z in range(self.size):
            layer_lines = []
            for y in range(self.size):
                line_chars = []
                for x in range(self.size):
                    line_chars.append('1' if Coordinate3D(x, y, z) in self.occupied else '0')
                layer_lines.append("".join(line_chars))
            layers.append("\n".join(layer_lines))
        return "\n\n".join(layers)

class BirthDeathRules:
    def __init__(self, birth_counts: Set[int], survival_counts: Set[int]):
        self.birth_counts = birth_counts
        self.survival_counts = survival_counts
    def will_be_born(self, neighbor_count: int) -> bool:
        return neighbor_count in self.birth_counts
    def will_survive(self, neighbor_count: int) -> bool:
        return neighbor_count in self.survival_counts

class Simulation3D:
    def __init__(self, initial_grid: Grid3D, rules: BirthDeathRules, days: int):
        self.grid = initial_grid
        self.rules = rules
        self.days = days
    def step(self):
        new_grid = self.grid.copy()
        # We compute next states without modifying old state during checks
        changed_coords = set()
        # To optimize, we consider all coordinates or at least all occupied + neighbors
        candidates = set()
        for coord in self.grid.occupied:
            candidates.add(coord)
            for n in coord.neighbors(self.grid.size):
                candidates.add(n)

        for coord in candidates:
            alive = self.grid.is_alive(coord)
            count = self.grid.alive_neighbors_count(coord)
            if not alive and self.rules.will_be_born(count):
                new_grid.set_cell(coord, True)
            elif alive and not self.rules.will_survive(count):
                new_grid.set_cell(coord, False)
            # else no change

        self.grid = new_grid
    def run(self):
        for _ in range(self.days):
            self.step()

class InputParser:
    GRID_SIZE = 5
    def __init__(self):
        self.test_cases = []
    def parse_input(self):
        case_id = 1
        while True:
            N_line = ''
            while N_line.strip() == '':
                N_line = input()
            N = int(N_line.strip())
            if N == 0:
                break
            initial_grid = Grid3D(self.GRID_SIZE)
            # Read 5 layers, each layer 5 lines
            for z in range(self.GRID_SIZE):
                for y in range(self.GRID_SIZE):
                    line = input()
                    # line is length 5 string of 0/1
                    for x, ch in enumerate(line.strip()):
                        alive = ch == '1'
                        initial_grid.set_cell(Coordinate3D(x,y,z), alive)
                # One empty line after each layer
                input()
            # read M1 and a_i
            M1_line = input().strip()
            while M1_line == '':
                M1_line = input().strip()
            M1 = int(M1_line)
            a_values = []
            if M1 > 0:
                # May be in multiple lines, read enough values
                while len(a_values) < M1:
                    line = input().strip()
                    if line == '':
                        continue
                    a_values.extend(map(int, line.split()))
            # read M2 and b_j
            M2_line = input().strip()
            while M2_line == '':
                M2_line = input().strip()
            M2 = int(M2_line)
            b_values = []
            if M2 > 0:
                while len(b_values) < M2:
                    line = input().strip()
                    if line == '':
                        continue
                    b_values.extend(map(int, line.split()))
            self.test_cases.append( (case_id, N, initial_grid, BirthDeathRules(set(a_values), set(b_values))) )
            case_id += 1

class OutputWriter:
    @staticmethod
    def write(case_id: int, grid: Grid3D):
        print(f"Case {case_id}:")
        for z in range(grid.size):
            for y in range(grid.size):
                line_chars = []
                for x in range(grid.size):
                    line_chars.append('1' if Coordinate3D(x,y,z) in grid.occupied else '0')
                print("".join(line_chars))
            print()

def main():
    parser = InputParser()
    parser.parse_input()

    for case_id, N, initial_grid, rules in parser.test_cases:
        sim = Simulation3D(initial_grid, rules, N)
        sim.run()
        OutputWriter.write(case_id, sim.grid)

if __name__ == '__main__':
    main()
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'from' (ID: 2845)
  → Token d'amorce (pas de prédiction)

Token 1: ' typing' (ID: 34152)
  → Token d'amorce (pas de prédiction)

Token 2: ' import' (ID: 1588)
  → Token d'amorce (pas de prédiction)

Token 3: ' List' (ID: 2655)
  Prédit: ' List'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' List' → logprob: -0.07579509913921356
    2. ' Any' → logprob: -2.8257951736450195
    3. ' Optional' → logprob: -4.7007951736450195
    4. 'Any' → logprob: -6.4507951736450195
    5. 'List' → logprob: -6.7007951736450195
    6. ' Union' → logprob: -6.9507951736450195
    7. ' ' → logprob: -7.9507951736450195
    8. ' Generator' → logprob: -8.20079517364502
    9. 'Optional' → logprob: -9.57579517364502
    10. ' Iterable' → logprob: -9.70079517364502

Token 4: ',' (ID: 11)
  Prédit: '```'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '```' → logprob: -0.2815455198287964
    2. 'def' → logprob: -1.7815455198287964
    3. '
' → logprob: -3.781545639038086
    4. '\n' → logprob: -4.156545639038086
    5. '<|end|>' → logprob: -4.906545639038086
    6. '\' → logprob: -5.031545639038086
    7. '[' → logprob: -5.406545639038086
    8. 'import' → logprob: -5.906545639038086
    9. '`' → logprob: -6.156545639038086
    10. '  
' → logprob: -6.281545639038086

Token 5: ' Set' (ID: 3957)
  Prédit: ' Optional'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Optional' → logprob: -0.44882717728614807
    2. 'Optional' → logprob: -1.0738271474838257
    3. ' Dict' → logprob: -4.823827266693115
    4. 'Dict' → logprob: -4.948827266693115
    5. 'Tuple' → logprob: -5.823827266693115
    6. ' Tuple' → logprob: -6.948827266693115
    7. ' Union' → logprob: -7.448827266693115
    8. 'Union' → logprob: -9.323826789855957
    9. 'Iterable' → logprob: -10.073826789855957
    10. 'Any' → logprob: -10.448826789855957

Token 6: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.2011284977197647
    2. 'def' → logprob: -2.9511284828186035
    3. '```' → logprob: -3.3261284828186035
    4. '[' → logprob: -3.4511284828186035
    5. 'import' → logprob: -3.5761284828186035
    6. '<|end|>' → logprob: -4.5761284828186035
    7. 'a' → logprob: -5.2011284828186035
    8. ':' → logprob: -5.7011284828186035
    9. ' ' → logprob: -5.8261284828186035
    10. '(' → logprob: -6.2011284828186035

Token 7: ' Tuple' (ID: 50841)
  Prédit: ' Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Dict' → logprob: -0.019944224506616592
    2. 'Dict' → logprob: -4.019944190979004
    3. ' Tuple' → logprob: -6.519944190979004
    4. 'Tuple' → logprob: -8.769944190979004
    5. ' defaultdict' → logprob: -9.644944190979004
    6. ' ' → logprob: -10.394944190979004
    7. ' Optional' → logprob: -10.644944190979004
    8. ' Union' → logprob: -11.519944190979004
    9. ' dict' → logprob: -11.519944190979004
    10. 'Optional' → logprob: -12.519944190979004

Token 8: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.0668888092041016
    2. '[' → logprob: -1.1918888092041016
    3. 'def' → logprob: -1.8168888092041016
    4. 'd' → logprob: -2.4418888092041016
    5. '(' → logprob: -3.1918888092041016
    6. ':' → logprob: -3.5668888092041016
    7. 'D' → logprob: -4.566888809204102
    8. '```' → logprob: -5.316888809204102
    9. 'a' → logprob: -5.441888809204102
    10. '.' → logprob: -5.441888809204102

Token 9: ' Iterator' (ID: 41994)
  Prédit: ' Dict'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Dict' → logprob: -0.3133864998817444
    2. 'Dict' → logprob: -1.3133864402770996
    3. '.Dict' → logprob: -10.813386917114258
    4. 'dict' → logprob: -10.938386917114258
    5. 'Optional' → logprob: -11.563386917114258
    6. ' Optional' → logprob: -11.563386917114258
    7. ' ' → logprob: -11.688386917114258
    8. ' Union' → logprob: -11.813386917114258
    9. 'Union' → logprob: -11.813386917114258
    10. ' dict' → logprob: -11.813386917114258

Token 10: '

' (ID: 279)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.943229079246521
    2. ',' → logprob: -1.068229079246521
    3. '(' → logprob: -2.3182291984558105
    4. ':' → logprob: -2.6932291984558105
    5. '```' → logprob: -3.3182291984558105
    6. '[' → logprob: -3.4432291984558105
    7. 'a' → logprob: -4.5682291984558105
    8. '.' → logprob: -5.3182291984558105
    9. 'd' → logprob: -5.4432291984558105
    10. '\' → logprob: -6.1932291984558105

Token 11: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.5845574736595154
    2. 'd' → logprob: -1.3345575332641602
    3. ',' → logprob: -2.58455753326416
    4. ':' → logprob: -2.95955753326416
    5. '```' → logprob: -4.45955753326416
    6. '(' → logprob: -4.45955753326416
    7. '`' → logprob: -5.20955753326416
    8. '#' → logprob: -5.58455753326416
    9. 'import' → logprob: -5.83455753326416
    10. '[' → logprob: -5.83455753326416

Token 12: ' Coordinate' (ID: 78454)
  Prédit: ' My'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' My' → logprob: -0.07716729491949081
    2. ' ' → logprob: -2.827167272567749
    3. ' Data' → logprob: -5.702167510986328
    4. ' Iterable' → logprob: -6.202167510986328
    5. ' Parser' → logprob: -6.452167510986328
    6. ' Set' → logprob: -6.577167510986328
    7. ' A' → logprob: -6.702167510986328
    8. ' User' → logprob: -6.827167510986328
    9. ' Example' → logprob: -7.077167510986328
    10. ' Vector' → logprob: -7.452167510986328

Token 13: '3' (ID: 18)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.14308106899261475
    2. '(' → logprob: -2.0180811882019043
    3. '(:' → logprob: -9.268080711364746
    4. '():' → logprob: -9.393080711364746
    5. '```' → logprob: -9.768080711364746
    6. '<|end|>' → logprob: -10.393080711364746
    7. ' :' → logprob: -10.518080711364746
    8. '):' → logprob: -10.768080711364746
    9. '[' → logprob: -11.143080711364746
    10. '(
' → logprob: -11.643080711364746

Token 14: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.008001337759196758
    2. 'd' → logprob: -4.883001327514648
    3. ':' → logprob: -7.883001327514648
    4. '(' → logprob: -11.508001327514648
    5. ' D' → logprob: -12.258001327514648
    6. '  ' → logprob: -14.133001327514648
    7. '):' → logprob: -14.883001327514648
    8. '```' → logprob: -14.883001327514648
    9. 's' → logprob: -15.258001327514648
    10. ' ' → logprob: -15.258001327514648

Token 15: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.012594061903655529
    2. '(' → logprob: -4.387594223022461
    3. '():' → logprob: -10.262594223022461
    4. ' :' → logprob: -10.637594223022461
    5. '```' → logprob: -12.512594223022461
    6. '):' → logprob: -12.762594223022461
    7. '(T' → logprob: -12.887594223022461
    8. '(:' → logprob: -13.012594223022461
    9. '(object' → logprob: -13.387594223022461
    10. ':
' → logprob: -13.637594223022461

Token 16: '   ' (ID: 271)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04684528708457947
    2. '   ' → logprob: -3.5468451976776123
    3. '```' → logprob: -4.796845436096191
    4. '(' → logprob: -5.171845436096191
    5. ':
' → logprob: -6.296845436096191
    6. '<|end|>' → logprob: -8.546845436096191
    7. '(
' → logprob: -8.671845436096191
    8. '    
' → logprob: -8.796845436096191
    9. '():' → logprob: -9.171845436096191
    10. ' ' → logprob: -9.546845436096191

Token 17: ' __' (ID: 2516)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2183893322944641
    2. ' def' → logprob: -2.4683892726898193
    3. 'def' → logprob: -2.7183892726898193
    4. '```' → logprob: -3.4683892726898193
    5. '(' → logprob: -5.218389511108398
    6. ':' → logprob: -6.218389511108398
    7. ' ```' → logprob: -6.968389511108398
    8. '    ' → logprob: -6.968389511108398
    9. ' (' → logprob: -7.343389511108398
    10. 'class' → logprob: -7.468389511108398

Token 18: 'slots' (ID: 101916)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.08932273089885712
    2. 'slots' → logprob: -2.464322805404663
    3. ' slots' → logprob: -9.339323043823242
    4. '_init' → logprob: -9.464323043823242
    5. ' init' → logprob: -9.464323043823242
    6. '_slots' → logprob: -9.964323043823242
    7. '_' → logprob: -10.339323043823242
    8. 'slot' → logprob: -10.589323043823242
    9. '   ' → logprob: -11.714323043823242
    10. 'def' → logprob: -12.089323043823242

Token 19: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -3.0590548703912646e-05
    2. '__["' → logprob: -11.625030517578125
    3. '__[' → logprob: -11.625030517578125
    4. '__('' → logprob: -12.625030517578125
    5. '__.__' → logprob: -12.750030517578125
    6. '=['' → logprob: -13.250030517578125
    7. '__:' → logprob: -13.625030517578125
    8. '___' → logprob: -13.625030517578125
    9. '=' → logprob: -14.000030517578125
    10. '____' → logprob: -15.000030517578125

Token 20: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.34115394949913025
    2. '=' → logprob: -1.3411539793014526
    3. '__' → logprob: -4.091154098510742
    4. '=['' → logprob: -4.591154098510742
    5. '[' → logprob: -8.466154098510742
    6. '['' → logprob: -8.966154098510742
    7. '=["' → logprob: -9.091154098510742
    8. '=[' → logprob: -10.591154098510742
    9. ' =[' → logprob: -10.591154098510742
    10. '[:]' → logprob: -10.591154098510742

Token 21: ' ('' (ID: 9906)
  Prédit: '('__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('__' → logprob: -0.9868713021278381
    2. '('_' → logprob: -1.2368712425231934
    3. ''' → logprob: -1.7368712425231934
    4. '('' → logprob: -2.2368712425231934
    5. '("__' → logprob: -4.111871242523193
    6. '(' → logprob: -4.611871242523193
    7. ' ('' → logprob: -4.861871242523193
    8. '("_' → logprob: -5.236871242523193
    9. '['' → logprob: -5.361871242523193
    10. ''s' → logprob: -5.611871242523193

Token 22: 'x' (ID: 87)
  Prédit: 'x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.038672469556331635
    2. '_x' → logprob: -3.28867244720459
    3. '__' → logprob: -7.41367244720459
    4. ' x' → logprob: -11.66367244720459
    5. '_' → logprob: -11.91367244720459
    6. '_coordinates' → logprob: -13.41367244720459
    7. 'coordinates' → logprob: -13.41367244720459
    8. ' _' → logprob: -13.78867244720459
    9. 'z' → logprob: -13.91367244720459
    10. '_coords' → logprob: -14.41367244720459

Token 23: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.020568402484059334
    2. ',' → logprob: -3.895568370819092
    3. ' ',' → logprob: -11.02056884765625
    4. '')' → logprob: -12.27056884765625
    5. '','' → logprob: -12.77056884765625
    6. ''' → logprob: -14.14556884765625
    7. '',
' → logprob: -14.52056884765625
    8. ','' → logprob: -14.89556884765625
    9. '   ' → logprob: -15.14556884765625
    10. ' ,' → logprob: -15.89556884765625

Token 24: ' '' (ID: 461)
  Prédit: ''y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''y' → logprob: -0.12012679874897003
    2. 'y' → logprob: -2.745126724243164
    3. ' '' → logprob: -3.370126724243164
    4. ' y' → logprob: -4.745126724243164
    5. ''' → logprob: -5.495126724243164
    6. '‘y' → logprob: -6.370126724243164
    7. ' ' → logprob: -10.495126724243164
    8. ''a' → logprob: -12.620126724243164
    9. '’y' → logprob: -12.995126724243164
    10. '   ' → logprob: -12.995126724243164

Token 25: 'y' (ID: 88)
  Prédit: 'y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -2.2200749754119897e-06
    2. ' y' → logprob: -13.375001907348633
    3. ''y' → logprob: -14.625001907348633
    4. ''' → logprob: -16.625001907348633
    5. 'y's' → logprob: -17.750001907348633
    6. '<|end|>' → logprob: -17.750001907348633
    7. '   ' → logprob: -18.375001907348633
    8. '‘y' → logprob: -18.500001907348633
    9. '_y' → logprob: -18.500001907348633
    10. ',' → logprob: -19.375001907348633

Token 26: '',' (ID: 787)
  Prédit: '','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '',' → logprob: -0.002201644005253911
    2. ',' → logprob: -6.127201557159424
    3. '')' → logprob: -11.252202033996582
    4. ''' → logprob: -13.127202033996582
    5. '','' → logprob: -13.877202033996582
    6. ' ',' → logprob: -15.627202033996582
    7. ','' → logprob: -15.752202033996582
    8. '",' → logprob: -16.627201080322266
    9. '',
' → logprob: -17.002201080322266
    10. ' ,' → logprob: -17.002201080322266

Token 27: ' '' (ID: 461)
  Prédit: ''z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''z' → logprob: -0.08064815402030945
    2. ' '' → logprob: -2.580648183822632
    3. ''' → logprob: -6.830647945404053
    4. ' z' → logprob: -8.330648422241211
    5. 'z' → logprob: -8.455648422241211
    6. '‘z' → logprob: -8.580648422241211
    7. ''s' → logprob: -12.080648422241211
    8. ' and' → logprob: -12.330648422241211
    9. '’z' → logprob: -12.580648422241211
    10. ''x' → logprob: -12.830648422241211

Token 28: 'z' (ID: 89)
  Prédit: 'z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -1.5048530030981055e-06
    2. '')' → logprob: -14.125001907348633
    3. ''z' → logprob: -14.625001907348633
    4. ' z' → logprob: -15.750001907348633
    5. ''' → logprob: -16.125001907348633
    6. 'x' → logprob: -16.500001907348633
    7. '_z' → logprob: -18.250001907348633
    8. '',' → logprob: -19.250001907348633
    9. ''),' → logprob: -19.750001907348633
    10. ')' → logprob: -19.750001907348633

Token 29: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.0022755081299692392
    2. '',' → logprob: -6.627275466918945
    3. ')' → logprob: -7.002275466918945
    4. ''' → logprob: -10.252275466918945
    5. '')
' → logprob: -13.752275466918945
    6. '('' → logprob: -14.002275466918945
    7. ',' → logprob: -14.752275466918945
    8. '','' → logprob: -15.127275466918945
    9. '']' → logprob: -15.252275466918945
    10. '(',' → logprob: -15.752275466918945

Token 30: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.15196706354618073
    2. '   ' → logprob: -2.1519670486450195
    3. '    
' → logprob: -4.2769670486450195
    4. 'def' → logprob: -5.4019670486450195
    5. ':' → logprob: -5.7769670486450195
    6. ' def' → logprob: -7.1519670486450195
    7. '<|end|>' → logprob: -8.02696704864502
    8. '
' → logprob: -8.40196704864502
    9. '' → logprob: -8.52696704864502
    10. '

' → logprob: -8.65196704864502

Token 31: ' def' (ID: 1056)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.17493903636932373
    2. '   ' → logprob: -2.5499391555786133
    3. '
' → logprob: -3.4249391555786133
    4. 'def' (adapté à ' def') → logprob: -3.5499391555786133
    5. ':
' → logprob: -5.174939155578613
    6. ' def' → logprob: -5.424939155578613
    7. '    
' → logprob: -5.549939155578613
    8. 'x' → logprob: -6.549939155578613
    9. '=' → logprob: -6.674939155578613
    10. ',' → logprob: -6.924939155578613

Token 32: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.016249842941761017
    2. ' ' → logprob: -4.891249656677246
    3. '__' → logprob: -5.141249656677246
    4. '  ' → logprob: -6.641249656677246
    5. ' init' → logprob: -7.641249656677246
    6. ' def' → logprob: -7.891249656677246
    7. '_init' → logprob: -8.266249656677246
    8. ' ' → logprob: -9.641249656677246
    9. 'init' → logprob: -9.891249656677246
    10. '_' → logprob: -10.016249656677246

Token 33: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -5.240481914370321e-05
    2. 'ini' → logprob: -10.625052452087402
    3. 'i' → logprob: -10.750052452087402
    4. 'in' → logprob: -12.000052452087402
    5. 'nit' → logprob: -15.375052452087402
    6. 'inite' → logprob: -16.125051498413086
    7. 'int' → logprob: -16.625051498413086
    8. '_init' → logprob: -17.125051498413086
    9. 'innit' → logprob: -17.375051498413086
    10. ' init' → logprob: -17.625051498413086

Token 34: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.3958463966846466
    2. '(' → logprob: -1.3958463668823242
    3. ' (' → logprob: -3.520846366882324
    4. '(self' → logprob: -3.770846366882324
    5. '__' → logprob: -4.270846366882324
    6. '<|end|>' → logprob: -5.145846366882324
    7. '__(
' → logprob: -5.770846366882324
    8. 'self' → logprob: -6.645846366882324
    9. '<|end|>' → logprob: -7.145846366882324
    10. '__((' → logprob: -7.520846366882324

Token 35: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0007104054093360901
    2. ' self' → logprob: -7.250710487365723
    3. '(self' → logprob: -15.500710487365723
    4. 'x' → logprob: -15.625710487365723
    5. ')' → logprob: -17.000709533691406
    6. 's' → logprob: -18.000709533691406
    7. '   ' → logprob: -18.125709533691406
    8. ',self' → logprob: -18.125709533691406
    9. ' ' → logprob: -18.375709533691406
    10. '	self' → logprob: -18.625709533691406

Token 36: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3554929196834564
    2. 'self' → logprob: -2.2304928302764893
    3. ' ,' → logprob: -2.8554928302764893
    4. ')' → logprob: -3.2304928302764893
    5. ' self' → logprob: -3.2304928302764893
    6. ' )' → logprob: -3.7304928302764893
    7. '(self' → logprob: -4.105493068695068
    8. '<|end|>' → logprob: -4.980493068695068
    9. ' ' → logprob: -6.480493068695068
    10. '<|end|>' → logprob: -6.730493068695068

Token 37: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.5760498046875
    2. ' x' → logprob: -0.8260498046875
    3. 'self' → logprob: -9.5760498046875
    4. ' self' → logprob: -10.3260498046875
    5. ' ' → logprob: -12.5760498046875
    6. '   ' → logprob: -13.0760498046875
    7. '    ' → logprob: -13.5760498046875
    8. ')x' → logprob: -14.5760498046875
    9. '	x' → logprob: -14.9510498046875
    10. '  ' → logprob: -15.7010498046875

Token 38: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5267887711524963
    2. ',' → logprob: -0.9017887711524963
    3. ':int' → logprob: -5.901788711547852
    4. ' ,' → logprob: -7.651788711547852
    5. '):' → logprob: -8.401788711547852
    6. ')' → logprob: -8.901788711547852
    7. ' :' → logprob: -10.651788711547852
    8. '=' → logprob: -10.901788711547852
    9. '<|end|>' → logprob: -10.901788711547852
    10. '<|end|>' → logprob: -11.901788711547852

Token 39: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.47772690653800964
    2. 'int' → logprob: -1.102726936340332
    3. ' float' → logprob: -3.227726936340332
    4. 'float' → logprob: -5.102726936340332
    5. ' ' → logprob: -6.477726936340332
    6. ' )' → logprob: -8.477726936340332
    7. ' i' → logprob: -9.227726936340332
    8. ')' → logprob: -9.477726936340332
    9. 'i' → logprob: -9.727726936340332
    10. ' in' → logprob: -9.852726936340332

Token 40: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001911432045744732
    2. ' ,' → logprob: -8.875190734863281
    3. ')' → logprob: -10.375190734863281
    4. '):' → logprob: -11.375190734863281
    5. ':' → logprob: -13.000190734863281
    6. '<|end|>' → logprob: -13.000190734863281
    7. ',int' → logprob: -13.375190734863281
    8. '<|end|>' → logprob: -14.250190734863281
    9. ' ' → logprob: -14.500190734863281
    10. '   ' → logprob: -14.500190734863281

Token 41: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.038263529539108276
    2. 'y' → logprob: -3.2882635593414307
    3. ' ' → logprob: -8.538263320922852
    4. '<|end|>' → logprob: -10.913263320922852
    5. ' ' → logprob: -12.913263320922852
    6. 'space' → logprob: -13.663263320922852
    7. '<|end|>' → logprob: -13.663263320922852
    8. '	y' → logprob: -14.538263320922852
    9. ' x' → logprob: -14.788263320922852
    10. 'x' → logprob: -14.788263320922852

Token 42: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.04619145393371582
    2. ')' → logprob: -3.671191453933716
    3. ',' → logprob: -4.921191215515137
    4. '):' → logprob: -5.296191215515137
    5. '<|end|>' → logprob: -5.421191215515137
    6. '=' → logprob: -6.296191215515137
    7. ':int' → logprob: -8.046191215515137
    8. '<|end|>' → logprob: -8.296191215515137
    9. ' )' → logprob: -8.546191215515137
    10. ' :' → logprob: -9.421191215515137

Token 43: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.4130779802799225
    2. 'int' → logprob: -1.1630779504776
    3. ' ' → logprob: -4.2880778312683105
    4. ':int' → logprob: -5.0380778312683105
    5. '=int' → logprob: -6.0380778312683105
    6. ' )' → logprob: -6.6630778312683105
    7. '<|end|>' → logprob: -7.0380778312683105
    8. ')' → logprob: -8.038078308105469
    9. '[int' → logprob: -8.288078308105469
    10. '<int' → logprob: -8.538078308105469

Token 44: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.004161502700299025
    2. ':' → logprob: -5.629161357879639
    3. ')' → logprob: -7.879161357879639
    4. '):' → logprob: -9.129161834716797
    5. ' ,' → logprob: -10.129161834716797
    6. ':int' → logprob: -10.629161834716797
    7. ',int' → logprob: -12.379161834716797
    8. '<|end|>' → logprob: -13.254161834716797
    9. '   ' → logprob: -14.004161834716797
    10. ' ' → logprob: -14.504161834716797

Token 45: ' z' (ID: 579)
  Prédit: ' z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.016566580161452293
    2. 'z' → logprob: -4.141566753387451
    3. ' int' → logprob: -7.766566753387451
    4. 'int' → logprob: -9.891566276550293
    5. ' x' → logprob: -10.766566276550293
    6. ' ' → logprob: -10.891566276550293
    7. ' ' → logprob: -11.766566276550293
    8. ':int' → logprob: -12.641566276550293
    9. ')' → logprob: -12.766566276550293
    10. ' )' → logprob: -13.641566276550293

Token 46: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08942782878875732
    2. '):' → logprob: -2.714427947998047
    3. ')' → logprob: -3.964427947998047
    4. ':int' → logprob: -8.839427947998047
    5. ' :' → logprob: -9.464427947998047
    6. ' ):' → logprob: -10.214427947998047
    7. '=' → logprob: -10.464427947998047
    8. ',' → logprob: -11.089427947998047
    9. ' )' → logprob: -12.714427947998047
    10. '   ' → logprob: -13.089427947998047

Token 47: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.20143964886665344
    2. 'int' → logprob: -1.701439619064331
    3. ')' → logprob: -11.70143985748291
    4. ' ' → logprob: -11.82643985748291
    5. ':int' → logprob: -12.07643985748291
    6. '=int' → logprob: -12.82643985748291
    7. '[int' → logprob: -14.32643985748291
    8. ' )' → logprob: -14.70143985748291
    9. '	int' → logprob: -14.95143985748291
    10. '(int' → logprob: -15.20143985748291

Token 48: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.005308346822857857
    2. ')' → logprob: -5.255308151245117
    3. ':' → logprob: -9.755308151245117
    4. ' ):' → logprob: -12.130308151245117
    5. '):
' → logprob: -12.380308151245117
    6. ''):' → logprob: -12.755308151245117
    7. '   ' → logprob: -13.505308151245117
    8. ',' → logprob: -13.505308151245117
    9. ')->' → logprob: -14.505308151245117
    10. ' ' → logprob: -15.380308151245117

Token 49: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.022076351568102837
    2. ')' → logprob: -4.64707612991333
    3. 'self' → logprob: -4.89707612991333
    4. ' self' → logprob: -6.52207612991333
    5. '   ' → logprob: -6.89707612991333
    6. ' )' → logprob: -7.64707612991333
    7. '    ' → logprob: -7.77207612991333
    8. ' ' → logprob: -8.022076606750488
    9. ',' → logprob: -8.147076606750488
    10. '):' → logprob: -8.147076606750488

Token 50: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.1686292439699173
    2. ' self' → logprob: -1.9186292886734009
    3. '       ' → logprob: -4.793629169464111
    4. '        ' → logprob: -9.54362964630127
    5. '   ' → logprob: -12.16862964630127
    6. ' ' → logprob: -12.41862964630127
    7. '```' → logprob: -13.04362964630127
    8. '           ' → logprob: -14.04362964630127
    9. '        
' → logprob: -14.41862964630127
    10. '    ' → logprob: -14.54362964630127

Token 51: '.x' (ID: 3700)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00011415231710998341
    2. '.x' → logprob: -9.125114440917969
    3. ' .' → logprob: -13.125114440917969
    4. '.)' → logprob: -13.875114440917969
    5. '<|end|>' → logprob: -15.000114440917969
    6. '‌.' → logprob: -15.625114440917969
    7. '.py' → logprob: -15.750114440917969
    8. ').' → logprob: -15.875114440917969
    9. ')' → logprob: -15.875114440917969
    10. '."""' → logprob: -16.00011444091797

Token 52: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.38793355226516724
    2. ' =' → logprob: -1.1379334926605225
    3. ',' → logprob: -7.387933731079102
    4. ' ' → logprob: -8.762933731079102
    5. '<|end|>' → logprob: -8.762933731079102
    6. ')' → logprob: -9.762933731079102
    7. ' =)' → logprob: -11.012933731079102
    8. ' ,' → logprob: -11.137933731079102
    9. '.' → logprob: -11.262933731079102
    10. '<|end|>' → logprob: -12.387933731079102

Token 53: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.10020667314529419
    2. ' x' → logprob: -2.3502066135406494
    3. '	x' → logprob: -17.97520637512207
    4. ' ' → logprob: -19.60020637512207
    5. ')x' → logprob: -20.10020637512207
    6. ' ' → logprob: -20.85020637512207
    7. '(x' → logprob: -21.60020637512207
    8. '"x' → logprob: -21.85020637512207
    9. '$x' → logprob: -21.97520637512207
    10. '{x' → logprob: -22.22520637512207

Token 54: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 55: '       ' (ID: 309)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 56: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.6686083674430847
    2. ' ' → logprob: -1.5436084270477295
    3. ' self' → logprob: -2.5436084270477295
    4. '       ' → logprob: -2.5436084270477295
    5. ' y' → logprob: -2.7936084270477295
    6. '        ' → logprob: -3.9186084270477295
    7. ',' → logprob: -4.29360818862915
    8. 'y' → logprob: -4.41860818862915
    9. '<|end|>' → logprob: -5.91860818862915
    10. ' ,' → logprob: -6.41860818862915

Token 57: '.y' (ID: 4486)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.004854922648519278
    2. '.y' → logprob: -6.004855155944824
    3. '<|end|>' → logprob: -6.879855155944824
    4. '<|end|>' → logprob: -6.879855155944824
    5. ')' → logprob: -9.004855155944824
    6. ' .' → logprob: -9.504855155944824
    7. ' ' → logprob: -10.504855155944824
    8. ',' → logprob: -10.879855155944824
    9. '.x' → logprob: -11.004855155944824
    10. 'y' → logprob: -11.504855155944824

Token 58: ' =' (ID: 314)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 59: ' y' (ID: 342)
  Prédit: ' y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' y' → logprob: -0.3132624924182892
    2. 'y' → logprob: -1.3132624626159668
    3. '<|end|>' → logprob: -14.813262939453125
    4. '	y' → logprob: -15.563262939453125
    5. ' ' → logprob: -16.063262939453125
    6. ')y' → logprob: -17.563262939453125
    7. ' ' → logprob: -17.688262939453125
    8. 'z' → logprob: -17.688262939453125
    9. ''y' → logprob: -18.063262939453125
    10. '(y' → logprob: -18.188262939453125

Token 60: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.014982354827225208
    2. ' z' → logprob: -5.889982223510742
    3. 'z' → logprob: -6.139982223510742
    4. '        ' → logprob: -6.139982223510742
    5. ' ' → logprob: -6.389982223510742
    6. ',' → logprob: -6.639982223510742
    7. 'self' → logprob: -6.764982223510742
    8. ')' → logprob: -7.514982223510742
    9. '   ' → logprob: -7.639982223510742
    10. '        
' → logprob: -7.639982223510742

Token 61: '       ' (ID: 309)
  Prédit: ' z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.185958594083786
    2. 'z' → logprob: -1.8109586238861084
    3. '       ' → logprob: -6.310958385467529
    4. ' ' → logprob: -6.685958385467529
    5. '        ' → logprob: -7.185958385467529
    6. ',' → logprob: -7.310958385467529
    7. '.z' → logprob: -7.685958385467529
    8. ' self' → logprob: -8.185958862304688
    9. 'self' → logprob: -8.435958862304688
    10. '    ' → logprob: -8.935958862304688

Token 62: ' self' (ID: 1051)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.3133372366428375
    2. ' z' → logprob: -1.3133372068405151
    3. ' ' → logprob: -9.813337326049805
    4. 'self' (adapté à ' self') → logprob: -11.688337326049805
    5. ' self' → logprob: -12.063337326049805
    6. '    ' → logprob: -13.938337326049805
    7. ' 
' → logprob: -14.313337326049805
    8. ',z' → logprob: -14.313337326049805
    9. '	z' → logprob: -14.313337326049805
    10. ' ' → logprob: -14.438337326049805

Token 63: '.z' (ID: 9161)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.014026464894413948
    2. '=' → logprob: -4.514026641845703
    3. ' =' → logprob: -6.389026641845703
    4. '.z' → logprob: -6.889026641845703
    5. ' .' → logprob: -9.264026641845703
    6. ')' → logprob: -9.764026641845703
    7. 'z' → logprob: -10.264026641845703
    8. ' ' → logprob: -10.639026641845703
    9. '.=' → logprob: -10.639026641845703
    10. '<|end|>' → logprob: -11.639026641845703

Token 64: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.5764014720916748
    2. '=' → logprob: -0.8264014720916748
    3. '<|end|>' → logprob: -7.826401710510254
    4. ')' → logprob: -10.576401710510254
    5. '<|end|>' → logprob: -10.951401710510254
    6. ' ' → logprob: -11.326401710510254
    7. ' =)' → logprob: -13.451401710510254
    8. ' )' → logprob: -13.701401710510254
    9. '_' → logprob: -13.951401710510254
    10. ' =
' → logprob: -14.076401710510254

Token 65: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.16022443771362305
    2. ' z' → logprob: -1.910224437713623
    3. '	z' → logprob: -15.160224914550781
    4. ' ' → logprob: -16.91022491455078
    5. ' ' → logprob: -16.91022491455078
    6. '   ' → logprob: -17.78522491455078
    7. '_z' → logprob: -18.53522491455078
    8. ''z' → logprob: -18.91022491455078
    9. '```' → logprob: -18.91022491455078
    10. '0' → logprob: -19.03522491455078

Token 66: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.045451581478118896
    2. '   ' → logprob: -3.2954516410827637
    3. '<|end|>' → logprob: -6.045451641082764
    4. '    
' → logprob: -6.295451641082764
    5. ' def' → logprob: -7.295451641082764
    6. '\n' → logprob: -7.295451641082764
    7. ' 
' → logprob: -7.420451641082764
    8. 'def' → logprob: -8.295451164245605
    9. ' ' → logprob: -8.420451164245605
    10. ',' → logprob: -8.795451164245605

Token 67: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.7810829877853394
    2. '
' → logprob: -1.1560829877853394
    3. ' def' → logprob: -1.9060829877853394
    4. 'def' → logprob: -3.906083106994629
    5. ' ' → logprob: -4.281083106994629
    6. '<|end|>' → logprob: -4.406083106994629
    7. '    
' → logprob: -4.781083106994629
    8. ' 
' → logprob: -5.281083106994629
    9. '\n' → logprob: -5.531083106994629
    10. ',' → logprob: -5.906083106994629

Token 68: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.0019254684448242
    2. '   ' → logprob: -1.2519254684448242
    3. ' def' → logprob: -1.3769254684448242
    4. ')' → logprob: -3.376925468444824
    5. '
' → logprob: -3.876925468444824
    6. '<|end|>' → logprob: -3.876925468444824
    7. ':' → logprob: -5.001925468444824
    8. ',' → logprob: -5.501925468444824
    9. '    
' → logprob: -6.001925468444824
    10. ' ' → logprob: -7.126925468444824

Token 69: ' neighbors' (ID: 31655)
  Prédit: ' '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.050066810101270676
    2. '_' → logprob: -3.4250667095184326
    3. ' __' → logprob: -4.300066947937012
    4. ' _' → logprob: -7.050066947937012
    5. '.' → logprob: -8.175066947937012
    6. '  ' → logprob: -8.175066947937012
    7. '_space' → logprob: -8.550066947937012
    8. ' space' → logprob: -8.800066947937012
    9. ' ' → logprob: -8.800066947937012
    10. ' .' → logprob: -8.925066947937012

Token 70: '(self' (ID: 2402)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.27283889055252075
    2. '(self' → logprob: -1.522838830947876
    3. ' (' → logprob: -4.022839069366455
    4. ':' → logprob: -7.522839069366455
    5. '(
' → logprob: -8.022838592529297
    6. '_' → logprob: -8.147838592529297
    7. '```' → logprob: -8.147838592529297
    8. 's' → logprob: -8.272838592529297
    9. ' ' → logprob: -8.272838592529297
    10. '<|end|>' → logprob: -8.772838592529297

Token 71: ',' (ID: 11)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.3541054427623749
    2. '):' → logprob: -1.2291054725646973
    3. ',' → logprob: -6.354105472564697
    4. ' )' → logprob: -7.229105472564697
    5. ' ):' → logprob: -7.229105472564697
    6. '(self' → logprob: -7.354105472564697
    7. ':' → logprob: -7.354105472564697
    8. 'self' → logprob: -7.354105472564697
    9. ' ' → logprob: -8.729104995727539
    10. '):
' → logprob: -8.854104995727539

Token 72: ' max' (ID: 2999)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.5847160220146179
    2. 'self' → logprob: -1.3347160816192627
    3. ' self' → logprob: -2.2097160816192627
    4. '):' → logprob: -3.4597160816192627
    5. ' )' → logprob: -3.4597160816192627
    6. ' ):' → logprob: -5.334715843200684
    7. ' ' → logprob: -7.084715843200684
    8. '(self' → logprob: -7.834715843200684
    9. '	self' → logprob: -8.584715843200684
    10. '):
' → logprob: -9.084715843200684

Token 73: '_dim' (ID: 23809)
  Prédit: '_distance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_distance' → logprob: -1.2092375755310059
    2. '_x' → logprob: -1.3342375755310059
    3. '_coord' → logprob: -1.5842375755310059
    4. '_coordinate' → logprob: -2.459237575531006
    5. '_range' → logprob: -2.834237575531006
    6. '_value' → logprob: -3.584237575531006
    7. '_val' → logprob: -3.709237575531006
    8. '_' → logprob: -4.584237575531006
    9. '_diff' → logprob: -5.209237575531006
    10. '_coords' → logprob: -5.209237575531006

Token 74: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3212752938270569
    2. 's' → logprob: -1.321275234222412
    3. 'ensions' → logprob: -5.571275234222412
    4. '):' → logprob: -5.821275234222412
    5. 'ension' → logprob: -6.946275234222412
    6. ')' → logprob: -8.69627571105957
    7. ':int' → logprob: -10.19627571105957
    8. ' :' → logprob: -10.69627571105957
    9. '=' → logprob: -11.94627571105957
    10. 'eter' → logprob: -12.94627571105957

Token 75: ' int' (ID: 677)
  Prédit: ' int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' int' → logprob: -0.5771597623825073
    2. 'int' → logprob: -0.8271597623825073
    3. ')' → logprob: -7.577159881591797
    4. '[int' → logprob: -7.952159881591797
    5. '3' → logprob: -8.952159881591797
    6. ' )' → logprob: -9.202159881591797
    7. '=int' → logprob: -9.952159881591797
    8. ' ' → logprob: -10.827159881591797
    9. ':int' → logprob: -11.077159881591797
    10. ',int' → logprob: -11.202159881591797

Token 76: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.002532736863940954
    2. '):' → logprob: -6.002532958984375
    3. ',' → logprob: -10.377532958984375
    4. ':' → logprob: -11.127532958984375
    5. ')->' → logprob: -12.002532958984375
    6. ' )' → logprob: -13.752532958984375
    7. '=' → logprob: -14.002532958984375
    8. '):
' → logprob: -14.252532958984375
    9. '   ' → logprob: -14.377532958984375
    10. '`)' → logprob: -14.627532958984375

Token 77: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.3151775002479553
    2. ')' → logprob: -1.8151774406433105
    3. ' ->' → logprob: -2.4401774406433105
    4. '->' → logprob: -4.3151774406433105
    5. ')->' → logprob: -5.6901774406433105
    6. '):' → logprob: -5.6901774406433105
    7. ',' → logprob: -9.315177917480469
    8. '   ' → logprob: -9.690177917480469
    9. '       ' → logprob: -10.190177917480469
    10. ' :' → logprob: -11.565177917480469

Token 78: ' Iterator' (ID: 41994)
  Prédit: ' Iterator'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' Iterator' → logprob: -0.1884407252073288
    2. 'Iterator' → logprob: -1.8134406805038452
    3. 'List' → logprob: -5.438440799713135
    4. ' List' → logprob: -5.938440799713135
    5. ''' → logprob: -7.313440799713135
    6. '	Iterator' → logprob: -7.938440799713135
    7. 'Set' → logprob: -8.063440322875977
    8. ' Set' → logprob: -9.313440322875977
    9. ' ' → logprob: -9.438440322875977
    10. ' '' → logprob: -9.938440322875977

Token 79: '['' (ID: 1181)
  Prédit: '[''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '['' → logprob: -0.47616714239120483
    2. '[' → logprob: -0.9761671423912048
    3. '["' → logprob: -6.22616720199585
    4. '[['' → logprob: -9.976166725158691
    5. '[
' → logprob: -10.851166725158691
    6. '[`' → logprob: -11.851166725158691
    7. ''' → logprob: -11.976166725158691
    8. '[int' → logprob: -11.976166725158691
    9. '[Index' → logprob: -11.976166725158691
    10. '[...]' → logprob: -12.351166725158691

Token 80: 'Coordinate' (ID: 40872)
  Prédit: 'Coordinate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -2.45848218582978e-06
    2. 'Coord' → logprob: -14.12500286102295
    3. ' Coordinate' → logprob: -14.75000286102295
    4. 'Co' → logprob: -14.87500286102295
    5. 'C' → logprob: -15.00000286102295
    6. 'Coordinates' → logprob: -15.12500286102295
    7. '_coordinate' → logprob: -15.62500286102295
    8. 'Coordinator' → logprob: -17.000001907348633
    9. 'coordinate' → logprob: -17.125001907348633
    10. ')' → logprob: -17.625001907348633

Token 81: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. ' ' → logprob: -18.125
    3. 'Coordinate' → logprob: -18.5
    4. '```' → logprob: -19.375
    5. '')' → logprob: -21.0
    6. '   ' → logprob: -21.0
    7. '' → logprob: -21.125
    8. '  ' → logprob: -21.125
    9. '<|end|>' → logprob: -21.125
    10. ''' → logprob: -21.25

Token 82: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.9361264946837764e-07
    2. 'Coordinate' → logprob: -17.25
    3. 'd' → logprob: -17.375
    4. ' D' → logprob: -17.375
    5. '3' → logprob: -17.5
    6. '')' → logprob: -17.625
    7. ''D' → logprob: -17.625
    8. ''' → logprob: -17.875
    9. ')' → logprob: -17.875
    10. '4' → logprob: -18.5

Token 83: '']:
' (ID: 44766)
  Prédit: '']:'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '']:' → logprob: -0.03044833429157734
    2. '']' → logprob: -4.1554484367370605
    3. ']:' → logprob: -4.2804484367370605
    4. ']' → logprob: -9.030447959899902
    5. ''):' → logprob: -9.155447959899902
    6. '"]:' → logprob: -9.155447959899902
    7. '']:
' → logprob: -9.905447959899902
    8. '):' → logprob: -10.655447959899902
    9. '':' → logprob: -10.780447959899902
    10. ''' → logprob: -10.905447959899902

Token 84: '       ' (ID: 309)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.16448524594306946
    2. '       ' → logprob: -1.914485216140747
    3. '
' → logprob: -6.914485454559326
    4. '):' → logprob: -7.164485454559326
    5. '    ' → logprob: -7.664485454559326
    6. '   ' → logprob: -7.664485454559326
    7. ':
' → logprob: -8.039484977722168
    8. '        
' → logprob: -8.039484977722168
    9. ',' → logprob: -8.539484977722168
    10. ' :' → logprob: -8.664484977722168

Token 85: ' #' (ID: 1069)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.7779508233070374
    2. '       ' → logprob: -1.0279507637023926
    3. '
' → logprob: -2.6529507637023926
    4. 'for' → logprob: -2.7779507637023926
    5. ' 
' → logprob: -3.7779507637023926
    6. '        
' → logprob: -4.902950763702393
    7. '\n' → logprob: -5.152950763702393
    8. '        ' → logprob: -5.652950763702393
    9. '```' → logprob: -5.777950763702393
    10. '[' → logprob: -6.402950763702393

Token 86: ' Generate' (ID: 33886)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.04932282865047455
    2. 'for' → logprob: -3.0493228435516357
    3. '        ' → logprob: -8.049323081970215
    4. ' directions' → logprob: -8.299323081970215
    5. '       ' → logprob: -9.799323081970215
    6. '```' → logprob: -10.549323081970215
    7. ' x' → logprob: -11.174323081970215
    8. '    ' → logprob: -11.299323081970215
    9. ' ranges' → logprob: -12.174323081970215
    10. '	for' → logprob: -12.299323081970215

Token 87: ' all' (ID: 722)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 88: ' ' (ID: 220)
  Prédit: ' neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' neighbors' → logprob: -1.1574311256408691
    2. '<|end|>' → logprob: -1.1574311256408691
    3. ' neighbor' → logprob: -2.657431125640869
    4. 'neighbor' → logprob: -3.032431125640869
    5. 'neighbors' → logprob: -3.032431125640869
    6. ' (' → logprob: -3.157431125640869
    7. ' neighboring' → logprob: -3.282431125640869
    8. '_neighbors' → logprob: -3.782431125640869
    9. '        ' → logprob: -4.157431125640869
    10. ' possible' → logprob: -4.782431125640869

Token 89: '26' (ID: 2109)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -1.219710350036621
    2. 'neighbors' → logprob: -1.219710350036621
    3. 'dx' → logprob: -1.469710350036621
    4. 'coordinates' → logprob: -3.469710350036621
    5. ' neighbors' → logprob: -3.969710350036621
    6. ' dx' → logprob: -4.219710350036621
    7. 'adj' → logprob: -4.344710350036621
    8. 'possible' → logprob: -4.594710350036621
    9. 'self' → logprob: -4.719710350036621
    10. 'd' → logprob: -4.719710350036621

Token 90: ' neighbors' (ID: 31655)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 91: ' in' (ID: 306)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.12024043500423431
    2. '       ' → logprob: -2.6202404499053955
    3. '<|end|>' → logprob: -3.8702404499053955
    4. ',' → logprob: -4.620240211486816
    5. '):' → logprob: -5.745240211486816
    6. '
' → logprob: -6.245240211486816
    7. '        
' → logprob: -7.120240211486816
    8. '        ' → logprob: -7.370240211486816
    9. ':
' → logprob: -7.495240211486816
    10. ' for' → logprob: -7.620240211486816

Token 92: ' ' (ID: 220)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5674054026603699
    2. ' ' → logprob: -2.5674054622650146
    3. ' the' → logprob: -2.5674054622650146
    4. ' [
' → logprob: -2.6924054622650146
    5. ' (
' → logprob: -3.3174054622650146
    6. 'range' → logprob: -3.3174054622650146
    7. ' [' → logprob: -3.6924054622650146
    8. ' (' → logprob: -3.8174054622650146
    9. ' three' → logprob: -4.3174052238464355
    10. ' [-' → logprob: -4.6924052238464355

Token 93: '3' (ID: 18)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.4962918758392334
    2. ' range' → logprob: -1.7462918758392334
    3. '[
' → logprob: -2.6212918758392334
    4. '[' → logprob: -3.1212918758392334
    5. '[-' → logprob: -3.7462918758392334
    6. ' ' → logprob: -4.7462921142578125
    7. '3' → logprob: -4.7462921142578125
    8. 'the' → logprob: -4.8712921142578125
    9. '(' → logprob: -4.8712921142578125
    10. '(
' → logprob: -5.2462921142578125

Token 94: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.17217370867729187
    2. 'd' → logprob: -1.9221737384796143
    3. 'x' → logprob: -4.672173500061035
    4. '-' → logprob: -6.297173500061035
    5. '-dimensional' → logprob: -8.047173500061035
    6. '-d' → logprob: -8.797173500061035
    7. 'dim' → logprob: -10.297173500061035
    8. '-D' → logprob: -10.672173500061035
    9. ',' → logprob: -10.797173500061035
    10. ' D' → logprob: -10.922173500061035

Token 95: ',' (ID: 11)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.06577560305595398
    2. '
' → logprob: -3.4407756328582764
    3. '       ' → logprob: -3.9407756328582764
    4. ':
' → logprob: -5.065775394439697
    5. ',' → logprob: -6.440775394439697
    6. '   ' → logprob: -7.315775394439697
    7. '):' → logprob: -7.315775394439697
    8. ' for' → logprob: -7.565775394439697
    9. '        
' → logprob: -7.565775394439697
    10. '' → logprob: -7.940775394439697

Token 96: ' excluding' (ID: 76651)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.2630399167537689
    2. '        ' → logprob: -2.2630398273468018
    3. ' ' → logprob: -3.1380398273468018
    4. ' for' → logprob: -3.1380398273468018
    5. '<|end|>' → logprob: -4.013040065765381
    6. '        
' → logprob: -5.138040065765381
    7. '    ' → logprob: -5.513040065765381
    8. '   ' → logprob: -5.888040065765381
    9. 'for' → logprob: -6.138040065765381
    10. '  ' → logprob: -6.263040065765381

Token 97: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6530789732933044
    2. ' self' → logprob: -0.7780789732933044
    3. ' (' → logprob: -4.528079032897949
    4. ' itself' → logprob: -4.903079032897949
    5. ' the' → logprob: -6.778079032897949
    6. '(self' → logprob: -8.40307903289795
    7. '```' → logprob: -9.15307903289795
    8. '<|end|>' → logprob: -9.40307903289795
    9. ' Coordinate' → logprob: -9.77807903289795
    10. ' coordinate' → logprob: -10.15307903289795

Token 98: '
' (ID: 198)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.02396083064377308
    2. '       ' → logprob: -4.773961067199707
    3. '
' → logprob: -5.023961067199707
    4. ':
' → logprob: -5.273961067199707
    5. '):' → logprob: -6.898961067199707
    6. ',' → logprob: -7.023961067199707
    7. '        
' → logprob: -7.773961067199707
    8. '<|end|>' → logprob: -8.023961067199707
    9. ' :' → logprob: -8.273961067199707
    10. '' → logprob: -8.898961067199707

Token 99: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.09752275049686432
    2. ':' → logprob: -2.597522735595703
    3. '
' → logprob: -4.597522735595703
    4. '        
' → logprob: -5.597522735595703
    5. ',' → logprob: -6.222522735595703
    6. '\n' → logprob: -7.472522735595703
    7. ':
' → logprob: -7.722522735595703
    8. '):' → logprob: -8.222522735595703
    9. '\' → logprob: -8.222522735595703
    10. '   ' → logprob: -8.347522735595703

Token 100: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14889711141586304
    2. ' for' → logprob: -2.023897171020508
    3. 'for' (adapté à ' for') → logprob: -5.898897171020508
    4. '
' → logprob: -7.148897171020508
    5. '        
' → logprob: -7.398897171020508
    6. '        ' → logprob: -7.523897171020508
    7. '    ' → logprob: -7.648897171020508
    8. '   ' → logprob: -8.273897171020508
    9. ' 
' → logprob: -8.273897171020508
    10. ' ' → logprob: -9.273897171020508

Token 101: ' dz' (ID: 17303)
  Prédit: ' dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dx' → logprob: -0.0006981384940445423
    2. ' nx' → logprob: -7.750698089599609
    3. 'dx' → logprob: -8.50069808959961
    4. ' dz' → logprob: -10.00069808959961
    5. '   ' → logprob: -12.37569808959961
    6. ' x' → logprob: -13.00069808959961
    7. '_dx' → logprob: -13.00069808959961
    8. ' xd' → logprob: -13.62569808959961
    9. ' z' → logprob: -13.75069808959961
    10. ' ' → logprob: -13.87569808959961

Token 102: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0015328321605920792
    2. 'in' → logprob: -6.626533031463623
    3. '-' → logprob: -8.876532554626465
    4. ' -' → logprob: -10.251532554626465
    5. ' ' → logprob: -10.876532554626465
    6. ',' → logprob: -12.501532554626465
    7. ' i' → logprob: -13.626532554626465
    8. ' =' → logprob: -13.626532554626465
    9. '	in' → logprob: -14.001532554626465
    10. '       ' → logprob: -14.126532554626465

Token 103: ' (-' (ID: 21382)
  Prédit: ' range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.011297976598143578
    2. ' (-' → logprob: -5.136298179626465
    3. ' [-' → logprob: -5.636298179626465
    4. 'range' → logprob: -6.511298179626465
    5. '[-' → logprob: -8.261298179626465
    6. '(-' → logprob: -10.886298179626465
    7. ' ' → logprob: -11.011298179626465
    8. ' -' → logprob: -13.261298179626465
    9. '	range' → logprob: -13.261298179626465
    10. ' xrange' → logprob: -13.636298179626465

Token 104: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -11.750007629394531
    3. '```' → logprob: -18.93750762939453
    4. '<|end|>' → logprob: -19.56250762939453
    5. '   ' → logprob: -19.75000762939453
    6. '
' → logprob: -19.75000762939453
    7. '১' → logprob: -20.43750762939453
    8. '  ' → logprob: -20.43750762939453
    9. '१' → logprob: -20.56250762939453
    10. '' → logprob: -20.68750762939453

Token 105: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011048642918467522
    2. ' ,' → logprob: -4.511048793792725
    3. ' ' → logprob: -14.636048316955566
    4. '1' → logprob: -15.636048316955566
    5. '<|end|>' → logprob: -16.136049270629883
    6. ',
' → logprob: -17.011049270629883
    7. '‌,' → logprob: -17.886049270629883
    8. ' ,
' → logprob: -17.886049270629883
    9. '',' → logprob: -18.136049270629883
    10. ')' → logprob: -18.636049270629883

Token 106: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.3868713676929474
    2. ' ' → logprob: -1.136871337890625
    3. ' 
' → logprob: -15.886871337890625
    4. ')' → logprob: -16.886871337890625
    5. ' ' → logprob: -16.886871337890625
    6. '1' → logprob: -17.386871337890625
    7. '  ' → logprob: -17.699371337890625
    8. ' 

' → logprob: -17.761871337890625
    9. '۰' → logprob: -18.074371337890625
    10. '

' → logprob: -18.324371337890625

Token 107: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00033546582562848926
    2. ' ' → logprob: -8.000335693359375
    3. '1' → logprob: -18.000335693359375
    4. '۰' → logprob: -18.500335693359375
    5. '  ' → logprob: -20.250335693359375
    6. '   ' → logprob: -20.375335693359375
    7. ')' → logprob: -20.937835693359375
    8. '０' → logprob: -21.125335693359375
    9. ',' → logprob: -21.562835693359375
    10. '    ' → logprob: -21.750335693359375

Token 108: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.020588131621479988
    2. ' ,' → logprob: -3.8955881595611572
    3. ')' → logprob: -10.645587921142578
    4. ' ' → logprob: -11.770587921142578
    5. '<|end|>' → logprob: -12.395587921142578
    6. '   ' → logprob: -13.020587921142578
    7. ' )' → logprob: -13.145587921142578
    8. '1' → logprob: -13.270587921142578
    9. ',
' → logprob: -13.895587921142578
    10. '  ' → logprob: -14.270587921142578

Token 109: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2254222184419632
    2. ' ' → logprob: -1.6004222631454468
    3. '+' → logprob: -11.850421905517578
    4. ' +' → logprob: -13.725421905517578
    5. ')' → logprob: -14.225421905517578
    6. '```' → logprob: -15.600421905517578
    7. '  ' → logprob: -15.975421905517578
    8. '   ' → logprob: -16.537921905517578
    9. ',' → logprob: -16.725421905517578
    10. '    ' → logprob: -16.912921905517578

Token 110: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.696889623621246e-06
    2. ' ' → logprob: -13.12500286102295
    3. '+' → logprob: -14.37500286102295
    4. ')' → logprob: -19.750001907348633
    5. '<|end|>' → logprob: -19.875001907348633
    6. ' +' → logprob: -20.875001907348633
    7. '```' → logprob: -21.000001907348633
    8. '۱' → logprob: -21.500001907348633
    9. '+)' → logprob: -21.500001907348633
    10. '১' → logprob: -22.187501907348633

Token 111: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.002438432304188609
    2. '):
' → logprob: -6.127438545227051
    3. '       ' → logprob: -9.12743854522705
    4. ')' → logprob: -9.50243854522705
    5. ' ):' → logprob: -10.00243854522705
    6. ':' → logprob: -11.37743854522705
    7. '   ' → logprob: -12.25243854522705
    8. ',' → logprob: -12.50243854522705
    9. '):

' → logprob: -13.62743854522705
    10. '           ' → logprob: -13.87743854522705

Token 112: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 113: ' nz' (ID: 32428)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.7794003486633301
    2. '               ' → logprob: -0.9044003486633301
    3. ' for' → logprob: -2.02940034866333
    4. '            ' → logprob: -6.02940034866333
    5. 'for' → logprob: -6.40440034866333
    6. '       ' → logprob: -7.15440034866333
    7. '        ' → logprob: -9.654399871826172
    8. '             ' → logprob: -9.654399871826172
    9. '                ' → logprob: -9.779399871826172
    10. ' ' → logprob: -11.029399871826172

Token 114: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05546732246875763
    2. '=' → logprob: -2.930467367172241
    3. ' ' → logprob: -7.930467128753662
    4. ',' → logprob: -9.68046760559082
    5. ' in' → logprob: -9.80546760559082
    6. ':' → logprob: -11.18046760559082
    7. 's' → logprob: -11.18046760559082
    8. ')' → logprob: -11.30546760559082
    9. '.' → logprob: -11.80546760559082
    10. '        ' → logprob: -11.93046760559082

Token 115: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.20153827965259552
    2. 'self' → logprob: -1.701538324356079
    3. '           ' → logprob: -9.4515380859375
    4. '   ' → logprob: -10.7015380859375
    5. ' ' → logprob: -12.2015380859375
    6. '               ' → logprob: -12.2015380859375
    7. '       ' → logprob: -12.7015380859375
    8. '	self' → logprob: -12.9515380859375
    9. '(self' → logprob: -13.3265380859375
    10. ' max' → logprob: -13.5765380859375

Token 116: '.z' (ID: 9161)
  Prédit: '.z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.z' → logprob: -6.630610641877865e-06
    2. '.' → logprob: -12.750006675720215
    3. 'z' → logprob: -13.000006675720215
    4. ' .' → logprob: -13.750006675720215
    5. '	z' → logprob: -15.875006675720215
    6. '```' → logprob: -17.2500057220459
    7. 'Z' → logprob: -17.7500057220459
    8. '   ' → logprob: -18.0000057220459
    9. '`.' → logprob: -18.0000057220459
    10. ' ' → logprob: -18.1250057220459

Token 117: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.07890807837247849
    2. '+' → logprob: -2.5789079666137695
    3. ' ' → logprob: -11.07890796661377
    4. ' +
' → logprob: -13.57890796661377
    5. '+n' → logprob: -15.07890796661377
    6. '+
' → logprob: -15.32890796661377
    7. '+d' → logprob: -15.32890796661377
    8. ' ' → logprob: -15.70390796661377
    9. '+self' → logprob: -16.078908920288086
    10. '+i' → logprob: -16.328908920288086

Token 118: ' dz' (ID: 17303)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dz' → logprob: -0.20145104825496674
    2. ' dz' → logprob: -1.701451063156128
    3. 'z' → logprob: -11.201451301574707
    4. '   ' → logprob: -11.701451301574707
    5. ' ' → logprob: -12.326451301574707
    6. '           ' → logprob: -12.826451301574707
    7. '1' → logprob: -12.951451301574707
    8. '    ' → logprob: -13.826451301574707
    9. '  ' → logprob: -14.076451301574707
    10. 'd' → logprob: -14.326451301574707

Token 119: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.21301518380641937
    2. '<|end|>' → logprob: -1.8380151987075806
    3. '       ' → logprob: -4.338015079498291
    4. '<|end|>' → logprob: -5.338015079498291
    5. '
' → logprob: -5.463015079498291
    6. '               ' → logprob: -5.588015079498291
    7. '```' → logprob: -5.963015079498291
    8. ',' → logprob: -6.338015079498291
    9. ':' → logprob: -7.588015079498291
    10. ')' → logprob: -7.838015079498291

Token 120: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1857069730758667
    2. '       ' → logprob: -2.3107070922851562
    3. '<|end|>' → logprob: -3.5607070922851562
    4. '               ' → logprob: -4.310707092285156
    5. ' if' → logprob: -4.310707092285156
    6. ' ' → logprob: -5.560707092285156
    7. '
' → logprob: -5.810707092285156
    8. '            
' → logprob: -6.185707092285156
    9. '        ' → logprob: -7.060707092285156
    10. '            ' → logprob: -7.060707092285156

Token 121: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.3640406131744385
    2. '           ' → logprob: -1.6140406131744385
    3. '
' → logprob: -2.9890406131744385
    4. 'if' (adapté à ' if') → logprob: -3.2390406131744385
    5. '       ' → logprob: -4.989040374755859
    6. ' ' → logprob: -5.364040374755859
    7. '            
' → logprob: -6.489040374755859
    8. '<|end|>' → logprob: -7.114040374755859
    9. '               ' → logprob: -7.489040374755859
    10. ' 
' → logprob: -7.489040374755859

Token 122: ' ' (ID: 220)
  Prédit: ' not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.949929416179657
    2. ' ' → logprob: -1.0749294757843018
    3. ' nz' → logprob: -1.6999294757843018
    4. '0' → logprob: -2.5749294757843018
    5. 'nz' → logprob: -4.574929237365723
    6. 'not' → logprob: -6.074929237365723
    7. '1' → logprob: -8.574929237365723
    8. ' Nz' → logprob: -9.699929237365723
    9. ' (' → logprob: -9.949929237365723
    10. '```' → logprob: -10.574929237365723

Token 123: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.035872682929039
    2. 'not' → logprob: -4.035872459411621
    3. ' not' → logprob: -4.910872459411621
    4. 'nz' → logprob: -5.285872459411621
    5. ' ' → logprob: -5.785872459411621
    6. ' nz' → logprob: -6.285872459411621
    7. 'n' → logprob: -9.910872459411621
    8. '   ' → logprob: -10.535872459411621
    9. '(n' → logprob: -10.660872459411621
    10. '<n' → logprob: -11.223372459411621

Token 124: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.029797932133078575
    2. '<=' → logprob: -3.5297980308532715
    3. ' <' → logprob: -10.904797554016113
    4. ' ' → logprob: -11.404797554016113
    5. '<' → logprob: -11.654797554016113
    6. ' >' → logprob: -12.404797554016113
    7. '>' → logprob: -12.904797554016113
    8. ')' → logprob: -14.779797554016113
    9. '...' → logprob: -15.279797554016113
    10. 'and' → logprob: -15.529797554016113

Token 125: ' nz' (ID: 32428)
  Prédit: 'nz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nz' → logprob: -0.07889717072248459
    2. ' nz' → logprob: -2.57889723777771
    3. '.nz' → logprob: -12.828897476196289
    4. 'n' → logprob: -12.828897476196289
    5. '
' → logprob: -13.953897476196289
    6. 'Nz' → logprob: -14.453897476196289
    7. 'zn' → logprob: -15.703897476196289
    8. ' ' → logprob: -16.82889747619629
    9. 'nx' → logprob: -16.95389747619629
    10. '           ' → logprob: -17.32889747619629

Token 126: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.4741246700286865
    2. '<' → logprob: -0.9741246700286865
    3. ' and' → logprob: -10.349124908447266
    4. 'and' → logprob: -11.599124908447266
    5. '<n' → logprob: -13.349124908447266
    6. ' ' → logprob: -13.474124908447266
    7. '<|end|>' → logprob: -13.724124908447266
    8. '<size' → logprob: -14.099124908447266
    9. '<len' → logprob: -14.974124908447266
    10. '<int' → logprob: -15.349124908447266

Token 127: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.3132633566856384
    2. ' max' → logprob: -1.3132634162902832
    3. '           ' → logprob: -14.438262939453125
    4. ' ' → logprob: -14.813262939453125
    5. '(max' → logprob: -15.563262939453125
    6. '[max' → logprob: -16.063262939453125
    7. '	max' → logprob: -16.188262939453125
    8. '
' → logprob: -16.313262939453125
    9. '=max' → logprob: -16.563262939453125
    10. '_max' → logprob: -16.938262939453125

Token 128: '_dim' (ID: 23809)
  Prédit: '_dim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dim' → logprob: -9.088346359931165e-07
    2. 'dim' → logprob: -14.500000953674316
    3. '_' → logprob: -15.500000953674316
    4. '_DIM' → logprob: -16.625
    5. 'Dim' → logprob: -18.125
    6. '_dims' → logprob: -18.375
    7. '_d' → logprob: -18.375
    8. '_dom' → logprob: -19.0
    9. '_
' → logprob: -19.5
    10. '
' → logprob: -19.75

Token 129: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01615401916205883
    2. ':
' → logprob: -4.266153812408447
    3. ' and' → logprob: -6.516153812408447
    4. '):' → logprob: -8.516154289245605
    5. '           ' → logprob: -9.266154289245605
    6. ' :' → logprob: -9.766154289245605
    7. '               ' → logprob: -9.891154289245605
    8. 'and' → logprob: -10.766154289245605
    9. '):
' → logprob: -10.766154289245605
    10. ',' → logprob: -11.016154289245605

Token 130: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014190420042723417
    2. '           ' → logprob: -7.5014190673828125
    3. ':' → logprob: -7.7514190673828125
    4. '                
' → logprob: -9.251419067382812
    5. '<|end|>' → logprob: -9.751419067382812
    6. '
' → logprob: -10.001419067382812
    7. '       ' → logprob: -10.126419067382812
    8. '                ' → logprob: -10.376419067382812
    9. '\n' → logprob: -10.376419067382812
    10. '                   ' → logprob: -10.751419067382812

Token 131: ' for' (ID: 395)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.06554518640041351
    2. ' for' → logprob: -3.690545082092285
    3. '                ' → logprob: -3.815545082092285
    4. '                   ' → logprob: -4.815545082092285
    5. 'for' (adapté à ' for') → logprob: -5.815545082092285
    6. '           ' → logprob: -6.315545082092285
    7. '
' → logprob: -6.565545082092285
    8. '            ' → logprob: -7.440545082092285
    9. '                
' → logprob: -7.565545082092285
    10. ' 
' → logprob: -8.440545082092285

Token 132: ' dy' (ID: 11996)
  Prédit: ' dy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' dy' → logprob: -0.007824753411114216
    2. 'dy' → logprob: -4.882824897766113
    3. '   ' → logprob: -9.632824897766113
    4. ' ' → logprob: -9.757824897766113
    5. ' dx' → logprob: -10.007824897766113
    6. ' ny' → logprob: -11.132824897766113
    7. '  ' → logprob: -11.882824897766113
    8. ' ' → logprob: -12.382824897766113
    9. ' (' → logprob: -12.382824897766113
    10. '

' → logprob: -12.382824897766113

Token 133: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0005236041033640504
    2. 'in' → logprob: -7.625523567199707
    3. ' ' → logprob: -10.625523567199707
    4. '<|end|>' → logprob: -11.875523567199707
    5. ' (' → logprob: -13.250523567199707
    6. ' (-' → logprob: -14.000523567199707
    7. '<|end|>' → logprob: -14.625523567199707
    8. '            ' → logprob: -15.625523567199707
    9. '(-' → logprob: -16.063024520874023
    10. ' ' → logprob: -16.250524520874023

Token 134: ' (-' (ID: 21382)
  Prédit: ' (-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (-' → logprob: -0.05491173639893532
    2. '(-' → logprob: -2.9299118518829346
    3. ' (' → logprob: -10.804911613464355
    4. '(' → logprob: -12.929911613464355
    5. ' ' → logprob: -12.929911613464355
    6. '-' → logprob: -13.679911613464355
    7. ' -' → logprob: -14.054911613464355
    8. ' range' → logprob: -14.179911613464355
    9. 'range' → logprob: -14.429911613464355
    10. '[-' → logprob: -14.429911613464355

Token 135: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.580929347255733e-05
    2. ' ' → logprob: -11.125016212463379
    3. '<|end|>' → logprob: -14.000016212463379
    4. ',' → logprob: -17.250015258789062
    5. '   ' → logprob: -17.500015258789062
    6. '<|end|>' → logprob: -17.625015258789062
    7. '  ' → logprob: -17.750015258789062
    8. '```' → logprob: -18.312515258789062
    9. '

' → logprob: -18.562515258789062
    10. '-' → logprob: -18.562515258789062

Token 136: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.000630947935860604
    2. ' ,' → logprob: -7.375630855560303
    3. ')' → logprob: -13.500631332397461
    4. '<|end|>' → logprob: -13.625631332397461
    5. ' ' → logprob: -14.500631332397461
    6. '           ' → logprob: -15.000631332397461
    7. ',
' → logprob: -15.250631332397461
    8. '               ' → logprob: -15.875631332397461
    9. '(' → logprob: -16.00063133239746
    10. '0' → logprob: -16.12563133239746

Token 137: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.6326044797897339
    2. ' ' → logprob: -0.7576044797897339
    3. '<|end|>' → logprob: -12.757604598999023
    4. ' ' → logprob: -14.132604598999023
    5. '  ' → logprob: -14.757604598999023
    6. '1' → logprob: -14.757604598999023
    7. ')' → logprob: -15.320104598999023
    8. '```' → logprob: -15.570104598999023
    9. ',' → logprob: -16.195104598999023
    10. '   ' → logprob: -16.570104598999023

Token 138: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002185472520068288
    2. ' ' → logprob: -6.127185344696045
    3. ',' → logprob: -15.627185821533203
    4. '<|end|>' → logprob: -16.252185821533203
    5. '1' → logprob: -16.627185821533203
    6. '  ' → logprob: -17.377185821533203
    7. '[' → logprob: -18.627185821533203
    8. ' ,' → logprob: -18.814685821533203
    9. '۰' → logprob: -19.127185821533203
    10. '   ' → logprob: -19.314685821533203

Token 139: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0015081972815096378
    2. ' ,' → logprob: -6.5015082359313965
    3. '               ' → logprob: -13.126507759094238
    4. ' ' → logprob: -13.626507759094238
    5. ')' → logprob: -14.251507759094238
    6. '           ' → logprob: -14.751507759094238
    7. '```' → logprob: -15.001507759094238
    8. '1' → logprob: -15.126507759094238
    9. ',
' → logprob: -15.626507759094238
    10. '                   ' → logprob: -16.001508712768555

Token 140: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.10020828247070312
    2. ' ' → logprob: -2.350208282470703
    3. '<|end|>' → logprob: -14.725208282470703
    4. '0' → logprob: -15.100208282470703
    5. ')' → logprob: -15.100208282470703
    6. ' ' → logprob: -15.225208282470703
    7. '```' → logprob: -15.350208282470703
    8. ' )' → logprob: -17.225208282470703
    9. '  ' → logprob: -17.350208282470703
    10. ',' → logprob: -17.787708282470703

Token 141: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.52919222577475e-05
    2. ' ' → logprob: -9.500075340270996
    3. '```' → logprob: -15.750075340270996
    4. '0' → logprob: -16.50007438659668
    5. '   ' → logprob: -16.87507438659668
    6. ')' → logprob: -16.87507438659668
    7. '           ' → logprob: -18.56257438659668
    8. '+' → logprob: -18.56257438659668
    9. '  ' → logprob: -18.62507438659668
    10. '               ' → logprob: -18.75007438659668

Token 142: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.0028174780309200287
    2. '):
' → logprob: -6.002817630767822
    3. '               ' → logprob: -9.127817153930664
    4. '                   ' → logprob: -9.377817153930664
    5. ' ):' → logprob: -9.502817153930664
    6. ')' → logprob: -10.752817153930664
    7. ':' → logprob: -10.877817153930664
    8. ',' → logprob: -11.127817153930664
    9. '           ' → logprob: -11.877817153930664
    10. '):

' → logprob: -12.627817153930664

Token 143: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0241351630538702
    2. '                ' → logprob: -4.774135112762451
    3. '                    ' → logprob: -4.899135112762451
    4. '               ' → logprob: -6.024135112762451
    5. ' ' → logprob: -6.274135112762451
    6. '                 ' → logprob: -7.274135112762451
    7. '           ' → logprob: -7.524135112762451
    8. '                       ' → logprob: -7.524135112762451
    9. '                  ' → logprob: -7.524135112762451
    10. '    ' → logprob: -8.39913558959961

Token 144: ' ny' (ID: 4423)
  Prédit: ' ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ny' → logprob: -0.010056846775114536
    2. 'ny' (adapté à ' ny') → logprob: -4.635056972503662
    3. '                    ' → logprob: -9.510056495666504
    4. '                     ' → logprob: -9.760056495666504
    5. '                       ' → logprob: -10.135056495666504
    6. ' nd' → logprob: -10.510056495666504
    7. '```' → logprob: -11.010056495666504
    8. '                   ' → logprob: -11.135056495666504
    9. 'n' → logprob: -11.385056495666504
    10. ' n' → logprob: -11.510056495666504

Token 145: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.061968810856342316
    2. '=' → logprob: -2.8119688034057617
    3. ' ' → logprob: -13.811968803405762
    4. ' =
' → logprob: -16.936969757080078
    5. ')' → logprob: -17.936969757080078
    6. ' ' → logprob: -18.936969757080078
    7. '=
' → logprob: -18.936969757080078
    8. ',' → logprob: -19.061969757080078
    9. 's' → logprob: -19.561969757080078
    10. '=int' → logprob: -19.811969757080078

Token 146: ' self' (ID: 1051)
  Prédit: ' self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' self' → logprob: -0.5759458541870117
    2. 'self' → logprob: -0.8259458541870117
    3. '(self' → logprob: -12.950945854187012
    4. ' ' → logprob: -13.825945854187012
    5. '	self' → logprob: -13.825945854187012
    6. '           ' → logprob: -14.325945854187012
    7. '   ' → logprob: -14.700945854187012
    8. '=self' → logprob: -15.450945854187012
    9. '[self' → logprob: -15.450945854187012
    10. '
' → logprob: -16.200946807861328

Token 147: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -9.2576454335358e-05
    2. '.' → logprob: -9.625092506408691
    3. 'y' → logprob: -11.125092506408691
    4. ' .' → logprob: -11.625092506408691
    5. '.py' → logprob: -13.500092506408691
    6. ' y' → logprob: -14.000092506408691
    7. ' ' → logprob: -14.875092506408691
    8. '+' → logprob: -16.000093460083008
    9. '	y' → logprob: -16.750093460083008
    10. '   ' → logprob: -17.125093460083008

Token 148: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.0067167943343520164
    2. '+' → logprob: -5.006716728210449
    3. ' ' → logprob: -13.63171672821045
    4. '+y' → logprob: -15.88171672821045
    5. ' +
' → logprob: -16.506717681884766
    6. ' ' → logprob: -18.131717681884766
    7. ' plus' → logprob: -19.006717681884766
    8. ' +=' → logprob: -19.381717681884766
    9. '=' → logprob: -19.881717681884766
    10. '    ' → logprob: -19.881717681884766

Token 149: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.014163863845169544
    2. ' dy' → logprob: -4.264163970947266
    3. ' ' → logprob: -15.264163970947266
    4. 'd' → logprob: -16.889163970947266
    5. '1' → logprob: -17.264163970947266
    6. '.dy' → logprob: -17.389163970947266
    7. 'dym' → logprob: -17.514163970947266
    8. 'ddy' → logprob: -18.264163970947266
    9. '

' → logprob: -18.264163970947266
    10. '
' → logprob: -18.514163970947266

Token 150: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.008440348319709301
    2. '
' → logprob: -6.3834404945373535
    3. '           ' → logprob: -6.5084404945373535
    4. ' ' → logprob: -7.3834404945373535
    5. '               ' → logprob: -7.5084404945373535
    6. '                    
' → logprob: -7.5084404945373535
    7. '       ' → logprob: -7.6334404945373535
    8. '                    ' → logprob: -7.6334404945373535
    9. '   ' → logprob: -8.008440017700195
    10. '		           ' → logprob: -8.133440017700195

Token 151: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0005766240647062659
    2. '                    
' → logprob: -8.125576972961426
    3. '<|end|>' → logprob: -9.750576972961426
    4. '                    ' → logprob: -9.875576972961426
    5. ' ' → logprob: -10.250576972961426
    6. '           ' → logprob: -10.500576972961426
    7. '
' → logprob: -10.875576972961426
    8. '               ' → logprob: -10.875576972961426
    9. '       ' → logprob: -11.250576972961426
    10. ' if' → logprob: -11.625576972961426

Token 152: ' if' (ID: 538)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.03880343213677406
    2. ' if' → logprob: -3.4138033390045166
    3. ' ' → logprob: -5.913803577423096
    4. 'if' (adapté à ' if') → logprob: -6.538803577423096
    5. '                    ' → logprob: -8.163803100585938
    6. '           ' → logprob: -8.663803100585938
    7. '   ' → logprob: -9.163803100585938
    8. '    ' → logprob: -9.288803100585938
    9. '               ' → logprob: -9.538803100585938
    10. '       ' → logprob: -9.663803100585938

Token 153: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.12694017589092255
    2. '0' → logprob: -2.1269402503967285
    3. ' (' → logprob: -11.75193977355957
    4. '(' → logprob: -12.87693977355957
    5. '    ' → logprob: -14.50193977355957
    6. '   ' → logprob: -14.87693977355957
    7. '  ' → logprob: -15.62693977355957
    8. '```' → logprob: -16.18943977355957
    9. '                   ' → logprob: -16.31443977355957
    10. ' ' → logprob: -16.62693977355957

Token 154: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.006728395354002714
    2. ' ' → logprob: -5.006728172302246
    3. '(' → logprob: -11.506728172302246
    4. ' (' → logprob: -13.381728172302246
    5. '   ' → logprob: -14.256728172302246
    6. '  ' → logprob: -14.881728172302246
    7. '
' → logprob: -16.506729125976562
    8. '    ' → logprob: -16.631729125976562
    9. '```' → logprob: -17.444229125976562
    10. '           ' → logprob: -17.756729125976562

Token 155: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.008632530458271503
    2. '<=' → logprob: -4.758632659912109
    3. ' ' → logprob: -11.25863265991211
    4. ' <' → logprob: -13.25863265991211
    5. ' >=' → logprob: -14.13363265991211
    6. '    ' → logprob: -14.88363265991211
    7. '```' → logprob: -15.13363265991211
    8. '<' → logprob: -15.13363265991211
    9. ' ≤' → logprob: -15.13363265991211
    10. '        ' → logprob: -15.63363265991211

Token 156: ' ny' (ID: 4423)
  Prédit: ' ny'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ny' → logprob: -0.20141790807247162
    2. 'ny' → logprob: -1.7014179229736328
    3. ' ' → logprob: -13.826417922973633
    4. ' nyt' → logprob: -14.576417922973633
    5. 'nyt' → logprob: -15.076417922973633
    6. 'nyi' → logprob: -15.326417922973633
    7. '
' → logprob: -15.451417922973633
    8. ' ' → logprob: -15.576417922973633
    9. 'n' → logprob: -15.576417922973633
    10. ''ny' → logprob: -15.576417922973633

Token 157: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.17976373434066772
    2. '<' → logprob: -1.8047637939453125
    3. '<|end|>' → logprob: -11.679763793945312
    4. ' ' → logprob: -12.679763793945312
    5. ' and' → logprob: -12.929763793945312
    6. 'and' → logprob: -13.304763793945312
    7. '<n' → logprob: -13.929763793945312
    8. '<len' → logprob: -15.304763793945312
    9. '<m' → logprob: -15.304763793945312
    10. '<int' → logprob: -15.429763793945312

Token 158: ' max' (ID: 2999)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.038042180240154266
    2. ' max' → logprob: -3.2880420684814453
    3. ' ' → logprob: -14.913042068481445
    4. '	max' → logprob: -16.413042068481445
    5. '(max' → logprob: -16.413042068481445
    6. '[max' → logprob: -16.788042068481445
    7. '   ' → logprob: -17.288042068481445
    8. '```' → logprob: -17.788042068481445
    9. '
' → logprob: -17.913042068481445
    10. '_max' → logprob: -18.288042068481445

Token 159: '_dim' (ID: 23809)
  Prédit: '_dim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dim' → logprob: -3.225939872208983e-05
    2. 'dim' → logprob: -10.375032424926758
    3. '_DIM' → logprob: -14.500032424926758
    4. 'Dim' → logprob: -14.875032424926758
    5. 'max' → logprob: -15.750032424926758
    6. '```' → logprob: -18.125032424926758
    7. '_dims' → logprob: -18.625032424926758
    8. '_' → logprob: -18.750032424926758
    9. '[' → logprob: -19.250032424926758
    10. '
' → logprob: -19.375032424926758

Token 160: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007641651667654514
    2. '                       ' → logprob: -5.257641792297363
    3. ':
' → logprob: -6.632641792297363
    4. ' and' → logprob: -7.132641792297363
    5. '                   ' → logprob: -8.507641792297363
    6. 'and' → logprob: -10.382641792297363
    7. ' :' → logprob: -10.507641792297363
    8. ':

' → logprob: -11.632641792297363
    9. ',' → logprob: -12.507641792297363
    10. '                      ' → logprob: -12.757641792297363

Token 161: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0019438649760559201
    2. '                   ' → logprob: -7.001944065093994
    3. '                    ' → logprob: -7.501944065093994
    4. '                        ' → logprob: -8.376943588256836
    5. '                     ' → logprob: -9.126943588256836
    6. '               ' → logprob: -9.876943588256836
    7. '       ' → logprob: -10.876943588256836
    8. '                ' → logprob: -11.376943588256836
    9. ' for' → logprob: -11.501943588256836
    10. '           ' → logprob: -11.626943588256836

Token 162: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.8450226783752441
    2. ' for' → logprob: -1.0950226783752441
    3. '                       ' → logprob: -1.4700226783752441
    4. '                   ' → logprob: -5.220022678375244
    5. '           ' → logprob: -8.595022201538086
    6. '               ' → logprob: -9.095022201538086
    7. '                    ' → logprob: -9.095022201538086
    8. '                     ' → logprob: -9.345022201538086
    9. '                        ' → logprob: -10.220022201538086
    10. '                           ' → logprob: -10.345022201538086

Token 163: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.04859202727675438
    2. ' dx' → logprob: -3.0485920906066895
    3. '(dx' → logprob: -12.798591613769531
    4. '_dx' → logprob: -13.548591613769531
    5. '   ' → logprob: -15.673591613769531
    6. '.dx' → logprob: -15.673591613769531
    7. '

' → logprob: -16.67359161376953
    8. '```' → logprob: -16.79859161376953
    9. '
' → logprob: -17.42359161376953
    10. '`' → logprob: -17.54859161376953

Token 164: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.01252154540270567
    2. 'in' → logprob: -4.387521743774414
    3. ' ' → logprob: -11.512521743774414
    4. 'In' → logprob: -14.387521743774414
    5. 'n' → logprob: -16.012521743774414
    6. 'd' → logprob: -16.262521743774414
    7. '<|end|>' → logprob: -16.262521743774414
    8. ' (' → logprob: -16.387521743774414
    9. ' 
' → logprob: -16.637521743774414
    10. ' i' → logprob: -16.637521743774414

Token 165: ' (-' (ID: 21382)
  Prédit: '(-'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(-' → logprob: -0.3132750391960144
    2. ' (-' → logprob: -1.3132750988006592
    3. '-' → logprob: -12.063275337219238
    4. '(' → logprob: -12.563275337219238
    5. ' -' → logprob: -13.188275337219238
    6. ' (' → logprob: -13.938275337219238
    7. ' ' → logprob: -14.063275337219238
    8. '[-' → logprob: -15.063275337219238
    9. '   ' → logprob: -16.563274383544922
    10. '  ' → logprob: -17.313274383544922

Token 166: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.2200749754119897e-06
    2. ' ' → logprob: -13.125001907348633
    3. '-' → logprob: -16.562501907348633
    4. ',' → logprob: -17.187501907348633
    5. '   ' → logprob: -17.187501907348633
    6. ' -' → logprob: -17.312501907348633
    7. '```' → logprob: -18.687501907348633
    8. '(' → logprob: -18.875001907348633
    9. '<|end|>' → logprob: -18.875001907348633
    10. '...' → logprob: -18.875001907348633

Token 167: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.694766489090398e-05
    2. ' ,' → logprob: -9.625066757202148
    3. '1' → logprob: -15.250066757202148
    4. ' ' → logprob: -15.750066757202148
    5. '0' → logprob: -15.875066757202148
    6. ',
' → logprob: -16.50006675720215
    7. '<|end|>' → logprob: -16.87506675720215
    8. ')' → logprob: -17.25006675720215
    9. '           ' → logprob: -17.50006675720215
    10. '   ' → logprob: -17.62506675720215

Token 168: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.386875182390213
    2. ' ' → logprob: -1.1368751525878906
    3. ' ' → logprob: -13.76187515258789
    4. ',' → logprob: -14.26187515258789
    5. '   ' → logprob: -14.38687515258789
    6. '```' → logprob: -14.63687515258789
    7. ' ,' → logprob: -14.88687515258789
    8. '  ' → logprob: -15.01187515258789
    9. 'def' → logprob: -15.82437515258789
    10. ')' → logprob: -15.88687515258789

Token 169: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0059290360659360886
    2. ' ' → logprob: -5.130928993225098
    3. ',' → logprob: -14.880928993225098
    4. '-' → logprob: -16.005929946899414
    5. '   ' → logprob: -18.005929946899414
    6. ' -' → logprob: -18.380929946899414
    7. '  ' → logprob: -18.380929946899414
    8. '```' → logprob: -18.880929946899414
    9. ' ,' → logprob: -19.130929946899414
    10. '1' → logprob: -19.880929946899414

Token 170: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001601539261173457
    2. ' ,' → logprob: -8.750160217285156
    3. '1' → logprob: -13.875160217285156
    4. ' ' → logprob: -14.875160217285156
    5. ')' → logprob: -16.000160217285156
    6. ',
' → logprob: -16.500160217285156
    7. '   ' → logprob: -17.625160217285156
    8. '```' → logprob: -17.625160217285156
    9. ',x' → logprob: -17.750160217285156
    10. '‌,' → logprob: -18.000160217285156

Token 171: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.1602274775505066
    2. ' ' → logprob: -1.9102275371551514
    3. '```' → logprob: -13.66022777557373
    4. ')' → logprob: -14.47272777557373
    5. '0' → logprob: -15.34772777557373
    6. '   ' → logprob: -15.59772777557373
    7. '  ' → logprob: -15.66022777557373
    8. ' )' → logprob: -15.84772777557373
    9. ' ' → logprob: -16.097726821899414
    10. '                               ' → logprob: -16.097726821899414

Token 172: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00017994173686020076
    2. ' ' → logprob: -8.6251802444458
    3. '```' → logprob: -15.8751802444458
    4. ')' → logprob: -16.750179290771484
    5. '0' → logprob: -17.500179290771484
    6. ',' → logprob: -17.687679290771484
    7. '+' → logprob: -17.875179290771484
    8. '                       ' → logprob: -18.312679290771484
    9. '   ' → logprob: -18.437679290771484
    10. 'dx' → logprob: -18.875179290771484

Token 173: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.47425997257232666
    2. '):
' → logprob: -0.9742599725723267
    3. ':' → logprob: -9.474260330200195
    4. '):

' → logprob: -10.224260330200195
    5. '):
' → logprob: -10.849260330200195
    6. ' ):' → logprob: -10.974260330200195
    7. '                           ' → logprob: -11.224260330200195
    8. '                       ' → logprob: -12.099260330200195
    9. ' ):
' → logprob: -12.349260330200195
    10. ':
' → logprob: -12.724260330200195

Token 174: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.6253615617752075
    2. '                        ' → logprob: -1.5003615617752075
    3. ' ' → logprob: -1.7503615617752075
    4. '                            ' → logprob: -2.875361442565918
    5. ' x' → logprob: -6.000361442565918
    6. '                       ' → logprob: -6.125361442565918
    7. '                         ' → logprob: -6.875361442565918
    8. 'x' → logprob: -7.000361442565918
    9. '            ' → logprob: -7.250361442565918
    10. '    ' → logprob: -7.250361442565918

Token 175: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' (adapté à ' nx') → logprob: -0.47413384914398193
    2. ' nx' → logprob: -0.9741338491439819
    3. '(nx' → logprob: -9.974133491516113
    4. 'n' → logprob: -12.849133491516113
    5. '                           ' → logprob: -13.224133491516113
    6. '                               ' → logprob: -13.474133491516113
    7. '```' → logprob: -13.474133491516113
    8. '                            ' → logprob: -14.349133491516113
    9. ' n' → logprob: -14.849133491516113
    10. '                             ' → logprob: -15.474133491516113

Token 176: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.31326186656951904
    2. '=' → logprob: -1.313261866569519
    3. ' ' → logprob: -15.688261985778809
    4. ' =)' → logprob: -18.313261032104492
    5. ')' → logprob: -18.563261032104492
    6. ' =
' → logprob: -18.938261032104492
    7. '＝' → logprob: -19.063261032104492
    8. '                           ' → logprob: -19.063261032104492
    9. '=self' → logprob: -19.563261032104492
    10. '=
' → logprob: -19.563261032104492

Token 177: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.4740777611732483
    2. ' self' → logprob: -0.9740777611732483
    3. '(self' → logprob: -14.724078178405762
    4. '                           ' → logprob: -16.474077224731445
    5. '	self' → logprob: -16.724077224731445
    6. ' ' → logprob: -16.724077224731445
    7. '                               ' → logprob: -16.849077224731445
    8. '[self' → logprob: -17.474077224731445
    9. '=self' → logprob: -18.474077224731445
    10. '   ' → logprob: -18.724077224731445

Token 178: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.00862131267786026
    2. 'x' → logprob: -4.7586212158203125
    3. '.' → logprob: -12.008621215820312
    4. ' x' → logprob: -14.508621215820312
    5. ' .' → logprob: -16.008621215820312
    6. '	x' → logprob: -17.758621215820312
    7. '```' → logprob: -19.008621215820312
    8. ' ' → logprob: -19.383621215820312
    9. 'self' → logprob: -19.758621215820312
    10. '   ' → logprob: -19.883621215820312

Token 179: ' +' (ID: 659)
  Prédit: ' +'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' +' → logprob: -0.01815052703022957
    2. '+' → logprob: -4.018150329589844
    3. ' ' → logprob: -15.018150329589844
    4. '+x' → logprob: -15.768150329589844
    5. ' +
' → logprob: -16.143150329589844
    6. ' plus' → logprob: -17.143150329589844
    7. ' ' → logprob: -18.018150329589844
    8. '＋' → logprob: -18.268150329589844
    9. ' +
' → logprob: -18.393150329589844
    10. '                           ' → logprob: -18.518150329589844

Token 180: ' dx' (ID: 29472)
  Prédit: 'dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dx' → logprob: -0.2519857883453369
    2. ' dx' → logprob: -1.501985788345337
    3. '1' → logprob: -9.876985549926758
    4. '(dx' → logprob: -12.376985549926758
    5. 'x' → logprob: -14.501985549926758
    6. '_dx' → logprob: -15.251985549926758
    7. ' ' → logprob: -15.501985549926758
    8. 'nx' → logprob: -15.876985549926758
    9. '.dx' → logprob: -16.501985549926758
    10. 'xd' → logprob: -18.251985549926758

Token 181: '
' (ID: 198)
  Prédit: '                           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.015072889626026154
    2. ' ' → logprob: -5.140072822570801
    3. '<|end|>' → logprob: -5.640072822570801
    4. '                            ' → logprob: -5.765072822570801
    5. ' if' → logprob: -6.515072822570801
    6. '                            
' → logprob: -8.3900728225708
    7. '                               ' → logprob: -8.3900728225708
    8. 'if' → logprob: -9.0150728225708
    9. '                       ' → logprob: -9.8900728225708
    10. '<|end|>' → logprob: -10.2650728225708

Token 182: '                           ' (ID: 1686)
  Prédit: '                           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                           ' → logprob: -0.0004044554370921105
    2. '                            ' → logprob: -8.250404357910156
    3. ' ' → logprob: -10.000404357910156
    4. '                            
' → logprob: -10.625404357910156
    5. '                               ' → logprob: -11.000404357910156
    6. '           ' → logprob: -11.500404357910156
    7. '<|end|>' → logprob: -11.500404357910156
    8. ' if' → logprob: -11.750404357910156
    9. '                       ' → logprob: -12.500404357910156
    10. 'if' → logprob: -12.750404357910156

Token 183: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.1169128566980362
    2. 'if' (adapté à ' if') → logprob: -2.241912841796875
    3. '                           ' → logprob: -5.616912841796875
    4. ' ' → logprob: -7.866912841796875
    5. '                            ' → logprob: -10.241912841796875
    6. '0' → logprob: -12.116912841796875
    7. '                            
' → logprob: -12.116912841796875
    8. '```' → logprob: -12.491912841796875
    9. '                               ' → logprob: -13.116912841796875
    10. '           ' → logprob: -13.366912841796875

Token 184: ' ' (ID: 220)
  Prédit: ' '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ' → logprob: -0.14269571006298065
    2. '0' → logprob: -2.017695665359497
    3. ' (' → logprob: -11.267695426940918
    4. '(' → logprob: -12.642695426940918
    5. ' dx' → logprob: -13.767695426940918
    6. ' nx' → logprob: -13.892695426940918
    7. ' not' → logprob: -14.517695426940918
    8. '(nx' → logprob: -15.017695426940918
    9. ' ' → logprob: -15.142695426940918
    10. 'x' → logprob: -15.142695426940918

Token 185: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005259964615106583
    2. ' ' → logprob: -5.255259990692139
    3. '(' → logprob: -10.88025951385498
    4. ' (' → logprob: -12.50525951385498
    5. '(nx' → logprob: -12.88025951385498
    6. ' nx' → logprob: -15.13025951385498
    7. 'nx' → logprob: -15.50525951385498
    8. '   ' → logprob: -16.005260467529297
    9. '  ' → logprob: -16.255260467529297
    10. 'x' → logprob: -16.755260467529297

Token 186: ' <=' (ID: 5017)
  Prédit: ' <='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <=' → logprob: -0.0013719070702791214
    2. '<=' → logprob: -6.62637186050415
    3. ' <' → logprob: -10.501372337341309
    4. ' >=' → logprob: -11.376372337341309
    5. ' ' → logprob: -12.251372337341309
    6. ' >' → logprob: -14.001372337341309
    7. '<' → logprob: -15.251372337341309
    8. ' ≤' → logprob: -15.501372337341309
    9. '>' → logprob: -16.251371383666992
    10. '```' → logprob: -16.376371383666992

Token 187: ' nx' (ID: 50118)
  Prédit: 'nx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nx' → logprob: -0.5759486556053162
    2. ' nx' → logprob: -0.8259486556053162
    3. '(nx' → logprob: -11.700948715209961
    4. 'n' → logprob: -14.825948715209961
    5. ' ' → logprob: -15.950948715209961
    6. '
' → logprob: -16.07594871520996
    7. 'x' → logprob: -16.57594871520996
    8. 'xn' → logprob: -16.82594871520996
    9. 'Nx' → logprob: -17.07594871520996
    10. 'ny' → logprob: -17.32594871520996

Token 188: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.029768766835331917
    2. '<' → logprob: -3.529768705368042
    3. ' ' → logprob: -11.529768943786621
    4. ' and' → logprob: -13.154768943786621
    5. '<n' → logprob: -13.404768943786621
    6. 'and' → logprob: -13.779768943786621
    7. '                           ' → logprob: -14.529768943786621
    8. '<|end|>' → logprob: -14.529768943786621
    9. '<len' → logprob: -14.529768943786621
    10. '<int' → logprob: -14.904768943786621

Token 189: ' max' (ID: 2999)
  Prédit: ' max'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' max' → logprob: -0.575943648815155
    2. 'max' → logprob: -0.825943648815155
    3. ' ' → logprob: -13.450943946838379
    4. '(max' → logprob: -14.200943946838379
    5. '[max' → logprob: -14.700943946838379
    6. '	max' → logprob: -15.075943946838379
    7. '```' → logprob: -15.575943946838379
    8. 'm' → logprob: -15.700943946838379
    9. '0' → logprob: -15.950943946838379
    10. '=max' → logprob: -16.200942993164062

Token 190: '_dim' (ID: 23809)
  Prédit: '_dim'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_dim' → logprob: -1.282920129597187e-05
    2. 'dim' → logprob: -11.500012397766113
    3. 'Dim' → logprob: -13.375012397766113
    4. '_DIM' → logprob: -14.125012397766113
    5. '```' → logprob: -16.12501335144043
    6. '_dims' → logprob: -16.50001335144043
    7. '_dom' → logprob: -17.62501335144043
    8. '   ' → logprob: -17.75001335144043
    9. '           ' → logprob: -17.75001335144043
    10. 'max' → logprob: -18.00001335144043

Token 191: ':
' (ID: 734)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.018320145085453987
    2. 'and' → logprob: -4.143320083618164
    3. '                               ' → logprob: -6.143320083618164
    4. '                           ' → logprob: -9.268320083618164
    5. '                             ' → logprob: -11.393320083618164
    6. ':' → logprob: -11.518320083618164
    7. '                              ' → logprob: -12.143320083618164
    8. ',' → logprob: -12.518320083618164
    9. '                            ' → logprob: -13.018320083618164
    10. ':
' → logprob: -13.268320083618164

Token 192: '                               ' (ID: 2419)
  Prédit: '                               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                               ' → logprob: -0.0179483350366354
    2. ' and' → logprob: -4.142948150634766
    3. '                           ' → logprob: -7.892948150634766
    4. '                                ' → logprob: -8.267948150634766
    5. '                            ' → logprob: -8.267948150634766
    6. '                             ' → logprob: -8.392948150634766
    7. ' if' → logprob: -8.392948150634766
    8. '                              ' → logprob: -8.517948150634766
    9. 'and' → logprob: -9.017948150634766
    10. '                                
' → logprob: -9.642948150634766

Token 193: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.052511781454086304
    2. ' if' → logprob: -3.052511692047119
    3. '                               ' → logprob: -5.552511692047119
    4. '                                   ' → logprob: -11.052512168884277
    5. '                                ' → logprob: -11.677512168884277
    6. '                           ' → logprob: -11.802512168884277
    7. '   ' → logprob: -13.427512168884277
    8. '                                 ' → logprob: -13.427512168884277
    9. '                             ' → logprob: -14.427512168884277
    10. '                              ' → logprob: -14.427512168884277

Token 194: ' dx' (ID: 29472)
  Prédit: '(dx'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(dx' → logprob: -0.7665358781814575
    2. 'dx' → logprob: -1.2665358781814575
    3. ' dx' → logprob: -2.141535758972168
    4. ' not' → logprob: -2.266535758972168
    5. 'not' → logprob: -3.641535758972168
    6. '(nx' → logprob: -6.266535758972168
    7. ' (' → logprob: -6.516535758972168
    8. 'nx' → logprob: -7.141535758972168
    9. '(not' → logprob: -7.516535758972168
    10. '(d' → logprob: -8.016535758972168

Token 195: ' !=' (ID: 1666)
  Prédit: '!='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '!=' → logprob: -0.6900296211242676
    2. ' !=' → logprob: -1.0650296211242676
    3. ' or' → logprob: -2.1900296211242676
    4. 'or' → logprob: -3.1900296211242676
    5. '==' → logprob: -7.940029621124268
    6. '|' → logprob: -9.06502914428711
    7. ' |' → logprob: -9.69002914428711
    8. ' ==' → logprob: -9.69002914428711
    9. 'is' → logprob: -10.94002914428711
    10. '!='' → logprob: -11.94002914428711

Token 196: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0031777136027812958
    2. ' ' → logprob: -5.753177642822266
    3. 'or' → logprob: -19.128177642822266
    4. ' or' → logprob: -19.128177642822266
    5. '
' → logprob: -19.878177642822266
    6. '<|end|>' → logprob: -19.878177642822266
    7. '  ' → logprob: -20.128177642822266
    8. '۰' → logprob: -20.753177642822266
    9. '```' → logprob: -21.253177642822266
    10. '

' → logprob: -21.378177642822266

Token 197: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -3.7697225252486533e-06
    2. ' ' → logprob: -12.500003814697266
    3. '
' → logprob: -19.000003814697266
    4. '۰' → logprob: -20.250003814697266
    5. 'or' → logprob: -20.500003814697266
    6. '

' → logprob: -21.250003814697266
    7. ' or' → logprob: -21.500003814697266
    8. ' ' → logprob: -22.250003814697266
    9. '   ' → logprob: -22.250003814697266
    10. '```' → logprob: -22.250003814697266

Token 198: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.20143350958824158
    2. 'or' → logprob: -1.701433539390564
    3. '                               ' → logprob: -11.451433181762695
    4. '                                   ' → logprob: -12.701433181762695
    5. 'orm' → logprob: -13.576433181762695
    6. 'and' → logprob: -14.076433181762695
    7. ''or' → logprob: -14.326433181762695
    8. '                                    ' → logprob: -14.701433181762695
    9. '	or' → logprob: -14.826433181762695
    10. '                           ' → logprob: -15.076433181762695

Token 199: ' dy' (ID: 11996)
  Prédit: 'dy'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dy' → logprob: -0.575939953327179
    2. ' dy' → logprob: -0.825939953327179
    3. '.dy' → logprob: -15.450940132141113
    4. ' ' → logprob: -15.950940132141113
    5. '	d' → logprob: -16.950939178466797
    6. '   ' → logprob: -17.325939178466797
    7. 'Dy' → logprob: -17.450939178466797
    8. ' dz' → logprob: -17.700939178466797
    9. 'dz' → logprob: -17.825939178466797
    10. '```' → logprob: -18.075939178466797

Token 200: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.048591457307338715
    2. '!=' → logprob: -3.048591375350952
    3. '()!=' → logprob: -13.423591613769531
    4. ')!=' → logprob: -14.173591613769531
    5. '!=(' → logprob: -14.548591613769531
    6. '!='' → logprob: -14.673591613769531
    7. '!=-' → logprob: -15.048591613769531
    8. ' or' → logprob: -15.923591613769531
    9. '!' → logprob: -16.17359161376953
    10. ' ' → logprob: -16.17359161376953

Token 201: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01815146580338478
    2. ' ' → logprob: -4.01815128326416
    3. '<|end|>' → logprob: -13.76815128326416
    4. '1' → logprob: -15.64315128326416
    5. '                               ' → logprob: -16.268152236938477
    6. '```' → logprob: -16.518152236938477
    7. ' or' → logprob: -16.643152236938477
    8. '   ' → logprob: -17.268152236938477
    9. '
' → logprob: -17.580652236938477
    10. '  ' → logprob: -17.643152236938477

Token 202: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010926496179308742
    2. ' ' → logprob: -9.125109672546387
    3. '<|end|>' → logprob: -15.625109672546387
    4. ' or' → logprob: -17.00010871887207
    5. 'or' → logprob: -17.50010871887207
    6. '```' → logprob: -18.00010871887207
    7. '1' → logprob: -18.75010871887207
    8. '                               ' → logprob: -19.12510871887207
    9. '  ' → logprob: -19.50010871887207
    10. '۰' → logprob: -19.75010871887207

Token 203: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.061970487236976624
    2. 'or' → logprob: -2.8119704723358154
    3. '	or' → logprob: -13.311970710754395
    4. ' ' → logprob: -14.561970710754395
    5. '                               ' → logprob: -14.686970710754395
    6. '<|end|>' → logprob: -16.311969757080078
    7. '```' → logprob: -17.311969757080078
    8. 'orm' → logprob: -17.436969757080078
    9. '                                   ' → logprob: -17.686969757080078
    10. ''or' → logprob: -17.936969757080078

Token 204: ' dz' (ID: 17303)
  Prédit: 'dz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dz' → logprob: -0.1002068892121315
    2. ' dz' → logprob: -2.3502068519592285
    3. ' ' → logprob: -16.22520637512207
    4. 'Dz' → logprob: -16.47520637512207
    5. '```' → logprob: -17.47520637512207
    6. '	d' → logprob: -18.10020637512207
    7. 'dy' → logprob: -18.85020637512207
    8. 'nz' → logprob: -18.97520637512207
    9. 'cz' → logprob: -18.97520637512207
    10. '

' → logprob: -19.22520637512207

Token 205: ' !=' (ID: 1666)
  Prédit: ' !='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' !=' → logprob: -0.0890434980392456
    2. '!=' → logprob: -2.464043617248535
    3. ')!=' → logprob: -9.714043617248535
    4. '<|end|>' → logprob: -10.964043617248535
    5. '()!=' → logprob: -11.589043617248535
    6. '!=-' → logprob: -12.714043617248535
    7. ')' → logprob: -12.714043617248535
    8. '!' → logprob: -12.964043617248535
    9. ']!=' → logprob: -13.089043617248535
    10. '!=(' → logprob: -13.214043617248535

Token 206: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.01815567910671234
    2. ' ' → logprob: -4.018155574798584
    3. '1' → logprob: -12.268156051635742
    4. '```' → logprob: -15.018156051635742
    5. '   ' → logprob: -15.643156051635742
    6. '
' → logprob: -15.830656051635742
    7. ' ' → logprob: -16.205656051635742
    8. '  ' → logprob: -16.955656051635742
    9. '               ' → logprob: -17.455656051635742
    10. ' ' → logprob: -17.643156051635742

Token 207: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0006271334132179618
    2. ' ' → logprob: -7.375627040863037
    3. '1' → logprob: -15.250627517700195
    4. '  ' → logprob: -15.875627517700195
    5. '   ' → logprob: -16.500627517700195
    6. '```' → logprob: -17.563127517700195
    7. '۰' → logprob: -17.813127517700195
    8. ' ' → logprob: -17.938127517700195
    9. '    ' → logprob: -18.063127517700195
    10. ')' → logprob: -18.188127517700195

Token 208: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016858897870406508
    2. ':
' → logprob: -6.626686096191406
    3. '                               ' → logprob: -8.251686096191406
    4. '):' → logprob: -9.501686096191406
    5. ' :' → logprob: -11.251686096191406
    6. '):
' → logprob: -12.626686096191406
    7. '                                   ' → logprob: -12.876686096191406
    8. ':

' → logprob: -13.376686096191406
    9. ')' → logprob: -13.876686096191406
    10. '                           ' → logprob: -14.376686096191406

Token 209: '                                   ' (ID: 3523)
  Prédit: '                                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                                   ' → logprob: -0.04610062390565872
    2. '                               ' → logprob: -3.796100616455078
    3. ' yield' → logprob: -4.796100616455078
    4. 'yield' → logprob: -5.046100616455078
    5. '                                       ' → logprob: -5.171100616455078
    6. '```' → logprob: -7.421100616455078
    7. ':' → logprob: -7.921100616455078
    8. 'return' → logprob: -8.546100616455078
    9. '                                    
' → logprob: -8.796100616455078
    10. '                   ' → logprob: -8.921100616455078

Token 210: ' yield' (ID: 14376)
  Prédit: ' yield'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' yield' → logprob: -0.6934885382652283
    2. 'yield' (adapté à ' yield') → logprob: -0.6934885382652283
    3. '                                   ' → logprob: -8.693488121032715
    4. '                                       ' → logprob: -9.318488121032715
    5. '	yield' → logprob: -9.568488121032715
    6. '
' → logprob: -12.318488121032715
    7. '                                    ' → logprob: -13.193488121032715
    8. '                               ' → logprob: -13.193488121032715
    9. 'Yield' → logprob: -13.443488121032715
    10. ' y' → logprob: -13.943488121032715

Token 211: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -0.47408607602119446
    2. ' Coordinate' → logprob: -0.9740860462188721
    3. 'self' → logprob: -11.849085807800293
    4. ' self' → logprob: -13.224085807800293
    5. '_coordinate' → logprob: -16.47408676147461
    6. ' coordinate' → logprob: -16.97408676147461
    7. 'Coord' → logprob: -17.47408676147461
    8. '                               ' → logprob: -18.34908676147461
    9. '                                   ' → logprob: -18.47408676147461
    10. 'Coordinates' → logprob: -18.59908676147461

Token 212: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. '(nx' → logprob: -16.5
    3. '(x' → logprob: -18.0
    4. '(n' → logprob: -19.875
    5. '('' → logprob: -20.375
    6. '(' → logprob: -20.5
    7. '(self' → logprob: -20.75
    8. 'Coordinate' → logprob: -21.375
    9. '```' → logprob: -21.75
    10. '                               ' → logprob: -22.375

Token 213: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.4855663721391466e-05
    2. '3' → logprob: -11.250015258789062
    3. 'Coordinate' → logprob: -13.250015258789062
    4. '4' → logprob: -17.625015258789062
    5. 'd' → logprob: -18.000015258789062
    6. '6' → logprob: -19.125015258789062
    7. '```' → logprob: -19.500015258789062
    8. ''' → logprob: -19.625015258789062
    9. ''D' → logprob: -19.750015258789062
    10. '`' → logprob: -20.000015258789062

Token 214: '(nx' (ID: 189861)
  Prédit: '(nx'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(nx' → logprob: -0.011159120127558708
    2. '(' → logprob: -4.5111589431762695
    3. '(n' → logprob: -9.26115894317627
    4. '(
' → logprob: -11.51115894317627
    5. '(x' → logprob: -12.63615894317627
    6. ' (' → logprob: -13.76115894317627
    7. '(nn' → logprob: -14.13615894317627
    8. 'nx' → logprob: -15.13615894317627
    9. '(ns' → logprob: -15.26115894317627
    10. '(mx' → logprob: -16.261159896850586

Token 215: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.098748053773306e-05
    2. ',y' → logprob: -10.25006103515625
    3. ' ,' → logprob: -11.00006103515625
    4. '<|end|>' → logprob: -12.50006103515625
    5. ',n' → logprob: -12.62506103515625
    6. ',
' → logprob: -14.25006103515625
    7. ')' → logprob: -15.12506103515625
    8. ',x' → logprob: -15.62506103515625
    9. '‌,' → logprob: -16.00006103515625
    10. ',

' → logprob: -16.50006103515625

Token 216: ' ny' (ID: 4423)
  Prédit: 'ny'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ny' → logprob: -0.0009166974923573434
    2. ' ny' → logprob: -7.000916481018066
    3. 'nyi' → logprob: -12.500916481018066
    4. ''ny' → logprob: -14.250916481018066
    5. 'Ny' → logprob: -15.250916481018066
    6. 'nyt' → logprob: -16.000917434692383
    7. '<|end|>' → logprob: -16.625917434692383
    8. ' ' → logprob: -16.875917434692383
    9. 'ney' → logprob: -17.125917434692383
    10. '```' → logprob: -17.250917434692383

Token 217: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0025198960211127996
    2. ',n' → logprob: -6.0025200843811035
    3. ' ,' → logprob: -10.877519607543945
    4. 'nz' → logprob: -10.877519607543945
    5. ',z' → logprob: -12.377519607543945
    6. ' nz' → logprob: -14.002519607543945
    7. '.nz' → logprob: -14.502519607543945
    8. '(n' → logprob: -14.627519607543945
    9. 'Nz' → logprob: -16.002519607543945
    10. 'n' → logprob: -16.502519607543945

Token 218: ' nz' (ID: 32428)
  Prédit: 'nz'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nz' → logprob: -7.64839569455944e-05
    2. ' nz' → logprob: -9.500076293945312
    3. 'n' → logprob: -13.375076293945312
    4. 'Nz' → logprob: -17.000076293945312
    5. '.nz' → logprob: -17.125076293945312
    6. 'mz' → logprob: -18.750076293945312
    7. '
' → logprob: -19.125076293945312
    8. 'z' → logprob: -19.250076293945312
    9. '```' → logprob: -19.625076293945312
    10. 'nx' → logprob: -19.875076293945312

Token 219: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.0683535037969705e-05
    2. ')
' → logprob: -11.62501049041748
    3. ' )' → logprob: -13.50001049041748
    4. ')}' → logprob: -17.000011444091797
    5. '<|end|>' → logprob: -17.000011444091797
    6. '))' → logprob: -17.625011444091797
    7. '                           ' → logprob: -17.750011444091797
    8. ')

' → logprob: -17.750011444091797
    9. '),' → logprob: -17.875011444091797
    10. ')}}' → logprob: -18.000011444091797

Token 220: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 221: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.9548362493515015
    2. 'def' (adapté à ' def') → logprob: -1.3298362493515015
    3. '<|end|>' → logprob: -1.3298362493515015
    4. ' def' → logprob: -3.204836368560791
    5. ')' → logprob: -4.329836368560791
    6. '#' → logprob: -4.829836368560791
    7. '    
' → logprob: -5.079836368560791
    8. '
' → logprob: -5.579836368560791
    9. ' ' → logprob: -6.204836368560791
    10. '    ' → logprob: -6.204836368560791

Token 222: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.23745864629745483
    2. ' __' → logprob: -1.6124587059020996
    3. 'def' → logprob: -4.6124587059021
    4. ' def' → logprob: -6.6124587059021
    5. 'eq' → logprob: -7.8624587059021
    6. '==' → logprob: -8.862458229064941
    7. ' ==' → logprob: -9.487458229064941
    8. '_eq' → logprob: -10.237458229064941
    9. 'to' → logprob: -10.987458229064941
    10. '___' → logprob: -11.612458229064941

Token 223: 'eq' (ID: 21725)
  Prédit: 'eq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'eq' → logprob: -5.228561349213123e-05
    2. 'hash' → logprob: -10.250052452087402
    3. 'repr' → logprob: -11.000052452087402
    4. 'lt' → logprob: -17.000051498413086
    5. 'init' → logprob: -17.000051498413086
    6. ' eq' → logprob: -18.000051498413086
    7. 'iter' → logprob: -18.750051498413086
    8. '_eq' → logprob: -20.000051498413086
    9. '==' → logprob: -20.750051498413086
    10. 'str' → logprob: -20.875051498413086

Token 224: '__(' (ID: 8241)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1805257648229599
    2. '__(' → logprob: -1.805525779724121
    3. '_' → logprob: -7.555525779724121
    4. '__((' → logprob: -9.180525779724121
    5. '__(
' → logprob: -9.930525779724121
    6. '__('' → logprob: -10.430525779724121
    7. '___' → logprob: -10.430525779724121
    8. '(' → logprob: -11.180525779724121
    9. '(self' → logprob: -11.805525779724121
    10. '__(*' → logprob: -11.930525779724121

Token 225: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -4.692145012086257e-05
    2. ' self' → logprob: -10.000046730041504
    3. '(self' → logprob: -14.375046730041504
    4. '
' → logprob: -14.625046730041504
    5. ')' → logprob: -16.00004768371582
    6. '   ' → logprob: -16.37504768371582
    7. ' ' → logprob: -16.62504768371582
    8. ',' → logprob: -16.62504768371582
    9. '<|end|>' → logprob: -17.37504768371582
    10. 'other' → logprob: -17.62504768371582

Token 226: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.09022729098796844
    2. '__(' → logprob: -3.4652273654937744
    3. 'self' → logprob: -4.090227127075195
    4. ',' → logprob: -4.340227127075195
    5. '__' → logprob: -4.840227127075195
    6. '<|end|>' → logprob: -5.090227127075195
    7. '(' → logprob: -5.715227127075195
    8. ' self' → logprob: -5.965227127075195
    9. ' (' → logprob: -6.215227127075195
    10. ')' → logprob: -6.590227127075195

Token 227: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.10020828247070312
    2. ' other' → logprob: -2.350208282470703
    3. 'self' → logprob: -14.225208282470703
    4. ' ' → logprob: -15.225208282470703
    5. 'Other' → logprob: -15.475208282470703
    6. 'o' → logprob: -15.725208282470703
    7. ' o' → logprob: -15.850208282470703
    8. '(other' → logprob: -16.100208282470703
    9. ' oth' → logprob: -17.975208282470703
    10. 'oth' → logprob: -18.100208282470703

Token 228: '):
' (ID: 1883)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.2594517469406128
    2. ':' → logprob: -1.8844517469406128
    3. '):' → logprob: -2.6344518661499023
    4. ' )' → logprob: -5.509451866149902
    5. ' ):' → logprob: -7.509451866149902
    6. ' :' → logprob: -9.759451866149902
    7. '):
' → logprob: -9.884451866149902
    8. 'self' → logprob: -9.884451866149902
    9. ',' → logprob: -10.509451866149902
    10. ':)' → logprob: -10.634451866149902

Token 229: '       ' (ID: 309)
  Prédit: ' isinstance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.39672353863716125
    2. '       ' → logprob: -2.396723508834839
    3. ' if' → logprob: -2.396723508834839
    4. '    ' → logprob: -2.646723508834839
    5. ' self' → logprob: -3.771723508834839
    6. '<|end|>' → logprob: -4.521723747253418
    7. ' other' → logprob: -4.646723747253418
    8. ' ' → logprob: -4.771723747253418
    9. '   ' → logprob: -5.146723747253418
    10. 'self' → logprob: -5.771723747253418

Token 230: ' return' (ID: 622)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.7934408187866211
    2. 'if' → logprob: -1.543440818786621
    3. ' isinstance' → logprob: -1.918440818786621
    4. 'is' → logprob: -2.543440818786621
    5. 'return' (adapté à ' return') → logprob: -2.543440818786621
    6. ' return' → logprob: -4.043440818786621
    7. '       ' → logprob: -4.418440818786621
    8. ' is' → logprob: -8.293440818786621
    9. '   ' → logprob: -9.918440818786621
    10. '    ' → logprob: -9.918440818786621

Token 231: ' (' (ID: 350)
  Prédit: ' isinstance'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' isinstance' → logprob: -0.4961216449737549
    2. 'is' → logprob: -0.9961216449737549
    3. '(is' → logprob: -3.996121644973755
    4. 'self' → logprob: -6.371121406555176
    5. '(
' → logprob: -6.871121406555176
    6. '(self' → logprob: -7.621121406555176
    7. ' (' → logprob: -9.371121406555176
    8. ' self' → logprob: -9.746121406555176
    9. '(' → logprob: -11.496121406555176
    10. ' (
' → logprob: -11.496121406555176

Token 232: 'self' (ID: 1156)
  Prédit: 'is'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'is' → logprob: -0.6943745017051697
    2. 'self' → logprob: -0.9443745017051697
    3. ' isinstance' → logprob: -2.1943745613098145
    4. ' self' → logprob: -8.444374084472656
    5. '   ' → logprob: -11.194374084472656
    6. '(is' → logprob: -11.319374084472656
    7. '(self' → logprob: -11.569374084472656
    8. 'type' → logprob: -11.944374084472656
    9. '
' → logprob: -12.694374084472656
    10. '       ' → logprob: -14.944374084472656

Token 233: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -5.796184723294573e-06
    2. '.__' → logprob: -12.875005722045898
    3. ' .' → logprob: -13.750005722045898
    4. '.' → logprob: -14.125005722045898
    5. ').' → logprob: -14.375005722045898
    6. ' is' → logprob: -15.250005722045898
    7. 'x' → logprob: -15.625005722045898
    8. ')' → logprob: -15.875005722045898
    9. ').__' → logprob: -15.875005722045898
    10. '.)' → logprob: -18.6250057220459

Token 234: ',' (ID: 11)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.048711590468883514
    2. '==' → logprob: -3.0487115383148193
    3. ',' → logprob: -9.048711776733398
    4. ')==' → logprob: -12.673711776733398
    5. ' ,' → logprob: -13.423711776733398
    6. ')' → logprob: -14.048711776733398
    7. '=' → logprob: -14.673711776733398
    8. ' ' → logprob: -14.673711776733398
    9. ' )' → logprob: -16.2987117767334
    10. ' ==
' → logprob: -16.4237117767334

Token 235: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.07889088988304138
    2. ' self' → logprob: -2.578890800476074
    3. '<|end|>' → logprob: -15.203890800476074
    4. ' ' → logprob: -15.578890800476074
    5. '	self' → logprob: -15.578890800476074
    6. '(self' → logprob: -15.703890800476074
    7. '
' → logprob: -15.953890800476074
    8. '   ' → logprob: -16.20389175415039
    9. '    ' → logprob: -17.57889175415039
    10. '  ' → logprob: -17.95389175415039

Token 236: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.003445641603320837
    2. '.' → logprob: -6.253445625305176
    3. '.x' → logprob: -6.503445625305176
    4. ' .' → logprob: -11.753445625305176
    5. ',' → logprob: -12.503445625305176
    6. ').' → logprob: -12.753445625305176
    7. 'y' → logprob: -13.003445625305176
    8. ')' → logprob: -14.878445625305176
    9. ',y' → logprob: -15.253445625305176
    10. ' ' → logprob: -15.753445625305176

Token 237: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.006780858151614666
    2. ')' → logprob: -5.006780624389648
    3. ')==' → logprob: -10.256780624389648
    4. ' ,' → logprob: -10.881780624389648
    5. '==' → logprob: -11.881780624389648
    6. ' ==' → logprob: -13.881780624389648
    7. '),' → logprob: -14.256780624389648
    8. ',self' → logprob: -14.381780624389648
    9. ',)' → logprob: -14.631780624389648
    10. ',
' → logprob: -14.631780624389648

Token 238: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.048587486147880554
    2. ' self' → logprob: -3.0485875606536865
    3. '(self' → logprob: -16.548587799072266
    4. ' ' → logprob: -17.673587799072266
    5. '	self' → logprob: -18.298587799072266
    6. '   ' → logprob: -18.673587799072266
    7. '
' → logprob: -19.048587799072266
    8. '       ' → logprob: -19.298587799072266
    9. ',self' → logprob: -19.673587799072266
    10. '    ' → logprob: -20.048587799072266

Token 239: '.z' (ID: 9161)
  Prédit: '.z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.z' → logprob: -0.0019499406917020679
    2. '.' → logprob: -6.876949787139893
    3. '.x' → logprob: -7.251949787139893
    4. '.y' → logprob: -9.00195026397705
    5. ',' → logprob: -9.50195026397705
    6. ')' → logprob: -12.37695026397705
    7. 'z' → logprob: -12.87695026397705
    8. ' .' → logprob: -14.12695026397705
    9. '.,' → logprob: -14.12695026397705
    10. ').' → logprob: -14.50195026397705

Token 240: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00017624642350710928
    2. ')==' → logprob: -9.125176429748535
    3. ' )' → logprob: -9.625176429748535
    4. '==' → logprob: -13.750176429748535
    5. ' ==' → logprob: -15.625176429748535
    6. '）' → logprob: -18.50017547607422
    7. '   ' → logprob: -18.50017547607422
    8. '')' → logprob: -18.50017547607422
    9. ')
' → logprob: -19.12517547607422
    10. ',)' → logprob: -19.25017547607422

Token 241: ' ==' (ID: 951)
  Prédit: ' =='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.12693440914154053
    2. '==' → logprob: -2.12693452835083
    3. ')==' → logprob: -12.876934051513672
    4. '=' → logprob: -13.626934051513672
    5. '==(' → logprob: -13.751934051513672
    6. '==
' → logprob: -14.001934051513672
    7. ')' → logprob: -15.251934051513672
    8. ' ==
' → logprob: -15.251934051513672
    9. ' =' → logprob: -16.251934051513672
    10. ']==' → logprob: -16.626934051513672

Token 242: ' (' (ID: 350)
  Prédit: '(other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(other' → logprob: -0.20144452154636383
    2. ' (' → logprob: -1.7014445066452026
    3. '(' → logprob: -11.076444625854492
    4. ' ' → logprob: -11.326444625854492
    5. 'other' → logprob: -14.201444625854492
    6. '  ' → logprob: -14.201444625854492
    7. ' other' → logprob: -14.451444625854492
    8. '(get' → logprob: -14.451444625854492
    9. '(self' → logprob: -14.576444625854492
    10. '   ' → logprob: -14.951444625854492

Token 243: 'other' (ID: 2141)
  Prédit: 'other'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -1.688212614681106e-05
    2. ' other' → logprob: -11.000017166137695
    3. '(other' → logprob: -16.750017166137695
    4. ' ' → logprob: -18.500017166137695
    5. '   ' → logprob: -18.625017166137695
    6. 'othe' → logprob: -19.125017166137695
    7. '
' → logprob: -19.500017166137695
    8. '  ' → logprob: -19.875017166137695
    9. '.other' → logprob: -20.000017166137695
    10. 'oth' → logprob: -21.375017166137695

Token 244: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.000263481488218531
    2. '.' → logprob: -8.250263214111328
    3. ' .' → logprob: -13.250263214111328
    4. ').' → logprob: -15.375263214111328
    5. 'x' → logprob: -15.500263214111328
    6. '.xhtml' → logprob: -18.625263214111328
    7. '<|end|>' → logprob: -18.875263214111328
    8. '.xlabel' → logprob: -18.875263214111328
    9. '‌.' → logprob: -19.000263214111328
    10. ' ' → logprob: -19.500263214111328

Token 245: ',' (ID: 11)
  Prédit: '.x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -0.0006165316444821656
    2. ',' → logprob: -7.625616550445557
    3. '.' → logprob: -9.125616073608398
    4. ',x' → logprob: -11.875616073608398
    5. 'x' → logprob: -12.000616073608398
    6. '.,' → logprob: -13.125616073608398
    7. ')' → logprob: -13.125616073608398
    8. ').' → logprob: -13.375616073608398
    9. ' .' → logprob: -14.375616073608398
    10. '.)' → logprob: -16.1256160736084

Token 246: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.061967797577381134
    2. ' other' → logprob: -2.8119678497314453
    3. '(other' → logprob: -16.061967849731445
    4. ' ' → logprob: -17.061967849731445
    5. '.other' → logprob: -17.686967849731445
    6. 'Other' → logprob: -18.311967849731445
    7. '_other' → logprob: -19.436967849731445
    8. '   ' → logprob: -19.811967849731445
    9. '  ' → logprob: -20.686967849731445
    10. 'self' → logprob: -20.811967849731445

Token 247: '.y' (ID: 4486)
  Prédit: '.y'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.y' → logprob: -0.0001637300301808864
    2. '.' → logprob: -9.000164031982422
    3. 'y' → logprob: -10.500164031982422
    4. ',' → logprob: -12.250164031982422
    5. '.x' → logprob: -12.250164031982422
    6. ',y' → logprob: -13.000164031982422
    7. '.z' → logprob: -14.250164031982422
    8. '```' → logprob: -16.750164031982422
    9. ' y' → logprob: -16.875164031982422
    10. '[' → logprob: -17.000164031982422

Token 248: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -6.392202976712724e-06
    2. ' ,' → logprob: -12.000006675720215
    3. ',self' → logprob: -16.3750057220459
    4. ')' → logprob: -16.8750057220459
    5. 'self' → logprob: -17.2500057220459
    6. ',
' → logprob: -17.6250057220459
    7. '.other' → logprob: -17.6250057220459
    8. '[' → logprob: -18.1250057220459
    9. '،' → logprob: -18.7500057220459
    10. '       ' → logprob: -18.7500057220459

Token 249: ' other' (ID: 1273)
  Prédit: 'other'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'other' → logprob: -0.00033546582562848926
    2. ' other' → logprob: -8.000335693359375
    3. '.other' → logprob: -18.375335693359375
    4. '(other' → logprob: -18.750335693359375
    5. 'Other' → logprob: -19.625335693359375
    6. ' ' → logprob: -19.750335693359375
    7. '0' → logprob: -20.250335693359375
    8. ')' → logprob: -20.375335693359375
    9. '_other' → logprob: -20.750335693359375
    10. 'othe' → logprob: -20.750335693359375

Token 250: '.z' (ID: 9161)
  Prédit: '.z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.z' → logprob: -0.0017737116431817412
    2. '.' → logprob: -6.376773834228516
    3. ')' → logprob: -9.751773834228516
    4. 'z' → logprob: -11.876773834228516
    5. ',' → logprob: -12.876773834228516
    6. ',z' → logprob: -13.626773834228516
    7. ' ' → logprob: -14.751773834228516
    8. '.x' → logprob: -14.876773834228516
    9. '```' → logprob: -15.376773834228516
    10. '.s' → logprob: -15.626773834228516

Token 251: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.8802491215174086e-05
    2. ' )' → logprob: -11.000028610229492
    3. '<|end|>' → logprob: -11.625028610229492
    4. '       ' → logprob: -13.625028610229492
    5. ')
' → logprob: -14.000028610229492
    6. ')return' → logprob: -14.750028610229492
    7. '   ' → logprob: -15.000028610229492
    8. ')#' → logprob: -16.125028610229492
    9. '),' → logprob: -17.000028610229492
    10. ')\
' → logprob: -17.625028610229492

Token 252: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.047371476888656616
    2. ' ' → logprob: -4.0473713874816895
    3. '<|end|>' → logprob: -4.0473713874816895
    4. ' 
' → logprob: -5.9223713874816895
    5. '    
' → logprob: -6.0473713874816895
    6. '    ' → logprob: -6.6723713874816895
    7. ')' → logprob: -7.2973713874816895
    8. '  ' → logprob: -7.4223713874816895
    9. ' def' → logprob: -7.6723713874816895
    10. ':' → logprob: -7.6723713874816895

Token 253: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.5325958132743835
    2. '   ' → logprob: -0.9075958132743835
    3. ' def' → logprob: -5.032595634460449
    4. ':' → logprob: -6.907595634460449
    5. '    
' → logprob: -7.657595634460449
    6. ' 
' → logprob: -8.28259563446045
    7. ' ' → logprob: -8.40759563446045
    8. '       ' → logprob: -9.03259563446045
    9. '  ' → logprob: -9.15759563446045
    10. ')' → logprob: -9.28259563446045

Token 254: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.018224041908979416
    2. ' __' → logprob: -4.018224239349365
    3. 'def' → logprob: -9.518223762512207
    4. ' def' → logprob: -15.018223762512207
    5. '.__' → logprob: -16.268224716186523
    6. 'hash' → logprob: -17.018224716186523
    7. '___' → logprob: -17.393224716186523
    8. ' ' → logprob: -18.143224716186523
    9. '__
' → logprob: -18.268224716186523
    10. '
' → logprob: -19.018224716186523

Token 255: 'hash' (ID: 16909)
  Prédit: 'hash'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -2.935296834039036e-06
    2. 'lt' → logprob: -12.75000286102295
    3. 'ne' → logprob: -17.000003814697266
    4. ' hash' → logprob: -17.750003814697266
    5. '_hash' → logprob: -20.125003814697266
    6. 'repr' → logprob: -20.125003814697266
    7. '	hash' → logprob: -22.000003814697266
    8. 'Hash' → logprob: -22.375003814697266
    9. '
' → logprob: -22.625003814697266
    10. 'gt' → logprob: -23.125003814697266

Token 256: '__(' (ID: 8241)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.12700138986110687
    2. '(' → logprob: -2.2520012855529785
    3. '__(' → logprob: -4.6270012855529785
    4. ' (' → logprob: -6.0020012855529785
    5. '<|end|>' → logprob: -7.0020012855529785
    6. '__((' → logprob: -8.377001762390137
    7. '__' → logprob: -8.877001762390137
    8. 'self' → logprob: -8.877001762390137
    9. '__(
' → logprob: -9.252001762390137
    10. ')(' → logprob: -9.377001762390137

Token 257: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.088346359931165e-07
    2. ' self' → logprob: -14.000000953674316
    3. '
' → logprob: -17.625
    4. '   ' → logprob: -17.875
    5. ')' → logprob: -18.875
    6. ' ' → logprob: -20.5
    7. '  ' → logprob: -21.5
    8. '(self' → logprob: -21.875
    9. '       ' → logprob: -22.125
    10. '    
' → logprob: -22.5

Token 258: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.00490011228248477
    2. '):
' → logprob: -5.379899978637695
    3. ')' → logprob: -8.254899978637695
    4. 'self' → logprob: -11.629899978637695
    5. ' ):' → logprob: -12.004899978637695
    6. '   ' → logprob: -13.504899978637695
    7. '):
' → logprob: -14.254899978637695
    8. '):

' → logprob: -14.379899978637695
    9. '():' → logprob: -14.504899978637695
    10. '}:' → logprob: -14.629899978637695

Token 259: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.009301485493779182
    2. '   ' → logprob: -4.759301662445068
    3. 'return' → logprob: -7.634301662445068
    4. ' return' → logprob: -8.50930118560791
    5. '      ' → logprob: -14.38430118560791
    6. '
' → logprob: -15.63430118560791
    7. '```' → logprob: -15.63430118560791
    8. '     ' → logprob: -15.88430118560791
    9. '	return' → logprob: -16.134302139282227
    10. '   ' → logprob: -16.259302139282227

Token 260: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.12708821892738342
    2. ' return' → logprob: -2.1270883083343506
    3. '       ' → logprob: -9.12708854675293
    4. '   ' → logprob: -10.12708854675293
    5. 'hash' → logprob: -11.75208854675293
    6. ' hash' → logprob: -13.12708854675293
    7. '```' → logprob: -14.12708854675293
    8. '	return' → logprob: -14.87708854675293
    9. ' ' → logprob: -15.50208854675293
    10. '{return' → logprob: -16.25208854675293

Token 261: ' hash' (ID: 10691)
  Prédit: 'hash'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'hash' → logprob: -0.10206335783004761
    2. ' hash' → logprob: -2.3520634174346924
    3. '(hash' → logprob: -6.352063179016113
    4. ' (' → logprob: -10.352063179016113
    5. ' self' → logprob: -10.602063179016113
    6. '(self' → logprob: -10.602063179016113
    7. 'self' → logprob: -10.602063179016113
    8. '((' → logprob: -12.477063179016113
    9. '   ' → logprob: -14.727063179016113
    10. '(' → logprob: -14.852063179016113

Token 262: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0003368926409166306
    2. '(' → logprob: -8.000336647033691
    3. '(self' → logprob: -13.500336647033691
    4. ' ((' → logprob: -17.375337600708008
    5. '(((' → logprob: -17.750337600708008
    6. '(
' → logprob: -18.000337600708008
    7. ' (' → logprob: -19.375337600708008
    8. '(('' → logprob: -19.875337600708008
    9. '__((' → logprob: -20.375337600708008
    10. '(tuple' → logprob: -20.375337600708008

Token 263: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.4121114822482923e-06
    2. ' self' → logprob: -12.625003814697266
    3. '(self' → logprob: -17.000003814697266
    4. '   ' → logprob: -18.625003814697266
    5. '
' → logprob: -20.375003814697266
    6. '	self' → logprob: -20.500003814697266
    7. '       ' → logprob: -21.625003814697266
    8. '[self' → logprob: -22.000003814697266
    9. ' ' → logprob: -22.375003814697266
    10. '```' → logprob: -22.375003814697266

Token 264: '.x' (ID: 3700)
  Prédit: '.x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.x' → logprob: -2.1888679839321412e-05
    2. 'x' → logprob: -11.125021934509277
    3. '.' → logprob: -12.000021934509277
    4. ' .' → logprob: -14.000021934509277
    5. ').' → logprob: -15.875021934509277
    6. ' x' → logprob: -19.25002098083496
    7. '.s' → logprob: -19.25002098083496
    8. ' ' → logprob: -19.50002098083496
    9. '`.' → logprob: -20.00002098083496
    10. 's' → logprob: -20.12502098083496

Token 265: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0002112886286340654
    2. ' ,' → logprob: -8.500211715698242
    3. ',self' → logprob: -12.000211715698242
    4. 'self' → logprob: -13.875211715698242
    5. ',
' → logprob: -14.500211715698242
    6. '       ' → logprob: -16.375211715698242
    7. ' self' → logprob: -17.000211715698242
    8. '   ' → logprob: -17.375211715698242
    9. '
' → logprob: -18.125211715698242
    10. ' ' → logprob: -18.250211715698242

Token 266: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.10020732134580612
    2. ' self' → logprob: -2.3502073287963867
    3. ' ' → logprob: -15.225207328796387
    4. '   ' → logprob: -15.975207328796387
    5. '	self' → logprob: -15.975207328796387
    6. '(self' → logprob: -16.22520637512207
    7. '<|end|>' → logprob: -17.35020637512207
    8. '       ' → logprob: -17.60020637512207
    9. '[self' → logprob: -17.72520637512207
    10. 'y' → logprob: -17.85020637512207

Token 267: '.y' (ID: 4486)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.3161947429180145
    2. ',y' → logprob: -1.941194772720337
    3. '.y' → logprob: -2.191194772720337
    4. 'y' → logprob: -4.566194534301758
    5. ' ,' → logprob: -5.566194534301758
    6. ' y' → logprob: -7.691194534301758
    7. 'self' → logprob: -8.316194534301758
    8. '   ' → logprob: -8.816194534301758
    9. 'hash' → logprob: -9.191194534301758
    10. ',self' → logprob: -9.191194534301758

Token 268: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00016277639952022582
    2. ' ,' → logprob: -9.500163078308105
    3. ',self' → logprob: -9.750163078308105
    4. '       ' → logprob: -10.875163078308105
    5. 'self' → logprob: -11.875163078308105
    6. '           ' → logprob: -13.750163078308105
    7. '   ' → logprob: -13.875163078308105
    8. ',
' → logprob: -14.250163078308105
    9. ',y' → logprob: -15.625163078308105
    10. '',' → logprob: -15.750163078308105

Token 269: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0024768433067947626
    2. ' self' → logprob: -6.002476692199707
    3. 'z' → logprob: -14.002476692199707
    4. '(self' → logprob: -16.252477645874023
    5. '	self' → logprob: -16.377477645874023
    6. '
' → logprob: -17.002477645874023
    7. ' ' → logprob: -17.502477645874023
    8. '<|end|>' → logprob: -18.502477645874023
    9. '[self' → logprob: -18.752477645874023
    10. ',self' → logprob: -18.877477645874023

Token 270: '.z' (ID: 9161)
  Prédit: '.z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.z' → logprob: -0.017543019726872444
    2. 'z' → logprob: -4.142542839050293
    3. ',' → logprob: -6.767542839050293
    4. ',z' → logprob: -8.267542839050293
    5. '.' → logprob: -9.767542839050293
    6. ' z' → logprob: -11.392542839050293
    7. ')' → logprob: -11.642542839050293
    8. '_z' → logprob: -12.517542839050293
    9. '-z' → logprob: -12.642542839050293
    10. ' ,' → logprob: -13.017542839050293

Token 271: '))

' (ID: 9746)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1269354522228241
    2. '))' → logprob: -2.1269354820251465
    3. ')
' → logprob: -12.126935005187988
    4. '))
' → logprob: -13.626935005187988
    5. ')))' → logprob: -15.251935005187988
    6. ' )' → logprob: -15.876935005187988
    7. ')}' → logprob: -16.001935958862305
    8. '})' → logprob: -16.751935958862305
    9. ' ))' → logprob: -18.001935958862305
    10. '}' → logprob: -18.126935958862305

Token 272: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.19718138873577118
    2. 'def' → logprob: -1.8221813440322876
    3. '<|end|>' → logprob: -5.072181224822998
    4. 'class' → logprob: -5.572181224822998
    5. ' def' → logprob: -5.947181224822998
    6. '    ' → logprob: -6.822181224822998
    7. ' ' → logprob: -7.572181224822998
    8. ')' → logprob: -7.572181224822998
    9. '@' → logprob: -7.822181224822998
    10. '    
' → logprob: -8.322181701660156

Token 273: ' Grid' (ID: 18087)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -0.8816364407539368
    2. 'Cube' → logprob: -1.381636381149292
    3. ' Cube' → logprob: -2.006636381149292
    4. ' Coordinate' → logprob: -2.506636381149292
    5. ' Game' → logprob: -3.131636381149292
    6. 'Game' → logprob: -3.881636381149292
    7. 'Grid' → logprob: -4.131636619567871
    8. ' Conway' → logprob: -4.506636619567871
    9. ' Grid' → logprob: -4.631636619567871
    10. 'Set' → logprob: -5.131636619567871

Token 274: '3' (ID: 18)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.002061522798612714
    2. '3' → logprob: -6.502061367034912
    3. ':
' → logprob: -7.752061367034912
    4. '(Set' → logprob: -9.87706184387207
    5. '(' → logprob: -11.00206184387207
    6. '():' → logprob: -11.25206184387207
    7. 'Set' → logprob: -11.50206184387207
    8. '):' → logprob: -12.00206184387207
    9. ':Set' → logprob: -12.12706184387207
    10. '(set' → logprob: -12.25206184387207

Token 275: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.3856492842023727e-06
    2. ' D' → logprob: -13.875000953674316
    3. 'd' → logprob: -15.875000953674316
    4. 'DC' → logprob: -16.250001907348633
    5. '```' → logprob: -17.000001907348633
    6. 'Ｄ' → logprob: -17.625001907348633
    7. '<D' → logprob: -17.750001907348633
    8. '   ' → logprob: -18.250001907348633
    9. 'DS' → logprob: -18.375001907348633
    10. 'Dim' → logprob: -18.375001907348633

Token 276: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.003207776928320527
    2. ':
' → logprob: -5.753207683563232
    3. '(' → logprob: -11.50320816040039
    4. '(Set' → logprob: -11.87820816040039
    5. '(List' → logprob: -12.37820816040039
    6. ':Set' → logprob: -13.00320816040039
    7. ':

' → logprob: -13.37820816040039
    8. ':
' → logprob: -14.37820816040039
    9. '(object' → logprob: -14.37820816040039
    10. ' :' → logprob: -14.87820816040039

Token 277: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.004551169462502003
    2. ':' → logprob: -5.504550933837891
    3. ':
' → logprob: -7.879550933837891
    4. '    
' → logprob: -10.37955093383789
    5. '(' → logprob: -11.37955093383789
    6. 'Set' → logprob: -11.62955093383789
    7. 'def' → logprob: -11.87955093383789
    8. '   ' → logprob: -12.37955093383789
    9. ' Set' → logprob: -12.50455093383789
    10. '(List' → logprob: -12.50455093383789

Token 278: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.10044367611408234
    2. ' def' → logprob: -2.8504436016082764
    3. '__' → logprob: -3.4754436016082764
    4. '   ' → logprob: -5.4754438400268555
    5. ' __' → logprob: -5.9754438400268555
    6. '  ' → logprob: -11.350443840026855
    7. 'slots' → logprob: -11.475443840026855
    8. 'class' → logprob: -11.725443840026855
    9. '```' → logprob: -11.850443840026855
    10. ' ' → logprob: -12.100443840026855

Token 279: ' __' (ID: 2516)
  Prédit: ' __'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' __' → logprob: -0.33359113335609436
    2. 'init' → logprob: -1.333591103553772
    3. '__' → logprob: -4.083590984344482
    4. '_init' → logprob: -5.833590984344482
    5. ' init' → logprob: -8.08359146118164
    6. '```' → logprob: -10.95859146118164
    7. 'set' → logprob: -12.45859146118164
    8. 'def' → logprob: -12.58359146118164
    9. 'slots' → logprob: -12.70859146118164
    10. '___' → logprob: -12.70859146118164

Token 280: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.16022534668445587
    2. 'slots' → logprob: -1.9102253913879395
    3. 'slot' → logprob: -14.160224914550781
    4. '_slots' → logprob: -15.160224914550781
    5. ' slots' → logprob: -15.660224914550781
    6. 'sl' → logprob: -17.41022491455078
    7. 'Slots' → logprob: -17.41022491455078
    8. 'inite' → logprob: -17.53522491455078
    9. '   ' → logprob: -18.91022491455078
    10. '_init' → logprob: -19.03522491455078

Token 281: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.02358994632959366
    2. '(self' → logprob: -3.773589849472046
    3. '(' → logprob: -9.023590087890625
    4. '__(
' → logprob: -9.398590087890625
    5. 'self' → logprob: -9.773590087890625
    6. '__' → logprob: -9.898590087890625
    7. '_(' → logprob: -11.398590087890625
    8. ' (' → logprob: -11.523590087890625
    9. ')(' → logprob: -12.273590087890625
    10. '<>(' → logprob: -12.898590087890625

Token 282: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -9.13388703338569e-06
    2. ' self' → logprob: -11.875009536743164
    3. '   ' → logprob: -13.750009536743164
    4. '
' → logprob: -14.625009536743164
    5. 'size' → logprob: -15.250009536743164
    6. '0' → logprob: -15.375009536743164
    7. '       ' → logprob: -16.125009536743164
    8. ')' → logprob: -16.875009536743164
    9. 'max' → logprob: -17.500009536743164
    10. ',' → logprob: -17.625009536743164

Token 283: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.07901822775602341
    2. 'self' → logprob: -2.5790181159973145
    3. '   ' → logprob: -10.204018592834473
    4. ')' → logprob: -10.704018592834473
    5. ' ,' → logprob: -10.704018592834473
    6. '(self' → logprob: -11.579018592834473
    7. ' self' → logprob: -11.954018592834473
    8. '__,' → logprob: -11.954018592834473
    9. ',self' → logprob: -12.079018592834473
    10. '):
' → logprob: -12.704018592834473

Token 284: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.4550597071647644
    2. 'max' → logprob: -1.8300597667694092
    3. ' size' → logprob: -2.205059766769409
    4. 'dim' → logprob: -2.830059766769409
    5. ' max' → logprob: -4.45505952835083
    6. 'active' → logprob: -4.58005952835083
    7. 'initial' → logprob: -5.20505952835083
    8. 'dimension' → logprob: -5.83005952835083
    9. ' active' → logprob: -6.20505952835083
    10. ' initial' → logprob: -7.20505952835083

Token 285: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00010747690976131707
    2. '):' → logprob: -9.250107765197754
    3. ':int' → logprob: -11.500107765197754
    4. ')' → logprob: -14.500107765197754
    5. ' :' → logprob: -15.000107765197754
    6. '_:' → logprob: -15.500107765197754
    7. '):
' → logprob: -16.875106811523438
    8. 'int' → logprob: -17.000106811523438
    9. '=' → logprob: -18.750106811523438
    10. '```' → logprob: -18.875106811523438

Token 286: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.5597102396423e-05
    2. ' int' → logprob: -10.250035285949707
    3. '[int' → logprob: -16.000036239624023
    4. ')' → logprob: -16.875036239624023
    5. '   ' → logprob: -18.125036239624023
    6. ' ' → logprob: -18.875036239624023
    7. '=int' → logprob: -19.750036239624023
    8. '(int' → logprob: -19.875036239624023
    9. '<int' → logprob: -20.000036239624023
    10. ':int' → logprob: -20.000036239624023

Token 287: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.033639706671237946
    2. ',' → logprob: -3.533639669418335
    3. ')' → logprob: -6.033639907836914
    4. '):
' → logprob: -6.533639907836914
    5. ' ):' → logprob: -11.408639907836914
    6. ':' → logprob: -11.658639907836914
    7. '):
' → logprob: -12.033639907836914
    8. '   ' → logprob: -12.783639907836914
    9. ' ,' → logprob: -14.283639907836914
    10. '),' → logprob: -15.033639907836914

Token 288: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001783821964636445
    2. 'self' → logprob: -6.376783847808838
    3. ' self' → logprob: -9.50178337097168
    4. '   ' → logprob: -12.00178337097168
    5. '	self' → logprob: -14.87678337097168
    6. '      ' → logprob: -16.00178337097168
    7. '(self' → logprob: -16.37678337097168
    8. '     ' → logprob: -17.12678337097168
    9. '           ' → logprob: -17.25178337097168
    10. ',' → logprob: -17.25178337097168

Token 289: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.01495746523141861
    2. ' self' → logprob: -4.264957427978516
    3. '       ' → logprob: -7.139957427978516
    4. '   ' → logprob: -14.139957427978516
    5. '	self' → logprob: -16.264957427978516
    6. ' ' → logprob: -17.264957427978516
    7. '        ' → logprob: -17.764957427978516
    8. '
' → logprob: -18.139957427978516
    9. '        
' → logprob: -18.639957427978516
    10. 'super' → logprob: -18.764957427978516

Token 290: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.10418058931827545
    2. '.' → logprob: -2.3541805744171143
    3. 'size' → logprob: -6.479180812835693
    4. '.s' → logprob: -7.229180812835693
    5. '.cells' → logprob: -7.729180812835693
    6. ' .' → logprob: -8.229180335998535
    7. '.active' → logprob: -8.479180335998535
    8. '.points' → logprob: -8.729180335998535
    9. '.grid' → logprob: -8.729180335998535
    10. '.coordinates' → logprob: -9.729180335998535

Token 291: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.38689249753952026
    2. '=' → logprob: -1.136892557144165
    3. ':' → logprob: -11.386892318725586
    4. ' ' → logprob: -11.886892318725586
    5. '   ' → logprob: -13.386892318725586
    6. '  ' → logprob: -14.636892318725586
    7. ')' → logprob: -14.886892318725586
    8. ',' → logprob: -15.261892318725586
    9. '=int' → logprob: -15.636892318725586
    10. ' =)' → logprob: -15.636892318725586

Token 292: ' size' (ID: 2349)
  Prédit: 'size'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'size' → logprob: -0.02324547804892063
    2. ' size' → logprob: -3.7732455730438232
    3. ' ' → logprob: -18.273244857788086
    4. '   ' → logprob: -18.273244857788086
    5. '(size' → logprob: -18.398244857788086
    6. '	size' → logprob: -19.523244857788086
    7. '    ' → logprob: -19.648244857788086
    8. 's' → logprob: -19.648244857788086
    9. '[size' → logprob: -19.648244857788086
    10. 'int' → logprob: -19.898244857788086

Token 293: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.005318074021488428
    2. '
' → logprob: -5.2553181648254395
    3. 'self' → logprob: -9.755317687988281
    4. ' self' → logprob: -11.505317687988281
    5. '   ' → logprob: -12.255317687988281
    6. '<|end|>' → logprob: -12.380317687988281
    7. ',' → logprob: -12.880317687988281
    8. '        
' → logprob: -13.005317687988281
    9. '    
' → logprob: -14.880317687988281
    10. ' ' → logprob: -14.880317687988281

Token 294: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0005592276575043797
    2. 'self' → logprob: -7.875559329986572
    3. '
' → logprob: -8.750558853149414
    4. ' self' → logprob: -11.375558853149414
    5. '   ' → logprob: -12.625558853149414
    6. '        
' → logprob: -12.750558853149414
    7. 'def' → logprob: -14.375558853149414
    8. '<|end|>' → logprob: -14.375558853149414
    9. '	' → logprob: -14.750558853149414
    10. '	self' → logprob: -15.125558853149414

Token 295: ' #' (ID: 1069)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -7.226628895296017e-06
    2. ' self' → logprob: -11.875007629394531
    3. '       ' → logprob: -15.750007629394531
    4. '        
' → logprob: -16.12500762939453
    5. '
' → logprob: -17.37500762939453
    6. '   ' → logprob: -18.12500762939453
    7. '[self' → logprob: -18.75000762939453
    8. '	self' → logprob: -19.00000762939453
    9. '        

' → logprob: -20.62500762939453
    10. '

' → logprob: -20.75000762939453

Token 296: ' Represent' (ID: 34617)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.010426769964396954
    2. 'active' → logprob: -4.760426998138428
    3. 'cells' → logprob: -7.010426998138428
    4. ' self' → logprob: -7.760426998138428
    5. 'grid' → logprob: -8.76042652130127
    6. 'occupied' → logprob: -10.26042652130127
    7. ' active' → logprob: -10.26042652130127
    8. 'data' → logprob: -10.38542652130127
    9. 'from' → logprob: -10.63542652130127
    10. 'alive' → logprob: -10.76042652130127

Token 297: ' ' (ID: 220)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.04761043190956116
    2. ' self' → logprob: -3.1726105213165283
    3. 'ing' → logprob: -5.422610282897949
    4. '       ' → logprob: -9.92261028289795
    5. 'ed' → logprob: -10.42261028289795
    6. ' the' → logprob: -10.54761028289795
    7. '   ' → logprob: -10.54761028289795
    8. 'the' → logprob: -12.29761028289795
    9. 'ation' → logprob: -12.29761028289795
    10. '(self' → logprob: -12.42261028289795

Token 298: '3' (ID: 18)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -6.802049756515771e-05
    2. ' self' → logprob: -9.750067710876465
    3. 'Set' → logprob: -11.625067710876465
    4. '
' → logprob: -15.000067710876465
    5. 'set' → logprob: -15.375067710876465
    6. '{' → logprob: -16.62506866455078
    7. 'active' → logprob: -16.75006866455078
    8. 'from' → logprob: -17.00006866455078
    9. 'the' → logprob: -17.37506866455078
    10. '#' → logprob: -17.50006866455078

Token 299: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.006575634703040123
    2. 'self' → logprob: -5.756575584411621
    3. 'd' → logprob: -6.006575584411621
    4. 'from' → logprob: -8.381575584411621
    5. 'def' → logprob: -8.756575584411621
    6. ')' → logprob: -9.131575584411621
    7. ' self' → logprob: -9.256575584411621
    8. '       ' → logprob: -9.381575584411621
    9. '
' → logprob: -10.256575584411621
    10. ' ' → logprob: -10.506575584411621

Token 300: ' grid' (ID: 10586)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.08273163437843323
    2. ' self' → logprob: -4.0827317237854
    3. '_active' → logprob: -4.0827317237854
    4. 'active' → logprob: -4.3327317237854
    5. ' active' → logprob: -4.4577317237854
    6. '_set' → logprob: -4.5827317237854
    7. ' cells' → logprob: -5.9577317237854
    8. 'cells' → logprob: -6.2077317237854
    9. '_cells' → logprob: -6.5827317237854
    10. 'Set' → logprob: -6.8327317237854

Token 301: ' as' (ID: 472)
  Prédit: ' as'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' as' → logprob: -0.09508330374956131
    2. 'self' → logprob: -2.845083236694336
    3. 'as' → logprob: -3.720083236694336
    4. ' self' → logprob: -5.095083236694336
    5. '       ' → logprob: -7.345083236694336
    6. ' with' → logprob: -7.595083236694336
    7. 'with' → logprob: -8.095083236694336
    8. ':' → logprob: -8.595083236694336
    9. ',' → logprob: -8.595083236694336
    10. '(self' → logprob: -9.720083236694336

Token 302: ' set' (ID: 920)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.2023327648639679
    2. 'a' → logprob: -1.9523327350616455
    3. 'set' → logprob: -3.2023327350616455
    4. 'self' → logprob: -8.327332496643066
    5. 'List' → logprob: -9.202332496643066
    6. '_set' → logprob: -9.702332496643066
    7. ' Set' → logprob: -9.827332496643066
    8. 'dict' → logprob: -9.827332496643066
    9. ' a' → logprob: -10.077332496643066
    10. ' set' → logprob: -12.702332496643066

Token 303: ' of' (ID: 328)
  Prédit: ' of'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' of' → logprob: -0.094615139067173
    2. '       ' → logprob: -3.0946152210235596
    3. '(self' → logprob: -3.4696152210235596
    4. 'self' → logprob: -5.3446149826049805
    5. ' self' → logprob: -5.3446149826049805
    6. '[' → logprob: -6.4696149826049805
    7. '()' → logprob: -7.2196149826049805
    8. '[self' → logprob: -7.5946149826049805
    9. 'of' → logprob: -7.7196149826049805
    10. '   ' → logprob: -8.84461498260498

Token 304: ' occupied' (ID: 46186)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -0.00199251645244658
    2. ' Coordinate' → logprob: -6.626992702484131
    3. 'active' → logprob: -7.751992702484131
    4. 'Coordinates' → logprob: -8.626992225646973
    5. ' active' → logprob: -9.876992225646973
    6. 'Active' → logprob: -13.126992225646973
    7. 'occupied' → logprob: -13.751992225646973
    8. ' Coordinates' → logprob: -13.876992225646973
    9. 'alive' → logprob: -14.501992225646973
    10. 'coordinates' → logprob: -15.251992225646973

Token 305: ' Coordinates' (ID: 128904)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -0.3348827660083771
    2. 'Coordinates' → logprob: -1.3348827362060547
    3. 'coordinates' → logprob: -5.084882736206055
    4. ' Coordinates' → logprob: -5.334882736206055
    5. ' coordinates' → logprob: -5.459882736206055
    6. ' cells' → logprob: -5.834882736206055
    7. ' Coordinate' → logprob: -5.959882736206055
    8. 'cells' → logprob: -7.584882736206055
    9. '_coordinates' → logprob: -9.584882736206055
    10. 'positions' → logprob: -12.209882736206055

Token 306: ' for' (ID: 395)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008125623688101768
    2. 'self' → logprob: -5.6331257820129395
    3. ' self' → logprob: -5.7581257820129395
    4. '
' → logprob: -7.1331257820129395
    5. '(self' → logprob: -8.008125305175781
    6. '   ' → logprob: -9.383125305175781
    7. ',' → logprob: -10.383125305175781
    8. '<|end|>' → logprob: -10.508125305175781
    9. ' ' → logprob: -10.633125305175781
    10. ':' → logprob: -11.383125305175781

Token 307: ' efficiency' (ID: 17456)
  Prédit: 'fast'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'fast' → logprob: -0.9911314249038696
    2. ' fast' → logprob: -1.6161314249038696
    3. 'self' → logprob: -1.9911314249038696
    4. ' active' → logprob: -2.49113130569458
    5. 'active' → logprob: -2.49113130569458
    6. 'efficient' → logprob: -3.61613130569458
    7. ' faster' → logprob: -4.36613130569458
    8. 'alive' → logprob: -4.36613130569458
    9. 'occupied' → logprob: -4.49113130569458
    10. 'eff' → logprob: -4.74113130569458

Token 308: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.003023583209142089
    2. 'self' → logprob: -6.128023624420166
    3. ' self' → logprob: -7.253023624420166
    4. '<|end|>' → logprob: -9.503023147583008
    5. '
' → logprob: -10.378023147583008
    6. '   ' → logprob: -11.628023147583008
    7. ' ' → logprob: -12.503023147583008
    8. '(self' → logprob: -13.003023147583008
    9. '        
' → logprob: -13.003023147583008
    10. ',' → logprob: -13.128023147583008

Token 309: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0017142124706879258
    2. 'self' → logprob: -6.62671422958374
    3. ' self' → logprob: -7.87671422958374
    4. '   ' → logprob: -12.751713752746582
    5. '<|end|>' → logprob: -12.876713752746582
    6. '```' → logprob: -14.001713752746582
    7. ' ' → logprob: -14.501713752746582
    8. '	self' → logprob: -14.626713752746582
    9. ',' → logprob: -15.376713752746582
    10. '        
' → logprob: -15.501713752746582

Token 310: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0030671951826661825
    2. ' self' → logprob: -5.8780670166015625
    3. '       ' → logprob: -8.253067016601562
    4. '
' → logprob: -14.003067016601562
    5. '   ' → logprob: -14.628067016601562
    6. '	self' → logprob: -15.253067016601562
    7. 'from' → logprob: -16.878067016601562
    8. '(self' → logprob: -17.128067016601562
    9. '           ' → logprob: -17.378067016601562
    10. ' ' → logprob: -17.378067016601562

Token 311: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.17144516110420227
    2. '.active' → logprob: -1.9214451313018799
    3. 'occupied' → logprob: -5.046445369720459
    4. '.cells' → logprob: -5.671445369720459
    5. '.live' → logprob: -8.1714448928833
    6. ' .' → logprob: -8.4214448928833
    7. '.c' → logprob: -8.6714448928833
    8. 'active' → logprob: -9.2964448928833
    9. '.points' → logprob: -9.2964448928833
    10. '._' → logprob: -9.4214448928833

Token 312: 'occupied' (ID: 98229)
  Prédit: 'occupied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.16367699205875397
    2. 'active' → logprob: -1.9136769771575928
    3. 'cells' → logprob: -6.038677215576172
    4. 'alive' → logprob: -7.413677215576172
    5. 'filled' → logprob: -8.413677215576172
    6. 'points' → logprob: -9.913677215576172
    7. 'occup' → logprob: -10.038677215576172
    8. 'grid' → logprob: -10.538677215576172
    9. 'live' → logprob: -10.913677215576172
    10. 'activated' → logprob: -10.913677215576172

Token 313: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.156918004155159
    2. '=' → logprob: -2.1569180488586426
    3. ' =' → logprob: -3.5319180488586426
    4. ' :' → logprob: -8.281917572021484
    5. ':Set' → logprob: -10.531917572021484
    6. ' ' → logprob: -11.906917572021484
    7. '=set' → logprob: -12.156917572021484
    8. 's' → logprob: -14.156917572021484
    9. ':set' → logprob: -14.156917572021484
    10. ')' → logprob: -14.156917572021484

Token 314: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.0002036595979006961
    2. ' Set' → logprob: -8.500204086303711
    3. '	Set' → logprob: -15.625204086303711
    4. 'set' → logprob: -17.12520408630371
    5. '_Set' → logprob: -18.25020408630371
    6. '   ' → logprob: -18.75020408630371
    7. '_set' → logprob: -19.37520408630371
    8. '(Set' → logprob: -20.12520408630371
    9. ' ' → logprob: -20.25020408630371
    10. '  ' → logprob: -21.37520408630371

Token 315: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -9.088346359931165e-07
    2. 'Coordinate' → logprob: -14.000000953674316
    3. '['' → logprob: -17.375
    4. '```' → logprob: -17.5
    5. '[
' → logprob: -17.75
    6. '(Co' → logprob: -19.125
    7. ' [' → logprob: -19.375
    8. '   ' → logprob: -19.625
    9. '_coordinate' → logprob: -19.75
    10. '[Serialize' → logprob: -19.75

Token 316: 'Coordinate' (ID: 40872)
  Prédit: 'Coordinate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -4.5491004129871726e-05
    2. ' Coordinate' → logprob: -10.000045776367188
    3. 'Coord' → logprob: -20.750045776367188
    4. 'Coordinates' → logprob: -20.875045776367188
    5. '_coordinate' → logprob: -21.000045776367188
    6. '[' → logprob: -21.625045776367188
    7. 'coordinate' → logprob: -22.000045776367188
    8. 'Coordinator' → logprob: -22.250045776367188
    9. 'Co' → logprob: -22.750045776367188
    10. ']' → logprob: -22.875045776367188

Token 317: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. 'Coordinate' → logprob: -16.375
    3. ']' → logprob: -18.875
    4. ' ' → logprob: -19.25
    5. ')' → logprob: -21.125
    6. '```' → logprob: -21.875
    7. ' Coordinate' → logprob: -22.5
    8. 'Coordinates' → logprob: -22.75
    9. '   ' → logprob: -23.125
    10. '[' → logprob: -23.25

Token 318: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -5.676981345459353e-06
    2. '3' → logprob: -12.625005722045898
    3. 'Coordinate' → logprob: -13.375005722045898
    4. ')' → logprob: -14.500005722045898
    5. ']' → logprob: -16.5000057220459
    6. ' D' → logprob: -17.2500057220459
    7. '])' → logprob: -17.5000057220459
    8. 'C' → logprob: -17.5000057220459
    9. 's' → logprob: -18.0000057220459
    10. '4' → logprob: -18.1250057220459

Token 319: ']' (ID: 60)
  Prédit: ']'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -6.869017852295656e-06
    2. ']=' → logprob: -12.000006675720215
    3. ' ]' → logprob: -15.375006675720215
    4. '']' → logprob: -15.625006675720215
    5. '()]' → logprob: -15.875006675720215
    6. ']
' → logprob: -16.12500762939453
    7. '`]' → logprob: -16.62500762939453
    8. ']>' → logprob: -17.00000762939453
    9. '>' → logprob: -17.50000762939453
    10. ')' → logprob: -17.50000762939453

Token 320: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3868790566921234
    2. ' =' → logprob: -1.1368790864944458
    3. '=set' → logprob: -12.386878967285156
    4. ' ' → logprob: -12.636878967285156
    5. '<|end|>' → logprob: -15.261878967285156
    6. ')' → logprob: -15.761878967285156
    7. '  ' → logprob: -16.636878967285156
    8. '   ' → logprob: -16.636878967285156
    9. ' =
' → logprob: -17.886878967285156
    10. '=[]' → logprob: -18.011878967285156

Token 321: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.10020763427019119
    2. ' set' → logprob: -2.350207567214966
    3. '=set' → logprob: -14.850207328796387
    4. '	set' → logprob: -15.600207328796387
    5. ')set' → logprob: -15.975207328796387
    6. '(set' → logprob: -15.975207328796387
    7. ' ' → logprob: -16.475208282470703
    8. '   ' → logprob: -16.600208282470703
    9. 'se' → logprob: -17.975208282470703
    10. '{' → logprob: -18.100208282470703

Token 322: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.004005742259323597
    2. '()
' → logprob: -6.2540059089660645
    3. '<|end|>' → logprob: -6.7540059089660645
    4. '   ' → logprob: -7.6290059089660645
    5. '()

' → logprob: -8.379005432128906
    6. 'def' → logprob: -9.379005432128906
    7. ')' → logprob: -10.629005432128906
    8. '<|end|>' → logprob: -10.754005432128906
    9. '())' → logprob: -11.254005432128906
    10. '(' → logprob: -11.254005432128906

Token 323: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.036627091467380524
    2. '<|end|>' → logprob: -3.7866270542144775
    3. '
' → logprob: -4.911627292633057
    4. '    
' → logprob: -5.536627292633057
    5. 'def' → logprob: -6.911627292633057
    6. ' def' → logprob: -7.911627292633057
    7. '<|end|>' → logprob: -8.536626815795898
    8. '  
' → logprob: -9.036626815795898
    9. ' 
' → logprob: -9.411626815795898
    10. '```' → logprob: -9.786626815795898

Token 324: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.32049673795700073
    2. ' def' → logprob: -1.4454967975616455
    3. '   ' → logprob: -3.3204967975616455
    4. '
' → logprob: -6.195496559143066
    5. '    
' → logprob: -8.195496559143066
    6. '	def' → logprob: -9.820496559143066
    7. ' 
' → logprob: -10.320496559143066
    8. '<|end|>' → logprob: -10.695496559143066
    9. ' ' → logprob: -11.820496559143066
    10. '        
' → logprob: -12.445496559143066

Token 325: ' set' (ID: 920)
  Prédit: 'activate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'activate' → logprob: -1.0270076990127563
    2. 'add' → logprob: -1.5270076990127563
    3. ' add' → logprob: -1.5270076990127563
    4. ' activate' → logprob: -2.277007579803467
    5. ' is' → logprob: -2.902007579803467
    6. 'is' → logprob: -3.777007579803467
    7. ' step' → logprob: -5.402007579803467
    8. ' set' → logprob: -5.527007579803467
    9. ' toggle' → logprob: -5.777007579803467
    10. 'toggle' → logprob: -5.902007579803467

Token 326: '_cell' (ID: 39197)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.029265647754073143
    2. '_active' → logprob: -4.154265880584717
    3. '_cell' → logprob: -4.779265880584717
    4. '_state' → logprob: -6.029265880584717
    5. '_alive' → logprob: -6.654265880584717
    6. '(self' → logprob: -7.654265880584717
    7. '_oc' → logprob: -9.529265403747559
    8. ' _' → logprob: -9.654265403747559
    9. '_cube' → logprob: -9.779265403747559
    10. '_space' → logprob: -10.029265403747559

Token 327: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.003701616544276476
    2. '(' → logprob: -5.628701686859131
    3. ' (' → logprob: -9.503701210021973
    4. '(co' → logprob: -11.378701210021973
    5. '(x' → logprob: -12.128701210021973
    6. '(Co' → logprob: -12.878701210021973
    7. 'self' → logprob: -13.128701210021973
    8. ' ' → logprob: -13.628701210021973
    9. '(
' → logprob: -13.753701210021973
    10. '   ' → logprob: -14.628701210021973

Token 328: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.10916721075773239
    2. ',' → logprob: -2.4841670989990234
    3. ')' → logprob: -4.609167098999023
    4. '(' → logprob: -6.234167098999023
    5. 'self' → logprob: -6.359167098999023
    6. ')(' → logprob: -6.484167098999023
    7. ' (' → logprob: -6.609167098999023
    8. '<|end|>' → logprob: -6.734167098999023
    9. ' ,' → logprob: -6.859167098999023
    10. ' ' → logprob: -8.109167098999023

Token 329: ' coord' (ID: 25819)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.008803179487586021
    2. ' self' → logprob: -5.258803367614746
    3. 'x' → logprob: -6.008803367614746
    4. 'coordinate' → logprob: -7.133803367614746
    5. 'coord' → logprob: -8.383803367614746
    6. ' coordinate' → logprob: -10.133803367614746
    7. ' x' → logprob: -11.133803367614746
    8. ' coord' → logprob: -11.758803367614746
    9. 'coordinates' → logprob: -11.758803367614746
    10. '   ' → logprob: -12.883803367614746

Token 330: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.16075432300567627
    2. ':' → logprob: -1.9107543230056763
    3. '):' → logprob: -8.035754203796387
    4. ' ,' → logprob: -9.535754203796387
    5. 'self' → logprob: -9.910754203796387
    6. ')' → logprob: -10.160754203796387
    7. '   ' → logprob: -11.285754203796387
    8. ' :' → logprob: -11.910754203796387
    9. '       ' → logprob: -12.160754203796387
    10. 's' → logprob: -13.035754203796387

Token 331: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -0.0007964044925756752
    2. ')' → logprob: -7.875796318054199
    3. 'coordinate' → logprob: -8.8757963180542
    4. ' Coordinate' → logprob: -9.0007963180542
    5. 'Coordinates' → logprob: -9.7507963180542
    6. '_coordinate' → logprob: -10.5007963180542
    7. ' coordinate' → logprob: -11.0007963180542
    8. '):
' → logprob: -11.5007963180542
    9. '<|end|>' → logprob: -11.6257963180542
    10. 'self' → logprob: -11.6257963180542

Token 332: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. ')' → logprob: -18.75
    4. ',' → logprob: -19.0
    5. 'Coordinate' → logprob: -19.5
    6. '   ' → logprob: -19.875
    7. '[' → logprob: -20.875
    8. '۳' → logprob: -21.125
    9. '  ' → logprob: -21.875
    10. 'Coordinates' → logprob: -22.0

Token 333: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.7432603272027336e-06
    2. '3' → logprob: -13.750001907348633
    3. ')' → logprob: -14.750001907348633
    4. ' ' → logprob: -16.375001907348633
    5. 'C' → logprob: -16.625001907348633
    6. ' D' → logprob: -17.625001907348633
    7. ',' → logprob: -17.875001907348633
    8. '[' → logprob: -18.125001907348633
    9. '   ' → logprob: -18.625001907348633
    10. '4' → logprob: -18.625001907348633

Token 334: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -4.513339445111342e-05
    2. ' ,' → logprob: -10.500044822692871
    3. ')' → logprob: -11.000044822692871
    4. '):' → logprob: -15.000044822692871
    5. '   ' → logprob: -15.500044822692871
    6. ',value' → logprob: -16.000045776367188
    7. '),' → logprob: -17.000045776367188
    8. ',is' → logprob: -17.125045776367188
    9. '‌,' → logprob: -17.500045776367188
    10. 'value' → logprob: -17.750045776367188

Token 335: ' alive' (ID: 23757)
  Prédit: ' alive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' alive' → logprob: -1.6690342426300049
    2. 'occupied' → logprob: -1.6690342426300049
    3. 'value' → logprob: -1.7940342426300049
    4. ' value' → logprob: -1.7940342426300049
    5. ' occupied' → logprob: -2.419034242630005
    6. 'state' → logprob: -2.419034242630005
    7. ' state' → logprob: -3.294034242630005
    8. 'alive' → logprob: -3.544034242630005
    9. ' active' → logprob: -3.669034242630005
    10. 'active' → logprob: -3.919034242630005

Token 336: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0010126839624717832
    2. '):' → logprob: -7.626012802124023
    3. '=True' → logprob: -8.001012802124023
    4. ')' → logprob: -8.751012802124023
    5. '=' → logprob: -10.751012802124023
    6. 'True' → logprob: -12.376012802124023
    7. '_:' → logprob: -14.001012802124023
    8. '):
' → logprob: -14.251012802124023
    9. '```' → logprob: -14.376012802124023
    10. '(True' → logprob: -14.501012802124023

Token 337: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.0026881329249590635
    2. ' bool' → logprob: -6.002687931060791
    3. 'True' → logprob: -8.50268840789795
    4. ')' → logprob: -12.12768840789795
    5. ' True' → logprob: -12.62768840789795
    6. '   ' → logprob: -14.37768840789795
    7. ' ' → logprob: -15.87768840789795
    8. '	bool' → logprob: -17.002687454223633
    9. '  ' → logprob: -17.502687454223633
    10. ' )' → logprob: -18.752687454223633

Token 338: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.030292000621557236
    2. ')' → logprob: -3.53029203414917
    3. '):
' → logprob: -7.53029203414917
    4. ':' → logprob: -13.405291557312012
    5. ' ):' → logprob: -13.530291557312012
    6. '):
' → logprob: -13.780291557312012
    7. '   ' → logprob: -14.655291557312012
    8. ')->' → logprob: -15.280291557312012
    9. ' )' → logprob: -16.530292510986328
    10. '):

' → logprob: -16.655292510986328

Token 339: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.00016957100888248533
    2. '):' → logprob: -8.87516975402832
    3. ':
' → logprob: -10.50016975402832
    4. ' :' → logprob: -14.00016975402832
    5. '():' → logprob: -14.37516975402832
    6. '):
' → logprob: -15.62516975402832
    7. '>:' → logprob: -16.00016975402832
    8. ':def' → logprob: -16.00016975402832
    9. ':void' → logprob: -16.25016975402832
    10. ':**' → logprob: -16.37516975402832

Token 340: ' None' (ID: 4662)
  Prédit: 'None'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'None' → logprob: -0.3132670223712921
    2. ' None' → logprob: -1.3132669925689697
    3. '   ' → logprob: -12.18826675415039
    4. ' ' → logprob: -16.18826675415039
    5. '_None' → logprob: -16.68826675415039
    6. '(None' → logprob: -17.68826675415039
    7. 'No' → logprob: -17.81326675415039
    8. '       ' → logprob: -18.06326675415039
    9. ':' → logprob: -18.68826675415039
    10. 'none' → logprob: -18.68826675415039

Token 341: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0009262301027774811
    2. ':
' → logprob: -7.1259260177612305
    3. '):' → logprob: -9.12592601776123
    4. '       ' → logprob: -12.25092601776123
    5. '):
' → logprob: -12.50092601776123
    6. '<|end|>' → logprob: -13.50092601776123
    7. ',' → logprob: -14.25092601776123
    8. '():' → logprob: -14.25092601776123
    9. '   ' → logprob: -15.12592601776123
    10. ':**' → logprob: -15.37592601776123

Token 342: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00173158326651901
    2. ':' → logprob: -7.2517313957214355
    3. '   ' → logprob: -7.5017313957214355
    4. '<|end|>' → logprob: -8.626731872558594
    5. '        
' → logprob: -9.376731872558594
    6. '    ' → logprob: -10.126731872558594
    7. ':
' → logprob: -10.751731872558594
    8. '        ' → logprob: -10.751731872558594
    9. ')' → logprob: -11.001731872558594
    10. ' if' → logprob: -11.001731872558594

Token 343: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.357312947511673
    2. '       ' → logprob: -1.2323129177093506
    3. 'if' (adapté à ' if') → logprob: -4.73231315612793
    4. '   ' → logprob: -11.23231315612793
    5. ' ' → logprob: -13.35731315612793
    6. '    ' → logprob: -13.48231315612793
    7. '
' → logprob: -13.85731315612793
    8. '```' → logprob: -14.10731315612793
    9. '	if' → logprob: -14.23231315612793
    10. ' 
' → logprob: -14.35731315612793

Token 344: ' alive' (ID: 23757)
  Prédit: ' alive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' alive' → logprob: -0.25193196535110474
    2. 'alive' → logprob: -1.50193190574646
    3. '   ' → logprob: -13.501932144165039
    4. '_alive' → logprob: -13.751932144165039
    5. 'al' → logprob: -15.626932144165039
    6. 'Alive' → logprob: -16.62693214416504
    7. ' ' → logprob: -16.87693214416504
    8. '           ' → logprob: -17.87693214416504
    9. ' dead' → logprob: -18.12693214416504
    10. 'dead' → logprob: -18.25193214416504

Token 345: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.029756737872958183
    2. ':
' → logprob: -3.529756784439087
    3. ' :' → logprob: -12.654756546020508
    4. ':
' → logprob: -13.654756546020508
    5. ' and' → logprob: -14.904756546020508
    6. '):
' → logprob: -15.029756546020508
    7. '):' → logprob: -15.529756546020508
    8. '():
' → logprob: -15.654756546020508
    9. '       ' → logprob: -15.779756546020508
    10. ' :
' → logprob: -15.904756546020508

Token 346: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0873681828379631
    2. ':' → logprob: -2.9623682498931885
    3. ':
' → logprob: -3.4623682498931885
    4. ' self' → logprob: -8.21236801147461
    5. '       ' → logprob: -9.71236801147461
    6. '               ' → logprob: -9.96236801147461
    7. ' and' → logprob: -10.33736801147461
    8. '.' → logprob: -10.33736801147461
    9. 'self' → logprob: -10.33736801147461
    10. '):
' → logprob: -10.33736801147461

Token 347: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.2572014033794403
    2. ' self' → logprob: -1.5072014331817627
    3. '           ' → logprob: -5.257201194763184
    4. '               ' → logprob: -10.007201194763184
    5. '       ' → logprob: -14.007201194763184
    6. '	self' → logprob: -14.007201194763184
    7. '(self' → logprob: -14.507201194763184
    8. '   ' → logprob: -14.507201194763184
    9. '[self' → logprob: -15.882201194763184
    10. ':self' → logprob: -16.1322021484375

Token 348: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -3.054500666621607e-06
    2. ' .' → logprob: -13.00000286102295
    3. 'occupied' → logprob: -14.75000286102295
    4. '`.' → logprob: -16.750003814697266
    5. '.set' → logprob: -17.000003814697266
    6. '       ' → logprob: -17.000003814697266
    7. '​.' → logprob: -17.375003814697266
    8. '```' → logprob: -17.375003814697266
    9. '>.' → logprob: -18.000003814697266
    10. '._' → logprob: -18.125003814697266

Token 349: 'occupied' (ID: 98229)
  Prédit: 'occupied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -1.9623810658231378e-05
    2. '.' → logprob: -10.875020027160645
    3. ' occupied' → logprob: -15.875020027160645
    4. 'occup' → logprob: -16.250019073486328
    5. '-' → logprob: -16.375019073486328
    6. '_' → logprob: -16.750019073486328
    7. '```' → logprob: -17.000019073486328
    8. 'occ' → logprob: -17.250019073486328
    9. 'owned' → logprob: -17.500019073486328
    10. 'Occupied' → logprob: -17.875019073486328

Token 350: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.0002614550176076591
    2. '.' → logprob: -8.250261306762695
    3. ' .' → logprob: -16.375261306762695
    4. '.update' → logprob: -18.375261306762695
    5. '.Add' → logprob: -18.375261306762695
    6. 'add' → logprob: -18.875261306762695
    7. ' add' → logprob: -19.875261306762695
    8. '.append' → logprob: -20.500261306762695
    9. '.insert' → logprob: -20.750261306762695
    10. '.setdefault' → logprob: -20.750261306762695

Token 351: '(coord' (ID: 151575)
  Prédit: '(coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(coord' → logprob: -1.1472419600977446e-06
    2. '(' → logprob: -14.375000953674316
    3. '(co' → logprob: -15.250000953674316
    4. 'coord' → logprob: -15.750000953674316
    5. '(coords' → logprob: -15.875000953674316
    6. ' coord' → logprob: -18.375001907348633
    7. ' (' → logprob: -20.625001907348633
    8. '(coeff' → logprob: -20.625001907348633
    9. '((' → logprob: -21.500001907348633
    10. '.coord' → logprob: -21.875001907348633

Token 352: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00023524489370174706
    2. ')
' → logprob: -8.375235557556152
    3. '       ' → logprob: -12.500235557556152
    4. ' )' → logprob: -14.125235557556152
    5. ')
' → logprob: -16.000234603881836
    6. '   ' → logprob: -16.375234603881836
    7. ')

' → logprob: -17.250234603881836
    8. '           ' → logprob: -18.250234603881836
    9. ')}' → logprob: -18.500234603881836
    10. '),' → logprob: -18.500234603881836

Token 353: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0006080791936255991
    2. ' else' → logprob: -8.000608444213867
    3. 'else' → logprob: -8.250608444213867
    4. '<|end|>' → logprob: -12.250608444213867
    5. '```' → logprob: -13.125608444213867
    6. 'elif' → logprob: -13.500608444213867
    7. ' elif' → logprob: -14.000608444213867
    8. ')' → logprob: -14.250608444213867
    9. '   ' → logprob: -15.000608444213867
    10. '      ' → logprob: -15.375608444213867

Token 354: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' (adapté à ' else') → logprob: -0.005479675717651844
    2. ' else' → logprob: -5.25547981262207
    3. 'elif' → logprob: -9.00547981262207
    4. '       ' → logprob: -9.00547981262207
    5. '	else' → logprob: -15.63047981262207
    6. ' elif' → logprob: -15.88047981262207
    7. '   ' → logprob: -16.88047981262207
    8. 'e' → logprob: -18.63047981262207
    9. 'els' → logprob: -18.63047981262207
    10. '```' → logprob: -19.13047981262207

Token 355: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08343265950679779
    2. ':
' → logprob: -2.958432674407959
    3. '           ' → logprob: -3.583432674407959
    4. '       ' → logprob: -8.8334321975708
    5. '.' → logprob: -8.8334321975708
    6. ',' → logprob: -10.9584321975708
    7. '   ' → logprob: -11.4584321975708
    8. '.remove' → logprob: -11.5834321975708
    9. '               ' → logprob: -11.8334321975708
    10. ':
' → logprob: -12.3334321975708

Token 356: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0004049322451464832
    2. ' self' → logprob: -8.125405311584473
    3. 'self' → logprob: -9.625405311584473
    4. '               ' → logprob: -10.250405311584473
    5. '       ' → logprob: -12.750405311584473
    6. ' if' → logprob: -13.000405311584473
    7. '   ' → logprob: -13.625405311584473
    8. '	       ' → logprob: -15.000405311584473
    9. '```' → logprob: -15.500405311584473
    10. '	self' → logprob: -15.500405311584473

Token 357: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00530277332291007
    2. ' self' → logprob: -5.505302906036377
    3. '           ' → logprob: -6.755302906036377
    4. '               ' → logprob: -10.130302429199219
    5. 'if' → logprob: -11.005302429199219
    6. ' if' → logprob: -13.505302429199219
    7. '
' → logprob: -14.630302429199219
    8. 'try' → logprob: -15.005302429199219
    9. '       ' → logprob: -16.13030242919922
    10. '                   ' → logprob: -16.63030242919922

Token 358: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -5.512236498361744e-07
    2. 'occupied' → logprob: -15.000000953674316
    3. ' .' → logprob: -15.750000953674316
    4. '.oc' → logprob: -17.25
    5. '.dis' → logprob: -18.5
    6. 'Occupied' → logprob: -18.875
    7. '._' → logprob: -19.25
    8. 'occup' → logprob: -19.625
    9. '>.' → logprob: -19.875
    10. '_occ' → logprob: -20.125

Token 359: 'occupied' (ID: 98229)
  Prédit: 'occupied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -2.2200749754119897e-06
    2. 'cc' → logprob: -13.250001907348633
    3. ' occupied' → logprob: -15.250001907348633
    4. 'occ' → logprob: -16.625001907348633
    5. 'occup' → logprob: -17.250001907348633
    6. 'c' → logprob: -17.500001907348633
    7. '   ' → logprob: -17.625001907348633
    8. 'ocup' → logprob: -18.375001907348633
    9. 'visited' → logprob: -18.625001907348633
    10. 'Occupied' → logprob: -18.625001907348633

Token 360: '.dis' (ID: 8454)
  Prédit: '.dis'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.dis' → logprob: -0.0003820524725597352
    2. '.' → logprob: -8.000382423400879
    3. '.remove' → logprob: -10.000382423400879
    4. 'discard' → logprob: -13.625382423400879
    5. '.Dis' → logprob: -17.750381469726562
    6. ' discard' → logprob: -18.250381469726562
    7. '.d' → logprob: -18.625381469726562
    8. '	dis' → logprob: -18.875381469726562
    9. ' .' → logprob: -19.250381469726562
    10. 'Discard' → logprob: -20.250381469726562

Token 361: 'card' (ID: 7687)
  Prédit: 'card'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'card' → logprob: -0.0011705794604495168
    2. 'ard' → logprob: -6.751170635223389
    3. 'discard' → logprob: -16.001171112060547
    4. 'car' → logprob: -16.626171112060547
    5. 'gard' → logprob: -16.876171112060547
    6. 'cart' → logprob: -17.501171112060547
    7. '```' → logprob: -17.501171112060547
    8. 'ards' → logprob: -17.751171112060547
    9. '(card' → logprob: -18.126171112060547
    10. '   ' → logprob: -18.876171112060547

Token 362: '(coord' (ID: 151575)
  Prédit: '(coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(coord' → logprob: -4.4849443838757e-06
    2. 'coord' → logprob: -12.875004768371582
    3. '(coords' → logprob: -13.625004768371582
    4. '(co' → logprob: -14.750004768371582
    5. '(' → logprob: -15.750004768371582
    6. ' coord' → logprob: -16.875003814697266
    7. '(coeff' → logprob: -17.625003814697266
    8. '(
' → logprob: -19.250003814697266
    9. ' (' → logprob: -19.750003814697266
    10. '((' → logprob: -20.500003814697266

Token 363: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -7.896309739408025e-07
    2. ')
' → logprob: -14.625000953674316
    3. ' )' → logprob: -16.125
    4. '))' → logprob: -16.5
    5. '       ' → logprob: -16.875
    6. ')`' → logprob: -18.625
    7. '`)' → logprob: -18.625
    8. '   ' → logprob: -18.75
    9. '())' → logprob: -19.0
    10. ')}' → logprob: -19.125

Token 364: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05172862485051155
    2. '
' → logprob: -3.3017287254333496
    3. '<|end|>' → logprob: -4.80172872543335
    4. 'def' → logprob: -5.92672872543335
    5. '    
' → logprob: -6.30172872543335
    6. '```' → logprob: -8.426728248596191
    7. '<|end|>' → logprob: -8.426728248596191
    8. '        
' → logprob: -8.926728248596191
    9. ' ' → logprob: -9.301728248596191
    10. ' def' → logprob: -9.426728248596191

Token 365: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.09372036159038544
    2. '   ' → logprob: -2.8437204360961914
    3. ' def' → logprob: -3.4687204360961914
    4. '```' → logprob: -10.468720436096191
    5. '	def' → logprob: -10.593720436096191
    6. '    
' → logprob: -11.218720436096191
    7. ' ' → logprob: -11.718720436096191
    8. '
' → logprob: -11.718720436096191
    9. '        
' → logprob: -12.343720436096191
    10. '       ' → logprob: -12.468720436096191

Token 366: ' is' (ID: 382)
  Prédit: ' is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' is' → logprob: -1.0175068378448486
    2. ' step' → logprob: -1.0175068378448486
    3. ' get' → logprob: -2.2675068378448486
    4. 'step' → logprob: -2.8925068378448486
    5. ' def' → logprob: -3.5175068378448486
    6. 'get' → logprob: -3.6425068378448486
    7. 'is' → logprob: -4.0175065994262695
    8. 'def' → logprob: -4.2675065994262695
    9. ' count' → logprob: -5.0175065994262695
    10. 'count' → logprob: -5.2675065994262695

Token 367: '_alive' (ID: 144635)
  Prédit: '_alive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_alive' → logprob: -0.20225827395915985
    2. '_cell' → logprob: -1.7022582292556763
    3. '_' → logprob: -7.202258110046387
    4. 'alive' → logprob: -9.952258110046387
    5. '_live' → logprob: -10.327258110046387
    6. '_active' → logprob: -11.702258110046387
    7. '_dead' → logprob: -13.202258110046387
    8. '_al' → logprob: -13.202258110046387
    9. '_in' → logprob: -13.827258110046387
    10. '_empty' → logprob: -13.952258110046387

Token 368: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001414426224073395
    2. '(' → logprob: -8.875141143798828
    3. ' (' → logprob: -14.000141143798828
    4. 'self' → logprob: -14.625141143798828
    5. '(co' → logprob: -16.125141143798828
    6. '(
' → logprob: -16.375141143798828
    7. '(s' → logprob: -17.000141143798828
    8. ' ' → logprob: -17.625141143798828
    9. '       ' → logprob: -17.875141143798828
    10. ' self' → logprob: -17.875141143798828

Token 369: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.18288296461105347
    2. ',' → logprob: -2.1828830242156982
    3. 'self' → logprob: -2.9328830242156982
    4. ')' → logprob: -7.557882785797119
    5. ' self' → logprob: -8.432883262634277
    6. ',self' → logprob: -9.057883262634277
    7. '       ' → logprob: -9.432883262634277
    8. '(' → logprob: -9.807883262634277
    9. ' ,' → logprob: -9.932883262634277
    10. ' (' → logprob: -10.432883262634277

Token 370: ' coord' (ID: 25819)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001011015148833394
    2. ' self' → logprob: -7.251010894775391
    3. 'coord' → logprob: -8.12601089477539
    4. ' coord' → logprob: -12.50101089477539
    5. '       ' → logprob: -13.75101089477539
    6. 'coordinate' → logprob: -15.37601089477539
    7. '(self' → logprob: -16.62601089477539
    8. '   ' → logprob: -17.12601089477539
    9. '_coord' → logprob: -18.00101089477539
    10. '	self' → logprob: -18.25101089477539

Token 371: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.026211926713585854
    2. '(self' → logprob: -4.151211738586426
    3. ')' → logprob: -5.026211738586426
    4. 'self' → logprob: -5.776211738586426
    5. '(coord' → logprob: -8.651211738586426
    6. '):' → logprob: -9.276211738586426
    7. '   ' → logprob: -9.776211738586426
    8. '(co' → logprob: -10.151211738586426
    9. ' :' → logprob: -10.901211738586426
    10. '       ' → logprob: -11.026211738586426

Token 372: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -0.0001605115394340828
    2. ' Coordinate' → logprob: -8.750160217285156
    3. 'self' → logprob: -13.750160217285156
    4. 'Coordinates' → logprob: -14.875160217285156
    5. 'Coord' → logprob: -15.250160217285156
    6. ')' → logprob: -16.250160217285156
    7. ' coordinate' → logprob: -16.750160217285156
    8. '   ' → logprob: -17.000160217285156
    9. 'coordinate' → logprob: -17.125160217285156
    10. '_coordinate' → logprob: -17.875160217285156

Token 373: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.010184423066675663
    2. ')' → logprob: -5.010184288024902
    3. ':' → logprob: -6.135184288024902
    4. '):
' → logprob: -7.760184288024902
    5. 'Coordinate' → logprob: -8.385184288024902
    6. '):' → logprob: -8.385184288024902
    7. '   ' → logprob: -9.010184288024902
    8. 'D' → logprob: -9.260184288024902
    9. ' )' → logprob: -9.385184288024902
    10. ' ' → logprob: -10.010184288024902

Token 374: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -5.383526149671525e-05
    2. '3' → logprob: -9.875053405761719
    3. 'Coordinate' → logprob: -13.875053405761719
    4. ')' → logprob: -14.125053405761719
    5. ':' → logprob: -15.000053405761719
    6. 'C' → logprob: -16.37505340576172
    7. '):
' → logprob: -16.87505340576172
    8. 'Д' → logprob: -17.12505340576172
    9. ' ' → logprob: -17.62505340576172
    10. '_' → logprob: -18.00005340576172

Token 375: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -3.292907877039397e-06
    2. '):' → logprob: -13.25000286102295
    3. ' )' → logprob: -14.12500286102295
    4. 'self' → logprob: -15.12500286102295
    5. '   ' → logprob: -15.25000286102295
    6. ')->' → logprob: -16.750003814697266
    7. '`)' → logprob: -16.750003814697266
    8. '')' → logprob: -16.875003814697266
    9. '):
' → logprob: -17.875003814697266
    10. ' ' → logprob: -18.625003814697266

Token 376: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.1110234186053276
    2. ')' → logprob: -2.611023426055908
    3. ' ->' → logprob: -3.486023426055908
    4. ')->' → logprob: -6.986023426055908
    5. ':' → logprob: -9.86102294921875
    6. '   ' → logprob: -11.11102294921875
    7. '       ' → logprob: -12.73602294921875
    8. ' ' → logprob: -13.73602294921875
    9. '-' → logprob: -13.98602294921875
    10. '>' → logprob: -13.98602294921875

Token 377: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -0.00020413640595506877
    2. ' bool' → logprob: -8.500204086303711
    3. '   ' → logprob: -14.625204086303711
    4. '(bool' → logprob: -17.12520408630371
    5. 'return' → logprob: -17.75020408630371
    6. ' ' → logprob: -17.75020408630371
    7. '	bool' → logprob: -17.87520408630371
    8. '  ' → logprob: -18.00020408630371
    9. '<bool' → logprob: -18.00020408630371
    10. 'True' → logprob: -18.00020408630371

Token 378: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.48120954632759094
    2. ':' → logprob: -1.1062095165252686
    3. '(' → logprob: -3.6062095165252686
    4. '       ' → logprob: -4.106209754943848
    5. 'self' → logprob: -5.606209754943848
    6. '   ' → logprob: -6.231209754943848
    7. ':
' → logprob: -7.731209754943848
    8. ' self' → logprob: -7.981209754943848
    9. ')' → logprob: -8.231209754943848
    10. '(
' → logprob: -8.356209754943848

Token 379: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016132554039359093
    2. ' return' → logprob: -4.141132354736328
    3. 'return' → logprob: -9.391132354736328
    4. '   ' → logprob: -11.766132354736328
    5. '<|end|>' → logprob: -13.266132354736328
    6. ' ' → logprob: -14.141132354736328
    7. ':return' → logprob: -14.266132354736328
    8. '      ' → logprob: -14.266132354736328
    9. '	return' → logprob: -14.516132354736328
    10. ' ' → logprob: -14.641132354736328

Token 380: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.010104171000421047
    2. '       ' → logprob: -4.760104179382324
    3. ' return' → logprob: -6.510104179382324
    4. '	return' → logprob: -16.260103225708008
    5. '{return' → logprob: -17.510103225708008
    6. '   ' → logprob: -17.885103225708008
    7. ':return' → logprob: -18.510103225708008
    8. '```' → logprob: -19.010103225708008
    9. '
' → logprob: -19.260103225708008
    10. 'eturn' → logprob: -19.385103225708008

Token 381: ' coord' (ID: 25819)
  Prédit: 'coord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coord' → logprob: -0.5759412050247192
    2. ' coord' → logprob: -0.8259412050247192
    3. '(coord' → logprob: -13.32594108581543
    4. 'cord' → logprob: -16.32594108581543
    5. 'coords' → logprob: -17.95094108581543
    6. '   ' → logprob: -18.32594108581543
    7. 'co' → logprob: -18.95094108581543
    8. ' coordinate' → logprob: -18.95094108581543
    9. 'coordinate' → logprob: -18.95094108581543
    10. 'Coord' → logprob: -19.20094108581543

Token 382: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.4742901027202606
    2. 'in' → logprob: -0.974290132522583
    3. '.' → logprob: -8.599289894104004
    4. '.in' → logprob: -10.974289894104004
    5. '	in' → logprob: -11.849289894104004
    6. ' ' → logprob: -13.349289894104004
    7. 'In' → logprob: -14.224289894104004
    8. '   ' → logprob: -14.849289894104004
    9. ')' → logprob: -15.099289894104004
    10. ' .' → logprob: -15.349289894104004

Token 383: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.339278580620885e-06
    2. ' self' → logprob: -13.000001907348633
    3. '       ' → logprob: -18.000001907348633
    4. '   ' → logprob: -20.125001907348633
    5. '
' → logprob: -20.375001907348633
    6. '           ' → logprob: -21.750001907348633
    7. '(self' → logprob: -23.000001907348633
    8. '	self' → logprob: -23.500001907348633
    9. '

' → logprob: -24.250001907348633
    10. '```' → logprob: -24.375001907348633

Token 384: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -3.128163257315464e-07
    2. ' .' → logprob: -15.25
    3. 'occupied' → logprob: -16.875
    4. 'self' → logprob: -19.125
    5. '.ob' → logprob: -20.125
    6. '.oc' → logprob: -20.25
    7. '```' → logprob: -20.75
    8. '.
' → logprob: -20.75
    9. '._' → logprob: -20.875
    10. '.os' → logprob: -20.875

Token 385: 'occupied' (ID: 98229)
  Prédit: 'occupied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -1.9361264946837764e-07
    2. 'occup' → logprob: -17.25
    3. ' occupied' → logprob: -17.25
    4. 'ocup' → logprob: -18.75
    5. 'visited' → logprob: -19.125
    6. 'owned' → logprob: -19.75
    7. '-' → logprob: -20.125
    8. 'oc' → logprob: -20.375
    9. 'Occupied' → logprob: -20.75
    10. 'self' → logprob: -21.25

Token 386: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013453540159389377
    2. '
' → logprob: -6.751345157623291
    3. 'def' → logprob: -9.25134563446045
    4. '    
' → logprob: -9.75134563446045
    5. '```' → logprob: -11.62634563446045
    6. '<|end|>' → logprob: -11.75134563446045
    7. '        
' → logprob: -13.25134563446045
    8. '<|end|>' → logprob: -14.00134563446045
    9. '  
' → logprob: -15.12634563446045
    10. ' def' → logprob: -15.25134563446045

Token 387: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005245141219347715
    2. 'def' → logprob: -5.255245208740234
    3. ' def' → logprob: -11.755245208740234
    4. '```' → logprob: -13.255245208740234
    5. '
' → logprob: -14.005245208740234
    6. '    
' → logprob: -14.505245208740234
    7. '	def' → logprob: -15.630245208740234
    8. 'from' → logprob: -16.005245208740234
    9. '        
' → logprob: -16.880245208740234
    10. '<|end|>' → logprob: -17.130245208740234

Token 388: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -3.4121114822482923e-06
    2. ' def' → logprob: -12.750003814697266
    3. '   ' → logprob: -14.625003814697266
    4. 'from' → logprob: -18.125003814697266
    5. 'de' → logprob: -19.875003814697266
    6. '	def' → logprob: -20.500003814697266
    7. '
' → logprob: -20.875003814697266
    8. '    
' → logprob: -22.250003814697266
    9. '```' → logprob: -22.250003814697266
    10. '        
' → logprob: -23.500003814697266

Token 389: ' alive' (ID: 23757)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.1741669476032257
    2. 'step' → logprob: -2.1741669178009033
    3. ' count' → logprob: -4.049167156219482
    4. 'count' → logprob: -4.549167156219482
    5. 'tick' → logprob: -5.299167156219482
    6. ' next' → logprob: -5.674167156219482
    7. ' tick' → logprob: -6.549167156219482
    8. 'next' → logprob: -6.799167156219482
    9. ' active' → logprob: -6.924167156219482
    10. ' get' → logprob: -6.924167156219482

Token 390: '_neighbors' (ID: 142549)
  Prédit: '_neighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbors' → logprob: -0.016773734241724014
    2. '_cells' → logprob: -4.266773700714111
    3. '_coordinates' → logprob: -6.891773700714111
    4. '_coords' → logprob: -7.516773700714111
    5. '_neighbor' → logprob: -7.891773700714111
    6. '_counts' → logprob: -8.14177417755127
    7. '_count' → logprob: -8.51677417755127
    8. '_ne' → logprob: -9.64177417755127
    9. 'neighbors' → logprob: -10.01677417755127
    10. '_positions' → logprob: -10.39177417755127

Token 391: '_count' (ID: 7536)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.012403341941535473
    2. '_count' → logprob: -4.51240348815918
    3. 'count' → logprob: -6.63740348815918
    4. '(' → logprob: -10.76240348815918
    5. ' count' → logprob: -11.26240348815918
    6. ' (' → logprob: -12.63740348815918
    7. 'self' → logprob: -13.01240348815918
    8. 'Count' → logprob: -13.63740348815918
    9. '   ' → logprob: -13.88740348815918
    10. '_counts' → logprob: -14.01240348815918

Token 392: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.981667537620524e-06
    2. '(' → logprob: -13.625001907348633
    3. ' (' → logprob: -14.375001907348633
    4. 'self' → logprob: -16.500001907348633
    5. '   ' → logprob: -16.875001907348633
    6. '(s' → logprob: -18.125001907348633
    7. '       ' → logprob: -18.750001907348633
    8. ' self' → logprob: -19.250001907348633
    9. '(
' → logprob: -19.375001907348633
    10. ' ' → logprob: -19.625001907348633

Token 393: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.68153518543113e-05
    2. '(' → logprob: -10.375057220458984
    3. ')' → logprob: -10.875057220458984
    4. ' (' → logprob: -12.875057220458984
    5. 'self' → logprob: -12.875057220458984
    6. ')(' → logprob: -14.000057220458984
    7. '       ' → logprob: -15.250057220458984
    8. '   ' → logprob: -15.750057220458984
    9. ' self' → logprob: -16.000057220458984
    10. '(
' → logprob: -16.875057220458984

Token 394: ' coord' (ID: 25819)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00018375257786829025
    2. 'coord' → logprob: -9.250184059143066
    3. ' self' → logprob: -9.375184059143066
    4. '       ' → logprob: -13.250184059143066
    5. '   ' → logprob: -14.250184059143066
    6. '(self' → logprob: -15.375184059143066
    7. ' coord' → logprob: -16.12518310546875
    8. 'def' → logprob: -16.62518310546875
    9. 'coordinate' → logprob: -17.12518310546875
    10. ' ' → logprob: -17.62518310546875

Token 395: ':' (ID: 25)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.44978001713752747
    2. ')' → logprob: -1.449779987335205
    3. '       ' → logprob: -2.574779987335205
    4. 'self' → logprob: -3.074779987335205
    5. '   ' → logprob: -5.824779987335205
    6. ':' → logprob: -7.074779987335205
    7. '):' → logprob: -7.449779987335205
    8. ' self' → logprob: -7.574779987335205
    9. ',' → logprob: -9.449780464172363
    10. '):
' → logprob: -9.449780464172363

Token 396: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -0.0002124806633219123
    2. ' Coordinate' → logprob: -8.500212669372559
    3. 'Coordinates' → logprob: -12.125212669372559
    4. 'Coord' → logprob: -13.125212669372559
    5. ')' → logprob: -14.000212669372559
    6. 'coordinate' → logprob: -15.250212669372559
    7. ' coordinate' → logprob: -15.750212669372559
    8. '   ' → logprob: -15.750212669372559
    9. 'Coordinator' → logprob: -16.500211715698242
    10. 'coord' → logprob: -17.625211715698242

Token 397: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -8.304016228066757e-05
    2. ')' → logprob: -9.875082969665527
    3. 'C' → logprob: -11.125082969665527
    4. ':' → logprob: -12.125082969665527
    5. ' ' → logprob: -12.875082969665527
    6. '   ' → logprob: -13.000082969665527
    7. '):' → logprob: -13.500082969665527
    8. '[' → logprob: -13.500082969665527
    9. '):
' → logprob: -14.000082969665527
    10. 'D' → logprob: -14.125082969665527

Token 398: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.00013524403038900346
    2. '3' → logprob: -10.00013542175293
    3. ')' → logprob: -10.12513542175293
    4. ':' → logprob: -10.62513542175293
    5. '   ' → logprob: -11.37513542175293
    6. '4' → logprob: -12.50013542175293
    7. ' ' → logprob: -13.37513542175293
    8. 'C' → logprob: -13.62513542175293
    9. 'Coordinate' → logprob: -13.62513542175293
    10. '[' → logprob: -14.00013542175293

Token 399: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -5.037835580878891e-05
    2. 'self' → logprob: -10.87505054473877
    3. '   ' → logprob: -11.50005054473877
    4. '       ' → logprob: -11.50005054473877
    5. '):' → logprob: -12.50005054473877
    6. ' )' → logprob: -12.62505054473877
    7. '(self' → logprob: -13.12505054473877
    8. ',' → logprob: -13.75005054473877
    9. '):
' → logprob: -14.25005054473877
    10. ':' → logprob: -15.62505054473877

Token 400: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.639613151550293
    2. ')' → logprob: -1.139613151550293
    3. ' ->' → logprob: -1.889613151550293
    4. '   ' → logprob: -7.264613151550293
    5. ')->' → logprob: -7.889613151550293
    6. ':' → logprob: -8.264613151550293
    7. '       ' → logprob: -9.639613151550293
    8. '()' → logprob: -11.514613151550293
    9. ' ' → logprob: -11.639613151550293
    10. '(self' → logprob: -12.639613151550293

Token 401: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0009119403548538685
    2. ' int' → logprob: -7.000911712646484
    3. '   ' → logprob: -14.750911712646484
    4. '(int' → logprob: -17.500911712646484
    5. ' ' → logprob: -18.125911712646484
    6. 'Int' → logprob: -19.500911712646484
    7. '       ' → logprob: -19.500911712646484
    8. 'return' → logprob: -19.500911712646484
    9. '  ' → logprob: -20.125911712646484
    10. '    ' → logprob: -20.375911712646484

Token 402: ':
' (ID: 734)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.2352878600358963
    2. '       ' → logprob: -1.8602879047393799
    3. '(' → logprob: -3.48528790473938
    4. ':' → logprob: -3.86028790473938
    5. '(
' → logprob: -6.860287666320801
    6. '   ' → logprob: -7.110287666320801
    7. 'self' → logprob: -8.6102876663208
    8. ':
' → logprob: -8.7352876663208
    9. '{' → logprob: -10.8602876663208
    10. '=' → logprob: -11.1102876663208

Token 403: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.02073095366358757
    2. 'count' → logprob: -3.895730972290039
    3. 'return' → logprob: -9.020730972290039
    4. ' count' → logprob: -10.020730972290039
    5. 'sum' → logprob: -11.645730972290039
    6. '   ' → logprob: -12.020730972290039
    7. ' return' → logprob: -12.770730972290039
    8. 'n' → logprob: -13.145730972290039
    9. 'cnt' → logprob: -13.520730972290039
    10. 'total' → logprob: -14.270730972290039

Token 404: ' count' (ID: 3605)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' → logprob: -0.22698242962360382
    2. '       ' → logprob: -1.9769824743270874
    3. 'sum' → logprob: -3.226982355117798
    4. 'count' (adapté à ' count') → logprob: -3.726982355117798
    5. ' return' → logprob: -7.101982593536377
    6. 'counter' → logprob: -12.726982116699219
    7. ' sum' → logprob: -12.851982116699219
    8. '```' → logprob: -13.476982116699219
    9. 'result' → logprob: -13.601982116699219
    10. 'cnt' → logprob: -13.726982116699219

Token 405: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.16024789214134216
    2. '=' → logprob: -1.9102479219436646
    3. '(' → logprob: -11.285247802734375
    4. ' ' → logprob: -11.785247802734375
    5. '   ' → logprob: -12.910247802734375
    6. ' +=' → logprob: -14.035247802734375
    7. '       ' → logprob: -16.410247802734375
    8. '    ' → logprob: -16.410247802734375
    9. '  ' → logprob: -17.035247802734375
    10. ':' → logprob: -17.160247802734375

Token 406: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.005008413456380367
    2. ' ' → logprob: -5.505008220672607
    3. 'sum' → logprob: -7.505008220672607
    4. ' sum' → logprob: -7.880008220672607
    5. '   ' → logprob: -13.755008697509766
    6. '       ' → logprob: -17.755008697509766
    7. '	sum' → logprob: -19.005008697509766
    8. '  ' → logprob: -19.130008697509766
    9. '```' → logprob: -19.880008697509766
    10. '    ' → logprob: -20.005008697509766

Token 407: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.06196802109479904
    2. 'sum' → logprob: -2.8119680881500244
    3. ' sum' → logprob: -14.936967849731445
    4. ' ' → logprob: -17.561967849731445
    5. '   ' → logprob: -19.311967849731445
    6. 'len' → logprob: -19.811967849731445
    7. '```' → logprob: -20.061967849731445
    8. '	sum' → logprob: -20.186967849731445
    9. '1' → logprob: -20.686967849731445
    10. '.sum' → logprob: -21.311967849731445

Token 408: '
' (ID: 198)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.609931230545044
    2. '       ' → logprob: -0.984931230545044
    3. 'for' → logprob: -3.234931230545044
    4. '
' → logprob: -3.234931230545044
    5. '   ' → logprob: -6.484930992126465
    6. ' 
' → logprob: -6.484930992126465
    7. '        
' → logprob: -7.734930992126465
    8. ' ' → logprob: -8.359930992126465
    9. '  
' → logprob: -8.609930992126465
    10. '    
' → logprob: -8.734930992126465

Token 409: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00469676498323679
    2. ' for' → logprob: -5.504696846008301
    3. 'for' → logprob: -7.754696846008301
    4. '
' → logprob: -8.7546968460083
    5. '   ' → logprob: -10.5046968460083
    6. '        
' → logprob: -13.3796968460083
    7. '	for' → logprob: -14.1296968460083
    8. ' 
' → logprob: -14.3796968460083
    9. ' ' → logprob: -14.7546968460083
    10. '    
' → logprob: -15.5046968460083

Token 410: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.05247591435909271
    2. '       ' → logprob: -3.052475929260254
    3. ' for' → logprob: -5.552475929260254
    4. '   ' → logprob: -12.802475929260254
    5. '	for' → logprob: -15.427475929260254
    6. '
' → logprob: -17.552474975585938
    7. ' ' → logprob: -18.052474975585938
    8. '      ' → logprob: -18.177474975585938
    9. '           ' → logprob: -18.302474975585938
    10. '     ' → logprob: -18.677474975585938

Token 411: ' n' (ID: 297)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.0036397494841367006
    2. ' neighbor' → logprob: -5.7536396980285645
    3. 'n' → logprob: -8.003640174865723
    4. 'nbr' → logprob: -9.003640174865723
    5. 'nei' → logprob: -13.003640174865723
    6. 'nb' → logprob: -13.878640174865723
    7. '_neighbor' → logprob: -14.503640174865723
    8. 'ne' → logprob: -15.003640174865723
    9. ' neigh' → logprob: -15.628640174865723
    10. ' nbr' → logprob: -15.878640174865723

Token 412: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.19615407288074493
    2. 'e' → logprob: -1.8211541175842285
    3. 'ighbor' → logprob: -4.4461541175842285
    4. 'bor' → logprob: -6.6961541175842285
    5. 'abor' → logprob: -7.0711541175842285
    6. 'neighbor' → logprob: -7.0711541175842285
    7. 'in' → logprob: -7.1961541175842285
    8. 'b' → logprob: -8.07115364074707
    9. 'n' → logprob: -8.94615364074707
    10. 'br' → logprob: -9.32115364074707

Token 413: ' coord' (ID: 25819)
  Prédit: 'coord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coord' → logprob: -1.5451681974809617e-05
    2. ' coord' → logprob: -11.125015258789062
    3. '(coord' → logprob: -14.750015258789062
    4. 'cord' → logprob: -15.625015258789062
    5. 'self' → logprob: -17.875015258789062
    6. 'co' → logprob: -18.750015258789062
    7. 'coords' → logprob: -18.875015258789062
    8. '   ' → logprob: -19.125015258789062
    9. 'c' → logprob: -20.250015258789062
    10. '.coord' → logprob: -20.375015258789062

Token 414: '.ne' (ID: 39319)
  Prédit: '.ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ne' → logprob: -0.00014072739577386528
    2. '.' → logprob: -9.125141143798828
    3. ' .' → logprob: -11.250141143798828
    4. 'neighbors' → logprob: -11.375141143798828
    5. '(ne' → logprob: -12.250141143798828
    6. '.Ne' → logprob: -13.375141143798828
    7. '().' → logprob: -14.250141143798828
    8. '_neighbors' → logprob: -16.125141143798828
    9. '.n' → logprob: -16.500141143798828
    10. 'ne' → logprob: -17.375141143798828

Token 415: 'ighbors' (ID: 46483)
  Prédit: 'ighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbors' → logprob: -4.008129963040119e-06
    2. 'neighbors' → logprob: -12.750003814697266
    3. 'igh' → logprob: -14.375003814697266
    4. 'gh' → logprob: -15.875003814697266
    5. 'ig' → logprob: -16.125003814697266
    6. 'ighbours' → logprob: -16.875003814697266
    7. 'bors' → logprob: -17.375003814697266
    8. 'ighbor' → logprob: -17.625003814697266
    9. 'ighborhood' → logprob: -18.625003814697266
    10. '_neighbors' → logprob: -19.250003814697266

Token 416: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -3.4121114822482923e-06
    2. '(' → logprob: -13.000003814697266
    3. 'self' → logprob: -14.250003814697266
    4. ' (' → logprob: -15.375003814697266
    5. '(max' → logprob: -16.625003814697266
    6. ',' → logprob: -17.500003814697266
    7. '(this' → logprob: -18.375003814697266
    8. ',self' → logprob: -18.750003814697266
    9. '```' → logprob: -18.750003814697266
    10. ' self' → logprob: -18.875003814697266

Token 417: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -1.0087516784551553e-05
    2. 'size' → logprob: -11.62501049041748
    3. '.' → logprob: -13.87501049041748
    4. ').' → logprob: -16.625009536743164
    5. ' .' → logprob: -17.750009536743164
    6. '.s' → logprob: -18.875009536743164
    7. ' size' → logprob: -19.125009536743164
    8. ')' → logprob: -19.250009536743164
    9. '(size' → logprob: -20.125009536743164
    10. '	size' → logprob: -20.625009536743164

Token 418: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008621551096439362
    2. '):
' → logprob: -4.758621692657471
    3. '):
' → logprob: -12.508621215820312
    4. '       ' → logprob: -13.758621215820312
    5. ' ):' → logprob: -14.258621215820312
    6. ':' → logprob: -14.258621215820312
    7. '   ' → logprob: -14.883621215820312
    8. '():' → logprob: -15.133621215820312
    9. '):

' → logprob: -16.258621215820312
    10. '           ' → logprob: -16.383621215820312

Token 419: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00014525714504998177
    2. ' if' → logprob: -9.125144958496094
    3. 'if' → logprob: -10.625144958496094
    4. '<|end|>' → logprob: -12.250144958496094
    5. '          ' → logprob: -13.125144958496094
    6. ',' → logprob: -13.625144958496094
    7. 'count' → logprob: -14.750144958496094
    8. ':
' → logprob: -14.750144958496094
    9. '   ' → logprob: -14.750144958496094
    10. '	       ' → logprob: -14.875144958496094

Token 420: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0066871945746243
    2. '           ' → logprob: -5.506687164306641
    3. ' if' → logprob: -6.006687164306641
    4. 'count' → logprob: -8.88168716430664
    5. '               ' → logprob: -12.75668716430664
    6. '       ' → logprob: -14.00668716430664
    7. '   ' → logprob: -15.13168716430664
    8. '	if' → logprob: -15.75668716430664
    9. 'If' → logprob: -17.00668716430664
    10. '          ' → logprob: -17.63168716430664

Token 421: ' n' (ID: 297)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.18523499369621277
    2. ' self' → logprob: -2.310235023498535
    3. 'n' → logprob: -2.685235023498535
    4. ' n' → logprob: -6.435235023498535
    5. '           ' → logprob: -10.185235023498535
    6. '   ' → logprob: -12.935235023498535
    7. '               ' → logprob: -13.810235023498535
    8. '(self' → logprob: -14.185235023498535
    9. '	self' → logprob: -14.560235023498535
    10. '                   ' → logprob: -14.685235023498535

Token 422: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.04380744695663452
    2. 'in' → logprob: -3.1688075065612793
    3. '.' → logprob: -7.293807506561279
    4. '.is' → logprob: -9.168807029724121
    5. '.in' → logprob: -11.418807029724121
    6. ' .' → logprob: -12.168807029724121
    7. 'is' → logprob: -12.543807029724121
    8. 'self' → logprob: -13.668807029724121
    9. 'n' → logprob: -14.043807029724121
    10. ')' → logprob: -14.543807029724121

Token 423: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00011081460979767144
    2. ' self' → logprob: -9.125110626220703
    3. '           ' → logprob: -13.875110626220703
    4. '       ' → logprob: -14.750110626220703
    5. '(self' → logprob: -15.125110626220703
    6. '   ' → logprob: -16.250110626220703
    7. '
' → logprob: -17.375110626220703
    8. '               ' → logprob: -17.625110626220703
    9. '=self' → logprob: -17.750110626220703
    10. '	self' → logprob: -17.875110626220703

Token 424: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.0280383548888494e-06
    2. ' .' → logprob: -14.000000953674316
    3. 'occupied' → logprob: -16.625001907348633
    4. 'self' → logprob: -18.625001907348633
    5. ').' → logprob: -19.375001907348633
    6. '```' → logprob: -19.500001907348633
    7. '.
' → logprob: -19.625001907348633
    8. '.oc' → logprob: -20.125001907348633
    9. '.os' → logprob: -20.125001907348633
    10. '.grid' → logprob: -20.125001907348633

Token 425: 'occupied' (ID: 98229)
  Prédit: 'occupied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -7.896309739408025e-07
    2. 'occup' → logprob: -15.375000953674316
    3. ' occupied' → logprob: -15.750000953674316
    4. 'ocup' → logprob: -16.125
    5. '.' → logprob: -16.375
    6. 'occ' → logprob: -16.375
    7. 'self' → logprob: -16.875
    8. 'oc' → logprob: -18.375
    9. 'visited' → logprob: -18.5
    10. 'Occupied' → logprob: -19.0

Token 426: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.6979390382766724
    2. ':
' → logprob: -0.6979390382766724
    3. '               ' → logprob: -5.572938919067383
    4. '           ' → logprob: -7.572938919067383
    5. '):
' → logprob: -7.822938919067383
    6. ':
' → logprob: -10.697938919067383
    7. '):' → logprob: -10.697938919067383
    8. ',' → logprob: -11.697938919067383
    9. '():
' → logprob: -12.197938919067383
    10. '              ' → logprob: -12.947938919067383

Token 427: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.00037251986213959754
    2. 'count' → logprob: -8.000372886657715
    3. '                   ' → logprob: -11.625372886657715
    4. ',count' → logprob: -11.750372886657715
    5. '           ' → logprob: -12.000372886657715
    6. ' count' → logprob: -12.125372886657715
    7. '                
' → logprob: -13.500372886657715
    8. '[count' → logprob: -13.500372886657715
    9. '
' → logprob: -13.625372886657715
    10. '(count' → logprob: -13.875372886657715

Token 428: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' (adapté à ' count') → logprob: -0.0043787360191345215
    2. ' count' → logprob: -5.504378795623779
    3. '               ' → logprob: -8.754378318786621
    4. '                   ' → logprob: -8.879378318786621
    5. '
' → logprob: -14.129378318786621
    6. '                               ' → logprob: -14.504378318786621
    7. '[count' → logprob: -14.754378318786621
    8. '           ' → logprob: -14.754378318786621
    9. ',count' → logprob: -15.254378318786621
    10. '(count' → logprob: -15.879378318786621

Token 429: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.5759981274604797
    2. ' +=' → logprob: -0.8259981274604797
    3. '                ' → logprob: -10.825998306274414
    4. '            ' → logprob: -11.075998306274414
    5. '               ' → logprob: -11.200998306274414
    6. '                   ' → logprob: -12.825998306274414
    7. '           ' → logprob: -12.950998306274414
    8. ']+=' → logprob: -13.075998306274414
    9. '+' → logprob: -13.700998306274414
    10. '                    ' → logprob: -14.200998306274414

Token 430: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. '   ' → logprob: -21.8750057220459
    4. '```' → logprob: -22.0000057220459
    5. '           ' → logprob: -24.5000057220459
    6. '۱' → logprob: -24.8750057220459
    7. '１' → logprob: -25.3750057220459
    8. '  ' → logprob: -26.1250057220459
    9. ' ' → logprob: -26.1250057220459
    10. '       ' → logprob: -26.1250057220459

Token 431: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. ' ' → logprob: -16.125
    3. '   ' → logprob: -23.625
    4. '```' → logprob: -24.0
    5. '１' → logprob: -24.5
    6. '۱' → logprob: -24.5
    7. '
' → logprob: -24.875
    8. ')' → logprob: -26.125
    9. '١' → logprob: -26.5
    10. '2' → logprob: -26.5

Token 432: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00044068231363780797
    2. 'return' → logprob: -8.37544059753418
    3. '
' → logprob: -8.62544059753418
    4. ' return' → logprob: -10.87544059753418
    5. '   ' → logprob: -12.12544059753418
    6. '	' → logprob: -12.87544059753418
    7. '	return' → logprob: -13.12544059753418
    8. '           ' → logprob: -14.12544059753418
    9. '      ' → logprob: -15.37544059753418
    10. '               ' → logprob: -15.37544059753418

Token 433: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014644917973782867
    2. 'return' → logprob: -9.000146865844727
    3. '   ' → logprob: -11.125146865844727
    4. '           ' → logprob: -12.500146865844727
    5. ' return' → logprob: -12.625146865844727
    6. '               ' → logprob: -14.750146865844727
    7. '	return' → logprob: -14.875146865844727
    8. '
' → logprob: -14.875146865844727
    9. '	' → logprob: -16.000146865844727
    10. '      ' → logprob: -16.750146865844727

Token 434: ' return' (ID: 622)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.050449542701244354
    2. 'return' (adapté à ' return') → logprob: -3.0504496097564697
    3. ' return' → logprob: -6.925449371337891
    4. '   ' → logprob: -7.175449371337891
    5. '	return' → logprob: -9.80044937133789
    6. '
' → logprob: -9.92544937133789
    7. '	' → logprob: -13.30044937133789
    8. ' ' → logprob: -13.55044937133789
    9. '           ' → logprob: -13.67544937133789
    10. '               ' → logprob: -13.80044937133789

Token 435: ' count' (ID: 3605)
  Prédit: 'count'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'count' → logprob: -0.0004306692280806601
    2. ' count' → logprob: -7.750430583953857
    3. '	count' → logprob: -21.375431060791016
    4. '   ' → logprob: -23.875431060791016
    5. '(count' → logprob: -23.875431060791016
    6. 'counts' → logprob: -24.000431060791016
    7. 'c' → logprob: -24.125431060791016
    8. '_count' → logprob: -24.500431060791016
    9. '$count' → logprob: -24.875431060791016
    10. '[count' → logprob: -25.250431060791016

Token 436: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.003781904699280858
    2. '
' → logprob: -5.878781795501709
    3. '<|end|>' → logprob: -7.003781795501709
    4. '    
' → logprob: -10.378782272338867
    5. 'def' → logprob: -11.003782272338867
    6. '<|end|>' → logprob: -11.503782272338867
    7. '```' → logprob: -11.878782272338867
    8. ' def' → logprob: -14.128782272338867
    9. '        
' → logprob: -14.128782272338867
    10. ')' → logprob: -15.003782272338867

Token 437: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.16093173623085022
    2. 'def' → logprob: -1.9109317064285278
    3. ' def' → logprob: -8.035931587219238
    4. '<|end|>' → logprob: -8.660931587219238
    5. '```' → logprob: -9.410931587219238
    6. '
' → logprob: -10.160931587219238
    7. ' ' → logprob: -10.535931587219238
    8. '    
' → logprob: -10.535931587219238
    9. '	def' → logprob: -11.285931587219238
    10. '  ' → logprob: -11.410931587219238

Token 438: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -6.12258882028982e-05
    2. ' def' → logprob: -9.75006103515625
    3. '   ' → logprob: -12.75006103515625
    4. '	def' → logprob: -16.87506103515625
    5. '
' → logprob: -18.87506103515625
    6. '```' → logprob: -19.50006103515625
    7. '    
' → logprob: -19.62506103515625
    8. ' ' → logprob: -20.12506103515625
    9. 'from' → logprob: -21.00006103515625
    10. 'ndef' → logprob: -21.25006103515625

Token 439: ' all' (ID: 722)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.7060902714729309
    2. 'step' → logprob: -0.7060902714729309
    3. 'tick' → logprob: -5.581090450286865
    4. 'next' → logprob: -5.706090450286865
    5. ' next' → logprob: -5.831090450286865
    6. 'update' → logprob: -6.581090450286865
    7. ' update' → logprob: -7.706090450286865
    8. 'advance' → logprob: -7.956090450286865
    9. ' tick' → logprob: -8.456089973449707
    10. ' advance' → logprob: -8.706089973449707

Token 440: '_coordinates' (ID: 129520)
  Prédit: '_cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cells' → logprob: -0.17063970863819122
    2. '_coords' → logprob: -2.295639753341675
    3. '_coordinates' → logprob: -3.795639753341675
    4. '_alive' → logprob: -4.420639514923096
    5. '_positions' → logprob: -5.045639514923096
    6. '_candidates' → logprob: -5.045639514923096
    7. '_' → logprob: -5.920639514923096
    8. '_neighbors' → logprob: -6.170639514923096
    9. '_active' → logprob: -6.420639514923096
    10. '_live' → logprob: -6.670639514923096

Token 441: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -1.9385402993066236e-05
    2. ' (' → logprob: -11.250019073486328
    3. '(' → logprob: -12.625019073486328
    4. '   ' → logprob: -13.500019073486328
    5. '       ' → logprob: -14.000019073486328
    6. 'self' → logprob: -14.750019073486328
    7. 'def' → logprob: -15.375019073486328
    8. ' self' → logprob: -17.000019073486328
    9. '
' → logprob: -17.125019073486328
    10. ' ' → logprob: -17.125019073486328

Token 442: ')' (ID: 8)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0015822319546714425
    2. 'self' → logprob: -6.876582145690918
    3. ')' → logprob: -8.251582145690918
    4. ')(' → logprob: -9.001582145690918
    5. ' (' → logprob: -10.251582145690918
    6. '):
' → logprob: -10.376582145690918
    7. '):' → logprob: -10.376582145690918
    8. '(' → logprob: -10.626582145690918
    9. '   ' → logprob: -11.376582145690918
    10. '       ' → logprob: -11.376582145690918

Token 443: ' ->' (ID: 2747)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.10087677836418152
    2. 'self' → logprob: -3.100876808166504
    3. ':' → logprob: -3.975876808166504
    4. ' ->' → logprob: -4.475876808166504
    5. '->' → logprob: -4.725876808166504
    6. '       ' → logprob: -5.100876808166504
    7. '   ' → logprob: -5.600876808166504
    8. ' self' → logprob: -7.350876808166504
    9. '(' → logprob: -7.475876808166504
    10. ':
' → logprob: -8.225876808166504

Token 444: ' Iterator' (ID: 41994)
  Prédit: 'Iterator'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Iterator' → logprob: -0.00012725738633889705
    2. ' Iterator' → logprob: -9.000126838684082
    3. 'Iterable' → logprob: -13.250126838684082
    4. 'List' → logprob: -13.625126838684082
    5. '	Iterator' → logprob: -14.625126838684082
    6. '   ' → logprob: -15.625126838684082
    7. 'Generator' → logprob: -16.2501277923584
    8. 'Iter' → logprob: -17.8751277923584
    9. 'Tuple' → logprob: -18.0001277923584
    10. 'Enumerator' → logprob: -18.0001277923584

Token 445: '[' (ID: 58)
  Prédit: '['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[' → logprob: -0.001130094169639051
    2. '['' → logprob: -6.876130104064941
    3. 'Coordinate' → logprob: -9.501130104064941
    4. '[
' → logprob: -11.126130104064941
    5. '[['' → logprob: -12.751130104064941
    6. 'Coordinates' → logprob: -13.626130104064941
    7. '(Co' → logprob: -14.376130104064941
    8. '('' → logprob: -14.751130104064941
    9. '[`' → logprob: -15.001130104064941
    10. '```' → logprob: -15.251130104064941

Token 446: 'Coordinate' (ID: 40872)
  Prédit: 'Coordinate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -4.320199877838604e-07
    2. ''' → logprob: -15.5
    3. '[' → logprob: -16.125
    4. ' Coordinate' → logprob: -16.25
    5. 'Tuple' → logprob: -18.125
    6. 'Coordinates' → logprob: -19.0
    7. '`' → logprob: -19.375
    8. '['' → logprob: -19.625
    9. 'Coord' → logprob: -19.75
    10. '_coordinate' → logprob: -20.125

Token 447: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. 'Coordinate' → logprob: -15.875
    3. ' ' → logprob: -19.875
    4. '```' → logprob: -20.5
    5. '[' → logprob: -21.375
    6. '['' → logprob: -21.625
    7. '   ' → logprob: -21.875
    8. ' Coordinate' → logprob: -22.75
    9. '۳' → logprob: -23.0
    10. '³' → logprob: -23.125

Token 448: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: 0.0
    2. '3' → logprob: -19.125
    3. 'Coordinate' → logprob: -19.625
    4. '6' → logprob: -20.875
    5. '4' → logprob: -21.75
    6. 'C' → logprob: -21.875
    7. '2' → logprob: -21.875
    8. '5' → logprob: -22.0
    9. ' D' → logprob: -22.125
    10. 'd' → logprob: -22.375

Token 449: ']:
' (ID: 22152)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.5969331860542297
    2. '():
' → logprob: -1.471933126449585
    3. ':
' → logprob: -2.096933126449585
    4. '       ' → logprob: -3.346933126449585
    5. ']:
' → logprob: -3.721933126449585
    6. ':' → logprob: -4.471933364868164
    7. '   ' → logprob: -4.596933364868164
    8. '(self' → logprob: -4.721933364868164
    9. '):' → logprob: -5.346933364868164
    10. '():' → logprob: -6.596933364868164

Token 450: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00030924470047466457
    2. ' for' → logprob: -8.125308990478516
    3. '```' → logprob: -12.375308990478516
    4. 'for' → logprob: -12.500308990478516
    5. ',' → logprob: -13.625308990478516
    6. '   ' → logprob: -13.750308990478516
    7. '	' → logprob: -14.625308990478516
    8. ':' → logprob: -14.750308990478516
    9. '
' → logprob: -14.875308990478516
    10. '	   ' → logprob: -15.000308990478516

Token 451: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.031663741916418076
    2. ' for' → logprob: -3.781663656234741
    3. '       ' → logprob: -4.78166389465332
    4. '   ' → logprob: -14.53166389465332
    5. '```' → logprob: -16.03166389465332
    6. '	for' → logprob: -16.15666389465332
    7. '           ' → logprob: -16.40666389465332
    8. '"""' → logprob: -18.28166389465332
    9. 'def' → logprob: -18.65666389465332
    10. ' ' → logprob: -19.28166389465332

Token 452: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.3134027123451233
    2. 'x' → logprob: -1.3134026527404785
    3. ' z' → logprob: -8.938403129577637
    4. ' x' → logprob: -11.563403129577637
    5. '0' → logprob: -16.68840217590332
    6. '	z' → logprob: -17.18840217590332
    7. '   ' → logprob: -17.43840217590332
    8. 'xz' → logprob: -17.43840217590332
    9. '_z' → logprob: -17.93840217590332
    10. 'self' → logprob: -18.31340217590332

Token 453: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.029753267765045166
    2. 'in' → logprob: -3.5297532081604004
    3. '0' → logprob: -13.904753684997559
    4. 'In' → logprob: -14.904753684997559
    5. ' ' → logprob: -15.279753684997559
    6. '1' → logprob: -15.404753684997559
    7. 'range' → logprob: -15.529753684997559
    8. '	in' → logprob: -15.654753684997559
    9. 'import' → logprob: -15.904753684997559
    10. '
' → logprob: -16.029752731323242

Token 454: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0009114635176956654
    2. ' range' → logprob: -7.000911235809326
    3. '   ' → logprob: -19.000911712646484
    4. '	range' → logprob: -19.750911712646484
    5. '(range' → logprob: -20.250911712646484
    6. '0' → logprob: -20.625911712646484
    7. ' ' → logprob: -21.500911712646484
    8. '  ' → logprob: -22.500911712646484
    9. 'ange' → logprob: -23.875911712646484
    10. '    ' → logprob: -24.125911712646484

Token 455: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.848420551046729e-05
    2. '(' → logprob: -9.7500581741333
    3. 'self' → logprob: -16.375059127807617
    4. '(s' → logprob: -17.625059127807617
    5. '(
' → logprob: -19.375059127807617
    6. '0' → logprob: -21.250059127807617
    7. '(sel' → logprob: -21.250059127807617
    8. '(this' → logprob: -21.750059127807617
    9. ' self' → logprob: -22.125059127807617
    10. '1' → logprob: -22.875059127807617

Token 456: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.027046876028180122
    2. 'self' → logprob: -4.4020466804504395
    3. '(self' → logprob: -4.5270466804504395
    4. '.' → logprob: -6.0270466804504395
    5. 'size' → logprob: -8.152047157287598
    6. '.self' → logprob: -8.402047157287598
    7. ' self' → logprob: -8.402047157287598
    8. '       ' → logprob: -8.777047157287598
    9. '   ' → logprob: -9.402047157287598
    10. '(' → logprob: -9.527047157287598

Token 457: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.03002249076962471
    2. '):' → logprob: -3.530022382736206
    3. '       ' → logprob: -8.530022621154785
    4. '   ' → logprob: -10.030022621154785
    5. ' ):
' → logprob: -11.780022621154785
    6. '):
' → logprob: -12.030022621154785
    7. '()):
' → logprob: -12.405022621154785
    8. '           ' → logprob: -12.530022621154785
    9. '():
' → logprob: -12.780022621154785
    10. ')' → logprob: -14.030022621154785

Token 458: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.010508636012673378
    2. ' for' → logprob: -4.6355085372924805
    3. '       ' → logprob: -7.8855085372924805
    4. 'for' → logprob: -8.51050853729248
    5. '   ' → logprob: -8.76050853729248
    6. ' ' → logprob: -12.51050853729248
    7. '	       ' → logprob: -13.26050853729248
    8. '```' → logprob: -13.26050853729248
    9. '         ' → logprob: -13.38550853729248
    10. '<|end|>' → logprob: -13.38550853729248

Token 459: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07889275997877121
    2. ' for' → logprob: -2.578892707824707
    3. '           ' → logprob: -12.953892707824707
    4. '   ' → logprob: -14.703892707824707
    5. '               ' → logprob: -16.078893661499023
    6. ' ' → logprob: -16.703893661499023
    7. '	for' → logprob: -17.203893661499023
    8. '       ' → logprob: -17.453893661499023
    9. '  ' → logprob: -21.453893661499023
    10. 'For' → logprob: -21.453893661499023

Token 460: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.001170225441455841
    2. ' y' → logprob: -6.7511701583862305
    3. '   ' → logprob: -17.501171112060547
    4. '	y' → logprob: -18.126171112060547
    5. '  ' → logprob: -20.376171112060547
    6. ' ' → logprob: -20.501171112060547
    7. 'x' → logprob: -20.751171112060547
    8. ' in' → logprob: -20.876171112060547
    9. 'y's' → logprob: -22.001171112060547
    10. ''y' → logprob: -22.126171112060547

Token 461: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014163628220558167
    2. 'in' → logprob: -4.264163494110107
    3. ' ' → logprob: -16.764163970947266
    4. '    ' → logprob: -19.264163970947266
    5. '   ' → logprob: -19.639163970947266
    6. 'i' → logprob: -19.764163970947266
    7. ',' → logprob: -19.889163970947266
    8. '  ' → logprob: -20.389163970947266
    9. '           ' → logprob: -20.389163970947266
    10. 'In' → logprob: -20.389163970947266

Token 462: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.048587486147880554
    2. ' range' → logprob: -3.0485875606536865
    3. '(range' → logprob: -16.048587799072266
    4. '_range' → logprob: -21.048587799072266
    5. '	range' → logprob: -21.173587799072266
    6. 'rang' → logprob: -21.298587799072266
    7. 'for' → logprob: -21.923587799072266
    8. 'ange' → logprob: -22.048587799072266
    9. '.range' → logprob: -22.423587799072266
    10. 'Range' → logprob: -23.423587799072266

Token 463: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -6.988221684878226e-06
    2. '(' → logprob: -12.250006675720215
    3. 'self' → logprob: -13.250006675720215
    4. '(range' → logprob: -15.375006675720215
    5. 'range' → logprob: -16.37500762939453
    6. '(s' → logprob: -18.00000762939453
    7. ' (' → logprob: -18.62500762939453
    8. '[self' → logprob: -19.75000762939453
    9. 's' → logprob: -20.00000762939453
    10. '=self' → logprob: -20.37500762939453

Token 464: '.size' (ID: 4463)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.7240546345710754
    2. '(self' → logprob: -1.0990545749664307
    3. '.size' → logprob: -2.4740545749664307
    4. '.range' → logprob: -2.9740545749664307
    5. 'range' → logprob: -3.3490545749664307
    6. 'size' → logprob: -5.09905481338501
    7. '       ' → logprob: -6.97405481338501
    8. ')' → logprob: -7.09905481338501
    9. ',' → logprob: -7.22405481338501
    10. '   ' → logprob: -7.34905481338501

Token 465: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.1965109407901764
    2. '):' → logprob: -1.946510910987854
    3. ':' → logprob: -3.8215110301971436
    4. ':
' → logprob: -5.1965107917785645
    5. '           ' → logprob: -5.4465107917785645
    6. '               ' → logprob: -6.3215107917785645
    7. ',' → logprob: -7.5715107917785645
    8. '():
' → logprob: -7.8215107917785645
    9. '<|end|>' → logprob: -8.196511268615723
    10. ')' → logprob: -8.446511268615723

Token 466: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -9.29340603761375e-05
    2. ' for' → logprob: -9.375092506408691
    3. 'for' → logprob: -12.750092506408691
    4. '           ' → logprob: -12.875092506408691
    5. '			' → logprob: -14.375092506408691
    6. '		       ' → logprob: -14.375092506408691
    7. '	           ' → logprob: -14.750092506408691
    8. '                   ' → logprob: -15.250092506408691
    9. '       ' → logprob: -15.750092506408691
    10. '             ' → logprob: -15.750092506408691

Token 467: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.038088422268629074
    2. ' for' → logprob: -3.288088321685791
    3. '                   ' → logprob: -10.41308879852295
    4. '               ' → logprob: -11.03808879852295
    5. '	for' → logprob: -15.03808879852295
    6. '```' → logprob: -15.03808879852295
    7. '   ' → logprob: -16.038087844848633
    8. '           ' → logprob: -17.163087844848633
    9. '                       ' → logprob: -17.788087844848633
    10. ' ' → logprob: -17.913087844848633

Token 468: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0001584850688232109
    2. ' x' → logprob: -8.750158309936523
    3. '	x' → logprob: -19.125158309936523
    4. ')x' → logprob: -21.125158309936523
    5. '0' → logprob: -21.375158309936523
    6. ',x' → logprob: -21.500158309936523
    7. '_x' → logprob: -21.500158309936523
    8. '   ' → logprob: -21.625158309936523
    9. '```' → logprob: -21.625158309936523
    10. '(x' → logprob: -22.125158309936523

Token 469: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.011049585416913033
    2. 'in' → logprob: -4.511049747467041
    3. ' ' → logprob: -14.761049270629883
    4. '                ' → logprob: -14.886049270629883
    5. 'In' → logprob: -15.511049270629883
    6. 'n' → logprob: -15.636049270629883
    7. '                   ' → logprob: -16.261049270629883
    8. '               ' → logprob: -16.261049270629883
    9. '_in' → logprob: -16.386049270629883
    10. '                    ' → logprob: -16.636049270629883

Token 470: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.10020925104618073
    2. ' range' → logprob: -2.3502092361450195
    3. '(range' → logprob: -12.85020923614502
    4. '0' → logprob: -19.225210189819336
    5. '(' → logprob: -19.475210189819336
    6. '	range' → logprob: -20.225210189819336
    7. 'in' → logprob: -20.725210189819336
    8. ' in' → logprob: -21.225210189819336
    9. ' ' → logprob: -21.725210189819336
    10. '_range' → logprob: -22.100210189819336

Token 471: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0001354824344161898
    2. '(' → logprob: -9.50013542175293
    3. 'self' → logprob: -9.75013542175293
    4. ' (' → logprob: -13.12513542175293
    5. ' self' → logprob: -15.62513542175293
    6. '(s' → logprob: -16.37513542175293
    7. '(
' → logprob: -18.50013542175293
    8. '0' → logprob: -19.75013542175293
    9. '[self' → logprob: -20.00013542175293
    10. '(range' → logprob: -20.37513542175293

Token 472: '.size' (ID: 4463)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1480213701725006
    2. '(self' → logprob: -2.0230214595794678
    3. '.size' → logprob: -5.648021221160889
    4. 'size' → logprob: -7.273021221160889
    5. ' self' → logprob: -8.273021697998047
    6. ')' → logprob: -8.898021697998047
    7. '.self' → logprob: -8.898021697998047
    8. '   ' → logprob: -9.023021697998047
    9. '       ' → logprob: -9.023021697998047
    10. ' ' → logprob: -9.773021697998047

Token 473: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.22995208203792572
    2. '):' → logprob: -1.604952096939087
    3. ':' → logprob: -5.604951858520508
    4. '                   ' → logprob: -7.979951858520508
    5. '               ' → logprob: -8.729951858520508
    6. ':
' → logprob: -8.854951858520508
    7. ')' → logprob: -9.229951858520508
    8. '):
' → logprob: -9.979951858520508
    9. '           ' → logprob: -10.979951858520508
    10. '                       ' → logprob: -11.479951858520508

Token 474: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0009663687669672072
    2. ' yield' → logprob: -7.375966548919678
    3. 'yield' → logprob: -8.12596607208252
    4. '                       ' → logprob: -11.37596607208252
    5. '               ' → logprob: -11.50096607208252
    6. '	yield' → logprob: -12.00096607208252
    7. '           ' → logprob: -12.37596607208252
    8. '                  ' → logprob: -12.75096607208252
    9. '                    
' → logprob: -12.87596607208252
    10. '```' → logprob: -13.00096607208252

Token 475: ' yield' (ID: 14376)
  Prédit: 'yield'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'yield' (adapté à ' yield') → logprob: -0.1444144994020462
    2. '                   ' → logprob: -2.1444144248962402
    3. ' yield' → logprob: -4.14441442489624
    4. '                       ' → logprob: -6.64441442489624
    5. '               ' → logprob: -9.269414901733398
    6. '	yield' → logprob: -9.769414901733398
    7. '           ' → logprob: -11.394414901733398
    8. '
' → logprob: -11.644414901733398
    9. '                    ' → logprob: -12.894414901733398
    10. '   ' → logprob: -13.269414901733398

Token 476: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -0.0004306692280806601
    2. ' Coordinate' → logprob: -7.750430583953857
    3. 'Coord' → logprob: -19.500431060791016
    4. '_coordinate' → logprob: -21.375431060791016
    5. '                   ' → logprob: -21.625431060791016
    6. 'Coordinator' → logprob: -21.875431060791016
    7. ' coordinate' → logprob: -22.125431060791016
    8. 'Coordinates' → logprob: -23.000431060791016
    9. 'coordinate' → logprob: -23.000431060791016
    10. '                       ' → logprob: -24.750431060791016

Token 477: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. ' ' → logprob: -18.875
    3. 'Coordinate' → logprob: -19.625
    4. '```' → logprob: -21.625
    5. '   ' → logprob: -22.625
    6. '³' → logprob: -23.0
    7. '
' → logprob: -23.125
    8. '[' → logprob: -23.125
    9. '(x' → logprob: -23.875
    10. '' → logprob: -24.25

Token 478: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.9361264946837764e-07
    2. '3' → logprob: -15.75
    3. 'Coordinate' → logprob: -17.625
    4. ' D' → logprob: -18.625
    5. '_D' → logprob: -18.625
    6. '4' → logprob: -19.125
    7. '0' → logprob: -19.625
    8. ' ' → logprob: -19.625
    9. '6' → logprob: -19.875
    10. 'd' → logprob: -20.125

Token 479: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0019881133921444416
    2. 'x' → logprob: -6.251987934112549
    3. '(' → logprob: -9.751988410949707
    4. '(
' → logprob: -13.751988410949707
    5. ' x' → logprob: -15.501988410949707
    6. ' (' → logprob: -16.25198745727539
    7. '	x' → logprob: -19.37698745727539
    8. '   ' → logprob: -19.37698745727539
    9. '0' → logprob: -19.87698745727539
    10. ')x' → logprob: -20.00198745727539

Token 480: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0001499060745118186
    2. ',y' → logprob: -9.125149726867676
    3. ' ,' → logprob: -10.125149726867676
    4. ')' → logprob: -14.875149726867676
    5. '<|end|>' → logprob: -15.875149726867676
    6. ',
' → logprob: -16.125150680541992
    7. 'y' → logprob: -16.625150680541992
    8. '‌,' → logprob: -17.250150680541992
    9. '),' → logprob: -17.500150680541992
    10. ' y' → logprob: -18.375150680541992

Token 481: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.00020354038861114532
    2. ' y' → logprob: -8.500203132629395
    3. '	y' → logprob: -21.00020408630371
    4. '   ' → logprob: -21.12520408630371
    5. ',y' → logprob: -21.25020408630371
    6. '<|end|>' → logprob: -21.62520408630371
    7. ')y' → logprob: -22.50020408630371
    8. ' ' → logprob: -23.00020408630371
    9. ',' → logprob: -23.00020408630371
    10. '  ' → logprob: -23.37520408630371

Token 482: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00019817621796391904
    2. ',z' → logprob: -8.625198364257812
    3. 'z' → logprob: -11.375198364257812
    4. ' ,' → logprob: -11.875198364257812
    5. ' z' → logprob: -17.875198364257812
    6. ')' → logprob: -18.000198364257812
    7. '```' → logprob: -18.000198364257812
    8. '                   ' → logprob: -18.250198364257812
    9. ',
' → logprob: -18.625198364257812
    10. 'x' → logprob: -19.500198364257812

Token 483: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -1.9027791495318525e-05
    2. ' z' → logprob: -10.875019073486328
    3. ')' → logprob: -17.750019073486328
    4. 'x' → logprob: -18.750019073486328
    5. '	z' → logprob: -19.125019073486328
    6. '   ' → logprob: -19.500019073486328
    7. '<|end|>' → logprob: -19.750019073486328
    8. '0' → logprob: -20.625019073486328
    9. '[z' → logprob: -20.750019073486328
    10. ''z' → logprob: -20.750019073486328

Token 484: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00015860427811276168
    2. ')
' → logprob: -8.750158309936523
    3. ' )' → logprob: -16.750158309936523
    4. '<|end|>' → logprob: -16.750158309936523
    5. ')
' → logprob: -17.875158309936523
    6. ')

' → logprob: -17.875158309936523
    7. '))' → logprob: -18.875158309936523
    8. '),' → logprob: -19.250158309936523
    9. '```' → logprob: -19.375158309936523
    10. '       ' → logprob: -19.375158309936523

Token 485: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017037220299243927
    2. 'def' → logprob: -4.142037391662598
    3. '
' → logprob: -7.392037391662598
    4. ' def' → logprob: -8.642037391662598
    5. '```' → logprob: -8.767037391662598
    6. '    
' → logprob: -10.642037391662598
    7. '<|end|>' → logprob: -11.267037391662598
    8. '        
' → logprob: -12.767037391662598
    9. ' ' → logprob: -12.767037391662598
    10. '	def' → logprob: -12.767037391662598

Token 486: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.701166570186615
    2. 'def' (adapté à ' def') → logprob: -0.701166570186615
    3. ' def' → logprob: -4.95116662979126
    4. '
' → logprob: -7.20116662979126
    5. '    
' → logprob: -9.451166152954102
    6. ' ' → logprob: -10.326166152954102
    7. '        
' → logprob: -11.201166152954102
    8. '```' → logprob: -11.576166152954102
    9. '	def' → logprob: -11.701166152954102
    10. '  ' → logprob: -12.451166152954102

Token 487: ' copy' (ID: 5150)
  Prédit: ' step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' step' → logprob: -0.0544428825378418
    2. 'step' → logprob: -3.054442882537842
    3. ' next' → logprob: -6.179442882537842
    4. ' update' → logprob: -6.929442882537842
    5. 'tick' → logprob: -7.054442882537842
    6. ' evolve' → logprob: -7.929442882537842
    7. ' tick' → logprob: -7.929442882537842
    8. 'update' → logprob: -8.179443359375
    9. 'next' → logprob: -8.304443359375
    10. ' simulate' → logprob: -8.554443359375

Token 488: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.6100132496794686e-05
    2. '(' → logprob: -10.250056266784668
    3. ' (' → logprob: -10.875056266784668
    4. '(s' → logprob: -14.375056266784668
    5. '   ' → logprob: -14.500056266784668
    6. 'self' → logprob: -15.250056266784668
    7. 'def' → logprob: -16.37505531311035
    8. '(
' → logprob: -16.75005531311035
    9. '_(' → logprob: -16.87505531311035
    10. ' ' → logprob: -17.00005531311035

Token 489: ')' (ID: 8)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1047673225402832
    2. ',' → logprob: -2.854767322540283
    3. ')' → logprob: -3.229767322540283
    4. ' ):' → logprob: -6.854767322540283
    5. '):
' → logprob: -6.979767322540283
    6. 'self' → logprob: -9.229766845703125
    7. '(self' → logprob: -9.354766845703125
    8. ' )' → logprob: -9.479766845703125
    9. ' ,' → logprob: -10.354766845703125
    10. '   ' → logprob: -11.229766845703125

Token 490: ' ->' (ID: 2747)
  Prédit: '->'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '->' → logprob: -0.8801420331001282
    2. '(self' → logprob: -1.0051419734954834
    3. ' ->' → logprob: -2.0051419734954834
    4. 'self' → logprob: -2.8801419734954834
    5. ':' → logprob: -4.7551422119140625
    6. ')' → logprob: -4.7551422119140625
    7. '   ' → logprob: -5.2551422119140625
    8. '       ' → logprob: -5.3801422119140625
    9. ')->' → logprob: -7.7551422119140625
    10. ' self' → logprob: -8.005142211914062

Token 491: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.014752520248293877
    2. ' '' → logprob: -4.264752388000488
    3. 'Grid' → logprob: -7.764752388000488
    4. '"' → logprob: -9.639752388000488
    5. ''s' → logprob: -10.389752388000488
    6. 'object' → logprob: -11.514752388000488
    7. ''type' → logprob: -11.514752388000488
    8. ''GC' → logprob: -11.764752388000488
    9. ''class' → logprob: -11.889752388000488
    10. ''t' → logprob: -12.764752388000488

Token 492: 'Grid' (ID: 5351)
  Prédit: 'Grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Grid' → logprob: -3.128163257315464e-07
    2. ' Grid' → logprob: -15.625
    3. '<Grid' → logprob: -17.0
    4. '(Grid' → logprob: -18.5
    5. '	Grid' → logprob: -18.625
    6. 'self' → logprob: -18.75
    7. '.Grid' → logprob: -19.25
    8. '
' → logprob: -19.25
    9. '   ' → logprob: -19.5
    10. 'grid' → logprob: -19.875

Token 493: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. ' ' → logprob: -17.875
    3. '   ' → logprob: -18.5
    4. '```' → logprob: -19.375
    5. '
' → logprob: -19.75
    6. '' → logprob: -20.125
    7. '[' → logprob: -20.375
    8. '۳' → logprob: -20.5
    9. '  ' → logprob: -20.8125
    10. '<Grid' → logprob: -20.875

Token 494: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.0206720617134124e-05
    2. '3' → logprob: -11.50001049041748
    3. ' D' → logprob: -19.500009536743164
    4. '[' → logprob: -19.750009536743164
    5. '<D' → logprob: -20.000009536743164
    6. 'C' → logprob: -20.250009536743164
    7. ' ' → logprob: -20.625009536743164
    8. ''' → logprob: -21.125009536743164
    9. 'Grid' → logprob: -21.375009536743164
    10. '_D' → logprob: -21.750009536743164

Token 495: '':
' (ID: 7669)
  Prédit: '':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '':' → logprob: -0.2533176839351654
    2. '':
' → logprob: -1.5033177137374878
    3. ''' → logprob: -7.253317832946777
    4. '(self' → logprob: -8.253317832946777
    5. '':
' → logprob: -8.878317832946777
    6. '):
' → logprob: -9.503317832946777
    7. 'self' → logprob: -9.503317832946777
    8. '):' → logprob: -9.753317832946777
    9. '':

' → logprob: -10.753317832946777
    10. ':
' → logprob: -11.253317832946777

Token 496: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014180023572407663
    2. '
' → logprob: -9.250142097473145
    3. '   ' → logprob: -10.750142097473145
    4. '        
' → logprob: -11.875142097473145
    5. 'return' → logprob: -12.875142097473145
    6. '```' → logprob: -12.875142097473145
    7. ' new' → logprob: -13.125142097473145
    8. 'new' → logprob: -13.375142097473145
    9. '<|end|>' → logprob: -13.875142097473145
    10. '	' → logprob: -13.875142097473145

Token 497: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.5912919044494629
    2. 'grid' → logprob: -0.8412919044494629
    3. '       ' → logprob: -5.091291904449463
    4. 'g' → logprob: -5.591291904449463
    5. ' new' → logprob: -5.591291904449463
    6. ' grid' → logprob: -7.216291904449463
    7. 'return' → logprob: -7.466291904449463
    8. 'copy' → logprob: -8.591291427612305
    9. '
' → logprob: -9.466291427612305
    10. '   ' → logprob: -10.466291427612305

Token 498: '_grid' (ID: 34614)
  Prédit: 'Grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Grid' → logprob: -0.1485329121351242
    2. ' Grid' → logprob: -2.5235328674316406
    3. '_' → logprob: -3.1485328674316406
    4. '(' → logprob: -5.523532867431641
    5. '()' → logprob: -5.648532867431641
    6. ' =' → logprob: -5.898532867431641
    7. '(Grid' → logprob: -6.148532867431641
    8. 'Space' → logprob: -7.898532867431641
    9. '.Grid' → logprob: -7.898532867431641
    10. '_grid' → logprob: -8.02353286743164

Token 499: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3132671117782593
    2. '=' → logprob: -1.3132671117782593
    3. '(' → logprob: -13.06326675415039
    4. '=
' → logprob: -13.93826675415039
    5. '=self' → logprob: -13.93826675415039
    6. '(self' → logprob: -14.06326675415039
    7. ' =
' → logprob: -15.18826675415039
    8. ' ' → logprob: -16.06326675415039
    9. '(
' → logprob: -16.43826675415039
    10. ')' → logprob: -16.68826675415039

Token 500: ' Grid' (ID: 18087)
  Prédit: 'Grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Grid' → logprob: -0.004078401252627373
    2. ' Grid' → logprob: -5.504078388214111
    3. '	Grid' → logprob: -17.379077911376953
    4. 'type' → logprob: -18.004077911376953
    5. '(Grid' → logprob: -18.379077911376953
    6. '<Grid' → logprob: -19.379077911376953
    7. 'self' → logprob: -20.004077911376953
    8. '   ' → logprob: -20.504077911376953
    9. '       ' → logprob: -21.004077911376953
    10. '.Grid' → logprob: -21.254077911376953

Token 501: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: 0.0
    2. 'Grid' → logprob: -18.375
    3. '(' → logprob: -19.25
    4. '(Grid' → logprob: -20.0
    5. '```' → logprob: -21.125
    6. '(size' → logprob: -21.25
    7. '(grid' → logprob: -21.5
    8. '   ' → logprob: -22.125
    9. '[' → logprob: -22.5
    10. '۳' → logprob: -22.625

Token 502: 'D' (ID: 35)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0005587508203461766
    2. 'D' → logprob: -7.500558853149414
    3. '(size' → logprob: -12.250558853149414
    4. '(self' → logprob: -14.000558853149414
    5. '(' → logprob: -15.625558853149414
    6. 'Grid' → logprob: -17.250558853149414
    7. ' ' → logprob: -17.625558853149414
    8. '(grid' → logprob: -18.000558853149414
    9. '[size' → logprob: -18.875558853149414
    10. '   ' → logprob: -18.875558853149414

Token 503: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -5.512236498361744e-07
    2. '(' → logprob: -14.875000953674316
    3. 'self' → logprob: -16.5
    4. '(s' → logprob: -19.625
    5. '(sel' → logprob: -20.125
    6. '(
' → logprob: -20.375
    7. '((' → logprob: -20.75
    8. ' (' → logprob: -20.75
    9. '(len' → logprob: -21.5
    10. '(this' → logprob: -21.875

Token 504: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -4.4656579120783135e-05
    2. 'size' → logprob: -10.250044822692871
    3. '.' → logprob: -11.625044822692871
    4. ' .' → logprob: -15.500044822692871
    5. '(size' → logprob: -16.750043869018555
    6. ').' → logprob: -17.500043869018555
    7. ' size' → logprob: -18.250043869018555
    8. '.s' → logprob: -18.500043869018555
    9. '	size' → logprob: -18.875043869018555
    10. '   ' → logprob: -20.125043869018555

Token 505: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.20142211019992828
    2. ')' → logprob: -1.701422095298767
    3. ')
' → logprob: -11.826421737670898
    4. ' )
' → logprob: -14.326421737670898
    5. '       ' → logprob: -14.576421737670898
    6. ')

' → logprob: -14.951421737670898
    7. ' )' → logprob: -16.2014217376709
    8. '   ' → logprob: -16.9514217376709
    9. '),' → logprob: -17.4514217376709
    10. ')`
' → logprob: -18.3264217376709

Token 506: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.034077972173690796
    2. 'new' → logprob: -3.7840778827667236
    3. ' new' → logprob: -4.534078121185303
    4. '
' → logprob: -10.534077644348145
    5. '	new' → logprob: -12.909077644348145
    6. '   ' → logprob: -12.909077644348145
    7. '[new' → logprob: -13.034077644348145
    8. '        
' → logprob: -13.784077644348145
    9. ')new' → logprob: -14.784077644348145
    10. '.new' → logprob: -15.159077644348145

Token 507: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.004097396973520517
    2. ' new' → logprob: -5.5040974617004395
    3. '       ' → logprob: -10.879096984863281
    4. 'for' → logprob: -17.50409698486328
    5. '	new' → logprob: -17.62909698486328
    6. '
' → logprob: -17.87909698486328
    7. '   ' → logprob: -18.25409698486328
    8. '.new' → logprob: -18.62909698486328
    9. '_new' → logprob: -19.12909698486328
    10. '           ' → logprob: -19.62909698486328

Token 508: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -0.00020234835392329842
    2. 'grid' → logprob: -9.500202178955078
    3. '.' → logprob: -9.750202178955078
    4. 'new' → logprob: -10.250202178955078
    5. '.grid' → logprob: -11.125202178955078
    6. 'Grid' → logprob: -11.875202178955078
    7. 'occupied' → logprob: -12.250202178955078
    8. '.Grid' → logprob: -12.875202178955078
    9. '._' → logprob: -13.375202178955078
    10. '_' → logprob: -13.375202178955078

Token 509: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -4.008129963040119e-06
    2. '       ' → logprob: -13.250003814697266
    3. ' .' → logprob: -14.125003814697266
    4. 'occupied' → logprob: -15.125003814697266
    5. ').' → logprob: -15.500003814697266
    6. '   ' → logprob: -15.750003814697266
    7. '
' → logprob: -15.875003814697266
    8. '.ob' → logprob: -16.875003814697266
    9. '.selected' → logprob: -16.875003814697266
    10. '```' → logprob: -17.000003814697266

Token 510: 'occupied' (ID: 98229)
  Prédit: 'occupied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -3.128163257315464e-07
    2. '.' → logprob: -16.25
    3. 'occup' → logprob: -16.375
    4. ' occupied' → logprob: -18.375
    5. '-' → logprob: -18.625
    6. 'ocup' → logprob: -18.625
    7. '_' → logprob: -18.75
    8. '```' → logprob: -19.125
    9. 'visited' → logprob: -19.625
    10. '
' → logprob: -19.75

Token 511: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.006920565385371447
    2. ' =' → logprob: -5.006920337677002
    3. '.update' → logprob: -8.50692081451416
    4. '.=' → logprob: -13.13192081451416
    5. '.' → logprob: -14.38192081451416
    6. 'update' → logprob: -15.50692081451416
    7. ' ' → logprob: -15.88192081451416
    8. '=set' → logprob: -16.381919860839844
    9. ' |=' → logprob: -17.006919860839844
    10. '=

' → logprob: -17.381919860839844

Token 512: ' set' (ID: 920)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.00020854694594163448
    2. 'set' → logprob: -8.500208854675293
    3. ' self' → logprob: -12.250208854675293
    4. '{' → logprob: -15.250208854675293
    5. '(self' → logprob: -19.250207901000977
    6. ' set' → logprob: -19.250207901000977
    7. '	self' → logprob: -19.500207901000977
    8. '   ' → logprob: -20.000207901000977
    9. '=self' → logprob: -22.125207901000977
    10. '{
' → logprob: -22.625207901000977

Token 513: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.088346359931165e-07
    2. '(' → logprob: -14.125000953674316
    3. 'self' → logprob: -16.75
    4. '((' → logprob: -19.125
    5. '(map' → logprob: -20.125
    6. '(
' → logprob: -20.25
    7. ' (' → logprob: -20.5
    8. '[self' → logprob: -20.875
    9. '```' → logprob: -20.875
    10. '(copy' → logprob: -21.25

Token 514: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: 0.0
    2. ' .' → logprob: -16.875
    3. ').' → logprob: -18.0
    4. 'self' → logprob: -18.25
    5. '```' → logprob: -20.25
    6. '._' → logprob: -20.625
    7. '\.' → logprob: -20.75
    8. ')' → logprob: -21.0
    9. 'occupied' → logprob: -21.0
    10. '.oc' → logprob: -21.375

Token 515: 'occupied' (ID: 98229)
  Prédit: 'occupied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.00033534664544276893
    2. 'self' → logprob: -8.125335693359375
    3. '.' → logprob: -10.250335693359375
    4. 'occ' → logprob: -14.000335693359375
    5. 'owned' → logprob: -14.125335693359375
    6. '{' → logprob: -14.750335693359375
    7. ' occupied' → logprob: -14.875335693359375
    8. 'occup' → logprob: -15.125335693359375
    9. '```' → logprob: -15.125335693359375
    10. '
' → logprob: -15.625335693359375

Token 516: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.1994775377388578e-05
    2. '.copy' → logprob: -11.875012397766113
    3. '())' → logprob: -12.875012397766113
    4. ')
' → logprob: -13.250012397766113
    5. ' )' → logprob: -14.500012397766113
    6. '   ' → logprob: -16.750011444091797
    7. ')`' → logprob: -17.125011444091797
    8. '()' → logprob: -18.125011444091797
    9. ')#' → logprob: -18.375011444091797
    10. ')return' → logprob: -18.500011444091797

Token 517: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.001035787514410913
    2. 'return' → logprob: -7.001035690307617
    3. ' return' → logprob: -9.376035690307617
    4. '
' → logprob: -10.626035690307617
    5. '   ' → logprob: -12.126035690307617
    6. '	return' → logprob: -12.876035690307617
    7. '	' → logprob: -12.876035690307617
    8. '<|end|>' → logprob: -13.376035690307617
    9. '```' → logprob: -14.376035690307617
    10. ':return' → logprob: -14.751035690307617

Token 518: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.3150903284549713
    2. '       ' → logprob: -1.315090298652649
    3. ' return' → logprob: -6.315090179443359
    4. '   ' → logprob: -11.44009017944336
    5. '	return' → logprob: -12.19009017944336
    6. ':return' → logprob: -13.81509017944336
    7. '
' → logprob: -14.94009017944336
    8. '{return' → logprob: -15.44009017944336
    9. 'eturn' → logprob: -15.69009017944336
    10. '```' → logprob: -16.19009017944336

Token 519: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.3132616877555847
    2. ' new' → logprob: -1.3132617473602295
    3. '(new' → logprob: -18.438261032104492
    4. ')new' → logprob: -19.563261032104492
    5. '_new' → logprob: -20.438261032104492
    6. '[new' → logprob: -20.563261032104492
    7. '	new' → logprob: -21.063261032104492
    8. '新' → logprob: -22.438261032104492
    9. 'newline' → logprob: -22.688261032104492
    10. '
' → logprob: -23.438261032104492

Token 520: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -3.893480243277736e-05
    2. '_' → logprob: -10.250039100646973
    3. '_gr' → logprob: -13.500039100646973
    4. 'new' → logprob: -14.875039100646973
    5. '_g' → logprob: -15.250039100646973
    6. 'grid' → logprob: -15.375039100646973
    7. '_GRID' → logprob: -15.375039100646973
    8. '_code' → logprob: -15.500039100646973
    9. ' _' → logprob: -15.625039100646973
    10. '_new' → logprob: -15.875039100646973

Token 521: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.001354402513243258
    2. '
' → logprob: -7.376354217529297
    3. 'def' → logprob: -7.376354217529297
    4. '    
' → logprob: -10.126354217529297
    5. ' def' → logprob: -10.376354217529297
    6. '<|end|>' → logprob: -10.751354217529297
    7. '```' → logprob: -13.376354217529297
    8. '<|end|>' → logprob: -13.376354217529297
    9. '        
' → logprob: -13.876354217529297
    10. '	def' → logprob: -14.251354217529297

Token 522: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.5768226981163025
    2. 'def' → logprob: -0.8268226981163025
    3. ' def' → logprob: -7.076822757720947
    4. '```' → logprob: -10.576822280883789
    5. '	def' → logprob: -12.451822280883789
    6. ' ' → logprob: -12.576822280883789
    7. '
' → logprob: -12.826822280883789
    8. '  ' → logprob: -13.951822280883789
    9. '    
' → logprob: -14.701822280883789
    10. 'class' → logprob: -14.951822280883789

Token 523: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.1279553291387856e-05
    2. ' def' → logprob: -11.500011444091797
    3. '   ' → logprob: -13.750011444091797
    4. '	def' → logprob: -20.250011444091797
    5. '
' → logprob: -22.750011444091797
    6. 'from' → logprob: -23.250011444091797
    7. '@' → logprob: -23.250011444091797
    8. '    
' → logprob: -23.500011444091797
    9. ' ' → logprob: -24.250011444091797
    10. '```' → logprob: -24.375011444091797

Token 524: ' __' (ID: 2516)
  Prédit: 'step'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'step' → logprob: -0.26594820618629456
    2. ' step' → logprob: -1.5159481763839722
    3. 'update' → logprob: -4.515948295593262
    4. 'tick' → logprob: -6.765948295593262
    5. 'advance' → logprob: -7.390948295593262
    6. ' update' → logprob: -7.515948295593262
    7. 'next' → logprob: -7.765948295593262
    8. 'e' → logprob: -9.515948295593262
    9. ' next' → logprob: -10.015948295593262
    10. ' evolve' → logprob: -10.265948295593262

Token 525: 'str' (ID: 689)
  Prédit: 'contains'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'contains' → logprob: -0.5658142566680908
    2. 'iter' → logprob: -1.5658142566680908
    3. 'repr' → logprob: -2.315814256668091
    4. 'eq' → logprob: -2.815814256668091
    5. 'len' → logprob: -3.315814256668091
    6. 'str' → logprob: -3.565814256668091
    7. 'hash' → logprob: -9.940814018249512
    8. 'contain' → logprob: -12.440814018249512
    9. 'init' → logprob: -12.565814018249512
    10. 'bool' → logprob: -12.815814018249512

Token 526: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0004484269011300057
    2. '__' → logprob: -7.750448226928711
    3. '__(
' → logprob: -11.375448226928711
    4. '(self' → logprob: -12.250448226928711
    5. '__('' → logprob: -14.500448226928711
    6. '__((' → logprob: -15.000448226928711
    7. '___' → logprob: -15.375448226928711
    8. '_(' → logprob: -16.12544822692871
    9. '__[' → logprob: -16.37544822692871
    10. '__("' → logprob: -16.75044822692871

Token 527: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -2.696889623621246e-06
    2. ')' → logprob: -12.87500286102295
    3. ' self' → logprob: -17.500001907348633
    4. '(self' → logprob: -17.875001907348633
    5. '
' → logprob: -19.000001907348633
    6. 's' → logprob: -19.125001907348633
    7. ')(' → logprob: -19.500001907348633
    8. '0' → logprob: -21.125001907348633
    9. '   ' → logprob: -21.250001907348633
    10. 'elf' → logprob: -21.250001907348633

Token 528: '):
' (ID: 1883)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '__' → logprob: -0.1354524940252304
    2. '__)' → logprob: -2.1354525089263916
    3. 'self' → logprob: -5.3854522705078125
    4. '__(' → logprob: -5.7604522705078125
    5. ')__' → logprob: -8.135452270507812
    6. ')' → logprob: -8.385452270507812
    7. '__('' → logprob: -9.885452270507812
    8. '__)
' → logprob: -10.135452270507812
    9. '__).' → logprob: -10.385452270507812
    10. '):' → logprob: -10.760452270507812

Token 529: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00014251544780563563
    2. '   ' → logprob: -9.125142097473145
    3. '(self' → logprob: -11.875142097473145
    4. 'self' → logprob: -12.000142097473145
    5. '           ' → logprob: -13.250142097473145
    6. '```' → logprob: -13.375142097473145
    7. '`' → logprob: -13.625142097473145
    8. ' self' → logprob: -13.625142097473145
    9. '""' → logprob: -13.750142097473145
    10. '"' → logprob: -13.750142097473145

Token 530: ' #' (ID: 1069)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.5012122988700867
    2. 'result' → logprob: -1.0012123584747314
    3. 'layers' → logprob: -4.376212120056152
    4. 'output' → logprob: -5.251212120056152
    5. 'res' → logprob: -6.251212120056152
    6. 's' → logprob: -6.251212120056152
    7. 'r' → logprob: -6.376212120056152
    8. ' lines' → logprob: -6.501212120056152
    9. '       ' → logprob: -7.376212120056152
    10. ' result' → logprob: -7.501212120056152

Token 531: ' For' (ID: 2214)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.07651644200086594
    2. 'layers' → logprob: -3.0765163898468018
    3. 'result' → logprob: -4.326516628265381
    4. 'output' → logprob: -5.326516628265381
    5. ' lines' → logprob: -5.576516628265381
    6. ' layers' → logprob: -6.201516628265381
    7. 'rows' → logprob: -6.326516628265381
    8. 'levels' → logprob: -6.951516628265381
    9. 's' → logprob: -7.576516628265381
    10. ' result' → logprob: -8.826516151428223

Token 532: ' output' (ID: 4733)
  Prédit: ' z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' z' → logprob: -0.022497911006212234
    2. 'z' → logprob: -4.02249813079834
    3. ' str' → logprob: -6.02249813079834
    4. 'str' → logprob: -7.27249813079834
    5. ' def' → logprob: -8.52249813079834
    6. ' each' → logprob: -8.64749813079834
    7. ' repr' → logprob: -9.02249813079834
    8. ' layer' → logprob: -9.14749813079834
    9. ' x' → logprob: -9.39749813079834
    10. 'def' → logprob: -9.39749813079834

Token 533: ' formatting' (ID: 61348)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.45331352949142456
    2. '   ' → logprob: -1.0783135890960693
    3. 'def' → logprob: -5.07831335067749
    4. ' in' → logprob: -5.45331335067749
    5. ' self' → logprob: -6.07831335067749
    6. '    ' → logprob: -6.45331335067749
    7. '(self' → logprob: -6.57831335067749
    8. '           ' → logprob: -6.57831335067749
    9. '
' → logprob: -6.70331335067749
    10. ' def' → logprob: -6.70331335067749

Token 534: ' per' (ID: 777)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0009817203972488642
    2. '   ' → logprob: -7.37598180770874
    3. ' result' → logprob: -8.875981330871582
    4. ' lines' → logprob: -9.500981330871582
    5. 'result' → logprob: -9.625981330871582
    6. ' output' → logprob: -11.250981330871582
    7. '           ' → logprob: -11.625981330871582
    8. 'output' → logprob: -11.625981330871582
    9. ',' → logprob: -11.750981330871582
    10. '      ' → logprob: -12.250981330871582

Token 535: ' layer' (ID: 10261)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -1.0101500749588013
    2. 'layer' → logprob: -1.0101500749588013
    3. ' layer' → logprob: -1.6351500749588013
    4. ' z' → logprob: -3.0101499557495117
    5. 'plane' → logprob: -4.635149955749512
    6. ' plane' → logprob: -5.010149955749512
    7. 'slice' → logprob: -5.635149955749512
    8. ' level' → logprob: -6.010149955749512
    9. 'level' → logprob: -6.010149955749512
    10. ' slice' → logprob: -7.010149955749512

Token 536: ' z' (ID: 579)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0037312027998268604
    2. '   ' → logprob: -5.7537312507629395
    3. '(self' → logprob: -8.503730773925781
    4. 'self' → logprob: -8.628730773925781
    5. ' self' → logprob: -9.628730773925781
    6. '           ' → logprob: -10.128730773925781
    7. ',' → logprob: -11.003730773925781
    8. 'def' → logprob: -11.128730773925781
    9. '
' → logprob: -11.753730773925781
    10. '        
' → logprob: -12.128730773925781

Token 537: '=' (ID: 28)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.06410401314496994
    2. '(self' → logprob: -3.0641040802001953
    3. '   ' → logprob: -4.439104080200195
    4. '
' → logprob: -6.189104080200195
    5. 'self' → logprob: -7.314104080200195
    6. '           ' → logprob: -7.814104080200195
    7. ',' → logprob: -8.939104080200195
    8. ' self' → logprob: -9.314104080200195
    9. ':' → logprob: -10.189104080200195
    10. '(' → logprob: -10.314104080200195

Token 538: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.002215561456978321
    2. ' ' → logprob: -7.502215385437012
    3. '
' → logprob: -8.127215385437012
    4. 'self' → logprob: -8.252215385437012
    5. 'range' → logprob: -8.252215385437012
    6. 'layer' → logprob: -8.877215385437012
    7. '\n' → logprob: -9.127215385437012
    8. ' for' → logprob: -9.502215385437012
    9. ''\' → logprob: -9.752215385437012
    10. ' range' → logprob: -9.877215385437012

Token 539: '..' (ID: 485)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.8351309299468994
    2. '   ' → logprob: -1.4601309299468994
    3. ':
' → logprob: -1.9601309299468994
    4. ',' → logprob: -2.0851309299468994
    5. '       ' → logprob: -3.2101309299468994
    6. '
' → logprob: -3.8351309299468994
    7. '\n' → logprob: -5.83513069152832
    8. ',
' → logprob: -7.21013069152832
    9. ' and' → logprob: -7.46013069152832
    10. '):' → logprob: -7.58513069152832

Token 540: '4' (ID: 19)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '0' → logprob: -0.042278390377759933
    2. ',' → logprob: -4.542278289794922
    3. ' to' → logprob: -4.917278289794922
    4. 'self' → logprob: -5.167278289794922
    5. '\n' → logprob: -5.542278289794922
    6. '```' → logprob: -5.542278289794922
    7. ' ' → logprob: -6.167278289794922
    8. ' for' → logprob: -6.792278289794922
    9. '
' → logprob: -6.792278289794922
    10. 'size' → logprob: -7.542278289794922

Token 541: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.14019101858139038
    2. '
' → logprob: -2.890191078186035
    3. '   ' → logprob: -3.140191078186035
    4. '(self' → logprob: -3.515191078186035
    5. 'self' → logprob: -6.890191078186035
    6. ' self' → logprob: -8.515191078186035
    7. '           ' → logprob: -8.515191078186035
    8. '\n' → logprob: -8.640191078186035
    9. '
' → logprob: -9.015191078186035
    10. ',' → logprob: -9.140191078186035

Token 542: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.000954098126385361
    2. '   ' → logprob: -7.1259541511535645
    3. '
' → logprob: -9.250953674316406
    4. ',' → logprob: -10.625953674316406
    5. '```' → logprob: -11.500953674316406
    6. '           ' → logprob: -12.625953674316406
    7. '(self' → logprob: -12.625953674316406
    8. ' self' → logprob: -13.250953674316406
    9. '\' → logprob: -13.250953674316406
    10. ' return' → logprob: -14.125953674316406

Token 543: ' layers' (ID: 22119)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.2558559477329254
    2. 'result' → logprob: -1.755855917930603
    3. ' lines' → logprob: -4.005856037139893
    4. 'layers' (adapté à ' layers') → logprob: -4.255856037139893
    5. 'output' → logprob: -4.505856037139893
    6. 'res' → logprob: -5.130856037139893
    7. '       ' → logprob: -6.755856037139893
    8. ' result' → logprob: -6.880856037139893
    9. 's' → logprob: -7.380856037139893
    10. 'out' → logprob: -8.130855560302734

Token 544: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.043028537184000015
    2. '=' → logprob: -3.1680285930633545
    3. ' ' → logprob: -11.543028831481934
    4. '=[]' → logprob: -11.918028831481934
    5. '   ' → logprob: -12.293028831481934
    6. ':' → logprob: -13.418028831481934
    7. '[]' → logprob: -13.668028831481934
    8. '_str' → logprob: -13.668028831481934
    9. '=[]
' → logprob: -14.168028831481934
    10. '  ' → logprob: -14.168028831481934

Token 545: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.023246407508850098
    2. '[]
' → logprob: -3.7732462882995605
    3. '[' → logprob: -15.148246765136719
    4. '[]

' → logprob: -15.148246765136719
    5. ' []' → logprob: -15.398246765136719
    6. '[]"' → logprob: -15.773246765136719
    7. '[
' → logprob: -17.39824676513672
    8. '['' → logprob: -17.39824676513672
    9. ' []
' → logprob: -17.77324676513672
    10. '["' → logprob: -17.77324676513672

Token 546: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0011080671101808548
    2. ' for' → logprob: -7.126108169555664
    3. 'for' → logprob: -8.126108169555664
    4. '           ' → logprob: -12.876108169555664
    5. '   ' → logprob: -13.126108169555664
    6. ',' → logprob: -13.626108169555664
    7. '\' → logprob: -14.751108169555664
    8. '	' → logprob: -15.126108169555664
    9. '
' → logprob: -15.501108169555664
    10. ':' → logprob: -15.501108169555664

Token 547: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01622544415295124
    2. ' for' → logprob: -4.516225337982178
    3. '       ' → logprob: -5.266225337982178
    4. '   ' → logprob: -14.016225814819336
    5. '
' → logprob: -15.141225814819336
    6. '           ' → logprob: -16.016225814819336
    7. '```' → logprob: -17.891225814819336
    8. '	for' → logprob: -18.016225814819336
    9. ' ' → logprob: -18.391225814819336
    10. ' ' → logprob: -19.141225814819336

Token 548: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.0024756586644798517
    2. ' z' → logprob: -6.002475738525391
    3. '   ' → logprob: -18.25247573852539
    4. '	z' → logprob: -19.50247573852539
    5. 'self' → logprob: -20.12747573852539
    6. 'layer' → logprob: -20.12747573852539
    7. '_z' → logprob: -20.75247573852539
    8. '```' → logprob: -22.12747573852539
    9. '(z' → logprob: -22.25247573852539
    10. ' layer' → logprob: -22.62747573852539

Token 549: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0067176250740885735
    2. 'in' → logprob: -5.006717681884766
    3. ' ' → logprob: -13.756717681884766
    4. ',' → logprob: -14.756717681884766
    5. '0' → logprob: -15.381717681884766
    6. '=' → logprob: -16.631717681884766
    7. 'In' → logprob: -16.756717681884766
    8. '1' → logprob: -16.881717681884766
    9. '    ' → logprob: -16.881717681884766
    10. '        ' → logprob: -16.881717681884766

Token 550: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.00861456897109747
    2. ' range' → logprob: -4.758614540100098
    3. '(range' → logprob: -17.258615493774414
    4. ' ' → logprob: -18.508615493774414
    5. '	range' → logprob: -18.883615493774414
    6. '   ' → logprob: -19.258615493774414
    7. '  ' → logprob: -20.883615493774414
    8. '0' → logprob: -21.383615493774414
    9. '    ' → logprob: -22.133615493774414
    10. 'Range' → logprob: -22.758615493774414

Token 551: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.04859929531812668
    2. '(' → logprob: -3.0485992431640625
    3. '5' → logprob: -11.548599243164062
    4. 'self' → logprob: -13.923599243164062
    5. '(min' → logprob: -14.298599243164062
    6. '(s' → logprob: -15.173599243164062
    7. ' (' → logprob: -15.423599243164062
    8. '((' → logprob: -15.923599243164062
    9. '(
' → logprob: -16.173599243164062
    10. '(len' → logprob: -17.173599243164062

Token 552: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -4.274932143744081e-05
    2. '.' → logprob: -10.125042915344238
    3. ' .' → logprob: -13.375042915344238
    4. 'size' → logprob: -13.875042915344238
    5. '   ' → logprob: -17.125041961669922
    6. ').' → logprob: -17.625041961669922
    7. ')' → logprob: -17.875041961669922
    8. '	size' → logprob: -18.125041961669922
    9. '.height' → logprob: -18.250041961669922
    10. '.s' → logprob: -18.750041961669922

Token 553: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.5760195255279541
    2. '):
' → logprob: -0.8260195255279541
    3. '       ' → logprob: -10.701019287109375
    4. ':' → logprob: -10.951019287109375
    5. '):
' → logprob: -11.076019287109375
    6. '   ' → logprob: -11.576019287109375
    7. ')' → logprob: -12.076019287109375
    8. '):

' → logprob: -12.826019287109375
    9. ' ):' → logprob: -12.826019287109375
    10. ':
' → logprob: -13.701019287109375

Token 554: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.945094355614856e-05
    2. ':' → logprob: -9.750069618225098
    3. ':
' → logprob: -12.375069618225098
    4. '            
' → logprob: -13.250069618225098
    5. ',' → logprob: -13.875069618225098
    6. '       ' → logprob: -13.875069618225098
    7. '
' → logprob: -14.375069618225098
    8. '   ' → logprob: -14.625069618225098
    9. '```' → logprob: -14.750069618225098
    10. '          ' → logprob: -14.875069618225098

Token 555: ' layer' (ID: 10261)
  Prédit: 'layer'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'layer' (adapté à ' layer') → logprob: -0.06471150368452072
    2. ' layer' → logprob: -2.939711570739746
    3. 'lines' → logprob: -5.064711570739746
    4. '           ' → logprob: -6.564711570739746
    5. 'rows' → logprob: -6.564711570739746
    6. 'layers' → logprob: -8.189711570739746
    7. ' lines' → logprob: -8.689711570739746
    8. 'row' → logprob: -9.564711570739746
    9. '       ' → logprob: -9.814711570739746
    10. ' rows' → logprob: -10.439711570739746

Token 556: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.18493740260601044
    2. '_rows' → logprob: -2.4349374771118164
    3. '=' → logprob: -2.9349374771118164
    4. ' =' → logprob: -3.6849374771118164
    5. '_str' → logprob: -6.684937477111816
    6. '_repr' → logprob: -7.434937477111816
    7. 'rows' → logprob: -7.809937477111816
    8. '_chars' → logprob: -8.184937477111816
    9. '_' → logprob: -8.684937477111816
    10. 'lines' → logprob: -9.434937477111816

Token 557: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197967752814293
    2. ' =' → logprob: -2.8119797706604004
    3. '.append' → logprob: -11.561979293823242
    4. '=[]' → logprob: -13.436979293823242
    5. '=[]
' → logprob: -14.811979293823242
    6. '   ' → logprob: -15.936979293823242
    7. '[]' → logprob: -16.061979293823242
    8. ':' → logprob: -16.561979293823242
    9. ' ' → logprob: -16.686979293823242
    10. '.' → logprob: -16.686979293823242

Token 558: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.3879149556159973
    2. '[]
' → logprob: -1.1379148960113525
    3. '['' → logprob: -7.137915134429932
    4. '["' → logprob: -8.637914657592773
    5. ' []' → logprob: -10.637914657592773
    6. '[' → logprob: -10.637914657592773
    7. ' []
' → logprob: -10.887914657592773
    8. '[
' → logprob: -13.012914657592773
    9. '   ' → logprob: -14.012914657592773
    10. '       ' → logprob: -14.012914657592773

Token 559: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -6.869017852295656e-06
    2. ' for' → logprob: -12.375006675720215
    3. '       ' → logprob: -13.500006675720215
    4. 'for' → logprob: -14.250006675720215
    5. '               ' → logprob: -15.375006675720215
    6. '		' → logprob: -16.25000762939453
    7. '   ' → logprob: -16.75000762939453
    8. '                   ' → logprob: -17.12500762939453
    9. '	       ' → logprob: -17.25000762939453
    10. '
' → logprob: -17.87500762939453

Token 560: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.01823633536696434
    2. '           ' → logprob: -4.01823616027832
    3. ' for' → logprob: -9.39323616027832
    4. '   ' → logprob: -13.01823616027832
    5. '       ' → logprob: -14.01823616027832
    6. '               ' → logprob: -16.89323616027832
    7. ' ' → logprob: -17.64323616027832
    8. '
' → logprob: -17.64323616027832
    9. '	for' → logprob: -18.01823616027832
    10. '                   ' → logprob: -18.76823616027832

Token 561: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.0002613358374219388
    2. ' y' → logprob: -8.250261306762695
    3. '   ' → logprob: -18.125261306762695
    4. 'x' → logprob: -19.250261306762695
    5. '	y' → logprob: -19.250261306762695
    6. ' ' → logprob: -19.500261306762695
    7. '_y' → logprob: -22.000261306762695
    8. '(y' → logprob: -22.000261306762695
    9. 'y's' → logprob: -22.375261306762695
    10. ''y' → logprob: -22.625261306762695

Token 562: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0009138475870713592
    2. 'in' → logprob: -7.000913619995117
    3. ' ' → logprob: -13.250913619995117
    4. 'n' → logprob: -15.625913619995117
    5. '```' → logprob: -16.750913619995117
    6. ')' → logprob: -17.125913619995117
    7. '    ' → logprob: -17.125913619995117
    8. 'range' → logprob: -17.500913619995117
    9. '        ' → logprob: -17.750913619995117
    10. ' ' → logprob: -17.750913619995117

Token 563: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001170225441455841
    2. ' range' → logprob: -6.7511701583862305
    3. '(range' → logprob: -16.751171112060547
    4. '   ' → logprob: -18.876171112060547
    5. ' ' → logprob: -19.376171112060547
    6. '	range' → logprob: -19.626171112060547
    7. '
' → logprob: -20.126171112060547
    8. 'ange' → logprob: -20.751171112060547
    9. '  ' → logprob: -21.626171112060547
    10. '    ' → logprob: -21.876171112060547

Token 564: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.375001907348633
    3. 'self' → logprob: -14.500001907348633
    4. ' (' → logprob: -18.500001907348633
    5. '(
' → logprob: -18.625001907348633
    6. '[self' → logprob: -19.375001907348633
    7. '0' → logprob: -19.500001907348633
    8. 'range' → logprob: -19.625001907348633
    9. '(range' → logprob: -19.625001907348633
    10. '=self' → logprob: -20.250001907348633

Token 565: '.size' (ID: 4463)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12389637529850006
    2. '.range' → logprob: -2.623896360397339
    3. '.size' → logprob: -3.623896360397339
    4. ' range' → logprob: -5.123896598815918
    5. 'size' → logprob: -5.373896598815918
    6. ' in' → logprob: -5.748896598815918
    7. 'in' → logprob: -6.123896598815918
    8. ')' → logprob: -7.623896598815918
    9. '(range' → logprob: -8.248896598815918
    10. '(size' → logprob: -9.123896598815918

Token 566: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.007761250250041485
    2. '):' → logprob: -5.007761478424072
    3. ':' → logprob: -7.882761478424072
    4. ':
' → logprob: -7.882761478424072
    5. '           ' → logprob: -8.882761001586914
    6. '               ' → logprob: -9.757761001586914
    7. '       ' → logprob: -10.007761001586914
    8. ')' → logprob: -11.382761001586914
    9. '   ' → logprob: -11.632761001586914
    10. '():
' → logprob: -11.632761001586914

Token 567: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -3.166338137816638e-05
    2. '           ' → logprob: -11.375031471252441
    3. ':' → logprob: -11.750031471252441
    4. ' for' → logprob: -12.500031471252441
    5. '       ' → logprob: -13.500031471252441
    6. '	           ' → logprob: -13.625031471252441
    7. '[' → logprob: -13.875031471252441
    8. ',' → logprob: -14.000031471252441
    9. '                   ' → logprob: -14.625031471252441
    10. 'for' → logprob: -14.750031471252441

Token 568: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.06659746170043945
    2. 'row' → logprob: -3.0665974617004395
    3. ' line' → logprob: -4.0665974617004395
    4. ' row' → logprob: -8.066596984863281
    5. '               ' → logprob: -8.566596984863281
    6. '                   ' → logprob: -8.816596984863281
    7. 'layer' → logprob: -9.816596984863281
    8. '   ' → logprob: -12.566596984863281
    9. ' layer' → logprob: -14.066596984863281
    10. '_line' → logprob: -14.441596984863281

Token 569: '_chars' (ID: 94246)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3868803381919861
    2. '=' → logprob: -1.1368803977966309
    3. '_chars' → logprob: -12.761879920959473
    4. '=[]' → logprob: -13.261879920959473
    5. '=''' → logprob: -13.636879920959473
    6. ' ' → logprob: -13.886879920959473
    7. '.append' → logprob: -14.011879920959473
    8. '=""' → logprob: -14.261879920959473
    9. '   ' → logprob: -15.386879920959473
    10. '_' → logprob: -15.511879920959473

Token 570: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.577009379863739
    2. '=' → logprob: -0.827009379863739
    3. '.append' → logprob: -7.452009201049805
    4. '=[]' → logprob: -7.702009201049805
    5. '=[]
' → logprob: -11.077009201049805
    6. '[]' → logprob: -11.952009201049805
    7. ':' → logprob: -12.577009201049805
    8. '   ' → logprob: -13.327009201049805
    9. '=['' → logprob: -13.452009201049805
    10. '[:]' → logprob: -13.577009201049805

Token 571: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.014313110150396824
    2. '[]
' → logprob: -4.764313220977783
    3. '['' → logprob: -5.264313220977783
    4. '[' → logprob: -7.764313220977783
    5. ' []' → logprob: -9.889312744140625
    6. '''' → logprob: -11.389312744140625
    7. '[
' → logprob: -11.889312744140625
    8. '["' → logprob: -12.389312744140625
    9. '[]

' → logprob: -12.639312744140625
    10. '''.' → logprob: -12.889312744140625

Token 572: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.04765225946903229
    2. '                   ' → logprob: -3.172652244567871
    3. ' for' → logprob: -5.797652244567871
    4. 'for' → logprob: -6.547652244567871
    5. '                       ' → logprob: -9.297652244567871
    6. '                ' → logprob: -10.172652244567871
    7. '           ' → logprob: -10.797652244567871
    8. '       ' → logprob: -12.922652244567871
    9. '                           ' → logprob: -12.922652244567871
    10. '   ' → logprob: -13.297652244567871

Token 573: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00031186718842945993
    2. ' for' → logprob: -8.250311851501465
    3. '                   ' → logprob: -10.500311851501465
    4. '               ' → logprob: -10.750311851501465
    5. '   ' → logprob: -13.625311851501465
    6. '           ' → logprob: -15.375311851501465
    7. '	for' → logprob: -16.25031280517578
    8. '       ' → logprob: -18.00031280517578
    9. '                       ' → logprob: -18.37531280517578
    10. ' ' → logprob: -19.25031280517578

Token 574: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.7610454708337784e-05
    2. ' x' → logprob: -10.500027656555176
    3. '	x' → logprob: -19.00002670288086
    4. '   ' → logprob: -19.25002670288086
    5. '```' → logprob: -19.75002670288086
    6. '
' → logprob: -20.12502670288086
    7. 'z' → logprob: -20.12502670288086
    8. '                   ' → logprob: -20.12502670288086
    9. 'self' → logprob: -20.62502670288086
    10. '_x' → logprob: -20.87502670288086

Token 575: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.043001942336559296
    2. 'in' → logprob: -3.168001890182495
    3. 'In' → logprob: -14.418002128601074
    4. '	in' → logprob: -14.543002128601074
    5. ' ' → logprob: -15.043002128601074
    6. 'import' → logprob: -15.168002128601074
    7. ',' → logprob: -16.043001174926758
    8. '_in' → logprob: -16.043001174926758
    9. '               ' → logprob: -16.418001174926758
    10. '```' → logprob: -16.543001174926758

Token 576: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018244411796331406
    2. ' range' → logprob: -4.01824426651001
    3. '(range' → logprob: -9.268244743347168
    4. '(' → logprob: -16.64324378967285
    5. 'self' → logprob: -17.89324378967285
    6. ' ' → logprob: -18.64324378967285
    7. '	range' → logprob: -18.64324378967285
    8. ' (' → logprob: -18.76824378967285
    9. ' in' → logprob: -19.14324378967285
    10. 'Range' → logprob: -19.14324378967285

Token 577: '(self' (ID: 2402)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.19789032638072968
    2. ' range' → logprob: -2.197890281677246
    3. 'in' → logprob: -3.947890281677246
    4. '(range' → logprob: -3.947890281677246
    5. '(' → logprob: -4.447890281677246
    6. '(self' → logprob: -4.572890281677246
    7. ' in' → logprob: -5.072890281677246
    8. ' (' → logprob: -6.697890281677246
    9. 'self' → logprob: -8.072890281677246
    10. ')' → logprob: -9.822890281677246

Token 578: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.0005597044946625829
    2. ' .' → logprob: -8.00055980682373
    3. '.' → logprob: -9.37555980682373
    4. 'size' → logprob: -9.50055980682373
    5. '.space' → logprob: -11.00055980682373
    6. '       ' → logprob: -12.00055980682373
    7. ')' → logprob: -12.00055980682373
    8. '.x' → logprob: -12.00055980682373
    9. '<size' → logprob: -12.62555980682373
    10. '   ' → logprob: -12.62555980682373

Token 579: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.04107973724603653
    2. '):' → logprob: -3.7910797595977783
    3. '                   ' → logprob: -5.166079521179199
    4. ')' → logprob: -5.291079521179199
    5. ':
' → logprob: -6.041079521179199
    6. ':' → logprob: -6.666079521179199
    7. '               ' → logprob: -6.791079521179199
    8. '                           ' → logprob: -7.041079521179199
    9. '           ' → logprob: -8.1660795211792
    10. '                       ' → logprob: -8.2910795211792

Token 580: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0009545749635435641
    2. ' if' → logprob: -8.125954627990723
    3. '                       ' → logprob: -8.625954627990723
    4. '                           ' → logprob: -8.750954627990723
    5. ':' → logprob: -9.375954627990723
    6. '               ' → logprob: -10.000954627990723
    7. ' in' → logprob: -10.500954627990723
    8. 'if' → logprob: -10.625954627990723
    9. ',' → logprob: -10.875954627990723
    10. '#' → logprob: -10.875954627990723

Token 581: ' line' (ID: 2543)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.6867601871490479
    2. 'if' → logprob: -1.5617601871490479
    3. 'line' (adapté à ' line') → logprob: -1.5617601871490479
    4. ' line' → logprob: -3.186760187149048
    5. ' if' → logprob: -4.436759948730469
    6. 'coord' → logprob: -4.811759948730469
    7. ''' → logprob: -5.311759948730469
    8. '                       ' → logprob: -5.561759948730469
    9. 'c' → logprob: -6.561759948730469
    10. ' coord' → logprob: -6.811759948730469

Token 582: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.31718432903289795
    2. '.append' → logprob: -1.317184329032898
    3. '_char' → logprob: -6.5671844482421875
    4. '                   ' → logprob: -6.8171844482421875
    5. '=' → logprob: -7.6921844482421875
    6. '.' → logprob: -8.317184448242188
    7. 'chars' → logprob: -8.567184448242188
    8. '_' → logprob: -9.067184448242188
    9. 'char' → logprob: -9.192184448242188
    10. '               ' → logprob: -9.567184448242188

Token 583: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0007119550718925893
    2. '.' → logprob: -7.250711917877197
    3. 'append' → logprob: -13.250712394714355
    4. ' .' → logprob: -16.25071144104004
    5. '.Append' → logprob: -16.25071144104004
    6. '.extend' → logprob: -17.00071144104004
    7. '+=' → logprob: -17.37571144104004
    8. '.push' → logprob: -17.75071144104004
    9. '.app' → logprob: -18.12571144104004
    10. ' append' → logprob: -18.50071144104004

Token 584: '('' (ID: 706)
  Prédit: '('#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('#' → logprob: -0.11530598998069763
    2. ''#' → logprob: -2.2403059005737305
    3. '("#' → logprob: -6.7403059005737305
    4. '"#' → logprob: -7.2403059005737305
    5. '('.' → logprob: -7.9903059005737305
    6. ''.' → logprob: -8.86530590057373
    7. ' '#'' → logprob: -10.11530590057373
    8. '('' → logprob: -10.74030590057373
    9. '(' → logprob: -11.11530590057373
    10. ''' → logprob: -11.36530590057373

Token 585: '1' (ID: 16)
  Prédit: ''#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''#' → logprob: -0.0020473632030189037
    2. ''.' → logprob: -6.627047538757324
    3. '"#' → logprob: -7.877047538757324
    4. ''' → logprob: -8.752047538757324
    5. '('#' → logprob: -9.752047538757324
    6. '#' → logprob: -9.877047538757324
    7. ' '#'' → logprob: -10.127047538757324
    8. ''*' → logprob: -10.502047538757324
    9. ''O' → logprob: -13.252047538757324
    10. '#
' → logprob: -13.877047538757324

Token 586: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -5.200166469876422e-06
    2. ' '' → logprob: -12.625004768371582
    3. 'if' → logprob: -14.000004768371582
    4. '1' → logprob: -14.750004768371582
    5. '"' → logprob: -14.875004768371582
    6. '')' → logprob: -16.3750057220459
    7. '0' → logprob: -16.5000057220459
    8. ''''' → logprob: -16.6250057220459
    9. '#' → logprob: -17.1250057220459
    10. ' if' → logprob: -17.2500057220459

Token 587: ' if' (ID: 538)
  Prédit: ' if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.12704233825206757
    2. 'if' → logprob: -2.127042293548584
    3. ''' → logprob: -9.127042770385742
    4. ')' → logprob: -12.502042770385742
    5. ' '' → logprob: -14.002042770385742
    6. ' ' → logprob: -15.252042770385742
    7. '1' → logprob: -16.002042770385742
    8. '   ' → logprob: -16.002042770385742
    9. '"' → logprob: -16.127042770385742
    10. '	if' → logprob: -16.877042770385742

Token 588: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -0.0006940854946151376
    2. ' Coordinate' → logprob: -7.500694274902344
    3. 'self' → logprob: -8.875694274902344
    4. 'Coord' → logprob: -14.375694274902344
    5. ' self' → logprob: -14.500694274902344
    6. 'Grid' → logprob: -16.875694274902344
    7. '   ' → logprob: -17.000694274902344
    8. 'Coordinates' → logprob: -17.125694274902344
    9. 'Coordinator' → logprob: -17.125694274902344
    10. '(Co' → logprob: -18.875694274902344

Token 589: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.15310683415737e-05
    2. '(x' → logprob: -10.750021934509277
    3. '```' → logprob: -18.50002098083496
    4. '(' → logprob: -18.75002098083496
    5. ' ' → logprob: -19.75002098083496
    6. ' (' → logprob: -20.62502098083496
    7. '<x' → logprob: -20.62502098083496
    8. '[x' → logprob: -20.87502098083496
    9. '۳' → logprob: -20.87502098083496
    10. 'x' → logprob: -21.12502098083496

Token 590: 'D' (ID: 35)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.011674375273287296
    2. '(x' → logprob: -4.511674404144287
    3. 'D' → logprob: -7.511674404144287
    4. '(' → logprob: -9.636673927307129
    5. '   ' → logprob: -12.386673927307129
    6. ' (' → logprob: -12.761673927307129
    7. ' ' → logprob: -13.511673927307129
    8. '       ' → logprob: -13.886673927307129
    9. '           ' → logprob: -14.136673927307129
    10. '('' → logprob: -14.511673927307129

Token 591: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -4.060365608893335e-05
    2. '(' → logprob: -10.250041007995605
    3. '<|end|>' → logprob: -12.375041007995605
    4. '(
' → logprob: -14.875041007995605
    5. 'x' → logprob: -15.125041007995605
    6. ' (' → logprob: -15.250041007995605
    7. '```' → logprob: -18.12504005432129
    8. '[x' → logprob: -18.25004005432129
    9. ')x' → logprob: -18.87504005432129

Token 592: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0028525441884994507
    2. ',y' → logprob: -5.877852439880371
    3. ' ,' → logprob: -10.127852439880371
    4. '<|end|>' → logprob: -12.627852439880371
    5. ',
' → logprob: -13.127852439880371
    6. ',x' → logprob: -13.752852439880371
    7. ')' → logprob: -14.252852439880371
    8. 'y' → logprob: -15.627852439880371
    9. ',user' → logprob: -16.877853393554688
    10. '‌,' → logprob: -17.127853393554688

Token 593: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -4.024604277219623e-05
    2. ' y' → logprob: -10.125040054321289
    3. '<|end|>' → logprob: -16.25004005432129
    4. ',y' → logprob: -18.37504005432129
    5. '
' → logprob: -18.62504005432129
    6. '	y' → logprob: -19.37504005432129
    7. '   ' → logprob: -19.62504005432129
    8. '(y' → logprob: -19.62504005432129
    9. ',' → logprob: -19.87504005432129
    10. '                       ' → logprob: -20.00004005432129

Token 594: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0013329789508134127
    2. ',z' → logprob: -6.626332759857178
    3. ' ,' → logprob: -12.751333236694336
    4. 'z' → logprob: -13.626333236694336
    5. ',
' → logprob: -14.001333236694336
    6. 'in' → logprob: -14.251333236694336
    7. ')' → logprob: -14.501333236694336
    8. ',x' → logprob: -15.501333236694336
    9. '```' → logprob: -15.876333236694336
    10. '   ' → logprob: -16.376333236694336

Token 595: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -2.339278580620885e-06
    2. ' z' → logprob: -13.000001907348633
    3. '0' → logprob: -18.000001907348633
    4. '	z' → logprob: -19.250001907348633
    5. '
' → logprob: -19.375001907348633
    6. ',z' → logprob: -19.875001907348633
    7. '   ' → logprob: -20.000001907348633
    8. ')' → logprob: -20.125001907348633
    9. '```' → logprob: -20.250001907348633
    10. '[z' → logprob: -20.375001907348633

Token 596: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.8351892473874614e-05
    2. 'in' → logprob: -10.125048637390137
    3. ')
' → logprob: -12.625048637390137
    4. ' )' → logprob: -13.125048637390137
    5. ' in' → logprob: -13.500048637390137
    6. '   ' → logprob: -15.125048637390137
    7. '）' → logprob: -15.750048637390137
    8. '')' → logprob: -16.00004768371582
    9. '`)' → logprob: -16.00004768371582
    10. ').' → logprob: -16.12504768371582

Token 597: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.1602332592010498
    2. ' in' → logprob: -1.9102332592010498
    3. ')' → logprob: -12.785233497619629
    4. '   ' → logprob: -12.910233497619629
    5. '	in' → logprob: -13.660233497619629
    6. ' ' → logprob: -14.160233497619629
    7. 'is' → logprob: -14.660233497619629
    8. '    ' → logprob: -15.160233497619629
    9. '
' → logprob: -15.535233497619629
    10. '  ' → logprob: -15.785233497619629

Token 598: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.5332478142227046e-05
    2. ' self' → logprob: -11.125015258789062
    3. '           ' → logprob: -15.625015258789062
    4. '       ' → logprob: -16.000015258789062
    5. '
' → logprob: -16.500015258789062
    6. '               ' → logprob: -18.000015258789062
    7. '   ' → logprob: -18.125015258789062
    8. '(self' → logprob: -18.500015258789062
    9. '                   ' → logprob: -19.250015258789062
    10. '[self' → logprob: -19.875015258789062

Token 599: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -1.4974866644479334e-05
    2. 'self' → logprob: -11.875015258789062
    3. 'occupied' → logprob: -12.125015258789062
    4. ' .' → logprob: -13.375015258789062
    5. '       ' → logprob: -14.500015258789062
    6. '.self' → logprob: -15.750015258789062
    7. '           ' → logprob: -16.000015258789062
    8. '   ' → logprob: -16.250015258789062
    9. 'Occupied' → logprob: -17.125015258789062
    10. ').' → logprob: -17.625015258789062

Token 600: 'occupied' (ID: 98229)
  Prédit: 'occupied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -1.9385402993066236e-05
    2. 'self' → logprob: -10.875019073486328
    3. '
' → logprob: -15.625019073486328
    4. '.' → logprob: -16.125019073486328
    5. ' occupied' → logprob: -16.750019073486328
    6. 'owned' → logprob: -18.250019073486328
    7. '```' → logprob: -18.375019073486328
    8. 'occup' → logprob: -18.625019073486328
    9. '   ' → logprob: -19.500019073486328
    10. ')' → logprob: -20.000019073486328

Token 601: ' else' (ID: 1203)
  Prédit: ' else'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' else' → logprob: -0.20141372084617615
    2. 'else' → logprob: -1.7014137506484985
    3. '	else' → logprob: -14.951414108276367
    4. ')' → logprob: -15.826414108276367
    5. '           ' → logprob: -19.451414108276367
    6. '        ' → logprob: -19.451414108276367
    7. '               ' → logprob: -19.576414108276367
    8. '            ' → logprob: -20.201414108276367
    9. '```' → logprob: -20.201414108276367
    10. '                ' → logprob: -20.326414108276367

Token 602: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.006551951635628939
    2. ''.' → logprob: -5.506551742553711
    3. ' '' → logprob: -6.006551742553711
    4. ' '.')' → logprob: -13.131551742553711
    5. ' '.'' → logprob: -13.631551742553711
    6. ')' → logprob: -13.756551742553711
    7. '0' → logprob: -13.881551742553711
    8. '"' → logprob: -14.006551742553711
    9. '('' → logprob: -14.381551742553711
    10. '.' → logprob: -15.006551742553711

Token 603: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.101553775370121
    2. ''.' → logprob: -2.3515536785125732
    3. '0' → logprob: -6.726553916931152
    4. ' '' → logprob: -9.226553916931152
    5. '.' → logprob: -10.476553916931152
    6. ' '.'' → logprob: -12.101553916931152
    7. ''o' → logprob: -12.351553916931152
    8. ')' → logprob: -12.351553916931152
    9. '')' → logprob: -13.726553916931152
    10. ' '.')' → logprob: -13.851553916931152

Token 604: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.009049407206475735
    2. '')
' → logprob: -4.759049415588379
    3. ')' → logprob: -7.759049415588379
    4. ')
' → logprob: -13.259049415588379
    5. '')
' → logprob: -13.259049415588379
    6. ''' → logprob: -13.509049415588379
    7. '")' → logprob: -14.134049415588379
    8. ''))' → logprob: -14.134049415588379
    9. '')

' → logprob: -14.884049415588379
    10. '               ' → logprob: -15.009049415588379

Token 605: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.001233922434039414
    2. ')' → logprob: -7.62623405456543
    3. '
' → logprob: -7.87623405456543
    4. '           ' → logprob: -9.62623405456543
    5. '                
' → logprob: -9.62623405456543
    6. '             ' → logprob: -10.25123405456543
    7. '              ' → logprob: -10.37623405456543
    8. '                   ' → logprob: -10.50123405456543
    9. '                ' → logprob: -10.62623405456543
    10. '  
' → logprob: -11.37623405456543

Token 606: ' layer' (ID: 10261)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.35536590218544006
    2. 'layer' (adapté à ' layer') → logprob: -1.3553658723831177
    3. ' layer' → logprob: -3.9803659915924072
    4. 'line' → logprob: -3.9803659915924072
    5. ' line' → logprob: -6.480365753173828
    6. '
' → logprob: -7.105365753173828
    7. 'layers' → logprob: -7.480365753173828
    8. 'return' → logprob: -8.730365753173828
    9. '#line' → logprob: -8.980365753173828
    10. '               ' → logprob: -9.105365753173828

Token 607: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.14329180121421814
    2. '_chars' → logprob: -2.018291711807251
    3. '.append' → logprob: -7.76829195022583
    4. '_line' → logprob: -8.893291473388672
    5. '_layers' → logprob: -10.893291473388672
    6. 's' → logprob: -12.018291473388672
    7. '=' → logprob: -12.143291473388672
    8. '_' → logprob: -12.893291473388672
    9. ' =' → logprob: -13.018291473388672
    10. '_str' → logprob: -13.143291473388672

Token 608: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0009125363430939615
    2. '.' → logprob: -7.000912666320801
    3. 'append' → logprob: -14.1259126663208
    4. ' .' → logprob: -15.6259126663208
    5. '.extend' → logprob: -15.8759126663208
    6. '           ' → logprob: -17.125911712646484
    7. '.app' → logprob: -17.750911712646484
    8. ').' → logprob: -18.000911712646484
    9. '.
' → logprob: -19.500911712646484
    10. '   ' → logprob: -19.500911712646484

Token 609: '("' (ID: 568)
  Prédit: '''.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''.' → logprob: -0.39916369318962097
    2. '('' → logprob: -1.1491637229919434
    3. '"' → logprob: -4.899163722991943
    4. '("' → logprob: -5.649163722991943
    5. ' ''.' → logprob: -6.774163722991943
    6. '''' → logprob: -9.774163246154785
    7. '(' → logprob: -11.024163246154785
    8. '   ' → logprob: -11.149163246154785
    9. ' "".' → logprob: -12.024163246154785
    10. ' ' → logprob: -12.899163246154785

Token 610: '".' (ID: 4050)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.2016245275735855
    2. '''.' → logprob: -1.7016245126724243
    3. '""' → logprob: -8.951624870300293
    4. ' "".' → logprob: -9.701624870300293
    5. '''' → logprob: -11.826624870300293
    6. '".' → logprob: -12.076624870300293
    7. ' ''.' → logprob: -12.201624870300293
    8. ''' → logprob: -13.576624870300293
    9. '"",' → logprob: -15.076624870300293
    10. '   ' → logprob: -15.201624870300293

Token 611: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -5.512236498361744e-07
    2. ' join' → logprob: -14.500000953674316
    3. 'j' → logprob: -17.25
    4. 'jo' → logprob: -18.125
    5. '''.' → logprob: -19.0
    6. ' ' → logprob: -19.125
    7. '```' → logprob: -19.875
    8. '"' → logprob: -20.25
    9. '
' → logprob: -20.375
    10. '.join' → logprob: -20.625

Token 612: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -1.981667537620524e-06
    2. '(layer' → logprob: -13.750001907348633
    3. 'line' → logprob: -14.000001907348633
    4. '[line' → logprob: -17.750001907348633
    5. ' line' → logprob: -17.875001907348633
    6. '(' → logprob: -18.500001907348633
    7. '=line' → logprob: -18.500001907348633
    8. ',line' → logprob: -20.125001907348633
    9. '(
' → logprob: -20.375001907348633
    10. '#line' → logprob: -21.875001907348633

Token 613: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.0002969703928101808
    2. 'chars' → logprob: -8.250296592712402
    3. 's' → logprob: -11.000296592712402
    4. 'Chars' → logprob: -11.125296592712402
    5. 'line' → logprob: -13.125296592712402
    6. '(line' → logprob: -14.000296592712402
    7. '[line' → logprob: -14.875296592712402
    8. ')' → logprob: -15.125296592712402
    9. '_lines' → logprob: -15.250296592712402
    10. '(chars' → logprob: -16.00029754638672

Token 614: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003065030323341489
    2. ')
' → logprob: -8.625306129455566
    3. '           ' → logprob: -9.000306129455566
    4. '               ' → logprob: -13.000306129455566
    5. '))' → logprob: -14.625306129455566
    6. ')`' → logprob: -15.375306129455566
    7. ' )' → logprob: -15.625306129455566
    8. '")' → logprob: -15.875306129455566
    9. ')
' → logprob: -16.250307083129883
    10. '       ' → logprob: -16.375307083129883

Token 615: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.5577775128767826e-06
    2. '       ' → logprob: -13.000005722045898
    3. '          ' → logprob: -13.000005722045898
    4. '<|end|>' → logprob: -15.000005722045898
    5. '               ' → logprob: -15.625005722045898
    6. '         ' → logprob: -16.1250057220459
    7. '```' → logprob: -16.5000057220459
    8. '		' → logprob: -16.5000057220459
    9. '
' → logprob: -16.6250057220459
    10. '   ' → logprob: -17.6250057220459

Token 616: ' layers' (ID: 22119)
  Prédit: 'layers'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'layers' (adapté à ' layers') → logprob: -0.020325342193245888
    2. ' layers' → logprob: -4.270325183868408
    3. '           ' → logprob: -5.645325183868408
    4. '       ' → logprob: -6.020325183868408
    5. '.layers' → logprob: -8.770325660705566
    6. '   ' → logprob: -11.770325660705566
    7. '_layers' → logprob: -11.770325660705566
    8. '
' → logprob: -13.270325660705566
    9. '          ' → logprob: -13.895325660705566
    10. '         ' → logprob: -14.020325660705566

Token 617: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -3.5597102396423e-05
    2. '.' → logprob: -10.250035285949707
    3. 'append' → logprob: -16.500036239624023
    4. '.app' → logprob: -17.875036239624023
    5. '.extend' → logprob: -17.875036239624023
    6. ' .' → logprob: -18.875036239624023
    7. '.ap' → logprob: -19.500036239624023
    8. '.Append' → logprob: -19.625036239624023
    9. '_append' → logprob: -20.375036239624023
    10. '.push' → logprob: -21.375036239624023

Token 618: '("\' (ID: 9730)
  Prédit: '("\'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("\' → logprob: -0.02152732014656067
    2. '"\' → logprob: -4.021527290344238
    3. '('\' → logprob: -5.771527290344238
    4. ''\' → logprob: -9.271527290344238
    5. '(' → logprob: -9.396527290344238
    6. '("' → logprob: -10.146527290344238
    7. '(
' → logprob: -10.771527290344238
    8. '"' → logprob: -12.021527290344238
    9. ' "\' → logprob: -12.146527290344238
    10. 'layer' → logprob: -13.271527290344238

Token 619: 'n' (ID: 77)
  Prédit: '"\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"\' → logprob: -0.01500501949340105
    2. 'n' → logprob: -4.390005111694336
    3. '\n' → logprob: -6.640005111694336
    4. '
' → logprob: -8.140005111694336
    5. ' "\' → logprob: -8.265005111694336
    6. ''\' → logprob: -8.515005111694336
    7. '"' → logprob: -8.890005111694336
    8. 'layer' → logprob: -8.890005111694336
    9. 'join' → logprob: -9.515005111694336
    10. '("\' → logprob: -10.390005111694336

Token 620: '".' (ID: 4050)
  Prédit: '"\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"\' → logprob: -0.12919224798679352
    2. '\n' → logprob: -2.129192352294922
    3. '("\' → logprob: -7.254192352294922
    4. '"' → logprob: -7.504192352294922
    5. '---' → logprob: -8.254192352294922
    6. '".' → logprob: -8.754192352294922
    7. ''\' → logprob: -8.754192352294922
    8. '""' → logprob: -9.254192352294922
    9. '").' → logprob: -9.629192352294922
    10. ' "\' → logprob: -10.004192352294922

Token 621: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.9361264946837764e-07
    2. '".' → logprob: -17.25
    3. ' join' → logprob: -17.25
    4. '"' → logprob: -18.0
    5. '"\' → logprob: -18.0
    6. 'layers' → logprob: -19.0
    7. '.join' → logprob: -19.0
    8. '(join' → logprob: -19.125
    9. 'append' → logprob: -20.0
    10. 'j' → logprob: -20.0

Token 622: '(layer' (ID: 72413)
  Prédit: '(layer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(layer' → logprob: -1.0564331205387134e-05
    2. 'layer' → logprob: -11.50001049041748
    3. '[layer' → logprob: -14.75001049041748
    4. '(' → logprob: -18.875011444091797
    5. '(l' → logprob: -20.000011444091797
    6. '	layer' → logprob: -20.375011444091797
    7. ' (' → logprob: -21.250011444091797
    8. ' layer' → logprob: -21.250011444091797
    9. '(line' → logprob: -21.625011444091797
    10. '(
' → logprob: -21.625011444091797

Token 623: '_lines' (ID: 42980)
  Prédit: '_lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_lines' → logprob: -0.20277249813079834
    2. '_layers' → logprob: -1.7027724981307983
    3. 's' → logprob: -7.452772617340088
    4. '(layer' → logprob: -8.07777214050293
    5. 'layer' → logprob: -8.57777214050293
    6. '[layer' → logprob: -8.70277214050293
    7. '_chars' → logprob: -10.20277214050293
    8. '_layer' → logprob: -10.57777214050293
    9. 'layers' → logprob: -10.70277214050293
    10. 'Lines' → logprob: -11.57777214050293

Token 624: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0009262301027774811
    2. ')
' → logprob: -7.0009260177612305
    3. '))' → logprob: -11.62592601776123
    4. '       ' → logprob: -12.75092601776123
    5. '           ' → logprob: -14.25092601776123
    6. ' )' → logprob: -14.50092601776123
    7. '+' → logprob: -15.12592601776123
    8. '")' → logprob: -15.37592601776123
    9. ' +' → logprob: -15.62592601776123
    10. ')`' → logprob: -15.62592601776123

Token 625: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.016212668269872665
    2. 'return' → logprob: -4.141212463378906
    3. ' return' → logprob: -9.141212463378906
    4. '           ' → logprob: -10.266212463378906
    5. '
' → logprob: -10.516212463378906
    6. '   ' → logprob: -12.391212463378906
    7. '\n' → logprob: -13.641212463378906
    8. '        
' → logprob: -13.891212463378906
    9. '	' → logprob: -14.391212463378906
    10. '	return' → logprob: -14.391212463378906

Token 626: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.25514835119247437
    2. '       ' → logprob: -1.5051484107971191
    3. ' return' → logprob: -5.755148410797119
    4. '
' → logprob: -10.130147933959961
    5. '   ' → logprob: -12.505147933959961
    6. '	return' → logprob: -12.755147933959961
    7. '	' → logprob: -15.005147933959961
    8. '        
' → logprob: -15.255147933959961
    9. 'eturn' → logprob: -15.505147933959961
    10. '           ' → logprob: -16.00514793395996

Token 627: ' "\' (ID: 6512)
  Prédit: '"\'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"\' → logprob: -0.0032189455814659595
    2. ' "\' → logprob: -5.753219127655029
    3. ''\' → logprob: -10.253218650817871
    4. '"' → logprob: -12.753218650817871
    5. '   ' → logprob: -13.128218650817871
    6. ' ' → logprob: -14.253218650817871
    7. '\n' → logprob: -15.253218650817871
    8. ' '\' → logprob: -16.753219604492188
    9. '("\' → logprob: -17.378219604492188
    10. '""' → logprob: -17.503219604492188

Token 628: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.006747462786734104
    2. '\n' → logprob: -5.006747245788574
    3. '"\' → logprob: -10.881747245788574
    4. '
' → logprob: -11.756747245788574
    5. ''\' → logprob: -13.131747245788574
    6. '\
' → logprob: -13.506747245788574
    7. '\\' → logprob: -13.756747245788574
    8. '`\' → logprob: -15.131747245788574
    9. '"' → logprob: -15.256747245788574
    10. '\' → logprob: -15.506747245788574

Token 629: '\n' (ID: 3392)
  Prédit: '\n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.0013423740165308118
    2. '"\' → logprob: -6.626342296600342
    3. '
' → logprob: -11.8763427734375
    4. '".' → logprob: -12.3763427734375
    5. '("\' → logprob: -13.8763427734375
    6. '"' → logprob: -13.8763427734375
    7. ''\' → logprob: -14.2513427734375
    8. '""' → logprob: -14.5013427734375
    9. '\r' → logprob: -14.8763427734375
    10. '

' → logprob: -14.8763427734375

Token 630: '".' (ID: 4050)
  Prédit: '\n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '\n' → logprob: -0.20198869705200195
    2. '"\' → logprob: -1.701988697052002
    3. '""' → logprob: -8.326988220214844
    4. '"' → logprob: -9.201988220214844
    5. '\u' → logprob: -9.701988220214844
    6. '\r' → logprob: -9.826988220214844
    7. '```' → logprob: -10.326988220214844
    8. '("\' → logprob: -10.826988220214844
    9. '".' → logprob: -10.951988220214844
    10. ''\' → logprob: -11.076988220214844

Token 631: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -7.896309739408025e-07
    2. ' join' → logprob: -14.375000953674316
    3. '(join' → logprob: -16.625
    4. '.join' → logprob: -16.75
    5. 'sep' → logprob: -17.25
    6. '"\' → logprob: -17.25
    7. '"' → logprob: -18.0
    8. '```' → logprob: -18.0
    9. '".' → logprob: -18.25
    10. '\n' → logprob: -18.625

Token 632: '(l' (ID: 4179)
  Prédit: '(l'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(l' → logprob: -0.005259014666080475
    2. 'layers' → logprob: -5.255259037017822
    3. 'l' → logprob: -10.630258560180664
    4. '(layer' → logprob: -14.755258560180664
    5. 'layer' → logprob: -15.505258560180664
    6. '(' → logprob: -15.880258560180664
    7. '[l' → logprob: -15.880258560180664
    8. ' layers' → logprob: -16.505258560180664
    9. '(str' → logprob: -16.630258560180664
    10. '([' → logprob: -17.255258560180664

Token 633: 'ayers' (ID: 8116)
  Prédit: 'ayers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ayers' → logprob: -0.00031282080453820527
    2. '[' → logprob: -8.125312805175781
    3. '(' → logprob: -12.250312805175781
    4. 'layers' → logprob: -12.750312805175781
    5. '([' → logprob: -13.875312805175781
    6. 'ays' → logprob: -13.875312805175781
    7. 'ay' → logprob: -13.875312805175781
    8. '(l' → logprob: -14.125312805175781
    9. 'ayer' → logprob: -14.125312805175781
    10. '[l' → logprob: -14.750312805175781

Token 634: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -1.6286106983898208e-05
    2. '()' → logprob: -12.250016212463379
    3. ')
' → logprob: -12.625016212463379
    4. ' )' → logprob: -12.625016212463379
    5. '<|end|>' → logprob: -12.875016212463379
    6. '())' → logprob: -14.125016212463379
    7. '+' → logprob: -14.625016212463379
    8. ')+' → logprob: -15.125016212463379
    9. ')return' → logprob: -15.375016212463379
    10. '}' → logprob: -15.875016212463379

Token 635: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.060000743716955185
    2. 'def' → logprob: -2.9350006580352783
    3. 'class' → logprob: -5.310000896453857
    4. '
' → logprob: -9.4350004196167
    5. ' def' → logprob: -10.0600004196167
    6. ' ' → logprob: -10.5600004196167
    7. '

' → logprob: -12.4350004196167
    8. '```' → logprob: -12.9350004196167
    9. ' class' → logprob: -13.1850004196167
    10. '    
' → logprob: -13.4350004196167

Token 636: ' Birth' (ID: 57332)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.15571896731853485
    2. 'Grid' → logprob: -2.905719041824341
    3. ' Game' → logprob: -3.405719041824341
    4. 'Autom' → logprob: -3.655719041824341
    5. 'Simulation' → logprob: -4.405718803405762
    6. 'Con' → logprob: -4.905718803405762
    7. 'Simulator' → logprob: -5.780718803405762
    8. 'Life' → logprob: -5.905718803405762
    9. 'Cell' → logprob: -7.030718803405762
    10. ' Grid' → logprob: -7.030718803405762

Token 637: 'Death' (ID: 43848)
  Prédit: 'Rule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rule' → logprob: -0.029252098873257637
    2. 'Rules' → logprob: -3.779252052307129
    3. 'rule' → logprob: -6.279252052307129
    4. 'Condition' → logprob: -6.779252052307129
    5. 'Death' → logprob: -7.029252052307129
    6. 'State' → logprob: -7.904252052307129
    7. ':' → logprob: -8.529252052307129
    8. 'Threshold' → logprob: -8.654252052307129
    9. 'rules' → logprob: -8.654252052307129
    10. '_rule' → logprob: -8.779252052307129

Token 638: 'Rules' (ID: 28744)
  Prédit: 'Rule'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rule' → logprob: -0.20487451553344727
    2. 'Rules' → logprob: -1.7048745155334473
    3. ':' → logprob: -6.329874515533447
    4. 'Game' → logprob: -7.329874515533447
    5. ':
' → logprob: -8.829874038696289
    6. 'Cycle' → logprob: -9.079874038696289
    7. 'Model' → logprob: -9.079874038696289
    8. 'Process' → logprob: -9.079874038696289
    9. 'Autom' → logprob: -9.079874038696289
    10. 'State' → logprob: -9.954874038696289

Token 639: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004625222180038691
    2. ':
' → logprob: -5.37962532043457
    3. ':

' → logprob: -13.50462532043457
    4. '(' → logprob: -13.62962532043457
    5. ':
' → logprob: -14.37962532043457
    6. ':def' → logprob: -14.87962532043457
    7. '(object' → logprob: -15.00462532043457
    8. ' :' → logprob: -15.12962532043457
    9. '():' → logprob: -15.37962532043457
    10. '(B' → logprob: -15.50462532043457

Token 640: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.00026765360962599516
    2. ' def' → logprob: -8.37526798248291
    3. 'def' → logprob: -10.25026798248291
    4. '```' → logprob: -14.00026798248291
    5. '	def' → logprob: -14.75026798248291
    6. ':' → logprob: -15.75026798248291
    7. ':
' → logprob: -16.875267028808594
    8. '
' → logprob: -17.125267028808594
    9. '    
' → logprob: -17.250267028808594
    10. '):
' → logprob: -17.625267028808594

Token 641: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.12510375678539276
    2. ' def' → logprob: -2.375103712081909
    3. '   ' → logprob: -3.750103712081909
    4. '__' → logprob: -6.875103950500488
    5. ' __' → logprob: -11.250103950500488
    6. '"""' → logprob: -12.375103950500488
    7. '	def' → logprob: -12.375103950500488
    8. ' ' → logprob: -12.625103950500488
    9. 'from' → logprob: -12.750103950500488
    10. '```' → logprob: -13.500103950500488

Token 642: ' __' (ID: 2516)
  Prédit: 'init'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.10195678472518921
    2. '__' → logprob: -2.976956844329834
    3. ' __' → logprob: -3.851956844329834
    4. '_init' → logprob: -3.851956844329834
    5. ' init' → logprob: -6.226956844329834
    6. '```' → logprob: -6.851956844329834
    7. 'int' → logprob: -8.726956367492676
    8. ' def' → logprob: -9.976956367492676
    9. 'Init' → logprob: -10.226956367492676
    10. '.__' → logprob: -10.476956367492676

Token 643: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -0.010445518419146538
    2. 'call' → logprob: -5.260445594787598
    3. 'slots' → logprob: -5.260445594787598
    4. 'slot' → logprob: -12.885445594787598
    5. '_init' → logprob: -14.135445594787598
    6. 'code' → logprob: -14.635445594787598
    7. 'class' → logprob: -14.635445594787598
    8. '_slots' → logprob: -15.010445594787598
    9. 'sl' → logprob: -15.885445594787598
    10. ' init' → logprob: -16.13544464111328

Token 644: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.004308703355491161
    2. '(self' → logprob: -5.629308700561523
    3. '__' → logprob: -7.504308700561523
    4. '(' → logprob: -9.254308700561523
    5. '__(
' → logprob: -10.004308700561523
    6. 'self' → logprob: -11.629308700561523
    7. '_(' → logprob: -12.629308700561523
    8. ' (' → logprob: -12.879308700561523
    9. '__((' → logprob: -14.379308700561523
    10. '<>(' → logprob: -15.004308700561523

Token 645: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -1.8312570318812504e-05
    2. '       ' → logprob: -11.250018119812012
    3. ' self' → logprob: -12.625018119812012
    4. ',' → logprob: -13.625018119812012
    5. '   ' → logprob: -15.250018119812012
    6. '
' → logprob: -16.000019073486328
    7. '           ' → logprob: -16.375019073486328
    8. '(self' → logprob: -16.875019073486328
    9. ',self' → logprob: -17.500019073486328
    10. '0' → logprob: -17.875019073486328

Token 646: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023708349093794823
    2. '(self' → logprob: -4.023708343505859
    3. 'self' → logprob: -5.523708343505859
    4. '__(' → logprob: -6.898708343505859
    5. ' (' → logprob: -8.39870834350586
    6. '       ' → logprob: -9.14870834350586
    7. ',self' → logprob: -9.27370834350586
    8. '   ' → logprob: -9.89870834350586
    9. ' ,' → logprob: -10.39870834350586
    10. ' self' → logprob: -11.14870834350586

Token 647: ' birth' (ID: 9596)
  Prédit: 'birth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'birth' → logprob: -0.09001541882753372
    2. 'self' → logprob: -3.215015411376953
    3. 'born' → logprob: -3.340015411376953
    4. ' birth' → logprob: -4.965015411376953
    5. 'alive' → logprob: -6.090015411376953
    6. 'b' → logprob: -7.840015411376953
    7. '   ' → logprob: -8.590015411376953
    8. 'live' → logprob: -8.590015411376953
    9. ' self' → logprob: -8.715015411376953
    10. ' born' → logprob: -9.340015411376953

Token 648: '_counts' (ID: 61971)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.004138953052461147
    2. '=' → logprob: -6.504138946533203
    3. ',' → logprob: -6.629138946533203
    4. '=set' → logprob: -7.504138946533203
    5. ':Set' → logprob: -7.754138946533203
    6. ':set' → logprob: -9.379138946533203
    7. '{' → logprob: -9.629138946533203
    8. '={' → logprob: -10.504138946533203
    9. '_counts' → logprob: -10.754138946533203
    10. ')' → logprob: -11.004138946533203

Token 649: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0002422779070911929
    2. ',' → logprob: -9.125242233276367
    3. ':Set' → logprob: -9.125242233276367
    4. ':set' → logprob: -11.500242233276367
    5. '=' → logprob: -11.750242233276367
    6. '=set' → logprob: -12.750242233276367
    7. ' :' → logprob: -13.000242233276367
    8. '{' → logprob: -15.250242233276367
    9. 'set' → logprob: -15.625242233276367
    10. ',set' → logprob: -16.125242233276367

Token 650: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.0003907543432433158
    2. 'List' → logprob: -8.000391006469727
    3. ' Set' → logprob: -9.875391006469727
    4. 'set' → logprob: -12.750391006469727
    5. '	Set' → logprob: -14.875391006469727
    6. '(Set' → logprob: -16.125391006469727
    7. 'fro' → logprob: -16.125391006469727
    8. 'Tuple' → logprob: -16.625391006469727
    9. 'Iterable' → logprob: -16.750391006469727
    10. '   ' → logprob: -17.000391006469727

Token 651: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0001657565007917583
    2. 'int' → logprob: -8.750165939331055
    3. '<int' → logprob: -13.375165939331055
    4. '(int' → logprob: -13.750165939331055
    5. ',int' → logprob: -13.750165939331055
    6. ',' → logprob: -14.250165939331055
    7. ')' → logprob: -14.375165939331055
    8. ']int' → logprob: -14.375165939331055
    9. '=int' → logprob: -14.500165939331055
    10. '   ' → logprob: -14.500165939331055

Token 652: '],' (ID: 2155)
  Prédit: '],'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '],' → logprob: -0.017197059467434883
    2. ',' → logprob: -4.267197132110596
    3. '),' → logprob: -6.767197132110596
    4. '},' → logprob: -7.267197132110596
    5. ']):' → logprob: -7.392197132110596
    6. '>,' → logprob: -8.392196655273438
    7. ']' → logprob: -9.017196655273438
    8. ']):
' → logprob: -9.392196655273438
    9. ']=' → logprob: -9.767196655273438
    10. '])' → logprob: -10.642196655273438

Token 653: ' survival' (ID: 31304)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.08273196965456009
    2. ' survival' → logprob: -2.5827319622039795
    3. ' survive' → logprob: -6.082732200622559
    4. 'death' → logprob: -7.207732200622559
    5. 'stay' → logprob: -7.332732200622559
    6. '   ' → logprob: -9.457732200622559
    7. 'alive' → logprob: -11.207732200622559
    8. 'keep' → logprob: -11.207732200622559
    9. ' ' → logprob: -11.332732200622559
    10. ' death' → logprob: -11.457732200622559

Token 654: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -1.3306015716807451e-05
    2. '_set' → logprob: -12.25001335144043
    3. '_sets' → logprob: -12.62501335144043
    4. ' _' → logprob: -13.87501335144043
    5. 's' → logprob: -14.00001335144043
    6. '_' → logprob: -14.50001335144043
    7. 'counts' → logprob: -15.00001335144043
    8. '_rates' → logprob: -15.00001335144043
    9. '_ranges' → logprob: -15.12501335144043
    10. '_probs' → logprob: -15.25001335144043

Token 655: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -1.6405310816480778e-05
    2. ':Set' → logprob: -11.875016212463379
    3. '):' → logprob: -12.625016212463379
    4. ')' → logprob: -12.750016212463379
    5. ' :' → logprob: -14.125016212463379
    6. '=' → logprob: -14.375016212463379
    7. '):
' → logprob: -14.625016212463379
    8. '   ' → logprob: -14.750016212463379
    9. '```' → logprob: -15.500016212463379
    10. '[' → logprob: -15.875016212463379

Token 656: ' Set' (ID: 3957)
  Prédit: 'Set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Set' → logprob: -0.011049113236367702
    2. ' Set' → logprob: -4.511049270629883
    3. '	Set' → logprob: -14.636049270629883
    4. '(Set' → logprob: -14.761049270629883
    5. '_Set' → logprob: -15.011049270629883
    6. '_set' → logprob: -16.886049270629883
    7. '   ' → logprob: -18.136049270629883
    8. 'set' → logprob: -18.261049270629883
    9. ')' → logprob: -18.511049270629883
    10. ':Set' → logprob: -18.511049270629883

Token 657: '[int' (ID: 40124)
  Prédit: '[int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -1.9361264946837764e-07
    2. '<int' → logprob: -16.25
    3. 'int' → logprob: -17.5
    4. '[Int' → logprob: -18.375
    5. '(int' → logprob: -18.75
    6. '[' → logprob: -19.25
    7. '=int' → logprob: -19.75
    8. '[
' → logprob: -20.0
    9. ')' → logprob: -20.25
    10. ']int' → logprob: -20.75

Token 658: ']):
' (ID: 51989)
  Prédit: ']):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']):
' → logprob: -0.7915109395980835
    2. '):
' → logprob: -1.0415109395980835
    3. '):' → logprob: -2.541511058807373
    4. ']):' → logprob: -2.791511058807373
    5. ')' → logprob: -3.791511058807373
    6. '}' → logprob: -4.291511058807373
    7. '']):
' → logprob: -4.916511058807373
    8. '>):' → logprob: -5.166511058807373
    9. '])' → logprob: -6.916511058807373
    10. '>' → logprob: -7.166511058807373

Token 659: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00021879478299524635
    2. 'self' → logprob: -8.750218391418457
    3. ' self' → logprob: -10.750218391418457
    4. ':' → logprob: -11.375218391418457
    5. '
' → logprob: -11.750218391418457
    6. ',' → logprob: -11.875218391418457
    7. '   ' → logprob: -12.250218391418457
    8. '```' → logprob: -12.375218391418457
    9. '):
' → logprob: -14.250218391418457
    10. ')' → logprob: -14.250218391418457

Token 660: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.08118149638175964
    2. '       ' → logprob: -2.581181526184082
    3. ' self' → logprob: -6.081181526184082
    4. '	self' → logprob: -12.706181526184082
    5. '(self' → logprob: -15.081181526184082
    6. '   ' → logprob: -15.456181526184082
    7. '	' → logprob: -17.331180572509766
    8. '
' → logprob: -17.581180572509766
    9. ' ' → logprob: -17.706180572509766
    10. '      ' → logprob: -17.956180572509766

Token 661: '.birth' (ID: 177193)
  Prédit: '.birth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.birth' → logprob: -0.00021891399228479713
    2. '.b' → logprob: -8.750219345092773
    3. '.' → logprob: -9.750219345092773
    4. 'birth' → logprob: -13.500219345092773
    5. ' .' → logprob: -14.500219345092773
    6. '_birth' → logprob: -16.875219345092773
    7. '.bio' → logprob: -16.875219345092773
    8. '.B' → logprob: -17.125219345092773
    9. ' birth' → logprob: -17.250219345092773
    10. '._' → logprob: -18.375219345092773

Token 662: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -0.004373274743556976
    2. '=' → logprob: -5.629373073577881
    3. ' =' → logprob: -7.254373073577881
    4. '_' → logprob: -10.379373550415039
    5. '_s' → logprob: -11.754373550415039
    6. 's' → logprob: -11.754373550415039
    7. '=_' → logprob: -11.879373550415039
    8. '_sets' → logprob: -13.004373550415039
    9. '_set' → logprob: -13.754373550415039
    10. '_states' → logprob: -14.004373550415039

Token 663: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3132619559764862
    2. ' =' → logprob: -1.3132619857788086
    3. ' ' → logprob: -16.938261032104492
    4. '=self' → logprob: -17.188261032104492
    5. '   ' → logprob: -17.438261032104492
    6. '=b' → logprob: -17.688261032104492
    7. '=
' → logprob: -17.813261032104492
    8. ',' → logprob: -17.938261032104492
    9. ' =
' → logprob: -18.188261032104492
    10. ':' → logprob: -18.688261032104492

Token 664: ' birth' (ID: 9596)
  Prédit: 'birth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'birth' → logprob: -0.0181527491658926
    2. ' birth' → logprob: -4.018152713775635
    3. 'born' → logprob: -14.268153190612793
    4. '   ' → logprob: -14.643153190612793
    5. 'bir' → logprob: -14.643153190612793
    6. 'b' → logprob: -15.018153190612793
    7. '{' → logprob: -15.018153190612793
    8. '_birth' → logprob: -16.268152236938477
    9. ' ' → logprob: -16.393152236938477
    10. 'Birth' → logprob: -16.518152236938477

Token 665: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -1.2233183042553719e-05
    2. '_de' → logprob: -12.625012397766113
    3. '_birth' → logprob: -12.875012397766113
    4. 'counts' → logprob: -13.000012397766113
    5. '_' → logprob: -14.000012397766113
    6. 's' → logprob: -14.250012397766113
    7. '._' → logprob: -14.875012397766113
    8. ' _' → logprob: -15.125012397766113
    9. '_sets' → logprob: -15.250012397766113
    10. '{' → logprob: -15.375012397766113

Token 666: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.9040898880339228e-05
    2. 'self' → logprob: -11.375028610229492
    3. '<|end|>' → logprob: -11.375028610229492
    4. ',' → logprob: -13.125028610229492
    5. '   ' → logprob: -13.250028610229492
    6. '
' → logprob: -13.375028610229492
    7. ' ' → logprob: -15.625028610229492
    8. '      ' → logprob: -15.875028610229492
    9. ' self' → logprob: -15.875028610229492
    10. '           ' → logprob: -16.875028610229492

Token 667: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.73314929776825e-05
    2. 'self' → logprob: -9.50008773803711
    3. '   ' → logprob: -12.25008773803711
    4. '
' → logprob: -12.25008773803711
    5. '<|end|>' → logprob: -14.00008773803711
    6. ',' → logprob: -14.12508773803711
    7. ' self' → logprob: -14.75008773803711
    8. '      ' → logprob: -15.12508773803711
    9. '        
' → logprob: -15.75008773803711
    10. 'def' → logprob: -16.00008773803711

Token 668: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.023860501125454903
    2. '       ' → logprob: -3.773860454559326
    3. ' self' → logprob: -7.398860454559326
    4. '   ' → logprob: -13.148860931396484
    5. '
' → logprob: -14.773860931396484
    6. '	self' → logprob: -15.273860931396484
    7. ' ' → logprob: -16.898860931396484
    8. '      ' → logprob: -16.898860931396484
    9. '(self' → logprob: -17.023860931396484
    10. '     ' → logprob: -17.523860931396484

Token 669: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -0.001191775663755834
    2. 'sur' → logprob: -7.12619161605835
    3. '.' → logprob: -7.87619161605835
    4. ' .' → logprob: -12.251192092895508
    5. '_sur' → logprob: -13.876192092895508
    6. 's' → logprob: -14.126192092895508
    7. ' survival' → logprob: -14.251192092895508
    8. '=' → logprob: -15.001192092895508
    9. '   ' → logprob: -16.501192092895508
    10. 'Sur' → logprob: -17.376192092895508

Token 670: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -6.885492621222511e-05
    2. 'sur' → logprob: -9.625068664550781
    3. ' survival' → logprob: -13.750068664550781
    4. '_sur' → logprob: -13.875068664550781
    5. 'vival' → logprob: -15.500068664550781
    6. 'u' → logprob: -16.12506866455078
    7. ' ur' → logprob: -16.62506866455078
    8. 'urr' → logprob: -17.00006866455078
    9. 'uv' → logprob: -17.00006866455078
    10. 'uccess' → logprob: -17.50006866455078

Token 671: 'vival' (ID: 69006)
  Prédit: 'vival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vival' → logprob: -0.1327773481607437
    2. 'ival' → logprob: -2.382777452468872
    3. 'vive' → logprob: -3.632777452468872
    4. 'ive' → logprob: -5.382777214050293
    5. 'val' → logprob: -7.382777214050293
    6. 'v' → logprob: -8.757777214050293
    7. 'iv' → logprob: -8.882777214050293
    8. 'vice' → logprob: -11.007777214050293
    9. 'ives' → logprob: -11.507777214050293
    10. 'viv' → logprob: -11.757777214050293

Token 672: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -9.376848902320489e-05
    2. 'counts' → logprob: -9.375093460083008
    3. 's' → logprob: -12.625093460083008
    4. '=' → logprob: -13.125093460083008
    5. '_' → logprob: -14.375093460083008
    6. '_sets' → logprob: -14.625093460083008
    7. ' =' → logprob: -14.750093460083008
    8. ' counts' → logprob: -15.125093460083008
    9. '_sur' → logprob: -15.375093460083008
    10. ' _' → logprob: -15.750093460083008

Token 673: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06197183206677437
    2. ' =' → logprob: -2.81197190284729
    3. '=set' → logprob: -12.686971664428711
    4. ' ' → logprob: -15.061971664428711
    5. '   ' → logprob: -15.061971664428711
    6. ')' → logprob: -16.06197166442871
    7. '=self' → logprob: -16.31197166442871
    8. 's' → logprob: -16.56197166442871
    9. ':' → logprob: -16.81197166442871
    10. '       ' → logprob: -17.68697166442871

Token 674: ' survival' (ID: 31304)
  Prédit: 'sur'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sur' → logprob: -0.011048054322600365
    2. ' survival' → logprob: -4.511047840118408
    3. '_sur' → logprob: -16.51104736328125
    4. 's' → logprob: -16.63604736328125
    5. 'su' → logprob: -17.26104736328125
    6. 'Sur' → logprob: -17.38604736328125
    7. ' ' → logprob: -17.38604736328125
    8. '   ' → logprob: -17.63604736328125
    9. ' ' → logprob: -18.26104736328125
    10. ' surv' → logprob: -18.63604736328125

Token 675: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -2.546478935983032e-05
    2. 'counts' → logprob: -10.625025749206543
    3. 'Counts' → logprob: -14.750025749206543
    4. ' counts' → logprob: -14.875025749206543
    5. '_' → logprob: -16.875024795532227
    6. 's' → logprob: -16.875024795532227
    7. '_sets' → logprob: -17.000024795532227
    8. '_count' → logprob: -17.125024795532227
    9. 'ount' → logprob: -17.500024795532227
    10. 'cts' → logprob: -17.625024795532227

Token 676: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0009306333377026021
    2. '
' → logprob: -7.0009307861328125
    3. 'def' → logprob: -11.625930786132812
    4. '    
' → logprob: -11.750930786132812
    5. ' def' → logprob: -13.375930786132812
    6. '```' → logprob: -15.250930786132812
    7. '        
' → logprob: -15.750930786132812
    8. ',' → logprob: -16.000930786132812
    9. '<|end|>' → logprob: -16.250930786132812
    10. '       ' → logprob: -17.375930786132812

Token 677: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002261854097014293
    2. 'def' → logprob: -8.500226020812988
    3. ' def' → logprob: -11.000226020812988
    4. '
' → logprob: -12.250226020812988
    5. '```' → logprob: -14.625226020812988
    6. '    
' → logprob: -15.000226020812988
    7. ' ' → logprob: -16.125226974487305
    8. '  ' → logprob: -16.750226974487305
    9. ',' → logprob: -16.750226974487305
    10. '       ' → logprob: -17.250226974487305

Token 678: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.02092032879590988
    2. ' def' → logprob: -4.020920276641846
    3. '   ' → logprob: -5.895920276641846
    4. '
' → logprob: -11.145920753479004
    5. '	def' → logprob: -14.270920753479004
    6. '    
' → logprob: -14.895920753479004
    7. ' ' → logprob: -15.270920753479004
    8. '```' → logprob: -16.270919799804688
    9. '@' → logprob: -17.020919799804688
    10. 'Def' → logprob: -17.770919799804688

Token 679: ' will' (ID: 738)
  Prédit: 'should'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'should' → logprob: -0.986283004283905
    2. 'apply' → logprob: -1.3612830638885498
    3. ' applies' → logprob: -1.7362830638885498
    4. 'ap' → logprob: -2.23628306388855
    5. ' should' → logprob: -3.61128306388855
    6. 'is' → logprob: -4.236282825469971
    7. 'allows' → logprob: -4.236282825469971
    8. ' apply' → logprob: -4.361282825469971
    9. '__' → logprob: -5.236282825469971
    10. 'allow' → logprob: -5.611282825469971

Token 680: '_be' (ID: 40729)
  Prédit: '_live'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_live' → logprob: -0.15657667815685272
    2. '_be' → logprob: -2.781576633453369
    3. '_sur' → logprob: -2.906576633453369
    4. '_birth' → logprob: -4.781576633453369
    5. 'live' → logprob: -5.031576633453369
    6. '_change' → logprob: -5.281576633453369
    7. '_apply' → logprob: -6.281576633453369
    8. '_alive' → logprob: -6.406576633453369
    9. '_keep' → logprob: -6.531576633453369
    10. 'be' → logprob: -7.281576633453369

Token 681: '_b' (ID: 1535)
  Prédit: '_alive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_alive' → logprob: -0.0027985796332359314
    2. '_b' → logprob: -6.502798557281494
    3. 'alive' → logprob: -6.752798557281494
    4. 'come' → logprob: -9.377799034118652
    5. 'born' → logprob: -10.877799034118652
    6. '_live' → logprob: -11.127799034118652
    7. '_' → logprob: -13.127799034118652
    8. '_al' → logprob: -13.502799034118652
    9. '```' → logprob: -13.877799034118652
    10. '_dead' → logprob: -14.127799034118652

Token 682: 'orn' (ID: 2558)
  Prédit: 'orn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orn' → logprob: -0.008021091111004353
    2. 'e' → logprob: -6.008020877838135
    3. 'alive' → logprob: -6.008020877838135
    4. 'born' → logprob: -7.133020877838135
    5. 'irth' → logprob: -7.258020877838135
    6. '_alive' → logprob: -7.758020877838135
    7. '_' → logprob: -8.383021354675293
    8. 'or' → logprob: -8.758021354675293
    9. 'orne' → logprob: -9.008021354675293
    10. '```' → logprob: -9.258021354675293

Token 683: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -7.93448489275761e-05
    2. '(' → logprob: -9.750079154968262
    3. 'self' → logprob: -10.875079154968262
    4. ' (' → logprob: -13.250079154968262
    5. ' self' → logprob: -15.625079154968262
    6. '(
' → logprob: -17.000080108642578
    7. '(s' → logprob: -17.750080108642578
    8. 's' → logprob: -18.125080108642578
    9. '	self' → logprob: -18.125080108642578
    10. '(sel' → logprob: -18.125080108642578

Token 684: ',' (ID: 11)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -2.47495681833243e-05
    2. 'self' → logprob: -10.750024795532227
    3. '(' → logprob: -12.875024795532227
    4. ' (' → logprob: -14.500024795532227
    5. ')' → logprob: -17.375024795532227
    6. ' self' → logprob: -17.750024795532227
    7. '   ' → logprob: -17.750024795532227
    8. '(
' → logprob: -17.875024795532227
    9. ')(' → logprob: -18.000024795532227
    10. '       ' → logprob: -18.250024795532227

Token 685: ' neighbor' (ID: 13034)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.026337461546063423
    2. 'neighbor' → logprob: -4.776337623596191
    3. ' self' → logprob: -4.901337623596191
    4. 'alive' → logprob: -5.151337623596191
    5. 'neighbors' → logprob: -5.901337623596191
    6. 'count' → logprob: -7.026337623596191
    7. ' neighbor' → logprob: -8.526337623596191
    8. '   ' → logprob: -8.901337623596191
    9. ' alive' → logprob: -9.026337623596191
    10. ' neighbors' → logprob: -10.026337623596191

Token 686: '_count' (ID: 7536)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.3238273561000824
    2. '_count' → logprob: -1.3238273859024048
    3. '_counts' → logprob: -4.948827266693115
    4. 'count' → logprob: -5.698827266693115
    5. ' count' → logprob: -11.073827743530273
    6. '_neighbors' → logprob: -11.698827743530273
    7. '_alive' → logprob: -11.823827743530273
    8. ')' → logprob: -12.073827743530273
    9. '```' → logprob: -12.073827743530273
    10. ' s' → logprob: -12.323827743530273

Token 687: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0016101972432807088
    2. ')' → logprob: -6.626610279083252
    3. '):' → logprob: -8.251609802246094
    4. ':int' → logprob: -12.126609802246094
    5. ' :' → logprob: -12.251609802246094
    6. '   ' → logprob: -12.376609802246094
    7. 'self' → logprob: -12.501609802246094
    8. '(self' → logprob: -13.251609802246094
    9. ' )' → logprob: -13.626609802246094
    10. '):
' → logprob: -14.001609802246094

Token 688: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.012223182246088982
    2. ' int' → logprob: -4.512223243713379
    3. ')' → logprob: -6.762223243713379
    4. ':int' → logprob: -11.387223243713379
    5. '[int' → logprob: -13.012223243713379
    6. '   ' → logprob: -13.637223243713379
    7. ' )' → logprob: -14.012223243713379
    8. '(int' → logprob: -14.012223243713379
    9. ' ' → logprob: -14.387223243713379
    10. '=int' → logprob: -15.012223243713379

Token 689: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0001329791557509452
    2. ':' → logprob: -9.50013256072998
    3. '):' → logprob: -9.87513256072998
    4. ' )' → logprob: -12.12513256072998
    5. '   ' → logprob: -14.75013256072998
    6. ')->' → logprob: -14.75013256072998
    7. '):
' → logprob: -15.37513256072998
    8. '`)' → logprob: -17.875133514404297
    9. ':)' → logprob: -18.750133514404297
    10. ' ' → logprob: -18.750133514404297

Token 690: ' ->' (ID: 2747)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.050362031906843185
    2. '->' → logprob: -3.8003621101379395
    3. ' ->' → logprob: -4.1753621101379395
    4. '       ' → logprob: -5.3003621101379395
    5. '   ' → logprob: -5.6753621101379395
    6. ':return' → logprob: -6.1753621101379395
    7. ')' → logprob: -7.8003621101379395
    8. ')->' → logprob: -9.175361633300781
    9. ':
' → logprob: -9.675361633300781
    10. ',' → logprob: -10.175361633300781

Token 691: ' bool' (ID: 3792)
  Prédit: 'bool'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'bool' → logprob: -2.7729658540920354e-05
    2. ' bool' → logprob: -10.500027656555176
    3. 'return' → logprob: -16.625028610229492
    4. '<bool' → logprob: -17.500028610229492
    5. '   ' → logprob: -18.500028610229492
    6. '	bool' → logprob: -19.000028610229492
    7. '(bool' → logprob: -19.625028610229492
    8. 'Bool' → logprob: -20.625028610229492
    9. 'b' → logprob: -20.750028610229492
    10. 'True' → logprob: -20.875028610229492

Token 692: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.007615032605826855
    2. '       ' → logprob: -5.257615089416504
    3. ':
' → logprob: -7.007615089416504
    4. '<|end|>' → logprob: -7.257615089416504
    5. '):' → logprob: -8.382615089416504
    6. '   ' → logprob: -8.507615089416504
    7. ':return' → logprob: -8.757615089416504
    8. ')' → logprob: -10.132615089416504
    9. ',' → logprob: -10.257615089416504
    10. '(' → logprob: -10.882615089416504

Token 693: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.008698835968971252
    2. '   ' → logprob: -5.7586989402771
    3. '    ' → logprob: -6.5086989402771
    4. '<|end|>' → logprob: -6.6336989402771
    5. ' return' → logprob: -7.2586989402771
    6. ' ' → logprob: -7.7586989402771
    7. '(' → logprob: -7.8836989402771
    8. ':' → logprob: -8.883698463439941
    9. ':return' → logprob: -9.133698463439941
    10. '=' → logprob: -9.133698463439941

Token 694: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.46491163969039917
    2. '       ' → logprob: -1.214911699295044
    3. ' return' → logprob: -2.589911699295044
    4. '{return' → logprob: -10.714911460876465
    5. ':return' → logprob: -11.839911460876465
    6. '   ' → logprob: -12.589911460876465
    7. '{' → logprob: -12.964911460876465
    8. '	return' → logprob: -12.964911460876465
    9. 'eturn' → logprob: -13.339911460876465
    10. ' ' → logprob: -13.714911460876465

Token 695: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.38687339425086975
    2. ' neighbor' → logprob: -1.1368733644485474
    3. 'ne' → logprob: -13.511873245239258
    4. ' neighbour' → logprob: -14.011873245239258
    5. '   ' → logprob: -16.511873245239258
    6. 'neighbors' → logprob: -17.636873245239258
    7. ' ' → logprob: -17.761873245239258
    8. '(ne' → logprob: -17.761873245239258
    9. '_neighbor' → logprob: -18.386873245239258
    10. ' ' → logprob: -18.511873245239258

Token 696: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -2.9160102712921798e-05
    2. 'count' → logprob: -10.500029563903809
    3. '_counts' → logprob: -14.500029563903809
    4. '_' → logprob: -14.875029563903809
    5. '_counter' → logprob: -15.625029563903809
    6. '_c' → logprob: -15.625029563903809
    7. 'Count' → logprob: -16.375028610229492
    8. ' _' → logprob: -16.375028610229492
    9. 's' → logprob: -16.875028610229492
    10. ' count' → logprob: -17.000028610229492

Token 697: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.1602267622947693
    2. 'in' → logprob: -1.910226821899414
    3. ' ' → logprob: -13.785226821899414
    4. ' ' → logprob: -14.160226821899414
    5. '	in' → logprob: -14.660226821899414
    6. ')' → logprob: -16.285226821899414
    7. ' i' → logprob: -16.660226821899414
    8. 'int' → logprob: -16.785226821899414
    9. 'In' → logprob: -17.160226821899414
    10. '   ' → logprob: -17.285226821899414

Token 698: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.001503313542343676
    2. ' self' → logprob: -6.5015034675598145
    3. '(self' → logprob: -13.876502990722656
    4. '[self' → logprob: -17.001502990722656
    5. '=self' → logprob: -18.376502990722656
    6. '	self' → logprob: -18.376502990722656
    7. '```' → logprob: -19.001502990722656
    8. '`' → logprob: -19.126502990722656
    9. '{' → logprob: -19.876502990722656
    10. '       ' → logprob: -20.001502990722656

Token 699: '.birth' (ID: 177193)
  Prédit: '.birth'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.birth' → logprob: -2.3080716346157715e-05
    2. 'birth' → logprob: -10.875022888183594
    3. '.b' → logprob: -12.500022888183594
    4. ' .' → logprob: -15.500022888183594
    5. '_birth' → logprob: -16.625022888183594
    6. '.' → logprob: -17.500022888183594
    7. '   ' → logprob: -17.625022888183594
    8. ' birth' → logprob: -17.750022888183594
    9. '.bio' → logprob: -17.875022888183594
    10. 'Birth' → logprob: -17.875022888183594

Token 700: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -5.512236498361744e-07
    2. '_birth' → logprob: -15.500000953674316
    3. 'counts' → logprob: -16.0
    4. '\' → logprob: -17.25
    5. '_' → logprob: -17.5
    6. ' _' → logprob: -17.875
    7. 'self' → logprob: -18.375
    8. '_count' → logprob: -18.5
    9. '__' → logprob: -18.75
    10. 's' → logprob: -19.0

Token 701: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -2.856408536899835e-05
    2. '
' → logprob: -10.750028610229492
    3. 'def' → logprob: -12.125028610229492
    4. ' def' → logprob: -14.000028610229492
    5. '    
' → logprob: -14.875028610229492
    6. '```' → logprob: -16.125028610229492
    7. '  ' → logprob: -17.125028610229492
    8. '       ' → logprob: -17.125028610229492
    9. '   ' → logprob: -17.500028610229492
    10. '<|end|>' → logprob: -17.875028610229492

Token 702: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -1.1637164789135568e-05
    2. '    
' → logprob: -12.375011444091797
    3. 'def' → logprob: -13.125011444091797
    4. '
' → logprob: -13.375011444091797
    5. ' ' → logprob: -13.500011444091797
    6. ' def' → logprob: -14.375011444091797
    7. '  ' → logprob: -14.500011444091797
    8. '<|end|>' → logprob: -15.375011444091797
    9. ' 
' → logprob: -15.750011444091797
    10. '```' → logprob: -15.750011444091797

Token 703: ' def' (ID: 1056)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0013905927771702409
    2. 'def' (adapté à ' def') → logprob: -7.12639045715332
    3. ' def' → logprob: -7.50139045715332
    4. '
' → logprob: -10.62639045715332
    5. '    
' → logprob: -12.87639045715332
    6. '  ' → logprob: -13.00139045715332
    7. '```' → logprob: -13.12639045715332
    8. ' ' → logprob: -13.50139045715332
    9. '    ' → logprob: -14.37639045715332
    10. '	def' → logprob: -15.87639045715332

Token 704: ' will' (ID: 738)
  Prédit: 'will'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'will' → logprob: -0.005215024575591087
    2. ' will' → logprob: -6.005215167999268
    3. 'def' → logprob: -6.630215167999268
    4. 'sur' → logprob: -6.755215167999268
    5. 'should' → logprob: -8.63021469116211
    6. 'is' → logprob: -10.88021469116211
    7. ' survives' → logprob: -10.88021469116211
    8. ' survive' → logprob: -12.13021469116211
    9. 'w' → logprob: -12.13021469116211
    10. ' ' → logprob: -12.25521469116211

Token 705: '_sur' (ID: 160451)
  Prédit: '_sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sur' → logprob: -0.0032927326392382383
    2. 'sur' → logprob: -5.753292560577393
    3. '_continue' → logprob: -10.12829303741455
    4. '_be' → logprob: -10.12829303741455
    5. '_die' → logprob: -11.25329303741455
    6. '_live' → logprob: -11.87829303741455
    7. ' survive' → logprob: -12.37829303741455
    8. 'be' → logprob: -12.37829303741455
    9. '_st' → logprob: -13.50329303741455
    10. '_keep' → logprob: -13.62829303741455

Token 706: 'vive' (ID: 131935)
  Prédit: 'vive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vive' → logprob: -1.8193366486229934e-05
    2. 'v' → logprob: -11.875018119812012
    3. 'vival' → logprob: -12.750018119812012
    4. 'vice' → logprob: -12.750018119812012
    5. '#' → logprob: -13.250018119812012
    6. 'ive' → logprob: -13.500018119812012
    7. ' vive' → logprob: -14.500018119812012
    8. '__' → logprob: -14.875018119812012
    9. 'rive' → logprob: -14.875018119812012
    10. 'viv' → logprob: -15.000018119812012

Token 707: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -9.088346359931165e-07
    2. 'self' → logprob: -14.750000953674316
    3. '(' → logprob: -14.875000953674316
    4. ' (' → logprob: -16.125
    5. '(s' → logprob: -19.5
    6. '(se' → logprob: -20.25
    7. ' self' → logprob: -20.5
    8. '[self' → logprob: -21.125
    9. '(
' → logprob: -21.125
    10. '=self' → logprob: -21.375

Token 708: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.007726464420557022
    2. ')' → logprob: -5.632726669311523
    3. '(self' → logprob: -6.757726669311523
    4. 'neighbor' → logprob: -6.757726669311523
    5. 'self' → logprob: -7.257726669311523
    6. '(ne' → logprob: -7.632726669311523
    7. '(' → logprob: -8.007726669311523
    8. ' (' → logprob: -9.257726669311523
    9. ' neighbor' → logprob: -10.132726669311523
    10. ' ,' → logprob: -10.257726669311523

Token 709: ' neighbor' (ID: 13034)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.007156484294682741
    2. 'neighbor' → logprob: -5.0071563720703125
    3. ' self' → logprob: -7.7571563720703125
    4. ' neighbor' → logprob: -11.382156372070312
    5. '(self' → logprob: -13.382156372070312
    6. ' ' → logprob: -16.757156372070312
    7. '   ' → logprob: -16.882156372070312
    8. '       ' → logprob: -16.882156372070312
    9. '	self' → logprob: -16.882156372070312
    10. 'ne' → logprob: -17.257156372070312

Token 710: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.0017218305729329586
    2. '_counts' → logprob: -6.3767218589782715
    3. 'count' → logprob: -11.251721382141113
    4. 's' → logprob: -12.376721382141113
    5. '_' → logprob: -13.876721382141113
    6. ' _' → logprob: -14.626721382141113
    7. '_c' → logprob: -14.751721382141113
    8. 'ount' → logprob: -15.251721382141113
    9. '```' → logprob: -16.75172233581543
    10. '   ' → logprob: -17.12672233581543

Token 711: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.03087717480957508
    2. ')' → logprob: -3.530877113342285
    3. ' in' → logprob: -7.905877113342285
    4. ' :' → logprob: -8.280877113342285
    5. '   ' → logprob: -8.530877113342285
    6. '):' → logprob: -8.780877113342285
    7. ' ' → logprob: -10.280877113342285
    8. 'in' → logprob: -10.405877113342285
    9. ',' → logprob: -10.655877113342285
    10. ' )' → logprob: -11.405877113342285

Token 712: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.000919200771022588
    2. ' int' → logprob: -7.000919342041016
    3. ')' → logprob: -12.250919342041016
    4. '(int' → logprob: -13.125919342041016
    5. ':int' → logprob: -14.875919342041016
    6. '[int' → logprob: -15.375919342041016
    7. '   ' → logprob: -15.750919342041016
    8. 'bool' → logprob: -16.625919342041016
    9. '=int' → logprob: -17.625919342041016
    10. ' ' → logprob: -17.750919342041016

Token 713: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -1.759734732331708e-05
    2. ':' → logprob: -11.250017166137695
    3. ' )' → logprob: -12.750017166137695
    4. '):' → logprob: -13.625017166137695
    5. '   ' → logprob: -14.750017166137695
    6. '):
' → logprob: -16.750017166137695
    7. ' ' → logprob: -17.875017166137695
    8. ')
' → logprob: -18.250017166137695
    9. '),' → logprob: -18.625017166137695
    10. ')==' → logprob: -19.250017166137695

Token 714: ' ->' (ID: 2747)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7560943365097046
    2. ' in' → logprob: -1.2560943365097046
    3. ' return' → logprob: -1.8810943365097046
    4. ':' → logprob: -4.131094455718994
    5. '==' → logprob: -4.131094455718994
    6. ' ' → logprob: -4.506094455718994
    7. '=' → logprob: -4.631094455718994
    8. 'return' → logprob: -4.756094455718994
    9. ' ->' → logprob: -5.006094455718994
    10. '->' → logprob: -5.131094455718994

Token 715: ' bool' (ID: 3792)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1970398724079132
    2. 'bool' → logprob: -2.197039842605591
    3. ' self' → logprob: -2.822039842605591
    4. ' bool' → logprob: -4.82204008102417
    5. 'int' → logprob: -9.322039604187012
    6. 'return' → logprob: -10.072039604187012
    7. '(self' → logprob: -10.947039604187012
    8. ' return' → logprob: -11.947039604187012
    9. ' int' → logprob: -12.572039604187012
    10. 'neighbor' → logprob: -12.572039604187012

Token 716: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.5084640383720398
    2. '       ' → logprob: -1.2584640979766846
    3. '->' → logprob: -3.0084640979766846
    4. ')' → logprob: -4.2584638595581055
    5. 'return' → logprob: -4.5084638595581055
    6. ':return' → logprob: -4.5084638595581055
    7. '   ' → logprob: -4.8834638595581055
    8. ' return' → logprob: -5.1334638595581055
    9. ' ->' → logprob: -5.1334638595581055
    10. '=' → logprob: -5.5084638595581055

Token 717: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002090184949338436
    2. 'return' → logprob: -6.252089977264404
    3. ' return' → logprob: -8.752090454101562
    4. '   ' → logprob: -13.877090454101562
    5. '{return' → logprob: -14.627090454101562
    6. '```' → logprob: -15.127090454101562
    7. ':' → logprob: -15.252090454101562
    8. '	return' → logprob: -15.377090454101562
    9. '	' → logprob: -15.502090454101562
    10. ':return' → logprob: -15.627090454101562

Token 718: ' return' (ID: 622)
  Prédit: 'return'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'return' (adapté à ' return') → logprob: -0.026611793786287308
    2. '       ' → logprob: -4.026611804962158
    3. ' return' → logprob: -4.776611804962158
    4. '
' → logprob: -14.276611328125
    5. '	return' → logprob: -14.901611328125
    6. '{return' → logprob: -15.026611328125
    7. ':return' → logprob: -16.401611328125
    8. '```' → logprob: -16.651611328125
    9. 'eturn' → logprob: -17.276611328125
    10. '   ' → logprob: -17.651611328125

Token 719: ' neighbor' (ID: 13034)
  Prédit: 'neighbor'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbor' → logprob: -0.25193658471107483
    2. ' neighbor' → logprob: -1.5019365549087524
    3. 'self' → logprob: -12.501936912536621
    4. '   ' → logprob: -13.751936912536621
    5. 'ne' → logprob: -14.001936912536621
    6. ' neighbour' → logprob: -14.626936912536621
    7. '       ' → logprob: -14.751936912536621
    8. ' ' → logprob: -15.751936912536621
    9. '(ne' → logprob: -15.876936912536621
    10. ' self' → logprob: -16.001935958862305

Token 720: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -0.00029947367147542536
    2. 'count' → logprob: -8.125299453735352
    3. 'Count' → logprob: -14.000299453735352
    4. '_counts' → logprob: -14.250299453735352
    5. 'neighbor' → logprob: -14.750299453735352
    6. 'in' → logprob: -14.875299453735352
    7. ' count' → logprob: -15.375299453735352
    8. 'ount' → logprob: -15.625299453735352
    9. '_' → logprob: -15.875299453735352
    10. 'n' → logprob: -16.50029945373535

Token 721: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.2014138251543045
    2. 'in' → logprob: -1.701413869857788
    3. ' ' → logprob: -14.951414108276367
    4. '   ' → logprob: -15.826414108276367
    5. ' ' → logprob: -17.201414108276367
    6. '	in' → logprob: -17.201414108276367
    7. 'return' → logprob: -17.951414108276367
    8. '    ' → logprob: -18.076414108276367
    9. 'int' → logprob: -18.326414108276367
    10. '
' → logprob: -18.451414108276367

Token 722: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.03804275393486023
    2. ' self' → logprob: -3.2880427837371826
    3. '       ' → logprob: -14.288043022155762
    4. '(self' → logprob: -14.663043022155762
    5. '	self' → logprob: -16.288042068481445
    6. '   ' → logprob: -16.413042068481445
    7. ' ' → logprob: -17.288042068481445
    8. ' ' → logprob: -17.538042068481445
    9. 'the' → logprob: -17.788042068481445
    10. '           ' → logprob: -17.913042068481445

Token 723: '.s' (ID: 640)
  Prédit: '.s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.s' → logprob: -1.1517960956552997e-05
    2. 'sur' → logprob: -12.000011444091797
    3. '.' → logprob: -13.000011444091797
    4. ' .' → logprob: -13.125011444091797
    5. '_sur' → logprob: -14.000011444091797
    6. '   ' → logprob: -16.750011444091797
    7. 'Sur' → logprob: -17.250011444091797
    8. '.S' → logprob: -17.500011444091797
    9. '```' → logprob: -17.875011444091797
    10. ' survival' → logprob: -17.875011444091797

Token 724: 'ur' (ID: 330)
  Prédit: 'ur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ur' → logprob: -0.0048164804466068745
    2. 'sur' → logprob: -5.37981653213501
    3. '.s' → logprob: -8.629816055297852
    4. '_sur' → logprob: -11.504816055297852
    5. 'self' → logprob: -13.004816055297852
    6. ' survival' → logprob: -13.379816055297852
    7. 'elf' → logprob: -13.629816055297852
    8. 'u' → logprob: -14.504816055297852
    9. 's' → logprob: -14.754816055297852
    10. 'def' → logprob: -14.879816055297852

Token 725: 'vival' (ID: 69006)
  Prédit: 'vival'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vival' → logprob: -6.968934758333489e-05
    2. 'ival' → logprob: -10.125069618225098
    3. 'v' → logprob: -11.125069618225098
    4. 'val' → logprob: -11.250069618225098
    5. 'vive' → logprob: -14.750069618225098
    6. 'viv' → logprob: -14.875069618225098
    7. 'vation' → logprob: -15.250069618225098
    8. '```' → logprob: -15.875069618225098
    9. '#' → logprob: -16.125070571899414
    10. '_v' → logprob: -16.500070571899414

Token 726: '_counts' (ID: 61971)
  Prédit: '_counts'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_counts' → logprob: -1.1637164789135568e-05
    2. 'counts' → logprob: -11.625011444091797
    3. 'self' → logprob: -13.125011444091797
    4. '_sur' → logprob: -15.000011444091797
    5. 's' → logprob: -16.500011444091797
    6. 'Counts' → logprob: -17.500011444091797
    7. '_' → logprob: -17.750011444091797
    8. '__' → logprob: -18.125011444091797
    9. '_count' → logprob: -18.250011444091797
    10. '\' → logprob: -18.375011444091797

Token 727: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.37984248995780945
    2. '
' → logprob: -1.6298425197601318
    3. 'class' → logprob: -2.129842519760132
    4. 'def' → logprob: -7.004842281341553
    5. '    
' → logprob: -8.504842758178711
    6. '

' → logprob: -9.879842758178711
    7. '```' → logprob: -10.379842758178711
    8. ' class' → logprob: -12.004842758178711
    9. '  
' → logprob: -12.379842758178711
    10. '        
' → logprob: -12.379842758178711

Token 728: 'class' (ID: 1444)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.01104935072362423
    2. 'class' → logprob: -4.511049270629883
    3. '   ' → logprob: -13.636049270629883
    4. ' def' → logprob: -15.136049270629883
    5. '
' → logprob: -15.886049270629883
    6. '```' → logprob: -17.886049270629883
    7. 'd' → logprob: -18.886049270629883
    8. ' class' → logprob: -18.886049270629883
    9. '	def' → logprob: -19.886049270629883
    10. '    
' → logprob: -19.886049270629883

Token 729: ' Simulation' (ID: 76406)
  Prédit: 'Game'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'Game' → logprob: -0.06393785774707794
    2. 'Simulation' → logprob: -3.4389379024505615
    3. 'Autom' → logprob: -4.563937664031982
    4. 'Grid' → logprob: -4.813937664031982
    5. 'Simulator' → logprob: -4.813937664031982
    6. 'Life' → logprob: -6.188937664031982
    7. 'Cell' → logprob: -7.938937664031982
    8. 'Con' → logprob: -8.31393814086914
    9. ' Game' → logprob: -8.93893814086914
    10. 'Universe' → logprob: -8.93893814086914

Token 730: '3' (ID: 18)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.033707600086927414
    2. ':
' → logprob: -3.408707618713379
    3. '(' → logprob: -10.408707618713379
    4. '3' → logprob: -11.908707618713379
    5. '(object' → logprob: -11.908707618713379
    6. ':

' → logprob: -12.283707618713379
    7. ' :' → logprob: -13.533707618713379
    8. '```' → logprob: -13.533707618713379
    9. ':def' → logprob: -13.783707618713379
    10. '(S' → logprob: -13.908707618713379

Token 731: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -1.8550976164988242e-05
    2. 'd' → logprob: -11.625018119812012
    3. 'DS' → logprob: -12.250018119812012
    4. ':
' → logprob: -12.500018119812012
    5. ':' → logprob: -14.250018119812012
    6. '```' → logprob: -16.500019073486328
    7. '():
' → logprob: -16.625019073486328
    8. '
' → logprob: -16.625019073486328
    9. ' D' → logprob: -16.875019073486328
    10. '(' → logprob: -17.125019073486328

Token 732: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.01417373027652502
    2. ':
' → logprob: -4.26417350769043
    3. ':def' → logprob: -11.88917350769043
    4. ':

' → logprob: -13.38917350769043
    5. '(object' → logprob: -14.63917350769043
    6. '(' → logprob: -14.63917350769043
    7. ' :' → logprob: -15.01417350769043
    8. '():' → logprob: -16.13917350769043
    9. ':
' → logprob: -16.26417350769043
    10. 'def' → logprob: -16.88917350769043

Token 733: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0001375089050270617
    2. ' def' → logprob: -9.000137329101562
    3. 'def' → logprob: -11.250137329101562
    4. ':' → logprob: -13.875137329101562
    5. '   ' → logprob: -16.625137329101562
    6. '```' → logprob: -17.125137329101562
    7. '	def' → logprob: -17.250137329101562
    8. '    
' → logprob: -17.875137329101562
    9. '
' → logprob: -18.250137329101562
    10. ':def' → logprob: -18.500137329101562

Token 734: ' def' (ID: 1056)
  Prédit: ' def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.5821662545204163
    2. 'def' (adapté à ' def') → logprob: -0.8321662545204163
    3. '   ' → logprob: -5.0821661949157715
    4. '	def' → logprob: -15.33216667175293
    5. '__' → logprob: -15.45716667175293
    6. 'class' → logprob: -15.70716667175293
    7. '```' → logprob: -16.33216667175293
    8. ' ' → logprob: -16.33216667175293
    9. '  ' → logprob: -16.95716667175293
    10. '
' → logprob: -17.33216667175293

Token 735: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.5403750538825989
    2. 'init' → logprob: -1.915374994277954
    3. 'def' → logprob: -2.040374994277954
    4. ' __' → logprob: -2.540374994277954
    5. '_init' → logprob: -3.415374994277954
    6. '```' → logprob: -3.915374994277954
    7. ' def' → logprob: -4.915375232696533
    8. '___' → logprob: -8.165374755859375
    9. '**' → logprob: -8.290374755859375
    10. '   ' → logprob: -9.040374755859375

Token 736: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: -1.9361264946837764e-07
    2. 'def' → logprob: -16.25
    3. ' init' → logprob: -17.25
    4. '_init' → logprob: -17.75
    5. '(init' → logprob: -18.125
    6. 'call' → logprob: -19.5
    7. 'in' → logprob: -19.5
    8. '   ' → logprob: -20.375
    9. '```' → logprob: -20.375
    10. 'i' → logprob: -21.0

Token 737: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -9.849109119386412e-06
    2. '__' → logprob: -12.250009536743164
    3. '(self' → logprob: -12.625009536743164
    4. '__(
' → logprob: -13.375009536743164
    5. '_(' → logprob: -15.875009536743164
    6. '__((' → logprob: -17.625009536743164
    7. 'self' → logprob: -18.250009536743164
    8. '__('' → logprob: -18.750009536743164
    9. '<>(' → logprob: -19.125009536743164
    10. '__("' → logprob: -19.625009536743164

Token 738: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.9054008084349334e-05
    2. ' self' → logprob: -10.375039100646973
    3. ',' → logprob: -12.875039100646973
    4. '   ' → logprob: -12.875039100646973
    5. '
' → logprob: -13.500039100646973
    6. '(self' → logprob: -14.250039100646973
    7. '       ' → logprob: -15.250039100646973
    8. ')' → logprob: -16.625038146972656
    9. ',self' → logprob: -16.625038146972656
    10. 'def' → logprob: -17.000038146972656

Token 739: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.011930732987821102
    2. 'self' → logprob: -4.5119309425354
    3. '(self' → logprob: -7.1369309425354
    4. '   ' → logprob: -10.136930465698242
    5. '__(' → logprob: -11.386930465698242
    6. ',self' → logprob: -11.636930465698242
    7. '__,' → logprob: -12.011930465698242
    8. ' ,' → logprob: -12.136930465698242
    9. ' (' → logprob: -12.636930465698242
    10. ' self' → logprob: -12.636930465698242

Token 740: ' initial' (ID: 4871)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.042433444410562515
    2. 'self' → logprob: -3.667433500289917
    3. 'size' → logprob: -4.167433261871338
    4. ' grid' → logprob: -7.667433261871338
    5. 'initial' → logprob: -10.542433738708496
    6. '   ' → logprob: -11.917433738708496
    7. ' size' → logprob: -12.542433738708496
    8. 'rules' → logprob: -13.167433738708496
    9. ' self' → logprob: -13.542433738708496
    10. 'rule' → logprob: -13.917433738708496

Token 741: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -0.04298515245318413
    2. '_state' → logprob: -3.667985200881958
    3. '_alive' → logprob: -4.292984962463379
    4. ':' → logprob: -7.042984962463379
    5. 'grid' → logprob: -7.167984962463379
    6. 'alive' → logprob: -7.667984962463379
    7. '_cells' → logprob: -8.417984962463379
    8. 'state' → logprob: -8.667984962463379
    9. ',' → logprob: -8.792984962463379
    10. '_live' → logprob: -9.917984962463379

Token 742: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -4.632542913896032e-05
    2. ',' → logprob: -10.000046730041504
    3. ' :' → logprob: -15.250046730041504
    4. '   ' → logprob: -15.500046730041504
    5. '):' → logprob: -15.500046730041504
    6. '_:' → logprob: -16.625045776367188
    7. '```' → logprob: -17.000045776367188
    8. '':' → logprob: -17.625045776367188
    9. ':,' → logprob: -17.750045776367188
    10. '       ' → logprob: -17.875045776367188

Token 743: ' Grid' (ID: 18087)
  Prédit: 'Grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Grid' → logprob: -0.004078758880496025
    2. ' Grid' → logprob: -5.5040788650512695
    3. '   ' → logprob: -15.25407886505127
    4. '(Grid' → logprob: -16.504077911376953
    5. '	Grid' → logprob: -16.754077911376953
    6. ')' → logprob: -17.754077911376953
    7. ' ' → logprob: -18.004077911376953
    8. '<Grid' → logprob: -19.004077911376953
    9. '`' → logprob: -19.129077911376953
    10. 'Graph' → logprob: -19.254077911376953

Token 744: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -1.9361264946837764e-07
    2. '   ' → logprob: -16.375
    3. ',' → logprob: -17.875
    4. '       ' → logprob: -18.25
    5. ' ' → logprob: -18.375
    6. ')' → logprob: -19.25
    7. '```' → logprob: -20.375
    8. '[' → logprob: -20.625
    9. '
' → logprob: -20.75
    10. '۳' → logprob: -21.0

Token 745: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -2.1008713702030946e-06
    2. ' D' → logprob: -13.375001907348633
    3. 'd' → logprob: -15.500001907348633
    4. ')' → logprob: -17.125001907348633
    5. '   ' → logprob: -17.250001907348633
    6. '
' → logprob: -17.250001907348633
    7. '```' → logprob: -17.500001907348633
    8. 'Д' → logprob: -17.625001907348633
    9. '[' → logprob: -17.687501907348633
    10. ',' → logprob: -17.875001907348633

Token 746: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00025084958178922534
    2. '):' → logprob: -8.375250816345215
    3. '):
' → logprob: -11.750250816345215
    4. '   ' → logprob: -12.125250816345215
    5. ' ,' → logprob: -12.750250816345215
    6. ')' → logprob: -13.750250816345215
    7. '       ' → logprob: -14.000250816345215
    8. ',
' → logprob: -14.000250816345215
    9. ',b' → logprob: -14.875250816345215
    10. ':' → logprob: -15.500250816345215

Token 747: ' rules' (ID: 9607)
  Prédit: 'rules'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rules' → logprob: -0.022031685337424278
    2. ' rules' → logprob: -4.022031784057617
    3. 'birth' → logprob: -5.647031784057617
    4. '   ' → logprob: -8.522031784057617
    5. ' birth' → logprob: -9.397031784057617
    6. 'rule' → logprob: -10.272031784057617
    7. ' ' → logprob: -11.772031784057617
    8. '    ' → logprob: -12.897031784057617
    9. '_rules' → logprob: -13.022031784057617
    10. '  ' → logprob: -13.147031784057617

Token 748: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -9.253090865968261e-06
    2. '):' → logprob: -12.375009536743164
    3. '):
' → logprob: -13.375009536743164
    4. ')' → logprob: -13.625009536743164
    5. ',' → logprob: -14.000009536743164
    6. '```' → logprob: -15.375009536743164
    7. '_:' → logprob: -15.500009536743164
    8. '   ' → logprob: -15.625009536743164
    9. '
' → logprob: -16.000009536743164
    10. ' :' → logprob: -16.000009536743164

Token 749: ' Birth' (ID: 57332)
  Prédit: 'Birth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Birth' → logprob: -0.0004892880679108202
    2. ' Birth' → logprob: -7.625489234924316
    3. '   ' → logprob: -15.000489234924316
    4. 'birth' → logprob: -15.375489234924316
    5. ' birth' → logprob: -15.375489234924316
    6. ' ' → logprob: -15.500489234924316
    7. ')' → logprob: -16.125490188598633
    8. 'Death' → logprob: -16.500490188598633
    9. 'Born' → logprob: -17.250490188598633
    10. '_birth' → logprob: -17.250490188598633

Token 750: 'Death' (ID: 43848)
  Prédit: 'Death'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Death' → logprob: -1.2664456789934775e-06
    2. 'death' → logprob: -14.000000953674316
    3. 'Dead' → logprob: -15.125000953674316
    4. ' Death' → logprob: -16.500001907348633
    5. 'Birth' → logprob: -17.875001907348633
    6. 'Deaths' → logprob: -17.875001907348633
    7. 'Decision' → logprob: -18.125001907348633
    8. ' death' → logprob: -18.500001907348633
    9. 'Depth' → logprob: -19.625001907348633
    10. 'Disease' → logprob: -19.750001907348633

Token 751: 'Rules' (ID: 28744)
  Prédit: 'Rules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rules' → logprob: 0.0
    2. 'rules' → logprob: -18.125
    3. ' Rules' → logprob: -18.625
    4. 'Rule' → logprob: -18.625
    5. ' rules' → logprob: -19.375
    6. '_rules' → logprob: -19.5
    7. 'Roles' → logprob: -21.75
    8. 'R' → logprob: -22.25
    9. '
' → logprob: -22.25
    10. 's' → logprob: -22.5

Token 752: ',' (ID: 11)
  Prédit: '):
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.6948704123497009
    2. '):' → logprob: -0.6948704123497009
    3. ')' → logprob: -6.569870471954346
    4. ',' → logprob: -8.694869995117188
    5. '):
' → logprob: -8.944869995117188
    6. '   ' → logprob: -11.569869995117188
    7. '):

' → logprob: -12.069869995117188
    8. ':' → logprob: -12.694869995117188
    9. ' ):
' → logprob: -13.819869995117188
    10. ' ):' → logprob: -13.944869995117188

Token 753: ' days' (ID: 3376)
  Prédit: 'max'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'max' → logprob: -0.7703846096992493
    2. 'steps' → logprob: -1.6453845500946045
    3. 'gener' → logprob: -2.3953845500946045
    4. ' max' → logprob: -2.3953845500946045
    5. ' generations' → logprob: -2.6453845500946045
    6. ' steps' → logprob: -3.0203845500946045
    7. 'iterations' → logprob: -3.7703845500946045
    8. 'num' → logprob: -5.145384788513184
    9. ' iterations' → logprob: -5.395384788513184
    10. 'initial' → logprob: -5.645384788513184

Token 754: ':' (ID: 25)
  Prédit: ':'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.0004659425176214427
    2. ':int' → logprob: -8.125466346740723
    3. '=' → logprob: -8.750466346740723
    4. 'int' → logprob: -12.500466346740723
    5. 'count' → logprob: -13.125466346740723
    6. '   ' → logprob: -13.625466346740723
    7. '):' → logprob: -13.750466346740723
    8. '_count' → logprob: -14.000466346740723
    9. '):
' → logprob: -14.500466346740723
    10. ')' → logprob: -14.500466346740723

Token 755: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.03810024634003639
    2. ' int' → logprob: -3.288100242614746
    3. '   ' → logprob: -10.163100242614746
    4. ':int' → logprob: -11.288100242614746
    5. '=int' → logprob: -13.038100242614746
    6. '[int' → logprob: -13.538100242614746
    7. ')' → logprob: -13.663100242614746
    8. '	int' → logprob: -14.038100242614746
    9. '    ' → logprob: -14.913100242614746
    10. '(int' → logprob: -14.913100242614746

Token 756: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.03954876586794853
    2. '):
' → logprob: -3.289548873901367
    3. ')' → logprob: -6.539548873901367
    4. '):
' → logprob: -10.164548873901367
    5. ':' → logprob: -11.164548873901367
    6. ',' → logprob: -12.414548873901367
    7. '   ' → logprob: -12.539548873901367
    8. ' ):' → logprob: -15.289548873901367
    9. '):

' → logprob: -15.414548873901367
    10. '       ' → logprob: -16.039548873901367

Token 757: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.792751032160595e-05
    2. 'self' → logprob: -9.62508773803711
    3. ' self' → logprob: -11.37508773803711
    4. '   ' → logprob: -12.00008773803711
    5. '```' → logprob: -12.75008773803711
    6. '
' → logprob: -14.87508773803711
    7. ',' → logprob: -15.00008773803711
    8. ':' → logprob: -15.62508773803711
    9. '	' → logprob: -16.37508773803711
    10. '<|end|>' → logprob: -16.50008773803711

Token 758: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.005662241019308567
    2. '       ' → logprob: -5.255662441253662
    3. ' self' → logprob: -7.755662441253662
    4. '	self' → logprob: -16.75566291809082
    5. '   ' → logprob: -17.13066291809082
    6. '(self' → logprob: -17.63066291809082
    7. 'def' → logprob: -19.13066291809082
    8. ' ' → logprob: -19.50566291809082
    9. 'class' → logprob: -20.25566291809082
    10. '[self' → logprob: -20.38066291809082

Token 759: '.grid' (ID: 19269)
  Prédit: '.initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.initial' → logprob: -0.010583896189928055
    2. '.grid' → logprob: -4.635583877563477
    3. 'initial' → logprob: -7.760583877563477
    4. '.current' → logprob: -8.010583877563477
    5. '.days' → logprob: -9.885583877563477
    6. '.' → logprob: -11.635583877563477
    7. 'grid' → logprob: -12.510583877563477
    8. ' .' → logprob: -13.635583877563477
    9. '._' → logprob: -14.010583877563477
    10. '	initial' → logprob: -14.385583877563477

Token 760: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07889275997877121
    2. '=' → logprob: -2.578892707824707
    3. ':' → logprob: -13.328892707824707
    4. '   ' → logprob: -13.703892707824707
    5. ' ' → logprob: -16.078893661499023
    6. '  ' → logprob: -16.203893661499023
    7. ',' → logprob: -17.078893661499023
    8. '=current' → logprob: -17.078893661499023
    9. '    ' → logprob: -17.203893661499023
    10. '```' → logprob: -18.078893661499023

Token 761: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.011048170737922192
    2. ' initial' → logprob: -4.511048316955566
    3. '(initial' → logprob: -16.01104736328125
    4. '	initial' → logprob: -16.63604736328125
    5. '       ' → logprob: -17.26104736328125
    6. 'Grid' → logprob: -17.38604736328125
    7. 'copy' → logprob: -17.51104736328125
    8. 'Initial' → logprob: -18.01104736328125
    9. '   ' → logprob: -18.01104736328125
    10. '.initial' → logprob: -18.13604736328125

Token 762: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -1.1517960956552997e-05
    2. '_' → logprob: -12.250011444091797
    3. 'grid' → logprob: -12.375011444091797
    4. '_
' → logprob: -14.875011444091797
    5. 'Grid' → logprob: -15.250011444091797
    6. '
' → logprob: -15.375011444091797
    7. '   ' → logprob: -15.500011444091797
    8. ' grid' → logprob: -15.750011444091797
    9. '_GRID' → logprob: -15.875011444091797
    10. '.grid' → logprob: -15.875011444091797

Token 763: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00043102685594931245
    2. '
' → logprob: -8.000431060791016
    3. 'self' → logprob: -9.375431060791016
    4. ',' → logprob: -12.625431060791016
    5. ' self' → logprob: -12.875431060791016
    6. '   ' → logprob: -12.875431060791016
    7. '<|end|>' → logprob: -13.625431060791016
    8. ',
' → logprob: -14.625431060791016
    9. ' ' → logprob: -15.625431060791016
    10. '      ' → logprob: -16.250431060791016

Token 764: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.004554730840027332
    2. 'self' → logprob: -5.504554748535156
    3. ' self' → logprob: -8.379554748535156
    4. '
' → logprob: -8.379554748535156
    5. '   ' → logprob: -11.004554748535156
    6. '	self' → logprob: -15.379554748535156
    7. ',' → logprob: -16.379554748535156
    8. '           ' → logprob: -16.504554748535156
    9. '     ' → logprob: -17.379554748535156
    10. '      ' → logprob: -17.379554748535156

Token 765: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.00022809267102275044
    2. ' self' → logprob: -8.500227928161621
    3. '       ' → logprob: -10.625227928161621
    4. '
' → logprob: -15.625227928161621
    5. '   ' → logprob: -16.500228881835938
    6. '	self' → logprob: -18.625228881835938
    7. 's' → logprob: -19.625228881835938
    8. '        
' → logprob: -20.625228881835938
    9. '(self' → logprob: -20.875228881835938
    10. '     ' → logprob: -20.875228881835938

Token 766: '.rules' (ID: 85922)
  Prédit: '.days'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.days' → logprob: -0.0012547536753118038
    2. '.' → logprob: -6.876254558563232
    3. '.rules' → logprob: -9.12625503540039
    4. ' .' → logprob: -10.25125503540039
    5. 'days' → logprob: -10.50125503540039
    6. '.d' → logprob: -10.62625503540039
    7. '.day' → logprob: -10.62625503540039
    8. ' days' → logprob: -15.37625503540039
    9. '
' → logprob: -15.75125503540039
    10. '._' → logprob: -15.87625503540039

Token 767: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5244263410568237
    2. ' =' → logprob: -0.8994263410568237
    3. '.' → logprob: -7.399426460266113
    4. ',' → logprob: -7.774426460266113
    5. '.days' → logprob: -8.774426460266113
    6. '   ' → logprob: -10.524426460266113
    7. ' ' → logprob: -10.649426460266113
    8. '.rules' → logprob: -11.274426460266113
    9. 'days' → logprob: -11.524426460266113
    10. ')' → logprob: -11.774426460266113

Token 768: ' rules' (ID: 9607)
  Prédit: 'rules'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rules' → logprob: -0.06196768581867218
    2. ' rules' → logprob: -2.811967611312866
    3. '.rules' → logprob: -17.686967849731445
    4. '       ' → logprob: -19.436967849731445
    5. 'r' → logprob: -19.811967849731445
    6. 'routes' → logprob: -20.061967849731445
    7. 'rule' → logprob: -20.811967849731445
    8. '_rules' → logprob: -21.061967849731445
    9. '   ' → logprob: -21.686967849731445
    10. 'Rules' → logprob: -21.811967849731445

Token 769: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -8.97155623533763e-05
    2. 'self' → logprob: -9.625089645385742
    3. '   ' → logprob: -10.875089645385742
    4. ' self' → logprob: -12.875089645385742
    5. '
' → logprob: -13.625089645385742
    6. ',' → logprob: -14.125089645385742
    7. ' ' → logprob: -16.875089645385742
    8. '      ' → logprob: -17.125089645385742
    9. 'def' → logprob: -17.500089645385742
    10. '           ' → logprob: -17.500089645385742

Token 770: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0025487891398370266
    2. 'self' → logprob: -6.002548694610596
    3. '   ' → logprob: -9.877549171447754
    4. ' self' → logprob: -10.752549171447754
    5. '	self' → logprob: -15.377549171447754
    6. 'def' → logprob: -16.377548217773438
    7. '      ' → logprob: -17.377548217773438
    8. '     ' → logprob: -17.627548217773438
    9. ' ' → logprob: -17.752548217773438
    10. '	' → logprob: -17.752548217773438

Token 771: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -2.5776860184123507e-06
    2. ' self' → logprob: -13.50000286102295
    3. '       ' → logprob: -13.87500286102295
    4. '
' → logprob: -16.250001907348633
    5. '	self' → logprob: -19.750001907348633
    6. '        
' → logprob: -20.250001907348633
    7. '   ' → logprob: -20.875001907348633
    8. 's' → logprob: -21.375001907348633
    9. '
' → logprob: -22.000001907348633
    10. '(self' → logprob: -22.375001907348633

Token 772: '.days' (ID: 118772)
  Prédit: '.days'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.days' → logprob: -0.0003268831642344594
    2. '.' → logprob: -8.375327110290527
    3. ' .' → logprob: -10.250327110290527
    4. '.d' → logprob: -10.375327110290527
    5. '.day' → logprob: -11.000327110290527
    6. 'days' → logprob: -11.625327110290527
    7. '.daily' → logprob: -14.625327110290527
    8. '.num' → logprob: -14.750327110290527
    9. '.s' → logprob: -15.125327110290527
    10. '.period' → logprob: -15.375327110290527

Token 773: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3962689936161041
    2. '=' → logprob: -1.1462689638137817
    3. ' -=' → logprob: -5.396268844604492
    4. ' +=' → logprob: -5.521268844604492
    5. ' ' → logprob: -8.021268844604492
    6. '<|end|>' → logprob: -8.271268844604492
    7. '    ' → logprob: -9.896268844604492
    8. '_' → logprob: -10.146268844604492
    9. '+=' → logprob: -10.521268844604492
    10. ':' → logprob: -11.146268844604492

Token 774: ' days' (ID: 3376)
  Prédit: 'days'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'days' → logprob: -0.25192955136299133
    2. ' days' → logprob: -1.501929521560669
    3. '(days' → logprob: -15.50192928314209
    4. 'int' → logprob: -15.75192928314209
    5. 'day' → logprob: -16.376930236816406
    6. 'dates' → logprob: -17.251930236816406
    7. 'd' → logprob: -17.251930236816406
    8. '_days' → logprob: -17.876930236816406
    9. '   ' → logprob: -18.751930236816406
    10. ' ' → logprob: -18.751930236816406

Token 775: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0015329512534663081
    2. '
' → logprob: -6.501533031463623
    3. '    
' → logprob: -10.751532554626465
    4. 'def' → logprob: -11.751532554626465
    5. '        
' → logprob: -14.376532554626465
    6. '  
' → logprob: -15.251532554626465
    7. ' def' → logprob: -15.376532554626465
    8. '

' → logprob: -16.00153350830078
    9. ' 
' → logprob: -17.12653350830078
    10. '<|end|>' → logprob: -17.12653350830078

Token 776: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.01065643597394228
    2. 'def' → logprob: -4.635656356811523
    3. '
' → logprob: -7.260656356811523
    4. ' def' → logprob: -8.760656356811523
    5. '    
' → logprob: -10.635656356811523
    6. '```' → logprob: -12.010656356811523
    7. '  ' → logprob: -12.510656356811523
    8. ' ' → logprob: -13.385656356811523
    9. '	def' → logprob: -13.760656356811523
    10. '        
' → logprob: -13.885656356811523

Token 777: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.002133960137143731
    2. ' def' → logprob: -6.627133846282959
    3. '   ' → logprob: -7.252133846282959
    4. '
' → logprob: -9.252134323120117
    5. '    
' → logprob: -13.252134323120117
    6. '	def' → logprob: -14.627134323120117
    7. '        
' → logprob: -14.877134323120117
    8. ' ' → logprob: -15.877134323120117
    9. '  
' → logprob: -16.752134323120117
    10. '

' → logprob: -16.752134323120117

Token 778: ' step' (ID: 5983)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.06056325137615204
    2. ' run' → logprob: -3.560563325881958
    3. 'step' → logprob: -3.560563325881958
    4. ' step' → logprob: -6.810563087463379
    5. '_step' → logprob: -7.810563087463379
    6. 'simulate' → logprob: -8.060563087463379
    7. '_run' → logprob: -9.310563087463379
    8. 'advance' → logprob: -12.560563087463379
    9. ' simulate' → logprob: -13.185563087463379
    10. '_' → logprob: -14.435563087463379

Token 779: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0004923873930238187
    2. '(' → logprob: -7.625492572784424
    3. '()' → logprob: -12.625492095947266
    4. '   ' → logprob: -14.875492095947266
    5. ' (' → logprob: -15.125492095947266
    6. 'self' → logprob: -16.000492095947266
    7. '       ' → logprob: -16.250492095947266
    8. ' ' → logprob: -16.625492095947266
    9. '(s' → logprob: -16.875492095947266
    10. '(
' → logprob: -16.875492095947266

Token 780: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.1509884148836136
    2. '):
' → logprob: -2.2759883403778076
    3. 'self' → logprob: -3.9009883403778076
    4. ')' → logprob: -4.150988578796387
    5. '):
' → logprob: -7.275988578796387
    6. ',' → logprob: -7.775988578796387
    7. '   ' → logprob: -9.025988578796387
    8. '(self' → logprob: -9.025988578796387
    9. '       ' → logprob: -10.025988578796387
    10. '):

' → logprob: -10.525988578796387

Token 781: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -1.688212614681106e-05
    2. 'next' → logprob: -12.125017166137695
    3. 'new' → logprob: -13.000017166137695
    4. '```' → logprob: -13.250017166137695
    5. '
' → logprob: -13.750017166137695
    6. 'updates' → logprob: -13.875017166137695
    7. '   ' → logprob: -14.000017166137695
    8. '        
' → logprob: -14.375017166137695
    9. ' next' → logprob: -14.750017166137695
    10. 'cells' → logprob: -14.750017166137695

Token 782: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.05251777172088623
    2. 'next' → logprob: -3.177517890930176
    3. '       ' → logprob: -4.802517890930176
    4. 'to' → logprob: -7.677517890930176
    5. ' new' → logprob: -7.802517890930176
    6. 'from' → logprob: -9.052517890930176
    7. 'def' → logprob: -9.177517890930176
    8. '   ' → logprob: -10.052517890930176
    9. '#' → logprob: -10.177517890930176
    10. 'current' → logprob: -11.052517890930176

Token 783: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -3.3213025744771585e-05
    2. 'grid' → logprob: -10.625033378601074
    3. '_' → logprob: -12.125033378601074
    4. '_cells' → logprob: -13.625033378601074
    5. 'Grid' → logprob: -13.875033378601074
    6. '_state' → logprob: -14.000033378601074
    7. '_cell' → logprob: -16.250032424926758
    8. '_gr' → logprob: -16.625032424926758
    9. '_alive' → logprob: -17.125032424926758
    10. ' grid' → logprob: -17.500032424926758

Token 784: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.0619683600962162
    2. '=' → logprob: -2.8119683265686035
    3. ' ' → logprob: -14.311968803405762
    4. ')' → logprob: -16.436967849731445
    5. ':' → logprob: -17.311967849731445
    6. '   ' → logprob: -17.811967849731445
    7. '.' → logprob: -17.936967849731445
    8. '  ' → logprob: -18.311967849731445
    9. '=self' → logprob: -18.936967849731445
    10. 's' → logprob: -19.061967849731445

Token 785: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.0309210866689682
    2. ' self' → logprob: -3.53092098236084
    3. 'Grid' → logprob: -6.78092098236084
    4. ' Grid' → logprob: -10.28092098236084
    5. '(self' → logprob: -15.78092098236084
    6. 'Self' → logprob: -16.155921936035156
    7. '	self' → logprob: -16.530921936035156
    8. ' ' → logprob: -18.030921936035156
    9. '=self' → logprob: -18.280921936035156
    10. '	Grid' → logprob: -18.530921936035156

Token 786: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.005950841121375561
    2. 'grid' → logprob: -5.130950927734375
    3. '.Grid' → logprob: -11.255950927734375
    4. ' grid' → logprob: -13.380950927734375
    5. '	grid' → logprob: -13.380950927734375
    6. 'Grid' → logprob: -13.505950927734375
    7. '.' → logprob: -13.880950927734375
    8. '   ' → logprob: -14.380950927734375
    9. ':grid' → logprob: -14.755950927734375
    10. '       ' → logprob: -14.880950927734375

Token 787: '.copy' (ID: 22925)
  Prédit: '.copy'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.copy' → logprob: -1.0564331205387134e-05
    2. '.' → logprob: -11.50001049041748
    3. ' .' → logprob: -14.87501049041748
    4. '.Copy' → logprob: -18.125011444091797
    5. 'copy' → logprob: -18.500011444091797
    6. '.deepcopy' → logprob: -18.750011444091797
    7. '.create' → logprob: -19.500011444091797
    8. '().' → logprob: -20.125011444091797
    9. '   ' → logprob: -20.500011444091797
    10. '_.' → logprob: -21.125011444091797

Token 788: '()
' (ID: 1234)
  Prédit: '()
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()
' → logprob: -0.2950565218925476
    2. '()' → logprob: -1.5450565814971924
    3. '       ' → logprob: -3.1700565814971924
    4. '
' → logprob: -9.295056343078613
    5. '()
' → logprob: -9.920056343078613
    6. '()

' → logprob: -10.295056343078613
    7. '        
' → logprob: -11.170056343078613
    8. 'for' → logprob: -12.045056343078613
    9. '#' → logprob: -12.420056343078613
    10. 'new' → logprob: -13.545056343078613

Token 789: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04310424253344536
    2. 'new' → logprob: -3.2931041717529297
    3. ' new' → logprob: -5.41810417175293
    4. 'for' → logprob: -7.79310417175293
    5. ' for' → logprob: -8.91810417175293
    6. '   ' → logprob: -11.16810417175293
    7. '        
' → logprob: -11.54310417175293
    8. 'all' → logprob: -11.54310417175293
    9. '#' → logprob: -11.79310417175293
    10. 'occupied' → logprob: -12.54310417175293

Token 790: ' #' (ID: 1069)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.9197617769241333
    2. 'to' → logprob: -1.0447617769241333
    3. 'for' → logprob: -2.7947616577148438
    4. 'checked' → logprob: -2.9197616577148438
    5. 'cells' → logprob: -3.1697616577148438
    6. 'c' → logprob: -3.6697616577148438
    7. 'all' → logprob: -4.044761657714844
    8. '#' (adapté à ' #') → logprob: -4.419761657714844
    9. 'potential' → logprob: -4.669761657714844
    10. 'next' → logprob: -5.169761657714844

Token 791: ' We' (ID: 1416)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.31321847438812256
    2. 'new' → logprob: -2.438218593597412
    3. 'cells' → logprob: -3.313218593597412
    4. 'for' → logprob: -3.438218593597412
    5. 'checked' → logprob: -3.438218593597412
    6. '#' → logprob: -4.438218593597412
    7. 'counts' → logprob: -4.438218593597412
    8. 'c' → logprob: -4.688218593597412
    9. 'next' → logprob: -4.688218593597412
    10. 'all' → logprob: -4.813218593597412

Token 792: ' compute' (ID: 23864)
  Prédit: 'ill'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'ill' → logprob: -1.3090696334838867
    2. '       ' → logprob: -1.4340696334838867
    3. 'w' → logprob: -1.9340696334838867
    4. 'new' → logprob: -2.3090696334838867
    5. '.' → logprob: -2.8090696334838867
    6. '.new' → logprob: -3.1840696334838867
    7. '#' → logprob: -3.4340696334838867
    8. '   ' → logprob: -3.5590696334838867
    9. 'need' → logprob: -4.559069633483887
    10. 'e' → logprob: -4.934069633483887

Token 793: ' next' (ID: 2613)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.5098076462745667
    2. 'cells' → logprob: -2.259807586669922
    3. 'new' → logprob: -2.509807586669922
    4. 'c' → logprob: -3.009807586669922
    5. 'all' → logprob: -3.009807586669922
    6. 'next' → logprob: -3.134807586669922
    7. 'counts' → logprob: -3.634807586669922
    8. 'potential' → logprob: -3.759807586669922
    9. 'coords' → logprob: -5.134807586669922
    10. 'checked' → logprob: -5.259807586669922

Token 794: ' states' (ID: 9407)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3359154760837555
    2. 'occupied' → logprob: -2.2109155654907227
    3. '_state' → logprob: -2.3359155654907227
    4. 'state' → logprob: -3.3359155654907227
    5. '       ' → logprob: -4.460915565490723
    6. '_alive' → logprob: -4.460915565490723
    7. '_cells' → logprob: -4.960915565490723
    8. '_generation' → logprob: -5.460915565490723
    9. 'alive' → logprob: -6.085915565490723
    10. '   ' → logprob: -6.960915565490723

Token 795: ' without' (ID: 2935)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00387121201492846
    2. '        
' → logprob: -6.128871440887451
    3. ' for' → logprob: -7.378871440887451
    4. '
' → logprob: -8.003870964050293
    5. ',' → logprob: -8.878870964050293
    6. 'for' → logprob: -9.253870964050293
    7. ' with' → logprob: -9.503870964050293
    8. ' to' → logprob: -9.503870964050293
    9. 'occupied' → logprob: -10.128870964050293
    10. '        ' → logprob: -10.253870964050293

Token 796: ' modifying' (ID: 86506)
  Prédit: 'cle'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'cle' → logprob: -0.4246661365032196
    2. ' clearing' → logprob: -1.424666166305542
    3. 'mod' → logprob: -2.799666166305542
    4. 'clear' → logprob: -4.549665927886963
    5. 'changing' → logprob: -4.799665927886963
    6. ' modifying' → logprob: -4.924665927886963
    7. 'new' → logprob: -5.299665927886963
    8. 'reset' → logprob: -5.299665927886963
    9. ' resetting' → logprob: -6.674665927886963
    10. 'rem' → logprob: -6.674665927886963

Token 797: ' old' (ID: 2890)
  Prédit: ' new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.7592164874076843
    2. 'new' → logprob: -1.259216547012329
    3. 'self' → logprob: -1.759216547012329
    4. ' the' → logprob: -3.009216547012329
    5. ' self' → logprob: -4.13421630859375
    6. 'the' → logprob: -5.13421630859375
    7. 'occupied' → logprob: -6.25921630859375
    8. ' occupied' → logprob: -7.63421630859375
    9. 'existing' → logprob: -7.75921630859375
    10. ' for' → logprob: -8.13421630859375

Token 798: ' state' (ID: 2608)
  Prédit: '_grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_grid' → logprob: -0.42539870738983154
    2. '_' → logprob: -1.1753987073898315
    3. 'occupied' → logprob: -4.425398826599121
    4. '_cells' → logprob: -5.050398826599121
    5. '_alive' → logprob: -5.050398826599121
    6. 'grid' → logprob: -6.050398826599121
    7. '_cell' → logprob: -6.675398826599121
    8. 'alive' → logprob: -7.175398826599121
    9. '_live' → logprob: -7.175398826599121
    10. 'for' → logprob: -7.300398826599121

Token 799: ' during' (ID: 3354)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.023112230002880096
    2. '
' → logprob: -4.3981122970581055
    3. '        
' → logprob: -4.6481122970581055
    4. 'occupied' → logprob: -8.398112297058105
    5. ' for' → logprob: -8.898112297058105
    6. 'for' → logprob: -9.523112297058105
    7. ',' → logprob: -9.648112297058105
    8. 'all' → logprob: -9.898112297058105
    9. ' to' → logprob: -10.023112297058105
    10. ' cells' → logprob: -10.148112297058105

Token 800: ' checks' (ID: 22097)
  Prédit: 'iteration'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'iteration' → logprob: -0.08104629814624786
    2. ' iteration' → logprob: -2.5810463428497314
    3. 'the' → logprob: -6.206046104431152
    4. 'this' → logprob: -10.706046104431152
    5. 'neighbor' → logprob: -10.706046104431152
    6. 'update' → logprob: -10.831046104431152
    7. ' the' → logprob: -10.956046104431152
    8. 'evaluation' → logprob: -11.331046104431152
    9. 'step' → logprob: -11.706046104431152
    10. 'iterations' → logprob: -11.956046104431152

Token 801: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.16924096643924713
    2. '
' → logprob: -1.919240951538086
    3. '        
' → logprob: -4.794240951538086
    4. '  
' → logprob: -8.419240951538086
    5. '
' → logprob: -8.794240951538086
    6. ' 
' → logprob: -9.919240951538086
    7. '    
' → logprob: -10.169240951538086
    8. '

' → logprob: -10.544240951538086
    9. ',' → logprob: -10.544240951538086
    10. '       
' → logprob: -10.669240951538086

Token 802: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00019007037917617708
    2. '        
' → logprob: -8.875189781188965
    3. 'all' → logprob: -11.250189781188965
    4. '
' → logprob: -11.625189781188965
    5. '	' → logprob: -12.500189781188965
    6. '+' → logprob: -12.750189781188965
    7. ' all' → logprob: -13.250189781188965
    8. '   ' → logprob: -13.375189781188965
    9. '           ' → logprob: -13.625189781188965
    10. '        ' → logprob: -13.625189781188965

Token 803: ' changed' (ID: 9180)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.648388683795929
    2. 'c' → logprob: -1.3983886241912842
    3. 'cells' → logprob: -2.523388624191284
    4. 'checked' → logprob: -3.273388624191284
    5. 'potential' → logprob: -3.523388624191284
    6. 'consider' → logprob: -3.773388624191284
    7. '       ' → logprob: -4.523388862609863
    8. 'all' → logprob: -5.023388862609863
    9. 'check' → logprob: -5.023388862609863
    10. 'next' → logprob: -5.148388862609863

Token 804: '_coords' (ID: 77948)
  Prédit: '_coords'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_coords' → logprob: -0.41952282190322876
    2. '_cells' → logprob: -1.169522762298584
    3. ' =' → logprob: -3.669522762298584
    4. '_positions' → logprob: -5.419522762298584
    5. '_coordinates' → logprob: -7.419522762298584
    6. '_set' → logprob: -7.669522762298584
    7. '=' → logprob: -7.669522762298584
    8. '_points' → logprob: -8.419523239135742
    9. '_' → logprob: -9.044523239135742
    10. '_to' → logprob: -9.419523239135742

Token 805: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.004095973912626505
    2. '=' → logprob: -5.504096031188965
    3. ':' → logprob: -11.629096031188965
    4. ' ' → logprob: -11.879096031188965
    5. '=set' → logprob: -14.379096031188965
    6. 's' → logprob: -15.004096031188965
    7. ',' → logprob: -15.004096031188965
    8. '   ' → logprob: -15.754096031188965
    9. ' :' → logprob: -15.879096031188965
    10. '.' → logprob: -16.12909507751465

Token 806: ' set' (ID: 920)
  Prédit: ' set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' set' → logprob: -0.3890702724456787
    2. 'set' → logprob: -1.1390702724456787
    3. ' []' → logprob: -6.764070510864258
    4. '[]' → logprob: -7.014070510864258
    5. '{}' → logprob: -9.639070510864258
    6. '=set' → logprob: -9.889070510864258
    7. '	set' → logprob: -11.139070510864258
    8. ' {}' → logprob: -12.139070510864258
    9. '{' → logprob: -13.264070510864258
    10. ' {' → logprob: -13.514070510864258

Token 807: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.05517721548676491
    2. '()
' → logprob: -2.9301772117614746
    3. '()

' → logprob: -8.180177688598633
    4. '()
' → logprob: -12.555177688598633
    5. '(self' → logprob: -12.930177688598633
    6. '       ' → logprob: -13.055177688598633
    7. '()\' → logprob: -13.430177688598633
    8. '();' → logprob: -13.555177688598633
    9. '()`' → logprob: -14.305177688598633
    10. '(
' → logprob: -14.555177688598633

Token 808: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0004212594940327108
    2. 'all' → logprob: -9.000421524047852
    3. '        
' → logprob: -9.125421524047852
    4. '
' → logprob: -9.125421524047852
    5. 'for' → logprob: -10.750421524047852
    6. ' for' → logprob: -10.875421524047852
    7. ' all' → logprob: -11.750421524047852
    8. 'cells' → logprob: -12.625421524047852
    9. '```' → logprob: -12.750421524047852
    10. ',' → logprob: -13.250421524047852

Token 809: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.1106235980987549
    2. 'to' → logprob: -1.7356235980987549
    3. 'c' → logprob: -1.9856235980987549
    4. 'checked' → logprob: -2.235623598098755
    5. '       ' → logprob: -2.485623598098755
    6. 'all' → logprob: -3.235623598098755
    7. '#' (adapté à ' #') → logprob: -3.360623598098755
    8. 'potential' → logprob: -3.610623598098755
    9. 'consider' → logprob: -3.735623598098755
    10. 'check' → logprob: -4.235623359680176

Token 810: ' To' (ID: 2514)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.6634823083877563
    2. 'c' → logprob: -1.4134823083877563
    3. 'checked' → logprob: -2.538482189178467
    4. 'for' → logprob: -3.038482189178467
    5. '#' → logprob: -3.538482189178467
    6. 'potential' → logprob: -3.788482189178467
    7. 'check' → logprob: -4.163482189178467
    8. 'consider' → logprob: -4.788482189178467
    9. 'cells' → logprob: -4.913482189178467
    10. 're' → logprob: -5.038482189178467

Token 811: ' optimize' (ID: 40398)
  Prédit: 'consider'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'consider' → logprob: -0.9283760190010071
    2. 'check' → logprob: -1.3033759593963623
    3. 'process' → logprob: -1.6783759593963623
    4. ' process' → logprob: -2.8033759593963623
    5. ' check' → logprob: -4.053376197814941
    6. ' consider' → logprob: -4.053376197814941
    7. 'evaluate' → logprob: -4.678376197814941
    8. 'det' → logprob: -4.928376197814941
    9. 'simulate' → logprob: -5.803376197814941
    10. '   ' → logprob: -5.928376197814941

Token 812: ',' (ID: 11)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.9130174517631531
    2. 'checked' → logprob: -1.9130175113677979
    3. 'active' → logprob: -2.538017511367798
    4. 'cells' → logprob: -3.038017511367798
    5. 'alive' → logprob: -3.163017511367798
    6. '       ' → logprob: -3.288017511367798
    7. 'consider' → logprob: -3.413017511367798
    8. 'coords' → logprob: -3.538017511367798
    9. '#' → logprob: -3.538017511367798
    10. 'all' → logprob: -3.663017511367798

Token 813: ' we' (ID: 581)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0775667056441307
    2. 'to' → logprob: -2.952566623687744
    3. 'checked' → logprob: -5.202566623687744
    4. 'potential' → logprob: -5.327566623687744
    5. 'consider' → logprob: -5.702566623687744
    6. 'cells' → logprob: -5.952566623687744
    7. 'coords' → logprob: -6.202566623687744
    8. 'check' → logprob: -7.452566623687744
    9. 'active' → logprob: -7.577566623687744
    10. '#' → logprob: -7.702566623687744

Token 814: ' consider' (ID: 3331)
  Prédit: 'consider'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'consider' → logprob: -0.14121940732002258
    2. '#' → logprob: -3.7662193775177
    3. ' consider' → logprob: -4.266219615936279
    4. 'need' → logprob: -4.766219615936279
    5. '       ' → logprob: -4.766219615936279
    6. ' can' → logprob: -5.016219615936279
    7. 'collect' → logprob: -5.016219615936279
    8. ' want' → logprob: -5.391219615936279
    9. 'can' → logprob: -5.516219615936279
    10. 'def' → logprob: -5.516219615936279

Token 815: ' all' (ID: 722)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.6426491737365723
    2. 'to' → logprob: -1.5176491737365723
    3. 'cells' → logprob: -2.0176491737365723
    4. 'coords' → logprob: -2.3926491737365723
    5. 'potential' → logprob: -4.767649173736572
    6. 'all' → logprob: -5.392649173736572
    7. 'checked' → logprob: -5.642649173736572
    8. 'coordinates' → logprob: -5.767649173736572
    9. 'positions' → logprob: -6.267649173736572
    10. 'check' → logprob: -6.517649173736572

Token 816: ' coordinates' (ID: 27933)
  Prédit: 'coords'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coords' → logprob: -1.0385390520095825
    2. 'cells' → logprob: -1.9135390520095825
    3. 'alive' → logprob: -1.9135390520095825
    4. ' coords' → logprob: -2.163538932800293
    5. ' cells' → logprob: -2.288538932800293
    6. 'occupied' → logprob: -2.788538932800293
    7. 'coordinates' → logprob: -3.663538932800293
    8. ' alive' → logprob: -4.663538932800293
    9. ' coordinates' → logprob: -4.913538932800293
    10. 'self' → logprob: -5.038538932800293

Token 817: ' or' (ID: 503)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.1986168473958969
    2. '       ' → logprob: -2.6986167430877686
    3. 'that' → logprob: -2.9486167430877686
    4. ' to' → logprob: -3.8236167430877686
    5. 'for' → logprob: -4.698616981506348
    6. ' =' → logprob: -4.698616981506348
    7. ' that' → logprob: -4.948616981506348
    8. 'and' → logprob: -5.698616981506348
    9. '_to' → logprob: -6.073616981506348
    10. 'in' → logprob: -6.573616981506348

Token 818: ' at' (ID: 540)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.505660355091095
    2. ' their' → logprob: -1.7556602954864502
    3. ' self' → logprob: -2.00566029548645
    4. 'their' → logprob: -3.50566029548645
    5. ' the' → logprob: -4.380660533905029
    6. ' only' → logprob: -5.005660533905029
    7. 'occupied' → logprob: -5.130660533905029
    8. 'the' → logprob: -5.130660533905029
    9. ' coordinates' → logprob: -5.255660533905029
    10. 'all' → logprob: -5.880660533905029

Token 819: ' least' (ID: 5153)
  Prédit: 'least'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'least' → logprob: -0.00863016489893198
    2. 'most' → logprob: -5.508630275726318
    3. '_le' → logprob: -5.758630275726318
    4. ' least' → logprob: -6.883630275726318
    5. 'l' → logprob: -9.75862979888916
    6. 'minimum' → logprob: -10.25862979888916
    7. 'lest' → logprob: -10.50862979888916
    8. 'risk' → logprob: -10.50862979888916
    9. 'Least' → logprob: -10.75862979888916
    10. 't' → logprob: -10.88362979888916

Token 820: ' all' (ID: 722)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.5791459679603577
    2. ' self' → logprob: -0.8291459679603577
    3. ' the' → logprob: -6.829145908355713
    4. ' set' → logprob: -7.704145908355713
    5. 'list' → logprob: -8.579146385192871
    6. ' all' → logprob: -8.704146385192871
    7. 'set' → logprob: -8.704146385192871
    8. 'coordinates' → logprob: -8.829146385192871
    9. 'the' → logprob: -9.204146385192871
    10. ' those' → logprob: -9.204146385192871

Token 821: ' occupied' (ID: 46186)
  Prédit: 'alive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'alive' → logprob: -1.319061517715454
    2. ' cells' → logprob: -1.694061517715454
    3. 'self' → logprob: -1.819061517715454
    4. 'cells' → logprob: -2.694061517715454
    5. 'occupied' → logprob: -2.694061517715454
    6. ' self' → logprob: -2.944061517715454
    7. 'coords' → logprob: -2.944061517715454
    8. ' alive' → logprob: -2.944061517715454
    9. ' coords' → logprob: -3.319061517715454
    10. 'neighbors' → logprob: -4.319061279296875

Token 822: ' +' (ID: 659)
  Prédit: ' cells'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' cells' → logprob: -1.3450995683670044
    2. 'cells' → logprob: -1.4700995683670044
    3. 'coordinates' → logprob: -1.8450995683670044
    4. ' and' → logprob: -2.095099449157715
    5. 'coords' → logprob: -2.720099449157715
    6. 'and' → logprob: -2.720099449157715
    7. ' coordinates' → logprob: -3.095099449157715
    8. ' coords' → logprob: -4.720099449157715
    9. 'neighbors' → logprob: -4.720099449157715
    10. ' or' → logprob: -4.720099449157715

Token 823: ' neighbors' (ID: 31655)
  Prédit: 'their'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'their' → logprob: -0.5910983681678772
    2. 'neighbors' → logprob: -1.2160983085632324
    3. ' their' → logprob: -2.0910983085632324
    4. 'neighbor' → logprob: -4.091098308563232
    5. ' neighbors' → logprob: -5.216098308563232
    6. '{' → logprob: -6.341098308563232
    7. '{
' → logprob: -7.466098308563232
    8. '
' → logprob: -7.716098308563232
    9. 'self' → logprob: -8.21609878540039
    10. 'all' → logprob: -8.46609878540039

Token 824: '
' (ID: 198)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040743082761764526
    2. '
' → logprob: -3.790743112564087
    3. '()
' → logprob: -4.790742874145508
    4. '        
' → logprob: -6.540742874145508
    5. ' to' → logprob: -6.665742874145508
    6. ' =' → logprob: -6.790742874145508
    7. ':' → logprob: -7.165742874145508
    8. '()' → logprob: -7.165742874145508
    9. ' and' → logprob: -7.665742874145508
    10. ',' → logprob: -7.915742874145508

Token 825: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -3.750436007976532e-05
    2. '
' → logprob: -11.50003719329834
    3. '        
' → logprob: -11.50003719329834
    4. ' for' → logprob: -12.75003719329834
    5. ',' → logprob: -12.87503719329834
    6. 'for' → logprob: -13.37503719329834
    7. ' to' → logprob: -13.37503719329834
    8. 'all' → logprob: -13.37503719329834
    9. '```' → logprob: -13.87503719329834
    10. '+' → logprob: -13.87503719329834

Token 826: ' candidates' (ID: 18116)
  Prédit: 'to'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'to' → logprob: -0.6826254725456238
    2. 'c' → logprob: -0.9326254725456238
    3. 'consider' → logprob: -2.8076255321502686
    4. '       ' → logprob: -4.0576252937316895
    5. 'coords' → logprob: -5.0576252937316895
    6. 're' → logprob: -5.8076252937316895
    7. 'check' → logprob: -5.9326252937316895
    8. 'cells' → logprob: -6.0576252937316895
    9. 'checked' → logprob: -6.3076252937316895
    10. 'all' → logprob: -6.4326252937316895

Token 827: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.011191054247319698
    2. '=' → logprob: -4.886190891265869
    3. ':' → logprob: -5.636190891265869
    4. '   ' → logprob: -12.261191368103027
    5. ' ' → logprob: -13.011191368103027
    6. '=set' → logprob: -13.136191368103027
    7. ' :' → logprob: -13.886191368103027
    8. 's' → logprob: -14.136191368103027
    9. '  ' → logprob: -14.261191368103027
    10. '    ' → logprob: -15.886191368103027

Token 828: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0005095454398542643
    2. ' set' → logprob: -8.000509262084961
    3. 'self' → logprob: -9.125509262084961
    4. '   ' → logprob: -9.875509262084961
    5. '       ' → logprob: -12.125509262084961
    6. '{' → logprob: -12.625509262084961
    7. '           ' → logprob: -13.500509262084961
    8. '(set' → logprob: -14.125509262084961
    9. '
' → logprob: -14.375509262084961
    10. '               ' → logprob: -14.500509262084961

Token 829: '()
' (ID: 1234)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.09500893950462341
    2. '()' → logprob: -2.7200088500976562
    3. '()
' → logprob: -3.7200088500976562
    4. '()

' → logprob: -7.595008850097656
    5. 'self' → logprob: -12.095008850097656
    6. '(' → logprob: -12.845008850097656
    7. '(
' → logprob: -12.845008850097656
    8. '()
' → logprob: -12.970008850097656
    9. '().' → logprob: -13.220008850097656
    10. '(c' → logprob: -13.345008850097656

Token 830: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.010025926865637302
    2. ' for' → logprob: -5.135025978088379
    3. 'for' → logprob: -5.510025978088379
    4. '<|end|>' → logprob: -10.635025978088379
    5. '        
' → logprob: -12.135025978088379
    6. '#' → logprob: -12.635025978088379
    7. '<|end|>' → logprob: -13.135025978088379
    8. ',' → logprob: -13.260025978088379
    9. ' to' → logprob: -13.510025978088379
    10. '   ' → logprob: -13.760025978088379

Token 831: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.022383801639080048
    2. 'c' → logprob: -4.022383689880371
    3. '       ' → logprob: -5.522383689880371
    4. ' for' → logprob: -8.522383689880371
    5. '```' → logprob: -11.022383689880371
    6. '#' → logprob: -12.397383689880371
    7. '
' → logprob: -13.022383689880371
    8. 'coordinates' → logprob: -13.772383689880371
    9. ')c' → logprob: -14.272383689880371
    10. 'new' → logprob: -14.397383689880371

Token 832: ' coord' (ID: 25819)
  Prédit: 'coord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coord' → logprob: -0.11600110679864883
    2. ' coord' → logprob: -2.2410011291503906
    3. 'cell' → logprob: -6.491001129150391
    4. '   ' → logprob: -6.616001129150391
    5. ' cell' → logprob: -8.61600112915039
    6. '       ' → logprob: -9.86600112915039
    7. ' ' → logprob: -11.11600112915039
    8. '    ' → logprob: -11.11600112915039
    9. '  ' → logprob: -11.86600112915039
    10. '           ' → logprob: -11.99100112915039

Token 833: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.001703983056358993
    2. 'in' → logprob: -6.376704216003418
    3. ' ' → logprob: -14.626704216003418
    4. '	in' → logprob: -15.126704216003418
    5. '       ' → logprob: -15.626704216003418
    6. '<|end|>' → logprob: -15.751704216003418
    7. '   ' → logprob: -16.2517032623291
    8. 'In' → logprob: -16.3767032623291
    9. '<|end|>' → logprob: -16.3767032623291
    10. '    ' → logprob: -16.5017032623291

Token 834: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.47478094696998596
    2. ' self' → logprob: -0.9747809171676636
    3. '(self' → logprob: -7.474781036376953
    4. '   ' → logprob: -9.849781036376953
    5. '       ' → logprob: -10.599781036376953
    6. '
' → logprob: -11.474781036376953
    7. 'list' → logprob: -11.474781036376953
    8. ' list' → logprob: -11.599781036376953
    9. ' (' → logprob: -12.224781036376953
    10. '    ' → logprob: -12.349781036376953

Token 835: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.0008040298125706613
    2. 'grid' → logprob: -7.3758039474487305
    3. '.' → logprob: -8.75080394744873
    4. ' .' → logprob: -12.12580394744873
    5. 'occupied' → logprob: -12.12580394744873
    6. '	grid' → logprob: -13.37580394744873
    7. '   ' → logprob: -13.87580394744873
    8. '
' → logprob: -14.25080394744873
    9. ':grid' → logprob: -14.50080394744873
    10. ' grid' → logprob: -14.62580394744873

Token 836: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -8.895480277715251e-06
    2. ' .' → logprob: -11.875008583068848
    3. 'occupied' → logprob: -15.000008583068848
    4. '._' → logprob: -15.125008583068848
    5. '   ' → logprob: -15.125008583068848
    6. '.ob' → logprob: -15.750008583068848
    7. '       ' → logprob: -16.625009536743164
    8. '           ' → logprob: -16.875009536743164
    9. '```' → logprob: -16.875009536743164
    10. '
' → logprob: -16.875009536743164

Token 837: 'occupied' (ID: 98229)
  Prédit: 'occupied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -5.4192871175473556e-05
    2. 'all' → logprob: -9.875054359436035
    3. '   ' → logprob: -14.250054359436035
    4. ' occupied' → logprob: -14.250054359436035
    5. '```' → logprob: -15.250054359436035
    6. 'alive' → logprob: -15.625054359436035
    7. '(' → logprob: -15.750054359436035
    8. 'occup' → logprob: -15.875054359436035
    9. '
' → logprob: -16.62505340576172
    10. ' ' → logprob: -16.62505340576172

Token 838: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.636759340763092
    2. ':
' → logprob: -0.761759340763092
    3. '           ' → logprob: -5.636759281158447
    4. '       ' → logprob: -8.386759757995605
    5. '.union' → logprob: -9.386759757995605
    6. ':
' → logprob: -9.761759757995605
    7. '   ' → logprob: -10.011759757995605
    8. '               ' → logprob: -10.011759757995605
    9. ' :' → logprob: -11.386759757995605
    10. '.' → logprob: -11.386759757995605

Token 839: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0017652629176154733
    2. ':' → logprob: -7.001765251159668
    3. ',' → logprob: -8.126765251159668
    4. ' for' → logprob: -8.501765251159668
    5. ':
' → logprob: -8.876765251159668
    6. ' and' → logprob: -9.876765251159668
    7. '<|end|>' → logprob: -10.126765251159668
    8. '
' → logprob: -10.876765251159668
    9. '       ' → logprob: -10.876765251159668
    10. '               ' → logprob: -11.251765251159668

Token 840: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.000365855434210971
    2. ' candidates' → logprob: -8.0003662109375
    3. '           ' → logprob: -10.6253662109375
    4. '
' → logprob: -12.6253662109375
    5. '               ' → logprob: -13.6253662109375
    6. 'for' → logprob: -14.8753662109375
    7. '_candidates' → logprob: -15.0003662109375
    8. '            
' → logprob: -15.2503662109375
    9. '   ' → logprob: -15.5003662109375
    10. ',c' → logprob: -16.2503662109375

Token 841: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.01350594125688076
    2. '.' → logprob: -4.513505935668945
    3. '.update' → logprob: -6.013505935668945
    4. ' .' → logprob: -12.513505935668945
    5. '|' → logprob: -13.013505935668945
    6. ' |=' → logprob: -13.888505935668945
    7. '.
' → logprob: -14.013505935668945
    8. 'add' → logprob: -14.763505935668945
    9. '.union' → logprob: -14.763505935668945
    10. '   ' → logprob: -15.013505935668945

Token 842: '(coord' (ID: 151575)
  Prédit: '(coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(coord' → logprob: -0.011204498820006847
    2. 'coord' → logprob: -4.511204719543457
    3. ' coord' → logprob: -8.761204719543457
    4. '(' → logprob: -16.88620376586914
    5. '(coords' → logprob: -18.63620376586914
    6. 'coordinate' → logprob: -18.63620376586914
    7. '(co' → logprob: -19.01120376586914
    8. '.coord' → logprob: -19.01120376586914
    9. 'Coord' → logprob: -19.13620376586914
    10. ' (' → logprob: -19.38620376586914

Token 843: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.029038716107606888
    2. ')' → logprob: -3.904038667678833
    3. '           ' → logprob: -4.779038906097412
    4. ' )
' → logprob: -11.279038429260254
    5. '
' → logprob: -11.404038429260254
    6. '       ' → logprob: -11.404038429260254
    7. ')
' → logprob: -11.529038429260254
    8. 'for' → logprob: -12.779038429260254
    9. ' for' → logprob: -13.654038429260254
    10. '               ' → logprob: -13.779038429260254

Token 844: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00936797447502613
    2. ' for' → logprob: -5.259367942810059
    3. 'for' → logprob: -5.509367942810059
    4. '
' → logprob: -9.759367942810059
    5. '       ' → logprob: -11.134367942810059
    6. '   ' → logprob: -13.134367942810059
    7. '               ' → logprob: -14.259367942810059
    8. '            
' → logprob: -14.384367942810059
    9. '```' → logprob: -15.009367942810059
    10. ',' → logprob: -15.384367942810059

Token 845: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.017368119210004807
    2. '           ' → logprob: -4.142368316650391
    3. 'c' → logprob: -6.767368316650391
    4. ' for' → logprob: -9.26736831665039
    5. '       ' → logprob: -9.51736831665039
    6. '
' → logprob: -11.76736831665039
    7. '   ' → logprob: -12.89236831665039
    8. '               ' → logprob: -13.39236831665039
    9. '            
' → logprob: -13.51736831665039
    10. 'from' → logprob: -15.89236831665039

Token 846: ' n' (ID: 297)
  Prédit: 'n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -0.20853422582149506
    2. 'neighbor' → logprob: -1.7085342407226562
    3. ' neighbor' → logprob: -5.208534240722656
    4. ' n' → logprob: -7.083534240722656
    5. 'nbr' → logprob: -7.208534240722656
    6. 'nb' → logprob: -10.708534240722656
    7. 'nei' → logprob: -11.958534240722656
    8. ' neigh' → logprob: -12.208534240722656
    9. 'ne' → logprob: -12.333534240722656
    10. ' nbr' → logprob: -12.583534240722656

Token 847: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.18700793385505676
    2. 'in' → logprob: -1.8120079040527344
    3. 'n' → logprob: -4.937007904052734
    4. ' n' → logprob: -9.937007904052734
    5. ' ' → logprob: -12.937007904052734
    6. '(n' → logprob: -13.187007904052734
    7. 'i' → logprob: -13.437007904052734
    8. '```' → logprob: -13.687007904052734
    9. '
' → logprob: -14.437007904052734
    10. 's' → logprob: -14.749507904052734

Token 848: ' coord' (ID: 25819)
  Prédit: 'coord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coord' → logprob: -0.0019079314079135656
    2. ' coord' → logprob: -6.501907825469971
    3. 'n' → logprob: -7.876907825469971
    4. '(coord' → logprob: -11.501908302307129
    5. 'cord' → logprob: -12.251908302307129
    6. 'self' → logprob: -12.626908302307129
    7. '
' → logprob: -13.001908302307129
    8. 'co' → logprob: -13.626908302307129
    9. ' n' → logprob: -14.126908302307129
    10. 'c' → logprob: -14.251908302307129

Token 849: '.ne' (ID: 39319)
  Prédit: '.ne'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.ne' → logprob: -0.007728718686848879
    2. 'neighbors' → logprob: -5.007728576660156
    3. '(ne' → logprob: -7.257728576660156
    4. '().' → logprob: -9.132728576660156
    5. '(' → logprob: -9.882728576660156
    6. '_neighbors' → logprob: -10.007728576660156
    7. '.' → logprob: -10.757728576660156
    8. 'Neighbors' → logprob: -11.007728576660156
    9. 's' → logprob: -11.382728576660156
    10. '(self' → logprob: -11.507728576660156

Token 850: 'ighbors' (ID: 46483)
  Prédit: 'ighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ighbors' → logprob: -0.00027468299958854914
    2. 'gh' → logprob: -8.625274658203125
    3. 'neighbors' → logprob: -9.375274658203125
    4. 'bors' → logprob: -12.125274658203125
    5. 'igh' → logprob: -12.750274658203125
    6. 'ighbor' → logprob: -14.125274658203125
    7. '_neighbors' → logprob: -15.125274658203125
    8. ' neighbors' → logprob: -15.375274658203125
    9. 'ig' → logprob: -15.500274658203125
    10. 'Neighbors' → logprob: -15.625274658203125

Token 851: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00016229959146585315
    2. 'self' → logprob: -9.375162124633789
    3. '(' → logprob: -9.500162124633789
    4. '(
' → logprob: -13.750162124633789
    5. ' (' → logprob: -15.000162124633789
    6. ' self' → logprob: -15.250162124633789
    7. '```' → logprob: -15.625162124633789
    8. '[self' → logprob: -16.00016212463379
    9. '           ' → logprob: -16.25016212463379
    10. '
' → logprob: -16.25016212463379

Token 852: '.grid' (ID: 19269)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.005046606529504061
    2. ' self' → logprob: -5.380046844482422
    3. 'grid' → logprob: -8.755046844482422
    4. '(self' → logprob: -9.130046844482422
    5. ')' → logprob: -9.255046844482422
    6. '.grid' → logprob: -10.130046844482422
    7. '3' → logprob: -12.255046844482422
    8. '
' → logprob: -12.630046844482422
    9. '   ' → logprob: -13.255046844482422
    10. ',' → logprob: -13.255046844482422

Token 853: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.005352347623556852
    2. 'size' → logprob: -5.25535249710083
    3. '.' → logprob: -10.255352020263672
    4. ')' → logprob: -10.380352020263672
    5. ').' → logprob: -11.630352020263672
    6. 'self' → logprob: -11.630352020263672
    7. ' .' → logprob: -11.880352020263672
    8. ' size' → logprob: -11.880352020263672
    9. '```' → logprob: -12.255352020263672
    10. '(size' → logprob: -12.380352020263672

Token 854: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6504949331283569
    2. '):
' → logprob: -0.7754949331283569
    3. 'self' → logprob: -4.9004950523376465
    4. '(self' → logprob: -5.1504950523376465
    5. '()):
' → logprob: -6.6504950523376465
    6. '):
' → logprob: -7.1504950523376465
    7. '()' → logprob: -7.4004950523376465
    8. ')' → logprob: -7.6504950523376465
    9. '           ' → logprob: -7.9004950523376465
    10. '               ' → logprob: -8.275494575500488

Token 855: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0002988776541315019
    2. '	           ' → logprob: -8.500298500061035
    3. '		       ' → logprob: -10.375298500061035
    4. '           ' → logprob: -10.625298500061035
    5. '	       ' → logprob: -11.500298500061035
    6. '                   ' → logprob: -11.875298500061035
    7. '			   ' → logprob: -12.500298500061035
    8. '                       ' → logprob: -13.000298500061035
    9. '			' → logprob: -13.125298500061035
    10. '	c' → logprob: -13.375298500061035

Token 856: ' candidates' (ID: 18116)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4588581919670105
    2. ' candidates' → logprob: -1.5838582515716553
    3. 'c' → logprob: -1.9588582515716553
    4. '                   ' → logprob: -4.458858013153076
    5. '           ' → logprob: -5.208858013153076
    6. '   ' → logprob: -5.458858013153076
    7. '       ' → logprob: -8.458858489990234
    8. ' c' → logprob: -9.708858489990234
    9. '                ' → logprob: -10.083858489990234
    10. ' ' → logprob: -10.333858489990234

Token 857: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.4740924537181854
    2. '.' → logprob: -0.9740924835205078
    3. ' .' → logprob: -11.224092483520508
    4. '.append' → logprob: -14.474092483520508
    5. '.update' → logprob: -14.724092483520508
    6. '.Add' → logprob: -14.849092483520508
    7. 'add' → logprob: -15.474092483520508
    8. '.
' → logprob: -15.599092483520508
    9. '.setdefault' → logprob: -16.474092483520508
    10. '                   ' → logprob: -16.974092483520508

Token 858: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -7.584239938296378e-06
    2. '(' → logprob: -12.000007629394531
    3. 'n' → logprob: -13.625007629394531
    4. ' (' → logprob: -16.62500762939453
    5. '(
' → logprob: -16.87500762939453
    6. '((' → logprob: -19.50000762939453
    7. '	n' → logprob: -20.50000762939453
    8. '```' → logprob: -20.87500762939453
    9. '﻿' → logprob: -21.25000762939453
    10. '[n' → logprob: -21.25000762939453

Token 859: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -4.8351892473874614e-05
    2. ')
' → logprob: -10.000048637390137
    3. '       ' → logprob: -13.750048637390137
    4. '           ' → logprob: -14.375048637390137
    5. ' )' → logprob: -14.375048637390137
    6. ')
' → logprob: -15.750048637390137
    7. '               ' → logprob: -15.875048637390137
    8. ')

' → logprob: -16.00004768371582
    9. '                   ' → logprob: -17.00004768371582
    10. '                           ' → logprob: -17.25004768371582

Token 860: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.05049770697951317
    2. 'for' → logprob: -3.4254977703094482
    3. '
' → logprob: -4.300497531890869
    4. ' for' → logprob: -5.800497531890869
    5. '   ' → logprob: -9.425498008728027
    6. '        
' → logprob: -11.300498008728027
    7. '```' → logprob: -11.300498008728027
    8. 'def' → logprob: -12.050498008728027
    9. '           ' → logprob: -12.800498008728027
    10. '
' → logprob: -13.300498008728027

Token 861: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.08254703134298325
    2. '       ' → logprob: -2.5825469493865967
    3. ' for' → logprob: -5.707547187805176
    4. '
' → logprob: -8.332547187805176
    5. 'new' → logprob: -10.207547187805176
    6. '        
' → logprob: -10.457547187805176
    7. 'next' → logprob: -11.332547187805176
    8. '```' → logprob: -12.207547187805176
    9. '   ' → logprob: -12.832547187805176
    10. 'def' → logprob: -13.832547187805176

Token 862: ' coord' (ID: 25819)
  Prédit: 'coord'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'coord' → logprob: -0.06204991415143013
    2. ' coord' → logprob: -2.8120498657226562
    3. 'candidate' → logprob: -9.562049865722656
    4. ' candidate' → logprob: -12.812049865722656
    5. '   ' → logprob: -13.062049865722656
    6. 'cell' → logprob: -13.187049865722656
    7. 'c' → logprob: -13.562049865722656
    8. 'cand' → logprob: -14.187049865722656
    9. '```' → logprob: -14.562049865722656
    10. ' ' → logprob: -14.562049865722656

Token 863: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005929982289671898
    2. 'in' → logprob: -5.130929946899414
    3. ' ' → logprob: -13.880929946899414
    4. ',' → logprob: -15.755929946899414
    5. '  ' → logprob: -16.255929946899414
    6. '	in' → logprob: -16.255929946899414
    7. '    ' → logprob: -17.380929946899414
    8. ' ' → logprob: -17.505929946899414
    9. '        ' → logprob: -17.505929946899414
    10. 's' → logprob: -17.505929946899414

Token 864: ' candidates' (ID: 18116)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.00026288547087460756
    2. ' candidates' → logprob: -8.250263214111328
    3. '   ' → logprob: -14.000263214111328
    4. 'sorted' → logprob: -15.000263214111328
    5. '
' → logprob: -15.750263214111328
    6. '           ' → logprob: -16.000263214111328
    7. 'coordinates' → logprob: -16.750263214111328
    8. '       ' → logprob: -16.875263214111328
    9. '(c' → logprob: -17.500263214111328
    10. '               ' → logprob: -17.500263214111328

Token 865: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001233922434039414
    2. ':
' → logprob: -6.75123405456543
    3. '):' → logprob: -10.12623405456543
    4. ',' → logprob: -11.37623405456543
    5. '):
' → logprob: -11.87623405456543
    6. ':

' → logprob: -13.87623405456543
    7. ':
' → logprob: -14.00123405456543
    8. '       ' → logprob: -14.12623405456543
    9. ' :' → logprob: -14.12623405456543
    10. ')' → logprob: -14.75123405456543

Token 866: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0002860073291230947
    2. 'neighbor' → logprob: -9.125286102294922
    3. 'count' → logprob: -9.500286102294922
    4. ' neighbor' → logprob: -10.375286102294922
    5. '```' → logprob: -10.625286102294922
    6. '
' → logprob: -11.125286102294922
    7. 'neighbors' → logprob: -11.250286102294922
    8. ' count' → logprob: -12.250286102294922
    9. '       ' → logprob: -13.125286102294922
    10. ',' → logprob: -13.125286102294922

Token 867: ' alive' (ID: 23757)
  Prédit: 'alive'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alive' (adapté à ' alive') → logprob: -0.7000881433486938
    2. '           ' → logprob: -1.0750881433486938
    3. 'neighbor' → logprob: -2.3250880241394043
    4. 'count' → logprob: -3.2000880241394043
    5. 'neighbors' → logprob: -4.325088024139404
    6. '               ' → logprob: -5.950088024139404
    7. 'num' → logprob: -6.200088024139404
    8. ' alive' → logprob: -6.450088024139404
    9. 'live' → logprob: -7.075088024139404
    10. 'n' → logprob: -7.200088024139404

Token 868: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.3133964240550995
    2. ' =' → logprob: -1.3133964538574219
    3. '_count' → logprob: -9.688396453857422
    4. '_neighbors' → logprob: -10.563396453857422
    5. '_now' → logprob: -11.063396453857422
    6. '   ' → logprob: -11.688396453857422
    7. '           ' → logprob: -11.688396453857422
    8. '_' → logprob: -12.688396453857422
    9. '       ' → logprob: -12.938396453857422
    10. '_neighbor' → logprob: -13.063396453857422

Token 869: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.18021580576896667
    2. ' self' → logprob: -1.805215835571289
    3. ' coord' → logprob: -8.305215835571289
    4. 'coord' → logprob: -8.430215835571289
    5. '           ' → logprob: -13.180215835571289
    6. '(self' → logprob: -13.430215835571289
    7. 'True' → logprob: -14.555215835571289
    8. '   ' → logprob: -15.055215835571289
    9. ' True' → logprob: -15.555215835571289
    10. '(coord' → logprob: -15.805215835571289

Token 870: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -9.150362166110426e-05
    2. '.is' → logprob: -9.625091552734375
    3. 'grid' → logprob: -11.250091552734375
    4. '.' → logprob: -11.375091552734375
    5. ' .' → logprob: -15.125091552734375
    6. 'is' → logprob: -15.375091552734375
    7. '	grid' → logprob: -16.375091552734375
    8. '.g' → logprob: -16.625091552734375
    9. '.gr' → logprob: -16.750091552734375
    10. ':grid' → logprob: -17.000091552734375

Token 871: '.is' (ID: 3109)
  Prédit: '.is'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.is' → logprob: -0.0015333088813349605
    2. '.' → logprob: -6.501533508300781
    3. 'is' → logprob: -10.626533508300781
    4. ' .' → logprob: -12.626533508300781
    5. ').' → logprob: -13.501533508300781
    6. '   ' → logprob: -14.876533508300781
    7. '
' → logprob: -15.376533508300781
    8. '.isnan' → logprob: -15.751533508300781
    9. '.
' → logprob: -15.876533508300781
    10. '```' → logprob: -16.12653350830078

Token 872: '_alive' (ID: 144635)
  Prédit: '_alive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_alive' → logprob: -2.2200749754119897e-06
    2. 'alive' → logprob: -13.125001907348633
    3. '_live' → logprob: -16.375001907348633
    4. '_al' → logprob: -17.625001907348633
    5. '_' → logprob: -18.125001907348633
    6. ' alive' → logprob: -18.625001907348633
    7. '```' → logprob: -19.500001907348633
    8. 'Alive' → logprob: -19.625001907348633
    9. '_active' → logprob: -19.875001907348633
    10. '_alarm' → logprob: -20.250001907348633

Token 873: '(coord' (ID: 151575)
  Prédit: '(coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(coord' → logprob: -5.157039049663581e-05
    2. '(' → logprob: -10.375051498413086
    3. '(co' → logprob: -11.000051498413086
    4. 'coord' → logprob: -13.500051498413086
    5. '(coords' → logprob: -13.500051498413086
    6. ' (' → logprob: -14.250051498413086
    7. '(
' → logprob: -16.375051498413086
    8. '(coeff' → logprob: -17.000051498413086
    9. ')' → logprob: -17.875051498413086
    10. '```' → logprob: -18.500051498413086

Token 874: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008101018611341715
    2. ')
' → logprob: -7.125810146331787
    3. '           ' → logprob: -13.000809669494629
    4. ' )' → logprob: -13.250809669494629
    5. '       ' → logprob: -14.000809669494629
    6. ')

' → logprob: -14.875809669494629
    7. ')
' → logprob: -15.250809669494629
    8. '   ' → logprob: -16.875810623168945
    9. ',' → logprob: -17.000810623168945
    10. '),' → logprob: -17.875810623168945

Token 875: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0001911432045744732
    2. 'neighbor' → logprob: -9.375190734863281
    3. 'count' → logprob: -10.000190734863281
    4. '       ' → logprob: -11.000190734863281
    5. '
' → logprob: -11.000190734863281
    6. 'neighbors' → logprob: -11.750190734863281
    7. '```' → logprob: -12.250190734863281
    8. ' neighbor' → logprob: -12.375190734863281
    9. 'n' → logprob: -13.125190734863281
    10. '   ' → logprob: -13.250190734863281

Token 876: ' count' (ID: 3605)
  Prédit: 'neighbors'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'neighbors' → logprob: -0.6374939680099487
    2. 'neighbor' → logprob: -1.0124939680099487
    3. 'count' (adapté à ' count') → logprob: -2.6374940872192383
    4. '           ' → logprob: -3.3874940872192383
    5. 'n' → logprob: -6.637494087219238
    6. 'nc' → logprob: -8.262494087219238
    7. 'cnt' → logprob: -8.637494087219238
    8. ' neighbors' → logprob: -8.762494087219238
    9. 'alive' → logprob: -8.762494087219238
    10. 'nbr' → logprob: -8.887494087219238

Token 877: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07896171510219574
    2. '=' → logprob: -2.5789616107940674
    3. '_' → logprob: -10.203961372375488
    4. '_neighbors' → logprob: -10.578961372375488
    5. '   ' → logprob: -13.203961372375488
    6. '_neighbor' → logprob: -13.203961372375488
    7. '_=' → logprob: -13.828961372375488
    8. ')' → logprob: -13.953961372375488
    9. 'neighbor' → logprob: -14.328961372375488
    10. '=count' → logprob: -14.703961372375488

Token 878: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.06198202446103096
    2. ' self' → logprob: -2.8119819164276123
    3. '           ' → logprob: -11.311982154846191
    4. '               ' → logprob: -13.811982154846191
    5. '(self' → logprob: -14.186982154846191
    6. '=self' → logprob: -16.561981201171875
    7. '[self' → logprob: -16.936981201171875
    8. '	self' → logprob: -16.936981201171875
    9. '0' → logprob: -17.186981201171875
    10. '   ' → logprob: -17.561981201171875

Token 879: '.grid' (ID: 19269)
  Prédit: '.al'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.al' → logprob: -0.02983854152262211
    2. '.grid' → logprob: -3.5298385620117188
    3. 'alive' → logprob: -9.904838562011719
    4. 'grid' → logprob: -10.779838562011719
    5. '.' → logprob: -11.529838562011719
    6. 'al' → logprob: -12.779838562011719
    7. ' .' → logprob: -13.279838562011719
    8. '   ' → logprob: -14.154838562011719
    9. '_alive' → logprob: -14.154838562011719
    10. '.Al' → logprob: -14.529838562011719

Token 880: '.al' (ID: 19517)
  Prédit: '.al'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.al' → logprob: -2.5107177862082608e-05
    2. '_alive' → logprob: -11.375024795532227
    3. '.' → logprob: -11.875024795532227
    4. 'alive' → logprob: -12.750024795532227
    5. ' .' → logprob: -13.375024795532227
    6. '_.' → logprob: -13.625024795532227
    7. '.ne' → logprob: -15.500024795532227
    8. '   ' → logprob: -15.625024795532227
    9. '._' → logprob: -15.750024795532227
    10. '```' → logprob: -16.125024795532227

Token 881: 'ive' (ID: 585)
  Prédit: 'ive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ive' → logprob: -1.9027791495318525e-05
    2. 'ived' → logprob: -11.000019073486328
    3. 'l' → logprob: -13.500019073486328
    4. 'live' → logprob: -14.750019073486328
    5. 'i' → logprob: -15.250019073486328
    6. 've' → logprob: -15.875019073486328
    7. 'ed' → logprob: -17.125019073486328
    8. 'alive' → logprob: -17.250019073486328
    9. '[' → logprob: -17.875019073486328
    10. '_neighbors' → logprob: -18.000019073486328

Token 882: '_neighbors' (ID: 142549)
  Prédit: '_neighbors'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_neighbors' → logprob: -4.842555426876061e-06
    2. 'neighbors' → logprob: -12.250004768371582
    3. 'Neighbors' → logprob: -19.0000057220459
    4. '```' → logprob: -19.6250057220459
    5. '_' → logprob: -19.7500057220459
    6. '_neighbor' → logprob: -19.7500057220459
    7. ' neighbors' → logprob: -20.0000057220459
    8. '_helpers' → logprob: -20.5000057220459
    9. '_
' → logprob: -21.0000057220459
    10. '_ne' → logprob: -21.5000057220459

Token 883: '_count' (ID: 7536)
  Prédit: '_count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_count' → logprob: -1.3425219549390022e-05
    2. 'count' → logprob: -11.25001335144043
    3. '_counts' → logprob: -16.12501335144043
    4. 'ount' → logprob: -16.50001335144043
    5. '_COUNT' → logprob: -17.62501335144043
    6. '```' → logprob: -17.87501335144043
    7. '_neighbors' → logprob: -17.87501335144043
    8. 's' → logprob: -18.00001335144043
    9. 'Count' → logprob: -18.12501335144043
    10. ' count' → logprob: -18.50001335144043

Token 884: '(coord' (ID: 151575)
  Prédit: '(coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(coord' → logprob: -0.00014776040916331112
    2. '(' → logprob: -8.875147819519043
    3. '(
' → logprob: -12.625147819519043
    4. '(co' → logprob: -12.750147819519043
    5. '(coords' → logprob: -14.000147819519043
    6. 'coord' → logprob: -15.125147819519043
    7. '(count' → logprob: -15.625147819519043
    8. ' (' → logprob: -15.875147819519043
    9. '(coeff' → logprob: -16.500146865844727
    10. '(

' → logprob: -17.375146865844727

Token 885: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.04218696802854538
    2. '(coord' → logprob: -3.292186975479126
    3. ')
' → logprob: -5.542186737060547
    4. '(' → logprob: -9.417186737060547
    5. '           ' → logprob: -9.667186737060547
    6. '(co' → logprob: -11.167186737060547
    7. '(
' → logprob: -11.667186737060547
    8. ')

' → logprob: -11.667186737060547
    9. ')
' → logprob: -11.667186737060547
    10. '   ' → logprob: -11.792186737060547

Token 886: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0009639846975915134
    2. ' if' → logprob: -7.750964164733887
    3. '       ' → logprob: -7.875964164733887
    4. '
' → logprob: -9.875964164733887
    5. 'if' → logprob: -10.000964164733887
    6. '            
' → logprob: -10.875964164733887
    7. '   ' → logprob: -11.875964164733887
    8. '<|end|>' → logprob: -11.875964164733887
    9. '```' → logprob: -12.125964164733887
    10. '        
' → logprob: -12.500964164733887

Token 887: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.09420923888683319
    2. '           ' → logprob: -2.4692091941833496
    3. ' if' → logprob: -5.34420919418335
    4. 'new' → logprob: -8.094209671020508
    5. 'next' → logprob: -8.969209671020508
    6. 'should' → logprob: -10.969209671020508
    7. 'alive' → logprob: -11.594209671020508
    8. '```' → logprob: -12.344209671020508
    9. '       ' → logprob: -12.719209671020508
    10. 'will' → logprob: -13.094209671020508

Token 888: ' not' (ID: 625)
  Prédit: 'alive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'alive' → logprob: -0.08131790161132812
    2. ' alive' → logprob: -2.581317901611328
    3. '(al' → logprob: -6.456317901611328
    4. '   ' → logprob: -7.956317901611328
    5. ' (' → logprob: -8.831317901611328
    6. 'self' → logprob: -8.956317901611328
    7. '(' → logprob: -9.581317901611328
    8. '(self' → logprob: -10.081317901611328
    9. ' self' → logprob: -10.331317901611328
    10. '(not' → logprob: -10.581317901611328

Token 889: ' alive' (ID: 23757)
  Prédit: 'alive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alive' → logprob: -0.0017095671501010656
    2. ' alive' → logprob: -6.376709461212158
    3. '   ' → logprob: -12.251709938049316
    4. 'al' → logprob: -14.001709938049316
    5. '           ' → logprob: -14.751709938049316
    6. 'dead' → logprob: -14.876709938049316
    7. '       ' → logprob: -15.376709938049316
    8. 'alone' → logprob: -16.251708984375
    9. ' ' → logprob: -16.376708984375
    10. '_alive' → logprob: -16.501708984375

Token 890: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.0430917963385582
    2. 'and' → logprob: -3.1680917739868164
    3. '           ' → logprob: -10.043091773986816
    4. '               ' → logprob: -10.418091773986816
    5. '   ' → logprob: -12.168091773986816
    6. ':
' → logprob: -12.293091773986816
    7. ' ' → logprob: -12.668091773986816
    8. ':' → logprob: -13.043091773986816
    9. '                   ' → logprob: -13.543091773986816
    10. '       ' → logprob: -14.668091773986816

Token 891: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.1602940857410431
    2. ' self' → logprob: -1.9102940559387207
    3. '           ' → logprob: -9.785294532775879
    4. '               ' → logprob: -12.035294532775879
    5. ' ' → logprob: -13.410294532775879
    6. '(self' → logprob: -13.660294532775879
    7. '   ' → logprob: -13.785294532775879
    8. '                   ' → logprob: -14.285294532775879
    9. '            ' → logprob: -14.660294532775879
    10. '	self' → logprob: -14.785294532775879

Token 892: '.rules' (ID: 85922)
  Prédit: '.rules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rules' → logprob: -9.698698704596609e-05
    2. 'rules' → logprob: -9.250097274780273
    3. ' .' → logprob: -15.000097274780273
    4. '.' → logprob: -15.375097274780273
    5. '.roles' → logprob: -15.750097274780273
    6. '.rule' → logprob: -17.375097274780273
    7. ' rules' → logprob: -17.875097274780273
    8. '.steps' → logprob: -17.875097274780273
    9. '.conditions' → logprob: -18.250097274780273
    10. '..' → logprob: -18.875097274780273

Token 893: '.w' (ID: 2234)
  Prédit: '.w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.w' → logprob: -0.0005981888971291482
    2. '.' → logprob: -7.500597953796387
    3. '.should' → logprob: -10.625597953796387
    4. ' .' → logprob: -12.250597953796387
    5. '.was' → logprob: -12.250597953796387
    6. 'will' → logprob: -12.500597953796387
    7. '.can' → logprob: -13.000597953796387
    8. '.has' → logprob: -13.125597953796387
    9. '.is' → logprob: -14.125597953796387
    10. '.have' → logprob: -14.500597953796387

Token 894: 'ill' (ID: 492)
  Prédit: 'ill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ill' → logprob: -1.7120533811976202e-05
    2. 'will' → logprob: -11.250017166137695
    3. 'i' → logprob: -14.000017166137695
    4. 'il' → logprob: -14.125017166137695
    5. '```' → logprob: -14.625017166137695
    6. '`' → logprob: -14.750017166137695
    7. '``' → logprob: -15.000017166137695
    8. '   ' → logprob: -16.000017166137695
    9. '
' → logprob: -16.250017166137695
    10. '[' → logprob: -16.375017166137695

Token 895: '_be' (ID: 40729)
  Prédit: '_be'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_be' → logprob: -1.1472419600977446e-06
    2. '_b' → logprob: -14.250000953674316
    3. 'be' → logprob: -15.875000953674316
    4. '_' → logprob: -16.000001907348633
    5. '_have' → logprob: -16.125001907348633
    6. ' _' → logprob: -17.625001907348633
    7. '_to' → logprob: -18.500001907348633
    8. 'Be' → logprob: -19.125001907348633
    9. '__' → logprob: -19.250001907348633
    10. '_birth' → logprob: -19.250001907348633

Token 896: '_b' (ID: 1535)
  Prédit: '_b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_b' → logprob: -0.0001773192489054054
    2. 'born' → logprob: -9.250177383422852
    3. 'orn' → logprob: -9.500177383422852
    4. 'n' → logprob: -13.250177383422852
    5. '_' → logprob: -13.375177383422852
    6. 'b' → logprob: -14.000177383422852
    7. 'r' → logprob: -14.500177383422852
    8. '```' → logprob: -14.875177383422852
    9. ' born' → logprob: -15.125177383422852
    10. 'rn' → logprob: -15.625177383422852

Token 897: 'orn' (ID: 2558)
  Prédit: 'orn'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'orn' → logprob: -2.8921695047756657e-05
    2. 'born' → logprob: -10.625028610229492
    3. 'or' → logprob: -12.750028610229492
    4. 'o' → logprob: -13.750028610229492
    5. ' born' → logprob: -15.875028610229492
    6. 'orne' → logprob: -16.125028610229492
    7. 'Born' → logprob: -16.375028610229492
    8. '
' → logprob: -17.000028610229492
    9. '```' → logprob: -17.000028610229492
    10. 'orm' → logprob: -17.500028610229492

Token 898: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -9.066919301403686e-05
    2. '(' → logprob: -9.375090599060059
    3. ' (' → logprob: -12.500090599060059
    4. 'count' → logprob: -13.875090599060059
    5. '(
' → logprob: -14.125090599060059
    6. '[count' → logprob: -16.625091552734375
    7. '(c' → logprob: -16.750091552734375
    8. '((' → logprob: -17.250091552734375
    9. '(cnt' → logprob: -17.250091552734375
    10. '(counter' → logprob: -18.250091552734375

Token 899: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.024531440809369087
    2. '):
' → logprob: -3.774531364440918
    3. '():' → logprob: -7.024531364440918
    4. '()' → logprob: -9.024531364440918
    5. ')' → logprob: -9.524531364440918
    6. '()):
' → logprob: -9.899531364440918
    7. ':' → logprob: -10.024531364440918
    8. '():
' → logprob: -10.649531364440918
    9. '       ' → logprob: -10.649531364440918
    10. '(' → logprob: -11.024531364440918

Token 900: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.014274331741034985
    2. ':' → logprob: -5.5142741203308105
    3. ':
' → logprob: -5.5142741203308105
    4. ' new' → logprob: -6.0142741203308105
    5. '           ' → logprob: -6.0142741203308105
    6. 'new' → logprob: -6.8892741203308105
    7. '):
' → logprob: -9.514274597167969
    8. ',' → logprob: -10.764274597167969
    9. '                               ' → logprob: -10.889274597167969
    10. '                       ' → logprob: -11.389274597167969

Token 901: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' (adapté à ' new') → logprob: -0.7705799341201782
    2. ' new' → logprob: -1.2705799341201782
    3. '           ' → logprob: -1.5205799341201782
    4. '               ' → logprob: -3.2705798149108887
    5. '                   ' → logprob: -11.895580291748047
    6. '   ' → logprob: -12.645580291748047
    7. '       ' → logprob: -13.520580291748047
    8. '	new' → logprob: -13.645580291748047
    9. '                       ' → logprob: -14.270580291748047
    10. '(new' → logprob: -14.270580291748047

Token 902: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -1.4259644558478612e-05
    2. '_' → logprob: -11.250014305114746
    3. '_g' → logprob: -15.875014305114746
    4. 'grid' → logprob: -15.875014305114746
    5. '_gr' → logprob: -15.875014305114746
    6. '_cell' → logprob: -16.12501335144043
    7. '_queue' → logprob: -16.37501335144043
    8. '
' → logprob: -16.37501335144043
    9. ' _' → logprob: -16.50001335144043
    10. '_GRID' → logprob: -16.62501335144043

Token 903: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.012525658123195171
    2. '.' → logprob: -4.38752555847168
    3. '   ' → logprob: -12.38752555847168
    4. 'set' → logprob: -12.51252555847168
    5. '       ' → logprob: -12.76252555847168
    6. '           ' → logprob: -13.76252555847168
    7. ').' → logprob: -14.01252555847168
    8. ' .' → logprob: -14.01252555847168
    9. '```' → logprob: -14.88752555847168
    10. '\.' → logprob: -15.38752555847168

Token 904: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -3.8889261304575484e-06
    2. 'cell' → logprob: -13.375003814697266
    3. '```' → logprob: -14.000003814697266
    4. '_cells' → logprob: -15.000003814697266
    5. '_Cell' → logprob: -15.250003814697266
    6. '`' → logprob: -15.625003814697266
    7. 'Cell' → logprob: -15.875003814697266
    8. '_' → logprob: -15.875003814697266
    9. '<Cell' → logprob: -16.125003814697266
    10. '_code' → logprob: -16.125003814697266

Token 905: '(coord' (ID: 151575)
  Prédit: '(coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(coord' → logprob: -4.60414821645827e-06
    2. '(co' → logprob: -13.375004768371582
    3. '(' → logprob: -13.500004768371582
    4. 'coord' → logprob: -13.875004768371582
    5. '(coords' → logprob: -14.250004768371582
    6. '(
' → logprob: -17.500003814697266
    7. '```' → logprob: -17.875003814697266
    8. '(coeff' → logprob: -18.000003814697266
    9. ' (' → logprob: -18.125003814697266
    10. ' coord' → logprob: -18.875003814697266

Token 906: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.372294698550832e-06
    2. 'True' → logprob: -12.625009536743164
    3. ' ,' → logprob: -12.875009536743164
    4. '(True' → logprob: -12.875009536743164
    5. ',true' → logprob: -15.000009536743164
    6. '=True' → logprob: -15.375009536743164
    7. ',
' → logprob: -15.375009536743164
    8. ' True' → logprob: -16.500009536743164
    9. ')' → logprob: -17.500009536743164
    10. 'true' → logprob: -17.875009536743164

Token 907: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -1.8624639324116288e-06
    2. ' True' → logprob: -13.250001907348633
    3. '=True' → logprob: -18.250001907348633
    4. '(True' → logprob: -18.625001907348633
    5. '   ' → logprob: -20.875001907348633
    6. 'true' → logprob: -21.375001907348633
    7. '           ' → logprob: -23.125001907348633
    8. '       ' → logprob: -23.125001907348633
    9. '1' → logprob: -23.250001907348633
    10. '               ' → logprob: -24.500001907348633

Token 908: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.1468038111925125
    2. '<|end|>' → logprob: -2.271803855895996
    3. '           ' → logprob: -4.146803855895996
    4. '               ' → logprob: -4.521803855895996
    5. '
' → logprob: -5.146803855895996
    6. ')
' → logprob: -8.521803855895996
    7. '<|end|>' → logprob: -8.646803855895996
    8. '       ' → logprob: -8.771803855895996
    9. '),' → logprob: -9.771803855895996
    10. ',' → logprob: -10.146803855895996

Token 909: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.000343210413120687
    2. 'elif' → logprob: -8.625343322753906
    3. '            
' → logprob: -9.500343322753906
    4. '               ' → logprob: -10.375343322753906
    5. ' elif' → logprob: -10.750343322753906
    6. '    
' → logprob: -11.500343322753906
    7. '       ' → logprob: -11.875343322753906
    8. '                
' → logprob: -12.875343322753906
    9. '<|end|>' → logprob: -13.000343322753906
    10. '  
' → logprob: -13.000343322753906

Token 910: ' elif' (ID: 9497)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.02567446604371071
    2. 'elif' (adapté à ' elif') → logprob: -3.77567458152771
    3. ' elif' → logprob: -6.025674343109131
    4. 'else' → logprob: -12.275674819946289
    5. '       ' → logprob: -13.275674819946289
    6. '               ' → logprob: -14.025674819946289
    7. '	elif' → logprob: -14.025674819946289
    8. ' else' → logprob: -14.275674819946289
    9. '          ' → logprob: -14.525674819946289
    10. '   ' → logprob: -15.275674819946289

Token 911: ' alive' (ID: 23757)
  Prédit: ' alive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' alive' → logprob: -0.1797574758529663
    2. 'alive' → logprob: -1.8047574758529663
    3. '   ' → logprob: -12.304757118225098
    4. ' ' → logprob: -12.429757118225098
    5. '_alive' → logprob: -13.054757118225098
    6. ' not' → logprob: -14.429757118225098
    7. 'al' → logprob: -14.679757118225098
    8. ' ' → logprob: -15.179757118225098
    9. 'not' → logprob: -15.429757118225098
    10. 'Alive' → logprob: -16.054758071899414

Token 912: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.06198292225599289
    2. 'and' → logprob: -2.8119828701019287
    3. '           ' → logprob: -11.811983108520508
    4. '	and' → logprob: -12.811983108520508
    5. '               ' → logprob: -13.436983108520508
    6. '            ' → logprob: -13.686983108520508
    7. ' ' → logprob: -14.311983108520508
    8. '   ' → logprob: -14.686983108520508
    9. ' not' → logprob: -15.561983108520508
    10. '       ' → logprob: -15.561983108520508

Token 913: ' not' (ID: 625)
  Prédit: 'not'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'not' → logprob: -0.021044766530394554
    2. ' not' → logprob: -3.8960447311401367
    3. '(not' → logprob: -8.396044731140137
    4. '           ' → logprob: -9.396044731140137
    5. '               ' → logprob: -9.396044731140137
    6. 'self' → logprob: -9.521044731140137
    7. '   ' → logprob: -11.021044731140137
    8. '                   ' → logprob: -11.771044731140137
    9. ' self' → logprob: -12.521044731140137
    10. '       ' → logprob: -12.521044731140137

Token 914: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018152287229895592
    2. ' self' → logprob: -4.018152236938477
    3. '(self' → logprob: -14.018152236938477
    4. '
' → logprob: -14.393152236938477
    5. ' ' → logprob: -15.268152236938477
    6. '           ' → logprob: -15.518152236938477
    7. ' ' → logprob: -15.643152236938477
    8. '   ' → logprob: -16.018152236938477
    9. '[self' → logprob: -16.518152236938477
    10. '`' → logprob: -16.893152236938477

Token 915: '.rules' (ID: 85922)
  Prédit: '.rules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.rules' → logprob: -0.0019324433524161577
    2. 'rules' → logprob: -6.251932621002197
    3. '.' → logprob: -13.001932144165039
    4. ' rules' → logprob: -14.876932144165039
    5. '.roles' → logprob: -15.126932144165039
    6. '.grid' → logprob: -15.501932144165039
    7. ' .' → logprob: -15.501932144165039
    8. '..' → logprob: -15.751932144165039
    9. '...' → logprob: -16.00193214416504
    10. '.rule' → logprob: -16.25193214416504

Token 916: '.w' (ID: 2234)
  Prédit: '.w'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.w' → logprob: -0.00016551809676457196
    2. '.' → logprob: -8.875165939331055
    3. 'will' → logprob: -11.250165939331055
    4. ' .' → logprob: -12.250165939331055
    5. '.should' → logprob: -12.750165939331055
    6. '.is' → logprob: -13.750165939331055
    7. '.was' → logprob: -13.875165939331055
    8. '.s' → logprob: -14.125165939331055
    9. '.can' → logprob: -14.875165939331055
    10. '..' → logprob: -15.500165939331055

Token 917: 'ill' (ID: 492)
  Prédit: 'ill'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ill' → logprob: -0.04331156983971596
    2. 'will' → logprob: -3.168311595916748
    3. 'be' → logprob: -9.66831111907959
    4. 'il' → logprob: -9.79331111907959
    5. '...' → logprob: -10.66831111907959
    6. '.' → logprob: -10.91831111907959
    7. ' will' → logprob: -11.29331111907959
    8. '.w' → logprob: -11.29331111907959
    9. 'ills' → logprob: -11.54331111907959
    10. '.be' → logprob: -11.54331111907959

Token 918: '_sur' (ID: 160451)
  Prédit: '_sur'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_sur' → logprob: -0.000510260637383908
    2. '_be' → logprob: -7.750510215759277
    3. 'sur' → logprob: -9.500510215759277
    4. 'be' → logprob: -13.250510215759277
    5. '_continue' → logprob: -14.000510215759277
    6. '_' → logprob: -14.500510215759277
    7. 's' → logprob: -15.625510215759277
    8. 'Sur' → logprob: -15.750510215759277
    9. 'e' → logprob: -15.750510215759277
    10. '_have' → logprob: -16.125511169433594

Token 919: 'vive' (ID: 131935)
  Prédit: 'vive'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'vive' → logprob: -0.07034885138273239
    2. 'ive' → logprob: -2.6953487396240234
    3. 'rive' → logprob: -8.445348739624023
    4. '#' → logprob: -9.195348739624023
    5. 'live' → logprob: -10.695348739624023
    6. '_' → logprob: -11.695348739624023
    7. '[' → logprob: -12.195348739624023
    8. '__' → logprob: -12.195348739624023
    9. ' vive' → logprob: -12.445348739624023
    10. 'vice' → logprob: -12.445348739624023

Token 920: '(count' (ID: 25892)
  Prédit: '(count'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(count' → logprob: -6.704273118884885e-07
    2. '(' → logprob: -15.750000953674316
    3. 'count' → logprob: -15.875000953674316
    4. '[count' → logprob: -16.375
    5. ' (' → logprob: -16.625
    6. '(cnt' → logprob: -17.75
    7. '(cont' → logprob: -19.25
    8. '(
' → logprob: -19.375
    9. ' count' → logprob: -19.625
    10. '(code' → logprob: -19.625

Token 921: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.0729045569896698
    2. '):' → logprob: -2.697904586791992
    3. '(coord' → logprob: -6.572904586791992
    4. '(count' → logprob: -6.947904586791992
    5. ')' → logprob: -8.947904586791992
    6. '(' → logprob: -9.197904586791992
    7. '       ' → logprob: -9.572904586791992
    8. '):
' → logprob: -9.822904586791992
    9. ' (' → logprob: -10.072904586791992
    10. '   ' → logprob: -10.197904586791992

Token 922: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0004528374411165714
    2. ' new' → logprob: -8.375452995300293
    3. ':
' → logprob: -8.875452995300293
    4. 'new' → logprob: -10.125452995300293
    5. ':' → logprob: -10.875452995300293
    6. '):
' → logprob: -12.375452995300293
    7. '           ' → logprob: -12.500452995300293
    8. '                               ' → logprob: -12.625452995300293
    9. '                   ' → logprob: -12.750452995300293
    10. '(new' → logprob: -12.875452995300293

Token 923: ' new' (ID: 620)
  Prédit: ' new'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' new' → logprob: -0.10020741820335388
    2. 'new' (adapté à ' new') → logprob: -2.3502073287963867
    3. '               ' → logprob: -14.850207328796387
    4. '           ' → logprob: -16.225208282470703
    5. '(new' → logprob: -16.600208282470703
    6. '	new' → logprob: -16.975208282470703
    7. 'n' → logprob: -17.100208282470703
    8. ' 
' → logprob: -17.100208282470703
    9. '[new' → logprob: -17.100208282470703
    10. '
' → logprob: -17.350208282470703

Token 924: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -0.014251765795052052
    2. 'Grid' → logprob: -4.264251708984375
    3. 'grid' → logprob: -9.389251708984375
    4. '_GRID' → logprob: -13.014251708984375
    5. '<Grid' → logprob: -13.764251708984375
    6. 'GRID' → logprob: -14.889251708984375
    7. '.grid' → logprob: -14.889251708984375
    8. ' grid' → logprob: -15.889251708984375
    9. '.Grid' → logprob: -16.139251708984375
    10. '-grid' → logprob: -16.139251708984375

Token 925: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -0.000725656165741384
    2. '.' → logprob: -7.250725746154785
    3. 'set' → logprob: -11.375725746154785
    4. ' .' → logprob: -13.000725746154785
    5. '.remove' → logprob: -14.500725746154785
    6. '.delete' → logprob: -14.875725746154785
    7. '_.' → logprob: -14.875725746154785
    8. '   ' → logprob: -15.625725746154785
    9. '```' → logprob: -15.875725746154785
    10. '#set' → logprob: -16.37572479248047

Token 926: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -0.0001987722353078425
    2. 'cell' → logprob: -8.625198364257812
    3. 'Cell' → logprob: -11.000198364257812
    4. 'coord' → logprob: -14.000198364257812
    5. 'cel' → logprob: -14.875198364257812
    6. '<Cell' → logprob: -14.875198364257812
    7. '_CELL' → logprob: -14.875198364257812
    8. 'セル' → logprob: -15.500198364257812
    9. ' cell' → logprob: -16.250198364257812
    10. '	cell' → logprob: -16.625198364257812

Token 927: '(coord' (ID: 151575)
  Prédit: '(coord'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(coord' → logprob: -5.512236498361744e-07
    2. '(coords' → logprob: -14.875000953674316
    3. 'coord' → logprob: -15.750000953674316
    4. '(co' → logprob: -17.5
    5. ' coord' → logprob: -18.375
    6. '(' → logprob: -18.75
    7. ' (' → logprob: -19.75
    8. '.coord' → logprob: -19.875
    9. '(coeff' → logprob: -20.625
    10. '```' → logprob: -21.625

Token 928: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.035043343901634216
    2. '(coord' → logprob: -3.410043239593506
    3. 'coord' → logprob: -6.660043239593506
    4. ' coord' → logprob: -9.160043716430664
    5. ')' → logprob: -12.410043716430664
    6. '(coords' → logprob: -13.410043716430664
    7. '(co' → logprob: -14.035043716430664
    8. ' ,' → logprob: -14.160043716430664
    9. '.coord' → logprob: -14.285043716430664
    10. '),' → logprob: -14.660043716430664

Token 929: ' False' (ID: 7983)
  Prédit: 'False'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'False' → logprob: -2.15310683415737e-05
    2. ' False' → logprob: -10.750021934509277
    3. '(False' → logprob: -17.75002098083496
    4. '=False' → logprob: -20.87502098083496
    5. 'false' → logprob: -21.87502098083496
    6. 'F' → logprob: -22.75002098083496
    7. 'True' → logprob: -23.00002098083496
    8. '.False' → logprob: -23.75002098083496
    9. '_false' → logprob: -24.62502098083496
    10. 'coord' → logprob: -24.75002098083496

Token 930: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.20343035459518433
    2. '           ' → logprob: -1.953430414199829
    3. ')
' → logprob: -3.953430414199829
    4. '
' → logprob: -4.07843017578125
    5. '<|end|>' → logprob: -5.57843017578125
    6. '       ' → logprob: -6.32843017578125
    7. '               ' → logprob: -9.20343017578125
    8. '),' → logprob: -9.45343017578125
    9. '```' → logprob: -9.70343017578125
    10. ').' → logprob: -9.95343017578125

Token 931: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.40201660990715027
    2. '       ' → logprob: -1.1520166397094727
    3. '<|end|>' → logprob: -4.652016639709473
    4. ' else' → logprob: -6.652016639709473
    5. '               ' → logprob: -6.652016639709473
    6. '
' → logprob: -7.277016639709473
    7. '            
' → logprob: -8.402016639709473
    8. '        
' → logprob: -8.402016639709473
    9. '                               ' → logprob: -8.652016639709473
    10. 'else' → logprob: -8.652016639709473

Token 932: ' #' (ID: 1069)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.040039196610450745
    2. '           ' → logprob: -3.290039300918579
    3. '<|end|>' → logprob: -6.7900390625
    4. '            
' → logprob: -8.5400390625
    5. 'new' → logprob: -9.1650390625
    6. '        
' → logprob: -9.2900390625
    7. '               ' → logprob: -9.5400390625
    8. 'return' → logprob: -9.7900390625
    9. ' else' → logprob: -9.9150390625
    10. 'else' → logprob: -10.0400390625

Token 933: ' else' (ID: 1203)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.6947878003120422
    2. ' if' → logprob: -1.8197877407073975
    3. '           ' → logprob: -2.0697877407073975
    4. 'if' → logprob: -2.6947877407073975
    5. 'else' → logprob: -2.9447877407073975
    6. 'elif' → logprob: -3.6947877407073975
    7. 'return' → logprob: -4.194787979125977
    8. 'new' → logprob: -4.319787979125977
    9. ' else' → logprob: -4.444787979125977
    10. '```' → logprob: -5.319787979125977

Token 934: ' no' (ID: 860)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.21951325237751007
    2. ':' → logprob: -2.344513177871704
    3. ':
' → logprob: -3.344513177871704
    4. '           ' → logprob: -3.469513177871704
    5. ' continue' → logprob: -3.594513177871704
    6. 'continue' → logprob: -5.844513416290283
    7. ' new' → logprob: -5.969513416290283
    8. '       ' → logprob: -7.344513416290283
    9. 'new' → logprob: -7.844513416290283
    10. '   ' → logprob: -8.094512939453125

Token 935: ' change' (ID: 3343)
  Prédit: 'change'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'change' → logprob: -0.49224698543548584
    2. ' change' → logprob: -0.9922469854354858
    3. ' ' → logprob: -4.867247104644775
    4. '<|end|>' → logprob: -5.742247104644775
    5. ' action' → logprob: -6.617247104644775
    6. '    ' → logprob: -6.617247104644775
    7. ' changes' → logprob: -6.742247104644775
    8. '            ' → logprob: -7.742247104644775
    9. '_change' → logprob: -7.867247104644775
    10. '
' → logprob: -8.117246627807617

Token 936: '

' (ID: 279)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 937: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.07911978662014008
    2. '
' → logprob: -2.5791196823120117
    3. '<|end|>' → logprob: -9.079119682312012
    4. 'new' → logprob: -10.329119682312012
    5. ' new' → logprob: -10.704119682312012
    6. '        
' → logprob: -10.829119682312012
    7. '```' → logprob: -11.704119682312012
    8. '   ' → logprob: -11.829119682312012
    9. '
' → logprob: -11.829119682312012
    10. '           ' → logprob: -12.204119682312012

Token 938: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.07900292426347733
    2. '       ' → logprob: -2.579002857208252
    3. ' self' → logprob: -9.82900333404541
    4. 'return' → logprob: -10.20400333404541
    5. '   ' → logprob: -11.57900333404541
    6. '
' → logprob: -11.70400333404541
    7. '	self' → logprob: -13.70400333404541
    8. '```' → logprob: -13.95400333404541
    9. 'new' → logprob: -14.07900333404541
    10. '        
' → logprob: -14.20400333404541

Token 939: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.00020401719666551799
    2. '.' → logprob: -8.500204086303711
    3. ' .' → logprob: -15.625204086303711
    4. 'grid' → logprob: -15.875204086303711
    5. '.Grid' → logprob: -17.00020408630371
    6. '.queue' → logprob: -17.25020408630371
    7. '.user' → logprob: -17.37520408630371
    8. ':grid' → logprob: -17.50020408630371
    9. '._' → logprob: -17.75020408630371
    10. '	grid' → logprob: -17.75020408630371

Token 940: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.16022473573684692
    2. ' =' → logprob: -1.9102246761322021
    3. '=new' → logprob: -14.910224914550781
    4. '.' → logprob: -16.41022491455078
    5. '.=' → logprob: -16.78522491455078
    6. '=self' → logprob: -17.41022491455078
    7. ' ' → logprob: -17.41022491455078
    8. ',' → logprob: -17.53522491455078
    9. '   ' → logprob: -18.41022491455078
    10. '=
' → logprob: -18.41022491455078

Token 941: ' new' (ID: 620)
  Prédit: 'new'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'new' → logprob: -0.006715370807796717
    2. ' new' → logprob: -5.006715297698975
    3. '	new' → logprob: -20.256715774536133
    4. '_new' → logprob: -21.256715774536133
    5. '(new' → logprob: -22.006715774536133
    6. '新' → logprob: -22.256715774536133
    7. 'New' → logprob: -22.756715774536133
    8. ')new' → logprob: -22.756715774536133
    9. '   ' → logprob: -22.881715774536133
    10. ' ' → logprob: -22.881715774536133

Token 942: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -6.76628842484206e-05
    2. 'grid' → logprob: -9.625067710876465
    3. 'w' → logprob: -14.125067710876465
    4. '_GRID' → logprob: -14.875067710876465
    5. '.grid' → logprob: -15.250067710876465
    6. 'Grid' → logprob: -15.875067710876465
    7. '_' → logprob: -16.75006675720215
    8. '.Grid' → logprob: -17.25006675720215
    9. '-grid' → logprob: -17.50006675720215
    10. ' grid' → logprob: -18.12506675720215

Token 943: '
' (ID: 198)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 944: '   ' (ID: 271)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 945: ' def' (ID: 1056)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 946: ' run' (ID: 2461)
  Prédit: 'run'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'run' → logprob: -0.00296676903963089
    2. ' run' → logprob: -5.87796688079834
    3. 'simulate' → logprob: -8.75296688079834
    4. 'get' → logprob: -13.87796688079834
    5. '__' → logprob: -14.37796688079834
    6. ' simulate' → logprob: -14.50296688079834
    7. '   ' → logprob: -15.37796688079834
    8. ' ' → logprob: -15.37796688079834
    9. '_run' → logprob: -15.50296688079834
    10. '
' → logprob: -15.50296688079834

Token 947: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.3431514501571655
    2. '(' → logprob: -1.3431514501571655
    3. '()' → logprob: -3.593151569366455
    4. '(
' → logprob: -6.843151569366455
    5. '_' → logprob: -7.718151569366455
    6. ' (' → logprob: -8.593151092529297
    7. '   ' → logprob: -10.343151092529297
    8. 'self' → logprob: -10.343151092529297
    9. '_(' → logprob: -10.468151092529297
    10. '():' → logprob: -10.843151092529297

Token 948: '):
' (ID: 1883)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.06505437195301056
    2. '(' → logprob: -3.690054416656494
    3. ')' → logprob: -4.190054416656494
    4. 'self' → logprob: -4.815054416656494
    5. '()' → logprob: -4.940054416656494
    6. '       ' → logprob: -6.190054416656494
    7. '   ' → logprob: -6.815054416656494
    8. ' (' → logprob: -7.690054416656494
    9. '())' → logprob: -7.690054416656494
    10. '(n' → logprob: -7.815054416656494

Token 949: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.015248550102114677
    2. '
' → logprob: -4.390248775482178
    3. '\n' → logprob: -7.640248775482178
    4. '(self' → logprob: -7.765248775482178
    5. '        
' → logprob: -7.765248775482178
    6. '```' → logprob: -8.01524829864502
    7. '\' → logprob: -8.64024829864502
    8. '    
' → logprob: -8.64024829864502
    9. '(' → logprob: -8.76524829864502
    10. ' for' → logprob: -9.01524829864502

Token 950: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.6944208145141602
    2. 'for' (adapté à ' for') → logprob: -0.6944208145141602
    3. '       ' → logprob: -6.69442081451416
    4. '
' → logprob: -10.44442081451416
    5. '   ' → logprob: -12.44442081451416
    6. '```' → logprob: -13.44442081451416
    7. '    ' → logprob: -15.56942081451416
    8. '	for' → logprob: -16.194419860839844
    9. '        
' → logprob: -16.819419860839844
    10. ' 
' → logprob: -16.819419860839844

Token 951: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.0035158528480678797
    2. ' _' → logprob: -5.753515720367432
    3. '_day' → logprob: -8.00351619720459
    4. ' day' → logprob: -12.50351619720459
    5. 'day' → logprob: -16.378515243530273
    6. '_range' → logprob: -16.753515243530273
    7. '_in' → logprob: -18.003515243530273
    8. '_d' → logprob: -18.003515243530273
    9. ' ' → logprob: -18.003515243530273
    10. '_days' → logprob: -18.253515243530273

Token 952: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.003733925987035036
    2. 'in' → logprob: -6.378734111785889
    3. '_' → logprob: -7.003734111785889
    4. 'f' → logprob: -7.503734111785889
    5. 'range' → logprob: -7.753734111785889
    6. ' range' → logprob: -9.87873363494873
    7. ' ' → logprob: -10.87873363494873
    8. 'ange' → logprob: -11.62873363494873
    9. ' _' → logprob: -11.87873363494873
    10. '(range' → logprob: -12.00373363494873

Token 953: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.018150877207517624
    2. ' range' → logprob: -4.018150806427002
    3. 'self' → logprob: -14.14315128326416
    4. '   ' → logprob: -16.643150329589844
    5. '(range' → logprob: -17.018150329589844
    6. ' ' → logprob: -17.518150329589844
    7. '	range' → logprob: -17.893150329589844
    8. '  ' → logprob: -18.768150329589844
    9. '_range' → logprob: -19.018150329589844
    10. '_' → logprob: -19.268150329589844

Token 954: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.01832178421318531
    2. '(' → logprob: -4.018321990966797
    3. 'self' → logprob: -9.143321990966797
    4. ' (' → logprob: -9.768321990966797
    5. ' self' → logprob: -12.393321990966797
    6. '(
' → logprob: -12.768321990966797
    7. '(s' → logprob: -14.768321990966797
    8. ' ' → logprob: -16.643321990966797
    9. '(range' → logprob: -16.768321990966797
    10. '1' → logprob: -17.018321990966797

Token 955: '.days' (ID: 118772)
  Prédit: '.days'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.days' → logprob: -0.00021521867893170565
    2. '.' → logprob: -8.750215530395508
    3. 'days' → logprob: -10.875215530395508
    4. 'self' → logprob: -11.125215530395508
    5. '.grid' → logprob: -12.000215530395508
    6. 'ays' → logprob: -12.750215530395508
    7. '.
' → logprob: -12.875215530395508
    8. '.self' → logprob: -13.250215530395508
    9. '.d' → logprob: -13.375215530395508
    10. '.day' → logprob: -13.500215530395508

Token 956: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.42098021507263184
    2. '):
' → logprob: -1.1709802150726318
    3. ')' → logprob: -3.670980215072632
    4. '():
' → logprob: -6.045980453491211
    5. '<|end|>' → logprob: -6.170980453491211
    6. '():' → logprob: -6.920980453491211
    7. '()' → logprob: -7.170980453491211
    8. '       ' → logprob: -7.670980453491211
    9. '   ' → logprob: -7.795980453491211
    10. '()):
' → logprob: -8.045980453491211

Token 957: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006099670194089413
    2. 'self' → logprob: -5.381099700927734
    3. ' self' → logprob: -7.256099700927734
    4. '
' → logprob: -8.006099700927734
    5. '       ' → logprob: -8.006099700927734
    6. '(self' → logprob: -9.756099700927734
    7. '```' → logprob: -11.006099700927734
    8. '\' → logprob: -11.506099700927734
    9. '   ' → logprob: -12.506099700927734
    10. '<|end|>' → logprob: -12.631099700927734

Token 958: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.0004891689168289304
    2. ' self' → logprob: -7.750489234924316
    3. '           ' → logprob: -9.750489234924316
    4. '       ' → logprob: -15.625489234924316
    5. '   ' → logprob: -17.50048828125
    6. '	self' → logprob: -17.75048828125
    7. '               ' → logprob: -18.25048828125
    8. '(self' → logprob: -18.37548828125
    9. '
' → logprob: -18.87548828125
    10. '[self' → logprob: -21.25048828125

Token 959: '.step' (ID: 43723)
  Prédit: '.step'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.step' → logprob: -0.00043376852408982813
    2. '.' → logprob: -7.750433921813965
    3. ' .' → logprob: -13.375433921813965
    4. 'step' → logprob: -13.625433921813965
    5. ' step' → logprob: -15.625433921813965
    6. '.Step' → logprob: -17.37543296813965
    7. '.
' → logprob: -18.12543296813965
    8. '.steps' → logprob: -18.25043296813965
    9. '	step' → logprob: -18.50043296813965
    10. '(step' → logprob: -19.37543296813965

Token 960: '()

' (ID: 5874)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 961: 'class' (ID: 1444)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 962: ' Input' (ID: 10090)
  Prédit: ' Simulation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' Simulation' → logprob: -0.16062824428081512
    2. 'Simulation' → logprob: -3.160628318786621
    3. ' Game' → logprob: -3.285628318786621
    4. ' Grid' → logprob: -4.035628318786621
    5. 'Test' → logprob: -5.285628318786621
    6. ' Simulator' → logprob: -5.410628318786621
    7. ' Coordinate' → logprob: -5.535628318786621
    8. ' Pattern' → logprob: -5.535628318786621
    9. 'Coordinate' → logprob: -5.660628318786621
    10. ' Test' → logprob: -5.785628318786621

Token 963: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: -0.8170653581619263
    2. ':' → logprob: -1.5670653581619263
    3. 'Handler' → logprob: -1.8170653581619263
    4. 'Reader' → logprob: -2.3170652389526367
    5. 'Data' → logprob: -2.9420652389526367
    6. ':
' → logprob: -4.317065238952637
    7. 'Processor' → logprob: -4.442065238952637
    8. 'Output' → logprob: -5.317065238952637
    9. '():' → logprob: -6.567065238952637
    10. 'Generator' → logprob: -6.567065238952637

Token 964: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.001516768941655755
    2. ':
' → logprob: -6.501516819000244
    3. '<|end|>' → logprob: -12.251516342163086
    4. ':def' → logprob: -12.626516342163086
    5. ' :' → logprob: -13.626516342163086
    6. ':

' → logprob: -13.751516342163086
    7. '():' → logprob: -13.751516342163086
    8. '):' → logprob: -14.501516342163086
    9. '(object' → logprob: -14.501516342163086
    10. '>:' → logprob: -14.626516342163086

Token 965: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.008710303343832493
    2. ' def' → logprob: -4.7587103843688965
    3. 'def' → logprob: -10.508709907531738
    4. '```' → logprob: -10.758709907531738
    5. ' indentation' → logprob: -11.008709907531738
    6. ' class' → logprob: -11.758709907531738
    7. '	def' → logprob: -12.258709907531738
    8. ':' → logprob: -13.008709907531738
    9. '<|end|>' → logprob: -13.008709907531738
    10. '   ' → logprob: -13.383709907531738

Token 966: ' GRID' (ID: 146530)
  Prédit: ' def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' def' → logprob: -0.3889855444431305
    2. 'def' → logprob: -1.138985514640808
    3. '@' → logprob: -6.388985633850098
    4. ' @' → logprob: -8.388985633850098
    5. '   ' → logprob: -8.513985633850098
    6. 'staticmethod' → logprob: -13.013985633850098
    7. '```' → logprob: -13.638985633850098
    8. 'class' → logprob: -14.763985633850098
    9. 'import' → logprob: -15.138985633850098
    10. 'from' → logprob: -16.01398468017578

Token 967: '_SIZE' (ID: 7347)
  Prédit: '_SIZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_SIZE' → logprob: -0.005777223501354456
    2. 'SIZE' → logprob: -5.380777359008789
    3. '3' → logprob: -7.630777359008789
    4. ' =' → logprob: -8.130777359008789
    5. '   ' → logprob: -8.880777359008789
    6. '=' → logprob: -9.255777359008789
    7. 'def' → logprob: -9.755777359008789
    8. '_LINE' → logprob: -11.130777359008789
    9. '_DIM' → logprob: -11.380777359008789
    10. '_LINES' → logprob: -11.505777359008789

Token 968: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.019465936347842216
    2. '=' → logprob: -4.019465923309326
    3. ':' → logprob: -6.644465923309326
    4. '   ' → logprob: -11.394466400146484
    5. '_SIZE' → logprob: -13.144466400146484
    6. ':int' → logprob: -14.769466400146484
    7. '  ' → logprob: -15.894466400146484
    8. ' :' → logprob: -16.144466400146484
    9. ',' → logprob: -17.394466400146484
    10. '    ' → logprob: -17.519466400146484

Token 969: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0005053732893429697
    2. ' ' → logprob: -8.125505447387695
    3. '25' → logprob: -9.375505447387695
    4. '10' → logprob: -9.625505447387695
    5. '20' → logprob: -10.875505447387695
    6. '6' → logprob: -11.250505447387695
    7. '50' → logprob: -11.875505447387695
    8. '15' → logprob: -12.500505447387695
    9. '26' → logprob: -12.500505447387695
    10. '3' → logprob: -13.000505447387695

Token 970: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.0003063838230445981
    2. '25' → logprob: -9.250306129455566
    3. '10' → logprob: -9.625306129455566
    4. '50' → logprob: -9.875306129455566
    5. '6' → logprob: -10.000306129455566
    6. '20' → logprob: -10.875306129455566
    7. ' ' → logprob: -11.625306129455566
    8. '3' → logprob: -12.000306129455566
    9. '100' → logprob: -12.625306129455566
    10. '15' → logprob: -13.250306129455566

Token 971: '
' (ID: 198)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.05142994970083237
    2. '
' → logprob: -3.0514299869537354
    3. '    
' → logprob: -5.926429748535156
    4. 'def' → logprob: -9.801429748535156
    5. ' def' → logprob: -9.926429748535156
    6. ':' → logprob: -11.051429748535156
    7. ' 
' → logprob: -11.426429748535156
    8. '<|end|>' → logprob: -12.051429748535156
    9. '```' → logprob: -12.051429748535156
    10. ',' → logprob: -12.301429748535156

Token 972: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0002448893792461604
    2. ' def' → logprob: -9.125245094299316
    3. '
' → logprob: -9.375245094299316
    4. '    
' → logprob: -10.500245094299316
    5. 'def' → logprob: -10.875245094299316
    6. ' indentation' → logprob: -13.500245094299316
    7. '	def' → logprob: -13.750245094299316
    8. '```' → logprob: -15.000245094299316
    9. 'class' → logprob: -15.375245094299316
    10. 'import' → logprob: -15.500245094299316

Token 973: ' def' (ID: 1056)
  Prédit: '@'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '@' → logprob: -0.6556999683380127
    2. 'def' (adapté à ' def') → logprob: -0.7806999683380127
    3. 'B' → logprob: -4.280699729919434
    4. 'AL' → logprob: -5.405699729919434
    5. 'RULE' → logprob: -6.155699729919434
    6. ' def' → logprob: -7.655699729919434
    7. 'DEFAULT' → logprob: -7.655699729919434
    8. '   ' → logprob: -8.030699729919434
    9. 'VALID' → logprob: -8.655699729919434
    10. ' @' → logprob: -8.655699729919434

Token 974: ' __' (ID: 2516)
  Prédit: ' parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' parse' → logprob: -0.27236801385879517
    2. ' def' → logprob: -1.5223679542541504
    3. 'parse' → logprob: -4.27236795425415
    4. 'def' → logprob: -5.27236795425415
    5. ' __' → logprob: -7.02236795425415
    6. ' read' → logprob: -9.522368431091309
    7. 'staticmethod' → logprob: -9.897368431091309
    8. ' static' → logprob: -10.772368431091309
    9. ' decode' → logprob: -10.772368431091309
    10. '__' → logprob: -10.772368431091309

Token 975: 'init' (ID: 3287)
  Prédit: 'init'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'init' → logprob: 0.0
    2. 'ini' → logprob: -19.125
    3. 'next' → logprob: -19.125
    4. ' init' → logprob: -19.25
    5. 'def' → logprob: -19.75
    6. 'inite' → logprob: -20.25
    7. 'int' → logprob: -20.25
    8. 'new' → logprob: -21.125
    9. 'call' → logprob: -22.0
    10. 'in' → logprob: -22.5

Token 976: '__(' (ID: 8241)
  Prédit: '__('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__(' → logprob: -0.0005871102912351489
    2. '(self' → logprob: -7.625586986541748
    3. '__(
' → logprob: -9.750587463378906
    4. '__' → logprob: -10.250587463378906
    5. '(' → logprob: -12.500587463378906
    6. '__((' → logprob: -14.750587463378906
    7. '__('' → logprob: -15.000587463378906
    8. '__(*' → logprob: -15.250587463378906
    9. 'self' → logprob: -15.375587463378906
    10. '_(' → logprob: -15.500587463378906

Token 977: 'self' (ID: 1156)
  Prédit: 'self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -3.6312321753939614e-05
    2. ' self' → logprob: -10.250036239624023
    3. ')' → logprob: -14.375036239624023
    4. '
' → logprob: -15.500036239624023
    5. ',' → logprob: -16.750036239624023
    6. '   ' → logprob: -18.250036239624023
    7. 'file' → logprob: -18.500036239624023
    8. '(self' → logprob: -18.625036239624023
    9. '),' → logprob: -18.875036239624023
    10. 'raw' → logprob: -19.375036239624023

Token 978: '):
' (ID: 1883)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.6415477991104126
    2. ',' → logprob: -0.7665477991104126
    3. '(self' → logprob: -4.891547679901123
    4. '__(' → logprob: -7.141547679901123
    5. ' self' → logprob: -8.766548156738281
    6. ',self' → logprob: -8.766548156738281
    7. ')' → logprob: -9.141548156738281
    8. '   ' → logprob: -9.516548156738281
    9. '):
' → logprob: -10.766548156738281
    10. ' (' → logprob: -11.141548156738281

Token 979: '       ' (ID: 309)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.023367654532194138
    2. ' self' → logprob: -3.7733676433563232
    3. '   ' → logprob: -9.523367881774902
    4. '       ' → logprob: -10.898367881774902
    5. '
' → logprob: -11.398367881774902
    6. 'def' → logprob: -11.773367881774902
    7. '(self' → logprob: -12.148367881774902
    8. 'input' → logprob: -12.898367881774902
    9. '```' → logprob: -13.773367881774902
    10. ' def' → logprob: -14.273367881774902

Token 980: ' self' (ID: 1051)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'self' (adapté à ' self') → logprob: -0.011610052548348904
    2. 'pass' → logprob: -4.51161003112793
    3. '       ' → logprob: -7.63661003112793
    4. ' self' → logprob: -10.01161003112793
    5. 'import' → logprob: -10.51161003112793
    6. '   ' → logprob: -12.26161003112793
    7. ' pass' → logprob: -13.38661003112793
    8. '
' → logprob: -14.13661003112793
    9. 'def' → logprob: -16.26161003112793
    10. '(self' → logprob: -16.76161003112793

Token 981: '.test' (ID: 9859)
  Prédit: '.input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.input' → logprob: -1.5487877130508423
    2. '.rules' → logprob: -1.5487877130508423
    3. '.lines' → logprob: -1.5487877130508423
    4. '.birth' → logprob: -1.7987877130508423
    5. '.grid' → logprob: -2.2987875938415527
    6. '.initial' → logprob: -3.6737875938415527
    7. '.buffer' → logprob: -3.7987875938415527
    8. '.data' → logprob: -4.048787593841553
    9. '.b' → logprob: -4.298787593841553
    10. '._' → logprob: -5.423787593841553

Token 982: '_cases' (ID: 115457)
  Prédit: '_cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cases' → logprob: -0.4728931188583374
    2. '_input' → logprob: -1.3478931188583374
    3. 's' → logprob: -3.097893238067627
    4. '_inputs' → logprob: -3.722893238067627
    5. '_case' → logprob: -4.097893238067627
    6. '_data' → logprob: -4.347893238067627
    7. '_name' → logprob: -5.222893238067627
    8. 'ed' → logprob: -6.097893238067627
    9. 'cases' → logprob: -6.472893238067627
    10. '_' → logprob: -6.472893238067627

Token 983: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.31392529606819153
    2. ' =' → logprob: -1.3139252662658691
    3. ':' → logprob: -7.688925266265869
    4. '=[]' → logprob: -8.563925743103027
    5. '   ' → logprob: -11.688925743103027
    6. '=[]
' → logprob: -13.563925743103027
    7. '<|end|>' → logprob: -13.563925743103027
    8. '  ' → logprob: -14.313925743103027
    9. '=None' → logprob: -14.438925743103027
    10. '	' → logprob: -14.438925743103027

Token 984: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '[]' → logprob: -2.696889623621246e-06
    2. ' []' → logprob: -13.50000286102295
    3. '[]
' → logprob: -14.12500286102295
    4. '[' → logprob: -15.87500286102295
    5. '[]}' → logprob: -15.87500286102295
    6. '[]

' → logprob: -15.87500286102295
    7. 'list' → logprob: -16.875001907348633
    8. '[]"' → logprob: -17.625001907348633
    9. '[])' → logprob: -17.625001907348633
    10. '[],' → logprob: -18.375001907348633

Token 985: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.017873404547572136
    2. '
' → logprob: -4.267873287200928
    3. '<|end|>' → logprob: -6.392873287200928
    4. ' def' → logprob: -6.517873287200928
    5. 'def' → logprob: -8.392873764038086
    6. '    
' → logprob: -8.642873764038086
    7. '<|end|>' → logprob: -9.517873764038086
    8. '       ' → logprob: -10.517873764038086
    9. ' ' → logprob: -11.267873764038086
    10. '	def' → logprob: -11.517873764038086

Token 986: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -0.20849443972110748
    2. ' def' → logprob: -1.7084944248199463
    3. '   ' → logprob: -4.958494663238525
    4. '	def' → logprob: -10.833494186401367
    5. '
' → logprob: -11.333494186401367
    6. '    
' → logprob: -15.083494186401367
    7. 'import' → logprob: -15.583494186401367
    8. ' ' → logprob: -15.833494186401367
    9. '<|end|>' → logprob: -17.208494186401367
    10. ' 
' → logprob: -17.458494186401367

Token 987: ' parse' (ID: 8420)
  Prédit: 'parse'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parse' → logprob: -0.01486996654421091
    2. ' parse' → logprob: -4.2648701667785645
    3. 'read' → logprob: -7.6398701667785645
    4. 'add' → logprob: -8.514869689941406
    5. ' read' → logprob: -11.514869689941406
    6. 'load' → logprob: -11.764869689941406
    7. ' add' → logprob: -12.389869689941406
    8. 'process' → logprob: -13.639869689941406
    9. 'run' → logprob: -14.264869689941406
    10. 'def' → logprob: -14.764869689941406

Token 988: '_input' (ID: 12507)
  Prédit: '(self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0039403135888278484
    2. '_line' → logprob: -6.128940105438232
    3. '(' → logprob: -6.378940105438232
    4. 'self' → logprob: -10.00394058227539
    5. '_input' → logprob: -12.00394058227539
    6. 'line' → logprob: -13.37894058227539
    7. '_(' → logprob: -13.75394058227539
    8. '_' → logprob: -14.50394058227539
    9. '_cell' → logprob: -14.62894058227539
    10. '(
' → logprob: -14.75394058227539

Token 989: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0620490238070488
    2. '(' → logprob: -2.81204891204834
    3. ' (' → logprob: -10.06204891204834
    4. 'self' → logprob: -10.18704891204834
    5. '(
' → logprob: -14.31204891204834
    6. '()' → logprob: -15.31204891204834
    7. '   ' → logprob: -16.562049865722656
    8. ' self' → logprob: -17.312049865722656
    9. ' ' → logprob: -17.437049865722656
    10. '```' → logprob: -17.687049865722656

Token 990: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.13392210006713867
    2. 'self' → logprob: -2.1339221000671387
    3. '):' → logprob: -5.008922100067139
    4. ')' → logprob: -9.008922576904297
    5. '):
' → logprob: -9.008922576904297
    6. ' ,' → logprob: -11.133922576904297
    7. ' self' → logprob: -11.383922576904297
    8. '(self' → logprob: -12.258922576904297
    9. ',input' → logprob: -12.508922576904297
    10. ',self' → logprob: -12.883922576904297

Token 991: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -9.29340603761375e-05
    2. 'self' → logprob: -10.125092506408691
    3. 'import' → logprob: -10.875092506408691
    4. ' self' → logprob: -11.000092506408691
    5. '   ' → logprob: -12.250092506408691
    6. '
' → logprob: -12.500092506408691
    7. ' lines' → logprob: -12.625092506408691
    8. '(self' → logprob: -13.125092506408691
    9. '```' → logprob: -13.625092506408691
    10. '           ' → logprob: -15.000092506408691

Token 992: ' case' (ID: 1890)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.5934813618659973
    2. ' import' → logprob: -1.7184813022613525
    3. ' n' → logprob: -1.9684813022613525
    4. ' lines' → logprob: -2.4684813022613525
    5. 'n' → logprob: -3.3434813022613525
    6. 'lines' → logprob: -5.968481540679932
    7. ' input' → logprob: -6.218481540679932
    8. 'num' → logprob: -6.468481540679932
    9. ' num' → logprob: -7.093481540679932
    10. 'input' → logprob: -7.843481540679932

Token 993: '_id' (ID: 1537)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.020095547661185265
    2. '_lines' → logprob: -4.520095348358154
    3. '_count' → logprob: -5.145095348358154
    4. '_line' → logprob: -6.770095348358154
    5. ' =' → logprob: -7.145095348358154
    6. '_data' → logprob: -8.270095825195312
    7. '_' → logprob: -8.520095825195312
    8. '_text' → logprob: -9.020095825195312
    9. '_s' → logprob: -9.020095825195312
    10. '_input' → logprob: -9.520095825195312

Token 994: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.05015876516699791
    2. 'x' → logprob: -3.550158739089966
    3. '=' → logprob: -4.300158977508545
    4. '_line' → logprob: -5.425158977508545
    5. ':' → logprob: -6.425158977508545
    6. '_' → logprob: -8.800158500671387
    7. ',' → logprob: -9.425158500671387
    8. ' ' → logprob: -9.675158500671387
    9. 'ex' → logprob: -9.800158500671387
    10. 's' → logprob: -9.925158500671387

Token 995: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.022021304816007614
    2. '1' → logprob: -3.8970212936401367
    3. 'int' → logprob: -6.772021293640137
    4. ' ' → logprob: -8.022021293640137
    5. ' int' → logprob: -12.897021293640137
    6. '""' → logprob: -14.147021293640137
    7. 'input' → logprob: -14.397021293640137
    8. 'None' → logprob: -14.647021293640137
    9. '"' → logprob: -15.647021293640137
    10. '   ' → logprob: -15.897021293640137

Token 996: '1' (ID: 16)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.021797379478812218
    2. '1' → logprob: -4.271797180175781
    3. 'int' → logprob: -4.896797180175781
    4. ' ' → logprob: -9.646797180175781
    5. 'input' → logprob: -9.646797180175781
    6. ' int' → logprob: -12.896797180175781
    7. '""' → logprob: -13.646797180175781
    8. 'None' → logprob: -14.646797180175781
    9. '''' → logprob: -14.771797180175781
    10. '"' → logprob: -15.771797180175781

Token 997: '
' (ID: 198)
  Prédit: '
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.0013902351493015885
    2. '       ' → logprob: -7.37639045715332
    3. '        
' → logprob: -8.12639045715332
    4. ':' → logprob: -8.75139045715332
    5. 'while' → logprob: -9.12639045715332
    6. '
' → logprob: -10.12639045715332
    7. ' while' → logprob: -10.75139045715332
    8. '<|end|>' → logprob: -10.75139045715332
    9. '  
' → logprob: -11.00139045715332
    10. '    
' → logprob: -11.12639045715332

Token 998: '       ' (ID: 309)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.1622701734304428
    2. '       ' → logprob: -2.1622700691223145
    3. 'while' → logprob: -3.9122700691223145
    4. ' while' → logprob: -4.9122700691223145
    5. '<|end|>' → logprob: -6.5372700691223145
    6. '        
' → logprob: -6.6622700691223145
    7. ':' → logprob: -7.1622700691223145
    8. '	while' → logprob: -7.2872700691223145
    9. '```' → logprob: -8.037270545959473
    10. ',' → logprob: -8.162270545959473

Token 999: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.13862153887748718
    2. ' while' → logprob: -2.3886215686798096
    3. 'import' → logprob: -3.3886215686798096
    4. 'try' → logprob: -5.6386213302612305
    5. ' import' → logprob: -8.76362133026123
    6. '       ' → logprob: -8.76362133026123
    7. ' try' → logprob: -10.01362133026123
    8. 'for' → logprob: -11.38862133026123
    9. ' for' → logprob: -13.26362133026123
    10. '```' → logprob: -13.38862133026123

Token 1000: ' True' (ID: 6432)
  Prédit: 'True'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'True' → logprob: -0.10103282332420349
    2. ' True' → logprob: -2.3510327339172363
    3. '(True' → logprob: -7.101032733917236
    4. 'line' → logprob: -14.601033210754395
    5. 'true' → logprob: -14.601033210754395
    6. '(' → logprob: -14.851033210754395
    7. '
' → logprob: -16.226032257080078
    8. '   ' → logprob: -16.226032257080078
    9. '=True' → logprob: -16.601032257080078
    10. '1' → logprob: -16.726032257080078

Token 1001: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.022242730483412743
    2. ':
' → logprob: -3.897242784500122
    3. '           ' → logprob: -6.647242546081543
    4. ',' → logprob: -8.022242546081543
    5. '():' → logprob: -11.272242546081543
    6. '       ' → logprob: -11.522242546081543
    7. '():
' → logprob: -11.772242546081543
    8. ' :' → logprob: -12.147242546081543
    9. '.' → logprob: -12.147242546081543
    10. '<|end|>' → logprob: -12.397242546081543

Token 1002: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.005091918166726828
    2. ' line' → logprob: -6.380092144012451
    3. 'try' → logprob: -6.505092144012451
    4. ' try' → logprob: -6.505092144012451
    5. '   ' → logprob: -8.005091667175293
    6. 'line' → logprob: -10.005091667175293
    7. '```' → logprob: -11.630091667175293
    8. '	line' → logprob: -14.130091667175293
    9. 'input' → logprob: -14.380091667175293
    10. '       ' → logprob: -14.505091667175293

Token 1003: ' N' (ID: 478)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.06434079259634018
    2. 'try' → logprob: -2.814340829849243
    3. ' line' → logprob: -6.314340591430664
    4. ' try' → logprob: -8.439340591430664
    5. 'n' → logprob: -8.814340591430664
    6. '           ' → logprob: -9.314340591430664
    7. '   ' → logprob: -9.314340591430664
    8. 'lines' → logprob: -12.189340591430664
    9. 'raw' → logprob: -12.439340591430664
    10. 's' → logprob: -13.189340591430664

Token 1004: '_line' (ID: 14418)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.07924479246139526
    2. '=' → logprob: -2.57924485206604
    3. '_line' → logprob: -9.204244613647461
    4. '=input' → logprob: -9.204244613647461
    5. '=line' → logprob: -9.454244613647461
    6. '=int' → logprob: -10.579244613647461
    7. 'line' → logprob: -11.079244613647461
    8. 'input' → logprob: -11.704244613647461
    9. '    ' → logprob: -12.454244613647461
    10. '_input' → logprob: -12.454244613647461

Token 1005: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.1602250337600708
    2. ' =' → logprob: -1.9102250337600708
    3. '=line' → logprob: -14.660224914550781
    4. '=input' → logprob: -15.410224914550781
    5. ':' → logprob: -16.66022491455078
    6. '.' → logprob: -16.78522491455078
    7. ' ' → logprob: -17.66022491455078
    8. '＝' → logprob: -18.28522491455078
    9. '.=' → logprob: -18.53522491455078
    10. 's' → logprob: -18.78522491455078

Token 1006: ' ''
' (ID: 25366)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.011047935113310814
    2. ' input' → logprob: -4.511047840118408
    3. '(input' → logprob: -16.51104736328125
    4. '=input' → logprob: -18.13604736328125
    5. 'self' → logprob: -20.13604736328125
    6. '	input' → logprob: -20.51104736328125
    7. '```' → logprob: -21.01104736328125
    8. '<input' → logprob: -21.13604736328125
    9. 'inp' → logprob: -21.38604736328125
    10. '
' → logprob: -21.88604736328125

Token 1007: '           ' (ID: 352)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.2346838414669037
    2. '=' → logprob: -1.609683871269226
    3. '           ' → logprob: -4.734683990478516
    4. 'while' → logprob: -8.734683990478516
    5. '=line' → logprob: -9.234683990478516
    6. 'N' → logprob: -9.859683990478516
    7. 'try' → logprob: -9.859683990478516
    8. '=input' → logprob: -10.984683990478516
    9. ' while' → logprob: -11.109683990478516
    10. '               ' → logprob: -11.859683990478516

Token 1008: ' while' (ID: 2049)
  Prédit: 'try'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'try' → logprob: -0.08727794885635376
    2. 'N' → logprob: -2.587277889251709
    3. 'while' (adapté à ' while') → logprob: -4.837277889251709
    4. ' try' → logprob: -7.962277889251709
    5. '           ' → logprob: -9.712278366088867
    6. ' while' → logprob: -12.087278366088867
    7. 'line' → logprob: -12.462278366088867
    8. ' N' → logprob: -12.587278366088867
    9. '
' → logprob: -13.837278366088867
    10. '   ' → logprob: -14.837278366088867

Token 1009: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.012966678477823734
    2. 'True' → logprob: -4.637966632843018
    3. ' N' → logprob: -7.137966632843018
    4. 'not' → logprob: -7.262966632843018
    5. ' True' → logprob: -7.637966632843018
    6. 'len' → logprob: -7.887966632843018
    7. '(True' → logprob: -8.137967109680176
    8. ' not' → logprob: -8.262967109680176
    9. '(N' → logprob: -8.262967109680176
    10. '(len' → logprob: -10.887967109680176

Token 1010: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.008088490925729275
    2. ':=' → logprob: -5.6330885887146
    3. '=' → logprob: -6.1330885887146
    4. 'N' → logprob: -7.3830885887146
    5. ' =' → logprob: -7.6330885887146
    6. 'line' → logprob: -7.8830885887146
    7. '==' → logprob: -8.883088111877441
    8. ' :=' → logprob: -9.008088111877441
    9. '=N' → logprob: -9.008088111877441
    10. '```' → logprob: -9.383088111877441

Token 1011: '.strip' (ID: 40613)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.3581468164920807
    2. '.strip' → logprob: -1.7331467866897583
    3. ':=' → logprob: -2.483146905899048
    4. '=' → logprob: -3.233146905899048
    5. 'strip' → logprob: -7.608146667480469
    6. '().' → logprob: -7.858146667480469
    7. ' ==' → logprob: -8.608146667480469
    8. '()==' → logprob: -9.358146667480469
    9. '.' → logprob: -9.608146667480469
    10. '```' → logprob: -9.733146667480469

Token 1012: '()' (ID: 416)
  Prédit: '()'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.09780179709196091
    2. '()==' → logprob: -2.847801685333252
    3. '==' → logprob: -3.347801685333252
    4. ' ==' → logprob: -10.59780216217041
    5. '()!=' → logprob: -12.47280216217041
    6. '=' → logprob: -12.47280216217041
    7. '```' → logprob: -12.47280216217041
    8. '===' → logprob: -14.34780216217041
    9. '():' → logprob: -15.09780216217041
    10. '()=="' → logprob: -15.34780216217041

Token 1013: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0022085432428866625
    2. '()==' → logprob: -6.252208709716797
    3. ' ==' → logprob: -8.627208709716797
    4. '=' → logprob: -9.377208709716797
    5. '()' → logprob: -11.127208709716797
    6. '===' → logprob: -14.252208709716797
    7. '!=' → logprob: -15.252208709716797
    8. '==
' → logprob: -15.627208709716797
    9. ')==' → logprob: -16.252208709716797
    10. '=='' → logprob: -16.502208709716797

Token 1014: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.018156379461288452
    2. ''' → logprob: -4.0181565284729
    3. ''',' → logprob: -12.893156051635742
    4. '''
' → logprob: -13.518156051635742
    5. '""' → logprob: -14.143156051635742
    6. ' '':
' → logprob: -14.143156051635742
    7. '"":' → logprob: -14.518156051635742
    8. '''.' → logprob: -14.643156051635742
    9. ''''' → logprob: -15.768156051635742
    10. '':' → logprob: -17.018156051635742

Token 1015: '               ' (ID: 506)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.01076116319745779
    2. '               ' → logprob: -5.260761260986328
    3. ':
' → logprob: -6.385761260986328
    4. ':' → logprob: -6.885761260986328
    5. ' N' → logprob: -6.885761260986328
    6. ' and' → logprob: -7.260761260986328
    7. 'and' → logprob: -7.385761260986328
    8. '           ' → logprob: -8.385761260986328
    9. '                   ' → logprob: -9.760761260986328
    10. '   ' → logprob: -9.885761260986328

Token 1016: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.0009282566024921834
    2. 'try' → logprob: -7.0009284019470215
    3. 'line' → logprob: -11.375927925109863
    4. '
' → logprob: -12.750927925109863
    5. ' N' → logprob: -14.125927925109863
    6. 'import' → logprob: -14.750927925109863
    7. 'n' → logprob: -14.750927925109863
    8. '           ' → logprob: -15.500927925109863
    9. '   ' → logprob: -15.750927925109863
    10. '                   ' → logprob: -16.00092887878418

Token 1017: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0001907855912577361
    2. '=' → logprob: -8.750190734863281
    3. '=_' → logprob: -11.750190734863281
    4. ' =' → logprob: -11.750190734863281
    5. '_LINE' → logprob: -12.875190734863281
    6. 'Line' → logprob: -13.000190734863281
    7. '=N' → logprob: -13.000190734863281
    8. '=line' → logprob: -13.125190734863281
    9. '_' → logprob: -13.250190734863281
    10. '_=' → logprob: -13.875190734863281

Token 1018: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.06208084523677826
    2. ' =' → logprob: -2.8120808601379395
    3. '=N' → logprob: -9.187080383300781
    4. '=line' → logprob: -12.187080383300781
    5. 'N' → logprob: -12.562080383300781
    6. '=input' → logprob: -13.812080383300781
    7. '=
' → logprob: -15.312080383300781
    8. ' N' → logprob: -15.562080383300781
    9. 'line' → logprob: -16.18708038330078
    10. 'import' → logprob: -16.31208038330078

Token 1019: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -7.493430894101039e-05
    2. ' input' → logprob: -9.500075340270996
    3. '(input' → logprob: -20.25007438659668
    4. 'self' → logprob: -20.75007438659668
    5. '=input' → logprob: -20.87507438659668
    6. '
' → logprob: -22.87507438659668
    7. '	input' → logprob: -23.37507438659668
    8. 'import' → logprob: -23.62507438659668
    9. '<input' → logprob: -23.87507438659668
    10. 'open' → logprob: -23.87507438659668

Token 1020: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0008153468370437622
    2. '().' → logprob: -7.875815391540527
    3. '()
' → logprob: -7.875815391540527
    4. '(' → logprob: -10.000815391540527
    5. '();' → logprob: -13.250815391540527
    6. '())' → logprob: -13.375815391540527
    7. '()`' → logprob: -13.375815391540527
    8. '(N' → logprob: -14.000815391540527
    9. '()

' → logprob: -14.125815391540527
    10. '<|end|>' → logprob: -14.500815391540527

Token 1021: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.023310350254178047
    2. '               ' → logprob: -3.773310422897339
    3. '       ' → logprob: -10.648310661315918
    4. '                   ' → logprob: -11.398310661315918
    5. '<|end|>' → logprob: -11.898310661315918
    6. ',' → logprob: -12.023310661315918
    7. ' if' → logprob: -13.023310661315918
    8. '          ' → logprob: -13.023310661315918
    9. '<|end|>' → logprob: -13.023310661315918
    10. '   ' → logprob: -13.773310661315918

Token 1022: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' (adapté à ' N') → logprob: -0.10136991739273071
    2. 'if' → logprob: -2.726369857788086
    3. 'try' → logprob: -3.976369857788086
    4. '           ' → logprob: -4.476369857788086
    5. ' if' → logprob: -7.851369857788086
    6. 'n' → logprob: -7.976369857788086
    7. 'num' → logprob: -10.476369857788086
    8. ' N' → logprob: -10.601369857788086
    9. ' try' → logprob: -10.726369857788086
    10. '       ' → logprob: -12.601369857788086

Token 1023: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.020777780562639236
    2. '=' → logprob: -3.895777702331543
    3. '=int' → logprob: -8.520777702331543
    4. '_tokens' → logprob: -11.270777702331543
    5. '_token' → logprob: -12.020777702331543
    6. 'int' → logprob: -12.520777702331543
    7. ':' → logprob: -13.020777702331543
    8. ' ' → logprob: -13.020777702331543
    9. 'token' → logprob: -13.645777702331543
    10. 'tokens' → logprob: -13.645777702331543

Token 1024: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0031777136027812958
    2. ' int' → logprob: -5.753177642822266
    3. '(int' → logprob: -20.503177642822266
    4. 'N' → logprob: -20.878177642822266
    5. '=int' → logprob: -22.003177642822266
    6. ' N' → logprob: -22.253177642822266
    7. '[int' → logprob: -22.628177642822266
    8. '	int' → logprob: -23.503177642822266
    9. '<int' → logprob: -24.003177642822266
    10. '   ' → logprob: -24.128177642822266

Token 1025: '(N' (ID: 10564)
  Prédit: '(N'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(N' → logprob: -2.1008713702030946e-06
    2. '(' → logprob: -13.250001907348633
    3. 'N' → logprob: -15.125001907348633
    4. '(
' → logprob: -17.250001907348633
    5. ' (' → logprob: -19.125001907348633
    6. '((' → logprob: -19.375001907348633
    7. ' N' → logprob: -21.250001907348633
    8. '(n' → logprob: -21.750001907348633
    9. '(T' → logprob: -22.000001907348633
    10. '(

' → logprob: -22.375001907348633

Token 1026: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0008619115105830133
    2. ')' → logprob: -7.625862121582031
    3. '(N' → logprob: -8.625862121582031
    4. '_LINE' → logprob: -9.000862121582031
    5. '(' → logprob: -10.875862121582031
    6. 'Line' → logprob: -11.125862121582031
    7. ' )' → logprob: -11.750862121582031
    8. '   ' → logprob: -12.125862121582031
    9. ')
' → logprob: -12.875862121582031
    10. 'line' → logprob: -13.000862121582031

Token 1027: '.strip' (ID: 40613)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0003710894088726491
    2. ')
' → logprob: -8.125370979309082
    3. '())' → logprob: -9.750370979309082
    4. ' )' → logprob: -11.625370979309082
    5. '()' → logprob: -12.375370979309082
    6. '(' → logprob: -13.875370979309082
    7. '[' → logprob: -14.750370979309082
    8. '   ' → logprob: -14.875370979309082
    9. '       ' → logprob: -15.375370979309082
    10. '.strip' → logprob: -15.500370979309082

Token 1028: '())
' (ID: 4574)
  Prédit: '())'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '())' → logprob: -0.048954080790281296
    2. ')' → logprob: -3.0489540100097656
    3. '()' → logprob: -8.173954010009766
    4. '())
' → logprob: -9.423954010009766
    5. ')
' → logprob: -13.548954010009766
    6. ' )' → logprob: -13.923954010009766
    7. ' ())' → logprob: -13.923954010009766
    8. '()
' → logprob: -15.048954010009766
    9. '(' → logprob: -15.048954010009766
    10. '()))' → logprob: -16.798954010009766

Token 1029: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.06266816705465317
    2. 'if' → logprob: -2.8126680850982666
    3. ' if' → logprob: -7.312668323516846
    4. '       ' → logprob: -10.562667846679688
    5. '               ' → logprob: -13.437667846679688
    6. '   ' → logprob: -13.437667846679688
    7. '          ' → logprob: -13.437667846679688
    8. '<|end|>' → logprob: -14.187667846679688
    9. '                   ' → logprob: -14.562667846679688
    10. '         ' → logprob: -15.062667846679688

Token 1030: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.00023107275774236768
    2. '           ' → logprob: -8.50023078918457
    3. ' if' → logprob: -10.50023078918457
    4. 'If' → logprob: -16.87523078918457
    5. '       ' → logprob: -18.25023078918457
    6. '               ' → logprob: -19.75023078918457
    7. ';if' → logprob: -20.12523078918457
    8. '```' → logprob: -20.37523078918457
    9. '	if' → logprob: -20.75023078918457
    10. '
' → logprob: -20.75023078918457

Token 1031: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.005233763717114925
    2. ' N' → logprob: -5.2552337646484375
    3. '0' → logprob: -18.505233764648438
    4. ' ' → logprob: -18.880233764648438
    5. ' ' → logprob: -19.755233764648438
    6. '	N' → logprob: -20.255233764648438
    7. ' not' → logprob: -20.880233764648438
    8. '   ' → logprob: -21.255233764648438
    9. 'n' → logprob: -21.630233764648438
    10. '
' → logprob: -21.630233764648438

Token 1032: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.6932047009468079
    2. ' ==' → logprob: -0.6932047009468079
    3. '<=' → logprob: -10.818204879760742
    4. '=' → logprob: -11.068204879760742
    5. ' <=' → logprob: -12.068204879760742
    6. '===' → logprob: -12.568204879760742
    7. ')==' → logprob: -13.068204879760742
    8. ' ' → logprob: -13.068204879760742
    9. '0' → logprob: -13.193204879760742
    10. '()==' → logprob: -13.318204879760742

Token 1033: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -5.240481914370321e-05
    2. ' ' → logprob: -9.875052452087402
    3. '-' → logprob: -14.000052452087402
    4. ' -' → logprob: -17.375051498413086
    5. '   ' → logprob: -18.375051498413086
    6. '=' → logprob: -20.500051498413086
    7. '  ' → logprob: -20.750051498413086
    8. '00' → logprob: -20.875051498413086
    9. '1' → logprob: -21.000051498413086
    10. '000' → logprob: -21.500051498413086

Token 1034: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.635164754698053e-05
    2. '-' → logprob: -9.750066757202148
    3. ' ' → logprob: -11.750066757202148
    4. ' -' → logprob: -16.12506675720215
    5. '00' → logprob: -19.25006675720215
    6. '1' → logprob: -19.37506675720215
    7. '=' → logprob: -19.37506675720215
    8. '   ' → logprob: -19.62506675720215
    9. '```' → logprob: -20.00006675720215
    10. '#' → logprob: -20.12506675720215

Token 1035: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.18556369841098785
    2. ':
' → logprob: -1.8105636835098267
    3. '               ' → logprob: -5.185563564300537
    4. '           ' → logprob: -8.685564041137695
    5. ':return' → logprob: -10.685564041137695
    6. '   ' → logprob: -13.060564041137695
    7. '       ' → logprob: -13.310564041137695
    8. ',' → logprob: -13.435564041137695
    9. '                   ' → logprob: -13.685564041137695
    10. '.' → logprob: -13.810564041137695

Token 1036: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -5.741137283621356e-05
    2. '           ' → logprob: -10.500057220458984
    3. '                   ' → logprob: -11.500057220458984
    4. '              ' → logprob: -12.375057220458984
    5. '	           ' → logprob: -12.375057220458984
    6. ' break' → logprob: -13.375057220458984
    7. '
' → logprob: -13.375057220458984
    8. ':' → logprob: -13.500057220458984
    9. '   ' → logprob: -13.625057220458984
    10. '                ' → logprob: -13.875057220458984

Token 1037: ' break' (ID: 2338)
  Prédit: 'break'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'break' (adapté à ' break') → logprob: -0.01574246771633625
    2. '               ' → logprob: -5.015742301940918
    3. ' break' → logprob: -5.015742301940918
    4. 'return' → logprob: -6.140742301940918
    5. '	break' → logprob: -8.640742301940918
    6. '                   ' → logprob: -11.140742301940918
    7. '_break' → logprob: -12.265742301940918
    8. ' return' → logprob: -13.390742301940918
    9. '           ' → logprob: -14.515742301940918
    10. '-break' → logprob: -14.640742301940918

Token 1038: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0006377388490363955
    2. '
' → logprob: -8.000638008117676
    3. '            
' → logprob: -8.750638008117676
    4. '<|end|>' → logprob: -9.125638008117676
    5. '<|end|>' → logprob: -12.000638008117676
    6. '          ' → logprob: -12.125638008117676
    7. '       ' → logprob: -12.500638008117676
    8. '            ' → logprob: -12.875638008117676
    9. ',' → logprob: -13.125638008117676
    10. '    
' → logprob: -13.625638008117676

Token 1039: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0022179381921887398
    2. '
' → logprob: -6.127217769622803
    3. '            
' → logprob: -11.127218246459961
    4. '       ' → logprob: -11.877218246459961
    5. '               ' → logprob: -13.627218246459961
    6. '          ' → logprob: -13.877218246459961
    7. '   ' → logprob: -14.002218246459961
    8. 'import' → logprob: -14.002218246459961
    9. 'n' → logprob: -14.127218246459961
    10. '```' → logprob: -14.502218246459961

Token 1040: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' (adapté à ' initial') → logprob: -0.4370608329772949
    2. 'birth' → logprob: -1.687060832977295
    3. 'alive' → logprob: -2.812060832977295
    4. 'coords' → logprob: -3.187060832977295
    5. 'rules' → logprob: -3.562060832977295
    6. '           ' → logprob: -4.937060832977295
    7. 'live' → logprob: -5.187060832977295
    8. 'born' → logprob: -5.437060832977295
    9. 'coordinates' → logprob: -5.437060832977295
    10. 'grid' → logprob: -5.562060832977295

Token 1041: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -0.1419183760881424
    2. '_' → logprob: -3.016918420791626
    3. '_cells' → logprob: -3.016918420791626
    4. '_alive' → logprob: -3.891918420791626
    5. '_coords' → logprob: -4.766918182373047
    6. '_coordinates' → logprob: -5.891918182373047
    7. '_state' → logprob: -6.766918182373047
    8. '_positions' → logprob: -7.891918182373047
    9. '_lines' → logprob: -7.891918182373047
    10. '_states' → logprob: -8.391918182373047

Token 1042: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.12693440914154053
    2. '=' → logprob: -2.12693452835083
    3. ':' → logprob: -12.251934051513672
    4. ' ' → logprob: -14.876934051513672
    5. '=[]' → logprob: -15.126934051513672
    6. ',' → logprob: -15.251934051513672
    7. '   ' → logprob: -16.001934051513672
    8. '       ' → logprob: -16.126934051513672
    9. '        ' → logprob: -16.626934051513672
    10. '.' → logprob: -16.876934051513672

Token 1043: ' Grid' (ID: 18087)
  Prédit: 'Grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Grid' → logprob: -0.002476135268807411
    2. ' Grid' → logprob: -6.002476215362549
    3. '	Grid' → logprob: -15.12747573852539
    4. '(Grid' → logprob: -16.50247573852539
    5. '<Grid' → logprob: -18.00247573852539
    6. 'Graph' → logprob: -19.25247573852539
    7. '.Grid' → logprob: -19.50247573852539
    8. 'Gr' → logprob: -19.50247573852539
    9. 'grid' → logprob: -20.00247573852539
    10. '   ' → logprob: -20.00247573852539

Token 1044: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -5.512236498361744e-07
    2. '(Grid' → logprob: -15.000000953674316
    3. 'Grid' → logprob: -16.625
    4. '```' → logprob: -17.0
    5. '(' → logprob: -17.625
    6. '   ' → logprob: -19.625
    7. '
' → logprob: -20.5
    8. ' ' → logprob: -20.5
    9. '<Grid' → logprob: -20.75
    10. 'Input' → logprob: -21.25

Token 1045: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0031777136027812958
    2. '3' → logprob: -5.753177642822266
    3. 'd' → logprob: -18.003177642822266
    4. '   ' → logprob: -18.253177642822266
    5. ' D' → logprob: -19.253177642822266
    6. '[' → logprob: -19.878177642822266
    7. '```' → logprob: -20.253177642822266
    8. '  ' → logprob: -20.378177642822266
    9. ' ' → logprob: -20.378177642822266
    10. '
' → logprob: -20.503177642822266

Token 1046: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.0020972066558897495
    2. '(Input' → logprob: -6.252097129821777
    3. 'self' → logprob: -9.002097129821777
    4. '(' → logprob: -10.252097129821777
    5. 'Input' → logprob: -11.752097129821777
    6. '(
' → logprob: -13.377097129821777
    7. '5' → logprob: -15.502097129821777
    8. ' self' → logprob: -15.627097129821777
    9. '(input' → logprob: -16.752098083496094
    10. '
' → logprob: -16.752098083496094

Token 1047: '.G' (ID: 3773)
  Prédit: '.G'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.G' → logprob: -0.4741887152194977
    2. 'GRID' → logprob: -0.9741886854171753
    3. '.INPUT' → logprob: -9.724188804626465
    4. '.GR' → logprob: -10.349188804626465
    5. '.Grid' → logprob: -12.099188804626465
    6. '(G' → logprob: -12.599188804626465
    7. ' GRID' → logprob: -13.099188804626465
    8. 'INPUT' → logprob: -13.349188804626465
    9. '.' → logprob: -13.349188804626465
    10. 'Input' → logprob: -13.474188804626465

Token 1048: 'RID' (ID: 97508)
  Prédit: 'RID'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RID' → logprob: -0.006807737518101931
    2. 'R' → logprob: -5.006807804107666
    3. 'rid' → logprob: -9.881807327270508
    4. 'GRID' → logprob: -11.381807327270508
    5. 'Input' → logprob: -11.881807327270508
    6. 'Rid' → logprob: -11.881807327270508
    7. '   ' → logprob: -12.631807327270508
    8. 'SIZE' → logprob: -13.256807327270508
    9. 'INPUT' → logprob: -13.756807327270508
    10. 'r' → logprob: -14.006807327270508

Token 1049: '_SIZE' (ID: 7347)
  Prédit: '_SIZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_SIZE' → logprob: -0.0004894073354080319
    2. 'SIZE' → logprob: -7.625489234924316
    3. '   ' → logprob: -14.500489234924316
    4. '5' → logprob: -15.000489234924316
    5. 'Size' → logprob: -15.375489234924316
    6. 'size' → logprob: -15.375489234924316
    7. '.SIZE' → logprob: -16.875490188598633
    8. '       ' → logprob: -17.375490188598633
    9. ')' → logprob: -17.625490188598633
    10. 'S' → logprob: -17.875490188598633

Token 1050: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.005949775222688913
    2. ')
' → logprob: -5.130949974060059
    3. ' )' → logprob: -12.005949974060059
    4. ')
' → logprob: -12.130949974060059
    5. '       ' → logprob: -12.380949974060059
    6. '           ' → logprob: -13.255949974060059
    7. ')

' → logprob: -13.755949974060059
    8. '<|end|>' → logprob: -14.630949974060059
    9. '   ' → logprob: -15.005949974060059
    10. ' ' → logprob: -15.255949974060059

Token 1051: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.013590026646852493
    2. 'for' → logprob: -4.388589859008789
    3. ' for' → logprob: -7.013589859008789
    4. 'layers' → logprob: -9.513589859008789
    5. 'layer' → logprob: -10.013589859008789
    6. 'z' → logprob: -10.638589859008789
    7. 'lines' → logprob: -11.638589859008789
    8. '       ' → logprob: -11.763589859008789
    9. 'initial' → logprob: -12.763589859008789
    10. ' lines' → logprob: -13.138589859008789

Token 1052: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.0018106024945154786
    2. '           ' → logprob: -6.876810550689697
    3. ' for' → logprob: -8.126811027526855
    4. 'z' → logprob: -8.126811027526855
    5. 'layer' → logprob: -9.501811027526855
    6. 'initial' → logprob: -10.626811027526855
    7. 'layers' → logprob: -10.751811027526855
    8. 'alive' → logprob: -10.751811027526855
    9. 'lines' → logprob: -11.376811027526855
    10. 'occupied' → logprob: -11.501811027526855

Token 1053: ' Read' (ID: 5405)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.001011015148833394
    2. '           ' → logprob: -7.626010894775391
    3. 'z' → logprob: -7.876010894775391
    4. 'layer' → logprob: -9.75101089477539
    5. 'layers' → logprob: -10.62601089477539
    6. 'alive' → logprob: -11.50101089477539
    7. 'initial' → logprob: -11.62601089477539
    8. ' for' → logprob: -11.62601089477539
    9. 'lines' → logprob: -11.75101089477539
    10. 'occupied' → logprob: -11.75101089477539

Token 1054: ' ' (ID: 220)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.2170448750257492
    2. ' for' → logprob: -2.0920448303222656
    3. 'initial' → logprob: -3.3420448303222656
    4. 'alive' → logprob: -4.467044830322266
    5. 'N' → logprob: -5.342044830322266
    6. ' initial' → logprob: -5.467044830322266
    7. '           ' → logprob: -5.717044830322266
    8. 'z' → logprob: -5.967044830322266
    9. ' N' → logprob: -6.342044830322266
    10. ' alive' → logprob: -6.592044830322266

Token 1055: '5' (ID: 20)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.030243299901485443
    2. 'layers' → logprob: -4.280243396759033
    3. 'lines' → logprob: -5.155243396759033
    4. 'z' → logprob: -5.405243396759033
    5. 'initial' → logprob: -5.780243396759033
    6. 'N' → logprob: -6.905243396759033
    7. 'layer' → logprob: -7.405243396759033
    8. ' for' → logprob: -7.655243396759033
    9. 'coords' → logprob: -9.030242919921875
    10. 'occupied' → logprob: -9.780242919921875

Token 1056: ' layers' (ID: 22119)
  Prédit: ' layers'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' layers' → logprob: -0.20392006635665894
    2. 'layers' → logprob: -1.7039201259613037
    3. ' lines' → logprob: -6.078919887542725
    4. 'lines' → logprob: -9.578920364379883
    5. ' for' → logprob: -9.953920364379883
    6. 'for' → logprob: -10.203920364379883
    7. '
' → logprob: -10.328920364379883
    8. '_layers' → logprob: -11.578920364379883
    9. 'layer' → logprob: -12.578920364379883
    10. ' blocks' → logprob: -12.953920364379883

Token 1057: ',' (ID: 11)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.498736709356308
    2. '           ' → logprob: -1.2487367391586304
    3. 'for' → logprob: -2.248736619949341
    4. ' of' → logprob: -9.248736381530762
    5. ',' → logprob: -9.498736381530762
    6. ' (' → logprob: -11.123736381530762
    7. '
' → logprob: -11.123736381530762
    8. ' and' → logprob: -11.248736381530762
    9. ':' → logprob: -11.373736381530762
    10. '       ' → logprob: -11.373736381530762

Token 1058: ' each' (ID: 2454)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.15447312593460083
    2. '           ' → logprob: -2.529473066329956
    3. '#' → logprob: -2.904473066329956
    4. 'each' → logprob: -5.154473304748535
    5. ' for' → logprob: -5.904473304748535
    6. '   ' → logprob: -10.279473304748535
    7. 'layers' → logprob: -10.279473304748535
    8. 'layer' → logprob: -10.904473304748535
    9. ' each' → logprob: -11.279473304748535
    10. ' #' → logprob: -11.279473304748535

Token 1059: ' layer' (ID: 10261)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'with' → logprob: -0.0777767151594162
    2. 'cons' → logprob: -3.0777766704559326
    3. 'of' → logprob: -3.7027766704559326
    4. ' with' → logprob: -6.577776908874512
    5. 'layer' → logprob: -6.952776908874512
    6. 'com' → logprob: -7.077776908874512
    7. 'cont' → logprob: -7.327776908874512
    8. 'having' → logprob: -9.327776908874512
    9. ' consisting' → logprob: -9.452776908874512
    10. ' of' → logprob: -9.452776908874512

Token 1060: ' ' (ID: 220)
  Prédit: ' has'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' has' → logprob: -0.8685021996498108
    2. 'has' → logprob: -1.618502140045166
    3. 'cons' → logprob: -2.243502140045166
    4. 'with' → logprob: -2.618502140045166
    5. ' with' → logprob: -2.868502140045166
    6. 'for' → logprob: -2.993502140045166
    7. '           ' → logprob: -3.493502140045166
    8. ' for' → logprob: -3.493502140045166
    9. ' consists' → logprob: -4.368502140045166
    10. ' consisting' → logprob: -5.493502140045166

Token 1061: '5' (ID: 20)
  Prédit: 'with'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'with' → logprob: -1.13856840133667
    2. 'of' → logprob: -1.51356840133667
    3. 'has' → logprob: -1.51356840133667
    4. 'cons' → logprob: -1.88856840133667
    5. ' has' → logprob: -3.88856840133667
    6. '5' → logprob: -4.13856840133667
    7. ' with' → logprob: -4.38856840133667
    8. ' of' → logprob: -4.76356840133667
    9. 'cont' → logprob: -5.01356840133667
    10. ' consisting' → logprob: -5.01356840133667

Token 1062: ' lines' (ID: 8698)
  Prédit: ' lines'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' lines' → logprob: -0.5762071013450623
    2. 'lines' → logprob: -0.8262071013450623
    3. 'rows' → logprob: -8.826207160949707
    4. 'x' → logprob: -9.576207160949707
    5. 'strings' → logprob: -10.701207160949707
    6. 'line' → logprob: -11.951207160949707
    7. 'layers' → logprob: -11.951207160949707
    8. ' rows' → logprob: -12.451207160949707
    9. ' strings' → logprob: -12.701207160949707
    10. '-lines' → logprob: -13.326207160949707

Token 1063: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.01504435483366251
    2. ' for' → logprob: -4.640044212341309
    3. 'for' → logprob: -5.265044212341309
    4. ',' → logprob: -9.765044212341309
    5. '               ' → logprob: -11.265044212341309
    6. ' of' → logprob: -11.515044212341309
    7. '   ' → logprob: -12.015044212341309
    8. ' with' → logprob: -12.140044212341309
    9. '       ' → logprob: -12.890044212341309
    10. 'with' → logprob: -13.015044212341309

Token 1064: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00010235115041723475
    2. 'for' → logprob: -9.375102043151855
    3. ' for' → logprob: -11.000102043151855
    4. '               ' → logprob: -15.250102043151855
    5. '       ' → logprob: -15.375102043151855
    6. '                   ' → logprob: -16.625102996826172
    7. '
' → logprob: -16.625102996826172
    8. '   ' → logprob: -17.000102996826172
    9. ',' → logprob: -17.625102996826172
    10. '		' → logprob: -17.875102996826172

Token 1065: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.5182164311408997
    2. '           ' → logprob: -1.0182163715362549
    3. ' for' → logprob: -3.143216371536255
    4. '       ' → logprob: -10.768216133117676
    5. '   ' → logprob: -11.518216133117676
    6. 'layer' → logprob: -13.268216133117676
    7. '               ' → logprob: -13.643216133117676
    8. '          ' → logprob: -14.768216133117676
    9. ' ' → logprob: -15.143216133117676
    10. '                   ' → logprob: -15.268216133117676

Token 1066: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.004690118599683046
    2. ' z' → logprob: -5.629690170288086
    3. 'layer' → logprob: -6.879690170288086
    4. '_z' → logprob: -10.004690170288086
    5. ' layer' → logprob: -11.754690170288086
    6. '_' → logprob: -12.504690170288086
    7. '_layer' → logprob: -13.004690170288086
    8. ' _' → logprob: -14.004690170288086
    9. '   ' → logprob: -14.754690170288086
    10. '	z' → logprob: -14.879690170288086

Token 1067: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.014166101813316345
    2. 'in' → logprob: -4.264165878295898
    3. ' ' → logprob: -13.764165878295898
    4. '	in' → logprob: -15.139165878295898
    5. '           ' → logprob: -15.514165878295898
    6. '   ' → logprob: -15.514165878295898
    7. '=' → logprob: -15.764165878295898
    8. '            ' → logprob: -15.889165878295898
    9. 'import' → logprob: -16.0141658782959
    10. '               ' → logprob: -16.5141658782959

Token 1068: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.002475777640938759
    2. ' range' → logprob: -6.002475738525391
    3. '   ' → logprob: -16.87747573852539
    4. '	range' → logprob: -17.12747573852539
    5. '(range' → logprob: -17.87747573852539
    6. '
' → logprob: -18.00247573852539
    7. ' ' → logprob: -18.12747573852539
    8. ')' → logprob: -18.87747573852539
    9. '0' → logprob: -19.12747573852539
    10. '  ' → logprob: -19.75247573852539

Token 1069: '(self' (ID: 2402)
  Prédit: '(self'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(self' → logprob: -0.00018899753922596574
    2. '(' → logprob: -8.750188827514648
    3. 'self' → logprob: -10.500188827514648
    4. ' (' → logprob: -13.750188827514648
    5. ' self' → logprob: -14.375188827514648
    6. '           ' → logprob: -14.625188827514648
    7. '(
' → logprob: -14.875188827514648
    8. '   ' → logprob: -15.375188827514648
    9. '5' → logprob: -16.87518882751465
    10. '
' → logprob: -17.12518882751465

Token 1070: '.G' (ID: 3773)
  Prédit: 'self'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'self' → logprob: -0.018467605113983154
    2. ' self' → logprob: -4.268467426300049
    3. 'GRID' → logprob: -6.518467426300049
    4. '(self' → logprob: -6.643467426300049
    5. '           ' → logprob: -7.518467426300049
    6. '   ' → logprob: -7.518467426300049
    7. ')' → logprob: -9.018467903137207
    8. '5' → logprob: -9.518467903137207
    9. '(Grid' → logprob: -9.893467903137207
    10. '       ' → logprob: -10.393467903137207

Token 1071: 'RID' (ID: 97508)
  Prédit: 'RID'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'RID' → logprob: -0.002733666682615876
    2. 'GRID' → logprob: -6.5027337074279785
    3. 'R' → logprob: -6.8777337074279785
    4. 'SIZE' → logprob: -10.25273323059082
    5. 'I' → logprob: -10.25273323059082
    6. 'self' → logprob: -10.37773323059082
    7. '5' → logprob: -10.75273323059082
    8. '   ' → logprob: -11.62773323059082
    9. 'RD' → logprob: -11.62773323059082
    10. 'rid' → logprob: -11.75273323059082

Token 1072: '_SIZE' (ID: 7347)
  Prédit: '_SIZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_SIZE' → logprob: -4.5252596464706585e-05
    2. 'SIZE' → logprob: -10.125044822692871
    3. ')' → logprob: -13.625044822692871
    4. '_size' → logprob: -13.875044822692871
    5. 'size' → logprob: -13.875044822692871
    6. '   ' → logprob: -13.875044822692871
    7. '.SIZE' → logprob: -15.000044822692871
    8. '):
' → logprob: -15.750044822692871
    9. '       ' → logprob: -16.750045776367188
    10. '```' → logprob: -17.000045776367188

Token 1073: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.029991021379828453
    2. '):' → logprob: -3.5299909114837646
    3. '           ' → logprob: -8.779991149902344
    4. '):
' → logprob: -10.154991149902344
    5. '       ' → logprob: -11.029991149902344
    6. '               ' → logprob: -11.404991149902344
    7. ':' → logprob: -12.029991149902344
    8. '   ' → logprob: -12.154991149902344
    9. ':
' → logprob: -12.154991149902344
    10. '):

' → logprob: -13.779991149902344

Token 1074: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0001777960715116933
    2. ' for' → logprob: -9.125177383422852
    3. '           ' → logprob: -10.625177383422852
    4. '	           ' → logprob: -10.750177383422852
    5. '   ' → logprob: -12.125177383422852
    6. '                   ' → logprob: -12.875177383422852
    7. 'for' → logprob: -12.875177383422852
    8. ':' → logprob: -13.250177383422852
    9. '<|end|>' → logprob: -13.250177383422852
    10. '       ' → logprob: -13.625177383422852

Token 1075: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.0631972923874855
    2. '               ' → logprob: -2.813197374343872
    3. ' for' → logprob: -7.063197135925293
    4. '   ' → logprob: -8.563197135925293
    5. '           ' → logprob: -8.938197135925293
    6. '                   ' → logprob: -9.938197135925293
    7. ' ' → logprob: -14.313197135925293
    8. '	for' → logprob: -14.313197135925293
    9. '       ' → logprob: -14.563197135925293
    10. '              ' → logprob: -15.688197135925293

Token 1076: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -0.008653691969811916
    2. ' y' → logprob: -4.75865364074707
    3. '_y' → logprob: -10.38365364074707
    4. '_' → logprob: -11.75865364074707
    5. '	y' → logprob: -16.25865364074707
    6. 'x' → logprob: -16.50865364074707
    7. 'line' → logprob: -16.50865364074707
    8. ' _' → logprob: -17.25865364074707
    9. '   ' → logprob: -17.75865364074707
    10. ' ' → logprob: -18.00865364074707

Token 1077: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.06197956204414368
    2. 'in' → logprob: -2.8119795322418213
    3. '                   ' → logprob: -12.811979293823242
    4. ' ' → logprob: -13.811979293823242
    5. 'import' → logprob: -13.936979293823242
    6. '               ' → logprob: -14.311979293823242
    7. '```' → logprob: -14.311979293823242
    8. '                ' → logprob: -14.436979293823242
    9. '_' → logprob: -14.561979293823242
    10. '                    ' → logprob: -14.686979293823242

Token 1078: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.12692873179912567
    2. ' range' → logprob: -2.1269288063049316
    3. '(range' → logprob: -14.876928329467773
    4. '	range' → logprob: -15.626928329467773
    5. ' ' → logprob: -16.876928329467773
    6. '
' → logprob: -17.751928329467773
    7. ' in' → logprob: -17.751928329467773
    8. '   ' → logprob: -18.126928329467773
    9. '(' → logprob: -18.376928329467773
    10. 'in' → logprob: -18.376928329467773

Token 1079: '(self' (ID: 2402)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5811038017272949
    2. '(self' → logprob: -1.081103801727295
    3. 'self' → logprob: -2.456103801727295
    4. '(' → logprob: -4.581103801727295
    5. '(range' → logprob: -5.706103801727295
    6. ' range' → logprob: -6.456103801727295
    7. 'in' → logprob: -7.956103801727295
    8. ' in' → logprob: -9.081104278564453
    9. '5' → logprob: -9.706104278564453
    10. ' self' → logprob: -10.581104278564453

Token 1080: '.G' (ID: 3773)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.35486531257629395
    2. 'GRID' → logprob: -1.479865312576294
    3. ' range' → logprob: -2.854865312576294
    4. ')' → logprob: -5.104865074157715
    5. '5' → logprob: -6.729865074157715
    6. '_GRID' → logprob: -6.854865074157715
    7. '0' → logprob: -6.979865074157715
    8. ' in' → logprob: -7.104865074157715
    9. 'in' → logprob: -7.979865074157715
    10. 'INPUT' → logprob: -7.979865074157715

Token 1081: 'RID' (ID: 97508)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.5060873627662659
    2. ' in' → logprob: -1.756087303161621
    3. ' range' → logprob: -3.256087303161621
    4. '   ' → logprob: -3.256087303161621
    5. 'in' → logprob: -3.506087303161621
    6. '       ' → logprob: -4.006087303161621
    7. '(range' → logprob: -4.131087303161621
    8. '           ' → logprob: -4.381087303161621
    9. '               ' → logprob: -4.506087303161621
    10. '(self' → logprob: -4.881087303161621

Token 1082: '_SIZE' (ID: 7347)
  Prédit: '_SIZE'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_SIZE' → logprob: -4.68022444692906e-05
    2. '3' → logprob: -11.125046730041504
    3. 'SIZE' → logprob: -11.250046730041504
    4. '_size' → logprob: -11.250046730041504
    5. 'self' → logprob: -13.625046730041504
    6. 'size' → logprob: -13.875046730041504
    7. '_LINE' → logprob: -14.500046730041504
    8. '.SIZE' → logprob: -14.625046730041504
    9. '_S' → logprob: -15.125046730041504
    10. '   ' → logprob: -15.125046730041504

Token 1083: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.369285523891449
    2. '):' → logprob: -1.2442855834960938
    3. ':' → logprob: -4.619285583496094
    4. ':
' → logprob: -5.369285583496094
    5. '                   ' → logprob: -5.869285583496094
    6. '               ' → logprob: -6.994285583496094
    7. ',' → logprob: -7.744285583496094
    8. ')' → logprob: -7.744285583496094
    9. '<|end|>' → logprob: -8.119285583496094
    10. '():
' → logprob: -8.494285583496094

Token 1084: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0005594660760834813
    2. ':' → logprob: -8.12555980682373
    3. ':
' → logprob: -8.75055980682373
    4. '		           ' → logprob: -10.62555980682373
    5. ' line' → logprob: -10.62555980682373
    6. ',' → logprob: -11.12555980682373
    7. '                           ' → logprob: -11.25055980682373
    8. '                       ' → logprob: -12.12555980682373
    9. '               ' → logprob: -13.00055980682373
    10. '                  ' → logprob: -13.00055980682373

Token 1085: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.069026418030262
    2. ' line' → logprob: -2.819026470184326
    3. '                   ' → logprob: -5.819026470184326
    4. 'row' → logprob: -5.819026470184326
    5. '   ' → logprob: -7.444026470184326
    6. '                       ' → logprob: -8.194025993347168
    7. ' row' → logprob: -8.694025993347168
    8. ' ' → logprob: -10.694025993347168
    9. 'layer' → logprob: -11.069025993347168
    10. '	line' → logprob: -12.444025993347168

Token 1086: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.3141174912452698
    2. '=' → logprob: -1.314117431640625
    3. '                   ' → logprob: -7.189117431640625
    4. '=line' → logprob: -10.064117431640625
    5. '                       ' → logprob: -10.314117431640625
    6. '=input' → logprob: -11.189117431640625
    7. '               ' → logprob: -12.939117431640625
    8. '                    ' → logprob: -13.064117431640625
    9. '                           ' → logprob: -13.814117431640625
    10. '           ' → logprob: -14.564117431640625

Token 1087: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.16033197939395905
    2. ' input' → logprob: -1.9103319644927979
    3. '                   ' → logprob: -9.160331726074219
    4. '                       ' → logprob: -14.660331726074219
    5. '                    ' → logprob: -15.160331726074219
    6. '=input' → logprob: -15.285331726074219
    7. '(input' → logprob: -15.410331726074219
    8. '                    
' → logprob: -15.535331726074219
    9. '               ' → logprob: -15.785331726074219
    10. ' ' → logprob: -15.785331726074219

Token 1088: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.31550851464271545
    2. '().' → logprob: -1.315508484840393
    3. '                   ' → logprob: -6.4405083656311035
    4. '()
' → logprob: -7.4405083656311035
    5. '                       ' → logprob: -10.690508842468262
    6. '();' → logprob: -12.315508842468262
    7. '()

' → logprob: -12.440508842468262
    8. '               ' → logprob: -12.440508842468262
    9. '(' → logprob: -12.565508842468262
    10. '())' → logprob: -12.565508842468262

Token 1089: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.00021784115233458579
    2. '                       ' → logprob: -9.25021743774414
    3. '               ' → logprob: -9.87521743774414
    4. '           ' → logprob: -10.62521743774414
    5. '                    ' → logprob: -10.87521743774414
    6. '                    
' → logprob: -11.50021743774414
    7. '                  ' → logprob: -12.62521743774414
    8. '       ' → logprob: -12.87521743774414
    9. '
' → logprob: -13.12521743774414
    10. '                           ' → logprob: -13.62521743774414

Token 1090: ' #' (ID: 1069)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.06321072578430176
    2. 'for' → logprob: -3.1882107257843018
    3. ' for' → logprob: -4.563210487365723
    4. '           ' → logprob: -4.813210487365723
    5. '               ' → logprob: -6.563210487365723
    6. '       ' → logprob: -10.688210487365723
    7. '                       ' → logprob: -11.438210487365723
    8. '   ' → logprob: -12.063210487365723
    9. '                  ' → logprob: -13.063210487365723
    10. '```' → logprob: -13.813210487365723

Token 1091: ' line' (ID: 2543)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03713320940732956
    2. '                   ' → logprob: -3.78713321685791
    3. ' for' → logprob: -4.28713321685791
    4. '               ' → logprob: -10.91213321685791
    5. 'assert' → logprob: -11.28713321685791
    6. '           ' → logprob: -11.91213321685791
    7. 'line' → logprob: -12.03713321685791
    8. '   ' → logprob: -13.53713321685791
    9. '                  ' → logprob: -14.53713321685791
    10. '                       ' → logprob: -14.78713321685791

Token 1092: ' is' (ID: 382)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47156962752342224
    2. '                   ' → logprob: -1.7215696573257446
    3. '=' → logprob: -1.8465696573257446
    4. '.strip' → logprob: -3.721569538116455
    5. '.rstrip' → logprob: -5.346569538116455
    6. '=line' → logprob: -5.971569538116455
    7. 'for' → logprob: -6.346569538116455
    8. '                       ' → logprob: -6.721569538116455
    9. '.' → logprob: -7.221569538116455
    10. '               ' → logprob: -7.471569538116455

Token 1093: ' length' (ID: 5517)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.6651293039321899
    2. ' line' → logprob: -1.04012930393219
    3. '[line' → logprob: -2.4151291847229004
    4. '                   ' → logprob: -4.0401291847229
    5. '[' → logprob: -4.7901291847229
    6. 'list' → logprob: -5.9151291847229
    7. '(line' → logprob: -6.0401291847229
    8. 'len' → logprob: -6.1651291847229
    9. ' ' → logprob: -6.2901291847229
    10. ' [' → logprob: -6.9151291847229

Token 1094: ' ' (ID: 220)
  Prédit: '5'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.4400368928909302
    2. '=' → logprob: -1.5650368928909302
    3. '==' → logprob: -1.9400368928909302
    4. ' ' → logprob: -7.190036773681641
    5. ' ==' → logprob: -7.315036773681641
    6. '                   ' → logprob: -7.315036773681641
    7. '```' → logprob: -7.815036773681641
    8. ':' → logprob: -8.19003677368164
    9. '                       ' → logprob: -8.94003677368164
    10. ' =' → logprob: -9.19003677368164

Token 1095: '5' (ID: 20)
  Prédit: '5'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '5' → logprob: -0.03382319211959839
    2. 'self' → logprob: -3.408823251724243
    3. ' self' → logprob: -9.533823013305664
    4. '=' → logprob: -10.033823013305664
    5. ' ' → logprob: -10.908823013305664
    6. '                   ' → logprob: -11.283823013305664
    7. '```' → logprob: -11.908823013305664
    8. '=self' → logprob: -12.283823013305664
    9. '           ' → logprob: -12.408823013305664
    10. '(self' → logprob: -12.533823013305664

Token 1096: ' string' (ID: 1621)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0007356545538641512
    2. ' for' → logprob: -7.500735759735107
    3. 'for' → logprob: -9.00073528289795
    4. '           ' → logprob: -10.00073528289795
    5. '               ' → logprob: -12.12573528289795
    6. ',' → logprob: -12.37573528289795
    7. '       ' → logprob: -13.62573528289795
    8. '				' → logprob: -14.25073528289795
    9. '		           ' → logprob: -14.37573528289795
    10. '   ' → logprob: -14.50073528289795

Token 1097: ' of' (ID: 328)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0004527182609308511
    2. ' for' → logprob: -8.125452995300293
    3. 'for' → logprob: -9.125452995300293
    4. '           ' → logprob: -10.250452995300293
    5. '               ' → logprob: -11.750452995300293
    6. ',' → logprob: -13.375452995300293
    7. '       ' → logprob: -13.875452995300293
    8. '   ' → logprob: -14.500452995300293
    9. '                       ' → logprob: -14.750452995300293
    10. '
' → logprob: -14.875452995300293

Token 1098: ' ' (ID: 220)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ''' → logprob: -0.002514658262953162
    2. '0' → logprob: -6.002514839172363
    3. '('' → logprob: -11.377514839172363
    4. ' '' → logprob: -11.502514839172363
    5. '1' → logprob: -12.627514839172363
    6. '`' → logprob: -12.752514839172363
    7. '"' → logprob: -12.752514839172363
    8. '01' → logprob: -13.002514839172363
    9. 'characters' → logprob: -13.002514839172363
    10. 'zeros' → logprob: -13.752514839172363

Token 1099: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.05673537403345108
    2. '0' → logprob: -2.9317352771759033
    3. '01' → logprob: -6.431735515594482
    4. '012' → logprob: -9.181735038757324
    5. '010' → logprob: -10.306735038757324
    6. '('' → logprob: -10.681735038757324
    7. 'characters' → logprob: -10.931735038757324
    8. '"' → logprob: -11.181735038757324
    9. '{'' → logprob: -11.181735038757324
    10. '1' → logprob: -11.806735038757324

Token 1100: '/' (ID: 14)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.0018858035327866673
    2. 'and' → logprob: -6.751885890960693
    3. ' or' → logprob: -7.626885890960693
    4. ''s' → logprob: -9.126885414123535
    5. 'or' → logprob: -9.751885414123535
    6. ' and' → logprob: -10.501885414123535
    7. ''' → logprob: -11.126885414123535
    8. '/' → logprob: -11.626885414123535
    9. '1' → logprob: -12.126885414123535
    10. '012' → logprob: -13.501885414123535

Token 1101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.9361264946837764e-07
    2. '
' → logprob: -16.625
    3. ' ' → logprob: -17.25
    4. ''s' → logprob: -17.625
    5. 's' → logprob: -18.625
    6. ''' → logprob: -18.75
    7. 'and' → logprob: -19.5
    8. '`' → logprob: -19.625
    9. '/' → logprob: -19.75
    10. '"' → logprob: -20.375

Token 1102: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.002713811118155718
    2. ' for' → logprob: -6.127713680267334
    3. 'for' → logprob: -7.877713680267334
    4. '           ' → logprob: -9.502714157104492
    5. '               ' → logprob: -10.002714157104492
    6. '
' → logprob: -11.252714157104492
    7. '                       ' → logprob: -11.752714157104492
    8. ',' → logprob: -12.502714157104492
    9. '       ' → logprob: -13.377714157104492
    10. '                  ' → logprob: -13.502714157104492

Token 1103: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -3.5358694731257856e-05
    2. ' for' → logprob: -11.625035285949707
    3. '               ' → logprob: -11.625035285949707
    4. '           ' → logprob: -11.750035285949707
    5. '                       ' → logprob: -12.500035285949707
    6. '       ' → logprob: -13.000035285949707
    7. 'for' → logprob: -14.375035285949707
    8. '                  ' → logprob: -14.375035285949707
    9. '		           ' → logprob: -14.500035285949707
    10. '                    ' → logprob: -14.750035285949707

Token 1104: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.07930415123701096
    2. '                   ' → logprob: -2.8293042182922363
    3. ' for' → logprob: -4.079304218292236
    4. '               ' → logprob: -8.704303741455078
    5. '           ' → logprob: -9.579303741455078
    6. '                       ' → logprob: -11.079303741455078
    7. '       ' → logprob: -11.954303741455078
    8. '   ' → logprob: -12.079303741455078
    9. '                  ' → logprob: -13.204303741455078
    10. ' ' → logprob: -14.204303741455078

Token 1105: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -0.0002036595979006961
    2. ' x' → logprob: -8.500204086303711
    3. '(x' → logprob: -16.62520408630371
    4. 'idx' → logprob: -19.12520408630371
    5. '	x' → logprob: -19.25020408630371
    6. '```' → logprob: -19.62520408630371
    7. ')x' → logprob: -19.87520408630371
    8. ',x' → logprob: -20.50020408630371
    9. 'index' → logprob: -20.75020408630371
    10. 'i' → logprob: -20.87520408630371

Token 1106: ',' (ID: 11)
  Prédit: ' in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.012593117542564869
    2. 'in' → logprob: -4.3875932693481445
    3. ',' → logprob: -10.387593269348145
    4. ' ' → logprob: -10.762593269348145
    5. '<|end|>' → logprob: -11.512593269348145
    6. '	in' → logprob: -12.637593269348145
    7. '                   ' → logprob: -13.637593269348145
    8. 'In' → logprob: -13.637593269348145
    9. ' ,' → logprob: -13.887593269348145
    10. '   ' → logprob: -13.887593269348145

Token 1107: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.16625699400901794
    2. 'char' → logprob: -1.9162570238113403
    3. 'c' → logprob: -5.166256904602051
    4. ' ch' → logprob: -8.16625690460205
    5. ' char' → logprob: -10.66625690460205
    6. ' c' → logprob: -13.79125690460205
    7. '_char' → logprob: -16.291257858276367
    8. 'bit' → logprob: -16.666257858276367
    9. 'chr' → logprob: -16.791257858276367
    10. '	ch' → logprob: -17.541257858276367

Token 1108: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.016041642054915428
    2. 'in' → logprob: -4.1410417556762695
    3. ' ' → logprob: -12.39104175567627
    4. 's' → logprob: -14.14104175567627
    5. '	in' → logprob: -14.26604175567627
    6. '<|end|>' → logprob: -14.51604175567627
    7. '  ' → logprob: -15.14104175567627
    8. 'n' → logprob: -15.26604175567627
    9. 'import' → logprob: -15.89104175567627
    10. ',' → logprob: -16.016040802001953

Token 1109: ' enumerate' (ID: 29671)
  Prédit: 'enumer'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'enumer' → logprob: -0.0007099286303855479
    2. ' enumerate' → logprob: -7.2507100105285645
    3. 'enum' → logprob: -18.000709533691406
    4. 'en' → logprob: -20.125709533691406
    5. 'enqueue' → logprob: -20.250709533691406
    6. '```' → logprob: -20.500709533691406
    7. '.enumer' → logprob: -20.750709533691406
    8. '(en' → logprob: -21.125709533691406
    9. 'encode' → logprob: -21.875709533691406
    10. 'Enumer' → logprob: -22.375709533691406

Token 1110: '(line' (ID: 18178)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.04957412928342819
    2. '(line' → logprob: -3.049574136734009
    3. ' line' → logprob: -6.92457389831543
    4. '=line' → logprob: -13.67457389831543
    5. '[line' → logprob: -14.04957389831543
    6. '                   ' → logprob: -15.17457389831543
    7. '#line' → logprob: -15.42457389831543
    8. '	line' → logprob: -15.42457389831543
    9. ',line' → logprob: -15.92457389831543
    10. ' (' → logprob: -16.04957389831543

Token 1111: '.strip' (ID: 40613)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ':' → logprob: -0.4746077060699463
    2. '):' → logprob: -1.4746077060699463
    3. '):
' → logprob: -2.2246077060699463
    4. ' in' → logprob: -3.7246077060699463
    5. '                       ' → logprob: -4.974607467651367
    6. ':
' → logprob: -5.599607467651367
    7. 'in' → logprob: -6.974607467651367
    8. '():
' → logprob: -6.974607467651367
    9. '():' → logprob: -7.349607467651367
    10. '<|end|>' → logprob: -7.349607467651367

Token 1112: '()):
' (ID: 83536)
  Prédit: '()):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()):
' → logprob: -0.6190781593322754
    2. '()' → logprob: -0.8690781593322754
    3. '):
' → logprob: -3.7440781593322754
    4. '):' → logprob: -3.9940781593322754
    5. '():
' → logprob: -9.369077682495117
    6. '():' → logprob: -9.994077682495117
    7. '())' → logprob: -12.994077682495117
    8. '):
' → logprob: -13.369077682495117
    9. ')' → logprob: -14.119077682495117
    10. '()
' → logprob: -14.619077682495117

Token 1113: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.000488110730657354
    2. ' if' → logprob: -8.87548828125
    3. '                        ' → logprob: -9.25048828125
    4. '                           ' → logprob: -9.75048828125
    5. 'if' → logprob: -9.87548828125
    6. '                               ' → logprob: -10.00048828125
    7. '                   ' → logprob: -10.37548828125
    8. ':' → logprob: -11.12548828125
    9. '                      ' → logprob: -11.25048828125
    10. '   ' → logprob: -12.25048828125

Token 1114: ' alive' (ID: 23757)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5120062828063965
    2. 'if' → logprob: -1.2620062828063965
    3. '                           ' → logprob: -2.6370062828063965
    4. ' if' → logprob: -3.1370062828063965
    5. '                               ' → logprob: -6.6370062828063965
    6. 'initial' → logprob: -6.8870062828063965
    7. '                   ' → logprob: -9.512006759643555
    8. '   ' → logprob: -9.512006759643555
    9. ' initial' → logprob: -9.637006759643555
    10. '                        ' → logprob: -10.387006759643555

Token 1115: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.018152983859181404
    2. ' =' → logprob: -4.018153190612793
    3. '=True' → logprob: -12.893153190612793
    4. '=False' → logprob: -15.393153190612793
    5. '           ' → logprob: -16.518152236938477
    6. 'if' → logprob: -16.768152236938477
    7. '                       ' → logprob: -17.143152236938477
    8. '=self' → logprob: -17.143152236938477
    9. '=(' → logprob: -17.268152236938477
    10. ' if' → logprob: -17.393152236938477

Token 1116: ' ch' (ID: 549)
  Prédit: 'ch'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ch' → logprob: -0.3083420693874359
    2. '(ch' → logprob: -1.5583420991897583
    3. ' ch' → logprob: -2.9333419799804688
    4. ' (' → logprob: -6.433341979980469
    5. '[ch' → logprob: -11.683341979980469
    6. '	ch' → logprob: -12.183341979980469
    7. 'True' → logprob: -12.683341979980469
    8. '_ch' → logprob: -13.183341979980469
    9. ' True' → logprob: -13.683341979980469
    10. '(True' → logprob: -13.933341979980469

Token 1117: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.4928516149520874
    2. ' ==' → logprob: -0.9928516149520874
    3. '=='' → logprob: -3.992851734161377
    4. '=' → logprob: -9.117851257324219
    5. ' =='' → logprob: -10.742851257324219
    6. '==
' → logprob: -11.867851257324219
    7. '=="' → logprob: -11.992851257324219
    8. ''' → logprob: -12.742851257324219
    9. '==='' → logprob: -13.367851257324219
    10. '===' → logprob: -14.117851257324219

Token 1118: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -1.4498052223643754e-05
    2. ' '' → logprob: -11.250014305114746
    3. '"' → logprob: -13.625014305114746
    4. '1' → logprob: -15.250014305114746
    5. '('' → logprob: -17.625015258789062
    6. '`' → logprob: -18.375015258789062
    7. '
' → logprob: -19.625015258789062
    8. '   ' → logprob: -19.750015258789062
    9. '‘' → logprob: -19.750015258789062
    10. ' ' → logprob: -20.125015258789062

Token 1119: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0206720617134124e-05
    2. ''' → logprob: -11.50001049041748
    3. ' ' → logprob: -18.625009536743164
    4. '')' → logprob: -20.750009536743164
    5. '"' → logprob: -21.000009536743164
    6. '#' → logprob: -21.250009536743164
    7. ''#' → logprob: -22.125009536743164
    8. '`' → logprob: -22.750009536743164
    9. '```' → logprob: -22.750009536743164
    10. '('' → logprob: -23.000009536743164

Token 1120: ''
' (ID: 2207)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.14669325947761536
    2. '                           ' → logprob: -2.771693229675293
    3. ')
' → logprob: -3.396693229675293
    4. '
' → logprob: -4.146693229675293
    5. ')' → logprob: -4.396693229675293
    6. '                               ' → logprob: -5.271693229675293
    7. '                        
' → logprob: -6.271693229675293
    8. '           ' → logprob: -7.021693229675293
    9. ':
' → logprob: -7.146693229675293
    10. '                   ' → logprob: -7.396693229675293

Token 1121: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0018210777780041099
    2. '                           ' → logprob: -6.376821041107178
    3. '                   ' → logprob: -10.251821517944336
    4. '               ' → logprob: -10.376821517944336
    5. '           ' → logprob: -11.376821517944336
    6. '                        ' → logprob: -11.501821517944336
    7. '                               ' → logprob: -11.751821517944336
    8. 'self' → logprob: -12.251821517944336
    9. '                        
' → logprob: -12.376821517944336
    10. '   ' → logprob: -13.001821517944336

Token 1122: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' (adapté à ' initial') → logprob: -0.053363822400569916
    2. ' initial' → logprob: -3.553363800048828
    3. '                           ' → logprob: -4.178363800048828
    4. '                       ' → logprob: -4.928363800048828
    5. '                               ' → logprob: -8.178363800048828
    6. 'if' → logprob: -8.303363800048828
    7. '   ' → logprob: -9.053363800048828
    8. '                   ' → logprob: -10.053363800048828
    9. '           ' → logprob: -10.678363800048828
    10. ' if' → logprob: -10.803363800048828

Token 1123: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -6.511406809295295e-06
    2. 'grid' → logprob: -12.125006675720215
    3. '_' → logprob: -15.000006675720215
    4. '_GRID' → logprob: -15.750006675720215
    5. '
' → logprob: -15.875006675720215
    6. 'Grid' → logprob: -16.6250057220459
    7. '_cell' → logprob: -16.6250057220459
    8. ' grid' → logprob: -17.1250057220459
    9. '_coordinate' → logprob: -17.1250057220459
    10. '_coord' → logprob: -17.2500057220459

Token 1124: '.set' (ID: 1230)
  Prédit: '.set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.set' → logprob: -9.913265239447355e-05
    2. '.' → logprob: -9.250099182128906
    3. ' .' → logprob: -13.750099182128906
    4. 'set' → logprob: -14.125099182128906
    5. '   ' → logprob: -14.375099182128906
    6. '       ' → logprob: -16.125099182128906
    7. '           ' → logprob: -16.125099182128906
    8. '
' → logprob: -16.750099182128906
    9. '                   ' → logprob: -17.000099182128906
    10. '#set' → logprob: -17.000099182128906

Token 1125: '_cell' (ID: 39197)
  Prédit: '_cell'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cell' → logprob: -5.3358446166384965e-05
    2. 'Cell' → logprob: -10.000053405761719
    3. 'cell' → logprob: -12.375053405761719
    4. '_coordinate' → logprob: -13.750053405761719
    5. '(Cell' → logprob: -14.125053405761719
    6. '_Cell' → logprob: -14.375053405761719
    7. '_CELL' → logprob: -14.750053405761719
    8. '<Cell' → logprob: -15.375053405761719
    9. '_coord' → logprob: -16.25005340576172
    10. ' Cell' → logprob: -16.25005340576172

Token 1126: '(Co' (ID: 188907)
  Prédit: '(Co'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(Co' → logprob: -3.833878508885391e-05
    2. 'Coordinate' → logprob: -10.375038146972656
    3. '(' → logprob: -12.625038146972656
    4. '(
' → logprob: -12.750038146972656
    5. ' Coordinate' → logprob: -15.125038146972656
    6. '```' → logprob: -15.375038146972656
    7. 'Co' → logprob: -15.875038146972656
    8. '(co' → logprob: -16.125038146972656
    9. '((' → logprob: -17.375038146972656
    10. '(C' → logprob: -17.500038146972656

Token 1127: 'ordinate' (ID: 14586)
  Prédit: 'ordinate'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ordinate' → logprob: -8.864272967912257e-05
    2. 'ord' → logprob: -9.875088691711426
    3. 'Coordinate' → logprob: -10.625088691711426
    4. 'ordin' → logprob: -12.750088691711426
    5. ' ordinate' → logprob: -13.375088691711426
    6. 'Ord' → logprob: -13.500088691711426
    7. '   ' → logprob: -14.125088691711426
    8. 'ordinates' → logprob: -14.250088691711426
    9. '    ' → logprob: -14.250088691711426
    10. '  ' → logprob: -14.625088691711426

Token 1128: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.128163257315464e-07
    2. 'Coordinate' → logprob: -15.625
    3. '(' → logprob: -17.5
    4. '(Co' → logprob: -17.875
    5. '```' → logprob: -18.125
    6. ' ' → logprob: -18.25
    7. '(x' → logprob: -19.25
    8. '   ' → logprob: -20.5
    9. 'Coord' → logprob: -20.625
    10. '
' → logprob: -20.875

Token 1129: 'D' (ID: 35)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.004267985001206398
    2. 'D' → logprob: -5.504268169403076
    3. 'Coordinate' → logprob: -8.629267692565918
    4. '
' → logprob: -13.379267692565918
    5. '   ' → logprob: -13.504267692565918
    6. '(' → logprob: -13.754267692565918
    7. '```' → logprob: -13.754267692565918
    8. 'C' → logprob: -13.879267692565918
    9. ' ' → logprob: -14.004267692565918
    10. ' Coordinate' → logprob: -14.879267692565918

Token 1130: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -0.0005766240647062659
    2. 'x' → logprob: -7.750576496124268
    3. '(' → logprob: -8.875576972961426
    4. ' (' → logprob: -13.250576972961426
    5. ')x' → logprob: -13.375576972961426
    6. ')' → logprob: -13.625576972961426
    7. ')(' → logprob: -14.000576972961426
    8. '(
' → logprob: -14.875576972961426
    9. '<|end|>' → logprob: -15.500576972961426
    10. '```' → logprob: -16.25057601928711

Token 1131: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00024834630312398076
    2. ',y' → logprob: -8.750247955322266
    3. ' ,' → logprob: -9.375247955322266
    4. '<|end|>' → logprob: -12.750247955322266
    5. '),' → logprob: -14.000247955322266
    6. ')' → logprob: -15.000247955322266
    7. ',
' → logprob: -15.250247955322266
    8. '‌,' → logprob: -16.000247955322266
    9. ',),' → logprob: -16.750247955322266
    10. '```' → logprob: -16.875247955322266

Token 1132: ',z' (ID: 54920)
  Prédit: ',z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',z' → logprob: -0.10055579990148544
    2. ',' → logprob: -2.350555896759033
    3. 'z' → logprob: -8.100555419921875
    4. ' ,' → logprob: -10.100555419921875
    5. ' z' → logprob: -13.975555419921875
    6. ',Z' → logprob: -14.100555419921875
    7. ',x' → logprob: -14.475555419921875
    8. '(z' → logprob: -14.850555419921875
    9. ')' → logprob: -14.850555419921875
    10. ',y' → logprob: -14.975555419921875

Token 1133: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.02326434850692749
    2. ',' → logprob: -3.7732644081115723
    3. ',),' → logprob: -11.773263931274414
    4. ' ),' → logprob: -12.523263931274414
    5. '                               ' → logprob: -13.398263931274414
    6. ' ,' → logprob: -13.648263931274414
    7. '                           ' → logprob: -14.023263931274414
    8. '                       ' → logprob: -14.023263931274414
    9. ')' → logprob: -14.148263931274414
    10. ''),' → logprob: -14.523263931274414

Token 1134: ' alive' (ID: 23757)
  Prédit: 'alive'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'alive' → logprob: -0.04858986660838127
    2. ' alive' → logprob: -3.0485899448394775
    3. 'True' → logprob: -13.798589706420898
    4. 'al' → logprob: -14.298589706420898
    5. '                           ' → logprob: -15.423589706420898
    6. '                                   ' → logprob: -15.548589706420898
    7. ' True' → logprob: -15.673589706420898
    8. '                       ' → logprob: -16.2985897064209
    9. '_alive' → logprob: -16.5485897064209
    10. '                               ' → logprob: -16.9235897064209

Token 1135: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00022368213103618473
    2. '                       ' → logprob: -9.000224113464355
    3. ')
' → logprob: -9.750224113464355
    4. '           ' → logprob: -10.750224113464355
    5. '                   ' → logprob: -12.000224113464355
    6. ' )' → logprob: -12.250224113464355
    7. '               ' → logprob: -12.625224113464355
    8. '       ' → logprob: -12.750224113464355
    9. '                           ' → logprob: -13.875224113464355
    10. ')}' → logprob: -15.000224113464355

Token 1136: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1137: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.004524465650320053
    2. '
' → logprob: -5.629524230957031
    3. '       ' → logprob: -8.504524230957031
    4. 'case' → logprob: -8.629524230957031
    5. 'self' → logprob: -8.879524230957031
    6. '            
' → logprob: -9.129524230957031
    7. '<|end|>' → logprob: -9.129524230957031
    8. '               ' → logprob: -10.379524230957031
    9. '<|end|>' → logprob: -10.379524230957031
    10. '   ' → logprob: -11.004524230957031

Token 1138: ' One' (ID: 5108)
  Prédit: '#'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '#' → logprob: -0.6975152492523193
    2. '           ' → logprob: -1.3225152492523193
    3. '
' → logprob: -2.0725152492523193
    4. 'pass' → logprob: -3.5725152492523193
    5. 'continue' → logprob: -3.6975152492523193
    6. '       ' → logprob: -3.8225152492523193
    7. '<|end|>' → logprob: -5.197515487670898
    8. '            
' → logprob: -5.697515487670898
    9. ' pass' → logprob: -5.697515487670898
    10. ' continue' → logprob: -5.947515487670898

Token 1139: ' empty' (ID: 8213)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1140: ' line' (ID: 2543)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.60700923204422
    2. 'line' → logprob: -1.1070091724395752
    3. '_' → logprob: -2.107009172439575
    4. '_line' → logprob: -6.107009410858154
    5. '
' → logprob: -8.107008934020996
    6. 'try' → logprob: -9.357008934020996
    7. '_input' → logprob: -9.357008934020996
    8. ' line' → logprob: -9.857008934020996
    9. 'blank' → logprob: -10.107008934020996
    10. ' input' → logprob: -11.232008934020996

Token 1141: ' after' (ID: 1934)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -1.0451762676239014
    2. '                   ' → logprob: -1.0451762676239014
    3. '               ' → logprob: -1.6701762676239014
    4. 'input' → logprob: -2.2951762676239014
    5. ' input' → logprob: -6.9201765060424805
    6. '<|end|>' → logprob: -6.9201765060424805
    7. '
' → logprob: -7.1701765060424805
    8. '                       ' → logprob: -7.2951765060424805
    9. ' =' → logprob: -7.4201765060424805
    10. '                    
' → logprob: -7.5451765060424805

Token 1142: ' each' (ID: 2454)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.36027175188064575
    2. '_' → logprob: -1.235271692276001
    3. 'line' → logprob: -5.73527193069458
    4. 'empty' → logprob: -5.86027193069458
    5. '                   ' → logprob: -6.36027193069458
    6. 'if' → logprob: -6.86027193069458
    7. '           ' → logprob: -7.23527193069458
    8. 'try' → logprob: -7.61027193069458
    9. '
' → logprob: -7.73527193069458
    10. 'blank' → logprob: -8.235271453857422

Token 1143: ' layer' (ID: 10261)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.6048267483711243
    2. 'input' → logprob: -0.9798267483711243
    3. 'if' → logprob: -3.1048266887664795
    4. '
' → logprob: -5.104826927185059
    5. 'try' → logprob: -5.104826927185059
    6. 'empty' → logprob: -5.354826927185059
    7. 'line' → logprob: -5.479826927185059
    8. '           ' → logprob: -5.979826927185059
    9. ' _' → logprob: -6.354826927185059
    10. 'blank' → logprob: -6.479826927185059

Token 1144: '
' (ID: 198)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.4176553189754486
    2. '                   ' → logprob: -1.542655348777771
    3. 'input' → logprob: -2.5426552295684814
    4. '           ' → logprob: -3.0426552295684814
    5. ' input' → logprob: -7.5426554679870605
    6. '
' → logprob: -9.167654991149902
    7. '_' → logprob: -9.292654991149902
    8. '                       ' → logprob: -9.542654991149902
    9. ' =' → logprob: -9.917654991149902
    10. '(input' → logprob: -9.917654991149902

Token 1145: '               ' (ID: 506)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1146: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' (adapté à ' input') → logprob: -0.1572343409061432
    2. '_' → logprob: -2.0322344303131104
    3. '
' → logprob: -5.032234191894531
    4. 'if' → logprob: -5.407234191894531
    5. 'empty' → logprob: -6.782234191894531
    6. 'blank' → logprob: -7.407234191894531
    7. 'try' → logprob: -7.532234191894531
    8. '                    
' → logprob: -8.407234191894531
    9. '                
' → logprob: -8.657234191894531
    10. ' input' → logprob: -9.032234191894531

Token 1147: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00012035090912831947
    2. '()
' → logprob: -9.125120162963867
    3. '<|end|>' → logprob: -12.375120162963867
    4. '(' → logprob: -13.000120162963867
    5. '()\' → logprob: -13.625120162963867
    6. '();' → logprob: -13.875120162963867
    7. '()<' → logprob: -14.875120162963867
    8. '())' → logprob: -15.000120162963867
    9. '()<<' → logprob: -15.000120162963867
    10. '<|end|>' → logprob: -15.250120162963867

Token 1148: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0014773675939068198
    2. '       ' → logprob: -7.001477241516113
    3. '<|end|>' → logprob: -7.876477241516113
    4. '
' → logprob: -10.126477241516113
    5. '<|end|>' → logprob: -10.126477241516113
    6. '```' → logprob: -10.376477241516113
    7. '          ' → logprob: -10.626477241516113
    8. '   ' → logprob: -10.751477241516113
    9. 'Next' → logprob: -12.376477241516113
    10. '            
' → logprob: -12.501477241516113

Token 1149: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.04330917447805405
    2. 'rules' → logprob: -3.918309211730957
    3. 'birth' → logprob: -4.043309211730957
    4. '       ' → logprob: -6.293309211730957
    5. 'b' → logprob: -6.668309211730957
    6. '   ' → logprob: -7.543309211730957
    7. ' birth' → logprob: -7.793309211730957
    8. 'rule' → logprob: -8.418309211730957
    9. 'B' → logprob: -9.043309211730957
    10. 'self' → logprob: -9.293309211730957

Token 1150: ' read' (ID: 1729)
  Prédit: 'rules'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rules' → logprob: -0.1709335595369339
    2. 'birth' → logprob: -2.420933485031128
    3. 'rule' → logprob: -3.420933485031128
    4. 'b' → logprob: -4.795933723449707
    5. 'B' → logprob: -4.920933723449707
    6. 'N' → logprob: -5.170933723449707
    7. 'line' → logprob: -5.545933723449707
    8. 'bd' → logprob: -6.170933723449707
    9. '   ' → logprob: -6.545933723449707
    10. 'M' → logprob: -6.795933723449707

Token 1151: ' M' (ID: 391)
  Prédit: 'rules'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'rules' → logprob: -0.3089520335197449
    2. 'birth' → logprob: -1.9339520931243896
    3. 'rule' → logprob: -2.9339520931243896
    4. '           ' → logprob: -3.9339520931243896
    5. ' rules' → logprob: -4.3089518547058105
    6. 'B' → logprob: -4.5589518547058105
    7. 'line' → logprob: -4.9339518547058105
    8. 'b' → logprob: -5.3089518547058105
    9. ' birth' → logprob: -5.9339518547058105
    10. 'bd' → logprob: -6.3089518547058105

Token 1152: '1' (ID: 16)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.10565438866615295
    2. '           ' → logprob: -2.35565447807312
    3. ' M' → logprob: -5.230654239654541
    4. '                   ' → logprob: -10.4806547164917
    5. '               ' → logprob: -11.1056547164917
    6. '
' → logprob: -11.1056547164917
    7. '   ' → logprob: -11.8556547164917
    8. '       ' → logprob: -12.4806547164917
    9. ' =' → logprob: -12.8556547164917
    10. ',' → logprob: -13.3556547164917

Token 1153: ' and' (ID: 326)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.5945084095001221
    2. ' =' → logprob: -1.594508409500122
    3. '_line' → logprob: -1.594508409500122
    4. '=' → logprob: -4.219508171081543
    5. 'line' → logprob: -4.469508171081543
    6. '           ' → logprob: -5.219508171081543
    7. '_M' → logprob: -5.594508171081543
    8. '
' → logprob: -5.719508171081543
    9. '=M' → logprob: -6.469508171081543
    10. '=line' → logprob: -7.594508171081543

Token 1154: ' a' (ID: 261)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0009595814626663923
    2. ' M' → logprob: -7.750959396362305
    3. '           ' → logprob: -8.125959396362305
    4. 'rules' → logprob: -9.125959396362305
    5. 'R' → logprob: -10.625959396362305
    6. '
' → logprob: -11.000959396362305
    7. 'B' → logprob: -11.000959396362305
    8. '   ' → logprob: -11.250959396362305
    9. 'S' → logprob: -11.500959396362305
    10. 'birth' → logprob: -11.750959396362305

Token 1155: '_i' (ID: 10853)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.03264148533344269
    2. ' M' → logprob: -4.407641410827637
    3. 'fter' → logprob: -5.032641410827637
    4. 'l' → logprob: -5.782641410827637
    5. 'line' → logprob: -6.657641410827637
    6. 'nd' → logprob: -6.782641410827637
    7. '_M' → logprob: -7.032641410827637
    8. 'd' → logprob: -7.032641410827637
    9. 'll' → logprob: -7.157641410827637
    10. 'ge' → logprob: -7.407641410827637

Token 1156: '
' (ID: 198)
  Prédit: '_line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.1264108568429947
    2. ' =' → logprob: -2.251410961151123
    3. 'M' → logprob: -5.251410961151123
    4. '_lines' → logprob: -5.876410961151123
    5. 'line' → logprob: -6.376410961151123
    6. '=' → logprob: -6.626410961151123
    7. ',' → logprob: -7.251410961151123
    8. '=M' → logprob: -8.251410484313965
    9. '1' → logprob: -8.376410484313965
    10. '_M' → logprob: -9.001410484313965

Token 1157: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00023202638840302825
    2. ' M' → logprob: -9.375231742858887
    3. '
' → logprob: -9.750231742858887
    4. 'M' → logprob: -9.875231742858887
    5. ',' → logprob: -11.625231742858887
    6. '               ' → logprob: -12.125231742858887
    7. '       ' → logprob: -12.375231742858887
    8. '   ' → logprob: -12.500231742858887
    9. '                   ' → logprob: -12.500231742858887
    10. '            
' → logprob: -12.625231742858887

Token 1158: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' (adapté à ' M') → logprob: -0.4813559055328369
    2. ' M' → logprob: -0.9813559055328369
    3. '           ' → logprob: -5.356355667114258
    4. 'm' → logprob: -7.231355667114258
    5. 'MB' → logprob: -7.606355667114258
    6. 'BM' → logprob: -8.106355667114258
    7. '                   ' → logprob: -8.356355667114258
    8. ' m' → logprob: -8.731355667114258
    9. '               ' → logprob: -9.231355667114258
    10. ' MB' → logprob: -9.731355667114258

Token 1159: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.2359699308872223
    2. '_line' → logprob: -1.7359699010849
    3. ' =' → logprob: -3.4859700202941895
    4. '=' → logprob: -6.1109700202941895
    5. '_' → logprob: -7.6109700202941895
    6. ',' → logprob: -9.235969543457031
    7. '_LINE' → logprob: -9.610969543457031
    8. '_M' → logprob: -9.610969543457031
    9. 'M' → logprob: -9.735969543457031
    10. 'Line' → logprob: -10.235969543457031

Token 1160: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.020033739507198334
    2. ' =' → logprob: -4.020033836364746
    3. '=' → logprob: -6.395033836364746
    4. 'line' → logprob: -9.520033836364746
    5. '=line' → logprob: -9.645033836364746
    6. ',' → logprob: -10.770033836364746
    7. '_' → logprob: -11.645033836364746
    8. '_tokens' → logprob: -11.770033836364746
    9. '_lines' → logprob: -12.020033836364746
    10. ' line' → logprob: -12.020033836364746

Token 1161: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.03804665803909302
    2. '=' → logprob: -3.2880465984344482
    3. '=M' → logprob: -12.288046836853027
    4. '           ' → logprob: -15.038046836853027
    5. '=line' → logprob: -16.28804588317871
    6. '=input' → logprob: -16.78804588317871
    7. 'M' → logprob: -17.41304588317871
    8. ' M' → logprob: -17.41304588317871
    9. ',' → logprob: -17.41304588317871
    10. ' ' → logprob: -17.53804588317871

Token 1162: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.3536559045314789
    2. ' input' → logprob: -1.7286559343338013
    3. '''
' → logprob: -2.8536558151245117
    4. '''' → logprob: -3.4786558151245117
    5. ' ''
' → logprob: -3.4786558151245117
    6. ''' → logprob: -7.478655815124512
    7. ' ''' → logprob: -7.978655815124512
    8. '('')
' → logprob: -10.478655815124512
    9. ' ''
' → logprob: -10.728655815124512
    10. '=''
' → logprob: -10.853655815124512

Token 1163: '().' (ID: 1454)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.26139193773269653
    2. '=' → logprob: -1.5113918781280518
    3. '           ' → logprob: -4.761392116546631
    4. '=M' → logprob: -7.386392116546631
    5. '       ' → logprob: -9.761391639709473
    6. '='' → logprob: -10.261391639709473
    7. '               ' → logprob: -10.636391639709473
    8. '=''' → logprob: -10.886391639709473
    9. '            ' → logprob: -11.261391639709473
    10. '<|end|>' → logprob: -11.511391639709473

Token 1164: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.00026300468016415834
    2. 'split' → logprob: -8.250263214111328
    3. 'M' → logprob: -13.750263214111328
    4. 'rstrip' → logprob: -14.500263214111328
    5. ' strip' → logprob: -16.750263214111328
    6. ' M' → logprob: -17.375263214111328
    7. '_strip' → logprob: -17.375263214111328
    8. 'm' → logprob: -17.625263214111328
    9. 'str' → logprob: -19.625263214111328
    10. '.strip' → logprob: -19.625263214111328

Token 1165: '()
' (ID: 1234)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.8976544141769409
    2. '=' → logprob: -1.522654414176941
    3. '           ' → logprob: -1.522654414176941
    4. '
' → logprob: -2.6476545333862305
    5. '()
' → logprob: -3.2726545333862305
    6. '=M' → logprob: -3.8976545333862305
    7. '            
' → logprob: -5.0226545333862305
    8. '()' → logprob: -5.2726545333862305
    9. '=
' → logprob: -5.6476545333862305
    10. '       ' → logprob: -6.6476545333862305

Token 1166: '           ' (ID: 352)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.39138567447662354
    2. '           ' → logprob: -1.1413856744766235
    3. 'if' → logprob: -5.641385555267334
    4. 'm' → logprob: -7.766385555267334
    5. ' M' → logprob: -8.516386032104492
    6. '       ' → logprob: -8.641386032104492
    7. 'while' → logprob: -9.266386032104492
    8. ' if' → logprob: -10.516386032104492
    9. 'a' → logprob: -10.891386032104492
    10. '[M' → logprob: -12.141386032104492

Token 1167: ' while' (ID: 2049)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0646500438451767
    2. 'if' → logprob: -2.814650058746338
    3. 'while' (adapté à ' while') → logprob: -7.064650058746338
    4. 'm' → logprob: -7.314650058746338
    5. 'parts' → logprob: -7.564650058746338
    6. '           ' → logprob: -8.06464958190918
    7. 'birth' → logprob: -8.31464958190918
    8. 'b' → logprob: -10.31464958190918
    9. 'counts' → logprob: -11.31464958190918
    10. ' if' → logprob: -11.81464958190918

Token 1168: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00010688089241739362
    2. ' M' → logprob: -9.375106811523438
    3. 'not' → logprob: -10.750106811523438
    4. ' not' → logprob: -15.000106811523438
    5. 'len' → logprob: -16.125106811523438
    6. ' ' → logprob: -18.375106811523438
    7. '	M' → logprob: -18.875106811523438
    8. '   ' → logprob: -19.250106811523438
    9. '(M' → logprob: -20.125106811523438
    10. '=M' → logprob: -20.125106811523438

Token 1169: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07434068620204926
    2. 'M' → logprob: -2.949340581893921
    3. ' M' → logprob: -4.0743408203125
    4. ''' → logprob: -7.6993408203125
    5. ' ' → logprob: -7.6993408203125
    6. '   ' → logprob: -8.3243408203125
    7. '(M' → logprob: -8.9493408203125
    8. '  ' → logprob: -9.0743408203125
    9. '_' → logprob: -9.0743408203125
    10. ''M' → logprob: -9.3243408203125

Token 1170: '_line' (ID: 14418)
  Prédit: ' =='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' ==' → logprob: -0.7803272008895874
    2. ' !=' → logprob: -0.9053272008895874
    3. '==' → logprob: -2.155327320098877
    4. '!=' → logprob: -4.280327320098877
    5. '[' → logprob: -5.405327320098877
    6. '.startswith' → logprob: -7.655327320098877
    7. ' ' → logprob: -7.780327320098877
    8. '[]' → logprob: -8.155326843261719
    9. ' not' → logprob: -8.530326843261719
    10. '=' → logprob: -8.655326843261719

Token 1171: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.061993010342121124
    2. ' ==' → logprob: -2.81199312210083
    3. '=' → logprob: -11.311992645263672
    4. '.startswith' → logprob: -12.311992645263672
    5. '=='' → logprob: -12.686992645263672
    6. '==
' → logprob: -13.561992645263672
    7. '.strip' → logprob: -13.811992645263672
    8. '[' → logprob: -13.811992645263672
    9. '()==' → logprob: -14.311992645263672
    10. '===' → logprob: -14.811992645263672

Token 1172: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.018158020451664925
    2. ''' → logprob: -4.018157958984375
    3. '''
' → logprob: -12.643157958984375
    4. ' '':
' → logprob: -13.018157958984375
    5. '""' → logprob: -13.768157958984375
    6. '"":' → logprob: -14.018157958984375
    7. '"' → logprob: -15.143157958984375
    8. ''',' → logprob: -15.393157958984375
    9. '''.' → logprob: -16.518157958984375
    10. '':' → logprob: -17.518157958984375

Token 1173: '               ' (ID: 506)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.07745330780744553
    2. 'M' → logprob: -3.077453374862671
    3. ' M' → logprob: -4.702453136444092
    4. '               ' → logprob: -4.952453136444092
    5. ':' → logprob: -5.452453136444092
    6. '       ' → logprob: -6.202453136444092
    7. '   ' → logprob: -6.577453136444092
    8. ':
' → logprob: -7.077453136444092
    9. ' and' → logprob: -7.202453136444092
    10. '[M' → logprob: -7.452453136444092

Token 1174: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' (adapté à ' M') → logprob: -0.00011021859245374799
    2. ' M' → logprob: -9.375110626220703
    3. '           ' → logprob: -10.875110626220703
    4. '   ' → logprob: -12.875110626220703
    5. '               ' → logprob: -13.125110626220703
    6. '                   ' → logprob: -14.250110626220703
    7. '       ' → logprob: -14.750110626220703
    8. '                           ' → logprob: -15.875110626220703
    9. ' ' → logprob: -16.375110626220703
    10. '                       ' → logprob: -16.625110626220703

Token 1175: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. 'M' → logprob: -11.875007629394531
    3. ' =' → logprob: -14.750007629394531
    4. '=' → logprob: -15.000007629394531
    5. '=M' → logprob: -16.00000762939453
    6. '(M' → logprob: -16.87500762939453
    7. '   ' → logprob: -16.87500762939453
    8. ' M' → logprob: -18.62500762939453
    9. '```' → logprob: -18.87500762939453
    10. '
' → logprob: -19.25000762939453

Token 1176: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.03260709345340729
    2. 'M' → logprob: -4.407607078552246
    3. '1' → logprob: -4.657607078552246
    4. '=M' → logprob: -4.907607078552246
    5. '=' → logprob: -6.407607078552246
    6. 'Line' → logprob: -6.907607078552246
    7. ' =' → logprob: -8.782607078552246
    8. ' M' → logprob: -10.157607078552246
    9. '=line' → logprob: -10.407607078552246
    10. '_lines' → logprob: -10.782607078552246

Token 1177: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.033667489886283875
    2. ' =' → logprob: -3.40866756439209
    3. '=M' → logprob: -10.90866756439209
    4. 'M' → logprob: -13.03366756439209
    5. '=
' → logprob: -15.03366756439209
    6. '=line' → logprob: -15.03366756439209
    7. ' M' → logprob: -15.53366756439209
    8. '           ' → logprob: -16.158666610717773
    9. '=input' → logprob: -16.533666610717773
    10. '   ' → logprob: -17.283666610717773

Token 1178: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -7.493430894101039e-05
    2. ' input' → logprob: -9.500075340270996
    3. '=input' → logprob: -22.12507438659668
    4. '	input' → logprob: -22.62507438659668
    5. 'output' → logprob: -22.62507438659668
    6. '   ' → logprob: -22.62507438659668
    7. '(input' → logprob: -23.25007438659668
    8. '<input' → logprob: -23.37507438659668
    9. ' ' → logprob: -24.25007438659668
    10. 'int' → logprob: -24.37507438659668

Token 1179: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0023378278128802776
    2. '()
' → logprob: -6.50233793258667
    3. '().' → logprob: -7.12733793258667
    4. '())' → logprob: -10.877337455749512
    5. '()>' → logprob: -11.877337455749512
    6. '()

' → logprob: -13.502337455749512
    7. '()`' → logprob: -14.252337455749512
    8. '()
' → logprob: -14.627337455749512
    9. '()<' → logprob: -14.627337455749512
    10. '<|end|>' → logprob: -14.752337455749512

Token 1180: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.3933413028717041
    2. 'split' → logprob: -1.143341302871704
    3. 'M' → logprob: -5.643341064453125
    4. 'rstrip' → logprob: -5.893341064453125
    5. 'l' → logprob: -9.518341064453125
    6. 'startswith' → logprob: -10.268341064453125
    7. ' M' → logprob: -11.893341064453125
    8. '[M' → logprob: -11.893341064453125
    9. 'isdigit' → logprob: -12.143341064453125
    10. 'replace' → logprob: -12.393341064453125

Token 1181: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.011231612414121628
    2. '<|end|>' → logprob: -5.761231422424316
    3. '<|end|>' → logprob: -5.886231422424316
    4. ')' → logprob: -5.886231422424316
    5. '            
' → logprob: -7.761231422424316
    6. ' M' → logprob: -7.886231422424316
    7. ',' → logprob: -7.886231422424316
    8. '
' → logprob: -8.511231422424316
    9. 'M' → logprob: -8.886231422424316
    10. '()' → logprob: -8.886231422424316

Token 1182: '           ' (ID: 352)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0009226576657965779
    2. '           ' → logprob: -7.000922679901123
    3. ' M' → logprob: -12.250922203063965
    4. 'parts' → logprob: -12.875922203063965
    5. 'm' → logprob: -13.000922203063965
    6. 'if' → logprob: -14.875922203063965
    7. '       ' → logprob: -15.125922203063965
    8. '```' → logprob: -15.250922203063965
    9. '               ' → logprob: -15.500922203063965
    10. '   ' → logprob: -16.12592315673828

Token 1183: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' (adapté à ' M') → logprob: -0.0002930366899818182
    2. '           ' → logprob: -8.375292778015137
    3. 'parts' → logprob: -9.750292778015137
    4. 'm' → logprob: -13.375292778015137
    5. ' M' → logprob: -14.000292778015137
    6. '               ' → logprob: -15.000292778015137
    7. 'birth' → logprob: -15.000292778015137
    8. 'tokens' → logprob: -15.500292778015137
    9. '                   ' → logprob: -15.875292778015137
    10. '```' → logprob: -16.250293731689453

Token 1184: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0005413581384345889
    2. ' =' → logprob: -7.7505412101745605
    3. '=' → logprob: -9.625541687011719
    4. '_' → logprob: -11.250541687011719
    5. ',' → logprob: -11.625541687011719
    6. '=int' → logprob: -12.750541687011719
    7. '   ' → logprob: -13.250541687011719
    8. '           ' → logprob: -13.500541687011719
    9. 'M' → logprob: -13.625541687011719
    10. ' ' → logprob: -13.875541687011719

Token 1185: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.06258295476436615
    2. '=' → logprob: -3.0625829696655273
    3. '_tokens' → logprob: -4.937582969665527
    4. '_parts' → logprob: -5.562582969665527
    5. ',' → logprob: -6.312582969665527
    6. '_values' → logprob: -7.687582969665527
    7. 'tokens' → logprob: -8.937582969665527
    8. 's' → logprob: -9.062582969665527
    9. '_vals' → logprob: -10.187582969665527
    10. '   ' → logprob: -10.562582969665527

Token 1186: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -6.706686690449715e-05
    2. ' int' → logprob: -10.000066757202148
    3. 'M' → logprob: -10.750066757202148
    4. ' M' → logprob: -15.875066757202148
    5. '[int' → logprob: -17.00006675720215
    6. '
' → logprob: -19.25006675720215
    7. '(int' → logprob: -20.12506675720215
    8. '   ' → logprob: -21.25006675720215
    9. '<int' → logprob: -21.50006675720215
    10. ' ' → logprob: -21.50006675720215

Token 1187: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -1.7835754988482222e-05
    2. 'M' → logprob: -11.000018119812012
    3. '(
' → logprob: -14.750018119812012
    4. '(' → logprob: -14.875018119812012
    5. ' (' → logprob: -16.000017166137695
    6. '((' → logprob: -16.875017166137695
    7. '('' → logprob: -17.000017166137695
    8. '
' → logprob: -17.250017166137695
    9. '[M' → logprob: -18.000017166137695
    10. '```' → logprob: -18.625017166137695

Token 1188: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.919942486798391e-05
    2. ')' → logprob: -9.875059127807617
    3. '_' → logprob: -13.375059127807617
    4. '[' → logprob: -13.625059127807617
    5. '(M' → logprob: -14.000059127807617
    6. '(' → logprob: -14.375059127807617
    7. '```' → logprob: -14.375059127807617
    8. '('' → logprob: -15.000059127807617
    9. ' ' → logprob: -15.250059127807617
    10. '())' → logprob: -15.625059127807617

Token 1189: '_line' (ID: 14418)
  Prédit: '(M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(M' → logprob: -0.29036539793014526
    2. ')' → logprob: -1.41536545753479
    3. '()' → logprob: -6.040365219116211
    4. '())' → logprob: -6.665365219116211
    5. ' M' → logprob: -6.665365219116211
    6. '[' → logprob: -7.165365219116211
    7. '[M' → logprob: -7.415365219116211
    8. '1' → logprob: -7.540365219116211
    9. ')
' → logprob: -7.790365219116211
    10. 'M' → logprob: -7.915365219116211

Token 1190: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.009721734561026096
    2. ')
' → logprob: -5.009721755981445
    3. '())' → logprob: -6.009721755981445
    4. '()' → logprob: -8.759721755981445
    5. ' )' → logprob: -8.759721755981445
    6. '())
' → logprob: -9.134721755981445
    7. '[' → logprob: -10.134721755981445
    8. '<|end|>' → logprob: -11.259721755981445
    9. '           ' → logprob: -11.384721755981445
    10. ' )
' → logprob: -12.259721755981445

Token 1191: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.015463948249816895
    2. 'a' → logprob: -4.265463829040527
    3. 'b' → logprob: -8.140463829040527
    4. 'M' → logprob: -8.140463829040527
    5. ' a' → logprob: -8.640463829040527
    6. 'm' → logprob: -9.640463829040527
    7. ' M' → logprob: -9.640463829040527
    8. 'ai' → logprob: -9.890463829040527
    9. '       ' → logprob: -10.015463829040527
    10. '<|end|>' → logprob: -10.140463829040527

Token 1192: ' a' (ID: 261)
  Prédit: 'birth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'birth' → logprob: -0.29073289036750793
    2. 'b' → logprob: -2.7907328605651855
    3. 'B' → logprob: -2.9157328605651855
    4. '           ' → logprob: -3.0407328605651855
    5. 'a' (adapté à ' a') → logprob: -3.2907328605651855
    6. 'M' → logprob: -3.2907328605651855
    7. 'counts' → logprob: -5.2907328605651855
    8. 'bd' → logprob: -5.5407328605651855
    9. 'rules' → logprob: -6.4157328605651855
    10. 'm' → logprob: -7.5407328605651855

Token 1193: '_values' (ID: 20393)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 's' → logprob: -0.2278590053319931
    2. '_counts' → logprob: -2.2278590202331543
    3. ' =' → logprob: -3.8528590202331543
    4. '_' → logprob: -3.9778590202331543
    5. '_s' → logprob: -4.102859020233154
    6. '1' → logprob: -4.852859020233154
    7. 'a' → logprob: -5.477859020233154
    8. '_sets' → logprob: -5.602859020233154
    9. '_set' → logprob: -5.852859020233154
    10. ' _' → logprob: -5.977859020233154

Token 1194: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.47410082817077637
    2. ' =' → logprob: -0.9741008281707764
    3. '=[]' → logprob: -10.974101066589355
    4. '=[]
' → logprob: -13.599101066589355
    5. '[]' → logprob: -13.849101066589355
    6. '   ' → logprob: -13.974101066589355
    7. '[' → logprob: -14.224101066589355
    8. ':' → logprob: -14.224101066589355
    9. ' ' → logprob: -14.724101066589355
    10. '           ' → logprob: -14.974101066589355

Token 1195: ' []
' (ID: 8911)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.1510520726442337
    2. '[]' → logprob: -2.6510519981384277
    3. '[]
' → logprob: -3.4010519981384277
    4. 'list' → logprob: -4.151051998138428
    5. ' set' → logprob: -4.776051998138428
    6. '{' → logprob: -5.026051998138428
    7. ' []' → logprob: -5.901051998138428
    8. '[list' → logprob: -6.651051998138428
    9. '[' → logprob: -7.401051998138428
    10. ' list' → logprob: -8.276052474975586

Token 1196: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.08856117725372314
    2. ' for' → logprob: -3.4635610580444336
    3. 'while' → logprob: -4.338561058044434
    4. 'for' → logprob: -4.463561058044434
    5. ' while' → logprob: -4.588561058044434
    6. '            ' → logprob: -4.963561058044434
    7. '[' → logprob: -5.713561058044434
    8. '               ' → logprob: -6.463561058044434
    9. '                   ' → logprob: -6.838561058044434
    10. '            
' → logprob: -7.338561058044434

Token 1197: ' if' (ID: 538)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.08021388947963715
    2. ' for' → logprob: -2.580213785171509
    3. 'while' → logprob: -6.705214023590088
    4. ' while' → logprob: -9.33021354675293
    5. ' 
' → logprob: -12.33021354675293
    6. '           ' → logprob: -12.83021354675293
    7. '            
' → logprob: -14.45521354675293
    8. '            ' → logprob: -14.70521354675293
    9. '[' → logprob: -14.70521354675293
    10. '
' → logprob: -14.83021354675293

Token 1198: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.005074244923889637
    2. ' M' → logprob: -5.3800740242004395
    3. 'len' → logprob: -7.8800740242004395
    4. 'a' → logprob: -10.130074501037598
    5. ' len' → logprob: -10.380074501037598
    6. '           ' → logprob: -13.755074501037598
    7. '   ' → logprob: -13.880074501037598
    8. ' ' → logprob: -14.380074501037598
    9. '       ' → logprob: -14.755074501037598
    10. ' a' → logprob: -14.755074501037598

Token 1199: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0018486743792891502
    2. 'a' → logprob: -7.7518486976623535
    3. '_values' → logprob: -7.7518486976623535
    4. '_' → logprob: -8.501848220825195
    5. '   ' → logprob: -8.501848220825195
    6. '=' → logprob: -9.126848220825195
    7. '[a' → logprob: -10.001848220825195
    8. '           ' → logprob: -10.001848220825195
    9. '[' → logprob: -10.376848220825195
    10. ' =' → logprob: -10.376848220825195

Token 1200: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.7146760821342468
    2. ' >' → logprob: -0.7146760821342468
    3. ':' → logprob: -4.5896759033203125
    4. ' <' → logprob: -4.8396759033203125
    5. ' !=' → logprob: -6.8396759033203125
    6. ':
' → logprob: -6.9646759033203125
    7. ' ==' → logprob: -7.9646759033203125
    8. '<len' → logprob: -8.964675903320312
    9. '!=' → logprob: -9.089675903320312
    10. '<' → logprob: -9.214675903320312

Token 1201: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00018399098189547658
    2. ' ' → logprob: -8.625184059143066
    3. '=' → logprob: -12.375184059143066
    4. '   ' → logprob: -16.12518310546875
    5. 'a' → logprob: -17.50018310546875
    6. '>' → logprob: -17.62518310546875
    7. '
' → logprob: -17.75018310546875
    8. ':' → logprob: -17.87518310546875
    9. '```' → logprob: -18.00018310546875
    10. '1' → logprob: -18.25018310546875

Token 1202: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -6.2729995988775045e-06
    2. ' ' → logprob: -12.000006675720215
    3. 'a' → logprob: -17.0000057220459
    4. '=' → logprob: -17.5000057220459
    5. '1' → logprob: -18.5000057220459
    6. '>' → logprob: -19.7500057220459
    7. '```' → logprob: -19.7500057220459
    8. '<|end|>' → logprob: -20.0000057220459
    9. '[' → logprob: -20.1250057220459
    10. 'M' → logprob: -20.2500057220459

Token 1203: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.3427720367908478
    2. ':' → logprob: -1.4677720069885254
    3. ' for' → logprob: -3.0927720069885254
    4. 'for' → logprob: -5.717772006988525
    5. '               ' → logprob: -5.842772006988525
    6. ' :
' → logprob: -5.967772006988525
    7. '            ' → logprob: -6.217772006988525
    8. '           ' → logprob: -6.467772006988525
    9. ' and' → logprob: -8.092772483825684
    10. ' a' → logprob: -8.467772483825684

Token 1204: '               ' (ID: 506)
  Prédit: ' for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.03712470829486847
    2. 'for' → logprob: -4.1621246337890625
    3. '           ' → logprob: -4.6621246337890625
    4. '               ' → logprob: -5.2871246337890625
    5. '            ' → logprob: -6.5371246337890625
    6. ' while' → logprob: -6.5371246337890625
    7. '[' → logprob: -7.5371246337890625
    8. ' a' → logprob: -7.9121246337890625
    9. '                           ' → logprob: -8.162124633789062
    10. 'while' → logprob: -8.287124633789062

Token 1205: ' #' (ID: 1069)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.8372403383255005
    2. ' for' → logprob: -1.2122403383255005
    3. 'a' → logprob: -1.8372403383255005
    4. ' a' → logprob: -2.962240219116211
    5. 'while' → logprob: -3.462240219116211
    6. ' line' → logprob: -4.462240219116211
    7. ' while' → logprob: -4.587240219116211
    8. 'line' → logprob: -5.962240219116211
    9. '               ' → logprob: -6.087240219116211
    10. '           ' → logprob: -8.212240219116211

Token 1206: ' May' (ID: 4273)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.2309243232011795
    2. 'for' → logprob: -1.730924367904663
    3. 'while' → logprob: -3.605924367904663
    4. 'line' → logprob: -7.105924129486084
    5. ' a' → logprob: -8.230924606323242
    6. ' for' → logprob: -8.480924606323242
    7. 'values' → logprob: -8.730924606323242
    8. '           ' → logprob: -9.355924606323242
    9. 'parts' → logprob: -9.355924606323242
    10. 'tokens' → logprob: -9.355924606323242

Token 1207: ' be' (ID: 413)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5131217241287231
    2. 'a' → logprob: -1.8881217241287231
    3. ' be' → logprob: -2.1381216049194336
    4. ' for' → logprob: -3.2631216049194336
    5. ' while' → logprob: -3.5131216049194336
    6. ' not' → logprob: -3.8881216049194336
    7. 'while' → logprob: -4.263121604919434
    8. 'for' → logprob: -4.513121604919434
    9. ' continue' → logprob: -4.888121604919434
    10. ' line' → logprob: -5.763121604919434

Token 1208: ' in' (ID: 306)
  Prédit: ' a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' a' → logprob: -0.5285870432853699
    2. 'a' → logprob: -1.1535871028900146
    3. ' True' → logprob: -3.5285871028900146
    4. 'len' → logprob: -4.0285868644714355
    5. ' len' → logprob: -4.0285868644714355
    6. 'while' → logprob: -5.2785868644714355
    7. ' not' → logprob: -5.2785868644714355
    8. ' on' → logprob: -5.5285868644714355
    9. 'True' → logprob: -5.6535868644714355
    10. ' while' → logprob: -5.7785868644714355

Token 1209: ' multiple' (ID: 7598)
  Prédit: 'one'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'one' → logprob: -1.1207629442214966
    2. ' one' → logprob: -1.2457629442214966
    3. 'input' → logprob: -1.9957629442214966
    4. 'list' → logprob: -2.620762825012207
    5. 'len' → logprob: -2.745762825012207
    6. 'a' → logprob: -3.120762825012207
    7. ' input' → logprob: -3.620762825012207
    8. ' a' → logprob: -4.370762825012207
    9. ' len' → logprob: -4.745762825012207
    10. '   ' → logprob: -5.245762825012207

Token 1210: ' lines' (ID: 8698)
  Prédit: 'lines'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'lines' → logprob: -0.6653161644935608
    2. ' lines' → logprob: -0.7903161644935608
    3. 'input' → logprob: -3.915316104888916
    4. 'line' → logprob: -4.665316104888916
    5. ' input' → logprob: -6.915316104888916
    6. ' line' → logprob: -7.165316104888916
    7. 'a' → logprob: -7.665316104888916
    8. 'inputs' → logprob: -8.540316581726074
    9. 'tokens' → logprob: -9.415316581726074
    10. 's' → logprob: -9.540316581726074

Token 1211: ',' (ID: 11)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.06268127262592316
    2. ' while' → logprob: -3.562681198120117
    3. 'for' → logprob: -4.812681198120117
    4. '           ' → logprob: -5.062681198120117
    5. 'a' → logprob: -5.187681198120117
    6. 'tokens' → logprob: -5.312681198120117
    7. '               ' → logprob: -5.937681198120117
    8. 'line' → logprob: -6.687681198120117
    9. '                   ' → logprob: -7.187681198120117
    10. 'values' → logprob: -7.312681198120117

Token 1212: ' read' (ID: 1729)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.47719740867614746
    2. ' while' → logprob: -0.9771974086761475
    3. '               ' → logprob: -6.977197647094727
    4. '           ' → logprob: -7.727197647094727
    5. 'a' → logprob: -7.852197647094727
    6. '                   ' → logprob: -8.227197647094727
    7. ' tokens' → logprob: -8.227197647094727
    8. 'tokens' → logprob: -8.352197647094727
    9. 'remaining' → logprob: -8.977197647094727
    10. ' values' → logprob: -9.102197647094727

Token 1213: ' enough' (ID: 4951)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.03642331808805466
    2. ' while' → logprob: -3.9114232063293457
    3. 'len' → logprob: -4.411423206329346
    4. 'tokens' → logprob: -6.536423206329346
    5. 'a' → logprob: -6.911423206329346
    6. 'values' → logprob: -8.036423683166504
    7. ' len' → logprob: -8.286423683166504
    8. 'remaining' → logprob: -8.661423683166504
    9. 'count' → logprob: -8.911423683166504
    10. ' tokens' → logprob: -9.911423683166504

Token 1214: ' values' (ID: 4824)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.04012257605791092
    2. ' while' → logprob: -3.5401225090026855
    3. 'tokens' → logprob: -4.9151225090026855
    4. 'for' → logprob: -7.1651225090026855
    5. 'a' → logprob: -7.2901225090026855
    6. 'values' → logprob: -7.6651225090026855
    7. '               ' → logprob: -7.6651225090026855
    8. '           ' → logprob: -8.415122985839844
    9. '                   ' → logprob: -9.665122985839844
    10. 'to' → logprob: -9.665122985839844

Token 1215: '
' (ID: 198)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.38944587111473083
    2. ' while' → logprob: -1.3894459009170532
    3. '           ' → logprob: -3.0144457817077637
    4. '               ' → logprob: -4.139445781707764
    5. '                   ' → logprob: -6.264445781707764
    6. 'a' → logprob: -6.389445781707764
    7. 'tokens' → logprob: -6.639445781707764
    8. 'values' → logprob: -7.139445781707764
    9. ' (' → logprob: -7.639445781707764
    10. ' line' → logprob: -8.014446258544922

Token 1216: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.7040159702301025
    2. '                   ' → logprob: -1.3290159702301025
    3. ' while' → logprob: -2.8290159702301025
    4. 'while' → logprob: -2.9540159702301025
    5. '                       ' → logprob: -4.079015731811523
    6. '                           ' → logprob: -4.204015731811523
    7. '[' → logprob: -4.204015731811523
    8. '           ' → logprob: -4.204015731811523
    9. '                ' → logprob: -4.329015731811523
    10. ' for' → logprob: -4.579015731811523

Token 1217: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0843542069196701
    2. ' while' → logprob: -2.5843541622161865
    3. 'a' → logprob: -5.959354400634766
    4. '               ' → logprob: -6.334354400634766
    5. 'tokens' → logprob: -7.709354400634766
    6. 'values' → logprob: -8.459354400634766
    7. ' a' → logprob: -9.084354400634766
    8. '           ' → logprob: -9.334354400634766
    9. ' tokens' → logprob: -9.709354400634766
    10. '                   ' → logprob: -9.959354400634766

Token 1218: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00015920029545668513
    2. ' len' → logprob: -8.75015926361084
    3. '(len' → logprob: -14.50015926361084
    4. '
' → logprob: -17.250158309936523
    5. '	len' → logprob: -18.000158309936523
    6. '   ' → logprob: -18.250158309936523
    7. 'a' → logprob: -18.750158309936523
    8. 'sum' → logprob: -19.125158309936523
    9. '    ' → logprob: -20.875158309936523
    10. ' ' → logprob: -21.000158309936523

Token 1219: '(a' (ID: 6271)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.10027578473091125
    2. '(a' → logprob: -2.350275754928589
    3. ' a' → logprob: -9.600275993347168
    4. '(' → logprob: -14.600275993347168
    5. '[a' → logprob: -15.100275993347168
    6. 'A' → logprob: -15.975275993347168
    7. '#a' → logprob: -16.10027503967285
    8. '(
' → logprob: -16.10027503967285
    9. '_a' → logprob: -16.60027503967285
    10. '>a' → logprob: -16.85027503967285

Token 1220: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.00021307668066583574
    2. 'a' → logprob: -8.625212669372559
    3. 'values' → logprob: -10.375212669372559
    4. '(a' → logprob: -13.875212669372559
    5. '_a' → logprob: -14.125212669372559
    6. '_VALUES' → logprob: -15.750212669372559
    7. '(_' → logprob: -16.125213623046875
    8. 's' → logprob: -16.500213623046875
    9. '(values' → logprob: -17.375213623046875
    10. ')' → logprob: -17.375213623046875

Token 1221: ')' (ID: 8)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.08976143598556519
    2. '<' → logprob: -2.46476149559021
    3. '<M' → logprob: -7.464761257171631
    4. '<len' → logprob: -8.964761734008789
    5. ')' → logprob: -10.214761734008789
    6. '<m' → logprob: -11.089761734008789
    7. ')<' → logprob: -11.214761734008789
    8. '<a' → logprob: -11.214761734008789
    9. '<n' → logprob: -11.714761734008789
    10. 'a' → logprob: -12.339761734008789

Token 1222: ' <' (ID: 464)
  Prédit: ' <'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.22576214373111725
    2. '<' → logprob: -1.600762128829956
    3. '<len' → logprob: -8.600762367248535
    4. '<M' → logprob: -9.600762367248535
    5. ' ' → logprob: -10.850762367248535
    6. '[' → logprob: -11.225762367248535
    7. '<n' → logprob: -11.600762367248535
    8. '<size' → logprob: -11.600762367248535
    9. '<m' → logprob: -12.100762367248535
    10. '()<' → logprob: -12.225762367248535

Token 1223: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -1.0280383548888494e-06
    2. ' M' → logprob: -13.875000953674316
    3. '[M' → logprob: -17.875001907348633
    4. '>M' → logprob: -19.875001907348633
    5. '(M' → logprob: -20.000001907348633
    6. '<M' → logprob: -20.750001907348633
    7. '=M' → logprob: -21.000001907348633
    8. 'm' → logprob: -21.000001907348633
    9. '           ' → logprob: -21.375001907348633
    10. ':M' → logprob: -21.750001907348633

Token 1224: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.676981345459353e-06
    2. '(M' → logprob: -12.750005722045898
    3. 'M' → logprob: -13.500005722045898
    4. '(' → logprob: -14.500005722045898
    5. '   ' → logprob: -15.625005722045898
    6. ' ' → logprob: -16.2500057220459
    7. '_' → logprob: -16.3750057220459
    8. '           ' → logprob: -16.3750057220459
    9. '
' → logprob: -16.5000057220459
    10. '               ' → logprob: -16.6250057220459

Token 1225: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.6105819940567017
    2. ':' → logprob: -1.2355819940567017
    3. '                   ' → logprob: -2.735581874847412
    4. ' and' → logprob: -3.485581874847412
    5. '               ' → logprob: -4.485581874847412
    6. '):
' → logprob: -4.610581874847412
    7. '):' → logprob: -4.985581874847412
    8. 'and' → logprob: -5.235581874847412
    9. '():
' → logprob: -5.235581874847412
    10. 'a' → logprob: -5.610581874847412

Token 1226: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.07958326488733292
    2. ' line' → logprob: -2.829583168029785
    3. 'line' → logprob: -4.829583168029785
    4. 'tokens' → logprob: -5.829583168029785
    5. 'token' → logprob: -6.454583168029785
    6. '               ' → logprob: -6.704583168029785
    7. ' tokens' → logprob: -7.079583168029785
    8. 'values' → logprob: -7.454583168029785
    9. '                       ' → logprob: -8.204583168029785
    10. ' values' → logprob: -8.204583168029785

Token 1227: ' line' (ID: 2543)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.07530555874109268
    2. '                   ' → logprob: -2.825305461883545
    3. 'line' (adapté à ' line') → logprob: -4.950305461883545
    4. ' a' → logprob: -6.325305461883545
    5. 'parts' → logprob: -6.325305461883545
    6. ' line' → logprob: -7.075305461883545
    7. ' parts' → logprob: -7.325305461883545
    8. '   ' → logprob: -8.450305938720703
    9. 'tokens' → logprob: -8.575305938720703
    10. '               ' → logprob: -9.075305938720703

Token 1228: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.23188839852809906
    2. '=' → logprob: -1.6068884134292603
    3. '_tokens' → logprob: -5.731888294219971
    4. 'tokens' → logprob: -5.856888294219971
    5. '=line' → logprob: -8.856888771057129
    6. '                   ' → logprob: -9.981888771057129
    7. ' tokens' → logprob: -10.356888771057129
    8. 'token' → logprob: -10.731888771057129
    9. '_token' → logprob: -11.356888771057129
    10. '.tokens' → logprob: -11.606888771057129

Token 1229: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20143575966358185
    2. ' input' → logprob: -1.7014358043670654
    3. '                   ' → logprob: -10.951436042785645
    4. '(input' → logprob: -14.076436042785645
    5. '=input' → logprob: -14.076436042785645
    6. '	input' → logprob: -14.201436042785645
    7. '   ' → logprob: -14.451436042785645
    8. '               ' → logprob: -14.576436042785645
    9. 'line' → logprob: -14.951436042785645
    10. '<input' → logprob: -15.076436042785645

Token 1230: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -2.4868770196917467e-05
    2. '()
' → logprob: -11.250024795532227
    3. '()' → logprob: -11.750024795532227
    4. '                   ' → logprob: -12.625024795532227
    5. '.strip' → logprob: -15.375024795532227
    6. ' ().' → logprob: -16.375024795532227
    7. '               ' → logprob: -16.625024795532227
    8. '.' → logprob: -16.625024795532227
    9. '=' → logprob: -16.625024795532227
    10. '                       ' → logprob: -16.875024795532227

Token 1231: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.0002692032721824944
    2. 'split' → logprob: -8.250268936157227
    3. 'rstrip' → logprob: -12.000268936157227
    4. '.strip' → logprob: -13.750268936157227
    5. ' strip' → logprob: -15.000268936157227
    6. 'extend' → logprob: -15.250268936157227
    7. '(strip' → logprob: -16.625268936157227
    8. 'trim' → logprob: -17.500268936157227
    9. '_strip' → logprob: -17.875268936157227
    10. '-strip' → logprob: -19.250268936157227

Token 1232: '()
' (ID: 1234)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004973308648914099
    2. '                    
' → logprob: -6.754973411560059
    3. '               ' → logprob: -7.254973411560059
    4. '                       ' → logprob: -7.629973411560059
    5. 'tokens' → logprob: -7.754973411560059
    6. '<|end|>' → logprob: -8.004973411560059
    7. '                    ' → logprob: -8.379973411560059
    8. ' =' → logprob: -8.754973411560059
    9. ')' → logprob: -9.129973411560059
    10. '           ' → logprob: -9.254973411560059

Token 1233: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.004993228707462549
    2. 'tokens' → logprob: -6.129993438720703
    3. 'a' → logprob: -6.379993438720703
    4. '               ' → logprob: -8.004993438720703
    5. '                       ' → logprob: -8.379993438720703
    6. '           ' → logprob: -9.004993438720703
    7. 'for' → logprob: -9.504993438720703
    8. '       ' → logprob: -9.629993438720703
    9. ' tokens' → logprob: -10.129993438720703
    10. ',' → logprob: -10.254993438720703

Token 1234: ' if' (ID: 538)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.3925381600856781
    2. '                   ' → logprob: -1.1425381898880005
    3. 'for' → logprob: -6.142538070678711
    4. 'if' (adapté à ' if') → logprob: -6.267538070678711
    5. '           ' → logprob: -7.642538070678711
    6. '               ' → logprob: -8.142538070678711
    7. '                       ' → logprob: -8.267538070678711
    8. '       ' → logprob: -8.392538070678711
    9. ' a' → logprob: -9.017538070678711
    10. 'tokens' → logprob: -9.392538070678711

Token 1235: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0006021226872690022
    2. ' line' → logprob: -7.5006022453308105
    3. 'not' → logprob: -10.000601768493652
    4. ' not' → logprob: -12.500601768493652
    5. 'len' → logprob: -16.75060272216797
    6. '(line' → logprob: -18.25060272216797
    7. ' ' → logprob: -18.75060272216797
    8. '   ' → logprob: -18.87560272216797
    9. '	line' → logprob: -19.12560272216797
    10. '#line' → logprob: -19.50060272216797

Token 1236: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.10726869106292725
    2. ':' → logprob: -2.732268810272217
    3. ' ==' → logprob: -4.232268810272217
    4. '!=' → logprob: -4.607268810272217
    5. ' !=' → logprob: -4.857268810272217
    6. ':
' → logprob: -6.232268810272217
    7. '!='' → logprob: -6.482268810272217
    8. '<|end|>' → logprob: -8.232268333435059
    9. '=' → logprob: -8.857268333435059
    10. '):' → logprob: -9.732268333435059

Token 1237: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.2520102560520172
    2. ''' → logprob: -1.5020102262496948
    3. ' '':
' → logprob: -10.377010345458984
    4. '"":' → logprob: -10.502010345458984
    5. '''
' → logprob: -11.877010345458984
    6. '""' → logprob: -12.127010345458984
    7. '"' → logprob: -13.252010345458984
    8. '''.' → logprob: -13.252010345458984
    9. ''',' → logprob: -13.377010345458984
    10. ''''' → logprob: -13.627010345458984

Token 1238: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.04587326571345329
    2. ':' → logprob: -3.7958731651306152
    3. ':
' → logprob: -3.9208731651306152
    4. '                   ' → logprob: -6.045873165130615
    5. '                      ' → logprob: -10.545873641967773
    6. 'continue' → logprob: -10.670873641967773
    7. ',' → logprob: -11.170873641967773
    8. '):
' → logprob: -11.295873641967773
    9. ' and' → logprob: -11.295873641967773
    10. '       ' → logprob: -11.420873641967773

Token 1239: ' continue' (ID: 4901)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.42694708704948425
    2. 'continue' (adapté à ' continue') → logprob: -1.1769471168518066
    3. ' continue' → logprob: -3.3019471168518066
    4. '                           ' → logprob: -6.301947116851807
    5. '   ' → logprob: -8.176946640014648
    6. '                   ' → logprob: -8.426946640014648
    7. '	continue' → logprob: -9.801946640014648
    8. '       ' → logprob: -10.426946640014648
    9. '           ' → logprob: -10.926946640014648
    10. '               ' → logprob: -11.301946640014648

Token 1240: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0033540434669703245
    2. '                       ' → logprob: -6.753354072570801
    3. ' a' → logprob: -7.878354072570801
    4. ' for' → logprob: -8.0033540725708
    5. '               ' → logprob: -8.0033540725708
    6. 'a' → logprob: -8.1283540725708
    7. ' tokens' → logprob: -8.2533540725708
    8. '           ' → logprob: -9.5033540725708
    9. 'tokens' → logprob: -9.5033540725708
    10. '                    ' → logprob: -9.7533540725708

Token 1241: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02667447179555893
    2. 'a' → logprob: -3.651674509048462
    3. ' a' → logprob: -8.776674270629883
    4. '               ' → logprob: -9.151674270629883
    5. 'tokens' → logprob: -10.401674270629883
    6. '                       ' → logprob: -10.651674270629883
    7. '           ' → logprob: -11.151674270629883
    8. '   ' → logprob: -11.776674270629883
    9. 'for' → logprob: -12.276674270629883
    10. '                  ' → logprob: -12.276674270629883

Token 1242: ' a' (ID: 261)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' (adapté à ' a') → logprob: -0.03556498512625694
    2. '                   ' → logprob: -3.53556489944458
    3. ' a' → logprob: -6.03556489944458
    4. 'for' → logprob: -6.28556489944458
    5. 'tokens' → logprob: -7.16056489944458
    6. 'values' → logprob: -8.035565376281738
    7. '               ' → logprob: -8.785565376281738
    8. '           ' → logprob: -9.785565376281738
    9. 'parts' → logprob: -9.785565376281738
    10. '                       ' → logprob: -9.910565376281738

Token 1243: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -0.025029057636857033
    2. '_tokens' → logprob: -4.025029182434082
    3. '_vals' → logprob: -6.150029182434082
    4. 'values' → logprob: -6.275029182434082
    5. 'tokens' → logprob: -7.150029182434082
    6. '                   ' → logprob: -7.150029182434082
    7. '+=' → logprob: -7.900029182434082
    8. 'vals' → logprob: -8.275029182434082
    9. '_parts' → logprob: -8.650029182434082
    10. '.extend' → logprob: -8.775029182434082

Token 1244: '.extend' (ID: 34151)
  Prédit: '.extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.04511469230055809
    2. '+=' → logprob: -3.295114755630493
    3. ' +=' → logprob: -5.045114517211914
    4. '.' → logprob: -7.420114517211914
    5. ' .' → logprob: -12.045114517211914
    6. '+' → logprob: -14.170114517211914
    7. 'extend' → logprob: -14.420114517211914
    8. '+=(' → logprob: -14.795114517211914
    9. '.=' → logprob: -15.045114517211914
    10. '+="' → logprob: -15.420114517211914

Token 1245: '(map' (ID: 16946)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.0841434895992279
    2. '(map' → logprob: -2.5841434001922607
    3. 'list' → logprob: -6.08414363861084
    4. '[int' → logprob: -6.45914363861084
    5. 'int' → logprob: -7.45914363861084
    6. '(int' → logprob: -7.58414363861084
    7. 'line' → logprob: -9.08414363861084
    8. '(line' → logprob: -9.83414363861084
    9. ' map' → logprob: -9.83414363861084
    10. '[' → logprob: -10.08414363861084

Token 1246: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.0024764856789261103
    2. 'int' → logprob: -6.002476692199707
    3. '[int' → logprob: -15.502476692199707
    4. '(' → logprob: -15.752476692199707
    5. '(
' → logprob: -16.00247573852539
    6. ' int' → logprob: -16.37747573852539
    7. '(lambda' → logprob: -16.75247573852539
    8. '=int' → logprob: -16.87747573852539
    9. '   ' → logprob: -17.25247573852539
    10. '<int' → logprob: -17.37747573852539

Token 1247: ',' (ID: 11)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.007733803708106279
    2. ',line' → logprob: -5.5077338218688965
    3. ',' → logprob: -5.6327338218688965
    4. 'line' → logprob: -10.507733345031738
    5. '=line' → logprob: -10.507733345031738
    6. '[line' → logprob: -12.257733345031738
    7. '(' → logprob: -12.382733345031738
    8. '#line' → logprob: -12.882733345031738
    9. ' (' → logprob: -13.132733345031738
    10. ' ,' → logprob: -14.632733345031738

Token 1248: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.0001705246395431459
    2. ' line' → logprob: -8.875170707702637
    3. '(line' → logprob: -10.500170707702637
    4. '[line' → logprob: -13.375170707702637
    5. '                           ' → logprob: -14.500170707702637
    6. '                   ' → logprob: -14.875170707702637
    7. '                       ' → logprob: -15.500170707702637
    8. '=line' → logprob: -15.625170707702637
    9. '#line' → logprob: -15.750170707702637
    10. ',line' → logprob: -16.75016975402832

Token 1249: '.split' (ID: 10347)
  Prédit: '().'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -0.01384730264544487
    2. '.strip' → logprob: -4.763847351074219
    3. '.split' → logprob: -5.263847351074219
    4. '.' → logprob: -10.263847351074219
    5. '('').' → logprob: -12.138847351074219
    6. ' .' → logprob: -13.513847351074219
    7. '                   ' → logprob: -14.888847351074219
    8. '   ' → logprob: -15.138847351074219
    9. '(split' → logprob: -15.513847351074219
    10. '                       ' → logprob: -15.513847351074219

Token 1250: '()))
' (ID: 24521)
  Prédit: '()))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))' → logprob: -0.29272282123565674
    2. '))' → logprob: -1.4177228212356567
    3. '(' → logprob: -5.292722702026367
    4. '()))
' → logprob: -5.667722702026367
    5. '()' → logprob: -6.042722702026367
    6. '))
' → logprob: -8.167722702026367
    7. '('' → logprob: -9.042722702026367
    8. ' ))' → logprob: -9.917722702026367
    9. '(','' → logprob: -9.917722702026367
    10. '(
' → logprob: -11.042722702026367

Token 1251: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -5.061676347395405e-05
    2. '               ' → logprob: -10.75005054473877
    3. '```' → logprob: -11.50005054473877
    4. '                   ' → logprob: -12.50005054473877
    5. '       ' → logprob: -12.50005054473877
    6. '<|end|>' → logprob: -12.75005054473877
    7. '
' → logprob: -13.12505054473877
    8. '            
' → logprob: -14.00005054473877
    9. '#' → logprob: -14.25005054473877
    10. 'Please' → logprob: -14.37505054473877

Token 1252: ' #' (ID: 1069)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03433728218078613
    2. 'M' → logprob: -3.409337282180786
    3. '#' (adapté à ' #') → logprob: -7.784337043762207
    4. '
' → logprob: -9.409337043762207
    5. 'a' → logprob: -10.159337043762207
    6. ' M' → logprob: -10.659337043762207
    7. '   ' → logprob: -10.909337043762207
    8. '       ' → logprob: -10.909337043762207
    9. '```' → logprob: -10.909337043762207
    10. '            
' → logprob: -11.034337043762207

Token 1253: ' read' (ID: 1729)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.17992855608463287
    2. '           ' → logprob: -1.8049285411834717
    3. '#' → logprob: -9.17992877960205
    4. ' M' → logprob: -10.17992877960205
    5. '   ' → logprob: -11.30492877960205
    6. '       ' → logprob: -11.67992877960205
    7. '               ' → logprob: -12.17992877960205
    8. '            
' → logprob: -12.30492877960205
    9. '
' → logprob: -12.55492877960205
    10. '                   ' → logprob: -12.67992877960205

Token 1254: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.0008134396048262715
    2. ' M' → logprob: -7.7508134841918945
    3. '           ' → logprob: -8.750813484191895
    4. '   ' → logprob: -9.750813484191895
    5. '
' → logprob: -9.750813484191895
    6. 'B' → logprob: -10.875813484191895
    7. 'S' → logprob: -11.250813484191895
    8. '       ' → logprob: -11.250813484191895
    9. 'line' → logprob: -11.250813484191895
    10. '               ' → logprob: -11.375813484191895

Token 1255: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -2.3080716346157715e-05
    2. '
' → logprob: -11.000022888183594
    3. '1' → logprob: -13.125022888183594
    4. '```' → logprob: -13.750022888183594
    5. '``' → logprob: -14.500022888183594
    6. 'M' → logprob: -14.500022888183594
    7. '

' → logprob: -14.875022888183594
    8. '
' → logprob: -15.125022888183594
    9. '3' → logprob: -15.375022888183594
    10. '_' → logprob: -15.375022888183594

Token 1256: ' and' (ID: 326)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.03335554525256157
    2. 'M' → logprob: -3.533355474472046
    3. ' M' → logprob: -5.658355712890625
    4. '
' → logprob: -9.533355712890625
    5. '   ' → logprob: -11.283355712890625
    6. '```' → logprob: -11.658355712890625
    7. '                   ' → logprob: -12.783355712890625
    8. '               ' → logprob: -12.908355712890625
    9. ',' → logprob: -12.908355712890625
    10. '       ' → logprob: -13.158355712890625

Token 1257: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.03330065310001373
    2. 'a' → logprob: -4.158300876617432
    3. 's' → logprob: -5.158300876617432
    4. 'd' → logprob: -5.408300876617432
    5. 'M' → logprob: -5.908300876617432
    6. ' b' → logprob: -6.533300876617432
    7. '           ' → logprob: -6.783300876617432
    8. 'B' → logprob: -8.408300399780273
    9. 'D' → logprob: -8.533300399780273
    10. ' s' → logprob: -8.658300399780273

Token 1258: '_j' (ID: 12021)
  Prédit: '2'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '2' → logprob: -0.32978999614715576
    2. '_values' → logprob: -1.3297899961471558
    3. '_line' → logprob: -4.204790115356445
    4. 'line' → logprob: -7.204790115356445
    5. 'values' → logprob: -8.579790115356445
    6. 'M' → logprob: -8.954790115356445
    7. '
' → logprob: -9.204790115356445
    8. '_lines' → logprob: -9.329790115356445
    9. 'Values' → logprob: -10.204790115356445
    10. '1' → logprob: -10.329790115356445

Token 1259: '
' (ID: 198)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.1857786327600479
    2. 'M' → logprob: -2.0607786178588867
    3. '
' → logprob: -3.3107786178588867
    4. 'B' → logprob: -5.935778617858887
    5. '                   ' → logprob: -7.185778617858887
    6. '```' → logprob: -7.435778617858887
    7. ' M' → logprob: -7.935778617858887
    8. '       ' → logprob: -8.185778617858887
    9. '   ' → logprob: -8.435778617858887
    10. '               ' → logprob: -8.810778617858887

Token 1260: '           ' (ID: 352)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.39568576216697693
    2. '           ' → logprob: -1.1456857919692993
    3. ' M' → logprob: -5.64568567276001
    4. '```' → logprob: -6.39568567276001
    5. '
' → logprob: -6.89568567276001
    6. 'b' → logprob: -7.39568567276001
    7. '``' → logprob: -7.89568567276001
    8. '                   ' → logprob: -8.520686149597168
    9. '(M' → logprob: -9.020686149597168
    10. '`' → logprob: -9.020686149597168

Token 1261: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' (adapté à ' M') → logprob: -0.0009286141721531749
    2. '           ' → logprob: -7.2509284019470215
    3. 'B' → logprob: -8.75092887878418
    4. ' M' → logprob: -9.87592887878418
    5. '
' → logprob: -12.87592887878418
    6. '   ' → logprob: -12.87592887878418
    7. '       ' → logprob: -14.00092887878418
    8. '                   ' → logprob: -14.50092887878418
    9. 'D' → logprob: -14.75092887878418
    10. ' ' → logprob: -14.75092887878418

Token 1262: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.981667537620524e-06
    2. '1' → logprob: -13.500001907348633
    3. '
' → logprob: -15.125001907348633
    4. '_line' → logprob: -16.500001907348633
    5. '_' → logprob: -16.875001907348633
    6. '```' → logprob: -17.625001907348633
    7. 'Line' → logprob: -18.000001907348633
    8. 'line' → logprob: -18.125001907348633
    9. '   ' → logprob: -18.250001907348633
    10. '

' → logprob: -19.125001907348633

Token 1263: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -3.786196975852363e-05
    2. '=' → logprob: -10.750038146972656
    3. 'line' → logprob: -11.500038146972656
    4. ' =' → logprob: -12.750038146972656
    5. '=line' → logprob: -14.000038146972656
    6. '=_' → logprob: -14.125038146972656
    7. 'Line' → logprob: -14.250038146972656
    8. ' line' → logprob: -14.750038146972656
    9. '_LINE' → logprob: -14.875038146972656
    10. '_lines' → logprob: -15.500038146972656

Token 1264: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.6932790875434875
    2. ' =' → logprob: -0.6932790875434875
    3. '=M' → logprob: -8.943279266357422
    4. ' M' → logprob: -14.568279266357422
    5. 'M' → logprob: -15.318279266357422
    6. '=
' → logprob: -15.443279266357422
    7. '=line' → logprob: -16.443279266357422
    8. '           ' → logprob: -16.568279266357422
    9. '=b' → logprob: -17.068279266357422
    10. ' ' → logprob: -17.193279266357422

Token 1265: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.029751067981123924
    2. ' input' → logprob: -3.5297510623931885
    3. '=input' → logprob: -14.77975082397461
    4. '(input' → logprob: -15.65475082397461
    5. '_input' → logprob: -18.77975082397461
    6. 'output' → logprob: -19.02975082397461
    7. '<input' → logprob: -19.27975082397461
    8. '	input' → logprob: -19.40475082397461
    9. ',input' → logprob: -19.65475082397461
    10. '[input' → logprob: -19.77975082397461

Token 1266: '().' (ID: 1454)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.32330602407455444
    2. ' =' → logprob: -1.3233060836791992
    3. '().' → logprob: -5.073306083679199
    4. '=line' → logprob: -7.073306083679199
    5. '=M' → logprob: -7.323306083679199
    6. '()' → logprob: -7.448306083679199
    7. '.strip' → logprob: -7.573306083679199
    8. '           ' → logprob: -8.3233060836792
    9. '='' → logprob: -9.5733060836792
    10. '=str' → logprob: -9.5733060836792

Token 1267: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -4.36574100604048e-06
    2. 'rstrip' → logprob: -12.500004768371582
    3. '_strip' → logprob: -15.250004768371582
    4. 'str' → logprob: -16.000003814697266
    5. ' strip' → logprob: -16.250003814697266
    6. '(strip' → logprob: -17.250003814697266
    7. 'stripe' → logprob: -17.750003814697266
    8. '.strip' → logprob: -17.875003814697266
    9. 'split' → logprob: -17.875003814697266
    10. '=' → logprob: -18.375003814697266

Token 1268: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.026392841711640358
    2. 'M' → logprob: -3.651392936706543
    3. '```' → logprob: -10.526392936706543
    4. ' M' → logprob: -10.776392936706543
    5. '
' → logprob: -11.776392936706543
    6. 'while' → logprob: -11.901392936706543
    7. '       ' → logprob: -12.526392936706543
    8. '               ' → logprob: -12.526392936706543
    9. '(M' → logprob: -13.026392936706543
    10. ',M' → logprob: -13.026392936706543

Token 1269: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.16373659670352936
    2. 'M' → logprob: -1.9137365818023682
    3. 'while' → logprob: -5.663736820220947
    4. '```' → logprob: -10.788736343383789
    5. ' M' → logprob: -11.663736343383789
    6. '[M' → logprob: -13.038736343383789
    7. '               ' → logprob: -13.288736343383789
    8. '       ' → logprob: -13.788736343383789
    9. ' while' → logprob: -14.538736343383789
    10. '   ' → logprob: -14.913736343383789

Token 1270: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.0014936764491721988
    2. 'M' → logprob: -7.001493453979492
    3. '           ' → logprob: -7.626493453979492
    4. ' while' → logprob: -9.376493453979492
    5. 'While' → logprob: -11.876493453979492
    6. '       ' → logprob: -13.626493453979492
    7. ' M' → logprob: -14.626493453979492
    8. '	while' → logprob: -15.001493453979492
    9. '
' → logprob: -15.126493453979492
    10. '               ' → logprob: -15.876493453979492

Token 1271: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -2.165027217415627e-05
    2. ' M' → logprob: -10.750021934509277
    3. 'not' → logprob: -16.12502098083496
    4. '   ' → logprob: -17.62502098083496
    5. 'len' → logprob: -18.62502098083496
    6. '
' → logprob: -18.75002098083496
    7. '    ' → logprob: -19.00002098083496
    8. ' ' → logprob: -19.12502098083496
    9. '(M' → logprob: -19.62502098083496
    10. 'True' → logprob: -19.62502098083496

Token 1272: '2' (ID: 17)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.007008994463831186
    2. '2' → logprob: -5.007009029388428
    3. ' M' → logprob: -9.50700855255127
    4. '(M' → logprob: -9.63200855255127
    5. '[M' → logprob: -9.88200855255127
    6. '_M' → logprob: -10.50700855255127
    7. '==' → logprob: -11.00700855255127
    8. '_line' → logprob: -11.00700855255127
    9. ''M' → logprob: -11.63200855255127
    10. '=M' → logprob: -12.00700855255127

Token 1273: '_line' (ID: 14418)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0016104355454444885
    2. ' ==' → logprob: -6.501610279083252
    3. '_line' → logprob: -10.00161075592041
    4. '==
' → logprob: -10.12661075592041
    5. 'line' → logprob: -12.37661075592041
    6. '=' → logprob: -12.50161075592041
    7. '=='' → logprob: -12.75161075592041
    8. 'M' → logprob: -12.87661075592041
    9. 'Line' → logprob: -13.50161075592041
    10. '===' → logprob: -13.50161075592041

Token 1274: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0297810360789299
    2. ' ==' → logprob: -3.5297811031341553
    3. '==
' → logprob: -10.779781341552734
    4. '=' → logprob: -12.154781341552734
    5. '=='' → logprob: -13.279781341552734
    6. '===' → logprob: -13.529781341552734
    7. ']==' → logprob: -14.779781341552734
    8. ')==' → logprob: -15.279781341552734
    9. '           ' → logprob: -15.529781341552734
    10. '()==' → logprob: -15.529781341552734

Token 1275: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.00011951648048125207
    2. ''' → logprob: -9.12511920928955
    3. ' '':
' → logprob: -11.87511920928955
    4. '''
' → logprob: -13.12511920928955
    5. ''''' → logprob: -14.62511920928955
    6. '''.' → logprob: -15.12511920928955
    7. ''',' → logprob: -15.62511920928955
    8. ' ''' → logprob: -15.75011920928955
    9. '==' → logprob: -16.000120162963867
    10. '   ' → logprob: -16.125120162963867

Token 1276: '               ' (ID: 506)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.27729466557502747
    2. '           ' → logprob: -1.652294635772705
    3. '(M' → logprob: -3.402294635772705
    4. 'b' → logprob: -5.277294635772705
    5. ''M' → logprob: -5.777294635772705
    6. '=M' → logprob: -5.902294635772705
    7. '=' → logprob: -6.277294635772705
    8. ' M' → logprob: -6.527294635772705
    9. '[M' → logprob: -6.777294635772705
    10. '               ' → logprob: -7.152294635772705

Token 1277: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' (adapté à ' M') → logprob: -1.7954958821064793e-05
    2. 'b' → logprob: -11.125018119812012
    3. ' M' → logprob: -12.750018119812012
    4. '           ' → logprob: -16.250017166137695
    5. 'B' → logprob: -16.625017166137695
    6. '   ' → logprob: -17.250017166137695
    7. '(M' → logprob: -18.125017166137695
    8. '#' → logprob: -18.500017166137695
    9. '>M' → logprob: -18.500017166137695
    10. '=M' → logprob: -18.625017166137695

Token 1278: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.200166469876422e-06
    2. 'M' → logprob: -13.125004768371582
    3. '(M' → logprob: -13.625004768371582
    4. '   ' → logprob: -15.125004768371582
    5. '
' → logprob: -15.625004768371582
    6. '```' → logprob: -15.625004768371582
    7. '1' → logprob: -15.750004768371582
    8. ' ' → logprob: -15.875004768371582
    9. ' M' → logprob: -16.2500057220459
    10. '_' → logprob: -16.2500057220459

Token 1279: '_line' (ID: 14418)
  Prédit: '_line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_line' → logprob: -0.0015849737683311105
    2. '=' → logprob: -7.126585006713867
    3. 'M' → logprob: -7.751585006713867
    4. 'line' → logprob: -8.751585006713867
    5. '=M' → logprob: -9.251585006713867
    6. ' =' → logprob: -9.876585006713867
    7. 'Line' → logprob: -10.376585006713867
    8. '=line' → logprob: -11.626585006713867
    9. '_LINE' → logprob: -13.251585006713867
    10. '           ' → logprob: -14.751585006713867

Token 1280: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.003184959525242448
    2. ' =' → logprob: -5.753184795379639
    3. '=M' → logprob: -12.128185272216797
    4. '=line' → logprob: -13.378185272216797
    5. '=
' → logprob: -15.628185272216797
    6. 'line' → logprob: -16.128185272216797
    7. '=input' → logprob: -17.878185272216797
    8. '=int' → logprob: -17.878185272216797
    9. 'M' → logprob: -19.253185272216797
    10. '=

' → logprob: -19.378185272216797

Token 1281: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.0009115827269852161
    2. ' input' → logprob: -7.000911712646484
    3. '           ' → logprob: -17.375911712646484
    4. '               ' → logprob: -17.875911712646484
    5. '(input' → logprob: -18.750911712646484
    6. 'output' → logprob: -19.000911712646484
    7. '<input' → logprob: -19.250911712646484
    8. 'Input' → logprob: -19.375911712646484
    9. '   ' → logprob: -19.750911712646484
    10. 'int' → logprob: -20.250911712646484

Token 1282: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -1.1994775377388578e-05
    2. '.strip' → logprob: -12.000012397766113
    3. '()
' → logprob: -12.750012397766113
    4. '()' → logprob: -13.125012397766113
    5. '               ' → logprob: -14.375012397766113
    6. 'strip' → logprob: -15.625012397766113
    7. '>().' → logprob: -16.250011444091797
    8. '           ' → logprob: -17.875011444091797
    9. '                       ' → logprob: -17.875011444091797
    10. '_strip' → logprob: -18.250011444091797

Token 1283: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -0.000555416801944375
    2. 'input' → logprob: -7.500555515289307
    3. 'read' → logprob: -13.750555038452148
    4. 'rstrip' → logprob: -14.000555038452148
    5. '.strip' → logprob: -15.875555038452148
    6. 'str' → logprob: -16.50055503845215
    7. 'line' → logprob: -16.62555503845215
    8. ' strip' → logprob: -16.75055503845215
    9. '_strip' → logprob: -16.87555503845215
    10. 'split' → logprob: -17.62555503845215

Token 1284: '()
' (ID: 1234)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00017982252757064998
    2. '
' → logprob: -9.0001802444458
    3. 'M' → logprob: -10.3751802444458
    4. '#' → logprob: -11.6251802444458
    5. ' M' → logprob: -12.3751802444458
    6. '            
' → logprob: -13.5001802444458
    7. '       ' → logprob: -13.6251802444458
    8. '<|end|>' → logprob: -13.7501802444458
    9. ')
' → logprob: -13.8751802444458
    10. ',' → logprob: -13.8751802444458

Token 1285: '           ' (ID: 352)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.018190911039710045
    2. '           ' → logprob: -4.018190860748291
    3. '   ' → logprob: -10.89319133758545
    4. '       ' → logprob: -11.51819133758545
    5. ' M' → logprob: -11.51819133758545
    6. '```' → logprob: -13.64319133758545
    7. '               ' → logprob: -15.01819133758545
    8. '
' → logprob: -15.26819133758545
    9. '[M' → logprob: -15.39319133758545
    10. '          ' → logprob: -15.76819133758545

Token 1286: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' (adapté à ' M') → logprob: -0.00026205103495158255
    2. '           ' → logprob: -8.250262260437012
    3. ' M' → logprob: -14.625262260437012
    4. '       ' → logprob: -15.500262260437012
    5. '   ' → logprob: -16.500261306762695
    6. '               ' → logprob: -17.500261306762695
    7. '                   ' → logprob: -18.375261306762695
    8. '```' → logprob: -18.500261306762695
    9. '[M' → logprob: -19.875261306762695
    10. '
' → logprob: -19.875261306762695

Token 1287: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -1.5048530030981055e-06
    2. '=' → logprob: -14.000001907348633
    3. '1' → logprob: -15.250001907348633
    4. ' =' → logprob: -15.750001907348633
    5. '
' → logprob: -16.250001907348633
    6. '   ' → logprob: -17.125001907348633
    7. '_' → logprob: -17.125001907348633
    8. ' ' → logprob: -18.000001907348633
    9. '```' → logprob: -18.375001907348633
    10. '₂' → logprob: -19.500001907348633

Token 1288: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1269291490316391
    2. '=' → logprob: -2.1269290447235107
    3. '=int' → logprob: -14.37692928314209
    4. '=
' → logprob: -16.501928329467773
    5. '           ' → logprob: -16.501928329467773
    6. '=M' → logprob: -16.626928329467773
    7. ' ' → logprob: -16.876928329467773
    8. '   ' → logprob: -16.876928329467773
    9. ' =
' → logprob: -17.001928329467773
    10. 'int' → logprob: -17.251928329467773

Token 1289: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -0.0015023599844425917
    2. ' int' → logprob: -6.501502513885498
    3. '(int' → logprob: -18.376502990722656
    4. '=int' → logprob: -18.501502990722656
    5. '[int' → logprob: -19.001502990722656
    6. 'M' → logprob: -20.376502990722656
    7. '<int' → logprob: -20.751502990722656
    8. ':int' → logprob: -22.376502990722656
    9. '   ' → logprob: -22.501502990722656
    10. '
' → logprob: -22.626502990722656

Token 1290: '(M' (ID: 6103)
  Prédit: '(M'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(M' → logprob: -1.9862216504407115e-05
    2. 'M' → logprob: -11.000020027160645
    3. 'b' → logprob: -12.875020027160645
    4. 'B' → logprob: -16.375019073486328
    5. '   ' → logprob: -16.500019073486328
    6. 'input' → logprob: -16.625019073486328
    7. '((' → logprob: -16.750019073486328
    8. '(' → logprob: -17.000019073486328
    9. '(line' → logprob: -17.250019073486328
    10. 'line' → logprob: -17.375019073486328

Token 1291: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.28016453981399536
    2. 'line' → logprob: -1.6551644802093506
    3. 'Line' → logprob: -3.4051644802093506
    4. '_line' → logprob: -4.03016471862793
    5. '(M' → logprob: -6.28016471862793
    6. 'LINE' → logprob: -8.28016471862793
    7. ')' → logprob: -9.90516471862793
    8. '_LINE' → logprob: -10.15516471862793
    9. '(line' → logprob: -10.90516471862793
    10. '-line' → logprob: -11.15516471862793

Token 1292: '_line' (ID: 14418)
  Prédit: ')
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.01836860366165638
    2. ')' → logprob: -4.018368721008301
    3. 'line' → logprob: -10.1433687210083
    4. '_line' → logprob: -10.1433687210083
    5. '           ' → logprob: -10.2683687210083
    6. '[line' → logprob: -11.1433687210083
    7. '
' → logprob: -11.2683687210083
    8. '())
' → logprob: -11.3933687210083
    9. '(line' → logprob: -11.3933687210083
    10. '               ' → logprob: -11.5183687210083

Token 1293: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.21292422711849213
    2. '           ' → logprob: -1.8379242420196533
    3. ')
' → logprob: -3.4629242420196533
    4. '       ' → logprob: -7.712924003601074
    5. '               ' → logprob: -8.212924003601074
    6. '<|end|>' → logprob: -8.462924003601074
    7. '            
' → logprob: -9.462924003601074
    8. '
' → logprob: -10.462924003601074
    9. '):
' → logprob: -10.712924003601074
    10. '   ' → logprob: -10.712924003601074

Token 1294: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.058761946856975555
    2. 'b' → logprob: -2.9337618350982666
    3. 'a' → logprob: -5.683762073516846
    4. '       ' → logprob: -8.183761596679688
    5. '            
' → logprob: -9.933761596679688
    6. '               ' → logprob: -10.183761596679688
    7. 'while' → logprob: -10.558761596679688
    8. '   ' → logprob: -10.808761596679688
    9. ' b' → logprob: -10.808761596679688
    10. '
' → logprob: -11.808761596679688

Token 1295: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -0.00043805985478684306
    2. '           ' → logprob: -7.750438213348389
    3. ' b' → logprob: -12.62543773651123
    4. '               ' → logprob: -13.62543773651123
    5. '                   ' → logprob: -13.75043773651123
    6. '       ' → logprob: -14.25043773651123
    7. '   ' → logprob: -14.50043773651123
    8. '```' → logprob: -15.50043773651123
    9. '                       ' → logprob: -16.375438690185547
    10. 'a' → logprob: -16.500438690185547

Token 1296: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -1.0280383548888494e-06
    2. '_' → logprob: -14.875000953674316
    3. 'values' → logprob: -15.500000953674316
    4. '_vals' → logprob: -15.625000953674316
    5. '_j' → logprob: -15.875000953674316
    6. '_line' → logprob: -16.625001907348633
    7. '_VALUES' → logprob: -16.875001907348633
    8. '_counts' → logprob: -17.500001907348633
    9. '_value' → logprob: -17.750001907348633
    10. ''_' → logprob: -17.875001907348633

Token 1297: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.47423550486564636
    2. '=' → logprob: -0.9742355346679688
    3. '=[]' → logprob: -8.974235534667969
    4. '=[]
' → logprob: -10.599235534667969
    5. '           ' → logprob: -12.724235534667969
    6. ':' → logprob: -13.849235534667969
    7. '=line' → logprob: -14.349235534667969
    8. 'line' → logprob: -14.849235534667969
    9. '=
' → logprob: -15.099235534667969
    10. '<|end|>' → logprob: -15.349235534667969

Token 1298: ' []
' (ID: 8911)
  Prédit: '[]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]' → logprob: -0.014300782233476639
    2. '[]
' → logprob: -4.26430082321167
    3. ' []' → logprob: -9.014300346374512
    4. '[]

' → logprob: -12.014300346374512
    5. '[]}' → logprob: -12.639300346374512
    6. ' []
' → logprob: -13.139300346374512
    7. '[]>' → logprob: -13.139300346374512
    8. '=[]' → logprob: -14.139300346374512
    9. '[])' → logprob: -14.514300346374512
    10. '[' → logprob: -14.639300346374512

Token 1299: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.048675596714019775
    2. 'while' → logprob: -3.048675537109375
    3. '               ' → logprob: -10.048675537109375
    4. ' while' → logprob: -10.673675537109375
    5. '                   ' → logprob: -11.048675537109375
    6. '```' → logprob: -12.923675537109375
    7. '       ' → logprob: -13.798675537109375
    8. '                           ' → logprob: -14.173675537109375
    9. '   ' → logprob: -14.298675537109375
    10. '                       ' → logprob: -14.798675537109375

Token 1300: ' if' (ID: 538)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.11412511765956879
    2. '           ' → logprob: -2.6141250133514404
    3. 'if' (adapté à ' if') → logprob: -3.3641250133514404
    4. ' while' → logprob: -10.98912525177002
    5. '               ' → logprob: -11.73912525177002
    6. '       ' → logprob: -13.23912525177002
    7. '                   ' → logprob: -13.48912525177002
    8. ' if' → logprob: -14.23912525177002
    9. '   ' → logprob: -15.23912525177002
    10. 'While' → logprob: -15.48912525177002

Token 1301: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.009761283174157143
    2. ' M' → logprob: -4.634761333465576
    3. 'b' → logprob: -12.634760856628418
    4. 'len' → logprob: -13.759760856628418
    5. '(M' → logprob: -15.009760856628418
    6. '   ' → logprob: -15.134760856628418
    7. ' ' → logprob: -15.884760856628418
    8. 'B' → logprob: -16.384761810302734
    9. ' b' → logprob: -16.884761810302734
    10. '           ' → logprob: -17.009761810302734

Token 1302: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -9.2576454335358e-05
    2. '1' → logprob: -9.500092506408691
    3. 'M' → logprob: -11.125092506408691
    4. ' ' → logprob: -13.500092506408691
    5. '   ' → logprob: -14.125092506408691
    6. '>' → logprob: -14.750092506408691
    7. ' M' → logprob: -15.375092506408691
    8. '
' → logprob: -16.750093460083008
    9. '  ' → logprob: -16.750093460083008
    10. '(M' → logprob: -16.750093460083008

Token 1303: ' >' (ID: 1424)
  Prédit: '>'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '>' → logprob: -0.16023123264312744
    2. ' >' → logprob: -1.9102312326431274
    3. ':' → logprob: -13.035231590270996
    4. '           ' → logprob: -13.285231590270996
    5. '_line' → logprob: -14.035231590270996
    6. ':
' → logprob: -14.285231590270996
    7. '               ' → logprob: -15.160231590270996
    8. ' ' → logprob: -15.785231590270996
    9. ' ' → logprob: -15.785231590270996
    10. '   ' → logprob: -15.910231590270996

Token 1304: ' ' (ID: 220)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0003357006062287837
    2. ' ' → logprob: -8.000335693359375
    3. '   ' → logprob: -16.250335693359375
    4. '=' → logprob: -16.375335693359375
    5. '>' → logprob: -18.875335693359375
    6. '           ' → logprob: -19.125335693359375
    7. '  ' → logprob: -19.250335693359375
    8. '(' → logprob: -19.500335693359375
    9. '#' → logprob: -19.875335693359375
    10. '۰' → logprob: -20.000335693359375

Token 1305: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.00010914575977949426
    2. ' ' → logprob: -9.12510871887207
    3. '   ' → logprob: -15.87510871887207
    4. '>' → logprob: -18.12510871887207
    5. '=' → logprob: -18.37510871887207
    6. '  ' → logprob: -18.75010871887207
    7. '(' → logprob: -19.62510871887207
    8. '
' → logprob: -19.75010871887207
    9. '           ' → logprob: -20.00010871887207
    10. '1' → logprob: -20.12510871887207

Token 1306: ':
' (ID: 734)
  Prédit: '               '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.03393900766968727
    2. ':' → logprob: -4.033938884735107
    3. ':
' → logprob: -4.283938884735107
    4. 'while' → logprob: -6.408938884735107
    5. '                       ' → logprob: -9.533939361572266
    6. '                   ' → logprob: -10.283939361572266
    7. '           ' → logprob: -10.408939361572266
    8. '              ' → logprob: -11.158939361572266
    9. '<|end|>' → logprob: -11.533939361572266
    10. 'While' → logprob: -12.033939361572266

Token 1307: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.0014878390356898308
    2. '           ' → logprob: -6.751487731933594
    3. 'while' → logprob: -8.251487731933594
    4. ':' → logprob: -11.126487731933594
    5. '                   ' → logprob: -11.126487731933594
    6. ':
' → logprob: -12.376487731933594
    7. '                       ' → logprob: -12.626487731933594
    8. '   ' → logprob: -12.751487731933594
    9. '{
' → logprob: -12.751487731933594
    10. ' while' → logprob: -12.751487731933594

Token 1308: ' while' (ID: 2049)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' (adapté à ' while') → logprob: -0.40011096000671387
    2. '#' → logprob: -1.2751109600067139
    3. '               ' → logprob: -3.025110960006714
    4. '                       ' → logprob: -7.275111198425293
    5. '                   ' → logprob: -7.650111198425293
    6. '#line' → logprob: -8.400111198425293
    7. ' while' → logprob: -8.525111198425293
    8. '           ' → logprob: -9.525111198425293
    9. ' #' → logprob: -10.275111198425293
    10. 'line' → logprob: -10.275111198425293

Token 1309: ' len' (ID: 4631)
  Prédit: 'len'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.0041837021708488464
    2. ' len' → logprob: -5.879183769226074
    3. 'True' → logprob: -6.629183769226074
    4. '(len' → logprob: -10.254183769226074
    5. ' True' → logprob: -11.379183769226074
    6. '           ' → logprob: -12.754183769226074
    7. '   ' → logprob: -13.629183769226074
    8. '               ' → logprob: -14.004183769226074
    9. '              ' → logprob: -14.254183769226074
    10. '          ' → logprob: -14.379183769226074

Token 1310: '(b' (ID: 3229)
  Prédit: '(b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(b' → logprob: -0.008618946187198162
    2. 'b' → logprob: -4.7586188316345215
    3. ' b' → logprob: -12.63361930847168
    4. ' (' → logprob: -14.13361930847168
    5. '(' → logprob: -14.88361930847168
    6. '                   ' → logprob: -17.38361930847168
    7. '               ' → logprob: -17.75861930847168
    8. ')b' → logprob: -17.75861930847168
    9. '(
' → logprob: -17.88361930847168
    10. 'a' → logprob: -18.50861930847168

Token 1311: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -1.6240566083070007e-06
    2. 'b' → logprob: -14.000001907348633
    3. 'values' → logprob: -14.500001907348633
    4. '_VALUES' → logprob: -16.500001907348633
    5. '(b' → logprob: -16.625001907348633
    6. ' b' → logprob: -18.500001907348633
    7. '_b' → logprob: -18.750001907348633
    8. 'Values' → logprob: -19.000001907348633
    9. '_' → logprob: -19.500001907348633
    10. '
' → logprob: -19.500001907348633

Token 1312: ')' (ID: 8)
  Prédit: ' <'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' <' → logprob: -0.18300238251686096
    2. '<' → logprob: -1.8080023527145386
    3. ')' → logprob: -5.933002471923828
    4. ')<' → logprob: -8.433002471923828
    5. '<b' → logprob: -8.558002471923828
    6. '<len' → logprob: -9.433002471923828
    7. '()<' → logprob: -10.933002471923828
    8. 'b' → logprob: -11.308002471923828
    9. '<size' → logprob: -11.558002471923828
    10. '<int' → logprob: -11.933002471923828

Token 1313: ' <' (ID: 464)
  Prédit: '<'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<' → logprob: -0.25210607051849365
    2. ' <' → logprob: -1.5021060705184937
    3. '<len' → logprob: -8.752105712890625
    4. '<b' → logprob: -12.252105712890625
    5. '<int' → logprob: -12.877105712890625
    6. '<M' → logprob: -13.252105712890625
    7. '<size' → logprob: -13.502105712890625
    8. '<m' → logprob: -13.752105712890625
    9. '<num' → logprob: -13.877105712890625
    10. '<n' → logprob: -14.002105712890625

Token 1314: ' M' (ID: 391)
  Prédit: 'M'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'M' → logprob: -0.00010402000043541193
    2. ' M' → logprob: -9.375103950500488
    3. 'b' → logprob: -10.875103950500488
    4. '           ' → logprob: -16.500104904174805
    5. '   ' → logprob: -17.250104904174805
    6. '               ' → logprob: -17.375104904174805
    7. '(M' → logprob: -18.750104904174805
    8. 'B' → logprob: -18.750104904174805
    9. ' b' → logprob: -19.000104904174805
    10. '                   ' → logprob: -19.000104904174805

Token 1315: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00013893934374209493
    2. 'M' → logprob: -9.125139236450195
    3. '(M' → logprob: -10.500139236450195
    4. '
' → logprob: -14.000139236450195
    5. '(' → logprob: -14.625139236450195
    6. '   ' → logprob: -15.000139236450195
    7. ' M' → logprob: -15.000139236450195
    8. ' ' → logprob: -15.125139236450195
    9. '[M' → logprob: -16.500139236450195
    10. '  ' → logprob: -17.000139236450195

Token 1316: ':
' (ID: 734)
  Prédit: ':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':
' → logprob: -0.5592882633209229
    2. '                   ' → logprob: -1.0592882633209229
    3. ':' → logprob: -2.559288263320923
    4. '               ' → logprob: -6.434288024902344
    5. '                       ' → logprob: -7.434288024902344
    6. '                  ' → logprob: -7.934288024902344
    7. '):
' → logprob: -8.059288024902344
    8. '<|end|>' → logprob: -8.809288024902344
    9. '   ' → logprob: -9.059288024902344
    10. '           ' → logprob: -9.184288024902344

Token 1317: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0034805629402399063
    2. ':' → logprob: -7.128480434417725
    3. ':
' → logprob: -7.503480434417725
    4. '<|end|>' → logprob: -7.878480434417725
    5. '<|end|>' → logprob: -8.128480911254883
    6. '               ' → logprob: -8.128480911254883
    7. '   ' → logprob: -8.253480911254883
    8. '                       ' → logprob: -8.753480911254883
    9. '                  ' → logprob: -9.003480911254883
    10. 'line' → logprob: -9.378480911254883

Token 1318: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.0052362410351634026
    2. ' line' → logprob: -5.2552361488342285
    3. '                   ' → logprob: -13.380236625671387
    4. '	line' → logprob: -14.630236625671387
    5. '                       ' → logprob: -15.880236625671387
    6. '[line' → logprob: -16.13023567199707
    7. '#line' → logprob: -16.63023567199707
    8. '   ' → logprob: -16.75523567199707
    9. '(line' → logprob: -16.88023567199707
    10. '_line' → logprob: -17.25523567199707

Token 1319: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.1270138919353485
    2. '=' → logprob: -2.127013921737671
    3. '=line' → logprob: -9.37701416015625
    4. '                   ' → logprob: -15.00201416015625
    5. ' ' → logprob: -15.75201416015625
    6. 'line' → logprob: -16.12701416015625
    7. '               ' → logprob: -16.12701416015625
    8. '_line' → logprob: -16.25201416015625
    9. '   ' → logprob: -16.37701416015625
    10. '           ' → logprob: -16.62701416015625

Token 1320: ' input' (ID: 3422)
  Prédit: 'input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'input' → logprob: -0.20142561197280884
    2. ' input' → logprob: -1.701425552368164
    3. '                   ' → logprob: -11.576425552368164
    4. '=input' → logprob: -13.576425552368164
    5. '(input' → logprob: -13.701425552368164
    6. '<input' → logprob: -15.326425552368164
    7. ',input' → logprob: -16.326425552368164
    8. '                       ' → logprob: -16.576425552368164
    9. '[input' → logprob: -16.951425552368164
    10. '_input' → logprob: -17.201425552368164

Token 1321: '().' (ID: 1454)
  Prédit: '().'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '().' → logprob: -6.988221684878226e-06
    2. '.strip' → logprob: -12.375006675720215
    3. '()' → logprob: -13.750006675720215
    4. '()
' → logprob: -13.875006675720215
    5. '=' → logprob: -15.250006675720215
    6. '
' → logprob: -15.875006675720215
    7. '.' → logprob: -16.25000762939453
    8. '('').' → logprob: -16.50000762939453
    9. '   ' → logprob: -17.37500762939453
    10. ' ().' → logprob: -17.50000762939453

Token 1322: 'strip' (ID: 23905)
  Prédit: 'strip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'strip' → logprob: -5.512236498361744e-07
    2. '.strip' → logprob: -15.250000953674316
    3. '_strip' → logprob: -16.5
    4. 'rstrip' → logprob: -16.75
    5. ' strip' → logprob: -16.875
    6. '
' → logprob: -17.5
    7. '(strip' → logprob: -18.0
    8. '```' → logprob: -18.5
    9. 'stripe' → logprob: -18.625
    10. 'str' → logprob: -18.75

Token 1323: '()
' (ID: 1234)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.007614201866090298
    2. '()' → logprob: -6.0076141357421875
    3. '                       ' → logprob: -6.0076141357421875
    4. '()
' → logprob: -6.6326141357421875
    5. 'if' → logprob: -7.3826141357421875
    6. '               ' → logprob: -8.257614135742188
    7. '():
' → logprob: -9.132614135742188
    8. '           ' → logprob: -9.632614135742188
    9. ':
' → logprob: -10.382614135742188
    10. '                    
' → logprob: -10.757614135742188

Token 1324: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0015899618156254292
    2. '                       ' → logprob: -6.876589775085449
    3. '               ' → logprob: -7.876589775085449
    4. '           ' → logprob: -10.25158977508545
    5. 'if' → logprob: -10.37658977508545
    6. '       ' → logprob: -10.37658977508545
    7. '   ' → logprob: -10.37658977508545
    8. 'b' → logprob: -11.00158977508545
    9. '                           ' → logprob: -12.37658977508545
    10. '                  ' → logprob: -12.37658977508545

Token 1325: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.038539543747901917
    2. '                   ' → logprob: -3.2885396480560303
    3. ' if' → logprob: -7.663539409637451
    4. '                       ' → logprob: -10.91353988647461
    5. '               ' → logprob: -12.28853988647461
    6. '
' → logprob: -13.28853988647461
    7. '           ' → logprob: -13.28853988647461
    8. '       ' → logprob: -13.78853988647461
    9. '   ' → logprob: -14.53853988647461
    10. 'If' → logprob: -16.28853988647461

Token 1326: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -0.07892151176929474
    2. ' line' → logprob: -2.5789215564727783
    3. '(line' → logprob: -10.9539213180542
    4. '''' → logprob: -11.5789213180542
    5. '[line' → logprob: -13.8289213180542
    6. '#line' → logprob: -14.2039213180542
    7. '                   ' → logprob: -14.2039213180542
    8. ' ' → logprob: -14.7039213180542
    9. '   ' → logprob: -14.8289213180542
    10. '	line' → logprob: -14.9539213180542

Token 1327: ' ==' (ID: 951)
  Prédit: '=='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.1427466720342636
    2. ' ==' → logprob: -2.017746686935425
    3. '=='' → logprob: -10.142746925354004
    4. '==
' → logprob: -11.017746925354004
    5. '''' → logprob: -11.767746925354004
    6. '=' → logprob: -12.767746925354004
    7. '===' → logprob: -13.767746925354004
    8. ''''' → logprob: -14.767746925354004
    9. ']==' → logprob: -14.767746925354004
    10. ')==' → logprob: -14.892746925354004

Token 1328: ' '':
' (ID: 125614)
  Prédit: ''''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '''' → logprob: -0.00029685118352063
    2. ''' → logprob: -8.250296592712402
    3. ' '':
' → logprob: -10.500296592712402
    4. '''
' → logprob: -11.750296592712402
    5. ''''' → logprob: -16.87529754638672
    6. '''.' → logprob: -16.87529754638672
    7. '   ' → logprob: -17.50029754638672
    8. ''',' → logprob: -17.87529754638672
    9. '('' → logprob: -18.37529754638672
    10. '""' → logprob: -18.50029754638672

Token 1329: '                       ' (ID: 968)
  Prédit: '                       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.0008207073551602662
    2. 'continue' → logprob: -7.375820636749268
    3. ':
' → logprob: -8.750821113586426
    4. ':' → logprob: -11.125821113586426
    5. '0' → logprob: -11.875821113586426
    6. '                   ' → logprob: -12.375821113586426
    7. ' continue' → logprob: -13.125821113586426
    8. '                      ' → logprob: -13.250821113586426
    9. '       ' → logprob: -13.750821113586426
    10. '                        ' → logprob: -14.250821113586426

Token 1330: ' continue' (ID: 4901)
  Prédit: '                       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                       ' → logprob: -0.5778321623802185
    2. 'continue' (adapté à ' continue') → logprob: -0.8278321623802185
    3. ' continue' → logprob: -6.827832221984863
    4. '       ' → logprob: -8.077832221984863
    5. '   ' → logprob: -8.202832221984863
    6. '                           ' → logprob: -9.327832221984863
    7. '                               ' → logprob: -10.452832221984863
    8. '                   ' → logprob: -10.702832221984863
    9. '	continue' → logprob: -10.952832221984863
    10. '
' → logprob: -10.952832221984863

Token 1331: '
' (ID: 198)
  Prédit: '                   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '                   ' → logprob: -1.8789383830153383e-05
    2. 'b' → logprob: -12.125019073486328
    3. '               ' → logprob: -12.125019073486328
    4. '                       ' → logprob: -12.625019073486328
    5. '           ' → logprob: -13.375019073486328
    6. '                  ' → logprob: -14.000019073486328
    7. '   ' → logprob: -14.250019073486328
    8. '                    ' → logprob: -14.875019073486328
    9. '       ' → logprob: -15.125019073486328
    10. '                 ' → logprob: -15.625019073486328

Token 1332: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.0022179381921887398
    2. 'b' → logprob: -6.252217769622803
    3. '               ' → logprob: -8.627218246459961
    4. '                       ' → logprob: -9.752218246459961
    5. '           ' → logprob: -10.877218246459961
    6. '   ' → logprob: -11.502218246459961
    7. '                  ' → logprob: -11.877218246459961
    8. '       ' → logprob: -12.252218246459961
    9. '                    ' → logprob: -12.627218246459961
    10. '                 ' → logprob: -13.502218246459961

Token 1333: ' b' (ID: 287)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' (adapté à ' b') → logprob: -1.4974866644479334e-05
    2. '                   ' → logprob: -11.750015258789062
    3. ' b' → logprob: -11.875015258789062
    4. '           ' → logprob: -17.000015258789062
    5. '               ' → logprob: -17.375015258789062
    6. 'a' → logprob: -18.375015258789062
    7. '                    ' → logprob: -19.500015258789062
    8. '   ' → logprob: -19.625015258789062
    9. '                  ' → logprob: -19.875015258789062
    10. '       ' → logprob: -19.875015258789062

Token 1334: '_values' (ID: 20393)
  Prédit: '_values'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_values' → logprob: -1.0280383548888494e-06
    2. 'values' → logprob: -14.375000953674316
    3. '_VALUES' → logprob: -15.250000953674316
    4. '                   ' → logprob: -16.250001907348633
    5. '.values' → logprob: -17.875001907348633
    6. 'b' → logprob: -17.875001907348633
    7. '_' → logprob: -18.750001907348633
    8. 'Values' → logprob: -19.000001907348633
    9. '
' → logprob: -19.375001907348633
    10. '               ' → logprob: -19.375001907348633

Token 1335: '.extend' (ID: 34151)
  Prédit: '.extend'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.extend' → logprob: -0.005236956290900707
    2. '.' → logprob: -5.255237102508545
    3. ' .' → logprob: -13.255236625671387
    4. '.ext' → logprob: -14.630236625671387
    5. 'extend' → logprob: -14.755236625671387
    6. '.=' → logprob: -15.505236625671387
    7. '   ' → logprob: -16.255237579345703
    8. 'extends' → logprob: -16.755237579345703
    9. '+=' → logprob: -17.255237579345703
    10. '.setdefault' → logprob: -17.255237579345703

Token 1336: '(map' (ID: 16946)
  Prédit: 'map'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'map' → logprob: -0.07889970391988754
    2. '(map' → logprob: -2.578899621963501
    3. ' map' → logprob: -11.578899383544922
    4. 'list' → logprob: -15.453899383544922
    5. ',map' → logprob: -16.078899383544922
    6. '                   ' → logprob: -16.203899383544922
    7. '	map' → logprob: -16.328899383544922
    8. '.map' → logprob: -16.953899383544922
    9. '                       ' → logprob: -18.453899383544922
    10. '               ' → logprob: -18.578899383544922

Token 1337: '(int' (ID: 2742)
  Prédit: '(int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(int' → logprob: -0.06197709962725639
    2. 'int' → logprob: -2.8119771480560303
    3. '[int' → logprob: -12.18697738647461
    4. '<int' → logprob: -13.31197738647461
    5. ',int' → logprob: -14.06197738647461
    6. '(' → logprob: -14.18697738647461
    7. '=int' → logprob: -14.18697738647461
    8. ']int' → logprob: -15.68697738647461
    9. ' int' → logprob: -15.81197738647461
    10. '(
' → logprob: -15.81197738647461

Token 1338: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.003560042707249522
    2. ',int' → logprob: -5.8785600662231445
    3. '(int' → logprob: -7.6285600662231445
    4. ',line' → logprob: -8.753560066223145
    5. 'int' → logprob: -9.628560066223145
    6. '(line' → logprob: -10.628560066223145
    7. '(' → logprob: -11.503560066223145
    8. ' ,' → logprob: -11.878560066223145
    9. '(),' → logprob: -13.128560066223145
    10. '                   ' → logprob: -15.128560066223145

Token 1339: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' → logprob: -7.553032628493384e-05
    2. ' line' → logprob: -9.500075340270996
    3. '(line' → logprob: -15.250075340270996
    4. 'int' → logprob: -16.125076293945312
    5. '[line' → logprob: -16.250076293945312
    6. 'list' → logprob: -16.625076293945312
    7. '=line' → logprob: -19.000076293945312
    8. '                   ' → logprob: -19.500076293945312
    9. '#line' → logprob: -19.625076293945312
    10. ',line' → logprob: -19.750076293945312

Token 1340: '.split' (ID: 10347)
  Prédit: '.split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.split' → logprob: -0.007019291631877422
    2. '                       ' → logprob: -6.257019519805908
    3. 'split' → logprob: -6.507019519805908
    4. '().' → logprob: -7.132019519805908
    5. '.strip' → logprob: -7.132019519805908
    6. '                   ' → logprob: -7.382019519805908
    7. ',' → logprob: -7.882019519805908
    8. '))' → logprob: -8.13201904296875
    9. '               ' → logprob: -8.88201904296875
    10. '(line' → logprob: -9.00701904296875

Token 1341: '()))
' (ID: 24521)
  Prédit: '()))
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()))
' → logprob: -0.553382396697998
    2. '()))' → logprob: -1.053382396697998
    3. '))' → logprob: -2.803382396697998
    4. '))
' → logprob: -4.178382396697998
    5. '()' → logprob: -9.303382873535156
    6. '()))
' → logprob: -9.428382873535156
    7. '                   ' → logprob: -9.678382873535156
    8. '               ' → logprob: -10.928382873535156
    9. '()))

' → logprob: -11.303382873535156
    10. '                       ' → logprob: -11.303382873535156

Token 1342: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0039847237057983875
    2. '
' → logprob: -6.0039849281311035
    3. 'rules' → logprob: -6.6289849281311035
    4. '       ' → logprob: -9.253984451293945
    5. '            
' → logprob: -10.003984451293945
    6. '   ' → logprob: -11.253984451293945
    7. ' rules' → logprob: -11.753984451293945
    8. 'birth' → logprob: -12.003984451293945
    9. '               ' → logprob: -12.378984451293945
    10. '    
' → logprob: -12.753984451293945

Token 1343: ' self' (ID: 1051)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.007263366132974625
    2. 'rules' → logprob: -5.00726318359375
    3. 'self' (adapté à ' self') → logprob: -8.13226318359375
    4. '
' → logprob: -9.25726318359375
    5. 'birth' → logprob: -9.63226318359375
    6. '       ' → logprob: -10.25726318359375
    7. ' rules' → logprob: -11.13226318359375
    8. '   ' → logprob: -12.00726318359375
    9. '               ' → logprob: -12.38226318359375
    10. 'cases' → logprob: -12.38226318359375

Token 1344: '.test' (ID: 9859)
  Prédit: '.test'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.test' → logprob: -0.0004779784067068249
    2. '.' → logprob: -8.75047779083252
    3. '.user' → logprob: -8.75047779083252
    4. 'test' → logprob: -9.00047779083252
    5. '.te' → logprob: -12.00047779083252
    6. '.tests' → logprob: -12.12547779083252
    7. '.train' → logprob: -12.25047779083252
    8. '.testing' → logprob: -12.87547779083252
    9. '.t' → logprob: -13.00047779083252
    10. '.s' → logprob: -13.25047779083252

Token 1345: '_cases' (ID: 115457)
  Prédit: '_cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cases' → logprob: -6.694766489090398e-05
    2. 'cases' → logprob: -10.625066757202148
    3. '_case' → logprob: -11.125066757202148
    4. '_' → logprob: -11.375066757202148
    5. 's' → logprob: -12.000066757202148
    6. '._' → logprob: -13.125066757202148
    7. '\' → logprob: -13.500066757202148
    8. '           ' → logprob: -14.125066757202148
    9. '_c' → logprob: -14.250066757202148
    10. 'Cases' → logprob: -14.375066757202148

Token 1346: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0010547225829213858
    2. '.' → logprob: -6.876054763793945
    3. '.app' → logprob: -12.001054763793945
    4. 'append' → logprob: -12.376054763793945
    5. ' .' → logprob: -12.751054763793945
    6. '           ' → logprob: -12.876054763793945
    7. '.extend' → logprob: -13.626054763793945
    8. '_append' → logprob: -13.876054763793945
    9. '.Append' → logprob: -14.376054763793945
    10. '.ap' → logprob: -14.376054763793945

Token 1347: '(' (ID: 7)
  Prédit: '(('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.062193989753723145
    2. '(' → logprob: -2.8121938705444336
    3. '(
' → logprob: -8.437193870544434
    4. '({
' → logprob: -12.187193870544434
    5. '           ' → logprob: -13.187193870544434
    6. '(((' → logprob: -13.937193870544434
    7. '   ' → logprob: -14.437193870544434
    8. '(('' → logprob: -14.812193870544434
    9. ' (' → logprob: -15.812193870544434
    10. '(("' → logprob: -15.937193870544434

Token 1348: ' (' (ID: 350)
  Prédit: '(initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(initial' → logprob: -0.005422292742878199
    2. '(' → logprob: -5.755422115325928
    3. '(case' → logprob: -7.005422115325928
    4. '(
' → logprob: -7.130422115325928
    5. '{
' → logprob: -8.005422592163086
    6. 'initial' → logprob: -9.255422592163086
    7. ' (' → logprob: -10.880422592163086
    8. '{' → logprob: -11.005422592163086
    9. '(current' → logprob: -11.880422592163086
    10. '(existing' → logprob: -12.130422592163086

Token 1349: 'case' (ID: 9994)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.0004119616060052067
    2. ' initial' → logprob: -8.375411987304688
    3. '(initial' → logprob: -9.000411987304688
    4. 'case' → logprob: -9.875411987304688
    5. '           ' → logprob: -12.875411987304688
    6. '(' → logprob: -13.250411987304688
    7. '
' → logprob: -14.500411987304688
    8. 'Case' → logprob: -15.125411987304688
    9. 'Grid' → logprob: -15.125411987304688
    10. '   ' → logprob: -15.125411987304688

Token 1350: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -8.77627644513268e-06
    2. 'd' → logprob: -12.875008583068848
    3. 'id' → logprob: -12.875008583068848
    4. '_' → logprob: -14.000008583068848
    5. '_i' → logprob: -14.125008583068848
    6. 's' → logprob: -14.500008583068848
    7. '   ' → logprob: -15.000008583068848
    8. '
' → logprob: -15.750008583068848
    9. '_ids' → logprob: -15.750008583068848
    10. 'Id' → logprob: -16.000009536743164

Token 1351: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -5.180879816180095e-05
    2. ',
' → logprob: -10.625051498413086
    3. '           ' → logprob: -11.125051498413086
    4. ' ,' → logprob: -11.875051498413086
    5. '               ' → logprob: -14.000051498413086
    6. ',{
' → logprob: -14.125051498413086
    7. '<|end|>' → logprob: -14.250051498413086
    8. '       ' → logprob: -14.250051498413086
    9. '   ' → logprob: -14.625051498413086
    10. '                   ' → logprob: -14.625051498413086

Token 1352: ' N' (ID: 478)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'initial' → logprob: -0.35225605964660645
    2. ' initial' → logprob: -1.2272560596466064
    3. 'self' → logprob: -5.852255821228027
    4. ' self' → logprob: -7.227255821228027
    5. '            ' → logprob: -9.852255821228027
    6. '           ' → logprob: -9.977255821228027
    7. 'Initial' → logprob: -10.727255821228027
    8. 'N' → logprob: -11.352255821228027
    9. 'Grid' → logprob: -11.602255821228027
    10. ',' → logprob: -11.727255821228027

Token 1353: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005563704180531204
    2. ' ,' → logprob: -8.000555992126465
    3. ',
' → logprob: -9.000555992126465
    4. '           ' → logprob: -10.125555992126465
    5. '<|end|>' → logprob: -10.375555992126465
    6. '               ' → logprob: -12.750555992126465
    7. ',{
' → logprob: -12.875555992126465
    8. ')' → logprob: -13.000555992126465
    9. '       ' → logprob: -13.375555992126465
    10. '   ' → logprob: -13.375555992126465

Token 1354: ' initial' (ID: 4871)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.12532904744148254
    2. 'initial' → logprob: -2.37532901763916
    3. ' a' → logprob: -4.75032901763916
    4. ' initial' → logprob: -5.12532901763916
    5. 'Grid' → logprob: -5.50032901763916
    6. 'self' → logprob: -6.12532901763916
    7. 'Birth' → logprob: -7.00032901763916
    8. 'Initial' → logprob: -7.75032901763916
    9. 'Input' → logprob: -7.75032901763916
    10. ' Grid' → logprob: -8.00032901763916

Token 1355: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -2.3676733690081164e-05
    2. 'grid' → logprob: -11.12502384185791
    3. '
' → logprob: -12.25002384185791
    4. ')' → logprob: -13.75002384185791
    5. '_' → logprob: -13.75002384185791
    6. 'Grid' → logprob: -14.25002384185791
    7. '_GRID' → logprob: -15.12502384185791
    8. '           ' → logprob: -15.37502384185791
    9. '<Grid' → logprob: -15.75002384185791
    10. '```' → logprob: -15.87502384185791

Token 1356: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0005114490049891174
    2. ' ,' → logprob: -7.875511646270752
    3. '           ' → logprob: -9.500511169433594
    4. ',
' → logprob: -10.125511169433594
    5. '                   ' → logprob: -12.375511169433594
    6. '               ' → logprob: -12.750511169433594
    7. '            ' → logprob: -13.000511169433594
    8. '                       ' → logprob: -14.250511169433594
    9. '```' → logprob: -14.625511169433594
    10. '       ' → logprob: -14.750511169433594

Token 1357: ' Birth' (ID: 57332)
  Prédit: 'Birth'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Birth' → logprob: -0.013945224694907665
    2. 'set' → logprob: -4.63894510269165
    3. ' Birth' → logprob: -6.13894510269165
    4. 'rules' → logprob: -7.01394510269165
    5. '           ' → logprob: -8.013945579528809
    6. 'birth' → logprob: -8.638945579528809
    7. ' set' → logprob: -8.763945579528809
    8. 'sets' → logprob: -9.763945579528809
    9. '                   ' → logprob: -10.013945579528809
    10. '            ' → logprob: -10.138945579528809

Token 1358: 'Death' (ID: 43848)
  Prédit: 'Death'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Death' → logprob: -1.8624639324116288e-06
    2. 'Birth' → logprob: -13.750001907348633
    3. ' Death' → logprob: -14.750001907348633
    4. 'death' → logprob: -16.125001907348633
    5. 'Dead' → logprob: -16.625001907348633
    6. 'Decision' → logprob: -16.750001907348633
    7. '{' → logprob: -17.250001907348633
    8. 'Disease' → logprob: -17.875001907348633
    9. ' death' → logprob: -18.250001907348633
    10. 'Deaths' → logprob: -18.250001907348633

Token 1359: 'Rules' (ID: 28744)
  Prédit: 'Rules'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Rules' → logprob: -2.5776860184123507e-06
    2. 'Counts' → logprob: -13.25000286102295
    3. 'rules' → logprob: -15.25000286102295
    4. '{' → logprob: -15.25000286102295
    5. 'Rule' → logprob: -16.750001907348633
    6. '_rules' → logprob: -17.125001907348633
    7. '
' → logprob: -17.625001907348633
    8. 'RULE' → logprob: -17.625001907348633
    9. ' rules' → logprob: -17.750001907348633
    10. 'Sets' → logprob: -17.875001907348633

Token 1360: '(set' (ID: 25904)
  Prédit: '(set'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(set' → logprob: -0.5918058156967163
    2. '(a' → logprob: -1.7168058156967163
    3. 'set' → logprob: -1.9668058156967163
    4. '({' → logprob: -2.466805934906006
    5. '{' → logprob: -3.591805934906006
    6. '(b' → logprob: -4.841805934906006
    7. 'a' → logprob: -5.216805934906006
    8. '(self' → logprob: -8.466805458068848
    9. '           ' → logprob: -8.591805458068848
    10. '(f' → logprob: -8.591805458068848

Token 1361: '(a' (ID: 6271)
  Prédit: '(a'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(a' → logprob: -0.0013442812487483025
    2. 'a' → logprob: -6.626344203948975
    3. '(' → logprob: -11.751344680786133
    4. '(
' → logprob: -11.876344680786133
    5. ')a' → logprob: -13.876344680786133
    6. ',a' → logprob: -14.501344680786133
    7. '```' → logprob: -14.751344680786133
    8. '(b' → logprob: -14.751344680786133
    9. ')' → logprob: -14.876344680786133
    10. '[a' → logprob: -15.001344680786133

Token 1362: '_values' (ID: 20393)
  Prédit: 'a'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'a' → logprob: -0.004067951813340187
    2. '_values' → logprob: -6.004067897796631
    3. '(a' → logprob: -6.504067897796631
    4. '[a' → logprob: -10.129068374633789
    5. '1' → logprob: -11.504068374633789
    6. 'b' → logprob: -11.629068374633789
    7. ')a' → logprob: -11.629068374633789
    8. ')' → logprob: -12.004068374633789
    9. '           ' → logprob: -12.629068374633789
    10. 'Values' → logprob: -12.754068374633789

Token 1363: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.004265846684575081
    2. ',' → logprob: -5.504265785217285
    3. '),
' → logprob: -9.754265785217285
    4. '           ' → logprob: -10.129265785217285
    5. '       ' → logprob: -10.879265785217285
    6. ')' → logprob: -11.254265785217285
    7. ',),' → logprob: -11.379265785217285
    8. '               ' → logprob: -11.504265785217285
    9. '   ' → logprob: -11.754265785217285
    10. ' ),' → logprob: -12.129265785217285

Token 1364: ' set' (ID: 920)
  Prédit: 'set'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'set' → logprob: -0.0002314303710591048
    2. ' set' → logprob: -8.375231742858887
    3. '
' → logprob: -15.125231742858887
    4. ')set' → logprob: -15.625231742858887
    5. '           ' → logprob: -15.750231742858887
    6. '(set' → logprob: -16.37523078918457
    7. '
' → logprob: -16.50023078918457
    8. '               ' → logprob: -17.37523078918457
    9. '   ' → logprob: -17.50023078918457
    10. '=set' → logprob: -17.87523078918457

Token 1365: '(b' (ID: 3229)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.10021799057722092
    2. '(b' → logprob: -2.3502180576324463
    3. ' b' → logprob: -11.475217819213867
    4. ' (' → logprob: -15.350217819213867
    5. ')b' → logprob: -15.725217819213867
    6. '(
' → logprob: -15.850217819213867
    7. '	b' → logprob: -16.100217819213867
    8. '               ' → logprob: -16.225217819213867
    9. '           ' → logprob: -16.475217819213867
    10. '   ' → logprob: -16.725217819213867

Token 1366: '_values' (ID: 20393)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.0002067588793579489
    2. '(b' → logprob: -8.62520694732666
    3. '_values' → logprob: -11.62520694732666
    4. '[b' → logprob: -11.87520694732666
    5. '_b' → logprob: -12.12520694732666
    6. ' b' → logprob: -13.12520694732666
    7. ')b' → logprob: -13.75020694732666
    8. '{' → logprob: -13.87520694732666
    9. '               ' → logprob: -15.25020694732666
    10. '           ' → logprob: -15.25020694732666

Token 1367: ')))' (ID: 15975)
  Prédit: ')))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')))' → logprob: -0.38754525780677795
    2. '))' → logprob: -1.1375452280044556
    3. '),' → logprob: -7.762545108795166
    4. '))))' → logprob: -9.262545585632324
    5. ')' → logprob: -9.387545585632324
    6. ')))
' → logprob: -10.137545585632324
    7. ')),' → logprob: -12.262545585632324
    8. ')));' → logprob: -12.387545585632324
    9. '))}
' → logprob: -12.762545585632324
    10. '   ' → logprob: -12.887545585632324

Token 1368: ' )
' (ID: 3270)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.1111738309264183
    2. '           ' → logprob: -2.8611738681793213
    3. ')' → logprob: -3.1111738681793213
    4. '       ' → logprob: -6.236173629760742
    5. ',)' → logprob: -7.736173629760742
    6. '               ' → logprob: -8.111173629760742
    7. ',
' → logprob: -8.236173629760742
    8. '[' → logprob: -8.736173629760742
    9. '          ' → logprob: -9.861173629760742
    10. '                   ' → logprob: -9.861173629760742

Token 1369: '           ' (ID: 352)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False

Token 1370: ' case' (ID: 1890)
  Prédit: '           '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0041363416239619255
    2. 'case' (adapté à ' case') → logprob: -5.504136562347412
    3. '       ' → logprob: -10.504136085510254
    4. '   ' → logprob: -11.379136085510254
    5. '		' → logprob: -12.004136085510254
    6. '
' → logprob: -12.379136085510254
    7. '          ' → logprob: -13.129136085510254
    8. 'cases' → logprob: -13.629136085510254
    9. '	       ' → logprob: -13.879136085510254
    10. '               ' → logprob: -14.004136085510254

Token 1371: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -6.392202976712724e-06
    2. '_' → logprob: -12.375006675720215
    3. 'id' → logprob: -13.750006675720215
    4. 's' → logprob: -14.875006675720215
    5. '_ids' → logprob: -15.500006675720215
    6. '_case' → logprob: -16.1250057220459
    7. 'ID' → logprob: -16.6250057220459
    8. 'Id' → logprob: -16.7500057220459
    9. '   ' → logprob: -16.8750057220459
    10. 'd' → logprob: -17.0000057220459

Token 1372: ' +=' (ID: 2757)
  Prédit: '+='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+=' → logprob: -0.0023290286771953106
    2. ' +=' → logprob: -6.127328872680664
    3. '=' → logprob: -8.877328872680664
    4. '+' → logprob: -12.627328872680664
    5. ']+=' → logprob: -14.377328872680664
    6. '+='' → logprob: -15.752328872680664
    7. '+="' → logprob: -15.877328872680664
    8. '   ' → logprob: -16.252328872680664
    9. '```' → logprob: -16.752328872680664
    10. ' =' → logprob: -17.252328872680664

Token 1373: ' ' (ID: 220)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.128163257315464e-07
    2. ' ' → logprob: -15.5
    3. '
' → logprob: -19.875
    4. '           ' → logprob: -20.5
    5. '   ' → logprob: -21.375
    6. '```' → logprob: -22.5
    7. '       ' → logprob: -23.5
    8. '               ' → logprob: -24.75
    9. '１' → logprob: -24.875
    10. '۱' → logprob: -25.0

Token 1374: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: 0.0
    2. ' ' → logprob: -18.75
    3. '
' → logprob: -24.125
    4. '```' → logprob: -25.0
    5. '   ' → logprob: -25.375
    6. '2' → logprob: -26.125
    7. '0' → logprob: -26.625
    8. '１' → logprob: -26.75
    9. '۱' → logprob: -27.5
    10. '`' → logprob: -27.75

Token 1375: '

' (ID: 279)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.027726802974939346
    2. 'def' → logprob: -4.027726650238037
    3. ' def' → logprob: -5.402726650238037
    4. '<|end|>' → logprob: -5.902726650238037
    5. '       ' → logprob: -6.777726650238037
    6. '
' → logprob: -7.402726650238037
    7. '	def' → logprob: -8.527727127075195
    8. '           ' → logprob: -9.277727127075195
    9. '<|end|>' → logprob: -9.402727127075195
    10. '    ' → logprob: -9.902727127075195

Token 1376: 'class' (ID: 1444)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.010704904794692993
    2. 'def' → logprob: -4.88570499420166
    3. '<|end|>' → logprob: -6.01070499420166
    4. ' def' → logprob: -8.01070499420166
    5. '
' → logprob: -9.13570499420166
    6. '<|end|>' → logprob: -9.26070499420166
    7. '	def' → logprob: -9.38570499420166
    8. ' ' → logprob: -12.63570499420166
    9. '       ' → logprob: -12.76070499420166
    10. '```' → logprob: -12.88570499420166

Token 1377: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.8355360627174377
    2. 'Main' → logprob: -0.9605360627174377
    3. 'Runner' → logprob: -2.085536003112793
    4. 'Simulator' → logprob: -3.710536003112793
    5. 'Solution' → logprob: -4.960536003112793
    6. ' Simulator' → logprob: -5.210536003112793
    7. ' Main' → logprob: -5.335536003112793
    8. ' Runner' → logprob: -5.585536003112793
    9. ' Output' → logprob: -5.710536003112793
    10. 'Solver' → logprob: -5.960536003112793

Token 1378: 'Writer' (ID: 9561)
  Prédit: 'Writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: -0.12121845781803131
    2. 'Generator' → logprob: -2.99621844291687
    3. 'Handler' → logprob: -3.62121844291687
    4. 'Formatter' → logprob: -4.121218681335449
    5. 'ter' → logprob: -4.621218681335449
    6. 'Printer' → logprob: -4.621218681335449
    7. 'Manager' → logprob: -7.621218681335449
    8. 'Builder' → logprob: -7.871218681335449
    9. ':
' → logprob: -7.996218681335449
    10. 'Renderer' → logprob: -9.74621868133545

Token 1379: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.011076712980866432
    2. ':
' → logprob: -4.511076927185059
    3. ':def' → logprob: -12.136076927185059
    4. '<|end|>' → logprob: -12.136076927185059
    5. '):' → logprob: -12.761076927185059
    6. '```' → logprob: -12.761076927185059
    7. ':

' → logprob: -13.136076927185059
    8. '():
' → logprob: -13.261076927185059
    9. '):
' → logprob: -13.261076927185059
    10. '():' → logprob: -13.761076927185059

Token 1380: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.002841610461473465
    2. 'class' → logprob: -6.002841472625732
    3. '```' → logprob: -8.00284194946289
    4. 'def' → logprob: -10.75284194946289
    5. ' class' → logprob: -12.12784194946289
    6. ':' → logprob: -13.12784194946289
    7. ' def' → logprob: -14.75284194946289
    8. ' ' → logprob: -15.62784194946289
    9. '    
' → logprob: -15.75284194946289
    10. '    ' → logprob: -15.75284194946289

Token 1381: ' @' (ID: 759)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.013299170881509781
    2. '   ' → logprob: -4.513298988342285
    3. 'class' → logprob: -6.263298988342285
    4. ' def' → logprob: -8.013298988342285
    5. '```' → logprob: -11.638298988342285
    6. '@' (adapté à ' @') → logprob: -12.513298988342285
    7. '
' → logprob: -15.388298988342285
    8. '	def' → logprob: -16.1382999420166
    9. '`' → logprob: -19.3882999420166
    10. 'indent' → logprob: -19.3882999420166

Token 1382: 'staticmethod' (ID: 53164)
  Prédit: 'staticmethod'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'staticmethod' → logprob: -0.0003809833142440766
    2. 'dat' → logprob: -8.000380516052246
    3. 'classmethod' → logprob: -10.000380516052246
    4. 'static' → logprob: -16.125381469726562
    5. 'final' → logprob: -18.750381469726562
    6. 'property' → logprob: -19.000381469726562
    7. '
' → logprob: -20.500381469726562
    8. ' static' → logprob: -21.500381469726562
    9. '@' → logprob: -21.875381469726562
    10. ' dat' → logprob: -22.125381469726562

Token 1383: '
' (ID: 198)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04108100011944771
    2. '   ' → logprob: -3.916080951690674
    3. ' def' → logprob: -4.041080951690674
    4. '
' → logprob: -5.916080951690674
    5. '(' → logprob: -10.666081428527832
    6. '(def' → logprob: -11.416081428527832
    7. '	def' → logprob: -12.166081428527832
    8. ' ' → logprob: -12.416081428527832
    9. '    
' → logprob: -12.916081428527832
    10. '  ' → logprob: -13.041081428527832

Token 1384: '   ' (ID: 271)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -2.3557529857498594e-05
    2. '   ' → logprob: -10.87502384185791
    3. ' def' → logprob: -12.37502384185791
    4. '
' → logprob: -15.12502384185791
    5. '```' → logprob: -18.375022888183594
    6. '	def' → logprob: -18.750022888183594
    7. 'staticmethod' → logprob: -20.000022888183594
    8. 'class' → logprob: -20.125022888183594
    9. 'classmethod' → logprob: -20.375022888183594
    10. ':def' → logprob: -20.500022888183594

Token 1385: ' def' (ID: 1056)
  Prédit: 'def'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' (adapté à ' def') → logprob: -1.5690089639974758e-05
    2. '
' → logprob: -11.500015258789062
    3. ' def' → logprob: -12.875015258789062
    4. 'staticmethod' → logprob: -13.000015258789062
    5. 'classmethod' → logprob: -15.000015258789062
    6. 'write' → logprob: -16.500015258789062
    7. 'print' → logprob: -16.625015258789062
    8. 'define' → logprob: -17.375015258789062
    9. 'from' → logprob: -17.500015258789062
    10. '    
' → logprob: -17.500015258789062

Token 1386: ' write' (ID: 5067)
  Prédit: 'write'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'write' → logprob: -0.255183607339859
    2. 'print' → logprob: -1.5051835775375366
    3. 'format' → logprob: -5.755183696746826
    4. 'display' → logprob: -11.005183219909668
    5. 'output' → logprob: -11.255183219909668
    6. 'generate' → logprob: -11.630183219909668
    7. 'writes' → logprob: -11.755183219909668
    8. 'println' → logprob: -12.005183219909668
    9. 'prepare' → logprob: -12.380183219909668
    10. 'from' → logprob: -12.505183219909668

Token 1387: '(case' (ID: 131636)
  Prédit: '(output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(output' → logprob: -0.9516441822052002
    2. '(' → logprob: -1.5766441822052002
    3. '(test' → logprob: -2.0766441822052
    4. '(case' → logprob: -2.3266441822052
    5. '_results' → logprob: -2.4516441822052
    6. '_output' → logprob: -3.4516441822052
    7. '(sim' → logprob: -4.326643943786621
    8. '_result' → logprob: -4.701643943786621
    9. '(results' → logprob: -4.951643943786621
    10. '(f' → logprob: -5.451643943786621

Token 1388: '_id' (ID: 1537)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.15237997472286224
    2. '_id' → logprob: -2.6523799896240234
    3. '   ' → logprob: -3.5273799896240234
    4. ')' → logprob: -4.402379989624023
    5. '(' → logprob: -4.902379989624023
    6. '_:' → logprob: -5.652379989624023
    7. ' _' → logprob: -5.777379989624023
    8. '  ' → logprob: -5.902379989624023
    9. ':' → logprob: -6.152379989624023
    10. ' ' → logprob: -6.777379989624023

Token 1389: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.001057102927006781
    2. '   ' → logprob: -7.876057147979736
    3. '):' → logprob: -8.001056671142578
    4. ' ,' → logprob: -8.876056671142578
    5. ',
' → logprob: -9.626056671142578
    6. '       ' → logprob: -10.001056671142578
    7. '):
' → logprob: -10.126056671142578
    8. '(output' → logprob: -11.876056671142578
    9. '    ' → logprob: -12.001056671142578
    10. ':' → logprob: -12.126056671142578

Token 1390: ' int' (ID: 677)
  Prédit: 'int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.1502277851104736
    2. 'output' → logprob: -1.1502277851104736
    3. 'out' → logprob: -1.9002277851104736
    4. ' output' → logprob: -2.7752277851104736
    5. ' out' → logprob: -3.1502277851104736
    6. '
' → logprob: -3.4002277851104736
    7. 'case' → logprob: -3.7752277851104736
    8. ',' → logprob: -4.0252275466918945
    9. ' case' → logprob: -4.1502275466918945
    10. ' int' → logprob: -5.6502275466918945

Token 1391: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -1.6047699318733066e-05
    2. ' ,' → logprob: -11.500016212463379
    3. '   ' → logprob: -12.500016212463379
    4. ',
' → logprob: -13.125016212463379
    5. '       ' → logprob: -16.125015258789062
    6. '‌,' → logprob: -17.500015258789062
    7. '```' → logprob: -18.500015258789062
    8. ',line' → logprob: -18.750015258789062
    9. '    ' → logprob: -19.000015258789062
    10. ',
' → logprob: -19.000015258789062

Token 1392: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -0.5320810675621033
    2. 'days' → logprob: -1.657081127166748
    3. ' grid' → logprob: -2.532081127166748
    4. 'simulation' → logprob: -2.782081127166748
    5. 'N' → logprob: -3.907081127166748
    6. 'result' → logprob: -4.282081127166748
    7. ' days' → logprob: -4.532081127166748
    8. 'final' → logprob: -4.782081127166748
    9. ' simulation' → logprob: -4.782081127166748
    10. 'sim' → logprob: -5.282081127166748

Token 1393: ':' (ID: 25)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.6139625310897827
    2. ':' → logprob: -0.8639625310897827
    3. '):' → logprob: -3.6139626502990723
    4. '):
' → logprob: -4.988962650299072
    5. '   ' → logprob: -5.988962650299072
    6. ')' → logprob: -7.613962650299072
    7. '       ' → logprob: -8.488962173461914
    8. ' :' → logprob: -8.613962173461914
    9. ' ,' → logprob: -9.613962173461914
    10. ':grid' → logprob: -11.113962173461914

Token 1394: ' Grid' (ID: 18087)
  Prédit: 'Grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Grid' → logprob: -0.00016921341011766344
    2. ' Grid' → logprob: -9.125168800354004
    3. '3' → logprob: -9.875168800354004
    4. '(Grid' → logprob: -12.750168800354004
    5. ''' → logprob: -13.500168800354004
    6. ')' → logprob: -14.000168800354004
    7. 'str' → logprob: -14.000168800354004
    8. '	Grid' → logprob: -14.250168800354004
    9. '
' → logprob: -14.375168800354004
    10. '   ' → logprob: -14.750168800354004

Token 1395: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -2.45848218582978e-06
    2. 'Grid' → logprob: -13.75000286102295
    3. ')' → logprob: -14.25000286102295
    4. '
' → logprob: -15.00000286102295
    5. '   ' → logprob: -16.000001907348633
    6. '```' → logprob: -16.500001907348633
    7. '`' → logprob: -16.750001907348633
    8. ')
' → logprob: -17.000001907348633
    9. '_' → logprob: -17.750001907348633
    10. ' ' → logprob: -17.875001907348633

Token 1396: 'D' (ID: 35)
  Prédit: 'D'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'D' → logprob: -0.0006332091288641095
    2. '3' → logprob: -7.375633239746094
    3. 'd' → logprob: -12.000633239746094
    4. ' D' → logprob: -15.750633239746094
    5. ')' → logprob: -16.000633239746094
    6. 'Grid' → logprob: -16.125633239746094
    7. 'C' → logprob: -17.125633239746094
    8. '_D' → logprob: -17.250633239746094
    9. '[' → logprob: -17.500633239746094
    10. '=' → logprob: -17.625633239746094

Token 1397: '):
' (ID: 1883)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.014064652845263481
    2. '):
' → logprob: -4.514064788818359
    3. ')' → logprob: -6.014064788818359
    4. '):' → logprob: -8.01406478881836
    5. '   ' → logprob: -8.51406478881836
    6. ' ,' → logprob: -10.63906478881836
    7. ',
' → logprob: -12.51406478881836
    8. '       ' → logprob: -13.01406478881836
    9. '):
' → logprob: -13.13906478881836
    10. '):

' → logprob: -13.63906478881836

Token 1398: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0033206648658961058
    2. '   ' → logprob: -5.753320693969727
    3. '```' → logprob: -9.253320693969727
    4. 'def' → logprob: -10.753320693969727
    5. 'print' → logprob: -10.878320693969727
    6. ' print' → logprob: -13.628320693969727
    7. '`' → logprob: -13.753320693969727
    8. ',' → logprob: -14.003320693969727
    9. '           ' → logprob: -14.253320693969727
    10. ':' → logprob: -14.253320693969727

Token 1399: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -3.054500666621607e-06
    2. 'for' → logprob: -13.25000286102295
    3. '       ' → logprob: -13.75000286102295
    4. ' print' → logprob: -16.000003814697266
    5. '   ' → logprob: -16.250003814697266
    6. '```' → logprob: -21.000003814697266
    7. 'output' → logprob: -21.250003814697266
    8. '           ' → logprob: -21.500003814697266
    9. 'println' → logprob: -23.375003814697266
    10. '	print' → logprob: -23.875003814697266

Token 1400: '(f' (ID: 1526)
  Prédit: '(f'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(f' → logprob: -0.019933946430683136
    2. 'f' → logprob: -4.019934177398682
    3. 'case' → logprob: -6.894934177398682
    4. 'Case' → logprob: -7.269934177398682
    5. '(case' → logprob: -10.019933700561523
    6. '()' → logprob: -11.769933700561523
    7. '"' → logprob: -11.769933700561523
    8. '("' → logprob: -12.394933700561523
    9. '#' → logprob: -12.894933700561523
    10. '(' → logprob: -13.019933700561523

Token 1401: '"' (ID: 1)
  Prédit: 'Case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Case' → logprob: -0.02608383260667324
    2. '"' → logprob: -3.7760839462280273
    3. 'f' → logprob: -6.026083946228027
    4. '---' → logprob: -9.401083946228027
    5. 'Test' → logprob: -9.526083946228027
    6. 'CASE' → logprob: -9.526083946228027
    7. ''' → logprob: -9.651083946228027
    8. '===' → logprob: -10.276083946228027
    9. '(f' → logprob: -11.151083946228027
    10. 'case' → logprob: -11.276083946228027

Token 1402: 'Case' (ID: 6187)
  Prédit: 'Case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Case' → logprob: -0.005605699960142374
    2. '---' → logprob: -5.755605697631836
    3. 'Test' → logprob: -7.505605697631836
    4. '===' → logprob: -7.630605697631836
    5. '"' → logprob: -8.005605697631836
    6. 'CASE' → logprob: -8.255605697631836
    7. '#' → logprob: -8.630605697631836
    8. 'Grid' → logprob: -9.255605697631836
    9. '--' → logprob: -9.380605697631836
    10. '#{' → logprob: -9.630605697631836

Token 1403: ' {' (ID: 354)
  Prédit: ' {'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' {' → logprob: -0.03994951769709587
    2. '{' → logprob: -3.289949417114258
    3. ' #{' → logprob: -6.289949417114258
    4. '#{' → logprob: -10.539949417114258
    5. ' #' → logprob: -10.914949417114258
    6. '{id' → logprob: -12.539949417114258
    7. '   ' → logprob: -13.914949417114258
    8. '{i' → logprob: -14.914949417114258
    9. '"{' → logprob: -14.914949417114258
    10. ' ' → logprob: -15.039949417114258

Token 1404: 'case' (ID: 9994)
  Prédit: '{'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '{' → logprob: -0.1603948175907135
    2. 'case' → logprob: -1.9103947877883911
    3. '")' → logprob: -9.910394668579102
    4. '}' → logprob: -10.035394668579102
    5. '(case' → logprob: -10.035394668579102
    6. '{}' → logprob: -11.535394668579102
    7. '{
' → logprob: -12.160394668579102
    8. ' case' → logprob: -12.160394668579102
    9. '"{' → logprob: -12.410394668579102
    10. 'f' → logprob: -13.410394668579102

Token 1405: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.020211325958371162
    2. '}' → logprob: -4.520211219787598
    3. '{' → logprob: -4.770211219787598
    4. 'id' → logprob: -7.645211219787598
    5. 'd' → logprob: -9.770211219787598
    6. '#{' → logprob: -10.645211219787598
    7. 'ID' → logprob: -10.770211219787598
    8. ' {' → logprob: -10.895211219787598
    9. '{id' → logprob: -11.020211219787598
    10. '{}' → logprob: -12.020211219787598

Token 1406: '}:' (ID: 33132)
  Prédit: '}:'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '}:' → logprob: -0.008122311905026436
    2. ':' → logprob: -5.508122444152832
    3. '}' → logprob: -5.633122444152832
    4. '}:{' → logprob: -8.258122444152832
    5. '":' → logprob: -9.008122444152832
    6. '{' → logprob: -10.883122444152832
    7. '}")' → logprob: -11.008122444152832
    8. '):' → logprob: -11.508122444152832
    9. '},' → logprob: -11.508122444152832
    10. ' }:' → logprob: -12.258122444152832

Token 1407: '")
' (ID: 1896)
  Prédit: '")'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -0.43546029925346375
    2. '")
' → logprob: -1.1854603290557861
    3. '\n' → logprob: -3.060460329055786
    4. '{' → logprob: -8.685460090637207
    5. '"' → logprob: -9.060460090637207
    6. '")
' → logprob: -9.060460090637207
    7. ' {' → logprob: -10.310460090637207
    8. '```' → logprob: -10.310460090637207
    9. ')' → logprob: -10.560460090637207
    10. ')
' → logprob: -11.310460090637207

Token 1408: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.03848344460129738
    2. 'for' → logprob: -3.2884833812713623
    3. ' for' → logprob: -8.288483619689941
    4. 'print' → logprob: -8.663483619689941
    5. '   ' → logprob: -11.413483619689941
    6. '           ' → logprob: -13.413483619689941
    7. 'output' → logprob: -13.413483619689941
    8. '```' → logprob: -13.913483619689941
    9. '        
' → logprob: -14.288483619689941
    10. 'grid' → logprob: -14.413483619689941

Token 1409: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.0001589618914294988
    2. 'for' (adapté à ' for') → logprob: -8.75015926361084
    3. '       ' → logprob: -15.00015926361084
    4. ' print' → logprob: -16.250158309936523
    5. ' for' → logprob: -19.250158309936523
    6. '   ' → logprob: -21.250158309936523
    7. 'if' → logprob: -21.250158309936523
    8. '        
' → logprob: -22.500158309936523
    9. 'output' → logprob: -23.000158309936523
    10. '```' → logprob: -23.000158309936523

Token 1410: ' z' (ID: 579)
  Prédit: 'z'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'z' → logprob: -0.014451657421886921
    2. 'layer' → logprob: -4.514451503753662
    3. 'line' → logprob: -6.014451503753662
    4. ' z' → logprob: -7.514451503753662
    5. '_z' → logprob: -8.13945198059082
    6. '_layer' → logprob: -10.13945198059082
    7. ' layer' → logprob: -10.38945198059082
    8. 'row' → logprob: -11.13945198059082
    9. '_' → logprob: -11.38945198059082
    10. '_line' → logprob: -12.51445198059082

Token 1411: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.018152983859181404
    2. 'in' → logprob: -4.018153190612793
    3. ' ' → logprob: -14.518153190612793
    4. '0' → logprob: -15.018153190612793
    5. '       ' → logprob: -15.018153190612793
    6. 'range' → logprob: -15.143153190612793
    7. '   ' → logprob: -15.393153190612793
    8. '	in' → logprob: -15.643153190612793
    9. 'In' → logprob: -15.768153190612793
    10. ',' → logprob: -15.768153190612793

Token 1412: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -2.4391956685576588e-05
    2. ' range' → logprob: -10.625024795532227
    3. '   ' → logprob: -17.250024795532227
    4. '
' → logprob: -17.750024795532227
    5. '(range' → logprob: -17.750024795532227
    6. 'in' → logprob: -18.875024795532227
    7. '[' → logprob: -19.250024795532227
    8. 'grid' → logprob: -19.375024795532227
    9. '	range' → logprob: -19.375024795532227
    10. '0' → logprob: -19.875024795532227

Token 1413: '(grid' (ID: 51818)
  Prédit: '(grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -0.012448081746697426
    2. 'grid' → logprob: -4.512448310852051
    3. '(' → logprob: -7.637448310852051
    4. '(Grid' → logprob: -7.887448310852051
    5. '(Output' → logprob: -8.13744831085205
    6. 'Output' → logprob: -8.76244831085205
    7. '0' → logprob: -10.13744831085205
    8. '(output' → logprob: -11.13744831085205
    9. 'output' → logprob: -11.26244831085205
    10. 'range' → logprob: -11.63744831085205

Token 1414: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.0002043748099822551
    2. 'size' → logprob: -8.625204086303711
    3. '.' → logprob: -11.000204086303711
    4. '   ' → logprob: -12.000204086303711
    5. ' .' → logprob: -14.250204086303711
    6. '.__' → logprob: -14.875204086303711
    7. '.SIZE' → logprob: -15.125204086303711
    8. ' size' → logprob: -15.875204086303711
    9. '	size' → logprob: -16.25020408630371
    10. '0' → logprob: -16.50020408630371

Token 1415: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2619894742965698
    2. '):' → logprob: -2.5119895935058594
    3. '       ' → logprob: -2.7619895935058594
    4. ':' → logprob: -3.6369895935058594
    5. '   ' → logprob: -3.6369895935058594
    6. ':
' → logprob: -3.8869895935058594
    7. '<|end|>' → logprob: -5.511989593505859
    8. '+' → logprob: -5.636989593505859
    9. ')' → logprob: -6.386989593505859
    10. '           ' → logprob: -6.636989593505859

Token 1416: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.00015943869948387146
    2. '   ' → logprob: -9.37515926361084
    3. '       ' → logprob: -9.75015926361084
    4. 'print' → logprob: -11.50015926361084
    5. '```' → logprob: -12.87515926361084
    6. '               ' → logprob: -13.12515926361084
    7. ' for' → logprob: -14.37515926361084
    8. ' print' → logprob: -14.50015926361084
    9. 'for' → logprob: -15.37515926361084
    10. '                   ' → logprob: -16.375160217285156

Token 1417: ' for' (ID: 395)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.15406343340873718
    2. 'for' (adapté à ' for') → logprob: -2.4040634632110596
    3. '           ' → logprob: -3.2790634632110596
    4. '   ' → logprob: -4.7790632247924805
    5. '       ' → logprob: -6.0290632247924805
    6. ' for' → logprob: -6.2790632247924805
    7. ' print' → logprob: -6.4040632247924805
    8. 'layer' → logprob: -7.9040632247924805
    9. ' layer' → logprob: -11.15406322479248
    10. '               ' → logprob: -11.15406322479248

Token 1418: ' y' (ID: 342)
  Prédit: 'y'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'y' → logprob: -3.666993507067673e-05
    2. ' y' → logprob: -10.250036239624023
    3. 'x' → logprob: -13.625036239624023
    4. '   ' → logprob: -17.250036239624023
    5. 'line' → logprob: -18.250036239624023
    6. '```' → logprob: -18.500036239624023
    7. '	y' → logprob: -19.250036239624023
    8. 'print' → logprob: -19.375036239624023
    9. '_y' → logprob: -19.625036239624023
    10. ' ' → logprob: -20.250036239624023

Token 1419: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03365515172481537
    2. 'in' → logprob: -3.4086551666259766
    3. '           ' → logprob: -12.658655166625977
    4. '<|end|>' → logprob: -13.658655166625977
    5. '   ' → logprob: -14.158655166625977
    6. '               ' → logprob: -14.158655166625977
    7. ',' → logprob: -14.158655166625977
    8. '       ' → logprob: -14.283655166625977
    9. '	in' → logprob: -14.533655166625977
    10. '```' → logprob: -15.033655166625977

Token 1420: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003178071230649948
    2. ' range' → logprob: -5.753178119659424
    3. 'grid' → logprob: -15.753177642822266
    4. '(range' → logprob: -15.753177642822266
    5. '0' → logprob: -16.628177642822266
    6. '
' → logprob: -17.378177642822266
    7. 'in' → logprob: -17.503177642822266
    8. '   ' → logprob: -18.003177642822266
    9. ' in' → logprob: -18.878177642822266
    10. '	range' → logprob: -19.378177642822266

Token 1421: '(grid' (ID: 51818)
  Prédit: '(grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(grid' → logprob: -0.07943760603666306
    2. 'range' → logprob: -2.829437494277954
    3. 'grid' → logprob: -4.579437732696533
    4. '(range' → logprob: -4.954437732696533
    5. ' range' → logprob: -13.204437255859375
    6. '(' → logprob: -13.579437255859375
    7. ' grid' → logprob: -14.954437255859375
    8. '	grid' → logprob: -15.079437255859375
    9. 'Range' → logprob: -15.329437255859375
    10. 'print' → logprob: -15.329437255859375

Token 1422: '.size' (ID: 4463)
  Prédit: '.grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -0.1377543956041336
    2. '.size' → logprob: -3.012754440307617
    3. '(grid' → logprob: -3.012754440307617
    4. 'size' → logprob: -4.512754440307617
    5. '       ' → logprob: -5.137754440307617
    6. 'grid' → logprob: -5.387754440307617
    7. '   ' → logprob: -5.887754440307617
    8. '):
' → logprob: -6.137754440307617
    9. '):' → logprob: -7.137754440307617
    10. '           ' → logprob: -7.137754440307617

Token 1423: '):
' (ID: 1883)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -1.1653016805648804
    2. '):
' → logprob: -1.2903016805648804
    3. ' in' → logprob: -1.4153016805648804
    4. ':
' → logprob: -2.41530179977417
    5. ':' → logprob: -3.91530179977417
    6. '):' → logprob: -4.54030179977417
    7. '           ' → logprob: -4.66530179977417
    8. 'print' → logprob: -4.91530179977417
    9. ',' → logprob: -5.16530179977417
    10. '               ' → logprob: -5.41530179977417

Token 1424: '               ' (ID: 506)
  Prédit: '               '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '               ' → logprob: -0.2595495879650116
    2. 'print' → logprob: -1.509549617767334
    3. ' print' → logprob: -5.509549617767334
    4. 'for' → logprob: -6.134549617767334
    5. '   ' → logprob: -7.509549617767334
    6. '```' → logprob: -7.759549617767334
    7. ' for' → logprob: -8.884549140930176
    8. '                   ' → logprob: -9.259549140930176
    9. '           ' → logprob: -9.384549140930176
    10. '       ' → logprob: -10.134549140930176

Token 1425: ' line' (ID: 2543)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.02361242100596428
    2. 'line' (adapté à ' line') → logprob: -4.3986124992370605
    3. 'for' → logprob: -4.7736124992370605
    4. ' print' → logprob: -7.1486124992370605
    5. '               ' → logprob: -7.2736124992370605
    6. 'row' → logprob: -7.5236124992370605
    7. 'x' → logprob: -8.398612022399902
    8. '                   ' → logprob: -8.523612022399902
    9. ' line' → logprob: -9.898612022399902
    10. '   ' → logprob: -10.148612022399902

Token 1426: '_chars' (ID: 94246)
  Prédit: ' ='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.9513117671012878
    2. '=' → logprob: -1.5763118267059326
    3. '()' → logprob: -1.5763118267059326
    4. 'print' → logprob: -2.5763118267059326
    5. '('' → logprob: -2.9513118267059326
    6. '           ' → logprob: -3.5763118267059326
    7. '("")' → logprob: -4.7013115882873535
    8. '               ' → logprob: -4.7013115882873535
    9. '(' → logprob: -5.3263115882873535
    10. '   ' → logprob: -5.7013115882873535

Token 1427: ' =' (ID: 314)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.20014211535453796
    2. ' =' → logprob: -2.4501421451568604
    3. '.append' → logprob: -2.5751421451568604
    4. 'print' → logprob: -4.450141906738281
    5. '               ' → logprob: -6.325141906738281
    6. '           ' → logprob: -6.700141906738281
    7. 'append' → logprob: -6.950141906738281
    8. '=[]' → logprob: -7.075141906738281
    9. '+=' → logprob: -8.075141906738281
    10. 'in' → logprob: -8.450141906738281

Token 1428: ' []
' (ID: 8911)
  Prédit: '[]
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[]
' → logprob: -0.1795981079339981
    2. '[]' → logprob: -2.429598093032837
    3. '['' → logprob: -2.679598093032837
    4. '[
' → logprob: -5.679598331451416
    5. '[' → logprob: -6.054598331451416
    6. '[x' → logprob: -7.054598331451416
    7. '[line' → logprob: -7.179598331451416
    8. '[]

' → logprob: -8.804597854614258
    9. '["' → logprob: -9.054597854614258
    10. ' []
' → logprob: -11.554597854614258

Token 1429: '               ' (ID: 506)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.7257828116416931
    2. '                   ' → logprob: -0.8507828116416931
    3. '               ' → logprob: -2.475782871246338
    4. ' for' → logprob: -5.475782871246338
    5. '           ' → logprob: -7.850782871246338
    6. '                       ' → logprob: -8.72578239440918
    7. '       ' → logprob: -9.97578239440918
    8. '   ' → logprob: -10.10078239440918
    9. '	               ' → logprob: -11.72578239440918
    10. '[' → logprob: -12.22578239440918

Token 1430: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -4.763666947837919e-05
    2. ' for' → logprob: -10.00004768371582
    3. '               ' → logprob: -13.75004768371582
    4. '                   ' → logprob: -14.12504768371582
    5. 'x' → logprob: -14.87504768371582
    6. '   ' → logprob: -18.12504768371582
    7. '```' → logprob: -18.50004768371582
    8. '           ' → logprob: -18.50004768371582
    9. '	for' → logprob: -18.87504768371582
    10. '0' → logprob: -19.50004768371582

Token 1431: ' x' (ID: 1215)
  Prédit: 'x'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'x' → logprob: -2.935296834039036e-06
    2. ' x' → logprob: -12.75000286102295
    3. '	x' → logprob: -21.125003814697266
    4. 'z' → logprob: -22.375003814697266
    5. '```' → logprob: -22.500003814697266
    6. '{x' → logprob: -22.625003814697266
    7. '   ' → logprob: -23.000003814697266
    8. '_x' → logprob: -23.250003814697266
    9. ')x' → logprob: -24.000003814697266
    10. '0' → logprob: -24.000003814697266

Token 1432: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.20142270624637604
    2. 'in' → logprob: -1.7014226913452148
    3. 'n' → logprob: -12.701422691345215
    4. 'In' → logprob: -13.576422691345215
    5. '               ' → logprob: -13.951422691345215
    6. '                   ' → logprob: -14.201422691345215
    7. '0' → logprob: -14.701422691345215
    8. '           ' → logprob: -14.951422691345215
    9. 'x' → logprob: -15.451422691345215
    10. '                               ' → logprob: -15.576422691345215

Token 1433: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.0001584850688232109
    2. ' range' → logprob: -8.750158309936523
    3. '(range' → logprob: -18.375158309936523
    4. '0' → logprob: -20.625158309936523
    5. 'Range' → logprob: -20.625158309936523
    6. 'in' → logprob: -22.125158309936523
    7. 'grid' → logprob: -22.125158309936523
    8. 'line' → logprob: -23.125158309936523
    9. '	range' → logprob: -23.500158309936523
    10. '
' → logprob: -23.875158309936523

Token 1434: '(grid' (ID: 51818)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.23381198942661285
    2. 'grid' → logprob: -1.9838119745254517
    3. 'in' → logprob: -3.233812093734741
    4. '(grid' → logprob: -3.608812093734741
    5. ' range' → logprob: -6.358811855316162
    6. ' in' → logprob: -6.358811855316162
    7. '(range' → logprob: -7.983811855316162
    8. 'Coordinate' → logprob: -8.10881233215332
    9. '(' → logprob: -9.10881233215332
    10. 'coordinate' → logprob: -9.48381233215332

Token 1435: '.size' (ID: 4463)
  Prédit: '.size'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.size' → logprob: -0.5893021821975708
    2. '.grid' → logprob: -1.5893021821975708
    3. '(grid' → logprob: -2.0893020629882812
    4. '.range' → logprob: -3.3393020629882812
    5. '(x' → logprob: -3.4643020629882812
    6. '(' → logprob: -4.339302062988281
    7. 'range' → logprob: -4.464302062988281
    8. 'size' → logprob: -4.714302062988281
    9. '(size' → logprob: -5.964302062988281
    10. '(range' → logprob: -5.964302062988281

Token 1436: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.2658486068248749
    2. '):' → logprob: -2.1408486366271973
    3. ')' → logprob: -2.3908486366271973
    4. '                   ' → logprob: -5.140848636627197
    5. '               ' → logprob: -5.515848636627197
    6. ' in' → logprob: -5.640848636627197
    7. 'in' → logprob: -6.265848636627197
    8. ':' → logprob: -6.265848636627197
    9. '<|end|>' → logprob: -6.515848636627197
    10. ':
' → logprob: -6.640848636627197

Token 1437: '                   ' (ID: 699)
  Prédit: '                   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '                   ' → logprob: -0.02592296339571476
    2. ' line' → logprob: -4.650922775268555
    3. 'line' → logprob: -5.650922775268555
    4. '                       ' → logprob: -5.775922775268555
    5. 'if' → logprob: -6.275922775268555
    6. ' in' → logprob: -6.525922775268555
    7. ' if' → logprob: -6.525922775268555
    8. '                           ' → logprob: -6.775922775268555
    9. 'Coordinate' → logprob: -6.775922775268555
    10. '               ' → logprob: -7.025922775268555

Token 1438: ' line' (ID: 2543)
  Prédit: 'line'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'line' (adapté à ' line') → logprob: -0.0008004573755897582
    2. ' line' → logprob: -7.500800609588623
    3. '                   ' → logprob: -8.875800132751465
    4. 'if' → logprob: -9.250800132751465
    5. '                       ' → logprob: -12.500800132751465
    6. 'cell' → logprob: -13.125800132751465
    7. 'char' → logprob: -13.750800132751465
    8. '(line' → logprob: -14.000800132751465
    9. '               ' → logprob: -14.500800132751465
    10. '   ' → logprob: -14.625800132751465

Token 1439: '_chars' (ID: 94246)
  Prédit: '_chars'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_chars' → logprob: -0.004702107049524784
    2. '.append' → logprob: -5.379702091217041
    3. '           ' → logprob: -11.2547025680542
    4. '               ' → logprob: -11.3797025680542
    5. '_char' → logprob: -11.5047025680542
    6. 'Chars' → logprob: -11.5047025680542
    7. '                   ' → logprob: -11.8797025680542
    8. '_.' → logprob: -12.0047025680542
    9. 'chars' → logprob: -12.1297025680542
    10. '=line' → logprob: -12.7547025680542

Token 1440: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.0004375830467324704
    2. 'append' → logprob: -8.12543773651123
    3. '.' → logprob: -8.87543773651123
    4. '.Append' → logprob: -14.87543773651123
    5. '                   ' → logprob: -15.12543773651123
    6. '+=' → logprob: -15.37543773651123
    7. '           ' → logprob: -15.37543773651123
    8. '               ' → logprob: -16.375436782836914
    9. ' append' → logprob: -16.375436782836914
    10. ' .' → logprob: -16.500436782836914

Token 1441: '('' (ID: 706)
  Prédit: '(''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '('' → logprob: -0.06198146939277649
    2. ''' → logprob: -2.811981439590454
    3. '(' → logprob: -12.436981201171875
    4. '(
' → logprob: -12.936981201171875
    5. '("' → logprob: -12.936981201171875
    6. '"' → logprob: -13.061981201171875
    7. ' '' → logprob: -14.061981201171875
    8. '1' → logprob: -14.311981201171875
    9. '(('' → logprob: -14.436981201171875
    10. 'grid' → logprob: -15.436981201171875

Token 1442: '1' (ID: 16)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.005296485032886267
    2. '('' → logprob: -5.25529670715332
    3. '1' → logprob: -10.50529670715332
    4. 'grid' → logprob: -10.88029670715332
    5. '"' → logprob: -11.50529670715332
    6. ' '' → logprob: -13.25529670715332
    7. 'str' → logprob: -13.75529670715332
    8. 'Grid' → logprob: -14.38029670715332
    9. '0' → logprob: -14.63029670715332
    10. '("' → logprob: -14.88029670715332

Token 1443: ''' (ID: 6)
  Prédit: '''
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -0.0290578193962574
    2. 'if' → logprob: -3.654057741165161
    3. ' if' → logprob: -5.90405797958374
    4. '')' → logprob: -11.654057502746582
    5. '"' → logprob: -13.029057502746582
    6. '1' → logprob: -13.154057502746582
    7. '```' → logprob: -13.154057502746582
    8. ''''' → logprob: -13.279057502746582
    9. ''s' → logprob: -13.654057502746582
    10. ' '' → logprob: -13.779057502746582

Token 1444: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.05043208971619606
    2. ' if' → logprob: -3.0504322052001953
    3. ''' → logprob: -6.300432205200195
    4. '1' → logprob: -13.550432205200195
    5. ''s' → logprob: -13.550432205200195
    6. ')' → logprob: -13.925432205200195
    7. '   ' → logprob: -14.675432205200195
    8. ' '' → logprob: -14.800432205200195
    9. '['' → logprob: -14.925432205200195
    10. '

' → logprob: -15.050432205200195

Token 1445: ' Coordinate' (ID: 78454)
  Prédit: 'Coordinate'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Coordinate' → logprob: -1.6240566083070007e-06
    2. ' Coordinate' → logprob: -13.375001907348633
    3. 'Coordinates' → logprob: -19.375001907348633
    4. '_coordinate' → logprob: -19.375001907348633
    5. 'Coord' → logprob: -19.500001907348633
    6. 'grid' → logprob: -19.625001907348633
    7. 'Grid' → logprob: -20.000001907348633
    8. 'coordinate' → logprob: -21.250001907348633
    9. 'Coordinator' → logprob: -21.375001907348633
    10. '   ' → logprob: -22.250001907348633

Token 1446: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -3.1424973713001236e-05
    2. '(x' → logprob: -10.375031471252441
    3. 'Grid' → logprob: -16.500030517578125
    4. 'Coordinate' → logprob: -17.875030517578125
    5. '
' → logprob: -18.250030517578125
    6. '```' → logprob: -19.125030517578125
    7. '(' → logprob: -19.625030517578125
    8. '[x' → logprob: -20.250030517578125
    9. '   ' → logprob: -20.250030517578125
    10. '((' → logprob: -20.375030517578125

Token 1447: 'D' (ID: 35)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.030679922550916672
    2. '(x' → logprob: -3.530679941177368
    3. 'D' → logprob: -7.155679702758789
    4. 'Coordinate' → logprob: -9.155679702758789
    5. '(' → logprob: -10.405679702758789
    6. '(Co' → logprob: -12.530679702758789
    7. 'C' → logprob: -13.155679702758789
    8. '[x' → logprob: -13.655679702758789
    9. 'Coord' → logprob: -14.030679702758789
    10. '   ' → logprob: -14.280679702758789

Token 1448: '(x' (ID: 4061)
  Prédit: '(x'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(x' → logprob: -2.696889623621246e-06
    2. '(' → logprob: -13.12500286102295
    3. 'x' → logprob: -14.25000286102295
    4. ' (' → logprob: -16.875001907348633
    5. '(
' → logprob: -18.375001907348633
    6. '((' → logprob: -20.875001907348633
    7. '   ' → logprob: -20.875001907348633
    8. '```' → logprob: -21.000001907348633
    9. '[x' → logprob: -21.375001907348633
    10. '
' → logprob: -21.375001907348633

Token 1449: ',y' (ID: 16103)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.026335250586271286
    2. ',y' → logprob: -3.6513352394104004
    3. 'y' → logprob: -10.401335716247559
    4. ' ,' → logprob: -12.401335716247559
    5. ',
' → logprob: -16.276334762573242
    6. '(y' → logprob: -16.901334762573242
    7. 'import' → logprob: -16.901334762573242
    8. '0' → logprob: -17.276334762573242
    9. '_,' → logprob: -17.276334762573242
    10. '[y' → logprob: -17.276334762573242

Token 1450: ',z' (ID: 54920)
  Prédit: ',z'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',z' → logprob: -0.062076136469841
    2. ',' → logprob: -2.8120760917663574
    3. 'z' → logprob: -9.187076568603516
    4. ',x' → logprob: -12.687076568603516
    5. ',y' → logprob: -13.562076568603516
    6. ',Z' → logprob: -14.562076568603516
    7. ' ,' → logprob: -14.687076568603516
    8. '(z' → logprob: -15.437076568603516
    9. '[z' → logprob: -16.062076568603516
    10. ',
' → logprob: -16.312076568603516

Token 1451: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0007590038585476577
    2. 'in' → logprob: -7.875759124755859
    3. ',' → logprob: -8.87575912475586
    4. ' in' → logprob: -9.12575912475586
    5. ' )' → logprob: -9.87575912475586
    6. '')' → logprob: -10.37575912475586
    7. ',)' → logprob: -11.25075912475586
    8. ')
' → logprob: -11.62575912475586
    9. '                   ' → logprob: -12.25075912475586
    10. ').' → logprob: -12.50075912475586

Token 1452: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.2524937093257904
    2. ' in' → logprob: -1.5024937391281128
    3. ')' → logprob: -7.502493858337402
    4. '
' → logprob: -13.252493858337402
    5. 'In' → logprob: -13.377493858337402
    6. '   ' → logprob: -13.627493858337402
    7. '	in' → logprob: -14.002493858337402
    8. '           ' → logprob: -14.127493858337402
    9. ' ' → logprob: -14.252493858337402
    10. ').' → logprob: -15.002493858337402

Token 1453: ' grid' (ID: 10586)
  Prédit: 'grid'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'grid' → logprob: -3.7697225252486533e-06
    2. ' grid' → logprob: -12.500003814697266
    3. '(grid' → logprob: -19.625003814697266
    4. '
' → logprob: -20.000003814697266
    5. '	grid' → logprob: -20.000003814697266
    6. '.grid' → logprob: -20.375003814697266
    7. 'g' → logprob: -22.000003814697266
    8. 'self' → logprob: -22.125003814697266
    9. ':grid' → logprob: -22.375003814697266
    10. '           ' → logprob: -22.875003814697266

Token 1454: '.' (ID: 13)
  Prédit: '.'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.' → logprob: -0.00525616854429245
    2. '.grid' → logprob: -5.255256175994873
    3. 'occupied' → logprob: -11.005255699157715
    4. 'grid' → logprob: -12.380255699157715
    5. ' .' → logprob: -13.880255699157715
    6. '.in' → logprob: -14.755255699157715
    7. 'Occupied' → logprob: -16.13025665283203
    8. '```' → logprob: -17.13025665283203
    9. ').' → logprob: -17.25525665283203
    10. '.oc' → logprob: -18.00525665283203

Token 1455: 'occupied' (ID: 98229)
  Prédit: 'occupied'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'occupied' → logprob: -0.00016551809676457196
    2. 'grid' → logprob: -8.875165939331055
    3. '.grid' → logprob: -11.250165939331055
    4. '.' → logprob: -11.875165939331055
    5. ' occupied' → logprob: -12.875165939331055
    6. '```' → logprob: -13.875165939331055
    7. '0' → logprob: -15.125165939331055
    8. 'occ' → logprob: -15.125165939331055
    9. 'Occupied' → logprob: -15.375165939331055
    10. 'occup' → logprob: -15.625165939331055

Token 1456: ' else' (ID: 1203)
  Prédit: 'else'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'else' → logprob: -0.16022463142871857
    2. ' else' → logprob: -1.9102246761322021
    3. '               ' → logprob: -15.535224914550781
    4. '           ' → logprob: -16.03522491455078
    5. '                   ' → logprob: -17.28522491455078
    6. ')' → logprob: -17.66022491455078
    7. '                       ' → logprob: -17.78522491455078
    8. '                ' → logprob: -18.16022491455078
    9. '            ' → logprob: -18.41022491455078
    10. '```' → logprob: -18.41022491455078

Token 1457: ' '' (ID: 461)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -2.3080716346157715e-05
    2. ' '' → logprob: -10.750022888183594
    3. '('' → logprob: -13.750022888183594
    4. '
' → logprob: -15.500022888183594
    5. '"' → logprob: -16.625022888183594
    6. '           ' → logprob: -16.750022888183594
    7. '               ' → logprob: -17.375022888183594
    8. '['' → logprob: -17.375022888183594
    9. ' ' → logprob: -17.500022888183594
    10. '   ' → logprob: -18.000022888183594

Token 1458: '0' (ID: 15)
  Prédit: '''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ''' → logprob: -5.512236498361744e-07
    2. '0' → logprob: -15.000000953674316
    3. ' '' → logprob: -16.25
    4. '"' → logprob: -17.25
    5. '('' → logprob: -18.5
    6. '')' → logprob: -18.875
    7. '`' → logprob: -19.25
    8. '
' → logprob: -20.75
    9. ''
' → logprob: -20.75
    10. ')' → logprob: -20.875

Token 1459: '')
' (ID: 2515)
  Prédit: '')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '')' → logprob: -0.600714385509491
    2. ')' → logprob: -1.1007144451141357
    3. '')
' → logprob: -3.7257144451141357
    4. ')
' → logprob: -3.8507144451141357
    5. '))' → logprob: -4.225714206695557
    6. ''' → logprob: -4.350714206695557
    7. '               ' → logprob: -4.350714206695557
    8. '))
' → logprob: -4.850714206695557
    9. ''))' → logprob: -4.975714206695557
    10. ''))
' → logprob: -4.975714206695557

Token 1460: '               ' (ID: 506)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' → logprob: -0.3644157946109772
    2. '               ' → logprob: -1.2394157648086548
    3. '           ' → logprob: -4.739415645599365
    4. ' print' → logprob: -5.739415645599365
    5. '                   ' → logprob: -6.239415645599365
    6. '       ' → logprob: -7.364415645599365
    7. '```' → logprob: -7.614415645599365
    8. ')' → logprob: -8.364416122436523
    9. '   ' → logprob: -9.239416122436523
    10. '                       ' → logprob: -9.489416122436523

Token 1461: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.00010509284038562328
    2. ' print' → logprob: -9.500104904174805
    3. '               ' → logprob: -10.625104904174805
    4. '           ' → logprob: -12.125104904174805
    5. '   ' → logprob: -15.375104904174805
    6. '                   ' → logprob: -15.625104904174805
    7. '       ' → logprob: -16.000104904174805
    8. '	print' → logprob: -18.500104904174805
    9. 'line' → logprob: -18.625104904174805
    10. '
' → logprob: -18.875104904174805

Token 1462: '("' (ID: 568)
  Prédit: '("'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '("' → logprob: -0.008716569282114506
    2. '"' → logprob: -4.758716583251953
    3. '('' → logprob: -9.758716583251953
    4. '''.' → logprob: -10.883716583251953
    5. ' "".' → logprob: -11.383716583251953
    6. '(' → logprob: -11.758716583251953
    7. '(""' → logprob: -13.383716583251953
    8. '""' → logprob: -13.383716583251953
    9. '   ' → logprob: -13.383716583251953
    10. '("").' → logprob: -14.383716583251953

Token 1463: '".' (ID: 4050)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0037329760380089283
    2. '''.' → logprob: -6.003733158111572
    3. '("' → logprob: -6.878733158111572
    4. ' "".' → logprob: -9.003732681274414
    5. '""' → logprob: -9.378732681274414
    6. '   ' → logprob: -11.753732681274414
    7. '".' → logprob: -12.003732681274414
    8. '       ' → logprob: -14.253732681274414
    9. '("").' → logprob: -14.503732681274414
    10. '",".' → logprob: -14.628732681274414

Token 1464: 'join' (ID: 10891)
  Prédit: 'join'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'join' → logprob: -1.9361264946837764e-07
    2. ' join' → logprob: -16.125
    3. '(join' → logprob: -17.375
    4. 'j' → logprob: -18.25
    5. 'print' → logprob: -18.625
    6. '''.' → logprob: -19.125
    7. '".' → logprob: -19.375
    8. '.join' → logprob: -19.625
    9. '"' → logprob: -19.75
    10. 'jo' → logprob: -19.875

Token 1465: '(line' (ID: 18178)
  Prédit: '(line'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -9.639096970204264e-05
    2. 'line' → logprob: -9.250096321105957
    3. '=line' → logprob: -16.750097274780273
    4. ' line' → logprob: -16.875097274780273
    5. '[line' → logprob: -17.000097274780273
    6. '#line' → logprob: -18.750097274780273
    7. '(' → logprob: -20.125097274780273
    8. ',line' → logprob: -20.250097274780273
    9. '	line' → logprob: -21.250097274780273
    10. '(
' → logprob: -22.125097274780273

Token 1466: '_chars' (ID: 94246)
  Prédit: '(line'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(line' → logprob: -0.0009448148775845766
    2. '_chars' → logprob: -7.1259446144104
    3. 'line' → logprob: -9.625945091247559
    4. '[line' → logprob: -10.125945091247559
    5. 'Chars' → logprob: -11.375945091247559
    6. 'chars' → logprob: -11.750945091247559
    7. '=line' → logprob: -11.875945091247559
    8. ' line' → logprob: -12.625945091247559
    9. '(' → logprob: -13.500945091247559
    10. '(
' → logprob: -13.875945091247559

Token 1467: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0017083751736208797
    2. ')
' → logprob: -6.376708507537842
    3. '           ' → logprob: -12.751708030700684
    4. '               ' → logprob: -13.876708030700684
    5. '")' → logprob: -13.876708030700684
    6. '))' → logprob: -14.126708030700684
    7. ' )' → logprob: -15.876708030700684
    8. '())' → logprob: -15.876708030700684
    9. ')
' → logprob: -15.876708030700684
    10. ')`' → logprob: -16.376708984375

Token 1468: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.0027469811029732227
    2. 'print' → logprob: -6.127747058868408
    3. '<|end|>' → logprob: -7.877747058868408
    4. '       ' → logprob: -8.75274658203125
    5. '   ' → logprob: -11.87774658203125
    6. '<|end|>' → logprob: -12.37774658203125
    7. '               ' → logprob: -12.50274658203125
    8. '          ' → logprob: -13.00274658203125
    9. ' print' → logprob: -13.00274658203125
    10. '```' → logprob: -13.50274658203125

Token 1469: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.10200190544128418
    2. '       ' → logprob: -2.352001905441284
    3. '           ' → logprob: -6.477002143859863
    4. ' print' → logprob: -8.727002143859863
    5. '   ' → logprob: -10.227002143859863
    6. 'if' → logprob: -10.352002143859863
    7. '<|end|>' → logprob: -11.227002143859863
    8. '```' → logprob: -12.727002143859863
    9. '
' → logprob: -13.102002143859863
    10. '        
' → logprob: -13.227002143859863

Token 1470: '()

' (ID: 5874)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -8.061054359131958e-06
    2. '()
' → logprob: -12.000007629394531
    3. '("")' → logprob: -13.500007629394531
    4. '())' → logprob: -15.625007629394531
    5. '()\' → logprob: -15.625007629394531
    6. '(' → logprob: -17.00000762939453
    7. ' ()' → logprob: -17.75000762939453
    8. '()

' → logprob: -17.75000762939453
    9. '()<' → logprob: -18.12500762939453
    10. '()}' → logprob: -18.62500762939453

Token 1471: 'def' (ID: 1314)
  Prédit: 'def'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'def' → logprob: -0.04911355301737785
    2. '   ' → logprob: -3.0491135120391846
    3. 'if' → logprob: -7.924113750457764
    4. ' def' → logprob: -9.174113273620605
    5. '```' → logprob: -10.549113273620605
    6. '
' → logprob: -11.049113273620605
    7. '#' → logprob: -12.674113273620605
    8. 'class' → logprob: -12.674113273620605
    9. 'import' → logprob: -12.799113273620605
    10. '       ' → logprob: -13.049113273620605

Token 1472: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.000206401280593127
    2. ' main' → logprob: -8.500205993652344
    3. 'run' → logprob: -12.750205993652344
    4. 'process' → logprob: -19.250205993652344
    5. 'simulate' → logprob: -19.625205993652344
    6. 'solve' → logprob: -19.875205993652344
    7. ' run' → logprob: -20.125205993652344
    8. 'def' → logprob: -20.125205993652344
    9. '	main' → logprob: -21.125205993652344
    10. '_main' → logprob: -21.375205993652344

Token 1473: '():
' (ID: 8595)
  Prédit: '():'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '():' → logprob: -0.002478985348716378
    2. '():
' → logprob: -6.002479076385498
    3. '()' → logprob: -13.00247859954834
    4. ' ():' → logprob: -14.50247859954834
    5. '():
' → logprob: -15.37747859954834
    6. ':' → logprob: -15.37747859954834
    7. '():

' → logprob: -16.502479553222656
    8. 'def' → logprob: -17.377479553222656
    9. '();' → logprob: -18.127479553222656
    10. '(' → logprob: -18.877479553222656

Token 1474: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.005187032278627157
    2. 'parser' → logprob: -5.380187034606934
    3. ' parser' → logprob: -8.005187034606934
    4. 'input' → logprob: -9.130187034606934
    5. 'import' → logprob: -9.755187034606934
    6. 'ip' → logprob: -9.880187034606934
    7. '   ' → logprob: -12.130187034606934
    8. '	parser' → logprob: -12.505187034606934
    9. ' input' → logprob: -13.130187034606934
    10. ' ip' → logprob: -13.880187034606934

Token 1475: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' (adapté à ' parser') → logprob: -6.515961285913363e-05
    2. '   ' → logprob: -9.750064849853516
    3. ' parser' → logprob: -12.000064849853516
    4. 'input' → logprob: -15.250064849853516
    5. 'import' → logprob: -15.500064849853516
    6. 'ip' → logprob: -16.375064849853516
    7. '
' → logprob: -18.125064849853516
    8. '	parser' → logprob: -18.625064849853516
    9. 'parse' → logprob: -19.125064849853516
    10. '    
' → logprob: -19.875064849853516

Token 1476: ' =' (ID: 314)
  Prédit: ' ='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' =' → logprob: -0.43796736001968384
    2. '=' → logprob: -1.687967300415039
    3. '.parse' → logprob: -2.062967300415039
    4. '.' → logprob: -3.562967300415039
    5. '.parser' → logprob: -5.562967300415039
    6. '   ' → logprob: -6.187967300415039
    7. '_parser' → logprob: -6.312967300415039
    8. '.Parser' → logprob: -6.437967300415039
    9. '=parse' → logprob: -6.437967300415039
    10. 'parser' → logprob: -7.312967300415039

Token 1477: ' Input' (ID: 10090)
  Prédit: 'Input'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Input' → logprob: -1.9361264946837764e-07
    2. ' Input' → logprob: -16.25
    3. '_input' → logprob: -23.125
    4. '	Input' → logprob: -23.875
    5. '<Input' → logprob: -24.0
    6. 'input' → logprob: -24.5
    7. '_Input' → logprob: -24.875
    8. '\Input' → logprob: -25.25
    9. 'Output' → logprob: -26.375
    10. '.Input' → logprob: -26.875

Token 1478: 'Parser' (ID: 9231)
  Prédit: 'Parser'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Parser' → logprob: 0.0
    2. 'parser' → logprob: -17.5
    3. ' Parser' → logprob: -18.625
    4. '(Parser' → logprob: -19.625
    5. '_parser' → logprob: -20.5
    6. 'Reader' → logprob: -20.75
    7. '.Parser' → logprob: -20.875
    8. 'Parse' → logprob: -21.0
    9. ' parser' → logprob: -21.25
    10. '()' → logprob: -21.5

Token 1479: '()
' (ID: 1234)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.006595051847398281
    2. '   ' → logprob: -5.381595134735107
    3. '
' → logprob: -6.256595134735107
    4. ' parser' → logprob: -10.88159465789795
    5. '(parser' → logprob: -11.50659465789795
    6. '```' → logprob: -11.63159465789795
    7. '.parser' → logprob: -11.88159465789795
    8. '	parser' → logprob: -12.25659465789795
    9. '    
' → logprob: -13.25659465789795
    10. 'parse' → logprob: -13.88159465789795

Token 1480: '   ' (ID: 271)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.023259920999407768
    2. '   ' → logprob: -3.7732598781585693
    3. ' parser' → logprob: -11.273260116577148
    4. '	parser' → logprob: -13.773260116577148
    5. '
' → logprob: -15.398260116577148
    6. 'parse' → logprob: -15.898260116577148
    7. '```' → logprob: -16.14826011657715
    8. '(parser' → logprob: -16.39826011657715
    9. '_parser' → logprob: -16.64826011657715
    10. '.parser' → logprob: -16.64826011657715

Token 1481: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' (adapté à ' parser') → logprob: -2.339278580620885e-06
    2. 'parse' → logprob: -14.000001907348633
    3. ' parser' → logprob: -14.125001907348633
    4. '   ' → logprob: -14.125001907348633
    5. '
' → logprob: -17.375001907348633
    6. '	parser' → logprob: -18.875001907348633
    7. '```' → logprob: -19.375001907348633
    8. '(parser' → logprob: -19.625001907348633
    9. '.parser' → logprob: -20.250001907348633
    10. 'while' → logprob: -20.625001907348633

Token 1482: '.parse' (ID: 7259)
  Prédit: '.parse'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.parse' → logprob: -0.000558512459974736
    2. '.' → logprob: -7.500558376312256
    3. 'parse' → logprob: -12.875558853149414
    4. '=parse' → logprob: -13.625558853149414
    5. '.parser' → logprob: -14.625558853149414
    6. ' .' → logprob: -14.875558853149414
    7. '.Parse' → logprob: -15.625558853149414
    8. '.p' → logprob: -15.750558853149414
    9. '.
' → logprob: -16.500558853149414
    10. '.mainloop' → logprob: -16.625558853149414

Token 1483: '_input' (ID: 12507)
  Prédit: '_input'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_input' → logprob: -4.584861744660884e-05
    2. 'input' → logprob: -10.000045776367188
    3. 'Input' → logprob: -14.875045776367188
    4. '()
' → logprob: -18.250045776367188
    5. '_output' → logprob: -18.500045776367188
    6. '()' → logprob: -18.875045776367188
    7. '```' → logprob: -19.000045776367188
    8. '   ' → logprob: -19.250045776367188
    9. '_INPUT' → logprob: -19.250045776367188
    10. '
' → logprob: -19.500045776367188

Token 1484: '()

' (ID: 5874)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.06930775195360184
    2. '
' → logprob: -3.069307804107666
    3. 'parser' → logprob: -4.569307804107666
    4. 'for' → logprob: -4.694307804107666
    5. ' for' → logprob: -7.444307804107666
    6. '```' → logprob: -8.444307327270508
    7. ' parser' → logprob: -9.944307327270508
    8. '    
' → logprob: -10.069307327270508
    9. 'sim' → logprob: -10.069307327270508
    10. 'while' → logprob: -10.194307327270508

Token 1485: '   ' (ID: 271)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.006749835796654224
    2. '   ' → logprob: -5.006749629974365
    3. '
' → logprob: -11.006750106811523
    4. ' for' → logprob: -11.131750106811523
    5. '```' → logprob: -12.631750106811523
    6. '``' → logprob: -17.006750106811523
    7. '    
' → logprob: -17.381750106811523
    8. '	for' → logprob: -18.631750106811523
    9. ' ' → logprob: -19.756750106811523
    10. 'For' → logprob: -20.381750106811523

Token 1486: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.00016277639952022582
    2. 'writer' → logprob: -8.750163078308105
    3. 'output' → logprob: -12.500163078308105
    4. '   ' → logprob: -15.000163078308105
    5. ' for' → logprob: -16.12516212463379
    6. 'outputs' → logprob: -17.37516212463379
    7. '```' → logprob: -18.37516212463379
    8. 'from' → logprob: -18.75016212463379
    9. 'w' → logprob: -19.62516212463379
    10. 'import' → logprob: -20.12516212463379

Token 1487: ' case' (ID: 1890)
  Prédit: 'case'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'case' → logprob: -0.00020520923135336488
    2. ' case' → logprob: -8.500205039978027
    3. '(case' → logprob: -13.500205039978027
    4. '   ' → logprob: -15.125205039978027
    5. 'test' → logprob: -16.500205993652344
    6. '_case' → logprob: -18.375205993652344
    7. '(' → logprob: -20.625205993652344
    8. '	case' → logprob: -20.750205993652344
    9. ' test' → logprob: -21.375205993652344
    10. ' ' → logprob: -21.375205993652344

Token 1488: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -0.2009538859128952
    2. ' in' → logprob: -1.9509538412094116
    3. 'in' → logprob: -3.325953960418701
    4. '   ' → logprob: -6.575953960418701
    5. '_' → logprob: -6.700953960418701
    6. 'id' → logprob: -7.075953960418701
    7. '_in' → logprob: -8.700953483581543
    8. '_i' → logprob: -9.325953483581543
    9. ',' → logprob: -9.450953483581543
    10. '_idx' → logprob: -9.950953483581543

Token 1489: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.03863852471113205
    2. ' in' → logprob: -3.4136385917663574
    3. 'in' → logprob: -5.663638591766357
    4. ' ,' → logprob: -6.663638591766357
    5. '   ' → logprob: -8.9136381149292
    6. ',in' → logprob: -9.7886381149292
    7. ',n' → logprob: -11.5386381149292
    8. '    ' → logprob: -12.6636381149292
    9. '_,' → logprob: -12.6636381149292
    10. ',int' → logprob: -12.9136381149292

Token 1490: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -0.0008957397076301277
    2. ' N' → logprob: -7.125895977020264
    3. '_,' → logprob: -9.500895500183105
    4. '   ' → logprob: -11.250895500183105
    5. 'n' → logprob: -13.125895500183105
    6. '    ' → logprob: -15.125895500183105
    7. ' _,' → logprob: -15.125895500183105
    8. ',' → logprob: -15.375895500183105
    9. '       ' → logprob: -15.750895500183105
    10. 'num' → logprob: -16.375896453857422

Token 1491: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.00011403311509639025
    2. ' ,' → logprob: -9.375114440917969
    3. ',N' → logprob: -10.750114440917969
    4. ' in' → logprob: -13.125114440917969
    5. ',n' → logprob: -13.375114440917969
    6. ',new' → logprob: -13.750114440917969
    7. '   ' → logprob: -14.500114440917969
    8. '_,' → logprob: -14.750114440917969
    9. ',in' → logprob: -15.250114440917969
    10. ',line' → logprob: -15.375114440917969

Token 1492: ' initial' (ID: 4871)
  Prédit: 'initial'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'initial' → logprob: -8.77627644513268e-06
    2. ' initial' → logprob: -11.750008583068848
    3. 'grid' → logprob: -14.000008583068848
    4. 'init' → logprob: -16.750009536743164
    5. '(initial' → logprob: -19.125009536743164
    6. '   ' → logprob: -19.750009536743164
    7. '	initial' → logprob: -20.000009536743164
    8. '
' → logprob: -21.375009536743164
    9. '```' → logprob: -21.750009536743164
    10. '.initial' → logprob: -22.000009536743164

Token 1493: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -3.082895273109898e-05
    2. 'grid' → logprob: -10.500030517578125
    3. '_,' → logprob: -14.250030517578125
    4. '_' → logprob: -14.375030517578125
    5. '   ' → logprob: -14.375030517578125
    6. '
' → logprob: -14.625030517578125
    7. ',' → logprob: -15.000030517578125
    8. 'Grid' → logprob: -15.500030517578125
    9. ' _' → logprob: -16.125030517578125
    10. '_GRID' → logprob: -16.125030517578125

Token 1494: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -9.65101717156358e-05
    2. ' ,' → logprob: -9.250096321105957
    3. '_,' → logprob: -16.000097274780273
    4. ',
' → logprob: -16.500097274780273
    5. ',r' → logprob: -17.000097274780273
    6. '   ' → logprob: -17.250097274780273
    7. 'import' → logprob: -17.875097274780273
    8. ' in' → logprob: -18.000097274780273
    9. ',new' → logprob: -18.125097274780273
    10. ',s' → logprob: -18.250097274780273

Token 1495: ' rules' (ID: 9607)
  Prédit: 'rules'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rules' → logprob: -0.0011726059019565582
    2. ' rules' → logprob: -6.7511725425720215
    3. '   ' → logprob: -13.75117301940918
    4. 'rule' → logprob: -14.37617301940918
    5. 'birth' → logprob: -14.75117301940918
    6. 'r' → logprob: -16.37617301940918
    7. '       ' → logprob: -16.50117301940918
    8. '           ' → logprob: -16.62617301940918
    9. '
' → logprob: -17.00117301940918
    10. ' ' → logprob: -17.50117301940918

Token 1496: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.11740396171808243
    2. ',' → logprob: -2.242403984069824
    3. 'in' → logprob: -5.492403984069824
    4. '   ' → logprob: -7.867403984069824
    5. ' ,' → logprob: -9.867403984069824
    6. '    ' → logprob: -11.867403984069824
    7. ',in' → logprob: -12.367403984069824
    8. '
' → logprob: -13.367403984069824
    9. '	in' → logprob: -13.617403984069824
    10. '  ' → logprob: -13.992403984069824

Token 1497: ' parser' (ID: 14216)
  Prédit: 'parser'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'parser' → logprob: -0.1177804172039032
    2. ' parser' → logprob: -2.2427804470062256
    3. 'Simulation' → logprob: -6.8677802085876465
    4. '(parser' → logprob: -7.1177802085876465
    5. '   ' → logprob: -7.4927802085876465
    6. 'rules' → logprob: -7.6177802085876465
    7. 'enumer' → logprob: -7.7427802085876465
    8. 'range' → logprob: -7.9927802085876465
    9. 'initial' → logprob: -8.117780685424805
    10. 'Input' → logprob: -8.617780685424805

Token 1498: '.test' (ID: 9859)
  Prédit: '.test'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.test' → logprob: -0.003493400290608406
    2. 'test' → logprob: -6.003493309020996
    3. '   ' → logprob: -7.128493309020996
    4. '.' → logprob: -9.753493309020996
    5. ' test' → logprob: -10.003493309020996
    6. ':
' → logprob: -11.128493309020996
    7. ' .' → logprob: -11.128493309020996
    8. '       ' → logprob: -11.753493309020996
    9. ' ' → logprob: -11.753493309020996
    10. ':' → logprob: -11.878493309020996

Token 1499: '_cases' (ID: 115457)
  Prédit: '_cases'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_cases' → logprob: -0.0022290023043751717
    2. 'cases' → logprob: -6.1272292137146
    3. 'Cases' → logprob: -11.752228736877441
    4. '   ' → logprob: -11.877228736877441
    5. '```' → logprob: -11.877228736877441
    6. 'case' → logprob: -12.252228736877441
    7. 'parse' → logprob: -12.502228736877441
    8. '_codes' → logprob: -12.627228736877441
    9. 'parser' → logprob: -12.627228736877441
    10. '3' → logprob: -14.002228736877441

Token 1500: ':
' (ID: 734)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.23298481106758118
    2. ':
' → logprob: -1.8579847812652588
    3. ':' → logprob: -3.232984781265259
    4. ',' → logprob: -4.732985019683838
    5. '   ' → logprob: -6.232985019683838
    6. '):
' → logprob: -7.732985019683838
    7. '<|end|>' → logprob: -7.982985019683838
    8. '<|end|>' → logprob: -8.48298454284668
    9. '():
' → logprob: -8.73298454284668
    10. ' :
' → logprob: -9.73298454284668

Token 1501: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.002919707214459777
    2. '   ' → logprob: -5.877919673919678
    3. ' sim' → logprob: -10.252920150756836
    4. ' simulation' → logprob: -10.502920150756836
    5. 'sim' → logprob: -10.627920150756836
    6. 'simulation' → logprob: -11.877920150756836
    7. '```' → logprob: -12.002920150756836
    8. '           ' → logprob: -12.752920150756836
    9. 's' → logprob: -13.252920150756836
    10. ' grid' → logprob: -13.502920150756836

Token 1502: ' sim' (ID: 1845)
  Prédit: 'sim'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sim' (adapté à ' sim') → logprob: -0.1119159683585167
    2. 'simulation' → logprob: -2.3619160652160645
    3. '       ' → logprob: -5.1119160652160645
    4. ' sim' → logprob: -5.6119160652160645
    5. '   ' → logprob: -6.4869160652160645
    6. ' simulation' → logprob: -7.7369160652160645
    7. 's' → logprob: -13.361915588378906
    8. '           ' → logprob: -14.861915588378906
    9. ' simulator' → logprob: -15.861915588378906
    10. '_sim' → logprob: -16.236915588378906

Token 1503: ' =' (ID: 314)
  Prédit: 'ulation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ulation' → logprob: -0.03922386094927788
    2. ' =' → logprob: -3.2892239093780518
    3. '=' → logprob: -7.289223670959473
    4. 'ulator' → logprob: -8.039223670959473
    5. '   ' → logprob: -9.289223670959473
    6. 'ULATION' → logprob: -10.039223670959473
    7. 'lation' → logprob: -11.539223670959473
    8. 'ilation' → logprob: -11.789223670959473
    9. ' ' → logprob: -11.914223670959473
    10. '       ' → logprob: -13.039223670959473

Token 1504: ' Simulation' (ID: 76406)
  Prédit: 'Simulation'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Simulation' → logprob: -2.935296834039036e-06
    2. ' Simulation' → logprob: -12.75000286102295
    3. '   ' → logprob: -18.875003814697266
    4. '       ' → logprob: -23.000003814697266
    5. 'Simulator' → logprob: -23.375003814697266
    6. 'Sim' → logprob: -23.875003814697266
    7. 'Solution' → logprob: -24.000003814697266
    8. 'simulation' → logprob: -24.250003814697266
    9. '           ' → logprob: -25.000003814697266
    10. ' simulation' → logprob: -26.125003814697266

Token 1505: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -8.537868779967539e-06
    2. 'Simulation' → logprob: -12.250008583068848
    3. 'Sim' → logprob: -14.000008583068848
    4. '(' → logprob: -14.250008583068848
    5. '(case' → logprob: -14.500008583068848
    6. 'Simulator' → logprob: -14.750008583068848
    7. '(sim' → logprob: -14.875008583068848
    8. ')' → logprob: -15.375008583068848
    9. '.' → logprob: -15.750008583068848
    10. '_' → logprob: -16.12500762939453

Token 1506: 'D' (ID: 35)
  Prédit: '3'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.0003361774142831564
    2. 'D' → logprob: -8.000336647033691
    3. '(' → logprob: -15.375336647033691
    4. 'Simulation' → logprob: -16.000335693359375
    5. '(S' → logprob: -16.125335693359375
    6. '   ' → logprob: -16.250335693359375
    7. 'd' → logprob: -16.250335693359375
    8. ' ' → logprob: -17.000335693359375
    9. '[' → logprob: -17.500335693359375
    10. '_D' → logprob: -17.625335693359375

Token 1507: '(initial' (ID: 63456)
  Prédit: '(initial'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(initial' → logprob: -0.000263481488218531
    2. 'initial' → logprob: -8.250263214111328
    3. '(' → logprob: -13.375263214111328
    4. '(
' → logprob: -14.375263214111328
    5. '   ' → logprob: -17.875263214111328
    6. ' initial' → logprob: -18.000263214111328
    7. ' (' → logprob: -18.375263214111328
    8. '(existing' → logprob: -18.500263214111328
    9. '(init' → logprob: -19.000263214111328
    10. '	initial' → logprob: -19.125263214111328

Token 1508: '_grid' (ID: 34614)
  Prédit: '_grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_grid' → logprob: -0.46189337968826294
    2. '(initial' → logprob: -1.4618933200836182
    3. 'initial' → logprob: -2.211893320083618
    4. 'grid' → logprob: -3.711893320083618
    5. '3' → logprob: -5.836893558502197
    6. 'Grid' → logprob: -7.586893558502197
    7. '(grid' → logprob: -8.711893081665039
    8. '(N' → logprob: -8.711893081665039
    9. 'id' → logprob: -9.461893081665039
    10. 'N' → logprob: -9.461893081665039

Token 1509: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.023333992809057236
    2. ',r' → logprob: -3.77333402633667
    3. ' ,' → logprob: -9.898333549499512
    4. 'rules' → logprob: -10.523333549499512
    5. '(r' → logprob: -12.023333549499512
    6. 'r' → logprob: -13.023333549499512
    7. '       ' → logprob: -13.023333549499512
    8. '_,' → logprob: -15.398333549499512
    9. '   ' → logprob: -15.898333549499512
    10. '           ' → logprob: -15.898333549499512

Token 1510: ' rules' (ID: 9607)
  Prédit: 'rules'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rules' → logprob: -0.001502598519437015
    2. ' rules' → logprob: -6.501502513885498
    3. '           ' → logprob: -15.501502990722656
    4. '       ' → logprob: -16.876502990722656
    5. '
' → logprob: -17.001502990722656
    6. '.rules' → logprob: -17.501502990722656
    7. '   ' → logprob: -18.376502990722656
    8. 'r' → logprob: -18.501502990722656
    9. '            ' → logprob: -18.876502990722656
    10. '               ' → logprob: -19.126502990722656

Token 1511: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003542926860973239
    2. ',N' → logprob: -8.000354766845703
    3. '       ' → logprob: -11.250354766845703
    4. ' ,' → logprob: -12.250354766845703
    5. '           ' → logprob: -14.375354766845703
    6. '(N' → logprob: -16.250354766845703
    7. 'N' → logprob: -16.375354766845703
    8. ',
' → logprob: -16.750354766845703
    9. ',n' → logprob: -16.750354766845703
    10. '   ' → logprob: -16.875354766845703

Token 1512: ' N' (ID: 478)
  Prédit: 'N'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'N' → logprob: -6.2729995988775045e-06
    2. ' N' → logprob: -12.000006675720215
    3. '
' → logprob: -19.2500057220459
    4. '   ' → logprob: -21.8750057220459
    5. '[N' → logprob: -23.2500057220459
    6. '	N' → logprob: -23.3750057220459
    7. '           ' → logprob: -25.0000057220459
    8. '
' → logprob: -25.2500057220459
    9. '_N' → logprob: -25.3750057220459
    10. ' ' → logprob: -26.0000057220459

Token 1513: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.09791529923677444
    2. ')' → logprob: -2.5979154109954834
    3. '       ' → logprob: -3.9729154109954834
    4. ')
' → logprob: -10.847915649414062
    5. ').' → logprob: -12.597915649414062
    6. '   ' → logprob: -12.972915649414062
    7. '```' → logprob: -15.097915649414062
    8. '.' → logprob: -15.347915649414062
    9. '),' → logprob: -15.472915649414062
    10. '           ' → logprob: -15.472915649414062

Token 1514: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.006922461092472076
    2. 'sim' → logprob: -5.006922245025635
    3. '   ' → logprob: -8.506922721862793
    4. ' sim' → logprob: -12.381922721862793
    5. '           ' → logprob: -14.381922721862793
    6. '
' → logprob: -16.256921768188477
    7. 'simulate' → logprob: -16.881921768188477
    8. '```' → logprob: -17.256921768188477
    9. '.sim' → logprob: -17.506921768188477
    10. '(sim' → logprob: -17.756921768188477

Token 1515: ' sim' (ID: 1845)
  Prédit: 'sim'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sim' (adapté à ' sim') → logprob: -3.650518920039758e-06
    2. '       ' → logprob: -13.250003814697266
    3. ' sim' → logprob: -13.250003814697266
    4. '   ' → logprob: -19.750003814697266
    5. '           ' → logprob: -21.125003814697266
    6. 'simulate' → logprob: -21.625003814697266
    7. 'run' → logprob: -22.125003814697266
    8. '```' → logprob: -23.250003814697266
    9. '(sim' → logprob: -23.375003814697266
    10. '        ' → logprob: -23.750003814697266

Token 1516: '.run' (ID: 14795)
  Prédit: '.run'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.run' → logprob: -0.023792054504156113
    2. '.' → logprob: -4.273792266845703
    3. '.step' → logprob: -4.648792266845703
    4. ' .' → logprob: -13.273792266845703
    5. 'run' → logprob: -13.523792266845703
    6. '   ' → logprob: -13.648792266845703
    7. '.
' → logprob: -14.023792266845703
    8. '
' → logprob: -14.523792266845703
    9. '.start' → logprob: -14.523792266845703
    10. 'step' → logprob: -14.648792266845703

Token 1517: '()
' (ID: 1234)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '       ' → logprob: -5.300083648762666e-05
    2. '
' → logprob: -10.250053405761719
    3. '   ' → logprob: -12.000053405761719
    4. '<|end|>' → logprob: -12.750053405761719
    5. 'Output' → logprob: -13.000053405761719
    6. 'output' → logprob: -13.250053405761719
    7. 'print' → logprob: -13.375053405761719
    8. '        
' → logprob: -13.625053405761719
    9. '```' → logprob: -14.250053405761719
    10. ',' → logprob: -14.500053405761719

Token 1518: '       ' (ID: 309)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' → logprob: -0.2522953152656555
    2. '       ' → logprob: -1.5022952556610107
    3. '   ' → logprob: -8.00229549407959
    4. '	Output' → logprob: -11.25229549407959
    5. ' Output' → logprob: -11.37729549407959
    6. '_output' → logprob: -13.00229549407959
    7. '_Output' → logprob: -13.37729549407959
    8. 'output' → logprob: -13.50229549407959
    9. '```' → logprob: -14.00229549407959
    10. '(Output' → logprob: -15.37729549407959

Token 1519: ' Output' (ID: 18315)
  Prédit: 'Output'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Output' (adapté à ' Output') → logprob: 0.0
    2. ' Output' → logprob: -17.0
    3. '       ' → logprob: -20.5
    4. '	Output' → logprob: -20.75
    5. '   ' → logprob: -21.625
    6. 'output' → logprob: -23.25
    7. '(Output' → logprob: -23.875
    8. '_output' → logprob: -24.25
    9. 'Input' → logprob: -24.25
    10. '_Output' → logprob: -24.625

Token 1520: 'Writer' (ID: 9561)
  Prédit: 'Writer'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Writer' → logprob: 0.0
    2. 'Write' → logprob: -17.625
    3. 'writer' → logprob: -19.5
    4. '_writer' → logprob: -19.875
    5. 'Reader' → logprob: -21.125
    6. ' Writer' → logprob: -23.0
    7. '.Writer' → logprob: -23.625
    8. '   ' → logprob: -24.125
    9. 'Output' → logprob: -24.375
    10. 'W' → logprob: -24.375

Token 1521: '.write' (ID: 6765)
  Prédit: '.write'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.write' → logprob: -3.128163257315464e-07
    2. 'write' → logprob: -15.75
    3. '.' → logprob: -16.75
    4. '().' → logprob: -17.75
    5. ' .' → logprob: -18.5
    6. '```' → logprob: -19.625
    7. '.print' → logprob: -19.75
    8. '{}.' → logprob: -20.375
    9. '   ' → logprob: -20.75
    10. '.output' → logprob: -21.125

Token 1522: '(case' (ID: 131636)
  Prédit: '(case'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(case' → logprob: -7.493430894101039e-05
    2. 'case' → logprob: -9.500075340270996
    3. '(' → logprob: -17.12507438659668
    4. ' case' → logprob: -17.62507438659668
    5. '(
' → logprob: -19.25007438659668
    6. '(c' → logprob: -19.50007438659668
    7. 'Case' → logprob: -19.87507438659668
    8. '```' → logprob: -20.25007438659668
    9. '.case' → logprob: -20.62507438659668
    10. '	case' → logprob: -20.75007438659668

Token 1523: '_id' (ID: 1537)
  Prédit: '_id'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_id' → logprob: -8.2994620242971e-06
    2. 'id' → logprob: -11.750008583068848
    3. 'case' → logprob: -16.50000762939453
    4. '(case' → logprob: -16.62500762939453
    5. '_' → logprob: -17.75000762939453
    6. 'Id' → logprob: -18.00000762939453
    7. '   ' → logprob: -18.12500762939453
    8. ')' → logprob: -18.50000762939453
    9. '```' → logprob: -18.62500762939453
    10. '_i' → logprob: -18.75000762939453

Token 1524: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0033015317749232054
    2. '(sim' → logprob: -5.753301620483398
    3. ' ,' → logprob: -10.378301620483398
    4. ',s' → logprob: -10.378301620483398
    5. '       ' → logprob: -10.503301620483398
    6. 'sim' → logprob: -11.003301620483398
    7. '(' → logprob: -12.003301620483398
    8. ')' → logprob: -12.253301620483398
    9. ',new' → logprob: -13.628301620483398
    10. ',
' → logprob: -13.753301620483398

Token 1525: ' sim' (ID: 1845)
  Prédit: 'sim'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'sim' → logprob: -2.935296834039036e-06
    2. ' sim' → logprob: -12.75000286102295
    3. '(sim' → logprob: -19.625003814697266
    4. '   ' → logprob: -24.000003814697266
    5. 'simulation' → logprob: -24.000003814697266
    6. '           ' → logprob: -24.875003814697266
    7. '
' → logprob: -24.875003814697266
    8. '.sim' → logprob: -25.125003814697266
    9. '```' → logprob: -25.250003814697266
    10. '       ' → logprob: -25.500003814697266

Token 1526: '.grid' (ID: 19269)
  Prédit: '.grid'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.grid' → logprob: -7.898723561083898e-05
    2. '.' → logprob: -9.500079154968262
    3. 'grid' → logprob: -12.625079154968262
    4. ' .' → logprob: -14.750079154968262
    5. '
' → logprob: -15.250079154968262
    6. '.g' → logprob: -16.625078201293945
    7. '.
' → logprob: -16.750078201293945
    8. '	grid' → logprob: -17.500078201293945
    9. '.graph' → logprob: -17.625078201293945
    10. '.gr' → logprob: -18.000078201293945

Token 1527: ')

' (ID: 1029)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -9.341087570646778e-05
    2. ')
' → logprob: -9.625093460083008
    3. '())' → logprob: -10.625093460083008
    4. '<|end|>' → logprob: -13.875093460083008
    5. '))' → logprob: -15.000093460083008
    6. ' )' → logprob: -15.125093460083008
    7. ')`' → logprob: -15.250093460083008
    8. ')}' → logprob: -15.500093460083008
    9. '()' → logprob: -15.500093460083008
    10. '```' → logprob: -15.500093460083008

Token 1528: 'if' (ID: 366)
  Prédit: 'if'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -3.643152740551159e-05
    2. 'main' → logprob: -10.750036239624023
    3. '```' → logprob: -11.500036239624023
    4. ' if' → logprob: -12.625036239624023
    5. '#' → logprob: -14.125036239624023
    6. '<|end|>' → logprob: -14.625036239624023
    7. '
' → logprob: -16.250036239624023
    8. '__' → logprob: -16.750036239624023
    9. '#if' → logprob: -17.250036239624023
    10. '    
' → logprob: -18.000036239624023

Token 1529: ' __' (ID: 2516)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.04858975484967232
    2. ' __' → logprob: -3.0485897064208984
    3. 'name' → logprob: -13.173589706420898
    4. '_name' → logprob: -15.673589706420898
    5. '___' → logprob: -16.1735897064209
    6. '_' → logprob: -16.6735897064209
    7. '/__' → logprob: -17.1735897064209
    8. 'main' → logprob: -17.2985897064209
    9. '.__' → logprob: -17.2985897064209
    10. '```' → logprob: -17.5485897064209

Token 1530: 'name' (ID: 897)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.008647306822240353
    2. 'name' → logprob: -5.383647441864014
    3. '==' → logprob: -5.883647441864014
    4. ' ==' → logprob: -7.008647441864014
    5. '=="' → logprob: -8.883646965026855
    6. 'if' → logprob: -9.383646965026855
    7. '=='' → logprob: -10.758646965026855
    8. ' __' → logprob: -11.008646965026855
    9. '```' → logprob: -11.133646965026855
    10. '.__' → logprob: -11.508646965026855

Token 1531: '__' (ID: 771)
  Prédit: '__'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.00016480287013109773
    2. '__.__' → logprob: -8.750164985656738
    3. '__.' → logprob: -12.250164985656738
    4. '==' → logprob: -14.000164985656738
    5. '__
' → logprob: -15.625164985656738
    6. '__["' → logprob: -16.000164031982422
    7. '```' → logprob: -16.000164031982422
    8. '__[' → logprob: -16.625164031982422
    9. '____' → logprob: -16.875164031982422
    10. '___' → logprob: -17.125164031982422

Token 1532: ' ==' (ID: 951)
  Prédit: '__'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__' → logprob: -0.057564008980989456
    2. '==' → logprob: -2.9325640201568604
    3. ' ==' → logprob: -6.682563781738281
    4. '=="' → logprob: -7.057563781738281
    5. '=='' → logprob: -7.682563781738281
    6. '__.__' → logprob: -9.557563781738281
    7. '['' → logprob: -11.182563781738281
    8. '.__' → logprob: -12.057563781738281
    9. '[' → logprob: -12.932563781738281
    10. '["' → logprob: -13.307563781738281

Token 1533: ' '__' (ID: 28278)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.3132950961589813
    2. ''' → logprob: -1.3132951259613037
    3. '__' → logprob: -10.313295364379883
    4. ' "__' → logprob: -16.188295364379883
    5. ' '__' → logprob: -17.813295364379883
    6. '"name' → logprob: -17.938295364379883
    7. ''name' → logprob: -18.313295364379883
    8. '('__' → logprob: -18.688295364379883
    9. ''m' → logprob: -18.938295364379883
    10. 'main' → logprob: -19.063295364379883

Token 1534: 'main' (ID: 7731)
  Prédit: 'main'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -0.0011785586830228567
    2. '__' → logprob: -6.751178741455078
    3. 'name' → logprob: -11.751178741455078
    4. '_main' → logprob: -14.751178741455078
    5. ' main' → logprob: -16.126178741455078
    6. 'm' → logprob: -19.126178741455078
    7. 'python' → logprob: -20.501178741455078
    8. ''' → logprob: -20.501178741455078
    9. '_MAIN' → logprob: -20.501178741455078
    10. '(main' → logprob: -20.626178741455078

Token 1535: '__':
' (ID: 39314)
  Prédit: '__':
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '__':
' → logprob: -0.14333178102970123
    2. '__' → logprob: -2.01833176612854
    3. '__":
' → logprob: -7.518332004547119
    4. '__:' → logprob: -9.893331527709961
    5. ':' → logprob: -10.518331527709961
    6. '==' → logprob: -11.393331527709961
    7. '('__' → logprob: -12.393331527709961
    8. '__.__' → logprob: -12.768331527709961
    9. '__.' → logprob: -12.893331527709961
    10. 'main' → logprob: -13.143331527709961

Token 1536: '   ' (ID: 271)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' → logprob: -4.842555426876061e-06
    2. ' main' → logprob: -12.750004768371582
    3. '__' → logprob: -13.500004768371582
    4. '   ' → logprob: -15.500004768371582
    5. '	main' → logprob: -15.625004768371582
    6. '(main' → logprob: -16.3750057220459
    7. '_main' → logprob: -17.2500057220459
    8. '
' → logprob: -18.3750057220459
    9. '```' → logprob: -18.3750057220459
    10. 'run' → logprob: -18.8750057220459

Token 1537: ' main' (ID: 2758)
  Prédit: 'main'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'main' (adapté à ' main') → logprob: 0.0
    2. ' main' → logprob: -19.25
    3. 'import' → logprob: -23.25
    4. '	main' → logprob: -23.375
    5. '(main' → logprob: -25.5
    6. '   ' → logprob: -26.375
    7. '_main' → logprob: -26.5
    8. '.main' → logprob: -27.0
    9. '__' → logprob: -29.375
    10. 'm' → logprob: -29.375

Token 1538: '()' (ID: 416)
  Prédit: ''
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 1536
Tokens correctement prédits (1ère position, stricte): 706
Tokens correctement prédits (1ère position, avec adaptation): 803
Tokens correctement prédits (top 10): 1360
Précision stricte (1ère position): 45.96%
Précision adaptée (1ère position): 52.28%
Précision (top 10): 88.54%
================================================================================
