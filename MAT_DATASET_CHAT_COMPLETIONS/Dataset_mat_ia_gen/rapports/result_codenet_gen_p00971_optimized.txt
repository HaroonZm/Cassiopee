================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 20:07:38
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
s=input().rstrip()
t=input().rstrip()
n,m=len(s),len(t)
next_s=[[n]*2 for _ in range(n+1)]
next_t=[[m]*2 for _ in range(m+1)]
for i in range(n-1,-1,-1):
    for c in range(2):
        next_s[i][c]=next_s[i+1][c]
    next_s[i][int(s[i])]=i
for i in range(m-1,-1,-1):
    for c in range(2):
        next_t[i][c]=next_t[i+1][c]
    next_t[i][int(t[i])]=i
from collections import deque
dq=deque()
dq.append((0,0,""))
visited=set()
visited.add((0,0))
while dq:
    i,j,p=dq.popleft()
    for c in "0","1":
        ni=next_s[i][int(c)]
        nj=next_t[j][int(c)]
        if ni==n or nj==m:
            print(p+c)
            exit()
        if (ni+1,nj+1) not in visited:
            visited.add((ni+1,nj+1))
            dq.append((ni+1,nj+1,p+c))
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 's' (ID: 82)
  → Token d'amorce (pas de prédiction)

Token 1: '=input' (ID: 87911)
  → Token d'amorce (pas de prédiction)

Token 2: '().' (ID: 1454)
  → Token d'amorce (pas de prédiction)

Token 3: 'rstrip' (ID: 180429)
  Prédit: '.'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '.' → logprob: -0.07717446982860565
    2. '+' → logprob: -2.827174425125122
    3. '=' → logprob: -5.077174663543701
    4. '[' → logprob: -5.202174663543701
    5. '.strip' → logprob: -6.702174663543701
    6. ' ' → logprob: -8.077174186706543
    7. '(' → logprob: -8.327174186706543
    8. '\' → logprob: -8.452174186706543
    9. '*' → logprob: -8.952174186706543
    10. ')' → logprob: -9.077174186706543

Token 4: '()
' (ID: 1234)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.28393682837486267
    2. '()' → logprob: -1.408936858177185
    3. '"' → logprob: -7.158936977386475
    4. '```' → logprob: -7.283936977386475
    5. ')' → logprob: -7.908936977386475
    6. '`' → logprob: -8.158936500549316
    7. '`()' → logprob: -8.908936500549316
    8. ''' → logprob: -8.908936500549316
    9. '(
' → logprob: -9.033936500549316
    10. '('' → logprob: -9.908936500549316

Token 5: 't' (ID: 83)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.5611028075218201
    2. '.' → logprob: -1.1861028671264648
    3. '[' → logprob: -2.686102867126465
    4. '=' → logprob: -4.436102867126465
    5. '+' → logprob: -4.436102867126465
    6. ' if' → logprob: -5.186102867126465
    7. 'i' → logprob: -5.186102867126465
    8. 'for' → logprob: -5.686102867126465
    9. '(' → logprob: -5.811102867126465
    10. '[:]' → logprob: -6.061102867126465

Token 6: '=input' (ID: 87911)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.11476196348667145
    2. '[' → logprob: -3.4897620677948
    3. '.' → logprob: -3.6147620677948
    4. ' =' → logprob: -3.7397620677948
    5. '+' → logprob: -3.8647620677948
    6. '+=' → logprob: -6.239761829376221
    7. '[:]' → logprob: -7.364761829376221
    8. '_' → logprob: -7.489761829376221
    9. '(' → logprob: -7.489761829376221
    10. ' +=' → logprob: -7.864761829376221

Token 7: '().' (ID: 1454)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.005303012207150459
    2. '().' → logprob: -5.505302906036377
    3. '(' → logprob: -6.755302906036377
    4. ' ()' → logprob: -11.380303382873535
    5. '()(' → logprob: -11.380303382873535
    6. '`()' → logprob: -11.380303382873535
    7. '()`' → logprob: -12.380303382873535
    8. '()

' → logprob: -12.880303382873535
    9. '()
' → logprob: -13.005303382873535
    10. '()]' → logprob: -13.130303382873535

Token 8: 'rstrip' (ID: 180429)
  Prédit: 'rstrip'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'rstrip' → logprob: -1.4259644558478612e-05
    2. 'strip' → logprob: -11.250014305114746
    3. 'rst' → logprob: -14.250014305114746
    4. 'split' → logprob: -15.250014305114746
    5. '.rstrip' → logprob: -16.25001335144043
    6. '```' → logprob: -17.50001335144043
    7. 'rl' → logprob: -17.50001335144043
    8. 'rs' → logprob: -18.00001335144043
    9. 'rcode' → logprob: -18.37501335144043
    10. 'l' → logprob: -18.62501335144043

Token 9: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.25219136476516724
    2. '(' → logprob: -1.5021913051605225
    3. '`()' → logprob: -10.252191543579102
    4. ')' → logprob: -10.502191543579102
    5. '()
' → logprob: -10.627191543579102
    6. ' ()' → logprob: -10.752191543579102
    7. '```' → logprob: -10.877191543579102
    8. '(
' → logprob: -11.002191543579102
    9. ' (' → logprob: -11.127191543579102
    10. '()`' → logprob: -11.252191543579102

Token 10: 'n' (ID: 77)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.5471355319023132
    2. 'if' → logprob: -0.9221355319023132
    3. 'for' → logprob: -4.297135353088379
    4. 'n' → logprob: -5.797135353088379
    5. ' if' → logprob: -6.672135353088379
    6. 'while' → logprob: -6.797135353088379
    7. 'd' → logprob: -7.172135353088379
    8. '`' → logprob: -7.797135353088379
    9. '#' → logprob: -7.797135353088379
    10. 'f' → logprob: -7.922135353088379

Token 11: ',m' (ID: 26648)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.013804984278976917
    2. ' =' → logprob: -4.513804912567139
    3. '=int' → logprob: -6.513804912567139
    4. '=len' → logprob: -7.138804912567139
    5. '_' → logprob: -8.013805389404297
    6. ' ' → logprob: -10.013805389404297
    7. 'u' → logprob: -10.638805389404297
    8. ',' → logprob: -11.263805389404297
    9. '_=' → logprob: -11.638805389404297
    10. 's' → logprob: -12.138805389404297

Token 12: '=len' (ID: 114011)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '=' → logprob: -0.03095449134707451
    2. ' =' → logprob: -3.655954599380493
    3. ',' → logprob: -5.405954360961914
    4. '=int' → logprob: -10.405954360961914
    5. '=input' → logprob: -10.780954360961914
    6. ' ,' → logprob: -11.030954360961914
    7. '=

' → logprob: -11.905954360961914
    8. ')' → logprob: -12.030954360961914
    9. '<|end|>' → logprob: -12.030954360961914
    10. '=
' → logprob: -12.030954360961914

Token 13: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -0.01134523842483759
    2. '(' → logprob: -4.636345386505127
    3. '(t' → logprob: -6.636345386505127
    4. 's' → logprob: -8.261344909667969
    5. '(n' → logprob: -11.511344909667969
    6. '(
' → logprob: -12.136344909667969
    7. ' (' → logprob: -14.511344909667969
    8. '(a' → logprob: -14.761344909667969
    9. '(x' → logprob: -15.136344909667969
    10. '((' → logprob: -15.136344909667969

Token 14: '),' (ID: 936)
  Prédit: '),'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '),' → logprob: -0.0023544798605144024
    2. ')' → logprob: -6.252354621887207
    3. ',' → logprob: -8.127354621887207
    4. '),(' → logprob: -9.627354621887207
    5. ' ),' → logprob: -10.502354621887207
    6. ',),' → logprob: -11.252354621887207
    7. ')
' → logprob: -12.627354621887207
    8. '),
' → logprob: -12.752354621887207
    9. ',n' → logprob: -13.002354621887207
    10. 's' → logprob: -13.127354621887207

Token 15: 'len' (ID: 3303)
  Prédit: 'len'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'len' → logprob: -0.00027087211492471397
    2. ' len' → logprob: -8.25027084350586
    3. '=len' → logprob: -11.75027084350586
    4. '(len' → logprob: -13.75027084350586
    5. ',len' → logprob: -15.00027084350586
    6. '<len' → logprob: -15.37527084350586
    7. '[len' → logprob: -16.25027084350586
    8. '	len' → logprob: -16.37527084350586
    9. '   ' → logprob: -18.75027084350586
    10. '```' → logprob: -18.87527084350586

Token 16: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -7.517272024415433e-05
    2. '(' → logprob: -9.500075340270996
    3. '(s' → logprob: -15.750075340270996
    4. 't' → logprob: -16.62507438659668
    5. ' (' → logprob: -18.25007438659668
    6. '(
' → logprob: -18.25007438659668
    7. '	t' → logprob: -19.87507438659668
    8. '(

' → logprob: -20.12507438659668
    9. '(m' → logprob: -20.12507438659668
    10. ')' → logprob: -20.37507438659668

Token 17: ')
' (ID: 446)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -2.939851037808694e-05
    2. ')
' → logprob: -11.625029563903809
    3. '`)' → logprob: -12.250029563903809
    4. '')' → logprob: -12.375029563903809
    5. '))' → logprob: -12.875029563903809
    6. '()' → logprob: -13.000029563903809
    7. '),' → logprob: -13.250029563903809
    8. ' )' → logprob: -14.250029563903809
    9. '```' → logprob: -14.250029563903809
    10. ')**' → logprob: -14.875029563903809

Token 18: 'next' (ID: 7311)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.014525912702083588
    2. 'd' → logprob: -4.514525890350342
    3. '
' → logprob: -6.264525890350342
    4. 'DP' → logprob: -7.514525890350342
    5. 'i' → logprob: -8.1395263671875
    6. 'for' → logprob: -8.1395263671875
    7. ' dp' → logprob: -8.5145263671875
    8. '```' → logprob: -10.2645263671875
    9. 'result' → logprob: -10.3895263671875
    10. 'a' → logprob: -10.5145263671875

Token 19: '_s' (ID: 1278)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.8189163208007812
    2. '_' → logprob: -1.5689163208007812
    3. ' =' → logprob: -2.1939163208007812
    4. '=' → logprob: -2.3189163208007812
    5. 'd' → logprob: -2.9439163208007812
    6. ' dp' → logprob: -3.0689163208007812
    7. '_dp' → logprob: -4.193916320800781
    8. '[' → logprob: -5.193916320800781
    9. '(' → logprob: -5.443916320800781
    10. '(dp' → logprob: -5.818916320800781

Token 20: '=[[' (ID: 112637)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '_' → logprob: -0.3858143091201782
    2. '[' → logprob: -1.8858143091201782
    3. '=' → logprob: -2.2608141899108887
    4. '=[' → logprob: -4.260814189910889
    5. 's' → logprob: -4.385814189910889
    6. '_=' → logprob: -4.510814189910889
    7. '_char' → logprob: -5.510814189910889
    8. ' =' → logprob: -5.635814189910889
    9. '=[]' → logprob: -5.760814189910889
    10. '_pos' → logprob: -6.010814189910889

Token 21: 'n' (ID: 77)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.04901549220085144
    2. '-' → logprob: -3.299015522003174
    3. 'n' → logprob: -4.549015522003174
    4. '[n' → logprob: -9.424015045166016
    5. 'False' → logprob: -9.424015045166016
    6. '(n' → logprob: -10.174015045166016
    7. '1' → logprob: -10.799015045166016
    8. '[-' → logprob: -10.799015045166016
    9. '-n' → logprob: -10.924015045166016
    10. 'm' → logprob: -11.049015045166016

Token 22: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -0.23598895967006683
    2. ']' → logprob: -1.860988974571228
    3. ']*(' → logprob: -3.3609888553619385
    4. ' for' → logprob: -4.485989093780518
    5. 'for' → logprob: -5.610989093780518
    6. ']+' → logprob: -5.735989093780518
    7. '+' → logprob: -6.485989093780518
    8. '-' → logprob: -8.61098861694336
    9. '	for' → logprob: -9.98598861694336
    10. ']]' → logprob: -10.48598861694336

Token 23: '2' (ID: 17)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.8326733708381653
    2. '26' → logprob: -1.3326733112335205
    3. '27' → logprob: -1.9576733112335205
    4. '(m' → logprob: -2.0826733112335205
    5. '(n' → logprob: -3.4576733112335205
    6. '11' → logprob: -7.3326735496521
    7. 'm' → logprob: -7.4576735496521
    8. ' ' → logprob: -8.082673072814941
    9. ' (' → logprob: -8.707673072814941
    10. '10' → logprob: -8.832673072814941

Token 24: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.5776102542877197
    2. 'for' → logprob: -0.8276102542877197
    3. ']' → logprob: -7.452610015869141
    4. ',' → logprob: -8.20261001586914
    5. ' ' → logprob: -8.57761001586914
    6. '0' → logprob: -8.70261001586914
    7. '[' → logprob: -9.32761001586914
    8. ']+' → logprob: -9.32761001586914
    9. '	for' → logprob: -9.95261001586914
    10. ',n' → logprob: -10.07761001586914

Token 25: ' _' (ID: 1175)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -0.004879942629486322
    2. ' _' → logprob: -6.379879951477051
    3. ' range' → logprob: -6.629879951477051
    4. '_range' → logprob: -6.629879951477051
    5. '_i' → logprob: -8.00487995147705
    6. '_s' → logprob: -9.00487995147705
    7. 'range' → logprob: -10.50487995147705
    8. ' i' → logprob: -11.00487995147705
    9. '_j' → logprob: -11.37987995147705
    10. ' ' → logprob: -12.37987995147705

Token 26: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.005370121914893389
    2. 'in' → logprob: -5.255370140075684
    3. ' ' → logprob: -9.630370140075684
    4. ' _' → logprob: -10.380370140075684
    5. 'range' → logprob: -10.880370140075684
    6. 'n' → logprob: -12.255370140075684
    7. ' range' → logprob: -12.755370140075684
    8. 's' → logprob: -13.005370140075684
    9. '_' → logprob: -13.005370140075684
    10. 'i' → logprob: -13.380370140075684

Token 27: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.001704698195680976
    2. ' range' → logprob: -6.376704692840576
    3. 's' → logprob: -13.126705169677734
    4. '(range' → logprob: -15.751705169677734
    5. '[' → logprob: -15.876705169677734
    6. ' ' → logprob: -16.376705169677734
    7. 'ran' → logprob: -17.001705169677734
    8. 'r' → logprob: -17.126705169677734
    9. '`' → logprob: -17.626705169677734
    10. '	range' → logprob: -17.751705169677734

Token 28: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.00015252856246661395
    2. '(' → logprob: -8.875152587890625
    3. '(len' → logprob: -11.375152587890625
    4. '((' → logprob: -14.500152587890625
    5. '(s' → logprob: -15.000152587890625
    6. ' (' → logprob: -16.250152587890625
    7. '(m' → logprob: -16.375152587890625
    8. 'n' → logprob: -18.000152587890625
    9. '(
' → logprob: -18.500152587890625
    10. '()' → logprob: -19.625152587890625

Token 29: '+' (ID: 10)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.3871898353099823
    2. '+' → logprob: -1.1371898651123047
    3. ')' → logprob: -9.262189865112305
    4. '+n' → logprob: -9.387189865112305
    5. ']' → logprob: -10.637189865112305
    6. ')]
' → logprob: -10.637189865112305
    7. ' +' → logprob: -10.887189865112305
    8. ')]
' → logprob: -11.262189865112305
    9. ')])' → logprob: -11.387189865112305
    10. '1' → logprob: -11.887189865112305

Token 30: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00011427151912357658
    2. ' ' → logprob: -9.625114440917969
    3. '2' → logprob: -10.000114440917969
    4. '+' → logprob: -15.125114440917969
    5. '```' → logprob: -15.312614440917969
    6. '3' → logprob: -15.750114440917969
    7. '7' → logprob: -15.937614440917969
    8. '   ' → logprob: -16.06261444091797
    9. '11' → logprob: -16.06261444091797
    10. ')' → logprob: -16.12511444091797

Token 31: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -8.0536883615423e-05
    2. ')]
' → logprob: -10.250080108642578
    3. ']' → logprob: -10.750080108642578
    4. ')' → logprob: -11.750080108642578
    5. ' )' → logprob: -12.500080108642578
    6. ')]

' → logprob: -12.500080108642578
    7. ')]
' → logprob: -12.750080108642578
    8. ')],' → logprob: -13.625080108642578
    9. '')]' → logprob: -14.000080108642578
    10. '])]' → logprob: -14.250080108642578

Token 32: 'next' (ID: 7311)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.03573029860854149
    2. ' for' → logprob: -3.5357303619384766
    3. 'next' → logprob: -6.035730361938477
    4. '
' → logprob: -6.535730361938477
    5. ']' → logprob: -7.285730361938477
    6. '[' → logprob: -8.535730361938477
    7. 'n' → logprob: -8.660730361938477
    8. 's' → logprob: -8.660730361938477
    9. ' next' → logprob: -8.910730361938477
    10. '```' → logprob: -9.035730361938477

Token 33: '_t' (ID: 838)
  Prédit: '_s'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -0.0014710607938468456
    2. '_' → logprob: -6.626471042633057
    3. 's' → logprob: -9.126471519470215
    4. '_t' → logprob: -11.126471519470215
    5. '[' → logprob: -11.501471519470215
    6. '<|end|>' → logprob: -13.001471519470215
    7. '_[' → logprob: -13.126471519470215
    8. '_S' → logprob: -14.001471519470215
    9. '```' → logprob: -14.501471519470215
    10. '_]' → logprob: -14.751471519470215

Token 34: '=[[' (ID: 112637)
  Prédit: '=[['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=[[' → logprob: -6.265633419388905e-05
    2. '=' → logprob: -10.375062942504883
    3. '=[' → logprob: -11.125062942504883
    4. '[[' → logprob: -11.125062942504883
    5. ' =' → logprob: -14.500062942504883
    6. '=[]' → logprob: -14.625062942504883
    7. '=

' → logprob: -15.875062942504883
    8. '`' → logprob: -16.125062942504883
    9. '=[
' → logprob: -16.375062942504883
    10. '=zeros' → logprob: -16.500062942504883

Token 35: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.00010330478107789531
    2. '[m' → logprob: -9.250102996826172
    3. ' m' → logprob: -12.375102996826172
    4. '   ' → logprob: -13.500102996826172
    5. '[' → logprob: -14.250102996826172
    6. '	m' → logprob: -15.500102996826172
    7. '(m' → logprob: -15.875102996826172
    8. ' [' → logprob: -16.250102996826172
    9. ' ' → logprob: -16.500102996826172
    10. 'n' → logprob: -16.625102996826172

Token 36: ']*' (ID: 18579)
  Prédit: ']*'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']*' → logprob: -9.674858301877975e-05
    2. ']' → logprob: -10.000096321105957
    3. '*' → logprob: -10.500096321105957
    4. '+' → logprob: -11.000096321105957
    5. ']*(' → logprob: -13.250096321105957
    6. ' ]' → logprob: -13.375096321105957
    7. '*m' → logprob: -13.625096321105957
    8. '```' → logprob: -14.375096321105957
    9. ']int' → logprob: -14.750096321105957
    10. ']+' → logprob: -14.750096321105957

Token 37: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0001438266917830333
    2. ' ' → logprob: -9.000144004821777
    3. '[' → logprob: -11.875144004821777
    4. '1' → logprob: -12.000144004821777
    5. 'len' → logprob: -14.187644004821777
    6. 'm' → logprob: -14.312644004821777
    7. '(' → logprob: -14.312644004821777
    8. '```' → logprob: -14.312644004821777
    9. ']' → logprob: -14.500144004821777
    10. '   ' → logprob: -14.687644004821777

Token 38: ' for' (ID: 395)
  Prédit: ' for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' for' → logprob: -0.17975977063179016
    2. 'for' → logprob: -1.8047597408294678
    3. ' ' → logprob: -11.929759979248047
    4. '	for' → logprob: -12.304759979248047
    5. ')' → logprob: -13.804759979248047
    6. ']' → logprob: -14.054759979248047
    7. '[' → logprob: -14.179759979248047
    8. '```' → logprob: -14.804759979248047
    9. '+' → logprob: -15.179759979248047
    10. ' ' → logprob: -15.679759979248047

Token 39: ' _' (ID: 1175)
  Prédit: ' _'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' _' → logprob: -0.8799834251403809
    2. ' range' → logprob: -0.8799834251403809
    3. '_' → logprob: -1.8799834251403809
    4. 'range' → logprob: -4.629983425140381
    5. '_m' → logprob: -5.004983425140381
    6. '_range' → logprob: -7.504983425140381
    7. '_t' → logprob: -7.879983425140381
    8. ' in' → logprob: -8.754983901977539
    9. ' (' → logprob: -8.879983901977539
    10. '(range' → logprob: -9.504983901977539

Token 40: ' in' (ID: 306)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.003646399360150099
    2. ' range' → logprob: -5.628646373748779
    3. '(range' → logprob: -10.003646850585938
    4. '	range' → logprob: -14.753646850585938
    5. '(' → logprob: -15.378646850585938
    6. '```' → logprob: -15.753646850585938
    7. '_range' → logprob: -15.878646850585938
    8. '`' → logprob: -16.878646850585938
    9. 'in' → logprob: -17.003646850585938
    10. ' ' → logprob: -17.378646850585938

Token 41: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.5760543942451477
    2. 'range' → logprob: -0.8260543942451477
    3. '(range' → logprob: -9.076054573059082
    4. '	range' → logprob: -15.451054573059082
    5. '_range' → logprob: -16.701053619384766
    6. 't' → logprob: -16.826053619384766
    7. 'm' → logprob: -17.076053619384766
    8. '`' → logprob: -17.451053619384766
    9. '(m' → logprob: -17.451053619384766
    10. ' ' → logprob: -17.451053619384766

Token 42: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.15271003544330597
    2. '(t' → logprob: -2.0277099609375
    3. 'range' → logprob: -5.0277099609375
    4. ' range' → logprob: -6.6527099609375
    5. '(range' → logprob: -6.6527099609375
    6. 't' → logprob: -7.2777099609375
    7. ' (' → logprob: -9.6527099609375
    8. 'm' → logprob: -10.9027099609375
    9. '(n' → logprob: -11.4027099609375
    10. '[m' → logprob: -12.0277099609375

Token 43: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -1.759734732331708e-05
    2. '1' → logprob: -11.375017166137695
    3. ' +' → logprob: -12.875017166137695
    4. ')]' → logprob: -13.625017166137695
    5. '```' → logprob: -14.375017166137695
    6. ')' → logprob: -14.750017166137695
    7. '+
' → logprob: -15.250017166137695
    8. ')+' → logprob: -15.375017166137695
    9. '＋' → logprob: -16.000017166137695
    10. ']+' → logprob: -16.250017166137695

Token 44: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -8.537868779967539e-06
    2. '+' → logprob: -12.000008583068848
    3. '```' → logprob: -13.750008583068848
    4. ' ' → logprob: -14.750008583068848
    5. ')' → logprob: -15.000008583068848
    6. '2' → logprob: -16.12500762939453
    7. '`' → logprob: -17.37500762939453
    8. '``' → logprob: -17.50000762939453
    9. '   ' → logprob: -17.56250762939453
    10. '-' → logprob: -17.68750762939453

Token 45: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0006414268864318728
    2. ']' → logprob: -7.375641345977783
    3. ')' → logprob: -12.000641822814941
    4. ')]
' → logprob: -12.750641822814941
    5. '])]' → logprob: -13.125641822814941
    6. ']]' → logprob: -13.500641822814941
    7. '')]' → logprob: -14.125641822814941
    8. '])' → logprob: -14.125641822814941
    9. ')]

' → logprob: -15.750641822814941
    10. ']
' → logprob: -15.875641822814941

Token 46: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -7.44574936106801e-05
    2. ' for' → logprob: -9.87507438659668
    3. 'i' → logprob: -11.50007438659668
    4. '```' → logprob: -11.87507438659668
    5. '#' → logprob: -13.12507438659668
    6. '
' → logprob: -13.50007438659668
    7. ']' → logprob: -14.37507438659668
    8. 'For' → logprob: -14.50007438659668
    9. 'f' → logprob: -15.37507438659668
    10. ')' → logprob: -15.50007438659668

Token 47: ' i' (ID: 575)
  Prédit: ' i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' i' → logprob: -0.007490207906812429
    2. ' ' → logprob: -5.757490158081055
    3. '_' → logprob: -6.007490158081055
    4. ' _' → logprob: -6.882490158081055
    5. 'i' → logprob: -7.132490158081055
    6. ' s' → logprob: -11.882490158081055
    7. '_i' → logprob: -12.882490158081055
    8. ' ' → logprob: -12.882490158081055
    9. ' ‌' → logprob: -13.507490158081055
    10. ' x' → logprob: -14.132490158081055

Token 48: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.03395744785666466
    2. 'in' → logprob: -3.4089574813842773
    3. ' ' → logprob: -8.283957481384277
    4. '+' → logprob: -11.033957481384277
    5. 'n' → logprob: -11.658957481384277
    6. '	in' → logprob: -11.908957481384277
    7. '_' → logprob: -12.283957481384277
    8. ' i' → logprob: -12.408957481384277
    9. 's' → logprob: -12.408957481384277
    10. ' n' → logprob: -13.033957481384277

Token 49: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.31361860036849976
    2. 'range' → logprob: -1.3136186599731445
    3. ' reversed' → logprob: -8.188618659973145
    4. ' n' → logprob: -10.688618659973145
    5. 're' → logprob: -10.938618659973145
    6. 'n' → logprob: -10.938618659973145
    7. ' in' → logprob: -12.313618659973145
    8. ' reverse' → logprob: -12.563618659973145
    9. 'reverse' → logprob: -12.563618659973145
    10. 'in' → logprob: -12.688618659973145

Token 50: '(n' (ID: 2406)
  Prédit: '(n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(n' → logprob: -0.0009673224412836134
    2. '(' → logprob: -7.000967502593994
    3. ' (' → logprob: -9.875967025756836
    4. ' n' → logprob: -12.750967025756836
    5. '(len' → logprob: -14.000967025756836
    6. '(s' → logprob: -15.125967025756836
    7. 'n' → logprob: -15.750967025756836
    8. '(
' → logprob: -17.125967025756836
    9. ' ' → logprob: -17.250967025756836
    10. '()' → logprob: -17.250967025756836

Token 51: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -0.002191779436543584
    2. ' -' → logprob: -6.127191543579102
    3. '+' → logprob: -13.127191543579102
    4. ' ' → logprob: -13.252191543579102
    5. ',-' → logprob: -13.627191543579102
    6. ')' → logprob: -15.127191543579102
    7. ',' → logprob: -15.252191543579102
    8. '1' → logprob: -15.377191543579102
    9. '):
' → logprob: -15.502191543579102
    10. '-
' → logprob: -15.627191543579102

Token 52: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0013420163886621594
    2. ' ' → logprob: -6.626341819763184
    3. '2' → logprob: -11.251341819763184
    4. '```' → logprob: -14.001341819763184
    5. '+' → logprob: -14.063841819763184
    6. '-' → logprob: -15.001341819763184
    7. '   ' → logprob: -15.501341819763184
    8. '
' → logprob: -15.563841819763184
    9. '  ' → logprob: -15.688841819763184
    10. ' -' → logprob: -15.876341819763184

Token 53: ',-' (ID: 8202)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.38829782605171204
    2. ',-' → logprob: -1.1382977962493896
    3. ' ,-' → logprob: -7.138298034667969
    4. ' ,' → logprob: -7.513298034667969
    5. ',n' → logprob: -10.138298034667969
    6. ',i' → logprob: -11.013298034667969
    7. '-' → logprob: -11.388298034667969
    8. ' -' → logprob: -11.638298034667969
    9. ',len' → logprob: -12.138298034667969
    10. ',None' → logprob: -14.263298034667969

Token 54: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.2664456789934775e-06
    2. ' ' → logprob: -13.750000953674316
    3. '2' → logprob: -16.375001907348633
    4. '

' → logprob: -17.625001907348633
    5. '
' → logprob: -18.125001907348633
    6. '```' → logprob: -18.125001907348633
    7. ' -' → logprob: -18.250001907348633
    8. '１' → logprob: -19.062501907348633
    9. '   ' → logprob: -19.312501907348633
    10. '11' → logprob: -19.500001907348633

Token 55: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.004011914599686861
    2. ',' → logprob: -5.629012107849121
    3. '-' → logprob: -8.379012107849121
    4. ' ,-' → logprob: -8.754012107849121
    5. '1' → logprob: -11.379012107849121
    6. ' ,' → logprob: -12.504012107849121
    7. ' -' → logprob: -12.629012107849121
    8. ',-
' → logprob: -13.629012107849121
    9. '```' → logprob: -13.879012107849121
    10. ',--' → logprob: -13.879012107849121

Token 56: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -2.339278580620885e-06
    2. '```' → logprob: -13.625001907348633
    3. '2' → logprob: -14.937501907348633
    4. ' ' → logprob: -15.062501907348633
    5. ',' → logprob: -16.562501907348633
    6. '

' → logprob: -16.937501907348633
    7. ')' → logprob: -17.250001907348633
    8. '``' → logprob: -17.500001907348633
    9. '１' → logprob: -17.687501907348633
    10. '
' → logprob: -17.750001907348633

Token 57: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.016706325113773346
    2. ' ):' → logprob: -4.516706466674805
    3. ')' → logprob: -5.516706466674805
    4. ':' → logprob: -7.016706466674805
    5. '):
' → logprob: -7.641706466674805
    6. ',' → logprob: -8.766706466674805
    7. ' )' → logprob: -10.766706466674805
    8. ' :' → logprob: -11.016706466674805
    9. '):
' → logprob: -11.516706466674805
    10. '):-' → logprob: -11.641706466674805

Token 58: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.2114751935005188
    2. '	for' → logprob: -2.211475133895874
    3. '	if' → logprob: -3.211475133895874
    4. '	s' → logprob: -4.461475372314453
    5. ' for' → logprob: -4.711475372314453
    6. '	i' → logprob: -4.836475372314453
    7. ' ' → logprob: -5.711475372314453
    8. ' if' → logprob: -6.211475372314453
    9. '	next' → logprob: -6.586475372314453
    10. '\t' → logprob: -6.836475372314453

Token 59: ' for' (ID: 395)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.742473840713501
    2. ' if' → logprob: -1.367473840713501
    3. ' for' → logprob: -1.617473840713501
    4. ' next' → logprob: -3.492473840713501
    5. ' ' → logprob: -4.242473602294922
    6. 'for' (adapté à ' for') → logprob: -4.617473602294922
    7. '0' → logprob: -4.992473602294922
    8. 'if' → logprob: -5.992473602294922
    9. '1' → logprob: -6.117473602294922
    10. '2' → logprob: -6.617473602294922

Token 60: ' c' (ID: 274)
  Prédit: 'j'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -0.7575638294219971
    2. ' j' → logprob: -0.7575638294219971
    3. ' c' → logprob: -3.632563829421997
    4. 'c' → logprob: -3.757563829421997
    5. ' b' → logprob: -5.257563591003418
    6. 'b' → logprob: -5.757563591003418
    7. ' d' → logprob: -7.132563591003418
    8. 'd' → logprob: -7.257563591003418
    9. 'x' → logprob: -7.507563591003418
    10. 'k' → logprob: -7.632563591003418

Token 61: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.22563782334327698
    2. 'in' → logprob: -1.6006377935409546
    3. ' ' → logprob: -8.600637435913086
    4. '  ' → logprob: -10.600637435913086
    5. 's' → logprob: -12.725637435913086
    6. '   ' → logprob: -12.725637435913086
    7. 'c' → logprob: -13.600637435913086
    8. '	in' → logprob: -13.725637435913086
    9. '0' → logprob: -13.850637435913086
    10. ')' → logprob: -14.100637435913086

Token 62: ' range' (ID: 3352)
  Prédit: ' range'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' range' → logprob: -0.1282632201910019
    2. 'range' → logprob: -2.128263235092163
    3. '[' → logprob: -6.753262996673584
    4. '(' → logprob: -9.628263473510742
    5. '(range' → logprob: -9.753263473510742
    6. ' [' → logprob: -11.253263473510742
    7. '"' → logprob: -11.753263473510742
    8. ' ' → logprob: -11.753263473510742
    9. '	range' → logprob: -12.378263473510742
    10. '   ' → logprob: -12.378263473510742

Token 63: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0789400190114975
    2. '2' → logprob: -2.578939914703369
    3. ' ' → logprob: -10.203940391540527
    4. '(
' → logprob: -12.328940391540527
    5. 's' → logprob: -13.328940391540527
    6. '=' → logprob: -13.328940391540527
    7. '   ' → logprob: -13.453940391540527
    8. '
' → logprob: -13.453940391540527
    9. '`' → logprob: -14.578940391540527
    10. '```' → logprob: -15.078940391540527

Token 64: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.00023238400171976537
    2. ' ' → logprob: -8.375232696533203
    3. '   ' → logprob: -14.000232696533203
    4. '0' → logprob: -15.125232696533203
    5. ')' → logprob: -15.375232696533203
    6. '1' → logprob: -15.500232696533203
    7. '  ' → logprob: -16.500232696533203
    8. '(' → logprob: -16.625232696533203
    9. '    ' → logprob: -17.750232696533203
    10. '`' → logprob: -17.812732696533203

Token 65: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.008947690017521381
    2. ' ):' → logprob: -4.758947849273682
    3. '):
' → logprob: -8.383947372436523
    4. ')' → logprob: -9.633947372436523
    5. ':' → logprob: -10.758947372436523
    6. ' ):
' → logprob: -12.758947372436523
    7. '):
' → logprob: -12.883947372436523
    8. '   ' → logprob: -13.258947372436523
    9. '():' → logprob: -13.258947372436523
    10. ']:' → logprob: -13.508947372436523

Token 66: '       ' (ID: 309)
  Prédit: '   '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.272806853055954
    2. '       ' → logprob: -2.2728068828582764
    3. ' ' → logprob: -3.3978068828582764
    4. ' next' → logprob: -3.5228068828582764
    5. '<|end|>' → logprob: -3.5228068828582764
    6. ':' → logprob: -3.6478068828582764
    7. '    ' → logprob: -6.022806644439697
    8. ' s' → logprob: -6.147806644439697
    9. '    
' → logprob: -6.272806644439697
    10. ' if' → logprob: -6.397806644439697

Token 67: ' next' (ID: 2613)
  Prédit: '       '
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.32366645336151123
    2. ' if' → logprob: -1.9486664533615112
    3. ' next' → logprob: -2.323666572570801
    4. ' ' → logprob: -3.948666572570801
    5. '    ' → logprob: -5.573666572570801
    6. '           ' → logprob: -6.073666572570801
    7. '   ' → logprob: -6.448666572570801
    8. 'if' → logprob: -6.573666572570801
    9. '	next' → logprob: -6.573666572570801
    10. '        ' → logprob: -6.698666572570801

Token 68: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -2.951771421066951e-05
    2. '_' → logprob: -10.500029563903809
    3. 's' → logprob: -14.375029563903809
    4. '_c' → logprob: -15.375029563903809
    5. '_a' → logprob: -15.625029563903809
    6. ')' → logprob: -16.000028610229492
    7. '_i' → logprob: -16.125028610229492
    8. ' _' → logprob: -16.125028610229492
    9. '_t' → logprob: -16.375028610229492
    10. '[' → logprob: -16.500028610229492

Token 69: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.0007640030235052109
    2. '][' → logprob: -7.875763893127441
    3. '[' → logprob: -8.875763893127441
    4. ')[' → logprob: -8.875763893127441
    5. '[I' → logprob: -10.250763893127441
    6. ' [' → logprob: -11.125763893127441
    7. '[n' → logprob: -11.875763893127441
    8. '```' → logprob: -12.000763893127441
    9. '\[' → logprob: -12.125763893127441
    10. '[s' → logprob: -12.250763893127441

Token 70: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0052766879089176655
    2. ']' → logprob: -5.255276679992676
    3. ' ][' → logprob: -11.005276679992676
    4. '"][' → logprob: -11.755276679992676
    5. '[c' → logprob: -12.380276679992676
    6. ']=' → logprob: -12.505276679992676
    7. ')][' → logprob: -13.130276679992676
    8. ']
' → logprob: -13.505276679992676
    9. ']][' → logprob: -13.630276679992676
    10. '[' → logprob: -13.755276679992676

Token 71: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -3.292907877039397e-06
    2. ' c' → logprob: -12.75000286102295
    3. ')c' → logprob: -16.000003814697266
    4. '	c' → logprob: -17.250003814697266
    5. '   ' → logprob: -17.375003814697266
    6. '[c' → logprob: -17.750003814697266
    7. '%c' → logprob: -17.875003814697266
    8. '_c' → logprob: -18.000003814697266
    9. ':c' → logprob: -18.500003814697266
    10. ' ' → logprob: -18.750003814697266

Token 72: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.5785952806472778
    2. ']' → logprob: -0.8285952806472778
    3. ']=(' → logprob: -5.953595161437988
    4. '=' → logprob: -10.828595161437988
    5. ' ]' → logprob: -11.203595161437988
    6. ']={' → logprob: -11.578595161437988
    7. ']="' → logprob: -12.203595161437988
    8. ']+=' → logprob: -12.453595161437988
    9. ']='' → logprob: -12.953595161437988
    10. ']
' → logprob: -15.328595161437988

Token 73: 'next' (ID: 7311)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.7343141436576843
    2. 'next' → logprob: -0.7343141436576843
    3. ' next' → logprob: -3.359314203262329
    4. ' i' → logprob: -5.48431396484375
    5. '(i' → logprob: -6.98431396484375
    6. '(next' → logprob: -7.85931396484375
    7. '   ' → logprob: -10.10931396484375
    8. ' (' → logprob: -10.73431396484375
    9. '	next' → logprob: -11.60931396484375
    10. '[i' → logprob: -12.35931396484375

Token 74: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -9.088346359931165e-07
    2. '_' → logprob: -14.875000953674316
    3. '```' → logprob: -14.875000953674316
    4. ')_' → logprob: -17.75
    5. '_t' → logprob: -18.0
    6. ' _' → logprob: -18.0
    7. 's' → logprob: -18.5
    8. '}_' → logprob: -18.75
    9. '_a' → logprob: -19.0
    10. '\' → logprob: -19.0

Token 75: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -4.723352049040841e-06
    2. '[' → logprob: -12.875004768371582
    3. 'i' → logprob: -14.250004768371582
    4. '```' → logprob: -15.125004768371582
    5. '[s' → logprob: -15.500004768371582
    6. '[I' → logprob: -15.500004768371582
    7. '[next' → logprob: -15.625004768371582
    8. '][' → logprob: -15.875004768371582
    9. 's' → logprob: -16.375003814697266
    10. ' [' → logprob: -16.625003814697266

Token 76: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.00012701898231171072
    2. '[' → logprob: -9.250126838684082
    3. ' +' → logprob: -10.750126838684082
    4. '[i' → logprob: -12.625126838684082
    5. '+[' → logprob: -13.000126838684082
    6. '1' → logprob: -13.250126838684082
    7. '+i' → logprob: -14.000126838684082
    8. '][' → logprob: -14.500126838684082
    9. 's' → logprob: -15.500126838684082
    10. '+
' → logprob: -15.625126838684082

Token 77: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -6.24179228907451e-05
    2. '][' → logprob: -10.125061988830566
    3. '[' → logprob: -12.000061988830566
    4. 's' → logprob: -12.125061988830566
    5. ' ' → logprob: -12.250061988830566
    6. '```' → logprob: -12.875061988830566
    7. '"][' → logprob: -14.000061988830566
    8. '+' → logprob: -14.375061988830566
    9. '<|end|>' → logprob: -14.625061988830566
    10. ']' → logprob: -15.125061988830566

Token 78: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.0006445261533372104
    2. ']' → logprob: -7.375644683837891
    3. ' ][' → logprob: -11.50064468383789
    4. '[c' → logprob: -12.75064468383789
    5. '"][' → logprob: -13.12564468383789
    6. '[' → logprob: -13.75064468383789
    7. ']][' → logprob: -14.75064468383789
    8. ''][' → logprob: -15.00064468383789
    9. ')][' → logprob: -15.50064468383789
    10. '1' → logprob: -15.87564468383789

Token 79: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -2.45848218582978e-06
    2. ' c' → logprob: -13.87500286102295
    3. '<|end|>' → logprob: -14.25000286102295
    4. 's' → logprob: -14.62500286102295
    5. ')c' → logprob: -15.87500286102295
    6. '_c' → logprob: -16.125001907348633
    7. '0' → logprob: -17.000001907348633
    8. '[c' → logprob: -17.500001907348633
    9. ']' → logprob: -17.750001907348633
    10. '<c' → logprob: -17.875001907348633

Token 80: ']
' (ID: 1592)
  Prédit: ' if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ' if' → logprob: -0.2874164581298828
    2. 'if' → logprob: -1.4124164581298828
    3. ')' → logprob: -5.662416458129883
    4. ']' → logprob: -6.037416458129883
    5. '<|end|>' → logprob: -8.412416458129883
    6. '
' → logprob: -9.787416458129883
    7. '	if' → logprob: -10.537416458129883
    8. ')]' → logprob: -11.162416458129883
    9. ')
' → logprob: -11.537416458129883
    10. '<|end|>' → logprob: -11.912416458129883

Token 81: '   ' (ID: 271)
  Prédit: '
'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '
' → logprob: -0.45004579424858093
    2. ' if' → logprob: -1.0750458240509033
    3. '\n' → logprob: -4.450045585632324
    4. 'if' → logprob: -5.325045585632324
    5. '<|end|>' → logprob: -5.825045585632324
    6. '   ' → logprob: -7.450045585632324
    7. '
' → logprob: -8.450045585632324
    8. '  
' → logprob: -8.700045585632324
    9. 's' → logprob: -8.825045585632324
    10. '

' → logprob: -9.325045585632324

Token 82: ' next' (ID: 2613)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.27229148149490356
    2. ' if' → logprob: -1.5222914218902588
    3. '0' → logprob: -4.522291660308838
    4. '1' → logprob: -5.647291660308838
    5. 's' → logprob: -6.272291660308838
    6. 'next' (adapté à ' next') → logprob: -6.272291660308838
    7. '   ' → logprob: -6.897291660308838
    8. ' next' → logprob: -7.647291660308838
    9. ' s' → logprob: -8.89729118347168
    10. '
' → logprob: -9.39729118347168

Token 83: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.9361264946837764e-07
    2. 's' → logprob: -16.625
    3. '[_' → logprob: -17.75
    4. '_' → logprob: -18.375
    5. '```' → logprob: -18.625
    6. ' _' → logprob: -19.375
    7. '\' → logprob: -19.375
    8. '_t' → logprob: -20.25
    9. '_[' → logprob: -20.375
    10. '}_' → logprob: -21.0

Token 84: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -0.00010759611177491024
    2. '[s' → logprob: -9.500107765197754
    3. '[' → logprob: -11.125107765197754
    4. '[int' → logprob: -12.000107765197754
    5. '```' → logprob: -12.125107765197754
    6. 's' → logprob: -12.750107765197754
    7. '[I' → logprob: -13.750107765197754
    8. '[user' → logprob: -14.000107765197754
    9. '[
' → logprob: -15.125107765197754
    10. '[input' → logprob: -15.250107765197754

Token 85: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.020712153986096382
    2. '[' → logprob: -4.395712375640869
    3. '[s' → logprob: -4.895712375640869
    4. ')[' → logprob: -8.395711898803711
    5. ']' → logprob: -8.645711898803711
    6. '[c' → logprob: -9.645711898803711
    7. ' ][' → logprob: -10.395711898803711
    8. '[
' → logprob: -10.520711898803711
    9. '[int' → logprob: -10.645711898803711
    10. ')][' → logprob: -10.770711898803711

Token 86: 'int' (ID: 491)
  Prédit: 's'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 's' → logprob: -0.012305608950555325
    2. 'i' → logprob: -4.512305736541748
    3. 'int' → logprob: -6.762305736541748
    4. ' s' → logprob: -10.38730525970459
    5. '   ' → logprob: -10.63730525970459
    6. '0' → logprob: -11.63730525970459
    7. '1' → logprob: -12.26230525970459
    8. '(i' → logprob: -12.38730525970459
    9. 'ord' → logprob: -12.51230525970459
    10. '[i' → logprob: -12.51230525970459

Token 87: '(s' (ID: 1858)
  Prédit: '(s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(s' → logprob: -2.9875325708417222e-05
    2. '(' → logprob: -10.500029563903809
    3. 's' → logprob: -13.500029563903809
    4. ')(' → logprob: -15.000029563903809
    5. '((' → logprob: -15.250029563903809
    6. '(bool' → logprob: -15.375029563903809
    7. ']' → logprob: -17.625030517578125
    8. ')' → logprob: -17.750030517578125
    9. '(ord' → logprob: -17.750030517578125
    10. ' (' → logprob: -18.250030517578125

Token 88: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.925185440806672e-05
    2. '[' → logprob: -9.250099182128906
    3. '```' → logprob: -13.500099182128906
    4. '[
' → logprob: -14.125099182128906
    5. ' [' → logprob: -14.500099182128906
    6. '\[' → logprob: -15.375099182128906
    7. '[I' → logprob: -15.875099182128906
    8. '`' → logprob: -17.000099182128906
    9. ' ' → logprob: -17.125099182128906
    10. '(i' → logprob: -17.500099182128906

Token 89: '])' (ID: 4636)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.09230164438486099
    2. '])]' → logprob: -2.592301607131958
    3. ')' → logprob: -4.592301845550537
    4. '])' → logprob: -6.342301845550537
    5. ']' → logprob: -7.217301845550537
    6. ')])' → logprob: -7.967301845550537
    7. ' )' → logprob: -8.967301368713379
    8. '[' → logprob: -9.967301368713379
    9. '')]' → logprob: -9.967301368713379
    10. ')==' → logprob: -10.592301368713379

Token 90: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.07990192621946335
    2. ']' → logprob: -2.579901933670044
    3. ' ]' → logprob: -7.079901695251465
    4. ']+=' → logprob: -9.579901695251465
    5. '=' → logprob: -10.579901695251465
    6. ']==' → logprob: -10.954901695251465
    7. ']=(' → logprob: -10.954901695251465
    8. ']]=' → logprob: -10.954901695251465
    9. ']={' → logprob: -12.329901695251465
    10. '"]=' → logprob: -12.454901695251465

Token 91: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -3.531315314830863e-06
    2. ' i' → logprob: -12.625003814697266
    3. '<|end|>' → logprob: -16.500003814697266
    4. '	i' → logprob: -17.375003814697266
    5. ')i' → logprob: -17.750003814697266
    6. '<|end|>' → logprob: -19.250003814697266
    7. ''i' → logprob: -19.375003814697266
    8. '*i' → logprob: -19.500003814697266
    9. '```' → logprob: -19.625003814697266
    10. '$i' → logprob: -19.750003814697266

Token 92: '
' (ID: 198)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -0.003306635422632098
    2. ' for' → logprob: -6.003306865692139
    3. '```' → logprob: -8.12830638885498
    4. ')' → logprob: -8.62830638885498
    5. 'n' → logprob: -8.62830638885498
    6. '<|end|>' → logprob: -9.75330638885498
    7. ']' → logprob: -10.50330638885498
    8. 'next' → logprob: -11.00330638885498
    9. '`' → logprob: -11.62830638885498
    10. '
' → logprob: -11.75330638885498

Token 93: 'for' (ID: 1938)
  Prédit: 'for'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' → logprob: -1.5094070477061905e-05
    2. 'f' → logprob: -11.625015258789062
    3. ' for' → logprob: -12.250015258789062
    4. '```' → logprob: -14.375015258789062
    5. ')' → logprob: -15.250015258789062
    6. 'n' → logprob: -15.750015258789062
    7. '
' → logprob: -15.875015258789062
    8. '`' → logprob: -16.750015258789062
    9. '    
' → logprob: -17.125015258789062
    10. '#' → logprob: -17.375015258789062

Token 94: ' i' (ID: 575)
  Prédit: ' m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' m' → logprob: -0.1568182408809662
    2. 'm' → logprob: -2.031818151473999
    3. ' j' → logprob: -4.656818389892578
    4. ' range' → logprob: -5.906818389892578
    5. 'j' → logprob: -7.031818389892578
    6. ' in' → logprob: -8.031818389892578
    7. 'range' → logprob: -8.031818389892578
    8. ' ' → logprob: -9.031818389892578
    9. ' i' → logprob: -9.156818389892578
    10. 'i' → logprob: -10.656818389892578

Token 95: ' in' (ID: 306)
  Prédit: 'm'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -0.10383089631795883
    2. '(m' → logprob: -2.4788308143615723
    3. 'range' → logprob: -5.103830814361572
    4. ' in' → logprob: -5.978830814361572
    5. 'in' → logprob: -6.103830814361572
    6. ' m' → logprob: -6.353830814361572
    7. 'for' → logprob: -6.728830814361572
    8. ' range' → logprob: -7.728830814361572
    9. ',m' → logprob: -8.72883129119873
    10. '[m' → logprob: -9.35383129119873

Token 96: ' range' (ID: 3352)
  Prédit: '(m'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -0.49544915556907654
    2. 'range' → logprob: -1.495449185371399
    3. 'm' → logprob: -2.3704490661621094
    4. ' range' → logprob: -2.6204490661621094
    5. ' m' → logprob: -8.62044906616211
    6. '(range' → logprob: -9.12044906616211
    7. '[m' → logprob: -10.87044906616211
    8. 'Range' → logprob: -11.49544906616211
    9. '_range' → logprob: -11.74544906616211
    10. '<m' → logprob: -11.87044906616211

Token 97: '(m' (ID: 2145)
  Prédit: '(m'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(m' → logprob: -5.676981345459353e-06
    2. 'm' → logprob: -12.125005722045898
    3. ' (' → logprob: -16.7500057220459
    4. '(' → logprob: -16.7500057220459
    5. '   ' → logprob: -18.2500057220459
    6. '[m' → logprob: -19.0000057220459
    7. ' m' → logprob: -19.2500057220459
    8. '(M' → logprob: -19.7500057220459
    9. ',m' → logprob: -20.1250057220459
    10. '```' → logprob: -20.1250057220459

Token 98: '-' (ID: 12)
  Prédit: '-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '-' → logprob: -2.339278580620885e-06
    2. ' -' → logprob: -13.375001907348633
    3. '1' → logprob: -14.125001907348633
    4. ',-' → logprob: -18.500001907348633
    5. ')' → logprob: -20.125001907348633
    6. ')-' → logprob: -20.750001907348633
    7. '−' → logprob: -20.875001907348633
    8. ',' → logprob: -21.000001907348633
    9. ' ' → logprob: -21.250001907348633
    10. '<|end|>' → logprob: -21.625001907348633

Token 99: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4498052223643754e-05
    2. '-' → logprob: -11.250014305114746
    3. ' ' → logprob: -13.750014305114746
    4. '```' → logprob: -16.125015258789062
    5. '

' → logprob: -16.375015258789062
    6. '
' → logprob: -16.562515258789062
    7. 'for' → logprob: -16.812515258789062
    8. ' -' → logprob: -17.187515258789062
    9. '2' → logprob: -17.375015258789062
    10. ')' → logprob: -17.625015258789062

Token 100: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.0009688684367574751
    2. ',' → logprob: -7.125968933105469
    3. '-' → logprob: -8.875968933105469
    4. ' -' → logprob: -11.250968933105469
    5. ' ,-' → logprob: -12.000968933105469
    6. ' ,' → logprob: -12.875968933105469
    7. '",-' → logprob: -13.875968933105469
    8. ',
' → logprob: -13.875968933105469
    9. '1' → logprob: -15.250968933105469
    10. '-,' → logprob: -15.750968933105469

Token 101: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.4021237802808173e-05
    2. '-' → logprob: -11.250014305114746
    3. '```' → logprob: -14.250014305114746
    4. ' ' → logprob: -15.250014305114746
    5. '   ' → logprob: -17.62501335144043
    6. '``' → logprob: -17.87501335144043
    7. '
' → logprob: -18.50001335144043
    8. ' -' → logprob: -18.75001335144043
    9. '`' → logprob: -19.12501335144043
    10. '#' → logprob: -19.37501335144043

Token 102: ',-' (ID: 8202)
  Prédit: ',-'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',-' → logprob: -0.001890210434794426
    2. '-' → logprob: -6.376890182495117
    3. ',' → logprob: -8.626890182495117
    4. '1' → logprob: -12.876890182495117
    5. ' ,-' → logprob: -13.376890182495117
    6. '   ' → logprob: -13.876890182495117
    7. '```' → logprob: -13.876890182495117
    8. ' -' → logprob: -14.126890182495117
    9. '0' → logprob: -14.751890182495117
    10. '-,' → logprob: -14.751890182495117

Token 103: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -7.941850526549388e-06
    2. ' ' → logprob: -12.625007629394531
    3. '-' → logprob: -12.875007629394531
    4. '```' → logprob: -13.625007629394531
    5. '``' → logprob: -15.125007629394531
    6. '   ' → logprob: -15.125007629394531
    7. ')' → logprob: -16.00000762939453
    8. '
' → logprob: -16.00000762939453
    9. ',' → logprob: -17.12500762939453
    10. '):
' → logprob: -17.37500762939453

Token 104: '):
' (ID: 1883)
  Prédit: '):
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):
' → logprob: -0.8062807321548462
    2. '):' → logprob: -1.3062807321548462
    3. ',' → logprob: -1.9312807321548462
    4. ':' → logprob: -3.0562806129455566
    5. '-' → logprob: -3.3062806129455566
    6. ',-' → logprob: -3.3062806129455566
    7. ',:' → logprob: -4.806280612945557
    8. ':
' → logprob: -5.806280612945557
    9. '   ' → logprob: -6.056280612945557
    10. '):
' → logprob: -6.431280612945557

Token 105: '   ' (ID: 271)
  Prédit: '   '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '   ' → logprob: -0.0016234104987233877
    2. 'for' → logprob: -7.001623630523682
    3. ' for' → logprob: -7.251623630523682
    4. '```' → logprob: -13.501623153686523
    5. ' ' → logprob: -14.126623153686523
    6. '       ' → logprob: -14.751623153686523
    7. '	for' → logprob: -15.501623153686523
    8. '   ' → logprob: -17.376623153686523
    9. '    
' → logprob: -19.001623153686523
    10. '  ' → logprob: -19.126623153686523

Token 106: ' for' (ID: 395)
  Prédit: 'for'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'for' (adapté à ' for') → logprob: -0.21046608686447144
    2. ' for' → logprob: -1.7104661464691162
    3. '   ' → logprob: -4.710465908050537
    4. ' ' → logprob: -11.710466384887695
    5. '	for' → logprob: -12.835466384887695
    6. '       ' → logprob: -15.210466384887695
    7. '  ' → logprob: -15.960466384887695
    8. '```' → logprob: -16.960466384887695
    9. '    ' → logprob: -17.960466384887695
    10. '_for' → logprob: -18.085466384887695

Token 107: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.3132672905921936
    2. ' c' → logprob: -1.3132672309875488
    3. ' ' → logprob: -12.563267707824707
    4. '(c' → logprob: -14.188267707824707
    5. '_c' → logprob: -15.063267707824707
    6. '	c' → logprob: -15.438267707824707
    7. '2' → logprob: -15.563267707824707
    8. 'C' → logprob: -16.43826675415039
    9. ')c' → logprob: -16.56326675415039
    10. '0' → logprob: -16.68826675415039

Token 108: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.0028067755047231913
    2. 'in' → logprob: -5.877806663513184
    3. '<|end|>' → logprob: -14.252806663513184
    4. 'range' → logprob: -14.377806663513184
    5. ' ' → logprob: -14.752806663513184
    6. ' range' → logprob: -15.877806663513184
    7. '  ' → logprob: -17.3778076171875
    8. '   ' → logprob: -17.8778076171875
    9. 'import' → logprob: -18.2528076171875
    10. 's' → logprob: -18.2528076171875

Token 109: ' range' (ID: 3352)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.06196959316730499
    2. ' range' → logprob: -2.811969518661499
    3. '(range' → logprob: -13.436969757080078
    4. 'in' → logprob: -15.686969757080078
    5. ' in' → logprob: -15.936969757080078
    6. '2' → logprob: -16.061969757080078
    7. ' ' → logprob: -16.811969757080078
    8. 'ange' → logprob: -18.061969757080078
    9. '	range' → logprob: -18.686969757080078
    10. '(' → logprob: -19.311969757080078

Token 110: '(' (ID: 7)
  Prédit: '('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -6.704273118884885e-07
    2. '2' → logprob: -14.625000953674316
    3. '(
' → logprob: -17.0
    4. ' (' → logprob: -17.625
    5. 'range' → logprob: -18.0
    6. ' range' → logprob: -18.25
    7. '<|end|>' → logprob: -18.625
    8. ' in' → logprob: -20.125
    9. '```' → logprob: -20.375
    10. ' ' → logprob: -21.0

Token 111: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -5.9153885558771435e-06
    2. ' ' → logprob: -12.125005722045898
    3. '(' → logprob: -15.250005722045898
    4. '   ' → logprob: -15.375005722045898
    5. '  ' → logprob: -19.0000057220459
    6. '       ' → logprob: -19.2500057220459
    7. 'range' → logprob: -19.5000057220459
    8. '           ' → logprob: -19.8750057220459
    9. '
' → logprob: -20.2500057220459
    10. '0' → logprob: -20.5000057220459

Token 112: '):
' (ID: 1883)
  Prédit: '):'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '):' → logprob: -0.6339010000228882
    2. '):
' → logprob: -0.7589010000228882
    3. ':' → logprob: -6.758901119232178
    4. '):
' → logprob: -9.63390064239502
    5. '):

' → logprob: -10.38390064239502
    6. '   ' → logprob: -10.63390064239502
    7. ')' → logprob: -12.50890064239502
    8. ']:' → logprob: -12.75890064239502
    9. '():
' → logprob: -12.88390064239502
    10. ':
' → logprob: -12.88390064239502

Token 113: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -2.8206473871250637e-05
    2. '   ' → logprob: -11.375028610229492
    3. ' next' → logprob: -11.625028610229492
    4. 'next' → logprob: -11.875028610229492
    5. '           ' → logprob: -15.625028610229492
    6. '     ' → logprob: -15.750028610229492
    7. '<|end|>' → logprob: -16.125028610229492
    8. '      ' → logprob: -16.250028610229492
    9. '[next' → logprob: -16.750028610229492
    10. 'Next' → logprob: -16.875028610229492

Token 114: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.7115049958229065
    2. ' next' → logprob: -0.9615049958229065
    3. '       ' → logprob: -2.0865049362182617
    4. '   ' → logprob: -5.961504936218262
    5. '	next' → logprob: -10.711504936218262
    6. '[next' → logprob: -10.836504936218262
    7. '           ' → logprob: -10.961504936218262
    8. 'Next' → logprob: -12.086504936218262
    9. '_next' → logprob: -12.586504936218262
    10. '(next' → logprob: -12.711504936218262

Token 115: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -3.054500666621607e-06
    2. 't' → logprob: -12.87500286102295
    3. '_' → logprob: -14.62500286102295
    4. '_s' → logprob: -17.750003814697266
    5. 's' → logprob: -19.500003814697266
    6. '   ' → logprob: -19.625003814697266
    7. '```' → logprob: -20.375003814697266
    8. ' _' → logprob: -20.625003814697266
    9. ')_' → logprob: -20.750003814697266
    10. '_
' → logprob: -20.750003814697266

Token 116: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.3856492842023727e-06
    2. '[' → logprob: -14.625000953674316
    3. '   ' → logprob: -15.125000953674316
    4. 'i' → logprob: -15.750000953674316
    5. '[m' → logprob: -15.875000953674316
    6. '[
' → logprob: -16.750001907348633
    7. '[I' → logprob: -16.750001907348633
    8. ' [' → logprob: -16.875001907348633
    9. '```' → logprob: -17.000001907348633
    10. '[t' → logprob: -17.375001907348633

Token 117: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -3.5954712075181305e-05
    2. '[c' → logprob: -10.750036239624023
    3. ' ][' → logprob: -11.625036239624023
    4. ']' → logprob: -12.875036239624023
    5. '   ' → logprob: -14.250036239624023
    6. '[i' → logprob: -14.250036239624023
    7. '"][' → logprob: -14.375036239624023
    8. ''][' → logprob: -15.000036239624023
    9. '[' → logprob: -15.500036239624023
    10. ']][' → logprob: -16.000036239624023

Token 118: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -5.5577775128767826e-06
    2. ' c' → logprob: -13.000005722045898
    3. '[c' → logprob: -13.375005722045898
    4. '   ' → logprob: -13.625005722045898
    5. '	c' → logprob: -15.375005722045898
    6. ')c' → logprob: -15.875005722045898
    7. '       ' → logprob: -16.5000057220459
    8. '+c' → logprob: -17.1250057220459
    9. ':c' → logprob: -17.3750057220459
    10. '
' → logprob: -18.0000057220459

Token 119: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.00010723850573413074
    2. '=' → logprob: -9.500106811523438
    3. ']' → logprob: -10.375106811523438
    4. ']+=' → logprob: -15.250106811523438
    5. ']=(' → logprob: -15.500106811523438
    6. ']={' → logprob: -16.125106811523438
    7. ')=' → logprob: -16.125106811523438
    8. ' ]' → logprob: -16.375106811523438
    9. '']=' → logprob: -16.375106811523438
    10. '"]=' → logprob: -16.875106811523438

Token 120: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0003035266126971692
    2. ' next' → logprob: -8.125303268432617
    3. '[next' → logprob: -12.375303268432617
    4. '(next' → logprob: -12.875303268432617
    5. '
' → logprob: -15.250303268432617
    6. '   ' → logprob: -15.625303268432617
    7. '	next' → logprob: -15.625303268432617
    8. 't' → logprob: -16.875303268432617
    9. ' ' → logprob: -17.875303268432617
    10. '.next' → logprob: -18.000303268432617

Token 121: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -6.64708495605737e-05
    2. 't' → logprob: -9.625066757202148
    3. '[t' → logprob: -16.87506675720215
    4. '[' → logprob: -16.87506675720215
    5. '\' → logprob: -17.37506675720215
    6. '```' → logprob: -17.50006675720215
    7. '_' → logprob: -17.62506675720215
    8. '[_' → logprob: -17.75006675720215
    9. 's' → logprob: -17.87506675720215
    10. 'T' → logprob: -17.87506675720215

Token 122: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.5048530030981055e-06
    2. 'i' → logprob: -14.250001907348633
    3. '[m' → logprob: -14.250001907348633
    4. 't' → logprob: -16.875001907348633
    5. '```' → logprob: -16.875001907348633
    6. '   ' → logprob: -17.750001907348633
    7. '[t' → logprob: -17.875001907348633
    8. 'm' → logprob: -18.250001907348633
    9. '[' → logprob: -18.375001907348633
    10. '[I' → logprob: -19.000001907348633

Token 123: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -2.696889623621246e-06
    2. ' +' → logprob: -13.62500286102295
    3. '[' → logprob: -14.37500286102295
    4. '+i' → logprob: -14.75000286102295
    5. '[i' → logprob: -15.75000286102295
    6. '1' → logprob: -17.125001907348633
    7. 'i' → logprob: -17.375001907348633
    8. '+
' → logprob: -17.500001907348633
    9. '+m' → logprob: -17.500001907348633
    10. '```' → logprob: -17.625001907348633

Token 124: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.173704271830502e-06
    2. ' ' → logprob: -13.50000286102295
    3. '+' → logprob: -13.87500286102295
    4. 'm' → logprob: -15.25000286102295
    5. '```' → logprob: -15.37500286102295
    6. '   ' → logprob: -16.312503814697266
    7. 't' → logprob: -17.125003814697266
    8. '`' → logprob: -17.437503814697266
    9. '[' → logprob: -17.562503814697266
    10. '
' → logprob: -17.937503814697266

Token 125: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.04309076815843582
    2. '[c' → logprob: -3.1680908203125
    3. '[' → logprob: -9.7930908203125
    4. ']' → logprob: -11.5430908203125
    5. 'c' → logprob: -11.6680908203125
    6. ' ][' → logprob: -11.7930908203125
    7. '   ' → logprob: -12.6680908203125
    8. '[i' → logprob: -13.9180908203125
    9. '       ' → logprob: -14.1680908203125
    10. ' [' → logprob: -14.4180908203125

Token 126: 'c' (ID: 66)
  Prédit: 'c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -1.1472419600977446e-06
    2. ' c' → logprob: -14.125000953674316
    3. '[c' → logprob: -16.125001907348633
    4. ']' → logprob: -16.500001907348633
    5. ')c' → logprob: -16.750001907348633
    6. '   ' → logprob: -17.000001907348633
    7. '1' → logprob: -17.000001907348633
    8. '```' → logprob: -18.375001907348633
    9. ' ' → logprob: -18.625001907348633
    10. '(c' → logprob: -18.625001907348633

Token 127: ']
' (ID: 1592)
  Prédit: ']'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']' → logprob: -0.011104652658104897
    2. ']
' → logprob: -4.511104583740234
    3. '   ' → logprob: -10.511104583740234
    4. 'for' → logprob: -11.011104583740234
    5. ' ]' → logprob: -12.511104583740234
    6. '```' → logprob: -13.136104583740234
    7. '
' → logprob: -13.386104583740234
    8. '<|end|>' → logprob: -13.511104583740234
    9. ']

' → logprob: -13.886104583740234
    10. ')' → logprob: -14.636104583740234

Token 128: '   ' (ID: 271)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.28415414690971375
    2. '   ' → logprob: -1.7841541767120361
    3. ' next' → logprob: -2.534154176712036
    4. '	next' → logprob: -10.784153938293457
    5. '[next' → logprob: -10.909153938293457
    6. '  ' → logprob: -11.409153938293457
    7. ' ' → logprob: -11.659153938293457
    8. '       ' → logprob: -11.784153938293457
    9. '
' → logprob: -12.284153938293457
    10. '(next' → logprob: -12.534153938293457

Token 129: ' next' (ID: 2613)
  Prédit: 'next'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' (adapté à ' next') → logprob: -0.003796511795371771
    2. ' next' → logprob: -6.253796577453613
    3. '   ' → logprob: -6.378796577453613
    4. '[next' → logprob: -8.878796577453613
    5. '       ' → logprob: -11.128796577453613
    6. '	next' → logprob: -11.378796577453613
    7. '(next' → logprob: -13.878796577453613
    8. '.next' → logprob: -14.378796577453613
    9. '
' → logprob: -14.503796577453613
    10. '  ' → logprob: -15.003796577453613

Token 130: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -2.339278580620885e-06
    2. 't' → logprob: -13.000001907348633
    3. '_s' → logprob: -19.000001907348633
    4. '_' → logprob: -20.125001907348633
    5. 's' → logprob: -21.000001907348633
    6. ' _' → logprob: -22.875001907348633
    7. '[t' → logprob: -23.250001907348633
    8. '```' → logprob: -23.250001907348633
    9. ''_' → logprob: -23.250001907348633
    10. '   ' → logprob: -23.500001907348633

Token 131: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.2664456789934775e-06
    2. '[' → logprob: -14.125000953674316
    3. 'i' → logprob: -15.125000953674316
    4. '```' → logprob: -16.250001907348633
    5. '[int' → logprob: -16.875001907348633
    6. ' [' → logprob: -17.250001907348633
    7. '[I' → logprob: -17.375001907348633
    8. '[m' → logprob: -17.875001907348633
    9. '[
' → logprob: -18.000001907348633
    10. '[t' → logprob: -18.250001907348633

Token 132: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.577078104019165
    2. '[int' → logprob: -0.827078104019165
    3. '[' → logprob: -6.827077865600586
    4. ')[' → logprob: -11.077077865600586
    5. ''][' → logprob: -11.702077865600586
    6. 'int' → logprob: -12.077077865600586
    7. '}[' → logprob: -12.327077865600586
    8. '   ' → logprob: -12.327077865600586
    9. '"][' → logprob: -12.702077865600586
    10. '[Int' → logprob: -13.202077865600586

Token 133: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.9361264946837764e-07
    2. ' int' → logprob: -16.375
    3. '[int' → logprob: -18.25
    4. '(int' → logprob: -18.625
    5. '   ' → logprob: -20.25
    6. '
' → logprob: -21.375
    7. '<int' → logprob: -21.875
    8. 't' → logprob: -22.0
    9. '=int' → logprob: -22.0
    10. '1' → logprob: -23.0

Token 134: '(t' (ID: 2025)
  Prédit: '(t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(t' → logprob: -0.0007137430948205292
    2. 't' → logprob: -7.25071382522583
    3. '(' → logprob: -12.500713348388672
    4. '	t' → logprob: -18.125713348388672
    5. ')t' → logprob: -18.125713348388672
    6. ' t' → logprob: -18.625713348388672
    7. ' (' → logprob: -18.875713348388672
    8. '(
' → logprob: -19.625713348388672
    9. ':t' → logprob: -19.625713348388672
    10. '_t' → logprob: -19.875713348388672

Token 135: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -1.9361264946837764e-07
    2. '[' → logprob: -16.5
    3. '[
' → logprob: -18.75
    4. '(i' → logprob: -18.75
    5. '[I' → logprob: -18.75
    6. '```' → logprob: -19.125
    7. ' [' → logprob: -19.25
    8. ' ' → logprob: -19.75
    9. '   ' → logprob: -20.0
    10. 'i' → logprob: -20.0

Token 136: '])' (ID: 4636)
  Prédit: '])'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '])' → logprob: -0.3275134563446045
    2. ')' → logprob: -1.4525134563446045
    3. '])]' → logprob: -3.4525134563446045
    4. ')])' → logprob: -4.702513694763184
    5. '[i' → logprob: -5.702513694763184
    6. ')]' → logprob: -6.827513694763184
    7. ']])' → logprob: -9.952513694763184
    8. '[])' → logprob: -10.827513694763184
    9. ' )' → logprob: -11.202513694763184
    10. ']' → logprob: -11.577513694763184

Token 137: ']=' (ID: 9539)
  Prédit: ']='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ']=' → logprob: -0.0002509687910787761
    2. ']' → logprob: -8.750250816345215
    3. '=' → logprob: -10.000250816345215
    4. ')=' → logprob: -10.125250816345215
    5. ']+=' → logprob: -13.625250816345215
    6. '']=' → logprob: -13.625250816345215
    7. ']]=' → logprob: -13.625250816345215
    8. '"]=' → logprob: -13.750250816345215
    9. ']=(' → logprob: -13.875250816345215
    10. ' ]' → logprob: -14.750250816345215

Token 138: 'i' (ID: 72)
  Prédit: 'i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -1.2664456789934775e-06
    2. ' i' → logprob: -13.625000953674316
    3. '   ' → logprob: -18.875001907348633
    4. '	i' → logprob: -20.000001907348633
    5. '<|end|>' → logprob: -20.250001907348633
    6. 'm' → logprob: -20.875001907348633
    7. ' ' → logprob: -21.000001907348633
    8. '```' → logprob: -21.250001907348633
    9. '_i' → logprob: -21.750001907348633
    10. '[i' → logprob: -22.000001907348633

Token 139: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.003945536911487579
    2. 'f' → logprob: -6.128945350646973
    3. '#' → logprob: -7.628945350646973
    4. 'ans' → logprob: -8.753945350646973
    5. 'from' → logprob: -8.753945350646973
    6. 'for' → logprob: -9.128945350646973
    7. 'l' → logprob: -9.753945350646973
    8. 'print' → logprob: -9.753945350646973
    9. 'import' → logprob: -9.878945350646973
    10. 'prev' → logprob: -10.128945350646973

Token 140: 'from' (ID: 2845)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.0010668702889233828
    2. 'f' → logprob: -7.8760666847229
    3. '#' → logprob: -8.251067161560059
    4. 'INF' → logprob: -9.376067161560059
    5. 'from' → logprob: -9.501067161560059
    6. 'q' → logprob: -10.376067161560059
    7. 'ans' → logprob: -10.376067161560059
    8. 'mod' → logprob: -10.751067161560059
    9. 'l' → logprob: -10.751067161560059
    10. 'max' → logprob: -11.001067161560059

Token 141: ' collections' (ID: 22690)
  Prédit: 'collections'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'collections' → logprob: -0.002740327501669526
    2. ' collections' → logprob: -6.502740383148193
    3. 'math' → logprob: -7.252740383148193
    4. 'sys' → logprob: -8.252739906311035
    5. 'heap' → logprob: -8.627739906311035
    6. 'bis' → logprob: -9.627739906311035
    7. 'it' → logprob: -11.377739906311035
    8. ' math' → logprob: -12.627739906311035
    9. 'copy' → logprob: -13.377739906311035
    10. 'operator' → logprob: -13.502739906311035

Token 142: ' import' (ID: 1588)
  Prédit: 'import'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'import' → logprob: -0.017036516219377518
    2. ' import' → logprob: -4.142036437988281
    3. 'port' → logprob: -7.642036437988281
    4. 'from' → logprob: -7.892036437988281
    5. 'n' → logprob: -10.017036437988281
    6. 'ort' → logprob: -10.392036437988281
    7. 'm' → logprob: -11.517036437988281
    8. 'ounter' → logprob: -11.517036437988281
    9. '#import' → logprob: -12.142036437988281
    10. 'nt' → logprob: -12.392036437988281

Token 143: ' deque' (ID: 90347)
  Prédit: 'deque'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -0.0008743013604544103
    2. ' deque' → logprob: -7.2508745193481445
    3. 'de' → logprob: -8.750874519348145
    4. 'default' → logprob: -12.125874519348145
    5. ' defaultdict' → logprob: -14.500874519348145
    6. 'collections' → logprob: -15.750874519348145
    7. 'd' → logprob: -18.375873565673828
    8. 'named' → logprob: -19.125873565673828
    9. 'counter' → logprob: -19.750873565673828
    10. 'deb' → logprob: -19.750873565673828

Token 144: '
' (ID: 198)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.20484457910060883
    2. 'dq' → logprob: -2.4548444747924805
    3. 'q' → logprob: -2.8298444747924805
    4. 'queue' → logprob: -3.4548444747924805
    5. 'que' → logprob: -5.8298444747924805
    6. '
' → logprob: -6.2048444747924805
    7. 'Q' → logprob: -6.5798444747924805
    8. 'ans' → logprob: -7.4548444747924805
    9. 'dist' → logprob: -7.8298444747924805
    10. 'deque' → logprob: -8.45484447479248

Token 145: 'dq' (ID: 196857)
  Prédit: 'dp'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dp' → logprob: -0.4456312954425812
    2. 'q' → logprob: -1.5706312656402588
    3. 'dq' → logprob: -2.070631265640259
    4. 'queue' → logprob: -4.695631504058838
    5. 'que' → logprob: -5.195631504058838
    6. 'dist' → logprob: -5.320631504058838
    7. 'Q' → logprob: -6.195631504058838
    8. 'de' → logprob: -6.945631504058838
    9. 'INF' → logprob: -7.320631504058838
    10. 'd' → logprob: -8.07063102722168

Token 146: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.12714238464832306
    2. ' =' → logprob: -2.1271424293518066
    3. '=[]' → logprob: -9.252141952514648
    4. '=d' → logprob: -10.752141952514648
    5. '=D' → logprob: -11.627141952514648
    6. '=
' → logprob: -11.627141952514648
    7. '=int' → logprob: -11.752141952514648
    8. '=[]
' → logprob: -11.752141952514648
    9. 'ue' → logprob: -11.877141952514648
    10. '=data' → logprob: -12.127141952514648

Token 147: 'deque' (ID: 143563)
  Prédit: 'deque'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'deque' → logprob: -1.3306015716807451e-05
    2. ' deque' → logprob: -11.25001335144043
    3. 'de' → logprob: -15.25001335144043
    4. 'Deque' → logprob: -18.12501335144043
    5. 'collections' → logprob: -18.12501335144043
    6. 'd' → logprob: -21.50001335144043
    7. '0' → logprob: -21.62501335144043
    8. '(de' → logprob: -21.62501335144043
    9. 'dq' → logprob: -21.75001335144043
    10. 'double' → logprob: -21.75001335144043

Token 148: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.009260142222046852
    2. '([]' → logprob: -4.759260177612305
    3. '(' → logprob: -7.634260177612305
    4. '([(' → logprob: -9.259260177612305
    5. '[]' → logprob: -10.134260177612305
    6. '([' → logprob: -10.884260177612305
    7. '()]' → logprob: -13.259260177612305
    8. '()
' → logprob: -13.634260177612305
    9. '((' → logprob: -14.134260177612305
    10. '().' → logprob: -14.384260177612305

Token 149: 'dq' (ID: 196857)
  Prédit: 'dq'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dq' → logprob: -0.07459163665771484
    2. 'dp' → logprob: -2.824591636657715
    3. 'visited' → logprob: -5.449591636657715
    4. 'for' → logprob: -5.449591636657715
    5. 'ans' → logprob: -6.574591636657715
    6. 'res' → logprob: -7.574591636657715
    7. 'from' → logprob: -7.699591636657715
    8. 'answer' → logprob: -8.449591636657715
    9. 'dist' → logprob: -8.449591636657715
    10. 'result' → logprob: -8.574591636657715

Token 150: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -0.008712668903172016
    2. '.' → logprob: -4.7587127685546875
    3. 'append' → logprob: -10.133712768554688
    4. '().' → logprob: -10.258712768554688
    5. '.extend' → logprob: -11.633712768554688
    6. '.clear' → logprob: -11.758712768554688
    7. ' .' → logprob: -13.883712768554688
    8. '_append' → logprob: -14.133712768554688
    9. '.Append' → logprob: -14.508712768554688
    10. '.put' → logprob: -14.633712768554688

Token 151: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0018679486820474267
    2. '(' → logprob: -6.376867771148682
    3. '((-' → logprob: -9.00186824798584
    4. '(()' → logprob: -10.37686824798584
    5. '(((' → logprob: -12.50186824798584
    6. '([' → logprob: -12.62686824798584
    7. '()' → logprob: -13.00186824798584
    8. '(('' → logprob: -13.87686824798584
    9. '(([' → logprob: -15.25186824798584
    10. '[(' → logprob: -15.75186824798584

Token 152: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.0002627662615850568
    2. '(' → logprob: -8.500263214111328
    3. '-' → logprob: -10.125263214111328
    4. ' ' → logprob: -11.000263214111328
    5. ' (' → logprob: -14.375263214111328
    6. ')' → logprob: -14.500263214111328
    7. '(-' → logprob: -14.500263214111328
    8. ' -' → logprob: -15.375263214111328
    9. '   ' → logprob: -15.750263214111328
    10. '[' → logprob: -16.500263214111328

Token 153: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.0003520277969073504
    2. '0' → logprob: -8.375351905822754
    3. ' ,' → logprob: -9.125351905822754
    4. ',
' → logprob: -12.250351905822754
    5. ' ' → logprob: -12.500351905822754
    6. ')' → logprob: -12.875351905822754
    7. '1' → logprob: -14.750351905822754
    8. ',n' → logprob: -15.125351905822754
    9. '<|end|>' → logprob: -15.750351905822754
    10. '(' → logprob: -16.12535285949707

Token 154: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -4.060365608893335e-05
    2. ' ' → logprob: -10.125041007995605
    3. '1' → logprob: -15.500041007995605
    4. ')' → logprob: -16.75004005432129
    5. '(' → logprob: -16.87504005432129
    6. '))' → logprob: -16.87504005432129
    7. '   ' → logprob: -17.00004005432129
    8. '  ' → logprob: -17.25004005432129
    9. '-' → logprob: -17.93754005432129
    10. ',' → logprob: -18.12504005432129

Token 155: ',"' (ID: 3532)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',' → logprob: -0.15031515061855316
    2. '))' → logprob: -2.025315046310425
    3. ')' → logprob: -4.900315284729004
    4. '0' → logprob: -10.400315284729004
    5. ',None' → logprob: -11.025315284729004
    6. ' ,' → logprob: -11.275315284729004
    7. ',n' → logprob: -11.525315284729004
    8. ',true' → logprob: -11.775315284729004
    9. ' ))' → logprob: -11.775315284729004
    10. ',-' → logprob: -11.775315284729004

Token 156: '"))
' (ID: 10990)
  Prédit: '"))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"))' → logprob: -0.001632451661862433
    2. '"' → logprob: -6.876632213592529
    3. '")' → logprob: -7.626632213592529
    4. '"))
' → logprob: -9.626632690429688
    5. '))' → logprob: -10.876632690429688
    6. '",' → logprob: -11.501632690429688
    7. '")))' → logprob: -12.626632690429688
    8. ''))' → logprob: -12.751632690429688
    9. '"))
' → logprob: -13.126632690429688
    10. '">' → logprob: -13.376632690429688

Token 157: 'visited' (ID: 52453)
  Prédit: 'while'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'while' → logprob: -0.2506294846534729
    2. 'res' → logprob: -1.6256294250488281
    3. 'ans' → logprob: -3.875629425048828
    4. 'result' → logprob: -6.500629425048828
    5. 'max' → logprob: -6.875629425048828
    6. 'answer' → logprob: -7.125629425048828
    7. 'best' → logprob: -8.625629425048828
    8. 'visited' → logprob: -8.750629425048828
    9. 'dp' → logprob: -8.875629425048828
    10. 'found' → logprob: -9.375629425048828

Token 158: '=set' (ID: 166509)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.5857186317443848
    2. '=set' → logprob: -0.9607186317443848
    3. ' =' → logprob: -3.3357186317443848
    4. '=[[' → logprob: -3.8357186317443848
    5. '={}' → logprob: -6.585718631744385
    6. '={(' → logprob: -7.085718631744385
    7. '=[' → logprob: -7.585718631744385
    8. '=lambda' → logprob: -8.210718154907227
    9. '={
' → logprob: -8.710718154907227
    10. '={{' → logprob: -9.960718154907227

Token 159: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -2.868328920158092e-05
    2. '()
' → logprob: -11.500028610229492
    3. '(' → logprob: -12.375028610229492
    4. '((' → logprob: -12.625028610229492
    5. '()

' → logprob: -13.125028610229492
    6. '()\' → logprob: -13.250028610229492
    7. '().' → logprob: -13.375028610229492
    8. ' ()' → logprob: -13.750028610229492
    9. '()>' → logprob: -14.500028610229492
    10. '()
' → logprob: -14.500028610229492

Token 160: 'visited' (ID: 52453)
  Prédit: 'visited'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -0.28293994069099426
    2. 'while' → logprob: -1.4079399108886719
    3. '(' → logprob: -7.157939910888672
    4. ' visited' → logprob: -7.657939910888672
    5. ' while' → logprob: -8.157939910888672
    6. '```' → logprob: -9.532939910888672
    7. '(True' → logprob: -10.032939910888672
    8. '<|end|>' → logprob: -10.282939910888672
    9. '
' → logprob: -10.907939910888672
    10. 'While' → logprob: -10.907939910888672

Token 161: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -0.000577696890104562
    2. '.' → logprob: -8.500577926635742
    3. '=' → logprob: -8.750577926635742
    4. 'add' → logprob: -9.125577926635742
    5. '={(' → logprob: -10.000577926635742
    6. '().' → logprob: -10.750577926635742
    7. ' .' → logprob: -10.750577926635742
    8. '()' → logprob: -12.750577926635742
    9. '((' → logprob: -12.750577926635742
    10. '(' → logprob: -13.125577926635742

Token 162: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -9.372294698550832e-06
    2. '(' → logprob: -11.625009536743164
    3. ' ((' → logprob: -14.875009536743164
    4. '(((' → logprob: -17.250009536743164
    5. ' ' → logprob: -18.375009536743164
    6. '(
' → logprob: -19.125009536743164
    7. ' (' → logprob: -19.125009536743164
    8. '```' → logprob: -20.125009536743164
    9. '   ' → logprob: -20.750009536743164
    10. '(('' → logprob: -21.250009536743164

Token 163: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -9.014684110297821e-06
    2. '(' → logprob: -11.750008583068848
    3. ' ' → logprob: -13.750008583068848
    4. '00' → logprob: -18.625009536743164
    5. '   ' → logprob: -20.000009536743164
    6. '۰' → logprob: -20.000009536743164
    7. '０' → logprob: -20.500009536743164
    8. ' (' → logprob: -20.750009536743164
    9. '  ' → logprob: -21.250009536743164
    10. '000' → logprob: -21.500009536743164

Token 164: ',' (ID: 11)
  Prédit: ','
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -2.47495681833243e-05
    2. ' ,' → logprob: -10.875024795532227
    3. '0' → logprob: -12.250024795532227
    4. ',
' → logprob: -14.875024795532227
    5. ' ' → logprob: -15.375024795532227
    6. '<|end|>' → logprob: -15.375024795532227
    7. ')' → logprob: -16.250024795532227
    8. '‌,' → logprob: -18.500024795532227
    9. '```' → logprob: -18.875024795532227
    10. '1' → logprob: -18.875024795532227

Token 165: '0' (ID: 15)
  Prédit: '0'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -2.339278580620885e-06
    2. ' ' → logprob: -13.000001907348633
    3. '۰' → logprob: -19.750001907348633
    4. '<|end|>' → logprob: -19.875001907348633
    5. '   ' → logprob: -20.500001907348633
    6. ')' → logprob: -20.500001907348633
    7. '1' → logprob: -20.875001907348633
    8. '  ' → logprob: -21.062501907348633
    9. '00' → logprob: -21.437501907348633
    10. '
' → logprob: -21.875001907348633

Token 166: '))
' (ID: 2210)
  Prédit: '))'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -0.006061398424208164
    2. ')' → logprob: -5.131061553955078
    3. ',' → logprob: -9.756061553955078
    4. ',"' → logprob: -9.756061553955078
    5. ' ))' → logprob: -12.131061553955078
    6. '))
' → logprob: -12.506061553955078
    7. ')))' → logprob: -13.131061553955078
    8. '"))' → logprob: -13.256061553955078
    9. '),"' → logprob: -14.131061553955078
    10. ')")' → logprob: -14.631061553955078

Token 167: 'while' (ID: 7032)
  Prédit: 'res'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'res' → logprob: -0.3402000665664673
    2. 'while' → logprob: -1.4652000665664673
    3. 'ans' → logprob: -2.9651999473571777
    4. 'max' → logprob: -5.965199947357178
    5. 'answer' → logprob: -6.590199947357178
    6. 'result' → logprob: -7.090199947357178
    7. 'best' → logprob: -7.715199947357178
    8. 'length' → logprob: -8.465200424194336
    9. '```' → logprob: -8.465200424194336
    10. 'found' → logprob: -9.590200424194336

Token 168: ' dq' (ID: 164235)
  Prédit: 'dq'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dq' → logprob: -0.12787380814552307
    2. ' dq' → logprob: -2.1278738975524902
    3. 'len' → logprob: -7.37787389755249
    4. ' len' → logprob: -8.252873420715332
    5. 'True' → logprob: -10.377873420715332
    6. '(d' → logprob: -11.002873420715332
    7. '(len' → logprob: -12.127873420715332
    8. 'd' → logprob: -12.502873420715332
    9. '(' → logprob: -14.502873420715332
    10. 'deque' → logprob: -14.877873420715332

Token 169: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.000700045726262033
    2. ':
' → logprob: -7.500699996948242
    3. 'and' → logprob: -10.500699996948242
    4. '>:' → logprob: -10.500699996948242
    5. '.pop' → logprob: -10.625699996948242
    6. '):' → logprob: -11.125699996948242
    7. '.' → logprob: -11.125699996948242
    8. '.p' → logprob: -12.500699996948242
    9. ' and' → logprob: -12.625699996948242
    10. ':not' → logprob: -12.625699996948242

Token 170: '   ' (ID: 271)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' → logprob: -0.4956558644771576
    2. '   ' → logprob: -1.24565589427948
    3. 'x' → logprob: -2.4956557750701904
    4. ' i' → logprob: -4.2456560134887695
    5. 'u' → logprob: -5.8706560134887695
    6. 'p' → logprob: -6.7456560134887695
    7. 'q' → logprob: -7.2456560134887695
    8. ' x' → logprob: -7.6206560134887695
    9. 'a' → logprob: -8.12065601348877
    10. 'v' → logprob: -8.49565601348877

Token 171: ' i' (ID: 575)
  Prédit: 'i'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'i' (adapté à ' i') → logprob: -0.254384845495224
    2. 'x' → logprob: -1.5043848752975464
    3. 'q' → logprob: -7.379384994506836
    4. 'p' → logprob: -8.004384994506836
    5. 'u' → logprob: -8.254384994506836
    6. 'cur' → logprob: -8.254384994506836
    7. '(i' → logprob: -8.754384994506836
    8. 'pos' → logprob: -8.879384994506836
    9. ' i' → logprob: -8.879384994506836
    10. 'a' → logprob: -9.129384994506836

Token 172: ',j' (ID: 22712)
  Prédit: ',j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',j' → logprob: -0.03805927932262421
    2. ',' → logprob: -3.2880592346191406
    3. ',d' → logprob: -12.16305923461914
    4. ',q' → logprob: -13.03805923461914
    5. ' ,' → logprob: -13.16305923461914
    6. ',v' → logprob: -13.78805923461914
    7. ',n' → logprob: -14.16305923461914
    8. ',k' → logprob: -14.16305923461914
    9. ',c' → logprob: -14.16305923461914
    10. ',p' → logprob: -14.28805923461914

Token 173: ',p' (ID: 14835)
  Prédit: ',k'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ',k' → logprob: -0.5862098336219788
    2. ',' → logprob: -0.8362098336219788
    3. ',j' → logprob: -4.711209774017334
    4. ',d' → logprob: -7.586209774017334
    5. ',c' → logprob: -7.836209774017334
    6. ',q' → logprob: -9.211210250854492
    7. '=' → logprob: -9.461210250854492
    8. ',i' → logprob: -9.711210250854492
    9. ',l' → logprob: -10.836210250854492
    10. ' ,' → logprob: -11.836210250854492

Token 174: '=d' (ID: 56413)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.0556286945939064
    2. '=d' → logprob: -2.930628776550293
    3. ' =' → logprob: -7.430628776550293
    4. ',d' → logprob: -9.430628776550293
    5. '=q' → logprob: -10.430628776550293
    6. '=p' → logprob: -11.180628776550293
    7. '=i' → logprob: -11.555628776550293
    8. '=
' → logprob: -12.430628776550293
    9. ',' → logprob: -12.430628776550293
    10. '=

' → logprob: -13.430628776550293

Token 175: 'q' (ID: 80)
  Prédit: 'q'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'q' → logprob: -5.2524021157296374e-05
    2. 'p' → logprob: -10.875052452087402
    3. 'e' → logprob: -11.125052452087402
    4. 'que' → logprob: -12.250052452087402
    5. 'eq' → logprob: -12.750052452087402
    6. '	q' → logprob: -13.625052452087402
    7. '.q' → logprob: -13.875052452087402
    8. 'qs' → logprob: -14.125052452087402
    9. 'queue' → logprob: -14.250052452087402
    10. '[' → logprob: -14.375052452087402

Token 176: '.p' (ID: 1201)
  Prédit: '.p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.p' → logprob: -0.0011916564544662833
    2. '.pop' → logprob: -7.25119161605835
    3. '=' → logprob: -7.75119161605835
    4. 'p' → logprob: -10.251192092895508
    5. '=p' → logprob: -11.251192092895508
    6. '.' → logprob: -13.501192092895508
    7. 'pop' → logprob: -13.626192092895508
    8. ',p' → logprob: -16.626192092895508
    9. ' p' → logprob: -17.001192092895508
    10. ' =' → logprob: -17.251192092895508

Token 177: 'opleft' (ID: 182170)
  Prédit: 'opleft'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'opleft' → logprob: -0.00342211639508605
    2. 'op' → logprob: -5.753422260284424
    3. 'ople' → logprob: -9.003421783447266
    4. 'p' → logprob: -9.378421783447266
    5. 'opl' → logprob: -10.628421783447266
    6. 'pop' → logprob: -11.878421783447266
    7. 'ple' → logprob: -12.378421783447266
    8. 'oplevel' → logprob: -15.128421783447266
    9. 'pc' → logprob: -15.253421783447266
    10. '```' → logprob: -15.253421783447266

Token 178: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.00048107770271599293
    2. '(' → logprob: -8.375480651855469
    3. '()
' → logprob: -8.750480651855469
    4. '(),' → logprob: -9.500480651855469
    5. '(i' → logprob: -11.250480651855469
    6. ' ()' → logprob: -13.500480651855469
    7. '()

' → logprob: -14.250480651855469
    8. '())' → logprob: -14.750480651855469
    9. '();' → logprob: -14.750480651855469
    10. '()
' → logprob: -15.000480651855469

Token 179: '   ' (ID: 271)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.0012182132340967655
    2. 'for' → logprob: -7.251218318939209
    3. '   ' → logprob: -7.626218318939209
    4. ' if' → logprob: -10.87621784210205
    5. 'print' → logprob: -14.37621784210205
    6. '	if' → logprob: -15.00121784210205
    7. '#' → logprob: -15.25121784210205
    8. '       ' → logprob: -15.75121784210205
    9. ' for' → logprob: -16.501218795776367
    10. '```' → logprob: -16.626218795776367

Token 180: ' for' (ID: 395)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' → logprob: -0.16026383638381958
    2. 'for' (adapté à ' for') → logprob: -1.9102637767791748
    3. 'found' → logprob: -10.410264015197754
    4. 'res' → logprob: -13.035264015197754
    5. 'print' → logprob: -13.410264015197754
    6. '   ' → logprob: -13.410264015197754
    7. ' if' → logprob: -13.535264015197754
    8. '#' → logprob: -14.160264015197754
    9. ' for' → logprob: -14.535264015197754
    10. 'ans' → logprob: -15.035264015197754

Token 181: ' c' (ID: 274)
  Prédit: 'c'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'c' → logprob: -0.0702720656991005
    2. ' c' → logprob: -2.6952719688415527
    3. 'b' → logprob: -8.195272445678711
    4. 'x' → logprob: -10.820272445678711
    5. 'd' → logprob: -11.445272445678711
    6. ' b' → logprob: -11.570272445678711
    7. 'bit' → logprob: -12.445272445678711
    8. 'digit' → logprob: -12.570272445678711
    9. ' bit' → logprob: -13.320272445678711
    10. 'k' → logprob: -13.445272445678711

Token 182: ' in' (ID: 306)
  Prédit: ' in'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' in' → logprob: -0.08907829225063324
    2. 'in' → logprob: -2.464078187942505
    3. ' ' → logprob: -8.964077949523926
    4. '0' → logprob: -12.589077949523926
    5. ')' → logprob: -12.839077949523926
    6. ' 
' → logprob: -13.964077949523926
    7. ' )' → logprob: -14.464077949523926
    8. '	in' → logprob: -14.464077949523926
    9. ',' → logprob: -14.964077949523926
    10. 's' → logprob: -15.464077949523926

Token 183: ' "' (ID: 392)
  Prédit: 'range'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'range' → logprob: -0.21067355573177338
    2. ' range' → logprob: -1.9606735706329346
    3. '[' → logprob: -3.2106735706329346
    4. '0' → logprob: -4.9606733322143555
    5. '(' → logprob: -6.3356733322143555
    6. ' ' → logprob: -10.460673332214355
    7. ' [' → logprob: -11.085673332214355
    8. '"' → logprob: -11.335673332214355
    9. '2' → logprob: -11.460673332214355
    10. '(range' → logprob: -11.835673332214355

Token 184: '0' (ID: 15)
  Prédit: '01'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '01' → logprob: -2.45848218582978e-06
    2. '10' → logprob: -13.62500286102295
    3. '0' → logprob: -14.12500286102295
    4. '"' → logprob: -15.12500286102295
    5. ' ' → logprob: -15.37500286102295
    6. '
' → logprob: -17.750001907348633
    7. '1' → logprob: -18.625001907348633
    8. '

' → logprob: -19.625001907348633
    9. ''' → logprob: -20.375001907348633
    10. '012' → logprob: -21.250001907348633

Token 185: '","' (ID: 4294)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0004015945305582136
    2. '"' → logprob: -8.000401496887207
    3. ' ' → logprob: -10.125401496887207
    4. '12' → logprob: -10.750401496887207
    5. '123' → logprob: -14.000401496887207
    6. '":' → logprob: -14.125401496887207
    7. '","' → logprob: -14.375401496887207
    8. '10' → logprob: -14.625401496887207
    9. '",' → logprob: -15.000401496887207
    10. '
' → logprob: -15.125401496887207

Token 186: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '"' → logprob: -14.250000953674316
    3. ' ' → logprob: -14.875000953674316
    4. '")' → logprob: -20.875001907348633
    5. '","' → logprob: -22.375001907348633
    6. '１' → logprob: -22.625001907348633
    7. '""' → logprob: -22.875001907348633
    8. '">' → logprob: -22.875001907348633
    9. '۱' → logprob: -22.875001907348633
    10. '' → logprob: -23.125001907348633

Token 187: '":
' (ID: 9213)
  Prédit: '":
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '":
' → logprob: -0.5835321545600891
    2. '":' → logprob: -0.8335321545600891
    3. '"' → logprob: -4.958532333374023
    4. '":
' → logprob: -8.583532333374023
    5. '"):
' → logprob: -8.708532333374023
    6. ' "' → logprob: -9.583532333374023
    7. '):
' → logprob: -10.458532333374023
    8. '"]:
' → logprob: -10.583532333374023
    9. '":

' → logprob: -10.583532333374023
    10. ':' → logprob: -11.958532333374023

Token 188: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.1054619550704956
    2. ':' → logprob: -3.105462074279785
    3. '   ' → logprob: -3.105462074279785
    4. '        
' → logprob: -5.730462074279785
    5. ':
' → logprob: -6.230462074279785
    6. ' :' → logprob: -6.480462074279785
    7. '    ' → logprob: -6.980462074279785
    8. '    
' → logprob: -7.230462074279785
    9. ' ' → logprob: -7.855462074279785
    10. ' :
' → logprob: -8.230462074279785

Token 189: ' ni' (ID: 2565)
  Prédit: ' ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' ni' → logprob: -0.17242255806922913
    2. 'ni' (adapté à ' ni') → logprob: -2.0474226474761963
    3. ' next' → logprob: -5.797422409057617
    4. 'ci' → logprob: -5.797422409057617
    5. 'i' → logprob: -5.922422409057617
    6. '   ' → logprob: -5.922422409057617
    7. 'x' → logprob: -6.047422409057617
    8. ' ci' → logprob: -6.172422409057617
    9. 'next' → logprob: -6.297422409057617
    10. '```' → logprob: -6.672422409057617

Token 190: '=' (ID: 28)
  Prédit: ',n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.37220755219459534
    2. ',' → logprob: -1.497207522392273
    3. '=' → logprob: -3.2472076416015625
    4. ' =' → logprob: -3.8722076416015625
    5. ',i' → logprob: -4.4972076416015625
    6. '=i' → logprob: -4.9972076416015625
    7. '=n' → logprob: -5.7472076416015625
    8. ' ,' → logprob: -5.7472076416015625
    9. ',next' → logprob: -6.7472076416015625
    10. ',q' → logprob: -7.2472076416015625

Token 191: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -0.0002613358374219388
    2. ' next' → logprob: -8.250261306762695
    3. '[next' → logprob: -17.125261306762695
    4. '(next' → logprob: -19.125261306762695
    5. '	next' → logprob: -20.875261306762695
    6. '_next' → logprob: -21.500261306762695
    7. ',next' → logprob: -22.375261306762695
    8. '   ' → logprob: -22.500261306762695
    9. 'Next' → logprob: -22.500261306762695
    10. '
' → logprob: -22.750261306762695

Token 192: '_s' (ID: 1278)
  Prédit: '_s'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_s' → logprob: -1.9361264946837764e-07
    2. 's' → logprob: -16.75
    3. '_' → logprob: -17.375
    4. '_t' → logprob: -19.75
    5. ' _' → logprob: -20.125
    6. '[_' → logprob: -20.25
    7. '[' → logprob: -20.375
    8. '_c' → logprob: -20.5
    9. '_i' → logprob: -21.125
    10. ''_' → logprob: -21.125

Token 193: '[i' (ID: 1768)
  Prédit: '[i'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[i' → logprob: -9.088346359931165e-07
    2. 'i' → logprob: -15.000000953674316
    3. '```' → logprob: -16.125
    4. '   ' → logprob: -16.5
    5. ' [' → logprob: -16.625
    6. '[' → logprob: -16.625
    7. '[
' → logprob: -17.125
    8. '
' → logprob: -17.25
    9. '[I' → logprob: -18.0
    10. ' ' → logprob: -18.0

Token 194: '][' (ID: 2696)
  Prédit: ']['
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '][' → logprob: -0.03376118838787079
    2. '[int' → logprob: -3.4087612628936768
    3. 'int' → logprob: -9.533761024475098
    4. '[' → logprob: -10.408761024475098
    5. ' ][' → logprob: -12.408761024475098
    6. ']' → logprob: -13.283761024475098
    7. ']int' → logprob: -13.783761024475098
    8. '"][' → logprob: -14.033761024475098
    9. ',int' → logprob: -14.033761024475098
    10. '[Int' → logprob: -14.158761024475098

Token 195: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -3.128163257315464e-07
    2. 'c' → logprob: -16.125
    3. ' int' → logprob: -16.25
    4. '[int' → logprob: -18.75
    5. '0' → logprob: -19.0
    6. '1' → logprob: -19.875
    7. '   ' → logprob: -20.0
    8. '<int' → logprob: -20.125
    9. '
' → logprob: -20.625
    10. '(int' → logprob: -21.0

Token 196: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -0.0002120038407156244
    2. 'c' → logprob: -8.500211715698242
    3. '(' → logprob: -11.750211715698242
    4. ')c' → logprob: -14.500211715698242
    5. '(
' → logprob: -16.500211715698242
    6. ' (' → logprob: -17.500211715698242
    7. ' c' → logprob: -17.875211715698242
    8. ']' → logprob: -18.875211715698242
    9. '©' → logprob: -18.875211715698242
    10. '	c' → logprob: -19.000211715698242

Token 197: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.02068786881864071
    2. ')]
' → logprob: -3.8956878185272217
    3. ')][' → logprob: -9.6456880569458
    4. ')]
' → logprob: -10.2706880569458
    5. ')]

' → logprob: -11.2706880569458
    6. ')],' → logprob: -11.3956880569458
    7. ')' → logprob: -11.8956880569458
    8. ' )' → logprob: -12.6456880569458
    9. ']' → logprob: -12.6456880569458
    10. '])' → logprob: -13.5206880569458

Token 198: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.04570759832859039
    2. ',n' → logprob: -3.6707077026367188
    3. 'nj' → logprob: -4.420707702636719
    4. ',' → logprob: -5.670707702636719
    5. 'if' → logprob: -6.295707702636719
    6. ' if' → logprob: -7.295707702636719
    7. 'n' → logprob: -8.045707702636719
    8. '        
' → logprob: -8.295707702636719
    9. '<|end|>' → logprob: -8.545707702636719
    10. ' nj' → logprob: -8.795707702636719

Token 199: ' nj' (ID: 8979)
  Prédit: 'nj'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' (adapté à ' nj') → logprob: -0.0022763425949960947
    2. ' nj' → logprob: -7.127276420593262
    3. ',' → logprob: -7.377276420593262
    4. ',n' → logprob: -7.377276420593262
    5. '
' → logprob: -9.002276420593262
    6. 'n' → logprob: -10.127276420593262
    7. 'if' → logprob: -11.127276420593262
    8. ' 
' → logprob: -11.377276420593262
    9. '\n' → logprob: -11.877276420593262
    10. 'nt' → logprob: -12.252276420593262

Token 200: '=' (ID: 28)
  Prédit: '='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -3.7385154428193346e-05
    2. ' =' → logprob: -10.75003719329834
    3. '[next' → logprob: -11.37503719329834
    4. ']=' → logprob: -13.12503719329834
    5. '=
' → logprob: -14.12503719329834
    6. 'next' → logprob: -14.50003719329834
    7. ',next' → logprob: -15.12503719329834
    8. ' next' → logprob: -15.25003719329834
    9. '(next' → logprob: -15.50003719329834
    10. ']' → logprob: -15.50003719329834

Token 201: 'next' (ID: 7311)
  Prédit: 'next'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'next' → logprob: -7.941850526549388e-06
    2. ' next' → logprob: -11.750007629394531
    3. '[next' → logprob: -17.75000762939453
    4. '(next' → logprob: -19.37500762939453
    5. '	next' → logprob: -20.37500762939453
    6. '
' → logprob: -21.12500762939453
    7. '.next' → logprob: -21.62500762939453
    8. '   ' → logprob: -21.62500762939453
    9. '_next' → logprob: -22.75000762939453
    10. ',next' → logprob: -23.37500762939453

Token 202: '_t' (ID: 838)
  Prédit: '_t'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_t' → logprob: -0.0003022153687197715
    2. 't' → logprob: -8.1253023147583
    3. '[j' → logprob: -13.2503023147583
    4. 'j' → logprob: -13.2503023147583
    5. '_j' → logprob: -13.7503023147583
    6. '[' → logprob: -14.7503023147583
    7. '[t' → logprob: -15.0003023147583
    8. '```' → logprob: -15.5003023147583
    9. 'next' → logprob: -15.8753023147583
    10. '   ' → logprob: -16.625301361083984

Token 203: '[j' (ID: 7895)
  Prédit: '[j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[j' → logprob: -0.0002314303710591048
    2. 'j' → logprob: -8.375231742858887
    3. '[' → logprob: -14.750231742858887
    4. '```' → logprob: -16.12523078918457
    5. ' [' → logprob: -16.50023078918457
    6. '   ' → logprob: -16.50023078918457
    7. '[i' → logprob: -17.50023078918457
    8. '[
' → logprob: -17.75023078918457
    9. '][' → logprob: -17.87523078918457
    10. '(j' → logprob: -18.00023078918457

Token 204: '][' (ID: 2696)
  Prédit: '[int'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '[int' → logprob: -0.0062964605167508125
    2. '][' → logprob: -5.131296634674072
    3. '[' → logprob: -8.256296157836914
    4. 'int' → logprob: -9.256296157836914
    5. ')[' → logprob: -13.131296157836914
    6. '<int' → logprob: -13.256296157836914
    7. '[Int' → logprob: -13.256296157836914
    8. ']int' → logprob: -13.631296157836914
    9. '[ind' → logprob: -14.256296157836914
    10. ''][' → logprob: -14.381296157836914

Token 205: 'int' (ID: 491)
  Prédit: 'int'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'int' → logprob: -1.0280383548888494e-06
    2. '[int' → logprob: -14.250000953674316
    3. ' int' → logprob: -15.125000953674316
    4. '<int' → logprob: -16.750001907348633
    5. '(int' → logprob: -18.250001907348633
    6. '=int' → logprob: -19.250001907348633
    7. ']int' → logprob: -19.375001907348633
    8. '
' → logprob: -20.500001907348633
    9. ':int' → logprob: -20.625001907348633
    10. 'intval' → logprob: -20.750001907348633

Token 206: '(c' (ID: 2410)
  Prédit: '(c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(c' → logprob: -5.872261317563243e-05
    2. 'c' → logprob: -9.750059127807617
    3. '(' → logprob: -15.625059127807617
    4. '©' → logprob: -16.375059127807617
    5. ')c' → logprob: -17.000059127807617
    6. ' (' → logprob: -17.250059127807617
    7. '```' → logprob: -17.625059127807617
    8. ')' → logprob: -18.125059127807617
    9. 'a' → logprob: -18.125059127807617
    10. ']' → logprob: -18.250059127807617

Token 207: ')]
' (ID: 11587)
  Prédit: ')]'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')]' → logprob: -0.0025917079765349627
    2. ')]
' → logprob: -6.002591609954834
    3. ']' → logprob: -9.252592086791992
    4. '])' → logprob: -12.252592086791992
    5. ')' → logprob: -12.502592086791992
    6. '       ' → logprob: -12.752592086791992
    7. ']]' → logprob: -12.877592086791992
    8. '")]' → logprob: -13.752592086791992
    9. '')]' → logprob: -13.877592086791992
    10. ')]

' → logprob: -13.877592086791992

Token 208: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.0036361846141517162
    2. '
' → logprob: -6.253636360168457
    3. '<|end|>' → logprob: -7.253636360168457
    4. 'if' → logprob: -7.753636360168457
    5. ' if' → logprob: -8.503636360168457
    6. '        
' → logprob: -8.753636360168457
    7. '   ' → logprob: -10.253636360168457
    8. '  
' → logprob: -10.378636360168457
    9. '<|end|>' → logprob: -10.628636360168457
    10. ',' → logprob: -10.753636360168457

Token 209: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.13631664216518402
    2. '       ' → logprob: -2.6363165378570557
    3. ' if' → logprob: -2.8863165378570557
    4. '        
' → logprob: -12.011316299438477
    5. ' ' → logprob: -12.511316299438477
    6. 'If' → logprob: -12.636316299438477
    7. ')' → logprob: -12.636316299438477
    8. '	if' → logprob: -13.136316299438477
    9. ';if' → logprob: -13.136316299438477
    10. '   ' → logprob: -13.386316299438477

Token 210: ' ni' (ID: 2565)
  Prédit: 'ni'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -0.0031947086099535227
    2. ' ni' → logprob: -5.753194808959961
    3. '(' → logprob: -11.253194808959961
    4. '   ' → logprob: -12.878194808959961
    5. 'nj' → logprob: -14.878194808959961
    6. ' ' → logprob: -15.378194808959961
    7. ' (' → logprob: -15.378194808959961
    8. 'n' → logprob: -16.37819480895996
    9. '0' → logprob: -16.37819480895996
    10. 'min' → logprob: -16.62819480895996

Token 211: '==' (ID: 560)
  Prédit: '<n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '<n' → logprob: -0.5142289996147156
    2. '!=' → logprob: -1.5142290592193604
    3. '<' → logprob: -2.2642290592193604
    4. '<m' → logprob: -2.8892290592193604
    5. '==' → logprob: -4.264228820800781
    6. '<len' → logprob: -5.389228820800781
    7. ' !=' → logprob: -6.639228820800781
    8. 'n' → logprob: -6.889228820800781
    9. ' <' → logprob: -7.764228820800781
    10. ' ==' → logprob: -9.014228820800781

Token 212: 'n' (ID: 77)
  Prédit: 'n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'n' → logprob: -3.690834273584187e-05
    2. ' n' → logprob: -10.25003719329834
    3. 's' → logprob: -14.50003719329834
    4. '   ' → logprob: -15.25003719329834
    5. '[n' → logprob: -16.000036239624023
    6. ' ' → logprob: -16.000036239624023
    7. '-' → logprob: -16.500036239624023
    8. '  ' → logprob: -16.500036239624023
    9. '<n' → logprob: -17.125036239624023
    10. '	n' → logprob: -17.250036239624023

Token 213: ' or' (ID: 503)
  Prédit: ' or'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' or' → logprob: -0.04897894337773323
    2. 'or' → logprob: -3.0489790439605713
    3. ' and' → logprob: -8.173978805541992
    4. 'and' → logprob: -9.298978805541992
    5. '<|end|>' → logprob: -11.923978805541992
    6. '	or' → logprob: -12.173978805541992
    7. ':' → logprob: -12.548978805541992
    8. ' ' → logprob: -14.048978805541992
    9. 'continue' → logprob: -14.673978805541992
    10. '<|end|>' → logprob: -14.798978805541992

Token 214: ' nj' (ID: 8979)
  Prédit: 'nj'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'nj' → logprob: -0.10021066665649414
    2. ' nj' → logprob: -2.350210666656494
    3. '   ' → logprob: -13.350210189819336
    4. ' ' → logprob: -13.975210189819336
    5. '
' → logprob: -14.475210189819336
    6. 'n' → logprob: -14.600210189819336
    7. ' ' → logprob: -15.725210189819336
    8. '    ' → logprob: -15.850210189819336
    9. '  ' → logprob: -16.850210189819336
    10. 'Nj' → logprob: -17.100210189819336

Token 215: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.00043281487887725234
    2. ' ==' → logprob: -7.750432968139648
    3. '==
' → logprob: -13.500432968139648
    4. ']==' → logprob: -14.875432968139648
    5. ')==' → logprob: -15.125432968139648
    6. '==(' → logprob: -17.00043296813965
    7. '()==' → logprob: -17.12543296813965
    8. '===' → logprob: -17.50043296813965
    9. '=' → logprob: -17.62543296813965
    10. '==-' → logprob: -17.62543296813965

Token 216: 'm' (ID: 76)
  Prédit: 'm'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'm' → logprob: -3.531315314830863e-06
    2. ' m' → logprob: -12.625003814697266
    3. '   ' → logprob: -16.250003814697266
    4. 'n' → logprob: -17.500003814697266
    5. ' ' → logprob: -17.500003814697266
    6. '
' → logprob: -17.500003814697266
    7. '<|end|>' → logprob: -18.500003814697266
    8. '	m' → logprob: -18.875003814697266
    9. '    ' → logprob: -18.875003814697266
    10. '  ' → logprob: -19.000003814697266

Token 217: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.031086118891835213
    2. ':
' → logprob: -3.7810862064361572
    3. '           ' → logprob: -4.906085968017578
    4. ' continue' → logprob: -8.281085968017578
    5. 'continue' → logprob: -9.031085968017578
    6. '       ' → logprob: -11.406085968017578
    7. ':return' → logprob: -12.031085968017578
    8. '	continue' → logprob: -12.156085968017578
    9. ' continues' → logprob: -12.656085968017578
    10. ' or' → logprob: -12.906085968017578

Token 218: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.006934997625648975
    2. ' continue' → logprob: -5.256935119628906
    3. 'continue' → logprob: -6.381935119628906
    4. '               ' → logprob: -13.631935119628906
    5. ' continues' → logprob: -13.756935119628906
    6. '	continue' → logprob: -14.006935119628906
    7. '   ' → logprob: -14.006935119628906
    8. '_continue' → logprob: -14.006935119628906
    9. '
' → logprob: -14.131935119628906
    10. '       ' → logprob: -14.256935119628906

Token 219: ' print' (ID: 2123)
  Prédit: 'print'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'print' (adapté à ' print') → logprob: -0.37117189168930054
    2. ' print' → logprob: -1.8711719512939453
    3. 'continue' → logprob: -2.6211719512939453
    4. ' continue' → logprob: -3.4961719512939453
    5. ' if' → logprob: -3.6211719512939453
    6. 'if' → logprob: -4.371171951293945
    7. '   ' → logprob: -4.621171951293945
    8. '           ' → logprob: -5.746171951293945
    9. '       ' → logprob: -8.246171951293945
    10. '               ' → logprob: -8.371171951293945

Token 220: '(p' (ID: 2407)
  Prédit: '(p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(p' → logprob: -0.012468920089304447
    2. 'p' → logprob: -4.6374688148498535
    3. '(' → logprob: -6.2624688148498535
    4. '(len' → logprob: -7.3874688148498535
    5. '(
' → logprob: -9.262469291687012
    6. '((' → logprob: -10.387469291687012
    7. 'len' → logprob: -10.512469291687012
    8. '(-' → logprob: -11.637469291687012
    9. '()' → logprob: -11.762469291687012
    10. ' (' → logprob: -12.512469291687012

Token 221: '+c' (ID: 114860)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.00944780744612217
    2. '+' → logprob: -4.8844475746154785
    3. '+c' → logprob: -6.3844475746154785
    4. ')
' → logprob: -9.384448051452637
    5. ')c' → logprob: -10.259448051452637
    6. '+)' → logprob: -10.634448051452637
    7. ')+' → logprob: -13.009448051452637
    8. ' +' → logprob: -13.134448051452637
    9. ')return' → logprob: -13.884448051452637
    10. ' )' → logprob: -14.259448051452637

Token 222: ')
' (ID: 446)
  Prédit: ')
'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')
' → logprob: -0.029806962236762047
    2. ')' → logprob: -3.5298068523406982
    3. ')
' → logprob: -9.904807090759277
    4. '               ' → logprob: -13.529807090759277
    5. ' )
' → logprob: -13.529807090759277
    6. ')return' → logprob: -13.529807090759277
    7. ')

' → logprob: -13.654807090759277
    8. '           ' → logprob: -15.154807090759277
    9. '   ' → logprob: -15.279807090759277
    10. ');' → logprob: -15.654807090759277

Token 223: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.001409282092936337
    2. '            
' → logprob: -7.62640905380249
    3. '
' → logprob: -7.75140905380249
    4. 'exit' → logprob: -8.876409530639648
    5. '               ' → logprob: -9.001409530639648
    6. '                   ' → logprob: -9.626409530639648
    7. 'return' → logprob: -9.876409530639648
    8. '		' → logprob: -11.376409530639648
    9. '                
' → logprob: -11.376409530639648
    10. '    
' → logprob: -11.501409530639648

Token 224: ' exit' (ID: 10654)
  Prédit: 'exit'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'exit' (adapté à ' exit') → logprob: -0.001437493017874658
    2. 'break' → logprob: -6.751437664031982
    3. ' exit' → logprob: -9.001437187194824
    4. '
' → logprob: -10.251437187194824
    5. 'quit' → logprob: -10.251437187194824
    6. 'import' → logprob: -10.376437187194824
    7. '   ' → logprob: -10.376437187194824
    8. '	exit' → logprob: -12.126437187194824
    9. '    
' → logprob: -13.376437187194824
    10. ' ' → logprob: -13.376437187194824

Token 225: '()
' (ID: 1234)
  Prédit: '()'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '()' → logprob: -0.0031962506473064423
    2. '(' → logprob: -5.7531962394714355
    3. '()
' → logprob: -11.378196716308594
    4. '()(' → logprob: -12.753196716308594
    5. '()`' → logprob: -14.128196716308594
    6. ' ()' → logprob: -14.253196716308594
    7. '()\' → logprob: -14.378196716308594
    8. '())' → logprob: -14.753196716308594
    9. '()=>' → logprob: -14.878196716308594
    10. '()]' → logprob: -15.003196716308594

Token 226: '       ' (ID: 309)
  Prédit: '       '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '       ' → logprob: -0.00018863992590922862
    2. 'dq' → logprob: -8.750188827514648
    3. '   ' → logprob: -11.875188827514648
    4. 'd' → logprob: -11.875188827514648
    5. '```' → logprob: -12.000188827514648
    6. '           ' → logprob: -12.625188827514648
    7. 'if' → logprob: -13.625188827514648
    8. ',d' → logprob: -13.625188827514648
    9. 'else' → logprob: -13.750188827514648
    10. '      ' → logprob: -14.625188827514648

Token 227: ' if' (ID: 538)
  Prédit: 'if'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'if' (adapté à ' if') → logprob: -0.0032805022783577442
    2. 'dq' → logprob: -6.5032806396484375
    3. 'state' → logprob: -7.2532806396484375
    4. 'tuple' → logprob: -8.503280639648438
    5. '   ' → logprob: -8.753280639648438
    6. 'ni' → logprob: -8.878280639648438
    7. '       ' → logprob: -9.378280639648438
    8. 'key' → logprob: -9.378280639648438
    9. 'next' → logprob: -9.753280639648438
    10. 'else' → logprob: -9.753280639648438

Token 228: ' (' (ID: 350)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0006578696193173528
    2. ' (' → logprob: -7.37565803527832
    3. '(n' → logprob: -10.50065803527832
    4. '(not' → logprob: -12.75065803527832
    5. '   ' → logprob: -14.50065803527832
    6. 'ni' → logprob: -15.50065803527832
    7. ' not' → logprob: -16.37565803527832
    8. '(next' → logprob: -17.00065803527832
    9. '(nx' → logprob: -17.00065803527832
    10. ' ' → logprob: -17.25065803527832

Token 229: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -1.3306015716807451e-05
    2. ' ni' → logprob: -11.25001335144043
    3. '   ' → logprob: -15.87501335144043
    4. '(' → logprob: -16.50001335144043
    5. '-ni' → logprob: -17.87501335144043
    6. ' ' → logprob: -18.12501335144043
    7. '
' → logprob: -18.25001335144043
    8. '     ' → logprob: -18.25001335144043
    9. 'ny' → logprob: -18.62501335144043
    10. '  ' → logprob: -18.87501335144043

Token 230: '+' (ID: 10)
  Prédit: ',n'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.46119681000709534
    2. ',' → logprob: -1.211196780204773
    3. '+' → logprob: -3.3361968994140625
    4. ',j' → logprob: -3.3361968994140625
    5. ',
' → logprob: -8.961196899414062
    6. ' ,' → logprob: -9.211196899414062
    7. ',next' → logprob: -9.211196899414062
    8. ',d' → logprob: -10.586196899414062
    9. ',m' → logprob: -10.836196899414062
    10. ',c' → logprob: -10.836196899414062

Token 231: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.981667537620524e-06
    2. ' ' → logprob: -13.250001907348633
    3. ',' → logprob: -16.625001907348633
    4. '
' → logprob: -19.000001907348633
    5. '   ' → logprob: -20.500001907348633
    6. ',j' → logprob: -21.500001907348633
    7. '```' → logprob: -21.750001907348633
    8. '+' → logprob: -21.750001907348633
    9. ',n' → logprob: -21.875001907348633
    10. ' ,' → logprob: -22.000001907348633

Token 232: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.023298466578125954
    2. ',' → logprob: -3.773298501968384
    3. ',j' → logprob: -10.148298263549805
    4. ' ,' → logprob: -11.648298263549805
    5. ',
' → logprob: -13.398298263549805
    6. 'nj' → logprob: -13.898298263549805
    7. '   ' → logprob: -14.523298263549805
    8. ',m' → logprob: -14.523298263549805
    9. ',N' → logprob: -15.023298263549805
    10. ',(' → logprob: -15.398298263549805

Token 233: 'j' (ID: 73)
  Prédit: 'j'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'j' → logprob: -5.200166469876422e-06
    2. 'w' → logprob: -12.875004768371582
    3. ' j' → logprob: -13.000004768371582
    4. '_j' → logprob: -16.1250057220459
    5. ',j' → logprob: -16.2500057220459
    6. '+' → logprob: -17.0000057220459
    7. '+j' → logprob: -17.1250057220459
    8. 'ext' → logprob: -17.3750057220459
    9. '
' → logprob: -17.8750057220459
    10. ')' → logprob: -18.3750057220459

Token 234: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -5.512236498361744e-07
    2. ')' → logprob: -15.875000953674316
    3. '1' → logprob: -16.375
    4. ' +' → logprob: -16.5
    5. '+
' → logprob: -17.625
    6. '```' → logprob: -17.625
    7. ')+' → logprob: -17.875
    8. '()+' → logprob: -18.875
    9. '+)' → logprob: -19.0
    10. '
' → logprob: -19.5

Token 235: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0009131324477493763
    2. '+' → logprob: -7.000913143157959
    3. ')' → logprob: -13.5009126663208
    4. ' ' → logprob: -15.1259126663208
    5. ' +' → logprob: -16.875913619995117
    6. '```' → logprob: -18.250913619995117
    7. '(' → logprob: -20.000913619995117
    8. '
' → logprob: -20.250913619995117
    9. '+)' → logprob: -20.250913619995117
    10. '{' → logprob: -20.500913619995117

Token 236: ')' (ID: 8)
  Prédit: ')'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0008015265921130776
    2. ' not' → logprob: -7.3758015632629395
    3. 'not' → logprob: -9.250801086425781
    4. ' )' → logprob: -10.750801086425781
    5. ')<' → logprob: -11.375801086425781
    6. ')
' → logprob: -11.625801086425781
    7. ')!=' → logprob: -11.625801086425781
    8. ')==' → logprob: -12.250801086425781
    9. ',)' → logprob: -12.500801086425781
    10. ')!' → logprob: -12.625801086425781

Token 237: ' not' (ID: 625)
  Prédit: ' not'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' not' → logprob: -0.4887225031852722
    2. 'not' → logprob: -0.9887225031852722
    3. ')' → logprob: -4.238722324371338
    4. ',' → logprob: -9.738722801208496
    5. ':not' → logprob: -10.738722801208496
    6. '	not' → logprob: -11.488722801208496
    7. '
' → logprob: -12.113722801208496
    8. '<|end|>' → logprob: -12.363722801208496
    9. ']' → logprob: -12.863722801208496
    10. '_not' → logprob: -12.988722801208496

Token 238: ' in' (ID: 306)
  Prédit: 'in'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'in' → logprob: -0.07892581075429916
    2. ' in' → logprob: -2.578925848007202
    3. ')' → logprob: -11.203926086425781
    4. '   ' → logprob: -11.703926086425781
    5. '```' → logprob: -12.078926086425781
    6. ' ' → logprob: -13.453926086425781
    7. '(' → logprob: -13.828926086425781
    8. ',' → logprob: -13.828926086425781
    9. 'visited' → logprob: -13.828926086425781
    10. '<|end|>' → logprob: -13.828926086425781

Token 239: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' → logprob: -2.15310683415737e-05
    2. ' visited' → logprob: -10.750021934509277
    3. '   ' → logprob: -18.00002098083496
    4. '
' → logprob: -20.50002098083496
    5. '       ' → logprob: -21.75002098083496
    6. 'visible' → logprob: -22.25002098083496
    7. ' ' → logprob: -22.37502098083496
    8. '```' → logprob: -22.50002098083496
    9. 'visit' → logprob: -22.87502098083496
    10. '  ' → logprob: -23.25002098083496

Token 240: ':
' (ID: 734)
  Prédit: ':'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ':' → logprob: -0.08903216570615768
    2. ':
' → logprob: -2.4640321731567383
    3. ' and' → logprob: -10.089032173156738
    4. '):
' → logprob: -11.714032173156738
    5. '==' → logprob: -11.714032173156738
    6. '           ' → logprob: -11.964032173156738
    7. '<|end|>' → logprob: -12.214032173156738
    8. '():
' → logprob: -12.339032173156738
    9. '       ' → logprob: -12.464032173156738
    10. ',' → logprob: -12.714032173156738

Token 241: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -4.5014188799541444e-05
    2. '               ' → logprob: -11.250044822692871
    3. 'visited' → logprob: -11.500044822692871
    4. '```' → logprob: -11.875044822692871
    5. '	       ' → logprob: -12.375044822692871
    6. '       ' → logprob: -12.500044822692871
    7. ' visited' → logprob: -12.500044822692871
    8. '   ' → logprob: -13.500044822692871
    9. '            
' → logprob: -14.875044822692871
    10. ',' → logprob: -14.875044822692871

Token 242: ' visited' (ID: 18416)
  Prédit: 'visited'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'visited' (adapté à ' visited') → logprob: -0.15091624855995178
    2. '           ' → logprob: -2.400916337966919
    3. ' visited' → logprob: -3.150916337966919
    4. '               ' → logprob: -5.52591609954834
    5. 'dq' → logprob: -6.40091609954834
    6. ' dq' → logprob: -7.02591609954834
    7. '```' → logprob: -10.27591609954834
    8. '                   ' → logprob: -10.65091609954834
    9. '                       ' → logprob: -12.02591609954834
    10. '   ' → logprob: -12.15091609954834

Token 243: '.add' (ID: 1950)
  Prédit: '.add'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.add' → logprob: -1.5451681974809617e-05
    2. '.' → logprob: -11.125015258789062
    3. 'add' → logprob: -15.000015258789062
    4. ' .' → logprob: -15.375015258789062
    5. '           ' → logprob: -16.875015258789062
    6. '.Add' → logprob: -17.750015258789062
    7. '<|end|>' → logprob: -18.125015258789062
    8. '.setdefault' → logprob: -18.250015258789062
    9. '.append' → logprob: -18.500015258789062
    10. ')add' → logprob: -18.500015258789062

Token 244: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -0.0001584850688232109
    2. '(' → logprob: -8.750158309936523
    3. '(
' → logprob: -17.500158309936523
    4. '(((' → logprob: -18.375158309936523
    5. ' ((' → logprob: -18.500158309936523
    6. ' (' → logprob: -20.625158309936523
    7. '```' → logprob: -20.625158309936523
    8. '   ' → logprob: -20.750158309936523
    9. '>((' → logprob: -21.375158309936523
    10. '(('' → logprob: -21.625158309936523

Token 245: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -5.512236498361744e-07
    2. ' ni' → logprob: -15.125000953674316
    3. '   ' → logprob: -16.125
    4. '(' → logprob: -16.375
    5. '
' → logprob: -17.5
    6. 'nii' → logprob: -18.0
    7. '-ni' → logprob: -18.625
    8. '  ' → logprob: -19.375
    9. ' ' → logprob: -19.625
    10. '    
' → logprob: -20.0

Token 246: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -6.704273118884885e-07
    2. ' +' → logprob: -14.500000953674316
    3. '+
' → logprob: -17.0
    4. '+n' → logprob: -17.25
    5. '+j' → logprob: -17.875
    6. '1' → logprob: -18.125
    7. '+c' → logprob: -19.5
    8. ',n' → logprob: -19.5
    9. '＋' → logprob: -19.625
    10. '+,' → logprob: -19.625

Token 247: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -3.292907877039397e-06
    2. '+' → logprob: -13.12500286102295
    3. ' ' → logprob: -14.00000286102295
    4. '   ' → logprob: -15.12500286102295
    5. '```' → logprob: -17.250003814697266
    6. '
' → logprob: -17.500003814697266
    7. '       ' → logprob: -17.625003814697266
    8. '           ' → logprob: -18.125003814697266
    9. '                   ' → logprob: -18.375003814697266
    10. '...' → logprob: -18.562503814697266

Token 248: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.0019424419151619077
    2. ',' → logprob: -6.2519426345825195
    3. ' ,' → logprob: -11.62694263458252
    4. ',
' → logprob: -12.37694263458252
    5. ',j' → logprob: -14.50194263458252
    6. ',m' → logprob: -16.626941680908203
    7. '<n' → logprob: -19.251941680908203
    8. '
' → logprob: -19.251941680908203
    9. '(n' → logprob: -19.501941680908203
    10. '   ' → logprob: -19.751941680908203

Token 249: 'j' (ID: 73)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.004637910984456539
    2. 'j' → logprob: -5.504637718200684
    3. '+' → logprob: -7.504637718200684
    4. ' ' → logprob: -12.879637718200684
    5. 'nj' → logprob: -12.879637718200684
    6. ')' → logprob: -14.004637718200684
    7. ',j' → logprob: -14.129637718200684
    8. '```' → logprob: -14.379637718200684
    9. '(' → logprob: -15.004637718200684
    10. '+j' → logprob: -15.254637718200684

Token 250: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.20143039524555206
    2. '1' → logprob: -1.7014304399490356
    3. '```' → logprob: -12.326430320739746
    4. ',' → logprob: -12.951430320739746
    5. '+
' → logprob: -12.951430320739746
    6. '+j' → logprob: -13.576430320739746
    7. ' ' → logprob: -13.701430320739746
    8. '   ' → logprob: -13.826430320739746
    9. ' +' → logprob: -14.138930320739746
    10. ')' → logprob: -14.701430320739746

Token 251: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -1.0280383548888494e-06
    2. '
' → logprob: -15.375000953674316
    3. 'j' → logprob: -15.625000953674316
    4. 'nj' → logprob: -15.625000953674316
    5. ' ' → logprob: -15.750000953674316
    6. '```' → logprob: -16.125001907348633
    7. '+' → logprob: -17.250001907348633
    8. ')' → logprob: -17.375001907348633
    9. '   ' → logprob: -17.375001907348633
    10. '

' → logprob: -18.312501907348633

Token 252: '))
' (ID: 2210)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.33427858352661133
    2. ')
' → logprob: -1.3342785835266113
    3. '))' → logprob: -4.834278583526611
    4. '))
' → logprob: -4.834278583526611
    5. '           ' → logprob: -5.459278583526611
    6. ')
' → logprob: -7.709278583526611
    7. '               ' → logprob: -8.834278106689453
    8. '))
' → logprob: -11.709278106689453
    9. ')d' → logprob: -11.834278106689453
    10. ')`
' → logprob: -11.959278106689453

Token 253: '           ' (ID: 352)
  Prédit: '           '
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '           ' → logprob: -0.31777796149253845
    2. 'dq' → logprob: -1.3177779912948608
    3. ' dq' → logprob: -5.81777811050415
    4. '		' → logprob: -6.94277811050415
    5. '	       ' → logprob: -8.692777633666992
    6. '       ' → logprob: -8.817777633666992
    7. ',d' → logprob: -9.817777633666992
    8. '   ' → logprob: -10.192777633666992
    9. '	d' → logprob: -10.317777633666992
    10. '          ' → logprob: -10.442777633666992

Token 254: ' dq' (ID: 164235)
  Prédit: 'dq'
  Correct (stricte): False
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'dq' (adapté à ' dq') → logprob: -1.843177233240567e-05
    2. '           ' → logprob: -11.000018119812012
    3. ' dq' → logprob: -14.000018119812012
    4. '       ' → logprob: -14.375018119812012
    5. '               ' → logprob: -15.625018119812012
    6. '   ' → logprob: -16.000019073486328
    7. 'dp' → logprob: -17.250019073486328
    8. 'deque' → logprob: -17.625019073486328
    9. '                   ' → logprob: -18.375019073486328
    10. 'dj' → logprob: -18.500019073486328

Token 255: '.append' (ID: 3709)
  Prédit: '.append'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '.append' → logprob: -8.77627644513268e-06
    2. '.' → logprob: -11.750008583068848
    3. '.extend' → logprob: -14.875008583068848
    4. 'append' → logprob: -15.250008583068848
    5. '.enqueue' → logprob: -16.375009536743164
    6. ').' → logprob: -16.875009536743164
    7. '.app' → logprob: -17.125009536743164
    8. ' .' → logprob: -17.250009536743164
    9. '.push' → logprob: -17.250009536743164
    10. '.p' → logprob: -17.875009536743164

Token 256: '((' (ID: 2054)
  Prédit: '(('
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '((' → logprob: -5.848420551046729e-05
    2. '(' → logprob: -9.7500581741333
    3. '(((' → logprob: -16.250059127807617
    4. '(
' → logprob: -17.375059127807617
    5. ' ((' → logprob: -17.625059127807617
    6. '```' → logprob: -18.875059127807617
    7. '   ' → logprob: -20.500059127807617
    8. '>((' → logprob: -20.625059127807617
    9. '(('' → logprob: -20.750059127807617
    10. '(([' → logprob: -21.375059127807617

Token 257: 'ni' (ID: 1906)
  Prédit: 'ni'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'ni' → logprob: -6.749814019713085e-06
    2. '(' → logprob: -12.125006675720215
    3. '   ' → logprob: -14.125006675720215
    4. ' ni' → logprob: -15.250006675720215
    5. '
' → logprob: -16.75000762939453
    6. '```' → logprob: -16.75000762939453
    7. '-ni' → logprob: -17.25000762939453
    8. ',' → logprob: -17.25000762939453
    9. '  ' → logprob: -17.87500762939453
    10. 'nii' → logprob: -17.87500762939453

Token 258: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.004075909033417702
    2. '1' → logprob: -5.87907600402832
    3. '[' → logprob: -8.12907600402832
    4. 'i' → logprob: -8.50407600402832
    5. ',' → logprob: -9.12907600402832
    6. 'c' → logprob: -9.37907600402832
    7. ' +' → logprob: -9.37907600402832
    8. '[i' → logprob: -9.37907600402832
    9. 'ni' → logprob: -9.62907600402832
    10. '   ' → logprob: -9.75407600402832

Token 259: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -5.1093578804284334e-05
    2. 'ni' → logprob: -10.125051498413086
    3. '(' → logprob: -12.375051498413086
    4. ' ' → logprob: -13.125051498413086
    5. '+' → logprob: -13.250051498413086
    6. 'i' → logprob: -14.125051498413086
    7. '(i' → logprob: -14.750051498413086
    8. '
' → logprob: -15.125051498413086
    9. '2' → logprob: -15.250051498413086
    10. 'c' → logprob: -15.625051498413086

Token 260: ',n' (ID: 18103)
  Prédit: ',n'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',n' → logprob: -0.00021224225929472595
    2. ',' → logprob: -8.500212669372559
    3. 'nj' → logprob: -12.750212669372559
    4. '(n' → logprob: -13.125212669372559
    5. ' nj' → logprob: -13.625212669372559
    6. ' ,' → logprob: -13.625212669372559
    7. '   ' → logprob: -14.250212669372559
    8. ',
' → logprob: -14.875212669372559
    9. ',(' → logprob: -16.375211715698242
    10. ',j' → logprob: -16.625211715698242

Token 261: 'j' (ID: 73)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.07564657181501389
    2. 'j' → logprob: -2.7006466388702393
    3. '+' → logprob: -5.20064640045166
    4. '(' → logprob: -10.20064640045166
    5. ' ' → logprob: -10.32564640045166
    6. 'c' → logprob: -11.32564640045166
    7. ',' → logprob: -11.45064640045166
    8. ')' → logprob: -11.57564640045166
    9. '```' → logprob: -11.57564640045166
    10. '
' → logprob: -11.95064640045166

Token 262: '+' (ID: 10)
  Prédit: '+'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+' → logprob: -0.022113196551799774
    2. '1' → logprob: -4.02211332321167
    3. ',c' → logprob: -6.77211332321167
    4. ',p' → logprob: -7.02211332321167
    5. ',' → logprob: -7.27211332321167
    6. '+c' → logprob: -7.77211332321167
    7. '+p' → logprob: -8.647112846374512
    8. ',n' → logprob: -8.772112846374512
    9. '+j' → logprob: -8.897112846374512
    10. ',j' → logprob: -9.272112846374512

Token 263: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.00563236977905035
    2. 'p' → logprob: -5.255632400512695
    3. 'c' → logprob: -7.880632400512695
    4. '(p' → logprob: -12.755632400512695
    5. '0' → logprob: -12.880632400512695
    6. ' ' → logprob: -13.005632400512695
    7. ' p' → logprob: -13.380632400512695
    8. '
' → logprob: -13.380632400512695
    9. ')p' → logprob: -13.755632400512695
    10. '   ' → logprob: -13.880632400512695

Token 264: ',p' (ID: 14835)
  Prédit: ',p'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',p' → logprob: -0.014797959476709366
    2. ',' → logprob: -4.264798164367676
    3. ',c' → logprob: -7.764798164367676
    4. 'p' → logprob: -8.639798164367676
    5. ' ,' → logprob: -10.514798164367676
    6. ',(' → logprob: -12.889798164367676
    7. ' p' → logprob: -13.639798164367676
    8. ',
' → logprob: -15.014798164367676
    9. '(p' → logprob: -15.264798164367676
    10. ',f' → logprob: -15.764798164367676

Token 265: '+c' (ID: 114860)
  Prédit: '+c'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '+c' → logprob: -3.292907877039397e-06
    2. ' +' → logprob: -13.50000286102295
    3. '+' → logprob: -13.62500286102295
    4. 'c' → logprob: -14.62500286102295
    5. '+
' → logprob: -17.000003814697266
    6. '+(' → logprob: -17.750003814697266
    7. '+p' → logprob: -19.500003814697266
    8. ',c' → logprob: -19.875003814697266
    9. '
' → logprob: -20.000003814697266
    10. ' c' → logprob: -20.000003814697266

Token 266: '))' (ID: 915)
  Prédit: '))'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '))' → logprob: -6.098748053773306e-05
    2. '))
' → logprob: -10.00006103515625
    3. ')' → logprob: -11.12506103515625
    4. ')))' → logprob: -14.37506103515625
    5. '"))' → logprob: -16.00006103515625
    6. ' ))' → logprob: -17.12506103515625
    7. ''))' → logprob: -17.62506103515625
    8. '));' → logprob: -18.25006103515625
    9. '))

' → logprob: -18.25006103515625
    10. '()))' → logprob: -18.37506103515625


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 264
Tokens correctement prédits (1ère position, stricte): 163
Tokens correctement prédits (1ère position, avec adaptation): 174
Tokens correctement prédits (top 10): 248
Précision stricte (1ère position): 61.74%
Précision adaptée (1ère position): 65.91%
Précision (top 10): 93.94%
================================================================================
