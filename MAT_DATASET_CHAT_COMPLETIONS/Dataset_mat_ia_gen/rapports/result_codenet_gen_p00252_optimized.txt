================================================================================
ANALYSE DE PRÉDICTION TOKEN PAR TOKEN (BATCH API)
Date: 2025-06-04 16:57:26
Modèle de tokenisation: gpt-4o-mini
================================================================================

SCRIPT ANALYSÉ:
--------------------------------------------------------------------------------
b1,b2,b3=map(int,input().split())
print("Open" if (b1==1 and b2==1) or b3==1 else "Close")
--------------------------------------------------------------------------------

RÉSULTATS D'ANALYSE TOKEN PAR TOKEN:
--------------------------------------------------------------------------------
Token 0: 'b' (ID: 65)
  → Token d'amorce (pas de prédiction)

Token 1: '1' (ID: 16)
  → Token d'amorce (pas de prédiction)

Token 2: ',b' (ID: 17568)
  → Token d'amorce (pas de prédiction)

Token 3: '2' (ID: 17)
  Prédit: '_'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '_' → logprob: -1.028188943862915
    2. '2' → logprob: -1.278188943862915
    3. '1' → logprob: -1.528188943862915
    4. ',' → logprob: -2.153188943862915
    5. '[' → logprob: -4.403188705444336
    6. '=' → logprob: -4.903188705444336
    7. ')' → logprob: -5.403188705444336
    8. '.' → logprob: -6.028188705444336
    9. '```' → logprob: -7.653188705444336
    10. ''' → logprob: -7.778188705444336

Token 4: ',b' (ID: 17568)
  Prédit: '='
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '=' → logprob: -0.08525016158819199
    2. ',' → logprob: -2.58525013923645
    3. ' =' → logprob: -5.960250377655029
    4. '_' → logprob: -6.085250377655029
    5. '.' → logprob: -7.585250377655029
    6. ',b' → logprob: -8.085249900817871
    7. '```' → logprob: -8.210249900817871
    8. '[' → logprob: -9.585249900817871
    9. ';' → logprob: -9.835249900817871
    10. ')' → logprob: -9.835249900817871

Token 5: '3' (ID: 18)
  Prédit: '1'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.4892534911632538
    2. ',' → logprob: -1.8642535209655762
    3. ')' → logprob: -2.114253520965576
    4. '2' → logprob: -3.364253520965576
    5. '3' → logprob: -3.614253520965576
    6. '=' → logprob: -3.614253520965576
    7. '.' → logprob: -5.114253520965576
    8. '_' → logprob: -5.489253520965576
    9. ''' → logprob: -5.864253520965576
    10. '4' → logprob: -6.364253520965576

Token 6: '=' (ID: 28)
  Prédit: ','
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ',' → logprob: -0.08084049075841904
    2. '=' → logprob: -2.705840587615967
    3. ' =' → logprob: -5.080840587615967
    4. ',b' → logprob: -6.580840587615967
    5. '```' → logprob: -6.830840587615967
    6. ')' → logprob: -7.455840587615967
    7. '_' → logprob: -7.705840587615967
    8. '.' → logprob: -8.205840110778809
    9. '<|end|>' → logprob: -8.455840110778809
    10. ';' → logprob: -9.330840110778809

Token 7: 'map' (ID: 3726)
  Prédit: '0'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '0' → logprob: -0.03510769456624985
    2. ' ' → logprob: -3.6601076126098633
    3. '1' → logprob: -5.160107612609863
    4. '[' → logprob: -6.660107612609863
    5. '[]' → logprob: -7.535107612609863
    6. ' [' → logprob: -8.160107612609863
    7. '(' → logprob: -8.410107612609863
    8. 'map' → logprob: -9.285107612609863
    9. 'None' → logprob: -9.285107612609863
    10. ' [],' → logprob: -9.285107612609863

Token 8: '(int' (ID: 2742)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '(' → logprob: -0.00904716458171606
    2. '(lambda' → logprob: -5.134047031402588
    3. '```' → logprob: -6.509047031402588
    4. '<|end|>' → logprob: -6.884047031402588
    5. '((' → logprob: -9.759047508239746
    6. '(user' → logprob: -9.884047508239746
    7. '<|end|>' → logprob: -10.384047508239746
    8. ')' → logprob: -10.384047508239746
    9. '("("' → logprob: -10.509047508239746
    10. '(int' → logprob: -10.759047508239746

Token 9: ',input' (ID: 123014)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.41235071420669556
    2. '(input' → logprob: -1.2873506546020508
    3. 'input' → logprob: -3.162350654602051
    4. '`)' → logprob: -5.537350654602051
    5. '(' → logprob: -5.662350654602051
    6. '<|end|>' → logprob: -5.787350654602051
    7. ')(' → logprob: -6.537350654602051
    8. ',input' → logprob: -6.912350654602051
    9. 'b' → logprob: -7.037350654602051
    10. '```' → logprob: -7.287350654602051

Token 10: '().' (ID: 1454)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.7194626331329346
    2. '())' → logprob: -1.0944626331329346
    3. '<|end|>' → logprob: -2.0944626331329346
    4. '()' → logprob: -4.0944623947143555
    5. '(' → logprob: -4.7194623947143555
    6. '(()' → logprob: -5.4694623947143555
    7. '<|end|>' → logprob: -5.5944623947143555
    8. '('' → logprob: -5.7194623947143555
    9. '(""))' → logprob: -5.9694623947143555
    10. '```' → logprob: -6.0944623947143555

Token 11: 'split' (ID: 13627)
  Prédit: 'split'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'split' → logprob: -5.8961017202818766e-05
    2. 'strip' → logprob: -9.875059127807617
    3. 'rstrip' → logprob: -12.500059127807617
    4. ' split' → logprob: -13.125059127807617
    5. '(split' → logprob: -13.625059127807617
    6. ')' → logprob: -15.500059127807617
    7. 'spl' → logprob: -15.875059127807617
    8. 'startswith' → logprob: -16.625059127807617
    9. '```' → logprob: -17.000059127807617
    10. 'plit' → logprob: -17.625059127807617

Token 12: '())
' (ID: 4574)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.10467639565467834
    2. '())' → logprob: -2.3546764850616455
    3. '`)' → logprob: -6.104676246643066
    4. '()' → logprob: -6.854676246643066
    5. '))' → logprob: -6.979676246643066
    6. ')`' → logprob: -9.604676246643066
    7. '(' → logprob: -9.604676246643066
    8. '```' → logprob: -11.104676246643066
    9. '')' → logprob: -11.354676246643066
    10. '()))' → logprob: -11.479676246643066

Token 13: 'print' (ID: 1598)
  Prédit: '+'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '+' → logprob: -0.2914440929889679
    2. 'if' → logprob: -2.4164440631866455
    3. '#' → logprob: -3.0414440631866455
    4. ',' → logprob: -3.4164440631866455
    5. '*' → logprob: -3.7914440631866455
    6. '
' → logprob: -4.666444301605225
    7. ' if' → logprob: -4.791444301605225
    8. 'i' → logprob: -5.166444301605225
    9. '+
' → logprob: -5.416444301605225
    10. '<|end|>' → logprob: -5.416444301605225

Token 14: '("' (ID: 568)
  Prédit: '('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. '(' → logprob: -0.0003045994380954653
    2. '(b' → logprob: -8.625304222106934
    3. '("("' → logprob: -9.500304222106934
    4. '('' → logprob: -10.250304222106934
    5. '((' → logprob: -12.125304222106934
    6. '(`' → logprob: -13.250304222106934
    7. '()' → logprob: -13.500304222106934
    8. '("""' → logprob: -13.750304222106934
    9. '(
' → logprob: -14.250304222106934
    10. ' (' → logprob: -14.375304222106934

Token 15: 'Open' (ID: 6447)
  Prédit: 'b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.054390281438827515
    2. '")' → logprob: -4.4293904304504395
    3. 'Hello' → logprob: -5.0543904304504395
    4. '"' → logprob: -5.1793904304504395
    5. 'B' → logprob: -5.3043904304504395
    6. '{' → logprob: -5.5543904304504395
    7. 'YES' → logprob: -5.9293904304504395
    8. 'Yes' → logprob: -5.9293904304504395
    9. 'a' → logprob: -6.6793904304504395
    10. 'Enter' → logprob: -6.8043904304504395

Token 16: '"' (ID: 1)
  Prédit: 'AI'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. 'AI' → logprob: -0.10779497027397156
    2. 'ing' → logprob: -3.482795000076294
    3. ' door' → logprob: -4.482794761657715
    4. ' ")' → logprob: -4.482794761657715
    5. ' Door' → logprob: -4.732794761657715
    6. '")' → logprob: -4.857794761657715
    7. 'ai' → logprob: -4.982794761657715
    8. 'Door' → logprob: -5.607794761657715
    9. '(' → logprob: -5.857794761657715
    10. ' ' → logprob: -5.982794761657715

Token 17: ' if' (ID: 538)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: False
  Alternatives (top logprobs):
    1. ')' → logprob: -0.018825417384505272
    2. '(' → logprob: -5.018825531005859
    3. '())' → logprob: -5.143825531005859
    4. '()' → logprob: -5.518825531005859
    5. ' )' → logprob: -6.643825531005859
    6. '")' → logprob: -7.518825531005859
    7. ',' → logprob: -8.64382553100586
    8. '))' → logprob: -9.39382553100586
    9. ',)' → logprob: -11.01882553100586
    10. '("' → logprob: -11.51882553100586

Token 18: ' (' (ID: 350)
  Prédit: ' b'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.2554627060890198
    2. 'b' → logprob: -1.505462646484375
    3. ' (' → logprob: -6.630462646484375
    4. ' abs' → logprob: -7.130462646484375
    5. '(b' → logprob: -8.005462646484375
    6. ' ' → logprob: -8.255462646484375
    7. 'abs' → logprob: -8.755462646484375
    8. ' all' → logprob: -8.880462646484375
    9. '(' → logprob: -9.130462646484375
    10. ' not' → logprob: -9.505462646484375

Token 19: 'b' (ID: 65)
  Prédit: 'b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'b' → logprob: -0.18578992784023285
    2. ' b' → logprob: -1.810789942741394
    3. ' (' → logprob: -6.060790061950684
    4. '(b' → logprob: -6.185790061950684
    5. '0' → logprob: -8.060790061950684
    6. ' ' → logprob: -8.185790061950684
    7. '(' → logprob: -8.685790061950684
    8. 'abs' → logprob: -8.935790061950684
    9. 'a' → logprob: -9.060790061950684
    10. ' abs' → logprob: -9.560790061950684

Token 20: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.0007463791989721358
    2. '2' → logprob: -7.500746250152588
    3. '3' → logprob: -8.625746726989746
    4. '_' → logprob: -12.188246726989746
    5. 'b' → logprob: -12.500746726989746
    6. '```' → logprob: -14.000746726989746
    7. ' ' → logprob: -14.188246726989746
    8. '
' → logprob: -14.875746726989746
    9. '>' → logprob: -15.125746726989746
    10. ')' → logprob: -15.313246726989746

Token 21: '==' (ID: 560)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.47551941871643066
    2. 'and' → logprob: -1.9755194187164307
    3. '==' → logprob: -1.9755194187164307
    4. ' or' → logprob: -2.6005194187164307
    5. '>' → logprob: -4.475519180297852
    6. ' ==' → logprob: -4.850519180297852
    7. '+' → logprob: -6.475519180297852
    8. '<' → logprob: -6.975519180297852
    9. '|' → logprob: -7.225519180297852
    10. '&' → logprob: -7.225519180297852

Token 22: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.3340487480163574
    2. ' ' → logprob: -2.0840487480163574
    3. 'b' → logprob: -2.3340487480163574
    4. '0' → logprob: -2.9590487480163574
    5. ' b' → logprob: -4.834048748016357
    6. '3' → logprob: -6.709048748016357
    7. '2' → logprob: -7.209048748016357
    8. '7' → logprob: -8.584049224853516
    9. '5' → logprob: -8.834049224853516
    10. '4' → logprob: -8.834049224853516

Token 23: ' and' (ID: 326)
  Prédit: ' and'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.052080847322940826
    2. ' or' → logprob: -3.6770808696746826
    3. 'and' → logprob: -3.8020808696746826
    4. ')' → logprob: -5.8020806312561035
    5. ' )' → logprob: -9.552081108093262
    6. 'or' → logprob: -11.052081108093262
    7. ' ' → logprob: -11.177081108093262
    8. '),' → logprob: -13.427081108093262
    9. '==' → logprob: -13.927081108093262
    10. ' ),' → logprob: -15.177081108093262

Token 24: ' b' (ID: 287)
  Prédit: ' b'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' b' → logprob: -0.18927745521068573
    2. 'b' → logprob: -1.8142774105072021
    3. ' (' → logprob: -5.189277648925781
    4. '(b' → logprob: -5.814277648925781
    5. ' not' → logprob: -7.189277648925781
    6. 'not' → logprob: -9.814277648925781
    7. ' ' → logprob: -9.939277648925781
    8. '(' → logprob: -10.439277648925781
    9. '(not' → logprob: -11.501777648925781
    10. ' ' → logprob: -11.564277648925781

Token 25: '2' (ID: 17)
  Prédit: '2'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '2' → logprob: -0.0005656610010191798
    2. '3' → logprob: -7.875565528869629
    3. '1' → logprob: -8.625565528869629
    4. '==' → logprob: -12.875565528869629
    5. '```' → logprob: -14.688065528869629
    6. ' ' → logprob: -14.750565528869629
    7. 'and' → logprob: -15.063065528869629
    8. '>' → logprob: -15.250565528869629
    9. '_' → logprob: -15.563065528869629
    10. ' ==' → logprob: -16.188066482543945

Token 26: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.0018161940388381481
    2. ' ==' → logprob: -6.376816272735596
    3. ' and' → logprob: -9.751815795898438
    4. ')==' → logprob: -10.751815795898438
    5. ')' → logprob: -11.376815795898438
    6. 'and' → logprob: -12.251815795898438
    7. '=' → logprob: -13.001815795898438
    8. ' )' → logprob: -13.126815795898438
    9. '!=' → logprob: -13.251815795898438
    10. '()==' → logprob: -13.251815795898438

Token 27: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.03959288448095322
    2. '0' → logprob: -3.539592981338501
    3. ' ' → logprob: -4.664592742919922
    4. '2' → logprob: -8.289592742919922
    5. '3' → logprob: -9.664592742919922
    6. '4' → logprob: -10.914592742919922
    7. '-' → logprob: -11.414592742919922
    8. '9' → logprob: -12.664592742919922
    9. '5' → logprob: -12.727092742919922
    10. '7' → logprob: -12.852092742919922

Token 28: ')' (ID: 8)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.007795656565576792
    2. ')' → logprob: -5.257795810699463
    3. 'and' → logprob: -6.007795810699463
    4. ' )' → logprob: -9.507795333862305
    5. ' ' → logprob: -10.757795333862305
    6. '),' → logprob: -13.507795333862305
    7. '```' → logprob: -14.257795333862305
    8. '	and' → logprob: -14.632795333862305
    9. '``' → logprob: -15.882795333862305
    10. '))' → logprob: -15.882795333862305

Token 29: ' or' (ID: 503)
  Prédit: ' and'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' and' → logprob: -0.002347815316170454
    2. 'and' → logprob: -6.127347946166992
    3. ' or' → logprob: -8.752347946166992
    4. ' ' → logprob: -13.002347946166992
    5. ')' → logprob: -13.752347946166992
    6. ' else' → logprob: -14.127347946166992
    7. '```' → logprob: -15.377347946166992
    8. 'or' → logprob: -16.627347946166992
    9. '    ' → logprob: -16.627347946166992
    10. ' )' → logprob: -16.752347946166992

Token 30: ' b' (ID: 287)
  Prédit: ' ('
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ' (' → logprob: -0.16321049630641937
    2. ' b' → logprob: -2.038210391998291
    3. '(b' → logprob: -4.038210391998291
    4. ' ' → logprob: -6.413210391998291
    5. '(' → logprob: -7.538210391998291
    6. 'b' → logprob: -7.788210391998291
    7. ' ' → logprob: -10.28821086883545
    8. '"' → logprob: -10.53821086883545
    9. ' or' → logprob: -11.78821086883545
    10. '```' → logprob: -12.03821086883545

Token 31: '3' (ID: 18)
  Prédit: '3'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '3' → logprob: -0.08267149329185486
    2. '1' → logprob: -2.5826714038848877
    3. '2' → logprob: -5.582671642303467
    4. ' ' → logprob: -12.582671165466309
    5. '```' → logprob: -12.707671165466309
    6. '==' → logprob: -13.082671165466309
    7. '_' → logprob: -14.520171165466309
    8. '>' → logprob: -14.770171165466309
    9. ' ==' → logprob: -15.520171165466309
    10. '-' → logprob: -15.520171165466309

Token 32: '==' (ID: 560)
  Prédit: '=='
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '==' → logprob: -0.026490483433008194
    2. ' ==' → logprob: -3.6514904499053955
    3. '=' → logprob: -9.526490211486816
    4. ')' → logprob: -10.901490211486816
    5. '>' → logprob: -11.026490211486816
    6. '!=' → logprob: -11.026490211486816
    7. '```' → logprob: -11.026490211486816
    8. ')==' → logprob: -11.276490211486816
    9. ' ' → logprob: -11.901490211486816
    10. ' ' → logprob: -12.276490211486816

Token 33: '1' (ID: 16)
  Prédit: '1'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '1' → logprob: -0.001593292225152254
    2. ' ' → logprob: -6.876593112945557
    3. '0' → logprob: -7.501593112945557
    4. '2' → logprob: -12.501593589782715
    5. '3' → logprob: -13.376593589782715
    6. ''' → logprob: -13.751593589782715
    7. '"' → logprob: -14.626593589782715
    8. '4' → logprob: -15.314093589782715
    9. '  ' → logprob: -15.689093589782715
    10. '   ' → logprob: -16.2515926361084

Token 34: ' else' (ID: 1203)
  Prédit: ')'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. ')' → logprob: -0.0012490430381149054
    2. ' else' → logprob: -7.126248836517334
    3. ' )' → logprob: -7.876248836517334
    4. 'else' → logprob: -10.626249313354492
    5. '")' → logprob: -10.751249313354492
    6. '))' → logprob: -11.501249313354492
    7. '`)' → logprob: -13.001249313354492
    8. ')`' → logprob: -13.376249313354492
    9. ')")' → logprob: -13.626249313354492
    10. '')' → logprob: -13.876249313354492

Token 35: ' "' (ID: 392)
  Prédit: '"'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '"' → logprob: -0.0012401100248098373
    2. ' "' → logprob: -7.126240253448486
    3. ''' → logprob: -9.001239776611328
    4. ' ' → logprob: -9.126239776611328
    5. '")' → logprob: -9.376239776611328
    6. ')' → logprob: -9.501239776611328
    7. ''"' → logprob: -11.751239776611328
    8. '   ' → logprob: -11.876239776611328
    9. '"""' → logprob: -12.001239776611328
    10. ')"' → logprob: -12.251239776611328

Token 36: 'Close' (ID: 11200)
  Prédit: 'Closed'
  Correct (stricte): False
  Correct (adapté): False
  Dans le top 10: True
  Alternatives (top logprobs):
    1. 'Closed' → logprob: -0.15035997331142426
    2. 'Close' → logprob: -2.150359869003296
    3. '"' → logprob: -4.150360107421875
    4. 'Open' → logprob: -6.025360107421875
    5. 'Locked' → logprob: -6.150360107421875
    6. 'Blocked' → logprob: -7.150360107421875
    7. ' Closed' → logprob: -7.275360107421875
    8. 'Lock' → logprob: -8.900360107421875
    9. 'C' → logprob: -9.087860107421875
    10. ''' → logprob: -9.525360107421875

Token 37: '")' (ID: 1405)
  Prédit: '")'
  Correct (stricte): True
  Correct (adapté): True
  Dans le top 10: True
  Alternatives (top logprobs):
    1. '")' → logprob: -9.014684110297821e-06
    2. ')' → logprob: -11.750008583068848
    3. ')")' → logprob: -14.125008583068848
    4. '"' → logprob: -15.250008583068848
    5. '")
' → logprob: -15.875008583068848
    6. '”)' → logprob: -18.375009536743164
    7. '!")' → logprob: -18.625009536743164
    8. '')' → logprob: -19.500009536743164
    9. '")

' → logprob: -19.625009536743164
    10. '")
' → logprob: -19.750009536743164


RÉSUMÉ:
--------------------------------------------------------------------------------
Total des tokens analysés: 35
Tokens correctement prédits (1ère position, stricte): 13
Tokens correctement prédits (1ère position, avec adaptation): 13
Tokens correctement prédits (top 10): 28
Précision stricte (1ère position): 37.14%
Précision adaptée (1ère position): 37.14%
Précision (top 10): 80.00%
================================================================================
